{"version":3,"sources":["../static/js/PieReact.26840e49.chunk.js","../node_modules/echarts/lib/model/Series.js","../node_modules/zrender/lib/mixin/Eventful.js","../node_modules/zrender/lib/tool/color.js","../node_modules/echarts/lib/util/symbol.js","../node_modules/echarts/lib/data/helper/completeDimensions.js","../node_modules/echarts/lib/lang.js","../node_modules/echarts/lib/CoordinateSystem.js","../node_modules/zrender/lib/core/PathProxy.js","../node_modules/echarts/lib/util/throttle.js","../node_modules/zrender/lib/container/Group.js","../node_modules/zrender/lib/config.js","../node_modules/echarts/lib/model/mixin/makeStyleMapper.js","../node_modules/echarts/lib/view/Chart.js","../node_modules/echarts/lib/data/DataDiffer.js","../node_modules/echarts/lib/scale/Scale.js","../node_modules/echarts/lib/component/axisPointer/modelHelper.js","../node_modules/echarts/lib/chart/helper/createListFromArray.js","../node_modules/echarts/lib/coord/Axis.js","../node_modules/zrender/lib/graphic/Displayable.js","../node_modules/zrender/lib/graphic/Gradient.js","../node_modules/echarts/lib/scale/Interval.js","../node_modules/echarts/lib/component/axis/AxisBuilder.js","../node_modules/echarts/lib/component/axis/AxisView.js","../node_modules/zrender/lib/core/log.js","../node_modules/zrender/lib/core/timsort.js","../node_modules/zrender/lib/graphic/Image.js","../node_modules/zrender/lib/graphic/helper/image.js","../node_modules/echarts/lib/util/component.js","../node_modules/echarts/lib/coord/axisModelCommonMixin.js","../node_modules/echarts/lib/component/dataZoom/DataZoomModel.js","../node_modules/echarts/lib/component/dataZoom/helper.js","../node_modules/echarts/lib/component/dataZoom/DataZoomView.js","../node_modules/zrender/lib/zrender.js","../node_modules/zrender/lib/graphic/helper/text.js","../node_modules/echarts/lib/component/axisPointer.js","../node_modules/echarts/lib/component/axisPointer/viewHelper.js","../node_modules/zrender/lib/mixin/Transformable.js","../node_modules/zrender/lib/core/bbox.js","../node_modules/zrender/lib/graphic/Text.js","../node_modules/echarts/lib/view/Component.js","../node_modules/echarts/lib/component/helper/sliderMove.js","../node_modules/zrender/lib/core/guid.js","../node_modules/zrender/lib/Element.js","../node_modules/zrender/lib/animation/Animator.js","../node_modules/zrender/lib/core/LRU.js","../node_modules/zrender/lib/graphic/Style.js","../node_modules/zrender/lib/graphic/Pattern.js","../node_modules/zrender/lib/animation/requestAnimationFrame.js","../node_modules/zrender/lib/graphic/helper/roundRect.js","../node_modules/zrender/lib/contain/util.js","../node_modules/zrender/lib/contain/windingLine.js","../node_modules/zrender/lib/graphic/helper/poly.js","../node_modules/echarts/lib/model/mixin/colorPalette.js","../node_modules/echarts/lib/scale/helper.js","../node_modules/echarts/lib/component/axisPointer/findPointFromSeries.js","../node_modules/echarts/lib/component/axisPointer/globalListener.js","../node_modules/echarts/lib/component/helper/listComponent.js","../node_modules/echarts/lib/component/dataZoom/history.js","../node_modules/zrender/lib/graphic/helper/fixClipWithShadow.js","../node_modules/echarts/lib/component/axisPointer/CartesianAxisPointer.js","../node_modules/echarts/lib/component/axisPointer/BaseAxisPointer.js","../node_modules/echarts/lib/component/axis/cartesianAxisHelper.js","../node_modules/echarts/lib/component/legend/LegendModel.js","../node_modules/echarts/lib/component/legend/LegendView.js","../node_modules/echarts/lib/component/helper/BrushController.js","../node_modules/echarts/lib/component/helper/cursorHelper.js","../node_modules/zrender/lib/graphic/mixin/RectText.js","../node_modules/zrender/lib/contain/line.js","../node_modules/zrender/lib/contain/quadratic.js","../node_modules/zrender/lib/graphic/LinearGradient.js","../node_modules/echarts/lib/export.js","../node_modules/echarts/lib/coord/geo/parseGeoJson.js","../node_modules/echarts/lib/coord/geo/Region.js","../node_modules/zrender/lib/contain/polygon.js","../node_modules/echarts/lib/component/tooltip.js","../node_modules/echarts/lib/component/legend.js","../node_modules/echarts/lib/processor/dataFilter.js","../node_modules/echarts/lib/component/toolbox.js","../node_modules/echarts/lib/component/helper/interactionMutex.js","../node_modules/echarts/lib/component/helper/BrushTargetManager.js","../node_modules/echarts/lib/component/helper/brushHelper.js","../node_modules/echarts/lib/component/dataZoom/typeDefaulter.js","../node_modules/echarts/lib/component/dataZoom/dataZoomProcessor.js","../node_modules/echarts/lib/component/dataZoom/dataZoomAction.js","../node_modules/zrender/lib/Handler.js","../node_modules/zrender/lib/mixin/Draggable.js","../node_modules/zrender/lib/Storage.js","../node_modules/zrender/lib/mixin/Animatable.js","../node_modules/zrender/lib/animation/Clip.js","../node_modules/zrender/lib/animation/easing.js","../node_modules/zrender/lib/Painter.js","../node_modules/zrender/lib/Layer.js","../node_modules/zrender/lib/animation/Animation.js","../node_modules/zrender/lib/dom/HandlerProxy.js","../node_modules/zrender/lib/core/GestureMgr.js","../node_modules/echarts/lib/model/Global.js","../node_modules/echarts/lib/model/mixin/lineStyle.js","../node_modules/echarts/lib/model/mixin/areaStyle.js","../node_modules/echarts/lib/model/mixin/textStyle.js","../node_modules/zrender/lib/tool/path.js","../node_modules/zrender/lib/contain/path.js","../node_modules/zrender/lib/contain/cubic.js","../node_modules/zrender/lib/contain/arc.js","../node_modules/zrender/lib/tool/transformPath.js","../node_modules/zrender/lib/graphic/shape/Circle.js","../node_modules/zrender/lib/graphic/shape/Sector.js","../node_modules/zrender/lib/graphic/shape/Ring.js","../node_modules/zrender/lib/graphic/shape/Polygon.js","../node_modules/zrender/lib/graphic/helper/smoothSpline.js","../node_modules/zrender/lib/graphic/helper/smoothBezier.js","../node_modules/zrender/lib/graphic/shape/Polyline.js","../node_modules/zrender/lib/graphic/shape/Rect.js","../node_modules/zrender/lib/graphic/shape/Line.js","../node_modules/zrender/lib/graphic/shape/BezierCurve.js","../node_modules/zrender/lib/graphic/shape/Arc.js","../node_modules/zrender/lib/graphic/CompoundPath.js","../node_modules/zrender/lib/graphic/RadialGradient.js","../node_modules/echarts/lib/model/mixin/itemStyle.js","../node_modules/echarts/lib/model/mixin/boxLayout.js","../node_modules/echarts/lib/model/globalDefault.js","../node_modules/echarts/lib/ExtensionAPI.js","../node_modules/echarts/lib/model/OptionManager.js","../node_modules/echarts/lib/preprocessor/backwardCompat.js","../node_modules/echarts/lib/preprocessor/helper/compatStyle.js","../node_modules/echarts/lib/visual/seriesColor.js","../node_modules/echarts/lib/loading/default.js","../node_modules/echarts/lib/helper.js","../node_modules/echarts/lib/scale/Ordinal.js","../node_modules/echarts/lib/scale/Time.js","../node_modules/echarts/lib/scale/Log.js","../node_modules/echarts/lib/component/axisPointer/axisTrigger.js","../node_modules/echarts/lib/component/axisPointer/AxisPointerModel.js","../node_modules/echarts/lib/component/axisPointer/AxisPointerView.js","../node_modules/echarts/lib/component/tooltip/TooltipModel.js","../node_modules/echarts/lib/component/tooltip/TooltipView.js","../node_modules/echarts/lib/component/tooltip/TooltipContent.js","../node_modules/echarts/lib/component/legend/legendAction.js","../node_modules/echarts/lib/component/legend/legendFilter.js","../node_modules/echarts/lib/component/helper/selectableMixin.js","../node_modules/echarts/lib/visual/dataColor.js","../node_modules/echarts/lib/component/toolbox/ToolboxModel.js","../node_modules/echarts/lib/component/toolbox/ToolboxView.js","../node_modules/echarts/lib/component/toolbox/feature/SaveAsImage.js","../node_modules/echarts/lib/component/toolbox/feature/MagicType.js","../node_modules/echarts/lib/component/toolbox/feature/DataView.js","../node_modules/echarts/lib/component/toolbox/feature/DataZoom.js","../node_modules/echarts/lib/component/dataZoomSelect.js","../node_modules/echarts/lib/component/dataZoom/AxisProxy.js","../node_modules/echarts/lib/component/dataZoom/SelectZoomModel.js","../node_modules/echarts/lib/component/dataZoom/SelectZoomView.js","../node_modules/echarts/lib/component/toolbox/feature/Restore.js","../node_modules/echarts/lib/action/createDataSelectAction.js","../node_modules/echarts/lib/chart/pie.js","../node_modules/echarts/lib/chart/pie/PieSeries.js","../node_modules/echarts/lib/chart/pie/PieView.js","../node_modules/echarts/lib/chart/pie/pieLayout.js","../node_modules/echarts/lib/chart/pie/labelLayout.js","Echarts/PieReact.js","../node_modules/zrender/lib/core/util.js","../node_modules/echarts/lib/echarts.js","../node_modules/echarts/lib/util/graphic.js","../node_modules/echarts/lib/util/number.js","../node_modules/echarts/lib/util/model.js","../node_modules/echarts/lib/config.js","../node_modules/zrender/lib/core/vector.js","../node_modules/echarts/lib/util/format.js","../node_modules/zrender/lib/core/env.js","../node_modules/zrender/lib/core/BoundingRect.js","../node_modules/zrender/lib/graphic/Path.js","../node_modules/echarts/lib/model/Model.js","../node_modules/echarts/lib/util/layout.js","../node_modules/echarts/lib/model/Component.js","../node_modules/echarts/lib/util/clazz.js","../node_modules/zrender/lib/contain/text.js","../node_modules/zrender/lib/core/matrix.js","../node_modules/echarts/lib/data/List.js","../node_modules/echarts/lib/coord/axisHelper.js","../node_modules/echarts/lib/component/toolbox/featureManager.js","../node_modules/zrender/lib/core/event.js","../node_modules/zrender/lib/core/curve.js"],"names":["webpackJsonp","1000","module","exports","__webpack_require__","_config","zrUtil","__DEV__","env","_format","formatTime","encodeHTML","addCommas","getTooltipMarker","_clazz","set","get","modelUtil","ComponentModel","colorPaletteMixin","_layout","getLayoutParams","mergeLayoutParam","SeriesModel","extend","type","seriesIndex","coordinateSystem","defaultOption","legendDataProvider","visualColorAccessPath","layoutMode","init","option","parentModel","ecModel","extraOpt","this","componentIndex","mergeDefaultAndTheme","data","getInitialData","restoreData","inputPositionParams","themeSubType","subType","hasClass","merge","getTheme","getDefaultOption","defaultEmphasis","label","fillDataTextStyle","mergeOption","newSeriesOption","cloneShallow","props","i","length","getData","dataType","getLinkedData","setData","getRawData","coordDimToDataDim","coordDim","dataDimToCoordDim","dataDim","getBaseAxis","coordSys","formatTooltip","dataIndex","multipleSeries","value","getRawValue","formattedValue","isArray","setEachItem","val","dimIdx","dimInfo","getDimensionInfo","otherDims","tooltip","dimType","valStr","vertially","tooltipName","name","result","push","reduce","idx","dimItem","tooltipDims","otherDimToDataDim","each","join","getName","color","getItemVisual","isObject","colorStops","colorEl","seriesName","isAnimationEnabled","node","animationEnabled","getShallow","count","getColorFromPalette","scope","call","getAxisTooltipData","getTooltipPosition","mixin","dataFormatMixin","_default","1001","arrySlice","Array","prototype","slice","Eventful","_$handlers","constructor","one","event","handler","context","_h","h","ctx","on","isSilent","off","newList","l","trigger","args","arguments","argLen","len","apply","splice","triggerWithContext","1002","clampCssByte","Math","round","clampCssAngle","clampCssFloat","f","parseCssInt","str","charAt","parseFloat","parseInt","parseCssFloat","cssHueToRgb","m1","m2","lerpNumber","a","b","p","setRgba","out","r","g","copyRgba","putToCache","colorStr","rgbaArr","lastRemovedArr","colorCache","put","parse","cached","replace","toLowerCase","kCSSColorTable","op","indexOf","ep","fname","substr","params","split","alpha","pop","hsla2rgba","iv","hsla","rgba","s","rgba2hsla","H","S","R","G","B","vMin","min","vMax","max","delta","L","deltaR","deltaG","deltaB","lift","level","colorArr","stringify","toHex","toString","fastLerp","normalizedValue","colors","leftIndex","floor","rightIndex","ceil","leftColor","rightColor","dv","lerp","fullOutput","modifyHSL","modifyAlpha","arrColor","LRU","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","fastMapToColor","mapToColor","1003","symbolPathSetColor","innerColor","symbolStyle","style","symbolShape","shape","symbolType","stroke","__isEmptyBrush","fill","dirty","createSymbol","x","y","w","keepAspect","isEmpty","symbolPath","graphic","makeImage","BoundingRect","makePath","SymbolClz","width","height","setColor","Triangle","extendShape","cx","cy","buildPath","path","moveTo","lineTo","closePath","Diamond","Pin","dy","angle","asin","dx","cos","tanX","sin","tanY","cpLen","cpLen2","arc","PI","bezierCurveTo","Arrow","symbolCtors","line","Line","rect","Rect","roundRect","square","circle","Circle","diamond","pin","arrow","triangle","symbolShapeMakers","x1","y1","x2","y2","size","symbolBuildProxies","Ctor","beforeBrush","textPosition","textAlign","textVerticalAlign","inBundle","proxySymbol","1004","completeDimensions","sysDims","opt","applyDim","resultItem","coordDimIndex","OTHER_DIMS","coordDimNameMap","genName","map","fromZero","dimsDef","encodeDef","createHashMap","dataDimNameMap","dimCount","value0","retrieveValue","sysDimItem","sysDimItemDimsDef","dimDefItem","isString","userDimName","dataDims","normalizeToArray","resultDimIdx","availDimIdx","sysDimIndex","sysDimItemOtherDims","clone","defaults","extra","extraPrefix","extraFromZero","isExtraCoord","guessOrdinal","o","_model","itemName","dimIndex","isFinite","1005","toolbox","brush","title","polygon","lineX","lineY","keep","clear","dataView","lang","dataZoom","zoom","back","magicType","bar","stack","tiled","restore","saveAsImage","1006","CoordinateSystemManager","_coordinateSystems","coordinateSystemCreators","create","api","coordinateSystems","creater","list","concat","update","getCoordinateSystems","register","coordinateSystemCreator","1007","curve","vec2","bbox","dpr","devicePixelRatio","CMD","M","C","Q","A","Z","min2","max2","mathMin","mathMax","mathCos","mathSin","mathSqrt","sqrt","mathAbs","abs","hasTypedArray","Float32Array","PathProxy","notSaveData","_saveData","_ctx","_xi","_yi","_x0","_y0","_ux","_uy","_len","_lineDash","_dashOffset","_dashIdx","_dashSum","setScale","sx","sy","getContext","beginPath","addData","exceedUnit","_needsDash","_dashedLineTo","x3","y3","_dashedBezierTo","quadraticCurveTo","_dashedQuadraticTo","startAngle","endAngle","anticlockwise","arcTo","radius","x0","y0","toStatic","setLineDash","lineDash","lineDashSum","setLineDashOffset","offset","appendPath","appendSize","appendPathData","k","cmd","_expandData","_prevCmd","newData","dash","dashSum","dist","nDash","t","cubicAt","bezierLen","tmpLen","getBoundingRect","Number","MAX_VALUE","xi","yi","fromLine","fromCubic","fromQuadratic","rx","ry","fromArc","rebuildPath","d","ux","uy","theta","dTheta","psi","fs","scaleX","scaleY","isEllipse","translate","rotate","scale","1008","throttle","fn","delay","debounce","exec","lastExec","Date","getTime","timer","currCall","diff","debounceNextCall","lastCall","cb","thisDelay","thisDebounce","clearTimeout","setTimeout","debounceDelay","createOrUpdate","obj","fnAttr","rate","throttleType","originFn","ORIGIN_METHOD","lastThrottleType","THROTTLE_TYPE","RATE","1009","Element","Group","opts","key","hasOwnProperty","_children","__storage","__dirty","isGroup","silent","children","childAt","childOfName","childCount","add","child","parent","_doAdd","addBefore","nextSibling","remove","storage","zr","__zr","addToStorage","addChildrenToStorage","refresh","delFromStorage","delChildrenFromStorage","removeAll","eachChild","traverse","includeChildren","tmpRect","tmpMat","ignore","invisible","childRect","transform","getLocalTransform","copy","applyTransform","union","inherits","1010","window","debugMode","1011","properties","model","excludes","includes","propName","1012","Chart","group","uid","componentUtil","getUID","elSetState","el","state","toggleHighlight","payload","queryDataIndex","dataIdx","getItemGraphicEl","eachItemGraphicEl","clazzUtil","render","seriesModel","highlight","downplay","dispose","chartProto","updateView","updateLayout","updateVisual","enableClassExtend","enableClassManagement","registerWhenExtend","1013","defaultKeyGetter","item","DataDiffer","oldArr","newArr","oldKeyGetter","newKeyGetter","_old","_new","_oldKeyGetter","_newKeyGetter","initIndexMap","arr","keyArr","keyGetterName","dataDiffer","existence","func","_add","_update","_remove","execute","oldDataIndexMap","newDataIndexMap","oldDataKeyArr","newDataKeyArr","unshift","j","1014","Scale","setting","_setting","_extent","Infinity","_interval","getSetting","contain","extent","normalize","unionExtent","other","unionExtentFromData","dim","getDataExtent","getExtent","setExtent","start","end","thisExtent","isNaN","getTicksLabels","labels","ticks","getTicks","getLabel","isBlank","_isBlank","setBlank","1015","collect","axesInfo","seriesInvolved","coordSysAxesInfo","coordSysMap","collectAxesInfo","collectSeriesInfo","globalTooltipModel","getComponent","globalAxisPointerModel","linksOption","linkGroups","saveTooltipAxisInfo","fromTooltip","triggerTooltip","axis","axisPointerModel","getModel","axisPointerShow","isHandleTrigger","makeAxisPointerModel","baseTooltipModel","snap","makeKey","involveSeries","axisInfo","useHandle","seriesModels","axesInfoInCoordSys","groupIndex","getLinkGroupIndex","linkGroup","mapper","axisPointerEnabled","coordSysKey","coordSysModel","getAxes","curry","getTooltipAxes","triggerAxis","cross","tooltipAxes","baseAxes","otherAxes","tooltipAxisPointerModel","volatileOption","field","labelOption","show","crossStyle","lineStyle","textStyle","Model","eachSeries","seriesTooltipTrigger","seriesTooltipShow","getAxis","seriesDataCount","axisModel","linkOption","checkPropInLink","id","linkPropValue","axisPropValue","fixValue","getAxisInfo","status","reverse","getAxisPointerModel","1016","firstDataNotNull","ifNeedCompleteOrdinalData","sampleItem","getDataItemValue","createListFromArray","coordSysName","creator","creators","registeredCoordSys","CoordinateSystem","completeDimOpt","dimensions","getDimensionsInfo","categoryIndex","List","nameList","createNameList","categories","dimValueGetter","itemOpt","dimName","isDataItemOption","hasItemOption","converDataValue","categoryAxesModels","getCategories","initData","isStackable","axisType","getDimTypeByAxis","categoryAxisModel","categoryDim","dataLen","cartesian2d","axesModels","queryComponents","mainType","index","xAxisModel","yAxisModel","xAxisType","yAxisType","stackable","isXAxisCateogry","isYAxisCategory","singleAxis","singleAxisModel","singleAxisType","isCategory","single","polar","polarModel","angleAxisModel","findAxisModel","radiusAxisModel","radiusAxisType","angleAxisType","isAngleAxisCateogry","isRadiusAxisCateogry","geo","1017","fixExtentWithBands","nTick","margin","numberUtil","axisHelper","linearMap","normalizedExtent","Axis","inverse","onBand","_labelInterval","coord","containData","dataToCoord","getPixelPrecision","dataExtent","clamp","coordToData","pointToData","point","getTicksCoords","alignWithLabel","bands","getBands","coords","getLabelsCoords","span","getBandWidth","axisExtent","isHorizontal","getRotate","getLabelInterval","labelInterval","labelModel","getAxisLabelInterval","getFormattedLabels","getFont","1018","Displayable","Style","_rect","__clipPaths","RectText","z","z2","zlevel","draggable","dragging","culling","cursor","rectHover","progressive","afterBrush","prevEl","rectContain","transformCoordToLocal","animateStyle","loop","animate","attrKV","setStyle","useStyle","1019","Gradient","addColorStop","1020","formatUtil","helper","roundNumber","IntervalScale","_intervalPrecision","getInterval","setInterval","interval","_niceExtent","getIntervalPrecision","intervalScaleGetTicks","precision","getPrecisionSafe","niceTicks","splitNumber","minInterval","maxInterval","intervalScaleNiceTicks","intervalPrecision","niceTickExtent","niceExtent","expandSize","fixMax","fixMin","1021","makeAxisEventDataBase","eventData","componentType","endTextLayout","textRotate","rotationDiff","remRadian","rotation","onLeft","isRadianAroundZero","tooltipOpt","fixMinMaxLabelShow","labelEls","tickEls","showMinLabel","showMaxLabel","firstLabel","nextLabel","lastLabel","prevLabel","firstTick","nextTick","lastTick","prevTick","ignoreEl","isTwoLabelOverlapped","current","next","labelLayout","firstRect","nextRect","mRotationBack","matrixUtil","identity","mul","intersect","isNameLocationCenter","nameLocation","buildAxisTick","axisBuilder","tickModel","lineStyleModel","tickLen","tickInterval","ticksCoords","pt1","pt2","matrix","_transform","ticksCnt","ifIgnoreOnTick","tickCoord","tickDirection","v2ApplyTransform","tickEl","subPixelOptimizeLine","anid","getLineStyle","buildAxisLabel","retrieve","axisLabelShow","labelMargin","labelRotation","labelRotate","innerTextLayout","labelDirection","categoryData","triggerEvent","tickVal","itemLabelModel","textColor","getTextColor","pos","labelOffset","labelStr","textEl","Text","position","setTextStyle","text","textFill","targetType","_dumbGroup","updateTransform","decomposeTransform","_util","_number","_symbol","_vector","AxisBuilder","nameDirection","dumbGroup","hasBuilder","builders","getGroup","axisLine","lineCap","strokeContainThreshold","arrows","arrowSize","symbolWidth","symbolHeight","symbol","attr","axisTickLabel","axisName","textStyleModel","gap","gapSignal","nameRotation","axisNameAvailableWidth","textFont","truncateOpt","ellipsis","maxWidth","nameTruncateMaxWidth","truncatedText","truncateText","minChar","placeholder","formatterParams","$vars","__fullText","__truncatedText","content","formatter","axisRotation","textRotation","direction","rawTick","1022","updateAxisPointer","axisView","forceRender","Clazz","AxisView","getAxisPointerClass","axisPointerClass","axisPointerModelHelper","_axisPointer","disposeAxisPointer","axisPointer","echarts","extendComponentView","superApply","force","axisPointerClazz","registerAxisPointerClass","clazz","1023","log","Error","console","1024","minRunLength","n","DEFAULT_MIN_MERGE","makeAscendingRun","array","lo","hi","compare","runHi","reverseRun","binaryInsertionSort","mid","pivot","left","right","gallopLeft","hint","lastOffset","maxOffset","tmp","m","gallopRight","TimSort","pushRun","_runStart","_runLength","runStart","stackSize","runLength","mergeRuns","mergeAt","forceMergeRuns","start1","length1","start2","length2","mergeLow","mergeHigh","cursor1","cursor2","dest","count1","count2","exit","_minGallop","minGallop","DEFAULT_MIN_GALLOPING","customCursor","customDest","sort","remaining","ts","minRun","1025","ZImage","imageHelper","src","image","bind","_image","createOrUpdateImage","onload","isImageReady","aspect","setTransform","sWidth","sHeight","drawImage","restoreTransform","drawRectText","1026","findExistImage","newImageOrSrc","cachedImgObj","globalImageCache","hostEl","cbPayload","__zrImageSrc","pendingWrap","pending","Image","imageOnLoad","__cachedImgObj","1027","base","random","DELIMITER","enableSubTypeDefaulter","entity","subTypeDefaulters","registerSubTypeDefaulter","defaulter","parseClassType","main","determineSubType","componentTypeMain","hasSubTypes","enableTopologicalTravel","dependencyGetter","makeDepndencyGraph","fullNameList","graph","noEntryList","thisItem","createDependencyGraphItem","originalDeps","availableDeps","getAvailableDependencies","entryCount","dependentName","predecessor","thatItem","successor","dep","topologicalTravel","targetNameList","callback","removeEdge","succComponentType","removeEdgeAndAdd","targetNameSet","currComponentType","currVertex","isInTargetNameSet","1028","getMin","origin","rangeStart","eqNaN","getMax","rangeEnd","getNeedCrossZero","getCoordSysModel","noop","setRange","resetRange","1029","retrieveRaw","ret","updateRangeUse","dataZoomModel","rawOption","rangePropMode","_rangePropMode","rangeModeInOption","names","percentSpecified","valueSpecified","AxisProxy","eachAxisDim","DataZoomModel","extendComponentModel","dependencies","orient","xAxisIndex","yAxisIndex","filterMode","startValue","endValue","minSpan","maxSpan","minValueSpan","maxValueSpan","rangeMode","_dataIntervalByAxis","_dataInfo","_axisProxies","_autoThrottle","doInit","newOption","thisOption","canvasSupported","realtime","_setDefaultThrottle","_resetTarget","_giveAxisProxies","axisProxies","eachTargetAxis","dimNames","axisIndex","dependentModels","axisProxy","__dzAxisProxy","autoMode","_judgeAutoMode","axisIndexName","_autoSetAxisIndex","_autoSetOrient","hasIndexSpecified","autoAxisIndex","singleAxisIndex","axisIndices","axisModels","_isSeriesHasAllAxesTypeOf","axisId","is","seriesAxisIndex","globalOption","animation","animationDurationUpdate","getFirstTargetAxisModel","firstAxisModel","indices","getAxisProxy","getAxisModel","setRawRange","ignoreUpdateRangeUsg","getPercentRange","findRepresentativeAxisProxy","getDataPercentWindow","getValueRange","axisDimName","getDataValueWindow","hostedBy","getRangePropMode","1030","isCoordSupported","coordType","COORDS","createNameEach","attrs","capitalNames","capitalFirst","capitalAttrs","nameObj","capital","createLinkedNodesFinder","forEachNode","forEachEdgeType","edgeIdGetter","isNodeAbsorded","nodes","isLinked","hasLink","edgeType","edgeId","records","absorb","sourceNode","processSingleNode","existsLink","AXIS_DIMS","1031","ComponentView","getTargetCoordInfo","save","coordModel","store","coordIndex","coordSysLists","1032","dom","ZRender","guid","instances","getInstance","registerPainter","painterCtors","delInstance","Handler","Storage","Painter","Animation","HandlerProxy","useVML","canvas","self","rendererType","renderer","vml","painter","handerProxy","getViewportRoot","root","stage","flush","_needsRefresh","oldDelFromStorage","oldAddToStorage","removeSelfFromZr","addSelfToZr","getId","addRoot","delRoot","configLayer","zLevel","config","refreshImmediately","_needsRefreshHover","refreshHoverImmediately","addHover","refreshHover","removeHover","clearHover","resize","clearAnimation","getWidth","getHeight","pathToImage","e","setCursorStyle","cursorStyle","findHover","eventName","eventHandler","stop","version","1033","normalizeTextStyle","normalizeStyle","rich","font","textContain","makeFont","VALID_TEXT_ALIGN","textBaseline","VALID_TEXT_VERTICAL_ALIGN","textPadding","normalizeCssArray","renderText","renderRichText","renderPlainText","setCtx","DEFAULT_FONT","contentBlock","__textCotentBlock","parsePlainText","truncate","outerHeight","textLines","lines","lineHeight","boxPos","getBoxPosition","baseX","baseY","applyTextRotation","boxY","adjustTextY","textX","textY","needDrawBg","needDrawBackground","textWidth","outerWidth","boxX","adjustTextX","drawBackground","getTextXForPadding","textShadowBlur","textShadowColor","textShadowOffsetX","textShadowOffsetY","textStrokeWidth","textStroke","getStroke","getFill","strokeText","fillText","parseRichText","drawRichText","contentWidth","xLeft","lineTop","xRight","token","tokens","tokenCount","usedWidth","lineXLeft","lineXRight","placeToken","textOrigin","tokenStyle","styleName","isLineHolder","textHeight","retrieve3","retrieve2","textBackgroundColor","textBorderWidth","textBorderColor","isPlainBg","textBoxShadowBlur","textBoxShadowColor","textBoxShadowOffsetX","textBoxShadowOffsetY","textBorderRadius","roundRectHelper","onBgImageLoaded","blockHeiht","parsePercent","res","adjustTextPositionOnRect","textDistance","textOffset","prop","lineWidth","maxValue","lastIndexOf","needDrawText","center","top","bottom","middle","1034","axisTrigger","registerPreprocessor","link","registerProcessor","PRIORITY","PROCESSOR","STATISTIC","registerAction","1035","buildElStyle","axisPointerType","styleModel","getAreaStyle","buildLabelElOption","elOption","labelPos","getValueLabel","paddings","textRect","align","verticalAlign","confineInContainer","bgColor","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","viewWidth","viewHeight","seriesDataIndices","getAxisRawValue","seriesData","idxItem","series","getSeriesByIndex","dataIndexInside","dataParams","getDataParams","isFunction","getTransformedPosition","layoutInfo","buildCartesianSingleLabelElOption","textLayout","makeLineShape","p1","p2","xDimIndex","makeRectShape","xy","wh","makeSectorShape","r0","clockwise","1036","isNotAroundZero","EPSILON","vector","mIdentity","Transformable","transformableProto","needLocalTransform","parentHasTransform","invTransform","invert","tmpTransform","atan2","getGlobalScale","v2","transformCoordToGlobal","target","1037","fromPoints","points","cubicExtrema","xDim","yDim","quadraticExtremum","quadraticAt","tx","ty","vec2Min","vec2Max","PI2","extremity","1038","textHelper","1039","Component","componentModel","componentProto","1040","handleEnds","handleIndex","restrict","extentSpan","originalDistSign","getSpanSign","extentMinSpan","realExtent","sign","currDistSign","1042","idStart","1043","Animatable","clipPath","drift","beforeUpdate","afterUpdate","hide","setClipPath","removeClipPath","__clipTarget","animators","addAnimator","removeAnimator","1044","defaultGetter","defaultSetter","interpolateNumber","p0","percent","interpolateString","interpolateArray","arrDim","len2","fillArr","arr0","arr1","arr0Len","arr1Len","arraySlice","isArraySame","catmullRomInterpolateArray","p3","t2","t3","catmullRomInterpolate","v0","v1","cloneValue","isArrayLike","rgba2String","getArrayDim","keyframes","lastValue","createTrackClip","animator","easing","oneTrackDone","forceAnimate","getter","_getter","setter","_setter","useSpline","trackLen","trackMaxTime","firstVal","isValueArray","isValueColor","isValueString","time","kfPercents","kfValues","prevValue","isAllValueEqual","colorArray","_target","lastFrame","lastFramePercent","onframe","frame","range","clip","Clip","life","_loop","_delay","ondestroy","Animator","_tracks","_clipCount","_doneList","_onframeList","_clipList","when","tracks","during","pause","_paused","resume","isPaused","_doneCallback","doneList","lastClip","clipCount","addClip","oldOnFrame","forwardToLast","clipList","removeClip","done","getClips","1045","LinkedList","head","tail","linkedListProto","insert","entry","Entry","insertEntry","prev","maxSize","_list","_map","_maxSize","_lastRemovedEntry","LRUProto","removed","leastUsedEntry","1046","createLinearGradient","global","createRadialGradient","STYLE_COMMON_PROPS","host","extendFrom","opacity","lineDashOffset","strokeNoScale","fontStyle","fontWeight","fontSize","fontFamily","textTag","textLineHeight","transformText","blend","prevStyle","firstDraw","fillStyle","strokeStyle","globalAlpha","globalCompositeOperation","hasStroke","getLineScale","hasFill","otherStyle","overwrite","newStyle","getGradient","method","canvasGradient","styleProto","1047","Pattern","repeat","getCanvasPattern","createPattern","1048","requestAnimationFrame","msRequestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","1049","r1","r2","r3","r4","total","1050","normalizeRadian","1051","windingLine","dir","1052","smooth","controlPoints","smoothBezier","smoothConstraint","cp1","cp2","smoothSpline","1053","clearColorPalette","colorIdx","colorNameMap","colorPalette","1054","nice","fixExtent","tick","1055","finder","dataToPoint","getValues","1056","getZr","initGlobalListeners","useHandler","eventType","dis","makeDispatchAction","record","dispatchAction","dispatchTooltipFinally","pendings","initialized","doEnter","onLeave","actuallyPayload","showLen","showTip","hideLen","hideTip","currTrigger","pendingList","unregister","makeGetter","1057","layout","boxLayoutParams","getBoxLayoutParams","padding","viewportSize","getLayoutRect","layoutBox","positionElement","makeBackground","getItemStyle","box","1058","newSnapshot","giveStore","batchItem","dataZoomId","percentRange","snapshot","ATTR","1060","orignalBrush","browser","ie","modified","clipPaths","shadowTemp","1061","getCartesian","grid","getAxisDimIndex","BaseAxisPointer","viewHelper","cartesianAxisHelper","CartesianAxisPointer","makeElOption","otherExtent","getOtherAxis","getGlobalExtent","pixelValue","toGlobalCoord","elStyle","pointerOption","pointerShapeBuilder","graphicKey","pointer","getHandleTransform","labelInside","updateHandleTransform","currPosition","cursorOtherValue","cursorPoint","tooltipOptions","tooltipOption","targetShape","shadow","bandWidth","1062","updateProps","animationModel","moveAnimation","propsEqual","lastProp","stopAnimation","lastProps","newProps","equals","updateLabelShowHide","labelEl","getHandleTransProps","trans","updateMandatoryProps","eventTool","throttleUtil","_group","_lastGraphicKey","_handle","_dragging","_lastValue","_lastStatus","_payloadInfo","animationThreshold","_axisModel","_axisPointerModel","_api","handle","_moveAnimation","determineAnimation","doUpdateProps","updatePointerEl","updateLabelEl","createPointerEl","createLabelEl","_renderHandle","isCategoryAxis","useSnap","pointerEl","handleModel","isInit","createIcon","onmousemove","onmousedown","_onHandleDragMove","ondragend","_onHandleDragEnd","includeStyles","handleSize","_moveHandleToValue","_doDispatchAxisPointer","payloadInfo","axisDim","doClear","buildLabel","1063","gridModel","rawAxisPosition","axisPosition","onZero","getRect","rectBound","axisOffset","posBound","otherAxis","onZeroAxisIndex","onZeroCoord","dirMap","1064","LegendModel","ignoreSize","selected","superCall","optionUpdated","_updateData","legendData","_data","hasSelected","isSelected","select","dataItem","availableNames","getSeries","mapArray","_availableNames","unSelect","toggleSelected","backgroundColor","borderColor","borderRadius","borderWidth","itemGap","itemWidth","itemHeight","inactiveColor","selectedMode","1065","dispatchSelectAction","dispatchHighlightAction","dataName","getDisplayList","useHoverLayer","dispatchDownplayAction","_listComponent","layoutUtil","newlineDisabled","_contentGroup","_backgroundEl","getContentGroup","legendModel","resetInner","itemAlign","renderInner","positionInfo","mainRect","layoutInner","layoutRect","contentGroup","legendDrawnMap","selectMode","itemModel","newline","getSeriesByName","getVisual","legendSymbolType","itemGroup","_createItem","eachRawSeries","indexOfName","itemIcon","tooltipModel","legendGlobalTooltipModel","hitRect","legendIndex","setHoverStyle","__legendDataIndex","contentRect","1066","BrushController","_zr","_brushType","_brushOption","_panels","_track","_covers","_creatingCover","_creatingPanel","_enableGlobalPan","_uid","baseUID","_handlers","mouseHandlers","doEnableBrush","controller","brushOption","interactionMutex","take","MUTEX_RESOURCE_KEY","brushType","DEFAULT_BRUSH_OPT","doDisableBrush","release","createCover","cover","coverRenderers","__brushOption","updateZ","endCreating","creatingCover","coverRenderer","getCoverRenderer","updateCoverShape","COVER_Z","updateCoverAfterCreation","updateCommon","getPanelByPoint","localCursorPoint","panels","panel","pn","isTargetByCursor","getPanelByCover","panelId","clearCovers","covers","originalLength","areas","isEnd","removeOnClick","shouldShowCover","track","mathPow","UNSELECT_THRESHOLD","getTrackEnds","createBaseRectCover","doDrift","edgeNames","makeStyle","updateBaseRect","localRange","brushStyle","MIN_RESIZE_LINE_WIDTH","xa","ya","x2a","y2a","widtha","heighta","updateRectShape","transformable","mainEl","globalDir","getGlobalDirection","CURSOR_MAP","setShape","pointsToRect","clipByPanel","formatRectRange","getTransform","localDirection","inverseMap","transformDirection","driftRect","toRectRange","fromRectRange","rectRange","localDelta","toLocalDelta","namePart","ind","DIRECTION_MAP","driftPolygon","thisGroup","localD","localZero","xmin","ymin","resetCursor","currPanel","preventDefault","rawE","mainShapeContain","updateCoverByMouse","eventParams","thisBrushOption","brushMode","determineBrushType","getCreatingRange","defaultBrushType","handleDragEnd","offsetX","offsetY","getLineRenderer","xyIndex","localTrack","ends","getLinearBrushOtherExtent","pow","ne","sw","nw","se","enableBrush","setPanels","panelOpts","mount","enableGlobalPan","eachCover","updateCovers","brushOptionList","getKey","tmpIdPrefix","oldGetKey","addOrUpdate","newIndex","oldIndex","newBrushOption","oldCovers","newCovers","unmount","mousedown","mousemove","mouseup","Polyline","Polygon","1067","onIrrelevantElement","targetCoordSysModel","getComponentByElement","topTarget","IRRELEVANT_EXCLUDES","1071","1072","containStroke","_l","_a","_b","1073","quadraticProjectPoint","_curve","1074","LinearGradient","globalCoord","1075","zrender","colorTool","number","format","_throttle","ecHelper","_List","_Model","_Axis","_env","_parseGeoJson","parseGeoJson","ecUtil","util","1076","decode","json","UTF8Encoding","encodeScale","UTF8Scale","features","feature","geometry","coordinates","encodeOffsets","c","coordinate","decodePolygon","c2","prevX","prevY","charCodeAt","geoJson","filter","featureObj","geometries","exterior","interiors","region","Region","cp","1077","polygonContain","MAX_NUMBER","loopGeo","transformTo","calculateTransform","1078","isAroundEqual","1079","1080","legendFilter","1081","seriesType","legendModels","findComponents","eachSeriesByType","filterSelf","1082","1083","resourceKey","userKey","getStore","isTaken","1084","BrushTargetManager","targetInfoList","_targetInfoList","info","foundCpts","parseFinder","targetInfoBuilders","builder","include","formatMinMax","minMax","includeMainTypes","INCLUDE_FINDER_MAIN_TYPES","axisConvert","axisNameIndex","to","rangeOrCoordRange","values","toLocalCoord","xyMinMax","NaN","axisDiffProcessor","refer","scales","getScales","xyMinMaxCurr","xyMinMaxOrigin","sizeCurr","getSize","sizeOrigin","brushHelper","COORD_CONVERTS","proto","setOutputRanges","matchOutputRanges","area","coordRange","coordRanges","coordConvert","__rangeOffset","diffProcessor","targetInfo","findTargetInfo","coordSyses","setInputRanges","rangeOffset","makePanelOpts","getDefaultBrushType","getPanelRect","makeRectPanelClipPath","makeRectIsTargetByCursor","makeLinearBrushOtherExtent","controlSeries","areaPanelId","targetInfoMatchers","xAxisModels","yAxisModels","gridModels","gridModelMap","xAxesHas","yAxesHas","cartesians","getCartesians","cartesian","panelRectBuilder","xAxisDeclared","yAxisDeclared","geoModels","geoModel","xminymin","xmaxymax","1085","normalizeRect","localPoints","graphicUtil","clipPointsByRect","specifiedXYIndex","brushWidth","targetModel","_cursorHelper","1086","1087","resetSingleAxis","reset","filterSingleAxis","filterData","eachComponent","valueRange","1088","linkedNodesFinder","effectedModels","query","1090","makeEventPacket","eveType","cancelBubble","zrX","zrY","gestureEvent","pinchX","pinchY","pinchScale","wheelDelta","zrDelta","zrByTouch","which","EmptyProxy","isHover","displayable","SILENT","Draggable","handlerNames","proxy","painterRoot","_hovered","_lastTouchMoment","_lastX","_lastY","lastHovered","lastHoveredTarget","hovered","hoveredTarget","setCursor","dispatchToElement","mouseout","innerDom","element","toElement","relatedTarget","parentNode","nodeType","dispatch","eventArgs","eventPacket","eachOtherLayer","layer","exclude","hoverCheckResult","_downEl","_downPoint","_upEl","1091","_dragStart","_drag","_dragEnd","param","draggingTarget","_draggingTarget","_x","_y","dropTarget","lastDropTarget","_dropTarget","1092","shapeCompareFunc","timsort","_roots","_displayList","_displayListLen","includeIgnore","updateDisplayList","roots","displayList","_updateAndAddDisplayable","userSetClipPath","currentClipPath","parentClipPath","_renderList","displayableSortFunc","1093","animatingShape","pathSplitted","animateTo","_animateToShallow","source","objShallow","propertyCount","1094","options","_life","_initialized","onrestart","_pausedTime","easingFuncs","step","globalTime","deltaTime","_startTime","easingFunc","schedule","fire","restart","_needsRemove","remainder","arg","1095","linear","quadraticIn","quadraticOut","quadraticInOut","cubicIn","cubicOut","cubicInOut","quarticIn","quarticOut","quarticInOut","quinticIn","quinticOut","quinticInOut","sinusoidalIn","sinusoidalOut","sinusoidalInOut","exponentialIn","exponentialOut","exponentialInOut","circularIn","circularOut","circularInOut","elasticIn","elasticOut","elasticInOut","backIn","backOut","backInOut","bounceIn","bounceOut","bounceInOut","1096","parseInt10","isLayerValid","__builtin__","preProcessLayer","__unusedCount","postProcessLayer","isDisplayableCulled","viewRect","isClipPathChanged","prevClipPaths","doClip","createRoot","domRoot","document","createElement","cssText","Layer","singleCanvas","nodeName","toUpperCase","_opts","_singleCanvas","rootStyle","innerHTML","zlevelList","_zlevelList","layers","_layers","_layerConfig","_width","_height","mainLayer","initContext","_domRoot","_getSize","appendChild","_progressiveLayers","_hoverlayer","_hoverElements","getType","isSingleCanvas","getViewportRootOffset","viewportRoot","offsetLeft","offsetTop","paintAll","_paintList","_startProgessive","hoverStyle","__hoverMir","elMirror","__from","hoverElements","from","hoverLayer","getLayer","originalEl","_doPaintEl","_progressiveToken","_doPaintList","_furtherProgressive","_progress","_clearProgressive","_updateLayerStatus","eachBuiltinLayer","flushProgressiveLayer","currentLayer","currentZLevel","currentProgressiveLayer","layerProgress","progressiveLayerIdx","elZLevel","elFrame","__frame","MAX_PROGRESSIVE_LAYER_NUMBER","renderScope","__progress","__maxProgress","__nextIdxNotProg","forcePaint","prevClipLayer","prevElClipPaths","insertLayer","layersMap","prevLayer","virtual","prevDom","insertBefore","firstChild","eachLayer","getLayers","progressiveLayers","elCountsLastFrame","progressiveElCountsLastFrame","elCount","lastProgressiveKey","progressiveLayerCount","frameCount","elProgress","_clearLayer","layerConfig","delLayer","removeChild","display","clearLayer","getRenderedCanvas","findAndDrawOtherLayer","smaller","larger","intermediateLayer","renderToCanvas","imageLayer","pixelRatio","clearColor","whIdx","cwh","plt","prb","stl","defaultView","getComputedStyle","shadowBlurSize","leftMargin","rightMargin","topMargin","bottomMargin","clearRect","pathTransform","ImageShape","imgShape","1097","returnFalse","createDom","newDom","createCanvas","newDomStyle","setAttribute","domStyle","onselectstart","domBack","ctxBack","motionBlur","lastFrameAlpha","__currentValues","createBackBuffer","clearAll","haveMotionBLur","clearColorGradientOrPattern","__canvasGradient","fillRect","1098","_event","Dispatcher","_clips","_running","_time","_pauseStart","clips","deferredEvents","deferredClips","_startLoop","1099","eventNameFix","firefox","processGesture","gestureMgr","_gestureMgr","gestureInfo","recognize","setTouchTimer","instance","_touching","_touchTimer","isPointerFromTouch","pointerType","initDomHandler","makeMouseHandler","touchHandlerNames","domHandlers","pointerHandlerNames","mouseHandlerNames","HandlerDomProxy","mountHandlers","addEventListener","GestureMgr","pointerEventsSupported","touchEventsSupported","removeEventListener","normalizeEvent","pointerEventNames","pointerdown","pointerup","pointermove","pointerout","nm","touchstart","touchmove","touchend","click","handlerDomProxyProto","1100","pointPair","eventUtil","_doTrack","_recognize","touches","trackItem","touch","clientToLocal","recognizers","pinch","pinchEnd","pinchPre","pinchCenter","1101","mergeTheme","theme","themeItem","initBase","baseOption","OPTION_INNER_KEY","_componentsMap","_seriesIndices","_theme","globalDefault","getComponentsByTypes","componentsMap","types","newCptOption","existComponent","createSeriesIndices","filterBySubType","components","condition","cpt","colorPaletteMinin","GlobalModel","optionManager","_optionManager","setOption","optionPreprocessorFuncs","assert","resetOption","optionChanged","mountOption","timelineOption","getTimelineOption","mediaOptions","getMediaOption","mediaOption","visitComponent","newCptOptionList","mapResult","mappingToExists","makeIdAndName","keyInfo","exist","ComponentModelClass","getClass","newCptTypes","componentOption","getAllClassMainTypes","getOption","isIdInner","cpts","isIdArray","isNameArray","queryCond","q","indexAttr","idAttr","nameAttr","component","queryResult","oneSeries","getSeriesByType","rawSeriesIndex","eachRawSeriesByType","isSeriesFiltered","getCurrentSeriesIndices","filterSeries","filteredSeries","componentTypes","1102","makeStyleMapper","getLineDash","lineType","dotSize","dashSize","1103","1104","PATH_COLOR","isEmphasis","getTextRect","1105","processArc","fa","psiDeg","xp","yp","lambda","cxp","cyp","vAngle","u","v","vRatio","createPathProxyFromString","cs","cc","RegExp","prevCmd","cpx","cpy","shift","ctlPtx","ctlPty","pathData","createPathOptions","pathProxy","transformPath","createFromString","Path","extendFromString","mergePath","pathEls","pathList","pathEl","createPathProxy","__dirtyPath","pathBundle","vMag","acos","1106","swapExtrema","extrema","windingCubic","nRoots","cubicRootAt","y0_","y1_","nExtrema","unit","windingQuadratic","quadraticRootAt","y_","x_","windingArc","containPath","isStroke","cubic","quadratic","1107","cubicProjectPoint","1108","1109","nPoint","mathAtan2","1110","1111","fixClipWithShadow","unitX","unitY","1112","1113","polyHelper","1114","interpolate","isLoop","distance","v2Distance","segs","w2","w3","1115","constraint","prevPoint","nextPoint","cps","v2Min","v2Max","v2Clone","v2Sub","v2Scale","d0","d1","sum","cp0","v2Add","sub","1116","1117","1118","pointAt","1119","someVectorAt","isTangent","cpx2","cpy2","cubicDerivativeAt","cpx1","cpy1","quadraticDerivativeAt","quadraticSubdivide","cubicSubdivide","tangentAt","1120","1121","paths","_updatePathDirty","dirtyPath","1122","RadialGradient","1123","getBorderLineDash","1124","1125","platform","navigator","match","blendMode","animationDuration","animationEasing","animationEasingUpdate","progressiveThreshold","hoverLayerThreshold","useUTC","1126","ExtensionAPI","chartInstance","echartsAPIList","1127","OptionManager","_timelineOptions","_mediaList","_mediaDefault","_currentMediaIndices","_optionBackup","_newBaseOption","parseRawOption","isNew","mediaDefault","timelineOptions","mediaList","timelineOpt","timeline","media","singleMedia","preProcess","applyMediaQuery","ecWidth","ecHeight","realMap","aspectratio","applicatable","matched","QUERY_REG","operator","realAttr","real","expect","indicesEquals","indices1","indices2","oldOption","newCptOpt","oldCptOpt","oldOptionBackup","newParsedOption","isRecreate","optionBackup","timelineModel","getCurrentIndex","1128","compatLayoutProperties","LAYOUT_PROPERTIES","isTheme","compatStyle","seriesOpt","clockWise","pointerColor","COMPATITABLE_SERIES","dataRange","visualMap","COMPATITABLE_COMPONENTS","componentName","1129","compatItemStyle","itemStyleOpt","itemStyle","POSSIBLE_STYLES","normalItemStyleOpt","normal","emphasisItemStyleOpt","emphasis","compatTextStyle","labelOptSingle","TEXT_STYLE_OPTIONS","compatLabelTextStyle","labelOpt","processSeries","upperLabel","edgeLabel","markPoint","markLine","markArea","mpData","mlData","toArr","toObj","axes","axisOpt","parallel","parallelOpt","parallelAxisDefault","calendar","calendarOpt","radar","radarOpt","geoOpt","regions","regionObj","1130","encodeColor","colorAccessPath","setVisual","setItemVisual","getItemModel","1131","maskColor","mask","Arc","labelRect","animateShape","1132","createList","createScale","axisModelCommonMixin","createScaleByModel","niceScaleExtent","mixinAxisModelCommonMethods","_completeDimensions","1133","scaleProto","OrdinalScale","rank","1134","scaleHelper","intervalScaleProto","mathCeil","mathFloor","bisect","TimeScale","stepLvl","_stepLvl","date","ONE_HOUR","getFullYear","getMonth","getDate","approxTickNum","approxInterval","scaleLevelsLen","scaleLevels","yearSpan","timezoneOffset","getTimezoneOffset","parseDate","methodName","ONE_SECOND","ONE_MINUTE","ONE_DAY","1135","fixRoundingError","originalVal","roundingErrorFix","mathLog","LogScale","$constructor","_originalScale","originalScale","originalExtent","powVal","__fixMin","__fixMax","quantity","err","1136","illegalPoint","findPointFromSeries","isIllegalPoint","inputAxesInfo","shouldHide","outputFinder","showValueMap","dataByCoordSys","updaters","showPointer","showTooltip","coordSysContainsPoint","containPoint","inputAxisInfo","findInputAxisInfo","processOnAxis","linkTriggers","tarAxisInfo","tarKey","srcAxisInfo","srcKey","srcValItem","makeMapperParam","updateModelActually","dispatchTooltipActually","dispatchHighDownActually","newValue","dontSnap","buildPayloadsBySeries","payloadBatch","snapToValue","minDist","minDiff","seriesNestestValue","dataIndices","nestestValue","indicesOfNearest","getRawIndex","modelHelper","coordSysItem","coordSysId","coordSysIndex","coordSysType","coordSysMainType","dataByAxis","valueLabelOpt","outputAxesInfo","valItem","escapeConnect","lastHighlights","newHighlights","toHighlight","toDownplay","batch","1137","AxisPointerModel","triggerOn","shadowStyle","icon","1138","globalListener","AxisPointerView","1139","showContent","alwaysShowContent","displayMode","confine","showDelay","hideDelay","transitionDuration","enterable","extraCssText","1140","buildTooltipModel","modelCascade","resultModel","refixTooltipPosition","gapH","gapV","getOuterSize","confineTooltipPosition","clientWidth","clientHeight","paddingLeft","paddingRight","borderLeftWidth","borderRightWidth","paddingTop","paddingBottom","borderTopWidth","borderBottomWidth","calcTooltipPosition","contentSize","domWidth","domHeight","rectWidth","rectHeight","isCenterAlign","TooltipContent","axisPointerViewHelper","proxyRect","tooltipContent","getDom","_tooltipContent","_tooltipModel","_ecModel","_lastDataByCoordSys","_alwaysShowContent","setEnterable","_initGlobalListener","_keepShow","_tryShow","_hide","_refreshUpdateTimeout","manuallyShowTip","_ticket","_manuallyAxisShowTip","pointInfo","manuallyHideTip","hideLater","_showAxisTooltip","_showSeriesItemTooltip","_showComponentItemTooltip","_showOrMove","_showTimout","singleDefaultHTML","singleParamsList","singleTooltipModel","itemCoordSys","axisValue","seriesDefaultHTML","valueLabel","axisValueLabel","firstLine","positionExpr","_updateContentNotChangedOnAxis","_updatePosition","_showTooltipContent","dataModel","tooltipTrigger","defaultHtml","asyncTicket","subTooltipModel","html","formatTpl","cbTicket","setContent","vAlign","viewSize","lastCoordSys","contentNotChanged","lastItemCoordSys","indexCoordSys","lastDataByAxis","thisItemCoordSys","thisDataByAxis","lastItem","indexAxis","lastIndices","newIndices","lastIdxItem","newIdxItem","1141","assembleTransition","duration","transitionText","vendors","vendorPrefix","assembleFont","assembleCssText","zrColor","borderName","camelCase","toCamelCase","container","_container","_show","_hideTimeout","onmouseenter","_enterable","_inContent","onmouseleave","_hideDelay","currentStyle","viewportRootOffset","isShow","1142","legendSelectActionHandler","selectedMap","isToggleSelect","isItemSelected","1143","1144","updateSelectedMap","targetList","_targetList","_selectTargetMap","targetMap","1145","paletteScope","dataAll","idxMap","rawIdx","filteredIdx","singleDataColor","1146","featureManager","ToolboxModel","featureOpt","featureName","Feature","itemSize","showTitle","iconStyle","1147","isUserFeatureName","listComponentHelper","toolboxModel","processFeature","featureNames","oldName","featureOpts","featureModel","onclick","unusable","createIconPaths","setIconStatus","iconName","iconPaths","iconStatus","iconStyleModel","icons","getIcons","titles","iconStr","__title","_features","_featureNames","titleText","needPutOnTop","topOffset","1148","SaveAsImage","saveAsImageLang","excludeComponents","$a","download","url","getConnectedDataURL","href","MouseEvent","edge","msSaveOrOpenBlob","bstr","atob","u8arr","Uint8Array","blob","Blob","tab","open","write","evt","view","bubbles","cancelable","dispatchEvent","1149","MagicType","magicTypeLang","availableIcons","seriesOptGenreator","seriesId","radioTypes","generateNewSeriesTypes","newSeriesOpt","categoryAxis","getAxesByScale","boundaryGap","radio","currentType","1150","groupSeries","seriesGroupByCategoryAxis","otherSeries","meta","baseAxis","valueAxis","assembleSeriesWithCategoryAxis","tables","valueAxisDim","headers","columns","ITEM_SPLITER","items","BLOCK_SPLITER","assembleOtherSeries","vals","getContentFromModel","trim","isTSVFormat","block","parseTSVContents","tsv","tsvLines","itemSplitRegex","header","parseListContents","hasName","parseContents","blockMetaList","blocks","blockMeta","axisKey","DataView","_dom","tryMergeDataOption","originalData","newVal","original","dataViewLang","readOnly","optionToContent","contentToOption","textareaColor","textareaBorderColor","buttonColor","buttonTextColor","close","viewMain","textarea","htmlOrDom","isDom","buttonContainer","buttonStyle","closeButton","refreshButton","keyCode","selectionStart","selectionEnd","substring","newSeriesOptList","1151","DataZoom","_brushController","_onBrush","_isZoomActive","retrieveAxisSetting","updateBackBtnStatus","history","updateZoomBtnStatus","zoomActive","dataZoomSelectActive","brushTargetManager","sliderMove","dataZoomLang","DATA_ZOOM_ID_BASE","handlers","nextActive","_dispatchZoomAction","setBatch","findDataZoom","minMaxSpan","getMinMaxSpan","found","dzModel","addForAxis","dataZoomOpt","axisIndicesName","givenAxisIndices","forEachComponent","newOpt","$fromToolbox","dataZoomOpts","toolboxOpt","1152","1153","calculateDataExtent","seriesExtent","fixExtentByAxis","axisDataLen","setAxisModel","isRestore","percentWindow","_percentWindow","valueWindow","_valueWindow","useOrigin","toFixed","setMinMaxSpan","_minMaxSpan","_dataZoomModel","valueSpan","_dataExtent","asc","_dimName","_axisIndex","getTargetSeriesModels","getOtherAxisModel","otherAxisDim","coordSysIndexName","isCartesian","foundOtherAxisModel","otherAxisModel","calculateDataWindow","percentExtent","boundValue","boundPercent","dataWindow","isInWindow","leftOut","rightOut","hasValue","thisHasValue","thisLeftOut","thisRightOut","1154","1155","DataZoomView","1156","Restore","restoreLang","1161","actionInfos","actionInfo","1169","createDataSelectAction","dataColor","pieLayout","dataFilter","registerVisual","registerLayout","1170","getPercentWithPrecision","dataSelectableMixin","PieSeries","extendSeriesModel","_defaultLabelLine","valueList","hostModel","labelLine","labelLineNormalOpt","labelLineEmphasisOpt","legendHoverLink","hoverAnimation","minAngle","selectedOffset","hoverOffset","avoidLabelOverlap","percentPrecision","stillShowZeroSum","animationType","1171","updateDataSelected","hasAnimation","toggleItemSelected","getItemLayout","midAngle","PiePiece","onEmphasis","polyline","hoverIgnore","onNormal","normalIgnore","sector","Sector","updateData","ChartView","piePieceProto","firstCreate","sectorShape","initProps","itemStyleModel","visualColor","lineJoin","_updateLabel","labelText","linePoints","labelHoverModel","labelLineModel","labelLineHoverModel","setLabelStyle","labelFetcher","labelDataIndex","defaultText","autoColor","useInsideStyle","inside","PieView","sectorGroup","_sectorGroup","oldData","isFirstRender","onSectorClick","piePiece","setItemGraphicEl","newIdx","oldIdx","_createClipPath","itemLayout","1172","RADIAN","validDataCount","getSum","unitRadian","roseType","restAngle","valueSumLargerThanMinAngle","currentAngle","setItemLayout","1173","adjustSingleSide","shiftUp","changeX","isDownList","lastDeltaX","deltaY","deltaX","lastY","upList","downList","avoidOverlap","labelLayoutList","leftList","rightList","hasLabelRotate","labelPosition","labelLineLen","labelLineLen2","isLabelInside","getFormattedLabel","975","__webpack_exports__","_classCallCheck","Constructor","TypeError","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","Object","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","__WEBPACK_IMPORTED_MODULE_0_react__","__WEBPACK_IMPORTED_MODULE_0_react___default","__WEBPACK_IMPORTED_MODULE_1_echarts_lib_echarts__","__WEBPACK_IMPORTED_MODULE_1_echarts_lib_echarts___default","__WEBPACK_IMPORTED_MODULE_2_echarts_lib_component_tooltip__","__WEBPACK_IMPORTED_MODULE_3_echarts_lib_component_legend__","__WEBPACK_IMPORTED_MODULE_4_echarts_lib_chart_pie__","__WEBPACK_IMPORTED_MODULE_5_echarts_lib_component_toolbox__","_createClass","defineProperties","descriptor","protoProps","staticProps","PieReact","_React$Component","_this","getPrototypeOf","initPie","_props$option","undefined","myChart","ID","onresize","_this2","_props","_props$width","_props$height","ref","978","$override","methods","typeStr","objToString","TYPED_ARRAY","BUILTIN_OBJECT","isPrimitive","targetProp","sourceProp","isBuiltInObject","mergeAll","targetAndSources","overlay","baseClazz","F","clazzPrototype","forEach","nativeForEach","nativeMap","memo","nativeReduce","nativeFilter","find","nativeSlice","ownerDocument","value1","value2","Function","message","setAsPrimitive","primitiveKey","HashMap","[object Function]","[object RegExp]","[object Date]","[object Error]","[object CanvasGradient]","[object CanvasPattern]","[object Image]","[object Canvas]","[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]","arrayProto","prefixedKey","removeKey","979","createRegisterEventWithLowercaseName","MessageCenter","ECharts","prioritySortFunc","prio","themeStorage","_throttledZrFlush","backwardCompat","_chartsViews","_chartsMap","_componentsViews","_coordSysMgr","createExtensionAPI","_messageCenter","_initEvents","_pendingActions","visualFuncs","dataProcessorFuncs","_onframe","doConvertPixel","coordSysList","updateDirectly","ecIns","callView","__alive","__model","__viewId","doDispatchAction","payloadType","actionWrap","actions","cptType","updateMethod","IN_MAIN_PROCESS","payloads","batched","eventObj","eventObjBatch","isHighDown","action","OPTION_UPDATED","updateMethods","prepareAndUpdate","flushPendingActions","pendingActions","triggerUpdatedEvent","invokeUpdateMethod","chart","updateProgressiveAndBlend","updateHoverLayerStatus","postUpdateFuncs","prepareView","isComponent","viewList","viewMap","viewId","classType","__id","__ecComponentInfo","processData","process","stackSeriesData","stackedDataMap","previousStack","stackedOn","doLayout","visual","isLayout","doVisualEncoding","excludesLayout","doRender","componentView","chartView","frameDrawNum","needProgressive","ecInstance","coordSysMgr","modelInfo","enableConnect","updateConnectedChartsStatus","charts","STATUS_KEY","eventActionMap","actionType","connectedGroups","makeActionFromEvent","otherCharts","otherChart","existInstance","getInstanceByDom","idBase","DOM_ATTRIBUTE_KEY","connect","groupId","groupIdBase","disConnect","isDisposed","getAttribute","getInstanceById","registerTheme","preprocessorFunc","priority","processorFunc","PRIORITY_PROCESSOR_FILTER","registerPostUpdate","postUpdateFunc","ACTION_REG","test","registerCoordinateSystem","getCoordinateSystemDimensions","coordSysCreator","layoutFunc","PRIORITY_VISUAL_LAYOUT","visualFunc","PRIORITY_VISUAL_CHART","registerLoading","loadingFx","loadingEffects","extendChartView","setCanvasCreator","registerMap","mapName","specialAreas","JSON","mapDataStores","getMap","seriesColor","loadingDefault","FILTER","VISUAL","LAYOUT","GLOBAL","CHART","COMPONENT","BRUSH","echartsProto","notMerge","lazyUpdate","setTheme","getDevicePixelRatio","getSvgDataUrl","svgSupported","pathToSvg","getDataURL","excludesComponentViews","toDataURL","canvasList","boundingRect","getBoundingClientRect","targetCanvas","img","convertToPixel","convertFromPixel","containPixel","models","visualType","defaultMainType","indexOfRawIndex","getViewOfComponentModel","getViewOfSeriesModel","background","clearAllVisual","_loadingFX","showLoading","cfg","hideLoading","weChat","MOUSE_EVENT_NAMES","eveName","_disposed","disconnect","dataTool","___ec_export","980","extendPath","pathTool","centerGraphic","resizePath","imageUrl","pathRect","subPixelOptimize","subPixelOptimizeRect","originX","originY","originWidth","originHeight","positiveOrNegative","doubledPosition","hasFillOrStroke","fillOrStroke","liftColor","cacheElementStl","__hoverStlDirty","__hoverStl","normalStyle","__normalStl","doSingleEnterHover","__isHover","insideRollbackOpt","rollbackInsideStyle","applyInsideStyle","insideOriginalTextPosition","doSingleLeaveHover","normalStl","doEnterHover","doLeaveHover","setElementHoverStl","hoverStl","onElementMouseOver","__hoverSilentOnTouch","__isEmphasis","onElementMouseOut","enterEmphasis","leaveEmphasis","hoverSilentOnTouch","emphasisStyle","normalModel","emphasisModel","normalSpecified","emphasisSpecified","EMPTY_OBJ","labelDimIndex","showNormal","showEmphasis","baseText","normalStyleText","emphasisStyleText","specifiedTextStyle","setTextStyleCommon","setText","defaultColor","isRectText","richResult","globalTextStyle","richItemNames","getRichItemNames","richTextStyle","setTokenTextStyle","forceRich","richItemNameMap","isBlock","getAutoColor","originalTextPosition","insideRollback","disableBox","gTextStyleModel","animateOrSetProps","isUpdate","animatableModel","postfix","animationDelay","getAnimationDelayParams","ancestor","mat","hBase","vBase","vertex","groupTransition","g1","g2","getAnimatableProps","elMap1","elMap","oldEl","newProp","clipRectByRect","targetRect","Ring","BezierCurve","CompoundPath","981","_trim","domain","subDomain","subRange","all","returnStr","getPrecision","eIndex","dotIndex","pixelExtent","LN10","dataQuantity","sizeQuantity","acc","digits","votesPerQuota","targetSeats","seats","votes","currentSum","NEGATIVE_INFINITY","maxId","radian","pi2","RADIAN_EPSILON","TIME_REG","hour","UTC","quantityExponent","nf","exponent","exp10","reformIntervals","littleThan","lg","curr","currClose","isNumeric","MAX_SAFE_INTEGER","982","subOpts","emphasisOpt","normalOpt","subOptName","nubmerUtil","createDataFormatModel","exists","newCptOptions","cptOption","idMap","existCpt","idNum","compressBatches","batchA","batchB","makeMap","sourceBatch","otherMap","otherDataIndices","lenj","mapToArray","isData","mapA","mapB","has","parsedKey","queryType","queryParam","getDimension","otherDim","rawValue","rawDataIndex","getRawDataItem","componentSubType","marker","labelProp","hostObj","983","dev","984","ArrayCtor","scaleAndAdd","lenSquare","div","dot","distanceSquare","negate","lengthSquare","distSquare","985","upperCaseFirst","group1","String","tpl","paramsList","encode","seriesLen","alias","TPL_VAR_ALIAS","wrapVar","seriesIdx","formatTplSimple","isUTC","utc","s2d","varName","986","os","ua","SVGRect","userAgent","987","lt","rb","lb","rt","maxX","maxY","ax0","ax1","ay0","ay1","bx0","bx1","by0","by1","plain","988","pathContain","pathProxyForDraw","hasFillGradient","hasStrokeGradient","hasFillPattern","hasStrokePattern","_fillGradient","_strokeGradient","ctxLineDash","shapeCfg","needsUpdateRect","rectWithStroke","_rectWithStroke","lineScale","localPos","Sub","defaultShape","thisShape","989","doGet","pathArr","getParent","getParentMethod","lineStyleMixin","areaStyleMixin","textStyleMixin","itemStyleMixin","ignoreParent","parsePath","thisParentModel","setReadOnly","customizeGetParent","990","boxLayout","maxHeight","currentLineMaxSize","nextX","nextY","nextChild","nextChildRect","moveX","moveY","getAvailableSize","containerRect","containerWidth","containerHeight","verticalMargin","horizontalMargin","hv","boundingMode","elPos","sizeCalculable","hvIdx","HV_NAMES","targetOption","newParams","newValueCount","merged","mergedValueCount","hasProp","hResult","vResult","copyLayoutParams","LOCATION_PARAMS","vbox","hbox","991","getDependencies","deps","getClassesByMainType","arrayPush","boxLayoutMixin","themeModel","hasOwn","optList","Class","getReferringComponents","992","MEMBER_PRIFIX","TYPE_DELIMITER","checkClassType","RootClass","mandatoryMethods","ExtendedClass","makeContainer","IS_CONTAINER","registerClass","componentMainType","throwWhenNotFound","originalExtend","993","textWidthCache","measureText","textWidthCacheCounter","TEXT_CACHE_MAX","getRichTextRect","getPlainTextRect","halfHeight","prepareTruncateOptions","truncateSingleLine","maxIterations","cnCharWidth","ascCharWidth","ellipsisWidth","textLine","subLength","estimateLength","charCode","getLineHeight","truncOuterHeight","truncOuterWidth","lastIndex","STYLE_REG","matchedIndex","pushTokens","contentHeight","stlPadding","truncateWidth","truncateHeight","tokenHeight","tokenWidth","tokenWidthNotSpecified","percentWidth","bgImg","paddingW","remianTruncWidth","isEmptyStr","strs","tokensLen","994","out0","out1","out2","out3","out4","out5","rad","aa","ac","atx","ab","ad","aty","st","ct","vx","vy","det","995","transferProperties","TRANSFERABLE_PROPERTIES","__wrappedMethods","DefaultDataProvider","dataArray","_array","normalizeDimensions","cloneListForMapAndSample","excludeDimensions","allDimensions","_storage","originalStorage","dimStore","globalObj","dataCtors","float","Float64Array","int","Int32Array","ordinal","pure","getItem","dimensionInfos","dimensionNames","dimensionName","dimensionInfo","_dimensionInfos","_nameList","_idList","_optionModels","_visual","_itemVisuals","_itemLayouts","_graphicEls","_rawData","listProto","nameDimIdx","dimensionInfoMap","idList","nameRepeatCount","DataCtor","stackedValue","dimData","dimExtent","rawIndex","maxDistance","nearestIndices","dims","dimSize","tmpRetValue","retValue","downSample","dimension","sampleValue","sampleIndex","targetStorage","originalIndices","frameValues","frameIndices","frameSize","otherList","otherIdList","setLayout","getLayout","clearItemLayouts","itemVisual","setItemDataAndSeriesIndex","dimensionInfoList","wrapMethod","injectFunction","originalMethod","TRANSFERABLE_METHODS","CHANGABLE_METHODS","996","getScaleExtent","scaleType","ifAxisCrossZero","tickCoords","axisRotate","textSpaceTakenRect","autoLabelInterval","accumulatedLabelInterval","labelFormatter","997","ctor","998","calculate","defaultGetZrXY","layerX","layerY","clientX","clientY","targetTouches","changedTouches","detail","button","MOUSE_EVENT_REG","isDomLevel2","attachEvent","detachEvent","notLeftMouse","stopPropagation","returnValue","999","isAroundZero","onet","t1","disc","K","discSqrt","Y1","Y2","ONE_THIRD","T","ASqrt","THREE_SQRT","p01","p12","p23","p012","p123","p0123","d2","_v0","_t","_v1","v2DistSquare","EPSILON_NUMERIC","_v2","divider","v2Create"],"mappings":"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","file":"static/js/PieReact.26840e49.chunk.js","sourcesContent":["webpackJsonp([2],{\n\n/***/ 1000:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(983);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(978);\n\nvar env = __webpack_require__(986);\n\nvar _format = __webpack_require__(985);\n\nvar formatTime = _format.formatTime;\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\nvar getTooltipMarker = _format.getTooltipMarker;\n\nvar _clazz = __webpack_require__(992);\n\nvar set = _clazz.set;\nvar get = _clazz.get;\n\nvar modelUtil = __webpack_require__(982);\n\nvar ComponentModel = __webpack_require__(991);\n\nvar colorPaletteMixin = __webpack_require__(1053);\n\nvar _layout = __webpack_require__(990);\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\nvar SeriesModel = ComponentModel.extend({\n  type: 'series.__base__',\n\n  /**\n   * @readOnly\n   */\n  seriesIndex: 0,\n  // coodinateSystem will be injected in the echarts/CoordinateSystem\n  coordinateSystem: null,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * Data provided for legend\n   * @type {Function}\n   */\n  // PENDING\n  legendDataProvider: null,\n\n  /**\n   * Access path of color for visual\n   */\n  visualColorAccessPath: 'itemStyle.normal.color',\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  init: function (option, parentModel, ecModel, extraOpt) {\n    /**\n     * @type {number}\n     * @readOnly\n     */\n    this.seriesIndex = this.componentIndex;\n    this.mergeDefaultAndTheme(option, ecModel);\n    var data = this.getInitialData(option, ecModel);\n\n    /**\n     * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n     * @private\n     */\n    set(this, 'dataBeforeProcessed', data); // If we reverse the order (make data firstly, and then make\n    // dataBeforeProcessed by cloneShallow), cloneShallow will\n    // cause data.graph.data !== data when using\n    // module:echarts/data/Graph or module:echarts/data/Tree.\n    // See module:echarts/data/helper/linkList\n\n    this.restoreData();\n  },\n\n  /**\n   * Util for merge default and theme to option\n   * @param  {Object} option\n   * @param  {module:echarts/model/Global} ecModel\n   */\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? getLayoutParams(option) : {}; // Backward compat: using subType on theme.\n    // But if name duplicate between series subType\n    // (for example: parallel) add component mainType,\n    // add suffix 'Series'.\n\n    var themeSubType = this.subType;\n\n    if (ComponentModel.hasClass(themeSubType)) {\n      themeSubType += 'Series';\n    }\n\n    zrUtil.merge(option, ecModel.getTheme().get(this.subType));\n    zrUtil.merge(option, this.getDefaultOption()); // Default label emphasis `show`\n\n    modelUtil.defaultEmphasis(option.label, ['show']);\n    this.fillDataTextStyle(option.data);\n\n    if (layoutMode) {\n      mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (newSeriesOption, ecModel) {\n    newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n    this.fillDataTextStyle(newSeriesOption.data);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n    }\n\n    var data = this.getInitialData(newSeriesOption, ecModel); // TODO Merge data?\n\n    if (data) {\n      set(this, 'data', data);\n      set(this, 'dataBeforeProcessed', data.cloneShallow());\n    }\n  },\n  fillDataTextStyle: function (data) {\n    // Default data label emphasis `show`\n    // FIXME Tree structure data ?\n    // FIXME Performance ?\n    if (data) {\n      var props = ['show'];\n\n      for (var i = 0; i < data.length; i++) {\n        if (data[i] && data[i].label) {\n          modelUtil.defaultEmphasis(data[i].label, props);\n        }\n      }\n    }\n  },\n\n  /**\n   * Init a data structure from data related option in series\n   * Must be overwritten\n   */\n  getInitialData: function () {},\n\n  /**\n   * @param {string} [dataType]\n   * @return {module:echarts/data/List}\n   */\n  getData: function (dataType) {\n    var data = get(this, 'data');\n    return dataType == null ? data : data.getLinkedData(dataType);\n  },\n\n  /**\n   * @param {module:echarts/data/List} data\n   */\n  setData: function (data) {\n    set(this, 'data', data);\n  },\n\n  /**\n   * Get data before processed\n   * @return {module:echarts/data/List}\n   */\n  getRawData: function () {\n    return get(this, 'dataBeforeProcessed');\n  },\n\n  /**\n   * Coord dimension to data dimension.\n   *\n   * By default the result is the same as dimensions of series data.\n   * But in some series data dimensions are different from coord dimensions (i.e.\n   * candlestick and boxplot). Override this method to handle those cases.\n   *\n   * Coord dimension to data dimension can be one-to-many\n   *\n   * @param {string} coordDim\n   * @return {Array.<string>} dimensions on the axis.\n   */\n  coordDimToDataDim: function (coordDim) {\n    return modelUtil.coordDimToDataDim(this.getData(), coordDim);\n  },\n\n  /**\n   * Convert data dimension to coord dimension.\n   *\n   * @param {string|number} dataDim\n   * @return {string}\n   */\n  dataDimToCoordDim: function (dataDim) {\n    return modelUtil.dataDimToCoordDim(this.getData(), dataDim);\n  },\n\n  /**\n   * Get base axis if has coordinate system and has axis.\n   * By default use coordSys.getBaseAxis();\n   * Can be overrided for some chart.\n   * @return {type} description\n   */\n  getBaseAxis: function () {\n    var coordSys = this.coordinateSystem;\n    return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n  },\n  // FIXME\n\n  /**\n   * Default tooltip formatter\n   *\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    function formatArrayValue(value) {\n      var vertially = zrUtil.reduce(value, function (vertially, val, idx) {\n        var dimItem = data.getDimensionInfo(idx);\n        return vertially |= dimItem && dimItem.tooltip !== false && dimItem.tooltipName != null;\n      }, 0);\n      var result = [];\n      var tooltipDims = modelUtil.otherDimToDataDim(data, 'tooltip');\n      tooltipDims.length ? zrUtil.each(tooltipDims, function (dimIdx) {\n        setEachItem(data.get(dimIdx, dataIndex), dimIdx);\n      }) // By default, all dims is used on tooltip.\n      : zrUtil.each(value, setEachItem);\n\n      function setEachItem(val, dimIdx) {\n        var dimInfo = data.getDimensionInfo(dimIdx); // If `dimInfo.tooltip` is not set, show tooltip.\n\n        if (!dimInfo || dimInfo.otherDims.tooltip === false) {\n          return;\n        }\n\n        var dimType = dimInfo.type;\n        var valStr = (vertially ? '- ' + (dimInfo.tooltipName || dimInfo.name) + ': ' : '') + (dimType === 'ordinal' ? val + '' : dimType === 'time' ? multipleSeries ? '' : formatTime('yyyy/MM/dd hh:mm:ss', val) : addCommas(val));\n        valStr && result.push(encodeHTML(valStr));\n      }\n\n      return (vertially ? '<br/>' : '') + result.join(vertially ? '<br/>' : ', ');\n    }\n\n    var data = get(this, 'data');\n    var value = this.getRawValue(dataIndex);\n    var formattedValue = zrUtil.isArray(value) ? formatArrayValue(value) : encodeHTML(addCommas(value));\n    var name = data.getName(dataIndex);\n    var color = data.getItemVisual(dataIndex, 'color');\n\n    if (zrUtil.isObject(color) && color.colorStops) {\n      color = (color.colorStops[0] || {}).color;\n    }\n\n    color = color || 'transparent';\n    var colorEl = getTooltipMarker(color);\n    var seriesName = this.name; // FIXME\n\n    if (seriesName === '\\0-') {\n      // Not show '-'\n      seriesName = '';\n    }\n\n    seriesName = seriesName ? encodeHTML(seriesName) + (!multipleSeries ? '<br/>' : ': ') : '';\n    return !multipleSeries ? seriesName + colorEl + (name ? encodeHTML(name) + ': ' + formattedValue : formattedValue) : colorEl + seriesName + formattedValue;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isAnimationEnabled: function () {\n    if (env.node) {\n      return false;\n    }\n\n    var animationEnabled = this.getShallow('animation');\n\n    if (animationEnabled) {\n      if (this.getData().count() > this.getShallow('animationThreshold')) {\n        animationEnabled = false;\n      }\n    }\n\n    return animationEnabled;\n  },\n  restoreData: function () {\n    set(this, 'data', get(this, 'dataBeforeProcessed').cloneShallow());\n  },\n  getColorFromPalette: function (name, scope) {\n    var ecModel = this.ecModel; // PENDING\n\n    var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n\n    if (!color) {\n      color = ecModel.getColorFromPalette(name, scope);\n    }\n\n    return color;\n  },\n\n  /**\n   * Get data indices for show tooltip content. See tooltip.\n   * @abstract\n   * @param {Array.<string>|string} dim\n   * @param {Array.<number>} value\n   * @param {module:echarts/coord/single/SingleAxis} baseAxis\n   * @return {Object} {dataIndices, nestestValue}.\n   */\n  getAxisTooltipData: null,\n\n  /**\n   * See tooltip.\n   * @abstract\n   * @param {number} dataIndex\n   * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n   */\n  getTooltipPosition: null\n});\nzrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\nzrUtil.mixin(SeriesModel, colorPaletteMixin);\nvar _default = SeriesModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1001:\n/***/ (function(module, exports) {\n\n/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\nvar arrySlice = Array.prototype.slice;\n/**\n * 事件分发器\n * @alias module:zrender/mixin/Eventful\n * @constructor\n */\n\nvar Eventful = function () {\n  this._$handlers = {};\n};\n\nEventful.prototype = {\n  constructor: Eventful,\n\n  /**\n   * 单次触发绑定，trigger后销毁\n   *\n   * @param {string} event 事件名\n   * @param {Function} handler 响应函数\n   * @param {Object} context\n   */\n  one: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: true,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 绑定事件\n   * @param {string} event 事件名\n   * @param {Function} handler 事件处理函数\n   * @param {Object} [context]\n   */\n  on: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: false,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 是否绑定了事件\n   * @param  {string}  event\n   * @return {boolean}\n   */\n  isSilent: function (event) {\n    var _h = this._$handlers;\n    return _h[event] && _h[event].length;\n  },\n\n  /**\n   * 解绑事件\n   * @param {string} event 事件名\n   * @param {Function} [handler] 事件处理函数\n   */\n  off: function (event, handler) {\n    var _h = this._$handlers;\n\n    if (!event) {\n      this._$handlers = {};\n      return this;\n    }\n\n    if (handler) {\n      if (_h[event]) {\n        var newList = [];\n\n        for (var i = 0, l = _h[event].length; i < l; i++) {\n          if (_h[event][i]['h'] != handler) {\n            newList.push(_h[event][i]);\n          }\n        }\n\n        _h[event] = newList;\n      }\n\n      if (_h[event] && _h[event].length === 0) {\n        delete _h[event];\n      }\n    } else {\n      delete _h[event];\n    }\n\n    return this;\n  },\n\n  /**\n   * 事件分发\n   *\n   * @param {string} type 事件类型\n   */\n  trigger: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 3) {\n        args = arrySlice.call(args, 1);\n      }\n\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(_h[i]['ctx']);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(_h[i]['ctx'], args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * 带有context的事件分发, 最后一个参数是事件回调的context\n   * @param {string} type 事件类型\n   */\n  triggerWithContext: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 4) {\n        args = arrySlice.call(args, 1, args.length - 1);\n      }\n\n      var ctx = args[args.length - 1];\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(ctx);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(ctx, args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(ctx, args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(ctx, args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  }\n}; // 对象可以通过 onxxxx 绑定事件\n\n/**\n * @event module:zrender/mixin/Eventful#onclick\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseout\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousemove\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousewheel\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousedown\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseup\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrag\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragstart\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragend\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragenter\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragleave\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrop\n * @type {Function}\n * @default null\n */\n\nvar _default = Eventful;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1002:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar LRU = __webpack_require__(1045);\n\nvar kCSSColorTable = {\n  'transparent': [0, 0, 0, 0],\n  'aliceblue': [240, 248, 255, 1],\n  'antiquewhite': [250, 235, 215, 1],\n  'aqua': [0, 255, 255, 1],\n  'aquamarine': [127, 255, 212, 1],\n  'azure': [240, 255, 255, 1],\n  'beige': [245, 245, 220, 1],\n  'bisque': [255, 228, 196, 1],\n  'black': [0, 0, 0, 1],\n  'blanchedalmond': [255, 235, 205, 1],\n  'blue': [0, 0, 255, 1],\n  'blueviolet': [138, 43, 226, 1],\n  'brown': [165, 42, 42, 1],\n  'burlywood': [222, 184, 135, 1],\n  'cadetblue': [95, 158, 160, 1],\n  'chartreuse': [127, 255, 0, 1],\n  'chocolate': [210, 105, 30, 1],\n  'coral': [255, 127, 80, 1],\n  'cornflowerblue': [100, 149, 237, 1],\n  'cornsilk': [255, 248, 220, 1],\n  'crimson': [220, 20, 60, 1],\n  'cyan': [0, 255, 255, 1],\n  'darkblue': [0, 0, 139, 1],\n  'darkcyan': [0, 139, 139, 1],\n  'darkgoldenrod': [184, 134, 11, 1],\n  'darkgray': [169, 169, 169, 1],\n  'darkgreen': [0, 100, 0, 1],\n  'darkgrey': [169, 169, 169, 1],\n  'darkkhaki': [189, 183, 107, 1],\n  'darkmagenta': [139, 0, 139, 1],\n  'darkolivegreen': [85, 107, 47, 1],\n  'darkorange': [255, 140, 0, 1],\n  'darkorchid': [153, 50, 204, 1],\n  'darkred': [139, 0, 0, 1],\n  'darksalmon': [233, 150, 122, 1],\n  'darkseagreen': [143, 188, 143, 1],\n  'darkslateblue': [72, 61, 139, 1],\n  'darkslategray': [47, 79, 79, 1],\n  'darkslategrey': [47, 79, 79, 1],\n  'darkturquoise': [0, 206, 209, 1],\n  'darkviolet': [148, 0, 211, 1],\n  'deeppink': [255, 20, 147, 1],\n  'deepskyblue': [0, 191, 255, 1],\n  'dimgray': [105, 105, 105, 1],\n  'dimgrey': [105, 105, 105, 1],\n  'dodgerblue': [30, 144, 255, 1],\n  'firebrick': [178, 34, 34, 1],\n  'floralwhite': [255, 250, 240, 1],\n  'forestgreen': [34, 139, 34, 1],\n  'fuchsia': [255, 0, 255, 1],\n  'gainsboro': [220, 220, 220, 1],\n  'ghostwhite': [248, 248, 255, 1],\n  'gold': [255, 215, 0, 1],\n  'goldenrod': [218, 165, 32, 1],\n  'gray': [128, 128, 128, 1],\n  'green': [0, 128, 0, 1],\n  'greenyellow': [173, 255, 47, 1],\n  'grey': [128, 128, 128, 1],\n  'honeydew': [240, 255, 240, 1],\n  'hotpink': [255, 105, 180, 1],\n  'indianred': [205, 92, 92, 1],\n  'indigo': [75, 0, 130, 1],\n  'ivory': [255, 255, 240, 1],\n  'khaki': [240, 230, 140, 1],\n  'lavender': [230, 230, 250, 1],\n  'lavenderblush': [255, 240, 245, 1],\n  'lawngreen': [124, 252, 0, 1],\n  'lemonchiffon': [255, 250, 205, 1],\n  'lightblue': [173, 216, 230, 1],\n  'lightcoral': [240, 128, 128, 1],\n  'lightcyan': [224, 255, 255, 1],\n  'lightgoldenrodyellow': [250, 250, 210, 1],\n  'lightgray': [211, 211, 211, 1],\n  'lightgreen': [144, 238, 144, 1],\n  'lightgrey': [211, 211, 211, 1],\n  'lightpink': [255, 182, 193, 1],\n  'lightsalmon': [255, 160, 122, 1],\n  'lightseagreen': [32, 178, 170, 1],\n  'lightskyblue': [135, 206, 250, 1],\n  'lightslategray': [119, 136, 153, 1],\n  'lightslategrey': [119, 136, 153, 1],\n  'lightsteelblue': [176, 196, 222, 1],\n  'lightyellow': [255, 255, 224, 1],\n  'lime': [0, 255, 0, 1],\n  'limegreen': [50, 205, 50, 1],\n  'linen': [250, 240, 230, 1],\n  'magenta': [255, 0, 255, 1],\n  'maroon': [128, 0, 0, 1],\n  'mediumaquamarine': [102, 205, 170, 1],\n  'mediumblue': [0, 0, 205, 1],\n  'mediumorchid': [186, 85, 211, 1],\n  'mediumpurple': [147, 112, 219, 1],\n  'mediumseagreen': [60, 179, 113, 1],\n  'mediumslateblue': [123, 104, 238, 1],\n  'mediumspringgreen': [0, 250, 154, 1],\n  'mediumturquoise': [72, 209, 204, 1],\n  'mediumvioletred': [199, 21, 133, 1],\n  'midnightblue': [25, 25, 112, 1],\n  'mintcream': [245, 255, 250, 1],\n  'mistyrose': [255, 228, 225, 1],\n  'moccasin': [255, 228, 181, 1],\n  'navajowhite': [255, 222, 173, 1],\n  'navy': [0, 0, 128, 1],\n  'oldlace': [253, 245, 230, 1],\n  'olive': [128, 128, 0, 1],\n  'olivedrab': [107, 142, 35, 1],\n  'orange': [255, 165, 0, 1],\n  'orangered': [255, 69, 0, 1],\n  'orchid': [218, 112, 214, 1],\n  'palegoldenrod': [238, 232, 170, 1],\n  'palegreen': [152, 251, 152, 1],\n  'paleturquoise': [175, 238, 238, 1],\n  'palevioletred': [219, 112, 147, 1],\n  'papayawhip': [255, 239, 213, 1],\n  'peachpuff': [255, 218, 185, 1],\n  'peru': [205, 133, 63, 1],\n  'pink': [255, 192, 203, 1],\n  'plum': [221, 160, 221, 1],\n  'powderblue': [176, 224, 230, 1],\n  'purple': [128, 0, 128, 1],\n  'red': [255, 0, 0, 1],\n  'rosybrown': [188, 143, 143, 1],\n  'royalblue': [65, 105, 225, 1],\n  'saddlebrown': [139, 69, 19, 1],\n  'salmon': [250, 128, 114, 1],\n  'sandybrown': [244, 164, 96, 1],\n  'seagreen': [46, 139, 87, 1],\n  'seashell': [255, 245, 238, 1],\n  'sienna': [160, 82, 45, 1],\n  'silver': [192, 192, 192, 1],\n  'skyblue': [135, 206, 235, 1],\n  'slateblue': [106, 90, 205, 1],\n  'slategray': [112, 128, 144, 1],\n  'slategrey': [112, 128, 144, 1],\n  'snow': [255, 250, 250, 1],\n  'springgreen': [0, 255, 127, 1],\n  'steelblue': [70, 130, 180, 1],\n  'tan': [210, 180, 140, 1],\n  'teal': [0, 128, 128, 1],\n  'thistle': [216, 191, 216, 1],\n  'tomato': [255, 99, 71, 1],\n  'turquoise': [64, 224, 208, 1],\n  'violet': [238, 130, 238, 1],\n  'wheat': [245, 222, 179, 1],\n  'white': [255, 255, 255, 1],\n  'whitesmoke': [245, 245, 245, 1],\n  'yellow': [255, 255, 0, 1],\n  'yellowgreen': [154, 205, 50, 1]\n};\n\nfunction clampCssByte(i) {\n  // Clamp to integer 0 .. 255.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 255 ? 255 : i;\n}\n\nfunction clampCssAngle(i) {\n  // Clamp to integer 0 .. 360.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 360 ? 360 : i;\n}\n\nfunction clampCssFloat(f) {\n  // Clamp to float 0.0 .. 1.0.\n  return f < 0 ? 0 : f > 1 ? 1 : f;\n}\n\nfunction parseCssInt(str) {\n  // int or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssByte(parseFloat(str) / 100 * 255);\n  }\n\n  return clampCssByte(parseInt(str, 10));\n}\n\nfunction parseCssFloat(str) {\n  // float or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssFloat(parseFloat(str) / 100);\n  }\n\n  return clampCssFloat(parseFloat(str));\n}\n\nfunction cssHueToRgb(m1, m2, h) {\n  if (h < 0) {\n    h += 1;\n  } else if (h > 1) {\n    h -= 1;\n  }\n\n  if (h * 6 < 1) {\n    return m1 + (m2 - m1) * h * 6;\n  }\n\n  if (h * 2 < 1) {\n    return m2;\n  }\n\n  if (h * 3 < 2) {\n    return m1 + (m2 - m1) * (2 / 3 - h) * 6;\n  }\n\n  return m1;\n}\n\nfunction lerpNumber(a, b, p) {\n  return a + (b - a) * p;\n}\n\nfunction setRgba(out, r, g, b, a) {\n  out[0] = r;\n  out[1] = g;\n  out[2] = b;\n  out[3] = a;\n  return out;\n}\n\nfunction copyRgba(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\nvar colorCache = new LRU(20);\nvar lastRemovedArr = null;\n\nfunction putToCache(colorStr, rgbaArr) {\n  // Reuse removed array\n  if (lastRemovedArr) {\n    copyRgba(lastRemovedArr, rgbaArr);\n  }\n\n  lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || rgbaArr.slice());\n}\n/**\n * @param {string} colorStr\n * @param {Array.<number>} out\n * @return {Array.<number>}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction parse(colorStr, rgbaArr) {\n  if (!colorStr) {\n    return;\n  }\n\n  rgbaArr = rgbaArr || [];\n  var cached = colorCache.get(colorStr);\n\n  if (cached) {\n    return copyRgba(rgbaArr, cached);\n  } // colorStr may be not string\n\n\n  colorStr = colorStr + ''; // Remove all whitespace, not compliant, but should just be more accepting.\n\n  var str = colorStr.replace(/ /g, '').toLowerCase(); // Color keywords (and transparent) lookup.\n\n  if (str in kCSSColorTable) {\n    copyRgba(rgbaArr, kCSSColorTable[str]);\n    putToCache(colorStr, rgbaArr);\n    return rgbaArr;\n  } // #abc and #abc123 syntax.\n\n\n  if (str.charAt(0) === '#') {\n    if (str.length === 4) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xfff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xf00) >> 4 | (iv & 0xf00) >> 8, iv & 0xf0 | (iv & 0xf0) >> 4, iv & 0xf | (iv & 0xf) << 4, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    } else if (str.length === 7) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xffffff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xff0000) >> 16, (iv & 0xff00) >> 8, iv & 0xff, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    }\n\n    return;\n  }\n\n  var op = str.indexOf('('),\n      ep = str.indexOf(')');\n\n  if (op !== -1 && ep + 1 === str.length) {\n    var fname = str.substr(0, op);\n    var params = str.substr(op + 1, ep - (op + 1)).split(',');\n    var alpha = 1; // To allow case fallthrough.\n\n    switch (fname) {\n      case 'rgba':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        alpha = parseCssFloat(params.pop());\n      // jshint ignore:line\n      // Fall through.\n\n      case 'rgb':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        setRgba(rgbaArr, parseCssInt(params[0]), parseCssInt(params[1]), parseCssInt(params[2]), alpha);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsla':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        params[3] = parseCssFloat(params[3]);\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsl':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      default:\n        return;\n    }\n  }\n\n  setRgba(rgbaArr, 0, 0, 0, 1);\n  return;\n}\n/**\n * @param {Array.<number>} hsla\n * @param {Array.<number>} rgba\n * @return {Array.<number>} rgba\n */\n\n\nfunction hsla2rgba(hsla, rgba) {\n  var h = (parseFloat(hsla[0]) % 360 + 360) % 360 / 360; // 0 .. 1\n  // NOTE(deanm): According to the CSS spec s/l should only be\n  // percentages, but we don't bother and let float or percentage.\n\n  var s = parseCssFloat(hsla[1]);\n  var l = parseCssFloat(hsla[2]);\n  var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n  var m1 = l * 2 - m2;\n  rgba = rgba || [];\n  setRgba(rgba, clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255), clampCssByte(cssHueToRgb(m1, m2, h) * 255), clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255), 1);\n\n  if (hsla.length === 4) {\n    rgba[3] = hsla[3];\n  }\n\n  return rgba;\n}\n/**\n * @param {Array.<number>} rgba\n * @return {Array.<number>} hsla\n */\n\n\nfunction rgba2hsla(rgba) {\n  if (!rgba) {\n    return;\n  } // RGB from 0 to 255\n\n\n  var R = rgba[0] / 255;\n  var G = rgba[1] / 255;\n  var B = rgba[2] / 255;\n  var vMin = Math.min(R, G, B); // Min. value of RGB\n\n  var vMax = Math.max(R, G, B); // Max. value of RGB\n\n  var delta = vMax - vMin; // Delta RGB value\n\n  var L = (vMax + vMin) / 2;\n  var H;\n  var S; // HSL results from 0 to 1\n\n  if (delta === 0) {\n    H = 0;\n    S = 0;\n  } else {\n    if (L < 0.5) {\n      S = delta / (vMax + vMin);\n    } else {\n      S = delta / (2 - vMax - vMin);\n    }\n\n    var deltaR = ((vMax - R) / 6 + delta / 2) / delta;\n    var deltaG = ((vMax - G) / 6 + delta / 2) / delta;\n    var deltaB = ((vMax - B) / 6 + delta / 2) / delta;\n\n    if (R === vMax) {\n      H = deltaB - deltaG;\n    } else if (G === vMax) {\n      H = 1 / 3 + deltaR - deltaB;\n    } else if (B === vMax) {\n      H = 2 / 3 + deltaG - deltaR;\n    }\n\n    if (H < 0) {\n      H += 1;\n    }\n\n    if (H > 1) {\n      H -= 1;\n    }\n  }\n\n  var hsla = [H * 360, S, L];\n\n  if (rgba[3] != null) {\n    hsla.push(rgba[3]);\n  }\n\n  return hsla;\n}\n/**\n * @param {string} color\n * @param {number} level\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction lift(color, level) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    for (var i = 0; i < 3; i++) {\n      if (level < 0) {\n        colorArr[i] = colorArr[i] * (1 - level) | 0;\n      } else {\n        colorArr[i] = (255 - colorArr[i]) * level + colorArr[i] | 0;\n      }\n    }\n\n    return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n  }\n}\n/**\n * @param {string} color\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction toHex(color) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + +colorArr[2]).toString(16).slice(1);\n  }\n}\n/**\n * Map value to color. Faster than lerp methods because color is represented by rgba array.\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<Array.<number>>} colors List of rgba color array\n * @param {Array.<number>} [out] Mapped gba color array\n * @return {Array.<number>} will be null/undefined if input illegal.\n */\n\n\nfunction fastLerp(normalizedValue, colors, out) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  out = out || [];\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = colors[leftIndex];\n  var rightColor = colors[rightIndex];\n  var dv = value - leftIndex;\n  out[0] = clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv));\n  out[1] = clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv));\n  out[2] = clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv));\n  out[3] = clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv));\n  return out;\n}\n/**\n * @deprecated\n */\n\n\nvar fastMapToColor = fastLerp;\n/**\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<string>} colors Color list.\n * @param {boolean=} fullOutput Default false.\n * @return {(string|Object)} Result color. If fullOutput,\n *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n * @memberOf module:zrender/util/color\n */\n\nfunction lerp(normalizedValue, colors, fullOutput) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = parse(colors[leftIndex]);\n  var rightColor = parse(colors[rightIndex]);\n  var dv = value - leftIndex;\n  var color = stringify([clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv)), clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv)), clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv)), clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv))], 'rgba');\n  return fullOutput ? {\n    color: color,\n    leftIndex: leftIndex,\n    rightIndex: rightIndex,\n    value: value\n  } : color;\n}\n/**\n * @deprecated\n */\n\n\nvar mapToColor = lerp;\n/**\n * @param {string} color\n * @param {number=} h 0 ~ 360, ignore when null.\n * @param {number=} s 0 ~ 1, ignore when null.\n * @param {number=} l 0 ~ 1, ignore when null.\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\nfunction modifyHSL(color, h, s, l) {\n  color = parse(color);\n\n  if (color) {\n    color = rgba2hsla(color);\n    h != null && (color[0] = clampCssAngle(h));\n    s != null && (color[1] = parseCssFloat(s));\n    l != null && (color[2] = parseCssFloat(l));\n    return stringify(hsla2rgba(color), 'rgba');\n  }\n}\n/**\n * @param {string} color\n * @param {number=} alpha 0 ~ 1\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\n\nfunction modifyAlpha(color, alpha) {\n  color = parse(color);\n\n  if (color && alpha != null) {\n    color[3] = clampCssFloat(alpha);\n    return stringify(color, 'rgba');\n  }\n}\n/**\n * @param {Array.<number>} arrColor like [12,33,44,0.4]\n * @param {string} type 'rgba', 'hsva', ...\n * @return {string} Result color. (If input illegal, return undefined).\n */\n\n\nfunction stringify(arrColor, type) {\n  if (!arrColor || !arrColor.length) {\n    return;\n  }\n\n  var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n\n  if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n    colorStr += ',' + arrColor[3];\n  }\n\n  return type + '(' + colorStr + ')';\n}\n\nexports.parse = parse;\nexports.lift = lift;\nexports.toHex = toHex;\nexports.fastLerp = fastLerp;\nexports.fastMapToColor = fastMapToColor;\nexports.lerp = lerp;\nexports.mapToColor = mapToColor;\nexports.modifyHSL = modifyHSL;\nexports.modifyAlpha = modifyAlpha;\nexports.stringify = stringify;\n\n/***/ }),\n\n/***/ 1003:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar graphic = __webpack_require__(980);\n\nvar BoundingRect = __webpack_require__(987);\n\n// Symbol factory\n\n/**\n * Triangle shape\n * @inner\n */\nvar Triangle = graphic.extendShape({\n  type: 'triangle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy + height);\n    path.lineTo(cx - width, cy + height);\n    path.closePath();\n  }\n});\n/**\n * Diamond shape\n * @inner\n */\n\nvar Diamond = graphic.extendShape({\n  type: 'diamond',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy);\n    path.lineTo(cx, cy + height);\n    path.lineTo(cx - width, cy);\n    path.closePath();\n  }\n});\n/**\n * Pin shape\n * @inner\n */\n\nvar Pin = graphic.extendShape({\n  type: 'pin',\n  shape: {\n    // x, y on the cusp\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var w = shape.width / 5 * 3; // Height must be larger than width\n\n    var h = Math.max(w, shape.height);\n    var r = w / 2; // Dist on y with tangent point and circle center\n\n    var dy = r * r / (h - r);\n    var cy = y - h + r + dy;\n    var angle = Math.asin(dy / r); // Dist on x with tangent point and circle center\n\n    var dx = Math.cos(angle) * r;\n    var tanX = Math.sin(angle);\n    var tanY = Math.cos(angle);\n    var cpLen = r * 0.6;\n    var cpLen2 = r * 0.7;\n    path.moveTo(x - dx, cy + dy);\n    path.arc(x, cy, r, Math.PI - angle, Math.PI * 2 + angle);\n    path.bezierCurveTo(x + dx - tanX * cpLen, cy + dy + tanY * cpLen, x, y - cpLen2, x, y);\n    path.bezierCurveTo(x, y - cpLen2, x - dx + tanX * cpLen, cy + dy + tanY * cpLen, x - dx, cy + dy);\n    path.closePath();\n  }\n});\n/**\n * Arrow shape\n * @inner\n */\n\nvar Arrow = graphic.extendShape({\n  type: 'arrow',\n  shape: {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var height = shape.height;\n    var width = shape.width;\n    var x = shape.x;\n    var y = shape.y;\n    var dx = width / 3 * 2;\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + dx, y + height);\n    ctx.lineTo(x, y + height / 4 * 3);\n    ctx.lineTo(x - dx, y + height);\n    ctx.lineTo(x, y);\n    ctx.closePath();\n  }\n});\n/**\n * Map of path contructors\n * @type {Object.<string, module:zrender/graphic/Path>}\n */\n\nvar symbolCtors = {\n  line: graphic.Line,\n  rect: graphic.Rect,\n  roundRect: graphic.Rect,\n  square: graphic.Rect,\n  circle: graphic.Circle,\n  diamond: Diamond,\n  pin: Pin,\n  arrow: Arrow,\n  triangle: Triangle\n};\nvar symbolShapeMakers = {\n  line: function (x, y, w, h, shape) {\n    // FIXME\n    shape.x1 = x;\n    shape.y1 = y + h / 2;\n    shape.x2 = x + w;\n    shape.y2 = y + h / 2;\n  },\n  rect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n  },\n  roundRect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n    shape.r = Math.min(w, h) / 4;\n  },\n  square: function (x, y, w, h, shape) {\n    var size = Math.min(w, h);\n    shape.x = x;\n    shape.y = y;\n    shape.width = size;\n    shape.height = size;\n  },\n  circle: function (x, y, w, h, shape) {\n    // Put circle in the center of square\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.r = Math.min(w, h) / 2;\n  },\n  diamond: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  pin: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  arrow: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  triangle: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  }\n};\nvar symbolBuildProxies = {};\nzrUtil.each(symbolCtors, function (Ctor, name) {\n  symbolBuildProxies[name] = new Ctor();\n});\nvar SymbolClz = graphic.extendShape({\n  type: 'symbol',\n  shape: {\n    symbolType: '',\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  beforeBrush: function () {\n    var style = this.style;\n    var shape = this.shape; // FIXME\n\n    if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n      style.textPosition = ['50%', '40%'];\n      style.textAlign = 'center';\n      style.textVerticalAlign = 'middle';\n    }\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    var symbolType = shape.symbolType;\n    var proxySymbol = symbolBuildProxies[symbolType];\n\n    if (shape.symbolType !== 'none') {\n      if (!proxySymbol) {\n        // Default rect\n        symbolType = 'rect';\n        proxySymbol = symbolBuildProxies[symbolType];\n      }\n\n      symbolShapeMakers[symbolType](shape.x, shape.y, shape.width, shape.height, proxySymbol.shape);\n      proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n    }\n  }\n}); // Provide setColor helper method to avoid determine if set the fill or stroke outside\n\nfunction symbolPathSetColor(color, innerColor) {\n  if (this.type !== 'image') {\n    var symbolStyle = this.style;\n    var symbolShape = this.shape;\n\n    if (symbolShape && symbolShape.symbolType === 'line') {\n      symbolStyle.stroke = color;\n    } else if (this.__isEmptyBrush) {\n      symbolStyle.stroke = color;\n      symbolStyle.fill = innerColor || '#fff';\n    } else {\n      // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n      symbolStyle.fill && (symbolStyle.fill = color);\n      symbolStyle.stroke && (symbolStyle.stroke = color);\n    }\n\n    this.dirty(false);\n  }\n}\n/**\n * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n * @param {string} symbolType\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @param {string} color\n * @param {boolean} [keepAspect=false] whether to keep the ratio of w/h,\n *                            for path and image only.\n */\n\n\nfunction createSymbol(symbolType, x, y, w, h, color, keepAspect) {\n  // TODO Support image object, DynamicImage.\n  var isEmpty = symbolType.indexOf('empty') === 0;\n\n  if (isEmpty) {\n    symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n  }\n\n  var symbolPath;\n\n  if (symbolType.indexOf('image://') === 0) {\n    symbolPath = graphic.makeImage(symbolType.slice(8), new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else if (symbolType.indexOf('path://') === 0) {\n    symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else {\n    symbolPath = new SymbolClz({\n      shape: {\n        symbolType: symbolType,\n        x: x,\n        y: y,\n        width: w,\n        height: h\n      }\n    });\n  }\n\n  symbolPath.__isEmptyBrush = isEmpty;\n  symbolPath.setColor = symbolPathSetColor;\n  symbolPath.setColor(color);\n  return symbolPath;\n}\n\nexports.createSymbol = createSymbol;\n\n/***/ }),\n\n/***/ 1004:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar _model = __webpack_require__(982);\n\nvar normalizeToArray = _model.normalizeToArray;\n\n/**\n * Complete dimensions by data (guess dimension).\n */\nvar each = zrUtil.each;\nvar isString = zrUtil.isString;\nvar defaults = zrUtil.defaults;\nvar OTHER_DIMS = {\n  tooltip: 1,\n  label: 1,\n  itemName: 1\n};\n/**\n * Complete the dimensions array, by user defined `dimension` and `encode`,\n * and guessing from the data structure.\n * If no 'value' dimension specified, the first no-named dimension will be\n * named as 'value'.\n *\n * @param {Array.<string>} sysDims Necessary dimensions, like ['x', 'y'], which\n *      provides not only dim template, but also default order.\n *      `name` of each item provides default coord name.\n *      [{dimsDef: []}, ...] can be specified to give names.\n * @param {Array} data Data list. [[1, 2, 3], [2, 3, 4]].\n * @param {Object} [opt]\n * @param {Array.<Object|string>} [opt.dimsDef] option.series.dimensions User defined dimensions\n *      For example: ['asdf', {name, type}, ...].\n * @param {Object} [opt.encodeDef] option.series.encode {x: 2, y: [3, 1], tooltip: [1, 2], label: 3}\n * @param {string} [opt.extraPrefix] Prefix of name when filling the left dimensions.\n * @param {string} [opt.extraFromZero] If specified, extra dim names will be:\n *                      extraPrefix + 0, extraPrefix + extraBaseIndex + 1 ...\n *                      If not specified, extra dim names will be:\n *                      extraPrefix, extraPrefix + 0, extraPrefix + 1 ...\n * @param {number} [opt.dimCount] If not specified, guess by the first data item.\n * @return {Array.<Object>} [{\n *      name: string mandatory,\n *      coordDim: string mandatory,\n *      coordDimIndex: number mandatory,\n *      type: string optional,\n *      tooltipName: string optional,\n *      otherDims: {\n *          tooltip: number optional,\n *          label: number optional\n *      },\n *      isExtraCoord: boolean true or undefined.\n *      other props ...\n * }]\n */\n\nfunction completeDimensions(sysDims, data, opt) {\n  data = data || [];\n  opt = opt || {};\n  sysDims = (sysDims || []).slice();\n  var dimsDef = (opt.dimsDef || []).slice();\n  var encodeDef = zrUtil.createHashMap(opt.encodeDef);\n  var dataDimNameMap = zrUtil.createHashMap();\n  var coordDimNameMap = zrUtil.createHashMap(); // var valueCandidate;\n\n  var result = [];\n  var dimCount = opt.dimCount;\n\n  if (dimCount == null) {\n    var value0 = retrieveValue(data[0]);\n    dimCount = Math.max(zrUtil.isArray(value0) && value0.length || 1, sysDims.length, dimsDef.length);\n    each(sysDims, function (sysDimItem) {\n      var sysDimItemDimsDef = sysDimItem.dimsDef;\n      sysDimItemDimsDef && (dimCount = Math.max(dimCount, sysDimItemDimsDef.length));\n    });\n  } // Apply user defined dims (`name` and `type`) and init result.\n\n\n  for (var i = 0; i < dimCount; i++) {\n    var dimDefItem = isString(dimsDef[i]) ? {\n      name: dimsDef[i]\n    } : dimsDef[i] || {};\n    var userDimName = dimDefItem.name;\n    var resultItem = result[i] = {\n      otherDims: {}\n    }; // Name will be applied later for avoiding duplication.\n\n    if (userDimName != null && dataDimNameMap.get(userDimName) == null) {\n      // Only if `series.dimensions` is defined in option, tooltipName\n      // will be set, and dimension will be diplayed vertically in\n      // tooltip by default.\n      resultItem.name = resultItem.tooltipName = userDimName;\n      dataDimNameMap.set(userDimName, i);\n    }\n\n    dimDefItem.type != null && (resultItem.type = dimDefItem.type);\n  } // Set `coordDim` and `coordDimIndex` by `encodeDef` and normalize `encodeDef`.\n\n\n  encodeDef.each(function (dataDims, coordDim) {\n    dataDims = encodeDef.set(coordDim, normalizeToArray(dataDims).slice());\n    each(dataDims, function (resultDimIdx, coordDimIndex) {\n      // The input resultDimIdx can be dim name or index.\n      isString(resultDimIdx) && (resultDimIdx = dataDimNameMap.get(resultDimIdx));\n\n      if (resultDimIdx != null && resultDimIdx < dimCount) {\n        dataDims[coordDimIndex] = resultDimIdx;\n        applyDim(result[resultDimIdx], coordDim, coordDimIndex);\n      }\n    });\n  }); // Apply templetes and default order from `sysDims`.\n\n  var availDimIdx = 0;\n  each(sysDims, function (sysDimItem, sysDimIndex) {\n    var coordDim;\n    var sysDimItem;\n    var sysDimItemDimsDef;\n    var sysDimItemOtherDims;\n\n    if (isString(sysDimItem)) {\n      coordDim = sysDimItem;\n      sysDimItem = {};\n    } else {\n      coordDim = sysDimItem.name;\n      sysDimItem = zrUtil.clone(sysDimItem); // `coordDimIndex` should not be set directly.\n\n      sysDimItemDimsDef = sysDimItem.dimsDef;\n      sysDimItemOtherDims = sysDimItem.otherDims;\n      sysDimItem.name = sysDimItem.coordDim = sysDimItem.coordDimIndex = sysDimItem.dimsDef = sysDimItem.otherDims = null;\n    }\n\n    var dataDims = normalizeToArray(encodeDef.get(coordDim)); // dimensions provides default dim sequences.\n\n    if (!dataDims.length) {\n      for (var i = 0; i < (sysDimItemDimsDef && sysDimItemDimsDef.length || 1); i++) {\n        while (availDimIdx < result.length && result[availDimIdx].coordDim != null) {\n          availDimIdx++;\n        }\n\n        availDimIdx < result.length && dataDims.push(availDimIdx++);\n      }\n    } // Apply templates.\n\n\n    each(dataDims, function (resultDimIdx, coordDimIndex) {\n      var resultItem = result[resultDimIdx];\n      applyDim(defaults(resultItem, sysDimItem), coordDim, coordDimIndex);\n\n      if (resultItem.name == null && sysDimItemDimsDef) {\n        resultItem.name = resultItem.tooltipName = sysDimItemDimsDef[coordDimIndex];\n      }\n\n      sysDimItemOtherDims && defaults(resultItem.otherDims, sysDimItemOtherDims);\n    });\n  }); // Make sure the first extra dim is 'value'.\n\n  var extra = opt.extraPrefix || 'value'; // Set dim `name` and other `coordDim` and other props.\n\n  for (var resultDimIdx = 0; resultDimIdx < dimCount; resultDimIdx++) {\n    var resultItem = result[resultDimIdx] = result[resultDimIdx] || {};\n    var coordDim = resultItem.coordDim;\n    coordDim == null && (resultItem.coordDim = genName(extra, coordDimNameMap, opt.extraFromZero), resultItem.coordDimIndex = 0, resultItem.isExtraCoord = true);\n    resultItem.name == null && (resultItem.name = genName(resultItem.coordDim, dataDimNameMap));\n    resultItem.type == null && guessOrdinal(data, resultDimIdx) && (resultItem.type = 'ordinal');\n  }\n\n  return result;\n\n  function applyDim(resultItem, coordDim, coordDimIndex) {\n    if (OTHER_DIMS[coordDim]) {\n      resultItem.otherDims[coordDim] = coordDimIndex;\n    } else {\n      resultItem.coordDim = coordDim;\n      resultItem.coordDimIndex = coordDimIndex;\n      coordDimNameMap.set(coordDim, true);\n    }\n  }\n\n  function genName(name, map, fromZero) {\n    if (fromZero || map.get(name) != null) {\n      var i = 0;\n\n      while (map.get(name + i) != null) {\n        i++;\n      }\n\n      name += i;\n    }\n\n    map.set(name, true);\n    return name;\n  }\n} // The rule should not be complex, otherwise user might not\n// be able to known where the data is wrong.\n\n\nvar guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {\n  for (var i = 0, len = data.length; i < len; i++) {\n    var value = retrieveValue(data[i]);\n\n    if (!zrUtil.isArray(value)) {\n      return false;\n    }\n\n    var value = value[dimIndex]; // Consider usage convenience, '1', '2' will be treated as \"number\".\n    // `isFinit('')` get `true`.\n\n    if (value != null && isFinite(value) && value !== '') {\n      return false;\n    } else if (isString(value) && value !== '-') {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nfunction retrieveValue(o) {\n  return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value : o;\n}\n\nvar _default = completeDimensions;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1005:\n/***/ (function(module, exports) {\n\nvar _default = {\n  toolbox: {\n    brush: {\n      title: {\n        rect: '矩形选择',\n        polygon: '圈选',\n        lineX: '横向选择',\n        lineY: '纵向选择',\n        keep: '保持选择',\n        clear: '清除选择'\n      }\n    },\n    dataView: {\n      title: '数据视图',\n      lang: ['数据视图', '关闭', '刷新']\n    },\n    dataZoom: {\n      title: {\n        zoom: '区域缩放',\n        back: '区域缩放还原'\n      }\n    },\n    magicType: {\n      title: {\n        line: '切换为折线图',\n        bar: '切换为柱状图',\n        stack: '切换为堆叠',\n        tiled: '切换为平铺'\n      }\n    },\n    restore: {\n      title: '还原'\n    },\n    saveAsImage: {\n      title: '保存为图片',\n      lang: ['右键另存为图片']\n    }\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1006:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar coordinateSystemCreators = {};\n\nfunction CoordinateSystemManager() {\n  this._coordinateSystems = [];\n}\n\nCoordinateSystemManager.prototype = {\n  constructor: CoordinateSystemManager,\n  create: function (ecModel, api) {\n    var coordinateSystems = [];\n    zrUtil.each(coordinateSystemCreators, function (creater, type) {\n      var list = creater.create(ecModel, api);\n      coordinateSystems = coordinateSystems.concat(list || []);\n    });\n    this._coordinateSystems = coordinateSystems;\n  },\n  update: function (ecModel, api) {\n    zrUtil.each(this._coordinateSystems, function (coordSys) {\n      // FIXME MUST have\n      coordSys.update && coordSys.update(ecModel, api);\n    });\n  },\n  getCoordinateSystems: function () {\n    return this._coordinateSystems.slice();\n  }\n};\n\nCoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n  coordinateSystemCreators[type] = coordinateSystemCreator;\n};\n\nCoordinateSystemManager.get = function (type) {\n  return coordinateSystemCreators[type];\n};\n\nvar _default = CoordinateSystemManager;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1007:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar curve = __webpack_require__(999);\n\nvar vec2 = __webpack_require__(984);\n\nvar bbox = __webpack_require__(1037);\n\nvar BoundingRect = __webpack_require__(987);\n\nvar _config = __webpack_require__(1010);\n\nvar dpr = _config.devicePixelRatio;\n\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n// TODO getTotalLength, getPointAtLength\nvar CMD = {\n  M: 1,\n  L: 2,\n  C: 3,\n  Q: 4,\n  A: 5,\n  Z: 6,\n  // Rect\n  R: 7\n}; // var CMD_MEM_SIZE = {\n//     M: 3,\n//     L: 3,\n//     C: 7,\n//     Q: 5,\n//     A: 9,\n//     R: 5,\n//     Z: 1\n// };\n\nvar min = [];\nvar max = [];\nvar min2 = [];\nvar max2 = [];\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathCos = Math.cos;\nvar mathSin = Math.sin;\nvar mathSqrt = Math.sqrt;\nvar mathAbs = Math.abs;\nvar hasTypedArray = typeof Float32Array != 'undefined';\n/**\n * @alias module:zrender/core/PathProxy\n * @constructor\n */\n\nvar PathProxy = function (notSaveData) {\n  this._saveData = !(notSaveData || false);\n\n  if (this._saveData) {\n    /**\n     * Path data. Stored as flat array\n     * @type {Array.<Object>}\n     */\n    this.data = [];\n  }\n\n  this._ctx = null;\n};\n/**\n * 快速计算Path包围盒（并不是最小包围盒）\n * @return {Object}\n */\n\n\nPathProxy.prototype = {\n  constructor: PathProxy,\n  _xi: 0,\n  _yi: 0,\n  _x0: 0,\n  _y0: 0,\n  // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n  _ux: 0,\n  _uy: 0,\n  _len: 0,\n  _lineDash: null,\n  _dashOffset: 0,\n  _dashIdx: 0,\n  _dashSum: 0,\n\n  /**\n   * @readOnly\n   */\n  setScale: function (sx, sy) {\n    this._ux = mathAbs(1 / dpr / sx) || 0;\n    this._uy = mathAbs(1 / dpr / sy) || 0;\n  },\n  getContext: function () {\n    return this._ctx;\n  },\n\n  /**\n   * @param  {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  beginPath: function (ctx) {\n    this._ctx = ctx;\n    ctx && ctx.beginPath();\n    ctx && (this.dpr = ctx.dpr); // Reset\n\n    if (this._saveData) {\n      this._len = 0;\n    }\n\n    if (this._lineDash) {\n      this._lineDash = null;\n      this._dashOffset = 0;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  moveTo: function (x, y) {\n    this.addData(CMD.M, x, y);\n    this._ctx && this._ctx.moveTo(x, y); // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n    // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n    // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n    // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n\n    this._x0 = x;\n    this._y0 = y;\n    this._xi = x;\n    this._yi = y;\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  lineTo: function (x, y) {\n    var exceedUnit = mathAbs(x - this._xi) > this._ux || mathAbs(y - this._yi) > this._uy // Force draw the first segment\n    || this._len < 5;\n    this.addData(CMD.L, x, y);\n\n    if (this._ctx && exceedUnit) {\n      this._needsDash() ? this._dashedLineTo(x, y) : this._ctx.lineTo(x, y);\n    }\n\n    if (exceedUnit) {\n      this._xi = x;\n      this._yi = y;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @param  {number} x3\n   * @param  {number} y3\n   * @return {module:zrender/core/PathProxy}\n   */\n  bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n    this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3) : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n    }\n\n    this._xi = x3;\n    this._yi = y3;\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @return {module:zrender/core/PathProxy}\n   */\n  quadraticCurveTo: function (x1, y1, x2, y2) {\n    this.addData(CMD.Q, x1, y1, x2, y2);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2) : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n    }\n\n    this._xi = x2;\n    this._yi = y2;\n    return this;\n  },\n\n  /**\n   * @param  {number} cx\n   * @param  {number} cy\n   * @param  {number} r\n   * @param  {number} startAngle\n   * @param  {number} endAngle\n   * @param  {boolean} anticlockwise\n   * @return {module:zrender/core/PathProxy}\n   */\n  arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n    this.addData(CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1);\n    this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n    this._xi = mathCos(endAngle) * r + cx;\n    this._yi = mathSin(endAngle) * r + cx;\n    return this;\n  },\n  // TODO\n  arcTo: function (x1, y1, x2, y2, radius) {\n    if (this._ctx) {\n      this._ctx.arcTo(x1, y1, x2, y2, radius);\n    }\n\n    return this;\n  },\n  // TODO\n  rect: function (x, y, w, h) {\n    this._ctx && this._ctx.rect(x, y, w, h);\n    this.addData(CMD.R, x, y, w, h);\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/PathProxy}\n   */\n  closePath: function () {\n    this.addData(CMD.Z);\n    var ctx = this._ctx;\n    var x0 = this._x0;\n    var y0 = this._y0;\n\n    if (ctx) {\n      this._needsDash() && this._dashedLineTo(x0, y0);\n      ctx.closePath();\n    }\n\n    this._xi = x0;\n    this._yi = y0;\n    return this;\n  },\n\n  /**\n   * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n   * stroke 同样\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  fill: function (ctx) {\n    ctx && ctx.fill();\n    this.toStatic();\n  },\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  stroke: function (ctx) {\n    ctx && ctx.stroke();\n    this.toStatic();\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDash: function (lineDash) {\n    if (lineDash instanceof Array) {\n      this._lineDash = lineDash;\n      this._dashIdx = 0;\n      var lineDashSum = 0;\n\n      for (var i = 0; i < lineDash.length; i++) {\n        lineDashSum += lineDash[i];\n      }\n\n      this._dashSum = lineDashSum;\n    }\n\n    return this;\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDashOffset: function (offset) {\n    this._dashOffset = offset;\n    return this;\n  },\n\n  /**\n   *\n   * @return {boolean}\n   */\n  len: function () {\n    return this._len;\n  },\n\n  /**\n   * 直接设置 Path 数据\n   */\n  setData: function (data) {\n    var len = data.length;\n\n    if (!(this.data && this.data.length == len) && hasTypedArray) {\n      this.data = new Float32Array(len);\n    }\n\n    for (var i = 0; i < len; i++) {\n      this.data[i] = data[i];\n    }\n\n    this._len = len;\n  },\n\n  /**\n   * 添加子路径\n   * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n   */\n  appendPath: function (path) {\n    if (!(path instanceof Array)) {\n      path = [path];\n    }\n\n    var len = path.length;\n    var appendSize = 0;\n    var offset = this._len;\n\n    for (var i = 0; i < len; i++) {\n      appendSize += path[i].len();\n    }\n\n    if (hasTypedArray && this.data instanceof Float32Array) {\n      this.data = new Float32Array(offset + appendSize);\n    }\n\n    for (var i = 0; i < len; i++) {\n      var appendPathData = path[i].data;\n\n      for (var k = 0; k < appendPathData.length; k++) {\n        this.data[offset++] = appendPathData[k];\n      }\n    }\n\n    this._len = offset;\n  },\n\n  /**\n   * 填充 Path 数据。\n   * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n   */\n  addData: function (cmd) {\n    if (!this._saveData) {\n      return;\n    }\n\n    var data = this.data;\n\n    if (this._len + arguments.length > data.length) {\n      // 因为之前的数组已经转换成静态的 Float32Array\n      // 所以不够用时需要扩展一个新的动态数组\n      this._expandData();\n\n      data = this.data;\n    }\n\n    for (var i = 0; i < arguments.length; i++) {\n      data[this._len++] = arguments[i];\n    }\n\n    this._prevCmd = cmd;\n  },\n  _expandData: function () {\n    // Only if data is Float32Array\n    if (!(this.data instanceof Array)) {\n      var newData = [];\n\n      for (var i = 0; i < this._len; i++) {\n        newData[i] = this.data[i];\n      }\n\n      this.data = newData;\n    }\n  },\n\n  /**\n   * If needs js implemented dashed line\n   * @return {boolean}\n   * @private\n   */\n  _needsDash: function () {\n    return this._lineDash;\n  },\n  _dashedLineTo: function (x1, y1) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    var dist = mathSqrt(dx * dx + dy * dy);\n    var x = x0;\n    var y = y0;\n    var dash;\n    var nDash = lineDash.length;\n    var idx;\n    dx /= dist;\n    dy /= dist;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum;\n    x -= offset * dx;\n    y -= offset * dy;\n\n    while (dx > 0 && x <= x1 || dx < 0 && x >= x1 || dx == 0 && (dy > 0 && y <= y1 || dy < 0 && y >= y1)) {\n      idx = this._dashIdx;\n      dash = lineDash[idx];\n      x += dx * dash;\n      y += dy * dash;\n      this._dashIdx = (idx + 1) % nDash; // Skip positive offset\n\n      if (dx > 0 && x < x0 || dx < 0 && x > x0 || dy > 0 && y < y0 || dy < 0 && y > y0) {\n        continue;\n      }\n\n      ctx[idx % 2 ? 'moveTo' : 'lineTo'](dx >= 0 ? mathMin(x, x1) : mathMax(x, x1), dy >= 0 ? mathMin(y, y1) : mathMax(y, y1));\n    } // Offset for next lineTo\n\n\n    dx = x - x1;\n    dy = y - y1;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  // Not accurate dashed line to\n  _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var t;\n    var dx;\n    var dy;\n    var cubicAt = curve.cubicAt;\n    var bezierLen = 0;\n    var idx = this._dashIdx;\n    var nDash = lineDash.length;\n    var x;\n    var y;\n    var tmpLen = 0;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum; // Bezier approx length\n\n    for (t = 0; t < 1; t += 0.1) {\n      dx = cubicAt(x0, x1, x2, x3, t + 0.1) - cubicAt(x0, x1, x2, x3, t);\n      dy = cubicAt(y0, y1, y2, y3, t + 0.1) - cubicAt(y0, y1, y2, y3, t);\n      bezierLen += mathSqrt(dx * dx + dy * dy);\n    } // Find idx after add offset\n\n\n    for (; idx < nDash; idx++) {\n      tmpLen += lineDash[idx];\n\n      if (tmpLen > offset) {\n        break;\n      }\n    }\n\n    t = (tmpLen - offset) / bezierLen;\n\n    while (t <= 1) {\n      x = cubicAt(x0, x1, x2, x3, t);\n      y = cubicAt(y0, y1, y2, y3, t); // Use line to approximate dashed bezier\n      // Bad result if dash is long\n\n      idx % 2 ? ctx.moveTo(x, y) : ctx.lineTo(x, y);\n      t += lineDash[idx] / bezierLen;\n      idx = (idx + 1) % nDash;\n    } // Finish the last segment and calculate the new offset\n\n\n    idx % 2 !== 0 && ctx.lineTo(x3, y3);\n    dx = x3 - x;\n    dy = y3 - y;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  _dashedQuadraticTo: function (x1, y1, x2, y2) {\n    // Convert quadratic to cubic using degree elevation\n    var x3 = x2;\n    var y3 = y2;\n    x2 = (x2 + 2 * x1) / 3;\n    y2 = (y2 + 2 * y1) / 3;\n    x1 = (this._xi + 2 * x1) / 3;\n    y1 = (this._yi + 2 * y1) / 3;\n\n    this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n  },\n\n  /**\n   * 转成静态的 Float32Array 减少堆内存占用\n   * Convert dynamic array to static Float32Array\n   */\n  toStatic: function () {\n    var data = this.data;\n\n    if (data instanceof Array) {\n      data.length = this._len;\n\n      if (hasTypedArray) {\n        this.data = new Float32Array(data);\n      }\n    }\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n    max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n    var data = this.data;\n    var xi = 0;\n    var yi = 0;\n    var x0 = 0;\n    var y0 = 0;\n\n    for (var i = 0; i < data.length;) {\n      var cmd = data[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = data[i];\n        yi = data[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n          // 在 closePath 的时候使用\n          x0 = data[i++];\n          y0 = data[i++];\n          xi = x0;\n          yi = y0;\n          min2[0] = x0;\n          min2[1] = y0;\n          max2[0] = x0;\n          max2[1] = y0;\n          break;\n\n        case CMD.L:\n          bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.C:\n          bbox.fromCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.Q:\n          bbox.fromQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.A:\n          // TODO Arc 判断的开销比较大\n          var cx = data[i++];\n          var cy = data[i++];\n          var rx = data[i++];\n          var ry = data[i++];\n          var startAngle = data[i++];\n          var endAngle = data[i++] + startAngle; // TODO Arc 旋转\n\n          var psi = data[i++];\n          var anticlockwise = 1 - data[i++];\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(startAngle) * rx + cx;\n            y0 = mathSin(startAngle) * ry + cy;\n          }\n\n          bbox.fromArc(cx, cy, rx, ry, startAngle, endAngle, anticlockwise, min2, max2);\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = data[i++];\n          y0 = yi = data[i++];\n          var width = data[i++];\n          var height = data[i++]; // Use fromLine\n\n          bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n          break;\n\n        case CMD.Z:\n          xi = x0;\n          yi = y0;\n          break;\n      } // Union\n\n\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * Rebuild path from current data\n   * Rebuild path will not consider javascript implemented line dash.\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  rebuildPath: function (ctx) {\n    var d = this.data;\n    var x0, y0;\n    var xi, yi;\n    var x, y;\n    var ux = this._ux;\n    var uy = this._uy;\n    var len = this._len;\n\n    for (var i = 0; i < len;) {\n      var cmd = d[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = d[i];\n        yi = d[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          x0 = xi = d[i++];\n          y0 = yi = d[i++];\n          ctx.moveTo(xi, yi);\n          break;\n\n        case CMD.L:\n          x = d[i++];\n          y = d[i++]; // Not draw too small seg between\n\n          if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n            ctx.lineTo(x, y);\n            xi = x;\n            yi = y;\n          }\n\n          break;\n\n        case CMD.C:\n          ctx.bezierCurveTo(d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.Q:\n          ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.A:\n          var cx = d[i++];\n          var cy = d[i++];\n          var rx = d[i++];\n          var ry = d[i++];\n          var theta = d[i++];\n          var dTheta = d[i++];\n          var psi = d[i++];\n          var fs = d[i++];\n          var r = rx > ry ? rx : ry;\n          var scaleX = rx > ry ? 1 : rx / ry;\n          var scaleY = rx > ry ? ry / rx : 1;\n          var isEllipse = Math.abs(rx - ry) > 1e-3;\n          var endAngle = theta + dTheta;\n\n          if (isEllipse) {\n            ctx.translate(cx, cy);\n            ctx.rotate(psi);\n            ctx.scale(scaleX, scaleY);\n            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n            ctx.scale(1 / scaleX, 1 / scaleY);\n            ctx.rotate(-psi);\n            ctx.translate(-cx, -cy);\n          } else {\n            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n          }\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(theta) * rx + cx;\n            y0 = mathSin(theta) * ry + cy;\n          }\n\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = d[i];\n          y0 = yi = d[i + 1];\n          ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n          break;\n\n        case CMD.Z:\n          ctx.closePath();\n          xi = x0;\n          yi = y0;\n      }\n    }\n  }\n};\nPathProxy.CMD = CMD;\nvar _default = PathProxy;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1008:\n/***/ (function(module, exports) {\n\nvar ORIGIN_METHOD = '\\0__throttleOriginMethod';\nvar RATE = '\\0__throttleRate';\nvar THROTTLE_TYPE = '\\0__throttleType';\n/**\n * @public\n * @param {(Function)} fn\n * @param {number} [delay=0] Unit: ms.\n * @param {boolean} [debounce=false]\n *        true: If call interval less than `delay`, only the last call works.\n *        false: If call interval less than `delay, call works on fixed rate.\n * @return {(Function)} throttled fn.\n */\n\nfunction throttle(fn, delay, debounce) {\n  var currCall;\n  var lastCall = 0;\n  var lastExec = 0;\n  var timer = null;\n  var diff;\n  var scope;\n  var args;\n  var debounceNextCall;\n  delay = delay || 0;\n\n  function exec() {\n    lastExec = new Date().getTime();\n    timer = null;\n    fn.apply(scope, args || []);\n  }\n\n  var cb = function () {\n    currCall = new Date().getTime();\n    scope = this;\n    args = arguments;\n    var thisDelay = debounceNextCall || delay;\n    var thisDebounce = debounceNextCall || debounce;\n    debounceNextCall = null;\n    diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\n    clearTimeout(timer);\n\n    if (thisDebounce) {\n      timer = setTimeout(exec, thisDelay);\n    } else {\n      if (diff >= 0) {\n        exec();\n      } else {\n        timer = setTimeout(exec, -diff);\n      }\n    }\n\n    lastCall = currCall;\n  };\n  /**\n   * Clear throttle.\n   * @public\n   */\n\n\n  cb.clear = function () {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  };\n  /**\n   * Enable debounce once.\n   */\n\n\n  cb.debounceNextCall = function (debounceDelay) {\n    debounceNextCall = debounceDelay;\n  };\n\n  return cb;\n}\n/**\n * Create throttle method or update throttle rate.\n *\n * @example\n * ComponentView.prototype.render = function () {\n *     ...\n *     throttle.createOrUpdate(\n *         this,\n *         '_dispatchAction',\n *         this.model.get('throttle'),\n *         'fixRate'\n *     );\n * };\n * ComponentView.prototype.remove = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n * ComponentView.prototype.dispose = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n * @param {number} [rate]\n * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n * @return {Function} throttled function.\n */\n\n\nfunction createOrUpdate(obj, fnAttr, rate, throttleType) {\n  var fn = obj[fnAttr];\n\n  if (!fn) {\n    return;\n  }\n\n  var originFn = fn[ORIGIN_METHOD] || fn;\n  var lastThrottleType = fn[THROTTLE_TYPE];\n  var lastRate = fn[RATE];\n\n  if (lastRate !== rate || lastThrottleType !== throttleType) {\n    if (rate == null || !throttleType) {\n      return obj[fnAttr] = originFn;\n    }\n\n    fn = obj[fnAttr] = throttle(originFn, rate, throttleType === 'debounce');\n    fn[ORIGIN_METHOD] = originFn;\n    fn[THROTTLE_TYPE] = throttleType;\n    fn[RATE] = rate;\n  }\n\n  return fn;\n}\n/**\n * Clear throttle. Example see throttle.createOrUpdate.\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n */\n\n\nfunction clear(obj, fnAttr) {\n  var fn = obj[fnAttr];\n\n  if (fn && fn[ORIGIN_METHOD]) {\n    obj[fnAttr] = fn[ORIGIN_METHOD];\n  }\n}\n\nexports.throttle = throttle;\nexports.createOrUpdate = createOrUpdate;\nexports.clear = clear;\n\n/***/ }),\n\n/***/ 1009:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar Element = __webpack_require__(1043);\n\nvar BoundingRect = __webpack_require__(987);\n\n/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/container/Group');\n *     var Circle = require('zrender/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n/**\n * @alias module:zrender/graphic/Group\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @extends module:zrender/mixin/Eventful\n */\nvar Group = function (opts) {\n  opts = opts || {};\n  Element.call(this, opts);\n\n  for (var key in opts) {\n    if (opts.hasOwnProperty(key)) {\n      this[key] = opts[key];\n    }\n  }\n\n  this._children = [];\n  this.__storage = null;\n  this.__dirty = true;\n};\n\nGroup.prototype = {\n  constructor: Group,\n  isGroup: true,\n\n  /**\n   * @type {string}\n   */\n  type: 'group',\n\n  /**\n   * 所有子孙元素是否响应鼠标事件\n   * @name module:/zrender/container/Group#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * @return {Array.<module:zrender/Element>}\n   */\n  children: function () {\n    return this._children.slice();\n  },\n\n  /**\n   * 获取指定 index 的儿子节点\n   * @param  {number} idx\n   * @return {module:zrender/Element}\n   */\n  childAt: function (idx) {\n    return this._children[idx];\n  },\n\n  /**\n   * 获取指定名字的儿子节点\n   * @param  {string} name\n   * @return {module:zrender/Element}\n   */\n  childOfName: function (name) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      if (children[i].name === name) {\n        return children[i];\n      }\n    }\n  },\n\n  /**\n   * @return {number}\n   */\n  childCount: function () {\n    return this._children.length;\n  },\n\n  /**\n   * 添加子节点到最后\n   * @param {module:zrender/Element} child\n   */\n  add: function (child) {\n    if (child && child !== this && child.parent !== this) {\n      this._children.push(child);\n\n      this._doAdd(child);\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加子节点在 nextSibling 之前\n   * @param {module:zrender/Element} child\n   * @param {module:zrender/Element} nextSibling\n   */\n  addBefore: function (child, nextSibling) {\n    if (child && child !== this && child.parent !== this && nextSibling && nextSibling.parent === this) {\n      var children = this._children;\n      var idx = children.indexOf(nextSibling);\n\n      if (idx >= 0) {\n        children.splice(idx, 0, child);\n\n        this._doAdd(child);\n      }\n    }\n\n    return this;\n  },\n  _doAdd: function (child) {\n    if (child.parent) {\n      child.parent.remove(child);\n    }\n\n    child.parent = this;\n    var storage = this.__storage;\n    var zr = this.__zr;\n\n    if (storage && storage !== child.__storage) {\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n  },\n\n  /**\n   * 移除子节点\n   * @param {module:zrender/Element} child\n   */\n  remove: function (child) {\n    var zr = this.__zr;\n    var storage = this.__storage;\n    var children = this._children;\n    var idx = zrUtil.indexOf(children, child);\n\n    if (idx < 0) {\n      return this;\n    }\n\n    children.splice(idx, 1);\n    child.parent = null;\n\n    if (storage) {\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n    return this;\n  },\n\n  /**\n   * 移除所有子节点\n   */\n  removeAll: function () {\n    var children = this._children;\n    var storage = this.__storage;\n    var child;\n    var i;\n\n    for (i = 0; i < children.length; i++) {\n      child = children[i];\n\n      if (storage) {\n        storage.delFromStorage(child);\n\n        if (child instanceof Group) {\n          child.delChildrenFromStorage(storage);\n        }\n      }\n\n      child.parent = null;\n    }\n\n    children.length = 0;\n    return this;\n  },\n\n  /**\n   * 遍历所有子节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  eachChild: function (cb, context) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n      cb.call(context, child, i);\n    }\n\n    return this;\n  },\n\n  /**\n   * 深度优先遍历所有子孙节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      cb.call(context, child);\n\n      if (child.type === 'group') {\n        child.traverse(cb, context);\n      }\n    }\n\n    return this;\n  },\n  addChildrenToStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n  },\n  delChildrenFromStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n  },\n  dirty: function () {\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh();\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function (includeChildren) {\n    // TODO Caching\n    var rect = null;\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var children = includeChildren || this._children;\n    var tmpMat = [];\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n\n      if (child.ignore || child.invisible) {\n        continue;\n      }\n\n      var childRect = child.getBoundingRect();\n      var transform = child.getLocalTransform(tmpMat); // TODO\n      // The boundingRect cacluated by transforming original\n      // rect may be bigger than the actual bundingRect when rotation\n      // is used. (Consider a circle rotated aginst its center, where\n      // the actual boundingRect should be the same as that not be\n      // rotated.) But we can not find better approach to calculate\n      // actual boundingRect yet, considering performance.\n\n      if (transform) {\n        tmpRect.copy(childRect);\n        tmpRect.applyTransform(transform);\n        rect = rect || tmpRect.clone();\n        rect.union(tmpRect);\n      } else {\n        rect = rect || childRect.clone();\n        rect.union(childRect);\n      }\n    }\n\n    return rect || tmpRect;\n  }\n};\nzrUtil.inherits(Group, Element);\nvar _default = Group;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1010:\n/***/ (function(module, exports) {\n\nvar dpr = 1; // If in browser environment\n\nif (typeof window !== 'undefined') {\n  dpr = Math.max(window.devicePixelRatio || 1, 1);\n}\n/**\n * config默认配置项\n * @exports zrender/config\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n/**\n * debug日志选项：catchBrushException为true下有效\n * 0 : 不生成debug数据，发布用\n * 1 : 异常抛出，调试用\n * 2 : 控制台输出，调试用\n */\n\n\nvar debugMode = 0; // retina 屏幕优化\n\nvar devicePixelRatio = dpr;\nexports.debugMode = debugMode;\nexports.devicePixelRatio = devicePixelRatio;\n\n/***/ }),\n\n/***/ 1011:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\n// TODO Parse shadow style\n// TODO Only shallow path support\nfunction _default(properties) {\n  // Normalize\n  for (var i = 0; i < properties.length; i++) {\n    if (!properties[i][1]) {\n      properties[i][1] = properties[i][0];\n    }\n  }\n\n  return function (model, excludes, includes) {\n    var style = {};\n\n    for (var i = 0; i < properties.length; i++) {\n      var propName = properties[i][1];\n\n      if (excludes && zrUtil.indexOf(excludes, propName) >= 0 || includes && zrUtil.indexOf(includes, propName) < 0) {\n        continue;\n      }\n\n      var val = model.getShallow(propName);\n\n      if (val != null) {\n        style[properties[i][0]] = val;\n      }\n    }\n\n    return style;\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1012:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar Group = __webpack_require__(1009);\n\nvar componentUtil = __webpack_require__(1027);\n\nvar clazzUtil = __webpack_require__(992);\n\nvar modelUtil = __webpack_require__(982);\n\nfunction Chart() {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewChart');\n}\n\nChart.prototype = {\n  type: 'chart',\n\n  /**\n   * Init the chart\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  init: function (ecModel, api) {},\n\n  /**\n   * Render the chart\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  render: function (seriesModel, ecModel, api, payload) {},\n\n  /**\n   * Highlight series or specified data item\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  highlight: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n  },\n\n  /**\n   * Downplay series or specified data item\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  downplay: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'normal');\n  },\n\n  /**\n   * Remove self\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  remove: function (ecModel, api) {\n    this.group.removeAll();\n  },\n\n  /**\n   * Dispose self\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  dispose: function () {}\n  /**\n   * The view contains the given point.\n   * @interface\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  // containPoint: function () {}\n\n};\nvar chartProto = Chart.prototype;\n\nchartProto.updateView = chartProto.updateLayout = chartProto.updateVisual = function (seriesModel, ecModel, api, payload) {\n  this.render(seriesModel, ecModel, api, payload);\n};\n/**\n * Set state of single element\n * @param  {module:zrender/Element} el\n * @param  {string} state\n */\n\n\nfunction elSetState(el, state) {\n  if (el) {\n    el.trigger(state);\n\n    if (el.type === 'group') {\n      for (var i = 0; i < el.childCount(); i++) {\n        elSetState(el.childAt(i), state);\n      }\n    }\n  }\n}\n/**\n * @param  {module:echarts/data/List} data\n * @param  {Object} payload\n * @param  {string} state 'normal'|'emphasis'\n * @inner\n */\n\n\nfunction toggleHighlight(data, payload, state) {\n  var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n  if (dataIndex != null) {\n    zrUtil.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n      elSetState(data.getItemGraphicEl(dataIdx), state);\n    });\n  } else {\n    data.eachItemGraphicEl(function (el) {\n      elSetState(el, state);\n    });\n  }\n} // Enable Chart.extend.\n\n\nclazzUtil.enableClassExtend(Chart, ['dispose']); // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Chart, {\n  registerWhenExtend: true\n});\nvar _default = Chart;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1013:\n/***/ (function(module, exports) {\n\nfunction defaultKeyGetter(item) {\n  return item;\n}\n/**\n * @param {Array} oldArr\n * @param {Array} newArr\n * @param {Function} oldKeyGetter\n * @param {Function} newKeyGetter\n * @param {Object} [context] Can be visited by this.context in callback.\n */\n\n\nfunction DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter, context) {\n  this._old = oldArr;\n  this._new = newArr;\n  this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n  this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n  this.context = context;\n}\n\nDataDiffer.prototype = {\n  constructor: DataDiffer,\n\n  /**\n   * Callback function when add a data\n   */\n  add: function (func) {\n    this._add = func;\n    return this;\n  },\n\n  /**\n   * Callback function when update a data\n   */\n  update: function (func) {\n    this._update = func;\n    return this;\n  },\n\n  /**\n   * Callback function when remove a data\n   */\n  remove: function (func) {\n    this._remove = func;\n    return this;\n  },\n  execute: function () {\n    var oldArr = this._old;\n    var newArr = this._new;\n    var oldDataIndexMap = {};\n    var newDataIndexMap = {};\n    var oldDataKeyArr = [];\n    var newDataKeyArr = [];\n    var i;\n    initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, '_oldKeyGetter', this);\n    initIndexMap(newArr, newDataIndexMap, newDataKeyArr, '_newKeyGetter', this); // Travel by inverted order to make sure order consistency\n    // when duplicate keys exists (consider newDataIndex.pop() below).\n    // For performance consideration, these code below do not look neat.\n\n    for (i = 0; i < oldArr.length; i++) {\n      var key = oldDataKeyArr[i];\n      var idx = newDataIndexMap[key]; // idx can never be empty array here. see 'set null' logic below.\n\n      if (idx != null) {\n        // Consider there is duplicate key (for example, use dataItem.name as key).\n        // We should make sure every item in newArr and oldArr can be visited.\n        var len = idx.length;\n\n        if (len) {\n          len === 1 && (newDataIndexMap[key] = null);\n          idx = idx.unshift();\n        } else {\n          newDataIndexMap[key] = null;\n        }\n\n        this._update && this._update(idx, i);\n      } else {\n        this._remove && this._remove(i);\n      }\n    }\n\n    for (var i = 0; i < newDataKeyArr.length; i++) {\n      var key = newDataKeyArr[i];\n\n      if (newDataIndexMap.hasOwnProperty(key)) {\n        var idx = newDataIndexMap[key];\n\n        if (idx == null) {\n          continue;\n        } // idx can never be empty array here. see 'set null' logic above.\n\n\n        if (!idx.length) {\n          this._add && this._add(idx);\n        } else {\n          for (var j = 0, len = idx.length; j < len; j++) {\n            this._add && this._add(idx[j]);\n          }\n        }\n      }\n    }\n  }\n};\n\nfunction initIndexMap(arr, map, keyArr, keyGetterName, dataDiffer) {\n  for (var i = 0; i < arr.length; i++) {\n    // Add prefix to avoid conflict with Object.prototype.\n    var key = '_ec_' + dataDiffer[keyGetterName](arr[i], i);\n    var existence = map[key];\n\n    if (existence == null) {\n      keyArr.push(key);\n      map[key] = i;\n    } else {\n      if (!existence.length) {\n        map[key] = existence = [existence];\n      }\n\n      existence.push(i);\n    }\n  }\n}\n\nvar _default = DataDiffer;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1014:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar clazzUtil = __webpack_require__(992);\n\n/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n/**\n * @param {Object} [setting]\n */\nfunction Scale(setting) {\n  this._setting = setting || {};\n  /**\n   * Extent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._extent = [Infinity, -Infinity];\n  /**\n   * Step is calculated in adjustExtent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._interval = 0;\n  this.init && this.init.apply(this, arguments);\n}\n/**\n * Parse input val to valid inner number.\n * @param {*} val\n * @return {number}\n */\n\n\nScale.prototype.parse = function (val) {\n  // Notice: This would be a trap here, If the implementation\n  // of this method depends on extent, and this method is used\n  // before extent set (like in dataZoom), it would be wrong.\n  // Nevertheless, parse does not depend on extent generally.\n  return val;\n};\n\nScale.prototype.getSetting = function (name) {\n  return this._setting[name];\n};\n\nScale.prototype.contain = function (val) {\n  var extent = this._extent;\n  return val >= extent[0] && val <= extent[1];\n};\n/**\n * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.normalize = function (val) {\n  var extent = this._extent;\n\n  if (extent[1] === extent[0]) {\n    return 0.5;\n  }\n\n  return (val - extent[0]) / (extent[1] - extent[0]);\n};\n/**\n * Scale normalized value\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.scale = function (val) {\n  var extent = this._extent;\n  return val * (extent[1] - extent[0]) + extent[0];\n};\n/**\n * Set extent from data\n * @param {Array.<number>} other\n */\n\n\nScale.prototype.unionExtent = function (other) {\n  var extent = this._extent;\n  other[0] < extent[0] && (extent[0] = other[0]);\n  other[1] > extent[1] && (extent[1] = other[1]); // not setExtent because in log axis it may transformed to power\n  // this.setExtent(extent[0], extent[1]);\n};\n/**\n * Set extent from data\n * @param {module:echarts/data/List} data\n * @param {string} dim\n */\n\n\nScale.prototype.unionExtentFromData = function (data, dim) {\n  this.unionExtent(data.getDataExtent(dim, true));\n};\n/**\n * Get extent\n * @return {Array.<number>}\n */\n\n\nScale.prototype.getExtent = function () {\n  return this._extent.slice();\n};\n/**\n * Set extent\n * @param {number} start\n * @param {number} end\n */\n\n\nScale.prototype.setExtent = function (start, end) {\n  var thisExtent = this._extent;\n\n  if (!isNaN(start)) {\n    thisExtent[0] = start;\n  }\n\n  if (!isNaN(end)) {\n    thisExtent[1] = end;\n  }\n};\n/**\n * @return {Array.<string>}\n */\n\n\nScale.prototype.getTicksLabels = function () {\n  var labels = [];\n  var ticks = this.getTicks();\n\n  for (var i = 0; i < ticks.length; i++) {\n    labels.push(this.getLabel(ticks[i]));\n  }\n\n  return labels;\n};\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\n\n\nScale.prototype.isBlank = function () {\n  return this._isBlank;\n},\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\nScale.prototype.setBlank = function (isBlank) {\n  this._isBlank = isBlank;\n};\nclazzUtil.enableClassExtend(Scale);\nclazzUtil.enableClassManagement(Scale, {\n  registerWhenExtend: true\n});\nvar _default = Scale;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1015:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar Model = __webpack_require__(989);\n\nvar each = zrUtil.each;\nvar curry = zrUtil.curry; // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n// allAxesInfo should be updated when setOption performed.\n\nfunction collect(ecModel, api) {\n  var result = {\n    /**\n     * key: makeKey(axis.model)\n     * value: {\n     *      axis,\n     *      coordSys,\n     *      axisPointerModel,\n     *      triggerTooltip,\n     *      involveSeries,\n     *      snap,\n     *      seriesModels,\n     *      seriesDataCount\n     * }\n     */\n    axesInfo: {},\n    seriesInvolved: false,\n\n    /**\n     * key: makeKey(coordSys.model)\n     * value: Object: key makeKey(axis.model), value: axisInfo\n     */\n    coordSysAxesInfo: {},\n    coordSysMap: {}\n  };\n  collectAxesInfo(result, ecModel, api); // Check seriesInvolved for performance, in case too many series in some chart.\n\n  result.seriesInvolved && collectSeriesInfo(result, ecModel);\n  return result;\n}\n\nfunction collectAxesInfo(result, ecModel, api) {\n  var globalTooltipModel = ecModel.getComponent('tooltip');\n  var globalAxisPointerModel = ecModel.getComponent('axisPointer'); // links can only be set on global.\n\n  var linksOption = globalAxisPointerModel.get('link', true) || [];\n  var linkGroups = []; // Collect axes info.\n\n  each(api.getCoordinateSystems(), function (coordSys) {\n    // Some coordinate system do not support axes, like geo.\n    if (!coordSys.axisPointerEnabled) {\n      return;\n    }\n\n    var coordSysKey = makeKey(coordSys.model);\n    var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n    result.coordSysMap[coordSysKey] = coordSys; // Set tooltip (like 'cross') is a convienent way to show axisPointer\n    // for user. So we enable seting tooltip on coordSys model.\n\n    var coordSysModel = coordSys.model;\n    var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n    each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null)); // If axis tooltip used, choose tooltip axis for each coordSys.\n    // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n\n    if (coordSys.getTooltipAxes && globalTooltipModel // If tooltip.showContent is set as false, tooltip will not\n    // show but axisPointer will show as normal.\n    && baseTooltipModel.get('show')) {\n      // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n      // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n      var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n      var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n      var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n\n      if (triggerAxis || cross) {\n        each(tooltipAxes.baseAxes, curry(saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis));\n      }\n\n      if (cross) {\n        each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n      }\n    } // fromTooltip: true | false | 'cross'\n    // triggerTooltip: true | false | null\n\n\n    function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n      var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n      var axisPointerShow = axisPointerModel.get('show');\n\n      if (!axisPointerShow || axisPointerShow === 'auto' && !fromTooltip && !isHandleTrigger(axisPointerModel)) {\n        return;\n      }\n\n      if (triggerTooltip == null) {\n        triggerTooltip = axisPointerModel.get('triggerTooltip');\n      }\n\n      axisPointerModel = fromTooltip ? makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) : axisPointerModel;\n      var snap = axisPointerModel.get('snap');\n      var key = makeKey(axis.model);\n      var involveSeries = triggerTooltip || snap || axis.type === 'category'; // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n\n      var axisInfo = result.axesInfo[key] = {\n        key: key,\n        axis: axis,\n        coordSys: coordSys,\n        axisPointerModel: axisPointerModel,\n        triggerTooltip: triggerTooltip,\n        involveSeries: involveSeries,\n        snap: snap,\n        useHandle: isHandleTrigger(axisPointerModel),\n        seriesModels: []\n      };\n      axesInfoInCoordSys[key] = axisInfo;\n      result.seriesInvolved |= involveSeries;\n      var groupIndex = getLinkGroupIndex(linksOption, axis);\n\n      if (groupIndex != null) {\n        var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {\n          axesInfo: {}\n        });\n        linkGroup.axesInfo[key] = axisInfo;\n        linkGroup.mapper = linksOption[groupIndex].mapper;\n        axisInfo.linkGroup = linkGroup;\n      }\n    }\n  });\n}\n\nfunction makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) {\n  var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n  var volatileOption = {};\n  each(['type', 'snap', 'lineStyle', 'shadowStyle', 'label', 'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'], function (field) {\n    volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n  }); // category axis do not auto snap, otherwise some tick that do not\n  // has value can not be hovered. value/time/log axis default snap if\n  // triggered from tooltip and trigger tooltip.\n\n  volatileOption.snap = axis.type !== 'category' && !!triggerTooltip; // Compatibel with previous behavior, tooltip axis do not show label by default.\n  // Only these properties can be overrided from tooltip to axisPointer.\n\n  if (tooltipAxisPointerModel.get('type') === 'cross') {\n    volatileOption.type = 'line';\n  }\n\n  var labelOption = volatileOption.label || (volatileOption.label = {}); // Follow the convention, do not show label when triggered by tooltip by default.\n\n  labelOption.show == null && (labelOption.show = false);\n\n  if (fromTooltip === 'cross') {\n    // When 'cross', both axes show labels.\n    labelOption.show = true; // If triggerTooltip, this is a base axis, which should better not use cross style\n    // (cross style is dashed by default)\n\n    if (!triggerTooltip) {\n      var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n      crossStyle && zrUtil.defaults(labelOption, crossStyle.textStyle);\n    }\n  }\n\n  return axis.model.getModel('axisPointer', new Model(volatileOption, globalAxisPointerModel, ecModel));\n}\n\nfunction collectSeriesInfo(result, ecModel) {\n  // Prepare data for axis trigger\n  ecModel.eachSeries(function (seriesModel) {\n    // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n    var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n\n    if (!coordSys || seriesTooltipTrigger === 'none' || seriesTooltipTrigger === false || seriesTooltipTrigger === 'item' || seriesTooltipShow === false || seriesModel.get('axisPointer.show', true) === false) {\n      return;\n    }\n\n    each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n      var axis = axisInfo.axis;\n\n      if (coordSys.getAxis(axis.dim) === axis) {\n        axisInfo.seriesModels.push(seriesModel);\n        axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n        axisInfo.seriesDataCount += seriesModel.getData().count();\n      }\n    });\n  }, this);\n}\n/**\n * For example:\n * {\n *     axisPointer: {\n *         links: [{\n *             xAxisIndex: [2, 4],\n *             yAxisIndex: 'all'\n *         }, {\n *             xAxisId: ['a5', 'a7'],\n *             xAxisName: 'xxx'\n *         }]\n *     }\n * }\n */\n\n\nfunction getLinkGroupIndex(linksOption, axis) {\n  var axisModel = axis.model;\n  var dim = axis.dim;\n\n  for (var i = 0; i < linksOption.length; i++) {\n    var linkOption = linksOption[i] || {};\n\n    if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id) || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex) || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)) {\n      return i;\n    }\n  }\n}\n\nfunction checkPropInLink(linkPropValue, axisPropValue) {\n  return linkPropValue === 'all' || zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0 || linkPropValue === axisPropValue;\n}\n\nfunction fixValue(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n\n  if (!axisInfo) {\n    return;\n  }\n\n  var axisPointerModel = axisInfo.axisPointerModel;\n  var scale = axisInfo.axis.scale;\n  var option = axisPointerModel.option;\n  var status = axisPointerModel.get('status');\n  var value = axisPointerModel.get('value'); // Parse init value for category and time axis.\n\n  if (value != null) {\n    value = scale.parse(value);\n  }\n\n  var useHandle = isHandleTrigger(axisPointerModel); // If `handle` used, `axisPointer` will always be displayed, so value\n  // and status should be initialized.\n\n  if (status == null) {\n    option.status = useHandle ? 'show' : 'hide';\n  }\n\n  var extent = scale.getExtent().slice();\n  extent[0] > extent[1] && extent.reverse();\n\n  if ( // Pick a value on axis when initializing.\n  value == null // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n  // where we should re-pick a value to keep `handle` displaying normally.\n  || value > extent[1]) {\n    // Make handle displayed on the end of the axis when init, which looks better.\n    value = extent[1];\n  }\n\n  if (value < extent[0]) {\n    value = extent[0];\n  }\n\n  option.value = value;\n\n  if (useHandle) {\n    option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n  }\n}\n\nfunction getAxisInfo(axisModel) {\n  var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n  return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n}\n\nfunction getAxisPointerModel(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n  return axisInfo && axisInfo.axisPointerModel;\n}\n\nfunction isHandleTrigger(axisPointerModel) {\n  return !!axisPointerModel.get('handle.show');\n}\n/**\n * @param {module:echarts/model/Model} model\n * @return {string} unique key\n */\n\n\nfunction makeKey(model) {\n  return model.type + '||' + model.id;\n}\n\nexports.collect = collect;\nexports.fixValue = fixValue;\nexports.getAxisInfo = getAxisInfo;\nexports.getAxisPointerModel = getAxisPointerModel;\nexports.makeKey = makeKey;\n\n/***/ }),\n\n/***/ 1016:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(983);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(978);\n\nvar List = __webpack_require__(995);\n\nvar completeDimensions = __webpack_require__(1004);\n\nvar _model = __webpack_require__(982);\n\nvar getDataItemValue = _model.getDataItemValue;\nvar converDataValue = _model.converDataValue;\nvar isDataItemOption = _model.isDataItemOption;\n\nvar CoordinateSystem = __webpack_require__(1006);\n\nfunction firstDataNotNull(data) {\n  var i = 0;\n\n  while (i < data.length && data[i] == null) {\n    i++;\n  }\n\n  return data[i];\n}\n\nfunction ifNeedCompleteOrdinalData(data) {\n  var sampleItem = firstDataNotNull(data);\n  return sampleItem != null && !zrUtil.isArray(getDataItemValue(sampleItem));\n}\n/**\n * Helper function to create a list from option data\n */\n\n\nfunction createListFromArray(data, seriesModel, ecModel) {\n  // If data is undefined\n  data = data || [];\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var creator = creators[coordSysName];\n  var registeredCoordSys = CoordinateSystem.get(coordSysName);\n  var completeDimOpt = {\n    encodeDef: seriesModel.get('encode'),\n    dimsDef: seriesModel.get('dimensions')\n  }; // FIXME\n\n  var axesInfo = creator && creator(data, seriesModel, ecModel, completeDimOpt);\n  var dimensions = axesInfo && axesInfo.dimensions;\n\n  if (!dimensions) {\n    // Get dimensions from registered coordinate system\n    dimensions = registeredCoordSys && (registeredCoordSys.getDimensionsInfo ? registeredCoordSys.getDimensionsInfo() : registeredCoordSys.dimensions.slice()) || ['x', 'y'];\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n  }\n\n  var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;\n  var list = new List(dimensions, seriesModel);\n  var nameList = createNameList(axesInfo, data);\n  var categories = {};\n  var dimValueGetter = categoryIndex >= 0 && ifNeedCompleteOrdinalData(data) ? function (itemOpt, dimName, dataIndex, dimIndex) {\n    // If any dataItem is like { value: 10 }\n    if (isDataItemOption(itemOpt)) {\n      list.hasItemOption = true;\n    } // Use dataIndex as ordinal value in categoryAxis\n\n\n    return dimIndex === categoryIndex ? dataIndex : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);\n  } : function (itemOpt, dimName, dataIndex, dimIndex) {\n    var value = getDataItemValue(itemOpt);\n    var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]); // If any dataItem is like { value: 10 }\n\n    if (isDataItemOption(itemOpt)) {\n      list.hasItemOption = true;\n    }\n\n    var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;\n\n    if (categoryAxesModels && categoryAxesModels[dimName]) {\n      // If given value is a category string\n      if (typeof val === 'string') {\n        // Lazy get categories\n        categories[dimName] = categories[dimName] || categoryAxesModels[dimName].getCategories();\n        val = zrUtil.indexOf(categories[dimName], val);\n\n        if (val < 0 && !isNaN(val)) {\n          // In case some one write '1', '2' istead of 1, 2\n          val = +val;\n        }\n      }\n    }\n\n    return val;\n  };\n  list.hasItemOption = false;\n  list.initData(data, nameList, dimValueGetter);\n  return list;\n}\n\nfunction isStackable(axisType) {\n  return axisType !== 'category' && axisType !== 'time';\n}\n\nfunction getDimTypeByAxis(axisType) {\n  return axisType === 'category' ? 'ordinal' : axisType === 'time' ? 'time' : 'float';\n}\n/**\n * Creaters for each coord system.\n */\n\n\nvar creators = {\n  cartesian2d: function (data, seriesModel, ecModel, completeDimOpt) {\n    var axesModels = zrUtil.map(['xAxis', 'yAxis'], function (name) {\n      return ecModel.queryComponents({\n        mainType: name,\n        index: seriesModel.get(name + 'Index'),\n        id: seriesModel.get(name + 'Id')\n      })[0];\n    });\n    var xAxisModel = axesModels[0];\n    var yAxisModel = axesModels[1];\n    var xAxisType = xAxisModel.get('type');\n    var yAxisType = yAxisModel.get('type');\n    var dimensions = [{\n      name: 'x',\n      type: getDimTypeByAxis(xAxisType),\n      stackable: isStackable(xAxisType)\n    }, {\n      name: 'y',\n      // If two category axes\n      type: getDimTypeByAxis(yAxisType),\n      stackable: isStackable(yAxisType)\n    }];\n    var isXAxisCateogry = xAxisType === 'category';\n    var isYAxisCategory = yAxisType === 'category';\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n    var categoryAxesModels = {};\n\n    if (isXAxisCateogry) {\n      categoryAxesModels.x = xAxisModel;\n    }\n\n    if (isYAxisCategory) {\n      categoryAxesModels.y = yAxisModel;\n    }\n\n    return {\n      dimensions: dimensions,\n      categoryIndex: isXAxisCateogry ? 0 : isYAxisCategory ? 1 : -1,\n      categoryAxesModels: categoryAxesModels\n    };\n  },\n  singleAxis: function (data, seriesModel, ecModel, completeDimOpt) {\n    var singleAxisModel = ecModel.queryComponents({\n      mainType: 'singleAxis',\n      index: seriesModel.get('singleAxisIndex'),\n      id: seriesModel.get('singleAxisId')\n    })[0];\n    var singleAxisType = singleAxisModel.get('type');\n    var isCategory = singleAxisType === 'category';\n    var dimensions = [{\n      name: 'single',\n      type: getDimTypeByAxis(singleAxisType),\n      stackable: isStackable(singleAxisType)\n    }];\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n    var categoryAxesModels = {};\n\n    if (isCategory) {\n      categoryAxesModels.single = singleAxisModel;\n    }\n\n    return {\n      dimensions: dimensions,\n      categoryIndex: isCategory ? 0 : -1,\n      categoryAxesModels: categoryAxesModels\n    };\n  },\n  polar: function (data, seriesModel, ecModel, completeDimOpt) {\n    var polarModel = ecModel.queryComponents({\n      mainType: 'polar',\n      index: seriesModel.get('polarIndex'),\n      id: seriesModel.get('polarId')\n    })[0];\n    var angleAxisModel = polarModel.findAxisModel('angleAxis');\n    var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n    var radiusAxisType = radiusAxisModel.get('type');\n    var angleAxisType = angleAxisModel.get('type');\n    var dimensions = [{\n      name: 'radius',\n      type: getDimTypeByAxis(radiusAxisType),\n      stackable: isStackable(radiusAxisType)\n    }, {\n      name: 'angle',\n      type: getDimTypeByAxis(angleAxisType),\n      stackable: isStackable(angleAxisType)\n    }];\n    var isAngleAxisCateogry = angleAxisType === 'category';\n    var isRadiusAxisCateogry = radiusAxisType === 'category';\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n    var categoryAxesModels = {};\n\n    if (isRadiusAxisCateogry) {\n      categoryAxesModels.radius = radiusAxisModel;\n    }\n\n    if (isAngleAxisCateogry) {\n      categoryAxesModels.angle = angleAxisModel;\n    }\n\n    return {\n      dimensions: dimensions,\n      categoryIndex: isAngleAxisCateogry ? 1 : isRadiusAxisCateogry ? 0 : -1,\n      categoryAxesModels: categoryAxesModels\n    };\n  },\n  geo: function (data, seriesModel, ecModel, completeDimOpt) {\n    // TODO Region\n    // 多个散点图系列在同一个地区的时候\n    return {\n      dimensions: completeDimensions([{\n        name: 'lng'\n      }, {\n        name: 'lat'\n      }], data, completeDimOpt)\n    };\n  }\n};\n\nfunction createNameList(result, data) {\n  var nameList = [];\n  var categoryDim = result && result.dimensions[result.categoryIndex];\n  var categoryAxisModel;\n\n  if (categoryDim) {\n    categoryAxisModel = result.categoryAxesModels[categoryDim.name];\n  }\n\n  if (categoryAxisModel) {\n    // FIXME Two category axis\n    var categories = categoryAxisModel.getCategories();\n\n    if (categories) {\n      var dataLen = data.length; // Ordered data is given explicitly like\n      // [[3, 0.2], [1, 0.3], [2, 0.15]]\n      // or given scatter data,\n      // pick the category\n\n      if (zrUtil.isArray(data[0]) && data[0].length > 1) {\n        nameList = [];\n\n        for (var i = 0; i < dataLen; i++) {\n          nameList[i] = categories[data[i][result.categoryIndex || 0]];\n        }\n      } else {\n        nameList = categories.slice(0);\n      }\n    }\n  }\n\n  return nameList;\n}\n\nvar _default = createListFromArray;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1017:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar numberUtil = __webpack_require__(981);\n\nvar axisHelper = __webpack_require__(996);\n\nvar linearMap = numberUtil.linearMap;\n\nfunction fixExtentWithBands(extent, nTick) {\n  var size = extent[1] - extent[0];\n  var len = nTick;\n  var margin = size / len / 2;\n  extent[0] += margin;\n  extent[1] -= margin;\n}\n\nvar normalizedExtent = [0, 1];\n/**\n * @name module:echarts/coord/CartesianAxis\n * @constructor\n */\n\nvar Axis = function (dim, scale, extent) {\n  /**\n   * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n   * @type {string}\n   */\n  this.dim = dim;\n  /**\n   * Axis scale\n   * @type {module:echarts/coord/scale/*}\n   */\n\n  this.scale = scale;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  this._extent = extent || [0, 0];\n  /**\n   * @type {boolean}\n   */\n\n  this.inverse = false;\n  /**\n   * Usually true when axis has a ordinal scale\n   * @type {boolean}\n   */\n\n  this.onBand = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._labelInterval;\n};\n\nAxis.prototype = {\n  constructor: Axis,\n\n  /**\n   * If axis extent contain given coord\n   * @param {number} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var extent = this._extent;\n    var min = Math.min(extent[0], extent[1]);\n    var max = Math.max(extent[0], extent[1]);\n    return coord >= min && coord <= max;\n  },\n\n  /**\n   * If axis extent contain given data\n   * @param {number} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.contain(this.dataToCoord(data));\n  },\n\n  /**\n   * Get coord extent.\n   * @return {Array.<number>}\n   */\n  getExtent: function () {\n    return this._extent.slice();\n  },\n\n  /**\n   * Get precision used for formatting\n   * @param {Array.<number>} [dataExtent]\n   * @return {number}\n   */\n  getPixelPrecision: function (dataExtent) {\n    return numberUtil.getPixelPrecision(dataExtent || this.scale.getExtent(), this._extent);\n  },\n\n  /**\n   * Set coord extent\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var extent = this._extent;\n    extent[0] = start;\n    extent[1] = end;\n  },\n\n  /**\n   * Convert data to coord. Data is the rank if it has a ordinal scale\n   * @param {number} data\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  dataToCoord: function (data, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n    data = scale.normalize(data);\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    return linearMap(data, normalizedExtent, extent, clamp);\n  },\n\n  /**\n   * Convert coord to data. Data is the rank if it has a ordinal scale\n   * @param {number} coord\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  coordToData: function (coord, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    var t = linearMap(coord, extent, normalizedExtent, clamp);\n    return this.scale.scale(t);\n  },\n\n  /**\n   * Convert pixel point to data in axis\n   * @param {Array.<number>} point\n   * @param  {boolean} clamp\n   * @return {number} data\n   */\n  pointToData: function (point, clamp) {// Should be implemented in derived class if necessary.\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicksCoords: function (alignWithLabel) {\n    if (this.onBand && !alignWithLabel) {\n      var bands = this.getBands();\n      var coords = [];\n\n      for (var i = 0; i < bands.length; i++) {\n        coords.push(bands[i][0]);\n      }\n\n      if (bands[i - 1]) {\n        coords.push(bands[i - 1][1]);\n      }\n\n      return coords;\n    } else {\n      return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n    }\n  },\n\n  /**\n   * Coords of labels are on the ticks or on the middle of bands\n   * @return {Array.<number>}\n   */\n  getLabelsCoords: function () {\n    return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n  },\n\n  /**\n   * Get bands.\n   *\n   * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n   * |---1---|---2---|---3---|---4---|.\n   *\n   * @return {Array}\n   */\n  // FIXME Situation when labels is on ticks\n  getBands: function () {\n    var extent = this.getExtent();\n    var bands = [];\n    var len = this.scale.count();\n    var start = extent[0];\n    var end = extent[1];\n    var span = end - start;\n\n    for (var i = 0; i < len; i++) {\n      bands.push([span * i / len + start, span * (i + 1) / len + start]);\n    }\n\n    return bands;\n  },\n\n  /**\n   * Get width of band\n   * @return {number}\n   */\n  getBandWidth: function () {\n    var axisExtent = this._extent;\n    var dataExtent = this.scale.getExtent();\n    var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0); // Fix #2728, avoid NaN when only one data.\n\n    len === 0 && (len = 1);\n    var size = Math.abs(axisExtent[1] - axisExtent[0]);\n    return Math.abs(size) / len;\n  },\n\n  /**\n   * @abstract\n   * @return {boolean} Is horizontal\n   */\n  isHorizontal: null,\n\n  /**\n   * @abstract\n   * @return {number} Get axis rotate, by degree.\n   */\n  getRotate: null,\n\n  /**\n   * Get interval of the axis label.\n   * To get precise result, at least one of `getRotate` and `isHorizontal`\n   * should be implemented.\n   * @return {number}\n   */\n  getLabelInterval: function () {\n    var labelInterval = this._labelInterval;\n\n    if (!labelInterval) {\n      var axisModel = this.model;\n      var labelModel = axisModel.getModel('axisLabel');\n      labelInterval = labelModel.get('interval');\n\n      if (this.type === 'category' && (labelInterval == null || labelInterval === 'auto')) {\n        labelInterval = axisHelper.getAxisLabelInterval(zrUtil.map(this.scale.getTicks(), this.dataToCoord, this), axisModel.getFormattedLabels(), labelModel.getFont(), this.getRotate ? this.getRotate() : this.isHorizontal && !this.isHorizontal() ? 90 : 0, labelModel.get('rotate'));\n      }\n\n      this._labelInterval = labelInterval;\n    }\n\n    return labelInterval;\n  }\n};\nvar _default = Axis;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1018:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar Style = __webpack_require__(1046);\n\nvar Element = __webpack_require__(1043);\n\nvar RectText = __webpack_require__(1071);\n\n/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n/**\n * @alias module:zrender/graphic/Displayable\n * @extends module:zrender/Element\n * @extends module:zrender/graphic/mixin/RectText\n */\nfunction Displayable(opts) {\n  opts = opts || {};\n  Element.call(this, opts); // Extend properties\n\n  for (var name in opts) {\n    if (opts.hasOwnProperty(name) && name !== 'style') {\n      this[name] = opts[name];\n    }\n  }\n  /**\n   * @type {module:zrender/graphic/Style}\n   */\n\n\n  this.style = new Style(opts.style, this);\n  this._rect = null; // Shapes for cascade clipping.\n\n  this.__clipPaths = []; // FIXME Stateful must be mixined after style is setted\n  // Stateful.call(this, opts);\n}\n\nDisplayable.prototype = {\n  constructor: Displayable,\n  type: 'displayable',\n\n  /**\n   * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n   * Dirty flag. From which painter will determine if this displayable object needs brush\n   * @name module:zrender/graphic/Displayable#__dirty\n   * @type {boolean}\n   */\n  __dirty: true,\n\n  /**\n   * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n   * If ignore drawing of the displayable object. Mouse event will still be triggered\n   * @name module:/zrender/graphic/Displayable#invisible\n   * @type {boolean}\n   * @default false\n   */\n  invisible: false,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z: 0,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z2: 0,\n\n  /**\n   * z层level，决定绘画在哪层canvas中\n   * @name module:/zrender/graphic/Displayable#zlevel\n   * @type {number}\n   * @default 0\n   */\n  zlevel: 0,\n\n  /**\n   * 是否可拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  draggable: false,\n\n  /**\n   * 是否正在拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  dragging: false,\n\n  /**\n   * 是否相应鼠标事件\n   * @name module:/zrender/graphic/Displayable#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * If enable culling\n   * @type {boolean}\n   * @default false\n   */\n  culling: false,\n\n  /**\n   * Mouse cursor when hovered\n   * @name module:/zrender/graphic/Displayable#cursor\n   * @type {string}\n   */\n  cursor: 'pointer',\n\n  /**\n   * If hover area is bounding rect\n   * @name module:/zrender/graphic/Displayable#rectHover\n   * @type {string}\n   */\n  rectHover: false,\n\n  /**\n   * Render the element progressively when the value >= 0,\n   * usefull for large data.\n   * @type {number}\n   */\n  progressive: -1,\n  beforeBrush: function (ctx) {},\n  afterBrush: function (ctx) {},\n\n  /**\n   * 图形绘制方法\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  // Interface\n  brush: function (ctx, prevEl) {},\n\n  /**\n   * 获取最小包围盒\n   * @return {module:zrender/core/BoundingRect}\n   */\n  // Interface\n  getBoundingRect: function () {},\n\n  /**\n   * 判断坐标 x, y 是否在图形上\n   * If displayable element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  contain: function (x, y) {\n    return this.rectContain(x, y);\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    cb.call(context, this);\n  },\n\n  /**\n   * 判断坐标 x, y 是否在图形的包围盒上\n   * If bounding rect of element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  rectContain: function (x, y) {\n    var coord = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    return rect.contain(coord[0], coord[1]);\n  },\n\n  /**\n   * 标记图形元素为脏，并且在下一帧重绘\n   * Mark displayable element dirty and refresh next frame\n   */\n  dirty: function () {\n    this.__dirty = true;\n    this._rect = null;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * 图形是否会触发事件\n   * If displayable object binded any event\n   * @return {boolean}\n   */\n  // TODO, 通过 bind 绑定的事件\n  // isSilent: function () {\n  //     return !(\n  //         this.hoverable || this.draggable\n  //         || this.onmousemove || this.onmouseover || this.onmouseout\n  //         || this.onmousedown || this.onmouseup || this.onclick\n  //         || this.ondragenter || this.ondragover || this.ondragleave\n  //         || this.ondrop\n  //     );\n  // },\n\n  /**\n   * Alias for animate('style')\n   * @param {boolean} loop\n   */\n  animateStyle: function (loop) {\n    return this.animate('style', loop);\n  },\n  attrKV: function (key, value) {\n    if (key !== 'style') {\n      Element.prototype.attrKV.call(this, key, value);\n    } else {\n      this.style.set(value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setStyle: function (key, value) {\n    this.style.set(key, value);\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * Use given style object\n   * @param  {Object} obj\n   */\n  useStyle: function (obj) {\n    this.style = new Style(obj, this);\n    this.dirty(false);\n    return this;\n  }\n};\nzrUtil.inherits(Displayable, Element);\nzrUtil.mixin(Displayable, RectText); // zrUtil.mixin(Displayable, Stateful);\n\nvar _default = Displayable;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1019:\n/***/ (function(module, exports) {\n\n/**\n * @param {Array.<Object>} colorStops\n */\nvar Gradient = function (colorStops) {\n  this.colorStops = colorStops || [];\n};\n\nGradient.prototype = {\n  constructor: Gradient,\n  addColorStop: function (offset, color) {\n    this.colorStops.push({\n      offset: offset,\n      color: color\n    });\n  }\n};\nvar _default = Gradient;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1020:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar numberUtil = __webpack_require__(981);\n\nvar formatUtil = __webpack_require__(985);\n\nvar Scale = __webpack_require__(1014);\n\nvar helper = __webpack_require__(1054);\n\n/**\n * Interval scale\n * @module echarts/scale/Interval\n */\nvar roundNumber = numberUtil.round;\n/**\n * @alias module:echarts/coord/scale/Interval\n * @constructor\n */\n\nvar IntervalScale = Scale.extend({\n  type: 'interval',\n  _interval: 0,\n  _intervalPrecision: 2,\n  setExtent: function (start, end) {\n    var thisExtent = this._extent; //start,end may be a Number like '25',so...\n\n    if (!isNaN(start)) {\n      thisExtent[0] = parseFloat(start);\n    }\n\n    if (!isNaN(end)) {\n      thisExtent[1] = parseFloat(end);\n    }\n  },\n  unionExtent: function (other) {\n    var extent = this._extent;\n    other[0] < extent[0] && (extent[0] = other[0]);\n    other[1] > extent[1] && (extent[1] = other[1]); // unionExtent may called by it's sub classes\n\n    IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n  },\n\n  /**\n   * Get interval\n   */\n  getInterval: function () {\n    return this._interval;\n  },\n\n  /**\n   * Set interval\n   */\n  setInterval: function (interval) {\n    this._interval = interval; // Dropped auto calculated niceExtent and use user setted extent\n    // We assume user wan't to set both interval, min, max to get a better result\n\n    this._niceExtent = this._extent.slice();\n    this._intervalPrecision = helper.getIntervalPrecision(interval);\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    return helper.intervalScaleGetTicks(this._interval, this._extent, this._niceExtent, this._intervalPrecision);\n  },\n\n  /**\n   * @return {Array.<string>}\n   */\n  getTicksLabels: function () {\n    var labels = [];\n    var ticks = this.getTicks();\n\n    for (var i = 0; i < ticks.length; i++) {\n      labels.push(this.getLabel(ticks[i]));\n    }\n\n    return labels;\n  },\n\n  /**\n   * @param {number} data\n   * @param {Object} [opt]\n   * @param {number|string} [opt.precision] If 'auto', use nice presision.\n   * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n   * @return {string}\n   */\n  getLabel: function (data, opt) {\n    if (data == null) {\n      return '';\n    }\n\n    var precision = opt && opt.precision;\n\n    if (precision == null) {\n      precision = numberUtil.getPrecisionSafe(data) || 0;\n    } else if (precision === 'auto') {\n      // Should be more precise then tick.\n      precision = this._intervalPrecision;\n    } // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n    // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n\n\n    data = roundNumber(data, precision, true);\n    return formatUtil.addCommas(data);\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   *\n   * @param {number} [splitNumber = 5] Desired number of ticks\n   * @param {number} [minInterval]\n   * @param {number} [maxInterval]\n   */\n  niceTicks: function (splitNumber, minInterval, maxInterval) {\n    splitNumber = splitNumber || 5;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (!isFinite(span)) {\n      return;\n    } // User may set axis min 0 and data are all negative\n    // FIXME If it needs to reverse ?\n\n\n    if (span < 0) {\n      span = -span;\n      extent.reverse();\n    }\n\n    var result = helper.intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval);\n    this._intervalPrecision = result.intervalPrecision;\n    this._interval = result.interval;\n    this._niceExtent = result.niceTickExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @param {Object} opt\n   * @param {number} [opt.splitNumber = 5] Given approx tick number\n   * @param {boolean} [opt.fixMin=false]\n   * @param {boolean} [opt.fixMax=false]\n   * @param {boolean} [opt.minInterval]\n   * @param {boolean} [opt.maxInterval]\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      if (extent[0] !== 0) {\n        // Expand extent\n        var expandSize = extent[0]; // In the fowllowing case\n        //      Axis has been fixed max 100\n        //      Plus data are all 100 and axis extent are [100, 100].\n        // Extend to the both side will cause expanded max is larger than fixed max.\n        // So only expand to the smaller side.\n\n        if (!opt.fixMax) {\n          extent[1] += expandSize / 2;\n          extent[0] -= expandSize / 2;\n        } else {\n          extent[0] -= expandSize / 2;\n        }\n      } else {\n        extent[1] = 1;\n      }\n    }\n\n    var span = extent[1] - extent[0]; // If there are no data and extent are [Infinity, -Infinity]\n\n    if (!isFinite(span)) {\n      extent[0] = 0;\n      extent[1] = 1;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n    }\n  }\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nIntervalScale.create = function () {\n  return new IntervalScale();\n};\n\nvar _default = IntervalScale;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1021:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(978);\n\nvar retrieve = _util.retrieve;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar each = _util.each;\n\nvar formatUtil = __webpack_require__(985);\n\nvar graphic = __webpack_require__(980);\n\nvar Model = __webpack_require__(989);\n\nvar _number = __webpack_require__(981);\n\nvar isRadianAroundZero = _number.isRadianAroundZero;\nvar remRadian = _number.remRadian;\n\nvar _symbol = __webpack_require__(1003);\n\nvar createSymbol = _symbol.createSymbol;\n\nvar matrixUtil = __webpack_require__(994);\n\nvar _vector = __webpack_require__(984);\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar PI = Math.PI;\n\nfunction makeAxisEventDataBase(axisModel) {\n  var eventData = {\n    componentType: axisModel.mainType\n  };\n  eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n  return eventData;\n}\n/**\n * A final axis is translated and rotated from a \"standard axis\".\n * So opt.position and opt.rotation is required.\n *\n * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n * for example: (0, 0) ------------> (0, 50)\n *\n * nameDirection or tickDirection or labelDirection is 1 means tick\n * or label is below the standard axis, whereas is -1 means above\n * the standard axis. labelOffset means offset between label and axis,\n * which is useful when 'onZero', where axisLabel is in the grid and\n * label in outside grid.\n *\n * Tips: like always,\n * positive rotation represents anticlockwise, and negative rotation\n * represents clockwise.\n * The direction of position coordinate is the same as the direction\n * of screen coordinate.\n *\n * Do not need to consider axis 'inverse', which is auto processed by\n * axis extent.\n *\n * @param {module:zrender/container/Group} group\n * @param {Object} axisModel\n * @param {Object} opt Standard axis parameters.\n * @param {Array.<number>} opt.position [x, y]\n * @param {number} opt.rotation by radian\n * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle' or 'center'.\n * @param {number} [opt.tickDirection=1] 1 or -1\n * @param {number} [opt.labelDirection=1] 1 or -1\n * @param {number} [opt.labelOffset=0] Usefull when onZero.\n * @param {string} [opt.axisLabelShow] default get from axisModel.\n * @param {string} [opt.axisName] default get from axisModel.\n * @param {number} [opt.axisNameAvailableWidth]\n * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n * @param {number} [opt.labelInterval] Default label interval when label\n *                                     interval from model is null or 'auto'.\n * @param {number} [opt.strokeContainThreshold] Default label interval when label\n * @param {number} [opt.nameTruncateMaxWidth]\n */\n\n\nvar AxisBuilder = function (axisModel, opt) {\n  /**\n   * @readOnly\n   */\n  this.opt = opt;\n  /**\n   * @readOnly\n   */\n\n  this.axisModel = axisModel; // Default value\n\n  defaults(opt, {\n    labelOffset: 0,\n    nameDirection: 1,\n    tickDirection: 1,\n    labelDirection: 1,\n    silent: true\n  });\n  /**\n   * @readOnly\n   */\n\n  this.group = new graphic.Group(); // FIXME Not use a seperate text group?\n\n  var dumbGroup = new graphic.Group({\n    position: opt.position.slice(),\n    rotation: opt.rotation\n  }); // this.group.add(dumbGroup);\n  // this._dumbGroup = dumbGroup;\n\n  dumbGroup.updateTransform();\n  this._transform = dumbGroup.transform;\n  this._dumbGroup = dumbGroup;\n};\n\nAxisBuilder.prototype = {\n  constructor: AxisBuilder,\n  hasBuilder: function (name) {\n    return !!builders[name];\n  },\n  add: function (name) {\n    builders[name].call(this);\n  },\n  getGroup: function () {\n    return this.group;\n  }\n};\nvar builders = {\n  /**\n   * @private\n   */\n  axisLine: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n\n    if (!axisModel.get('axisLine.show')) {\n      return;\n    }\n\n    var extent = this.axisModel.axis.getExtent();\n    var matrix = this._transform;\n    var pt1 = [extent[0], 0];\n    var pt2 = [extent[1], 0];\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    }\n\n    var lineStyle = extend({\n      lineCap: 'round'\n    }, axisModel.getModel('axisLine.lineStyle').getLineStyle());\n    this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'line',\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: lineStyle,\n      strokeContainThreshold: opt.strokeContainThreshold || 5,\n      silent: true,\n      z2: 1\n    })));\n    var arrows = axisModel.get('axisLine.symbol');\n    var arrowSize = axisModel.get('axisLine.symbolSize');\n\n    if (arrows != null) {\n      if (typeof arrows === 'string') {\n        // Use the same arrow for start and end point\n        arrows = [arrows, arrows];\n      }\n\n      if (typeof arrowSize === 'string' || typeof arrowSize === 'number') {\n        // Use the same size for width and height\n        arrowSize = [arrowSize, arrowSize];\n      }\n\n      var symbolWidth = arrowSize[0];\n      var symbolHeight = arrowSize[1];\n      each([[opt.rotation + Math.PI / 2, pt1], [opt.rotation - Math.PI / 2, pt2]], function (item, index) {\n        if (arrows[index] !== 'none' && arrows[index] != null) {\n          var symbol = createSymbol(arrows[index], -symbolWidth / 2, -symbolHeight / 2, symbolWidth, symbolHeight, lineStyle.stroke, true);\n          symbol.attr({\n            rotation: item[0],\n            position: item[1],\n            silent: true\n          });\n          this.group.add(symbol);\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  axisTickLabel: function () {\n    var axisModel = this.axisModel;\n    var opt = this.opt;\n    var tickEls = buildAxisTick(this, axisModel, opt);\n    var labelEls = buildAxisLabel(this, axisModel, opt);\n    fixMinMaxLabelShow(axisModel, labelEls, tickEls);\n  },\n\n  /**\n   * @private\n   */\n  axisName: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n    var name = retrieve(opt.axisName, axisModel.get('name'));\n\n    if (!name) {\n      return;\n    }\n\n    var nameLocation = axisModel.get('nameLocation');\n    var nameDirection = opt.nameDirection;\n    var textStyleModel = axisModel.getModel('nameTextStyle');\n    var gap = axisModel.get('nameGap') || 0;\n    var extent = this.axisModel.axis.getExtent();\n    var gapSignal = extent[0] > extent[1] ? -1 : 1;\n    var pos = [nameLocation === 'start' ? extent[0] - gapSignal * gap : nameLocation === 'end' ? extent[1] + gapSignal * gap : (extent[0] + extent[1]) / 2, // 'middle'\n    // Reuse labelOffset.\n    isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0];\n    var labelLayout;\n    var nameRotation = axisModel.get('nameRotate');\n\n    if (nameRotation != null) {\n      nameRotation = nameRotation * PI / 180; // To radian.\n    }\n\n    var axisNameAvailableWidth;\n\n    if (isNameLocationCenter(nameLocation)) {\n      labelLayout = innerTextLayout(opt.rotation, nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n      nameDirection);\n    } else {\n      labelLayout = endTextLayout(opt, nameLocation, nameRotation || 0, extent);\n      axisNameAvailableWidth = opt.axisNameAvailableWidth;\n\n      if (axisNameAvailableWidth != null) {\n        axisNameAvailableWidth = Math.abs(axisNameAvailableWidth / Math.sin(labelLayout.rotation));\n        !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n      }\n    }\n\n    var textFont = textStyleModel.getFont();\n    var truncateOpt = axisModel.get('nameTruncate', true) || {};\n    var ellipsis = truncateOpt.ellipsis;\n    var maxWidth = retrieve(opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth); // FIXME\n    // truncate rich text? (consider performance)\n\n    var truncatedText = ellipsis != null && maxWidth != null ? formatUtil.truncateText(name, maxWidth, textFont, ellipsis, {\n      minChar: 2,\n      placeholder: truncateOpt.placeholder\n    }) : name;\n    var tooltipOpt = axisModel.get('tooltip', true);\n    var mainType = axisModel.mainType;\n    var formatterParams = {\n      componentType: mainType,\n      name: name,\n      $vars: ['name']\n    };\n    formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'name',\n      __fullText: name,\n      __truncatedText: truncatedText,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: isSilent(axisModel),\n      z2: 1,\n      tooltip: tooltipOpt && tooltipOpt.show ? extend({\n        content: name,\n        formatter: function () {\n          return name;\n        },\n        formatterParams: formatterParams\n      }, tooltipOpt) : null\n    });\n    graphic.setTextStyle(textEl.style, textStyleModel, {\n      text: truncatedText,\n      textFont: textFont,\n      textFill: textStyleModel.getTextColor() || axisModel.get('axisLine.lineStyle.color'),\n      textAlign: labelLayout.textAlign,\n      textVerticalAlign: labelLayout.textVerticalAlign\n    });\n\n    if (axisModel.get('triggerEvent')) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisName';\n      textEl.eventData.name = name;\n    } // FIXME\n\n\n    this._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    this.group.add(textEl);\n    textEl.decomposeTransform();\n  }\n};\n/**\n * @public\n * @static\n * @param {Object} opt\n * @param {number} axisRotation in radian\n * @param {number} textRotation in radian\n * @param {number} direction\n * @return {Object} {\n *  rotation, // according to axis\n *  textAlign,\n *  textVerticalAlign\n * }\n */\n\nvar innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n  var rotationDiff = remRadian(textRotation - axisRotation);\n  var textAlign;\n  var textVerticalAlign;\n\n  if (isRadianAroundZero(rotationDiff)) {\n    // Label is parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI)) {\n    // Label is inverse parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff > 0 && rotationDiff < PI) {\n      textAlign = direction > 0 ? 'right' : 'left';\n    } else {\n      textAlign = direction > 0 ? 'left' : 'right';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n};\n\nfunction endTextLayout(opt, textPosition, textRotate, extent) {\n  var rotationDiff = remRadian(textRotate - opt.rotation);\n  var textAlign;\n  var textVerticalAlign;\n  var inverse = extent[0] > extent[1];\n  var onLeft = textPosition === 'start' && !inverse || textPosition !== 'start' && inverse;\n\n  if (isRadianAroundZero(rotationDiff - PI / 2)) {\n    textVerticalAlign = onLeft ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n    textVerticalAlign = onLeft ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n      textAlign = onLeft ? 'left' : 'right';\n    } else {\n      textAlign = onLeft ? 'right' : 'left';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction isSilent(axisModel) {\n  var tooltipOpt = axisModel.get('tooltip');\n  return axisModel.get('silent') // Consider mouse cursor, add these restrictions.\n  || !(axisModel.get('triggerEvent') || tooltipOpt && tooltipOpt.show);\n}\n\nfunction fixMinMaxLabelShow(axisModel, labelEls, tickEls) {\n  // If min or max are user set, we need to check\n  // If the tick on min(max) are overlap on their neighbour tick\n  // If they are overlapped, we need to hide the min(max) tick label\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel'); // FIXME\n  // Have not consider onBand yet, where tick els is more than label els.\n\n  labelEls = labelEls || [];\n  tickEls = tickEls || [];\n  var firstLabel = labelEls[0];\n  var nextLabel = labelEls[1];\n  var lastLabel = labelEls[labelEls.length - 1];\n  var prevLabel = labelEls[labelEls.length - 2];\n  var firstTick = tickEls[0];\n  var nextTick = tickEls[1];\n  var lastTick = tickEls[tickEls.length - 1];\n  var prevTick = tickEls[tickEls.length - 2];\n\n  if (showMinLabel === false) {\n    ignoreEl(firstLabel);\n    ignoreEl(firstTick);\n  } else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n    if (showMinLabel) {\n      ignoreEl(nextLabel);\n      ignoreEl(nextTick);\n    } else {\n      ignoreEl(firstLabel);\n      ignoreEl(firstTick);\n    }\n  }\n\n  if (showMaxLabel === false) {\n    ignoreEl(lastLabel);\n    ignoreEl(lastTick);\n  } else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n    if (showMaxLabel) {\n      ignoreEl(prevLabel);\n      ignoreEl(prevTick);\n    } else {\n      ignoreEl(lastLabel);\n      ignoreEl(lastTick);\n    }\n  }\n}\n\nfunction ignoreEl(el) {\n  el && (el.ignore = true);\n}\n\nfunction isTwoLabelOverlapped(current, next, labelLayout) {\n  // current and next has the same rotation.\n  var firstRect = current && current.getBoundingRect().clone();\n  var nextRect = next && next.getBoundingRect().clone();\n\n  if (!firstRect || !nextRect) {\n    return;\n  } // When checking intersect of two rotated labels, we use mRotationBack\n  // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n\n\n  var mRotationBack = matrixUtil.identity([]);\n  matrixUtil.rotate(mRotationBack, mRotationBack, -current.rotation);\n  firstRect.applyTransform(matrixUtil.mul([], mRotationBack, current.getLocalTransform()));\n  nextRect.applyTransform(matrixUtil.mul([], mRotationBack, next.getLocalTransform()));\n  return firstRect.intersect(nextRect);\n}\n\nfunction isNameLocationCenter(nameLocation) {\n  return nameLocation === 'middle' || nameLocation === 'center';\n}\n/**\n * @static\n */\n\n\nvar ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval, ticksCnt, showMinLabel, showMaxLabel) {\n  if (i === 0 && showMinLabel || i === ticksCnt - 1 && showMaxLabel) {\n    return false;\n  } // FIXME\n  // Have not consider label overlap (if label is too long) yet.\n\n\n  var rawTick;\n  var scale = axis.scale;\n  return scale.type === 'ordinal' && (typeof interval === 'function' ? (rawTick = scale.getTicks()[i], !interval(rawTick, scale.getLabel(rawTick))) : i % (interval + 1));\n};\n/**\n * @static\n */\n\n\nvar getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n  var interval = model.get('interval');\n\n  if (interval == null || interval == 'auto') {\n    interval = labelInterval;\n  }\n\n  return interval;\n};\n\nfunction buildAxisTick(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n\n  if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n    return;\n  }\n\n  var tickModel = axisModel.getModel('axisTick');\n  var lineStyleModel = tickModel.getModel('lineStyle');\n  var tickLen = tickModel.get('length');\n  var tickInterval = getInterval(tickModel, opt.labelInterval);\n  var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel')); // FIXME\n  // Corresponds to ticksCoords ?\n\n  var ticks = axis.scale.getTicks();\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n  var pt1 = [];\n  var pt2 = [];\n  var matrix = axisBuilder._transform;\n  var tickEls = [];\n  var ticksCnt = ticksCoords.length;\n\n  for (var i = 0; i < ticksCnt; i++) {\n    // Only ordinal scale support tick interval\n    if (ifIgnoreOnTick(axis, i, tickInterval, ticksCnt, showMinLabel, showMaxLabel)) {\n      continue;\n    }\n\n    var tickCoord = ticksCoords[i];\n    pt1[0] = tickCoord;\n    pt1[1] = 0;\n    pt2[0] = tickCoord;\n    pt2[1] = opt.tickDirection * tickLen;\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    } // Tick line, Not use group transform to have better line draw\n\n\n    var tickEl = new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'tick_' + ticks[i],\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: defaults(lineStyleModel.getLineStyle(), {\n        stroke: axisModel.get('axisLine.lineStyle.color')\n      }),\n      z2: 2,\n      silent: true\n    }));\n    axisBuilder.group.add(tickEl);\n    tickEls.push(tickEl);\n  }\n\n  return tickEls;\n}\n\nfunction buildAxisLabel(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n  var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n  if (!show || axis.scale.isBlank()) {\n    return;\n  }\n\n  var labelModel = axisModel.getModel('axisLabel');\n  var labelMargin = labelModel.get('margin');\n  var ticks = axis.scale.getTicks();\n  var labels = axisModel.getFormattedLabels(); // Special label rotate.\n\n  var labelRotation = (retrieve(opt.labelRotate, labelModel.get('rotate')) || 0) * PI / 180;\n  var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n  var categoryData = axisModel.get('data');\n  var labelEls = [];\n  var silent = isSilent(axisModel);\n  var triggerEvent = axisModel.get('triggerEvent');\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n  each(ticks, function (tickVal, index) {\n    if (ifIgnoreOnTick(axis, index, opt.labelInterval, ticks.length, showMinLabel, showMaxLabel)) {\n      return;\n    }\n\n    var itemLabelModel = labelModel;\n\n    if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n      itemLabelModel = new Model(categoryData[tickVal].textStyle, labelModel, axisModel.ecModel);\n    }\n\n    var textColor = itemLabelModel.getTextColor() || axisModel.get('axisLine.lineStyle.color');\n    var tickCoord = axis.dataToCoord(tickVal);\n    var pos = [tickCoord, opt.labelOffset + opt.labelDirection * labelMargin];\n    var labelStr = axis.scale.getLabel(tickVal);\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'label_' + tickVal,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: silent,\n      z2: 10\n    });\n    graphic.setTextStyle(textEl.style, itemLabelModel, {\n      text: labels[index],\n      textAlign: itemLabelModel.getShallow('align', true) || labelLayout.textAlign,\n      textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true) || itemLabelModel.getShallow('baseline', true) || labelLayout.textVerticalAlign,\n      textFill: typeof textColor === 'function' ? textColor( // (1) In category axis with data zoom, tick is not the original\n      // index of axis.data. So tick should not be exposed to user\n      // in category axis.\n      // (2) Compatible with previous version, which always returns labelStr.\n      // But in interval scale labelStr is like '223,445', which maked\n      // user repalce ','. So we modify it to return original val but remain\n      // it as 'string' to avoid error in replacing.\n      axis.type === 'category' ? labelStr : axis.type === 'value' ? tickVal + '' : tickVal, index) : textColor\n    }); // Pack data for mouse event\n\n    if (triggerEvent) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisLabel';\n      textEl.eventData.value = labelStr;\n    } // FIXME\n\n\n    axisBuilder._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    labelEls.push(textEl);\n    axisBuilder.group.add(textEl);\n    textEl.decomposeTransform();\n  });\n  return labelEls;\n}\n\nvar _default = AxisBuilder;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1022:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(983);\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = __webpack_require__(979);\n\nvar axisPointerModelHelper = __webpack_require__(1015);\n\n/**\n * Base class of AxisView.\n */\nvar AxisView = echarts.extendComponentView({\n  type: 'axis',\n\n  /**\n   * @private\n   */\n  _axisPointer: null,\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  axisPointerClass: null,\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    // FIXME\n    // This process should proformed after coordinate systems updated\n    // (axis scale updated), and should be performed each time update.\n    // So put it here temporarily, although it is not appropriate to\n    // put a model-writing procedure in `view`.\n    this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n    AxisView.superApply(this, 'render', arguments);\n    updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n  },\n\n  /**\n   * Action handler.\n   * @public\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/model/Global} ecModel\n   * @param {module:echarts/ExtensionAPI} api\n   * @param {Object} payload\n   */\n  updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n    updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    var axisPointer = this._axisPointer;\n    axisPointer && axisPointer.remove(api);\n    AxisView.superApply(this, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    disposeAxisPointer(this, api);\n    AxisView.superApply(this, 'dispose', arguments);\n  }\n});\n\nfunction updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n  var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n\n  if (!Clazz) {\n    return;\n  }\n\n  var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n  axisPointerModel ? (axisView._axisPointer || (axisView._axisPointer = new Clazz())).render(axisModel, axisPointerModel, api, forceRender) : disposeAxisPointer(axisView, api);\n}\n\nfunction disposeAxisPointer(axisView, ecModel, api) {\n  var axisPointer = axisView._axisPointer;\n  axisPointer && axisPointer.dispose(ecModel, api);\n  axisView._axisPointer = null;\n}\n\nvar axisPointerClazz = [];\n\nAxisView.registerAxisPointerClass = function (type, clazz) {\n  axisPointerClazz[type] = clazz;\n};\n\nAxisView.getAxisPointerClass = function (type) {\n  return type && axisPointerClazz[type];\n};\n\nvar _default = AxisView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1023:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(1010);\n\nvar debugMode = _config.debugMode;\n\nvar log = function () {};\n\nif (debugMode === 1) {\n  log = function () {\n    for (var k in arguments) {\n      throw new Error(arguments[k]);\n    }\n  };\n} else if (debugMode > 1) {\n  log = function () {\n    for (var k in arguments) {\n      console.log(arguments[k]);\n    }\n  };\n}\n\nvar _default = log;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1024:\n/***/ (function(module, exports) {\n\n// https://github.com/mziccard/node-timsort\nvar DEFAULT_MIN_MERGE = 32;\nvar DEFAULT_MIN_GALLOPING = 7;\nvar DEFAULT_TMP_STORAGE_LENGTH = 256;\n\nfunction minRunLength(n) {\n  var r = 0;\n\n  while (n >= DEFAULT_MIN_MERGE) {\n    r |= n & 1;\n    n >>= 1;\n  }\n\n  return n + r;\n}\n\nfunction makeAscendingRun(array, lo, hi, compare) {\n  var runHi = lo + 1;\n\n  if (runHi === hi) {\n    return 1;\n  }\n\n  if (compare(array[runHi++], array[lo]) < 0) {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n      runHi++;\n    }\n\n    reverseRun(array, lo, runHi);\n  } else {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n      runHi++;\n    }\n  }\n\n  return runHi - lo;\n}\n\nfunction reverseRun(array, lo, hi) {\n  hi--;\n\n  while (lo < hi) {\n    var t = array[lo];\n    array[lo++] = array[hi];\n    array[hi--] = t;\n  }\n}\n\nfunction binaryInsertionSort(array, lo, hi, start, compare) {\n  if (start === lo) {\n    start++;\n  }\n\n  for (; start < hi; start++) {\n    var pivot = array[start];\n    var left = lo;\n    var right = start;\n    var mid;\n\n    while (left < right) {\n      mid = left + right >>> 1;\n\n      if (compare(pivot, array[mid]) < 0) {\n        right = mid;\n      } else {\n        left = mid + 1;\n      }\n    }\n\n    var n = start - left;\n\n    switch (n) {\n      case 3:\n        array[left + 3] = array[left + 2];\n\n      case 2:\n        array[left + 2] = array[left + 1];\n\n      case 1:\n        array[left + 1] = array[left];\n        break;\n\n      default:\n        while (n > 0) {\n          array[left + n] = array[left + n - 1];\n          n--;\n        }\n\n    }\n\n    array[left] = pivot;\n  }\n}\n\nfunction gallopLeft(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) > 0) {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  } else {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) > 0) {\n      lastOffset = m + 1;\n    } else {\n      offset = m;\n    }\n  }\n\n  return offset;\n}\n\nfunction gallopRight(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) < 0) {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  } else {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) < 0) {\n      offset = m;\n    } else {\n      lastOffset = m + 1;\n    }\n  }\n\n  return offset;\n}\n\nfunction TimSort(array, compare) {\n  var minGallop = DEFAULT_MIN_GALLOPING;\n  var length = 0;\n  var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n  var stackLength = 0;\n  var runStart;\n  var runLength;\n  var stackSize = 0;\n  length = array.length;\n\n  if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n    tmpStorageLength = length >>> 1;\n  }\n\n  var tmp = [];\n  stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n  runStart = [];\n  runLength = [];\n\n  function pushRun(_runStart, _runLength) {\n    runStart[stackSize] = _runStart;\n    runLength[stackSize] = _runLength;\n    stackSize += 1;\n  }\n\n  function mergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n        if (runLength[n - 1] < runLength[n + 1]) {\n          n--;\n        }\n      } else if (runLength[n] > runLength[n + 1]) {\n        break;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function forceMergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n        n--;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function mergeAt(i) {\n    var start1 = runStart[i];\n    var length1 = runLength[i];\n    var start2 = runStart[i + 1];\n    var length2 = runLength[i + 1];\n    runLength[i] = length1 + length2;\n\n    if (i === stackSize - 3) {\n      runStart[i + 1] = runStart[i + 2];\n      runLength[i + 1] = runLength[i + 2];\n    }\n\n    stackSize--;\n    var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n    start1 += k;\n    length1 -= k;\n\n    if (length1 === 0) {\n      return;\n    }\n\n    length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n    if (length2 === 0) {\n      return;\n    }\n\n    if (length1 <= length2) {\n      mergeLow(start1, length1, start2, length2);\n    } else {\n      mergeHigh(start1, length1, start2, length2);\n    }\n  }\n\n  function mergeLow(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length1; i++) {\n      tmp[i] = array[start1 + i];\n    }\n\n    var cursor1 = 0;\n    var cursor2 = start2;\n    var dest = start1;\n    array[dest++] = array[cursor2++];\n\n    if (--length2 === 0) {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n\n      return;\n    }\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n      return;\n    }\n\n    var _minGallop = minGallop;\n    var count1, count2, exit;\n\n    while (1) {\n      count1 = 0;\n      count2 = 0;\n      exit = false;\n\n      do {\n        if (compare(array[cursor2], tmp[cursor1]) < 0) {\n          array[dest++] = array[cursor2++];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest++] = tmp[cursor1++];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n        if (count1 !== 0) {\n          for (i = 0; i < count1; i++) {\n            array[dest + i] = tmp[cursor1 + i];\n          }\n\n          dest += count1;\n          cursor1 += count1;\n          length1 -= count1;\n\n          if (length1 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = array[cursor2++];\n\n        if (--length2 === 0) {\n          exit = true;\n          break;\n        }\n\n        count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n        if (count2 !== 0) {\n          for (i = 0; i < count2; i++) {\n            array[dest + i] = array[cursor2 + i];\n          }\n\n          dest += count2;\n          cursor2 += count2;\n          length2 -= count2;\n\n          if (length2 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = tmp[cursor1++];\n\n        if (--length1 === 1) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n    minGallop < 1 && (minGallop = 1);\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n    } else if (length1 === 0) {\n      throw new Error(); // throw new Error('mergeLow preconditions were not respected');\n    } else {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n    }\n  }\n\n  function mergeHigh(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length2; i++) {\n      tmp[i] = array[start2 + i];\n    }\n\n    var cursor1 = start1 + length1 - 1;\n    var cursor2 = length2 - 1;\n    var dest = start2 + length2 - 1;\n    var customCursor = 0;\n    var customDest = 0;\n    array[dest--] = array[cursor1--];\n\n    if (--length1 === 0) {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n\n      return;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n      return;\n    }\n\n    var _minGallop = minGallop;\n\n    while (true) {\n      var count1 = 0;\n      var count2 = 0;\n      var exit = false;\n\n      do {\n        if (compare(tmp[cursor2], array[cursor1]) < 0) {\n          array[dest--] = array[cursor1--];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest--] = tmp[cursor2--];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n        if (count1 !== 0) {\n          dest -= count1;\n          cursor1 -= count1;\n          length1 -= count1;\n          customDest = dest + 1;\n          customCursor = cursor1 + 1;\n\n          for (i = count1 - 1; i >= 0; i--) {\n            array[customDest + i] = array[customCursor + i];\n          }\n\n          if (length1 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = tmp[cursor2--];\n\n        if (--length2 === 1) {\n          exit = true;\n          break;\n        }\n\n        count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n        if (count2 !== 0) {\n          dest -= count2;\n          cursor2 -= count2;\n          length2 -= count2;\n          customDest = dest + 1;\n          customCursor = cursor2 + 1;\n\n          for (i = 0; i < count2; i++) {\n            array[customDest + i] = tmp[customCursor + i];\n          }\n\n          if (length2 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = array[cursor1--];\n\n        if (--length1 === 0) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n\n    if (minGallop < 1) {\n      minGallop = 1;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n    } else if (length2 === 0) {\n      throw new Error(); // throw new Error('mergeHigh preconditions were not respected');\n    } else {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n    }\n  }\n\n  this.mergeRuns = mergeRuns;\n  this.forceMergeRuns = forceMergeRuns;\n  this.pushRun = pushRun;\n}\n\nfunction sort(array, compare, lo, hi) {\n  if (!lo) {\n    lo = 0;\n  }\n\n  if (!hi) {\n    hi = array.length;\n  }\n\n  var remaining = hi - lo;\n\n  if (remaining < 2) {\n    return;\n  }\n\n  var runLength = 0;\n\n  if (remaining < DEFAULT_MIN_MERGE) {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n    binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n    return;\n  }\n\n  var ts = new TimSort(array, compare);\n  var minRun = minRunLength(remaining);\n\n  do {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n\n    if (runLength < minRun) {\n      var force = remaining;\n\n      if (force > minRun) {\n        force = minRun;\n      }\n\n      binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n      runLength = force;\n    }\n\n    ts.pushRun(lo, runLength);\n    ts.mergeRuns();\n    remaining -= runLength;\n    lo += runLength;\n  } while (remaining !== 0);\n\n  ts.forceMergeRuns();\n}\n\nmodule.exports = sort;\n\n/***/ }),\n\n/***/ 1025:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Displayable = __webpack_require__(1018);\n\nvar BoundingRect = __webpack_require__(987);\n\nvar zrUtil = __webpack_require__(978);\n\nvar imageHelper = __webpack_require__(1026);\n\n/**\n * @alias zrender/graphic/Image\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nfunction ZImage(opts) {\n  Displayable.call(this, opts);\n}\n\nZImage.prototype = {\n  constructor: ZImage,\n  type: 'image',\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var src = style.image; // Must bind each time\n\n    style.bind(ctx, this, prevEl);\n    var image = this._image = imageHelper.createOrUpdateImage(src, this._image, this, this.onload);\n\n    if (!image || !imageHelper.isImageReady(image)) {\n      return;\n    } // 图片已经加载完成\n    // if (image.nodeName.toUpperCase() == 'IMG') {\n    //     if (!image.complete) {\n    //         return;\n    //     }\n    // }\n    // Else is canvas\n\n\n    var x = style.x || 0;\n    var y = style.y || 0;\n    var width = style.width;\n    var height = style.height;\n    var aspect = image.width / image.height;\n\n    if (width == null && height != null) {\n      // Keep image/height ratio\n      width = height * aspect;\n    } else if (height == null && width != null) {\n      height = width / aspect;\n    } else if (width == null && height == null) {\n      width = image.width;\n      height = image.height;\n    } // 设置transform\n\n\n    this.setTransform(ctx);\n\n    if (style.sWidth && style.sHeight) {\n      var sx = style.sx || 0;\n      var sy = style.sy || 0;\n      ctx.drawImage(image, sx, sy, style.sWidth, style.sHeight, x, y, width, height);\n    } else if (style.sx && style.sy) {\n      var sx = style.sx;\n      var sy = style.sy;\n      var sWidth = width - sx;\n      var sHeight = height - sy;\n      ctx.drawImage(image, sx, sy, sWidth, sHeight, x, y, width, height);\n    } else {\n      ctx.drawImage(image, x, y, width, height);\n    }\n\n    this.restoreTransform(ctx); // Draw rect text\n\n    if (style.text != null) {\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  getBoundingRect: function () {\n    var style = this.style;\n\n    if (!this._rect) {\n      this._rect = new BoundingRect(style.x || 0, style.y || 0, style.width || 0, style.height || 0);\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(ZImage, Displayable);\nvar _default = ZImage;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1026:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar LRU = __webpack_require__(1045);\n\nvar globalImageCache = new LRU(50);\n/**\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\nfunction findExistImage(newImageOrSrc) {\n  if (typeof newImageOrSrc === 'string') {\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    return cachedImgObj && cachedImgObj.image;\n  } else {\n    return newImageOrSrc;\n  }\n}\n/**\n * Caution: User should cache loaded images, but not just count on LRU.\n * Consider if required images more than LRU size, will dead loop occur?\n *\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @param {HTMLImageElement|HTMLCanvasElement|Canvas} image Existent image.\n * @param {module:zrender/Element} [hostEl] For calling `dirty`.\n * @param {Function} [cb] params: (image, cbPayload)\n * @param {Object} [cbPayload] Payload on cb calling.\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\n\nfunction createOrUpdateImage(newImageOrSrc, image, hostEl, cb, cbPayload) {\n  if (!newImageOrSrc) {\n    return image;\n  } else if (typeof newImageOrSrc === 'string') {\n    // Image should not be loaded repeatly.\n    if (image && image.__zrImageSrc === newImageOrSrc || !hostEl) {\n      return image;\n    } // Only when there is no existent image or existent image src\n    // is different, this method is responsible for load.\n\n\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    var pendingWrap = {\n      hostEl: hostEl,\n      cb: cb,\n      cbPayload: cbPayload\n    };\n\n    if (cachedImgObj) {\n      image = cachedImgObj.image;\n      !isImageReady(image) && cachedImgObj.pending.push(pendingWrap);\n    } else {\n      !image && (image = new Image());\n      image.onload = imageOnLoad;\n      globalImageCache.put(newImageOrSrc, image.__cachedImgObj = {\n        image: image,\n        pending: [pendingWrap]\n      });\n      image.src = image.__zrImageSrc = newImageOrSrc;\n    }\n\n    return image;\n  } // newImageOrSrc is an HTMLImageElement or HTMLCanvasElement or Canvas\n  else {\n      return newImageOrSrc;\n    }\n}\n\nfunction imageOnLoad() {\n  var cachedImgObj = this.__cachedImgObj;\n  this.onload = this.__cachedImgObj = null;\n\n  for (var i = 0; i < cachedImgObj.pending.length; i++) {\n    var pendingWrap = cachedImgObj.pending[i];\n    var cb = pendingWrap.cb;\n    cb && cb(this, pendingWrap.cbPayload);\n    pendingWrap.hostEl.dirty();\n  }\n\n  cachedImgObj.pending.length = 0;\n}\n\nfunction isImageReady(image) {\n  return image && image.width && image.height;\n}\n\nexports.findExistImage = findExistImage;\nexports.createOrUpdateImage = createOrUpdateImage;\nexports.isImageReady = isImageReady;\n\n/***/ }),\n\n/***/ 1027:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar _clazz = __webpack_require__(992);\n\nvar parseClassType = _clazz.parseClassType;\nvar base = 0;\nvar DELIMITER = '_';\n/**\n * @public\n * @param {string} type\n * @return {string}\n */\n\nfunction getUID(type) {\n  // Considering the case of crossing js context,\n  // use Math.random to make id as unique as possible.\n  return [type || '', base++, Math.random()].join(DELIMITER);\n}\n/**\n * @inner\n */\n\n\nfunction enableSubTypeDefaulter(entity) {\n  var subTypeDefaulters = {};\n\n  entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n    componentType = parseClassType(componentType);\n    subTypeDefaulters[componentType.main] = defaulter;\n  };\n\n  entity.determineSubType = function (componentType, option) {\n    var type = option.type;\n\n    if (!type) {\n      var componentTypeMain = parseClassType(componentType).main;\n\n      if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n        type = subTypeDefaulters[componentTypeMain](option);\n      }\n    }\n\n    return type;\n  };\n\n  return entity;\n}\n/**\n * Topological travel on Activity Network (Activity On Vertices).\n * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n *\n * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n *\n * If there is circle dependencey, Error will be thrown.\n *\n */\n\n\nfunction enableTopologicalTravel(entity, dependencyGetter) {\n  /**\n   * @public\n   * @param {Array.<string>} targetNameList Target Component type list.\n   *                                           Can be ['aa', 'bb', 'aa.xx']\n   * @param {Array.<string>} fullNameList By which we can build dependency graph.\n   * @param {Function} callback Params: componentType, dependencies.\n   * @param {Object} context Scope of callback.\n   */\n  entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n    if (!targetNameList.length) {\n      return;\n    }\n\n    var result = makeDepndencyGraph(fullNameList);\n    var graph = result.graph;\n    var stack = result.noEntryList;\n    var targetNameSet = {};\n    zrUtil.each(targetNameList, function (name) {\n      targetNameSet[name] = true;\n    });\n\n    while (stack.length) {\n      var currComponentType = stack.pop();\n      var currVertex = graph[currComponentType];\n      var isInTargetNameSet = !!targetNameSet[currComponentType];\n\n      if (isInTargetNameSet) {\n        callback.call(context, currComponentType, currVertex.originalDeps.slice());\n        delete targetNameSet[currComponentType];\n      }\n\n      zrUtil.each(currVertex.successor, isInTargetNameSet ? removeEdgeAndAdd : removeEdge);\n    }\n\n    zrUtil.each(targetNameSet, function () {\n      throw new Error('Circle dependency may exists');\n    });\n\n    function removeEdge(succComponentType) {\n      graph[succComponentType].entryCount--;\n\n      if (graph[succComponentType].entryCount === 0) {\n        stack.push(succComponentType);\n      }\n    } // Consider this case: legend depends on series, and we call\n    // chart.setOption({series: [...]}), where only series is in option.\n    // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n    // not be called, but only sereis.mergeOption is called. Thus legend\n    // have no chance to update its local record about series (like which\n    // name of series is available in legend).\n\n\n    function removeEdgeAndAdd(succComponentType) {\n      targetNameSet[succComponentType] = true;\n      removeEdge(succComponentType);\n    }\n  };\n  /**\n   * DepndencyGraph: {Object}\n   * key: conponentType,\n   * value: {\n   *     successor: [conponentTypes...],\n   *     originalDeps: [conponentTypes...],\n   *     entryCount: {number}\n   * }\n   */\n\n\n  function makeDepndencyGraph(fullNameList) {\n    var graph = {};\n    var noEntryList = [];\n    zrUtil.each(fullNameList, function (name) {\n      var thisItem = createDependencyGraphItem(graph, name);\n      var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n      var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n      thisItem.entryCount = availableDeps.length;\n\n      if (thisItem.entryCount === 0) {\n        noEntryList.push(name);\n      }\n\n      zrUtil.each(availableDeps, function (dependentName) {\n        if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n          thisItem.predecessor.push(dependentName);\n        }\n\n        var thatItem = createDependencyGraphItem(graph, dependentName);\n\n        if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n          thatItem.successor.push(name);\n        }\n      });\n    });\n    return {\n      graph: graph,\n      noEntryList: noEntryList\n    };\n  }\n\n  function createDependencyGraphItem(graph, name) {\n    if (!graph[name]) {\n      graph[name] = {\n        predecessor: [],\n        successor: []\n      };\n    }\n\n    return graph[name];\n  }\n\n  function getAvailableDependencies(originalDeps, fullNameList) {\n    var availableDeps = [];\n    zrUtil.each(originalDeps, function (dep) {\n      zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n    });\n    return availableDeps;\n  }\n}\n\nexports.getUID = getUID;\nexports.enableSubTypeDefaulter = enableSubTypeDefaulter;\nexports.enableTopologicalTravel = enableTopologicalTravel;\n\n/***/ }),\n\n/***/ 1028:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar axisHelper = __webpack_require__(996);\n\nfunction getName(obj) {\n  if (zrUtil.isObject(obj) && obj.value != null) {\n    return obj.value;\n  } else {\n    return obj + '';\n  }\n}\n\nvar _default = {\n  /**\n   * Format labels\n   * @return {Array.<string>}\n   */\n  getFormattedLabels: function () {\n    return axisHelper.getFormattedLabels(this.axis, this.get('axisLabel.formatter'));\n  },\n\n  /**\n   * Get categories\n   */\n  getCategories: function () {\n    return this.get('type') === 'category' && zrUtil.map(this.get('data'), getName);\n  },\n\n  /**\n   * @param {boolean} origin\n   * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n   */\n  getMin: function (origin) {\n    var option = this.option;\n    var min = !origin && option.rangeStart != null ? option.rangeStart : option.min;\n\n    if (this.axis && min != null && min !== 'dataMin' && typeof min !== 'function' && !zrUtil.eqNaN(min)) {\n      min = this.axis.scale.parse(min);\n    }\n\n    return min;\n  },\n\n  /**\n   * @param {boolean} origin\n   * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n   */\n  getMax: function (origin) {\n    var option = this.option;\n    var max = !origin && option.rangeEnd != null ? option.rangeEnd : option.max;\n\n    if (this.axis && max != null && max !== 'dataMax' && typeof max !== 'function' && !zrUtil.eqNaN(max)) {\n      max = this.axis.scale.parse(max);\n    }\n\n    return max;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  getNeedCrossZero: function () {\n    var option = this.option;\n    return option.rangeStart != null || option.rangeEnd != null ? false : !option.scale;\n  },\n\n  /**\n   * Should be implemented by each axis model if necessary.\n   * @return {module:echarts/model/Component} coordinate system model\n   */\n  getCoordSysModel: zrUtil.noop,\n\n  /**\n   * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n   * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n   */\n  setRange: function (rangeStart, rangeEnd) {\n    this.option.rangeStart = rangeStart;\n    this.option.rangeEnd = rangeEnd;\n  },\n\n  /**\n   * Reset range\n   */\n  resetRange: function () {\n    // rangeStart and rangeEnd is readonly.\n    this.option.rangeStart = this.option.rangeEnd = null;\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1029:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(983);\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = __webpack_require__(979);\n\nvar zrUtil = __webpack_require__(978);\n\nvar env = __webpack_require__(986);\n\nvar modelUtil = __webpack_require__(982);\n\nvar helper = __webpack_require__(1030);\n\nvar AxisProxy = __webpack_require__(1153);\n\nvar each = zrUtil.each;\nvar eachAxisDim = helper.eachAxisDim;\nvar DataZoomModel = echarts.extendComponentModel({\n  type: 'dataZoom',\n  dependencies: ['xAxis', 'yAxis', 'zAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'series'],\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    zlevel: 0,\n    z: 4,\n    // Higher than normal component (z: 2).\n    orient: null,\n    // Default auto by axisIndex. Possible value: 'horizontal', 'vertical'.\n    xAxisIndex: null,\n    // Default the first horizontal category axis.\n    yAxisIndex: null,\n    // Default the first vertical category axis.\n    filterMode: 'filter',\n    // Possible values: 'filter' or 'empty' or 'weakFilter'.\n    // 'filter': data items which are out of window will be removed. This option is\n    //          applicable when filtering outliers. For each data item, it will be\n    //          filtered if one of the relevant dimensions is out of the window.\n    // 'weakFilter': data items which are out of window will be removed. This option\n    //          is applicable when filtering outliers. For each data item, it will be\n    //          filtered only if all  of the relevant dimensions are out of the same\n    //          side of the window.\n    // 'empty': data items which are out of window will be set to empty.\n    //          This option is applicable when user should not neglect\n    //          that there are some data items out of window.\n    // 'none': Do not filter.\n    // Taking line chart as an example, line will be broken in\n    // the filtered points when filterModel is set to 'empty', but\n    // be connected when set to 'filter'.\n    throttle: null,\n    // Dispatch action by the fixed rate, avoid frequency.\n    // default 100. Do not throttle when use null/undefined.\n    // If animation === true and animationDurationUpdate > 0,\n    // default value is 100, otherwise 20.\n    start: 0,\n    // Start percent. 0 ~ 100\n    end: 100,\n    // End percent. 0 ~ 100\n    startValue: null,\n    // Start value. If startValue specified, start is ignored.\n    endValue: null,\n    // End value. If endValue specified, end is ignored.\n    minSpan: null,\n    // 0 ~ 100\n    maxSpan: null,\n    // 0 ~ 100\n    minValueSpan: null,\n    // The range of dataZoom can not be smaller than that.\n    maxValueSpan: null,\n    // The range of dataZoom can not be larger than that.\n    rangeMode: null // Array, can be 'value' or 'percent'.\n\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel) {\n    /**\n     * key like x_0, y_1\n     * @private\n     * @type {Object}\n     */\n    this._dataIntervalByAxis = {};\n    /**\n     * @private\n     */\n\n    this._dataInfo = {};\n    /**\n     * key like x_0, y_1\n     * @private\n     */\n\n    this._axisProxies = {};\n    /**\n     * @readOnly\n     */\n\n    this.textStyleModel;\n    /**\n     * @private\n     */\n\n    this._autoThrottle = true;\n    /**\n     * 'percent' or 'value'\n     * @private\n     */\n\n    this._rangePropMode = ['percent', 'percent'];\n    var rawOption = retrieveRaw(option);\n    this.mergeDefaultAndTheme(option, ecModel);\n    this.doInit(rawOption);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (newOption) {\n    var rawOption = retrieveRaw(newOption); //FIX #2591\n\n    zrUtil.merge(this.option, newOption, true);\n    this.doInit(rawOption);\n  },\n\n  /**\n   * @protected\n   */\n  doInit: function (rawOption) {\n    var thisOption = this.option; // Disable realtime view update if canvas is not supported.\n\n    if (!env.canvasSupported) {\n      thisOption.realtime = false;\n    }\n\n    this._setDefaultThrottle(rawOption);\n\n    updateRangeUse(this, rawOption);\n    each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n      // start/end has higher priority over startValue/endValue if they\n      // both set, but we should make chart.setOption({endValue: 1000})\n      // effective, rather than chart.setOption({endValue: 1000, end: null}).\n      if (this._rangePropMode[index] === 'value') {\n        thisOption[names[0]] = null;\n      } // Otherwise do nothing and use the merge result.\n\n    }, this);\n    this.textStyleModel = this.getModel('textStyle');\n\n    this._resetTarget();\n\n    this._giveAxisProxies();\n  },\n\n  /**\n   * @private\n   */\n  _giveAxisProxies: function () {\n    var axisProxies = this._axisProxies;\n    this.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel, ecModel) {\n      var axisModel = this.dependentModels[dimNames.axis][axisIndex]; // If exists, share axisProxy with other dataZoomModels.\n\n      var axisProxy = axisModel.__dzAxisProxy || ( // Use the first dataZoomModel as the main model of axisProxy.\n      axisModel.__dzAxisProxy = new AxisProxy(dimNames.name, axisIndex, this, ecModel)); // FIXME\n      // dispose __dzAxisProxy\n\n      axisProxies[dimNames.name + '_' + axisIndex] = axisProxy;\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _resetTarget: function () {\n    var thisOption = this.option;\n\n    var autoMode = this._judgeAutoMode();\n\n    eachAxisDim(function (dimNames) {\n      var axisIndexName = dimNames.axisIndex;\n      thisOption[axisIndexName] = modelUtil.normalizeToArray(thisOption[axisIndexName]);\n    }, this);\n\n    if (autoMode === 'axisIndex') {\n      this._autoSetAxisIndex();\n    } else if (autoMode === 'orient') {\n      this._autoSetOrient();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _judgeAutoMode: function () {\n    // Auto set only works for setOption at the first time.\n    // The following is user's reponsibility. So using merged\n    // option is OK.\n    var thisOption = this.option;\n    var hasIndexSpecified = false;\n    eachAxisDim(function (dimNames) {\n      // When user set axisIndex as a empty array, we think that user specify axisIndex\n      // but do not want use auto mode. Because empty array may be encountered when\n      // some error occured.\n      if (thisOption[dimNames.axisIndex] != null) {\n        hasIndexSpecified = true;\n      }\n    }, this);\n    var orient = thisOption.orient;\n\n    if (orient == null && hasIndexSpecified) {\n      return 'orient';\n    } else if (!hasIndexSpecified) {\n      if (orient == null) {\n        thisOption.orient = 'horizontal';\n      }\n\n      return 'axisIndex';\n    }\n  },\n\n  /**\n   * @private\n   */\n  _autoSetAxisIndex: function () {\n    var autoAxisIndex = true;\n    var orient = this.get('orient', true);\n    var thisOption = this.option;\n    var dependentModels = this.dependentModels;\n\n    if (autoAxisIndex) {\n      // Find axis that parallel to dataZoom as default.\n      var dimName = orient === 'vertical' ? 'y' : 'x';\n\n      if (dependentModels[dimName + 'Axis'].length) {\n        thisOption[dimName + 'AxisIndex'] = [0];\n        autoAxisIndex = false;\n      } else {\n        each(dependentModels.singleAxis, function (singleAxisModel) {\n          if (autoAxisIndex && singleAxisModel.get('orient', true) === orient) {\n            thisOption.singleAxisIndex = [singleAxisModel.componentIndex];\n            autoAxisIndex = false;\n          }\n        });\n      }\n    }\n\n    if (autoAxisIndex) {\n      // Find the first category axis as default. (consider polar)\n      eachAxisDim(function (dimNames) {\n        if (!autoAxisIndex) {\n          return;\n        }\n\n        var axisIndices = [];\n        var axisModels = this.dependentModels[dimNames.axis];\n\n        if (axisModels.length && !axisIndices.length) {\n          for (var i = 0, len = axisModels.length; i < len; i++) {\n            if (axisModels[i].get('type') === 'category') {\n              axisIndices.push(i);\n            }\n          }\n        }\n\n        thisOption[dimNames.axisIndex] = axisIndices;\n\n        if (axisIndices.length) {\n          autoAxisIndex = false;\n        }\n      }, this);\n    }\n\n    if (autoAxisIndex) {\n      // FIXME\n      // 这里是兼容ec2的写法（没指定xAxisIndex和yAxisIndex时把scatter和双数值轴折柱纳入dataZoom控制），\n      // 但是实际是否需要Grid.js#getScaleByOption来判断（考虑time，log等axis type）？\n      // If both dataZoom.xAxisIndex and dataZoom.yAxisIndex is not specified,\n      // dataZoom component auto adopts series that reference to\n      // both xAxis and yAxis which type is 'value'.\n      this.ecModel.eachSeries(function (seriesModel) {\n        if (this._isSeriesHasAllAxesTypeOf(seriesModel, 'value')) {\n          eachAxisDim(function (dimNames) {\n            var axisIndices = thisOption[dimNames.axisIndex];\n            var axisIndex = seriesModel.get(dimNames.axisIndex);\n            var axisId = seriesModel.get(dimNames.axisId);\n            var axisModel = seriesModel.ecModel.queryComponents({\n              mainType: dimNames.axis,\n              index: axisIndex,\n              id: axisId\n            })[0];\n            axisIndex = axisModel.componentIndex;\n\n            if (zrUtil.indexOf(axisIndices, axisIndex) < 0) {\n              axisIndices.push(axisIndex);\n            }\n          });\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _autoSetOrient: function () {\n    var dim; // Find the first axis\n\n    this.eachTargetAxis(function (dimNames) {\n      !dim && (dim = dimNames.name);\n    }, this);\n    this.option.orient = dim === 'y' ? 'vertical' : 'horizontal';\n  },\n\n  /**\n   * @private\n   */\n  _isSeriesHasAllAxesTypeOf: function (seriesModel, axisType) {\n    // FIXME\n    // 需要series的xAxisIndex和yAxisIndex都首先自动设置上。\n    // 例如series.type === scatter时。\n    var is = true;\n    eachAxisDim(function (dimNames) {\n      var seriesAxisIndex = seriesModel.get(dimNames.axisIndex);\n      var axisModel = this.dependentModels[dimNames.axis][seriesAxisIndex];\n\n      if (!axisModel || axisModel.get('type') !== axisType) {\n        is = false;\n      }\n    }, this);\n    return is;\n  },\n\n  /**\n   * @private\n   */\n  _setDefaultThrottle: function (rawOption) {\n    // When first time user set throttle, auto throttle ends.\n    if (rawOption.hasOwnProperty('throttle')) {\n      this._autoThrottle = false;\n    }\n\n    if (this._autoThrottle) {\n      var globalOption = this.ecModel.option;\n      this.option.throttle = globalOption.animation && globalOption.animationDurationUpdate > 0 ? 100 : 20;\n    }\n  },\n\n  /**\n   * @public\n   */\n  getFirstTargetAxisModel: function () {\n    var firstAxisModel;\n    eachAxisDim(function (dimNames) {\n      if (firstAxisModel == null) {\n        var indices = this.get(dimNames.axisIndex);\n\n        if (indices.length) {\n          firstAxisModel = this.dependentModels[dimNames.axis][indices[0]];\n        }\n      }\n    }, this);\n    return firstAxisModel;\n  },\n\n  /**\n   * @public\n   * @param {Function} callback param: axisModel, dimNames, axisIndex, dataZoomModel, ecModel\n   */\n  eachTargetAxis: function (callback, context) {\n    var ecModel = this.ecModel;\n    eachAxisDim(function (dimNames) {\n      each(this.get(dimNames.axisIndex), function (axisIndex) {\n        callback.call(context, dimNames, axisIndex, this, ecModel);\n      }, this);\n    }, this);\n  },\n\n  /**\n   * @param {string} dimName\n   * @param {number} axisIndex\n   * @return {module:echarts/component/dataZoom/AxisProxy} If not found, return null/undefined.\n   */\n  getAxisProxy: function (dimName, axisIndex) {\n    return this._axisProxies[dimName + '_' + axisIndex];\n  },\n\n  /**\n   * @param {string} dimName\n   * @param {number} axisIndex\n   * @return {module:echarts/model/Model} If not found, return null/undefined.\n   */\n  getAxisModel: function (dimName, axisIndex) {\n    var axisProxy = this.getAxisProxy(dimName, axisIndex);\n    return axisProxy && axisProxy.getAxisModel();\n  },\n\n  /**\n   * If not specified, set to undefined.\n   *\n   * @public\n   * @param {Object} opt\n   * @param {number} [opt.start]\n   * @param {number} [opt.end]\n   * @param {number} [opt.startValue]\n   * @param {number} [opt.endValue]\n   * @param {boolean} [ignoreUpdateRangeUsg=false]\n   */\n  setRawRange: function (opt, ignoreUpdateRangeUsg) {\n    var option = this.option;\n    each([['start', 'startValue'], ['end', 'endValue']], function (names) {\n      // If only one of 'start' and 'startValue' is not null/undefined, the other\n      // should be cleared, which enable clear the option.\n      // If both of them are not set, keep option with the original value, which\n      // enable use only set start but not set end when calling `dispatchAction`.\n      // The same as 'end' and 'endValue'.\n      if (opt[names[0]] != null || opt[names[1]] != null) {\n        option[names[0]] = opt[names[0]];\n        option[names[1]] = opt[names[1]];\n      }\n    }, this);\n    !ignoreUpdateRangeUsg && updateRangeUse(this, opt);\n  },\n\n  /**\n   * @public\n   * @return {Array.<number>} [startPercent, endPercent]\n   */\n  getPercentRange: function () {\n    var axisProxy = this.findRepresentativeAxisProxy();\n\n    if (axisProxy) {\n      return axisProxy.getDataPercentWindow();\n    }\n  },\n\n  /**\n   * @public\n   * For example, chart.getModel().getComponent('dataZoom').getValueRange('y', 0);\n   *\n   * @param {string} [axisDimName]\n   * @param {number} [axisIndex]\n   * @return {Array.<number>} [startValue, endValue] value can only be '-' or finite number.\n   */\n  getValueRange: function (axisDimName, axisIndex) {\n    if (axisDimName == null && axisIndex == null) {\n      var axisProxy = this.findRepresentativeAxisProxy();\n\n      if (axisProxy) {\n        return axisProxy.getDataValueWindow();\n      }\n    } else {\n      return this.getAxisProxy(axisDimName, axisIndex).getDataValueWindow();\n    }\n  },\n\n  /**\n   * @public\n   * @param {module:echarts/model/Model} [axisModel] If axisModel given, find axisProxy\n   *      corresponding to the axisModel\n   * @return {module:echarts/component/dataZoom/AxisProxy}\n   */\n  findRepresentativeAxisProxy: function (axisModel) {\n    if (axisModel) {\n      return axisModel.__dzAxisProxy;\n    } // Find the first hosted axisProxy\n\n\n    var axisProxies = this._axisProxies;\n\n    for (var key in axisProxies) {\n      if (axisProxies.hasOwnProperty(key) && axisProxies[key].hostedBy(this)) {\n        return axisProxies[key];\n      }\n    } // If no hosted axis find not hosted axisProxy.\n    // Consider this case: dataZoomModel1 and dataZoomModel2 control the same axis,\n    // and the option.start or option.end settings are different. The percentRange\n    // should follow axisProxy.\n    // (We encounter this problem in toolbox data zoom.)\n\n\n    for (var key in axisProxies) {\n      if (axisProxies.hasOwnProperty(key) && !axisProxies[key].hostedBy(this)) {\n        return axisProxies[key];\n      }\n    }\n  },\n\n  /**\n   * @return {Array.<string>}\n   */\n  getRangePropMode: function () {\n    return this._rangePropMode.slice();\n  }\n});\n\nfunction retrieveRaw(option) {\n  var ret = {};\n  each(['start', 'end', 'startValue', 'endValue', 'throttle'], function (name) {\n    option.hasOwnProperty(name) && (ret[name] = option[name]);\n  });\n  return ret;\n}\n\nfunction updateRangeUse(dataZoomModel, rawOption) {\n  var rangePropMode = dataZoomModel._rangePropMode;\n  var rangeModeInOption = dataZoomModel.get('rangeMode');\n  each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n    var percentSpecified = rawOption[names[0]] != null;\n    var valueSpecified = rawOption[names[1]] != null;\n\n    if (percentSpecified && !valueSpecified) {\n      rangePropMode[index] = 'percent';\n    } else if (!percentSpecified && valueSpecified) {\n      rangePropMode[index] = 'value';\n    } else if (rangeModeInOption) {\n      rangePropMode[index] = rangeModeInOption[index];\n    } else if (percentSpecified) {\n      // percentSpecified && valueSpecified\n      rangePropMode[index] = 'percent';\n    } // else remain its original setting.\n\n  });\n}\n\nvar _default = DataZoomModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1030:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar formatUtil = __webpack_require__(985);\n\nvar AXIS_DIMS = ['x', 'y', 'z', 'radius', 'angle', 'single']; // Supported coords.\n\nvar COORDS = ['cartesian2d', 'polar', 'singleAxis'];\n/**\n * @param {string} coordType\n * @return {boolean}\n */\n\nfunction isCoordSupported(coordType) {\n  return zrUtil.indexOf(COORDS, coordType) >= 0;\n}\n/**\n * Create \"each\" method to iterate names.\n *\n * @pubilc\n * @param  {Array.<string>} names\n * @param  {Array.<string>=} attrs\n * @return {Function}\n */\n\n\nfunction createNameEach(names, attrs) {\n  names = names.slice();\n  var capitalNames = zrUtil.map(names, formatUtil.capitalFirst);\n  attrs = (attrs || []).slice();\n  var capitalAttrs = zrUtil.map(attrs, formatUtil.capitalFirst);\n  return function (callback, context) {\n    zrUtil.each(names, function (name, index) {\n      var nameObj = {\n        name: name,\n        capital: capitalNames[index]\n      };\n\n      for (var j = 0; j < attrs.length; j++) {\n        nameObj[attrs[j]] = name + capitalAttrs[j];\n      }\n\n      callback.call(context, nameObj);\n    });\n  };\n}\n/**\n * Iterate each dimension name.\n *\n * @public\n * @param {Function} callback The parameter is like:\n *                            {\n *                                name: 'angle',\n *                                capital: 'Angle',\n *                                axis: 'angleAxis',\n *                                axisIndex: 'angleAixs',\n *                                index: 'angleIndex'\n *                            }\n * @param {Object} context\n */\n\n\nvar eachAxisDim = createNameEach(AXIS_DIMS, ['axisIndex', 'axis', 'index', 'id']);\n/**\n * If tow dataZoomModels has the same axis controlled, we say that they are 'linked'.\n * dataZoomModels and 'links' make up one or more graphics.\n * This function finds the graphic where the source dataZoomModel is in.\n *\n * @public\n * @param {Function} forEachNode Node iterator.\n * @param {Function} forEachEdgeType edgeType iterator\n * @param {Function} edgeIdGetter Giving node and edgeType, return an array of edge id.\n * @return {Function} Input: sourceNode, Output: Like {nodes: [], dims: {}}\n */\n\nfunction createLinkedNodesFinder(forEachNode, forEachEdgeType, edgeIdGetter) {\n  return function (sourceNode) {\n    var result = {\n      nodes: [],\n      records: {} // key: edgeType.name, value: Object (key: edge id, value: boolean).\n\n    };\n    forEachEdgeType(function (edgeType) {\n      result.records[edgeType.name] = {};\n    });\n\n    if (!sourceNode) {\n      return result;\n    }\n\n    absorb(sourceNode, result);\n    var existsLink;\n\n    do {\n      existsLink = false;\n      forEachNode(processSingleNode);\n    } while (existsLink);\n\n    function processSingleNode(node) {\n      if (!isNodeAbsorded(node, result) && isLinked(node, result)) {\n        absorb(node, result);\n        existsLink = true;\n      }\n    }\n\n    return result;\n  };\n\n  function isNodeAbsorded(node, result) {\n    return zrUtil.indexOf(result.nodes, node) >= 0;\n  }\n\n  function isLinked(node, result) {\n    var hasLink = false;\n    forEachEdgeType(function (edgeType) {\n      zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n        result.records[edgeType.name][edgeId] && (hasLink = true);\n      });\n    });\n    return hasLink;\n  }\n\n  function absorb(node, result) {\n    result.nodes.push(node);\n    forEachEdgeType(function (edgeType) {\n      zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n        result.records[edgeType.name][edgeId] = true;\n      });\n    });\n  }\n}\n\nexports.isCoordSupported = isCoordSupported;\nexports.createNameEach = createNameEach;\nexports.eachAxisDim = eachAxisDim;\nexports.createLinkedNodesFinder = createLinkedNodesFinder;\n\n/***/ }),\n\n/***/ 1031:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar ComponentView = __webpack_require__(1039);\n\nvar _default = ComponentView.extend({\n  type: 'dataZoom',\n  render: function (dataZoomModel, ecModel, api, payload) {\n    this.dataZoomModel = dataZoomModel;\n    this.ecModel = ecModel;\n    this.api = api;\n  },\n\n  /**\n   * Find the first target coordinate system.\n   *\n   * @protected\n   * @return {Object} {\n   *                   grid: [\n   *                       {model: coord0, axisModels: [axis1, axis3], coordIndex: 1},\n   *                       {model: coord1, axisModels: [axis0, axis2], coordIndex: 0},\n   *                       ...\n   *                   ],  // cartesians must not be null/undefined.\n   *                   polar: [\n   *                       {model: coord0, axisModels: [axis4], coordIndex: 0},\n   *                       ...\n   *                   ],  // polars must not be null/undefined.\n   *                   singleAxis: [\n   *                       {model: coord0, axisModels: [], coordIndex: 0}\n   *                   ]\n   */\n  getTargetCoordInfo: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var ecModel = this.ecModel;\n    var coordSysLists = {};\n    dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\n      var axisModel = ecModel.getComponent(dimNames.axis, axisIndex);\n\n      if (axisModel) {\n        var coordModel = axisModel.getCoordSysModel();\n        coordModel && save(coordModel, axisModel, coordSysLists[coordModel.mainType] || (coordSysLists[coordModel.mainType] = []), coordModel.componentIndex);\n      }\n    }, this);\n\n    function save(coordModel, axisModel, store, coordIndex) {\n      var item;\n\n      for (var i = 0; i < store.length; i++) {\n        if (store[i].model === coordModel) {\n          item = store[i];\n          break;\n        }\n      }\n\n      if (!item) {\n        store.push(item = {\n          model: coordModel,\n          axisModels: [],\n          coordIndex: coordIndex\n        });\n      }\n\n      item.axisModels.push(axisModel);\n    }\n\n    return coordSysLists;\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1032:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar guid = __webpack_require__(1042);\n\nvar env = __webpack_require__(986);\n\nvar zrUtil = __webpack_require__(978);\n\nvar Handler = __webpack_require__(1090);\n\nvar Storage = __webpack_require__(1092);\n\nvar Painter = __webpack_require__(1096);\n\nvar Animation = __webpack_require__(1098);\n\nvar HandlerProxy = __webpack_require__(1099);\n\n/*!\n* ZRender, a high performance 2d drawing library.\n*\n* Copyright (c) 2013, Baidu Inc.\n* All rights reserved.\n*\n* LICENSE\n* https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n*/\nvar useVML = !env.canvasSupported;\nvar painterCtors = {\n  canvas: Painter\n};\nvar instances = {}; // ZRender实例map索引\n\n/**\n * @type {string}\n */\n\nvar version = '3.7.4';\n/**\n * Initializing a zrender instance\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n * @return {module:zrender/ZRender}\n */\n\nfunction init(dom, opts) {\n  var zr = new ZRender(guid(), dom, opts);\n  instances[zr.id] = zr;\n  return zr;\n}\n/**\n * Dispose zrender instance\n * @param {module:zrender/ZRender} zr\n */\n\n\nfunction dispose(zr) {\n  if (zr) {\n    zr.dispose();\n  } else {\n    for (var key in instances) {\n      if (instances.hasOwnProperty(key)) {\n        instances[key].dispose();\n      }\n    }\n\n    instances = {};\n  }\n\n  return this;\n}\n/**\n * Get zrender instance by id\n * @param {string} id zrender instance id\n * @return {module:zrender/ZRender}\n */\n\n\nfunction getInstance(id) {\n  return instances[id];\n}\n\nfunction registerPainter(name, Ctor) {\n  painterCtors[name] = Ctor;\n}\n\nfunction delInstance(id) {\n  delete instances[id];\n}\n/**\n * @module zrender/ZRender\n */\n\n/**\n * @constructor\n * @alias module:zrender/ZRender\n * @param {string} id\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n */\n\n\nvar ZRender = function (id, dom, opts) {\n  opts = opts || {};\n  /**\n   * @type {HTMLDomElement}\n   */\n\n  this.dom = dom;\n  /**\n   * @type {string}\n   */\n\n  this.id = id;\n  var self = this;\n  var storage = new Storage();\n  var rendererType = opts.renderer; // TODO WebGL\n\n  if (useVML) {\n    if (!painterCtors.vml) {\n      throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n    }\n\n    rendererType = 'vml';\n  } else if (!rendererType || !painterCtors[rendererType]) {\n    rendererType = 'canvas';\n  }\n\n  var painter = new painterCtors[rendererType](dom, storage, opts);\n  this.storage = storage;\n  this.painter = painter;\n  var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;\n  this.handler = new Handler(storage, painter, handerProxy, painter.root);\n  /**\n   * @type {module:zrender/animation/Animation}\n   */\n\n  this.animation = new Animation({\n    stage: {\n      update: zrUtil.bind(this.flush, this)\n    }\n  });\n  this.animation.start();\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._needsRefresh; // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n  // FIXME 有点ugly\n\n  var oldDelFromStorage = storage.delFromStorage;\n  var oldAddToStorage = storage.addToStorage;\n\n  storage.delFromStorage = function (el) {\n    oldDelFromStorage.call(storage, el);\n    el && el.removeSelfFromZr(self);\n  };\n\n  storage.addToStorage = function (el) {\n    oldAddToStorage.call(storage, el);\n    el.addSelfToZr(self);\n  };\n};\n\nZRender.prototype = {\n  constructor: ZRender,\n\n  /**\n   * 获取实例唯一标识\n   * @return {string}\n   */\n  getId: function () {\n    return this.id;\n  },\n\n  /**\n   * 添加元素\n   * @param  {module:zrender/Element} el\n   */\n  add: function (el) {\n    this.storage.addRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * 删除元素\n   * @param  {module:zrender/Element} el\n   */\n  remove: function (el) {\n    this.storage.delRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Change configuration of layer\n   * @param {string} zLevel\n   * @param {Object} config\n   * @param {string} [config.clearColor=0] Clear color\n   * @param {string} [config.motionBlur=false] If enable motion blur\n   * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n  */\n  configLayer: function (zLevel, config) {\n    this.painter.configLayer(zLevel, config);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Repaint the canvas immediately\n   */\n  refreshImmediately: function () {\n    // var start = new Date();\n    // Clear needsRefresh ahead to avoid something wrong happens in refresh\n    // Or it will cause zrender refreshes again and again.\n    this._needsRefresh = false;\n    this.painter.refresh();\n    /**\n     * Avoid trigger zr.refresh in Element#beforeUpdate hook\n     */\n\n    this._needsRefresh = false; // var end = new Date();\n    // var log = document.getElementById('log');\n    // if (log) {\n    //     log.innerHTML = log.innerHTML + '<br>' + (end - start);\n    // }\n  },\n\n  /**\n   * Mark and repaint the canvas in the next frame of browser\n   */\n  refresh: function () {\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Perform all refresh\n   */\n  flush: function () {\n    if (this._needsRefresh) {\n      this.refreshImmediately();\n    }\n\n    if (this._needsRefreshHover) {\n      this.refreshHoverImmediately();\n    }\n  },\n\n  /**\n   * Add element to hover layer\n   * @param  {module:zrender/Element} el\n   * @param {Object} style\n   */\n  addHover: function (el, style) {\n    if (this.painter.addHover) {\n      this.painter.addHover(el, style);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Add element from hover layer\n   * @param  {module:zrender/Element} el\n   */\n  removeHover: function (el) {\n    if (this.painter.removeHover) {\n      this.painter.removeHover(el);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Clear all hover elements in hover layer\n   * @param  {module:zrender/Element} el\n   */\n  clearHover: function () {\n    if (this.painter.clearHover) {\n      this.painter.clearHover();\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Refresh hover in next frame\n   */\n  refreshHover: function () {\n    this._needsRefreshHover = true;\n  },\n\n  /**\n   * Refresh hover immediately\n   */\n  refreshHoverImmediately: function () {\n    this._needsRefreshHover = false;\n    this.painter.refreshHover && this.painter.refreshHover();\n  },\n\n  /**\n   * Resize the canvas.\n   * Should be invoked when container size is changed\n   * @param {Object} [opts]\n   * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n   * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n   */\n  resize: function (opts) {\n    opts = opts || {};\n    this.painter.resize(opts.width, opts.height);\n    this.handler.resize();\n  },\n\n  /**\n   * Stop and clear all animation immediately\n   */\n  clearAnimation: function () {\n    this.animation.clear();\n  },\n\n  /**\n   * Get container width\n   */\n  getWidth: function () {\n    return this.painter.getWidth();\n  },\n\n  /**\n   * Get container height\n   */\n  getHeight: function () {\n    return this.painter.getHeight();\n  },\n\n  /**\n   * Export the canvas as Base64 URL\n   * @param {string} type\n   * @param {string} [backgroundColor='#fff']\n   * @return {string} Base64 URL\n   */\n  // toDataURL: function(type, backgroundColor) {\n  //     return this.painter.getRenderedCanvas({\n  //         backgroundColor: backgroundColor\n  //     }).toDataURL(type);\n  // },\n\n  /**\n   * Converting a path to image.\n   * It has much better performance of drawing image rather than drawing a vector path.\n   * @param {module:zrender/graphic/Path} e\n   * @param {number} width\n   * @param {number} height\n   */\n  pathToImage: function (e, dpr) {\n    return this.painter.pathToImage(e, dpr);\n  },\n\n  /**\n   * Set default cursor\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    this.handler.setCursorStyle(cursorStyle);\n  },\n\n  /**\n   * Find hovered element\n   * @param {number} x\n   * @param {number} y\n   * @return {Object} {target, topTarget}\n   */\n  findHover: function (x, y) {\n    return this.handler.findHover(x, y);\n  },\n\n  /**\n   * Bind event\n   *\n   * @param {string} eventName Event name\n   * @param {Function} eventHandler Handler function\n   * @param {Object} [context] Context object\n   */\n  on: function (eventName, eventHandler, context) {\n    this.handler.on(eventName, eventHandler, context);\n  },\n\n  /**\n   * Unbind event\n   * @param {string} eventName Event name\n   * @param {Function} [eventHandler] Handler function\n   */\n  off: function (eventName, eventHandler) {\n    this.handler.off(eventName, eventHandler);\n  },\n\n  /**\n   * Trigger event manually\n   *\n   * @param {string} eventName Event name\n   * @param {event=} event Event object\n   */\n  trigger: function (eventName, event) {\n    this.handler.trigger(eventName, event);\n  },\n\n  /**\n   * Clear all objects and the canvas.\n   */\n  clear: function () {\n    this.storage.delRoot();\n    this.painter.clear();\n  },\n\n  /**\n   * Dispose self.\n   */\n  dispose: function () {\n    this.animation.stop();\n    this.clear();\n    this.storage.dispose();\n    this.painter.dispose();\n    this.handler.dispose();\n    this.animation = this.storage = this.painter = this.handler = null;\n    delInstance(this.id);\n  }\n};\nexports.version = version;\nexports.init = init;\nexports.dispose = dispose;\nexports.getInstance = getInstance;\nexports.registerPainter = registerPainter;\n\n/***/ }),\n\n/***/ 1033:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(978);\n\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar each = _util.each;\nvar normalizeCssArray = _util.normalizeCssArray;\nvar isString = _util.isString;\nvar isObject = _util.isObject;\n\nvar textContain = __webpack_require__(993);\n\nvar roundRectHelper = __webpack_require__(1049);\n\nvar imageHelper = __webpack_require__(1026);\n\n// TODO: Have not support 'start', 'end' yet.\nvar VALID_TEXT_ALIGN = {\n  left: 1,\n  right: 1,\n  center: 1\n};\nvar VALID_TEXT_VERTICAL_ALIGN = {\n  top: 1,\n  bottom: 1,\n  middle: 1\n};\n/**\n * @param {module:zrender/graphic/Style} style\n * @return {module:zrender/graphic/Style} The input style.\n */\n\nfunction normalizeTextStyle(style) {\n  normalizeStyle(style);\n  each(style.rich, normalizeStyle);\n  return style;\n}\n\nfunction normalizeStyle(style) {\n  if (style) {\n    style.font = textContain.makeFont(style);\n    var textAlign = style.textAlign;\n    textAlign === 'middle' && (textAlign = 'center');\n    style.textAlign = textAlign == null || VALID_TEXT_ALIGN[textAlign] ? textAlign : 'left'; // Compatible with textBaseline.\n\n    var textVerticalAlign = style.textVerticalAlign || style.textBaseline;\n    textVerticalAlign === 'center' && (textVerticalAlign = 'middle');\n    style.textVerticalAlign = textVerticalAlign == null || VALID_TEXT_VERTICAL_ALIGN[textVerticalAlign] ? textVerticalAlign : 'top';\n    var textPadding = style.textPadding;\n\n    if (textPadding) {\n      style.textPadding = normalizeCssArray(style.textPadding);\n    }\n  }\n}\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {string} text\n * @param {module:zrender/graphic/Style} style\n * @param {Object|boolean} [rect] {x, y, width, height}\n *                  If set false, rect text is not used.\n */\n\n\nfunction renderText(hostEl, ctx, text, style, rect) {\n  style.rich ? renderRichText(hostEl, ctx, text, style, rect) : renderPlainText(hostEl, ctx, text, style, rect);\n}\n\nfunction renderPlainText(hostEl, ctx, text, style, rect) {\n  var font = setCtx(ctx, 'font', style.font || textContain.DEFAULT_FONT);\n  var textPadding = style.textPadding;\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parsePlainText(text, font, textPadding, style.truncate);\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var textLines = contentBlock.lines;\n  var lineHeight = contentBlock.lineHeight;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var textX = baseX;\n  var textY = boxY;\n  var needDrawBg = needDrawBackground(style);\n\n  if (needDrawBg || textPadding) {\n    // Consider performance, do not call getTextWidth util necessary.\n    var textWidth = textContain.getWidth(text, font);\n    var outerWidth = textWidth;\n    textPadding && (outerWidth += textPadding[1] + textPadding[3]);\n    var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n    needDrawBg && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n    if (textPadding) {\n      textX = getTextXForPadding(baseX, textAlign, textPadding);\n      textY += textPadding[0];\n    }\n  }\n\n  setCtx(ctx, 'textAlign', textAlign || 'left'); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle'); // Always set shadowBlur and shadowOffset to avoid leak from displayable.\n\n  setCtx(ctx, 'shadowBlur', style.textShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textShadowOffsetY || 0); // `textBaseline` is set as 'middle'.\n\n  textY += lineHeight / 2;\n  var textStrokeWidth = style.textStrokeWidth;\n  var textStroke = getStroke(style.textStroke, textStrokeWidth);\n  var textFill = getFill(style.textFill);\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n  }\n\n  for (var i = 0; i < textLines.length; i++) {\n    // Fill after stroke so the outline will not cover the main part.\n    textStroke && ctx.strokeText(textLines[i], textX, textY);\n    textFill && ctx.fillText(textLines[i], textX, textY);\n    textY += lineHeight;\n  }\n}\n\nfunction renderRichText(hostEl, ctx, text, style, rect) {\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parseRichText(text, style);\n  }\n\n  drawRichText(hostEl, ctx, contentBlock, style, rect);\n}\n\nfunction drawRichText(hostEl, ctx, contentBlock, style, rect) {\n  var contentWidth = contentBlock.width;\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var textPadding = style.textPadding;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var xLeft = boxX;\n  var lineTop = boxY;\n\n  if (textPadding) {\n    xLeft += textPadding[3];\n    lineTop += textPadding[0];\n  }\n\n  var xRight = xLeft + contentWidth;\n  needDrawBackground(style) && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n  for (var i = 0; i < contentBlock.lines.length; i++) {\n    var line = contentBlock.lines[i];\n    var tokens = line.tokens;\n    var tokenCount = tokens.length;\n    var lineHeight = line.lineHeight;\n    var usedWidth = line.width;\n    var leftIndex = 0;\n    var lineXLeft = xLeft;\n    var lineXRight = xRight;\n    var rightIndex = tokenCount - 1;\n    var token;\n\n    while (leftIndex < tokenCount && (token = tokens[leftIndex], !token.textAlign || token.textAlign === 'left')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft, 'left');\n      usedWidth -= token.width;\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    while (rightIndex >= 0 && (token = tokens[rightIndex], token.textAlign === 'right')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXRight, 'right');\n      usedWidth -= token.width;\n      lineXRight -= token.width;\n      rightIndex--;\n    } // The other tokens are placed as textAlign 'center' if there is enough space.\n\n\n    lineXLeft += (contentWidth - (lineXLeft - xLeft) - (xRight - lineXRight) - usedWidth) / 2;\n\n    while (leftIndex <= rightIndex) {\n      token = tokens[leftIndex]; // Consider width specified by user, use 'center' rather than 'left'.\n\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft + token.width / 2, 'center');\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    lineTop += lineHeight;\n  }\n}\n\nfunction applyTextRotation(ctx, style, rect, x, y) {\n  // textRotation only apply in RectText.\n  if (rect && style.textRotation) {\n    var origin = style.textOrigin;\n\n    if (origin === 'center') {\n      x = rect.width / 2 + rect.x;\n      y = rect.height / 2 + rect.y;\n    } else if (origin) {\n      x = origin[0] + rect.x;\n      y = origin[1] + rect.y;\n    }\n\n    ctx.translate(x, y); // Positive: anticlockwise\n\n    ctx.rotate(-style.textRotation);\n    ctx.translate(-x, -y);\n  }\n}\n\nfunction placeToken(hostEl, ctx, token, style, lineHeight, lineTop, x, textAlign) {\n  var tokenStyle = style.rich[token.styleName] || {}; // 'ctx.textBaseline' is always set as 'middle', for sake of\n  // the bias of \"Microsoft YaHei\".\n\n  var textVerticalAlign = token.textVerticalAlign;\n  var y = lineTop + lineHeight / 2;\n\n  if (textVerticalAlign === 'top') {\n    y = lineTop + token.height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y = lineTop + lineHeight - token.height / 2;\n  }\n\n  !token.isLineHolder && needDrawBackground(tokenStyle) && drawBackground(hostEl, ctx, tokenStyle, textAlign === 'right' ? x - token.width : textAlign === 'center' ? x - token.width / 2 : x, y - token.height / 2, token.width, token.height);\n  var textPadding = token.textPadding;\n\n  if (textPadding) {\n    x = getTextXForPadding(x, textAlign, textPadding);\n    y -= token.height / 2 - textPadding[2] - token.textHeight / 2;\n  }\n\n  setCtx(ctx, 'shadowBlur', retrieve3(tokenStyle.textShadowBlur, style.textShadowBlur, 0));\n  setCtx(ctx, 'shadowColor', tokenStyle.textShadowColor || style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', retrieve3(tokenStyle.textShadowOffsetX, style.textShadowOffsetX, 0));\n  setCtx(ctx, 'shadowOffsetY', retrieve3(tokenStyle.textShadowOffsetY, style.textShadowOffsetY, 0));\n  setCtx(ctx, 'textAlign', textAlign); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle');\n  setCtx(ctx, 'font', token.font || textContain.DEFAULT_FONT);\n  var textStroke = getStroke(tokenStyle.textStroke || style.textStroke, textStrokeWidth);\n  var textFill = getFill(tokenStyle.textFill || style.textFill);\n  var textStrokeWidth = retrieve2(tokenStyle.textStrokeWidth, style.textStrokeWidth); // Fill after stroke so the outline will not cover the main part.\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n    ctx.strokeText(token.text, x, y);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n    ctx.fillText(token.text, x, y);\n  }\n}\n\nfunction needDrawBackground(style) {\n  return style.textBackgroundColor || style.textBorderWidth && style.textBorderColor;\n} // style: {textBackgroundColor, textBorderWidth, textBorderColor, textBorderRadius}\n// shape: {x, y, width, height}\n\n\nfunction drawBackground(hostEl, ctx, style, x, y, width, height) {\n  var textBackgroundColor = style.textBackgroundColor;\n  var textBorderWidth = style.textBorderWidth;\n  var textBorderColor = style.textBorderColor;\n  var isPlainBg = isString(textBackgroundColor);\n  setCtx(ctx, 'shadowBlur', style.textBoxShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textBoxShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textBoxShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textBoxShadowOffsetY || 0);\n\n  if (isPlainBg || textBorderWidth && textBorderColor) {\n    ctx.beginPath();\n    var textBorderRadius = style.textBorderRadius;\n\n    if (!textBorderRadius) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height,\n        r: textBorderRadius\n      });\n    }\n\n    ctx.closePath();\n  }\n\n  if (isPlainBg) {\n    setCtx(ctx, 'fillStyle', textBackgroundColor);\n    ctx.fill();\n  } else if (isObject(textBackgroundColor)) {\n    var image = textBackgroundColor.image;\n    image = imageHelper.createOrUpdateImage(image, null, hostEl, onBgImageLoaded, textBackgroundColor);\n\n    if (image && imageHelper.isImageReady(image)) {\n      ctx.drawImage(image, x, y, width, height);\n    }\n  }\n\n  if (textBorderWidth && textBorderColor) {\n    setCtx(ctx, 'lineWidth', textBorderWidth);\n    setCtx(ctx, 'strokeStyle', textBorderColor);\n    ctx.stroke();\n  }\n}\n\nfunction onBgImageLoaded(image, textBackgroundColor) {\n  // Replace image, so that `contain/text.js#parseRichText`\n  // will get correct result in next tick.\n  textBackgroundColor.image = image;\n}\n\nfunction getBoxPosition(blockHeiht, style, rect) {\n  var baseX = style.x || 0;\n  var baseY = style.y || 0;\n  var textAlign = style.textAlign;\n  var textVerticalAlign = style.textVerticalAlign; // Text position represented by coord\n\n  if (rect) {\n    var textPosition = style.textPosition;\n\n    if (textPosition instanceof Array) {\n      // Percent\n      baseX = rect.x + parsePercent(textPosition[0], rect.width);\n      baseY = rect.y + parsePercent(textPosition[1], rect.height);\n    } else {\n      var res = textContain.adjustTextPositionOnRect(textPosition, rect, style.textDistance);\n      baseX = res.x;\n      baseY = res.y; // Default align and baseline when has textPosition\n\n      textAlign = textAlign || res.textAlign;\n      textVerticalAlign = textVerticalAlign || res.textVerticalAlign;\n    } // textOffset is only support in RectText, otherwise\n    // we have to adjust boundingRect for textOffset.\n\n\n    var textOffset = style.textOffset;\n\n    if (textOffset) {\n      baseX += textOffset[0];\n      baseY += textOffset[1];\n    }\n  }\n\n  return {\n    baseX: baseX,\n    baseY: baseY,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction setCtx(ctx, prop, value) {\n  // FIXME ??? performance try\n  // if (ctx.__currentValues[prop] !== value) {\n  // ctx[prop] = ctx.__currentValues[prop] = value;\n  ctx[prop] = value; // }\n\n  return ctx[prop];\n}\n/**\n * @param {string} [stroke] If specified, do not check style.textStroke.\n * @param {string} [lineWidth] If specified, do not check style.textStroke.\n * @param {number} style\n */\n\n\nfunction getStroke(stroke, lineWidth) {\n  return stroke == null || lineWidth <= 0 || stroke === 'transparent' || stroke === 'none' ? null // TODO pattern and gradient?\n  : stroke.image || stroke.colorStops ? '#000' : stroke;\n}\n\nfunction getFill(fill) {\n  return fill == null || fill === 'none' ? null // TODO pattern and gradient?\n  : fill.image || fill.colorStops ? '#000' : fill;\n}\n\nfunction parsePercent(value, maxValue) {\n  if (typeof value === 'string') {\n    if (value.lastIndexOf('%') >= 0) {\n      return parseFloat(value) / 100 * maxValue;\n    }\n\n    return parseFloat(value);\n  }\n\n  return value;\n}\n\nfunction getTextXForPadding(x, textAlign, textPadding) {\n  return textAlign === 'right' ? x - textPadding[1] : textAlign === 'center' ? x + textPadding[3] / 2 - textPadding[1] / 2 : x + textPadding[3];\n}\n/**\n * @param {string} text\n * @param {module:zrender/Style} style\n * @return {boolean}\n */\n\n\nfunction needDrawText(text, style) {\n  return text != null && (text || style.textBackgroundColor || style.textBorderWidth && style.textBorderColor || style.textPadding);\n}\n\nexports.normalizeTextStyle = normalizeTextStyle;\nexports.renderText = renderText;\nexports.getStroke = getStroke;\nexports.getFill = getFill;\nexports.needDrawText = needDrawText;\n\n/***/ }),\n\n/***/ 1034:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(979);\n\nvar zrUtil = __webpack_require__(978);\n\nvar axisPointerModelHelper = __webpack_require__(1015);\n\nvar axisTrigger = __webpack_require__(1136);\n\n__webpack_require__(1137);\n\n__webpack_require__(1138);\n\n__webpack_require__(1061);\n\n// CartesianAxisPointer is not supposed to be required here. But consider\n// echarts.simple.js and online build tooltip, which only require gridSimple,\n// CartesianAxisPointer should be able to required somewhere.\necharts.registerPreprocessor(function (option) {\n  // Always has a global axisPointerModel for default setting.\n  if (option) {\n    (!option.axisPointer || option.axisPointer.length === 0) && (option.axisPointer = {});\n    var link = option.axisPointer.link; // Normalize to array to avoid object mergin. But if link\n    // is not set, remain null/undefined, otherwise it will\n    // override existent link setting.\n\n    if (link && !zrUtil.isArray(link)) {\n      option.axisPointer.link = [link];\n    }\n  }\n}); // This process should proformed after coordinate systems created\n// and series data processed. So put it on statistic processing stage.\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n  // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n  // allAxesInfo should be updated when setOption performed.\n  ecModel.getComponent('axisPointer').coordSysAxesInfo = axisPointerModelHelper.collect(ecModel, api);\n}); // Broadcast to all views.\n\necharts.registerAction({\n  type: 'updateAxisPointer',\n  event: 'updateAxisPointer',\n  update: ':updateAxisPointer'\n}, axisTrigger);\n\n/***/ }),\n\n/***/ 1035:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar graphic = __webpack_require__(980);\n\nvar textContain = __webpack_require__(993);\n\nvar formatUtil = __webpack_require__(985);\n\nvar matrix = __webpack_require__(994);\n\nvar axisHelper = __webpack_require__(996);\n\nvar AxisBuilder = __webpack_require__(1021);\n\n/**\n * @param {module:echarts/model/Model} axisPointerModel\n */\nfunction buildElStyle(axisPointerModel) {\n  var axisPointerType = axisPointerModel.get('type');\n  var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n  var style;\n\n  if (axisPointerType === 'line') {\n    style = styleModel.getLineStyle();\n    style.fill = null;\n  } else if (axisPointerType === 'shadow') {\n    style = styleModel.getAreaStyle();\n    style.stroke = null;\n  }\n\n  return style;\n}\n/**\n * @param {Function} labelPos {align, verticalAlign, position}\n */\n\n\nfunction buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos) {\n  var value = axisPointerModel.get('value');\n  var text = getValueLabel(value, axisModel.axis, axisModel.ecModel, axisPointerModel.get('seriesDataIndices'), {\n    precision: axisPointerModel.get('label.precision'),\n    formatter: axisPointerModel.get('label.formatter')\n  });\n  var labelModel = axisPointerModel.getModel('label');\n  var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n  var font = labelModel.getFont();\n  var textRect = textContain.getBoundingRect(text, font);\n  var position = labelPos.position;\n  var width = textRect.width + paddings[1] + paddings[3];\n  var height = textRect.height + paddings[0] + paddings[2]; // Adjust by align.\n\n  var align = labelPos.align;\n  align === 'right' && (position[0] -= width);\n  align === 'center' && (position[0] -= width / 2);\n  var verticalAlign = labelPos.verticalAlign;\n  verticalAlign === 'bottom' && (position[1] -= height);\n  verticalAlign === 'middle' && (position[1] -= height / 2); // Not overflow ec container\n\n  confineInContainer(position, width, height, api);\n  var bgColor = labelModel.get('backgroundColor');\n\n  if (!bgColor || bgColor === 'auto') {\n    bgColor = axisModel.get('axisLine.lineStyle.color');\n  }\n\n  elOption.label = {\n    shape: {\n      x: 0,\n      y: 0,\n      width: width,\n      height: height,\n      r: labelModel.get('borderRadius')\n    },\n    position: position.slice(),\n    // TODO: rich\n    style: {\n      text: text,\n      textFont: font,\n      textFill: labelModel.getTextColor(),\n      textPosition: 'inside',\n      fill: bgColor,\n      stroke: labelModel.get('borderColor') || 'transparent',\n      lineWidth: labelModel.get('borderWidth') || 0,\n      shadowBlur: labelModel.get('shadowBlur'),\n      shadowColor: labelModel.get('shadowColor'),\n      shadowOffsetX: labelModel.get('shadowOffsetX'),\n      shadowOffsetY: labelModel.get('shadowOffsetY')\n    },\n    // Lable should be over axisPointer.\n    z2: 10\n  };\n} // Do not overflow ec container\n\n\nfunction confineInContainer(position, width, height, api) {\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  position[0] = Math.min(position[0] + width, viewWidth) - width;\n  position[1] = Math.min(position[1] + height, viewHeight) - height;\n  position[0] = Math.max(position[0], 0);\n  position[1] = Math.max(position[1], 0);\n}\n/**\n * @param {number} value\n * @param {module:echarts/coord/Axis} axis\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} opt\n * @param {Array.<Object>} seriesDataIndices\n * @param {number|string} opt.precision 'auto' or a number\n * @param {string|Function} opt.formatter label formatter\n */\n\n\nfunction getValueLabel(value, axis, ecModel, seriesDataIndices, opt) {\n  var text = axis.scale.getLabel( // If `precision` is set, width can be fixed (like '12.00500'), which\n  // helps to debounce when when moving label.\n  value, {\n    precision: opt.precision\n  });\n  var formatter = opt.formatter;\n\n  if (formatter) {\n    var params = {\n      value: axisHelper.getAxisRawValue(axis, value),\n      seriesData: []\n    };\n    zrUtil.each(seriesDataIndices, function (idxItem) {\n      var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n      var dataIndex = idxItem.dataIndexInside;\n      var dataParams = series && series.getDataParams(dataIndex);\n      dataParams && params.seriesData.push(dataParams);\n    });\n\n    if (zrUtil.isString(formatter)) {\n      text = formatter.replace('{value}', text);\n    } else if (zrUtil.isFunction(formatter)) {\n      text = formatter(params);\n    }\n  }\n\n  return text;\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @param {number} value\n * @param {Object} layoutInfo {\n *  rotation, position, labelOffset, labelDirection, labelMargin\n * }\n */\n\n\nfunction getTransformedPosition(axis, value, layoutInfo) {\n  var transform = matrix.create();\n  matrix.rotate(transform, transform, layoutInfo.rotation);\n  matrix.translate(transform, transform, layoutInfo.position);\n  return graphic.applyTransform([axis.dataToCoord(value), (layoutInfo.labelOffset || 0) + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)], transform);\n}\n\nfunction buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api) {\n  var textLayout = AxisBuilder.innerTextLayout(layoutInfo.rotation, 0, layoutInfo.labelDirection);\n  layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n  buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n    position: getTransformedPosition(axisModel.axis, value, layoutInfo),\n    align: textLayout.textAlign,\n    verticalAlign: textLayout.textVerticalAlign\n  });\n}\n/**\n * @param {Array.<number>} p1\n * @param {Array.<number>} p2\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeLineShape(p1, p2, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x1: p1[xDimIndex],\n    y1: p1[1 - xDimIndex],\n    x2: p2[xDimIndex],\n    y2: p2[1 - xDimIndex]\n  };\n}\n/**\n * @param {Array.<number>} xy\n * @param {Array.<number>} wh\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeRectShape(xy, wh, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x: xy[xDimIndex],\n    y: xy[1 - xDimIndex],\n    width: wh[xDimIndex],\n    height: wh[1 - xDimIndex]\n  };\n}\n\nfunction makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\n  return {\n    cx: cx,\n    cy: cy,\n    r0: r0,\n    r: r,\n    startAngle: startAngle,\n    endAngle: endAngle,\n    clockwise: true\n  };\n}\n\nexports.buildElStyle = buildElStyle;\nexports.buildLabelElOption = buildLabelElOption;\nexports.getValueLabel = getValueLabel;\nexports.getTransformedPosition = getTransformedPosition;\nexports.buildCartesianSingleLabelElOption = buildCartesianSingleLabelElOption;\nexports.makeLineShape = makeLineShape;\nexports.makeRectShape = makeRectShape;\nexports.makeSectorShape = makeSectorShape;\n\n/***/ }),\n\n/***/ 1036:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar matrix = __webpack_require__(994);\n\nvar vector = __webpack_require__(984);\n\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\nvar mIdentity = matrix.identity;\nvar EPSILON = 5e-5;\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * @alias module:zrender/mixin/Transformable\n * @constructor\n */\n\n\nvar Transformable = function (opts) {\n  opts = opts || {}; // If there are no given position, rotation, scale\n\n  if (!opts.position) {\n    /**\n     * 平移\n     * @type {Array.<number>}\n     * @default [0, 0]\n     */\n    this.position = [0, 0];\n  }\n\n  if (opts.rotation == null) {\n    /**\n     * 旋转\n     * @type {Array.<number>}\n     * @default 0\n     */\n    this.rotation = 0;\n  }\n\n  if (!opts.scale) {\n    /**\n     * 缩放\n     * @type {Array.<number>}\n     * @default [1, 1]\n     */\n    this.scale = [1, 1];\n  }\n  /**\n   * 旋转和缩放的原点\n   * @type {Array.<number>}\n   * @default null\n   */\n\n\n  this.origin = this.origin || null;\n};\n\nvar transformableProto = Transformable.prototype;\ntransformableProto.transform = null;\n/**\n * 判断是否需要有坐标变换\n * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n */\n\ntransformableProto.needLocalTransform = function () {\n  return isNotAroundZero(this.rotation) || isNotAroundZero(this.position[0]) || isNotAroundZero(this.position[1]) || isNotAroundZero(this.scale[0] - 1) || isNotAroundZero(this.scale[1] - 1);\n};\n\ntransformableProto.updateTransform = function () {\n  var parent = this.parent;\n  var parentHasTransform = parent && parent.transform;\n  var needLocalTransform = this.needLocalTransform();\n  var m = this.transform;\n\n  if (!(needLocalTransform || parentHasTransform)) {\n    m && mIdentity(m);\n    return;\n  }\n\n  m = m || matrix.create();\n\n  if (needLocalTransform) {\n    this.getLocalTransform(m);\n  } else {\n    mIdentity(m);\n  } // 应用父节点变换\n\n\n  if (parentHasTransform) {\n    if (needLocalTransform) {\n      matrix.mul(m, parent.transform, m);\n    } else {\n      matrix.copy(m, parent.transform);\n    }\n  } // 保存这个变换矩阵\n\n\n  this.transform = m;\n  this.invTransform = this.invTransform || matrix.create();\n  matrix.invert(this.invTransform, m);\n};\n\ntransformableProto.getLocalTransform = function (m) {\n  return Transformable.getLocalTransform(this, m);\n};\n/**\n * 将自己的transform应用到context上\n * @param {CanvasRenderingContext2D} ctx\n */\n\n\ntransformableProto.setTransform = function (ctx) {\n  var m = this.transform;\n  var dpr = ctx.dpr || 1;\n\n  if (m) {\n    ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n  } else {\n    ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n  }\n};\n\ntransformableProto.restoreTransform = function (ctx) {\n  var dpr = ctx.dpr || 1;\n  ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n};\n\nvar tmpTransform = [];\n/**\n * 分解`transform`矩阵到`position`, `rotation`, `scale`\n */\n\ntransformableProto.decomposeTransform = function () {\n  if (!this.transform) {\n    return;\n  }\n\n  var parent = this.parent;\n  var m = this.transform;\n\n  if (parent && parent.transform) {\n    // Get local transform and decompose them to position, scale, rotation\n    matrix.mul(tmpTransform, parent.invTransform, m);\n    m = tmpTransform;\n  }\n\n  var sx = m[0] * m[0] + m[1] * m[1];\n  var sy = m[2] * m[2] + m[3] * m[3];\n  var position = this.position;\n  var scale = this.scale;\n\n  if (isNotAroundZero(sx - 1)) {\n    sx = Math.sqrt(sx);\n  }\n\n  if (isNotAroundZero(sy - 1)) {\n    sy = Math.sqrt(sy);\n  }\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  position[0] = m[4];\n  position[1] = m[5];\n  scale[0] = sx;\n  scale[1] = sy;\n  this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n};\n/**\n * Get global scale\n * @return {Array.<number>}\n */\n\n\ntransformableProto.getGlobalScale = function () {\n  var m = this.transform;\n\n  if (!m) {\n    return [1, 1];\n  }\n\n  var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n  var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  return [sx, sy];\n};\n/**\n * 变换坐标位置到 shape 的局部坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToLocal = function (x, y) {\n  var v2 = [x, y];\n  var invTransform = this.invTransform;\n\n  if (invTransform) {\n    vector.applyTransform(v2, v2, invTransform);\n  }\n\n  return v2;\n};\n/**\n * 变换局部坐标位置到全局坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToGlobal = function (x, y) {\n  var v2 = [x, y];\n  var transform = this.transform;\n\n  if (transform) {\n    vector.applyTransform(v2, v2, transform);\n  }\n\n  return v2;\n};\n/**\n * @static\n * @param {Object} target\n * @param {Array.<number>} target.origin\n * @param {number} target.rotation\n * @param {Array.<number>} target.position\n * @param {Array.<number>} [m]\n */\n\n\nTransformable.getLocalTransform = function (target, m) {\n  m = m || [];\n  mIdentity(m);\n  var origin = target.origin;\n  var scale = target.scale || [1, 1];\n  var rotation = target.rotation || 0;\n  var position = target.position || [0, 0];\n\n  if (origin) {\n    // Translate to origin\n    m[4] -= origin[0];\n    m[5] -= origin[1];\n  }\n\n  matrix.scale(m, m, scale);\n\n  if (rotation) {\n    matrix.rotate(m, m, rotation);\n  }\n\n  if (origin) {\n    // Translate back from origin\n    m[4] += origin[0];\n    m[5] += origin[1];\n  }\n\n  m[4] += position[0];\n  m[5] += position[1];\n  return m;\n};\n\nvar _default = Transformable;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1037:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar vec2 = __webpack_require__(984);\n\nvar curve = __webpack_require__(999);\n\n/**\n * @author Yi Shen(https://github.com/pissang)\n */\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI2 = Math.PI * 2;\nvar start = vec2.create();\nvar end = vec2.create();\nvar extremity = vec2.create();\n/**\n * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n * @module zrender/core/bbox\n * @param {Array<Object>} points 顶点数组\n * @param {number} min\n * @param {number} max\n */\n\nfunction fromPoints(points, min, max) {\n  if (points.length === 0) {\n    return;\n  }\n\n  var p = points[0];\n  var left = p[0];\n  var right = p[0];\n  var top = p[1];\n  var bottom = p[1];\n  var i;\n\n  for (i = 1; i < points.length; i++) {\n    p = points[i];\n    left = mathMin(left, p[0]);\n    right = mathMax(right, p[0]);\n    top = mathMin(top, p[1]);\n    bottom = mathMax(bottom, p[1]);\n  }\n\n  min[0] = left;\n  min[1] = top;\n  max[0] = right;\n  max[1] = bottom;\n}\n/**\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromLine(x0, y0, x1, y1, min, max) {\n  min[0] = mathMin(x0, x1);\n  min[1] = mathMin(y0, y1);\n  max[0] = mathMax(x0, x1);\n  max[1] = mathMax(y0, y1);\n}\n\nvar xDim = [];\nvar yDim = [];\n/**\n * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\nfunction fromCubic(x0, y0, x1, y1, x2, y2, x3, y3, min, max) {\n  var cubicExtrema = curve.cubicExtrema;\n  var cubicAt = curve.cubicAt;\n  var i;\n  var n = cubicExtrema(x0, x1, x2, x3, xDim);\n  min[0] = Infinity;\n  min[1] = Infinity;\n  max[0] = -Infinity;\n  max[1] = -Infinity;\n\n  for (i = 0; i < n; i++) {\n    var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n    min[0] = mathMin(x, min[0]);\n    max[0] = mathMax(x, max[0]);\n  }\n\n  n = cubicExtrema(y0, y1, y2, y3, yDim);\n\n  for (i = 0; i < n; i++) {\n    var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n    min[1] = mathMin(y, min[1]);\n    max[1] = mathMax(y, max[1]);\n  }\n\n  min[0] = mathMin(x0, min[0]);\n  max[0] = mathMax(x0, max[0]);\n  min[0] = mathMin(x3, min[0]);\n  max[0] = mathMax(x3, max[0]);\n  min[1] = mathMin(y0, min[1]);\n  max[1] = mathMax(y0, max[1]);\n  min[1] = mathMin(y3, min[1]);\n  max[1] = mathMax(y3, max[1]);\n}\n/**\n * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromQuadratic(x0, y0, x1, y1, x2, y2, min, max) {\n  var quadraticExtremum = curve.quadraticExtremum;\n  var quadraticAt = curve.quadraticAt; // Find extremities, where derivative in x dim or y dim is zero\n\n  var tx = mathMax(mathMin(quadraticExtremum(x0, x1, x2), 1), 0);\n  var ty = mathMax(mathMin(quadraticExtremum(y0, y1, y2), 1), 0);\n  var x = quadraticAt(x0, x1, x2, tx);\n  var y = quadraticAt(y0, y1, y2, ty);\n  min[0] = mathMin(x0, x2, x);\n  min[1] = mathMin(y0, y2, y);\n  max[0] = mathMax(x0, x2, x);\n  max[1] = mathMax(y0, y2, y);\n}\n/**\n * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n * @method\n * @memberOf module:zrender/core/bbox\n * @param {number} x\n * @param {number} y\n * @param {number} rx\n * @param {number} ry\n * @param {number} startAngle\n * @param {number} endAngle\n * @param {number} anticlockwise\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromArc(x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max) {\n  var vec2Min = vec2.min;\n  var vec2Max = vec2.max;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff % PI2 < 1e-4 && diff > 1e-4) {\n    // Is a circle\n    min[0] = x - rx;\n    min[1] = y - ry;\n    max[0] = x + rx;\n    max[1] = y + ry;\n    return;\n  }\n\n  start[0] = mathCos(startAngle) * rx + x;\n  start[1] = mathSin(startAngle) * ry + y;\n  end[0] = mathCos(endAngle) * rx + x;\n  end[1] = mathSin(endAngle) * ry + y;\n  vec2Min(min, start, end);\n  vec2Max(max, start, end); // Thresh to [0, Math.PI * 2]\n\n  startAngle = startAngle % PI2;\n\n  if (startAngle < 0) {\n    startAngle = startAngle + PI2;\n  }\n\n  endAngle = endAngle % PI2;\n\n  if (endAngle < 0) {\n    endAngle = endAngle + PI2;\n  }\n\n  if (startAngle > endAngle && !anticlockwise) {\n    endAngle += PI2;\n  } else if (startAngle < endAngle && anticlockwise) {\n    startAngle += PI2;\n  }\n\n  if (anticlockwise) {\n    var tmp = endAngle;\n    endAngle = startAngle;\n    startAngle = tmp;\n  } // var number = 0;\n  // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n\n\n  for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n    if (angle > startAngle) {\n      extremity[0] = mathCos(angle) * rx + x;\n      extremity[1] = mathSin(angle) * ry + y;\n      vec2Min(min, extremity, min);\n      vec2Max(max, extremity, max);\n    }\n  }\n}\n\nexports.fromPoints = fromPoints;\nexports.fromLine = fromLine;\nexports.fromCubic = fromCubic;\nexports.fromQuadratic = fromQuadratic;\nexports.fromArc = fromArc;\n\n/***/ }),\n\n/***/ 1038:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Displayable = __webpack_require__(1018);\n\nvar zrUtil = __webpack_require__(978);\n\nvar textContain = __webpack_require__(993);\n\nvar textHelper = __webpack_require__(1033);\n\n/**\n * @alias zrender/graphic/Text\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nvar Text = function (opts) {\n  // jshint ignore:line\n  Displayable.call(this, opts);\n};\n\nText.prototype = {\n  constructor: Text,\n  type: 'text',\n  brush: function (ctx, prevEl) {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true); // Use props with prefix 'text'.\n\n    style.fill = style.stroke = style.shadowBlur = style.shadowColor = style.shadowOffsetX = style.shadowOffsetY = null;\n    var text = style.text; // Convert to string\n\n    text != null && (text += ''); // Always bind style\n\n    style.bind(ctx, this, prevEl);\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    }\n\n    this.setTransform(ctx);\n    textHelper.renderText(this, ctx, text, style);\n    this.restoreTransform(ctx);\n  },\n  getBoundingRect: function () {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n    if (!this._rect) {\n      var text = style.text;\n      text != null ? text += '' : text = '';\n      var rect = textContain.getBoundingRect(style.text + '', style.font, style.textAlign, style.textVerticalAlign, style.textPadding, style.rich);\n      rect.x += style.x || 0;\n      rect.y += style.y || 0;\n\n      if (textHelper.getStroke(style.textStroke, style.textStrokeWidth)) {\n        var w = style.textStrokeWidth;\n        rect.x -= w / 2;\n        rect.y -= w / 2;\n        rect.width += w;\n        rect.height += w;\n      }\n\n      this._rect = rect;\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(Text, Displayable);\nvar _default = Text;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1039:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Group = __webpack_require__(1009);\n\nvar componentUtil = __webpack_require__(1027);\n\nvar clazzUtil = __webpack_require__(992);\n\nvar Component = function () {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewComponent');\n};\n\nComponent.prototype = {\n  constructor: Component,\n  init: function (ecModel, api) {},\n  render: function (componentModel, ecModel, api, payload) {},\n  dispose: function () {}\n};\nvar componentProto = Component.prototype;\n\ncomponentProto.updateView = componentProto.updateLayout = componentProto.updateVisual = function (seriesModel, ecModel, api, payload) {// Do nothing;\n}; // Enable Component.extend.\n\n\nclazzUtil.enableClassExtend(Component); // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Component, {\n  registerWhenExtend: true\n});\nvar _default = Component;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1040:\n/***/ (function(module, exports) {\n\n/**\n * Calculate slider move result.\n * Usage:\n * (1) If both handle0 and handle1 are needed to be moved, set minSpan the same as\n * maxSpan and the same as `Math.abs(handleEnd[1] - handleEnds[0])`.\n * (2) If handle0 is forbidden to cross handle1, set minSpan as `0`.\n *\n * @param {number} delta Move length.\n * @param {Array.<number>} handleEnds handleEnds[0] can be bigger then handleEnds[1].\n *              handleEnds will be modified in this method.\n * @param {Array.<number>} extent handleEnds is restricted by extent.\n *              extent[0] should less or equals than extent[1].\n * @param {number|string} handleIndex Can be 'all', means that both move the two handleEnds,\n *              where the input minSpan and maxSpan will not work.\n * @param {number} [minSpan] The range of dataZoom can not be smaller than that.\n *              If not set, handle0 and cross handle1. If set as a non-negative\n *              number (including `0`), handles will push each other when reaching\n *              the minSpan.\n * @param {number} [maxSpan] The range of dataZoom can not be larger than that.\n * @return {Array.<number>} The input handleEnds.\n */\nfunction _default(delta, handleEnds, extent, handleIndex, minSpan, maxSpan) {\n  // Normalize firstly.\n  handleEnds[0] = restrict(handleEnds[0], extent);\n  handleEnds[1] = restrict(handleEnds[1], extent);\n  delta = delta || 0;\n  var extentSpan = extent[1] - extent[0]; // Notice maxSpan and minSpan can be null/undefined.\n\n  if (minSpan != null) {\n    minSpan = restrict(minSpan, [0, extentSpan]);\n  }\n\n  if (maxSpan != null) {\n    maxSpan = Math.max(maxSpan, minSpan != null ? minSpan : 0);\n  }\n\n  if (handleIndex === 'all') {\n    minSpan = maxSpan = Math.abs(handleEnds[1] - handleEnds[0]);\n    handleIndex = 0;\n  }\n\n  var originalDistSign = getSpanSign(handleEnds, handleIndex);\n  handleEnds[handleIndex] += delta; // Restrict in extent.\n\n  var extentMinSpan = minSpan || 0;\n  var realExtent = extent.slice();\n  originalDistSign.sign < 0 ? realExtent[0] += extentMinSpan : realExtent[1] -= extentMinSpan;\n  handleEnds[handleIndex] = restrict(handleEnds[handleIndex], realExtent); // Expand span.\n\n  var currDistSign = getSpanSign(handleEnds, handleIndex);\n\n  if (minSpan != null && (currDistSign.sign !== originalDistSign.sign || currDistSign.span < minSpan)) {\n    // If minSpan exists, 'cross' is forbinden.\n    handleEnds[1 - handleIndex] = handleEnds[handleIndex] + originalDistSign.sign * minSpan;\n  } // Shrink span.\n\n\n  var currDistSign = getSpanSign(handleEnds, handleIndex);\n\n  if (maxSpan != null && currDistSign.span > maxSpan) {\n    handleEnds[1 - handleIndex] = handleEnds[handleIndex] + currDistSign.sign * maxSpan;\n  }\n\n  return handleEnds;\n}\n\nfunction getSpanSign(handleEnds, handleIndex) {\n  var dist = handleEnds[handleIndex] - handleEnds[1 - handleIndex]; // If `handleEnds[0] === handleEnds[1]`, always believe that handleEnd[0]\n  // is at left of handleEnds[1] for non-cross case.\n\n  return {\n    span: Math.abs(dist),\n    sign: dist > 0 ? -1 : dist < 0 ? 1 : handleIndex ? -1 : 1\n  };\n}\n\nfunction restrict(value, extend) {\n  return Math.min(extend[1], Math.max(extend[0], value));\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1042:\n/***/ (function(module, exports) {\n\n/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\nvar idStart = 0x0907;\n\nfunction _default() {\n  return idStart++;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1043:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar guid = __webpack_require__(1042);\n\nvar Eventful = __webpack_require__(1001);\n\nvar Transformable = __webpack_require__(1036);\n\nvar Animatable = __webpack_require__(1093);\n\nvar zrUtil = __webpack_require__(978);\n\n/**\n * @alias module:zrender/Element\n * @constructor\n * @extends {module:zrender/mixin/Animatable}\n * @extends {module:zrender/mixin/Transformable}\n * @extends {module:zrender/mixin/Eventful}\n */\nvar Element = function (opts) {\n  // jshint ignore:line\n  Transformable.call(this, opts);\n  Eventful.call(this, opts);\n  Animatable.call(this, opts);\n  /**\n   * 画布元素ID\n   * @type {string}\n   */\n\n  this.id = opts.id || guid();\n};\n\nElement.prototype = {\n  /**\n   * 元素类型\n   * Element type\n   * @type {string}\n   */\n  type: 'element',\n\n  /**\n   * 元素名字\n   * Element name\n   * @type {string}\n   */\n  name: '',\n\n  /**\n   * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n   * ZRender instance will be assigned when element is associated with zrender\n   * @name module:/zrender/Element#__zr\n   * @type {module:zrender/ZRender}\n   */\n  __zr: null,\n\n  /**\n   * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n   * If ignore drawing and events of the element object\n   * @name module:/zrender/Element#ignore\n   * @type {boolean}\n   * @default false\n   */\n  ignore: false,\n\n  /**\n   * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n   * 该路径会继承被裁减对象的变换\n   * @type {module:zrender/graphic/Path}\n   * @see http://www.w3.org/TR/2dcontext/#clipping-region\n   * @readOnly\n   */\n  clipPath: null,\n\n  /**\n   * Drift element\n   * @param  {number} dx dx on the global space\n   * @param  {number} dy dy on the global space\n   */\n  drift: function (dx, dy) {\n    switch (this.draggable) {\n      case 'horizontal':\n        dy = 0;\n        break;\n\n      case 'vertical':\n        dx = 0;\n        break;\n    }\n\n    var m = this.transform;\n\n    if (!m) {\n      m = this.transform = [1, 0, 0, 1, 0, 0];\n    }\n\n    m[4] += dx;\n    m[5] += dy;\n    this.decomposeTransform();\n    this.dirty(false);\n  },\n\n  /**\n   * Hook before update\n   */\n  beforeUpdate: function () {},\n\n  /**\n   * Hook after update\n   */\n  afterUpdate: function () {},\n\n  /**\n   * Update each frame\n   */\n  update: function () {\n    this.updateTransform();\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {},\n\n  /**\n   * @protected\n   */\n  attrKV: function (key, value) {\n    if (key === 'position' || key === 'scale' || key === 'origin') {\n      // Copy the array\n      if (value) {\n        var target = this[key];\n\n        if (!target) {\n          target = this[key] = [];\n        }\n\n        target[0] = value[0];\n        target[1] = value[1];\n      }\n    } else {\n      this[key] = value;\n    }\n  },\n\n  /**\n   * Hide the element\n   */\n  hide: function () {\n    this.ignore = true;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * Show the element\n   */\n  show: function () {\n    this.ignore = false;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * @param {string|Object} key\n   * @param {*} value\n   */\n  attr: function (key, value) {\n    if (typeof key === 'string') {\n      this.attrKV(key, value);\n    } else if (zrUtil.isObject(key)) {\n      for (var name in key) {\n        if (key.hasOwnProperty(name)) {\n          this.attrKV(name, key[name]);\n        }\n      }\n    }\n\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * @param {module:zrender/graphic/Path} clipPath\n   */\n  setClipPath: function (clipPath) {\n    var zr = this.__zr;\n\n    if (zr) {\n      clipPath.addSelfToZr(zr);\n    } // Remove previous clip path\n\n\n    if (this.clipPath && this.clipPath !== clipPath) {\n      this.removeClipPath();\n    }\n\n    this.clipPath = clipPath;\n    clipPath.__zr = zr;\n    clipPath.__clipTarget = this;\n    this.dirty(false);\n  },\n\n  /**\n   */\n  removeClipPath: function () {\n    var clipPath = this.clipPath;\n\n    if (clipPath) {\n      if (clipPath.__zr) {\n        clipPath.removeSelfFromZr(clipPath.__zr);\n      }\n\n      clipPath.__zr = null;\n      clipPath.__clipTarget = null;\n      this.clipPath = null;\n      this.dirty(false);\n    }\n  },\n\n  /**\n   * Add self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  addSelfToZr: function (zr) {\n    this.__zr = zr; // 添加动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.addAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.addSelfToZr(zr);\n    }\n  },\n\n  /**\n   * Remove self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  removeSelfFromZr: function (zr) {\n    this.__zr = null; // 移除动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.removeAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.removeSelfFromZr(zr);\n    }\n  }\n};\nzrUtil.mixin(Element, Animatable);\nzrUtil.mixin(Element, Transformable);\nzrUtil.mixin(Element, Eventful);\nvar _default = Element;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1044:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Clip = __webpack_require__(1094);\n\nvar color = __webpack_require__(1002);\n\nvar _util = __webpack_require__(978);\n\nvar isArrayLike = _util.isArrayLike;\n\n/**\n * @module echarts/animation/Animator\n */\nvar arraySlice = Array.prototype.slice;\n\nfunction defaultGetter(target, key) {\n  return target[key];\n}\n\nfunction defaultSetter(target, key, value) {\n  target[key] = value;\n}\n/**\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} percent\n * @return {number}\n */\n\n\nfunction interpolateNumber(p0, p1, percent) {\n  return (p1 - p0) * percent + p0;\n}\n/**\n * @param  {string} p0\n * @param  {string} p1\n * @param  {number} percent\n * @return {string}\n */\n\n\nfunction interpolateString(p0, p1, percent) {\n  return percent > 0.5 ? p1 : p0;\n}\n/**\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {number} percent\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction interpolateArray(p0, p1, percent, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = interpolateNumber(p0[i], p1[i], percent);\n    }\n  } else {\n    var len2 = len && p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = interpolateNumber(p0[i][j], p1[i][j], percent);\n      }\n    }\n  }\n} // arr0 is source array, arr1 is target array.\n// Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n\n\nfunction fillArr(arr0, arr1, arrDim) {\n  var arr0Len = arr0.length;\n  var arr1Len = arr1.length;\n\n  if (arr0Len !== arr1Len) {\n    // FIXME Not work for TypedArray\n    var isPreviousLarger = arr0Len > arr1Len;\n\n    if (isPreviousLarger) {\n      // Cut the previous\n      arr0.length = arr1Len;\n    } else {\n      // Fill the previous\n      for (var i = arr0Len; i < arr1Len; i++) {\n        arr0.push(arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i]));\n      }\n    }\n  } // Handling NaN value\n\n\n  var len2 = arr0[0] && arr0[0].length;\n\n  for (var i = 0; i < arr0.length; i++) {\n    if (arrDim === 1) {\n      if (isNaN(arr0[i])) {\n        arr0[i] = arr1[i];\n      }\n    } else {\n      for (var j = 0; j < len2; j++) {\n        if (isNaN(arr0[i][j])) {\n          arr0[i][j] = arr1[i][j];\n        }\n      }\n    }\n  }\n}\n/**\n * @param  {Array} arr0\n * @param  {Array} arr1\n * @param  {number} arrDim\n * @return {boolean}\n */\n\n\nfunction isArraySame(arr0, arr1, arrDim) {\n  if (arr0 === arr1) {\n    return true;\n  }\n\n  var len = arr0.length;\n\n  if (len !== arr1.length) {\n    return false;\n  }\n\n  if (arrDim === 1) {\n    for (var i = 0; i < len; i++) {\n      if (arr0[i] !== arr1[i]) {\n        return false;\n      }\n    }\n  } else {\n    var len2 = arr0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        if (arr0[i][j] !== arr1[i][j]) {\n          return false;\n        }\n      }\n    }\n  }\n\n  return true;\n}\n/**\n * Catmull Rom interpolate array\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {Array} p2\n * @param  {Array} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction catmullRomInterpolateArray(p0, p1, p2, p3, t, t2, t3, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = catmullRomInterpolate(p0[i], p1[i], p2[i], p3[i], t, t2, t3);\n    }\n  } else {\n    var len2 = p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = catmullRomInterpolate(p0[i][j], p1[i][j], p2[i][j], p3[i][j], t, t2, t3);\n      }\n    }\n  }\n}\n/**\n * Catmull Rom interpolate number\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @return {number}\n */\n\n\nfunction catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n\nfunction cloneValue(value) {\n  if (isArrayLike(value)) {\n    var len = value.length;\n\n    if (isArrayLike(value[0])) {\n      var ret = [];\n\n      for (var i = 0; i < len; i++) {\n        ret.push(arraySlice.call(value[i]));\n      }\n\n      return ret;\n    }\n\n    return arraySlice.call(value);\n  }\n\n  return value;\n}\n\nfunction rgba2String(rgba) {\n  rgba[0] = Math.floor(rgba[0]);\n  rgba[1] = Math.floor(rgba[1]);\n  rgba[2] = Math.floor(rgba[2]);\n  return 'rgba(' + rgba.join(',') + ')';\n}\n\nfunction getArrayDim(keyframes) {\n  var lastValue = keyframes[keyframes.length - 1].value;\n  return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\n}\n\nfunction createTrackClip(animator, easing, oneTrackDone, keyframes, propName, forceAnimate) {\n  var getter = animator._getter;\n  var setter = animator._setter;\n  var useSpline = easing === 'spline';\n  var trackLen = keyframes.length;\n\n  if (!trackLen) {\n    return;\n  } // Guess data type\n\n\n  var firstVal = keyframes[0].value;\n  var isValueArray = isArrayLike(firstVal);\n  var isValueColor = false;\n  var isValueString = false; // For vertices morphing\n\n  var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\n  var trackMaxTime; // Sort keyframe as ascending\n\n  keyframes.sort(function (a, b) {\n    return a.time - b.time;\n  });\n  trackMaxTime = keyframes[trackLen - 1].time; // Percents of each keyframe\n\n  var kfPercents = []; // Value of each keyframe\n\n  var kfValues = [];\n  var prevValue = keyframes[0].value;\n  var isAllValueEqual = true;\n\n  for (var i = 0; i < trackLen; i++) {\n    kfPercents.push(keyframes[i].time / trackMaxTime); // Assume value is a color when it is a string\n\n    var value = keyframes[i].value; // Check if value is equal, deep check if value is array\n\n    if (!(isValueArray && isArraySame(value, prevValue, arrDim) || !isValueArray && value === prevValue)) {\n      isAllValueEqual = false;\n    }\n\n    prevValue = value; // Try converting a string to a color array\n\n    if (typeof value == 'string') {\n      var colorArray = color.parse(value);\n\n      if (colorArray) {\n        value = colorArray;\n        isValueColor = true;\n      } else {\n        isValueString = true;\n      }\n    }\n\n    kfValues.push(value);\n  }\n\n  if (!forceAnimate && isAllValueEqual) {\n    return;\n  }\n\n  var lastValue = kfValues[trackLen - 1]; // Polyfill array and NaN value\n\n  for (var i = 0; i < trackLen - 1; i++) {\n    if (isValueArray) {\n      fillArr(kfValues[i], lastValue, arrDim);\n    } else {\n      if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n        kfValues[i] = lastValue;\n      }\n    }\n  }\n\n  isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim); // Cache the key of last frame to speed up when\n  // animation playback is sequency\n\n  var lastFrame = 0;\n  var lastFramePercent = 0;\n  var start;\n  var w;\n  var p0;\n  var p1;\n  var p2;\n  var p3;\n\n  if (isValueColor) {\n    var rgba = [0, 0, 0, 0];\n  }\n\n  var onframe = function (target, percent) {\n    // Find the range keyframes\n    // kf1-----kf2---------current--------kf3\n    // find kf2 and kf3 and do interpolation\n    var frame; // In the easing function like elasticOut, percent may less than 0\n\n    if (percent < 0) {\n      frame = 0;\n    } else if (percent < lastFramePercent) {\n      // Start from next key\n      // PENDING start from lastFrame ?\n      start = Math.min(lastFrame + 1, trackLen - 1);\n\n      for (frame = start; frame >= 0; frame--) {\n        if (kfPercents[frame] <= percent) {\n          break;\n        }\n      } // PENDING really need to do this ?\n\n\n      frame = Math.min(frame, trackLen - 2);\n    } else {\n      for (frame = lastFrame; frame < trackLen; frame++) {\n        if (kfPercents[frame] > percent) {\n          break;\n        }\n      }\n\n      frame = Math.min(frame - 1, trackLen - 2);\n    }\n\n    lastFrame = frame;\n    lastFramePercent = percent;\n    var range = kfPercents[frame + 1] - kfPercents[frame];\n\n    if (range === 0) {\n      return;\n    } else {\n      w = (percent - kfPercents[frame]) / range;\n    }\n\n    if (useSpline) {\n      p1 = kfValues[frame];\n      p0 = kfValues[frame === 0 ? frame : frame - 1];\n      p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n      p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n\n      if (isValueArray) {\n        catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          value = catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(p1, p2, w);\n        } else {\n          value = catmullRomInterpolate(p0, p1, p2, p3, w, w * w, w * w * w);\n        }\n\n        setter(target, propName, value);\n      }\n    } else {\n      if (isValueArray) {\n        interpolateArray(kfValues[frame], kfValues[frame + 1], w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          interpolateArray(kfValues[frame], kfValues[frame + 1], w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n        } else {\n          value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n        }\n\n        setter(target, propName, value);\n      }\n    }\n  };\n\n  var clip = new Clip({\n    target: animator._target,\n    life: trackMaxTime,\n    loop: animator._loop,\n    delay: animator._delay,\n    onframe: onframe,\n    ondestroy: oneTrackDone\n  });\n\n  if (easing && easing !== 'spline') {\n    clip.easing = easing;\n  }\n\n  return clip;\n}\n/**\n * @alias module:zrender/animation/Animator\n * @constructor\n * @param {Object} target\n * @param {boolean} loop\n * @param {Function} getter\n * @param {Function} setter\n */\n\n\nvar Animator = function (target, loop, getter, setter) {\n  this._tracks = {};\n  this._target = target;\n  this._loop = loop || false;\n  this._getter = getter || defaultGetter;\n  this._setter = setter || defaultSetter;\n  this._clipCount = 0;\n  this._delay = 0;\n  this._doneList = [];\n  this._onframeList = [];\n  this._clipList = [];\n};\n\nAnimator.prototype = {\n  /**\n   * 设置动画关键帧\n   * @param  {number} time 关键帧时间，单位是ms\n   * @param  {Object} props 关键帧的属性值，key-value表示\n   * @return {module:zrender/animation/Animator}\n   */\n  when: function (time\n  /* ms */\n  , props) {\n    var tracks = this._tracks;\n\n    for (var propName in props) {\n      if (!props.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      if (!tracks[propName]) {\n        tracks[propName] = []; // Invalid value\n\n        var value = this._getter(this._target, propName);\n\n        if (value == null) {\n          // zrLog('Invalid property ' + propName);\n          continue;\n        } // If time is 0\n        //  Then props is given initialize value\n        // Else\n        //  Initialize value from current prop value\n\n\n        if (time !== 0) {\n          tracks[propName].push({\n            time: 0,\n            value: cloneValue(value)\n          });\n        }\n      }\n\n      tracks[propName].push({\n        time: time,\n        value: props[propName]\n      });\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加动画每一帧的回调函数\n   * @param  {Function} callback\n   * @return {module:zrender/animation/Animator}\n   */\n  during: function (callback) {\n    this._onframeList.push(callback);\n\n    return this;\n  },\n  pause: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].pause();\n    }\n\n    this._paused = true;\n  },\n  resume: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].resume();\n    }\n\n    this._paused = false;\n  },\n  isPaused: function () {\n    return !!this._paused;\n  },\n  _doneCallback: function () {\n    // Clear all tracks\n    this._tracks = {}; // Clear all clips\n\n    this._clipList.length = 0;\n    var doneList = this._doneList;\n    var len = doneList.length;\n\n    for (var i = 0; i < len; i++) {\n      doneList[i].call(this);\n    }\n  },\n\n  /**\n   * 开始执行动画\n   * @param  {string|Function} [easing]\n   *         动画缓动函数，详见{@link module:zrender/animation/easing}\n   * @param  {boolean} forceAnimate\n   * @return {module:zrender/animation/Animator}\n   */\n  start: function (easing, forceAnimate) {\n    var self = this;\n    var clipCount = 0;\n\n    var oneTrackDone = function () {\n      clipCount--;\n\n      if (!clipCount) {\n        self._doneCallback();\n      }\n    };\n\n    var lastClip;\n\n    for (var propName in this._tracks) {\n      if (!this._tracks.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      var clip = createTrackClip(this, easing, oneTrackDone, this._tracks[propName], propName, forceAnimate);\n\n      if (clip) {\n        this._clipList.push(clip);\n\n        clipCount++; // If start after added to animation\n\n        if (this.animation) {\n          this.animation.addClip(clip);\n        }\n\n        lastClip = clip;\n      }\n    } // Add during callback on the last clip\n\n\n    if (lastClip) {\n      var oldOnFrame = lastClip.onframe;\n\n      lastClip.onframe = function (target, percent) {\n        oldOnFrame(target, percent);\n\n        for (var i = 0; i < self._onframeList.length; i++) {\n          self._onframeList[i](target, percent);\n        }\n      };\n    } // This optimization will help the case that in the upper application\n    // the view may be refreshed frequently, where animation will be\n    // called repeatly but nothing changed.\n\n\n    if (!clipCount) {\n      this._doneCallback();\n    }\n\n    return this;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stop: function (forwardToLast) {\n    var clipList = this._clipList;\n    var animation = this.animation;\n\n    for (var i = 0; i < clipList.length; i++) {\n      var clip = clipList[i];\n\n      if (forwardToLast) {\n        // Move to last frame before stop\n        clip.onframe(this._target, 1);\n      }\n\n      animation && animation.removeClip(clip);\n    }\n\n    clipList.length = 0;\n  },\n\n  /**\n   * 设置动画延迟开始的时间\n   * @param  {number} time 单位ms\n   * @return {module:zrender/animation/Animator}\n   */\n  delay: function (time) {\n    this._delay = time;\n    return this;\n  },\n\n  /**\n   * 添加动画结束的回调\n   * @param  {Function} cb\n   * @return {module:zrender/animation/Animator}\n   */\n  done: function (cb) {\n    if (cb) {\n      this._doneList.push(cb);\n    }\n\n    return this;\n  },\n\n  /**\n   * @return {Array.<module:zrender/animation/Clip>}\n   */\n  getClips: function () {\n    return this._clipList;\n  }\n};\nvar _default = Animator;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1045:\n/***/ (function(module, exports) {\n\n// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n/**\n * Simple double linked list. Compared with array, it has O(1) remove operation.\n * @constructor\n */\nvar LinkedList = function () {\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n  this.head = null;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.tail = null;\n  this._len = 0;\n};\n\nvar linkedListProto = LinkedList.prototype;\n/**\n * Insert a new value at the tail\n * @param  {} val\n * @return {module:zrender/core/LRU~Entry}\n */\n\nlinkedListProto.insert = function (val) {\n  var entry = new Entry(val);\n  this.insertEntry(entry);\n  return entry;\n};\n/**\n * Insert an entry at the tail\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.insertEntry = function (entry) {\n  if (!this.head) {\n    this.head = this.tail = entry;\n  } else {\n    this.tail.next = entry;\n    entry.prev = this.tail;\n    entry.next = null;\n    this.tail = entry;\n  }\n\n  this._len++;\n};\n/**\n * Remove entry.\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.remove = function (entry) {\n  var prev = entry.prev;\n  var next = entry.next;\n\n  if (prev) {\n    prev.next = next;\n  } else {\n    // Is head\n    this.head = next;\n  }\n\n  if (next) {\n    next.prev = prev;\n  } else {\n    // Is tail\n    this.tail = prev;\n  }\n\n  entry.next = entry.prev = null;\n  this._len--;\n};\n/**\n * @return {number}\n */\n\n\nlinkedListProto.len = function () {\n  return this._len;\n};\n/**\n * Clear list\n */\n\n\nlinkedListProto.clear = function () {\n  this.head = this.tail = null;\n  this._len = 0;\n};\n/**\n * @constructor\n * @param {} val\n */\n\n\nvar Entry = function (val) {\n  /**\n   * @type {}\n   */\n  this.value = val;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.next;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.prev;\n};\n/**\n * LRU Cache\n * @constructor\n * @alias module:zrender/core/LRU\n */\n\n\nvar LRU = function (maxSize) {\n  this._list = new LinkedList();\n  this._map = {};\n  this._maxSize = maxSize || 10;\n  this._lastRemovedEntry = null;\n};\n\nvar LRUProto = LRU.prototype;\n/**\n * @param  {string} key\n * @param  {} value\n * @return {} Removed value\n */\n\nLRUProto.put = function (key, value) {\n  var list = this._list;\n  var map = this._map;\n  var removed = null;\n\n  if (map[key] == null) {\n    var len = list.len(); // Reuse last removed entry\n\n    var entry = this._lastRemovedEntry;\n\n    if (len >= this._maxSize && len > 0) {\n      // Remove the least recently used\n      var leastUsedEntry = list.head;\n      list.remove(leastUsedEntry);\n      delete map[leastUsedEntry.key];\n      removed = leastUsedEntry.value;\n      this._lastRemovedEntry = leastUsedEntry;\n    }\n\n    if (entry) {\n      entry.value = value;\n    } else {\n      entry = new Entry(value);\n    }\n\n    entry.key = key;\n    list.insertEntry(entry);\n    map[key] = entry;\n  }\n\n  return removed;\n};\n/**\n * @param  {string} key\n * @return {}\n */\n\n\nLRUProto.get = function (key) {\n  var entry = this._map[key];\n  var list = this._list;\n\n  if (entry != null) {\n    // Put the latest used entry in the tail\n    if (entry !== list.tail) {\n      list.remove(entry);\n      list.insertEntry(entry);\n    }\n\n    return entry.value;\n  }\n};\n/**\n * Clear the cache\n */\n\n\nLRUProto.clear = function () {\n  this._list.clear();\n\n  this._map = {};\n};\n\nvar _default = LRU;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1046:\n/***/ (function(module, exports) {\n\nvar STYLE_COMMON_PROPS = [['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'], ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]]; // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n// var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\nvar Style = function (opts, host) {\n  this.extendFrom(opts, false);\n  this.host = host;\n};\n\nfunction createLinearGradient(ctx, obj, rect) {\n  var x = obj.x == null ? 0 : obj.x;\n  var x2 = obj.x2 == null ? 1 : obj.x2;\n  var y = obj.y == null ? 0 : obj.y;\n  var y2 = obj.y2 == null ? 0 : obj.y2;\n\n  if (!obj.global) {\n    x = x * rect.width + rect.x;\n    x2 = x2 * rect.width + rect.x;\n    y = y * rect.height + rect.y;\n    y2 = y2 * rect.height + rect.y;\n  }\n\n  var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n  return canvasGradient;\n}\n\nfunction createRadialGradient(ctx, obj, rect) {\n  var width = rect.width;\n  var height = rect.height;\n  var min = Math.min(width, height);\n  var x = obj.x == null ? 0.5 : obj.x;\n  var y = obj.y == null ? 0.5 : obj.y;\n  var r = obj.r == null ? 0.5 : obj.r;\n\n  if (!obj.global) {\n    x = x * width + rect.x;\n    y = y * height + rect.y;\n    r = r * min;\n  }\n\n  var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n  return canvasGradient;\n}\n\nStyle.prototype = {\n  constructor: Style,\n\n  /**\n   * @type {module:zrender/graphic/Displayable}\n   */\n  host: null,\n\n  /**\n   * @type {string}\n   */\n  fill: '#000',\n\n  /**\n   * @type {string}\n   */\n  stroke: null,\n\n  /**\n   * @type {number}\n   */\n  opacity: 1,\n\n  /**\n   * @type {Array.<number>}\n   */\n  lineDash: null,\n\n  /**\n   * @type {number}\n   */\n  lineDashOffset: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetY: 0,\n\n  /**\n   * @type {number}\n   */\n  lineWidth: 1,\n\n  /**\n   * If stroke ignore scale\n   * @type {Boolean}\n   */\n  strokeNoScale: false,\n  // Bounding rect text configuration\n  // Not affected by element transform\n\n  /**\n   * @type {string}\n   */\n  text: null,\n\n  /**\n   * If `fontSize` or `fontFamily` exists, `font` will be reset by\n   * `fontSize`, `fontStyle`, `fontWeight`, `fontFamily`.\n   * So do not visit it directly in upper application (like echarts),\n   * but use `contain/text#makeFont` instead.\n   * @type {string}\n   */\n  font: null,\n\n  /**\n   * The same as font. Use font please.\n   * @deprecated\n   * @type {string}\n   */\n  textFont: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontStyle: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontWeight: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * Should be 12 but not '12px'.\n   * @type {number}\n   */\n  fontSize: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontFamily: null,\n\n  /**\n   * Reserved for special functinality, like 'hr'.\n   * @type {string}\n   */\n  textTag: null,\n\n  /**\n   * @type {string}\n   */\n  textFill: '#000',\n\n  /**\n   * @type {string}\n   */\n  textStroke: null,\n\n  /**\n   * @type {number}\n   */\n  textWidth: null,\n\n  /**\n   * Only for textBackground.\n   * @type {number}\n   */\n  textHeight: null,\n\n  /**\n   * textStroke may be set as some color as a default\n   * value in upper applicaion, where the default value\n   * of textStrokeWidth should be 0 to make sure that\n   * user can choose to do not use text stroke.\n   * @type {number}\n   */\n  textStrokeWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textLineHeight: null,\n\n  /**\n   * 'inside', 'left', 'right', 'top', 'bottom'\n   * [x, y]\n   * Based on x, y of rect.\n   * @type {string|Array.<number>}\n   * @default 'inside'\n   */\n  textPosition: 'inside',\n\n  /**\n   * If not specified, use the boundingRect of a `displayable`.\n   * @type {Object}\n   */\n  textRect: null,\n\n  /**\n   * [x, y]\n   * @type {Array.<number>}\n   */\n  textOffset: null,\n\n  /**\n   * @type {string}\n   */\n  textAlign: null,\n\n  /**\n   * @type {string}\n   */\n  textVerticalAlign: null,\n\n  /**\n   * @type {number}\n   */\n  textDistance: 5,\n\n  /**\n   * @type {string}\n   */\n  textShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetY: 0,\n\n  /**\n   * @type {string}\n   */\n  textBoxShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetY: 0,\n\n  /**\n   * Whether transform text.\n   * Only useful in Path and Image element\n   * @type {boolean}\n   */\n  transformText: false,\n\n  /**\n   * Text rotate around position of Path or Image\n   * Only useful in Path and Image element and transformText is false.\n   */\n  textRotation: 0,\n\n  /**\n   * Text origin of text rotation, like [10, 40].\n   * Based on x, y of rect.\n   * Useful in label rotation of circular symbol.\n   * By default, this origin is textPosition.\n   * Can be 'center'.\n   * @type {string|Array.<number>}\n   */\n  textOrigin: null,\n\n  /**\n   * @type {string}\n   */\n  textBackgroundColor: null,\n\n  /**\n   * @type {string}\n   */\n  textBorderColor: null,\n\n  /**\n   * @type {number}\n   */\n  textBorderWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textBorderRadius: 0,\n\n  /**\n   * Can be `2` or `[2, 4]` or `[2, 3, 4, 5]`\n   * @type {number|Array.<number>}\n   */\n  textPadding: null,\n\n  /**\n   * Text styles for rich text.\n   * @type {Object}\n   */\n  rich: null,\n\n  /**\n   * {outerWidth, outerHeight, ellipsis, placeholder}\n   * @type {Object}\n   */\n  truncate: null,\n\n  /**\n   * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n   * @type {string}\n   */\n  blend: null,\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  bind: function (ctx, el, prevEl) {\n    var style = this;\n    var prevStyle = prevEl && prevEl.style;\n    var firstDraw = !prevStyle;\n\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n      var prop = STYLE_COMMON_PROPS[i];\n      var styleName = prop[0];\n\n      if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n        // FIXME Invalid property value will cause style leak from previous element.\n        ctx[styleName] = style[styleName] || prop[1];\n      }\n    }\n\n    if (firstDraw || style.fill !== prevStyle.fill) {\n      ctx.fillStyle = style.fill;\n    }\n\n    if (firstDraw || style.stroke !== prevStyle.stroke) {\n      ctx.strokeStyle = style.stroke;\n    }\n\n    if (firstDraw || style.opacity !== prevStyle.opacity) {\n      ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n    }\n\n    if (firstDraw || style.blend !== prevStyle.blend) {\n      ctx.globalCompositeOperation = style.blend || 'source-over';\n    }\n\n    if (this.hasStroke()) {\n      var lineWidth = style.lineWidth;\n      ctx.lineWidth = lineWidth / (this.strokeNoScale && el && el.getLineScale ? el.getLineScale() : 1);\n    }\n  },\n  hasFill: function () {\n    var fill = this.fill;\n    return fill != null && fill !== 'none';\n  },\n  hasStroke: function () {\n    var stroke = this.stroke;\n    return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n  },\n\n  /**\n   * Extend from other style\n   * @param {zrender/graphic/Style} otherStyle\n   * @param {boolean} overwrite true: overwrirte any way.\n   *                            false: overwrite only when !target.hasOwnProperty\n   *                            others: overwrite when property is not null/undefined.\n   */\n  extendFrom: function (otherStyle, overwrite) {\n    if (otherStyle) {\n      for (var name in otherStyle) {\n        if (otherStyle.hasOwnProperty(name) && (overwrite === true || (overwrite === false ? !this.hasOwnProperty(name) : otherStyle[name] != null))) {\n          this[name] = otherStyle[name];\n        }\n      }\n    }\n  },\n\n  /**\n   * Batch setting style with a given object\n   * @param {Object|string} obj\n   * @param {*} [obj]\n   */\n  set: function (obj, value) {\n    if (typeof obj === 'string') {\n      this[obj] = value;\n    } else {\n      this.extendFrom(obj, true);\n    }\n  },\n\n  /**\n   * Clone\n   * @return {zrender/graphic/Style} [description]\n   */\n  clone: function () {\n    var newStyle = new this.constructor();\n    newStyle.extendFrom(this, true);\n    return newStyle;\n  },\n  getGradient: function (ctx, obj, rect) {\n    var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n    var canvasGradient = method(ctx, obj, rect);\n    var colorStops = obj.colorStops;\n\n    for (var i = 0; i < colorStops.length; i++) {\n      canvasGradient.addColorStop(colorStops[i].offset, colorStops[i].color);\n    }\n\n    return canvasGradient;\n  }\n};\nvar styleProto = Style.prototype;\n\nfor (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n  var prop = STYLE_COMMON_PROPS[i];\n\n  if (!(prop[0] in styleProto)) {\n    styleProto[prop[0]] = prop[1];\n  }\n} // Provide for others\n\n\nStyle.getGradient = styleProto.getGradient;\nvar _default = Style;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1047:\n/***/ (function(module, exports) {\n\nvar Pattern = function (image, repeat) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {image: ...}`, where this constructor will not be called.\n  this.image = image;\n  this.repeat = repeat; // Can be cloned\n\n  this.type = 'pattern';\n};\n\nPattern.prototype.getCanvasPattern = function (ctx) {\n  return ctx.createPattern(this.image, this.repeat || 'repeat');\n};\n\nvar _default = Pattern;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1048:\n/***/ (function(module, exports) {\n\nvar _default = typeof window !== 'undefined' && (window.requestAnimationFrame && window.requestAnimationFrame.bind(window) || // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\nwindow.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window) || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame) || function (func) {\n  setTimeout(func, 16);\n};\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1049:\n/***/ (function(module, exports) {\n\nfunction buildPath(ctx, shape) {\n  var x = shape.x;\n  var y = shape.y;\n  var width = shape.width;\n  var height = shape.height;\n  var r = shape.r;\n  var r1;\n  var r2;\n  var r3;\n  var r4; // Convert width and height to positive for better borderRadius\n\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n\n  if (typeof r === 'number') {\n    r1 = r2 = r3 = r4 = r;\n  } else if (r instanceof Array) {\n    if (r.length === 1) {\n      r1 = r2 = r3 = r4 = r[0];\n    } else if (r.length === 2) {\n      r1 = r3 = r[0];\n      r2 = r4 = r[1];\n    } else if (r.length === 3) {\n      r1 = r[0];\n      r2 = r4 = r[1];\n      r3 = r[2];\n    } else {\n      r1 = r[0];\n      r2 = r[1];\n      r3 = r[2];\n      r4 = r[3];\n    }\n  } else {\n    r1 = r2 = r3 = r4 = 0;\n  }\n\n  var total;\n\n  if (r1 + r2 > width) {\n    total = r1 + r2;\n    r1 *= width / total;\n    r2 *= width / total;\n  }\n\n  if (r3 + r4 > width) {\n    total = r3 + r4;\n    r3 *= width / total;\n    r4 *= width / total;\n  }\n\n  if (r2 + r3 > height) {\n    total = r2 + r3;\n    r2 *= height / total;\n    r3 *= height / total;\n  }\n\n  if (r1 + r4 > height) {\n    total = r1 + r4;\n    r1 *= height / total;\n    r4 *= height / total;\n  }\n\n  ctx.moveTo(x + r1, y);\n  ctx.lineTo(x + width - r2, y);\n  r2 !== 0 && ctx.quadraticCurveTo(x + width, y, x + width, y + r2);\n  ctx.lineTo(x + width, y + height - r3);\n  r3 !== 0 && ctx.quadraticCurveTo(x + width, y + height, x + width - r3, y + height);\n  ctx.lineTo(x + r4, y + height);\n  r4 !== 0 && ctx.quadraticCurveTo(x, y + height, x, y + height - r4);\n  ctx.lineTo(x, y + r1);\n  r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n}\n\nexports.buildPath = buildPath;\n\n/***/ }),\n\n/***/ 1050:\n/***/ (function(module, exports) {\n\nvar PI2 = Math.PI * 2;\n\nfunction normalizeRadian(angle) {\n  angle %= PI2;\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle;\n}\n\nexports.normalizeRadian = normalizeRadian;\n\n/***/ }),\n\n/***/ 1051:\n/***/ (function(module, exports) {\n\nfunction windingLine(x0, y0, x1, y1, x, y) {\n  if (y > y0 && y > y1 || y < y0 && y < y1) {\n    return 0;\n  } // Ignore horizontal line\n\n\n  if (y1 === y0) {\n    return 0;\n  }\n\n  var dir = y1 < y0 ? 1 : -1;\n  var t = (y - y0) / (y1 - y0); // Avoid winding error when intersection point is the connect point of two line of polygon\n\n  if (t === 1 || t === 0) {\n    dir = y1 < y0 ? 0.5 : -0.5;\n  }\n\n  var x_ = t * (x1 - x0) + x0;\n  return x_ > x ? dir : 0;\n}\n\nmodule.exports = windingLine;\n\n/***/ }),\n\n/***/ 1052:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar smoothSpline = __webpack_require__(1114);\n\nvar smoothBezier = __webpack_require__(1115);\n\nfunction buildPath(ctx, shape, closePath) {\n  var points = shape.points;\n  var smooth = shape.smooth;\n\n  if (points && points.length >= 2) {\n    if (smooth && smooth !== 'spline') {\n      var controlPoints = smoothBezier(points, smooth, closePath, shape.smoothConstraint);\n      ctx.moveTo(points[0][0], points[0][1]);\n      var len = points.length;\n\n      for (var i = 0; i < (closePath ? len : len - 1); i++) {\n        var cp1 = controlPoints[i * 2];\n        var cp2 = controlPoints[i * 2 + 1];\n        var p = points[(i + 1) % len];\n        ctx.bezierCurveTo(cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]);\n      }\n    } else {\n      if (smooth === 'spline') {\n        points = smoothSpline(points, closePath);\n      }\n\n      ctx.moveTo(points[0][0], points[0][1]);\n\n      for (var i = 1, l = points.length; i < l; i++) {\n        ctx.lineTo(points[i][0], points[i][1]);\n      }\n    }\n\n    closePath && ctx.closePath();\n  }\n}\n\nexports.buildPath = buildPath;\n\n/***/ }),\n\n/***/ 1053:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _clazz = __webpack_require__(992);\n\nvar set = _clazz.set;\nvar get = _clazz.get;\nvar _default = {\n  clearColorPalette: function () {\n    set(this, 'colorIdx', 0);\n    set(this, 'colorNameMap', {});\n  },\n  getColorFromPalette: function (name, scope) {\n    scope = scope || this;\n    var colorIdx = get(scope, 'colorIdx') || 0;\n    var colorNameMap = get(scope, 'colorNameMap') || set(scope, 'colorNameMap', {}); // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n\n    if (colorNameMap.hasOwnProperty(name)) {\n      return colorNameMap[name];\n    }\n\n    var colorPalette = this.get('color', true) || [];\n\n    if (!colorPalette.length) {\n      return;\n    }\n\n    var color = colorPalette[colorIdx];\n\n    if (name) {\n      colorNameMap[name] = color;\n    }\n\n    set(scope, 'colorIdx', (colorIdx + 1) % colorPalette.length);\n    return color;\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1054:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar numberUtil = __webpack_require__(981);\n\n/**\n * For testable.\n */\nvar roundNumber = numberUtil.round;\n/**\n * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n *                                Should be extent[0] < extent[1].\n * @param {number} splitNumber splitNumber should be >= 1.\n * @param {number} [minInterval]\n * @param {number} [maxInterval]\n * @return {Object} {interval, intervalPrecision, niceTickExtent}\n */\n\nfunction intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval) {\n  var result = {};\n  var span = extent[1] - extent[0];\n  var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n\n  if (minInterval != null && interval < minInterval) {\n    interval = result.interval = minInterval;\n  }\n\n  if (maxInterval != null && interval > maxInterval) {\n    interval = result.interval = maxInterval;\n  } // Tow more digital for tick.\n\n\n  var precision = result.intervalPrecision = getIntervalPrecision(interval); // Niced extent inside original extent\n\n  var niceTickExtent = result.niceTickExtent = [roundNumber(Math.ceil(extent[0] / interval) * interval, precision), roundNumber(Math.floor(extent[1] / interval) * interval, precision)];\n  fixExtent(niceTickExtent, extent);\n  return result;\n}\n/**\n * @param {number} interval\n * @return {number} interval precision\n */\n\n\nfunction getIntervalPrecision(interval) {\n  // Tow more digital for tick.\n  return numberUtil.getPrecisionSafe(interval) + 2;\n}\n\nfunction clamp(niceTickExtent, idx, extent) {\n  niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n} // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n\n\nfunction fixExtent(niceTickExtent, extent) {\n  !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n  !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n  clamp(niceTickExtent, 0, extent);\n  clamp(niceTickExtent, 1, extent);\n\n  if (niceTickExtent[0] > niceTickExtent[1]) {\n    niceTickExtent[0] = niceTickExtent[1];\n  }\n}\n\nfunction intervalScaleGetTicks(interval, extent, niceTickExtent, intervalPrecision) {\n  var ticks = []; // If interval is 0, return [];\n\n  if (!interval) {\n    return ticks;\n  } // Consider this case: using dataZoom toolbox, zoom and zoom.\n\n\n  var safeLimit = 10000;\n\n  if (extent[0] < niceTickExtent[0]) {\n    ticks.push(extent[0]);\n  }\n\n  var tick = niceTickExtent[0];\n\n  while (tick <= niceTickExtent[1]) {\n    ticks.push(tick); // Avoid rounding error\n\n    tick = roundNumber(tick + interval, intervalPrecision);\n\n    if (tick === ticks[ticks.length - 1]) {\n      // Consider out of safe float point, e.g.,\n      // -3711126.9907707 + 2e-10 === -3711126.9907707\n      break;\n    }\n\n    if (ticks.length > safeLimit) {\n      return [];\n    }\n  } // Consider this case: the last item of ticks is smaller\n  // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n\n\n  if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n    ticks.push(extent[1]);\n  }\n\n  return ticks;\n}\n\nexports.intervalScaleNiceTicks = intervalScaleNiceTicks;\nexports.getIntervalPrecision = getIntervalPrecision;\nexports.fixExtent = fixExtent;\nexports.intervalScaleGetTicks = intervalScaleGetTicks;\n\n/***/ }),\n\n/***/ 1055:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar modelUtil = __webpack_require__(982);\n\n/**\n * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} {point: [x, y], el: ...} point Will not be null.\n */\nfunction _default(finder, ecModel) {\n  var point = [];\n  var seriesIndex = finder.seriesIndex;\n  var seriesModel;\n\n  if (seriesIndex == null || !(seriesModel = ecModel.getSeriesByIndex(seriesIndex))) {\n    return {\n      point: []\n    };\n  }\n\n  var data = seriesModel.getData();\n  var dataIndex = modelUtil.queryDataIndex(data, finder);\n\n  if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n    return {\n      point: []\n    };\n  }\n\n  var el = data.getItemGraphicEl(dataIndex);\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (seriesModel.getTooltipPosition) {\n    point = seriesModel.getTooltipPosition(dataIndex) || [];\n  } else if (coordSys && coordSys.dataToPoint) {\n    point = coordSys.dataToPoint(data.getValues(zrUtil.map(coordSys.dimensions, function (dim) {\n      return seriesModel.coordDimToDataDim(dim)[0];\n    }), dataIndex, true)) || [];\n  } else if (el) {\n    // Use graphic bounding rect\n    var rect = el.getBoundingRect().clone();\n    rect.applyTransform(el.transform);\n    point = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n\n  return {\n    point: point,\n    el: el\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1056:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar env = __webpack_require__(986);\n\nvar modelUtil = __webpack_require__(982);\n\nvar get = modelUtil.makeGetter();\nvar each = zrUtil.each;\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n * @param {Function} handler\n *      param: {string} currTrigger\n *      param: {Array.<number>} point\n */\n\nfunction register(key, api, handler) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  get(zr).records || (get(zr).records = {});\n  initGlobalListeners(zr, api);\n  var record = get(zr).records[key] || (get(zr).records[key] = {});\n  record.handler = handler;\n}\n\nfunction initGlobalListeners(zr, api) {\n  if (get(zr).initialized) {\n    return;\n  }\n\n  get(zr).initialized = true;\n  useHandler('click', zrUtil.curry(doEnter, 'click'));\n  useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove')); // useHandler('mouseout', onLeave);\n\n  useHandler('globalout', onLeave);\n\n  function useHandler(eventType, cb) {\n    zr.on(eventType, function (e) {\n      var dis = makeDispatchAction(api);\n      each(get(zr).records, function (record) {\n        record && cb(record, e, dis.dispatchAction);\n      });\n      dispatchTooltipFinally(dis.pendings, api);\n    });\n  }\n}\n\nfunction dispatchTooltipFinally(pendings, api) {\n  var showLen = pendings.showTip.length;\n  var hideLen = pendings.hideTip.length;\n  var actuallyPayload;\n\n  if (showLen) {\n    actuallyPayload = pendings.showTip[showLen - 1];\n  } else if (hideLen) {\n    actuallyPayload = pendings.hideTip[hideLen - 1];\n  }\n\n  if (actuallyPayload) {\n    actuallyPayload.dispatchAction = null;\n    api.dispatchAction(actuallyPayload);\n  }\n}\n\nfunction onLeave(record, e, dispatchAction) {\n  record.handler('leave', null, dispatchAction);\n}\n\nfunction doEnter(currTrigger, record, e, dispatchAction) {\n  record.handler(currTrigger, e, dispatchAction);\n}\n\nfunction makeDispatchAction(api) {\n  var pendings = {\n    showTip: [],\n    hideTip: []\n  }; // FIXME\n  // better approach?\n  // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n  // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n  // So we have to add \"final stage\" to merge those dispatched actions.\n\n  var dispatchAction = function (payload) {\n    var pendingList = pendings[payload.type];\n\n    if (pendingList) {\n      pendingList.push(payload);\n    } else {\n      payload.dispatchAction = dispatchAction;\n      api.dispatchAction(payload);\n    }\n  };\n\n  return {\n    dispatchAction: dispatchAction,\n    pendings: pendings\n  };\n}\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction unregister(key, api) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  var record = (get(zr).records || {})[key];\n\n  if (record) {\n    get(zr).records[key] = null;\n  }\n}\n\nexports.register = register;\nexports.unregister = unregister;\n\n/***/ }),\n\n/***/ 1057:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _layout = __webpack_require__(990);\n\nvar getLayoutRect = _layout.getLayoutRect;\nvar layoutBox = _layout.box;\nvar positionElement = _layout.positionElement;\n\nvar formatUtil = __webpack_require__(985);\n\nvar graphic = __webpack_require__(980);\n\n/**\n * Layout list like component.\n * It will box layout each items in group of component and then position the whole group in the viewport\n * @param {module:zrender/group/Group} group\n * @param {module:echarts/model/Component} componentModel\n * @param {module:echarts/ExtensionAPI}\n */\nfunction layout(group, componentModel, api) {\n  var boxLayoutParams = componentModel.getBoxLayoutParams();\n  var padding = componentModel.get('padding');\n  var viewportSize = {\n    width: api.getWidth(),\n    height: api.getHeight()\n  };\n  var rect = getLayoutRect(boxLayoutParams, viewportSize, padding);\n  layoutBox(componentModel.get('orient'), group, componentModel.get('itemGap'), rect.width, rect.height);\n  positionElement(group, boxLayoutParams, viewportSize, padding);\n}\n\nfunction makeBackground(rect, componentModel) {\n  var padding = formatUtil.normalizeCssArray(componentModel.get('padding'));\n  var style = componentModel.getItemStyle(['color', 'opacity']);\n  style.fill = componentModel.get('backgroundColor');\n  var rect = new graphic.Rect({\n    shape: {\n      x: rect.x - padding[3],\n      y: rect.y - padding[0],\n      width: rect.width + padding[1] + padding[3],\n      height: rect.height + padding[0] + padding[2],\n      r: componentModel.get('borderRadius')\n    },\n    style: style,\n    silent: true,\n    z2: -1\n  }); // FIXME\n  // `subPixelOptimizeRect` may bring some gap between edge of viewpart\n  // and background rect when setting like `left: 0`, `top: 0`.\n  // graphic.subPixelOptimizeRect(rect);\n\n  return rect;\n}\n\nexports.layout = layout;\nexports.makeBackground = makeBackground;\n\n/***/ }),\n\n/***/ 1058:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar each = zrUtil.each;\nvar ATTR = '\\0_ec_hist_store';\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} newSnapshot {dataZoomId, batch: [payloadInfo, ...]}\n */\n\nfunction push(ecModel, newSnapshot) {\n  var store = giveStore(ecModel); // If previous dataZoom can not be found,\n  // complete an range with current range.\n\n  each(newSnapshot, function (batchItem, dataZoomId) {\n    var i = store.length - 1;\n\n    for (; i >= 0; i--) {\n      var snapshot = store[i];\n\n      if (snapshot[dataZoomId]) {\n        break;\n      }\n    }\n\n    if (i < 0) {\n      // No origin range set, create one by current range.\n      var dataZoomModel = ecModel.queryComponents({\n        mainType: 'dataZoom',\n        subType: 'select',\n        id: dataZoomId\n      })[0];\n\n      if (dataZoomModel) {\n        var percentRange = dataZoomModel.getPercentRange();\n        store[0][dataZoomId] = {\n          dataZoomId: dataZoomId,\n          start: percentRange[0],\n          end: percentRange[1]\n        };\n      }\n    }\n  });\n  store.push(newSnapshot);\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} snapshot\n */\n\n\nfunction pop(ecModel) {\n  var store = giveStore(ecModel);\n  var head = store[store.length - 1];\n  store.length > 1 && store.pop(); // Find top for all dataZoom.\n\n  var snapshot = {};\n  each(head, function (batchItem, dataZoomId) {\n    for (var i = store.length - 1; i >= 0; i--) {\n      var batchItem = store[i][dataZoomId];\n\n      if (batchItem) {\n        snapshot[dataZoomId] = batchItem;\n        break;\n      }\n    }\n  });\n  return snapshot;\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n */\n\n\nfunction clear(ecModel) {\n  ecModel[ATTR] = null;\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n * @return {number} records. always >= 1.\n */\n\n\nfunction count(ecModel) {\n  return giveStore(ecModel).length;\n}\n/**\n * [{key: dataZoomId, value: {dataZoomId, range}}, ...]\n * History length of each dataZoom may be different.\n * this._history[0] is used to store origin range.\n * @type {Array.<Object>}\n */\n\n\nfunction giveStore(ecModel) {\n  var store = ecModel[ATTR];\n\n  if (!store) {\n    store = ecModel[ATTR] = [{}];\n  }\n\n  return store;\n}\n\nexports.push = push;\nexports.pop = pop;\nexports.clear = clear;\nexports.count = count;\n\n/***/ }),\n\n/***/ 1060:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar env = __webpack_require__(986);\n\n// Fix weird bug in some version of IE11 (like 11.0.9600.178**),\n// where exception \"unexpected call to method or property access\"\n// might be thrown when calling ctx.fill or ctx.stroke after a path\n// whose area size is zero is drawn and ctx.clip() is called and\n// shadowBlur is set. See #4572, #3112, #5777.\n// (e.g.,\n//  ctx.moveTo(10, 10);\n//  ctx.lineTo(20, 10);\n//  ctx.closePath();\n//  ctx.clip();\n//  ctx.shadowBlur = 10;\n//  ...\n//  ctx.fill();\n// )\nvar shadowTemp = [['shadowBlur', 0], ['shadowColor', '#000'], ['shadowOffsetX', 0], ['shadowOffsetY', 0]];\n\nfunction _default(orignalBrush) {\n  // version string can be: '11.0'\n  return env.browser.ie && env.browser.version >= 11 ? function () {\n    var clipPaths = this.__clipPaths;\n    var style = this.style;\n    var modified;\n\n    if (clipPaths) {\n      for (var i = 0; i < clipPaths.length; i++) {\n        var clipPath = clipPaths[i];\n        var shape = clipPath && clipPath.shape;\n        var type = clipPath && clipPath.type;\n\n        if (shape && (type === 'sector' && shape.startAngle === shape.endAngle || type === 'rect' && (!shape.width || !shape.height))) {\n          for (var j = 0; j < shadowTemp.length; j++) {\n            // It is save to put shadowTemp static, because shadowTemp\n            // will be all modified each item brush called.\n            shadowTemp[j][2] = style[shadowTemp[j][0]];\n            style[shadowTemp[j][0]] = shadowTemp[j][1];\n          }\n\n          modified = true;\n          break;\n        }\n      }\n    }\n\n    orignalBrush.apply(this, arguments);\n\n    if (modified) {\n      for (var j = 0; j < shadowTemp.length; j++) {\n        style[shadowTemp[j][0]] = shadowTemp[j][2];\n      }\n    }\n  } : orignalBrush;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1061:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar graphic = __webpack_require__(980);\n\nvar BaseAxisPointer = __webpack_require__(1062);\n\nvar viewHelper = __webpack_require__(1035);\n\nvar cartesianAxisHelper = __webpack_require__(1063);\n\nvar AxisView = __webpack_require__(1022);\n\nvar CartesianAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisPointerType = axisPointerModel.get('type');\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  },\n\n  /**\n   * @override\n   */\n  getHandleTransform: function (value, axisModel, axisPointerModel) {\n    var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n      labelInside: false\n    });\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n    return {\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  },\n\n  /**\n   * @override\n   */\n  updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisExtent = axis.getGlobalExtent(true);\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var dimIndex = axis.dim === 'x' ? 0 : 1;\n    var currPosition = transform.position;\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex]; // Make tooltip do not overlap axisPointer and in the middle of the grid.\n\n    var tooltipOptions = [{\n      verticalAlign: 'middle'\n    }, {\n      align: 'center'\n    }];\n    return {\n      position: currPosition,\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: tooltipOptions[dimIndex]\n    };\n  }\n});\n\nfunction getCartesian(grid, axis) {\n  var opt = {};\n  opt[axis.dim + 'AxisIndex'] = axis.index;\n  return grid.getCartesian(opt);\n}\n\nvar pointerShapeBuilder = {\n  line: function (axis, pixelValue, otherExtent, elStyle) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getAxisDimIndex(axis));\n    graphic.subPixelOptimizeLine({\n      shape: targetShape,\n      style: elStyle\n    });\n    return {\n      type: 'Line',\n      shape: targetShape\n    };\n  },\n  shadow: function (axis, pixelValue, otherExtent, elStyle) {\n    var bandWidth = axis.getBandWidth();\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getAxisDimIndex(axis))\n    };\n  }\n};\n\nfunction getAxisDimIndex(axis) {\n  return axis.dim === 'x' ? 0 : 1;\n}\n\nAxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\nvar _default = CartesianAxisPointer;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1062:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar clazzUtil = __webpack_require__(992);\n\nvar graphic = __webpack_require__(980);\n\nvar axisPointerModelHelper = __webpack_require__(1015);\n\nvar eventTool = __webpack_require__(998);\n\nvar throttleUtil = __webpack_require__(1008);\n\nvar modelUtil = __webpack_require__(982);\n\nvar get = modelUtil.makeGetter();\nvar clone = zrUtil.clone;\nvar bind = zrUtil.bind;\n/**\n * Base axis pointer class in 2D.\n * Implemenents {module:echarts/component/axis/IAxisPointer}.\n */\n\nfunction BaseAxisPointer() {}\n\nBaseAxisPointer.prototype = {\n  /**\n   * @private\n   */\n  _group: null,\n\n  /**\n   * @private\n   */\n  _lastGraphicKey: null,\n\n  /**\n   * @private\n   */\n  _handle: null,\n\n  /**\n   * @private\n   */\n  _dragging: false,\n\n  /**\n   * @private\n   */\n  _lastValue: null,\n\n  /**\n   * @private\n   */\n  _lastStatus: null,\n\n  /**\n   * @private\n   */\n  _payloadInfo: null,\n\n  /**\n   * In px, arbitrary value. Do not set too small,\n   * no animation is ok for most cases.\n   * @protected\n   */\n  animationThreshold: 15,\n\n  /**\n   * @implement\n   */\n  render: function (axisModel, axisPointerModel, api, forceRender) {\n    var value = axisPointerModel.get('value');\n    var status = axisPointerModel.get('status'); // Bind them to `this`, not in closure, otherwise they will not\n    // be replaced when user calling setOption in not merge mode.\n\n    this._axisModel = axisModel;\n    this._axisPointerModel = axisPointerModel;\n    this._api = api; // Optimize: `render` will be called repeatly during mouse move.\n    // So it is power consuming if performing `render` each time,\n    // especially on mobile device.\n\n    if (!forceRender && this._lastValue === value && this._lastStatus === status) {\n      return;\n    }\n\n    this._lastValue = value;\n    this._lastStatus = status;\n    var group = this._group;\n    var handle = this._handle;\n\n    if (!status || status === 'hide') {\n      // Do not clear here, for animation better.\n      group && group.hide();\n      handle && handle.hide();\n      return;\n    }\n\n    group && group.show();\n    handle && handle.show(); // Otherwise status is 'show'\n\n    var elOption = {};\n    this.makeElOption(elOption, value, axisModel, axisPointerModel, api); // Enable change axis pointer type.\n\n    var graphicKey = elOption.graphicKey;\n\n    if (graphicKey !== this._lastGraphicKey) {\n      this.clear(api);\n    }\n\n    this._lastGraphicKey = graphicKey;\n    var moveAnimation = this._moveAnimation = this.determineAnimation(axisModel, axisPointerModel);\n\n    if (!group) {\n      group = this._group = new graphic.Group();\n      this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n      this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n      api.getZr().add(group);\n    } else {\n      var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n      this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n      this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n    }\n\n    updateMandatoryProps(group, axisPointerModel, true);\n\n    this._renderHandle(value);\n  },\n\n  /**\n   * @implement\n   */\n  remove: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @implement\n   */\n  dispose: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @protected\n   */\n  determineAnimation: function (axisModel, axisPointerModel) {\n    var animation = axisPointerModel.get('animation');\n    var axis = axisModel.axis;\n    var isCategoryAxis = axis.type === 'category';\n    var useSnap = axisPointerModel.get('snap'); // Value axis without snap always do not snap.\n\n    if (!useSnap && !isCategoryAxis) {\n      return false;\n    }\n\n    if (animation === 'auto' || animation == null) {\n      var animationThreshold = this.animationThreshold;\n\n      if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n        return true;\n      } // It is important to auto animation when snap used. Consider if there is\n      // a dataZoom, animation will be disabled when too many points exist, while\n      // it will be enabled for better visual effect when little points exist.\n\n\n      if (useSnap) {\n        var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n        var axisExtent = axis.getExtent(); // Approximate band width\n\n        return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n      }\n\n      return false;\n    }\n\n    return animation === true;\n  },\n\n  /**\n   * add {pointer, label, graphicKey} to elOption\n   * @protected\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {// Shoule be implemenented by sub-class.\n  },\n\n  /**\n   * @protected\n   */\n  createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n    var pointerOption = elOption.pointer;\n\n    if (pointerOption) {\n      var pointerEl = get(group).pointerEl = new graphic[pointerOption.type](clone(elOption.pointer));\n      group.add(pointerEl);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n    if (elOption.label) {\n      var labelEl = get(group).labelEl = new graphic.Rect(clone(elOption.label));\n      group.add(labelEl);\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updatePointerEl: function (group, elOption, updateProps) {\n    var pointerEl = get(group).pointerEl;\n\n    if (pointerEl) {\n      pointerEl.setStyle(elOption.pointer.style);\n      updateProps(pointerEl, {\n        shape: elOption.pointer.shape\n      });\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n    var labelEl = get(group).labelEl;\n\n    if (labelEl) {\n      labelEl.setStyle(elOption.label.style);\n      updateProps(labelEl, {\n        // Consider text length change in vertical axis, animation should\n        // be used on shape, otherwise the effect will be weird.\n        shape: elOption.label.shape,\n        position: elOption.label.position\n      });\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderHandle: function (value) {\n    if (this._dragging || !this.updateHandleTransform) {\n      return;\n    }\n\n    var axisPointerModel = this._axisPointerModel;\n\n    var zr = this._api.getZr();\n\n    var handle = this._handle;\n    var handleModel = axisPointerModel.getModel('handle');\n    var status = axisPointerModel.get('status');\n\n    if (!handleModel.get('show') || !status || status === 'hide') {\n      handle && zr.remove(handle);\n      this._handle = null;\n      return;\n    }\n\n    var isInit;\n\n    if (!this._handle) {\n      isInit = true;\n      handle = this._handle = graphic.createIcon(handleModel.get('icon'), {\n        cursor: 'move',\n        draggable: true,\n        onmousemove: function (e) {\n          // Fot mobile devicem, prevent screen slider on the button.\n          eventTool.stop(e.event);\n        },\n        onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n        drift: bind(this._onHandleDragMove, this),\n        ondragend: bind(this._onHandleDragEnd, this)\n      });\n      zr.add(handle);\n    }\n\n    updateMandatoryProps(handle, axisPointerModel, false); // update style\n\n    var includeStyles = ['color', 'borderColor', 'borderWidth', 'opacity', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'];\n    handle.setStyle(handleModel.getItemStyle(null, includeStyles)); // update position\n\n    var handleSize = handleModel.get('size');\n\n    if (!zrUtil.isArray(handleSize)) {\n      handleSize = [handleSize, handleSize];\n    }\n\n    handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n    throttleUtil.createOrUpdate(this, '_doDispatchAxisPointer', handleModel.get('throttle') || 0, 'fixRate');\n\n    this._moveHandleToValue(value, isInit);\n  },\n\n  /**\n   * @private\n   */\n  _moveHandleToValue: function (value, isInit) {\n    updateProps(this._axisPointerModel, !isInit && this._moveAnimation, this._handle, getHandleTransProps(this.getHandleTransform(value, this._axisModel, this._axisPointerModel)));\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragMove: function (dx, dy) {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    this._dragging = true; // Persistent for throttle.\n\n    var trans = this.updateHandleTransform(getHandleTransProps(handle), [dx, dy], this._axisModel, this._axisPointerModel);\n    this._payloadInfo = trans;\n    handle.stopAnimation();\n    handle.attr(getHandleTransProps(trans));\n    get(handle).lastProp = null;\n\n    this._doDispatchAxisPointer();\n  },\n\n  /**\n   * Throttled method.\n   * @private\n   */\n  _doDispatchAxisPointer: function () {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var payloadInfo = this._payloadInfo;\n    var axisModel = this._axisModel;\n\n    this._api.dispatchAction({\n      type: 'updateAxisPointer',\n      x: payloadInfo.cursorPoint[0],\n      y: payloadInfo.cursorPoint[1],\n      tooltipOption: payloadInfo.tooltipOption,\n      axesInfo: [{\n        axisDim: axisModel.axis.dim,\n        axisIndex: axisModel.componentIndex\n      }]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragEnd: function (moveAnimation) {\n    this._dragging = false;\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var value = this._axisPointerModel.get('value'); // Consider snap or categroy axis, handle may be not consistent with\n    // axisPointer. So move handle to align the exact value position when\n    // drag ended.\n\n\n    this._moveHandleToValue(value); // For the effect: tooltip will be shown when finger holding on handle\n    // button, and will be hidden after finger left handle button.\n\n\n    this._api.dispatchAction({\n      type: 'hideTip'\n    });\n  },\n\n  /**\n   * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {number} value\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0}\n   */\n  getHandleTransform: null,\n\n  /**\n   * * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {Object} transform {position, rotation}\n   * @param {Array.<number>} delta [dx, dy]\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n   */\n  updateHandleTransform: null,\n\n  /**\n   * @private\n   */\n  clear: function (api) {\n    this._lastValue = null;\n    this._lastStatus = null;\n    var zr = api.getZr();\n    var group = this._group;\n    var handle = this._handle;\n\n    if (zr && group) {\n      this._lastGraphicKey = null;\n      group && zr.remove(group);\n      handle && zr.remove(handle);\n      this._group = null;\n      this._handle = null;\n      this._payloadInfo = null;\n    }\n  },\n\n  /**\n   * @protected\n   */\n  doClear: function () {// Implemented by sub-class if necessary.\n  },\n\n  /**\n   * @protected\n   * @param {Array.<number>} xy\n   * @param {Array.<number>} wh\n   * @param {number} [xDimIndex=0] or 1\n   */\n  buildLabel: function (xy, wh, xDimIndex) {\n    xDimIndex = xDimIndex || 0;\n    return {\n      x: xy[xDimIndex],\n      y: xy[1 - xDimIndex],\n      width: wh[xDimIndex],\n      height: wh[1 - xDimIndex]\n    };\n  }\n};\nBaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\nfunction updateProps(animationModel, moveAnimation, el, props) {\n  // Animation optimize.\n  if (!propsEqual(get(el).lastProp, props)) {\n    get(el).lastProp = props;\n    moveAnimation ? graphic.updateProps(el, props, animationModel) : (el.stopAnimation(), el.attr(props));\n  }\n}\n\nfunction propsEqual(lastProps, newProps) {\n  if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n    var equals = true;\n    zrUtil.each(newProps, function (item, key) {\n      equals = equals && propsEqual(lastProps[key], item);\n    });\n    return !!equals;\n  } else {\n    return lastProps === newProps;\n  }\n}\n\nfunction updateLabelShowHide(labelEl, axisPointerModel) {\n  labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n}\n\nfunction getHandleTransProps(trans) {\n  return {\n    position: trans.position.slice(),\n    rotation: trans.rotation || 0\n  };\n}\n\nfunction updateMandatoryProps(group, axisPointerModel, silent) {\n  var z = axisPointerModel.get('z');\n  var zlevel = axisPointerModel.get('zlevel');\n  group && group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n      el.silent = silent;\n    }\n  });\n}\n\nclazzUtil.enableClassExtend(BaseAxisPointer);\nvar _default = BaseAxisPointer;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1063:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\n/**\n * @param {Object} opt {labelInside}\n * @return {Object} {\n *  position, rotation, labelDirection, labelOffset,\n *  tickDirection, labelRotate, labelInterval, z2\n * }\n */\nfunction layout(gridModel, axisModel, opt) {\n  opt = opt || {};\n  var grid = gridModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var rawAxisPosition = axis.position;\n  var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n  var axisDim = axis.dim;\n  var rect = grid.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var idx = {\n    left: 0,\n    right: 1,\n    top: 0,\n    bottom: 1,\n    onZero: 2\n  };\n  var axisOffset = axisModel.get('offset') || 0;\n  var posBound = axisDim === 'x' ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset] : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\n\n  if (axis.onZero) {\n    var otherAxis = grid.getAxis(axisDim === 'x' ? 'y' : 'x', axis.onZeroAxisIndex);\n    var onZeroCoord = otherAxis.toGlobalCoord(otherAxis.dataToCoord(0));\n    posBound[idx['onZero']] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\n  } // Axis position\n\n\n  layout.position = [axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0], axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]]; // Axis rotation\n\n  layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1); // Tick and label direction, x y is axisDim\n\n  var dirMap = {\n    top: -1,\n    bottom: 1,\n    left: -1,\n    right: 1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n  layout.labelOffset = axis.onZero ? posBound[idx[rawAxisPosition]] - posBound[idx['onZero']] : 0;\n\n  if (axisModel.get('axisTick.inside')) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n    layout.labelDirection = -layout.labelDirection;\n  } // Special label rotation\n\n\n  var labelRotate = axisModel.get('axisLabel.rotate');\n  layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate; // label interval when auto mode.\n\n  layout.labelInterval = axis.getLabelInterval(); // Over splitLine and splitArea\n\n  layout.z2 = 1;\n  return layout;\n}\n\nexports.layout = layout;\n\n/***/ }),\n\n/***/ 1064:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(979);\n\nvar zrUtil = __webpack_require__(978);\n\nvar Model = __webpack_require__(989);\n\nvar LegendModel = echarts.extendComponentModel({\n  type: 'legend.plain',\n  dependencies: ['series'],\n  layoutMode: {\n    type: 'box',\n    // legend.width/height are maxWidth/maxHeight actually,\n    // whereas realy width/height is calculated by its content.\n    // (Setting {left: 10, right: 10} does not make sense).\n    // So consider the case:\n    // `setOption({legend: {left: 10});`\n    // then `setOption({legend: {right: 10});`\n    // The previous `left` should be cleared by setting `ignoreSize`.\n    ignoreSize: true\n  },\n  init: function (option, parentModel, ecModel) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    option.selected = option.selected || {};\n  },\n  mergeOption: function (option) {\n    LegendModel.superCall(this, 'mergeOption', option);\n  },\n  optionUpdated: function () {\n    this._updateData(this.ecModel);\n\n    var legendData = this._data; // If selectedMode is single, try to select one\n\n    if (legendData[0] && this.get('selectedMode') === 'single') {\n      var hasSelected = false; // If has any selected in option.selected\n\n      for (var i = 0; i < legendData.length; i++) {\n        var name = legendData[i].get('name');\n\n        if (this.isSelected(name)) {\n          // Force to unselect others\n          this.select(name);\n          hasSelected = true;\n          break;\n        }\n      } // Try select the first if selectedMode is single\n\n\n      !hasSelected && this.select(legendData[0].get('name'));\n    }\n  },\n  _updateData: function (ecModel) {\n    var legendData = zrUtil.map(this.get('data') || [], function (dataItem) {\n      // Can be string or number\n      if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n        dataItem = {\n          name: dataItem\n        };\n      }\n\n      return new Model(dataItem, this, this.ecModel);\n    }, this);\n    this._data = legendData;\n    var availableNames = zrUtil.map(ecModel.getSeries(), function (series) {\n      return series.name;\n    });\n    ecModel.eachSeries(function (seriesModel) {\n      if (seriesModel.legendDataProvider) {\n        var data = seriesModel.legendDataProvider();\n        availableNames = availableNames.concat(data.mapArray(data.getName));\n      }\n    });\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n\n    this._availableNames = availableNames;\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Model>}\n   */\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @param {string} name\n   */\n  select: function (name) {\n    var selected = this.option.selected;\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      var data = this._data;\n      zrUtil.each(data, function (dataItem) {\n        selected[dataItem.get('name')] = false;\n      });\n    }\n\n    selected[name] = true;\n  },\n\n  /**\n   * @param {string} name\n   */\n  unSelect: function (name) {\n    if (this.get('selectedMode') !== 'single') {\n      this.option.selected[name] = false;\n    }\n  },\n\n  /**\n   * @param {string} name\n   */\n  toggleSelected: function (name) {\n    var selected = this.option.selected; // Default is true\n\n    if (!selected.hasOwnProperty(name)) {\n      selected[name] = true;\n    }\n\n    this[selected[name] ? 'unSelect' : 'select'](name);\n  },\n\n  /**\n   * @param {string} name\n   */\n  isSelected: function (name) {\n    var selected = this.option.selected;\n    return !(selected.hasOwnProperty(name) && !selected[name]) && zrUtil.indexOf(this._availableNames, name) >= 0;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 4,\n    show: true,\n    // 布局方式，默认为水平布局，可选为：\n    // 'horizontal' | 'vertical'\n    orient: 'horizontal',\n    left: 'center',\n    // right: 'center',\n    top: 0,\n    // bottom: null,\n    // 水平对齐\n    // 'auto' | 'left' | 'right'\n    // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n    align: 'auto',\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 图例边框颜色\n    borderColor: '#ccc',\n    borderRadius: 0,\n    // 图例边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 图例内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 各个item之间的间隔，单位px，默认为10，\n    // 横向布局时为水平间隔，纵向布局时为纵向间隔\n    itemGap: 10,\n    // 图例图形宽度\n    itemWidth: 25,\n    // 图例图形高度\n    itemHeight: 14,\n    // 图例关闭时候的颜色\n    inactiveColor: '#ccc',\n    textStyle: {\n      // 图例文字颜色\n      color: '#333'\n    },\n    // formatter: '',\n    // 选择模式，默认开启图例开关\n    selectedMode: true,\n    // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n    // selected: null,\n    // 图例内容（详见legend.data，数组中每一项代表一个item\n    // data: [],\n    // Tooltip 相关配置\n    tooltip: {\n      show: false\n    }\n  }\n});\nvar _default = LegendModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1065:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(983);\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = __webpack_require__(979);\n\nvar zrUtil = __webpack_require__(978);\n\nvar _symbol = __webpack_require__(1003);\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = __webpack_require__(980);\n\nvar _listComponent = __webpack_require__(1057);\n\nvar makeBackground = _listComponent.makeBackground;\n\nvar layoutUtil = __webpack_require__(990);\n\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar Group = graphic.Group;\n\nvar _default = echarts.extendComponentView({\n  type: 'legend.plain',\n  newlineDisabled: false,\n\n  /**\n   * @override\n   */\n  init: function () {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this.group.add(this._contentGroup = new Group());\n    /**\n     * @private\n     * @type {module:zrender/Element}\n     */\n\n    this._backgroundEl;\n  },\n\n  /**\n   * @protected\n   */\n  getContentGroup: function () {\n    return this._contentGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (legendModel, ecModel, api) {\n    this.resetInner();\n\n    if (!legendModel.get('show', true)) {\n      return;\n    }\n\n    var itemAlign = legendModel.get('align');\n\n    if (!itemAlign || itemAlign === 'auto') {\n      itemAlign = legendModel.get('left') === 'right' && legendModel.get('orient') === 'vertical' ? 'right' : 'left';\n    }\n\n    this.renderInner(itemAlign, legendModel, ecModel, api); // Perform layout.\n\n    var positionInfo = legendModel.getBoxLayoutParams();\n    var viewportSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var padding = legendModel.get('padding');\n    var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize); // Place mainGroup, based on the calculated `mainRect`.\n\n    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({\n      width: mainRect.width,\n      height: mainRect.height\n    }, positionInfo), viewportSize, padding);\n    this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]); // Render background after group is layout.\n\n    this.group.add(this._backgroundEl = makeBackground(mainRect, legendModel));\n  },\n\n  /**\n   * @protected\n   */\n  resetInner: function () {\n    this.getContentGroup().removeAll();\n    this._backgroundEl && this.group.remove(this._backgroundEl);\n  },\n\n  /**\n   * @protected\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var contentGroup = this.getContentGroup();\n    var legendDrawnMap = zrUtil.createHashMap();\n    var selectMode = legendModel.get('selectedMode');\n    each(legendModel.getData(), function (itemModel, dataIndex) {\n      var name = itemModel.get('name'); // Use empty string or \\n as a newline string\n\n      if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n        contentGroup.add(new Group({\n          newline: true\n        }));\n        return;\n      }\n\n      var seriesModel = ecModel.getSeriesByName(name)[0];\n\n      if (legendDrawnMap.get(name)) {\n        // Have been drawed\n        return;\n      } // Series legend\n\n\n      if (seriesModel) {\n        var data = seriesModel.getData();\n        var color = data.getVisual('color'); // If color is a callback function\n\n        if (typeof color === 'function') {\n          // Use the first data\n          color = color(seriesModel.getDataParams(0));\n        } // Using rect symbol defaultly\n\n\n        var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n        var symbolType = data.getVisual('symbol');\n\n        var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode);\n\n        itemGroup.on('click', curry(dispatchSelectAction, name, api)).on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api));\n        legendDrawnMap.set(name, true);\n      } else {\n        // Data legend of pie, funnel\n        ecModel.eachRawSeries(function (seriesModel) {\n          // In case multiple series has same data name\n          if (legendDrawnMap.get(name)) {\n            return;\n          }\n\n          if (seriesModel.legendDataProvider) {\n            var data = seriesModel.legendDataProvider();\n            var idx = data.indexOfName(name);\n\n            if (idx < 0) {\n              return;\n            }\n\n            var color = data.getItemVisual(idx, 'color');\n            var legendSymbolType = 'roundRect';\n\n            var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, null, itemAlign, color, selectMode);\n\n            itemGroup.on('click', curry(dispatchSelectAction, name, api)) // FIXME Should not specify the series name\n            .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));\n            legendDrawnMap.set(name, true);\n          }\n        }, this);\n      }\n    }, this);\n  },\n  _createItem: function (name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode) {\n    var itemWidth = legendModel.get('itemWidth');\n    var itemHeight = legendModel.get('itemHeight');\n    var inactiveColor = legendModel.get('inactiveColor');\n    var isSelected = legendModel.isSelected(name);\n    var itemGroup = new Group();\n    var textStyleModel = itemModel.getModel('textStyle');\n    var itemIcon = itemModel.get('icon');\n    var tooltipModel = itemModel.getModel('tooltip');\n    var legendGlobalTooltipModel = tooltipModel.parentModel; // Use user given icon first\n\n    legendSymbolType = itemIcon || legendSymbolType;\n    itemGroup.add(createSymbol(legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor, true)); // Compose symbols\n    // PENDING\n\n    if (!itemIcon && symbolType // At least show one symbol, can't be all none\n    && (symbolType !== legendSymbolType || symbolType == 'none')) {\n      var size = itemHeight * 0.8;\n\n      if (symbolType === 'none') {\n        symbolType = 'circle';\n      } // Put symbol in the center\n\n\n      itemGroup.add(createSymbol(symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size, isSelected ? color : inactiveColor));\n    }\n\n    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n    var textAlign = itemAlign;\n    var formatter = legendModel.get('formatter');\n    var content = name;\n\n    if (typeof formatter === 'string' && formatter) {\n      content = formatter.replace('{name}', name != null ? name : '');\n    } else if (typeof formatter === 'function') {\n      content = formatter(name);\n    }\n\n    itemGroup.add(new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: content,\n        x: textX,\n        y: itemHeight / 2,\n        textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n        textAlign: textAlign,\n        textVerticalAlign: 'middle'\n      })\n    })); // Add a invisible rect to increase the area of mouse hover\n\n    var hitRect = new graphic.Rect({\n      shape: itemGroup.getBoundingRect(),\n      invisible: true,\n      tooltip: tooltipModel.get('show') ? zrUtil.extend({\n        content: name,\n        // Defaul formatter\n        formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n          return name;\n        },\n        formatterParams: {\n          componentType: 'legend',\n          legendIndex: legendModel.componentIndex,\n          name: name,\n          $vars: ['name']\n        }\n      }, tooltipModel.option) : null\n    });\n    itemGroup.add(hitRect);\n    itemGroup.eachChild(function (child) {\n      child.silent = true;\n    });\n    hitRect.silent = !selectMode;\n    this.getContentGroup().add(itemGroup);\n    graphic.setHoverStyle(itemGroup);\n    itemGroup.__legendDataIndex = dataIndex;\n    return itemGroup;\n  },\n\n  /**\n   * @protected\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup(); // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\n    var contentRect = contentGroup.getBoundingRect();\n    contentGroup.attr('position', [-contentRect.x, -contentRect.y]);\n    return this.group.getBoundingRect();\n  }\n});\n\nfunction dispatchSelectAction(name, api) {\n  api.dispatchAction({\n    type: 'legendToggleSelect',\n    name: name\n  });\n}\n\nfunction dispatchHighlightAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'highlight',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nfunction dispatchDownplayAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'downplay',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1066:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(983);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(978);\n\nvar Eventful = __webpack_require__(1001);\n\nvar graphic = __webpack_require__(980);\n\nvar interactionMutex = __webpack_require__(1083);\n\nvar DataDiffer = __webpack_require__(1013);\n\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar map = zrUtil.map;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathPow = Math.pow;\nvar COVER_Z = 10000;\nvar UNSELECT_THRESHOLD = 6;\nvar MIN_RESIZE_LINE_WIDTH = 6;\nvar MUTEX_RESOURCE_KEY = 'globalPan';\nvar DIRECTION_MAP = {\n  w: [0, 0],\n  e: [0, 1],\n  n: [1, 0],\n  s: [1, 1]\n};\nvar CURSOR_MAP = {\n  w: 'ew',\n  e: 'ew',\n  n: 'ns',\n  s: 'ns',\n  ne: 'nesw',\n  sw: 'nesw',\n  nw: 'nwse',\n  se: 'nwse'\n};\nvar DEFAULT_BRUSH_OPT = {\n  brushStyle: {\n    lineWidth: 2,\n    stroke: 'rgba(0,0,0,0.3)',\n    fill: 'rgba(0,0,0,0.1)'\n  },\n  transformable: true,\n  brushMode: 'single',\n  removeOnClick: false\n};\nvar baseUID = 0;\n/**\n * @alias module:echarts/component/helper/BrushController\n * @constructor\n * @mixin {module:zrender/mixin/Eventful}\n * @event module:echarts/component/helper/BrushController#brush\n *        params:\n *            areas: Array.<Array>, coord relates to container group,\n *                                    If no container specified, to global.\n *            opt {\n *                isEnd: boolean,\n *                removeOnClick: boolean\n *            }\n *\n * @param {module:zrender/zrender~ZRender} zr\n */\n\nfunction BrushController(zr) {\n  Eventful.call(this);\n  /**\n   * @type {module:zrender/zrender~ZRender}\n   * @private\n   */\n\n  this._zr = zr;\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n\n  this.group = new graphic.Group();\n  /**\n   * Only for drawing (after enabledBrush).\n   *     'line', 'rect', 'polygon' or false\n   *     If passing false/null/undefined, disable brush.\n   *     If passing 'auto', determined by panel.defaultBrushType\n   * @private\n   * @type {string}\n   */\n\n  this._brushType;\n  /**\n   * Only for drawing (after enabledBrush).\n   *\n   * @private\n   * @type {Object}\n   */\n\n  this._brushOption;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._panels;\n  /**\n   * @private\n   * @type {Array.<nubmer>}\n   */\n\n  this._track = [];\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._dragging;\n  /**\n   * @private\n   * @type {Array}\n   */\n\n  this._covers = [];\n  /**\n   * @private\n   * @type {moudule:zrender/container/Group}\n   */\n\n  this._creatingCover;\n  /**\n   * `true` means global panel\n   * @private\n   * @type {module:zrender/container/Group|boolean}\n   */\n\n  this._creatingPanel;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._enableGlobalPan;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this._uid = 'brushController_' + baseUID++;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._handlers = {};\n  each(mouseHandlers, function (handler, eventName) {\n    this._handlers[eventName] = zrUtil.bind(handler, this);\n  }, this);\n}\n\nBrushController.prototype = {\n  constructor: BrushController,\n\n  /**\n   * If set to null/undefined/false, select disabled.\n   * @param {Object} brushOption\n   * @param {string|boolean} brushOption.brushType 'line', 'rect', 'polygon' or false\n   *                          If passing false/null/undefined, disable brush.\n   *                          If passing 'auto', determined by panel.defaultBrushType.\n   *                              ('auto' can not be used in global panel)\n   * @param {number} [brushOption.brushMode='single'] 'single' or 'multiple'\n   * @param {boolean} [brushOption.transformable=true]\n   * @param {boolean} [brushOption.removeOnClick=false]\n   * @param {Object} [brushOption.brushStyle]\n   * @param {number} [brushOption.brushStyle.width]\n   * @param {number} [brushOption.brushStyle.lineWidth]\n   * @param {string} [brushOption.brushStyle.stroke]\n   * @param {string} [brushOption.brushStyle.fill]\n   * @param {number} [brushOption.z]\n   */\n  enableBrush: function (brushOption) {\n    this._brushType && doDisableBrush(this);\n    brushOption.brushType && doEnableBrush(this, brushOption);\n    return this;\n  },\n\n  /**\n   * @param {Array.<Object>} panelOpts If not pass, it is global brush.\n   *        Each items: {\n   *            panelId, // mandatory.\n   *            clipPath, // mandatory. function.\n   *            isTargetByCursor, // mandatory. function.\n   *            defaultBrushType, // optional, only used when brushType is 'auto'.\n   *            getLinearBrushOtherExtent, // optional. function.\n   *        }\n   */\n  setPanels: function (panelOpts) {\n    if (panelOpts && panelOpts.length) {\n      var panels = this._panels = {};\n      zrUtil.each(panelOpts, function (panelOpts) {\n        panels[panelOpts.panelId] = zrUtil.clone(panelOpts);\n      });\n    } else {\n      this._panels = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param {Object} [opt]\n   * @return {boolean} [opt.enableGlobalPan=false]\n   */\n  mount: function (opt) {\n    opt = opt || {};\n    this._enableGlobalPan = opt.enableGlobalPan;\n    var thisGroup = this.group;\n\n    this._zr.add(thisGroup);\n\n    thisGroup.attr({\n      position: opt.position || [0, 0],\n      rotation: opt.rotation || 0,\n      scale: opt.scale || [1, 1]\n    });\n    this._transform = thisGroup.getLocalTransform();\n    return this;\n  },\n  eachCover: function (cb, context) {\n    each(this._covers, cb, context);\n  },\n\n  /**\n   * Update covers.\n   * @param {Array.<Object>} brushOptionList Like:\n   *        [\n   *            {id: 'xx', brushType: 'line', range: [23, 44], brushStyle, transformable},\n   *            {id: 'yy', brushType: 'rect', range: [[23, 44], [23, 54]]},\n   *            ...\n   *        ]\n   *        `brushType` is required in each cover info. (can not be 'auto')\n   *        `id` is not mandatory.\n   *        `brushStyle`, `transformable` is not mandatory, use DEFAULT_BRUSH_OPT by default.\n   *        If brushOptionList is null/undefined, all covers removed.\n   */\n  updateCovers: function (brushOptionList) {\n    brushOptionList = zrUtil.map(brushOptionList, function (brushOption) {\n      return zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n    });\n    var tmpIdPrefix = '\\0-brush-index-';\n    var oldCovers = this._covers;\n    var newCovers = this._covers = [];\n    var controller = this;\n    var creatingCover = this._creatingCover;\n    new DataDiffer(oldCovers, brushOptionList, oldGetKey, getKey).add(addOrUpdate).update(addOrUpdate).remove(remove).execute();\n    return this;\n\n    function getKey(brushOption, index) {\n      return (brushOption.id != null ? brushOption.id : tmpIdPrefix + index) + '-' + brushOption.brushType;\n    }\n\n    function oldGetKey(cover, index) {\n      return getKey(cover.__brushOption, index);\n    }\n\n    function addOrUpdate(newIndex, oldIndex) {\n      var newBrushOption = brushOptionList[newIndex]; // Consider setOption in event listener of brushSelect,\n      // where updating cover when creating should be forbiden.\n\n      if (oldIndex != null && oldCovers[oldIndex] === creatingCover) {\n        newCovers[newIndex] = oldCovers[oldIndex];\n      } else {\n        var cover = newCovers[newIndex] = oldIndex != null ? (oldCovers[oldIndex].__brushOption = newBrushOption, oldCovers[oldIndex]) : endCreating(controller, createCover(controller, newBrushOption));\n        updateCoverAfterCreation(controller, cover);\n      }\n    }\n\n    function remove(oldIndex) {\n      if (oldCovers[oldIndex] !== creatingCover) {\n        controller.group.remove(oldCovers[oldIndex]);\n      }\n    }\n  },\n  unmount: function () {\n    this.enableBrush(false); // container may 'removeAll' outside.\n\n    clearCovers(this);\n\n    this._zr.remove(this.group);\n\n    return this;\n  },\n  dispose: function () {\n    this.unmount();\n    this.off();\n  }\n};\nzrUtil.mixin(BrushController, Eventful);\n\nfunction doEnableBrush(controller, brushOption) {\n  var zr = controller._zr; // Consider roam, which takes globalPan too.\n\n  if (!controller._enableGlobalPan) {\n    interactionMutex.take(zr, MUTEX_RESOURCE_KEY, controller._uid);\n  }\n\n  each(controller._handlers, function (handler, eventName) {\n    zr.on(eventName, handler);\n  });\n  controller._brushType = brushOption.brushType;\n  controller._brushOption = zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n}\n\nfunction doDisableBrush(controller) {\n  var zr = controller._zr;\n  interactionMutex.release(zr, MUTEX_RESOURCE_KEY, controller._uid);\n  each(controller._handlers, function (handler, eventName) {\n    zr.off(eventName, handler);\n  });\n  controller._brushType = controller._brushOption = null;\n}\n\nfunction createCover(controller, brushOption) {\n  var cover = coverRenderers[brushOption.brushType].createCover(controller, brushOption);\n  cover.__brushOption = brushOption;\n  updateZ(cover, brushOption);\n  controller.group.add(cover);\n  return cover;\n}\n\nfunction endCreating(controller, creatingCover) {\n  var coverRenderer = getCoverRenderer(creatingCover);\n\n  if (coverRenderer.endCreating) {\n    coverRenderer.endCreating(controller, creatingCover);\n    updateZ(creatingCover, creatingCover.__brushOption);\n  }\n\n  return creatingCover;\n}\n\nfunction updateCoverShape(controller, cover) {\n  var brushOption = cover.__brushOption;\n  getCoverRenderer(cover).updateCoverShape(controller, cover, brushOption.range, brushOption);\n}\n\nfunction updateZ(cover, brushOption) {\n  var z = brushOption.z;\n  z == null && (z = COVER_Z);\n  cover.traverse(function (el) {\n    el.z = z;\n    el.z2 = z; // Consider in given container.\n  });\n}\n\nfunction updateCoverAfterCreation(controller, cover) {\n  getCoverRenderer(cover).updateCommon(controller, cover);\n  updateCoverShape(controller, cover);\n}\n\nfunction getCoverRenderer(cover) {\n  return coverRenderers[cover.__brushOption.brushType];\n} // return target panel or `true` (means global panel)\n\n\nfunction getPanelByPoint(controller, e, localCursorPoint) {\n  var panels = controller._panels;\n\n  if (!panels) {\n    return true; // Global panel\n  }\n\n  var panel;\n  var transform = controller._transform;\n  each(panels, function (pn) {\n    pn.isTargetByCursor(e, localCursorPoint, transform) && (panel = pn);\n  });\n  return panel;\n} // Return a panel or true\n\n\nfunction getPanelByCover(controller, cover) {\n  var panels = controller._panels;\n\n  if (!panels) {\n    return true; // Global panel\n  }\n\n  var panelId = cover.__brushOption.panelId; // User may give cover without coord sys info,\n  // which is then treated as global panel.\n\n  return panelId != null ? panels[panelId] : true;\n}\n\nfunction clearCovers(controller) {\n  var covers = controller._covers;\n  var originalLength = covers.length;\n  each(covers, function (cover) {\n    controller.group.remove(cover);\n  }, controller);\n  covers.length = 0;\n  return !!originalLength;\n}\n\nfunction trigger(controller, opt) {\n  var areas = map(controller._covers, function (cover) {\n    var brushOption = cover.__brushOption;\n    var range = zrUtil.clone(brushOption.range);\n    return {\n      brushType: brushOption.brushType,\n      panelId: brushOption.panelId,\n      range: range\n    };\n  });\n  controller.trigger('brush', areas, {\n    isEnd: !!opt.isEnd,\n    removeOnClick: !!opt.removeOnClick\n  });\n}\n\nfunction shouldShowCover(controller) {\n  var track = controller._track;\n\n  if (!track.length) {\n    return false;\n  }\n\n  var p2 = track[track.length - 1];\n  var p1 = track[0];\n  var dx = p2[0] - p1[0];\n  var dy = p2[1] - p1[1];\n  var dist = mathPow(dx * dx + dy * dy, 0.5);\n  return dist > UNSELECT_THRESHOLD;\n}\n\nfunction getTrackEnds(track) {\n  var tail = track.length - 1;\n  tail < 0 && (tail = 0);\n  return [track[0], track[tail]];\n}\n\nfunction createBaseRectCover(doDrift, controller, brushOption, edgeNames) {\n  var cover = new graphic.Group();\n  cover.add(new graphic.Rect({\n    name: 'main',\n    style: makeStyle(brushOption),\n    silent: true,\n    draggable: true,\n    cursor: 'move',\n    drift: curry(doDrift, controller, cover, 'nswe'),\n    ondragend: curry(trigger, controller, {\n      isEnd: true\n    })\n  }));\n  each(edgeNames, function (name) {\n    cover.add(new graphic.Rect({\n      name: name,\n      style: {\n        opacity: 0\n      },\n      draggable: true,\n      silent: true,\n      invisible: true,\n      drift: curry(doDrift, controller, cover, name),\n      ondragend: curry(trigger, controller, {\n        isEnd: true\n      })\n    }));\n  });\n  return cover;\n}\n\nfunction updateBaseRect(controller, cover, localRange, brushOption) {\n  var lineWidth = brushOption.brushStyle.lineWidth || 0;\n  var handleSize = mathMax(lineWidth, MIN_RESIZE_LINE_WIDTH);\n  var x = localRange[0][0];\n  var y = localRange[1][0];\n  var xa = x - lineWidth / 2;\n  var ya = y - lineWidth / 2;\n  var x2 = localRange[0][1];\n  var y2 = localRange[1][1];\n  var x2a = x2 - handleSize + lineWidth / 2;\n  var y2a = y2 - handleSize + lineWidth / 2;\n  var width = x2 - x;\n  var height = y2 - y;\n  var widtha = width + lineWidth;\n  var heighta = height + lineWidth;\n  updateRectShape(controller, cover, 'main', x, y, width, height);\n\n  if (brushOption.transformable) {\n    updateRectShape(controller, cover, 'w', xa, ya, handleSize, heighta);\n    updateRectShape(controller, cover, 'e', x2a, ya, handleSize, heighta);\n    updateRectShape(controller, cover, 'n', xa, ya, widtha, handleSize);\n    updateRectShape(controller, cover, 's', xa, y2a, widtha, handleSize);\n    updateRectShape(controller, cover, 'nw', xa, ya, handleSize, handleSize);\n    updateRectShape(controller, cover, 'ne', x2a, ya, handleSize, handleSize);\n    updateRectShape(controller, cover, 'sw', xa, y2a, handleSize, handleSize);\n    updateRectShape(controller, cover, 'se', x2a, y2a, handleSize, handleSize);\n  }\n}\n\nfunction updateCommon(controller, cover) {\n  var brushOption = cover.__brushOption;\n  var transformable = brushOption.transformable;\n  var mainEl = cover.childAt(0);\n  mainEl.useStyle(makeStyle(brushOption));\n  mainEl.attr({\n    silent: !transformable,\n    cursor: transformable ? 'move' : 'default'\n  });\n  each(['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw'], function (name) {\n    var el = cover.childOfName(name);\n    var globalDir = getGlobalDirection(controller, name);\n    el && el.attr({\n      silent: !transformable,\n      invisible: !transformable,\n      cursor: transformable ? CURSOR_MAP[globalDir] + '-resize' : null\n    });\n  });\n}\n\nfunction updateRectShape(controller, cover, name, x, y, w, h) {\n  var el = cover.childOfName(name);\n  el && el.setShape(pointsToRect(clipByPanel(controller, cover, [[x, y], [x + w, y + h]])));\n}\n\nfunction makeStyle(brushOption) {\n  return zrUtil.defaults({\n    strokeNoScale: true\n  }, brushOption.brushStyle);\n}\n\nfunction formatRectRange(x, y, x2, y2) {\n  var min = [mathMin(x, x2), mathMin(y, y2)];\n  var max = [mathMax(x, x2), mathMax(y, y2)];\n  return [[min[0], max[0]], // x range\n  [min[1], max[1]] // y range\n  ];\n}\n\nfunction getTransform(controller) {\n  return graphic.getTransform(controller.group);\n}\n\nfunction getGlobalDirection(controller, localDirection) {\n  if (localDirection.length > 1) {\n    localDirection = localDirection.split('');\n    var globalDir = [getGlobalDirection(controller, localDirection[0]), getGlobalDirection(controller, localDirection[1])];\n    (globalDir[0] === 'e' || globalDir[0] === 'w') && globalDir.reverse();\n    return globalDir.join('');\n  } else {\n    var map = {\n      w: 'left',\n      e: 'right',\n      n: 'top',\n      s: 'bottom'\n    };\n    var inverseMap = {\n      left: 'w',\n      right: 'e',\n      top: 'n',\n      bottom: 's'\n    };\n    var globalDir = graphic.transformDirection(map[localDirection], getTransform(controller));\n    return inverseMap[globalDir];\n  }\n}\n\nfunction driftRect(toRectRange, fromRectRange, controller, cover, name, dx, dy, e) {\n  var brushOption = cover.__brushOption;\n  var rectRange = toRectRange(brushOption.range);\n  var localDelta = toLocalDelta(controller, dx, dy);\n  each(name.split(''), function (namePart) {\n    var ind = DIRECTION_MAP[namePart];\n    rectRange[ind[0]][ind[1]] += localDelta[ind[0]];\n  });\n  brushOption.range = fromRectRange(formatRectRange(rectRange[0][0], rectRange[1][0], rectRange[0][1], rectRange[1][1]));\n  updateCoverAfterCreation(controller, cover);\n  trigger(controller, {\n    isEnd: false\n  });\n}\n\nfunction driftPolygon(controller, cover, dx, dy, e) {\n  var range = cover.__brushOption.range;\n  var localDelta = toLocalDelta(controller, dx, dy);\n  each(range, function (point) {\n    point[0] += localDelta[0];\n    point[1] += localDelta[1];\n  });\n  updateCoverAfterCreation(controller, cover);\n  trigger(controller, {\n    isEnd: false\n  });\n}\n\nfunction toLocalDelta(controller, dx, dy) {\n  var thisGroup = controller.group;\n  var localD = thisGroup.transformCoordToLocal(dx, dy);\n  var localZero = thisGroup.transformCoordToLocal(0, 0);\n  return [localD[0] - localZero[0], localD[1] - localZero[1]];\n}\n\nfunction clipByPanel(controller, cover, data) {\n  var panel = getPanelByCover(controller, cover);\n  return panel && panel !== true ? panel.clipPath(data, controller._transform) : zrUtil.clone(data);\n}\n\nfunction pointsToRect(points) {\n  var xmin = mathMin(points[0][0], points[1][0]);\n  var ymin = mathMin(points[0][1], points[1][1]);\n  var xmax = mathMax(points[0][0], points[1][0]);\n  var ymax = mathMax(points[0][1], points[1][1]);\n  return {\n    x: xmin,\n    y: ymin,\n    width: xmax - xmin,\n    height: ymax - ymin\n  };\n}\n\nfunction resetCursor(controller, e, localCursorPoint) {\n  // Check active\n  if (!controller._brushType) {\n    return;\n  }\n\n  var zr = controller._zr;\n  var covers = controller._covers;\n  var currPanel = getPanelByPoint(controller, e, localCursorPoint); // Check whether in covers.\n\n  if (!controller._dragging) {\n    for (var i = 0; i < covers.length; i++) {\n      var brushOption = covers[i].__brushOption;\n\n      if (currPanel && (currPanel === true || brushOption.panelId === currPanel.panelId) && coverRenderers[brushOption.brushType].contain(covers[i], localCursorPoint[0], localCursorPoint[1])) {\n        // Use cursor style set on cover.\n        return;\n      }\n    }\n  }\n\n  currPanel && zr.setCursorStyle('crosshair');\n}\n\nfunction preventDefault(e) {\n  var rawE = e.event;\n  rawE.preventDefault && rawE.preventDefault();\n}\n\nfunction mainShapeContain(cover, x, y) {\n  return cover.childOfName('main').contain(x, y);\n}\n\nfunction updateCoverByMouse(controller, e, localCursorPoint, isEnd) {\n  var creatingCover = controller._creatingCover;\n  var panel = controller._creatingPanel;\n  var thisBrushOption = controller._brushOption;\n  var eventParams;\n\n  controller._track.push(localCursorPoint.slice());\n\n  if (shouldShowCover(controller) || creatingCover) {\n    if (panel && !creatingCover) {\n      thisBrushOption.brushMode === 'single' && clearCovers(controller);\n      var brushOption = zrUtil.clone(thisBrushOption);\n      brushOption.brushType = determineBrushType(brushOption.brushType, panel);\n      brushOption.panelId = panel === true ? null : panel.panelId;\n      creatingCover = controller._creatingCover = createCover(controller, brushOption);\n\n      controller._covers.push(creatingCover);\n    }\n\n    if (creatingCover) {\n      var coverRenderer = coverRenderers[determineBrushType(controller._brushType, panel)];\n      var coverBrushOption = creatingCover.__brushOption;\n      coverBrushOption.range = coverRenderer.getCreatingRange(clipByPanel(controller, creatingCover, controller._track));\n\n      if (isEnd) {\n        endCreating(controller, creatingCover);\n        coverRenderer.updateCommon(controller, creatingCover);\n      }\n\n      updateCoverShape(controller, creatingCover);\n      eventParams = {\n        isEnd: isEnd\n      };\n    }\n  } else if (isEnd && thisBrushOption.brushMode === 'single' && thisBrushOption.removeOnClick) {\n    // Help user to remove covers easily, only by a tiny drag, in 'single' mode.\n    // But a single click do not clear covers, because user may have casual\n    // clicks (for example, click on other component and do not expect covers\n    // disappear).\n    // Only some cover removed, trigger action, but not every click trigger action.\n    if (getPanelByPoint(controller, e, localCursorPoint) && clearCovers(controller)) {\n      eventParams = {\n        isEnd: isEnd,\n        removeOnClick: true\n      };\n    }\n  }\n\n  return eventParams;\n}\n\nfunction determineBrushType(brushType, panel) {\n  if (brushType === 'auto') {\n    return panel.defaultBrushType;\n  }\n\n  return brushType;\n}\n\nvar mouseHandlers = {\n  mousedown: function (e) {\n    if (this._dragging) {\n      // In case some browser do not support globalOut,\n      // and release mose out side the browser.\n      handleDragEnd.call(this, e);\n    } else if (!e.target || !e.target.draggable) {\n      preventDefault(e);\n      var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n      this._creatingCover = null;\n      var panel = this._creatingPanel = getPanelByPoint(this, e, localCursorPoint);\n\n      if (panel) {\n        this._dragging = true;\n        this._track = [localCursorPoint.slice()];\n      }\n    }\n  },\n  mousemove: function (e) {\n    var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n    resetCursor(this, e, localCursorPoint);\n\n    if (this._dragging) {\n      preventDefault(e);\n      var eventParams = updateCoverByMouse(this, e, localCursorPoint, false);\n      eventParams && trigger(this, eventParams);\n    }\n  },\n  mouseup: handleDragEnd //,\n  // FIXME\n  // in tooltip, globalout should not be triggered.\n  // globalout: handleDragEnd\n\n};\n\nfunction handleDragEnd(e) {\n  if (this._dragging) {\n    preventDefault(e);\n    var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n    var eventParams = updateCoverByMouse(this, e, localCursorPoint, true);\n    this._dragging = false;\n    this._track = [];\n    this._creatingCover = null; // trigger event shoule be at final, after procedure will be nested.\n\n    eventParams && trigger(this, eventParams);\n  }\n}\n/**\n * key: brushType\n * @type {Object}\n */\n\n\nvar coverRenderers = {\n  lineX: getLineRenderer(0),\n  lineY: getLineRenderer(1),\n  rect: {\n    createCover: function (controller, brushOption) {\n      return createBaseRectCover(curry(driftRect, function (range) {\n        return range;\n      }, function (range) {\n        return range;\n      }), controller, brushOption, ['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw']);\n    },\n    getCreatingRange: function (localTrack) {\n      var ends = getTrackEnds(localTrack);\n      return formatRectRange(ends[1][0], ends[1][1], ends[0][0], ends[0][1]);\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      updateBaseRect(controller, cover, localRange, brushOption);\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  },\n  polygon: {\n    createCover: function (controller, brushOption) {\n      var cover = new graphic.Group(); // Do not use graphic.Polygon because graphic.Polyline do not close the\n      // border of the shape when drawing, which is a better experience for user.\n\n      cover.add(new graphic.Polyline({\n        name: 'main',\n        style: makeStyle(brushOption),\n        silent: true\n      }));\n      return cover;\n    },\n    getCreatingRange: function (localTrack) {\n      return localTrack;\n    },\n    endCreating: function (controller, cover) {\n      cover.remove(cover.childAt(0)); // Use graphic.Polygon close the shape.\n\n      cover.add(new graphic.Polygon({\n        name: 'main',\n        draggable: true,\n        drift: curry(driftPolygon, controller, cover),\n        ondragend: curry(trigger, controller, {\n          isEnd: true\n        })\n      }));\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      cover.childAt(0).setShape({\n        points: clipByPanel(controller, cover, localRange)\n      });\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  }\n};\n\nfunction getLineRenderer(xyIndex) {\n  return {\n    createCover: function (controller, brushOption) {\n      return createBaseRectCover(curry(driftRect, function (range) {\n        var rectRange = [range, [0, 100]];\n        xyIndex && rectRange.reverse();\n        return rectRange;\n      }, function (rectRange) {\n        return rectRange[xyIndex];\n      }), controller, brushOption, [['w', 'e'], ['n', 's']][xyIndex]);\n    },\n    getCreatingRange: function (localTrack) {\n      var ends = getTrackEnds(localTrack);\n      var min = mathMin(ends[0][xyIndex], ends[1][xyIndex]);\n      var max = mathMax(ends[0][xyIndex], ends[1][xyIndex]);\n      return [min, max];\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      var otherExtent; // If brushWidth not specified, fit the panel.\n\n      var panel = getPanelByCover(controller, cover);\n\n      if (panel !== true && panel.getLinearBrushOtherExtent) {\n        otherExtent = panel.getLinearBrushOtherExtent(xyIndex, controller._transform);\n      } else {\n        var zr = controller._zr;\n        otherExtent = [0, [zr.getWidth(), zr.getHeight()][1 - xyIndex]];\n      }\n\n      var rectRange = [localRange, otherExtent];\n      xyIndex && rectRange.reverse();\n      updateBaseRect(controller, cover, rectRange, brushOption);\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  };\n}\n\nvar _default = BrushController;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1067:\n/***/ (function(module, exports) {\n\nvar IRRELEVANT_EXCLUDES = {\n  'axisPointer': 1,\n  'tooltip': 1,\n  'brush': 1\n};\n/**\n * Avoid that: mouse click on a elements that is over geo or graph,\n * but roam is triggered.\n */\n\nfunction onIrrelevantElement(e, api, targetCoordSysModel) {\n  var model = api.getComponentByElement(e.topTarget); // If model is axisModel, it works only if it is injected with coordinateSystem.\n\n  var coordSys = model && model.coordinateSystem;\n  return model && model !== targetCoordSysModel && !IRRELEVANT_EXCLUDES[model.mainType] && coordSys && coordSys.model !== targetCoordSysModel;\n}\n\nexports.onIrrelevantElement = onIrrelevantElement;\n\n/***/ }),\n\n/***/ 1071:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar textHelper = __webpack_require__(1033);\n\nvar BoundingRect = __webpack_require__(987);\n\n/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\nvar tmpRect = new BoundingRect();\n\nvar RectText = function () {};\n\nRectText.prototype = {\n  constructor: RectText,\n\n  /**\n   * Draw text in a rect with specified position.\n   * @param  {CanvasRenderingContext2D} ctx\n   * @param  {Object} rect Displayable rect\n   */\n  drawRectText: function (ctx, rect) {\n    var style = this.style;\n    rect = style.textRect || rect; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n    var text = style.text; // Convert to string\n\n    text != null && (text += '');\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    } // FIXME\n\n\n    ctx.save(); // Transform rect to view space\n\n    var transform = this.transform;\n\n    if (!style.transformText) {\n      if (transform) {\n        tmpRect.copy(rect);\n        tmpRect.applyTransform(transform);\n        rect = tmpRect;\n      }\n    } else {\n      this.setTransform(ctx);\n    } // transformText and textRotation can not be used at the same time.\n\n\n    textHelper.renderText(this, ctx, text, style, rect);\n    ctx.restore();\n  }\n};\nvar _default = RectText;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1072:\n/***/ (function(module, exports) {\n\n/**\n * 线段包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  var _a = 0;\n  var _b = x0; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l || y < y0 - _l && y < y1 - _l || x > x0 + _l && x > x1 + _l || x < x0 - _l && x < x1 - _l) {\n    return false;\n  }\n\n  if (x0 !== x1) {\n    _a = (y0 - y1) / (x0 - x1);\n    _b = (x0 * y1 - x1 * y0) / (x0 - x1);\n  } else {\n    return Math.abs(x - x0) <= _l / 2;\n  }\n\n  var tmp = _a * x - y + _b;\n\n  var _s = tmp * tmp / (_a * _a + 1);\n\n  return _s <= _l / 2 * _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n/***/ }),\n\n/***/ 1073:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curve = __webpack_require__(999);\n\nvar quadraticProjectPoint = _curve.quadraticProjectPoint;\n\n/**\n * 二次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l) {\n    return false;\n  }\n\n  var d = quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n/***/ }),\n\n/***/ 1074:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar Gradient = __webpack_require__(1019);\n\n/**\n * x, y, x2, y2 are all percent from 0 to 1\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @param {number} [x2=1]\n * @param {number} [y2=0]\n * @param {Array.<Object>} colorStops\n * @param {boolean} [globalCoord=false]\n */\nvar LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'linear', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0 : x;\n  this.y = y == null ? 0 : y;\n  this.x2 = x2 == null ? 1 : x2;\n  this.y2 = y2 == null ? 0 : y2; // Can be cloned\n\n  this.type = 'linear'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nLinearGradient.prototype = {\n  constructor: LinearGradient\n};\nzrUtil.inherits(LinearGradient, Gradient);\nvar _default = LinearGradient;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1075:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrender = __webpack_require__(1032);\n\nexports.zrender = zrender;\n\nvar matrix = __webpack_require__(994);\n\nexports.matrix = matrix;\n\nvar vector = __webpack_require__(984);\n\nexports.vector = vector;\n\nvar zrUtil = __webpack_require__(978);\n\nvar colorTool = __webpack_require__(1002);\n\nexports.color = colorTool;\n\nvar graphic = __webpack_require__(980);\n\nexports.graphic = graphic;\n\nvar numberUtil = __webpack_require__(981);\n\nexports.number = numberUtil;\n\nvar formatUtil = __webpack_require__(985);\n\nexports.format = formatUtil;\n\nvar _throttle = __webpack_require__(1008);\n\nvar throttle = _throttle.throttle;\nexports.throttle = _throttle.throttle;\n\nvar ecHelper = __webpack_require__(1132);\n\nexports.helper = ecHelper;\n\nvar _List = __webpack_require__(995);\n\nexports.List = _List;\n\nvar _Model = __webpack_require__(989);\n\nexports.Model = _Model;\n\nvar _Axis = __webpack_require__(1017);\n\nexports.Axis = _Axis;\n\nvar _env = __webpack_require__(986);\n\nexports.env = _env;\n\nvar _parseGeoJson = __webpack_require__(1076);\n\nexports.parseGeoJson = _parseGeoJson;\n\n/**\n * Do not mount those modules on 'src/echarts' for better tree shaking.\n */\nvar ecUtil = {};\nzrUtil.each(['map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter', 'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction', 'extend', 'defaults', 'clone', 'merge'], function (name) {\n  ecUtil[name] = zrUtil[name];\n});\nexports.util = ecUtil;\n\n/***/ }),\n\n/***/ 1076:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar Region = __webpack_require__(1077);\n\n/**\n * Parse and decode geo json\n * @module echarts/coord/geo/parseGeoJson\n */\nfunction decode(json) {\n  if (!json.UTF8Encoding) {\n    return json;\n  }\n\n  var encodeScale = json.UTF8Scale;\n\n  if (encodeScale == null) {\n    encodeScale = 1024;\n  }\n\n  var features = json.features;\n\n  for (var f = 0; f < features.length; f++) {\n    var feature = features[f];\n    var geometry = feature.geometry;\n    var coordinates = geometry.coordinates;\n    var encodeOffsets = geometry.encodeOffsets;\n\n    for (var c = 0; c < coordinates.length; c++) {\n      var coordinate = coordinates[c];\n\n      if (geometry.type === 'Polygon') {\n        coordinates[c] = decodePolygon(coordinate, encodeOffsets[c], encodeScale);\n      } else if (geometry.type === 'MultiPolygon') {\n        for (var c2 = 0; c2 < coordinate.length; c2++) {\n          var polygon = coordinate[c2];\n          coordinate[c2] = decodePolygon(polygon, encodeOffsets[c][c2], encodeScale);\n        }\n      }\n    }\n  } // Has been decoded\n\n\n  json.UTF8Encoding = false;\n  return json;\n}\n\nfunction decodePolygon(coordinate, encodeOffsets, encodeScale) {\n  var result = [];\n  var prevX = encodeOffsets[0];\n  var prevY = encodeOffsets[1];\n\n  for (var i = 0; i < coordinate.length; i += 2) {\n    var x = coordinate.charCodeAt(i) - 64;\n    var y = coordinate.charCodeAt(i + 1) - 64; // ZigZag decoding\n\n    x = x >> 1 ^ -(x & 1);\n    y = y >> 1 ^ -(y & 1); // Delta deocding\n\n    x += prevX;\n    y += prevY;\n    prevX = x;\n    prevY = y; // Dequantize\n\n    result.push([x / encodeScale, y / encodeScale]);\n  }\n\n  return result;\n}\n/**\n * @alias module:echarts/coord/geo/parseGeoJson\n * @param {Object} geoJson\n * @return {module:zrender/container/Group}\n */\n\n\nfunction _default(geoJson) {\n  decode(geoJson);\n  return zrUtil.map(zrUtil.filter(geoJson.features, function (featureObj) {\n    // Output of mapshaper may have geometry null\n    return featureObj.geometry && featureObj.properties && featureObj.geometry.coordinates.length > 0;\n  }), function (featureObj) {\n    var properties = featureObj.properties;\n    var geo = featureObj.geometry;\n    var coordinates = geo.coordinates;\n    var geometries = [];\n\n    if (geo.type === 'Polygon') {\n      geometries.push({\n        type: 'polygon',\n        // According to the GeoJSON specification.\n        // First must be exterior, and the rest are all interior(holes).\n        exterior: coordinates[0],\n        interiors: coordinates.slice(1)\n      });\n    }\n\n    if (geo.type === 'MultiPolygon') {\n      zrUtil.each(coordinates, function (item) {\n        if (item[0]) {\n          geometries.push({\n            type: 'polygon',\n            exterior: item[0],\n            interiors: item.slice(1)\n          });\n        }\n      });\n    }\n\n    var region = new Region(properties.name, geometries, properties.cp);\n    region.properties = properties;\n    return region;\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1077:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar BoundingRect = __webpack_require__(987);\n\nvar bbox = __webpack_require__(1037);\n\nvar vec2 = __webpack_require__(984);\n\nvar polygonContain = __webpack_require__(1078);\n\n/**\n * @module echarts/coord/geo/Region\n */\n\n/**\n * @param {string} name\n * @param {Array} geometries\n * @param {Array.<number>} cp\n */\nfunction Region(name, geometries, cp) {\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  this.name = name;\n  /**\n   * @type {Array.<Array>}\n   * @readOnly\n   */\n\n  this.geometries = geometries;\n\n  if (!cp) {\n    var rect = this.getBoundingRect();\n    cp = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  } else {\n    cp = [cp[0], cp[1]];\n  }\n  /**\n   * @type {Array.<number>}\n   */\n\n\n  this.center = cp;\n}\n\nRegion.prototype = {\n  constructor: Region,\n  properties: null,\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    var rect = this._rect;\n\n    if (rect) {\n      return rect;\n    }\n\n    var MAX_NUMBER = Number.MAX_VALUE;\n    var min = [MAX_NUMBER, MAX_NUMBER];\n    var max = [-MAX_NUMBER, -MAX_NUMBER];\n    var min2 = [];\n    var max2 = [];\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      } // Doesn't consider hole\n\n\n      var exterior = geometries[i].exterior;\n      bbox.fromPoints(exterior, min2, max2);\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return this._rect = new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * @param {<Array.<number>} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var rect = this.getBoundingRect();\n    var geometries = this.geometries;\n\n    if (!rect.contain(coord[0], coord[1])) {\n      return false;\n    }\n\n    loopGeo: for (var i = 0, len = geometries.length; i < len; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      if (polygonContain.contain(exterior, coord[0], coord[1])) {\n        // Not in the region if point is in the hole.\n        for (var k = 0; k < (interiors ? interiors.length : 0); k++) {\n          if (polygonContain.contain(interiors[k])) {\n            continue loopGeo;\n          }\n        }\n\n        return true;\n      }\n    }\n\n    return false;\n  },\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var aspect = rect.width / rect.height;\n\n    if (!width) {\n      width = aspect * height;\n    } else if (!height) {\n      height = width / aspect;\n    }\n\n    var target = new BoundingRect(x, y, width, height);\n    var transform = rect.calculateTransform(target);\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      for (var p = 0; p < exterior.length; p++) {\n        vec2.applyTransform(exterior[p], exterior[p], transform);\n      }\n\n      for (var h = 0; h < (interiors ? interiors.length : 0); h++) {\n        for (var p = 0; p < interiors[h].length; p++) {\n          vec2.applyTransform(interiors[h][p], interiors[h][p], transform);\n        }\n      }\n    }\n\n    rect = this._rect;\n    rect.copy(target); // Update center\n\n    this.center = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n};\nvar _default = Region;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1078:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar windingLine = __webpack_require__(1051);\n\nvar EPSILON = 1e-8;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n}\n\nfunction contain(points, x, y) {\n  var w = 0;\n  var p = points[0];\n\n  if (!p) {\n    return false;\n  }\n\n  for (var i = 1; i < points.length; i++) {\n    var p2 = points[i];\n    w += windingLine(p[0], p[1], p2[0], p2[1], x, y);\n    p = p2;\n  } // Close polygon\n\n\n  var p0 = points[0];\n\n  if (!isAroundEqual(p[0], p0[0]) || !isAroundEqual(p[1], p0[1])) {\n    w += windingLine(p[0], p[1], p0[0], p0[1], x, y);\n  }\n\n  return w !== 0;\n}\n\nexports.contain = contain;\n\n/***/ }),\n\n/***/ 1079:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(979);\n\n__webpack_require__(1034);\n\n__webpack_require__(1139);\n\n__webpack_require__(1140);\n\n// FIXME Better way to pack data in graphic element\n\n/**\n * @action\n * @property {string} type\n * @property {number} seriesIndex\n * @property {number} dataIndex\n * @property {number} [x]\n * @property {number} [y]\n */\necharts.registerAction({\n  type: 'showTip',\n  event: 'showTip',\n  update: 'tooltip:manuallyShowTip'\n}, // noop\nfunction () {});\necharts.registerAction({\n  type: 'hideTip',\n  event: 'hideTip',\n  update: 'tooltip:manuallyHideTip'\n}, // noop\nfunction () {});\n\n/***/ }),\n\n/***/ 1080:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(979);\n\n__webpack_require__(1064);\n\n__webpack_require__(1142);\n\n__webpack_require__(1065);\n\nvar legendFilter = __webpack_require__(1143);\n\nvar Component = __webpack_require__(991);\n\n// Do not contain scrollable legend, for sake of file size.\n// Series Filter\necharts.registerProcessor(legendFilter);\nComponent.registerSubTypeDefaulter('legend', function () {\n  // Default 'plain' when no type specified.\n  return 'plain';\n});\n\n/***/ }),\n\n/***/ 1081:\n/***/ (function(module, exports) {\n\nfunction _default(seriesType, ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (!legendModels || !legendModels.length) {\n    return;\n  }\n\n  ecModel.eachSeriesByType(seriesType, function (series) {\n    var data = series.getData();\n    data.filterSelf(function (idx) {\n      var name = data.getName(idx); // If in any legend component the status is not selected.\n\n      for (var i = 0; i < legendModels.length; i++) {\n        if (!legendModels[i].isSelected(name)) {\n          return false;\n        }\n      }\n\n      return true;\n    }, this);\n  }, this);\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1082:\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(1146);\n\n__webpack_require__(1147);\n\n__webpack_require__(1148);\n\n__webpack_require__(1149);\n\n__webpack_require__(1150);\n\n__webpack_require__(1151);\n\n__webpack_require__(1156);\n\n/***/ }),\n\n/***/ 1083:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(979);\n\nvar ATTR = '\\0_ec_interaction_mutex';\n\nfunction take(zr, resourceKey, userKey) {\n  var store = getStore(zr);\n  store[resourceKey] = userKey;\n}\n\nfunction release(zr, resourceKey, userKey) {\n  var store = getStore(zr);\n  var uKey = store[resourceKey];\n\n  if (uKey === userKey) {\n    store[resourceKey] = null;\n  }\n}\n\nfunction isTaken(zr, resourceKey) {\n  return !!getStore(zr)[resourceKey];\n}\n\nfunction getStore(zr) {\n  return zr[ATTR] || (zr[ATTR] = {});\n}\n/**\n * payload: {\n *     type: 'takeGlobalCursor',\n *     key: 'dataZoomSelect', or 'brush', or ...,\n *         If no userKey, release global cursor.\n * }\n */\n\n\necharts.registerAction({\n  type: 'takeGlobalCursor',\n  event: 'globalCursorTaken',\n  update: 'update'\n}, function () {});\nexports.take = take;\nexports.release = release;\nexports.isTaken = isTaken;\n\n/***/ }),\n\n/***/ 1084:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(983);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(978);\n\nvar graphic = __webpack_require__(980);\n\nvar modelUtil = __webpack_require__(982);\n\nvar brushHelper = __webpack_require__(1085);\n\nvar each = zrUtil.each;\nvar indexOf = zrUtil.indexOf;\nvar curry = zrUtil.curry;\nvar COORD_CONVERTS = ['dataToPoint', 'pointToData']; // FIXME\n// how to genarialize to more coordinate systems.\n\nvar INCLUDE_FINDER_MAIN_TYPES = ['grid', 'xAxis', 'yAxis', 'geo', 'graph', 'polar', 'radiusAxis', 'angleAxis', 'bmap'];\n/**\n * [option in constructor]:\n * {\n *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n * }\n *\n *\n * [targetInfo]:\n *\n * There can be multiple axes in a single targetInfo. Consider the case\n * of `grid` component, a targetInfo represents a grid which contains one or more\n * cartesian and one or more axes. And consider the case of parallel system,\n * which has multiple axes in a coordinate system.\n * Can be {\n *     panelId: ...,\n *     coordSys: <a representitive cartesian in grid (first cartesian by default)>,\n *     coordSyses: all cartesians.\n *     gridModel: <grid component>\n *     xAxes: correspond to coordSyses on index\n *     yAxes: correspond to coordSyses on index\n * }\n * or {\n *     panelId: ...,\n *     coordSys: <geo coord sys>\n *     coordSyses: [<geo coord sys>]\n *     geoModel: <geo component>\n * }\n *\n *\n * [panelOpt]:\n *\n * Make from targetInfo. Input to BrushController.\n * {\n *     panelId: ...,\n *     rect: ...\n * }\n *\n *\n * [area]:\n *\n * Generated by BrushController or user input.\n * {\n *     panelId: Used to locate coordInfo directly. If user inpput, no panelId.\n *     brushType: determine how to convert to/from coord('rect' or 'polygon' or 'lineX/Y').\n *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n *     range: pixel range.\n *     coordRange: representitive coord range (the first one of coordRanges).\n *     coordRanges: <Array> coord ranges, used in multiple cartesian in one grid.\n * }\n */\n\n/**\n * @param {Object} option contains Index/Id/Name of xAxis/yAxis/geo/grid\n *        Each can be {number|Array.<number>}. like: {xAxisIndex: [3, 4]}\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} [opt]\n * @param {Array.<string>} [opt.include] include coordinate system types.\n */\n\nfunction BrushTargetManager(option, ecModel, opt) {\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n  var targetInfoList = this._targetInfoList = [];\n  var info = {};\n  var foundCpts = parseFinder(ecModel, option);\n  each(targetInfoBuilders, function (builder, type) {\n    if (!opt || !opt.include || indexOf(opt.include, type) >= 0) {\n      builder(foundCpts, targetInfoList, info);\n    }\n  });\n}\n\nvar proto = BrushTargetManager.prototype;\n\nproto.setOutputRanges = function (areas, ecModel) {\n  this.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n    (area.coordRanges || (area.coordRanges = [])).push(coordRange); // area.coordRange is the first of area.coordRanges\n\n    if (!area.coordRange) {\n      area.coordRange = coordRange; // In 'category' axis, coord to pixel is not reversible, so we can not\n      // rebuild range by coordRange accrately, which may bring trouble when\n      // brushing only one item. So we use __rangeOffset to rebuilding range\n      // by coordRange. And this it only used in brush component so it is no\n      // need to be adapted to coordRanges.\n\n      var result = coordConvert[area.brushType](0, coordSys, coordRange);\n      area.__rangeOffset = {\n        offset: diffProcessor[area.brushType](result.values, area.range, [1, 1]),\n        xyMinMax: result.xyMinMax\n      };\n    }\n  });\n};\n\nproto.matchOutputRanges = function (areas, ecModel, cb) {\n  each(areas, function (area) {\n    var targetInfo = this.findTargetInfo(area, ecModel);\n\n    if (targetInfo && targetInfo !== true) {\n      zrUtil.each(targetInfo.coordSyses, function (coordSys) {\n        var result = coordConvert[area.brushType](1, coordSys, area.range);\n        cb(area, result.values, coordSys, ecModel);\n      });\n    }\n  }, this);\n};\n\nproto.setInputRanges = function (areas, ecModel) {\n  each(areas, function (area) {\n    var targetInfo = this.findTargetInfo(area, ecModel);\n    area.range = area.range || []; // convert coordRange to global range and set panelId.\n\n    if (targetInfo && targetInfo !== true) {\n      area.panelId = targetInfo.panelId; // (1) area.range shoule always be calculate from coordRange but does\n      // not keep its original value, for the sake of the dataZoom scenario,\n      // where area.coordRange remains unchanged but area.range may be changed.\n      // (2) Only support converting one coordRange to pixel range in brush\n      // component. So do not consider `coordRanges`.\n      // (3) About __rangeOffset, see comment above.\n\n      var result = coordConvert[area.brushType](0, targetInfo.coordSys, area.coordRange);\n      var rangeOffset = area.__rangeOffset;\n      area.range = rangeOffset ? diffProcessor[area.brushType](result.values, rangeOffset.offset, getScales(result.xyMinMax, rangeOffset.xyMinMax)) : result.values;\n    }\n  }, this);\n};\n\nproto.makePanelOpts = function (api, getDefaultBrushType) {\n  return zrUtil.map(this._targetInfoList, function (targetInfo) {\n    var rect = targetInfo.getPanelRect();\n    return {\n      panelId: targetInfo.panelId,\n      defaultBrushType: getDefaultBrushType && getDefaultBrushType(targetInfo),\n      clipPath: brushHelper.makeRectPanelClipPath(rect),\n      isTargetByCursor: brushHelper.makeRectIsTargetByCursor(rect, api, targetInfo.coordSysModel),\n      getLinearBrushOtherExtent: brushHelper.makeLinearBrushOtherExtent(rect)\n    };\n  });\n};\n\nproto.controlSeries = function (area, seriesModel, ecModel) {\n  // Check whether area is bound in coord, and series do not belong to that coord.\n  // If do not do this check, some brush (like lineX) will controll all axes.\n  var targetInfo = this.findTargetInfo(area, ecModel);\n  return targetInfo === true || targetInfo && indexOf(targetInfo.coordSyses, seriesModel.coordinateSystem) >= 0;\n};\n/**\n * If return Object, a coord found.\n * If reutrn true, global found.\n * Otherwise nothing found.\n *\n * @param {Object} area\n * @param {Array} targetInfoList\n * @return {Object|boolean}\n */\n\n\nproto.findTargetInfo = function (area, ecModel) {\n  var targetInfoList = this._targetInfoList;\n  var foundCpts = parseFinder(ecModel, area);\n\n  for (var i = 0; i < targetInfoList.length; i++) {\n    var targetInfo = targetInfoList[i];\n    var areaPanelId = area.panelId;\n\n    if (areaPanelId) {\n      if (targetInfo.panelId === areaPanelId) {\n        return targetInfo;\n      }\n    } else {\n      for (var i = 0; i < targetInfoMatchers.length; i++) {\n        if (targetInfoMatchers[i](foundCpts, targetInfo)) {\n          return targetInfo;\n        }\n      }\n    }\n  }\n\n  return true;\n};\n\nfunction formatMinMax(minMax) {\n  minMax[0] > minMax[1] && minMax.reverse();\n  return minMax;\n}\n\nfunction parseFinder(ecModel, option) {\n  return modelUtil.parseFinder(ecModel, option, {\n    includeMainTypes: INCLUDE_FINDER_MAIN_TYPES\n  });\n}\n\nvar targetInfoBuilders = {\n  grid: function (foundCpts, targetInfoList) {\n    var xAxisModels = foundCpts.xAxisModels;\n    var yAxisModels = foundCpts.yAxisModels;\n    var gridModels = foundCpts.gridModels; // Remove duplicated.\n\n    var gridModelMap = zrUtil.createHashMap();\n    var xAxesHas = {};\n    var yAxesHas = {};\n\n    if (!xAxisModels && !yAxisModels && !gridModels) {\n      return;\n    }\n\n    each(xAxisModels, function (axisModel) {\n      var gridModel = axisModel.axis.grid.model;\n      gridModelMap.set(gridModel.id, gridModel);\n      xAxesHas[gridModel.id] = true;\n    });\n    each(yAxisModels, function (axisModel) {\n      var gridModel = axisModel.axis.grid.model;\n      gridModelMap.set(gridModel.id, gridModel);\n      yAxesHas[gridModel.id] = true;\n    });\n    each(gridModels, function (gridModel) {\n      gridModelMap.set(gridModel.id, gridModel);\n      xAxesHas[gridModel.id] = true;\n      yAxesHas[gridModel.id] = true;\n    });\n    gridModelMap.each(function (gridModel) {\n      var grid = gridModel.coordinateSystem;\n      var cartesians = [];\n      each(grid.getCartesians(), function (cartesian, index) {\n        if (indexOf(xAxisModels, cartesian.getAxis('x').model) >= 0 || indexOf(yAxisModels, cartesian.getAxis('y').model) >= 0) {\n          cartesians.push(cartesian);\n        }\n      });\n      targetInfoList.push({\n        panelId: 'grid--' + gridModel.id,\n        gridModel: gridModel,\n        coordSysModel: gridModel,\n        // Use the first one as the representitive coordSys.\n        coordSys: cartesians[0],\n        coordSyses: cartesians,\n        getPanelRect: panelRectBuilder.grid,\n        xAxisDeclared: xAxesHas[gridModel.id],\n        yAxisDeclared: yAxesHas[gridModel.id]\n      });\n    });\n  },\n  geo: function (foundCpts, targetInfoList) {\n    each(foundCpts.geoModels, function (geoModel) {\n      var coordSys = geoModel.coordinateSystem;\n      targetInfoList.push({\n        panelId: 'geo--' + geoModel.id,\n        geoModel: geoModel,\n        coordSysModel: geoModel,\n        coordSys: coordSys,\n        coordSyses: [coordSys],\n        getPanelRect: panelRectBuilder.geo\n      });\n    });\n  }\n};\nvar targetInfoMatchers = [// grid\nfunction (foundCpts, targetInfo) {\n  var xAxisModel = foundCpts.xAxisModel;\n  var yAxisModel = foundCpts.yAxisModel;\n  var gridModel = foundCpts.gridModel;\n  !gridModel && xAxisModel && (gridModel = xAxisModel.axis.grid.model);\n  !gridModel && yAxisModel && (gridModel = yAxisModel.axis.grid.model);\n  return gridModel && gridModel === targetInfo.gridModel;\n}, // geo\nfunction (foundCpts, targetInfo) {\n  var geoModel = foundCpts.geoModel;\n  return geoModel && geoModel === targetInfo.geoModel;\n}];\nvar panelRectBuilder = {\n  grid: function () {\n    // grid is not Transformable.\n    return this.coordSys.grid.getRect().clone();\n  },\n  geo: function () {\n    var coordSys = this.coordSys;\n    var rect = coordSys.getBoundingRect().clone(); // geo roam and zoom transform\n\n    rect.applyTransform(graphic.getTransform(coordSys));\n    return rect;\n  }\n};\nvar coordConvert = {\n  lineX: curry(axisConvert, 0),\n  lineY: curry(axisConvert, 1),\n  rect: function (to, coordSys, rangeOrCoordRange) {\n    var xminymin = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][0], rangeOrCoordRange[1][0]]);\n    var xmaxymax = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][1], rangeOrCoordRange[1][1]]);\n    var values = [formatMinMax([xminymin[0], xmaxymax[0]]), formatMinMax([xminymin[1], xmaxymax[1]])];\n    return {\n      values: values,\n      xyMinMax: values\n    };\n  },\n  polygon: function (to, coordSys, rangeOrCoordRange) {\n    var xyMinMax = [[Infinity, -Infinity], [Infinity, -Infinity]];\n    var values = zrUtil.map(rangeOrCoordRange, function (item) {\n      var p = coordSys[COORD_CONVERTS[to]](item);\n      xyMinMax[0][0] = Math.min(xyMinMax[0][0], p[0]);\n      xyMinMax[1][0] = Math.min(xyMinMax[1][0], p[1]);\n      xyMinMax[0][1] = Math.max(xyMinMax[0][1], p[0]);\n      xyMinMax[1][1] = Math.max(xyMinMax[1][1], p[1]);\n      return p;\n    });\n    return {\n      values: values,\n      xyMinMax: xyMinMax\n    };\n  }\n};\n\nfunction axisConvert(axisNameIndex, to, coordSys, rangeOrCoordRange) {\n  var axis = coordSys.getAxis(['x', 'y'][axisNameIndex]);\n  var values = formatMinMax(zrUtil.map([0, 1], function (i) {\n    return to ? axis.coordToData(axis.toLocalCoord(rangeOrCoordRange[i])) : axis.toGlobalCoord(axis.dataToCoord(rangeOrCoordRange[i]));\n  }));\n  var xyMinMax = [];\n  xyMinMax[axisNameIndex] = values;\n  xyMinMax[1 - axisNameIndex] = [NaN, NaN];\n  return {\n    values: values,\n    xyMinMax: xyMinMax\n  };\n}\n\nvar diffProcessor = {\n  lineX: curry(axisDiffProcessor, 0),\n  lineY: curry(axisDiffProcessor, 1),\n  rect: function (values, refer, scales) {\n    return [[values[0][0] - scales[0] * refer[0][0], values[0][1] - scales[0] * refer[0][1]], [values[1][0] - scales[1] * refer[1][0], values[1][1] - scales[1] * refer[1][1]]];\n  },\n  polygon: function (values, refer, scales) {\n    return zrUtil.map(values, function (item, idx) {\n      return [item[0] - scales[0] * refer[idx][0], item[1] - scales[1] * refer[idx][1]];\n    });\n  }\n};\n\nfunction axisDiffProcessor(axisNameIndex, values, refer, scales) {\n  return [values[0] - scales[axisNameIndex] * refer[0], values[1] - scales[axisNameIndex] * refer[1]];\n} // We have to process scale caused by dataZoom manually,\n// although it might be not accurate.\n\n\nfunction getScales(xyMinMaxCurr, xyMinMaxOrigin) {\n  var sizeCurr = getSize(xyMinMaxCurr);\n  var sizeOrigin = getSize(xyMinMaxOrigin);\n  var scales = [sizeCurr[0] / sizeOrigin[0], sizeCurr[1] / sizeOrigin[1]];\n  isNaN(scales[0]) && (scales[0] = 1);\n  isNaN(scales[1]) && (scales[1] = 1);\n  return scales;\n}\n\nfunction getSize(xyMinMax) {\n  return xyMinMax ? [xyMinMax[0][1] - xyMinMax[0][0], xyMinMax[1][1] - xyMinMax[1][0]] : [NaN, NaN];\n}\n\nvar _default = BrushTargetManager;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1085:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar BoundingRect = __webpack_require__(987);\n\nvar _cursorHelper = __webpack_require__(1067);\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar graphicUtil = __webpack_require__(980);\n\nfunction makeRectPanelClipPath(rect) {\n  rect = normalizeRect(rect);\n  return function (localPoints, transform) {\n    return graphicUtil.clipPointsByRect(localPoints, rect);\n  };\n}\n\nfunction makeLinearBrushOtherExtent(rect, specifiedXYIndex) {\n  rect = normalizeRect(rect);\n  return function (xyIndex) {\n    var idx = specifiedXYIndex != null ? specifiedXYIndex : xyIndex;\n    var brushWidth = idx ? rect.width : rect.height;\n    var base = idx ? rect.x : rect.y;\n    return [base, base + (brushWidth || 0)];\n  };\n}\n\nfunction makeRectIsTargetByCursor(rect, api, targetModel) {\n  rect = normalizeRect(rect);\n  return function (e, localCursorPoint, transform) {\n    return rect.contain(localCursorPoint[0], localCursorPoint[1]) && !onIrrelevantElement(e, api, targetModel);\n  };\n} // Consider width/height is negative.\n\n\nfunction normalizeRect(rect) {\n  return BoundingRect.create(rect);\n}\n\nexports.makeRectPanelClipPath = makeRectPanelClipPath;\nexports.makeLinearBrushOtherExtent = makeLinearBrushOtherExtent;\nexports.makeRectIsTargetByCursor = makeRectIsTargetByCursor;\n\n/***/ }),\n\n/***/ 1086:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(991);\n\nComponent.registerSubTypeDefaulter('dataZoom', function () {\n  // Default 'slider' when no type specified.\n  return 'slider';\n});\n\n/***/ }),\n\n/***/ 1087:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(979);\n\necharts.registerProcessor(function (ecModel, api) {\n  ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n    // We calculate window and reset axis here but not in model\n    // init stage and not after action dispatch handler, because\n    // reset should be called after seriesData.restoreData.\n    dataZoomModel.eachTargetAxis(resetSingleAxis); // Caution: data zoom filtering is order sensitive when using\n    // percent range and no min/max/scale set on axis.\n    // For example, we have dataZoom definition:\n    // [\n    //      {xAxisIndex: 0, start: 30, end: 70},\n    //      {yAxisIndex: 0, start: 20, end: 80}\n    // ]\n    // In this case, [20, 80] of y-dataZoom should be based on data\n    // that have filtered by x-dataZoom using range of [30, 70],\n    // but should not be based on full raw data. Thus sliding\n    // x-dataZoom will change both ranges of xAxis and yAxis,\n    // while sliding y-dataZoom will only change the range of yAxis.\n    // So we should filter x-axis after reset x-axis immediately,\n    // and then reset y-axis and filter y-axis.\n\n    dataZoomModel.eachTargetAxis(filterSingleAxis);\n  });\n  ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n    // Fullfill all of the range props so that user\n    // is able to get them from chart.getOption().\n    var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n    var percentRange = axisProxy.getDataPercentWindow();\n    var valueRange = axisProxy.getDataValueWindow();\n    dataZoomModel.setRawRange({\n      start: percentRange[0],\n      end: percentRange[1],\n      startValue: valueRange[0],\n      endValue: valueRange[1]\n    }, true);\n  });\n});\n\nfunction resetSingleAxis(dimNames, axisIndex, dataZoomModel) {\n  dataZoomModel.getAxisProxy(dimNames.name, axisIndex).reset(dataZoomModel);\n}\n\nfunction filterSingleAxis(dimNames, axisIndex, dataZoomModel) {\n  dataZoomModel.getAxisProxy(dimNames.name, axisIndex).filterData(dataZoomModel);\n}\n\n/***/ }),\n\n/***/ 1088:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(979);\n\nvar zrUtil = __webpack_require__(978);\n\nvar helper = __webpack_require__(1030);\n\necharts.registerAction('dataZoom', function (payload, ecModel) {\n  var linkedNodesFinder = helper.createLinkedNodesFinder(zrUtil.bind(ecModel.eachComponent, ecModel, 'dataZoom'), helper.eachAxisDim, function (model, dimNames) {\n    return model.get(dimNames.axisIndex);\n  });\n  var effectedModels = [];\n  ecModel.eachComponent({\n    mainType: 'dataZoom',\n    query: payload\n  }, function (model, index) {\n    effectedModels.push.apply(effectedModels, linkedNodesFinder(model).nodes);\n  });\n  zrUtil.each(effectedModels, function (dataZoomModel, index) {\n    dataZoomModel.setRawRange({\n      start: payload.start,\n      end: payload.end,\n      startValue: payload.startValue,\n      endValue: payload.endValue\n    });\n  });\n});\n\n/***/ }),\n\n/***/ 1090:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar util = __webpack_require__(978);\n\nvar vec2 = __webpack_require__(984);\n\nvar Draggable = __webpack_require__(1091);\n\nvar Eventful = __webpack_require__(1001);\n\n/**\n * Handler\n * @module zrender/Handler\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (shenyi.914@gmail.com)\n */\nvar SILENT = 'silent';\n\nfunction makeEventPacket(eveType, targetInfo, event) {\n  return {\n    type: eveType,\n    event: event,\n    // target can only be an element that is not silent.\n    target: targetInfo.target,\n    // topTarget can be a silent element.\n    topTarget: targetInfo.topTarget,\n    cancelBubble: false,\n    offsetX: event.zrX,\n    offsetY: event.zrY,\n    gestureEvent: event.gestureEvent,\n    pinchX: event.pinchX,\n    pinchY: event.pinchY,\n    pinchScale: event.pinchScale,\n    wheelDelta: event.zrDelta,\n    zrByTouch: event.zrByTouch,\n    which: event.which\n  };\n}\n\nfunction EmptyProxy() {}\n\nEmptyProxy.prototype.dispose = function () {};\n\nvar handlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\n/**\n * @alias module:zrender/Handler\n * @constructor\n * @extends module:zrender/mixin/Eventful\n * @param {module:zrender/Storage} storage Storage instance.\n * @param {module:zrender/Painter} painter Painter instance.\n * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n */\n\nvar Handler = function (storage, painter, proxy, painterRoot) {\n  Eventful.call(this);\n  this.storage = storage;\n  this.painter = painter;\n  this.painterRoot = painterRoot;\n  proxy = proxy || new EmptyProxy();\n  /**\n   * Proxy of event. can be Dom, WebGLSurface, etc.\n   */\n\n  this.proxy = proxy; // Attach handler\n\n  proxy.handler = this;\n  /**\n   * {target, topTarget, x, y}\n   * @private\n   * @type {Object}\n   */\n\n  this._hovered = {};\n  /**\n   * @private\n   * @type {Date}\n   */\n\n  this._lastTouchMoment;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastX;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastY;\n  Draggable.call(this);\n  util.each(handlerNames, function (name) {\n    proxy.on && proxy.on(name, this[name], this);\n  }, this);\n};\n\nHandler.prototype = {\n  constructor: Handler,\n  mousemove: function (event) {\n    var x = event.zrX;\n    var y = event.zrY;\n    var lastHovered = this._hovered;\n    var lastHoveredTarget = lastHovered.target; // If lastHoveredTarget is removed from zr (detected by '__zr') by some API call\n    // (like 'setOption' or 'dispatchAction') in event handlers, we should find\n    // lastHovered again here. Otherwise 'mouseout' can not be triggered normally.\n    // See #6198.\n\n    if (lastHoveredTarget && !lastHoveredTarget.__zr) {\n      lastHovered = this.findHover(lastHovered.x, lastHovered.y);\n      lastHoveredTarget = lastHovered.target;\n    }\n\n    var hovered = this._hovered = this.findHover(x, y);\n    var hoveredTarget = hovered.target;\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default'); // Mouse out on previous hovered element\n\n    if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(lastHovered, 'mouseout', event);\n    } // Mouse moving on one element\n\n\n    this.dispatchToElement(hovered, 'mousemove', event); // Mouse over on a new element\n\n    if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(hovered, 'mouseover', event);\n    }\n  },\n  mouseout: function (event) {\n    this.dispatchToElement(this._hovered, 'mouseout', event); // There might be some doms created by upper layer application\n    // at the same level of painter.getViewportRoot() (e.g., tooltip\n    // dom created by echarts), where 'globalout' event should not\n    // be triggered when mouse enters these doms. (But 'mouseout'\n    // should be triggered at the original hovered element as usual).\n\n    var element = event.toElement || event.relatedTarget;\n    var innerDom;\n\n    do {\n      element = element && element.parentNode;\n    } while (element && element.nodeType != 9 && !(innerDom = element === this.painterRoot));\n\n    !innerDom && this.trigger('globalout', {\n      event: event\n    });\n  },\n\n  /**\n   * Resize\n   */\n  resize: function (event) {\n    this._hovered = {};\n  },\n\n  /**\n   * Dispatch event\n   * @param {string} eventName\n   * @param {event=} eventArgs\n   */\n  dispatch: function (eventName, eventArgs) {\n    var handler = this[eventName];\n    handler && handler.call(this, eventArgs);\n  },\n\n  /**\n   * Dispose\n   */\n  dispose: function () {\n    this.proxy.dispose();\n    this.storage = this.proxy = this.painter = null;\n  },\n\n  /**\n   * 设置默认的cursor style\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(cursorStyle);\n  },\n\n  /**\n   * 事件分发代理\n   *\n   * @private\n   * @param {Object} targetInfo {target, topTarget} 目标图形元素\n   * @param {string} eventName 事件名称\n   * @param {Object} event 事件对象\n   */\n  dispatchToElement: function (targetInfo, eventName, event) {\n    targetInfo = targetInfo || {};\n    var el = targetInfo.target;\n\n    if (el && el.silent) {\n      return;\n    }\n\n    var eventHandler = 'on' + eventName;\n    var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n    while (el) {\n      el[eventHandler] && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n      el.trigger(eventName, eventPacket);\n      el = el.parent;\n\n      if (eventPacket.cancelBubble) {\n        break;\n      }\n    }\n\n    if (!eventPacket.cancelBubble) {\n      // 冒泡到顶级 zrender 对象\n      this.trigger(eventName, eventPacket); // 分发事件到用户自定义层\n      // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n\n      this.painter && this.painter.eachOtherLayer(function (layer) {\n        if (typeof layer[eventHandler] == 'function') {\n          layer[eventHandler].call(layer, eventPacket);\n        }\n\n        if (layer.trigger) {\n          layer.trigger(eventName, eventPacket);\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   * @param {number} x\n   * @param {number} y\n   * @param {module:zrender/graphic/Displayable} exclude\n   * @return {model:zrender/Element}\n   * @method\n   */\n  findHover: function (x, y, exclude) {\n    var list = this.storage.getDisplayList();\n    var out = {\n      x: x,\n      y: y\n    };\n\n    for (var i = list.length - 1; i >= 0; i--) {\n      var hoverCheckResult;\n\n      if (list[i] !== exclude // getDisplayList may include ignored item in VML mode\n      && !list[i].ignore && (hoverCheckResult = isHover(list[i], x, y))) {\n        !out.topTarget && (out.topTarget = list[i]);\n\n        if (hoverCheckResult !== SILENT) {\n          out.target = list[i];\n          break;\n        }\n      }\n    }\n\n    return out;\n  }\n}; // Common handlers\n\nutil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  Handler.prototype[name] = function (event) {\n    // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n    var hovered = this.findHover(event.zrX, event.zrY);\n    var hoveredTarget = hovered.target;\n\n    if (name === 'mousedown') {\n      this._downEl = hoveredTarget;\n      this._downPoint = [event.zrX, event.zrY]; // In case click triggered before mouseup\n\n      this._upEl = hoveredTarget;\n    } else if (name === 'mosueup') {\n      this._upEl = hoveredTarget;\n    } else if (name === 'click') {\n      if (this._downEl !== this._upEl // Original click event is triggered on the whole canvas element,\n      // including the case that `mousedown` - `mousemove` - `mouseup`,\n      // which should be filtered, otherwise it will bring trouble to\n      // pan and zoom.\n      || !this._downPoint // Arbitrary value\n      || vec2.dist(this._downPoint, [event.zrX, event.zrY]) > 4) {\n        return;\n      }\n\n      this._downPoint = null;\n    }\n\n    this.dispatchToElement(hovered, name, event);\n  };\n});\n\nfunction isHover(displayable, x, y) {\n  if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n    var el = displayable;\n    var isSilent;\n\n    while (el) {\n      // If clipped by ancestor.\n      // FIXME: If clipPath has neither stroke nor fill,\n      // el.clipPath.contain(x, y) will always return false.\n      if (el.clipPath && !el.clipPath.contain(x, y)) {\n        return false;\n      }\n\n      if (el.silent) {\n        isSilent = true;\n      }\n\n      el = el.parent;\n    }\n\n    return isSilent ? SILENT : true;\n  }\n\n  return false;\n}\n\nutil.mixin(Handler, Eventful);\nutil.mixin(Handler, Draggable);\nvar _default = Handler;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1091:\n/***/ (function(module, exports) {\n\n// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\nfunction Draggable() {\n  this.on('mousedown', this._dragStart, this);\n  this.on('mousemove', this._drag, this);\n  this.on('mouseup', this._dragEnd, this);\n  this.on('globalout', this._dragEnd, this); // this._dropTarget = null;\n  // this._draggingTarget = null;\n  // this._x = 0;\n  // this._y = 0;\n}\n\nDraggable.prototype = {\n  constructor: Draggable,\n  _dragStart: function (e) {\n    var draggingTarget = e.target;\n\n    if (draggingTarget && draggingTarget.draggable) {\n      this._draggingTarget = draggingTarget;\n      draggingTarget.dragging = true;\n      this._x = e.offsetX;\n      this._y = e.offsetY;\n      this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n    }\n  },\n  _drag: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      var x = e.offsetX;\n      var y = e.offsetY;\n      var dx = x - this._x;\n      var dy = y - this._y;\n      this._x = x;\n      this._y = y;\n      draggingTarget.drift(dx, dy, e);\n      this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n      var dropTarget = this.findHover(x, y, draggingTarget).target;\n      var lastDropTarget = this._dropTarget;\n      this._dropTarget = dropTarget;\n\n      if (draggingTarget !== dropTarget) {\n        if (lastDropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n        }\n\n        if (dropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n        }\n      }\n    }\n  },\n  _dragEnd: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      draggingTarget.dragging = false;\n    }\n\n    this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n    if (this._dropTarget) {\n      this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n    }\n\n    this._draggingTarget = null;\n    this._dropTarget = null;\n  }\n};\n\nfunction param(target, e) {\n  return {\n    target: target,\n    topTarget: e && e.topTarget\n  };\n}\n\nvar _default = Draggable;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1092:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar util = __webpack_require__(978);\n\nvar env = __webpack_require__(986);\n\nvar Group = __webpack_require__(1009);\n\nvar timsort = __webpack_require__(1024);\n\n/**\n * Storage内容仓库模块\n * @module zrender/Storage\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @author errorrik (errorrik@gmail.com)\n * @author pissang (https://github.com/pissang/)\n */\n// Use timsort because in most case elements are partially sorted\n// https://jsfiddle.net/pissang/jr4x7mdm/8/\nfunction shapeCompareFunc(a, b) {\n  if (a.zlevel === b.zlevel) {\n    if (a.z === b.z) {\n      // if (a.z2 === b.z2) {\n      //     // FIXME Slow has renderidx compare\n      //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n      //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n      //     return a.__renderidx - b.__renderidx;\n      // }\n      return a.z2 - b.z2;\n    }\n\n    return a.z - b.z;\n  }\n\n  return a.zlevel - b.zlevel;\n}\n/**\n * 内容仓库 (M)\n * @alias module:zrender/Storage\n * @constructor\n */\n\n\nvar Storage = function () {\n  // jshint ignore:line\n  this._roots = [];\n  this._displayList = [];\n  this._displayListLen = 0;\n};\n\nStorage.prototype = {\n  constructor: Storage,\n\n  /**\n   * @param  {Function} cb\n   *\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._roots.length; i++) {\n      this._roots[i].traverse(cb, context);\n    }\n  },\n\n  /**\n   * 返回所有图形的绘制队列\n   * @param {boolean} [update=false] 是否在返回前更新该数组\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n   *\n   * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n   * @return {Array.<module:zrender/graphic/Displayable>}\n   */\n  getDisplayList: function (update, includeIgnore) {\n    includeIgnore = includeIgnore || false;\n\n    if (update) {\n      this.updateDisplayList(includeIgnore);\n    }\n\n    return this._displayList;\n  },\n\n  /**\n   * 更新图形的绘制队列。\n   * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n   * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n   */\n  updateDisplayList: function (includeIgnore) {\n    this._displayListLen = 0;\n    var roots = this._roots;\n    var displayList = this._displayList;\n\n    for (var i = 0, len = roots.length; i < len; i++) {\n      this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n    }\n\n    displayList.length = this._displayListLen; // for (var i = 0, len = displayList.length; i < len; i++) {\n    //     displayList[i].__renderidx = i;\n    // }\n    // displayList.sort(shapeCompareFunc);\n\n    env.canvasSupported && timsort(displayList, shapeCompareFunc);\n  },\n  _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n    if (el.ignore && !includeIgnore) {\n      return;\n    }\n\n    el.beforeUpdate();\n\n    if (el.__dirty) {\n      el.update();\n    }\n\n    el.afterUpdate();\n    var userSetClipPath = el.clipPath;\n\n    if (userSetClipPath) {\n      // FIXME 效率影响\n      if (clipPaths) {\n        clipPaths = clipPaths.slice();\n      } else {\n        clipPaths = [];\n      }\n\n      var currentClipPath = userSetClipPath;\n      var parentClipPath = el; // Recursively add clip path\n\n      while (currentClipPath) {\n        // clipPath 的变换是基于使用这个 clipPath 的元素\n        currentClipPath.parent = parentClipPath;\n        currentClipPath.updateTransform();\n        clipPaths.push(currentClipPath);\n        parentClipPath = currentClipPath;\n        currentClipPath = currentClipPath.clipPath;\n      }\n    }\n\n    if (el.isGroup) {\n      var children = el._children;\n\n      for (var i = 0; i < children.length; i++) {\n        var child = children[i]; // Force to mark as dirty if group is dirty\n        // FIXME __dirtyPath ?\n\n        if (el.__dirty) {\n          child.__dirty = true;\n        }\n\n        this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n      } // Mark group clean here\n\n\n      el.__dirty = false;\n    } else {\n      el.__clipPaths = clipPaths;\n      this._displayList[this._displayListLen++] = el;\n    }\n  },\n\n  /**\n   * 添加图形(Shape)或者组(Group)到根节点\n   * @param {module:zrender/Element} el\n   */\n  addRoot: function (el) {\n    if (el.__storage === this) {\n      return;\n    }\n\n    if (el instanceof Group) {\n      el.addChildrenToStorage(this);\n    }\n\n    this.addToStorage(el);\n\n    this._roots.push(el);\n  },\n\n  /**\n   * 删除指定的图形(Shape)或者组(Group)\n   * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n   */\n  delRoot: function (el) {\n    if (el == null) {\n      // 不指定el清空\n      for (var i = 0; i < this._roots.length; i++) {\n        var root = this._roots[i];\n\n        if (root instanceof Group) {\n          root.delChildrenFromStorage(this);\n        }\n      }\n\n      this._roots = [];\n      this._displayList = [];\n      this._displayListLen = 0;\n      return;\n    }\n\n    if (el instanceof Array) {\n      for (var i = 0, l = el.length; i < l; i++) {\n        this.delRoot(el[i]);\n      }\n\n      return;\n    }\n\n    var idx = util.indexOf(this._roots, el);\n\n    if (idx >= 0) {\n      this.delFromStorage(el);\n\n      this._roots.splice(idx, 1);\n\n      if (el instanceof Group) {\n        el.delChildrenFromStorage(this);\n      }\n    }\n  },\n  addToStorage: function (el) {\n    el.__storage = this;\n    el.dirty(false);\n    return this;\n  },\n  delFromStorage: function (el) {\n    if (el) {\n      el.__storage = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * 清空并且释放Storage\n   */\n  dispose: function () {\n    this._renderList = this._roots = null;\n  },\n  displayableSortFunc: shapeCompareFunc\n};\nvar _default = Storage;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1093:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Animator = __webpack_require__(1044);\n\nvar log = __webpack_require__(1023);\n\nvar _util = __webpack_require__(978);\n\nvar isString = _util.isString;\nvar isFunction = _util.isFunction;\nvar isObject = _util.isObject;\nvar isArrayLike = _util.isArrayLike;\nvar indexOf = _util.indexOf;\n\n/**\n * @alias modue:zrender/mixin/Animatable\n * @constructor\n */\nvar Animatable = function () {\n  /**\n   * @type {Array.<module:zrender/animation/Animator>}\n   * @readOnly\n   */\n  this.animators = [];\n};\n\nAnimatable.prototype = {\n  constructor: Animatable,\n\n  /**\n   * 动画\n   *\n   * @param {string} path The path to fetch value from object, like 'a.b.c'.\n   * @param {boolean} [loop] Whether to loop animation.\n   * @return {module:zrender/animation/Animator}\n   * @example:\n   *     el.animate('style', false)\n   *         .when(1000, {x: 10} )\n   *         .done(function(){ // Animation done })\n   *         .start()\n   */\n  animate: function (path, loop) {\n    var target;\n    var animatingShape = false;\n    var el = this;\n    var zr = this.__zr;\n\n    if (path) {\n      var pathSplitted = path.split('.');\n      var prop = el; // If animating shape\n\n      animatingShape = pathSplitted[0] === 'shape';\n\n      for (var i = 0, l = pathSplitted.length; i < l; i++) {\n        if (!prop) {\n          continue;\n        }\n\n        prop = prop[pathSplitted[i]];\n      }\n\n      if (prop) {\n        target = prop;\n      }\n    } else {\n      target = el;\n    }\n\n    if (!target) {\n      log('Property \"' + path + '\" is not existed in element ' + el.id);\n      return;\n    }\n\n    var animators = el.animators;\n    var animator = new Animator(target, loop);\n    animator.during(function (target) {\n      el.dirty(animatingShape);\n    }).done(function () {\n      // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n      animators.splice(indexOf(animators, animator), 1);\n    });\n    animators.push(animator); // If animate after added to the zrender\n\n    if (zr) {\n      zr.animation.addAnimator(animator);\n    }\n\n    return animator;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stopAnimation: function (forwardToLast) {\n    var animators = this.animators;\n    var len = animators.length;\n\n    for (var i = 0; i < len; i++) {\n      animators[i].stop(forwardToLast);\n    }\n\n    animators.length = 0;\n    return this;\n  },\n\n  /**\n   * Caution: this method will stop previous animation.\n   * So do not use this method to one element twice before\n   * animation starts, unless you know what you are doing.\n   * @param {Object} target\n   * @param {number} [time=500] Time in ms\n   * @param {string} [easing='linear']\n   * @param {number} [delay=0]\n   * @param {Function} [callback]\n   * @param {Function} [forceAnimate] Prevent stop animation and callback\n   *        immediently when target values are the same as current values.\n   *\n   * @example\n   *  // Animate position\n   *  el.animateTo({\n   *      position: [10, 10]\n   *  }, function () { // done })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n   *  el.animateTo({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100, 'cubicOut', function () { // done })\n   */\n  // TODO Return animation key\n  animateTo: function (target, time, delay, easing, callback, forceAnimate) {\n    // animateTo(target, time, easing, callback);\n    if (isString(delay)) {\n      callback = easing;\n      easing = delay;\n      delay = 0;\n    } // animateTo(target, time, delay, callback);\n    else if (isFunction(easing)) {\n        callback = easing;\n        easing = 'linear';\n        delay = 0;\n      } // animateTo(target, time, callback);\n      else if (isFunction(delay)) {\n          callback = delay;\n          delay = 0;\n        } // animateTo(target, callback)\n        else if (isFunction(time)) {\n            callback = time;\n            time = 500;\n          } // animateTo(target)\n          else if (!time) {\n              time = 500;\n            } // Stop all previous animations\n\n\n    this.stopAnimation();\n\n    this._animateToShallow('', this, target, time, delay); // Animators may be removed immediately after start\n    // if there is nothing to animate\n\n\n    var animators = this.animators.slice();\n    var count = animators.length;\n\n    function done() {\n      count--;\n\n      if (!count) {\n        callback && callback();\n      }\n    } // No animators. This should be checked before animators[i].start(),\n    // because 'done' may be executed immediately if no need to animate.\n\n\n    if (!count) {\n      callback && callback();\n    } // Start after all animators created\n    // Incase any animator is done immediately when all animation properties are not changed\n\n\n    for (var i = 0; i < animators.length; i++) {\n      animators[i].done(done).start(easing, forceAnimate);\n    }\n  },\n\n  /**\n   * @private\n   * @param {string} path=''\n   * @param {Object} source=this\n   * @param {Object} target\n   * @param {number} [time=500]\n   * @param {number} [delay=0]\n   *\n   * @example\n   *  // Animate position\n   *  el._animateToShallow({\n   *      position: [10, 10]\n   *  })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms\n   *  el._animateToShallow({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100)\n   */\n  _animateToShallow: function (path, source, target, time, delay) {\n    var objShallow = {};\n    var propertyCount = 0;\n\n    for (var name in target) {\n      if (!target.hasOwnProperty(name)) {\n        continue;\n      }\n\n      if (source[name] != null) {\n        if (isObject(target[name]) && !isArrayLike(target[name])) {\n          this._animateToShallow(path ? path + '.' + name : name, source[name], target[name], time, delay);\n        } else {\n          objShallow[name] = target[name];\n          propertyCount++;\n        }\n      } else if (target[name] != null) {\n        // Attr directly if not has property\n        // FIXME, if some property not needed for element ?\n        if (!path) {\n          this.attr(name, target[name]);\n        } else {\n          // Shape or style\n          var props = {};\n          props[path] = {};\n          props[path][name] = target[name];\n          this.attr(props);\n        }\n      }\n    }\n\n    if (propertyCount > 0) {\n      this.animate(path, false).when(time == null ? 500 : time, objShallow).delay(delay || 0);\n    }\n\n    return this;\n  }\n};\nvar _default = Animatable;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1094:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar easingFuncs = __webpack_require__(1095);\n\n/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\nfunction Clip(options) {\n  this._target = options.target; // 生命周期\n\n  this._life = options.life || 1000; // 延时\n\n  this._delay = options.delay || 0; // 开始时间\n  // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n\n  this._initialized = false; // 是否循环\n\n  this.loop = options.loop == null ? false : options.loop;\n  this.gap = options.gap || 0;\n  this.easing = options.easing || 'Linear';\n  this.onframe = options.onframe;\n  this.ondestroy = options.ondestroy;\n  this.onrestart = options.onrestart;\n  this._pausedTime = 0;\n  this._paused = false;\n}\n\nClip.prototype = {\n  constructor: Clip,\n  step: function (globalTime, deltaTime) {\n    // Set startTime on first step, or _startTime may has milleseconds different between clips\n    // PENDING\n    if (!this._initialized) {\n      this._startTime = globalTime + this._delay;\n      this._initialized = true;\n    }\n\n    if (this._paused) {\n      this._pausedTime += deltaTime;\n      return;\n    }\n\n    var percent = (globalTime - this._startTime - this._pausedTime) / this._life; // 还没开始\n\n    if (percent < 0) {\n      return;\n    }\n\n    percent = Math.min(percent, 1);\n    var easing = this.easing;\n    var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n    var schedule = typeof easingFunc === 'function' ? easingFunc(percent) : percent;\n    this.fire('frame', schedule); // 结束\n\n    if (percent == 1) {\n      if (this.loop) {\n        this.restart(globalTime); // 重新开始周期\n        // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n\n        return 'restart';\n      } // 动画完成将这个控制器标识为待删除\n      // 在Animation.update中进行批量删除\n\n\n      this._needsRemove = true;\n      return 'destroy';\n    }\n\n    return null;\n  },\n  restart: function (globalTime) {\n    var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n    this._startTime = globalTime - remainder + this.gap;\n    this._pausedTime = 0;\n    this._needsRemove = false;\n  },\n  fire: function (eventType, arg) {\n    eventType = 'on' + eventType;\n\n    if (this[eventType]) {\n      this[eventType](this._target, arg);\n    }\n  },\n  pause: function () {\n    this._paused = true;\n  },\n  resume: function () {\n    this._paused = false;\n  }\n};\nvar _default = Clip;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1095:\n/***/ (function(module, exports) {\n\n/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\nvar easing = {\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  linear: function (k) {\n    return k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticIn: function (k) {\n    return k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticOut: function (k) {\n    return k * (2 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k;\n    }\n\n    return -0.5 * (--k * (k - 2) - 1);\n  },\n  // 三次方的缓动（t^3）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicIn: function (k) {\n    return k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicOut: function (k) {\n    return --k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k + 2);\n  },\n  // 四次方的缓动（t^4）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticIn: function (k) {\n    return k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticOut: function (k) {\n    return 1 - --k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k;\n    }\n\n    return -0.5 * ((k -= 2) * k * k * k - 2);\n  },\n  // 五次方的缓动（t^5）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticIn: function (k) {\n    return k * k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticOut: function (k) {\n    return --k * k * k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k * k * k + 2);\n  },\n  // 正弦曲线的缓动（sin(t)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalIn: function (k) {\n    return 1 - Math.cos(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalOut: function (k) {\n    return Math.sin(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalInOut: function (k) {\n    return 0.5 * (1 - Math.cos(Math.PI * k));\n  },\n  // 指数曲线的缓动（2^t）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialIn: function (k) {\n    return k === 0 ? 0 : Math.pow(1024, k - 1);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialOut: function (k) {\n    return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialInOut: function (k) {\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if ((k *= 2) < 1) {\n      return 0.5 * Math.pow(1024, k - 1);\n    }\n\n    return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n  },\n  // 圆形曲线的缓动（sqrt(1-t^2)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularIn: function (k) {\n    return 1 - Math.sqrt(1 - k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularOut: function (k) {\n    return Math.sqrt(1 - --k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return -0.5 * (Math.sqrt(1 - k * k) - 1);\n    }\n\n    return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n  },\n  // 创建类似于弹簧在停止前来回振荡的动画\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticIn: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return -(a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return a * Math.pow(2, -10 * k) * Math.sin((k - s) * (2 * Math.PI) / p) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticInOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    if ((k *= 2) < 1) {\n      return -0.5 * (a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n    }\n\n    return a * Math.pow(2, -10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n  },\n  // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backIn: function (k) {\n    var s = 1.70158;\n    return k * k * ((s + 1) * k - s);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backOut: function (k) {\n    var s = 1.70158;\n    return --k * k * ((s + 1) * k + s) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backInOut: function (k) {\n    var s = 1.70158 * 1.525;\n\n    if ((k *= 2) < 1) {\n      return 0.5 * (k * k * ((s + 1) * k - s));\n    }\n\n    return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n  },\n  // 创建弹跳效果\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceIn: function (k) {\n    return 1 - easing.bounceOut(1 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceOut: function (k) {\n    if (k < 1 / 2.75) {\n      return 7.5625 * k * k;\n    } else if (k < 2 / 2.75) {\n      return 7.5625 * (k -= 1.5 / 2.75) * k + 0.75;\n    } else if (k < 2.5 / 2.75) {\n      return 7.5625 * (k -= 2.25 / 2.75) * k + 0.9375;\n    } else {\n      return 7.5625 * (k -= 2.625 / 2.75) * k + 0.984375;\n    }\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceInOut: function (k) {\n    if (k < 0.5) {\n      return easing.bounceIn(k * 2) * 0.5;\n    }\n\n    return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n  }\n};\nvar _default = easing;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1096:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(1010);\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar util = __webpack_require__(978);\n\nvar log = __webpack_require__(1023);\n\nvar BoundingRect = __webpack_require__(987);\n\nvar timsort = __webpack_require__(1024);\n\nvar Layer = __webpack_require__(1097);\n\nvar requestAnimationFrame = __webpack_require__(1048);\n\nvar Image = __webpack_require__(1025);\n\n/**\n * Default canvas painter\n * @module zrender/Painter\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n// PENDIGN\n// Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.\n//\n// Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.\nvar MAX_PROGRESSIVE_LAYER_NUMBER = 5;\n\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n\nfunction isLayerValid(layer) {\n  if (!layer) {\n    return false;\n  }\n\n  if (layer.__builtin__) {\n    return true;\n  }\n\n  if (typeof layer.resize !== 'function' || typeof layer.refresh !== 'function') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction preProcessLayer(layer) {\n  layer.__unusedCount++;\n}\n\nfunction postProcessLayer(layer) {\n  if (layer.__unusedCount == 1) {\n    layer.clear();\n  }\n}\n\nvar tmpRect = new BoundingRect(0, 0, 0, 0);\nvar viewRect = new BoundingRect(0, 0, 0, 0);\n\nfunction isDisplayableCulled(el, width, height) {\n  tmpRect.copy(el.getBoundingRect());\n\n  if (el.transform) {\n    tmpRect.applyTransform(el.transform);\n  }\n\n  viewRect.width = width;\n  viewRect.height = height;\n  return !tmpRect.intersect(viewRect);\n}\n\nfunction isClipPathChanged(clipPaths, prevClipPaths) {\n  if (clipPaths == prevClipPaths) {\n    // Can both be null or undefined\n    return false;\n  }\n\n  if (!clipPaths || !prevClipPaths || clipPaths.length !== prevClipPaths.length) {\n    return true;\n  }\n\n  for (var i = 0; i < clipPaths.length; i++) {\n    if (clipPaths[i] !== prevClipPaths[i]) {\n      return true;\n    }\n  }\n}\n\nfunction doClip(clipPaths, ctx) {\n  for (var i = 0; i < clipPaths.length; i++) {\n    var clipPath = clipPaths[i];\n    clipPath.setTransform(ctx);\n    ctx.beginPath();\n    clipPath.buildPath(ctx, clipPath.shape);\n    ctx.clip(); // Transform back\n\n    clipPath.restoreTransform(ctx);\n  }\n}\n\nfunction createRoot(width, height) {\n  var domRoot = document.createElement('div'); // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n  domRoot.style.cssText = ['position:relative', 'overflow:hidden', 'width:' + width + 'px', 'height:' + height + 'px', 'padding:0', 'margin:0', 'border-width:0'].join(';') + ';';\n  return domRoot;\n}\n/**\n * @alias module:zrender/Painter\n * @constructor\n * @param {HTMLElement} root 绘图容器\n * @param {module:zrender/Storage} storage\n * @param {Object} opts\n */\n\n\nvar Painter = function (root, storage, opts) {\n  this.type = 'canvas'; // In node environment using node-canvas\n\n  var singleCanvas = !root.nodeName // In node ?\n  || root.nodeName.toUpperCase() === 'CANVAS';\n  this._opts = opts = util.extend({}, opts || {});\n  /**\n   * @type {number}\n   */\n\n  this.dpr = opts.devicePixelRatio || devicePixelRatio;\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._singleCanvas = singleCanvas;\n  /**\n   * 绘图容器\n   * @type {HTMLElement}\n   */\n\n  this.root = root;\n  var rootStyle = root.style;\n\n  if (rootStyle) {\n    rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n    rootStyle['-webkit-user-select'] = rootStyle['user-select'] = rootStyle['-webkit-touch-callout'] = 'none';\n    root.innerHTML = '';\n  }\n  /**\n   * @type {module:zrender/Storage}\n   */\n\n\n  this.storage = storage;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  var zlevelList = this._zlevelList = [];\n  /**\n   * @type {Object.<string, module:zrender/Layer>}\n   * @private\n   */\n\n  var layers = this._layers = {};\n  /**\n   * @type {Object.<string, Object>}\n   * @type {private}\n   */\n\n  this._layerConfig = {};\n\n  if (!singleCanvas) {\n    this._width = this._getSize(0);\n    this._height = this._getSize(1);\n    var domRoot = this._domRoot = createRoot(this._width, this._height);\n    root.appendChild(domRoot);\n  } else {\n    if (opts.width != null) {\n      root.width = opts.width;\n    }\n\n    if (opts.height != null) {\n      root.height = opts.height;\n    } // Use canvas width and height directly\n\n\n    var width = root.width;\n    var height = root.height;\n    this._width = width;\n    this._height = height; // Create layer if only one given canvas\n    // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n\n    var mainLayer = new Layer(root, this, 1);\n    mainLayer.initContext(); // FIXME Use canvas width and height\n    // mainLayer.resize(width, height);\n\n    layers[0] = mainLayer;\n    zlevelList.push(0);\n    this._domRoot = root;\n  } // Layers for progressive rendering\n\n\n  this._progressiveLayers = [];\n  /**\n   * @type {module:zrender/Layer}\n   * @private\n   */\n\n  this._hoverlayer;\n  this._hoverElements = [];\n};\n\nPainter.prototype = {\n  constructor: Painter,\n  getType: function () {\n    return 'canvas';\n  },\n\n  /**\n   * If painter use a single canvas\n   * @return {boolean}\n   */\n  isSingleCanvas: function () {\n    return this._singleCanvas;\n  },\n\n  /**\n   * @return {HTMLDivElement}\n   */\n  getViewportRoot: function () {\n    return this._domRoot;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n\n  /**\n   * 刷新\n   * @param {boolean} [paintAll=false] 强制绘制所有displayable\n   */\n  refresh: function (paintAll) {\n    var list = this.storage.getDisplayList(true);\n    var zlevelList = this._zlevelList;\n\n    this._paintList(list, paintAll); // Paint custum layers\n\n\n    for (var i = 0; i < zlevelList.length; i++) {\n      var z = zlevelList[i];\n      var layer = this._layers[z];\n\n      if (!layer.__builtin__ && layer.refresh) {\n        layer.refresh();\n      }\n    }\n\n    this.refreshHover();\n\n    if (this._progressiveLayers.length) {\n      this._startProgessive();\n    }\n\n    return this;\n  },\n  addHover: function (el, hoverStyle) {\n    if (el.__hoverMir) {\n      return;\n    }\n\n    var elMirror = new el.constructor({\n      style: el.style,\n      shape: el.shape\n    });\n    elMirror.__from = el;\n    el.__hoverMir = elMirror;\n    elMirror.setStyle(hoverStyle);\n\n    this._hoverElements.push(elMirror);\n  },\n  removeHover: function (el) {\n    var elMirror = el.__hoverMir;\n    var hoverElements = this._hoverElements;\n    var idx = util.indexOf(hoverElements, elMirror);\n\n    if (idx >= 0) {\n      hoverElements.splice(idx, 1);\n    }\n\n    el.__hoverMir = null;\n  },\n  clearHover: function (el) {\n    var hoverElements = this._hoverElements;\n\n    for (var i = 0; i < hoverElements.length; i++) {\n      var from = hoverElements[i].__from;\n\n      if (from) {\n        from.__hoverMir = null;\n      }\n    }\n\n    hoverElements.length = 0;\n  },\n  refreshHover: function () {\n    var hoverElements = this._hoverElements;\n    var len = hoverElements.length;\n    var hoverLayer = this._hoverlayer;\n    hoverLayer && hoverLayer.clear();\n\n    if (!len) {\n      return;\n    }\n\n    timsort(hoverElements, this.storage.displayableSortFunc); // Use a extream large zlevel\n    // FIXME?\n\n    if (!hoverLayer) {\n      hoverLayer = this._hoverlayer = this.getLayer(1e5);\n    }\n\n    var scope = {};\n    hoverLayer.ctx.save();\n\n    for (var i = 0; i < len;) {\n      var el = hoverElements[i];\n      var originalEl = el.__from; // Original el is removed\n      // PENDING\n\n      if (!(originalEl && originalEl.__zr)) {\n        hoverElements.splice(i, 1);\n        originalEl.__hoverMir = null;\n        len--;\n        continue;\n      }\n\n      i++; // Use transform\n      // FIXME style and shape ?\n\n      if (!originalEl.invisible) {\n        el.transform = originalEl.transform;\n        el.invTransform = originalEl.invTransform;\n        el.__clipPaths = originalEl.__clipPaths; // el.\n\n        this._doPaintEl(el, hoverLayer, true, scope);\n      }\n    }\n\n    hoverLayer.ctx.restore();\n  },\n  _startProgessive: function () {\n    var self = this;\n\n    if (!self._furtherProgressive) {\n      return;\n    } // Use a token to stop progress steps triggered by\n    // previous zr.refresh calling.\n\n\n    var token = self._progressiveToken = +new Date();\n    self._progress++;\n    requestAnimationFrame(step);\n\n    function step() {\n      // In case refreshed or disposed\n      if (token === self._progressiveToken && self.storage) {\n        self._doPaintList(self.storage.getDisplayList());\n\n        if (self._furtherProgressive) {\n          self._progress++;\n          requestAnimationFrame(step);\n        } else {\n          self._progressiveToken = -1;\n        }\n      }\n    }\n  },\n  _clearProgressive: function () {\n    this._progressiveToken = -1;\n    this._progress = 0;\n    util.each(this._progressiveLayers, function (layer) {\n      layer.__dirty && layer.clear();\n    });\n  },\n  _paintList: function (list, paintAll) {\n    if (paintAll == null) {\n      paintAll = false;\n    }\n\n    this._updateLayerStatus(list);\n\n    this._clearProgressive();\n\n    this.eachBuiltinLayer(preProcessLayer);\n\n    this._doPaintList(list, paintAll);\n\n    this.eachBuiltinLayer(postProcessLayer);\n  },\n  _doPaintList: function (list, paintAll) {\n    var currentLayer;\n    var currentZLevel;\n    var ctx; // var invTransform = [];\n\n    var scope;\n    var progressiveLayerIdx = 0;\n    var currentProgressiveLayer;\n    var width = this._width;\n    var height = this._height;\n    var layerProgress;\n    var frame = this._progress;\n\n    function flushProgressiveLayer(layer) {\n      var dpr = ctx.dpr || 1;\n      ctx.save();\n      ctx.globalAlpha = 1;\n      ctx.shadowBlur = 0; // Avoid layer don't clear in next progressive frame\n\n      currentLayer.__dirty = true;\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\n      ctx.drawImage(layer.dom, 0, 0, width * dpr, height * dpr);\n      ctx.restore();\n    }\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      var el = list[i];\n      var elZLevel = this._singleCanvas ? 0 : el.zlevel;\n      var elFrame = el.__frame; // Flush at current context\n      // PENDING\n\n      if (elFrame < 0 && currentProgressiveLayer) {\n        flushProgressiveLayer(currentProgressiveLayer);\n        currentProgressiveLayer = null;\n      } // Change draw layer\n\n\n      if (currentZLevel !== elZLevel) {\n        if (ctx) {\n          ctx.restore();\n        } // Reset scope\n\n\n        scope = {}; // Only 0 zlevel if only has one canvas\n\n        currentZLevel = elZLevel;\n        currentLayer = this.getLayer(currentZLevel);\n\n        if (!currentLayer.__builtin__) {\n          log('ZLevel ' + currentZLevel + ' has been used by unkown layer ' + currentLayer.id);\n        }\n\n        ctx = currentLayer.ctx;\n        ctx.save(); // Reset the count\n\n        currentLayer.__unusedCount = 0;\n\n        if (currentLayer.__dirty || paintAll) {\n          currentLayer.clear();\n        }\n      }\n\n      if (!(currentLayer.__dirty || paintAll)) {\n        continue;\n      }\n\n      if (elFrame >= 0) {\n        // Progressive layer changed\n        if (!currentProgressiveLayer) {\n          currentProgressiveLayer = this._progressiveLayers[Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)];\n          currentProgressiveLayer.ctx.save();\n          currentProgressiveLayer.renderScope = {};\n\n          if (currentProgressiveLayer && currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress) {\n            // flushProgressiveLayer(currentProgressiveLayer);\n            // Quick jump all progressive elements\n            // All progressive element are not dirty, jump over and flush directly\n            i = currentProgressiveLayer.__nextIdxNotProg - 1; // currentProgressiveLayer = null;\n\n            continue;\n          }\n\n          layerProgress = currentProgressiveLayer.__progress;\n\n          if (!currentProgressiveLayer.__dirty) {\n            // Keep rendering\n            frame = layerProgress;\n          }\n\n          currentProgressiveLayer.__progress = frame + 1;\n        }\n\n        if (elFrame === frame) {\n          this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);\n        }\n      } else {\n        this._doPaintEl(el, currentLayer, paintAll, scope);\n      }\n\n      el.__dirty = false;\n    }\n\n    if (currentProgressiveLayer) {\n      flushProgressiveLayer(currentProgressiveLayer);\n    } // Restore the lastLayer ctx\n\n\n    ctx && ctx.restore(); // If still has clipping state\n    // if (scope.prevElClipPaths) {\n    //     ctx.restore();\n    // }\n\n    this._furtherProgressive = false;\n    util.each(this._progressiveLayers, function (layer) {\n      if (layer.__maxProgress >= layer.__progress) {\n        this._furtherProgressive = true;\n      }\n    }, this);\n  },\n  _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n    var ctx = currentLayer.ctx;\n    var m = el.transform;\n\n    if ((currentLayer.__dirty || forcePaint) && // Ignore invisible element\n    !el.invisible // Ignore transparent element\n    && el.style.opacity !== 0 // Ignore scale 0 element, in some environment like node-canvas\n    // Draw a scale 0 element can cause all following draw wrong\n    // And setTransform with scale 0 will cause set back transform failed.\n    && !(m && !m[0] && !m[3]) // Ignore culled element\n    && !(el.culling && isDisplayableCulled(el, this._width, this._height))) {\n      var clipPaths = el.__clipPaths; // Optimize when clipping on group with several elements\n\n      if (scope.prevClipLayer !== currentLayer || isClipPathChanged(clipPaths, scope.prevElClipPaths)) {\n        // If has previous clipping state, restore from it\n        if (scope.prevElClipPaths) {\n          scope.prevClipLayer.ctx.restore();\n          scope.prevClipLayer = scope.prevElClipPaths = null; // Reset prevEl since context has been restored\n\n          scope.prevEl = null;\n        } // New clipping state\n\n\n        if (clipPaths) {\n          ctx.save();\n          doClip(clipPaths, ctx);\n          scope.prevClipLayer = currentLayer;\n          scope.prevElClipPaths = clipPaths;\n        }\n      }\n\n      el.beforeBrush && el.beforeBrush(ctx);\n      el.brush(ctx, scope.prevEl || null);\n      scope.prevEl = el;\n      el.afterBrush && el.afterBrush(ctx);\n    }\n  },\n\n  /**\n   * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n   * @param {number} zlevel\n   * @return {module:zrender/Layer}\n   */\n  getLayer: function (zlevel) {\n    if (this._singleCanvas) {\n      return this._layers[0];\n    }\n\n    var layer = this._layers[zlevel];\n\n    if (!layer) {\n      // Create a new layer\n      layer = new Layer('zr_' + zlevel, this, this.dpr);\n      layer.__builtin__ = true;\n\n      if (this._layerConfig[zlevel]) {\n        util.merge(layer, this._layerConfig[zlevel], true);\n      }\n\n      this.insertLayer(zlevel, layer); // Context is created after dom inserted to document\n      // Or excanvas will get 0px clientWidth and clientHeight\n\n      layer.initContext();\n    }\n\n    return layer;\n  },\n  insertLayer: function (zlevel, layer) {\n    var layersMap = this._layers;\n    var zlevelList = this._zlevelList;\n    var len = zlevelList.length;\n    var prevLayer = null;\n    var i = -1;\n    var domRoot = this._domRoot;\n\n    if (layersMap[zlevel]) {\n      log('ZLevel ' + zlevel + ' has been used already');\n      return;\n    } // Check if is a valid layer\n\n\n    if (!isLayerValid(layer)) {\n      log('Layer of zlevel ' + zlevel + ' is not valid');\n      return;\n    }\n\n    if (len > 0 && zlevel > zlevelList[0]) {\n      for (i = 0; i < len - 1; i++) {\n        if (zlevelList[i] < zlevel && zlevelList[i + 1] > zlevel) {\n          break;\n        }\n      }\n\n      prevLayer = layersMap[zlevelList[i]];\n    }\n\n    zlevelList.splice(i + 1, 0, zlevel);\n    layersMap[zlevel] = layer; // Vitual layer will not directly show on the screen.\n    // (It can be a WebGL layer and assigned to a ZImage element)\n    // But it still under management of zrender.\n\n    if (!layer.virtual) {\n      if (prevLayer) {\n        var prevDom = prevLayer.dom;\n\n        if (prevDom.nextSibling) {\n          domRoot.insertBefore(layer.dom, prevDom.nextSibling);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      } else {\n        if (domRoot.firstChild) {\n          domRoot.insertBefore(layer.dom, domRoot.firstChild);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      }\n    }\n  },\n  // Iterate each layer\n  eachLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      cb.call(context, this._layers[z], z);\n    }\n  },\n  // Iterate each buildin layer\n  eachBuiltinLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n  // Iterate each other layer except buildin layer\n  eachOtherLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (!layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n\n  /**\n   * 获取所有已创建的层\n   * @param {Array.<module:zrender/Layer>} [prevLayer]\n   */\n  getLayers: function () {\n    return this._layers;\n  },\n  _updateLayerStatus: function (list) {\n    var layers = this._layers;\n    var progressiveLayers = this._progressiveLayers;\n    var elCountsLastFrame = {};\n    var progressiveElCountsLastFrame = {};\n    this.eachBuiltinLayer(function (layer, z) {\n      elCountsLastFrame[z] = layer.elCount;\n      layer.elCount = 0;\n      layer.__dirty = false;\n    });\n    util.each(progressiveLayers, function (layer, idx) {\n      progressiveElCountsLastFrame[idx] = layer.elCount;\n      layer.elCount = 0;\n      layer.__dirty = false;\n    });\n    var progressiveLayerCount = 0;\n    var currentProgressiveLayer;\n    var lastProgressiveKey;\n    var frameCount = 0;\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      var el = list[i];\n      var zlevel = this._singleCanvas ? 0 : el.zlevel;\n      var layer = layers[zlevel];\n      var elProgress = el.progressive;\n\n      if (layer) {\n        layer.elCount++;\n        layer.__dirty = layer.__dirty || el.__dirty;\n      } /////// Update progressive\n\n\n      if (elProgress >= 0) {\n        // Fix wrong progressive sequence problem.\n        if (lastProgressiveKey !== elProgress) {\n          lastProgressiveKey = elProgress;\n          frameCount++;\n        }\n\n        var elFrame = el.__frame = frameCount - 1;\n\n        if (!currentProgressiveLayer) {\n          var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);\n          currentProgressiveLayer = progressiveLayers[idx];\n\n          if (!currentProgressiveLayer) {\n            currentProgressiveLayer = progressiveLayers[idx] = new Layer('progressive', this, this.dpr);\n            currentProgressiveLayer.initContext();\n          }\n\n          currentProgressiveLayer.__maxProgress = 0;\n        }\n\n        currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;\n        currentProgressiveLayer.elCount++;\n        currentProgressiveLayer.__maxProgress = Math.max(currentProgressiveLayer.__maxProgress, elFrame);\n\n        if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {\n          // Should keep rendering this  layer because progressive rendering is not finished yet\n          layer.__dirty = true;\n        }\n      } else {\n        el.__frame = -1;\n\n        if (currentProgressiveLayer) {\n          currentProgressiveLayer.__nextIdxNotProg = i;\n          progressiveLayerCount++;\n          currentProgressiveLayer = null;\n        }\n      }\n    }\n\n    if (currentProgressiveLayer) {\n      progressiveLayerCount++;\n      currentProgressiveLayer.__nextIdxNotProg = i;\n    } // 层中的元素数量有发生变化\n\n\n    this.eachBuiltinLayer(function (layer, z) {\n      if (elCountsLastFrame[z] !== layer.elCount) {\n        layer.__dirty = true;\n      }\n    });\n    progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);\n    util.each(progressiveLayers, function (layer, idx) {\n      if (progressiveElCountsLastFrame[idx] !== layer.elCount) {\n        el.__dirty = true;\n      }\n\n      if (layer.__dirty) {\n        layer.__progress = 0;\n      }\n    });\n  },\n\n  /**\n   * 清除hover层外所有内容\n   */\n  clear: function () {\n    this.eachBuiltinLayer(this._clearLayer);\n    return this;\n  },\n  _clearLayer: function (layer) {\n    layer.clear();\n  },\n\n  /**\n   * 修改指定zlevel的绘制参数\n   *\n   * @param {string} zlevel\n   * @param {Object} config 配置对象\n   * @param {string} [config.clearColor=0] 每次清空画布的颜色\n   * @param {string} [config.motionBlur=false] 是否开启动态模糊\n   * @param {number} [config.lastFrameAlpha=0.7]\n   *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   */\n  configLayer: function (zlevel, config) {\n    if (config) {\n      var layerConfig = this._layerConfig;\n\n      if (!layerConfig[zlevel]) {\n        layerConfig[zlevel] = config;\n      } else {\n        util.merge(layerConfig[zlevel], config, true);\n      }\n\n      var layer = this._layers[zlevel];\n\n      if (layer) {\n        util.merge(layer, layerConfig[zlevel], true);\n      }\n    }\n  },\n\n  /**\n   * 删除指定层\n   * @param {number} zlevel 层所在的zlevel\n   */\n  delLayer: function (zlevel) {\n    var layers = this._layers;\n    var zlevelList = this._zlevelList;\n    var layer = layers[zlevel];\n\n    if (!layer) {\n      return;\n    }\n\n    layer.dom.parentNode.removeChild(layer.dom);\n    delete layers[zlevel];\n    zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n  },\n\n  /**\n   * 区域大小变化后重绘\n   */\n  resize: function (width, height) {\n    var domRoot = this._domRoot; // FIXME Why ?\n\n    domRoot.style.display = 'none'; // Save input w/h\n\n    var opts = this._opts;\n    width != null && (opts.width = width);\n    height != null && (opts.height = height);\n    width = this._getSize(0);\n    height = this._getSize(1);\n    domRoot.style.display = ''; // 优化没有实际改变的resize\n\n    if (this._width != width || height != this._height) {\n      domRoot.style.width = width + 'px';\n      domRoot.style.height = height + 'px';\n\n      for (var id in this._layers) {\n        if (this._layers.hasOwnProperty(id)) {\n          this._layers[id].resize(width, height);\n        }\n      }\n\n      util.each(this._progressiveLayers, function (layer) {\n        layer.resize(width, height);\n      });\n      this.refresh(true);\n    }\n\n    this._width = width;\n    this._height = height;\n    return this;\n  },\n\n  /**\n   * 清除单独的一个层\n   * @param {number} zlevel\n   */\n  clearLayer: function (zlevel) {\n    var layer = this._layers[zlevel];\n\n    if (layer) {\n      layer.clear();\n    }\n  },\n\n  /**\n   * 释放\n   */\n  dispose: function () {\n    this.root.innerHTML = '';\n    this.root = this.storage = this._domRoot = this._layers = null;\n  },\n\n  /**\n   * Get canvas which has all thing rendered\n   * @param {Object} opts\n   * @param {string} [opts.backgroundColor]\n   * @param {number} [opts.pixelRatio]\n   */\n  getRenderedCanvas: function (opts) {\n    opts = opts || {};\n\n    if (this._singleCanvas) {\n      return this._layers[0].dom;\n    }\n\n    var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n    imageLayer.initContext();\n    imageLayer.clearColor = opts.backgroundColor;\n    imageLayer.clear();\n    var displayList = this.storage.getDisplayList(true);\n    var scope = {};\n    var zlevel;\n    var self = this;\n\n    function findAndDrawOtherLayer(smaller, larger) {\n      var zlevelList = self._zlevelList;\n\n      if (smaller == null) {\n        smaller = -Infinity;\n      }\n\n      var intermediateLayer;\n\n      for (var i = 0; i < zlevelList.length; i++) {\n        var z = zlevelList[i];\n        var layer = self._layers[z];\n\n        if (!layer.__builtin__ && z > smaller && z < larger) {\n          intermediateLayer = layer;\n          break;\n        }\n      }\n\n      if (intermediateLayer && intermediateLayer.renderToCanvas) {\n        imageLayer.ctx.save();\n        intermediateLayer.renderToCanvas(imageLayer.ctx);\n        imageLayer.ctx.restore();\n      }\n    }\n\n    for (var i = 0; i < displayList.length; i++) {\n      var el = displayList[i];\n\n      if (el.zlevel !== zlevel) {\n        findAndDrawOtherLayer(zlevel, el.zlevel);\n        zlevel = el.zlevel;\n      }\n\n      this._doPaintEl(el, imageLayer, true, scope);\n    }\n\n    findAndDrawOtherLayer(zlevel, Infinity);\n    return imageLayer.dom;\n  },\n\n  /**\n   * 获取绘图区域宽度\n   */\n  getWidth: function () {\n    return this._width;\n  },\n\n  /**\n   * 获取绘图区域高度\n   */\n  getHeight: function () {\n    return this._height;\n  },\n  _getSize: function (whIdx) {\n    var opts = this._opts;\n    var wh = ['width', 'height'][whIdx];\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n    if (opts[wh] != null && opts[wh] !== 'auto') {\n      return parseFloat(opts[wh]);\n    }\n\n    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.\n\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n  },\n  pathToImage: function (path, dpr) {\n    dpr = dpr || this.dpr;\n    var canvas = document.createElement('canvas');\n    var ctx = canvas.getContext('2d');\n    var rect = path.getBoundingRect();\n    var style = path.style;\n    var shadowBlurSize = style.shadowBlur;\n    var shadowOffsetX = style.shadowOffsetX;\n    var shadowOffsetY = style.shadowOffsetY;\n    var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n    var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n    var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n    var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n    var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n    var width = rect.width + leftMargin + rightMargin;\n    var height = rect.height + topMargin + bottomMargin;\n    canvas.width = width * dpr;\n    canvas.height = height * dpr;\n    ctx.scale(dpr, dpr);\n    ctx.clearRect(0, 0, width, height);\n    ctx.dpr = dpr;\n    var pathTransform = {\n      position: path.position,\n      rotation: path.rotation,\n      scale: path.scale\n    };\n    path.position = [leftMargin - rect.x, topMargin - rect.y];\n    path.rotation = 0;\n    path.scale = [1, 1];\n    path.updateTransform();\n\n    if (path) {\n      path.brush(ctx);\n    }\n\n    var ImageShape = Image;\n    var imgShape = new ImageShape({\n      style: {\n        x: 0,\n        y: 0,\n        image: canvas\n      }\n    });\n\n    if (pathTransform.position != null) {\n      imgShape.position = path.position = pathTransform.position;\n    }\n\n    if (pathTransform.rotation != null) {\n      imgShape.rotation = path.rotation = pathTransform.rotation;\n    }\n\n    if (pathTransform.scale != null) {\n      imgShape.scale = path.scale = pathTransform.scale;\n    }\n\n    return imgShape;\n  }\n};\nvar _default = Painter;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1097:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar util = __webpack_require__(978);\n\nvar _config = __webpack_require__(1010);\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar Style = __webpack_require__(1046);\n\nvar Pattern = __webpack_require__(1047);\n\n/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\nfunction returnFalse() {\n  return false;\n}\n/**\n * 创建dom\n *\n * @inner\n * @param {string} id dom id 待用\n * @param {Painter} painter painter instance\n * @param {number} number\n */\n\n\nfunction createDom(id, painter, dpr) {\n  var newDom = util.createCanvas();\n  var width = painter.getWidth();\n  var height = painter.getHeight();\n  var newDomStyle = newDom.style; // 没append呢，请原谅我这样写，清晰~\n\n  newDomStyle.position = 'absolute';\n  newDomStyle.left = 0;\n  newDomStyle.top = 0;\n  newDomStyle.width = width + 'px';\n  newDomStyle.height = height + 'px';\n  newDom.width = width * dpr;\n  newDom.height = height * dpr; // id不作为索引用，避免可能造成的重名，定义为私有属性\n\n  newDom.setAttribute('data-zr-dom-id', id);\n  return newDom;\n}\n/**\n * @alias module:zrender/Layer\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @param {string} id\n * @param {module:zrender/Painter} painter\n * @param {number} [dpr]\n */\n\n\nvar Layer = function (id, painter, dpr) {\n  var dom;\n  dpr = dpr || devicePixelRatio;\n\n  if (typeof id === 'string') {\n    dom = createDom(id, painter, dpr);\n  } // Not using isDom because in node it will return false\n  else if (util.isObject(id)) {\n      dom = id;\n      id = dom.id;\n    }\n\n  this.id = id;\n  this.dom = dom;\n  var domStyle = dom.style;\n\n  if (domStyle) {\n    // Not in node\n    dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n    domStyle['-webkit-user-select'] = 'none';\n    domStyle['user-select'] = 'none';\n    domStyle['-webkit-touch-callout'] = 'none';\n    domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n    domStyle['padding'] = 0;\n    domStyle['margin'] = 0;\n    domStyle['border-width'] = 0;\n  }\n\n  this.domBack = null;\n  this.ctxBack = null;\n  this.painter = painter;\n  this.config = null; // Configs\n\n  /**\n   * 每次清空画布的颜色\n   * @type {string}\n   * @default 0\n   */\n\n  this.clearColor = 0;\n  /**\n   * 是否开启动态模糊\n   * @type {boolean}\n   * @default false\n   */\n\n  this.motionBlur = false;\n  /**\n   * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   * @type {number}\n   * @default 0.7\n   */\n\n  this.lastFrameAlpha = 0.7;\n  /**\n   * Layer dpr\n   * @type {number}\n   */\n\n  this.dpr = dpr;\n};\n\nLayer.prototype = {\n  constructor: Layer,\n  elCount: 0,\n  __dirty: true,\n  initContext: function () {\n    this.ctx = this.dom.getContext('2d');\n    this.ctx.__currentValues = {};\n    this.ctx.dpr = this.dpr;\n  },\n  createBackBuffer: function () {\n    var dpr = this.dpr;\n    this.domBack = createDom('back-' + this.id, this.painter, dpr);\n    this.ctxBack = this.domBack.getContext('2d');\n    this.ctxBack.__currentValues = {};\n\n    if (dpr != 1) {\n      this.ctxBack.scale(dpr, dpr);\n    }\n  },\n\n  /**\n   * @param  {number} width\n   * @param  {number} height\n   */\n  resize: function (width, height) {\n    var dpr = this.dpr;\n    var dom = this.dom;\n    var domStyle = dom.style;\n    var domBack = this.domBack;\n    domStyle.width = width + 'px';\n    domStyle.height = height + 'px';\n    dom.width = width * dpr;\n    dom.height = height * dpr;\n\n    if (domBack) {\n      domBack.width = width * dpr;\n      domBack.height = height * dpr;\n\n      if (dpr != 1) {\n        this.ctxBack.scale(dpr, dpr);\n      }\n    }\n  },\n\n  /**\n   * 清空该层画布\n   * @param {boolean} clearAll Clear all with out motion blur\n   */\n  clear: function (clearAll) {\n    var dom = this.dom;\n    var ctx = this.ctx;\n    var width = dom.width;\n    var height = dom.height;\n    var clearColor = this.clearColor;\n    var haveMotionBLur = this.motionBlur && !clearAll;\n    var lastFrameAlpha = this.lastFrameAlpha;\n    var dpr = this.dpr;\n\n    if (haveMotionBLur) {\n      if (!this.domBack) {\n        this.createBackBuffer();\n      }\n\n      this.ctxBack.globalCompositeOperation = 'copy';\n      this.ctxBack.drawImage(dom, 0, 0, width / dpr, height / dpr);\n    }\n\n    ctx.clearRect(0, 0, width, height);\n\n    if (clearColor) {\n      var clearColorGradientOrPattern; // Gradient\n\n      if (clearColor.colorStops) {\n        // Cache canvas gradient\n        clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n          x: 0,\n          y: 0,\n          width: width,\n          height: height\n        });\n        clearColor.__canvasGradient = clearColorGradientOrPattern;\n      } // Pattern\n      else if (clearColor.image) {\n          clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n        }\n\n      ctx.save();\n      ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    if (haveMotionBLur) {\n      var domBack = this.domBack;\n      ctx.save();\n      ctx.globalAlpha = lastFrameAlpha;\n      ctx.drawImage(domBack, 0, 0, width, height);\n      ctx.restore();\n    }\n  }\n};\nvar _default = Layer;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1098:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar util = __webpack_require__(978);\n\nvar _event = __webpack_require__(998);\n\nvar Dispatcher = _event.Dispatcher;\n\nvar requestAnimationFrame = __webpack_require__(1048);\n\nvar Animator = __webpack_require__(1044);\n\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n/**\n * @typedef {Object} IZRenderStage\n * @property {Function} update\n */\n\n/**\n * @alias module:zrender/animation/Animation\n * @constructor\n * @param {Object} [options]\n * @param {Function} [options.onframe]\n * @param {IZRenderStage} [options.stage]\n * @example\n *     var animation = new Animation();\n *     var obj = {\n *         x: 100,\n *         y: 100\n *     };\n *     animation.animate(node.position)\n *         .when(1000, {\n *             x: 500,\n *             y: 500\n *         })\n *         .when(2000, {\n *             x: 100,\n *             y: 100\n *         })\n *         .start('spline');\n */\nvar Animation = function (options) {\n  options = options || {};\n  this.stage = options.stage || {};\n\n  this.onframe = options.onframe || function () {}; // private properties\n\n\n  this._clips = [];\n  this._running = false;\n  this._time;\n  this._pausedTime;\n  this._pauseStart;\n  this._paused = false;\n  Dispatcher.call(this);\n};\n\nAnimation.prototype = {\n  constructor: Animation,\n\n  /**\n   * 添加 clip\n   * @param {module:zrender/animation/Clip} clip\n   */\n  addClip: function (clip) {\n    this._clips.push(clip);\n  },\n\n  /**\n   * 添加 animator\n   * @param {module:zrender/animation/Animator} animator\n   */\n  addAnimator: function (animator) {\n    animator.animation = this;\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.addClip(clips[i]);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Clip} clip\n   */\n  removeClip: function (clip) {\n    var idx = util.indexOf(this._clips, clip);\n\n    if (idx >= 0) {\n      this._clips.splice(idx, 1);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Animator} animator\n   */\n  removeAnimator: function (animator) {\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.removeClip(clips[i]);\n    }\n\n    animator.animation = null;\n  },\n  _update: function () {\n    var time = new Date().getTime() - this._pausedTime;\n\n    var delta = time - this._time;\n    var clips = this._clips;\n    var len = clips.length;\n    var deferredEvents = [];\n    var deferredClips = [];\n\n    for (var i = 0; i < len; i++) {\n      var clip = clips[i];\n      var e = clip.step(time, delta); // Throw out the events need to be called after\n      // stage.update, like destroy\n\n      if (e) {\n        deferredEvents.push(e);\n        deferredClips.push(clip);\n      }\n    } // Remove the finished clip\n\n\n    for (var i = 0; i < len;) {\n      if (clips[i]._needsRemove) {\n        clips[i] = clips[len - 1];\n        clips.pop();\n        len--;\n      } else {\n        i++;\n      }\n    }\n\n    len = deferredEvents.length;\n\n    for (var i = 0; i < len; i++) {\n      deferredClips[i].fire(deferredEvents[i]);\n    }\n\n    this._time = time;\n    this.onframe(delta);\n    this.trigger('frame', delta);\n\n    if (this.stage.update) {\n      this.stage.update();\n    }\n  },\n  _startLoop: function () {\n    var self = this;\n    this._running = true;\n\n    function step() {\n      if (self._running) {\n        requestAnimationFrame(step);\n        !self._paused && self._update();\n      }\n    }\n\n    requestAnimationFrame(step);\n  },\n\n  /**\n   * 开始运行动画\n   */\n  start: function () {\n    this._time = new Date().getTime();\n    this._pausedTime = 0;\n\n    this._startLoop();\n  },\n\n  /**\n   * 停止运行动画\n   */\n  stop: function () {\n    this._running = false;\n  },\n\n  /**\n   * Pause\n   */\n  pause: function () {\n    if (!this._paused) {\n      this._pauseStart = new Date().getTime();\n      this._paused = true;\n    }\n  },\n\n  /**\n   * Resume\n   */\n  resume: function () {\n    if (this._paused) {\n      this._pausedTime += new Date().getTime() - this._pauseStart;\n      this._paused = false;\n    }\n  },\n\n  /**\n   * 清除所有动画片段\n   */\n  clear: function () {\n    this._clips = [];\n  },\n\n  /**\n   * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n   * @param  {Object} target\n   * @param  {Object} options\n   * @param  {boolean} [options.loop=false] 是否循环播放动画\n   * @param  {Function} [options.getter=null]\n   *         如果指定getter函数，会通过getter函数取属性值\n   * @param  {Function} [options.setter=null]\n   *         如果指定setter函数，会通过setter函数设置属性值\n   * @return {module:zrender/animation/Animation~Animator}\n   */\n  // TODO Gap\n  animate: function (target, options) {\n    options = options || {};\n    var animator = new Animator(target, options.loop, options.getter, options.setter);\n    this.addAnimator(animator);\n    return animator;\n  }\n};\nutil.mixin(Animation, Dispatcher);\nvar _default = Animation;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1099:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _event = __webpack_require__(998);\n\nvar addEventListener = _event.addEventListener;\nvar removeEventListener = _event.removeEventListener;\nvar normalizeEvent = _event.normalizeEvent;\n\nvar zrUtil = __webpack_require__(978);\n\nvar Eventful = __webpack_require__(1001);\n\nvar env = __webpack_require__(986);\n\nvar GestureMgr = __webpack_require__(1100);\n\nvar TOUCH_CLICK_DELAY = 300;\nvar mouseHandlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\nvar touchHandlerNames = ['touchstart', 'touchend', 'touchmove'];\nvar pointerEventNames = {\n  pointerdown: 1,\n  pointerup: 1,\n  pointermove: 1,\n  pointerout: 1\n};\nvar pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n  var nm = name.replace('mouse', 'pointer');\n  return pointerEventNames[nm] ? nm : name;\n});\n\nfunction eventNameFix(name) {\n  return name === 'mousewheel' && env.browser.firefox ? 'DOMMouseScroll' : name;\n}\n\nfunction processGesture(proxy, event, stage) {\n  var gestureMgr = proxy._gestureMgr;\n  stage === 'start' && gestureMgr.clear();\n  var gestureInfo = gestureMgr.recognize(event, proxy.handler.findHover(event.zrX, event.zrY, null).target, proxy.dom);\n  stage === 'end' && gestureMgr.clear(); // Do not do any preventDefault here. Upper application do that if necessary.\n\n  if (gestureInfo) {\n    var type = gestureInfo.type;\n    event.gestureEvent = type;\n    proxy.handler.dispatchToElement({\n      target: gestureInfo.target\n    }, type, gestureInfo.event);\n  }\n} // function onMSGestureChange(proxy, event) {\n//     if (event.translationX || event.translationY) {\n//         // mousemove is carried by MSGesture to reduce the sensitivity.\n//         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n//     }\n//     if (event.scale !== 1) {\n//         event.pinchX = event.offsetX;\n//         event.pinchY = event.offsetY;\n//         event.pinchScale = event.scale;\n//         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n//     }\n// }\n\n/**\n * Prevent mouse event from being dispatched after Touch Events action\n * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n * Result: Blocking Mouse Events for 700ms.\n */\n\n\nfunction setTouchTimer(instance) {\n  instance._touching = true;\n  clearTimeout(instance._touchTimer);\n  instance._touchTimer = setTimeout(function () {\n    instance._touching = false;\n  }, 700);\n}\n\nvar domHandlers = {\n  /**\n   * Mouse move handler\n   * @inner\n   * @param {Event} event\n   */\n  mousemove: function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger('mousemove', event);\n  },\n\n  /**\n   * Mouse out handler\n   * @inner\n   * @param {Event} event\n   */\n  mouseout: function (event) {\n    event = normalizeEvent(this.dom, event);\n    var element = event.toElement || event.relatedTarget;\n\n    if (element != this.dom) {\n      while (element && element.nodeType != 9) {\n        // 忽略包含在root中的dom引起的mouseOut\n        if (element === this.dom) {\n          return;\n        }\n\n        element = element.parentNode;\n      }\n    }\n\n    this.trigger('mouseout', event);\n  },\n\n  /**\n   * Touch开始响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchstart: function (event) {\n    // Default mouse behaviour should not be disabled here.\n    // For example, page may needs to be slided.\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    this._lastTouchMoment = new Date();\n    processGesture(this, event, 'start'); // In touch device, trigger `mousemove`(`mouseover`) should\n    // be triggered, and must before `mousedown` triggered.\n\n    domHandlers.mousemove.call(this, event);\n    domHandlers.mousedown.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch移动响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchmove: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'change'); // Mouse move should always be triggered no matter whether\n    // there is gestrue event, because mouse move and pinch may\n    // be used at the same time.\n\n    domHandlers.mousemove.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch结束响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchend: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'end');\n    domHandlers.mouseup.call(this, event); // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n    // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n    // we can conveniently implement \"hover style\" in both PC and touch device just\n    // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n    // to remove \"hover style\" on an element, without any additional code for\n    // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n    // style\" will remain for user view)\n    // click event should always be triggered no matter whether\n    // there is gestrue event. System click can not be prevented.\n\n    if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n      domHandlers.click.call(this, event);\n    }\n\n    setTouchTimer(this);\n  },\n  pointerdown: function (event) {\n    domHandlers.mousedown.call(this, event); // if (useMSGuesture(this, event)) {\n    //     this._msGesture.addPointer(event.pointerId);\n    // }\n  },\n  pointermove: function (event) {\n    // FIXME\n    // pointermove is so sensitive that it always triggered when\n    // tap(click) on touch screen, which affect some judgement in\n    // upper application. So, we dont support mousemove on MS touch\n    // device yet.\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mousemove.call(this, event);\n    }\n  },\n  pointerup: function (event) {\n    domHandlers.mouseup.call(this, event);\n  },\n  pointerout: function (event) {\n    // pointerout will be triggered when tap on touch screen\n    // (IE11+/Edge on MS Surface) after click event triggered,\n    // which is inconsistent with the mousout behavior we defined\n    // in touchend. So we unify them.\n    // (check domHandlers.touchend for detailed explanation)\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mouseout.call(this, event);\n    }\n  }\n};\n\nfunction isPointerFromTouch(event) {\n  var pointerType = event.pointerType;\n  return pointerType === 'pen' || pointerType === 'touch';\n} // function useMSGuesture(handlerProxy, event) {\n//     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n// }\n// Common handlers\n\n\nzrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  domHandlers[name] = function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger(name, event);\n  };\n});\n/**\n * 为控制类实例初始化dom 事件处理函数\n *\n * @inner\n * @param {module:zrender/Handler} instance 控制类实例\n */\n\nfunction initDomHandler(instance) {\n  zrUtil.each(touchHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(pointerHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(mouseHandlerNames, function (name) {\n    instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n  });\n\n  function makeMouseHandler(fn, instance) {\n    return function () {\n      if (instance._touching) {\n        return;\n      }\n\n      return fn.apply(instance, arguments);\n    };\n  }\n}\n\nfunction HandlerDomProxy(dom) {\n  Eventful.call(this);\n  this.dom = dom;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._touching = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._touchTimer;\n  /**\n   * @private\n   * @type {module:zrender/core/GestureMgr}\n   */\n\n  this._gestureMgr = new GestureMgr();\n  this._handlers = {};\n  initDomHandler(this);\n\n  if (env.pointerEventsSupported) {\n    // Only IE11+/Edge\n    // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n    // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n    // at the same time.\n    // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n    // screen, which do not occurs in pointer event.\n    // So we use pointer event to both detect touch gesture and mouse behavior.\n    mountHandlers(pointerHandlerNames, this); // FIXME\n    // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n    // which does not prevent defuault behavior occasionally (which may cause view port\n    // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n    // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n    // touch screen. And we only support click behavior on MS touch screen now.\n    // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n    // We dont support touch on IE on win7.\n    // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n    // if (typeof MSGesture === 'function') {\n    //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n    //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n    // }\n  } else {\n    if (env.touchEventsSupported) {\n      mountHandlers(touchHandlerNames, this); // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n      // addEventListener(root, 'mouseout', this._mouseoutHandler);\n    } // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n    // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n    // mouse event can not be handle in those devices.\n    // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n    // mouseevent after touch event triggered, see `setTouchTimer`.\n\n\n    mountHandlers(mouseHandlerNames, this);\n  }\n\n  function mountHandlers(handlerNames, instance) {\n    zrUtil.each(handlerNames, function (name) {\n      addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n    }, instance);\n  }\n}\n\nvar handlerDomProxyProto = HandlerDomProxy.prototype;\n\nhandlerDomProxyProto.dispose = function () {\n  var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n  for (var i = 0; i < handlerNames.length; i++) {\n    var name = handlerNames[i];\n    removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n  }\n};\n\nhandlerDomProxyProto.setCursor = function (cursorStyle) {\n  this.dom.style.cursor = cursorStyle || 'default';\n};\n\nzrUtil.mixin(HandlerDomProxy, Eventful);\nvar _default = HandlerDomProxy;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1100:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar eventUtil = __webpack_require__(998);\n\n/**\n * Only implements needed gestures for mobile.\n */\nvar GestureMgr = function () {\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n  this._track = [];\n};\n\nGestureMgr.prototype = {\n  constructor: GestureMgr,\n  recognize: function (event, target, root) {\n    this._doTrack(event, target, root);\n\n    return this._recognize(event);\n  },\n  clear: function () {\n    this._track.length = 0;\n    return this;\n  },\n  _doTrack: function (event, target, root) {\n    var touches = event.touches;\n\n    if (!touches) {\n      return;\n    }\n\n    var trackItem = {\n      points: [],\n      touches: [],\n      target: target,\n      event: event\n    };\n\n    for (var i = 0, len = touches.length; i < len; i++) {\n      var touch = touches[i];\n      var pos = eventUtil.clientToLocal(root, touch, {});\n      trackItem.points.push([pos.zrX, pos.zrY]);\n      trackItem.touches.push(touch);\n    }\n\n    this._track.push(trackItem);\n  },\n  _recognize: function (event) {\n    for (var eventName in recognizers) {\n      if (recognizers.hasOwnProperty(eventName)) {\n        var gestureInfo = recognizers[eventName](this._track, event);\n\n        if (gestureInfo) {\n          return gestureInfo;\n        }\n      }\n    }\n  }\n};\n\nfunction dist(pointPair) {\n  var dx = pointPair[1][0] - pointPair[0][0];\n  var dy = pointPair[1][1] - pointPair[0][1];\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\nfunction center(pointPair) {\n  return [(pointPair[0][0] + pointPair[1][0]) / 2, (pointPair[0][1] + pointPair[1][1]) / 2];\n}\n\nvar recognizers = {\n  pinch: function (track, event) {\n    var trackLen = track.length;\n\n    if (!trackLen) {\n      return;\n    }\n\n    var pinchEnd = (track[trackLen - 1] || {}).points;\n    var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n    if (pinchPre && pinchPre.length > 1 && pinchEnd && pinchEnd.length > 1) {\n      var pinchScale = dist(pinchEnd) / dist(pinchPre);\n      !isFinite(pinchScale) && (pinchScale = 1);\n      event.pinchScale = pinchScale;\n      var pinchCenter = center(pinchEnd);\n      event.pinchX = pinchCenter[0];\n      event.pinchY = pinchCenter[1];\n      return {\n        type: 'pinch',\n        target: track[0].target,\n        event: event\n      };\n    }\n  } // Only pinch currently.\n\n};\nvar _default = GestureMgr;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1101:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(983);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(978);\n\nvar modelUtil = __webpack_require__(982);\n\nvar Model = __webpack_require__(989);\n\nvar ComponentModel = __webpack_require__(991);\n\nvar globalDefault = __webpack_require__(1125);\n\nvar colorPaletteMinin = __webpack_require__(1053);\n\n/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n/**\n * Caution: If the mechanism should be changed some day, these cases\n * should be considered:\n *\n * (1) In `merge option` mode, if using the same option to call `setOption`\n * many times, the result should be the same (try our best to ensure that).\n * (2) In `merge option` mode, if a component has no id/name specified, it\n * will be merged by index, and the result sequence of the components is\n * consistent to the original sequence.\n * (3) `reset` feature (in toolbox). Find detailed info in comments about\n * `mergeOption` in module:echarts/model/OptionManager.\n */\nvar each = zrUtil.each;\nvar filter = zrUtil.filter;\nvar map = zrUtil.map;\nvar isArray = zrUtil.isArray;\nvar indexOf = zrUtil.indexOf;\nvar isObject = zrUtil.isObject;\nvar OPTION_INNER_KEY = '\\0_ec_inner';\n/**\n * @alias module:echarts/model/Global\n *\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {Object} theme\n */\n\nvar GlobalModel = Model.extend({\n  constructor: GlobalModel,\n  init: function (option, parentModel, theme, optionManager) {\n    theme = theme || {};\n    this.option = null; // Mark as not initialized.\n\n    /**\n     * @type {module:echarts/model/Model}\n     * @private\n     */\n\n    this._theme = new Model(theme);\n    /**\n     * @type {module:echarts/model/OptionManager}\n     */\n\n    this._optionManager = optionManager;\n  },\n  setOption: function (option, optionPreprocessorFuncs) {\n    zrUtil.assert(!(OPTION_INNER_KEY in option), 'please use chart.getOption()');\n\n    this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n    this.resetOption(null);\n  },\n\n  /**\n   * @param {string} type null/undefined: reset all.\n   *                      'recreate': force recreate all.\n   *                      'timeline': only reset timeline option\n   *                      'media': only reset media query option\n   * @return {boolean} Whether option changed.\n   */\n  resetOption: function (type) {\n    var optionChanged = false;\n    var optionManager = this._optionManager;\n\n    if (!type || type === 'recreate') {\n      var baseOption = optionManager.mountOption(type === 'recreate');\n\n      if (!this.option || type === 'recreate') {\n        initBase.call(this, baseOption);\n      } else {\n        this.restoreData();\n        this.mergeOption(baseOption);\n      }\n\n      optionChanged = true;\n    }\n\n    if (type === 'timeline' || type === 'media') {\n      this.restoreData();\n    }\n\n    if (!type || type === 'recreate' || type === 'timeline') {\n      var timelineOption = optionManager.getTimelineOption(this);\n      timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n    }\n\n    if (!type || type === 'recreate' || type === 'media') {\n      var mediaOptions = optionManager.getMediaOption(this, this._api);\n\n      if (mediaOptions.length) {\n        each(mediaOptions, function (mediaOption) {\n          this.mergeOption(mediaOption, optionChanged = true);\n        }, this);\n      }\n    }\n\n    return optionChanged;\n  },\n\n  /**\n   * @protected\n   */\n  mergeOption: function (newOption) {\n    var option = this.option;\n    var componentsMap = this._componentsMap;\n    var newCptTypes = []; // 如果不存在对应的 component model 则直接 merge\n\n    each(newOption, function (componentOption, mainType) {\n      if (componentOption == null) {\n        return;\n      }\n\n      if (!ComponentModel.hasClass(mainType)) {\n        option[mainType] = option[mainType] == null ? zrUtil.clone(componentOption) : zrUtil.merge(option[mainType], componentOption, true);\n      } else {\n        newCptTypes.push(mainType);\n      }\n    }); // FIXME OPTION 同步是否要改回原来的\n\n    ComponentModel.topologicalTravel(newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this);\n    this._seriesIndices = this._seriesIndices || [];\n\n    function visitComponent(mainType, dependencies) {\n      var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n      var mapResult = modelUtil.mappingToExists(componentsMap.get(mainType), newCptOptionList);\n      modelUtil.makeIdAndName(mapResult); // Set mainType and complete subType.\n\n      each(mapResult, function (item, index) {\n        var opt = item.option;\n\n        if (isObject(opt)) {\n          item.keyInfo.mainType = mainType;\n          item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n        }\n      });\n      var dependentModels = getComponentsByTypes(componentsMap, dependencies);\n      option[mainType] = [];\n      componentsMap.set(mainType, []);\n      each(mapResult, function (resultItem, index) {\n        var componentModel = resultItem.exist;\n        var newCptOption = resultItem.option;\n        zrUtil.assert(isObject(newCptOption) || componentModel, 'Empty component definition'); // Consider where is no new option and should be merged using {},\n        // see removeEdgeAndAdd in topologicalTravel and\n        // ComponentModel.getAllClassMainTypes.\n\n        if (!newCptOption) {\n          componentModel.mergeOption({}, this);\n          componentModel.optionUpdated({}, false);\n        } else {\n          var ComponentModelClass = ComponentModel.getClass(mainType, resultItem.keyInfo.subType, true);\n\n          if (componentModel && componentModel instanceof ComponentModelClass) {\n            componentModel.name = resultItem.keyInfo.name;\n            componentModel.mergeOption(newCptOption, this);\n            componentModel.optionUpdated(newCptOption, false);\n          } else {\n            // PENDING Global as parent ?\n            var extraOpt = zrUtil.extend({\n              dependentModels: dependentModels,\n              componentIndex: index\n            }, resultItem.keyInfo);\n            componentModel = new ComponentModelClass(newCptOption, this, this, extraOpt);\n            zrUtil.extend(componentModel, extraOpt);\n            componentModel.init(newCptOption, this, this, extraOpt); // Call optionUpdated after init.\n            // newCptOption has been used as componentModel.option\n            // and may be merged with theme and default, so pass null\n            // to avoid confusion.\n\n            componentModel.optionUpdated(null, true);\n          }\n        }\n\n        componentsMap.get(mainType)[index] = componentModel;\n        option[mainType][index] = componentModel.option;\n      }, this); // Backup series for filtering.\n\n      if (mainType === 'series') {\n        this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n      }\n    }\n  },\n\n  /**\n   * Get option for output (cloned option and inner info removed)\n   * @public\n   * @return {Object}\n   */\n  getOption: function () {\n    var option = zrUtil.clone(this.option);\n    each(option, function (opts, mainType) {\n      if (ComponentModel.hasClass(mainType)) {\n        var opts = modelUtil.normalizeToArray(opts);\n\n        for (var i = opts.length - 1; i >= 0; i--) {\n          // Remove options with inner id.\n          if (modelUtil.isIdInner(opts[i])) {\n            opts.splice(i, 1);\n          }\n        }\n\n        option[mainType] = opts;\n      }\n    });\n    delete option[OPTION_INNER_KEY];\n    return option;\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getTheme: function () {\n    return this._theme;\n  },\n\n  /**\n   * @param {string} mainType\n   * @param {number} [idx=0]\n   * @return {module:echarts/model/Component}\n   */\n  getComponent: function (mainType, idx) {\n    var list = this._componentsMap.get(mainType);\n\n    if (list) {\n      return list[idx || 0];\n    }\n  },\n\n  /**\n   * If none of index and id and name used, return all components with mainType.\n   * @param {Object} condition\n   * @param {string} condition.mainType\n   * @param {string} [condition.subType] If ignore, only query by mainType\n   * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  queryComponents: function (condition) {\n    var mainType = condition.mainType;\n\n    if (!mainType) {\n      return [];\n    }\n\n    var index = condition.index;\n    var id = condition.id;\n    var name = condition.name;\n\n    var cpts = this._componentsMap.get(mainType);\n\n    if (!cpts || !cpts.length) {\n      return [];\n    }\n\n    var result;\n\n    if (index != null) {\n      if (!isArray(index)) {\n        index = [index];\n      }\n\n      result = filter(map(index, function (idx) {\n        return cpts[idx];\n      }), function (val) {\n        return !!val;\n      });\n    } else if (id != null) {\n      var isIdArray = isArray(id);\n      result = filter(cpts, function (cpt) {\n        return isIdArray && indexOf(id, cpt.id) >= 0 || !isIdArray && cpt.id === id;\n      });\n    } else if (name != null) {\n      var isNameArray = isArray(name);\n      result = filter(cpts, function (cpt) {\n        return isNameArray && indexOf(name, cpt.name) >= 0 || !isNameArray && cpt.name === name;\n      });\n    } else {\n      // Return all components with mainType\n      result = cpts.slice();\n    }\n\n    return filterBySubType(result, condition);\n  },\n\n  /**\n   * The interface is different from queryComponents,\n   * which is convenient for inner usage.\n   *\n   * @usage\n   * var result = findComponents(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series'},\n   *     function (model, index) {...}\n   * );\n   * // result like [component0, componnet1, ...]\n   *\n   * @param {Object} condition\n   * @param {string} condition.mainType Mandatory.\n   * @param {string} [condition.subType] Optional.\n   * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n   *        where xxx is mainType.\n   *        If query attribute is null/undefined or has no index/id/name,\n   *        do not filtering by query conditions, which is convenient for\n   *        no-payload situations or when target of action is global.\n   * @param {Function} [condition.filter] parameter: component, return boolean.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  findComponents: function (condition) {\n    var query = condition.query;\n    var mainType = condition.mainType;\n    var queryCond = getQueryCond(query);\n    var result = queryCond ? this.queryComponents(queryCond) : this._componentsMap.get(mainType);\n    return doFilter(filterBySubType(result, condition));\n\n    function getQueryCond(q) {\n      var indexAttr = mainType + 'Index';\n      var idAttr = mainType + 'Id';\n      var nameAttr = mainType + 'Name';\n      return q && (q[indexAttr] != null || q[idAttr] != null || q[nameAttr] != null) ? {\n        mainType: mainType,\n        // subType will be filtered finally.\n        index: q[indexAttr],\n        id: q[idAttr],\n        name: q[nameAttr]\n      } : null;\n    }\n\n    function doFilter(res) {\n      return condition.filter ? filter(res, condition.filter) : res;\n    }\n  },\n\n  /**\n   * @usage\n   * eachComponent('legend', function (legendModel, index) {\n   *     ...\n   * });\n   * eachComponent(function (componentType, model, index) {\n   *     // componentType does not include subType\n   *     // (componentType is 'xxx' but not 'xxx.aa')\n   * });\n   * eachComponent(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n   *     function (model, index) {...}\n   * );\n   * eachComponent(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n   *     function (model, index) {...}\n   * );\n   *\n   * @param {string|Object=} mainType When mainType is object, the definition\n   *                                  is the same as the method 'findComponents'.\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachComponent: function (mainType, cb, context) {\n    var componentsMap = this._componentsMap;\n\n    if (typeof mainType === 'function') {\n      context = cb;\n      cb = mainType;\n      componentsMap.each(function (components, componentType) {\n        each(components, function (component, index) {\n          cb.call(context, componentType, component, index);\n        });\n      });\n    } else if (zrUtil.isString(mainType)) {\n      each(componentsMap.get(mainType), cb, context);\n    } else if (isObject(mainType)) {\n      var queryResult = this.findComponents(mainType);\n      each(queryResult, cb, context);\n    }\n  },\n\n  /**\n   * @param {string} name\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByName: function (name) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.name === name;\n    });\n  },\n\n  /**\n   * @param {number} seriesIndex\n   * @return {module:echarts/model/Series}\n   */\n  getSeriesByIndex: function (seriesIndex) {\n    return this._componentsMap.get('series')[seriesIndex];\n  },\n\n  /**\n   * @param {string} subType\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByType: function (subType) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.subType === subType;\n    });\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeries: function () {\n    return this._componentsMap.get('series').slice();\n  },\n\n  /**\n   * After filtering, series may be different\n   * frome raw series.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      cb.call(context, series, rawSeriesIndex);\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeries: function (cb, context) {\n    each(this._componentsMap.get('series'), cb, context);\n  },\n\n  /**\n   * After filtering, series may be different.\n   * frome raw series.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeriesByType: function (subType, cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      if (series.subType === subType) {\n        cb.call(context, series, rawSeriesIndex);\n      }\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered of given type.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeriesByType: function (subType, cb, context) {\n    return each(this.getSeriesByType(subType), cb, context);\n  },\n\n  /**\n   * @param {module:echarts/model/Series} seriesModel\n   */\n  isSeriesFiltered: function (seriesModel) {\n    assertSeriesInitialized(this);\n    return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getCurrentSeriesIndices: function () {\n    return (this._seriesIndices || []).slice();\n  },\n\n  /**\n   * @param {Function} cb\n   * @param {*} context\n   */\n  filterSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    var filteredSeries = filter(this._componentsMap.get('series'), cb, context);\n    this._seriesIndices = createSeriesIndices(filteredSeries);\n  },\n  restoreData: function () {\n    var componentsMap = this._componentsMap;\n    this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n    var componentTypes = [];\n    componentsMap.each(function (components, componentType) {\n      componentTypes.push(componentType);\n    });\n    ComponentModel.topologicalTravel(componentTypes, ComponentModel.getAllClassMainTypes(), function (componentType, dependencies) {\n      each(componentsMap.get(componentType), function (component) {\n        component.restoreData();\n      });\n    });\n  }\n});\n/**\n * @inner\n */\n\nfunction mergeTheme(option, theme) {\n  zrUtil.each(theme, function (themeItem, name) {\n    // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n    if (!ComponentModel.hasClass(name)) {\n      if (typeof themeItem === 'object') {\n        option[name] = !option[name] ? zrUtil.clone(themeItem) : zrUtil.merge(option[name], themeItem, false);\n      } else {\n        if (option[name] == null) {\n          option[name] = themeItem;\n        }\n      }\n    }\n  });\n}\n\nfunction initBase(baseOption) {\n  baseOption = baseOption; // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n  // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n\n  this.option = {};\n  this.option[OPTION_INNER_KEY] = 1;\n  /**\n   * Init with series: [], in case of calling findSeries method\n   * before series initialized.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @private\n   */\n\n  this._componentsMap = zrUtil.createHashMap({\n    series: []\n  });\n  /**\n   * Mapping between filtered series list and raw series list.\n   * key: filtered series indices, value: raw series indices.\n   * @type {Array.<nubmer>}\n   * @private\n   */\n\n  this._seriesIndices = null;\n  mergeTheme(baseOption, this._theme.option); // TODO Needs clone when merging to the unexisted property\n\n  zrUtil.merge(baseOption, globalDefault, false);\n  this.mergeOption(baseOption);\n}\n/**\n * @inner\n * @param {Array.<string>|string} types model types\n * @return {Object} key: {string} type, value: {Array.<Object>} models\n */\n\n\nfunction getComponentsByTypes(componentsMap, types) {\n  if (!zrUtil.isArray(types)) {\n    types = types ? [types] : [];\n  }\n\n  var ret = {};\n  each(types, function (type) {\n    ret[type] = (componentsMap.get(type) || []).slice();\n  });\n  return ret;\n}\n/**\n * @inner\n */\n\n\nfunction determineSubType(mainType, newCptOption, existComponent) {\n  var subType = newCptOption.type ? newCptOption.type : existComponent ? existComponent.subType // Use determineSubType only when there is no existComponent.\n  : ComponentModel.determineSubType(mainType, newCptOption); // tooltip, markline, markpoint may always has no subType\n\n  return subType;\n}\n/**\n * @inner\n */\n\n\nfunction createSeriesIndices(seriesModels) {\n  return map(seriesModels, function (series) {\n    return series.componentIndex;\n  }) || [];\n}\n/**\n * @inner\n */\n\n\nfunction filterBySubType(components, condition) {\n  // Using hasOwnProperty for restrict. Consider\n  // subType is undefined in user payload.\n  return condition.hasOwnProperty('subType') ? filter(components, function (cpt) {\n    return cpt.subType === condition.subType;\n  }) : components;\n}\n/**\n * @inner\n */\n\n\nfunction assertSeriesInitialized(ecModel) {}\n\nzrUtil.mixin(GlobalModel, colorPaletteMinin);\nvar _default = GlobalModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1102:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar makeStyleMapper = __webpack_require__(1011);\n\nvar getLineStyle = makeStyleMapper([['lineWidth', 'width'], ['stroke', 'color'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\nvar _default = {\n  getLineStyle: function (excludes) {\n    var style = getLineStyle(this, excludes);\n    var lineDash = this.getLineDash(style.lineWidth);\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getLineDash: function (lineWidth) {\n    if (lineWidth == null) {\n      lineWidth = 1;\n    }\n\n    var lineType = this.get('type');\n    var dotSize = Math.max(lineWidth, 2);\n    var dashSize = lineWidth * 4;\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize];\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1103:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar makeStyleMapper = __webpack_require__(1011);\n\nvar getAreaStyle = makeStyleMapper([['fill', 'color'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['opacity'], ['shadowColor']]);\nvar _default = {\n  getAreaStyle: function (excludes, includes) {\n    return getAreaStyle(this, excludes, includes);\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1104:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar textContain = __webpack_require__(993);\n\nvar graphicUtil = __webpack_require__(980);\n\nvar PATH_COLOR = ['textStyle', 'color'];\nvar _default = {\n  /**\n   * Get color property or get color from option.textStyle.color\n   * @param {boolean} [isEmphasis]\n   * @return {string}\n   */\n  getTextColor: function (isEmphasis) {\n    var ecModel = this.ecModel;\n    return this.getShallow('color') || (!isEmphasis && ecModel ? ecModel.get(PATH_COLOR) : null);\n  },\n\n  /**\n   * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n   * @return {string}\n   */\n  getFont: function () {\n    return graphicUtil.getFont({\n      fontStyle: this.getShallow('fontStyle'),\n      fontWeight: this.getShallow('fontWeight'),\n      fontSize: this.getShallow('fontSize'),\n      fontFamily: this.getShallow('fontFamily')\n    }, this.ecModel);\n  },\n  getTextRect: function (text) {\n    return textContain.getBoundingRect(text, this.getFont(), this.getShallow('align'), this.getShallow('verticalAlign') || this.getShallow('baseline'), this.getShallow('padding'), this.getShallow('rich'), this.getShallow('truncateText'));\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1105:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(988);\n\nvar PathProxy = __webpack_require__(1007);\n\nvar transformPath = __webpack_require__(1109);\n\n// command chars\nvar cc = ['m', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z', 'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'];\nvar mathSqrt = Math.sqrt;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI = Math.PI;\n\nvar vMag = function (v) {\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n};\n\nvar vRatio = function (u, v) {\n  return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n};\n\nvar vAngle = function (u, v) {\n  return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n};\n\nfunction processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n  var psi = psiDeg * (PI / 180.0);\n  var xp = mathCos(psi) * (x1 - x2) / 2.0 + mathSin(psi) * (y1 - y2) / 2.0;\n  var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0 + mathCos(psi) * (y1 - y2) / 2.0;\n  var lambda = xp * xp / (rx * rx) + yp * yp / (ry * ry);\n\n  if (lambda > 1) {\n    rx *= mathSqrt(lambda);\n    ry *= mathSqrt(lambda);\n  }\n\n  var f = (fa === fs ? -1 : 1) * mathSqrt((rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) / (rx * rx * (yp * yp) + ry * ry * (xp * xp))) || 0;\n  var cxp = f * rx * yp / ry;\n  var cyp = f * -ry * xp / rx;\n  var cx = (x1 + x2) / 2.0 + mathCos(psi) * cxp - mathSin(psi) * cyp;\n  var cy = (y1 + y2) / 2.0 + mathSin(psi) * cxp + mathCos(psi) * cyp;\n  var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n  var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n  var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n  var dTheta = vAngle(u, v);\n\n  if (vRatio(u, v) <= -1) {\n    dTheta = PI;\n  }\n\n  if (vRatio(u, v) >= 1) {\n    dTheta = 0;\n  }\n\n  if (fs === 0 && dTheta > 0) {\n    dTheta = dTheta - 2 * PI;\n  }\n\n  if (fs === 1 && dTheta < 0) {\n    dTheta = dTheta + 2 * PI;\n  }\n\n  path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n}\n\nfunction createPathProxyFromString(data) {\n  if (!data) {\n    return [];\n  } // command string\n\n\n  var cs = data.replace(/-/g, ' -').replace(/  /g, ' ').replace(/ /g, ',').replace(/,,/g, ',');\n  var n; // create pipes so that we can split the data\n\n  for (n = 0; n < cc.length; n++) {\n    cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n  } // create array\n\n\n  var arr = cs.split('|'); // init context point\n\n  var cpx = 0;\n  var cpy = 0;\n  var path = new PathProxy();\n  var CMD = PathProxy.CMD;\n  var prevCmd;\n\n  for (n = 1; n < arr.length; n++) {\n    var str = arr[n];\n    var c = str.charAt(0);\n    var off = 0;\n    var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n    var cmd;\n\n    if (p.length > 0 && p[0] === '') {\n      p.shift();\n    }\n\n    for (var i = 0; i < p.length; i++) {\n      p[i] = parseFloat(p[i]);\n    }\n\n    while (off < p.length && !isNaN(p[off])) {\n      if (isNaN(p[0])) {\n        break;\n      }\n\n      var ctlPtx;\n      var ctlPty;\n      var rx;\n      var ry;\n      var psi;\n      var fa;\n      var fs;\n      var x1 = cpx;\n      var y1 = cpy; // convert l, H, h, V, and v to L\n\n      switch (c) {\n        case 'l':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'L':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'm':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'l';\n          break;\n\n        case 'M':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'L';\n          break;\n\n        case 'h':\n          cpx += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'H':\n          cpx = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'v':\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'V':\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'C':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]);\n          cpx = p[off - 2];\n          cpy = p[off - 1];\n          break;\n\n        case 'c':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy);\n          cpx += p[off - 2];\n          cpy += p[off - 1];\n          break;\n\n        case 'S':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 's':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = cpx + p[off++];\n          y1 = cpy + p[off++];\n          cpx += p[off++];\n          cpy += p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 'Q':\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'q':\n          x1 = p[off++] + cpx;\n          y1 = p[off++] + cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'T':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 't':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 'A':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n\n        case 'a':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n      }\n    }\n\n    if (c === 'z' || c === 'Z') {\n      cmd = CMD.Z;\n      path.addData(cmd);\n    }\n\n    prevCmd = cmd;\n  }\n\n  path.toStatic();\n  return path;\n} // TODO Optimize double memory cost problem\n\n\nfunction createPathOptions(str, opts) {\n  var pathProxy = createPathProxyFromString(str);\n  opts = opts || {};\n\n  opts.buildPath = function (path) {\n    if (path.setData) {\n      path.setData(pathProxy.data); // Svg and vml renderer don't have context\n\n      var ctx = path.getContext();\n\n      if (ctx) {\n        path.rebuildPath(ctx);\n      }\n    } else {\n      var ctx = path;\n      pathProxy.rebuildPath(ctx);\n    }\n  };\n\n  opts.applyTransform = function (m) {\n    transformPath(pathProxy, m);\n    this.dirty(true);\n  };\n\n  return opts;\n}\n/**\n * Create a Path object from path string data\n * http://www.w3.org/TR/SVG/paths.html#PathData\n * @param  {Object} opts Other options\n */\n\n\nfunction createFromString(str, opts) {\n  return new Path(createPathOptions(str, opts));\n}\n/**\n * Create a Path class from path string data\n * @param  {string} str\n * @param  {Object} opts Other options\n */\n\n\nfunction extendFromString(str, opts) {\n  return Path.extend(createPathOptions(str, opts));\n}\n/**\n * Merge multiple paths\n */\n// TODO Apply transform\n// TODO stroke dash\n// TODO Optimize double memory cost problem\n\n\nfunction mergePath(pathEls, opts) {\n  var pathList = [];\n  var len = pathEls.length;\n\n  for (var i = 0; i < len; i++) {\n    var pathEl = pathEls[i];\n\n    if (!pathEl.path) {\n      pathEl.createPathProxy();\n    }\n\n    if (pathEl.__dirtyPath) {\n      pathEl.buildPath(pathEl.path, pathEl.shape, true);\n    }\n\n    pathList.push(pathEl.path);\n  }\n\n  var pathBundle = new Path(opts); // Need path proxy.\n\n  pathBundle.createPathProxy();\n\n  pathBundle.buildPath = function (path) {\n    path.appendPath(pathList); // Svg and vml renderer don't have context\n\n    var ctx = path.getContext();\n\n    if (ctx) {\n      path.rebuildPath(ctx);\n    }\n  };\n\n  return pathBundle;\n}\n\nexports.createFromString = createFromString;\nexports.extendFromString = extendFromString;\nexports.mergePath = mergePath;\n\n/***/ }),\n\n/***/ 1106:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar PathProxy = __webpack_require__(1007);\n\nvar line = __webpack_require__(1072);\n\nvar cubic = __webpack_require__(1107);\n\nvar quadratic = __webpack_require__(1073);\n\nvar arc = __webpack_require__(1108);\n\nvar _util = __webpack_require__(1050);\n\nvar normalizeRadian = _util.normalizeRadian;\n\nvar curve = __webpack_require__(999);\n\nvar windingLine = __webpack_require__(1051);\n\nvar CMD = PathProxy.CMD;\nvar PI2 = Math.PI * 2;\nvar EPSILON = 1e-4;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n} // 临时数组\n\n\nvar roots = [-1, -1, -1];\nvar extrema = [-1, -1];\n\nfunction swapExtrema() {\n  var tmp = extrema[0];\n  extrema[0] = extrema[1];\n  extrema[1] = tmp;\n}\n\nfunction windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 && y > y3 || y < y0 && y < y1 && y < y2 && y < y3) {\n    return 0;\n  }\n\n  var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var w = 0;\n    var nExtrema = -1;\n    var y0_, y1_;\n\n    for (var i = 0; i < nRoots; i++) {\n      var t = roots[i]; // Avoid winding error when intersection point is the connect point of two line of polygon\n\n      var unit = t === 0 || t === 1 ? 0.5 : 1;\n      var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n\n      if (x_ < x) {\n        // Quick reject\n        continue;\n      }\n\n      if (nExtrema < 0) {\n        nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n\n        if (extrema[1] < extrema[0] && nExtrema > 1) {\n          swapExtrema();\n        }\n\n        y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n\n        if (nExtrema > 1) {\n          y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n        }\n      }\n\n      if (nExtrema == 2) {\n        // 分成三段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else if (t < extrema[1]) {\n          w += y1_ < y0_ ? unit : -unit;\n        } else {\n          w += y3 < y1_ ? unit : -unit;\n        }\n      } else {\n        // 分成两段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else {\n          w += y3 < y0_ ? unit : -unit;\n        }\n      }\n    }\n\n    return w;\n  }\n}\n\nfunction windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 || y < y0 && y < y1 && y < y2) {\n    return 0;\n  }\n\n  var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var t = curve.quadraticExtremum(y0, y1, y2);\n\n    if (t >= 0 && t <= 1) {\n      var w = 0;\n      var y_ = curve.quadraticAt(y0, y1, y2, t);\n\n      for (var i = 0; i < nRoots; i++) {\n        // Remove one endpoint.\n        var unit = roots[i] === 0 || roots[i] === 1 ? 0.5 : 1;\n        var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n\n        if (x_ < x) {\n          // Quick reject\n          continue;\n        }\n\n        if (roots[i] < t) {\n          w += y_ < y0 ? unit : -unit;\n        } else {\n          w += y2 < y_ ? unit : -unit;\n        }\n      }\n\n      return w;\n    } else {\n      // Remove one endpoint.\n      var unit = roots[0] === 0 || roots[0] === 1 ? 0.5 : 1;\n      var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n\n      if (x_ < x) {\n        // Quick reject\n        return 0;\n      }\n\n      return y2 < y0 ? unit : -unit;\n    }\n  }\n} // TODO\n// Arc 旋转\n\n\nfunction windingArc(cx, cy, r, startAngle, endAngle, anticlockwise, x, y) {\n  y -= cy;\n\n  if (y > r || y < -r) {\n    return 0;\n  }\n\n  var tmp = Math.sqrt(r * r - y * y);\n  roots[0] = -tmp;\n  roots[1] = tmp;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff < 1e-4) {\n    return 0;\n  }\n\n  if (diff % PI2 < 1e-4) {\n    // Is a circle\n    startAngle = 0;\n    endAngle = PI2;\n    var dir = anticlockwise ? 1 : -1;\n\n    if (x >= roots[0] + cx && x <= roots[1] + cx) {\n      return dir;\n    } else {\n      return 0;\n    }\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var w = 0;\n\n  for (var i = 0; i < 2; i++) {\n    var x_ = roots[i];\n\n    if (x_ + cx > x) {\n      var angle = Math.atan2(y, x_);\n      var dir = anticlockwise ? 1 : -1;\n\n      if (angle < 0) {\n        angle = PI2 + angle;\n      }\n\n      if (angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle) {\n        if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n          dir = -dir;\n        }\n\n        w += dir;\n      }\n    }\n  }\n\n  return w;\n}\n\nfunction containPath(data, lineWidth, isStroke, x, y) {\n  var w = 0;\n  var xi = 0;\n  var yi = 0;\n  var x0 = 0;\n  var y0 = 0;\n\n  for (var i = 0; i < data.length;) {\n    var cmd = data[i++]; // Begin a new subpath\n\n    if (cmd === CMD.M && i > 1) {\n      // Close previous subpath\n      if (!isStroke) {\n        w += windingLine(xi, yi, x0, y0, x, y);\n      } // 如果被任何一个 subpath 包含\n      // if (w !== 0) {\n      //     return true;\n      // }\n\n    }\n\n    if (i == 1) {\n      // 如果第一个命令是 L, C, Q\n      // 则 previous point 同绘制命令的第一个 point\n      //\n      // 第一个命令为 Arc 的情况下会在后面特殊处理\n      xi = data[i];\n      yi = data[i + 1];\n      x0 = xi;\n      y0 = yi;\n    }\n\n    switch (cmd) {\n      case CMD.M:\n        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n        // 在 closePath 的时候使用\n        x0 = data[i++];\n        y0 = data[i++];\n        xi = x0;\n        yi = y0;\n        break;\n\n      case CMD.L:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n          w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.C:\n        if (isStroke) {\n          if (cubic.containStroke(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.Q:\n        if (isStroke) {\n          if (quadratic.containStroke(xi, yi, data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.A:\n        // TODO Arc 判断的开销比较大\n        var cx = data[i++];\n        var cy = data[i++];\n        var rx = data[i++];\n        var ry = data[i++];\n        var theta = data[i++];\n        var dTheta = data[i++]; // TODO Arc 旋转\n\n        var psi = data[i++];\n        var anticlockwise = 1 - data[i++];\n        var x1 = Math.cos(theta) * rx + cx;\n        var y1 = Math.sin(theta) * ry + cy; // 不是直接使用 arc 命令\n\n        if (i > 1) {\n          w += windingLine(xi, yi, x1, y1, x, y);\n        } else {\n          // 第一个命令起点还未定义\n          x0 = x1;\n          y0 = y1;\n        } // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n\n\n        var _x = (x - cx) * ry / rx + cx;\n\n        if (isStroke) {\n          if (arc.containStroke(cx, cy, ry, theta, theta + dTheta, anticlockwise, lineWidth, _x, y)) {\n            return true;\n          }\n        } else {\n          w += windingArc(cx, cy, ry, theta, theta + dTheta, anticlockwise, _x, y);\n        }\n\n        xi = Math.cos(theta + dTheta) * rx + cx;\n        yi = Math.sin(theta + dTheta) * ry + cy;\n        break;\n\n      case CMD.R:\n        x0 = xi = data[i++];\n        y0 = yi = data[i++];\n        var width = data[i++];\n        var height = data[i++];\n        var x1 = x0 + width;\n        var y1 = y0 + height;\n\n        if (isStroke) {\n          if (line.containStroke(x0, y0, x1, y0, lineWidth, x, y) || line.containStroke(x1, y0, x1, y1, lineWidth, x, y) || line.containStroke(x1, y1, x0, y1, lineWidth, x, y) || line.containStroke(x0, y1, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // FIXME Clockwise ?\n          w += windingLine(x1, y0, x1, y1, x, y);\n          w += windingLine(x0, y1, x0, y0, x, y);\n        }\n\n        break;\n\n      case CMD.Z:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // Close a subpath\n          w += windingLine(xi, yi, x0, y0, x, y); // 如果被任何一个 subpath 包含\n          // FIXME subpaths may overlap\n          // if (w !== 0) {\n          //     return true;\n          // }\n        }\n\n        xi = x0;\n        yi = y0;\n        break;\n    }\n  }\n\n  if (!isStroke && !isAroundEqual(yi, y0)) {\n    w += windingLine(xi, yi, x0, y0, x, y) || 0;\n  }\n\n  return w !== 0;\n}\n\nfunction contain(pathData, x, y) {\n  return containPath(pathData, 0, false, x, y);\n}\n\nfunction containStroke(pathData, lineWidth, x, y) {\n  return containPath(pathData, lineWidth, true, x, y);\n}\n\nexports.contain = contain;\nexports.containStroke = containStroke;\n\n/***/ }),\n\n/***/ 1107:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar curve = __webpack_require__(999);\n\n/**\n * 三次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  x3\n * @param  {number}  y3\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l) {\n    return false;\n  }\n\n  var d = curve.cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n/***/ }),\n\n/***/ 1108:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(1050);\n\nvar normalizeRadian = _util.normalizeRadian;\nvar PI2 = Math.PI * 2;\n/**\n * 圆弧描边包含判断\n * @param  {number}  cx\n * @param  {number}  cy\n * @param  {number}  r\n * @param  {number}  startAngle\n * @param  {number}  endAngle\n * @param  {boolean}  anticlockwise\n * @param  {number} lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {Boolean}\n */\n\nfunction containStroke(cx, cy, r, startAngle, endAngle, anticlockwise, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  x -= cx;\n  y -= cy;\n  var d = Math.sqrt(x * x + y * y);\n\n  if (d - _l > r || d + _l < r) {\n    return false;\n  }\n\n  if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n    // Is a circle\n    return true;\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var angle = Math.atan2(y, x);\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle;\n}\n\nexports.containStroke = containStroke;\n\n/***/ }),\n\n/***/ 1109:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar PathProxy = __webpack_require__(1007);\n\nvar _vector = __webpack_require__(984);\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar CMD = PathProxy.CMD;\nvar points = [[], [], []];\nvar mathSqrt = Math.sqrt;\nvar mathAtan2 = Math.atan2;\n\nfunction _default(path, m) {\n  var data = path.data;\n  var cmd;\n  var nPoint;\n  var i;\n  var j;\n  var k;\n  var p;\n  var M = CMD.M;\n  var C = CMD.C;\n  var L = CMD.L;\n  var R = CMD.R;\n  var A = CMD.A;\n  var Q = CMD.Q;\n\n  for (i = 0, j = 0; i < data.length;) {\n    cmd = data[i++];\n    j = i;\n    nPoint = 0;\n\n    switch (cmd) {\n      case M:\n        nPoint = 1;\n        break;\n\n      case L:\n        nPoint = 1;\n        break;\n\n      case C:\n        nPoint = 3;\n        break;\n\n      case Q:\n        nPoint = 2;\n        break;\n\n      case A:\n        var x = m[4];\n        var y = m[5];\n        var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n        var angle = mathAtan2(-m[1] / sy, m[0] / sx); // cx\n\n        data[i] *= sx;\n        data[i++] += x; // cy\n\n        data[i] *= sy;\n        data[i++] += y; // Scale rx and ry\n        // FIXME Assume psi is 0 here\n\n        data[i++] *= sx;\n        data[i++] *= sy; // Start angle\n\n        data[i++] += angle; // end angle\n\n        data[i++] += angle; // FIXME psi\n\n        i += 2;\n        j = i;\n        break;\n\n      case R:\n        // x0, y0\n        p[0] = data[i++];\n        p[1] = data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1]; // x1, y1\n\n        p[0] += data[i++];\n        p[1] += data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1];\n    }\n\n    for (k = 0; k < nPoint; k++) {\n      var p = points[k];\n      p[0] = data[i++];\n      p[1] = data[i++];\n      v2ApplyTransform(p, p, m); // Write back\n\n      data[j++] = p[0];\n      data[j++] = p[1];\n    }\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1110:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(988);\n\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\nvar _default = Path.extend({\n  type: 'circle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    // Better stroking in ShapeBundle\n    // Always do it may have performence issue ( fill may be 2x more cost)\n    if (inBundle) {\n      ctx.moveTo(shape.cx + shape.r, shape.cy);\n    } // else {\n    //     if (ctx.allocate && !ctx.data.length) {\n    //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n    //     }\n    // }\n    // Better stroking in ShapeBundle\n    // ctx.moveTo(shape.cx + shape.r, shape.cy);\n\n\n    ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1111:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(988);\n\nvar fixClipWithShadow = __webpack_require__(1060);\n\n/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\nvar _default = Path.extend({\n  type: 'sector',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r0: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r0 = Math.max(shape.r0 || 0, 0);\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n    ctx.lineTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n    ctx.lineTo(Math.cos(endAngle) * r0 + x, Math.sin(endAngle) * r0 + y);\n\n    if (r0 !== 0) {\n      ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n    }\n\n    ctx.closePath();\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1112:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(988);\n\n/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\nvar _default = Path.extend({\n  type: 'ring',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    r0: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var PI2 = Math.PI * 2;\n    ctx.moveTo(x + shape.r, y);\n    ctx.arc(x, y, shape.r, 0, PI2, false);\n    ctx.moveTo(x + shape.r0, y);\n    ctx.arc(x, y, shape.r0, 0, PI2, true);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1113:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(988);\n\nvar polyHelper = __webpack_require__(1052);\n\n/**\n * 多边形\n * @module zrender/shape/Polygon\n */\nvar _default = Path.extend({\n  type: 'polygon',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, true);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1114:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _vector = __webpack_require__(984);\n\nvar v2Distance = _vector.distance;\n\n/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * @inner\n */\nfunction interpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n/**\n * @alias module:zrender/shape/util/smoothSpline\n * @param {Array} points 线段顶点数组\n * @param {boolean} isLoop\n * @return {Array}\n */\n\n\nfunction _default(points, isLoop) {\n  var len = points.length;\n  var ret = [];\n  var distance = 0;\n\n  for (var i = 1; i < len; i++) {\n    distance += v2Distance(points[i - 1], points[i]);\n  }\n\n  var segs = distance / 2;\n  segs = segs < len ? len : segs;\n\n  for (var i = 0; i < segs; i++) {\n    var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n    var idx = Math.floor(pos);\n    var w = pos - idx;\n    var p0;\n    var p1 = points[idx % len];\n    var p2;\n    var p3;\n\n    if (!isLoop) {\n      p0 = points[idx === 0 ? idx : idx - 1];\n      p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n      p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n    } else {\n      p0 = points[(idx - 1 + len) % len];\n      p2 = points[(idx + 1) % len];\n      p3 = points[(idx + 2) % len];\n    }\n\n    var w2 = w * w;\n    var w3 = w * w2;\n    ret.push([interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3), interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)]);\n  }\n\n  return ret;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1115:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _vector = __webpack_require__(984);\n\nvar v2Min = _vector.min;\nvar v2Max = _vector.max;\nvar v2Scale = _vector.scale;\nvar v2Distance = _vector.distance;\nvar v2Add = _vector.add;\nvar v2Clone = _vector.clone;\nvar v2Sub = _vector.sub;\n\n/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * 贝塞尔平滑曲线\n * @alias module:zrender/shape/util/smoothBezier\n * @param {Array} points 线段顶点数组\n * @param {number} smooth 平滑等级, 0-1\n * @param {boolean} isLoop\n * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n *                           整个折线的包围盒做一个并集用来约束控制点。\n * @param {Array} 计算出来的控制点数组\n */\nfunction _default(points, smooth, isLoop, constraint) {\n  var cps = [];\n  var v = [];\n  var v1 = [];\n  var v2 = [];\n  var prevPoint;\n  var nextPoint;\n  var min, max;\n\n  if (constraint) {\n    min = [Infinity, Infinity];\n    max = [-Infinity, -Infinity];\n\n    for (var i = 0, len = points.length; i < len; i++) {\n      v2Min(min, min, points[i]);\n      v2Max(max, max, points[i]);\n    } // 与指定的包围盒做并集\n\n\n    v2Min(min, min, constraint[0]);\n    v2Max(max, max, constraint[1]);\n  }\n\n  for (var i = 0, len = points.length; i < len; i++) {\n    var point = points[i];\n\n    if (isLoop) {\n      prevPoint = points[i ? i - 1 : len - 1];\n      nextPoint = points[(i + 1) % len];\n    } else {\n      if (i === 0 || i === len - 1) {\n        cps.push(v2Clone(points[i]));\n        continue;\n      } else {\n        prevPoint = points[i - 1];\n        nextPoint = points[i + 1];\n      }\n    }\n\n    v2Sub(v, nextPoint, prevPoint); // use degree to scale the handle length\n\n    v2Scale(v, v, smooth);\n    var d0 = v2Distance(point, prevPoint);\n    var d1 = v2Distance(point, nextPoint);\n    var sum = d0 + d1;\n\n    if (sum !== 0) {\n      d0 /= sum;\n      d1 /= sum;\n    }\n\n    v2Scale(v1, v, -d0);\n    v2Scale(v2, v, d1);\n    var cp0 = v2Add([], point, v1);\n    var cp1 = v2Add([], point, v2);\n\n    if (constraint) {\n      v2Max(cp0, cp0, min);\n      v2Min(cp0, cp0, max);\n      v2Max(cp1, cp1, min);\n      v2Min(cp1, cp1, max);\n    }\n\n    cps.push(cp0);\n    cps.push(cp1);\n  }\n\n  if (isLoop) {\n    cps.push(cps.shift());\n  }\n\n  return cps;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1116:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(988);\n\nvar polyHelper = __webpack_require__(1052);\n\n/**\n * @module zrender/graphic/shape/Polyline\n */\nvar _default = Path.extend({\n  type: 'polyline',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, false);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1117:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(988);\n\nvar roundRectHelper = __webpack_require__(1049);\n\n/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\nvar _default = Path.extend({\n  type: 'rect',\n  shape: {\n    // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n    // r缩写为1         相当于 [1, 1, 1, 1]\n    // r缩写为[1]       相当于 [1, 1, 1, 1]\n    // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n    // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n    r: 0,\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var width = shape.width;\n    var height = shape.height;\n\n    if (!shape.r) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, shape);\n    }\n\n    ctx.closePath();\n    return;\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1118:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(988);\n\n/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\nvar _default = Path.extend({\n  type: 'line',\n  shape: {\n    // Start point\n    x1: 0,\n    y1: 0,\n    // End point\n    x2: 0,\n    y2: 0,\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (percent < 1) {\n      x2 = x1 * (1 - percent) + x2 * percent;\n      y2 = y1 * (1 - percent) + y2 * percent;\n    }\n\n    ctx.lineTo(x2, y2);\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} percent\n   * @return {Array.<number>}\n   */\n  pointAt: function (p) {\n    var shape = this.shape;\n    return [shape.x1 * (1 - p) + shape.x2 * p, shape.y1 * (1 - p) + shape.y2 * p];\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1119:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(988);\n\nvar vec2 = __webpack_require__(984);\n\nvar _curve = __webpack_require__(999);\n\nvar quadraticSubdivide = _curve.quadraticSubdivide;\nvar cubicSubdivide = _curve.cubicSubdivide;\nvar quadraticAt = _curve.quadraticAt;\nvar cubicAt = _curve.cubicAt;\nvar quadraticDerivativeAt = _curve.quadraticDerivativeAt;\nvar cubicDerivativeAt = _curve.cubicDerivativeAt;\n\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\nvar out = [];\n\nfunction someVectorAt(shape, t, isTangent) {\n  var cpx2 = shape.cpx2;\n  var cpy2 = shape.cpy2;\n\n  if (cpx2 === null || cpy2 === null) {\n    return [(isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t), (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)];\n  } else {\n    return [(isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t), (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)];\n  }\n}\n\nvar _default = Path.extend({\n  type: 'bezier-curve',\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    cpx1: 0,\n    cpy1: 0,\n    // cpx2: 0,\n    // cpy2: 0\n    // Curve show percent, for animating\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var cpx1 = shape.cpx1;\n    var cpy1 = shape.cpy1;\n    var cpx2 = shape.cpx2;\n    var cpy2 = shape.cpy2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (cpx2 == null || cpy2 == null) {\n      if (percent < 1) {\n        quadraticSubdivide(x1, cpx1, x2, percent, out);\n        cpx1 = out[1];\n        x2 = out[2];\n        quadraticSubdivide(y1, cpy1, y2, percent, out);\n        cpy1 = out[1];\n        y2 = out[2];\n      }\n\n      ctx.quadraticCurveTo(cpx1, cpy1, x2, y2);\n    } else {\n      if (percent < 1) {\n        cubicSubdivide(x1, cpx1, cpx2, x2, percent, out);\n        cpx1 = out[1];\n        cpx2 = out[2];\n        x2 = out[3];\n        cubicSubdivide(y1, cpy1, cpy2, y2, percent, out);\n        cpy1 = out[1];\n        cpy2 = out[2];\n        y2 = out[3];\n      }\n\n      ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\n    }\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  pointAt: function (t) {\n    return someVectorAt(this.shape, t, false);\n  },\n\n  /**\n   * Get tangent at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  tangentAt: function (t) {\n    var p = someVectorAt(this.shape, t, true);\n    return vec2.normalize(p, p);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1120:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(988);\n\n/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\nvar _default = Path.extend({\n  type: 'arc',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1121:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(988);\n\n// CompoundPath to improve performance\nvar _default = Path.extend({\n  type: 'compound',\n  shape: {\n    paths: null\n  },\n  _updatePathDirty: function () {\n    var dirtyPath = this.__dirtyPath;\n    var paths = this.shape.paths;\n\n    for (var i = 0; i < paths.length; i++) {\n      // Mark as dirty if any subpath is dirty\n      dirtyPath = dirtyPath || paths[i].__dirtyPath;\n    }\n\n    this.__dirtyPath = dirtyPath;\n    this.__dirty = this.__dirty || dirtyPath;\n  },\n  beforeBrush: function () {\n    this._updatePathDirty();\n\n    var paths = this.shape.paths || [];\n    var scale = this.getGlobalScale(); // Update path scale\n\n    for (var i = 0; i < paths.length; i++) {\n      if (!paths[i].path) {\n        paths[i].createPathProxy();\n      }\n\n      paths[i].path.setScale(scale[0], scale[1]);\n    }\n  },\n  buildPath: function (ctx, shape) {\n    var paths = shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].buildPath(ctx, paths[i].shape, true);\n    }\n  },\n  afterBrush: function () {\n    var paths = this.shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].__dirtyPath = false;\n    }\n  },\n  getBoundingRect: function () {\n    this._updatePathDirty();\n\n    return Path.prototype.getBoundingRect.call(this);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1122:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar Gradient = __webpack_require__(1019);\n\n/**\n * x, y, r are all percent from 0 to 1\n * @param {number} [x=0.5]\n * @param {number} [y=0.5]\n * @param {number} [r=0.5]\n * @param {Array.<Object>} [colorStops]\n * @param {boolean} [globalCoord=false]\n */\nvar RadialGradient = function (x, y, r, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'radial', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0.5 : x;\n  this.y = y == null ? 0.5 : y;\n  this.r = r == null ? 0.5 : r; // Can be cloned\n\n  this.type = 'radial'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nRadialGradient.prototype = {\n  constructor: RadialGradient\n};\nzrUtil.inherits(RadialGradient, Gradient);\nvar _default = RadialGradient;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1123:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar makeStyleMapper = __webpack_require__(1011);\n\nvar getItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor'], ['textPosition'], ['textAlign']]);\nvar _default = {\n  getItemStyle: function (excludes, includes) {\n    var style = getItemStyle(this, excludes, includes);\n    var lineDash = this.getBorderLineDash();\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getBorderLineDash: function () {\n    var lineType = this.get('borderType');\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [5, 5] : [1, 1];\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1124:\n/***/ (function(module, exports) {\n\nvar _default = {\n  getBoxLayoutParams: function () {\n    return {\n      left: this.get('left'),\n      top: this.get('top'),\n      right: this.get('right'),\n      bottom: this.get('bottom'),\n      width: this.get('width'),\n      height: this.get('height')\n    };\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1125:\n/***/ (function(module, exports) {\n\nvar platform = ''; // Navigator not exists in node\n\nif (typeof navigator !== 'undefined') {\n  platform = navigator.platform || '';\n}\n\nvar _default = {\n  // 全图默认背景\n  // backgroundColor: 'rgba(0,0,0,0)',\n  // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n  // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n  // 浅色\n  // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n  // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n  // 深色\n  color: ['#c23531', '#2f4554', '#61a0a8', '#d48265', '#91c7ae', '#749f83', '#ca8622', '#bda29a', '#6e7074', '#546570', '#c4ccd3'],\n  // 默认需要 Grid 配置项\n  // grid: {},\n  // 主题，主题\n  textStyle: {\n    // color: '#000',\n    // decoration: 'none',\n    // PENDING\n    fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n    // fontFamily: 'Arial, Verdana, sans-serif',\n    fontSize: 12,\n    fontStyle: 'normal',\n    fontWeight: 'normal'\n  },\n  // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n  // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n  // Default is source-over\n  blendMode: null,\n  animation: 'auto',\n  animationDuration: 1000,\n  animationDurationUpdate: 300,\n  animationEasing: 'exponentialOut',\n  animationEasingUpdate: 'cubicOut',\n  animationThreshold: 2000,\n  // Configuration for progressive/incremental rendering\n  progressiveThreshold: 3000,\n  progressive: 400,\n  // Threshold of if use single hover layer to optimize.\n  // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n  // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n  // which is unexpected.\n  // see example <echarts/test/heatmap-large.html>.\n  hoverLayerThreshold: 3000,\n  // See: module:echarts/scale/Time\n  useUTC: false\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1126:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar echartsAPIList = ['getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed', 'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption', 'getViewOfComponentModel', 'getViewOfSeriesModel']; // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\n\nfunction ExtensionAPI(chartInstance) {\n  zrUtil.each(echartsAPIList, function (name) {\n    this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n  }, this);\n}\n\nvar _default = ExtensionAPI;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1127:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar modelUtil = __webpack_require__(982);\n\nvar ComponentModel = __webpack_require__(991);\n\n/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\nvar each = zrUtil.each;\nvar clone = zrUtil.clone;\nvar map = zrUtil.map;\nvar merge = zrUtil.merge;\nvar QUERY_REG = /^(min|max)?(.+)$/;\n/**\n * TERM EXPLANATIONS:\n *\n * [option]:\n *\n *     An object that contains definitions of components. For example:\n *     var option = {\n *         title: {...},\n *         legend: {...},\n *         visualMap: {...},\n *         series: [\n *             {data: [...]},\n *             {data: [...]},\n *             ...\n *         ]\n *     };\n *\n * [rawOption]:\n *\n *     An object input to echarts.setOption. 'rawOption' may be an\n *     'option', or may be an object contains multi-options. For example:\n *     var option = {\n *         baseOption: {\n *             title: {...},\n *             legend: {...},\n *             series: [\n *                 {data: [...]},\n *                 {data: [...]},\n *                 ...\n *             ]\n *         },\n *         timeline: {...},\n *         options: [\n *             {title: {...}, series: {data: [...]}},\n *             {title: {...}, series: {data: [...]}},\n *             ...\n *         ],\n *         media: [\n *             {\n *                 query: {maxWidth: 320},\n *                 option: {series: {x: 20}, visualMap: {show: false}}\n *             },\n *             {\n *                 query: {minWidth: 320, maxWidth: 720},\n *                 option: {series: {x: 500}, visualMap: {show: true}}\n *             },\n *             {\n *                 option: {series: {x: 1200}, visualMap: {show: true}}\n *             }\n *         ]\n *     };\n *\n * @alias module:echarts/model/OptionManager\n * @param {module:echarts/ExtensionAPI} api\n */\n\nfunction OptionManager(api) {\n  /**\n   * @private\n   * @type {module:echarts/ExtensionAPI}\n   */\n  this._api = api;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._timelineOptions = [];\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n\n  this._mediaList = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._mediaDefault;\n  /**\n   * -1, means default.\n   * empty means no media.\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._currentMediaIndices = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._optionBackup;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._newBaseOption;\n} // timeline.notMerge is not supported in ec3. Firstly there is rearly\n// case that notMerge is needed. Secondly supporting 'notMerge' requires\n// rawOption cloned and backuped when timeline changed, which does no\n// good to performance. What's more, that both timeline and setOption\n// method supply 'notMerge' brings complex and some problems.\n// Consider this case:\n// (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n// (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n\nOptionManager.prototype = {\n  constructor: OptionManager,\n\n  /**\n   * @public\n   * @param {Object} rawOption Raw option.\n   * @param {module:echarts/model/Global} ecModel\n   * @param {Array.<Function>} optionPreprocessorFuncs\n   * @return {Object} Init option\n   */\n  setOption: function (rawOption, optionPreprocessorFuncs) {\n    rawOption = clone(rawOption, true); // FIXME\n    // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n    var oldOptionBackup = this._optionBackup;\n    var newParsedOption = parseRawOption.call(this, rawOption, optionPreprocessorFuncs, !oldOptionBackup);\n    this._newBaseOption = newParsedOption.baseOption; // For setOption at second time (using merge mode);\n\n    if (oldOptionBackup) {\n      // Only baseOption can be merged.\n      mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption); // For simplicity, timeline options and media options do not support merge,\n      // that is, if you `setOption` twice and both has timeline options, the latter\n      // timeline opitons will not be merged to the formers, but just substitude them.\n\n      if (newParsedOption.timelineOptions.length) {\n        oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n      }\n\n      if (newParsedOption.mediaList.length) {\n        oldOptionBackup.mediaList = newParsedOption.mediaList;\n      }\n\n      if (newParsedOption.mediaDefault) {\n        oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n      }\n    } else {\n      this._optionBackup = newParsedOption;\n    }\n  },\n\n  /**\n   * @param {boolean} isRecreate\n   * @return {Object}\n   */\n  mountOption: function (isRecreate) {\n    var optionBackup = this._optionBackup; // TODO\n    // 如果没有reset功能则不clone。\n\n    this._timelineOptions = map(optionBackup.timelineOptions, clone);\n    this._mediaList = map(optionBackup.mediaList, clone);\n    this._mediaDefault = clone(optionBackup.mediaDefault);\n    this._currentMediaIndices = [];\n    return clone(isRecreate // this._optionBackup.baseOption, which is created at the first `setOption`\n    // called, and is merged into every new option by inner method `mergeOption`\n    // each time `setOption` called, can be only used in `isRecreate`, because\n    // its reliability is under suspicion. In other cases option merge is\n    // performed by `model.mergeOption`.\n    ? optionBackup.baseOption : this._newBaseOption);\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Object}\n   */\n  getTimelineOption: function (ecModel) {\n    var option;\n    var timelineOptions = this._timelineOptions;\n\n    if (timelineOptions.length) {\n      // getTimelineOption can only be called after ecModel inited,\n      // so we can get currentIndex from timelineModel.\n      var timelineModel = ecModel.getComponent('timeline');\n\n      if (timelineModel) {\n        option = clone(timelineOptions[timelineModel.getCurrentIndex()], true);\n      }\n    }\n\n    return option;\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Array.<Object>}\n   */\n  getMediaOption: function (ecModel) {\n    var ecWidth = this._api.getWidth();\n\n    var ecHeight = this._api.getHeight();\n\n    var mediaList = this._mediaList;\n    var mediaDefault = this._mediaDefault;\n    var indices = [];\n    var result = []; // No media defined.\n\n    if (!mediaList.length && !mediaDefault) {\n      return result;\n    } // Multi media may be applied, the latter defined media has higher priority.\n\n\n    for (var i = 0, len = mediaList.length; i < len; i++) {\n      if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n        indices.push(i);\n      }\n    } // FIXME\n    // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n\n\n    if (!indices.length && mediaDefault) {\n      indices = [-1];\n    }\n\n    if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n      result = map(indices, function (index) {\n        return clone(index === -1 ? mediaDefault.option : mediaList[index].option);\n      });\n    } // Otherwise return nothing.\n\n\n    this._currentMediaIndices = indices;\n    return result;\n  }\n};\n\nfunction parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n  var timelineOptions = [];\n  var mediaList = [];\n  var mediaDefault;\n  var baseOption; // Compatible with ec2.\n\n  var timelineOpt = rawOption.timeline;\n\n  if (rawOption.baseOption) {\n    baseOption = rawOption.baseOption;\n  } // For timeline\n\n\n  if (timelineOpt || rawOption.options) {\n    baseOption = baseOption || {};\n    timelineOptions = (rawOption.options || []).slice();\n  } // For media query\n\n\n  if (rawOption.media) {\n    baseOption = baseOption || {};\n    var media = rawOption.media;\n    each(media, function (singleMedia) {\n      if (singleMedia && singleMedia.option) {\n        if (singleMedia.query) {\n          mediaList.push(singleMedia);\n        } else if (!mediaDefault) {\n          // Use the first media default.\n          mediaDefault = singleMedia;\n        }\n      }\n    });\n  } // For normal option\n\n\n  if (!baseOption) {\n    baseOption = rawOption;\n  } // Set timelineOpt to baseOption in ec3,\n  // which is convenient for merge option.\n\n\n  if (!baseOption.timeline) {\n    baseOption.timeline = timelineOpt;\n  } // Preprocess.\n\n\n  each([baseOption].concat(timelineOptions).concat(zrUtil.map(mediaList, function (media) {\n    return media.option;\n  })), function (option) {\n    each(optionPreprocessorFuncs, function (preProcess) {\n      preProcess(option, isNew);\n    });\n  });\n  return {\n    baseOption: baseOption,\n    timelineOptions: timelineOptions,\n    mediaDefault: mediaDefault,\n    mediaList: mediaList\n  };\n}\n/**\n * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n * Support: width, height, aspectRatio\n * Can use max or min as prefix.\n */\n\n\nfunction applyMediaQuery(query, ecWidth, ecHeight) {\n  var realMap = {\n    width: ecWidth,\n    height: ecHeight,\n    aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n\n  };\n  var applicatable = true;\n  zrUtil.each(query, function (value, attr) {\n    var matched = attr.match(QUERY_REG);\n\n    if (!matched || !matched[1] || !matched[2]) {\n      return;\n    }\n\n    var operator = matched[1];\n    var realAttr = matched[2].toLowerCase();\n\n    if (!compare(realMap[realAttr], value, operator)) {\n      applicatable = false;\n    }\n  });\n  return applicatable;\n}\n\nfunction compare(real, expect, operator) {\n  if (operator === 'min') {\n    return real >= expect;\n  } else if (operator === 'max') {\n    return real <= expect;\n  } else {\n    // Equals\n    return real === expect;\n  }\n}\n\nfunction indicesEquals(indices1, indices2) {\n  // indices is always order by asc and has only finite number.\n  return indices1.join(',') === indices2.join(',');\n}\n/**\n * Consider case:\n * `chart.setOption(opt1);`\n * Then user do some interaction like dataZoom, dataView changing.\n * `chart.setOption(opt2);`\n * Then user press 'reset button' in toolbox.\n *\n * After doing that all of the interaction effects should be reset, the\n * chart should be the same as the result of invoke\n * `chart.setOption(opt1); chart.setOption(opt2);`.\n *\n * Although it is not able ensure that\n * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n * `chart.setOption(merge(opt1, opt2));` exactly,\n * this might be the only simple way to implement that feature.\n *\n * MEMO: We've considered some other approaches:\n * 1. Each model handle its self restoration but not uniform treatment.\n *     (Too complex in logic and error-prone)\n * 2. Use a shadow ecModel. (Performace expensive)\n */\n\n\nfunction mergeOption(oldOption, newOption) {\n  newOption = newOption || {};\n  each(newOption, function (newCptOpt, mainType) {\n    if (newCptOpt == null) {\n      return;\n    }\n\n    var oldCptOpt = oldOption[mainType];\n\n    if (!ComponentModel.hasClass(mainType)) {\n      oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n    } else {\n      newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n      oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n      var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n      oldOption[mainType] = map(mapResult, function (item) {\n        return item.option && item.exist ? merge(item.exist, item.option, true) : item.exist || item.option;\n      });\n    }\n  });\n}\n\nvar _default = OptionManager;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1128:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(978);\n\nvar each = _util.each;\nvar isArray = _util.isArray;\nvar isObject = _util.isObject;\n\nvar compatStyle = __webpack_require__(1129);\n\nvar _model = __webpack_require__(982);\n\nvar normalizeToArray = _model.normalizeToArray;\n\n// Compatitable with 2.0\nfunction get(opt, path) {\n  path = path.split(',');\n  var obj = opt;\n\n  for (var i = 0; i < path.length; i++) {\n    obj = obj && obj[path[i]];\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  return obj;\n}\n\nfunction set(opt, path, val, overwrite) {\n  path = path.split(',');\n  var obj = opt;\n  var key;\n\n  for (var i = 0; i < path.length - 1; i++) {\n    key = path[i];\n\n    if (obj[key] == null) {\n      obj[key] = {};\n    }\n\n    obj = obj[key];\n  }\n\n  if (overwrite || obj[path[i]] == null) {\n    obj[path[i]] = val;\n  }\n}\n\nfunction compatLayoutProperties(option) {\n  each(LAYOUT_PROPERTIES, function (prop) {\n    if (prop[0] in option && !(prop[1] in option)) {\n      option[prop[1]] = option[prop[0]];\n    }\n  });\n}\n\nvar LAYOUT_PROPERTIES = [['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']];\nvar COMPATITABLE_COMPONENTS = ['grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'];\nvar COMPATITABLE_SERIES = ['bar', 'boxplot', 'candlestick', 'chord', 'effectScatter', 'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel', 'pie', 'radar', 'sankey', 'scatter', 'treemap'];\n\nfunction _default(option, isTheme) {\n  compatStyle(option, isTheme); // Make sure series array for model initialization.\n\n  option.series = normalizeToArray(option.series);\n  each(option.series, function (seriesOpt) {\n    if (!isObject(seriesOpt)) {\n      return;\n    }\n\n    var seriesType = seriesOpt.type;\n\n    if (seriesType === 'pie' || seriesType === 'gauge') {\n      if (seriesOpt.clockWise != null) {\n        seriesOpt.clockwise = seriesOpt.clockWise;\n      }\n    }\n\n    if (seriesType === 'gauge') {\n      var pointerColor = get(seriesOpt, 'pointer.color');\n      pointerColor != null && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n    }\n\n    for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\n      if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\n        compatLayoutProperties(seriesOpt);\n        break;\n      }\n    }\n  }); // dataRange has changed to visualMap\n\n  if (option.dataRange) {\n    option.visualMap = option.dataRange;\n  }\n\n  each(COMPATITABLE_COMPONENTS, function (componentName) {\n    var options = option[componentName];\n\n    if (options) {\n      if (!isArray(options)) {\n        options = [options];\n      }\n\n      each(options, function (option) {\n        compatLayoutProperties(option);\n      });\n    }\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1129:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar modelUtil = __webpack_require__(982);\n\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar POSSIBLE_STYLES = ['areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle', 'chordStyle', 'label', 'labelLine'];\n\nfunction compatItemStyle(opt) {\n  var itemStyleOpt = opt && opt.itemStyle;\n\n  if (!itemStyleOpt) {\n    return;\n  }\n\n  for (var i = 0, len = POSSIBLE_STYLES.length; i < len; i++) {\n    var styleName = POSSIBLE_STYLES[i];\n    var normalItemStyleOpt = itemStyleOpt.normal;\n    var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n\n    if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].normal) {\n        opt[styleName].normal = normalItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n      }\n\n      normalItemStyleOpt[styleName] = null;\n    }\n\n    if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].emphasis) {\n        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n      }\n\n      emphasisItemStyleOpt[styleName] = null;\n    }\n  }\n}\n\nfunction compatTextStyle(opt, propName) {\n  var labelOptSingle = isObject(opt) && opt[propName];\n  var textStyle = isObject(labelOptSingle) && labelOptSingle.textStyle;\n\n  if (textStyle) {\n    for (var i = 0, len = modelUtil.TEXT_STYLE_OPTIONS.length; i < len; i++) {\n      var propName = modelUtil.TEXT_STYLE_OPTIONS[i];\n\n      if (textStyle.hasOwnProperty(propName)) {\n        labelOptSingle[propName] = textStyle[propName];\n      }\n    }\n  }\n}\n\nfunction compatLabelTextStyle(labelOpt) {\n  if (isObject(labelOpt)) {\n    compatTextStyle(labelOpt, 'normal');\n    compatTextStyle(labelOpt, 'emphasis');\n  }\n}\n\nfunction processSeries(seriesOpt) {\n  if (!isObject(seriesOpt)) {\n    return;\n  }\n\n  compatItemStyle(seriesOpt);\n  compatLabelTextStyle(seriesOpt.label); // treemap\n\n  compatLabelTextStyle(seriesOpt.upperLabel); // graph\n\n  compatLabelTextStyle(seriesOpt.edgeLabel);\n  var markPoint = seriesOpt.markPoint;\n  compatItemStyle(markPoint);\n  compatLabelTextStyle(markPoint && markPoint.label);\n  var markLine = seriesOpt.markLine;\n  compatItemStyle(seriesOpt.markLine);\n  compatLabelTextStyle(markLine && markLine.label);\n  var markArea = seriesOpt.markArea;\n  compatLabelTextStyle(markArea && markArea.label); // For gauge\n\n  compatTextStyle(seriesOpt, 'axisLabel');\n  compatTextStyle(seriesOpt, 'title');\n  compatTextStyle(seriesOpt, 'detail');\n  var data = seriesOpt.data;\n\n  if (data) {\n    for (var i = 0; i < data.length; i++) {\n      compatItemStyle(data[i]);\n      compatLabelTextStyle(data[i] && data[i].label);\n    }\n  } // mark point data\n\n\n  var markPoint = seriesOpt.markPoint;\n\n  if (markPoint && markPoint.data) {\n    var mpData = markPoint.data;\n\n    for (var i = 0; i < mpData.length; i++) {\n      compatItemStyle(mpData[i]);\n      compatLabelTextStyle(mpData[i] && mpData[i].label);\n    }\n  } // mark line data\n\n\n  var markLine = seriesOpt.markLine;\n\n  if (markLine && markLine.data) {\n    var mlData = markLine.data;\n\n    for (var i = 0; i < mlData.length; i++) {\n      if (zrUtil.isArray(mlData[i])) {\n        compatItemStyle(mlData[i][0]);\n        compatLabelTextStyle(mlData[i][0] && mlData[i][0].label);\n        compatItemStyle(mlData[i][1]);\n        compatLabelTextStyle(mlData[i][1] && mlData[i][1].label);\n      } else {\n        compatItemStyle(mlData[i]);\n        compatLabelTextStyle(mlData[i] && mlData[i].label);\n      }\n    }\n  }\n}\n\nfunction toArr(o) {\n  return zrUtil.isArray(o) ? o : o ? [o] : [];\n}\n\nfunction toObj(o) {\n  return (zrUtil.isArray(o) ? o[0] : o) || {};\n}\n\nfunction _default(option, isTheme) {\n  each(toArr(option.series), function (seriesOpt) {\n    isObject(seriesOpt) && processSeries(seriesOpt);\n  });\n  var axes = ['xAxis', 'yAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'parallelAxis', 'radar'];\n  isTheme && axes.push('valueAxis', 'categoryAxis', 'logAxis', 'timeAxis');\n  each(axes, function (axisName) {\n    each(toArr(option[axisName]), function (axisOpt) {\n      if (axisOpt) {\n        compatTextStyle(axisOpt, 'axisLabel');\n        compatTextStyle(axisOpt.axisPointer, 'label');\n      }\n    });\n  });\n  each(toArr(option.parallel), function (parallelOpt) {\n    var parallelAxisDefault = parallelOpt && parallelOpt.parallelAxisDefault;\n    compatTextStyle(parallelAxisDefault, 'axisLabel');\n    compatTextStyle(parallelAxisDefault && parallelAxisDefault.axisPointer, 'label');\n  });\n  each(toArr(option.calendar), function (calendarOpt) {\n    compatTextStyle(calendarOpt, 'dayLabel');\n    compatTextStyle(calendarOpt, 'monthLabel');\n    compatTextStyle(calendarOpt, 'yearLabel');\n  }); // radar.name.textStyle\n\n  each(toArr(option.radar), function (radarOpt) {\n    compatTextStyle(radarOpt, 'name');\n  });\n  each(toArr(option.geo), function (geoOpt) {\n    if (isObject(geoOpt)) {\n      compatLabelTextStyle(geoOpt.label);\n      each(toArr(geoOpt.regions), function (regionObj) {\n        compatLabelTextStyle(regionObj.label);\n      });\n    }\n  });\n  compatLabelTextStyle(toObj(option.timeline).label);\n  compatTextStyle(toObj(option.axisPointer), 'label');\n  compatTextStyle(toObj(option.tooltip).axisPointer, 'label');\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1130:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Gradient = __webpack_require__(1019);\n\nfunction _default(ecModel) {\n  function encodeColor(seriesModel) {\n    var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\n    var data = seriesModel.getData();\n    var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n    || seriesModel.getColorFromPalette(seriesModel.get('name')); // Default color\n    // FIXME Set color function or use the platte color\n\n    data.setVisual('color', color); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      if (typeof color === 'function' && !(color instanceof Gradient)) {\n        data.each(function (idx) {\n          data.setItemVisual(idx, 'color', color(seriesModel.getDataParams(idx)));\n        });\n      } // itemStyle in each data item\n\n\n      data.each(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        var color = itemModel.get(colorAccessPath, true);\n\n        if (color != null) {\n          data.setItemVisual(idx, 'color', color);\n        }\n      });\n    }\n  }\n\n  ecModel.eachRawSeries(encodeColor);\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1131:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar graphic = __webpack_require__(980);\n\nvar PI = Math.PI;\n/**\n * @param {module:echarts/ExtensionAPI} api\n * @param {Object} [opts]\n * @param {string} [opts.text]\n * @param {string} [opts.color]\n * @param {string} [opts.textColor]\n * @return {module:zrender/Element}\n */\n\nfunction _default(api, opts) {\n  opts = opts || {};\n  zrUtil.defaults(opts, {\n    text: 'loading',\n    color: '#c23531',\n    textColor: '#000',\n    maskColor: 'rgba(255, 255, 255, 0.8)',\n    zlevel: 0\n  });\n  var mask = new graphic.Rect({\n    style: {\n      fill: opts.maskColor\n    },\n    zlevel: opts.zlevel,\n    z: 10000\n  });\n  var arc = new graphic.Arc({\n    shape: {\n      startAngle: -PI / 2,\n      endAngle: -PI / 2 + 0.1,\n      r: 10\n    },\n    style: {\n      stroke: opts.color,\n      lineCap: 'round',\n      lineWidth: 5\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  var labelRect = new graphic.Rect({\n    style: {\n      fill: 'none',\n      text: opts.text,\n      textPosition: 'right',\n      textDistance: 10,\n      textFill: opts.textColor\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  arc.animateShape(true).when(1000, {\n    endAngle: PI * 3 / 2\n  }).start('circularInOut');\n  arc.animateShape(true).when(1000, {\n    startAngle: PI * 3 / 2\n  }).delay(300).start('circularInOut');\n  var group = new graphic.Group();\n  group.add(arc);\n  group.add(labelRect);\n  group.add(mask); // Inject resize\n\n  group.resize = function () {\n    var cx = api.getWidth() / 2;\n    var cy = api.getHeight() / 2;\n    arc.setShape({\n      cx: cx,\n      cy: cy\n    });\n    var r = arc.shape.r;\n    labelRect.setShape({\n      x: cx - r,\n      y: cy - r,\n      width: r * 2,\n      height: r * 2\n    });\n    mask.setShape({\n      x: 0,\n      y: 0,\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n  };\n\n  group.resize();\n  return group;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1132:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar createListFromArray = __webpack_require__(1016);\n\nvar axisHelper = __webpack_require__(996);\n\nvar axisModelCommonMixin = __webpack_require__(1028);\n\nvar Model = __webpack_require__(989);\n\nvar _completeDimensions = __webpack_require__(1004);\n\nexports.completeDimensions = _completeDimensions;\n\nvar _symbol = __webpack_require__(1003);\n\nexports.createSymbol = _symbol.createSymbol;\n\n/**\n * Create a muti dimension List structure from seriesModel.\n * @param  {module:echarts/model/Model} seriesModel\n * @return {module:echarts/data/List} list\n */\nfunction createList(seriesModel) {\n  var data = seriesModel.get('data');\n  return createListFromArray(data, seriesModel, seriesModel.ecModel);\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n */\n\n\n/**\n * Create scale\n * @param {Array.<number>} dataExtent\n * @param {Object|module:echarts/Model} option\n */\nfunction createScale(dataExtent, option) {\n  var axisModel = option;\n\n  if (!(option instanceof Model)) {\n    axisModel = new Model(option);\n    zrUtil.mixin(axisModel, axisModelCommonMixin);\n  }\n\n  var scale = axisHelper.createScaleByModel(axisModel);\n  scale.setExtent(dataExtent[0], dataExtent[1]);\n  axisHelper.niceScaleExtent(scale, axisModel);\n  return scale;\n}\n/**\n * Mixin common methods to axis model,\n *\n * Inlcude methods\n * `getFormattedLabels() => Array.<string>`\n * `getCategories() => Array.<string>`\n * `getMin(origin: boolean) => number`\n * `getMax(origin: boolean) => number`\n * `getNeedCrossZero() => boolean`\n * `setRange(start: number, end: number)`\n * `resetRange()`\n */\n\n\nfunction mixinAxisModelCommonMethods(Model) {\n  zrUtil.mixin(Model, axisModelCommonMixin);\n}\n\nexports.createList = createList;\nexports.createScale = createScale;\nexports.mixinAxisModelCommonMethods = mixinAxisModelCommonMethods;\n\n/***/ }),\n\n/***/ 1133:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar Scale = __webpack_require__(1014);\n\n/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n// FIXME only one data\nvar scaleProto = Scale.prototype;\nvar OrdinalScale = Scale.extend({\n  type: 'ordinal',\n  init: function (data, extent) {\n    this._data = data;\n    this._extent = extent || [0, data.length - 1];\n  },\n  parse: function (val) {\n    return typeof val === 'string' ? zrUtil.indexOf(this._data, val) // val might be float.\n    : Math.round(val);\n  },\n  contain: function (rank) {\n    rank = this.parse(rank);\n    return scaleProto.contain.call(this, rank) && this._data[rank] != null;\n  },\n\n  /**\n   * Normalize given rank or name to linear [0, 1]\n   * @param {number|string} [val]\n   * @return {number}\n   */\n  normalize: function (val) {\n    return scaleProto.normalize.call(this, this.parse(val));\n  },\n  scale: function (val) {\n    return Math.round(scaleProto.scale.call(this, val));\n  },\n\n  /**\n   * @return {Array}\n   */\n  getTicks: function () {\n    var ticks = [];\n    var extent = this._extent;\n    var rank = extent[0];\n\n    while (rank <= extent[1]) {\n      ticks.push(rank);\n      rank++;\n    }\n\n    return ticks;\n  },\n\n  /**\n   * Get item on rank n\n   * @param {number} n\n   * @return {string}\n   */\n  getLabel: function (n) {\n    return this._data[n];\n  },\n\n  /**\n   * @return {number}\n   */\n  count: function () {\n    return this._extent[1] - this._extent[0] + 1;\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    this.unionExtent(data.getDataExtent(dim, false));\n  },\n  niceTicks: zrUtil.noop,\n  niceExtent: zrUtil.noop\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nOrdinalScale.create = function () {\n  return new OrdinalScale();\n};\n\nvar _default = OrdinalScale;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1134:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar numberUtil = __webpack_require__(981);\n\nvar formatUtil = __webpack_require__(985);\n\nvar scaleHelper = __webpack_require__(1054);\n\nvar IntervalScale = __webpack_require__(1020);\n\n// [About UTC and local time zone]:\n// In most cases, `number.parseDate` will treat input data string as local time\n// (except time zone is specified in time string). And `format.formateTime` returns\n// local time by default. option.useUTC is false by default. This design have\n// concidered these common case:\n// (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n// in local time by default.\n// (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n// as its original time, without any time difference.\nvar intervalScaleProto = IntervalScale.prototype;\nvar mathCeil = Math.ceil;\nvar mathFloor = Math.floor;\nvar ONE_SECOND = 1000;\nvar ONE_MINUTE = ONE_SECOND * 60;\nvar ONE_HOUR = ONE_MINUTE * 60;\nvar ONE_DAY = ONE_HOUR * 24; // FIXME 公用？\n\nvar bisect = function (a, x, lo, hi) {\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n\n    if (a[mid][1] < x) {\n      lo = mid + 1;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return lo;\n};\n/**\n * @alias module:echarts/coord/scale/Time\n * @constructor\n */\n\n\nvar TimeScale = IntervalScale.extend({\n  type: 'time',\n\n  /**\n   * @override\n   */\n  getLabel: function (val) {\n    var stepLvl = this._stepLvl;\n    var date = new Date(val);\n    return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n  },\n\n  /**\n   * @override\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      // Expand extent\n      extent[0] -= ONE_DAY;\n      extent[1] += ONE_DAY;\n    } // If there are no data and extent are [Infinity, -Infinity]\n\n\n    if (extent[1] === -Infinity && extent[0] === Infinity) {\n      var d = new Date();\n      extent[1] = +new Date(d.getFullYear(), d.getMonth(), d.getDate());\n      extent[0] = extent[1] - ONE_DAY;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n    }\n  },\n\n  /**\n   * @override\n   */\n  niceTicks: function (approxTickNum, minInterval, maxInterval) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n    var approxInterval = span / approxTickNum;\n\n    if (minInterval != null && approxInterval < minInterval) {\n      approxInterval = minInterval;\n    }\n\n    if (maxInterval != null && approxInterval > maxInterval) {\n      approxInterval = maxInterval;\n    }\n\n    var scaleLevelsLen = scaleLevels.length;\n    var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n    var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n    var interval = level[1]; // Same with interval scale if span is much larger than 1 year\n\n    if (level[0] === 'year') {\n      var yearSpan = span / interval; // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n      // var niceYearSpan = numberUtil.nice(yearSpan, false);\n\n      var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n      interval *= yearStep;\n    }\n\n    var timezoneOffset = this.getSetting('useUTC') ? 0 : new Date(+extent[0] || +extent[1]).getTimezoneOffset() * 60 * 1000;\n    var niceExtent = [Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset), Math.round(mathFloor((extent[1] - timezoneOffset) / interval) * interval + timezoneOffset)];\n    scaleHelper.fixExtent(niceExtent, extent);\n    this._stepLvl = level; // Interval will be used in getTicks\n\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n  parse: function (val) {\n    // val might be float.\n    return +numberUtil.parseDate(val);\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  TimeScale.prototype[methodName] = function (val) {\n    return intervalScaleProto[methodName].call(this, this.parse(val));\n  };\n}); // Steps from d3\n\nvar scaleLevels = [// Format              interval\n['hh:mm:ss', ONE_SECOND], // 1s\n['hh:mm:ss', ONE_SECOND * 5], // 5s\n['hh:mm:ss', ONE_SECOND * 10], // 10s\n['hh:mm:ss', ONE_SECOND * 15], // 15s\n['hh:mm:ss', ONE_SECOND * 30], // 30s\n['hh:mm\\nMM-dd', ONE_MINUTE], // 1m\n['hh:mm\\nMM-dd', ONE_MINUTE * 5], // 5m\n['hh:mm\\nMM-dd', ONE_MINUTE * 10], // 10m\n['hh:mm\\nMM-dd', ONE_MINUTE * 15], // 15m\n['hh:mm\\nMM-dd', ONE_MINUTE * 30], // 30m\n['hh:mm\\nMM-dd', ONE_HOUR], // 1h\n['hh:mm\\nMM-dd', ONE_HOUR * 2], // 2h\n['hh:mm\\nMM-dd', ONE_HOUR * 6], // 6h\n['hh:mm\\nMM-dd', ONE_HOUR * 12], // 12h\n['MM-dd\\nyyyy', ONE_DAY], // 1d\n['MM-dd\\nyyyy', ONE_DAY * 2], // 2d\n['MM-dd\\nyyyy', ONE_DAY * 3], // 3d\n['MM-dd\\nyyyy', ONE_DAY * 4], // 4d\n['MM-dd\\nyyyy', ONE_DAY * 5], // 5d\n['MM-dd\\nyyyy', ONE_DAY * 6], // 6d\n['week', ONE_DAY * 7], // 7d\n['MM-dd\\nyyyy', ONE_DAY * 10], // 10d\n['week', ONE_DAY * 14], // 2w\n['week', ONE_DAY * 21], // 3w\n['month', ONE_DAY * 31], // 1M\n['week', ONE_DAY * 42], // 6w\n['month', ONE_DAY * 62], // 2M\n['week', ONE_DAY * 42], // 10w\n['quarter', ONE_DAY * 380 / 4], // 3M\n['month', ONE_DAY * 31 * 4], // 4M\n['month', ONE_DAY * 31 * 5], // 5M\n['half-year', ONE_DAY * 380 / 2], // 6M\n['month', ONE_DAY * 31 * 8], // 8M\n['month', ONE_DAY * 31 * 10], // 10M\n['year', ONE_DAY * 380] // 1Y\n];\n/**\n * @param {module:echarts/model/Model}\n * @return {module:echarts/scale/Time}\n */\n\nTimeScale.create = function (model) {\n  return new TimeScale({\n    useUTC: model.ecModel.get('useUTC')\n  });\n};\n\nvar _default = TimeScale;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1135:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar Scale = __webpack_require__(1014);\n\nvar numberUtil = __webpack_require__(981);\n\nvar IntervalScale = __webpack_require__(1020);\n\n/**\n * Log scale\n * @module echarts/scale/Log\n */\n// Use some method of IntervalScale\nvar scaleProto = Scale.prototype;\nvar intervalScaleProto = IntervalScale.prototype;\nvar getPrecisionSafe = numberUtil.getPrecisionSafe;\nvar roundingErrorFix = numberUtil.round;\nvar mathFloor = Math.floor;\nvar mathCeil = Math.ceil;\nvar mathPow = Math.pow;\nvar mathLog = Math.log;\nvar LogScale = Scale.extend({\n  type: 'log',\n  base: 10,\n  $constructor: function () {\n    Scale.apply(this, arguments);\n    this._originalScale = new IntervalScale();\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    var originalScale = this._originalScale;\n    var extent = this._extent;\n    var originalExtent = originalScale.getExtent();\n    return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n      var powVal = numberUtil.round(mathPow(this.base, val)); // Fix #4158\n\n      powVal = val === extent[0] && originalScale.__fixMin ? fixRoundingError(powVal, originalExtent[0]) : powVal;\n      powVal = val === extent[1] && originalScale.__fixMax ? fixRoundingError(powVal, originalExtent[1]) : powVal;\n      return powVal;\n    }, this);\n  },\n\n  /**\n   * @param {number} val\n   * @return {string}\n   */\n  getLabel: intervalScaleProto.getLabel,\n\n  /**\n   * @param  {number} val\n   * @return {number}\n   */\n  scale: function (val) {\n    val = scaleProto.scale.call(this, val);\n    return mathPow(this.base, val);\n  },\n\n  /**\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var base = this.base;\n    start = mathLog(start) / mathLog(base);\n    end = mathLog(end) / mathLog(base);\n    intervalScaleProto.setExtent.call(this, start, end);\n  },\n\n  /**\n   * @return {number} end\n   */\n  getExtent: function () {\n    var base = this.base;\n    var extent = scaleProto.getExtent.call(this);\n    extent[0] = mathPow(base, extent[0]);\n    extent[1] = mathPow(base, extent[1]); // Fix #4158\n\n    var originalScale = this._originalScale;\n    var originalExtent = originalScale.getExtent();\n    originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n    originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n    return extent;\n  },\n\n  /**\n   * @param  {Array.<number>} extent\n   */\n  unionExtent: function (extent) {\n    this._originalScale.unionExtent(extent);\n\n    var base = this.base;\n    extent[0] = mathLog(extent[0]) / mathLog(base);\n    extent[1] = mathLog(extent[1]) / mathLog(base);\n    scaleProto.unionExtent.call(this, extent);\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    this.unionExtent(data.getDataExtent(dim, true, function (val) {\n      return val > 0;\n    }));\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   * @param  {number} [approxTickNum = 10] Given approx tick number\n   */\n  niceTicks: function (approxTickNum) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (span === Infinity || span <= 0) {\n      return;\n    }\n\n    var interval = numberUtil.quantity(span);\n    var err = approxTickNum / span * interval; // Filter ticks to get closer to the desired count.\n\n    if (err <= 0.5) {\n      interval *= 10;\n    } // Interval should be integer\n\n\n    while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n      interval *= 10;\n    }\n\n    var niceExtent = [numberUtil.round(mathCeil(extent[0] / interval) * interval), numberUtil.round(mathFloor(extent[1] / interval) * interval)];\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @override\n   */\n  niceExtent: function (opt) {\n    intervalScaleProto.niceExtent.call(this, opt);\n    var originalScale = this._originalScale;\n    originalScale.__fixMin = opt.fixMin;\n    originalScale.__fixMax = opt.fixMax;\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  LogScale.prototype[methodName] = function (val) {\n    val = mathLog(val) / mathLog(this.base);\n    return scaleProto[methodName].call(this, val);\n  };\n});\n\nLogScale.create = function () {\n  return new LogScale();\n};\n\nfunction fixRoundingError(val, originalVal) {\n  return roundingErrorFix(val, getPrecisionSafe(originalVal));\n}\n\nvar _default = LogScale;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1136:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar modelUtil = __webpack_require__(982);\n\nvar modelHelper = __webpack_require__(1015);\n\nvar findPointFromSeries = __webpack_require__(1055);\n\nvar each = zrUtil.each;\nvar curry = zrUtil.curry;\nvar get = modelUtil.makeGetter();\n/**\n * Basic logic: check all axis, if they do not demand show/highlight,\n * then hide/downplay them.\n *\n * @param {Object} coordSysAxesInfo\n * @param {Object} payload\n * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n * @param {Object} [payload.dataIndex] finder, restrict target axes.\n * @param {Object} [payload.axesInfo] finder, restrict target axes.\n *        [{\n *          axisDim: 'x'|'y'|'angle'|...,\n *          axisIndex: ...,\n *          value: ...\n *        }, ...]\n * @param {Function} [payload.dispatchAction]\n * @param {Object} [payload.tooltipOption]\n * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n *        which can be specified in dispatchAction\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n * @return {Object} content of event obj for echarts.connect.\n */\n\nfunction _default(payload, ecModel, api) {\n  var currTrigger = payload.currTrigger;\n  var point = [payload.x, payload.y];\n  var finder = payload;\n  var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n  var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo; // Pending\n  // See #6121. But we are not able to reproduce it yet.\n\n  if (!coordSysAxesInfo) {\n    return;\n  }\n\n  if (illegalPoint(point)) {\n    // Used in the default behavior of `connection`: use the sample seriesIndex\n    // and dataIndex. And also used in the tooltipView trigger.\n    point = findPointFromSeries({\n      seriesIndex: finder.seriesIndex,\n      // Do not use dataIndexInside from other ec instance.\n      // FIXME: auto detect it?\n      dataIndex: finder.dataIndex\n    }, ecModel).point;\n  }\n\n  var isIllegalPoint = illegalPoint(point); // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n  // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n  // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n  // and dataIndex.\n\n  var inputAxesInfo = finder.axesInfo;\n  var axesInfo = coordSysAxesInfo.axesInfo;\n  var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n  var outputFinder = {};\n  var showValueMap = {};\n  var dataByCoordSys = {\n    list: [],\n    map: {}\n  };\n  var updaters = {\n    showPointer: curry(showPointer, showValueMap),\n    showTooltip: curry(showTooltip, dataByCoordSys)\n  }; // Process for triggered axes.\n\n  each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n    // If a point given, it must be contained by the coordinate system.\n    var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n    each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n      var axis = axisInfo.axis;\n      var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo); // If no inputAxesInfo, no axis is restricted.\n\n      if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n        var val = inputAxisInfo && inputAxisInfo.value;\n\n        if (val == null && !isIllegalPoint) {\n          val = axis.pointToData(point);\n        }\n\n        val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n      }\n    });\n  }); // Process for linked axes.\n\n  var linkTriggers = {};\n  each(axesInfo, function (tarAxisInfo, tarKey) {\n    var linkGroup = tarAxisInfo.linkGroup; // If axis has been triggered in the previous stage, it should not be triggered by link.\n\n    if (linkGroup && !showValueMap[tarKey]) {\n      each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n        var srcValItem = showValueMap[srcKey]; // If srcValItem exist, source axis is triggered, so link to target axis.\n\n        if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n          var val = srcValItem.value;\n          linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo))));\n          linkTriggers[tarAxisInfo.key] = val;\n        }\n      });\n    }\n  });\n  each(linkTriggers, function (val, tarKey) {\n    processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n  });\n  updateModelActually(showValueMap, axesInfo, outputFinder);\n  dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n  dispatchHighDownActually(axesInfo, dispatchAction, api);\n  return outputFinder;\n}\n\nfunction processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n  var axis = axisInfo.axis;\n\n  if (axis.scale.isBlank() || !axis.containData(newValue)) {\n    return;\n  }\n\n  if (!axisInfo.involveSeries) {\n    updaters.showPointer(axisInfo, newValue);\n    return;\n  } // Heavy calculation. So put it after axis.containData checking.\n\n\n  var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n  var payloadBatch = payloadInfo.payloadBatch;\n  var snapToValue = payloadInfo.snapToValue; // Fill content of event obj for echarts.connect.\n  // By defualt use the first involved series data as a sample to connect.\n\n  if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n    zrUtil.extend(outputFinder, payloadBatch[0]);\n  } // If no linkSource input, this process is for collecting link\n  // target, where snap should not be accepted.\n\n\n  if (!dontSnap && axisInfo.snap) {\n    if (axis.containData(snapToValue) && snapToValue != null) {\n      newValue = snapToValue;\n    }\n  }\n\n  updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder); // Tooltip should always be snapToValue, otherwise there will be\n  // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n\n  updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n}\n\nfunction buildPayloadsBySeries(value, axisInfo) {\n  var axis = axisInfo.axis;\n  var dim = axis.dim;\n  var snapToValue = value;\n  var payloadBatch = [];\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n  each(axisInfo.seriesModels, function (series, idx) {\n    var dataDim = series.coordDimToDataDim(dim);\n    var seriesNestestValue;\n    var dataIndices;\n\n    if (series.getAxisTooltipData) {\n      var result = series.getAxisTooltipData(dataDim, value, axis);\n      dataIndices = result.dataIndices;\n      seriesNestestValue = result.nestestValue;\n    } else {\n      dataIndices = series.getData().indicesOfNearest(dataDim[0], value, // Add a threshold to avoid find the wrong dataIndex\n      // when data length is not same.\n      false, axis.type === 'category' ? 0.5 : null);\n\n      if (!dataIndices.length) {\n        return;\n      }\n\n      seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n    }\n\n    if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n      return;\n    }\n\n    var diff = value - seriesNestestValue;\n    var dist = Math.abs(diff); // Consider category case\n\n    if (dist <= minDist) {\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        snapToValue = seriesNestestValue;\n        payloadBatch.length = 0;\n      }\n\n      each(dataIndices, function (dataIndex) {\n        payloadBatch.push({\n          seriesIndex: series.seriesIndex,\n          dataIndexInside: dataIndex,\n          dataIndex: series.getData().getRawIndex(dataIndex)\n        });\n      });\n    }\n  });\n  return {\n    payloadBatch: payloadBatch,\n    snapToValue: snapToValue\n  };\n}\n\nfunction showPointer(showValueMap, axisInfo, value, payloadBatch) {\n  showValueMap[axisInfo.key] = {\n    value: value,\n    payloadBatch: payloadBatch\n  };\n}\n\nfunction showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n  var payloadBatch = payloadInfo.payloadBatch;\n  var axis = axisInfo.axis;\n  var axisModel = axis.model;\n  var axisPointerModel = axisInfo.axisPointerModel; // If no data, do not create anything in dataByCoordSys,\n  // whose length will be used to judge whether dispatch action.\n\n  if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n    return;\n  }\n\n  var coordSysModel = axisInfo.coordSys.model;\n  var coordSysKey = modelHelper.makeKey(coordSysModel);\n  var coordSysItem = dataByCoordSys.map[coordSysKey];\n\n  if (!coordSysItem) {\n    coordSysItem = dataByCoordSys.map[coordSysKey] = {\n      coordSysId: coordSysModel.id,\n      coordSysIndex: coordSysModel.componentIndex,\n      coordSysType: coordSysModel.type,\n      coordSysMainType: coordSysModel.mainType,\n      dataByAxis: []\n    };\n    dataByCoordSys.list.push(coordSysItem);\n  }\n\n  coordSysItem.dataByAxis.push({\n    axisDim: axis.dim,\n    axisIndex: axisModel.componentIndex,\n    axisType: axisModel.type,\n    axisId: axisModel.id,\n    value: value,\n    // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n    // depends that all models have been updated. So it should not be performed\n    // here. Considering axisPointerModel used here is volatile, which is hard\n    // to be retrieve in TooltipView, we prepare parameters here.\n    valueLabelOpt: {\n      precision: axisPointerModel.get('label.precision'),\n      formatter: axisPointerModel.get('label.formatter')\n    },\n    seriesDataIndices: payloadBatch.slice()\n  });\n}\n\nfunction updateModelActually(showValueMap, axesInfo, outputFinder) {\n  var outputAxesInfo = outputFinder.axesInfo = []; // Basic logic: If no 'show' required, 'hide' this axisPointer.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    var valItem = showValueMap[key];\n\n    if (valItem) {\n      !axisInfo.useHandle && (option.status = 'show');\n      option.value = valItem.value; // For label formatter param and highlight.\n\n      option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n    } // When always show (e.g., handle used), remain\n    // original value and status.\n    else {\n        // If hide, value still need to be set, consider\n        // click legend to toggle axis blank.\n        !axisInfo.useHandle && (option.status = 'hide');\n      } // If status is 'hide', should be no info in payload.\n\n\n    option.status === 'show' && outputAxesInfo.push({\n      axisDim: axisInfo.axis.dim,\n      axisIndex: axisInfo.axis.model.componentIndex,\n      value: option.value\n    });\n  });\n}\n\nfunction dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n  // Basic logic: If no showTip required, hideTip will be dispatched.\n  if (illegalPoint(point) || !dataByCoordSys.list.length) {\n    dispatchAction({\n      type: 'hideTip'\n    });\n    return;\n  } // In most case only one axis (or event one series is used). It is\n  // convinient to fetch payload.seriesIndex and payload.dataIndex\n  // dirtectly. So put the first seriesIndex and dataIndex of the first\n  // axis on the payload.\n\n\n  var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n  dispatchAction({\n    type: 'showTip',\n    escapeConnect: true,\n    x: point[0],\n    y: point[1],\n    tooltipOption: payload.tooltipOption,\n    position: payload.position,\n    dataIndexInside: sampleItem.dataIndexInside,\n    dataIndex: sampleItem.dataIndex,\n    seriesIndex: sampleItem.seriesIndex,\n    dataByCoordSys: dataByCoordSys.list\n  });\n}\n\nfunction dispatchHighDownActually(axesInfo, dispatchAction, api) {\n  // FIXME\n  // highlight status modification shoule be a stage of main process?\n  // (Consider confilct (e.g., legend and axisPointer) and setOption)\n  var zr = api.getZr();\n  var highDownKey = 'axisPointerLastHighlights';\n  var lastHighlights = get(zr)[highDownKey] || {};\n  var newHighlights = get(zr)[highDownKey] = {}; // Update highlight/downplay status according to axisPointer model.\n  // Build hash map and remove duplicate incidentally.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n      var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n      newHighlights[key] = batchItem;\n    });\n  }); // Diff.\n\n  var toHighlight = [];\n  var toDownplay = [];\n  zrUtil.each(lastHighlights, function (batchItem, key) {\n    !newHighlights[key] && toDownplay.push(batchItem);\n  });\n  zrUtil.each(newHighlights, function (batchItem, key) {\n    !lastHighlights[key] && toHighlight.push(batchItem);\n  });\n  toDownplay.length && api.dispatchAction({\n    type: 'downplay',\n    escapeConnect: true,\n    batch: toDownplay\n  });\n  toHighlight.length && api.dispatchAction({\n    type: 'highlight',\n    escapeConnect: true,\n    batch: toHighlight\n  });\n}\n\nfunction findInputAxisInfo(inputAxesInfo, axisInfo) {\n  for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n    var inputAxisInfo = inputAxesInfo[i];\n\n    if (axisInfo.axis.dim === inputAxisInfo.axisDim && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex) {\n      return inputAxisInfo;\n    }\n  }\n}\n\nfunction makeMapperParam(axisInfo) {\n  var axisModel = axisInfo.axis.model;\n  var item = {};\n  var dim = item.axisDim = axisInfo.axis.dim;\n  item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n  item.axisName = item[dim + 'AxisName'] = axisModel.name;\n  item.axisId = item[dim + 'AxisId'] = axisModel.id;\n  return item;\n}\n\nfunction illegalPoint(point) {\n  return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1137:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(979);\n\nvar AxisPointerModel = echarts.extendComponentModel({\n  type: 'axisPointer',\n  coordSysAxesInfo: null,\n  defaultOption: {\n    // 'auto' means that show when triggered by tooltip or handle.\n    show: 'auto',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: null,\n    // set default in AxisPonterView.js\n    zlevel: 0,\n    z: 50,\n    type: 'line',\n    // axispointer triggered by tootip determine snap automatically,\n    // see `modelHelper`.\n    snap: false,\n    triggerTooltip: true,\n    value: null,\n    status: null,\n    // Init value depends on whether handle is used.\n    // [group0, group1, ...]\n    // Each group can be: {\n    //      mapper: function () {},\n    //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n    //      xAxisId: ...,\n    //      yAxisName: ...,\n    //      angleAxisIndex: ...\n    // }\n    // mapper: can be ignored.\n    //      input: {axisInfo, value}\n    //      output: {axisInfo, value}\n    link: [],\n    // Do not set 'auto' here, otherwise global animation: false\n    // will not effect at this axispointer.\n    animation: null,\n    animationDurationUpdate: 200,\n    lineStyle: {\n      color: '#aaa',\n      width: 1,\n      type: 'solid'\n    },\n    shadowStyle: {\n      color: 'rgba(150,150,150,0.3)'\n    },\n    label: {\n      show: true,\n      formatter: null,\n      // string | Function\n      precision: 'auto',\n      // Or a number like 0, 1, 2 ...\n      margin: 3,\n      color: '#fff',\n      padding: [5, 7, 5, 7],\n      backgroundColor: 'auto',\n      // default: axis line color\n      borderColor: null,\n      borderWidth: 0,\n      shadowBlur: 3,\n      shadowColor: '#aaa' // Considering applicability, common style should\n      // better not have shadowOffset.\n      // shadowOffsetX: 0,\n      // shadowOffsetY: 2\n\n    },\n    handle: {\n      show: false,\n      icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z',\n      // jshint ignore:line\n      size: 45,\n      // handle margin is from symbol center to axis, which is stable when circular move.\n      margin: 50,\n      // color: '#1b8bbd'\n      // color: '#2f4554'\n      color: '#333',\n      shadowBlur: 3,\n      shadowColor: '#aaa',\n      shadowOffsetX: 0,\n      shadowOffsetY: 2,\n      // For mobile performance\n      throttle: 40\n    }\n  }\n});\nvar _default = AxisPointerModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1138:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(979);\n\nvar globalListener = __webpack_require__(1056);\n\nvar AxisPointerView = echarts.extendComponentView({\n  type: 'axisPointer',\n  render: function (globalAxisPointerModel, ecModel, api) {\n    var globalTooltipModel = ecModel.getComponent('tooltip');\n    var triggerOn = globalAxisPointerModel.get('triggerOn') || globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click'; // Register global listener in AxisPointerView to enable\n    // AxisPointerView to be independent to Tooltip.\n\n    globalListener.register('axisPointer', api, function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none' && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)) {\n        dispatchAction({\n          type: 'updateAxisPointer',\n          currTrigger: currTrigger,\n          x: e && e.offsetX,\n          y: e && e.offsetY\n        });\n      }\n    });\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    globalListener.unregister(api.getZr(), 'axisPointer');\n    AxisPointerView.superApply(this._model, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    globalListener.unregister('axisPointer', api);\n    AxisPointerView.superApply(this._model, 'dispose', arguments);\n  }\n});\nvar _default = AxisPointerView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1139:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(979);\n\nvar _default = echarts.extendComponentModel({\n  type: 'tooltip',\n  dependencies: ['axisPointer'],\n  defaultOption: {\n    zlevel: 0,\n    z: 8,\n    show: true,\n    // tooltip主体内容\n    showContent: true,\n    // 'trigger' only works on coordinate system.\n    // 'item' | 'axis' | 'none'\n    trigger: 'item',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: 'mousemove|click',\n    alwaysShowContent: false,\n    displayMode: 'single',\n    // 'single' | 'multipleByCoordSys'\n    // 位置 {Array} | {Function}\n    // position: null\n    // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n    // align: null,\n    // verticalAlign: null,\n    // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n    confine: false,\n    // 内容格式器：{string}（Template） ¦ {Function}\n    // formatter: null\n    showDelay: 0,\n    // 隐藏延迟，单位ms\n    hideDelay: 100,\n    // 动画变换时间，单位s\n    transitionDuration: 0.4,\n    enterable: false,\n    // 提示背景颜色，默认为透明度为0.7的黑色\n    backgroundColor: 'rgba(50,50,50,0.7)',\n    // 提示边框颜色\n    borderColor: '#333',\n    // 提示边框圆角，单位px，默认为4\n    borderRadius: 4,\n    // 提示边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 提示内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // Extra css text\n    extraCssText: '',\n    // 坐标轴指示器，坐标轴触发有效\n    axisPointer: {\n      // 默认为直线\n      // 可选为：'line' | 'shadow' | 'cross'\n      type: 'line',\n      // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n      // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n      // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n      // 极坐标系会默认选择 angle 轴\n      axis: 'auto',\n      animation: 'auto',\n      animationDurationUpdate: 200,\n      animationEasingUpdate: 'exponentialOut',\n      crossStyle: {\n        color: '#999',\n        width: 1,\n        type: 'dashed',\n        // TODO formatter\n        textStyle: {} // lineStyle and shadowStyle should not be specified here,\n        // otherwise it will always override those styles on option.axisPointer.\n\n      }\n    },\n    textStyle: {\n      color: '#fff',\n      fontSize: 14\n    }\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1140:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(979);\n\nvar zrUtil = __webpack_require__(978);\n\nvar env = __webpack_require__(986);\n\nvar TooltipContent = __webpack_require__(1141);\n\nvar formatUtil = __webpack_require__(985);\n\nvar numberUtil = __webpack_require__(981);\n\nvar graphic = __webpack_require__(980);\n\nvar findPointFromSeries = __webpack_require__(1055);\n\nvar layoutUtil = __webpack_require__(990);\n\nvar Model = __webpack_require__(989);\n\nvar globalListener = __webpack_require__(1056);\n\nvar axisHelper = __webpack_require__(996);\n\nvar axisPointerViewHelper = __webpack_require__(1035);\n\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar parsePercent = numberUtil.parsePercent;\nvar proxyRect = new graphic.Rect({\n  shape: {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  }\n});\n\nvar _default = echarts.extendComponentView({\n  type: 'tooltip',\n  init: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    var tooltipContent = new TooltipContent(api.getDom(), api);\n    this._tooltipContent = tooltipContent;\n  },\n  render: function (tooltipModel, ecModel, api) {\n    if (env.node) {\n      return;\n    } // Reset\n\n\n    this.group.removeAll();\n    /**\n     * @private\n     * @type {module:echarts/component/tooltip/TooltipModel}\n     */\n\n    this._tooltipModel = tooltipModel;\n    /**\n     * @private\n     * @type {module:echarts/model/Global}\n     */\n\n    this._ecModel = ecModel;\n    /**\n     * @private\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this._api = api;\n    /**\n     * Should be cleaned when render.\n     * @private\n     * @type {Array.<Array.<Object>>}\n     */\n\n    this._lastDataByCoordSys = null;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.update();\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n    this._initGlobalListener();\n\n    this._keepShow();\n  },\n  _initGlobalListener: function () {\n    var tooltipModel = this._tooltipModel;\n    var triggerOn = tooltipModel.get('triggerOn');\n    globalListener.register('itemTooltip', this._api, bind(function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none') {\n        if (triggerOn.indexOf(currTrigger) >= 0) {\n          this._tryShow(e, dispatchAction);\n        } else if (currTrigger === 'leave') {\n          this._hide(dispatchAction);\n        }\n      }\n    }, this));\n  },\n  _keepShow: function () {\n    var tooltipModel = this._tooltipModel;\n    var ecModel = this._ecModel;\n    var api = this._api; // Try to keep the tooltip show when refreshing\n\n    if (this._lastX != null && this._lastY != null // When user is willing to control tooltip totally using API,\n    // self.manuallyShowTip({x, y}) might cause tooltip hide,\n    // which is not expected.\n    && tooltipModel.get('triggerOn') !== 'none') {\n      var self = this;\n      clearTimeout(this._refreshUpdateTimeout);\n      this._refreshUpdateTimeout = setTimeout(function () {\n        // Show tip next tick after other charts are rendered\n        // In case highlight action has wrong result\n        // FIXME\n        self.manuallyShowTip(tooltipModel, ecModel, api, {\n          x: self._lastX,\n          y: self._lastY\n        });\n      });\n    }\n  },\n\n  /**\n   * Show tip manually by\n   * dispatchAction({\n   *     type: 'showTip',\n   *     x: 10,\n   *     y: 10\n   * });\n   * Or\n   * dispatchAction({\n   *      type: 'showTip',\n   *      seriesIndex: 0,\n   *      dataIndex or dataIndexInside or name\n   * });\n   *\n   *  TODO Batch\n   */\n  manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n    if (payload.from === this.uid || env.node) {\n      return;\n    }\n\n    var dispatchAction = makeDispatchAction(payload, api); // Reset ticket\n\n    this._ticket = ''; // When triggered from axisPointer.\n\n    var dataByCoordSys = payload.dataByCoordSys;\n\n    if (payload.tooltip && payload.x != null && payload.y != null) {\n      var el = proxyRect;\n      el.position = [payload.x, payload.y];\n      el.update();\n      el.tooltip = payload.tooltip; // Manually show tooltip while view is not using zrender elements.\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        target: el\n      }, dispatchAction);\n    } else if (dataByCoordSys) {\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        event: {},\n        dataByCoordSys: payload.dataByCoordSys,\n        tooltipOption: payload.tooltipOption\n      }, dispatchAction);\n    } else if (payload.seriesIndex != null) {\n      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n        return;\n      }\n\n      var pointInfo = findPointFromSeries(payload, ecModel);\n      var cx = pointInfo.point[0];\n      var cy = pointInfo.point[1];\n\n      if (cx != null && cy != null) {\n        this._tryShow({\n          offsetX: cx,\n          offsetY: cy,\n          position: payload.position,\n          target: pointInfo.el,\n          event: {}\n        }, dispatchAction);\n      }\n    } else if (payload.x != null && payload.y != null) {\n      // FIXME\n      // should wrap dispatchAction like `axisPointer/globalListener` ?\n      api.dispatchAction({\n        type: 'updateAxisPointer',\n        x: payload.x,\n        y: payload.y\n      });\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        target: api.getZr().findHover(payload.x, payload.y).target,\n        event: {}\n      }, dispatchAction);\n    }\n  },\n  manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n    var tooltipContent = this._tooltipContent;\n\n    if (!this._alwaysShowContent) {\n      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n    }\n\n    this._lastX = this._lastY = null;\n\n    if (payload.from !== this.uid) {\n      this._hide(makeDispatchAction(payload, api));\n    }\n  },\n  // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n  // and tooltip.\n  _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n    var seriesIndex = payload.seriesIndex;\n    var dataIndex = payload.dataIndex;\n    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n      return;\n    }\n\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (!seriesModel) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model, tooltipModel]);\n\n    if (tooltipModel.get('trigger') !== 'axis') {\n      return;\n    }\n\n    api.dispatchAction({\n      type: 'updateAxisPointer',\n      seriesIndex: seriesIndex,\n      dataIndex: dataIndex,\n      position: payload.position\n    });\n    return true;\n  },\n  _tryShow: function (e, dispatchAction) {\n    var el = e.target;\n    var tooltipModel = this._tooltipModel;\n\n    if (!tooltipModel) {\n      return;\n    } // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n\n\n    this._lastX = e.offsetX;\n    this._lastY = e.offsetY;\n    var dataByCoordSys = e.dataByCoordSys;\n\n    if (dataByCoordSys && dataByCoordSys.length) {\n      this._showAxisTooltip(dataByCoordSys, e);\n    } // Always show item tooltip if mouse is on the element with dataIndex\n    else if (el && el.dataIndex != null) {\n        this._lastDataByCoordSys = null;\n\n        this._showSeriesItemTooltip(e, el, dispatchAction);\n      } // Tooltip provided directly. Like legend.\n      else if (el && el.tooltip) {\n          this._lastDataByCoordSys = null;\n\n          this._showComponentItemTooltip(e, el, dispatchAction);\n        } else {\n          this._lastDataByCoordSys = null;\n\n          this._hide(dispatchAction);\n        }\n  },\n  _showOrMove: function (tooltipModel, cb) {\n    // showDelay is used in this case: tooltip.enterable is set\n    // as true. User intent to move mouse into tooltip and click\n    // something. `showDelay` makes it easyer to enter the content\n    // but tooltip do not move immediately.\n    var delay = tooltipModel.get('showDelay');\n    cb = zrUtil.bind(cb, this);\n    clearTimeout(this._showTimout);\n    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\n  },\n  _showAxisTooltip: function (dataByCoordSys, e) {\n    var ecModel = this._ecModel;\n    var globalTooltipModel = this._tooltipModel;\n    var point = [e.offsetX, e.offsetY];\n    var singleDefaultHTML = [];\n    var singleParamsList = [];\n    var singleTooltipModel = buildTooltipModel([e.tooltipOption, globalTooltipModel]);\n    each(dataByCoordSys, function (itemCoordSys) {\n      // var coordParamList = [];\n      // var coordDefaultHTML = [];\n      // var coordTooltipModel = buildTooltipModel([\n      //     e.tooltipOption,\n      //     itemCoordSys.tooltipOption,\n      //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n      //     globalTooltipModel\n      // ]);\n      // var displayMode = coordTooltipModel.get('displayMode');\n      // var paramsList = displayMode === 'single' ? singleParamsList : [];\n      each(itemCoordSys.dataByAxis, function (item) {\n        var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n        var axisValue = item.value;\n        var seriesDefaultHTML = [];\n\n        if (!axisModel || axisValue == null) {\n          return;\n        }\n\n        var valueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, item.seriesDataIndices, item.valueLabelOpt);\n        zrUtil.each(item.seriesDataIndices, function (idxItem) {\n          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n          var dataIndex = idxItem.dataIndexInside;\n          var dataParams = series && series.getDataParams(dataIndex);\n          dataParams.axisDim = item.axisDim;\n          dataParams.axisIndex = item.axisIndex;\n          dataParams.axisType = item.axisType;\n          dataParams.axisId = item.axisId;\n          dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n          dataParams.axisValueLabel = valueLabel;\n\n          if (dataParams) {\n            singleParamsList.push(dataParams);\n            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n          }\n        }); // Default tooltip content\n        // FIXME\n        // (1) shold be the first data which has name?\n        // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n\n        var firstLine = valueLabel;\n        singleDefaultHTML.push((firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '') + seriesDefaultHTML.join('<br />'));\n      });\n    }, this); // In most case, the second axis is shown upper than the first one.\n\n    singleDefaultHTML.reverse();\n    singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n    var positionExpr = e.position;\n\n    this._showOrMove(singleTooltipModel, function () {\n      if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, singleParamsList);\n      } else {\n        this._showTooltipContent(singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(), point[0], point[1], positionExpr);\n      }\n    }); // Do not trigger events here, because this branch only be entered\n    // from dispatchAction.\n\n  },\n  _showSeriesItemTooltip: function (e, el, dispatchAction) {\n    var ecModel = this._ecModel; // Use dataModel in element if possible\n    // Used when mouseover on a element like markPoint or edge\n    // In which case, the data is not main data in series.\n\n    var seriesIndex = el.seriesIndex;\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex); // For example, graph link.\n\n    var dataModel = el.dataModel || seriesModel;\n    var dataIndex = el.dataIndex;\n    var dataType = el.dataType;\n    var data = dataModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model, this._tooltipModel]);\n    var tooltipTrigger = tooltipModel.get('trigger');\n\n    if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n      return;\n    }\n\n    var params = dataModel.getDataParams(dataIndex, dataType);\n    var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n    this._showOrMove(tooltipModel, function () {\n      this._showTooltipContent(tooltipModel, defaultHtml, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target);\n    }); // FIXME\n    // duplicated showtip if manuallyShowTip is called from dispatchAction.\n\n\n    dispatchAction({\n      type: 'showTip',\n      dataIndexInside: dataIndex,\n      dataIndex: data.getRawIndex(dataIndex),\n      seriesIndex: seriesIndex,\n      from: this.uid\n    });\n  },\n  _showComponentItemTooltip: function (e, el, dispatchAction) {\n    var tooltipOpt = el.tooltip;\n\n    if (typeof tooltipOpt === 'string') {\n      var content = tooltipOpt;\n      tooltipOpt = {\n        content: content,\n        // Fixed formatter\n        formatter: content\n      };\n    }\n\n    var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n    var defaultHtml = subTooltipModel.get('content');\n    var asyncTicket = Math.random(); // Do not check whether `trigger` is 'none' here, because `trigger`\n    // only works on cooridinate system. In fact, we have not found case\n    // that requires setting `trigger` nothing on component yet.\n\n    this._showOrMove(subTooltipModel, function () {\n      this._showTooltipContent(subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {}, asyncTicket, e.offsetX, e.offsetY, e.position, el);\n    }); // If not dispatch showTip, tip may be hide triggered by axis.\n\n\n    dispatchAction({\n      type: 'showTip',\n      from: this.uid\n    });\n  },\n  _showTooltipContent: function (tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el) {\n    // Reset ticket\n    this._ticket = '';\n\n    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n      return;\n    }\n\n    var tooltipContent = this._tooltipContent;\n    var formatter = tooltipModel.get('formatter');\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var html = defaultHtml;\n\n    if (formatter && typeof formatter === 'string') {\n      html = formatUtil.formatTpl(formatter, params, true);\n    } else if (typeof formatter === 'function') {\n      var callback = bind(function (cbTicket, html) {\n        if (cbTicket === this._ticket) {\n          tooltipContent.setContent(html);\n\n          this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n        }\n      }, this);\n      this._ticket = asyncTicket;\n      html = formatter(params, asyncTicket, callback);\n    }\n\n    tooltipContent.setContent(html);\n    tooltipContent.show(tooltipModel);\n\n    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n  },\n\n  /**\n   * @param  {string|Function|Array.<number>|Object} positionExpr\n   * @param  {number} x Mouse x\n   * @param  {number} y Mouse y\n   * @param  {boolean} confine Whether confine tooltip content in view rect.\n   * @param  {Object|<Array.<Object>} params\n   * @param  {module:zrender/Element} el target element\n   * @param  {module:echarts/ExtensionAPI} api\n   * @return {Array.<number>}\n   */\n  _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n    var viewWidth = this._api.getWidth();\n\n    var viewHeight = this._api.getHeight();\n\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var contentSize = content.getSize();\n    var align = tooltipModel.get('align');\n    var vAlign = tooltipModel.get('verticalAlign');\n    var rect = el && el.getBoundingRect().clone();\n    el && rect.applyTransform(el.transform);\n\n    if (typeof positionExpr === 'function') {\n      // Callback of position can be an array or a string specify the position\n      positionExpr = positionExpr([x, y], params, content.el, rect, {\n        viewSize: [viewWidth, viewHeight],\n        contentSize: contentSize.slice()\n      });\n    }\n\n    if (zrUtil.isArray(positionExpr)) {\n      x = parsePercent(positionExpr[0], viewWidth);\n      y = parsePercent(positionExpr[1], viewHeight);\n    } else if (zrUtil.isObject(positionExpr)) {\n      positionExpr.width = contentSize[0];\n      positionExpr.height = contentSize[1];\n      var layoutRect = layoutUtil.getLayoutRect(positionExpr, {\n        width: viewWidth,\n        height: viewHeight\n      });\n      x = layoutRect.x;\n      y = layoutRect.y;\n      align = null; // When positionExpr is left/top/right/bottom,\n      // align and verticalAlign will not work.\n\n      vAlign = null;\n    } // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n    else if (typeof positionExpr === 'string' && el) {\n        var pos = calcTooltipPosition(positionExpr, rect, contentSize);\n        x = pos[0];\n        y = pos[1];\n      } else {\n        var pos = refixTooltipPosition(x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\n        x = pos[0];\n        y = pos[1];\n      }\n\n    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n    if (tooltipModel.get('confine')) {\n      var pos = confineTooltipPosition(x, y, content.el, viewWidth, viewHeight);\n      x = pos[0];\n      y = pos[1];\n    }\n\n    content.moveTo(x, y);\n  },\n  // FIXME\n  // Should we remove this but leave this to user?\n  _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n    var lastCoordSys = this._lastDataByCoordSys;\n    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\n    contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n      var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n      contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n      contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n        var thisItem = thisDataByAxis[indexAxis] || {};\n        var lastIndices = lastItem.seriesDataIndices || [];\n        var newIndices = thisItem.seriesDataIndices || [];\n        contentNotChanged &= lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\n        contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n          var newIdxItem = newIndices[j];\n          contentNotChanged &= lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n        });\n      });\n    });\n    this._lastDataByCoordSys = dataByCoordSys;\n    return !!contentNotChanged;\n  },\n  _hide: function (dispatchAction) {\n    // Do not directly hideLater here, because this behavior may be prevented\n    // in dispatchAction when showTip is dispatched.\n    // FIXME\n    // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n    this._lastDataByCoordSys = null;\n    dispatchAction({\n      type: 'hideTip',\n      from: this.uid\n    });\n  },\n  dispose: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    this._tooltipContent.hide();\n\n    globalListener.unregister('itemTooltip', api);\n  }\n});\n/**\n * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n * From top to bottom. (the last one should be globalTooltipModel);\n */\n\n\nfunction buildTooltipModel(modelCascade) {\n  var resultModel = modelCascade.pop();\n\n  while (modelCascade.length) {\n    var tooltipOpt = modelCascade.pop();\n\n    if (tooltipOpt) {\n      if (tooltipOpt instanceof Model) {\n        tooltipOpt = tooltipOpt.get('tooltip', true);\n      } // In each data item tooltip can be simply write:\n      // {\n      //  value: 10,\n      //  tooltip: 'Something you need to know'\n      // }\n\n\n      if (typeof tooltipOpt === 'string') {\n        tooltipOpt = {\n          formatter: tooltipOpt\n        };\n      }\n\n      resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n    }\n  }\n\n  return resultModel;\n}\n\nfunction makeDispatchAction(payload, api) {\n  return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n}\n\nfunction refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n\n  if (gapH != null) {\n    if (x + width + gapH > viewWidth) {\n      x -= width + gapH;\n    } else {\n      x += gapH;\n    }\n  }\n\n  if (gapV != null) {\n    if (y + height + gapV > viewHeight) {\n      y -= height + gapV;\n    } else {\n      y += gapV;\n    }\n  }\n\n  return [x, y];\n}\n\nfunction confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n  x = Math.min(x + width, viewWidth) - width;\n  y = Math.min(y + height, viewHeight) - height;\n  x = Math.max(x, 0);\n  y = Math.max(y, 0);\n  return [x, y];\n}\n\nfunction getOuterSize(el) {\n  var width = el.clientWidth;\n  var height = el.clientHeight; // Consider browser compatibility.\n  // IE8 does not support getComputedStyle.\n\n  if (document.defaultView && document.defaultView.getComputedStyle) {\n    var stl = document.defaultView.getComputedStyle(el);\n\n    if (stl) {\n      width += parseInt(stl.paddingLeft, 10) + parseInt(stl.paddingRight, 10) + parseInt(stl.borderLeftWidth, 10) + parseInt(stl.borderRightWidth, 10);\n      height += parseInt(stl.paddingTop, 10) + parseInt(stl.paddingBottom, 10) + parseInt(stl.borderTopWidth, 10) + parseInt(stl.borderBottomWidth, 10);\n    }\n  }\n\n  return {\n    width: width,\n    height: height\n  };\n}\n\nfunction calcTooltipPosition(position, rect, contentSize) {\n  var domWidth = contentSize[0];\n  var domHeight = contentSize[1];\n  var gap = 5;\n  var x = 0;\n  var y = 0;\n  var rectWidth = rect.width;\n  var rectHeight = rect.height;\n\n  switch (position) {\n    case 'inside':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'top':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y - domHeight - gap;\n      break;\n\n    case 'bottom':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight + gap;\n      break;\n\n    case 'left':\n      x = rect.x - domWidth - gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'right':\n      x = rect.x + rectWidth + gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n  }\n\n  return [x, y];\n}\n\nfunction isCenterAlign(align) {\n  return align === 'center' || align === 'middle';\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1141:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar zrColor = __webpack_require__(1002);\n\nvar eventUtil = __webpack_require__(998);\n\nvar env = __webpack_require__(986);\n\nvar formatUtil = __webpack_require__(985);\n\nvar each = zrUtil.each;\nvar toCamelCase = formatUtil.toCamelCase;\nvar vendors = ['', '-webkit-', '-moz-', '-o-'];\nvar gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n/**\n * @param {number} duration\n * @return {string}\n * @inner\n */\n\nfunction assembleTransition(duration) {\n  var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n  var transitionText = 'left ' + duration + 's ' + transitionCurve + ',' + 'top ' + duration + 's ' + transitionCurve;\n  return zrUtil.map(vendors, function (vendorPrefix) {\n    return vendorPrefix + 'transition:' + transitionText;\n  }).join(';');\n}\n/**\n * @param {Object} textStyle\n * @return {string}\n * @inner\n */\n\n\nfunction assembleFont(textStyleModel) {\n  var cssText = [];\n  var fontSize = textStyleModel.get('fontSize');\n  var color = textStyleModel.getTextColor();\n  color && cssText.push('color:' + color);\n  cssText.push('font:' + textStyleModel.getFont());\n  fontSize && cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n  each(['decoration', 'align'], function (name) {\n    var val = textStyleModel.get(name);\n    val && cssText.push('text-' + name + ':' + val);\n  });\n  return cssText.join(';');\n}\n/**\n * @param {Object} tooltipModel\n * @return {string}\n * @inner\n */\n\n\nfunction assembleCssText(tooltipModel) {\n  var cssText = [];\n  var transitionDuration = tooltipModel.get('transitionDuration');\n  var backgroundColor = tooltipModel.get('backgroundColor');\n  var textStyleModel = tooltipModel.getModel('textStyle');\n  var padding = tooltipModel.get('padding'); // Animation transition. Do not animate when transitionDuration is 0.\n\n  transitionDuration && cssText.push(assembleTransition(transitionDuration));\n\n  if (backgroundColor) {\n    if (env.canvasSupported) {\n      cssText.push('background-Color:' + backgroundColor);\n    } else {\n      // for ie\n      cssText.push('background-Color:#' + zrColor.toHex(backgroundColor));\n      cssText.push('filter:alpha(opacity=70)');\n    }\n  } // Border style\n\n\n  each(['width', 'color', 'radius'], function (name) {\n    var borderName = 'border-' + name;\n    var camelCase = toCamelCase(borderName);\n    var val = tooltipModel.get(camelCase);\n    val != null && cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n  }); // Text style\n\n  cssText.push(assembleFont(textStyleModel)); // Padding\n\n  if (padding != null) {\n    cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n  }\n\n  return cssText.join(';') + ';';\n}\n/**\n * @alias module:echarts/component/tooltip/TooltipContent\n * @constructor\n */\n\n\nfunction TooltipContent(container, api) {\n  var el = document.createElement('div');\n  var zr = this._zr = api.getZr();\n  this.el = el;\n  this._x = api.getWidth() / 2;\n  this._y = api.getHeight() / 2;\n  container.appendChild(el);\n  this._container = container;\n  this._show = false;\n  /**\n   * @private\n   */\n\n  this._hideTimeout;\n  var self = this;\n\n  el.onmouseenter = function () {\n    // clear the timeout in hideLater and keep showing tooltip\n    if (self._enterable) {\n      clearTimeout(self._hideTimeout);\n      self._show = true;\n    }\n\n    self._inContent = true;\n  };\n\n  el.onmousemove = function (e) {\n    e = e || window.event;\n\n    if (!self._enterable) {\n      // Try trigger zrender event to avoid mouse\n      // in and out shape too frequently\n      var handler = zr.handler;\n      eventUtil.normalizeEvent(container, e, true);\n      handler.dispatch('mousemove', e);\n    }\n  };\n\n  el.onmouseleave = function () {\n    if (self._enterable) {\n      if (self._show) {\n        self.hideLater(self._hideDelay);\n      }\n    }\n\n    self._inContent = false;\n  };\n}\n\nTooltipContent.prototype = {\n  constructor: TooltipContent,\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  _enterable: true,\n\n  /**\n   * Update when tooltip is rendered\n   */\n  update: function () {\n    // FIXME\n    // Move this logic to ec main?\n    var container = this._container;\n    var stl = container.currentStyle || document.defaultView.getComputedStyle(container);\n    var domStyle = container.style;\n\n    if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n      domStyle.position = 'relative';\n    } // Hide the tooltip\n    // PENDING\n    // this.hide();\n\n  },\n  show: function (tooltipModel) {\n    clearTimeout(this._hideTimeout);\n    var el = this.el;\n    el.style.cssText = gCssText + assembleCssText(tooltipModel) // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n    + ';left:' + this._x + 'px;top:' + this._y + 'px;' + (tooltipModel.get('extraCssText') || '');\n    el.style.display = el.innerHTML ? 'block' : 'none';\n    this._show = true;\n  },\n  setContent: function (content) {\n    this.el.innerHTML = content == null ? '' : content;\n  },\n  setEnterable: function (enterable) {\n    this._enterable = enterable;\n  },\n  getSize: function () {\n    var el = this.el;\n    return [el.clientWidth, el.clientHeight];\n  },\n  moveTo: function (x, y) {\n    // xy should be based on canvas root. But tooltipContent is\n    // the sibling of canvas root. So padding of ec container\n    // should be considered here.\n    var zr = this._zr;\n    var viewportRootOffset;\n\n    if (zr && zr.painter && (viewportRootOffset = zr.painter.getViewportRootOffset())) {\n      x += viewportRootOffset.offsetLeft;\n      y += viewportRootOffset.offsetTop;\n    }\n\n    var style = this.el.style;\n    style.left = x + 'px';\n    style.top = y + 'px';\n    this._x = x;\n    this._y = y;\n  },\n  hide: function () {\n    this.el.style.display = 'none';\n    this._show = false;\n  },\n  hideLater: function (time) {\n    if (this._show && !(this._inContent && this._enterable)) {\n      if (time) {\n        this._hideDelay = time; // Set show false to avoid invoke hideLater mutiple times\n\n        this._show = false;\n        this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n      } else {\n        this.hide();\n      }\n    }\n  },\n  isShow: function () {\n    return this._show;\n  }\n};\nvar _default = TooltipContent;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1142:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(979);\n\nvar zrUtil = __webpack_require__(978);\n\nfunction legendSelectActionHandler(methodName, payload, ecModel) {\n  var selectedMap = {};\n  var isToggleSelect = methodName === 'toggleSelected';\n  var isSelected; // Update all legend components\n\n  ecModel.eachComponent('legend', function (legendModel) {\n    if (isToggleSelect && isSelected != null) {\n      // Force other legend has same selected status\n      // Or the first is toggled to true and other are toggled to false\n      // In the case one legend has some item unSelected in option. And if other legend\n      // doesn't has the item, they will assume it is selected.\n      legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n    } else {\n      legendModel[methodName](payload.name);\n      isSelected = legendModel.isSelected(payload.name);\n    }\n\n    var legendData = legendModel.getData();\n    zrUtil.each(legendData, function (model) {\n      var name = model.get('name'); // Wrap element\n\n      if (name === '\\n' || name === '') {\n        return;\n      }\n\n      var isItemSelected = legendModel.isSelected(name);\n\n      if (selectedMap.hasOwnProperty(name)) {\n        // Unselected if any legend is unselected\n        selectedMap[name] = selectedMap[name] && isItemSelected;\n      } else {\n        selectedMap[name] = isItemSelected;\n      }\n    });\n  }); // Return the event explicitly\n\n  return {\n    name: payload.name,\n    selected: selectedMap\n  };\n}\n/**\n * @event legendToggleSelect\n * @type {Object}\n * @property {string} type 'legendToggleSelect'\n * @property {string} [from]\n * @property {string} name Series name or data item name\n */\n\n\necharts.registerAction('legendToggleSelect', 'legendselectchanged', zrUtil.curry(legendSelectActionHandler, 'toggleSelected'));\n/**\n * @event legendSelect\n * @type {Object}\n * @property {string} type 'legendSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendSelect', 'legendselected', zrUtil.curry(legendSelectActionHandler, 'select'));\n/**\n * @event legendUnSelect\n * @type {Object}\n * @property {string} type 'legendUnSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendUnSelect', 'legendunselected', zrUtil.curry(legendSelectActionHandler, 'unSelect'));\n\n/***/ }),\n\n/***/ 1143:\n/***/ (function(module, exports) {\n\nfunction _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (legendModels && legendModels.length) {\n    ecModel.filterSeries(function (series) {\n      // If in any legend component the status is not selected.\n      // Because in legend series is assumed selected when it is not in the legend data.\n      for (var i = 0; i < legendModels.length; i++) {\n        if (!legendModels[i].isSelected(series.name)) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1144:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\n/**\n * Data selectable mixin for chart series.\n * To eanble data select, option of series must have `selectedMode`.\n * And each data item will use `selected` to toggle itself selected status\n */\nvar _default = {\n  updateSelectedMap: function (targetList) {\n    this._targetList = targetList.slice();\n    this._selectTargetMap = zrUtil.reduce(targetList || [], function (targetMap, target) {\n      targetMap.set(target.name, target);\n      return targetMap;\n    }, zrUtil.createHashMap());\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  // PENGING If selectedMode is null ?\n  select: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      this._selectTargetMap.each(function (target) {\n        target.selected = false;\n      });\n    }\n\n    target && (target.selected = true);\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  unSelect: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name); // var selectedMode = this.get('selectedMode');\n    // selectedMode !== 'single' && target && (target.selected = false);\n\n    target && (target.selected = false);\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  toggleSelected: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n\n    if (target != null) {\n      this[target.selected ? 'unSelect' : 'select'](name, id);\n      return target.selected;\n    }\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  isSelected: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n    return target && target.selected;\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1145:\n/***/ (function(module, exports) {\n\n// Pick color from palette for each data item.\n// Applicable for charts that require applying color palette\n// in data level (like pie, funnel, chord).\nfunction _default(seriesType, ecModel) {\n  // Pie and funnel may use diferrent scope\n  var paletteScope = {};\n  ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n    var dataAll = seriesModel.getRawData();\n    var idxMap = {};\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      var data = seriesModel.getData();\n      data.each(function (idx) {\n        var rawIdx = data.getRawIndex(idx);\n        idxMap[rawIdx] = idx;\n      });\n      dataAll.each(function (rawIdx) {\n        var filteredIdx = idxMap[rawIdx]; // If series.itemStyle.normal.color is a function. itemVisual may be encoded\n\n        var singleDataColor = filteredIdx != null && data.getItemVisual(filteredIdx, 'color', true);\n\n        if (!singleDataColor) {\n          // FIXME Performance\n          var itemModel = dataAll.getItemModel(rawIdx);\n          var color = itemModel.get('itemStyle.normal.color') || seriesModel.getColorFromPalette(dataAll.getName(rawIdx), paletteScope); // Legend may use the visual info in data before processed\n\n          dataAll.setItemVisual(rawIdx, 'color', color); // Data is not filtered\n\n          if (filteredIdx != null) {\n            data.setItemVisual(filteredIdx, 'color', color);\n          }\n        } else {\n          // Set data all color for legend\n          dataAll.setItemVisual(rawIdx, 'color', singleDataColor);\n        }\n      });\n    }\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1146:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(979);\n\nvar zrUtil = __webpack_require__(978);\n\nvar featureManager = __webpack_require__(997);\n\nvar ToolboxModel = echarts.extendComponentModel({\n  type: 'toolbox',\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n  mergeDefaultAndTheme: function (option) {\n    ToolboxModel.superApply(this, 'mergeDefaultAndTheme', arguments);\n    zrUtil.each(this.option.feature, function (featureOpt, featureName) {\n      var Feature = featureManager.get(featureName);\n      Feature && zrUtil.merge(featureOpt, Feature.defaultOption);\n    });\n  },\n  defaultOption: {\n    show: true,\n    z: 6,\n    zlevel: 0,\n    orient: 'horizontal',\n    left: 'right',\n    top: 'top',\n    // right\n    // bottom\n    backgroundColor: 'transparent',\n    borderColor: '#ccc',\n    borderRadius: 0,\n    borderWidth: 0,\n    padding: 5,\n    itemSize: 15,\n    itemGap: 8,\n    showTitle: true,\n    iconStyle: {\n      normal: {\n        borderColor: '#666',\n        color: 'none'\n      },\n      emphasis: {\n        borderColor: '#3E98C5'\n      } // textStyle: {},\n      // feature\n\n    }\n  }\n});\nvar _default = ToolboxModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1147:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(979);\n\nvar zrUtil = __webpack_require__(978);\n\nvar textContain = __webpack_require__(993);\n\nvar featureManager = __webpack_require__(997);\n\nvar graphic = __webpack_require__(980);\n\nvar Model = __webpack_require__(989);\n\nvar DataDiffer = __webpack_require__(1013);\n\nvar listComponentHelper = __webpack_require__(1057);\n\nvar _default = echarts.extendComponentView({\n  type: 'toolbox',\n  render: function (toolboxModel, ecModel, api, payload) {\n    var group = this.group;\n    group.removeAll();\n\n    if (!toolboxModel.get('show')) {\n      return;\n    }\n\n    var itemSize = +toolboxModel.get('itemSize');\n    var featureOpts = toolboxModel.get('feature') || {};\n    var features = this._features || (this._features = {});\n    var featureNames = [];\n    zrUtil.each(featureOpts, function (opt, name) {\n      featureNames.push(name);\n    });\n    new DataDiffer(this._featureNames || [], featureNames).add(processFeature).update(processFeature).remove(zrUtil.curry(processFeature, null)).execute(); // Keep for diff.\n\n    this._featureNames = featureNames;\n\n    function processFeature(newIndex, oldIndex) {\n      var featureName = featureNames[newIndex];\n      var oldName = featureNames[oldIndex];\n      var featureOpt = featureOpts[featureName];\n      var featureModel = new Model(featureOpt, toolboxModel, toolboxModel.ecModel);\n      var feature;\n\n      if (featureName && !oldName) {\n        // Create\n        if (isUserFeatureName(featureName)) {\n          feature = {\n            model: featureModel,\n            onclick: featureModel.option.onclick,\n            featureName: featureName\n          };\n        } else {\n          var Feature = featureManager.get(featureName);\n\n          if (!Feature) {\n            return;\n          }\n\n          feature = new Feature(featureModel, ecModel, api);\n        }\n\n        features[featureName] = feature;\n      } else {\n        feature = features[oldName]; // If feature does not exsit.\n\n        if (!feature) {\n          return;\n        }\n\n        feature.model = featureModel;\n        feature.ecModel = ecModel;\n        feature.api = api;\n      }\n\n      if (!featureName && oldName) {\n        feature.dispose && feature.dispose(ecModel, api);\n        return;\n      }\n\n      if (!featureModel.get('show') || feature.unusable) {\n        feature.remove && feature.remove(ecModel, api);\n        return;\n      }\n\n      createIconPaths(featureModel, feature, featureName);\n\n      featureModel.setIconStatus = function (iconName, status) {\n        var option = this.option;\n        var iconPaths = this.iconPaths;\n        option.iconStatus = option.iconStatus || {};\n        option.iconStatus[iconName] = status; // FIXME\n\n        iconPaths[iconName] && iconPaths[iconName].trigger(status);\n      };\n\n      if (feature.render) {\n        feature.render(featureModel, ecModel, api, payload);\n      }\n    }\n\n    function createIconPaths(featureModel, feature, featureName) {\n      var iconStyleModel = featureModel.getModel('iconStyle'); // If one feature has mutiple icon. they are orginaized as\n      // {\n      //     icon: {\n      //         foo: '',\n      //         bar: ''\n      //     },\n      //     title: {\n      //         foo: '',\n      //         bar: ''\n      //     }\n      // }\n\n      var icons = feature.getIcons ? feature.getIcons() : featureModel.get('icon');\n      var titles = featureModel.get('title') || {};\n\n      if (typeof icons === 'string') {\n        var icon = icons;\n        var title = titles;\n        icons = {};\n        titles = {};\n        icons[featureName] = icon;\n        titles[featureName] = title;\n      }\n\n      var iconPaths = featureModel.iconPaths = {};\n      zrUtil.each(icons, function (iconStr, iconName) {\n        var path = graphic.createIcon(iconStr, {}, {\n          x: -itemSize / 2,\n          y: -itemSize / 2,\n          width: itemSize,\n          height: itemSize\n        });\n        path.setStyle(iconStyleModel.getModel('normal').getItemStyle());\n        path.hoverStyle = iconStyleModel.getModel('emphasis').getItemStyle();\n        graphic.setHoverStyle(path);\n\n        if (toolboxModel.get('showTitle')) {\n          path.__title = titles[iconName];\n          path.on('mouseover', function () {\n            // Should not reuse above hoverStyle, which might be modified.\n            var hoverStyle = iconStyleModel.getModel('emphasis').getItemStyle();\n            path.setStyle({\n              text: titles[iconName],\n              textPosition: hoverStyle.textPosition || 'bottom',\n              textFill: hoverStyle.fill || hoverStyle.stroke || '#000',\n              textAlign: hoverStyle.textAlign || 'center'\n            });\n          }).on('mouseout', function () {\n            path.setStyle({\n              textFill: null\n            });\n          });\n        }\n\n        path.trigger(featureModel.get('iconStatus.' + iconName) || 'normal');\n        group.add(path);\n        path.on('click', zrUtil.bind(feature.onclick, feature, ecModel, api, iconName));\n        iconPaths[iconName] = path;\n      });\n    }\n\n    listComponentHelper.layout(group, toolboxModel, api); // Render background after group is layout\n    // FIXME\n\n    group.add(listComponentHelper.makeBackground(group.getBoundingRect(), toolboxModel)); // Adjust icon title positions to avoid them out of screen\n\n    group.eachChild(function (icon) {\n      var titleText = icon.__title;\n      var hoverStyle = icon.hoverStyle; // May be background element\n\n      if (hoverStyle && titleText) {\n        var rect = textContain.getBoundingRect(titleText, textContain.makeFont(hoverStyle));\n        var offsetX = icon.position[0] + group.position[0];\n        var offsetY = icon.position[1] + group.position[1] + itemSize;\n        var needPutOnTop = false;\n\n        if (offsetY + rect.height > api.getHeight()) {\n          hoverStyle.textPosition = 'top';\n          needPutOnTop = true;\n        }\n\n        var topOffset = needPutOnTop ? -5 - rect.height : itemSize + 8;\n\n        if (offsetX + rect.width / 2 > api.getWidth()) {\n          hoverStyle.textPosition = ['100%', topOffset];\n          hoverStyle.textAlign = 'right';\n        } else if (offsetX - rect.width / 2 < 0) {\n          hoverStyle.textPosition = [0, topOffset];\n          hoverStyle.textAlign = 'left';\n        }\n      }\n    });\n  },\n  updateView: function (toolboxModel, ecModel, api, payload) {\n    zrUtil.each(this._features, function (feature) {\n      feature.updateView && feature.updateView(feature.model, ecModel, api, payload);\n    });\n  },\n  updateLayout: function (toolboxModel, ecModel, api, payload) {\n    zrUtil.each(this._features, function (feature) {\n      feature.updateLayout && feature.updateLayout(feature.model, ecModel, api, payload);\n    });\n  },\n  remove: function (ecModel, api) {\n    zrUtil.each(this._features, function (feature) {\n      feature.remove && feature.remove(ecModel, api);\n    });\n    this.group.removeAll();\n  },\n  dispose: function (ecModel, api) {\n    zrUtil.each(this._features, function (feature) {\n      feature.dispose && feature.dispose(ecModel, api);\n    });\n  }\n});\n\nfunction isUserFeatureName(featureName) {\n  return featureName.indexOf('my') === 0;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1148:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar env = __webpack_require__(986);\n\nvar lang = __webpack_require__(1005);\n\nvar featureManager = __webpack_require__(997);\n\nvar saveAsImageLang = lang.toolbox.saveAsImage;\n\nfunction SaveAsImage(model) {\n  this.model = model;\n}\n\nSaveAsImage.defaultOption = {\n  show: true,\n  icon: 'M4.7,22.9L29.3,45.5L54.7,23.4M4.6,43.6L4.6,58L53.8,58L53.8,43.6M29.2,45.1L29.2,0',\n  title: saveAsImageLang.title,\n  type: 'png',\n  // Default use option.backgroundColor\n  // backgroundColor: '#fff',\n  name: '',\n  excludeComponents: ['toolbox'],\n  pixelRatio: 1,\n  lang: saveAsImageLang.lang.slice()\n};\nSaveAsImage.prototype.unusable = !env.canvasSupported;\nvar proto = SaveAsImage.prototype;\n\nproto.onclick = function (ecModel, api) {\n  var model = this.model;\n  var title = model.get('name') || ecModel.get('title.0.text') || 'echarts';\n  var $a = document.createElement('a');\n  var type = model.get('type', true) || 'png';\n  $a.download = title + '.' + type;\n  $a.target = '_blank';\n  var url = api.getConnectedDataURL({\n    type: type,\n    backgroundColor: model.get('backgroundColor', true) || ecModel.get('backgroundColor') || '#fff',\n    excludeComponents: model.get('excludeComponents'),\n    pixelRatio: model.get('pixelRatio')\n  });\n  $a.href = url; // Chrome and Firefox\n\n  if (typeof MouseEvent === 'function' && !env.browser.ie && !env.browser.edge) {\n    var evt = new MouseEvent('click', {\n      view: window,\n      bubbles: true,\n      cancelable: false\n    });\n    $a.dispatchEvent(evt);\n  } // IE\n  else {\n      if (window.navigator.msSaveOrOpenBlob) {\n        var bstr = atob(url.split(',')[1]);\n        var n = bstr.length;\n        var u8arr = new Uint8Array(n);\n\n        while (n--) {\n          u8arr[n] = bstr.charCodeAt(n);\n        }\n\n        var blob = new Blob([u8arr]);\n        window.navigator.msSaveOrOpenBlob(blob, title + '.' + type);\n      } else {\n        var lang = model.get('lang');\n        var html = '' + '<body style=\"margin:0;\">' + '<img src=\"' + url + '\" style=\"max-width:100%;\" title=\"' + (lang && lang[0] || '') + '\" />' + '</body>';\n        var tab = window.open();\n        tab.document.write(html);\n      }\n    }\n};\n\nfeatureManager.register('saveAsImage', SaveAsImage);\nvar _default = SaveAsImage;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1149:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(979);\n\nvar zrUtil = __webpack_require__(978);\n\nvar lang = __webpack_require__(1005);\n\nvar featureManager = __webpack_require__(997);\n\nvar magicTypeLang = lang.toolbox.magicType;\n\nfunction MagicType(model) {\n  this.model = model;\n}\n\nMagicType.defaultOption = {\n  show: true,\n  type: [],\n  // Icon group\n  icon: {\n    line: 'M4.1,28.9h7.1l9.3-22l7.4,38l9.7-19.7l3,12.8h14.9M4.1,58h51.4',\n    bar: 'M6.7,22.9h10V48h-10V22.9zM24.9,13h10v35h-10V13zM43.2,2h10v46h-10V2zM3.1,58h53.7',\n    stack: 'M8.2,38.4l-8.4,4.1l30.6,15.3L60,42.5l-8.1-4.1l-21.5,11L8.2,38.4z M51.9,30l-8.1,4.2l-13.4,6.9l-13.9-6.9L8.2,30l-8.4,4.2l8.4,4.2l22.2,11l21.5-11l8.1-4.2L51.9,30z M51.9,21.7l-8.1,4.2L35.7,30l-5.3,2.8L24.9,30l-8.4-4.1l-8.3-4.2l-8.4,4.2L8.2,30l8.3,4.2l13.9,6.9l13.4-6.9l8.1-4.2l8.1-4.1L51.9,21.7zM30.4,2.2L-0.2,17.5l8.4,4.1l8.3,4.2l8.4,4.2l5.5,2.7l5.3-2.7l8.1-4.2l8.1-4.2l8.1-4.1L30.4,2.2z',\n    // jshint ignore:line\n    tiled: 'M2.3,2.2h22.8V25H2.3V2.2z M35,2.2h22.8V25H35V2.2zM2.3,35h22.8v22.8H2.3V35z M35,35h22.8v22.8H35V35z'\n  },\n  // `line`, `bar`, `stack`, `tiled`\n  title: zrUtil.clone(magicTypeLang.title),\n  option: {},\n  seriesIndex: {}\n};\nvar proto = MagicType.prototype;\n\nproto.getIcons = function () {\n  var model = this.model;\n  var availableIcons = model.get('icon');\n  var icons = {};\n  zrUtil.each(model.get('type'), function (type) {\n    if (availableIcons[type]) {\n      icons[type] = availableIcons[type];\n    }\n  });\n  return icons;\n};\n\nvar seriesOptGenreator = {\n  'line': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        type: 'line',\n        // Preserve data related option\n        data: seriesModel.get('data'),\n        stack: seriesModel.get('stack'),\n        markPoint: seriesModel.get('markPoint'),\n        markLine: seriesModel.get('markLine')\n      }, model.get('option.line') || {}, true);\n    }\n  },\n  'bar': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line') {\n      return zrUtil.merge({\n        id: seriesId,\n        type: 'bar',\n        // Preserve data related option\n        data: seriesModel.get('data'),\n        stack: seriesModel.get('stack'),\n        markPoint: seriesModel.get('markPoint'),\n        markLine: seriesModel.get('markLine')\n      }, model.get('option.bar') || {}, true);\n    }\n  },\n  'stack': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line' || seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        stack: '__ec_magicType_stack__'\n      }, model.get('option.stack') || {}, true);\n    }\n  },\n  'tiled': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line' || seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        stack: ''\n      }, model.get('option.tiled') || {}, true);\n    }\n  }\n};\nvar radioTypes = [['line', 'bar'], ['stack', 'tiled']];\n\nproto.onclick = function (ecModel, api, type) {\n  var model = this.model;\n  var seriesIndex = model.get('seriesIndex.' + type); // Not supported magicType\n\n  if (!seriesOptGenreator[type]) {\n    return;\n  }\n\n  var newOption = {\n    series: []\n  };\n\n  var generateNewSeriesTypes = function (seriesModel) {\n    var seriesType = seriesModel.subType;\n    var seriesId = seriesModel.id;\n    var newSeriesOpt = seriesOptGenreator[type](seriesType, seriesId, seriesModel, model);\n\n    if (newSeriesOpt) {\n      // PENDING If merge original option?\n      zrUtil.defaults(newSeriesOpt, seriesModel.option);\n      newOption.series.push(newSeriesOpt);\n    } // Modify boundaryGap\n\n\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.type === 'cartesian2d' && (type === 'line' || type === 'bar')) {\n      var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n\n      if (categoryAxis) {\n        var axisDim = categoryAxis.dim;\n        var axisType = axisDim + 'Axis';\n        var axisModel = ecModel.queryComponents({\n          mainType: axisType,\n          index: seriesModel.get(name + 'Index'),\n          id: seriesModel.get(name + 'Id')\n        })[0];\n        var axisIndex = axisModel.componentIndex;\n        newOption[axisType] = newOption[axisType] || [];\n\n        for (var i = 0; i <= axisIndex; i++) {\n          newOption[axisType][axisIndex] = newOption[axisType][axisIndex] || {};\n        }\n\n        newOption[axisType][axisIndex].boundaryGap = type === 'bar' ? true : false;\n      }\n    }\n  };\n\n  zrUtil.each(radioTypes, function (radio) {\n    if (zrUtil.indexOf(radio, type) >= 0) {\n      zrUtil.each(radio, function (item) {\n        model.setIconStatus(item, 'normal');\n      });\n    }\n  });\n  model.setIconStatus(type, 'emphasis');\n  ecModel.eachComponent({\n    mainType: 'series',\n    query: seriesIndex == null ? null : {\n      seriesIndex: seriesIndex\n    }\n  }, generateNewSeriesTypes);\n  api.dispatchAction({\n    type: 'changeMagicType',\n    currentType: type,\n    newOption: newOption\n  });\n};\n\necharts.registerAction({\n  type: 'changeMagicType',\n  event: 'magicTypeChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  ecModel.mergeOption(payload.newOption);\n});\nfeatureManager.register('magicType', MagicType);\nvar _default = MagicType;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1150:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(979);\n\nvar zrUtil = __webpack_require__(978);\n\nvar eventTool = __webpack_require__(998);\n\nvar lang = __webpack_require__(1005);\n\nvar featureManager = __webpack_require__(997);\n\nvar dataViewLang = lang.toolbox.dataView;\nvar BLOCK_SPLITER = new Array(60).join('-');\nvar ITEM_SPLITER = '\\t';\n/**\n * Group series into two types\n *  1. on category axis, like line, bar\n *  2. others, like scatter, pie\n * @param {module:echarts/model/Global} ecModel\n * @return {Object}\n * @inner\n */\n\nfunction groupSeries(ecModel) {\n  var seriesGroupByCategoryAxis = {};\n  var otherSeries = [];\n  var meta = [];\n  ecModel.eachRawSeries(function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && (coordSys.type === 'cartesian2d' || coordSys.type === 'polar')) {\n      var baseAxis = coordSys.getBaseAxis();\n\n      if (baseAxis.type === 'category') {\n        var key = baseAxis.dim + '_' + baseAxis.index;\n\n        if (!seriesGroupByCategoryAxis[key]) {\n          seriesGroupByCategoryAxis[key] = {\n            categoryAxis: baseAxis,\n            valueAxis: coordSys.getOtherAxis(baseAxis),\n            series: []\n          };\n          meta.push({\n            axisDim: baseAxis.dim,\n            axisIndex: baseAxis.index\n          });\n        }\n\n        seriesGroupByCategoryAxis[key].series.push(seriesModel);\n      } else {\n        otherSeries.push(seriesModel);\n      }\n    } else {\n      otherSeries.push(seriesModel);\n    }\n  });\n  return {\n    seriesGroupByCategoryAxis: seriesGroupByCategoryAxis,\n    other: otherSeries,\n    meta: meta\n  };\n}\n/**\n * Assemble content of series on cateogory axis\n * @param {Array.<module:echarts/model/Series>} series\n * @return {string}\n * @inner\n */\n\n\nfunction assembleSeriesWithCategoryAxis(series) {\n  var tables = [];\n  zrUtil.each(series, function (group, key) {\n    var categoryAxis = group.categoryAxis;\n    var valueAxis = group.valueAxis;\n    var valueAxisDim = valueAxis.dim;\n    var headers = [' '].concat(zrUtil.map(group.series, function (series) {\n      return series.name;\n    }));\n    var columns = [categoryAxis.model.getCategories()];\n    zrUtil.each(group.series, function (series) {\n      columns.push(series.getRawData().mapArray(valueAxisDim, function (val) {\n        return val;\n      }));\n    }); // Assemble table content\n\n    var lines = [headers.join(ITEM_SPLITER)];\n\n    for (var i = 0; i < columns[0].length; i++) {\n      var items = [];\n\n      for (var j = 0; j < columns.length; j++) {\n        items.push(columns[j][i]);\n      }\n\n      lines.push(items.join(ITEM_SPLITER));\n    }\n\n    tables.push(lines.join('\\n'));\n  });\n  return tables.join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n}\n/**\n * Assemble content of other series\n * @param {Array.<module:echarts/model/Series>} series\n * @return {string}\n * @inner\n */\n\n\nfunction assembleOtherSeries(series) {\n  return zrUtil.map(series, function (series) {\n    var data = series.getRawData();\n    var lines = [series.name];\n    var vals = [];\n    data.each(data.dimensions, function () {\n      var argLen = arguments.length;\n      var dataIndex = arguments[argLen - 1];\n      var name = data.getName(dataIndex);\n\n      for (var i = 0; i < argLen - 1; i++) {\n        vals[i] = arguments[i];\n      }\n\n      lines.push((name ? name + ITEM_SPLITER : '') + vals.join(ITEM_SPLITER));\n    });\n    return lines.join('\\n');\n  }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n}\n/**\n * @param {module:echarts/model/Global}\n * @return {Object}\n * @inner\n */\n\n\nfunction getContentFromModel(ecModel) {\n  var result = groupSeries(ecModel);\n  return {\n    value: zrUtil.filter([assembleSeriesWithCategoryAxis(result.seriesGroupByCategoryAxis), assembleOtherSeries(result.other)], function (str) {\n      return str.replace(/[\\n\\t\\s]/g, '');\n    }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n'),\n    meta: result.meta\n  };\n}\n\nfunction trim(str) {\n  return str.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n}\n/**\n * If a block is tsv format\n */\n\n\nfunction isTSVFormat(block) {\n  // Simple method to find out if a block is tsv format\n  var firstLine = block.slice(0, block.indexOf('\\n'));\n\n  if (firstLine.indexOf(ITEM_SPLITER) >= 0) {\n    return true;\n  }\n}\n\nvar itemSplitRegex = new RegExp('[' + ITEM_SPLITER + ']+', 'g');\n/**\n * @param {string} tsv\n * @return {Object}\n */\n\nfunction parseTSVContents(tsv) {\n  var tsvLines = tsv.split(/\\n+/g);\n  var headers = trim(tsvLines.shift()).split(itemSplitRegex);\n  var categories = [];\n  var series = zrUtil.map(headers, function (header) {\n    return {\n      name: header,\n      data: []\n    };\n  });\n\n  for (var i = 0; i < tsvLines.length; i++) {\n    var items = trim(tsvLines[i]).split(itemSplitRegex);\n    categories.push(items.shift());\n\n    for (var j = 0; j < items.length; j++) {\n      series[j] && (series[j].data[i] = items[j]);\n    }\n  }\n\n  return {\n    series: series,\n    categories: categories\n  };\n}\n/**\n * @param {string} str\n * @return {Array.<Object>}\n * @inner\n */\n\n\nfunction parseListContents(str) {\n  var lines = str.split(/\\n+/g);\n  var seriesName = trim(lines.shift());\n  var data = [];\n\n  for (var i = 0; i < lines.length; i++) {\n    var items = trim(lines[i]).split(itemSplitRegex);\n    var name = '';\n    var value;\n    var hasName = false;\n\n    if (isNaN(items[0])) {\n      // First item is name\n      hasName = true;\n      name = items[0];\n      items = items.slice(1);\n      data[i] = {\n        name: name,\n        value: []\n      };\n      value = data[i].value;\n    } else {\n      value = data[i] = [];\n    }\n\n    for (var j = 0; j < items.length; j++) {\n      value.push(+items[j]);\n    }\n\n    if (value.length === 1) {\n      hasName ? data[i].value = value[0] : data[i] = value[0];\n    }\n  }\n\n  return {\n    name: seriesName,\n    data: data\n  };\n}\n/**\n * @param {string} str\n * @param {Array.<Object>} blockMetaList\n * @return {Object}\n * @inner\n */\n\n\nfunction parseContents(str, blockMetaList) {\n  var blocks = str.split(new RegExp('\\n*' + BLOCK_SPLITER + '\\n*', 'g'));\n  var newOption = {\n    series: []\n  };\n  zrUtil.each(blocks, function (block, idx) {\n    if (isTSVFormat(block)) {\n      var result = parseTSVContents(block);\n      var blockMeta = blockMetaList[idx];\n      var axisKey = blockMeta.axisDim + 'Axis';\n\n      if (blockMeta) {\n        newOption[axisKey] = newOption[axisKey] || [];\n        newOption[axisKey][blockMeta.axisIndex] = {\n          data: result.categories\n        };\n        newOption.series = newOption.series.concat(result.series);\n      }\n    } else {\n      var result = parseListContents(block);\n      newOption.series.push(result);\n    }\n  });\n  return newOption;\n}\n/**\n * @alias {module:echarts/component/toolbox/feature/DataView}\n * @constructor\n * @param {module:echarts/model/Model} model\n */\n\n\nfunction DataView(model) {\n  this._dom = null;\n  this.model = model;\n}\n\nDataView.defaultOption = {\n  show: true,\n  readOnly: false,\n  optionToContent: null,\n  contentToOption: null,\n  icon: 'M17.5,17.3H33 M17.5,17.3H33 M45.4,29.5h-28 M11.5,2v56H51V14.8L38.4,2H11.5z M38.4,2.2v12.7H51 M45.4,41.7h-28',\n  title: zrUtil.clone(dataViewLang.title),\n  lang: zrUtil.clone(dataViewLang.lang),\n  backgroundColor: '#fff',\n  textColor: '#000',\n  textareaColor: '#fff',\n  textareaBorderColor: '#333',\n  buttonColor: '#c23531',\n  buttonTextColor: '#fff'\n};\n\nDataView.prototype.onclick = function (ecModel, api) {\n  var container = api.getDom();\n  var model = this.model;\n\n  if (this._dom) {\n    container.removeChild(this._dom);\n  }\n\n  var root = document.createElement('div');\n  root.style.cssText = 'position:absolute;left:5px;top:5px;bottom:5px;right:5px;';\n  root.style.backgroundColor = model.get('backgroundColor') || '#fff'; // Create elements\n\n  var header = document.createElement('h4');\n  var lang = model.get('lang') || [];\n  header.innerHTML = lang[0] || model.get('title');\n  header.style.cssText = 'margin: 10px 20px;';\n  header.style.color = model.get('textColor');\n  var viewMain = document.createElement('div');\n  var textarea = document.createElement('textarea');\n  viewMain.style.cssText = 'display:block;width:100%;overflow:auto;';\n  var optionToContent = model.get('optionToContent');\n  var contentToOption = model.get('contentToOption');\n  var result = getContentFromModel(ecModel);\n\n  if (typeof optionToContent === 'function') {\n    var htmlOrDom = optionToContent(api.getOption());\n\n    if (typeof htmlOrDom === 'string') {\n      viewMain.innerHTML = htmlOrDom;\n    } else if (zrUtil.isDom(htmlOrDom)) {\n      viewMain.appendChild(htmlOrDom);\n    }\n  } else {\n    // Use default textarea\n    viewMain.appendChild(textarea);\n    textarea.readOnly = model.get('readOnly');\n    textarea.style.cssText = 'width:100%;height:100%;font-family:monospace;font-size:14px;line-height:1.6rem;';\n    textarea.style.color = model.get('textColor');\n    textarea.style.borderColor = model.get('textareaBorderColor');\n    textarea.style.backgroundColor = model.get('textareaColor');\n    textarea.value = result.value;\n  }\n\n  var blockMetaList = result.meta;\n  var buttonContainer = document.createElement('div');\n  buttonContainer.style.cssText = 'position:absolute;bottom:0;left:0;right:0;';\n  var buttonStyle = 'float:right;margin-right:20px;border:none;' + 'cursor:pointer;padding:2px 5px;font-size:12px;border-radius:3px';\n  var closeButton = document.createElement('div');\n  var refreshButton = document.createElement('div');\n  buttonStyle += ';background-color:' + model.get('buttonColor');\n  buttonStyle += ';color:' + model.get('buttonTextColor');\n  var self = this;\n\n  function close() {\n    container.removeChild(root);\n    self._dom = null;\n  }\n\n  eventTool.addEventListener(closeButton, 'click', close);\n  eventTool.addEventListener(refreshButton, 'click', function () {\n    var newOption;\n\n    try {\n      if (typeof contentToOption === 'function') {\n        newOption = contentToOption(viewMain, api.getOption());\n      } else {\n        newOption = parseContents(textarea.value, blockMetaList);\n      }\n    } catch (e) {\n      close();\n      throw new Error('Data view format error ' + e);\n    }\n\n    if (newOption) {\n      api.dispatchAction({\n        type: 'changeDataView',\n        newOption: newOption\n      });\n    }\n\n    close();\n  });\n  closeButton.innerHTML = lang[1];\n  refreshButton.innerHTML = lang[2];\n  refreshButton.style.cssText = buttonStyle;\n  closeButton.style.cssText = buttonStyle;\n  !model.get('readOnly') && buttonContainer.appendChild(refreshButton);\n  buttonContainer.appendChild(closeButton); // http://stackoverflow.com/questions/6637341/use-tab-to-indent-in-textarea\n\n  eventTool.addEventListener(textarea, 'keydown', function (e) {\n    if ((e.keyCode || e.which) === 9) {\n      // get caret position/selection\n      var val = this.value;\n      var start = this.selectionStart;\n      var end = this.selectionEnd; // set textarea value to: text before caret + tab + text after caret\n\n      this.value = val.substring(0, start) + ITEM_SPLITER + val.substring(end); // put caret at right position again\n\n      this.selectionStart = this.selectionEnd = start + 1; // prevent the focus lose\n\n      eventTool.stop(e);\n    }\n  });\n  root.appendChild(header);\n  root.appendChild(viewMain);\n  root.appendChild(buttonContainer);\n  viewMain.style.height = container.clientHeight - 80 + 'px';\n  container.appendChild(root);\n  this._dom = root;\n};\n\nDataView.prototype.remove = function (ecModel, api) {\n  this._dom && api.getDom().removeChild(this._dom);\n};\n\nDataView.prototype.dispose = function (ecModel, api) {\n  this.remove(ecModel, api);\n};\n/**\n * @inner\n */\n\n\nfunction tryMergeDataOption(newData, originalData) {\n  return zrUtil.map(newData, function (newVal, idx) {\n    var original = originalData && originalData[idx];\n\n    if (zrUtil.isObject(original) && !zrUtil.isArray(original)) {\n      if (zrUtil.isObject(newVal) && !zrUtil.isArray(newVal)) {\n        newVal = newVal.value;\n      } // Original data has option\n\n\n      return zrUtil.defaults({\n        value: newVal\n      }, original);\n    } else {\n      return newVal;\n    }\n  });\n}\n\nfeatureManager.register('dataView', DataView);\necharts.registerAction({\n  type: 'changeDataView',\n  event: 'dataViewChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  var newSeriesOptList = [];\n  zrUtil.each(payload.newOption.series, function (seriesOpt) {\n    var seriesModel = ecModel.getSeriesByName(seriesOpt.name)[0];\n\n    if (!seriesModel) {\n      // New created series\n      // Geuss the series type\n      newSeriesOptList.push(zrUtil.extend({\n        // Default is scatter\n        type: 'scatter'\n      }, seriesOpt));\n    } else {\n      var originalData = seriesModel.get('data');\n      newSeriesOptList.push({\n        name: seriesOpt.name,\n        data: tryMergeDataOption(seriesOpt.data, originalData)\n      });\n    }\n  });\n  ecModel.mergeOption(zrUtil.defaults({\n    series: newSeriesOptList\n  }, payload.newOption));\n});\nvar _default = DataView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1151:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(979);\n\nvar zrUtil = __webpack_require__(978);\n\nvar BrushController = __webpack_require__(1066);\n\nvar BrushTargetManager = __webpack_require__(1084);\n\nvar history = __webpack_require__(1058);\n\nvar sliderMove = __webpack_require__(1040);\n\nvar lang = __webpack_require__(1005);\n\nvar featureManager = __webpack_require__(997);\n\n__webpack_require__(1152);\n\n// Use dataZoomSelect\nvar dataZoomLang = lang.toolbox.dataZoom;\nvar each = zrUtil.each; // Spectial component id start with \\0ec\\0, see echarts/model/Global.js~hasInnerId\n\nvar DATA_ZOOM_ID_BASE = '\\0_ec_\\0toolbox-dataZoom_';\n\nfunction DataZoom(model, ecModel, api) {\n  /**\n   * @private\n   * @type {module:echarts/component/helper/BrushController}\n   */\n  (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this)).mount();\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._isZoomActive;\n}\n\nDataZoom.defaultOption = {\n  show: true,\n  // Icon group\n  icon: {\n    zoom: 'M0,13.5h26.9 M13.5,26.9V0 M32.1,13.5H58V58H13.5 V32.1',\n    back: 'M22,1.4L9.9,13.5l12.3,12.3 M10.3,13.5H54.9v44.6 H10.3v-26'\n  },\n  // `zoom`, `back`\n  title: zrUtil.clone(dataZoomLang.title)\n};\nvar proto = DataZoom.prototype;\n\nproto.render = function (featureModel, ecModel, api, payload) {\n  this.model = featureModel;\n  this.ecModel = ecModel;\n  this.api = api;\n  updateZoomBtnStatus(featureModel, ecModel, this, payload, api);\n  updateBackBtnStatus(featureModel, ecModel);\n};\n\nproto.onclick = function (ecModel, api, type) {\n  handlers[type].call(this);\n};\n\nproto.remove = function (ecModel, api) {\n  this._brushController.unmount();\n};\n\nproto.dispose = function (ecModel, api) {\n  this._brushController.dispose();\n};\n/**\n * @private\n */\n\n\nvar handlers = {\n  zoom: function () {\n    var nextActive = !this._isZoomActive;\n    this.api.dispatchAction({\n      type: 'takeGlobalCursor',\n      key: 'dataZoomSelect',\n      dataZoomSelectActive: nextActive\n    });\n  },\n  back: function () {\n    this._dispatchZoomAction(history.pop(this.ecModel));\n  }\n};\n/**\n * @private\n */\n\nproto._onBrush = function (areas, opt) {\n  if (!opt.isEnd || !areas.length) {\n    return;\n  }\n\n  var snapshot = {};\n  var ecModel = this.ecModel;\n\n  this._brushController.updateCovers([]); // remove cover\n\n\n  var brushTargetManager = new BrushTargetManager(retrieveAxisSetting(this.model.option), ecModel, {\n    include: ['grid']\n  });\n  brushTargetManager.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n    if (coordSys.type !== 'cartesian2d') {\n      return;\n    }\n\n    var brushType = area.brushType;\n\n    if (brushType === 'rect') {\n      setBatch('x', coordSys, coordRange[0]);\n      setBatch('y', coordSys, coordRange[1]);\n    } else {\n      setBatch({\n        lineX: 'x',\n        lineY: 'y'\n      }[brushType], coordSys, coordRange);\n    }\n  });\n  history.push(ecModel, snapshot);\n\n  this._dispatchZoomAction(snapshot);\n\n  function setBatch(dimName, coordSys, minMax) {\n    var axis = coordSys.getAxis(dimName);\n    var axisModel = axis.model;\n    var dataZoomModel = findDataZoom(dimName, axisModel, ecModel); // Restrict range.\n\n    var minMaxSpan = dataZoomModel.findRepresentativeAxisProxy(axisModel).getMinMaxSpan();\n\n    if (minMaxSpan.minValueSpan != null || minMaxSpan.maxValueSpan != null) {\n      minMax = sliderMove(0, minMax.slice(), axis.scale.getExtent(), 0, minMaxSpan.minValueSpan, minMaxSpan.maxValueSpan);\n    }\n\n    dataZoomModel && (snapshot[dataZoomModel.id] = {\n      dataZoomId: dataZoomModel.id,\n      startValue: minMax[0],\n      endValue: minMax[1]\n    });\n  }\n\n  function findDataZoom(dimName, axisModel, ecModel) {\n    var found;\n    ecModel.eachComponent({\n      mainType: 'dataZoom',\n      subType: 'select'\n    }, function (dzModel) {\n      var has = dzModel.getAxisModel(dimName, axisModel.componentIndex);\n      has && (found = dzModel);\n    });\n    return found;\n  }\n};\n/**\n * @private\n */\n\n\nproto._dispatchZoomAction = function (snapshot) {\n  var batch = []; // Convert from hash map to array.\n\n  each(snapshot, function (batchItem, dataZoomId) {\n    batch.push(zrUtil.clone(batchItem));\n  });\n  batch.length && this.api.dispatchAction({\n    type: 'dataZoom',\n    from: this.uid,\n    batch: batch\n  });\n};\n\nfunction retrieveAxisSetting(option) {\n  var setting = {}; // Compatible with previous setting: null => all axis, false => no axis.\n\n  zrUtil.each(['xAxisIndex', 'yAxisIndex'], function (name) {\n    setting[name] = option[name];\n    setting[name] == null && (setting[name] = 'all');\n    (setting[name] === false || setting[name] === 'none') && (setting[name] = []);\n  });\n  return setting;\n}\n\nfunction updateBackBtnStatus(featureModel, ecModel) {\n  featureModel.setIconStatus('back', history.count(ecModel) > 1 ? 'emphasis' : 'normal');\n}\n\nfunction updateZoomBtnStatus(featureModel, ecModel, view, payload, api) {\n  var zoomActive = view._isZoomActive;\n\n  if (payload && payload.type === 'takeGlobalCursor') {\n    zoomActive = payload.key === 'dataZoomSelect' ? payload.dataZoomSelectActive : false;\n  }\n\n  view._isZoomActive = zoomActive;\n  featureModel.setIconStatus('zoom', zoomActive ? 'emphasis' : 'normal');\n  var brushTargetManager = new BrushTargetManager(retrieveAxisSetting(featureModel.option), ecModel, {\n    include: ['grid']\n  });\n\n  view._brushController.setPanels(brushTargetManager.makePanelOpts(api, function (targetInfo) {\n    return targetInfo.xAxisDeclared && !targetInfo.yAxisDeclared ? 'lineX' : !targetInfo.xAxisDeclared && targetInfo.yAxisDeclared ? 'lineY' : 'rect';\n  })).enableBrush(zoomActive ? {\n    brushType: 'auto',\n    brushStyle: {\n      // FIXME user customized?\n      lineWidth: 0,\n      fill: 'rgba(0,0,0,0.2)'\n    }\n  } : false);\n}\n\nfeatureManager.register('dataZoom', DataZoom); // Create special dataZoom option for select\n\necharts.registerPreprocessor(function (option) {\n  if (!option) {\n    return;\n  }\n\n  var dataZoomOpts = option.dataZoom || (option.dataZoom = []);\n\n  if (!zrUtil.isArray(dataZoomOpts)) {\n    option.dataZoom = dataZoomOpts = [dataZoomOpts];\n  }\n\n  var toolboxOpt = option.toolbox;\n\n  if (toolboxOpt) {\n    // Assume there is only one toolbox\n    if (zrUtil.isArray(toolboxOpt)) {\n      toolboxOpt = toolboxOpt[0];\n    }\n\n    if (toolboxOpt && toolboxOpt.feature) {\n      var dataZoomOpt = toolboxOpt.feature.dataZoom;\n      addForAxis('xAxis', dataZoomOpt);\n      addForAxis('yAxis', dataZoomOpt);\n    }\n  }\n\n  function addForAxis(axisName, dataZoomOpt) {\n    if (!dataZoomOpt) {\n      return;\n    } // Try not to modify model, because it is not merged yet.\n\n\n    var axisIndicesName = axisName + 'Index';\n    var givenAxisIndices = dataZoomOpt[axisIndicesName];\n\n    if (givenAxisIndices != null && givenAxisIndices != 'all' && !zrUtil.isArray(givenAxisIndices)) {\n      givenAxisIndices = givenAxisIndices === false || givenAxisIndices === 'none' ? [] : [givenAxisIndices];\n    }\n\n    forEachComponent(axisName, function (axisOpt, axisIndex) {\n      if (givenAxisIndices != null && givenAxisIndices != 'all' && zrUtil.indexOf(givenAxisIndices, axisIndex) === -1) {\n        return;\n      }\n\n      var newOpt = {\n        type: 'select',\n        $fromToolbox: true,\n        // Id for merge mapping.\n        id: DATA_ZOOM_ID_BASE + axisName + axisIndex\n      }; // FIXME\n      // Only support one axis now.\n\n      newOpt[axisIndicesName] = axisIndex;\n      dataZoomOpts.push(newOpt);\n    });\n  }\n\n  function forEachComponent(mainType, cb) {\n    var opts = option[mainType];\n\n    if (!zrUtil.isArray(opts)) {\n      opts = opts ? [opts] : [];\n    }\n\n    each(opts, cb);\n  }\n});\nvar _default = DataZoom;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1152:\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(1086);\n\n__webpack_require__(1029);\n\n__webpack_require__(1031);\n\n__webpack_require__(1154);\n\n__webpack_require__(1155);\n\n__webpack_require__(1087);\n\n__webpack_require__(1088);\n\n/***/ }),\n\n/***/ 1153:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar numberUtil = __webpack_require__(981);\n\nvar helper = __webpack_require__(1030);\n\nvar each = zrUtil.each;\nvar asc = numberUtil.asc;\n/**\n * Operate single axis.\n * One axis can only operated by one axis operator.\n * Different dataZoomModels may be defined to operate the same axis.\n * (i.e. 'inside' data zoom and 'slider' data zoom components)\n * So dataZoomModels share one axisProxy in that case.\n *\n * @class\n */\n\nvar AxisProxy = function (dimName, axisIndex, dataZoomModel, ecModel) {\n  /**\n   * @private\n   * @type {string}\n   */\n  this._dimName = dimName;\n  /**\n   * @private\n   */\n\n  this._axisIndex = axisIndex;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._valueWindow;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._percentWindow;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._dataExtent;\n  /**\n   * {minSpan, maxSpan, minValueSpan, maxValueSpan}\n   * @private\n   * @type {Object}\n   */\n\n  this._minMaxSpan;\n  /**\n   * @readOnly\n   * @type {module: echarts/model/Global}\n   */\n\n  this.ecModel = ecModel;\n  /**\n   * @private\n   * @type {module: echarts/component/dataZoom/DataZoomModel}\n   */\n\n  this._dataZoomModel = dataZoomModel;\n};\n\nAxisProxy.prototype = {\n  constructor: AxisProxy,\n\n  /**\n   * Whether the axisProxy is hosted by dataZoomModel.\n   *\n   * @public\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   * @return {boolean}\n   */\n  hostedBy: function (dataZoomModel) {\n    return this._dataZoomModel === dataZoomModel;\n  },\n\n  /**\n   * @return {Array.<number>} Value can only be NaN or finite value.\n   */\n  getDataValueWindow: function () {\n    return this._valueWindow.slice();\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getDataPercentWindow: function () {\n    return this._percentWindow.slice();\n  },\n\n  /**\n   * @public\n   * @param {number} axisIndex\n   * @return {Array} seriesModels\n   */\n  getTargetSeriesModels: function () {\n    var seriesModels = [];\n    var ecModel = this.ecModel;\n    ecModel.eachSeries(function (seriesModel) {\n      if (helper.isCoordSupported(seriesModel.get('coordinateSystem'))) {\n        var dimName = this._dimName;\n        var axisModel = ecModel.queryComponents({\n          mainType: dimName + 'Axis',\n          index: seriesModel.get(dimName + 'AxisIndex'),\n          id: seriesModel.get(dimName + 'AxisId')\n        })[0];\n\n        if (this._axisIndex === (axisModel && axisModel.componentIndex)) {\n          seriesModels.push(seriesModel);\n        }\n      }\n    }, this);\n    return seriesModels;\n  },\n  getAxisModel: function () {\n    return this.ecModel.getComponent(this._dimName + 'Axis', this._axisIndex);\n  },\n  getOtherAxisModel: function () {\n    var axisDim = this._dimName;\n    var ecModel = this.ecModel;\n    var axisModel = this.getAxisModel();\n    var isCartesian = axisDim === 'x' || axisDim === 'y';\n    var otherAxisDim;\n    var coordSysIndexName;\n\n    if (isCartesian) {\n      coordSysIndexName = 'gridIndex';\n      otherAxisDim = axisDim === 'x' ? 'y' : 'x';\n    } else {\n      coordSysIndexName = 'polarIndex';\n      otherAxisDim = axisDim === 'angle' ? 'radius' : 'angle';\n    }\n\n    var foundOtherAxisModel;\n    ecModel.eachComponent(otherAxisDim + 'Axis', function (otherAxisModel) {\n      if ((otherAxisModel.get(coordSysIndexName) || 0) === (axisModel.get(coordSysIndexName) || 0)) {\n        foundOtherAxisModel = otherAxisModel;\n      }\n    });\n    return foundOtherAxisModel;\n  },\n  getMinMaxSpan: function () {\n    return zrUtil.clone(this._minMaxSpan);\n  },\n\n  /**\n   * Only calculate by given range and this._dataExtent, do not change anything.\n   *\n   * @param {Object} opt\n   * @param {number} [opt.start]\n   * @param {number} [opt.end]\n   * @param {number} [opt.startValue]\n   * @param {number} [opt.endValue]\n   */\n  calculateDataWindow: function (opt) {\n    var dataExtent = this._dataExtent;\n    var axisModel = this.getAxisModel();\n    var scale = axisModel.axis.scale;\n\n    var rangePropMode = this._dataZoomModel.getRangePropMode();\n\n    var percentExtent = [0, 100];\n    var percentWindow = [opt.start, opt.end];\n    var valueWindow = [];\n    each(['startValue', 'endValue'], function (prop) {\n      valueWindow.push(opt[prop] != null ? scale.parse(opt[prop]) : null);\n    }); // Normalize bound.\n\n    each([0, 1], function (idx) {\n      var boundValue = valueWindow[idx];\n      var boundPercent = percentWindow[idx]; // Notice: dataZoom is based either on `percentProp` ('start', 'end') or\n      // on `valueProp` ('startValue', 'endValue'). The former one is suitable\n      // for cases that a dataZoom component controls multiple axes with different\n      // unit or extent, and the latter one is suitable for accurate zoom by pixel\n      // (e.g., in dataZoomSelect). `valueProp` can be calculated from `percentProp`,\n      // but it is awkward that `percentProp` can not be obtained from `valueProp`\n      // accurately (because all of values that are overflow the `dataExtent` will\n      // be calculated to percent '100%'). So we have to use\n      // `dataZoom.getRangePropMode()` to mark which prop is used.\n      // `rangePropMode` is updated only when setOption or dispatchAction, otherwise\n      // it remains its original value.\n\n      if (rangePropMode[idx] === 'percent') {\n        if (boundPercent == null) {\n          boundPercent = percentExtent[idx];\n        } // Use scale.parse to math round for category or time axis.\n\n\n        boundValue = scale.parse(numberUtil.linearMap(boundPercent, percentExtent, dataExtent, true));\n      } else {\n        // Calculating `percent` from `value` may be not accurate, because\n        // This calculation can not be inversed, because all of values that\n        // are overflow the `dataExtent` will be calculated to percent '100%'\n        boundPercent = numberUtil.linearMap(boundValue, dataExtent, percentExtent, true);\n      } // valueWindow[idx] = round(boundValue);\n      // percentWindow[idx] = round(boundPercent);\n\n\n      valueWindow[idx] = boundValue;\n      percentWindow[idx] = boundPercent;\n    });\n    return {\n      valueWindow: asc(valueWindow),\n      percentWindow: asc(percentWindow)\n    };\n  },\n\n  /**\n   * Notice: reset should not be called before series.restoreData() called,\n   * so it is recommanded to be called in \"process stage\" but not \"model init\n   * stage\".\n   *\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  reset: function (dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    } // Culculate data window and data extent, and record them.\n\n\n    this._dataExtent = calculateDataExtent(this, this._dimName, this.getTargetSeriesModels());\n    var dataWindow = this.calculateDataWindow(dataZoomModel.option);\n    this._valueWindow = dataWindow.valueWindow;\n    this._percentWindow = dataWindow.percentWindow;\n    setMinMaxSpan(this); // Update axis setting then.\n\n    setAxisModel(this);\n  },\n\n  /**\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  restore: function (dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    this._valueWindow = this._percentWindow = null;\n    setAxisModel(this, true);\n  },\n\n  /**\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  filterData: function (dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    var axisDim = this._dimName;\n    var seriesModels = this.getTargetSeriesModels();\n    var filterMode = dataZoomModel.get('filterMode');\n    var valueWindow = this._valueWindow;\n\n    if (filterMode === 'none') {\n      return;\n    } // FIXME\n    // Toolbox may has dataZoom injected. And if there are stacked bar chart\n    // with NaN data, NaN will be filtered and stack will be wrong.\n    // So we need to force the mode to be set empty.\n    // In fect, it is not a big deal that do not support filterMode-'filter'\n    // when using toolbox#dataZoom, utill tooltip#dataZoom support \"single axis\n    // selection\" some day, which might need \"adapt to data extent on the\n    // otherAxis\", which is disabled by filterMode-'empty'.\n\n\n    var otherAxisModel = this.getOtherAxisModel();\n\n    if (dataZoomModel.get('$fromToolbox') && otherAxisModel && otherAxisModel.get('type') === 'category') {\n      filterMode = 'empty';\n    } // Process series data\n\n\n    each(seriesModels, function (seriesModel) {\n      var seriesData = seriesModel.getData();\n      var dataDims = seriesModel.coordDimToDataDim(axisDim);\n\n      if (filterMode === 'weakFilter') {\n        seriesData && seriesData.filterSelf(function (dataIndex) {\n          var leftOut;\n          var rightOut;\n          var hasValue;\n\n          for (var i = 0; i < dataDims.length; i++) {\n            var value = seriesData.get(dataDims[i], dataIndex);\n            var thisHasValue = !isNaN(value);\n            var thisLeftOut = value < valueWindow[0];\n            var thisRightOut = value > valueWindow[1];\n\n            if (thisHasValue && !thisLeftOut && !thisRightOut) {\n              return true;\n            }\n\n            thisHasValue && (hasValue = true);\n            thisLeftOut && (leftOut = true);\n            thisRightOut && (rightOut = true);\n          } // If both left out and right out, do not filter.\n\n\n          return hasValue && leftOut && rightOut;\n        });\n      } else {\n        seriesData && each(dataDims, function (dim) {\n          if (filterMode === 'empty') {\n            seriesModel.setData(seriesData.map(dim, function (value) {\n              return !isInWindow(value) ? NaN : value;\n            }));\n          } else {\n            seriesData.filterSelf(dim, isInWindow);\n          }\n        });\n      }\n    });\n\n    function isInWindow(value) {\n      return value >= valueWindow[0] && value <= valueWindow[1];\n    }\n  }\n};\n\nfunction calculateDataExtent(axisProxy, axisDim, seriesModels) {\n  var dataExtent = [Infinity, -Infinity];\n  each(seriesModels, function (seriesModel) {\n    var seriesData = seriesModel.getData();\n\n    if (seriesData) {\n      each(seriesModel.coordDimToDataDim(axisDim), function (dim) {\n        var seriesExtent = seriesData.getDataExtent(dim);\n        seriesExtent[0] < dataExtent[0] && (dataExtent[0] = seriesExtent[0]);\n        seriesExtent[1] > dataExtent[1] && (dataExtent[1] = seriesExtent[1]);\n      });\n    }\n  });\n\n  if (dataExtent[1] < dataExtent[0]) {\n    dataExtent = [NaN, NaN];\n  } // It is important to get \"consistent\" extent when more then one axes is\n  // controlled by a `dataZoom`, otherwise those axes will not be synchronized\n  // when zooming. But it is difficult to know what is \"consistent\", considering\n  // axes have different type or even different meanings (For example, two\n  // time axes are used to compare data of the same date in different years).\n  // So basically dataZoom just obtains extent by series.data (in category axis\n  // extent can be obtained from axis.data).\n  // Nevertheless, user can set min/max/scale on axes to make extent of axes\n  // consistent.\n\n\n  fixExtentByAxis(axisProxy, dataExtent);\n  return dataExtent;\n}\n\nfunction fixExtentByAxis(axisProxy, dataExtent) {\n  var axisModel = axisProxy.getAxisModel();\n  var min = axisModel.getMin(true); // For category axis, if min/max/scale are not set, extent is determined\n  // by axis.data by default.\n\n  var isCategoryAxis = axisModel.get('type') === 'category';\n  var axisDataLen = isCategoryAxis && (axisModel.get('data') || []).length;\n\n  if (min != null && min !== 'dataMin' && typeof min !== 'function') {\n    dataExtent[0] = min;\n  } else if (isCategoryAxis) {\n    dataExtent[0] = axisDataLen > 0 ? 0 : NaN;\n  }\n\n  var max = axisModel.getMax(true);\n\n  if (max != null && max !== 'dataMax' && typeof max !== 'function') {\n    dataExtent[1] = max;\n  } else if (isCategoryAxis) {\n    dataExtent[1] = axisDataLen > 0 ? axisDataLen - 1 : NaN;\n  }\n\n  if (!axisModel.get('scale', true)) {\n    dataExtent[0] > 0 && (dataExtent[0] = 0);\n    dataExtent[1] < 0 && (dataExtent[1] = 0);\n  } // For value axis, if min/max/scale are not set, we just use the extent obtained\n  // by series data, which may be a little different from the extent calculated by\n  // `axisHelper.getScaleExtent`. But the different just affects the experience a\n  // little when zooming. So it will not be fixed until some users require it strongly.\n\n\n  return dataExtent;\n}\n\nfunction setAxisModel(axisProxy, isRestore) {\n  var axisModel = axisProxy.getAxisModel();\n  var percentWindow = axisProxy._percentWindow;\n  var valueWindow = axisProxy._valueWindow;\n\n  if (!percentWindow) {\n    return;\n  } // [0, 500]: arbitrary value, guess axis extent.\n\n\n  var precision = numberUtil.getPixelPrecision(valueWindow, [0, 500]);\n  precision = Math.min(precision, 20); // isRestore or isFull\n\n  var useOrigin = isRestore || percentWindow[0] === 0 && percentWindow[1] === 100;\n  axisModel.setRange(useOrigin ? null : +valueWindow[0].toFixed(precision), useOrigin ? null : +valueWindow[1].toFixed(precision));\n}\n\nfunction setMinMaxSpan(axisProxy) {\n  var minMaxSpan = axisProxy._minMaxSpan = {};\n  var dataZoomModel = axisProxy._dataZoomModel;\n  each(['min', 'max'], function (minMax) {\n    minMaxSpan[minMax + 'Span'] = dataZoomModel.get(minMax + 'Span'); // minValueSpan and maxValueSpan has higher priority than minSpan and maxSpan\n\n    var valueSpan = dataZoomModel.get(minMax + 'ValueSpan');\n\n    if (valueSpan != null) {\n      minMaxSpan[minMax + 'ValueSpan'] = valueSpan;\n      valueSpan = axisProxy.getAxisModel().axis.scale.parse(valueSpan);\n\n      if (valueSpan != null) {\n        var dataExtent = axisProxy._dataExtent;\n        minMaxSpan[minMax + 'Span'] = numberUtil.linearMap(dataExtent[0] + valueSpan, dataExtent, [0, 100], true);\n      }\n    }\n  });\n}\n\nvar _default = AxisProxy;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1154:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar DataZoomModel = __webpack_require__(1029);\n\nvar _default = DataZoomModel.extend({\n  type: 'dataZoom.select'\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1155:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar DataZoomView = __webpack_require__(1031);\n\nvar _default = DataZoomView.extend({\n  type: 'dataZoom.select'\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1156:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(979);\n\nvar history = __webpack_require__(1058);\n\nvar lang = __webpack_require__(1005);\n\nvar featureManager = __webpack_require__(997);\n\nvar restoreLang = lang.toolbox.restore;\n\nfunction Restore(model) {\n  this.model = model;\n}\n\nRestore.defaultOption = {\n  show: true,\n  icon: 'M3.8,33.4 M47,18.9h9.8V8.7 M56.3,20.1 C52.1,9,40.5,0.6,26.8,2.1C12.6,3.7,1.6,16.2,2.1,30.6 M13,41.1H3.1v10.2 M3.7,39.9c4.2,11.1,15.8,19.5,29.5,18 c14.2-1.6,25.2-14.1,24.7-28.5',\n  title: restoreLang.title\n};\nvar proto = Restore.prototype;\n\nproto.onclick = function (ecModel, api, type) {\n  history.clear(ecModel);\n  api.dispatchAction({\n    type: 'restore',\n    from: this.uid\n  });\n};\n\nfeatureManager.register('restore', Restore);\necharts.registerAction({\n  type: 'restore',\n  event: 'restore',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  ecModel.resetOption('recreate');\n});\nvar _default = Restore;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1161:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(979);\n\nvar zrUtil = __webpack_require__(978);\n\nfunction _default(seriesType, actionInfos) {\n  zrUtil.each(actionInfos, function (actionInfo) {\n    actionInfo.update = 'updateView';\n    /**\n     * @payload\n     * @property {string} seriesName\n     * @property {string} name\n     */\n\n    echarts.registerAction(actionInfo, function (payload, ecModel) {\n      var selected = {};\n      ecModel.eachComponent({\n        mainType: 'series',\n        subType: seriesType,\n        query: payload\n      }, function (seriesModel) {\n        if (seriesModel[actionInfo.method]) {\n          seriesModel[actionInfo.method](payload.name, payload.dataIndex);\n        }\n\n        var data = seriesModel.getData(); // Create selected map\n\n        data.each(function (idx) {\n          var name = data.getName(idx);\n          selected[name] = seriesModel.isSelected(name) || false;\n        });\n      });\n      return {\n        name: payload.name,\n        selected: selected\n      };\n    });\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1169:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(979);\n\nvar zrUtil = __webpack_require__(978);\n\n__webpack_require__(1170);\n\n__webpack_require__(1171);\n\nvar createDataSelectAction = __webpack_require__(1161);\n\nvar dataColor = __webpack_require__(1145);\n\nvar pieLayout = __webpack_require__(1172);\n\nvar dataFilter = __webpack_require__(1081);\n\ncreateDataSelectAction('pie', [{\n  type: 'pieToggleSelect',\n  event: 'pieselectchanged',\n  method: 'toggleSelected'\n}, {\n  type: 'pieSelect',\n  event: 'pieselected',\n  method: 'select'\n}, {\n  type: 'pieUnSelect',\n  event: 'pieunselected',\n  method: 'unSelect'\n}]);\necharts.registerVisual(zrUtil.curry(dataColor, 'pie'));\necharts.registerLayout(zrUtil.curry(pieLayout, 'pie'));\necharts.registerProcessor(zrUtil.curry(dataFilter, 'pie'));\n\n/***/ }),\n\n/***/ 1170:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(979);\n\nvar List = __webpack_require__(995);\n\nvar zrUtil = __webpack_require__(978);\n\nvar modelUtil = __webpack_require__(982);\n\nvar _number = __webpack_require__(981);\n\nvar getPercentWithPrecision = _number.getPercentWithPrecision;\n\nvar completeDimensions = __webpack_require__(1004);\n\nvar dataSelectableMixin = __webpack_require__(1144);\n\nvar PieSeries = echarts.extendSeriesModel({\n  type: 'series.pie',\n  // Overwrite\n  init: function (option) {\n    PieSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    };\n\n    this.updateSelectedMap(option.data);\n\n    this._defaultLabelLine(option);\n  },\n  // Overwrite\n  mergeOption: function (newOption) {\n    PieSeries.superCall(this, 'mergeOption', newOption);\n    this.updateSelectedMap(this.option.data);\n  },\n  getInitialData: function (option, ecModel) {\n    var dimensions = completeDimensions(['value'], option.data);\n    var list = new List(dimensions, this);\n    list.initData(option.data);\n    return list;\n  },\n  // Overwrite\n  getDataParams: function (dataIndex) {\n    var data = this.getData();\n    var params = PieSeries.superCall(this, 'getDataParams', dataIndex); // FIXME toFixed?\n\n    var valueList = [];\n    data.each('value', function (value) {\n      valueList.push(value);\n    });\n    params.percent = getPercentWithPrecision(valueList, dataIndex, data.hostModel.get('percentPrecision'));\n    params.$vars.push('percent');\n    return params;\n  },\n  _defaultLabelLine: function (option) {\n    // Extend labelLine emphasis\n    modelUtil.defaultEmphasis(option.labelLine, ['show']);\n    var labelLineNormalOpt = option.labelLine.normal;\n    var labelLineEmphasisOpt = option.labelLine.emphasis; // Not show label line if `label.normal.show = false`\n\n    labelLineNormalOpt.show = labelLineNormalOpt.show && option.label.normal.show;\n    labelLineEmphasisOpt.show = labelLineEmphasisOpt.show && option.label.emphasis.show;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // 默认全局居中\n    center: ['50%', '50%'],\n    radius: [0, '75%'],\n    // 默认顺时针\n    clockwise: true,\n    startAngle: 90,\n    // 最小角度改为0\n    minAngle: 0,\n    // 选中时扇区偏移量\n    selectedOffset: 10,\n    // 高亮扇区偏移量\n    hoverOffset: 10,\n    // If use strategy to avoid label overlapping\n    avoidLabelOverlap: true,\n    // 选择模式，默认关闭，可选single，multiple\n    // selectedMode: false,\n    // 南丁格尔玫瑰图模式，'radius'（半径） | 'area'（面积）\n    // roseType: null,\n    percentPrecision: 2,\n    // If still show when all data zero.\n    stillShowZeroSum: true,\n    // cursor: null,\n    label: {\n      normal: {\n        // If rotate around circle\n        rotate: false,\n        show: true,\n        // 'outer', 'inside', 'center'\n        position: 'outer' // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n        // 默认使用全局文本样式，详见TEXTSTYLE\n        // distance: 当position为inner时有效，为label位置到圆心的距离与圆半径(环状图为内外半径和)的比例系数\n\n      },\n      emphasis: {}\n    },\n    // Enabled when label.normal.position is 'outer'\n    labelLine: {\n      normal: {\n        show: true,\n        // 引导线两段中的第一段长度\n        length: 15,\n        // 引导线两段中的第二段长度\n        length2: 15,\n        smooth: false,\n        lineStyle: {\n          // color: 各异,\n          width: 1,\n          type: 'solid'\n        }\n      }\n    },\n    itemStyle: {\n      normal: {\n        borderWidth: 1\n      },\n      emphasis: {}\n    },\n    // Animation type canbe expansion, scale\n    animationType: 'expansion',\n    animationEasing: 'cubicOut',\n    data: []\n  }\n});\nzrUtil.mixin(PieSeries, dataSelectableMixin);\nvar _default = PieSeries;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1171:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar graphic = __webpack_require__(980);\n\nvar ChartView = __webpack_require__(1012);\n\n/**\n * @param {module:echarts/model/Series} seriesModel\n * @param {boolean} hasAnimation\n * @inner\n */\nfunction updateDataSelected(uid, seriesModel, hasAnimation, api) {\n  var data = seriesModel.getData();\n  var dataIndex = this.dataIndex;\n  var name = data.getName(dataIndex);\n  var selectedOffset = seriesModel.get('selectedOffset');\n  api.dispatchAction({\n    type: 'pieToggleSelect',\n    from: uid,\n    name: name,\n    seriesId: seriesModel.id\n  });\n  data.each(function (idx) {\n    toggleItemSelected(data.getItemGraphicEl(idx), data.getItemLayout(idx), seriesModel.isSelected(data.getName(idx)), selectedOffset, hasAnimation);\n  });\n}\n/**\n * @param {module:zrender/graphic/Sector} el\n * @param {Object} layout\n * @param {boolean} isSelected\n * @param {number} selectedOffset\n * @param {boolean} hasAnimation\n * @inner\n */\n\n\nfunction toggleItemSelected(el, layout, isSelected, selectedOffset, hasAnimation) {\n  var midAngle = (layout.startAngle + layout.endAngle) / 2;\n  var dx = Math.cos(midAngle);\n  var dy = Math.sin(midAngle);\n  var offset = isSelected ? selectedOffset : 0;\n  var position = [dx * offset, dy * offset];\n  hasAnimation // animateTo will stop revious animation like update transition\n  ? el.animate().when(200, {\n    position: position\n  }).start('bounceOut') : el.attr('position', position);\n}\n/**\n * Piece of pie including Sector, Label, LabelLine\n * @constructor\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction PiePiece(data, idx) {\n  graphic.Group.call(this);\n  var sector = new graphic.Sector({\n    z2: 2\n  });\n  var polyline = new graphic.Polyline();\n  var text = new graphic.Text();\n  this.add(sector);\n  this.add(polyline);\n  this.add(text);\n  this.updateData(data, idx, true); // Hover to change label and labelLine\n\n  function onEmphasis() {\n    polyline.ignore = polyline.hoverIgnore;\n    text.ignore = text.hoverIgnore;\n  }\n\n  function onNormal() {\n    polyline.ignore = polyline.normalIgnore;\n    text.ignore = text.normalIgnore;\n  }\n\n  this.on('emphasis', onEmphasis).on('normal', onNormal).on('mouseover', onEmphasis).on('mouseout', onNormal);\n}\n\nvar piePieceProto = PiePiece.prototype;\n\npiePieceProto.updateData = function (data, idx, firstCreate) {\n  var sector = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var sectorShape = zrUtil.extend({}, layout);\n  sectorShape.label = null;\n\n  if (firstCreate) {\n    sector.setShape(sectorShape);\n    var animationType = seriesModel.getShallow('animationType');\n\n    if (animationType === 'scale') {\n      sector.shape.r = layout.r0;\n      graphic.initProps(sector, {\n        shape: {\n          r: layout.r\n        }\n      }, seriesModel, idx);\n    } // Expansion\n    else {\n        sector.shape.endAngle = layout.startAngle;\n        graphic.updateProps(sector, {\n          shape: {\n            endAngle: layout.endAngle\n          }\n        }, seriesModel, idx);\n      }\n  } else {\n    graphic.updateProps(sector, {\n      shape: sectorShape\n    }, seriesModel, idx);\n  } // Update common style\n\n\n  var itemStyleModel = itemModel.getModel('itemStyle');\n  var visualColor = data.getItemVisual(idx, 'color');\n  sector.useStyle(zrUtil.defaults({\n    lineJoin: 'bevel',\n    fill: visualColor\n  }, itemStyleModel.getModel('normal').getItemStyle()));\n  sector.hoverStyle = itemStyleModel.getModel('emphasis').getItemStyle();\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && sector.attr('cursor', cursorStyle); // Toggle selected\n\n  toggleItemSelected(this, data.getItemLayout(idx), itemModel.get('selected'), seriesModel.get('selectedOffset'), seriesModel.get('animation'));\n\n  function onEmphasis() {\n    // Sector may has animation of updating data. Force to move to the last frame\n    // Or it may stopped on the wrong shape\n    sector.stopAnimation(true);\n    sector.animateTo({\n      shape: {\n        r: layout.r + seriesModel.get('hoverOffset')\n      }\n    }, 300, 'elasticOut');\n  }\n\n  function onNormal() {\n    sector.stopAnimation(true);\n    sector.animateTo({\n      shape: {\n        r: layout.r\n      }\n    }, 300, 'elasticOut');\n  }\n\n  sector.off('mouseover').off('mouseout').off('emphasis').off('normal');\n\n  if (itemModel.get('hoverAnimation') && seriesModel.isAnimationEnabled()) {\n    sector.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n  }\n\n  this._updateLabel(data, idx);\n\n  graphic.setHoverStyle(this);\n};\n\npiePieceProto._updateLabel = function (data, idx) {\n  var labelLine = this.childAt(1);\n  var labelText = this.childAt(2);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var labelLayout = layout.label;\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.updateProps(labelLine, {\n    shape: {\n      points: labelLayout.linePoints || [[labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y]]\n    }\n  }, seriesModel, idx);\n  graphic.updateProps(labelText, {\n    style: {\n      x: labelLayout.x,\n      y: labelLayout.y\n    }\n  }, seriesModel, idx);\n  labelText.attr({\n    rotation: labelLayout.rotation,\n    origin: [labelLayout.x, labelLayout.y],\n    z2: 10\n  });\n  var labelModel = itemModel.getModel('label.normal');\n  var labelHoverModel = itemModel.getModel('label.emphasis');\n  var labelLineModel = itemModel.getModel('labelLine.normal');\n  var labelLineHoverModel = itemModel.getModel('labelLine.emphasis');\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.setLabelStyle(labelText.style, labelText.hoverStyle = {}, labelModel, labelHoverModel, {\n    labelFetcher: data.hostModel,\n    labelDataIndex: idx,\n    defaultText: data.getName(idx),\n    autoColor: visualColor,\n    useInsideStyle: !!labelLayout.inside\n  }, {\n    textAlign: labelLayout.textAlign,\n    textVerticalAlign: labelLayout.verticalAlign,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n  labelText.hoverIgnore = !labelHoverModel.get('show');\n  labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n  labelLine.hoverIgnore = !labelLineHoverModel.get('show'); // Default use item visual color\n\n  labelLine.setStyle({\n    stroke: visualColor,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n  labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n  var smooth = labelLineModel.get('smooth');\n\n  if (smooth && smooth === true) {\n    smooth = 0.4;\n  }\n\n  labelLine.setShape({\n    smooth: smooth\n  });\n};\n\nzrUtil.inherits(PiePiece, graphic.Group); // Pie view\n\nvar PieView = ChartView.extend({\n  type: 'pie',\n  init: function () {\n    var sectorGroup = new graphic.Group();\n    this._sectorGroup = sectorGroup;\n  },\n  render: function (seriesModel, ecModel, api, payload) {\n    if (payload && payload.from === this.uid) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    var hasAnimation = ecModel.get('animation');\n    var isFirstRender = !oldData;\n    var animationType = seriesModel.get('animationType');\n    var onSectorClick = zrUtil.curry(updateDataSelected, this.uid, seriesModel, hasAnimation, api);\n    var selectedMode = seriesModel.get('selectedMode');\n    data.diff(oldData).add(function (idx) {\n      var piePiece = new PiePiece(data, idx); // Default expansion animation\n\n      if (isFirstRender && animationType !== 'scale') {\n        piePiece.eachChild(function (child) {\n          child.stopAnimation(true);\n        });\n      }\n\n      selectedMode && piePiece.on('click', onSectorClick);\n      data.setItemGraphicEl(idx, piePiece);\n      group.add(piePiece);\n    }).update(function (newIdx, oldIdx) {\n      var piePiece = oldData.getItemGraphicEl(oldIdx);\n      piePiece.updateData(data, newIdx);\n      piePiece.off('click');\n      selectedMode && piePiece.on('click', onSectorClick);\n      group.add(piePiece);\n      data.setItemGraphicEl(newIdx, piePiece);\n    }).remove(function (idx) {\n      var piePiece = oldData.getItemGraphicEl(idx);\n      group.remove(piePiece);\n    }).execute();\n\n    if (hasAnimation && isFirstRender && data.count() > 0 // Default expansion animation\n    && animationType !== 'scale') {\n      var shape = data.getItemLayout(0);\n      var r = Math.max(api.getWidth(), api.getHeight()) / 2;\n      var removeClipPath = zrUtil.bind(group.removeClipPath, group);\n      group.setClipPath(this._createClipPath(shape.cx, shape.cy, r, shape.startAngle, shape.clockwise, removeClipPath, seriesModel));\n    }\n\n    this._data = data;\n  },\n  dispose: function () {},\n  _createClipPath: function (cx, cy, r, startAngle, clockwise, cb, seriesModel) {\n    var clipPath = new graphic.Sector({\n      shape: {\n        cx: cx,\n        cy: cy,\n        r0: 0,\n        r: r,\n        startAngle: startAngle,\n        endAngle: startAngle,\n        clockwise: clockwise\n      }\n    });\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: startAngle + (clockwise ? 1 : -1) * Math.PI * 2\n      }\n    }, seriesModel, cb);\n    return clipPath;\n  },\n\n  /**\n   * @implement\n   */\n  containPoint: function (point, seriesModel) {\n    var data = seriesModel.getData();\n    var itemLayout = data.getItemLayout(0);\n\n    if (itemLayout) {\n      var dx = point[0] - itemLayout.cx;\n      var dy = point[1] - itemLayout.cy;\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      return radius <= itemLayout.r && radius >= itemLayout.r0;\n    }\n  }\n});\nvar _default = PieView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1172:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _number = __webpack_require__(981);\n\nvar parsePercent = _number.parsePercent;\nvar linearMap = _number.linearMap;\n\nvar labelLayout = __webpack_require__(1173);\n\nvar zrUtil = __webpack_require__(978);\n\nvar PI2 = Math.PI * 2;\nvar RADIAN = Math.PI / 180;\n\nfunction _default(seriesType, ecModel, api, payload) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var center = seriesModel.get('center');\n    var radius = seriesModel.get('radius');\n\n    if (!zrUtil.isArray(radius)) {\n      radius = [0, radius];\n    }\n\n    if (!zrUtil.isArray(center)) {\n      center = [center, center];\n    }\n\n    var width = api.getWidth();\n    var height = api.getHeight();\n    var size = Math.min(width, height);\n    var cx = parsePercent(center[0], width);\n    var cy = parsePercent(center[1], height);\n    var r0 = parsePercent(radius[0], size / 2);\n    var r = parsePercent(radius[1], size / 2);\n    var data = seriesModel.getData();\n    var startAngle = -seriesModel.get('startAngle') * RADIAN;\n    var minAngle = seriesModel.get('minAngle') * RADIAN;\n    var validDataCount = 0;\n    data.each('value', function (value) {\n      !isNaN(value) && validDataCount++;\n    });\n    var sum = data.getSum('value'); // Sum may be 0\n\n    var unitRadian = Math.PI / (sum || validDataCount) * 2;\n    var clockwise = seriesModel.get('clockwise');\n    var roseType = seriesModel.get('roseType');\n    var stillShowZeroSum = seriesModel.get('stillShowZeroSum'); // [0...max]\n\n    var extent = data.getDataExtent('value');\n    extent[0] = 0; // In the case some sector angle is smaller than minAngle\n\n    var restAngle = PI2;\n    var valueSumLargerThanMinAngle = 0;\n    var currentAngle = startAngle;\n    var dir = clockwise ? 1 : -1;\n    data.each('value', function (value, idx) {\n      var angle;\n\n      if (isNaN(value)) {\n        data.setItemLayout(idx, {\n          angle: NaN,\n          startAngle: NaN,\n          endAngle: NaN,\n          clockwise: clockwise,\n          cx: cx,\n          cy: cy,\n          r0: r0,\n          r: roseType ? NaN : r\n        });\n        return;\n      } // FIXME 兼容 2.0 但是 roseType 是 area 的时候才是这样？\n\n\n      if (roseType !== 'area') {\n        angle = sum === 0 && stillShowZeroSum ? unitRadian : value * unitRadian;\n      } else {\n        angle = PI2 / validDataCount;\n      }\n\n      if (angle < minAngle) {\n        angle = minAngle;\n        restAngle -= minAngle;\n      } else {\n        valueSumLargerThanMinAngle += value;\n      }\n\n      var endAngle = currentAngle + dir * angle;\n      data.setItemLayout(idx, {\n        angle: angle,\n        startAngle: currentAngle,\n        endAngle: endAngle,\n        clockwise: clockwise,\n        cx: cx,\n        cy: cy,\n        r0: r0,\n        r: roseType ? linearMap(value, extent, [r0, r]) : r\n      });\n      currentAngle = endAngle;\n    }, true); // Some sector is constrained by minAngle\n    // Rest sectors needs recalculate angle\n\n    if (restAngle < PI2 && validDataCount) {\n      // Average the angle if rest angle is not enough after all angles is\n      // Constrained by minAngle\n      if (restAngle <= 1e-3) {\n        var angle = PI2 / validDataCount;\n        data.each('value', function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            layout.angle = angle;\n            layout.startAngle = startAngle + dir * idx * angle;\n            layout.endAngle = startAngle + dir * (idx + 1) * angle;\n          }\n        });\n      } else {\n        unitRadian = restAngle / valueSumLargerThanMinAngle;\n        currentAngle = startAngle;\n        data.each('value', function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            var angle = layout.angle === minAngle ? minAngle : value * unitRadian;\n            layout.startAngle = currentAngle;\n            layout.endAngle = currentAngle + dir * angle;\n            currentAngle += dir * angle;\n          }\n        });\n      }\n    }\n\n    labelLayout(seriesModel, r, width, height);\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1173:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar textContain = __webpack_require__(993);\n\n// FIXME emphasis label position is not same with normal label position\nfunction adjustSingleSide(list, cx, cy, r, dir, viewWidth, viewHeight) {\n  list.sort(function (a, b) {\n    return a.y - b.y;\n  }); // 压\n\n  function shiftDown(start, end, delta, dir) {\n    for (var j = start; j < end; j++) {\n      list[j].y += delta;\n\n      if (j > start && j + 1 < end && list[j + 1].y > list[j].y + list[j].height) {\n        shiftUp(j, delta / 2);\n        return;\n      }\n    }\n\n    shiftUp(end - 1, delta / 2);\n  } // 弹\n\n\n  function shiftUp(end, delta) {\n    for (var j = end; j >= 0; j--) {\n      list[j].y -= delta;\n\n      if (j > 0 && list[j].y > list[j - 1].y + list[j - 1].height) {\n        break;\n      }\n    }\n  }\n\n  function changeX(list, isDownList, cx, cy, r, dir) {\n    var lastDeltaX = dir > 0 ? isDownList // 右侧\n    ? Number.MAX_VALUE // 下\n    : 0 // 上\n    : isDownList // 左侧\n    ? Number.MAX_VALUE // 下\n    : 0; // 上\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      // Not change x for center label\n      if (list[i].position === 'center') {\n        continue;\n      }\n\n      var deltaY = Math.abs(list[i].y - cy);\n      var length = list[i].len;\n      var length2 = list[i].len2;\n      var deltaX = deltaY < r + length ? Math.sqrt((r + length + length2) * (r + length + length2) - deltaY * deltaY) : Math.abs(list[i].x - cx);\n\n      if (isDownList && deltaX >= lastDeltaX) {\n        // 右下，左下\n        deltaX = lastDeltaX - 10;\n      }\n\n      if (!isDownList && deltaX <= lastDeltaX) {\n        // 右上，左上\n        deltaX = lastDeltaX + 10;\n      }\n\n      list[i].x = cx + deltaX * dir;\n      lastDeltaX = deltaX;\n    }\n  }\n\n  var lastY = 0;\n  var delta;\n  var len = list.length;\n  var upList = [];\n  var downList = [];\n\n  for (var i = 0; i < len; i++) {\n    delta = list[i].y - lastY;\n\n    if (delta < 0) {\n      shiftDown(i, len, -delta, dir);\n    }\n\n    lastY = list[i].y + list[i].height;\n  }\n\n  if (viewHeight - lastY < 0) {\n    shiftUp(len - 1, lastY - viewHeight);\n  }\n\n  for (var i = 0; i < len; i++) {\n    if (list[i].y >= cy) {\n      downList.push(list[i]);\n    } else {\n      upList.push(list[i]);\n    }\n  }\n\n  changeX(upList, false, cx, cy, r, dir);\n  changeX(downList, true, cx, cy, r, dir);\n}\n\nfunction avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight) {\n  var leftList = [];\n  var rightList = [];\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    if (labelLayoutList[i].x < cx) {\n      leftList.push(labelLayoutList[i]);\n    } else {\n      rightList.push(labelLayoutList[i]);\n    }\n  }\n\n  adjustSingleSide(rightList, cx, cy, r, 1, viewWidth, viewHeight);\n  adjustSingleSide(leftList, cx, cy, r, -1, viewWidth, viewHeight);\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    var linePoints = labelLayoutList[i].linePoints;\n\n    if (linePoints) {\n      var dist = linePoints[1][0] - linePoints[2][0];\n\n      if (labelLayoutList[i].x < cx) {\n        linePoints[2][0] = labelLayoutList[i].x + 3;\n      } else {\n        linePoints[2][0] = labelLayoutList[i].x - 3;\n      }\n\n      linePoints[1][1] = linePoints[2][1] = labelLayoutList[i].y;\n      linePoints[1][0] = linePoints[2][0] + dist;\n    }\n  }\n}\n\nfunction _default(seriesModel, r, viewWidth, viewHeight) {\n  var data = seriesModel.getData();\n  var labelLayoutList = [];\n  var cx;\n  var cy;\n  var hasLabelRotate = false;\n  data.each(function (idx) {\n    var layout = data.getItemLayout(idx);\n    var itemModel = data.getItemModel(idx);\n    var labelModel = itemModel.getModel('label.normal'); // Use position in normal or emphasis\n\n    var labelPosition = labelModel.get('position') || itemModel.get('label.emphasis.position');\n    var labelLineModel = itemModel.getModel('labelLine.normal');\n    var labelLineLen = labelLineModel.get('length');\n    var labelLineLen2 = labelLineModel.get('length2');\n    var midAngle = (layout.startAngle + layout.endAngle) / 2;\n    var dx = Math.cos(midAngle);\n    var dy = Math.sin(midAngle);\n    var textX;\n    var textY;\n    var linePoints;\n    var textAlign;\n    cx = layout.cx;\n    cy = layout.cy;\n    var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\n\n    if (labelPosition === 'center') {\n      textX = layout.cx;\n      textY = layout.cy;\n      textAlign = 'center';\n    } else {\n      var x1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dx : layout.r * dx) + cx;\n      var y1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dy : layout.r * dy) + cy;\n      textX = x1 + dx * 3;\n      textY = y1 + dy * 3;\n\n      if (!isLabelInside) {\n        // For roseType\n        var x2 = x1 + dx * (labelLineLen + r - layout.r);\n        var y2 = y1 + dy * (labelLineLen + r - layout.r);\n        var x3 = x2 + (dx < 0 ? -1 : 1) * labelLineLen2;\n        var y3 = y2;\n        textX = x3 + (dx < 0 ? -5 : 5);\n        textY = y3;\n        linePoints = [[x1, y1], [x2, y2], [x3, y3]];\n      }\n\n      textAlign = isLabelInside ? 'center' : dx > 0 ? 'left' : 'right';\n    }\n\n    var font = labelModel.getFont();\n    var labelRotate = labelModel.get('rotate') ? dx < 0 ? -midAngle + Math.PI : -midAngle : 0;\n    var text = seriesModel.getFormattedLabel(idx, 'normal') || data.getName(idx);\n    var textRect = textContain.getBoundingRect(text, font, textAlign, 'top');\n    hasLabelRotate = !!labelRotate;\n    layout.label = {\n      x: textX,\n      y: textY,\n      position: labelPosition,\n      height: textRect.height,\n      len: labelLineLen,\n      len2: labelLineLen2,\n      linePoints: linePoints,\n      textAlign: textAlign,\n      verticalAlign: 'middle',\n      rotation: labelRotate,\n      inside: isLabelInside\n    }; // Not layout the inside label\n\n    if (!isLabelInside) {\n      labelLayoutList.push(layout.label);\n    }\n  });\n\n  if (!hasLabelRotate && seriesModel.get('avoidLabelOverlap')) {\n    avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight);\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 975:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_echarts_lib_echarts__ = __webpack_require__(979);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_echarts_lib_echarts___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_echarts_lib_echarts__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_echarts_lib_component_tooltip__ = __webpack_require__(1079);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_echarts_lib_component_tooltip___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_echarts_lib_component_tooltip__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_echarts_lib_component_legend__ = __webpack_require__(1080);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_echarts_lib_component_legend___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_echarts_lib_component_legend__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_echarts_lib_chart_pie__ = __webpack_require__(1169);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_echarts_lib_chart_pie___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_echarts_lib_chart_pie__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_echarts_lib_component_toolbox__ = __webpack_require__(1082);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_echarts_lib_component_toolbox___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_echarts_lib_component_toolbox__);\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}//必须\nvar PieReact=function(_React$Component){_inherits(PieReact,_React$Component);function PieReact(props){_classCallCheck(this,PieReact);var _this=_possibleConstructorReturn(this,(PieReact.__proto__||Object.getPrototypeOf(PieReact)).call(this,props));_this.initPie=_this.initPie.bind(_this);return _this;}_createClass(PieReact,[{key:'initPie',value:function initPie(){var _props$option=this.props.option,option=_props$option===undefined?{}:_props$option;//外部传入的data数据\nvar myChart=__WEBPACK_IMPORTED_MODULE_1_echarts_lib_echarts___default.a.init(this.ID);//初始化echarts\n//设置options\nmyChart.setOption(option);window.onresize=function(){myChart.resize();};}},{key:'componentDidMount',value:function componentDidMount(){this.initPie();}},{key:'componentDidUpdate',value:function componentDidUpdate(){this.initPie();}},{key:'render',value:function render(){var _this2=this;var _props=this.props,_props$width=_props.width,width=_props$width===undefined?\"100%\":_props$width,_props$height=_props.height,height=_props$height===undefined?'300px':_props$height;return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{ref:function ref(ID){return _this2.ID=ID;},style:{width:width,height:height}});}}]);return PieReact;}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);/* harmony default export */ __webpack_exports__[\"default\"] = (PieReact);\n\n/***/ }),\n\n/***/ 978:\n/***/ (function(module, exports) {\n\n/**\n * @module zrender/core/util\n */\n// 用于处理merge时无法遍历Date等对象的问题\nvar BUILTIN_OBJECT = {\n  '[object Function]': 1,\n  '[object RegExp]': 1,\n  '[object Date]': 1,\n  '[object Error]': 1,\n  '[object CanvasGradient]': 1,\n  '[object CanvasPattern]': 1,\n  // For node-canvas\n  '[object Image]': 1,\n  '[object Canvas]': 1\n};\nvar TYPED_ARRAY = {\n  '[object Int8Array]': 1,\n  '[object Uint8Array]': 1,\n  '[object Uint8ClampedArray]': 1,\n  '[object Int16Array]': 1,\n  '[object Uint16Array]': 1,\n  '[object Int32Array]': 1,\n  '[object Uint32Array]': 1,\n  '[object Float32Array]': 1,\n  '[object Float64Array]': 1\n};\nvar objToString = Object.prototype.toString;\nvar arrayProto = Array.prototype;\nvar nativeForEach = arrayProto.forEach;\nvar nativeFilter = arrayProto.filter;\nvar nativeSlice = arrayProto.slice;\nvar nativeMap = arrayProto.map;\nvar nativeReduce = arrayProto.reduce; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  methods[name] = fn;\n}\n/**\n * Those data types can be cloned:\n *     Plain object, Array, TypedArray, number, string, null, undefined.\n * Those data types will be assgined using the orginal data:\n *     BUILTIN_OBJECT\n * Instance of user defined class will be cloned to a plain object, without\n * properties in prototype.\n * Other data types is not supported (not sure what will happen).\n *\n * Caution: do not support clone Date, for performance consideration.\n * (There might be a large number of date in `series.data`).\n * So date should not be modified in and out of echarts.\n *\n * @param {*} source\n * @return {*} new\n */\n\n\nfunction clone(source) {\n  if (source == null || typeof source != 'object') {\n    return source;\n  }\n\n  var result = source;\n  var typeStr = objToString.call(source);\n\n  if (typeStr === '[object Array]') {\n    result = [];\n\n    for (var i = 0, len = source.length; i < len; i++) {\n      result[i] = clone(source[i]);\n    }\n  } else if (TYPED_ARRAY[typeStr]) {\n    var Ctor = source.constructor;\n\n    if (source.constructor.from) {\n      result = Ctor.from(source);\n    } else {\n      result = new Ctor(source.length);\n\n      for (var i = 0, len = source.length; i < len; i++) {\n        result[i] = clone(source[i]);\n      }\n    }\n  } else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n    result = {};\n\n    for (var key in source) {\n      if (source.hasOwnProperty(key)) {\n        result[key] = clone(source[key]);\n      }\n    }\n  }\n\n  return result;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overwrite=false]\n */\n\n\nfunction merge(target, source, overwrite) {\n  // We should escapse that source is string\n  // and enter for ... in ...\n  if (!isObject(source) || !isObject(target)) {\n    return overwrite ? clone(source) : target;\n  }\n\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      var targetProp = target[key];\n      var sourceProp = source[key];\n\n      if (isObject(sourceProp) && isObject(targetProp) && !isArray(sourceProp) && !isArray(targetProp) && !isDom(sourceProp) && !isDom(targetProp) && !isBuiltInObject(sourceProp) && !isBuiltInObject(targetProp) && !isPrimitive(sourceProp) && !isPrimitive(targetProp)) {\n        // 如果需要递归覆盖，就递归调用merge\n        merge(targetProp, sourceProp, overwrite);\n      } else if (overwrite || !(key in target)) {\n        // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n        // NOTE，在 target[key] 不存在的时候也是直接覆盖\n        target[key] = clone(source[key], true);\n      }\n    }\n  }\n\n  return target;\n}\n/**\n * @param {Array} targetAndSources The first item is target, and the rests are source.\n * @param {boolean} [overwrite=false]\n * @return {*} target\n */\n\n\nfunction mergeAll(targetAndSources, overwrite) {\n  var result = targetAndSources[0];\n\n  for (var i = 1, len = targetAndSources.length; i < len; i++) {\n    result = merge(result, targetAndSources[i], overwrite);\n  }\n\n  return result;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @memberOf module:zrender/core/util\n */\n\n\nfunction extend(target, source) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overlay=false]\n * @memberOf module:zrender/core/util\n */\n\n\nfunction defaults(target, source, overlay) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key) && (overlay ? source[key] != null : target[key] == null)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar createCanvas = function () {\n  return methods.createCanvas();\n};\n\nmethods.createCanvas = function () {\n  return document.createElement('canvas');\n}; // FIXME\n\n\nvar _ctx;\n\nfunction getContext() {\n  if (!_ctx) {\n    // Use util.createCanvas instead of createCanvas\n    // because createCanvas may be overwritten in different environment\n    _ctx = createCanvas().getContext('2d');\n  }\n\n  return _ctx;\n}\n/**\n * 查询数组中元素的index\n * @memberOf module:zrender/core/util\n */\n\n\nfunction indexOf(array, value) {\n  if (array) {\n    if (array.indexOf) {\n      return array.indexOf(value);\n    }\n\n    for (var i = 0, len = array.length; i < len; i++) {\n      if (array[i] === value) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n}\n/**\n * 构造类继承关系\n *\n * @memberOf module:zrender/core/util\n * @param {Function} clazz 源类\n * @param {Function} baseClazz 基类\n */\n\n\nfunction inherits(clazz, baseClazz) {\n  var clazzPrototype = clazz.prototype;\n\n  function F() {}\n\n  F.prototype = baseClazz.prototype;\n  clazz.prototype = new F();\n\n  for (var prop in clazzPrototype) {\n    clazz.prototype[prop] = clazzPrototype[prop];\n  }\n\n  clazz.prototype.constructor = clazz;\n  clazz.superClass = baseClazz;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Object|Function} target\n * @param {Object|Function} sorce\n * @param {boolean} overlay\n */\n\n\nfunction mixin(target, source, overlay) {\n  target = 'prototype' in target ? target.prototype : target;\n  source = 'prototype' in source ? source.prototype : source;\n  defaults(target, source, overlay);\n}\n/**\n * Consider typed array.\n * @param {Array|TypedArray} data\n */\n\n\nfunction isArrayLike(data) {\n  if (!data) {\n    return;\n  }\n\n  if (typeof data == 'string') {\n    return false;\n  }\n\n  return typeof data.length == 'number';\n}\n/**\n * 数组或对象遍历\n * @memberOf module:zrender/core/util\n * @param {Object|Array} obj\n * @param {Function} cb\n * @param {*} [context]\n */\n\n\nfunction each(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.forEach && obj.forEach === nativeForEach) {\n    obj.forEach(cb, context);\n  } else if (obj.length === +obj.length) {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      cb.call(context, obj[i], i, obj);\n    }\n  } else {\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        cb.call(context, obj[key], key, obj);\n      }\n    }\n  }\n}\n/**\n * 数组映射\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction map(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.map && obj.map === nativeMap) {\n    return obj.map(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      result.push(cb.call(context, obj[i], i, obj));\n    }\n\n    return result;\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {Object} [memo]\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction reduce(obj, cb, memo, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.reduce && obj.reduce === nativeReduce) {\n    return obj.reduce(cb, memo, context);\n  } else {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      memo = cb.call(context, memo, obj[i], i, obj);\n    }\n\n    return memo;\n  }\n}\n/**\n * 数组过滤\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction filter(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.filter && obj.filter === nativeFilter) {\n    return obj.filter(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      if (cb.call(context, obj[i], i, obj)) {\n        result.push(obj[i]);\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * 数组项查找\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {*}\n */\n\n\nfunction find(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  for (var i = 0, len = obj.length; i < len; i++) {\n    if (cb.call(context, obj[i], i, obj)) {\n      return obj[i];\n    }\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @param {*} context\n * @return {Function}\n */\n\n\nfunction bind(func, context) {\n  var args = nativeSlice.call(arguments, 2);\n  return function () {\n    return func.apply(context, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @return {Function}\n */\n\n\nfunction curry(func) {\n  var args = nativeSlice.call(arguments, 1);\n  return function () {\n    return func.apply(this, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isArray(value) {\n  return objToString.call(value) === '[object Array]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isString(value) {\n  return objToString.call(value) === '[object String]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return type === 'function' || !!value && type == 'object';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isBuiltInObject(value) {\n  return !!BUILTIN_OBJECT[objToString.call(value)];\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isDom(value) {\n  return typeof value === 'object' && typeof value.nodeType === 'number' && typeof value.ownerDocument === 'object';\n}\n/**\n * Whether is exactly NaN. Notice isNaN('a') returns true.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction eqNaN(value) {\n  return value !== value;\n}\n/**\n * If value1 is not null, then return value1, otherwise judget rest of values.\n * Low performance.\n * @memberOf module:zrender/core/util\n * @return {*} Final value\n */\n\n\nfunction retrieve(values) {\n  for (var i = 0, len = arguments.length; i < len; i++) {\n    if (arguments[i] != null) {\n      return arguments[i];\n    }\n  }\n}\n\nfunction retrieve2(value0, value1) {\n  return value0 != null ? value0 : value1;\n}\n\nfunction retrieve3(value0, value1, value2) {\n  return value0 != null ? value0 : value1 != null ? value1 : value2;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} arr\n * @param {number} startIndex\n * @param {number} endIndex\n * @return {Array}\n */\n\n\nfunction slice() {\n  return Function.call.apply(nativeSlice, arguments);\n}\n/**\n * Normalize css liked array configuration\n * e.g.\n *  3 => [3, 3, 3, 3]\n *  [4, 2] => [4, 2, 4, 2]\n *  [4, 3, 2] => [4, 3, 2, 3]\n * @param {number|Array.<number>} val\n * @return {Array.<number>}\n */\n\n\nfunction normalizeCssArray(val) {\n  if (typeof val === 'number') {\n    return [val, val, val, val];\n  }\n\n  var len = val.length;\n\n  if (len === 2) {\n    // vertical | horizontal\n    return [val[0], val[1], val[0], val[1]];\n  } else if (len === 3) {\n    // top | horizontal | bottom\n    return [val[0], val[1], val[2], val[1]];\n  }\n\n  return val;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {boolean} condition\n * @param {string} message\n */\n\n\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error(message);\n  }\n}\n\nvar primitiveKey = '__ec_primitive__';\n/**\n * Set an object as primitive to be ignored traversing children in clone or merge\n */\n\nfunction setAsPrimitive(obj) {\n  obj[primitiveKey] = true;\n}\n\nfunction isPrimitive(obj) {\n  return obj[primitiveKey];\n}\n/**\n * @constructor\n * @param {Object} obj Only apply `ownProperty`.\n */\n\n\nfunction HashMap(obj) {\n  obj && each(obj, function (value, key) {\n    this.set(key, value);\n  }, this);\n} // Add prefix to avoid conflict with Object.prototype.\n\n\nvar HASH_MAP_PREFIX = '_ec_';\nvar HASH_MAP_PREFIX_LENGTH = 4;\nHashMap.prototype = {\n  constructor: HashMap,\n  // Do not provide `has` method to avoid defining what is `has`.\n  // (We usually treat `null` and `undefined` as the same, different\n  // from ES6 Map).\n  get: function (key) {\n    return this[HASH_MAP_PREFIX + key];\n  },\n  set: function (key, value) {\n    this[HASH_MAP_PREFIX + key] = value; // Comparing with invocation chaining, `return value` is more commonly\n    // used in this case: `var someVal = map.set('a', genVal());`\n\n    return value;\n  },\n  // Although util.each can be performed on this hashMap directly, user\n  // should not use the exposed keys, who are prefixed.\n  each: function (cb, context) {\n    context !== void 0 && (cb = bind(cb, context));\n\n    for (var prefixedKey in this) {\n      this.hasOwnProperty(prefixedKey) && cb(this[prefixedKey], prefixedKey.slice(HASH_MAP_PREFIX_LENGTH));\n    }\n  },\n  // Do not use this method if performance sensitive.\n  removeKey: function (key) {\n    delete this[HASH_MAP_PREFIX + key];\n  }\n};\n\nfunction createHashMap(obj) {\n  return new HashMap(obj);\n}\n\nfunction noop() {}\n\nexports.$override = $override;\nexports.clone = clone;\nexports.merge = merge;\nexports.mergeAll = mergeAll;\nexports.extend = extend;\nexports.defaults = defaults;\nexports.createCanvas = createCanvas;\nexports.getContext = getContext;\nexports.indexOf = indexOf;\nexports.inherits = inherits;\nexports.mixin = mixin;\nexports.isArrayLike = isArrayLike;\nexports.each = each;\nexports.map = map;\nexports.reduce = reduce;\nexports.filter = filter;\nexports.find = find;\nexports.bind = bind;\nexports.curry = curry;\nexports.isArray = isArray;\nexports.isFunction = isFunction;\nexports.isString = isString;\nexports.isObject = isObject;\nexports.isBuiltInObject = isBuiltInObject;\nexports.isDom = isDom;\nexports.eqNaN = eqNaN;\nexports.retrieve = retrieve;\nexports.retrieve2 = retrieve2;\nexports.retrieve3 = retrieve3;\nexports.slice = slice;\nexports.normalizeCssArray = normalizeCssArray;\nexports.assert = assert;\nexports.setAsPrimitive = setAsPrimitive;\nexports.isPrimitive = isPrimitive;\nexports.createHashMap = createHashMap;\nexports.noop = noop;\n\n/***/ }),\n\n/***/ 979:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(983);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrender = __webpack_require__(1032);\n\nvar zrUtil = __webpack_require__(978);\n\nvar colorTool = __webpack_require__(1002);\n\nvar env = __webpack_require__(986);\n\nvar timsort = __webpack_require__(1024);\n\nvar Eventful = __webpack_require__(1001);\n\nvar GlobalModel = __webpack_require__(1101);\n\nvar ExtensionAPI = __webpack_require__(1126);\n\nvar CoordinateSystemManager = __webpack_require__(1006);\n\nvar OptionManager = __webpack_require__(1127);\n\nvar backwardCompat = __webpack_require__(1128);\n\nvar ComponentModel = __webpack_require__(991);\n\nvar SeriesModel = __webpack_require__(1000);\n\nvar ComponentView = __webpack_require__(1039);\n\nvar ChartView = __webpack_require__(1012);\n\nvar graphic = __webpack_require__(980);\n\nvar modelUtil = __webpack_require__(982);\n\nvar _throttle = __webpack_require__(1008);\n\nvar throttle = _throttle.throttle;\n\nvar seriesColor = __webpack_require__(1130);\n\nvar loadingDefault = __webpack_require__(1131);\n\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\nvar each = zrUtil.each;\nvar parseClassType = ComponentModel.parseClassType;\nvar version = '3.8.5';\nvar dependencies = {\n  zrender: '3.7.4'\n};\nvar PRIORITY_PROCESSOR_FILTER = 1000;\nvar PRIORITY_PROCESSOR_STATISTIC = 5000;\nvar PRIORITY_VISUAL_LAYOUT = 1000;\nvar PRIORITY_VISUAL_GLOBAL = 2000;\nvar PRIORITY_VISUAL_CHART = 3000;\nvar PRIORITY_VISUAL_COMPONENT = 4000; // FIXME\n// necessary?\n\nvar PRIORITY_VISUAL_BRUSH = 5000;\nvar PRIORITY = {\n  PROCESSOR: {\n    FILTER: PRIORITY_PROCESSOR_FILTER,\n    STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n  },\n  VISUAL: {\n    LAYOUT: PRIORITY_VISUAL_LAYOUT,\n    GLOBAL: PRIORITY_VISUAL_GLOBAL,\n    CHART: PRIORITY_VISUAL_CHART,\n    COMPONENT: PRIORITY_VISUAL_COMPONENT,\n    BRUSH: PRIORITY_VISUAL_BRUSH\n  }\n}; // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n// where they must not be invoked nestedly, except the only case: invoke\n// dispatchAction with updateMethod \"none\" in main process.\n// This flag is used to carry out this rule.\n// All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n\nvar IN_MAIN_PROCESS = '__flagInMainProcess';\nvar HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\nvar OPTION_UPDATED = '__optionUpdated';\nvar ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\nfunction createRegisterEventWithLowercaseName(method) {\n  return function (eventName, handler, context) {\n    // Event name is all lowercase\n    eventName = eventName && eventName.toLowerCase();\n    Eventful.prototype[method].call(this, eventName, handler, context);\n  };\n}\n/**\n * @module echarts~MessageCenter\n */\n\n\nfunction MessageCenter() {\n  Eventful.call(this);\n}\n\nMessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\nMessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\nMessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\nzrUtil.mixin(MessageCenter, Eventful);\n/**\n * @module echarts~ECharts\n */\n\nfunction ECharts(dom, theme, opts) {\n  opts = opts || {}; // Get theme by name\n\n  if (typeof theme === 'string') {\n    theme = themeStorage[theme];\n  }\n  /**\n   * @type {string}\n   */\n\n\n  this.id;\n  /**\n   * Group id\n   * @type {string}\n   */\n\n  this.group;\n  /**\n   * @type {HTMLElement}\n   * @private\n   */\n\n  this._dom = dom;\n  var defaultRenderer = 'canvas';\n\n  /**\n   * @type {module:zrender/ZRender}\n   * @private\n   */\n  var zr = this._zr = zrender.init(dom, {\n    renderer: opts.renderer || defaultRenderer,\n    devicePixelRatio: opts.devicePixelRatio,\n    width: opts.width,\n    height: opts.height\n  });\n  /**\n   * Expect 60 pfs.\n   * @type {Function}\n   * @private\n   */\n\n  this._throttledZrFlush = throttle(zrUtil.bind(zr.flush, zr), 17);\n  var theme = zrUtil.clone(theme);\n  theme && backwardCompat(theme, true);\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._theme = theme;\n  /**\n   * @type {Array.<module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsMap = {};\n  /**\n   * @type {Array.<module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsMap = {};\n  /**\n   * @type {module:echarts/CoordinateSystem}\n   * @private\n   */\n\n  this._coordSysMgr = new CoordinateSystemManager();\n  /**\n   * @type {module:echarts/ExtensionAPI}\n   * @private\n   */\n\n  this._api = createExtensionAPI(this);\n  Eventful.call(this);\n  /**\n   * @type {module:echarts~MessageCenter}\n   * @private\n   */\n\n  this._messageCenter = new MessageCenter(); // Init mouse events\n\n  this._initEvents(); // In case some people write `window.onresize = chart.resize`\n\n\n  this.resize = zrUtil.bind(this.resize, this); // Can't dispatch action during rendering procedure\n\n  this._pendingActions = []; // Sort on demand\n\n  function prioritySortFunc(a, b) {\n    return a.prio - b.prio;\n  }\n\n  timsort(visualFuncs, prioritySortFunc);\n  timsort(dataProcessorFuncs, prioritySortFunc);\n  zr.animation.on('frame', this._onframe, this); // ECharts instance can be used as value.\n\n  zrUtil.setAsPrimitive(this);\n}\n\nvar echartsProto = ECharts.prototype;\n\nechartsProto._onframe = function () {\n  // Lazy update\n  if (this[OPTION_UPDATED]) {\n    var silent = this[OPTION_UPDATED].silent;\n    this[IN_MAIN_PROCESS] = true;\n    updateMethods.prepareAndUpdate.call(this);\n    this[IN_MAIN_PROCESS] = false;\n    this[OPTION_UPDATED] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @return {HTMLElement}\n */\n\n\nechartsProto.getDom = function () {\n  return this._dom;\n};\n/**\n * @return {module:zrender~ZRender}\n */\n\n\nechartsProto.getZr = function () {\n  return this._zr;\n};\n/**\n * Usage:\n * chart.setOption(option, notMerge, lazyUpdate);\n * chart.setOption(option, {\n *     notMerge: ...,\n *     lazyUpdate: ...,\n *     silent: ...\n * });\n *\n * @param {Object} option\n * @param {Object|boolean} [opts] opts or notMerge.\n * @param {boolean} [opts.notMerge=false]\n * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n */\n\n\nechartsProto.setOption = function (option, notMerge, lazyUpdate) {\n  var silent;\n\n  if (zrUtil.isObject(notMerge)) {\n    lazyUpdate = notMerge.lazyUpdate;\n    silent = notMerge.silent;\n    notMerge = notMerge.notMerge;\n  }\n\n  this[IN_MAIN_PROCESS] = true;\n\n  if (!this._model || notMerge) {\n    var optionManager = new OptionManager(this._api);\n    var theme = this._theme;\n    var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n    ecModel.init(null, null, theme, optionManager);\n  }\n\n  this._model.setOption(option, optionPreprocessorFuncs);\n\n  if (lazyUpdate) {\n    this[OPTION_UPDATED] = {\n      silent: silent\n    };\n    this[IN_MAIN_PROCESS] = false;\n  } else {\n    updateMethods.prepareAndUpdate.call(this); // Ensure zr refresh sychronously, and then pixel in canvas can be\n    // fetched after `setOption`.\n\n    this._zr.flush();\n\n    this[OPTION_UPDATED] = false;\n    this[IN_MAIN_PROCESS] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @DEPRECATED\n */\n\n\nechartsProto.setTheme = function () {\n  console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n};\n/**\n * @return {module:echarts/model/Global}\n */\n\n\nechartsProto.getModel = function () {\n  return this._model;\n};\n/**\n * @return {Object}\n */\n\n\nechartsProto.getOption = function () {\n  return this._model && this._model.getOption();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getWidth = function () {\n  return this._zr.getWidth();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getHeight = function () {\n  return this._zr.getHeight();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getDevicePixelRatio = function () {\n  return this._zr.painter.dpr || window.devicePixelRatio || 1;\n};\n/**\n * Get canvas which has all thing rendered\n * @param {Object} opts\n * @param {string} [opts.backgroundColor]\n * @return {string}\n */\n\n\nechartsProto.getRenderedCanvas = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  opts = opts || {};\n  opts.pixelRatio = opts.pixelRatio || 1;\n  opts.backgroundColor = opts.backgroundColor || this._model.get('backgroundColor');\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.getRenderedCanvas(opts);\n};\n/**\n * Get svg data url\n * @return {string}\n */\n\n\nechartsProto.getSvgDataUrl = function () {\n  if (!env.svgSupported) {\n    return;\n  }\n\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.pathToSvg();\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n * @param {string} [opts.excludeComponents]\n */\n\n\nechartsProto.getDataURL = function (opts) {\n  opts = opts || {};\n  var excludeComponents = opts.excludeComponents;\n  var ecModel = this._model;\n  var excludesComponentViews = [];\n  var self = this;\n  each(excludeComponents, function (componentType) {\n    ecModel.eachComponent({\n      mainType: componentType\n    }, function (component) {\n      var view = self._componentsMap[component.__viewId];\n\n      if (!view.group.ignore) {\n        excludesComponentViews.push(view);\n        view.group.ignore = true;\n      }\n    });\n  });\n  var url = this._zr.painter.getType() === 'svg' ? this.getSvgDataUrl() : this.getRenderedCanvas(opts).toDataURL('image/' + (opts && opts.type || 'png'));\n  each(excludesComponentViews, function (view) {\n    view.group.ignore = false;\n  });\n  return url;\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n */\n\n\nechartsProto.getConnectedDataURL = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  var groupId = this.group;\n  var mathMin = Math.min;\n  var mathMax = Math.max;\n  var MAX_NUMBER = Infinity;\n\n  if (connectedGroups[groupId]) {\n    var left = MAX_NUMBER;\n    var top = MAX_NUMBER;\n    var right = -MAX_NUMBER;\n    var bottom = -MAX_NUMBER;\n    var canvasList = [];\n    var dpr = opts && opts.pixelRatio || 1;\n    zrUtil.each(instances, function (chart, id) {\n      if (chart.group === groupId) {\n        var canvas = chart.getRenderedCanvas(zrUtil.clone(opts));\n        var boundingRect = chart.getDom().getBoundingClientRect();\n        left = mathMin(boundingRect.left, left);\n        top = mathMin(boundingRect.top, top);\n        right = mathMax(boundingRect.right, right);\n        bottom = mathMax(boundingRect.bottom, bottom);\n        canvasList.push({\n          dom: canvas,\n          left: boundingRect.left,\n          top: boundingRect.top\n        });\n      }\n    });\n    left *= dpr;\n    top *= dpr;\n    right *= dpr;\n    bottom *= dpr;\n    var width = right - left;\n    var height = bottom - top;\n    var targetCanvas = zrUtil.createCanvas();\n    targetCanvas.width = width;\n    targetCanvas.height = height;\n    var zr = zrender.init(targetCanvas);\n    each(canvasList, function (item) {\n      var img = new graphic.Image({\n        style: {\n          x: item.left * dpr - left,\n          y: item.top * dpr - top,\n          image: item.dom\n        }\n      });\n      zr.add(img);\n    });\n    zr.refreshImmediately();\n    return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n  } else {\n    return this.getDataURL(opts);\n  }\n};\n/**\n * Convert from logical coordinate system to pixel coordinate system.\n * See CoordinateSystem#convertToPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId, geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\n\nechartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n/**\n * Convert from pixel coordinate system to logical coordinate system.\n * See CoordinateSystem#convertFromPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\nechartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\nfunction doConvertPixel(methodName, finder, value) {\n  var ecModel = this._model;\n\n  var coordSysList = this._coordSysMgr.getCoordinateSystems();\n\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n\n  for (var i = 0; i < coordSysList.length; i++) {\n    var coordSys = coordSysList[i];\n\n    if (coordSys[methodName] && (result = coordSys[methodName](ecModel, finder, value)) != null) {\n      return result;\n    }\n  }\n}\n/**\n * Is the specified coordinate systems or components contain the given pixel point.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {boolean} result\n */\n\n\nechartsProto.containPixel = function (finder, value) {\n  var ecModel = this._model;\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n  zrUtil.each(finder, function (models, key) {\n    key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n      var coordSys = model.coordinateSystem;\n\n      if (coordSys && coordSys.containPoint) {\n        result |= !!coordSys.containPoint(value);\n      } else if (key === 'seriesModels') {\n        var view = this._chartsMap[model.__viewId];\n\n        if (view && view.containPoint) {\n          result |= view.containPoint(value, model);\n        } else {}\n      } else {}\n    }, this);\n  }, this);\n  return !!result;\n};\n/**\n * Get visual from series or data.\n * @param {string|Object} finder\n *        If string, e.g., 'series', means {seriesIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            dataIndex / dataIndexInside\n *        }\n *        If dataIndex is not specified, series visual will be fetched,\n *        but not data item visual.\n *        If all of seriesIndex, seriesId, seriesName are not specified,\n *        visual will be fetched from first series.\n * @param {string} visualType 'color', 'symbol', 'symbolSize'\n */\n\n\nechartsProto.getVisual = function (finder, visualType) {\n  var ecModel = this._model;\n  finder = modelUtil.parseFinder(ecModel, finder, {\n    defaultMainType: 'series'\n  });\n  var seriesModel = finder.seriesModel;\n  var data = seriesModel.getData();\n  var dataIndexInside = finder.hasOwnProperty('dataIndexInside') ? finder.dataIndexInside : finder.hasOwnProperty('dataIndex') ? data.indexOfRawIndex(finder.dataIndex) : null;\n  return dataIndexInside != null ? data.getItemVisual(dataIndexInside, visualType) : data.getVisual(visualType);\n};\n/**\n * Get view of corresponding component model\n * @param  {module:echarts/model/Component} componentModel\n * @return {module:echarts/view/Component}\n */\n\n\nechartsProto.getViewOfComponentModel = function (componentModel) {\n  return this._componentsMap[componentModel.__viewId];\n};\n/**\n * Get view of corresponding series model\n * @param  {module:echarts/model/Series} seriesModel\n * @return {module:echarts/view/Chart}\n */\n\n\nechartsProto.getViewOfSeriesModel = function (seriesModel) {\n  return this._chartsMap[seriesModel.__viewId];\n};\n\nvar updateMethods = {\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  update: function (payload) {\n    // console.profile && console.profile('update');\n    var ecModel = this._model;\n    var api = this._api;\n    var coordSysMgr = this._coordSysMgr;\n    var zr = this._zr; // update before setOption\n\n    if (!ecModel) {\n      return;\n    } // Fixme First time update ?\n\n\n    ecModel.restoreData(); // TODO\n    // Save total ecModel here for undo/redo (after restoring data and before processing data).\n    // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n    // Create new coordinate system each update\n    // In LineView may save the old coordinate system and use it to get the orignal point\n\n    coordSysMgr.create(this._model, this._api);\n    processData.call(this, ecModel, api);\n    stackSeriesData.call(this, ecModel);\n    coordSysMgr.update(ecModel, api);\n    doVisualEncoding.call(this, ecModel, payload);\n    doRender.call(this, ecModel, payload); // Set background\n\n    var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n    var painter = zr.painter; // TODO all use clearColor ?\n\n    if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n      zr.configLayer(0, {\n        clearColor: backgroundColor\n      });\n    } else {\n      // In IE8\n      if (!env.canvasSupported) {\n        var colorArr = colorTool.parse(backgroundColor);\n        backgroundColor = colorTool.stringify(colorArr, 'rgb');\n\n        if (colorArr[3] === 0) {\n          backgroundColor = 'transparent';\n        }\n      }\n\n      if (backgroundColor.colorStops || backgroundColor.image) {\n        // Gradient background\n        // FIXME Fixed layer？\n        zr.configLayer(0, {\n          clearColor: backgroundColor\n        });\n        this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n        this._dom.style.background = 'transparent';\n      } else {\n        if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n          zr.configLayer(0, {\n            clearColor: null\n          });\n        }\n\n        this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n        this._dom.style.background = backgroundColor;\n      }\n    }\n\n    each(postUpdateFuncs, function (func) {\n      func(ecModel, api);\n    }); // console.profile && console.profileEnd('update');\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateView: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ecModel.eachSeries(function (seriesModel) {\n      seriesModel.getData().clearAllVisual();\n    });\n    doVisualEncoding.call(this, ecModel, payload);\n    invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateVisual: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ecModel.eachSeries(function (seriesModel) {\n      seriesModel.getData().clearAllVisual();\n    });\n    doVisualEncoding.call(this, ecModel, payload, true);\n    invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateLayout: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    doLayout.call(this, ecModel, payload);\n    invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  prepareAndUpdate: function (payload) {\n    var ecModel = this._model;\n    prepareView.call(this, 'component', ecModel);\n    prepareView.call(this, 'chart', ecModel);\n    updateMethods.update.call(this, payload);\n  }\n};\n/**\n * @private\n */\n\nfunction updateDirectly(ecIns, method, payload, mainType, subType) {\n  var ecModel = ecIns._model; // broadcast\n\n  if (!mainType) {\n    each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n    return;\n  }\n\n  var query = {};\n  query[mainType + 'Id'] = payload[mainType + 'Id'];\n  query[mainType + 'Index'] = payload[mainType + 'Index'];\n  query[mainType + 'Name'] = payload[mainType + 'Name'];\n  var condition = {\n    mainType: mainType,\n    query: query\n  };\n  subType && (condition.subType = subType); // subType may be '' by parseClassType;\n  // If dispatchAction before setOption, do nothing.\n\n  ecModel && ecModel.eachComponent(condition, function (model, index) {\n    callView(ecIns[mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId]);\n  }, ecIns);\n\n  function callView(view) {\n    view && view.__alive && view[method] && view[method](view.__model, ecModel, ecIns._api, payload);\n  }\n}\n/**\n * Resize the chart\n * @param {Object} opts\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n * @param {boolean} [opts.silent=false]\n */\n\n\nechartsProto.resize = function (opts) {\n  this[IN_MAIN_PROCESS] = true;\n\n  this._zr.resize(opts);\n\n  var optionChanged = this._model && this._model.resetOption('media');\n\n  var updateMethod = optionChanged ? 'prepareAndUpdate' : 'update';\n  updateMethods[updateMethod].call(this); // Resize loading effect\n\n  this._loadingFX && this._loadingFX.resize();\n  this[IN_MAIN_PROCESS] = false;\n  var silent = opts && opts.silent;\n  flushPendingActions.call(this, silent);\n  triggerUpdatedEvent.call(this, silent);\n};\n/**\n * Show loading effect\n * @param  {string} [name='default']\n * @param  {Object} [cfg]\n */\n\n\nechartsProto.showLoading = function (name, cfg) {\n  if (zrUtil.isObject(name)) {\n    cfg = name;\n    name = '';\n  }\n\n  name = name || 'default';\n  this.hideLoading();\n\n  if (!loadingEffects[name]) {\n    return;\n  }\n\n  var el = loadingEffects[name](this._api, cfg);\n  var zr = this._zr;\n  this._loadingFX = el;\n  zr.add(el);\n};\n/**\n * Hide loading effect\n */\n\n\nechartsProto.hideLoading = function () {\n  this._loadingFX && this._zr.remove(this._loadingFX);\n  this._loadingFX = null;\n};\n/**\n * @param {Object} eventObj\n * @return {Object}\n */\n\n\nechartsProto.makeActionFromEvent = function (eventObj) {\n  var payload = zrUtil.extend({}, eventObj);\n  payload.type = eventActionMap[eventObj.type];\n  return payload;\n};\n/**\n * @pubilc\n * @param {Object} payload\n * @param {string} [payload.type] Action type\n * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n * @param {boolean} [opt.silent=false] Whether trigger events.\n * @param {boolean} [opt.flush=undefined]\n *                  true: Flush immediately, and then pixel in canvas can be fetched\n *                      immediately. Caution: it might affect performance.\n *                  false: Not not flush.\n *                  undefined: Auto decide whether perform flush.\n */\n\n\nechartsProto.dispatchAction = function (payload, opt) {\n  if (!zrUtil.isObject(opt)) {\n    opt = {\n      silent: !!opt\n    };\n  }\n\n  if (!actions[payload.type]) {\n    return;\n  } // Avoid dispatch action before setOption. Especially in `connect`.\n\n\n  if (!this._model) {\n    return;\n  } // May dispatchAction in rendering procedure\n\n\n  if (this[IN_MAIN_PROCESS]) {\n    this._pendingActions.push(payload);\n\n    return;\n  }\n\n  doDispatchAction.call(this, payload, opt.silent);\n\n  if (opt.flush) {\n    this._zr.flush(true);\n  } else if (opt.flush !== false && env.browser.weChat) {\n    // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n    // hang when sliding page (on touch event), which cause that zr does not\n    // refresh util user interaction finished, which is not expected.\n    // But `dispatchAction` may be called too frequently when pan on touch\n    // screen, which impacts performance if do not throttle them.\n    this._throttledZrFlush();\n  }\n\n  flushPendingActions.call(this, opt.silent);\n  triggerUpdatedEvent.call(this, opt.silent);\n};\n\nfunction doDispatchAction(payload, silent) {\n  var payloadType = payload.type;\n  var escapeConnect = payload.escapeConnect;\n  var actionWrap = actions[payloadType];\n  var actionInfo = actionWrap.actionInfo;\n  var cptType = (actionInfo.update || 'update').split(':');\n  var updateMethod = cptType.pop();\n  cptType = cptType[0] != null && parseClassType(cptType[0]);\n  this[IN_MAIN_PROCESS] = true;\n  var payloads = [payload];\n  var batched = false; // Batch action\n\n  if (payload.batch) {\n    batched = true;\n    payloads = zrUtil.map(payload.batch, function (item) {\n      item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n      item.batch = null;\n      return item;\n    });\n  }\n\n  var eventObjBatch = [];\n  var eventObj;\n  var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n  each(payloads, function (batchItem) {\n    // Action can specify the event by return it.\n    eventObj = actionWrap.action(batchItem, this._model, this._api); // Emit event outside\n\n    eventObj = eventObj || zrUtil.extend({}, batchItem); // Convert type to eventType\n\n    eventObj.type = actionInfo.event || eventObj.type;\n    eventObjBatch.push(eventObj); // light update does not perform data process, layout and visual.\n\n    if (isHighDown) {\n      // method, payload, mainType, subType\n      updateDirectly(this, updateMethod, batchItem, 'series');\n    } else if (cptType) {\n      updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n    }\n  }, this);\n\n  if (updateMethod !== 'none' && !isHighDown && !cptType) {\n    // Still dirty\n    if (this[OPTION_UPDATED]) {\n      // FIXME Pass payload ?\n      updateMethods.prepareAndUpdate.call(this, payload);\n      this[OPTION_UPDATED] = false;\n    } else {\n      updateMethods[updateMethod].call(this, payload);\n    }\n  } // Follow the rule of action batch\n\n\n  if (batched) {\n    eventObj = {\n      type: actionInfo.event || payloadType,\n      escapeConnect: escapeConnect,\n      batch: eventObjBatch\n    };\n  } else {\n    eventObj = eventObjBatch[0];\n  }\n\n  this[IN_MAIN_PROCESS] = false;\n  !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n}\n\nfunction flushPendingActions(silent) {\n  var pendingActions = this._pendingActions;\n\n  while (pendingActions.length) {\n    var payload = pendingActions.shift();\n    doDispatchAction.call(this, payload, silent);\n  }\n}\n\nfunction triggerUpdatedEvent(silent) {\n  !silent && this.trigger('updated');\n}\n/**\n * Register event\n * @method\n */\n\n\nechartsProto.on = createRegisterEventWithLowercaseName('on');\nechartsProto.off = createRegisterEventWithLowercaseName('off');\nechartsProto.one = createRegisterEventWithLowercaseName('one');\n/**\n * @param {string} methodName\n * @private\n */\n\nfunction invokeUpdateMethod(methodName, ecModel, payload) {\n  var api = this._api; // Update all components\n\n  each(this._componentsViews, function (component) {\n    var componentModel = component.__model;\n    component[methodName](componentModel, ecModel, api, payload);\n    updateZ(componentModel, component);\n  }, this); // Upate all charts\n\n  ecModel.eachSeries(function (seriesModel, idx) {\n    var chart = this._chartsMap[seriesModel.__viewId];\n    chart[methodName](seriesModel, ecModel, api, payload);\n    updateZ(seriesModel, chart);\n    updateProgressiveAndBlend(seriesModel, chart);\n  }, this); // If use hover layer\n\n  updateHoverLayerStatus(this._zr, ecModel); // Post render\n\n  each(postUpdateFuncs, function (func) {\n    func(ecModel, api);\n  });\n}\n/**\n * Prepare view instances of charts and components\n * @param  {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction prepareView(type, ecModel) {\n  var isComponent = type === 'component';\n  var viewList = isComponent ? this._componentsViews : this._chartsViews;\n  var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n  var zr = this._zr;\n\n  for (var i = 0; i < viewList.length; i++) {\n    viewList[i].__alive = false;\n  }\n\n  ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n    if (isComponent) {\n      if (componentType === 'series') {\n        return;\n      }\n    } else {\n      model = componentType;\n    } // Consider: id same and type changed.\n\n\n    var viewId = '_ec_' + model.id + '_' + model.type;\n    var view = viewMap[viewId];\n\n    if (!view) {\n      var classType = parseClassType(model.type);\n      var Clazz = isComponent ? ComponentView.getClass(classType.main, classType.sub) : ChartView.getClass(classType.sub);\n\n      if (Clazz) {\n        view = new Clazz();\n        view.init(ecModel, this._api);\n        viewMap[viewId] = view;\n        viewList.push(view);\n        zr.add(view.group);\n      } else {\n        // Error\n        return;\n      }\n    }\n\n    model.__viewId = view.__id = viewId;\n    view.__alive = true;\n    view.__model = model;\n    view.group.__ecComponentInfo = {\n      mainType: model.mainType,\n      index: model.componentIndex\n    };\n  }, this);\n\n  for (var i = 0; i < viewList.length;) {\n    var view = viewList[i];\n\n    if (!view.__alive) {\n      zr.remove(view.group);\n      view.dispose(ecModel, this._api);\n      viewList.splice(i, 1);\n      delete viewMap[view.__id];\n      view.__id = view.group.__ecComponentInfo = null;\n    } else {\n      i++;\n    }\n  }\n}\n/**\n * Processor data in each series\n *\n * @param {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction processData(ecModel, api) {\n  each(dataProcessorFuncs, function (process) {\n    process.func(ecModel, api);\n  });\n}\n/**\n * @private\n */\n\n\nfunction stackSeriesData(ecModel) {\n  var stackedDataMap = {};\n  ecModel.eachSeries(function (series) {\n    var stack = series.get('stack');\n    var data = series.getData();\n\n    if (stack && data.type === 'list') {\n      var previousStack = stackedDataMap[stack]; // Avoid conflict with Object.prototype\n\n      if (stackedDataMap.hasOwnProperty(stack) && previousStack) {\n        data.stackedOn = previousStack;\n      }\n\n      stackedDataMap[stack] = data;\n    }\n  });\n}\n/**\n * Layout before each chart render there series, special visual encoding stage\n *\n * @param {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction doLayout(ecModel, payload) {\n  var api = this._api;\n  each(visualFuncs, function (visual) {\n    if (visual.isLayout) {\n      visual.func(ecModel, api, payload);\n    }\n  });\n}\n/**\n * Encode visual infomation from data after data processing\n *\n * @param {module:echarts/model/Global} ecModel\n * @param {object} layout\n * @param {boolean} [excludesLayout]\n * @private\n */\n\n\nfunction doVisualEncoding(ecModel, payload, excludesLayout) {\n  var api = this._api;\n  ecModel.clearColorPalette();\n  ecModel.eachSeries(function (seriesModel) {\n    seriesModel.clearColorPalette();\n  });\n  each(visualFuncs, function (visual) {\n    (!excludesLayout || !visual.isLayout) && visual.func(ecModel, api, payload);\n  });\n}\n/**\n * Render each chart and component\n * @private\n */\n\n\nfunction doRender(ecModel, payload) {\n  var api = this._api; // Render all components\n\n  each(this._componentsViews, function (componentView) {\n    var componentModel = componentView.__model;\n    componentView.render(componentModel, ecModel, api, payload);\n    updateZ(componentModel, componentView);\n  }, this);\n  each(this._chartsViews, function (chart) {\n    chart.__alive = false;\n  }, this); // Render all charts\n\n  ecModel.eachSeries(function (seriesModel, idx) {\n    var chartView = this._chartsMap[seriesModel.__viewId];\n    chartView.__alive = true;\n    chartView.render(seriesModel, ecModel, api, payload);\n    chartView.group.silent = !!seriesModel.get('silent');\n    updateZ(seriesModel, chartView);\n    updateProgressiveAndBlend(seriesModel, chartView);\n  }, this); // If use hover layer\n\n  updateHoverLayerStatus(this._zr, ecModel); // Remove groups of unrendered charts\n\n  each(this._chartsViews, function (chart) {\n    if (!chart.__alive) {\n      chart.remove(ecModel, api);\n    }\n  }, this);\n}\n\nvar MOUSE_EVENT_NAMES = ['click', 'dblclick', 'mouseover', 'mouseout', 'mousemove', 'mousedown', 'mouseup', 'globalout', 'contextmenu'];\n/**\n * @private\n */\n\nechartsProto._initEvents = function () {\n  each(MOUSE_EVENT_NAMES, function (eveName) {\n    this._zr.on(eveName, function (e) {\n      var ecModel = this.getModel();\n      var el = e.target;\n      var params; // no e.target when 'globalout'.\n\n      if (eveName === 'globalout') {\n        params = {};\n      } else if (el && el.dataIndex != null) {\n        var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n        params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n      } // If element has custom eventData of components\n      else if (el && el.eventData) {\n          params = zrUtil.extend({}, el.eventData);\n        }\n\n      if (params) {\n        params.event = e;\n        params.type = eveName;\n        this.trigger(eveName, params);\n      }\n    }, this);\n  }, this);\n  each(eventActionMap, function (actionType, eventType) {\n    this._messageCenter.on(eventType, function (event) {\n      this.trigger(eventType, event);\n    }, this);\n  }, this);\n};\n/**\n * @return {boolean}\n */\n\n\nechartsProto.isDisposed = function () {\n  return this._disposed;\n};\n/**\n * Clear\n */\n\n\nechartsProto.clear = function () {\n  this.setOption({\n    series: []\n  }, true);\n};\n/**\n * Dispose instance\n */\n\n\nechartsProto.dispose = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  this._disposed = true;\n  var api = this._api;\n  var ecModel = this._model;\n  each(this._componentsViews, function (component) {\n    component.dispose(ecModel, api);\n  });\n  each(this._chartsViews, function (chart) {\n    chart.dispose(ecModel, api);\n  }); // Dispose after all views disposed\n\n  this._zr.dispose();\n\n  delete instances[this.id];\n};\n\nzrUtil.mixin(ECharts, Eventful);\n\nfunction updateHoverLayerStatus(zr, ecModel) {\n  var storage = zr.storage;\n  var elCount = 0;\n  storage.traverse(function (el) {\n    if (!el.isGroup) {\n      elCount++;\n    }\n  });\n\n  if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n    storage.traverse(function (el) {\n      if (!el.isGroup) {\n        el.useHoverLayer = true;\n      }\n    });\n  }\n}\n/**\n * Update chart progressive and blend.\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateProgressiveAndBlend(seriesModel, chartView) {\n  // Progressive configuration\n  var elCount = 0;\n  chartView.group.traverse(function (el) {\n    if (el.type !== 'group' && !el.ignore) {\n      elCount++;\n    }\n  });\n  var frameDrawNum = +seriesModel.get('progressive');\n  var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n\n  if (needProgressive) {\n    chartView.group.traverse(function (el) {\n      // FIXME marker and other components\n      if (!el.isGroup) {\n        el.progressive = needProgressive ? Math.floor(elCount++ / frameDrawNum) : -1;\n\n        if (needProgressive) {\n          el.stopAnimation(true);\n        }\n      }\n    });\n  } // Blend configration\n\n\n  var blendMode = seriesModel.get('blendMode') || null;\n  chartView.group.traverse(function (el) {\n    // FIXME marker and other components\n    if (!el.isGroup) {\n      el.setStyle('blend', blendMode);\n    }\n  });\n}\n/**\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateZ(model, view) {\n  var z = model.get('z');\n  var zlevel = model.get('zlevel'); // Set z and zlevel\n\n  view.group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n    }\n  });\n}\n\nfunction createExtensionAPI(ecInstance) {\n  var coordSysMgr = ecInstance._coordSysMgr;\n  return zrUtil.extend(new ExtensionAPI(ecInstance), {\n    // Inject methods\n    getCoordinateSystems: zrUtil.bind(coordSysMgr.getCoordinateSystems, coordSysMgr),\n    getComponentByElement: function (el) {\n      while (el) {\n        var modelInfo = el.__ecComponentInfo;\n\n        if (modelInfo != null) {\n          return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n        }\n\n        el = el.parent;\n      }\n    }\n  });\n}\n/**\n * @type {Object} key: actionType.\n * @inner\n */\n\n\nvar actions = {};\n/**\n * Map eventType to actionType\n * @type {Object}\n */\n\nvar eventActionMap = {};\n/**\n * Data processor functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar dataProcessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar optionPreprocessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar postUpdateFuncs = [];\n/**\n * Visual encoding functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar visualFuncs = [];\n/**\n * Theme storage\n * @type {Object.<key, Object>}\n */\n\nvar themeStorage = {};\n/**\n * Loading effects\n */\n\nvar loadingEffects = {};\nvar instances = {};\nvar connectedGroups = {};\nvar idBase = new Date() - 0;\nvar groupIdBase = new Date() - 0;\nvar DOM_ATTRIBUTE_KEY = '_echarts_instance_';\nvar mapDataStores = {};\n\nfunction enableConnect(chart) {\n  var STATUS_PENDING = 0;\n  var STATUS_UPDATING = 1;\n  var STATUS_UPDATED = 2;\n  var STATUS_KEY = '__connectUpdateStatus';\n\n  function updateConnectedChartsStatus(charts, status) {\n    for (var i = 0; i < charts.length; i++) {\n      var otherChart = charts[i];\n      otherChart[STATUS_KEY] = status;\n    }\n  }\n\n  zrUtil.each(eventActionMap, function (actionType, eventType) {\n    chart._messageCenter.on(eventType, function (event) {\n      if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n        if (event && event.escapeConnect) {\n          return;\n        }\n\n        var action = chart.makeActionFromEvent(event);\n        var otherCharts = [];\n        zrUtil.each(instances, function (otherChart) {\n          if (otherChart !== chart && otherChart.group === chart.group) {\n            otherCharts.push(otherChart);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n        each(otherCharts, function (otherChart) {\n          if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n            otherChart.dispatchAction(action);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n      }\n    });\n  });\n}\n/**\n * @param {HTMLElement} dom\n * @param {Object} [theme]\n * @param {Object} opts\n * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n *                              Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n *                               Can be 'auto' (the same as null/undefined)\n */\n\n\nfunction init(dom, theme, opts) {\n  var existInstance = getInstanceByDom(dom);\n\n  if (existInstance) {\n    return existInstance;\n  }\n\n  var chart = new ECharts(dom, theme, opts);\n  chart.id = 'ec_' + idBase++;\n  instances[chart.id] = chart;\n\n  if (dom.setAttribute) {\n    dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n  } else {\n    dom[DOM_ATTRIBUTE_KEY] = chart.id;\n  }\n\n  enableConnect(chart);\n  return chart;\n}\n/**\n * @return {string|Array.<module:echarts~ECharts>} groupId\n */\n\n\nfunction connect(groupId) {\n  // Is array of charts\n  if (zrUtil.isArray(groupId)) {\n    var charts = groupId;\n    groupId = null; // If any chart has group\n\n    zrUtil.each(charts, function (chart) {\n      if (chart.group != null) {\n        groupId = chart.group;\n      }\n    });\n    groupId = groupId || 'g_' + groupIdBase++;\n    zrUtil.each(charts, function (chart) {\n      chart.group = groupId;\n    });\n  }\n\n  connectedGroups[groupId] = true;\n  return groupId;\n}\n/**\n * @DEPRECATED\n * @return {string} groupId\n */\n\n\nfunction disConnect(groupId) {\n  connectedGroups[groupId] = false;\n}\n/**\n * @return {string} groupId\n */\n\n\nvar disconnect = disConnect;\n/**\n * Dispose a chart instance\n * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n */\n\nfunction dispose(chart) {\n  if (typeof chart === 'string') {\n    chart = instances[chart];\n  } else if (!(chart instanceof ECharts)) {\n    // Try to treat as dom\n    chart = getInstanceByDom(chart);\n  }\n\n  if (chart instanceof ECharts && !chart.isDisposed()) {\n    chart.dispose();\n  }\n}\n/**\n * @param  {HTMLElement} dom\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceByDom(dom) {\n  var key;\n\n  if (dom.getAttribute) {\n    key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n  } else {\n    key = dom[DOM_ATTRIBUTE_KEY];\n  }\n\n  return instances[key];\n}\n/**\n * @param {string} key\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceById(key) {\n  return instances[key];\n}\n/**\n * Register theme\n */\n\n\nfunction registerTheme(name, theme) {\n  themeStorage[name] = theme;\n}\n/**\n * Register option preprocessor\n * @param {Function} preprocessorFunc\n */\n\n\nfunction registerPreprocessor(preprocessorFunc) {\n  optionPreprocessorFuncs.push(preprocessorFunc);\n}\n/**\n * @param {number} [priority=1000]\n * @param {Function} processorFunc\n */\n\n\nfunction registerProcessor(priority, processorFunc) {\n  if (typeof priority === 'function') {\n    processorFunc = priority;\n    priority = PRIORITY_PROCESSOR_FILTER;\n  }\n\n  dataProcessorFuncs.push({\n    prio: priority,\n    func: processorFunc\n  });\n}\n/**\n * Register postUpdater\n * @param {Function} postUpdateFunc\n */\n\n\nfunction registerPostUpdate(postUpdateFunc) {\n  postUpdateFuncs.push(postUpdateFunc);\n}\n/**\n * Usage:\n * registerAction('someAction', 'someEvent', function () { ... });\n * registerAction('someAction', function () { ... });\n * registerAction(\n *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n *     function () { ... }\n * );\n *\n * @param {(string|Object)} actionInfo\n * @param {string} actionInfo.type\n * @param {string} [actionInfo.event]\n * @param {string} [actionInfo.update]\n * @param {string} [eventName]\n * @param {Function} action\n */\n\n\nfunction registerAction(actionInfo, eventName, action) {\n  if (typeof eventName === 'function') {\n    action = eventName;\n    eventName = '';\n  }\n\n  var actionType = zrUtil.isObject(actionInfo) ? actionInfo.type : [actionInfo, actionInfo = {\n    event: eventName\n  }][0]; // Event name is all lowercase\n\n  actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n  eventName = actionInfo.event; // Validate action type and event name.\n\n  zrUtil.assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n  if (!actions[actionType]) {\n    actions[actionType] = {\n      action: action,\n      actionInfo: actionInfo\n    };\n  }\n\n  eventActionMap[eventName] = actionType;\n}\n/**\n * @param {string} type\n * @param {*} CoordinateSystem\n */\n\n\nfunction registerCoordinateSystem(type, CoordinateSystem) {\n  CoordinateSystemManager.register(type, CoordinateSystem);\n}\n/**\n * Get dimensions of specified coordinate system.\n * @param {string} type\n * @return {Array.<string|Object>}\n */\n\n\nfunction getCoordinateSystemDimensions(type) {\n  var coordSysCreator = CoordinateSystemManager.get(type);\n\n  if (coordSysCreator) {\n    return coordSysCreator.getDimensionsInfo ? coordSysCreator.getDimensionsInfo() : coordSysCreator.dimensions.slice();\n  }\n}\n/**\n * Layout is a special stage of visual encoding\n * Most visual encoding like color are common for different chart\n * But each chart has it's own layout algorithm\n *\n * @param {number} [priority=1000]\n * @param {Function} layoutFunc\n */\n\n\nfunction registerLayout(priority, layoutFunc) {\n  if (typeof priority === 'function') {\n    layoutFunc = priority;\n    priority = PRIORITY_VISUAL_LAYOUT;\n  }\n\n  visualFuncs.push({\n    prio: priority,\n    func: layoutFunc,\n    isLayout: true\n  });\n}\n/**\n * @param {number} [priority=3000]\n * @param {Function} visualFunc\n */\n\n\nfunction registerVisual(priority, visualFunc) {\n  if (typeof priority === 'function') {\n    visualFunc = priority;\n    priority = PRIORITY_VISUAL_CHART;\n  }\n\n  visualFuncs.push({\n    prio: priority,\n    func: visualFunc\n  });\n}\n/**\n * @param {string} name\n */\n\n\nfunction registerLoading(name, loadingFx) {\n  loadingEffects[name] = loadingFx;\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentModel(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentModel;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentView(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentView;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentView.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendSeriesModel(opts\n/*, superClass*/\n) {\n  // var Clazz = SeriesModel;\n  // if (superClass) {\n  //     superClass = 'series.' + superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return SeriesModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendChartView(opts\n/*, superClass*/\n) {\n  // var Clazz = ChartView;\n  // if (superClass) {\n  //     superClass = superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ChartView.getClass(classType.main, true);\n  // }\n  return ChartView.extend(opts);\n}\n/**\n * ZRender need a canvas context to do measureText.\n * But in node environment canvas may be created by node-canvas.\n * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n *\n * Be careful of using it in the browser.\n *\n * @param {Function} creator\n * @example\n *     var Canvas = require('canvas');\n *     var echarts = require('echarts');\n *     echarts.setCanvasCreator(function () {\n *         // Small size is enough.\n *         return new Canvas(32, 32);\n *     });\n */\n\n\nfunction setCanvasCreator(creator) {\n  zrUtil.$override('createCanvas', creator);\n}\n/**\n * @param {string} mapName\n * @param {Object|string} geoJson\n * @param {Object} [specialAreas]\n *\n * @example\n *     $.get('USA.json', function (geoJson) {\n *         echarts.registerMap('USA', geoJson);\n *         // Or\n *         echarts.registerMap('USA', {\n *             geoJson: geoJson,\n *             specialAreas: {}\n *         })\n *     });\n */\n\n\nfunction registerMap(mapName, geoJson, specialAreas) {\n  if (geoJson.geoJson && !geoJson.features) {\n    specialAreas = geoJson.specialAreas;\n    geoJson = geoJson.geoJson;\n  }\n\n  if (typeof geoJson === 'string') {\n    geoJson = typeof JSON !== 'undefined' && JSON.parse ? JSON.parse(geoJson) : new Function('return (' + geoJson + ');')();\n  }\n\n  mapDataStores[mapName] = {\n    geoJson: geoJson,\n    specialAreas: specialAreas\n  };\n}\n/**\n * @param {string} mapName\n * @return {Object}\n */\n\n\nfunction getMap(mapName) {\n  return mapDataStores[mapName];\n}\n\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesColor);\nregisterPreprocessor(backwardCompat);\nregisterLoading('default', loadingDefault); // Default actions\n\nregisterAction({\n  type: 'highlight',\n  event: 'highlight',\n  update: 'highlight'\n}, zrUtil.noop);\nregisterAction({\n  type: 'downplay',\n  event: 'downplay',\n  update: 'downplay'\n}, zrUtil.noop); // For backward compatibility, where the namespace `dataTool` will\n// be mounted on `echarts` is the extension `dataTool` is imported.\n\nvar dataTool = {};\nexports.version = version;\nexports.dependencies = dependencies;\nexports.PRIORITY = PRIORITY;\nexports.init = init;\nexports.connect = connect;\nexports.disConnect = disConnect;\nexports.disconnect = disconnect;\nexports.dispose = dispose;\nexports.getInstanceByDom = getInstanceByDom;\nexports.getInstanceById = getInstanceById;\nexports.registerTheme = registerTheme;\nexports.registerPreprocessor = registerPreprocessor;\nexports.registerProcessor = registerProcessor;\nexports.registerPostUpdate = registerPostUpdate;\nexports.registerAction = registerAction;\nexports.registerCoordinateSystem = registerCoordinateSystem;\nexports.getCoordinateSystemDimensions = getCoordinateSystemDimensions;\nexports.registerLayout = registerLayout;\nexports.registerVisual = registerVisual;\nexports.registerLoading = registerLoading;\nexports.extendComponentModel = extendComponentModel;\nexports.extendComponentView = extendComponentView;\nexports.extendSeriesModel = extendSeriesModel;\nexports.extendChartView = extendChartView;\nexports.setCanvasCreator = setCanvasCreator;\nexports.registerMap = registerMap;\nexports.getMap = getMap;\nexports.dataTool = dataTool;\nvar ___ec_export = __webpack_require__(1075);\n(function () {\n    for (var key in ___ec_export) {\n        if (___ec_export.hasOwnProperty(key)) {\n            exports[key] = ___ec_export[key];\n        }\n    }\n})();\n\n/***/ }),\n\n/***/ 980:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar pathTool = __webpack_require__(1105);\n\nvar colorTool = __webpack_require__(1002);\n\nvar matrix = __webpack_require__(994);\n\nvar vector = __webpack_require__(984);\n\nvar Path = __webpack_require__(988);\n\nvar Transformable = __webpack_require__(1036);\n\nvar Image = __webpack_require__(1025);\n\nexports.Image = Image;\n\nvar Group = __webpack_require__(1009);\n\nexports.Group = Group;\n\nvar Text = __webpack_require__(1038);\n\nexports.Text = Text;\n\nvar Circle = __webpack_require__(1110);\n\nexports.Circle = Circle;\n\nvar Sector = __webpack_require__(1111);\n\nexports.Sector = Sector;\n\nvar Ring = __webpack_require__(1112);\n\nexports.Ring = Ring;\n\nvar Polygon = __webpack_require__(1113);\n\nexports.Polygon = Polygon;\n\nvar Polyline = __webpack_require__(1116);\n\nexports.Polyline = Polyline;\n\nvar Rect = __webpack_require__(1117);\n\nexports.Rect = Rect;\n\nvar Line = __webpack_require__(1118);\n\nexports.Line = Line;\n\nvar BezierCurve = __webpack_require__(1119);\n\nexports.BezierCurve = BezierCurve;\n\nvar Arc = __webpack_require__(1120);\n\nexports.Arc = Arc;\n\nvar CompoundPath = __webpack_require__(1121);\n\nexports.CompoundPath = CompoundPath;\n\nvar LinearGradient = __webpack_require__(1074);\n\nexports.LinearGradient = LinearGradient;\n\nvar RadialGradient = __webpack_require__(1122);\n\nexports.RadialGradient = RadialGradient;\n\nvar BoundingRect = __webpack_require__(987);\n\nexports.BoundingRect = BoundingRect;\nvar round = Math.round;\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar EMPTY_OBJ = {};\n/**\n * Extend shape with parameters\n */\n\nfunction extendShape(opts) {\n  return Path.extend(opts);\n}\n/**\n * Extend path\n */\n\n\nfunction extendPath(pathData, opts) {\n  return pathTool.extendFromString(pathData, opts);\n}\n/**\n * Create a path element from path data string\n * @param {string} pathData\n * @param {Object} opts\n * @param {module:zrender/core/BoundingRect} rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makePath(pathData, opts, rect, layout) {\n  var path = pathTool.createFromString(pathData, opts);\n  var boundingRect = path.getBoundingRect();\n\n  if (rect) {\n    if (layout === 'center') {\n      rect = centerGraphic(rect, boundingRect);\n    }\n\n    resizePath(path, rect);\n  }\n\n  return path;\n}\n/**\n * Create a image element from image url\n * @param {string} imageUrl image url\n * @param {Object} opts options\n * @param {module:zrender/core/BoundingRect} rect constrain rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makeImage(imageUrl, rect, layout) {\n  var path = new Image({\n    style: {\n      image: imageUrl,\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    onload: function (img) {\n      if (layout === 'center') {\n        var boundingRect = {\n          width: img.width,\n          height: img.height\n        };\n        path.setStyle(centerGraphic(rect, boundingRect));\n      }\n    }\n  });\n  return path;\n}\n/**\n * Get position of centered element in bounding box.\n *\n * @param  {Object} rect         element local bounding box\n * @param  {Object} boundingRect constraint bounding box\n * @return {Object} element position containing x, y, width, and height\n */\n\n\nfunction centerGraphic(rect, boundingRect) {\n  // Set rect to center, keep width / height ratio.\n  var aspect = boundingRect.width / boundingRect.height;\n  var width = rect.height * aspect;\n  var height;\n\n  if (width <= rect.width) {\n    height = rect.height;\n  } else {\n    width = rect.width;\n    height = width / aspect;\n  }\n\n  var cx = rect.x + rect.width / 2;\n  var cy = rect.y + rect.height / 2;\n  return {\n    x: cx - width / 2,\n    y: cy - height / 2,\n    width: width,\n    height: height\n  };\n}\n\nvar mergePath = pathTool.mergePath;\n/**\n * Resize a path to fit the rect\n * @param {module:zrender/graphic/Path} path\n * @param {Object} rect\n */\n\nfunction resizePath(path, rect) {\n  if (!path.applyTransform) {\n    return;\n  }\n\n  var pathRect = path.getBoundingRect();\n  var m = pathRect.calculateTransform(rect);\n  path.applyTransform(m);\n}\n/**\n * Sub pixel optimize line for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x1]\n * @param {number} [param.shape.y1]\n * @param {number} [param.shape.x2]\n * @param {number} [param.shape.y2]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeLine(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n\n  if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n    shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n  }\n\n  if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n    shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n  }\n\n  return param;\n}\n/**\n * Sub pixel optimize rect for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x]\n * @param {number} [param.shape.y]\n * @param {number} [param.shape.width]\n * @param {number} [param.shape.height]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeRect(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n  var originX = shape.x;\n  var originY = shape.y;\n  var originWidth = shape.width;\n  var originHeight = shape.height;\n  shape.x = subPixelOptimize(shape.x, lineWidth, true);\n  shape.y = subPixelOptimize(shape.y, lineWidth, true);\n  shape.width = Math.max(subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x, originWidth === 0 ? 0 : 1);\n  shape.height = Math.max(subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y, originHeight === 0 ? 0 : 1);\n  return param;\n}\n/**\n * Sub pixel optimize for canvas\n *\n * @param {number} position Coordinate, such as x, y\n * @param {number} lineWidth Should be nonnegative integer.\n * @param {boolean=} positiveOrNegative Default false (negative).\n * @return {number} Optimized position.\n */\n\n\nfunction subPixelOptimize(position, lineWidth, positiveOrNegative) {\n  // Assure that (position + lineWidth / 2) is near integer edge,\n  // otherwise line will be fuzzy in canvas.\n  var doubledPosition = round(position * 2);\n  return (doubledPosition + round(lineWidth)) % 2 === 0 ? doubledPosition / 2 : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n}\n\nfunction hasFillOrStroke(fillOrStroke) {\n  return fillOrStroke != null && fillOrStroke != 'none';\n}\n\nfunction liftColor(color) {\n  return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n}\n/**\n * @private\n */\n\n\nfunction cacheElementStl(el) {\n  if (el.__hoverStlDirty) {\n    var stroke = el.style.stroke;\n    var fill = el.style.fill; // Create hoverStyle on mouseover\n\n    var hoverStyle = el.__hoverStl;\n    hoverStyle.fill = hoverStyle.fill || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n    hoverStyle.stroke = hoverStyle.stroke || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n    var normalStyle = {};\n\n    for (var name in hoverStyle) {\n      // See comment in `doSingleEnterHover`.\n      if (hoverStyle[name] != null) {\n        normalStyle[name] = el.style[name];\n      }\n    }\n\n    el.__normalStl = normalStyle;\n    el.__hoverStlDirty = false;\n  }\n}\n/**\n * @private\n */\n\n\nfunction doSingleEnterHover(el) {\n  if (el.__isHover) {\n    return;\n  }\n\n  cacheElementStl(el);\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.addHover(el, el.__hoverStl);\n  } else {\n    var style = el.style;\n    var insideRollbackOpt = style.insideRollbackOpt; // Consider case: only `position: 'top'` is set on emphasis, then text\n    // color should be returned to `autoColor`, rather than remain '#fff'.\n    // So we should rollback then apply again after style merging.\n\n    insideRollbackOpt && rollbackInsideStyle(style); // styles can be:\n    // {\n    //     label: {\n    //         normal: {\n    //             show: false,\n    //             position: 'outside',\n    //             fontSize: 18\n    //         },\n    //         emphasis: {\n    //             show: true\n    //         }\n    //     }\n    // },\n    // where properties of `emphasis` may not appear in `normal`. We previously use\n    // module:echarts/util/model#defaultEmphasis to merge `normal` to `emphasis`.\n    // But consider rich text and setOption in merge mode, it is impossible to cover\n    // all properties in merge. So we use merge mode when setting style here, where\n    // only properties that is not `null/undefined` can be set. The disadventage:\n    // null/undefined can not be used to remove style any more in `emphasis`.\n\n    style.extendFrom(el.__hoverStl); // Do not save `insideRollback`.\n\n    if (insideRollbackOpt) {\n      applyInsideStyle(style, style.insideOriginalTextPosition, insideRollbackOpt); // textFill may be rollbacked to null.\n\n      if (style.textFill == null) {\n        style.textFill = insideRollbackOpt.autoColor;\n      }\n    }\n\n    el.dirty(false);\n    el.z2 += 1;\n  }\n\n  el.__isHover = true;\n}\n/**\n * @inner\n */\n\n\nfunction doSingleLeaveHover(el) {\n  if (!el.__isHover) {\n    return;\n  }\n\n  var normalStl = el.__normalStl;\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.removeHover(el);\n  } else {\n    // Consider null/undefined value, should use\n    // `setStyle` but not `extendFrom(stl, true)`.\n    normalStl && el.setStyle(normalStl);\n    el.z2 -= 1;\n  }\n\n  el.__isHover = false;\n}\n/**\n * @inner\n */\n\n\nfunction doEnterHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleEnterHover(child);\n    }\n  }) : doSingleEnterHover(el);\n}\n\nfunction doLeaveHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleLeaveHover(child);\n    }\n  }) : doSingleLeaveHover(el);\n}\n/**\n * @inner\n */\n\n\nfunction setElementHoverStl(el, hoverStl) {\n  // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n  // Often used when item group has a label element and it's hoverStyle is different\n  el.__hoverStl = el.hoverStyle || hoverStl || {};\n  el.__hoverStlDirty = true;\n\n  if (el.__isHover) {\n    cacheElementStl(el);\n  }\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOver(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOut(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doLeaveHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction enterEmphasis() {\n  this.__isEmphasis = true;\n  doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction leaveEmphasis() {\n  this.__isEmphasis = false;\n  doLeaveHover(this);\n}\n/**\n * Set hover style of element.\n * This method can be called repeatly without side-effects.\n * @param {module:zrender/Element} el\n * @param {Object} [hoverStyle]\n * @param {Object} [opt]\n * @param {boolean} [opt.hoverSilentOnTouch=false]\n *        In touch device, mouseover event will be trigger on touchstart event\n *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n *        conviniently use hoverStyle when tap on touch screen without additional\n *        code for compatibility.\n *        But if the chart/component has select feature, which usually also use\n *        hoverStyle, there might be conflict between 'select-highlight' and\n *        'hover-highlight' especially when roam is enabled (see geo for example).\n *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n *        on touch device.\n */\n\n\nfunction setHoverStyle(el, hoverStyle, opt) {\n  el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      setElementHoverStl(child, hoverStyle);\n    }\n  }) : setElementHoverStl(el, hoverStyle); // Duplicated function will be auto-ignored, see Eventful.js.\n\n  el.on('mouseover', onElementMouseOver).on('mouseout', onElementMouseOut); // Emphasis, normal can be triggered manually\n\n  el.on('emphasis', enterEmphasis).on('normal', leaveEmphasis);\n}\n/**\n * @param {Object|module:zrender/graphic/Style} normalStyle\n * @param {Object} emphasisStyle\n * @param {module:echarts/model/Model} normalModel\n * @param {module:echarts/model/Model} emphasisModel\n * @param {Object} opt Check `opt` of `setTextStyleCommon` to find other props.\n * @param {Object} [opt.defaultText]\n * @param {module:echarts/model/Model} [opt.labelFetcher] Fetch text by\n *      `opt.labelFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDataIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDimIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {Object} [normalSpecified]\n * @param {Object} [emphasisSpecified]\n */\n\n\nfunction setLabelStyle(normalStyle, emphasisStyle, normalModel, emphasisModel, opt, normalSpecified, emphasisSpecified) {\n  opt = opt || EMPTY_OBJ;\n  var labelFetcher = opt.labelFetcher;\n  var labelDataIndex = opt.labelDataIndex;\n  var labelDimIndex = opt.labelDimIndex; // This scenario, `label.normal.show = true; label.emphasis.show = false`,\n  // is not supported util someone requests.\n\n  var showNormal = normalModel.getShallow('show');\n  var showEmphasis = emphasisModel.getShallow('show'); // Consider performance, only fetch label when necessary.\n  // If `normal.show` is `false` and `emphasis.show` is `true` and `emphasis.formatter` is not set,\n  // label should be displayed, where text is fetched by `normal.formatter` or `opt.defaultText`.\n\n  var baseText = showNormal || showEmphasis ? zrUtil.retrieve2(labelFetcher ? labelFetcher.getFormattedLabel(labelDataIndex, 'normal', null, labelDimIndex) : null, opt.defaultText) : null;\n  var normalStyleText = showNormal ? baseText : null;\n  var emphasisStyleText = showEmphasis ? zrUtil.retrieve2(labelFetcher ? labelFetcher.getFormattedLabel(labelDataIndex, 'emphasis', null, labelDimIndex) : null, baseText) : null; // Optimize: If style.text is null, text will not be drawn.\n\n  if (normalStyleText != null || emphasisStyleText != null) {\n    // Always set `textStyle` even if `normalStyle.text` is null, because default\n    // values have to be set on `normalStyle`.\n    // If we set default values on `emphasisStyle`, consider case:\n    // Firstly, `setOption(... label: {normal: {text: null}, emphasis: {show: true}} ...);`\n    // Secondly, `setOption(... label: {noraml: {show: true, text: 'abc', color: 'red'} ...);`\n    // Then the 'red' will not work on emphasis.\n    setTextStyle(normalStyle, normalModel, normalSpecified, opt);\n    setTextStyle(emphasisStyle, emphasisModel, emphasisSpecified, opt, true);\n  }\n\n  normalStyle.text = normalStyleText;\n  emphasisStyle.text = emphasisStyleText;\n}\n/**\n * Set basic textStyle properties.\n * @param {Object|module:zrender/graphic/Style} textStyle\n * @param {module:echarts/model/Model} model\n * @param {Object} [specifiedTextStyle] Can be overrided by settings in model.\n * @param {Object} [opt] See `opt` of `setTextStyleCommon`.\n * @param {boolean} [isEmphasis]\n */\n\n\nfunction setTextStyle(textStyle, textStyleModel, specifiedTextStyle, opt, isEmphasis) {\n  setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis);\n  specifiedTextStyle && zrUtil.extend(textStyle, specifiedTextStyle);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n  return textStyle;\n}\n/**\n * Set text option in the style.\n * @deprecated\n * @param {Object} textStyle\n * @param {module:echarts/model/Model} labelModel\n * @param {string|boolean} defaultColor Default text color.\n *        If set as false, it will be processed as a emphasis style.\n */\n\n\nfunction setText(textStyle, labelModel, defaultColor) {\n  var opt = {\n    isRectText: true\n  };\n  var isEmphasis;\n\n  if (defaultColor === false) {\n    isEmphasis = true;\n  } else {\n    // Support setting color as 'auto' to get visual color.\n    opt.autoColor = defaultColor;\n  }\n\n  setTextStyleCommon(textStyle, labelModel, opt, isEmphasis);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n}\n/**\n * {\n *      disableBox: boolean, Whether diable drawing box of block (outer most).\n *      isRectText: boolean,\n *      autoColor: string, specify a color when color is 'auto',\n *              for textFill, textStroke, textBackgroundColor, and textBorderColor.\n *              If autoColor specified, it is used as default textFill.\n *      useInsideStyle:\n *              `true`: Use inside style (textFill, textStroke, textStrokeWidth)\n *                  if `textFill` is not specified.\n *              `false`: Do not use inside style.\n *              `null/undefined`: use inside style if `isRectText` is true and\n *                  `textFill` is not specified and textPosition contains `'inside'`.\n *      forceRich: boolean\n * }\n */\n\n\nfunction setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis) {\n  // Consider there will be abnormal when merge hover style to normal style if given default value.\n  opt = opt || EMPTY_OBJ;\n\n  if (opt.isRectText) {\n    var textPosition = textStyleModel.getShallow('position') || (isEmphasis ? null : 'inside'); // 'outside' is not a valid zr textPostion value, but used\n    // in bar series, and magric type should be considered.\n\n    textPosition === 'outside' && (textPosition = 'top');\n    textStyle.textPosition = textPosition;\n    textStyle.textOffset = textStyleModel.getShallow('offset');\n    var labelRotate = textStyleModel.getShallow('rotate');\n    labelRotate != null && (labelRotate *= Math.PI / 180);\n    textStyle.textRotation = labelRotate;\n    textStyle.textDistance = zrUtil.retrieve2(textStyleModel.getShallow('distance'), isEmphasis ? null : 5);\n  }\n\n  var ecModel = textStyleModel.ecModel;\n  var globalTextStyle = ecModel && ecModel.option.textStyle; // Consider case:\n  // {\n  //     data: [{\n  //         value: 12,\n  //         label: {\n  //             normal: {\n  //                 rich: {\n  //                     // no 'a' here but using parent 'a'.\n  //                 }\n  //             }\n  //         }\n  //     }],\n  //     rich: {\n  //         a: { ... }\n  //     }\n  // }\n\n  var richItemNames = getRichItemNames(textStyleModel);\n  var richResult;\n\n  if (richItemNames) {\n    richResult = {};\n\n    for (var name in richItemNames) {\n      if (richItemNames.hasOwnProperty(name)) {\n        // Cascade is supported in rich.\n        var richTextStyle = textStyleModel.getModel(['rich', name]); // In rich, never `disableBox`.\n\n        setTokenTextStyle(richResult[name] = {}, richTextStyle, globalTextStyle, opt, isEmphasis);\n      }\n    }\n  }\n\n  textStyle.rich = richResult;\n  setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, true);\n\n  if (opt.forceRich && !opt.textStyle) {\n    opt.textStyle = {};\n  }\n\n  return textStyle;\n} // Consider case:\n// {\n//     data: [{\n//         value: 12,\n//         label: {\n//             normal: {\n//                 rich: {\n//                     // no 'a' here but using parent 'a'.\n//                 }\n//             }\n//         }\n//     }],\n//     rich: {\n//         a: { ... }\n//     }\n// }\n\n\nfunction getRichItemNames(textStyleModel) {\n  // Use object to remove duplicated names.\n  var richItemNameMap;\n\n  while (textStyleModel && textStyleModel !== textStyleModel.ecModel) {\n    var rich = (textStyleModel.option || EMPTY_OBJ).rich;\n\n    if (rich) {\n      richItemNameMap = richItemNameMap || {};\n\n      for (var name in rich) {\n        if (rich.hasOwnProperty(name)) {\n          richItemNameMap[name] = 1;\n        }\n      }\n    }\n\n    textStyleModel = textStyleModel.parentModel;\n  }\n\n  return richItemNameMap;\n}\n\nfunction setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, isBlock) {\n  // In merge mode, default value should not be given.\n  globalTextStyle = !isEmphasis && globalTextStyle || EMPTY_OBJ;\n  textStyle.textFill = getAutoColor(textStyleModel.getShallow('color'), opt) || globalTextStyle.color;\n  textStyle.textStroke = getAutoColor(textStyleModel.getShallow('textBorderColor'), opt) || globalTextStyle.textBorderColor;\n  textStyle.textStrokeWidth = zrUtil.retrieve2(textStyleModel.getShallow('textBorderWidth'), globalTextStyle.textBorderWidth);\n\n  if (!isEmphasis) {\n    if (isBlock) {\n      // Always set `insideRollback`, for clearing previous.\n      var originalTextPosition = textStyle.textPosition;\n      textStyle.insideRollback = applyInsideStyle(textStyle, originalTextPosition, opt); // Save original textPosition, because style.textPosition will be repalced by\n      // real location (like [10, 30]) in zrender.\n\n      textStyle.insideOriginalTextPosition = originalTextPosition;\n      textStyle.insideRollbackOpt = opt;\n    } // Set default finally.\n\n\n    if (textStyle.textFill == null) {\n      textStyle.textFill = opt.autoColor;\n    }\n  } // Do not use `getFont` here, because merge should be supported, where\n  // part of these properties may be changed in emphasis style, and the\n  // others should remain their original value got from normal style.\n\n\n  textStyle.fontStyle = textStyleModel.getShallow('fontStyle') || globalTextStyle.fontStyle;\n  textStyle.fontWeight = textStyleModel.getShallow('fontWeight') || globalTextStyle.fontWeight;\n  textStyle.fontSize = textStyleModel.getShallow('fontSize') || globalTextStyle.fontSize;\n  textStyle.fontFamily = textStyleModel.getShallow('fontFamily') || globalTextStyle.fontFamily;\n  textStyle.textAlign = textStyleModel.getShallow('align');\n  textStyle.textVerticalAlign = textStyleModel.getShallow('verticalAlign') || textStyleModel.getShallow('baseline');\n  textStyle.textLineHeight = textStyleModel.getShallow('lineHeight');\n  textStyle.textWidth = textStyleModel.getShallow('width');\n  textStyle.textHeight = textStyleModel.getShallow('height');\n  textStyle.textTag = textStyleModel.getShallow('tag');\n\n  if (!isBlock || !opt.disableBox) {\n    textStyle.textBackgroundColor = getAutoColor(textStyleModel.getShallow('backgroundColor'), opt);\n    textStyle.textPadding = textStyleModel.getShallow('padding');\n    textStyle.textBorderColor = getAutoColor(textStyleModel.getShallow('borderColor'), opt);\n    textStyle.textBorderWidth = textStyleModel.getShallow('borderWidth');\n    textStyle.textBorderRadius = textStyleModel.getShallow('borderRadius');\n    textStyle.textBoxShadowColor = textStyleModel.getShallow('shadowColor');\n    textStyle.textBoxShadowBlur = textStyleModel.getShallow('shadowBlur');\n    textStyle.textBoxShadowOffsetX = textStyleModel.getShallow('shadowOffsetX');\n    textStyle.textBoxShadowOffsetY = textStyleModel.getShallow('shadowOffsetY');\n  }\n\n  textStyle.textShadowColor = textStyleModel.getShallow('textShadowColor') || globalTextStyle.textShadowColor;\n  textStyle.textShadowBlur = textStyleModel.getShallow('textShadowBlur') || globalTextStyle.textShadowBlur;\n  textStyle.textShadowOffsetX = textStyleModel.getShallow('textShadowOffsetX') || globalTextStyle.textShadowOffsetX;\n  textStyle.textShadowOffsetY = textStyleModel.getShallow('textShadowOffsetY') || globalTextStyle.textShadowOffsetY;\n}\n\nfunction getAutoColor(color, opt) {\n  return color !== 'auto' ? color : opt && opt.autoColor ? opt.autoColor : null;\n}\n\nfunction applyInsideStyle(textStyle, textPosition, opt) {\n  var useInsideStyle = opt.useInsideStyle;\n  var insideRollback;\n\n  if (textStyle.textFill == null && useInsideStyle !== false && (useInsideStyle === true || opt.isRectText && textPosition // textPosition can be [10, 30]\n  && typeof textPosition === 'string' && textPosition.indexOf('inside') >= 0)) {\n    insideRollback = {\n      textFill: null,\n      textStroke: textStyle.textStroke,\n      textStrokeWidth: textStyle.textStrokeWidth\n    };\n    textStyle.textFill = '#fff'; // Consider text with #fff overflow its container.\n\n    if (textStyle.textStroke == null) {\n      textStyle.textStroke = opt.autoColor;\n      textStyle.textStrokeWidth == null && (textStyle.textStrokeWidth = 2);\n    }\n  }\n\n  return insideRollback;\n}\n\nfunction rollbackInsideStyle(style) {\n  var insideRollback = style.insideRollback;\n\n  if (insideRollback) {\n    style.textFill = insideRollback.textFill;\n    style.textStroke = insideRollback.textStroke;\n    style.textStrokeWidth = insideRollback.textStrokeWidth;\n  }\n}\n\nfunction getFont(opt, ecModel) {\n  // ecModel or default text style model.\n  var gTextStyleModel = ecModel || ecModel.getModel('textStyle');\n  return [// FIXME in node-canvas fontWeight is before fontStyle\n  opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '', opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '', (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px', opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'].join(' ');\n}\n\nfunction animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n  if (typeof dataIndex === 'function') {\n    cb = dataIndex;\n    dataIndex = null;\n  } // Do not check 'animation' property directly here. Consider this case:\n  // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n  // but its parent model (`seriesModel`) does.\n\n\n  var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n  if (animationEnabled) {\n    var postfix = isUpdate ? 'Update' : '';\n    var duration = animatableModel.getShallow('animationDuration' + postfix);\n    var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n    var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n\n    if (typeof animationDelay === 'function') {\n      animationDelay = animationDelay(dataIndex, animatableModel.getAnimationDelayParams ? animatableModel.getAnimationDelayParams(el, dataIndex) : null);\n    }\n\n    if (typeof duration === 'function') {\n      duration = duration(dataIndex);\n    }\n\n    duration > 0 ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb, !!cb) : (el.stopAnimation(), el.attr(props), cb && cb());\n  } else {\n    el.stopAnimation();\n    el.attr(props);\n    cb && cb();\n  }\n}\n/**\n * Update graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} [cb]\n * @example\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n *     // Or\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, function () { console.log('Animation done!'); });\n */\n\n\nfunction updateProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Init graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} cb\n */\n\n\nfunction initProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Get transform matrix of target (param target),\n * in coordinate of its ancestor (param ancestor)\n *\n * @param {module:zrender/mixin/Transformable} target\n * @param {module:zrender/mixin/Transformable} [ancestor]\n */\n\n\nfunction getTransform(target, ancestor) {\n  var mat = matrix.identity([]);\n\n  while (target && target !== ancestor) {\n    matrix.mul(mat, target.getLocalTransform(), mat);\n    target = target.parent;\n  }\n\n  return mat;\n}\n/**\n * Apply transform to an vertex.\n * @param {Array.<number>} target [x, y]\n * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\n *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n * @param {boolean=} invert Whether use invert matrix.\n * @return {Array.<number>} [x, y]\n */\n\n\nfunction applyTransform(target, transform, invert) {\n  if (transform && !zrUtil.isArrayLike(transform)) {\n    transform = Transformable.getLocalTransform(transform);\n  }\n\n  if (invert) {\n    transform = matrix.invert([], transform);\n  }\n\n  return vector.applyTransform([], target, transform);\n}\n/**\n * @param {string} direction 'left' 'right' 'top' 'bottom'\n * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n * @param {boolean=} invert Whether use invert matrix.\n * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n */\n\n\nfunction transformDirection(direction, transform, invert) {\n  // Pick a base, ensure that transform result will not be (0, 0).\n  var hBase = transform[4] === 0 || transform[5] === 0 || transform[0] === 0 ? 1 : Math.abs(2 * transform[4] / transform[0]);\n  var vBase = transform[4] === 0 || transform[5] === 0 || transform[2] === 0 ? 1 : Math.abs(2 * transform[4] / transform[2]);\n  var vertex = [direction === 'left' ? -hBase : direction === 'right' ? hBase : 0, direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0];\n  vertex = applyTransform(vertex, transform, invert);\n  return Math.abs(vertex[0]) > Math.abs(vertex[1]) ? vertex[0] > 0 ? 'right' : 'left' : vertex[1] > 0 ? 'bottom' : 'top';\n}\n/**\n * Apply group transition animation from g1 to g2.\n * If no animatableModel, no animation.\n */\n\n\nfunction groupTransition(g1, g2, animatableModel, cb) {\n  if (!g1 || !g2) {\n    return;\n  }\n\n  function getElMap(g) {\n    var elMap = {};\n    g.traverse(function (el) {\n      if (!el.isGroup && el.anid) {\n        elMap[el.anid] = el;\n      }\n    });\n    return elMap;\n  }\n\n  function getAnimatableProps(el) {\n    var obj = {\n      position: vector.clone(el.position),\n      rotation: el.rotation\n    };\n\n    if (el.shape) {\n      obj.shape = zrUtil.extend({}, el.shape);\n    }\n\n    return obj;\n  }\n\n  var elMap1 = getElMap(g1);\n  g2.traverse(function (el) {\n    if (!el.isGroup && el.anid) {\n      var oldEl = elMap1[el.anid];\n\n      if (oldEl) {\n        var newProp = getAnimatableProps(el);\n        el.attr(getAnimatableProps(oldEl));\n        updateProps(el, newProp, animatableModel, el.dataIndex);\n      } // else {\n      //     if (el.previousProps) {\n      //         graphic.updateProps\n      //     }\n      // }\n\n    }\n  });\n}\n/**\n * @param {Array.<Array.<number>>} points Like: [[23, 44], [53, 66], ...]\n * @param {Object} rect {x, y, width, height}\n * @return {Array.<Array.<number>>} A new clipped points.\n */\n\n\nfunction clipPointsByRect(points, rect) {\n  return zrUtil.map(points, function (point) {\n    var x = point[0];\n    x = mathMax(x, rect.x);\n    x = mathMin(x, rect.x + rect.width);\n    var y = point[1];\n    y = mathMax(y, rect.y);\n    y = mathMin(y, rect.y + rect.height);\n    return [x, y];\n  });\n}\n/**\n * @param {Object} targetRect {x, y, width, height}\n * @param {Object} rect {x, y, width, height}\n * @return {Object} A new clipped rect. If rect size are negative, return undefined.\n */\n\n\nfunction clipRectByRect(targetRect, rect) {\n  var x = mathMax(targetRect.x, rect.x);\n  var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\n  var y = mathMax(targetRect.y, rect.y);\n  var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height);\n\n  if (x2 >= x && y2 >= y) {\n    return {\n      x: x,\n      y: y,\n      width: x2 - x,\n      height: y2 - y\n    };\n  }\n}\n/**\n * @param {string} iconStr Support 'image://' or 'path://' or direct svg path.\n * @param {Object} [opt] Properties of `module:zrender/Element`, except `style`.\n * @param {Object} [rect] {x, y, width, height}\n * @return {module:zrender/Element} Icon path or image element.\n */\n\n\nfunction createIcon(iconStr, opt, rect) {\n  opt = zrUtil.extend({\n    rectHover: true\n  }, opt);\n  var style = opt.style = {\n    strokeNoScale: true\n  };\n  rect = rect || {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  };\n\n  if (iconStr) {\n    return iconStr.indexOf('image://') === 0 ? (style.image = iconStr.slice(8), zrUtil.defaults(style, rect), new Image(opt)) : makePath(iconStr.replace('path://', ''), opt, rect, 'center');\n  }\n}\n\nexports.extendShape = extendShape;\nexports.extendPath = extendPath;\nexports.makePath = makePath;\nexports.makeImage = makeImage;\nexports.mergePath = mergePath;\nexports.resizePath = resizePath;\nexports.subPixelOptimizeLine = subPixelOptimizeLine;\nexports.subPixelOptimizeRect = subPixelOptimizeRect;\nexports.subPixelOptimize = subPixelOptimize;\nexports.setHoverStyle = setHoverStyle;\nexports.setLabelStyle = setLabelStyle;\nexports.setTextStyle = setTextStyle;\nexports.setText = setText;\nexports.getFont = getFont;\nexports.updateProps = updateProps;\nexports.initProps = initProps;\nexports.getTransform = getTransform;\nexports.applyTransform = applyTransform;\nexports.transformDirection = transformDirection;\nexports.groupTransition = groupTransition;\nexports.clipPointsByRect = clipPointsByRect;\nexports.clipRectByRect = clipRectByRect;\nexports.createIcon = createIcon;\n\n/***/ }),\n\n/***/ 981:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar RADIAN_EPSILON = 1e-4;\n\nfunction _trim(str) {\n  return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n}\n/**\n * Linear mapping a value from domain to range\n * @memberOf module:echarts/util/number\n * @param  {(number|Array.<number>)} val\n * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n * @param  {boolean} clamp\n * @return {(number|Array.<number>}\n */\n\n\nfunction linearMap(val, domain, range, clamp) {\n  var subDomain = domain[1] - domain[0];\n  var subRange = range[1] - range[0];\n\n  if (subDomain === 0) {\n    return subRange === 0 ? range[0] : (range[0] + range[1]) / 2;\n  } // Avoid accuracy problem in edge, such as\n  // 146.39 - 62.83 === 83.55999999999999.\n  // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n  // It is a little verbose for efficiency considering this method\n  // is a hotspot.\n\n\n  if (clamp) {\n    if (subDomain > 0) {\n      if (val <= domain[0]) {\n        return range[0];\n      } else if (val >= domain[1]) {\n        return range[1];\n      }\n    } else {\n      if (val >= domain[0]) {\n        return range[0];\n      } else if (val <= domain[1]) {\n        return range[1];\n      }\n    }\n  } else {\n    if (val === domain[0]) {\n      return range[0];\n    }\n\n    if (val === domain[1]) {\n      return range[1];\n    }\n  }\n\n  return (val - domain[0]) / subDomain * subRange + range[0];\n}\n/**\n * Convert a percent string to absolute number.\n * Returns NaN if percent is not a valid string or number\n * @memberOf module:echarts/util/number\n * @param {string|number} percent\n * @param {number} all\n * @return {number}\n */\n\n\nfunction parsePercent(percent, all) {\n  switch (percent) {\n    case 'center':\n    case 'middle':\n      percent = '50%';\n      break;\n\n    case 'left':\n    case 'top':\n      percent = '0%';\n      break;\n\n    case 'right':\n    case 'bottom':\n      percent = '100%';\n      break;\n  }\n\n  if (typeof percent === 'string') {\n    if (_trim(percent).match(/%$/)) {\n      return parseFloat(percent) / 100 * all;\n    }\n\n    return parseFloat(percent);\n  }\n\n  return percent == null ? NaN : +percent;\n}\n/**\n * (1) Fix rounding error of float numbers.\n * (2) Support return string to avoid scientific notation like '3.5e-7'.\n *\n * @param {number} x\n * @param {number} [precision]\n * @param {boolean} [returnStr]\n * @return {number|string}\n */\n\n\nfunction round(x, precision, returnStr) {\n  if (precision == null) {\n    precision = 10;\n  } // Avoid range error\n\n\n  precision = Math.min(Math.max(0, precision), 20);\n  x = (+x).toFixed(precision);\n  return returnStr ? x : +x;\n}\n\nfunction asc(arr) {\n  arr.sort(function (a, b) {\n    return a - b;\n  });\n  return arr;\n}\n/**\n * Get precision\n * @param {number} val\n */\n\n\nfunction getPrecision(val) {\n  val = +val;\n\n  if (isNaN(val)) {\n    return 0;\n  } // It is much faster than methods converting number to string as follows\n  //      var tmp = val.toString();\n  //      return tmp.length - 1 - tmp.indexOf('.');\n  // especially when precision is low\n\n\n  var e = 1;\n  var count = 0;\n\n  while (Math.round(val * e) / e !== val) {\n    e *= 10;\n    count++;\n  }\n\n  return count;\n}\n/**\n * @param {string|number} val\n * @return {number}\n */\n\n\nfunction getPrecisionSafe(val) {\n  var str = val.toString(); // Consider scientific notation: '3.4e-12' '3.4e+12'\n\n  var eIndex = str.indexOf('e');\n\n  if (eIndex > 0) {\n    var precision = +str.slice(eIndex + 1);\n    return precision < 0 ? -precision : 0;\n  } else {\n    var dotIndex = str.indexOf('.');\n    return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n  }\n}\n/**\n * Minimal dicernible data precisioin according to a single pixel.\n *\n * @param {Array.<number>} dataExtent\n * @param {Array.<number>} pixelExtent\n * @return {number} precision\n */\n\n\nfunction getPixelPrecision(dataExtent, pixelExtent) {\n  var log = Math.log;\n  var LN10 = Math.LN10;\n  var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n  var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10); // toFixed() digits argument must be between 0 and 20.\n\n  var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n  return !isFinite(precision) ? 20 : precision;\n}\n/**\n * Get a data of given precision, assuring the sum of percentages\n * in valueList is 1.\n * The largest remainer method is used.\n * https://en.wikipedia.org/wiki/Largest_remainder_method\n *\n * @param {Array.<number>} valueList a list of all data\n * @param {number} idx index of the data to be processed in valueList\n * @param {number} precision integer number showing digits of precision\n * @return {number} percent ranging from 0 to 100\n */\n\n\nfunction getPercentWithPrecision(valueList, idx, precision) {\n  if (!valueList[idx]) {\n    return 0;\n  }\n\n  var sum = zrUtil.reduce(valueList, function (acc, val) {\n    return acc + (isNaN(val) ? 0 : val);\n  }, 0);\n\n  if (sum === 0) {\n    return 0;\n  }\n\n  var digits = Math.pow(10, precision);\n  var votesPerQuota = zrUtil.map(valueList, function (val) {\n    return (isNaN(val) ? 0 : val) / sum * digits * 100;\n  });\n  var targetSeats = digits * 100;\n  var seats = zrUtil.map(votesPerQuota, function (votes) {\n    // Assign automatic seats.\n    return Math.floor(votes);\n  });\n  var currentSum = zrUtil.reduce(seats, function (acc, val) {\n    return acc + val;\n  }, 0);\n  var remainder = zrUtil.map(votesPerQuota, function (votes, idx) {\n    return votes - seats[idx];\n  }); // Has remainding votes.\n\n  while (currentSum < targetSeats) {\n    // Find next largest remainder.\n    var max = Number.NEGATIVE_INFINITY;\n    var maxId = null;\n\n    for (var i = 0, len = remainder.length; i < len; ++i) {\n      if (remainder[i] > max) {\n        max = remainder[i];\n        maxId = i;\n      }\n    } // Add a vote to max remainder.\n\n\n    ++seats[maxId];\n    remainder[maxId] = 0;\n    ++currentSum;\n  }\n\n  return seats[idx] / digits;\n} // Number.MAX_SAFE_INTEGER, ie do not support.\n\n\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * To 0 - 2 * PI, considering negative radian.\n * @param {number} radian\n * @return {number}\n */\n\nfunction remRadian(radian) {\n  var pi2 = Math.PI * 2;\n  return (radian % pi2 + pi2) % pi2;\n}\n/**\n * @param {type} radian\n * @return {boolean}\n */\n\n\nfunction isRadianAroundZero(val) {\n  return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n}\n\nvar TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n/**\n * @param {string|Date|number} value These values can be accepted:\n *   + An instance of Date, represent a time in its own time zone.\n *   + Or string in a subset of ISO 8601, only including:\n *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n *     all of which will be treated as local time if time zone is not specified\n *     (see <https://momentjs.com/>).\n *   + Or other string format, including (all of which will be treated as loacal time):\n *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n *   + a timestamp, which represent a time in UTC.\n * @return {Date} date\n */\n\nfunction parseDate(value) {\n  if (value instanceof Date) {\n    return value;\n  } else if (typeof value === 'string') {\n    // Different browsers parse date in different way, so we parse it manually.\n    // Some other issues:\n    // new Date('1970-01-01') is UTC,\n    // new Date('1970/01/01') and new Date('1970-1-01') is local.\n    // See issue #3623\n    var match = TIME_REG.exec(value);\n\n    if (!match) {\n      // return Invalid Date.\n      return new Date(NaN);\n    } // Use local time when no timezone offset specifed.\n\n\n    if (!match[8]) {\n      // match[n] can only be string or undefined.\n      // But take care of '12' + 1 => '121'.\n      return new Date(+match[1], +(match[2] || 1) - 1, +match[3] || 1, +match[4] || 0, +(match[5] || 0), +match[6] || 0, +match[7] || 0);\n    } // Timezoneoffset of Javascript Date has considered DST (Daylight Saving Time,\n    // https://tc39.github.io/ecma262/#sec-daylight-saving-time-adjustment).\n    // For example, system timezone is set as \"Time Zone: America/Toronto\",\n    // then these code will get different result:\n    // `new Date(1478411999999).getTimezoneOffset();  // get 240`\n    // `new Date(1478412000000).getTimezoneOffset();  // get 300`\n    // So we should not use `new Date`, but use `Date.UTC`.\n    else {\n        var hour = +match[4] || 0;\n\n        if (match[8].toUpperCase() !== 'Z') {\n          hour -= match[8].slice(0, 3);\n        }\n\n        return new Date(Date.UTC(+match[1], +(match[2] || 1) - 1, +match[3] || 1, hour, +(match[5] || 0), +match[6] || 0, +match[7] || 0));\n      }\n  } else if (value == null) {\n    return new Date(NaN);\n  }\n\n  return new Date(Math.round(value));\n}\n/**\n * Quantity of a number. e.g. 0.1, 1, 10, 100\n *\n * @param  {number} val\n * @return {number}\n */\n\n\nfunction quantity(val) {\n  return Math.pow(10, quantityExponent(val));\n}\n\nfunction quantityExponent(val) {\n  return Math.floor(Math.log(val) / Math.LN10);\n}\n/**\n * find a “nice” number approximately equal to x. Round the number if round = true,\n * take ceiling if round = false. The primary observation is that the “nicest”\n * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n *\n * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n *\n * @param  {number} val Non-negative value.\n * @param  {boolean} round\n * @return {number}\n */\n\n\nfunction nice(val, round) {\n  var exponent = quantityExponent(val);\n  var exp10 = Math.pow(10, exponent);\n  var f = val / exp10; // 1 <= f < 10\n\n  var nf;\n\n  if (round) {\n    if (f < 1.5) {\n      nf = 1;\n    } else if (f < 2.5) {\n      nf = 2;\n    } else if (f < 4) {\n      nf = 3;\n    } else if (f < 7) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  } else {\n    if (f < 1) {\n      nf = 1;\n    } else if (f < 2) {\n      nf = 2;\n    } else if (f < 3) {\n      nf = 3;\n    } else if (f < 5) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  }\n\n  val = nf * exp10; // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n  // 20 is the uppper bound of toFixed.\n\n  return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n}\n/**\n * Order intervals asc, and split them when overlap.\n * expect(numberUtil.reformIntervals([\n *     {interval: [18, 62], close: [1, 1]},\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [1, 1]},\n *     {interval: [62, 150], close: [1, 1]},\n *     {interval: [106, 150], close: [1, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ])).toEqual([\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [0, 1]},\n *     {interval: [18, 62], close: [0, 1]},\n *     {interval: [62, 150], close: [0, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ]);\n * @param {Array.<Object>} list, where `close` mean open or close\n *        of the interval, and Infinity can be used.\n * @return {Array.<Object>} The origin list, which has been reformed.\n */\n\n\nfunction reformIntervals(list) {\n  list.sort(function (a, b) {\n    return littleThan(a, b, 0) ? -1 : 1;\n  });\n  var curr = -Infinity;\n  var currClose = 1;\n\n  for (var i = 0; i < list.length;) {\n    var interval = list[i].interval;\n    var close = list[i].close;\n\n    for (var lg = 0; lg < 2; lg++) {\n      if (interval[lg] <= curr) {\n        interval[lg] = curr;\n        close[lg] = !lg ? 1 - currClose : 1;\n      }\n\n      curr = interval[lg];\n      currClose = close[lg];\n    }\n\n    if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n      list.splice(i, 1);\n    } else {\n      i++;\n    }\n  }\n\n  return list;\n\n  function littleThan(a, b, lg) {\n    return a.interval[lg] < b.interval[lg] || a.interval[lg] === b.interval[lg] && (a.close[lg] - b.close[lg] === (!lg ? 1 : -1) || !lg && littleThan(a, b, 1));\n  }\n}\n/**\n * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n * subtraction forces infinities to NaN\n *\n * @param {*} v\n * @return {boolean}\n */\n\n\nfunction isNumeric(v) {\n  return v - parseFloat(v) >= 0;\n}\n\nexports.linearMap = linearMap;\nexports.parsePercent = parsePercent;\nexports.round = round;\nexports.asc = asc;\nexports.getPrecision = getPrecision;\nexports.getPrecisionSafe = getPrecisionSafe;\nexports.getPixelPrecision = getPixelPrecision;\nexports.getPercentWithPrecision = getPercentWithPrecision;\nexports.MAX_SAFE_INTEGER = MAX_SAFE_INTEGER;\nexports.remRadian = remRadian;\nexports.isRadianAroundZero = isRadianAroundZero;\nexports.parseDate = parseDate;\nexports.quantity = quantity;\nexports.nice = nice;\nexports.reformIntervals = reformIntervals;\nexports.isNumeric = isNumeric;\n\n/***/ }),\n\n/***/ 982:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar formatUtil = __webpack_require__(985);\n\nvar nubmerUtil = __webpack_require__(981);\n\nvar Model = __webpack_require__(989);\n\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\n/**\n * If value is not array, then translate it to array.\n * @param  {*} value\n * @return {Array} [value] or value\n */\n\nfunction normalizeToArray(value) {\n  return value instanceof Array ? value : value == null ? [] : [value];\n}\n/**\n * Sync default option between normal and emphasis like `position` and `show`\n * In case some one will write code like\n *     label: {\n *         normal: {\n *             show: false,\n *             position: 'outside',\n *             fontSize: 18\n *         },\n *         emphasis: {\n *             show: true\n *         }\n *     }\n * @param {Object} opt\n * @param {Array.<string>} subOpts\n */\n\n\nfunction defaultEmphasis(opt, subOpts) {\n  if (opt) {\n    var emphasisOpt = opt.emphasis = opt.emphasis || {};\n    var normalOpt = opt.normal = opt.normal || {}; // Default emphasis option from normal\n\n    for (var i = 0, len = subOpts.length; i < len; i++) {\n      var subOptName = subOpts[i];\n\n      if (!emphasisOpt.hasOwnProperty(subOptName) && normalOpt.hasOwnProperty(subOptName)) {\n        emphasisOpt[subOptName] = normalOpt[subOptName];\n      }\n    }\n  }\n}\n\nvar TEXT_STYLE_OPTIONS = ['fontStyle', 'fontWeight', 'fontSize', 'fontFamily', 'rich', 'tag', 'color', 'textBorderColor', 'textBorderWidth', 'width', 'height', 'lineHeight', 'align', 'verticalAlign', 'baseline', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY', 'textShadowColor', 'textShadowBlur', 'textShadowOffsetX', 'textShadowOffsetY', 'backgroundColor', 'borderColor', 'borderWidth', 'borderRadius', 'padding']; // modelUtil.LABEL_OPTIONS = modelUtil.TEXT_STYLE_OPTIONS.concat([\n//     'position', 'offset', 'rotate', 'origin', 'show', 'distance', 'formatter',\n//     'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\n//     // FIXME: deprecated, check and remove it.\n//     'textStyle'\n// ]);\n\n/**\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method retieves value from data.\n * @param {string|number|Date|Array|Object} dataItem\n * @return {number|string|Date|Array.<number|string|Date>}\n */\n\nfunction getDataItemValue(dataItem) {\n  // Performance sensitive.\n  return dataItem && (dataItem.value == null ? dataItem : dataItem.value);\n}\n/**\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method determine if dataItem has extra option besides value\n * @param {string|number|Date|Array|Object} dataItem\n */\n\n\nfunction isDataItemOption(dataItem) {\n  return isObject(dataItem) && !(dataItem instanceof Array); // // markLine data can be array\n  // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n}\n/**\n * This helper method convert value in data.\n * @param {string|number|Date} value\n * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n */\n\n\nfunction converDataValue(value, dimInfo) {\n  // Performance sensitive.\n  var dimType = dimInfo && dimInfo.type;\n\n  if (dimType === 'ordinal') {\n    return value;\n  }\n\n  if (dimType === 'time' // spead up when using timestamp\n  && typeof value !== 'number' && value != null && value !== '-') {\n    value = +nubmerUtil.parseDate(value);\n  } // dimType defaults 'number'.\n  // If dimType is not ordinal and value is null or undefined or NaN or '-',\n  // parse to NaN.\n\n\n  return value == null || value === '' ? NaN : +value; // If string (like '-'), using '+' parse to NaN\n}\n/**\n * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.\n * @param {module:echarts/data/List} data\n * @param {Object} opt\n * @param {string} [opt.seriesIndex]\n * @param {Object} [opt.name]\n * @param {Object} [opt.mainType]\n * @param {Object} [opt.subType]\n */\n\n\nfunction createDataFormatModel(data, opt) {\n  var model = new Model();\n  zrUtil.mixin(model, dataFormatMixin);\n  model.seriesIndex = opt.seriesIndex;\n  model.name = opt.name || '';\n  model.mainType = opt.mainType;\n  model.subType = opt.subType;\n\n  model.getData = function () {\n    return data;\n  };\n\n  return model;\n} // PENDING A little ugly\n\n\nvar dataFormatMixin = {\n  /**\n   * Get params for formatter\n   * @param {number} dataIndex\n   * @param {string} [dataType]\n   * @return {Object}\n   */\n  getDataParams: function (dataIndex, dataType) {\n    var data = this.getData(dataType);\n    var rawValue = this.getRawValue(dataIndex, dataType);\n    var rawDataIndex = data.getRawIndex(dataIndex);\n    var name = data.getName(dataIndex, true);\n    var itemOpt = data.getRawDataItem(dataIndex);\n    var color = data.getItemVisual(dataIndex, 'color');\n    return {\n      componentType: this.mainType,\n      componentSubType: this.subType,\n      seriesType: this.mainType === 'series' ? this.subType : null,\n      seriesIndex: this.seriesIndex,\n      seriesId: this.id,\n      seriesName: this.name,\n      name: name,\n      dataIndex: rawDataIndex,\n      data: itemOpt,\n      dataType: dataType,\n      value: rawValue,\n      color: color,\n      marker: formatUtil.getTooltipMarker(color),\n      // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n      $vars: ['seriesName', 'name', 'value']\n    };\n  },\n\n  /**\n   * Format label\n   * @param {number} dataIndex\n   * @param {string} [status='normal'] 'normal' or 'emphasis'\n   * @param {string} [dataType]\n   * @param {number} [dimIndex]\n   * @param {string} [labelProp='label']\n   * @return {string}\n   */\n  getFormattedLabel: function (dataIndex, status, dataType, dimIndex, labelProp) {\n    status = status || 'normal';\n    var data = this.getData(dataType);\n    var itemModel = data.getItemModel(dataIndex);\n    var params = this.getDataParams(dataIndex, dataType);\n\n    if (dimIndex != null && params.value instanceof Array) {\n      params.value = params.value[dimIndex];\n    }\n\n    var formatter = itemModel.get([labelProp || 'label', status, 'formatter']);\n\n    if (typeof formatter === 'function') {\n      params.status = status;\n      return formatter(params);\n    } else if (typeof formatter === 'string') {\n      return formatUtil.formatTpl(formatter, params);\n    }\n  },\n\n  /**\n   * Get raw value in option\n   * @param {number} idx\n   * @param {string} [dataType]\n   * @return {Object}\n   */\n  getRawValue: function (idx, dataType) {\n    var data = this.getData(dataType);\n    var dataItem = data.getRawDataItem(idx);\n\n    if (dataItem != null) {\n      return isObject(dataItem) && !(dataItem instanceof Array) ? dataItem.value : dataItem;\n    }\n  },\n\n  /**\n   * Should be implemented.\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   * @return {string} tooltip string\n   */\n  formatTooltip: zrUtil.noop\n};\n/**\n * Mapping to exists for merge.\n *\n * @public\n * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n * @param {Object|Array.<Object>} newCptOptions\n * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          index of which is the same as exists.\n */\n\nfunction mappingToExists(exists, newCptOptions) {\n  // Mapping by the order by original option (but not order of\n  // new option) in merge mode. Because we should ensure\n  // some specified index (like xAxisIndex) is consistent with\n  // original option, which is easy to understand, espatially in\n  // media query. And in most case, merge option is used to\n  // update partial option but not be expected to change order.\n  newCptOptions = (newCptOptions || []).slice();\n  var result = zrUtil.map(exists || [], function (obj, index) {\n    return {\n      exist: obj\n    };\n  }); // Mapping by id or name if specified.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    } // id has highest priority.\n\n\n    for (var i = 0; i < result.length; i++) {\n      if (!result[i].option // Consider name: two map to one.\n      && cptOption.id != null && result[i].exist.id === cptOption.id + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n\n    for (var i = 0; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Consider name: two map to one.\n      // Can not match when both ids exist but different.\n      && (exist.id == null || cptOption.id == null) && cptOption.name != null && !isIdInner(cptOption) && !isIdInner(exist) && exist.name === cptOption.name + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n  }); // Otherwise mapping by index.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    }\n\n    var i = 0;\n\n    for (; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Existing model that already has id should be able to\n      // mapped to (because after mapping performed model may\n      // be assigned with a id, whish should not affect next\n      // mapping), except those has inner id.\n      && !isIdInner(exist) // Caution:\n      // Do not overwrite id. But name can be overwritten,\n      // because axis use name as 'show label text'.\n      // 'exist' always has id and name and we dont\n      // need to check it.\n      && cptOption.id == null) {\n        result[i].option = cptOption;\n        break;\n      }\n    }\n\n    if (i >= result.length) {\n      result.push({\n        option: cptOption\n      });\n    }\n  });\n  return result;\n}\n/**\n * Make id and name for mapping result (result of mappingToExists)\n * into `keyInfo` field.\n *\n * @public\n * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          which order is the same as exists.\n * @return {Array.<Object>} The input.\n */\n\n\nfunction makeIdAndName(mapResult) {\n  // We use this id to hash component models and view instances\n  // in echarts. id can be specified by user, or auto generated.\n  // The id generation rule ensures new view instance are able\n  // to mapped to old instance when setOption are called in\n  // no-merge mode. So we generate model id by name and plus\n  // type in view id.\n  // name can be duplicated among components, which is convenient\n  // to specify multi components (like series) by one name.\n  // Ensure that each id is distinct.\n  var idMap = zrUtil.createHashMap();\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    existCpt && idMap.set(existCpt.id, item);\n  });\n  each(mapResult, function (item, index) {\n    var opt = item.option;\n    zrUtil.assert(!opt || opt.id == null || !idMap.get(opt.id) || idMap.get(opt.id) === item, 'id duplicates: ' + (opt && opt.id));\n    opt && opt.id != null && idMap.set(opt.id, item);\n    !item.keyInfo && (item.keyInfo = {});\n  }); // Make name and id.\n\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    var opt = item.option;\n    var keyInfo = item.keyInfo;\n\n    if (!isObject(opt)) {\n      return;\n    } // name can be overwitten. Consider case: axis.name = '20km'.\n    // But id generated by name will not be changed, which affect\n    // only in that case: setOption with 'not merge mode' and view\n    // instance will be recreated, which can be accepted.\n\n\n    keyInfo.name = opt.name != null ? opt.name + '' : existCpt ? existCpt.name : '\\0-'; // name may be displayed on screen, so use '-'.\n\n    if (existCpt) {\n      keyInfo.id = existCpt.id;\n    } else if (opt.id != null) {\n      keyInfo.id = opt.id + '';\n    } else {\n      // Consider this situatoin:\n      //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n      //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n      // Series with the same name between optionA and optionB\n      // should be mapped.\n      var idNum = 0;\n\n      do {\n        keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n      } while (idMap.get(keyInfo.id));\n    }\n\n    idMap.set(keyInfo.id, item);\n  });\n}\n/**\n * @public\n * @param {Object} cptOption\n * @return {boolean}\n */\n\n\nfunction isIdInner(cptOption) {\n  return isObject(cptOption) && cptOption.id && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n}\n/**\n * A helper for removing duplicate items between batchA and batchB,\n * and in themselves, and categorize by series.\n *\n * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n */\n\n\nfunction compressBatches(batchA, batchB) {\n  var mapA = {};\n  var mapB = {};\n  makeMap(batchA || [], mapA);\n  makeMap(batchB || [], mapB, mapA);\n  return [mapToArray(mapA), mapToArray(mapB)];\n\n  function makeMap(sourceBatch, map, otherMap) {\n    for (var i = 0, len = sourceBatch.length; i < len; i++) {\n      var seriesId = sourceBatch[i].seriesId;\n      var dataIndices = normalizeToArray(sourceBatch[i].dataIndex);\n      var otherDataIndices = otherMap && otherMap[seriesId];\n\n      for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n        var dataIndex = dataIndices[j];\n\n        if (otherDataIndices && otherDataIndices[dataIndex]) {\n          otherDataIndices[dataIndex] = null;\n        } else {\n          (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n        }\n      }\n    }\n  }\n\n  function mapToArray(map, isData) {\n    var result = [];\n\n    for (var i in map) {\n      if (map.hasOwnProperty(i) && map[i] != null) {\n        if (isData) {\n          result.push(+i);\n        } else {\n          var dataIndices = mapToArray(map[i], true);\n          dataIndices.length && result.push({\n            seriesId: i,\n            dataIndex: dataIndices\n          });\n        }\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n *                         each of which can be Array or primary type.\n * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n */\n\n\nfunction queryDataIndex(data, payload) {\n  if (payload.dataIndexInside != null) {\n    return payload.dataIndexInside;\n  } else if (payload.dataIndex != null) {\n    return zrUtil.isArray(payload.dataIndex) ? zrUtil.map(payload.dataIndex, function (value) {\n      return data.indexOfRawIndex(value);\n    }) : data.indexOfRawIndex(payload.dataIndex);\n  } else if (payload.name != null) {\n    return zrUtil.isArray(payload.name) ? zrUtil.map(payload.name, function (value) {\n      return data.indexOfName(value);\n    }) : data.indexOfName(payload.name);\n  }\n}\n/**\n * Enable property storage to any host object.\n * Notice: Serialization is not supported.\n *\n * For example:\n * var get = modelUitl.makeGetter();\n *\n * function some(hostObj) {\n *      get(hostObj)._someProperty = 1212;\n *      ...\n * }\n *\n * @return {Function}\n */\n\n\nvar makeGetter = function () {\n  var index = 0;\n  return function () {\n    var key = '\\0__ec_prop_getter_' + index++;\n    return function (hostObj) {\n      return hostObj[key] || (hostObj[key] = {});\n    };\n  };\n}();\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex, seriesId, seriesName,\n *            geoIndex, geoId, geoName,\n *            bmapIndex, bmapId, bmapName,\n *            xAxisIndex, xAxisId, xAxisName,\n *            yAxisIndex, yAxisId, yAxisName,\n *            gridIndex, gridId, gridName,\n *            ... (can be extended)\n *        }\n *        Each properties can be number|string|Array.<number>|Array.<string>\n *        For example, a finder could be\n *        {\n *            seriesIndex: 3,\n *            geoId: ['aa', 'cc'],\n *            gridName: ['xx', 'rr']\n *        }\n *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n *        If nothing or null/undefined specified, return nothing.\n * @param {Object} [opt]\n * @param {string} [opt.defaultMainType]\n * @param {Array.<string>} [opt.includeMainTypes]\n * @return {Object} result like:\n *        {\n *            seriesModels: [seriesModel1, seriesModel2],\n *            seriesModel: seriesModel1, // The first model\n *            geoModels: [geoModel1, geoModel2],\n *            geoModel: geoModel1, // The first model\n *            ...\n *        }\n */\n\n\nfunction parseFinder(ecModel, finder, opt) {\n  if (zrUtil.isString(finder)) {\n    var obj = {};\n    obj[finder + 'Index'] = 0;\n    finder = obj;\n  }\n\n  var defaultMainType = opt && opt.defaultMainType;\n\n  if (defaultMainType && !has(finder, defaultMainType + 'Index') && !has(finder, defaultMainType + 'Id') && !has(finder, defaultMainType + 'Name')) {\n    finder[defaultMainType + 'Index'] = 0;\n  }\n\n  var result = {};\n  each(finder, function (value, key) {\n    var value = finder[key]; // Exclude 'dataIndex' and other illgal keys.\n\n    if (key === 'dataIndex' || key === 'dataIndexInside') {\n      result[key] = value;\n      return;\n    }\n\n    var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n    var mainType = parsedKey[1];\n    var queryType = (parsedKey[2] || '').toLowerCase();\n\n    if (!mainType || !queryType || value == null || queryType === 'index' && value === 'none' || opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0) {\n      return;\n    }\n\n    var queryParam = {\n      mainType: mainType\n    };\n\n    if (queryType !== 'index' || value !== 'all') {\n      queryParam[queryType] = value;\n    }\n\n    var models = ecModel.queryComponents(queryParam);\n    result[mainType + 'Models'] = models;\n    result[mainType + 'Model'] = models[0];\n  });\n  return result;\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n * @param {module:echarts/data/List} data\n * @param {string|number} dataDim\n * @return {string}\n */\n\n\nfunction dataDimToCoordDim(data, dataDim) {\n  var dimensions = data.dimensions;\n  dataDim = data.getDimension(dataDim);\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimItem = data.getDimensionInfo(dimensions[i]);\n\n    if (dimItem.name === dataDim) {\n      return dimItem.coordDim;\n    }\n  }\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n * @param {module:echarts/data/List} data\n * @param {string} coordDim\n * @return {Array.<string>} data dimensions on the coordDim.\n */\n\n\nfunction coordDimToDataDim(data, coordDim) {\n  var dataDim = [];\n  each(data.dimensions, function (dimName) {\n    var dimItem = data.getDimensionInfo(dimName);\n\n    if (dimItem.coordDim === coordDim) {\n      dataDim[dimItem.coordDimIndex] = dimItem.name;\n    }\n  });\n  return dataDim;\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n * @param {module:echarts/data/List} data\n * @param {string} otherDim Can be `otherDims`\n *                        like 'label' or 'tooltip'.\n * @return {Array.<string>} data dimensions on the otherDim.\n */\n\n\nfunction otherDimToDataDim(data, otherDim) {\n  var dataDim = [];\n  each(data.dimensions, function (dimName) {\n    var dimItem = data.getDimensionInfo(dimName);\n    var otherDims = dimItem.otherDims;\n    var dimIndex = otherDims[otherDim];\n\n    if (dimIndex != null && dimIndex !== false) {\n      dataDim[dimIndex] = dimItem.name;\n    }\n  });\n  return dataDim;\n}\n\nfunction has(obj, prop) {\n  return obj && obj.hasOwnProperty(prop);\n}\n\nexports.normalizeToArray = normalizeToArray;\nexports.defaultEmphasis = defaultEmphasis;\nexports.TEXT_STYLE_OPTIONS = TEXT_STYLE_OPTIONS;\nexports.getDataItemValue = getDataItemValue;\nexports.isDataItemOption = isDataItemOption;\nexports.converDataValue = converDataValue;\nexports.createDataFormatModel = createDataFormatModel;\nexports.dataFormatMixin = dataFormatMixin;\nexports.mappingToExists = mappingToExists;\nexports.makeIdAndName = makeIdAndName;\nexports.isIdInner = isIdInner;\nexports.compressBatches = compressBatches;\nexports.queryDataIndex = queryDataIndex;\nexports.makeGetter = makeGetter;\nexports.parseFinder = parseFinder;\nexports.dataDimToCoordDim = dataDimToCoordDim;\nexports.coordDimToDataDim = coordDimToDataDim;\nexports.otherDimToDataDim = otherDimToDataDim;\n\n/***/ }),\n\n/***/ 983:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {// (1) The code `if (__DEV__) ...` can be removed by build tool.\n// (2) If intend to use `__DEV__`, this module should be imported. Use a global\n// variable `__DEV__` may cause that miss the declaration (see #6535), or the\n// declaration is behind of the using position (for example in `Model.extent`,\n// And tools like rollup can not analysis the dependency if not import).\nvar dev; // In browser\n\nif (typeof window !== 'undefined') {\n  dev = window.__DEV__;\n} // In node\nelse if (typeof global !== 'undefined') {\n    dev = global.__DEV__;\n  }\n\nif (typeof dev === 'undefined') {\n  dev = true;\n}\n\nvar __DEV__ = dev;\nexports.__DEV__ = __DEV__;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(23)))\n\n/***/ }),\n\n/***/ 984:\n/***/ (function(module, exports) {\n\nvar ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * 创建一个向量\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @return {Vector2}\n */\n\nfunction create(x, y) {\n  var out = new ArrayCtor(2);\n\n  if (x == null) {\n    x = 0;\n  }\n\n  if (y == null) {\n    y = 0;\n  }\n\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * 复制向量数据\n * @param {Vector2} out\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction copy(out, v) {\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 克隆一个向量\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction clone(v) {\n  var out = new ArrayCtor(2);\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 设置向量的两个项\n * @param {Vector2} out\n * @param {number} a\n * @param {number} b\n * @return {Vector2} 结果\n */\n\n\nfunction set(out, a, b) {\n  out[0] = a;\n  out[1] = b;\n  return out;\n}\n/**\n * 向量相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction add(out, v1, v2) {\n  out[0] = v1[0] + v2[0];\n  out[1] = v1[1] + v2[1];\n  return out;\n}\n/**\n * 向量缩放后相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} a\n */\n\n\nfunction scaleAndAdd(out, v1, v2, a) {\n  out[0] = v1[0] + v2[0] * a;\n  out[1] = v1[1] + v2[1] * a;\n  return out;\n}\n/**\n * 向量相减\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction sub(out, v1, v2) {\n  out[0] = v1[0] - v2[0];\n  out[1] = v1[1] - v2[1];\n  return out;\n}\n/**\n * 向量长度\n * @param {Vector2} v\n * @return {number}\n */\n\n\nfunction len(v) {\n  return Math.sqrt(lenSquare(v));\n}\n\nvar length = len; // jshint ignore:line\n\n/**\n * 向量长度平方\n * @param {Vector2} v\n * @return {number}\n */\n\nfunction lenSquare(v) {\n  return v[0] * v[0] + v[1] * v[1];\n}\n\nvar lengthSquare = lenSquare;\n/**\n * 向量乘法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\nfunction mul(out, v1, v2) {\n  out[0] = v1[0] * v2[0];\n  out[1] = v1[1] * v2[1];\n  return out;\n}\n/**\n * 向量除法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction div(out, v1, v2) {\n  out[0] = v1[0] / v2[0];\n  out[1] = v1[1] / v2[1];\n  return out;\n}\n/**\n * 向量点乘\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction dot(v1, v2) {\n  return v1[0] * v2[0] + v1[1] * v2[1];\n}\n/**\n * 向量缩放\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {number} s\n */\n\n\nfunction scale(out, v, s) {\n  out[0] = v[0] * s;\n  out[1] = v[1] * s;\n  return out;\n}\n/**\n * 向量归一化\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\n\nfunction normalize(out, v) {\n  var d = len(v);\n\n  if (d === 0) {\n    out[0] = 0;\n    out[1] = 0;\n  } else {\n    out[0] = v[0] / d;\n    out[1] = v[1] / d;\n  }\n\n  return out;\n}\n/**\n * 计算向量间距离\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction distance(v1, v2) {\n  return Math.sqrt((v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]));\n}\n\nvar dist = distance;\n/**\n * 向量距离平方\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\nfunction distanceSquare(v1, v2) {\n  return (v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n}\n\nvar distSquare = distanceSquare;\n/**\n * 求负向量\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\nfunction negate(out, v) {\n  out[0] = -v[0];\n  out[1] = -v[1];\n  return out;\n}\n/**\n * 插值两个点\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} t\n */\n\n\nfunction lerp(out, v1, v2, t) {\n  out[0] = v1[0] + t * (v2[0] - v1[0]);\n  out[1] = v1[1] + t * (v2[1] - v1[1]);\n  return out;\n}\n/**\n * 矩阵左乘向量\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {Vector2} m\n */\n\n\nfunction applyTransform(out, v, m) {\n  var x = v[0];\n  var y = v[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\n * 求两个向量最小值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction min(out, v1, v2) {\n  out[0] = Math.min(v1[0], v2[0]);\n  out[1] = Math.min(v1[1], v2[1]);\n  return out;\n}\n/**\n * 求两个向量最大值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction max(out, v1, v2) {\n  out[0] = Math.max(v1[0], v2[0]);\n  out[1] = Math.max(v1[1], v2[1]);\n  return out;\n}\n\nexports.create = create;\nexports.copy = copy;\nexports.clone = clone;\nexports.set = set;\nexports.add = add;\nexports.scaleAndAdd = scaleAndAdd;\nexports.sub = sub;\nexports.len = len;\nexports.length = length;\nexports.lenSquare = lenSquare;\nexports.lengthSquare = lengthSquare;\nexports.mul = mul;\nexports.div = div;\nexports.dot = dot;\nexports.scale = scale;\nexports.normalize = normalize;\nexports.distance = distance;\nexports.dist = dist;\nexports.distanceSquare = distanceSquare;\nexports.distSquare = distSquare;\nexports.negate = negate;\nexports.lerp = lerp;\nexports.applyTransform = applyTransform;\nexports.min = min;\nexports.max = max;\n\n/***/ }),\n\n/***/ 985:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar textContain = __webpack_require__(993);\n\nvar numberUtil = __webpack_require__(981);\n\n/**\n * 每三位默认加,格式化\n * @param {string|number} x\n * @return {string}\n */\nfunction addCommas(x) {\n  if (isNaN(x)) {\n    return '-';\n  }\n\n  x = (x + '').split('.');\n  return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g, '$1,') + (x.length > 1 ? '.' + x[1] : '');\n}\n/**\n * @param {string} str\n * @param {boolean} [upperCaseFirst=false]\n * @return {string} str\n */\n\n\nfunction toCamelCase(str, upperCaseFirst) {\n  str = (str || '').toLowerCase().replace(/-(.)/g, function (match, group1) {\n    return group1.toUpperCase();\n  });\n\n  if (upperCaseFirst && str) {\n    str = str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  return str;\n}\n\nvar normalizeCssArray = zrUtil.normalizeCssArray;\n\nfunction encodeHTML(source) {\n  return String(source).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/'/g, '&#39;');\n}\n\nvar TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\nvar wrapVar = function (varName, seriesIdx) {\n  return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n};\n/**\n * Template formatter\n * @param {string} tpl\n * @param {Array.<Object>|Object} paramsList\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTpl(tpl, paramsList, encode) {\n  if (!zrUtil.isArray(paramsList)) {\n    paramsList = [paramsList];\n  }\n\n  var seriesLen = paramsList.length;\n\n  if (!seriesLen) {\n    return '';\n  }\n\n  var $vars = paramsList[0].$vars || [];\n\n  for (var i = 0; i < $vars.length; i++) {\n    var alias = TPL_VAR_ALIAS[i];\n    var val = wrapVar(alias, 0);\n    tpl = tpl.replace(wrapVar(alias), encode ? encodeHTML(val) : val);\n  }\n\n  for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n    for (var k = 0; k < $vars.length; k++) {\n      var val = paramsList[seriesIdx][$vars[k]];\n      tpl = tpl.replace(wrapVar(TPL_VAR_ALIAS[k], seriesIdx), encode ? encodeHTML(val) : val);\n    }\n  }\n\n  return tpl;\n}\n/**\n * simple Template formatter\n *\n * @param {string} tpl\n * @param {Object} param\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTplSimple(tpl, param, encode) {\n  zrUtil.each(param, function (value, key) {\n    tpl = tpl.replace('{' + key + '}', encode ? encodeHTML(value) : value);\n  });\n  return tpl;\n}\n/**\n * @param {string} color\n * @param {string} [extraCssText]\n * @return {string}\n */\n\n\nfunction getTooltipMarker(color, extraCssText) {\n  return color ? '<span style=\"display:inline-block;margin-right:5px;' + 'border-radius:10px;width:9px;height:9px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>' : '';\n}\n/**\n * @param {string} str\n * @return {string}\n * @inner\n */\n\n\nvar s2d = function (str) {\n  return str < 10 ? '0' + str : str;\n};\n/**\n * ISO Date format\n * @param {string} tpl\n * @param {number} value\n * @param {boolean} [isUTC=false] Default in local time.\n *           see `module:echarts/scale/Time`\n *           and `module:echarts/util/number#parseDate`.\n * @inner\n */\n\n\nfunction formatTime(tpl, value, isUTC) {\n  if (tpl === 'week' || tpl === 'month' || tpl === 'quarter' || tpl === 'half-year' || tpl === 'year') {\n    tpl = 'MM-dd\\nyyyy';\n  }\n\n  var date = numberUtil.parseDate(value);\n  var utc = isUTC ? 'UTC' : '';\n  var y = date['get' + utc + 'FullYear']();\n  var M = date['get' + utc + 'Month']() + 1;\n  var d = date['get' + utc + 'Date']();\n  var h = date['get' + utc + 'Hours']();\n  var m = date['get' + utc + 'Minutes']();\n  var s = date['get' + utc + 'Seconds']();\n  tpl = tpl.replace('MM', s2d(M)).replace('M', M).replace('yyyy', y).replace('yy', y % 100).replace('dd', s2d(d)).replace('d', d).replace('hh', s2d(h)).replace('h', h).replace('mm', s2d(m)).replace('m', m).replace('ss', s2d(s)).replace('s', s);\n  return tpl;\n}\n/**\n * Capital first\n * @param {string} str\n * @return {string}\n */\n\n\nfunction capitalFirst(str) {\n  return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n}\n\nvar truncateText = textContain.truncateText;\nvar getTextRect = textContain.getBoundingRect;\nexports.addCommas = addCommas;\nexports.toCamelCase = toCamelCase;\nexports.normalizeCssArray = normalizeCssArray;\nexports.encodeHTML = encodeHTML;\nexports.formatTpl = formatTpl;\nexports.formatTplSimple = formatTplSimple;\nexports.getTooltipMarker = getTooltipMarker;\nexports.formatTime = formatTime;\nexports.capitalFirst = capitalFirst;\nexports.truncateText = truncateText;\nexports.getTextRect = getTextRect;\n\n/***/ }),\n\n/***/ 986:\n/***/ (function(module, exports) {\n\n/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\nvar env = {};\n\nif (typeof navigator === 'undefined') {\n  // In node\n  env = {\n    browser: {},\n    os: {},\n    node: true,\n    // Assume canvas is supported\n    canvasSupported: true,\n    svgSupported: true\n  };\n} else {\n  env = detect(navigator.userAgent);\n}\n\nvar _default = env; // Zepto.js\n// (c) 2010-2013 Thomas Fuchs\n// Zepto.js may be freely distributed under the MIT license.\n\nfunction detect(ua) {\n  var os = {};\n  var browser = {}; // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n  // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n  // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n  // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n  // var touchpad = webos && ua.match(/TouchPad/);\n  // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n  // var silk = ua.match(/Silk\\/([\\d._]+)/);\n  // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n  // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n  // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n  // var playbook = ua.match(/PlayBook/);\n  // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n\n  var firefox = ua.match(/Firefox\\/([\\d.]+)/); // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n  // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n\n  var ie = ua.match(/MSIE\\s([\\d.]+)/) // IE 11 Trident/7.0; rv:11.0\n  || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n  var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n  var weChat = /micromessenger/i.test(ua); // Todo: clean this up with a better OS/browser seperation:\n  // - discern (more) between multiple browsers on android\n  // - decide if kindle fire in silk mode is android or not\n  // - Firefox on Android doesn't specify the Android version\n  // - possibly devide in os, device and browser hashes\n  // if (browser.webkit = !!webkit) browser.version = webkit[1];\n  // if (android) os.android = true, os.version = android[2];\n  // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n  // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n  // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n  // if (webos) os.webos = true, os.version = webos[2];\n  // if (touchpad) os.touchpad = true;\n  // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n  // if (bb10) os.bb10 = true, os.version = bb10[2];\n  // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n  // if (playbook) browser.playbook = true;\n  // if (kindle) os.kindle = true, os.version = kindle[1];\n  // if (silk) browser.silk = true, browser.version = silk[1];\n  // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n  // if (chrome) browser.chrome = true, browser.version = chrome[1];\n\n  if (firefox) {\n    browser.firefox = true;\n    browser.version = firefox[1];\n  } // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n  // if (webview) browser.webview = true;\n\n\n  if (ie) {\n    browser.ie = true;\n    browser.version = ie[1];\n  }\n\n  if (edge) {\n    browser.edge = true;\n    browser.version = edge[1];\n  } // It is difficult to detect WeChat in Win Phone precisely, because ua can\n  // not be set on win phone. So we do not consider Win Phone.\n\n\n  if (weChat) {\n    browser.weChat = true;\n  } // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n  //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n  // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n  //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n  //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n\n  return {\n    browser: browser,\n    os: os,\n    node: false,\n    // 原生canvas支持，改极端点了\n    // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n    canvasSupported: !!document.createElement('canvas').getContext,\n    svgSupported: typeof SVGRect !== 'undefined',\n    // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\n    // works on most browsers\n    // IE10/11 does not support touch event, and MS Edge supports them but not by\n    // default, so we dont check navigator.maxTouchPoints for them here.\n    touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n    // <http://caniuse.com/#search=pointer%20event>.\n    pointerEventsSupported: 'onpointerdown' in window // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n    // events currently. So we dont use that on other browsers unless tested sufficiently.\n    // Although IE 10 supports pointer event, it use old style and is different from the\n    // standard. So we exclude that. (IE 10 is hardly used on touch device)\n    && (browser.edge || browser.ie && browser.version >= 11)\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 987:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar vec2 = __webpack_require__(984);\n\nvar matrix = __webpack_require__(994);\n\n/**\n * @module echarts/core/BoundingRect\n */\nvar v2ApplyTransform = vec2.applyTransform;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\n/**\n * @alias module:echarts/core/BoundingRect\n */\n\nfunction BoundingRect(x, y, width, height) {\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n  /**\n   * @type {number}\n   */\n\n\n  this.x = x;\n  /**\n   * @type {number}\n   */\n\n  this.y = y;\n  /**\n   * @type {number}\n   */\n\n  this.width = width;\n  /**\n   * @type {number}\n   */\n\n  this.height = height;\n}\n\nBoundingRect.prototype = {\n  constructor: BoundingRect,\n\n  /**\n   * @param {module:echarts/core/BoundingRect} other\n   */\n  union: function (other) {\n    var x = mathMin(other.x, this.x);\n    var y = mathMin(other.y, this.y);\n    this.width = mathMax(other.x + other.width, this.x + this.width) - x;\n    this.height = mathMax(other.y + other.height, this.y + this.height) - y;\n    this.x = x;\n    this.y = y;\n  },\n\n  /**\n   * @param {Array.<number>} m\n   * @methods\n   */\n  applyTransform: function () {\n    var lt = [];\n    var rb = [];\n    var lb = [];\n    var rt = [];\n    return function (m) {\n      // In case usage like this\n      // el.getBoundingRect().applyTransform(el.transform)\n      // And element has no transform\n      if (!m) {\n        return;\n      }\n\n      lt[0] = lb[0] = this.x;\n      lt[1] = rt[1] = this.y;\n      rb[0] = rt[0] = this.x + this.width;\n      rb[1] = lb[1] = this.y + this.height;\n      v2ApplyTransform(lt, lt, m);\n      v2ApplyTransform(rb, rb, m);\n      v2ApplyTransform(lb, lb, m);\n      v2ApplyTransform(rt, rt, m);\n      this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n      this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n      var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n      var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n      this.width = maxX - this.x;\n      this.height = maxY - this.y;\n    };\n  }(),\n\n  /**\n   * Calculate matrix of transforming from self to target rect\n   * @param  {module:zrender/core/BoundingRect} b\n   * @return {Array.<number>}\n   */\n  calculateTransform: function (b) {\n    var a = this;\n    var sx = b.width / a.width;\n    var sy = b.height / a.height;\n    var m = matrix.create(); // 矩阵右乘\n\n    matrix.translate(m, m, [-a.x, -a.y]);\n    matrix.scale(m, m, [sx, sy]);\n    matrix.translate(m, m, [b.x, b.y]);\n    return m;\n  },\n\n  /**\n   * @param {(module:echarts/core/BoundingRect|Object)} b\n   * @return {boolean}\n   */\n  intersect: function (b) {\n    if (!b) {\n      return false;\n    }\n\n    if (!(b instanceof BoundingRect)) {\n      // Normalize negative width/height.\n      b = BoundingRect.create(b);\n    }\n\n    var a = this;\n    var ax0 = a.x;\n    var ax1 = a.x + a.width;\n    var ay0 = a.y;\n    var ay1 = a.y + a.height;\n    var bx0 = b.x;\n    var bx1 = b.x + b.width;\n    var by0 = b.y;\n    var by1 = b.y + b.height;\n    return !(ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n  },\n  contain: function (x, y) {\n    var rect = this;\n    return x >= rect.x && x <= rect.x + rect.width && y >= rect.y && y <= rect.y + rect.height;\n  },\n\n  /**\n   * @return {module:echarts/core/BoundingRect}\n   */\n  clone: function () {\n    return new BoundingRect(this.x, this.y, this.width, this.height);\n  },\n\n  /**\n   * Copy from another rect\n   */\n  copy: function (other) {\n    this.x = other.x;\n    this.y = other.y;\n    this.width = other.width;\n    this.height = other.height;\n  },\n  plain: function () {\n    return {\n      x: this.x,\n      y: this.y,\n      width: this.width,\n      height: this.height\n    };\n  }\n};\n/**\n * @param {Object|module:zrender/core/BoundingRect} rect\n * @param {number} rect.x\n * @param {number} rect.y\n * @param {number} rect.width\n * @param {number} rect.height\n * @return {module:zrender/core/BoundingRect}\n */\n\nBoundingRect.create = function (rect) {\n  return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n};\n\nvar _default = BoundingRect;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 988:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Displayable = __webpack_require__(1018);\n\nvar zrUtil = __webpack_require__(978);\n\nvar PathProxy = __webpack_require__(1007);\n\nvar pathContain = __webpack_require__(1106);\n\nvar Pattern = __webpack_require__(1047);\n\nvar getCanvasPattern = Pattern.prototype.getCanvasPattern;\nvar abs = Math.abs;\nvar pathProxyForDraw = new PathProxy(true);\n/**\n * @alias module:zrender/graphic/Path\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\n\nfunction Path(opts) {\n  Displayable.call(this, opts);\n  /**\n   * @type {module:zrender/core/PathProxy}\n   * @readOnly\n   */\n\n  this.path = null;\n}\n\nPath.prototype = {\n  constructor: Path,\n  type: 'path',\n  __dirtyPath: true,\n  strokeContainThreshold: 5,\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var path = this.path || pathProxyForDraw;\n    var hasStroke = style.hasStroke();\n    var hasFill = style.hasFill();\n    var fill = style.fill;\n    var stroke = style.stroke;\n    var hasFillGradient = hasFill && !!fill.colorStops;\n    var hasStrokeGradient = hasStroke && !!stroke.colorStops;\n    var hasFillPattern = hasFill && !!fill.image;\n    var hasStrokePattern = hasStroke && !!stroke.image;\n    style.bind(ctx, this, prevEl);\n    this.setTransform(ctx);\n\n    if (this.__dirty) {\n      var rect; // Update gradient because bounding rect may changed\n\n      if (hasFillGradient) {\n        rect = rect || this.getBoundingRect();\n        this._fillGradient = style.getGradient(ctx, fill, rect);\n      }\n\n      if (hasStrokeGradient) {\n        rect = rect || this.getBoundingRect();\n        this._strokeGradient = style.getGradient(ctx, stroke, rect);\n      }\n    } // Use the gradient or pattern\n\n\n    if (hasFillGradient) {\n      // PENDING If may have affect the state\n      ctx.fillStyle = this._fillGradient;\n    } else if (hasFillPattern) {\n      ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n    }\n\n    if (hasStrokeGradient) {\n      ctx.strokeStyle = this._strokeGradient;\n    } else if (hasStrokePattern) {\n      ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n    }\n\n    var lineDash = style.lineDash;\n    var lineDashOffset = style.lineDashOffset;\n    var ctxLineDash = !!ctx.setLineDash; // Update path sx, sy\n\n    var scale = this.getGlobalScale();\n    path.setScale(scale[0], scale[1]); // Proxy context\n    // Rebuild path in following 2 cases\n    // 1. Path is dirty\n    // 2. Path needs javascript implemented lineDash stroking.\n    //    In this case, lineDash information will not be saved in PathProxy\n\n    if (this.__dirtyPath || lineDash && !ctxLineDash && hasStroke) {\n      path.beginPath(ctx); // Setting line dash before build path\n\n      if (lineDash && !ctxLineDash) {\n        path.setLineDash(lineDash);\n        path.setLineDashOffset(lineDashOffset);\n      }\n\n      this.buildPath(path, this.shape, false); // Clear path dirty flag\n\n      if (this.path) {\n        this.__dirtyPath = false;\n      }\n    } else {\n      // Replay path building\n      ctx.beginPath();\n      this.path.rebuildPath(ctx);\n    }\n\n    hasFill && path.fill(ctx);\n\n    if (lineDash && ctxLineDash) {\n      ctx.setLineDash(lineDash);\n      ctx.lineDashOffset = lineDashOffset;\n    }\n\n    hasStroke && path.stroke(ctx);\n\n    if (lineDash && ctxLineDash) {\n      // PENDING\n      // Remove lineDash\n      ctx.setLineDash([]);\n    }\n\n    this.restoreTransform(ctx); // Draw rect text\n\n    if (style.text != null) {\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n  // Like in circle\n  buildPath: function (ctx, shapeCfg, inBundle) {},\n  createPathProxy: function () {\n    this.path = new PathProxy();\n  },\n  getBoundingRect: function () {\n    var rect = this._rect;\n    var style = this.style;\n    var needsUpdateRect = !rect;\n\n    if (needsUpdateRect) {\n      var path = this.path;\n\n      if (!path) {\n        // Create path on demand.\n        path = this.path = new PathProxy();\n      }\n\n      if (this.__dirtyPath) {\n        path.beginPath();\n        this.buildPath(path, this.shape, false);\n      }\n\n      rect = path.getBoundingRect();\n    }\n\n    this._rect = rect;\n\n    if (style.hasStroke()) {\n      // Needs update rect with stroke lineWidth when\n      // 1. Element changes scale or lineWidth\n      // 2. Shape is changed\n      var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n\n      if (this.__dirty || needsUpdateRect) {\n        rectWithStroke.copy(rect); // FIXME Must after updateTransform\n\n        var w = style.lineWidth; // PENDING, Min line width is needed when line is horizontal or vertical\n\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Only add extra hover lineWidth when there are no fill\n\n        if (!style.hasFill()) {\n          w = Math.max(w, this.strokeContainThreshold || 4);\n        } // Consider line width\n        // Line scale can't be 0;\n\n\n        if (lineScale > 1e-10) {\n          rectWithStroke.width += w / lineScale;\n          rectWithStroke.height += w / lineScale;\n          rectWithStroke.x -= w / lineScale / 2;\n          rectWithStroke.y -= w / lineScale / 2;\n        }\n      } // Return rect with stroke\n\n\n      return rectWithStroke;\n    }\n\n    return rect;\n  },\n  contain: function (x, y) {\n    var localPos = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    var style = this.style;\n    x = localPos[0];\n    y = localPos[1];\n\n    if (rect.contain(x, y)) {\n      var pathData = this.path.data;\n\n      if (style.hasStroke()) {\n        var lineWidth = style.lineWidth;\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Line scale can't be 0;\n\n        if (lineScale > 1e-10) {\n          // Only add extra hover lineWidth when there are no fill\n          if (!style.hasFill()) {\n            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n          }\n\n          if (pathContain.containStroke(pathData, lineWidth / lineScale, x, y)) {\n            return true;\n          }\n        }\n      }\n\n      if (style.hasFill()) {\n        return pathContain.contain(pathData, x, y);\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * @param  {boolean} dirtyPath\n   */\n  dirty: function (dirtyPath) {\n    if (dirtyPath == null) {\n      dirtyPath = true;\n    } // Only mark dirty, not mark clean\n\n\n    if (dirtyPath) {\n      this.__dirtyPath = dirtyPath;\n      this._rect = null;\n    }\n\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh(); // Used as a clipping path\n\n    if (this.__clipTarget) {\n      this.__clipTarget.dirty();\n    }\n  },\n\n  /**\n   * Alias for animate('shape')\n   * @param {boolean} loop\n   */\n  animateShape: function (loop) {\n    return this.animate('shape', loop);\n  },\n  // Overwrite attrKV\n  attrKV: function (key, value) {\n    // FIXME\n    if (key === 'shape') {\n      this.setShape(value);\n      this.__dirtyPath = true;\n      this._rect = null;\n    } else {\n      Displayable.prototype.attrKV.call(this, key, value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setShape: function (key, value) {\n    var shape = this.shape; // Path from string may not have shape\n\n    if (shape) {\n      if (zrUtil.isObject(key)) {\n        for (var name in key) {\n          if (key.hasOwnProperty(name)) {\n            shape[name] = key[name];\n          }\n        }\n      } else {\n        shape[key] = value;\n      }\n\n      this.dirty(true);\n    }\n\n    return this;\n  },\n  getLineScale: function () {\n    var m = this.transform; // Get the line scale.\n    // Determinant of `m` means how much the area is enlarged by the\n    // transformation. So its square root can be used as a scale factor\n    // for width.\n\n    return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10 ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1])) : 1;\n  }\n};\n/**\n * 扩展一个 Path element, 比如星形，圆等。\n * Extend a path element\n * @param {Object} props\n * @param {string} props.type Path type\n * @param {Function} props.init Initialize\n * @param {Function} props.buildPath Overwrite buildPath method\n * @param {Object} [props.style] Extended default style config\n * @param {Object} [props.shape] Extended default shape config\n */\n\nPath.extend = function (defaults) {\n  var Sub = function (opts) {\n    Path.call(this, opts);\n\n    if (defaults.style) {\n      // Extend default style\n      this.style.extendFrom(defaults.style, false);\n    } // Extend default shape\n\n\n    var defaultShape = defaults.shape;\n\n    if (defaultShape) {\n      this.shape = this.shape || {};\n      var thisShape = this.shape;\n\n      for (var name in defaultShape) {\n        if (!thisShape.hasOwnProperty(name) && defaultShape.hasOwnProperty(name)) {\n          thisShape[name] = defaultShape[name];\n        }\n      }\n    }\n\n    defaults.init && defaults.init.call(this, opts);\n  };\n\n  zrUtil.inherits(Sub, Path); // FIXME 不能 extend position, rotation 等引用对象\n\n  for (var name in defaults) {\n    // Extending prototype values and methods\n    if (name !== 'style' && name !== 'shape') {\n      Sub.prototype[name] = defaults[name];\n    }\n  }\n\n  return Sub;\n};\n\nzrUtil.inherits(Path, Displayable);\nvar _default = Path;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 989:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar env = __webpack_require__(986);\n\nvar clazzUtil = __webpack_require__(992);\n\nvar lineStyleMixin = __webpack_require__(1102);\n\nvar areaStyleMixin = __webpack_require__(1103);\n\nvar textStyleMixin = __webpack_require__(1104);\n\nvar itemStyleMixin = __webpack_require__(1123);\n\n/**\n * @module echarts/model/Model\n */\nvar mixin = zrUtil.mixin;\n/**\n * @alias module:echarts/model/Model\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} [parentModel]\n * @param {module:echarts/model/Global} [ecModel]\n */\n\nfunction Model(option, parentModel, ecModel) {\n  /**\n   * @type {module:echarts/model/Model}\n   * @readOnly\n   */\n  this.parentModel = parentModel;\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n\n  this.ecModel = ecModel;\n  /**\n   * @type {Object}\n   * @protected\n   */\n\n  this.option = option; // Simple optimization\n  // if (this.init) {\n  //     if (arguments.length <= 4) {\n  //         this.init(option, parentModel, ecModel, extraOpt);\n  //     }\n  //     else {\n  //         this.init.apply(this, arguments);\n  //     }\n  // }\n}\n\nModel.prototype = {\n  constructor: Model,\n\n  /**\n   * Model 的初始化函数\n   * @param {Object} option\n   */\n  init: null,\n\n  /**\n   * 从新的 Option merge\n   */\n  mergeOption: function (option) {\n    zrUtil.merge(this.option, option, true);\n  },\n\n  /**\n   * @param {string|Array.<string>} path\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  get: function (path, ignoreParent) {\n    if (path == null) {\n      return this.option;\n    }\n\n    return doGet(this.option, this.parsePath(path), !ignoreParent && getParent(this, path));\n  },\n\n  /**\n   * @param {string} key\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  getShallow: function (key, ignoreParent) {\n    var option = this.option;\n    var val = option == null ? option : option[key];\n    var parentModel = !ignoreParent && getParent(this, key);\n\n    if (val == null && parentModel) {\n      val = parentModel.getShallow(key);\n    }\n\n    return val;\n  },\n\n  /**\n   * @param {string|Array.<string>} [path]\n   * @param {module:echarts/model/Model} [parentModel]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path, parentModel) {\n    var obj = path == null ? this.option : doGet(this.option, path = this.parsePath(path));\n    var thisParentModel;\n    parentModel = parentModel || (thisParentModel = getParent(this, path)) && thisParentModel.getModel(path);\n    return new Model(obj, parentModel, this.ecModel);\n  },\n\n  /**\n   * If model has option\n   */\n  isEmpty: function () {\n    return this.option == null;\n  },\n  restoreData: function () {},\n  // Pending\n  clone: function () {\n    var Ctor = this.constructor;\n    return new Ctor(zrUtil.clone(this.option));\n  },\n  setReadOnly: function (properties) {\n    clazzUtil.setReadOnly(this, properties);\n  },\n  // If path is null/undefined, return null/undefined.\n  parsePath: function (path) {\n    if (typeof path === 'string') {\n      path = path.split('.');\n    }\n\n    return path;\n  },\n\n  /**\n   * @param {Function} getParentMethod\n   *        param {Array.<string>|string} path\n   *        return {module:echarts/model/Model}\n   */\n  customizeGetParent: function (getParentMethod) {\n    clazzUtil.set(this, 'getParent', getParentMethod);\n  },\n  isAnimationEnabled: function () {\n    if (!env.node) {\n      if (this.option.animation != null) {\n        return !!this.option.animation;\n      } else if (this.parentModel) {\n        return this.parentModel.isAnimationEnabled();\n      }\n    }\n  }\n};\n\nfunction doGet(obj, pathArr, parentModel) {\n  for (var i = 0; i < pathArr.length; i++) {\n    // Ignore empty\n    if (!pathArr[i]) {\n      continue;\n    } // obj could be number/string/... (like 0)\n\n\n    obj = obj && typeof obj === 'object' ? obj[pathArr[i]] : null;\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  if (obj == null && parentModel) {\n    obj = parentModel.get(pathArr);\n  }\n\n  return obj;\n} // `path` can be null/undefined\n\n\nfunction getParent(model, path) {\n  var getParentMethod = clazzUtil.get(model, 'getParent');\n  return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n} // Enable Model.extend.\n\n\nclazzUtil.enableClassExtend(Model);\nmixin(Model, lineStyleMixin);\nmixin(Model, areaStyleMixin);\nmixin(Model, textStyleMixin);\nmixin(Model, itemStyleMixin);\nvar _default = Model;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 990:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar BoundingRect = __webpack_require__(987);\n\nvar _number = __webpack_require__(981);\n\nvar parsePercent = _number.parsePercent;\n\nvar formatUtil = __webpack_require__(985);\n\n// Layout helpers for each component positioning\nvar each = zrUtil.each;\n/**\n * @public\n */\n\nvar LOCATION_PARAMS = ['left', 'right', 'top', 'bottom', 'width', 'height'];\n/**\n * @public\n */\n\nvar HV_NAMES = [['width', 'left', 'right'], ['height', 'top', 'bottom']];\n\nfunction boxLayout(orient, group, gap, maxWidth, maxHeight) {\n  var x = 0;\n  var y = 0;\n\n  if (maxWidth == null) {\n    maxWidth = Infinity;\n  }\n\n  if (maxHeight == null) {\n    maxHeight = Infinity;\n  }\n\n  var currentLineMaxSize = 0;\n  group.eachChild(function (child, idx) {\n    var position = child.position;\n    var rect = child.getBoundingRect();\n    var nextChild = group.childAt(idx + 1);\n    var nextChildRect = nextChild && nextChild.getBoundingRect();\n    var nextX;\n    var nextY;\n\n    if (orient === 'horizontal') {\n      var moveX = rect.width + (nextChildRect ? -nextChildRect.x + rect.x : 0);\n      nextX = x + moveX; // Wrap when width exceeds maxWidth or meet a `newline` group\n      // FIXME compare before adding gap?\n\n      if (nextX > maxWidth || child.newline) {\n        x = 0;\n        nextX = moveX;\n        y += currentLineMaxSize + gap;\n        currentLineMaxSize = rect.height;\n      } else {\n        // FIXME: consider rect.y is not `0`?\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n      }\n    } else {\n      var moveY = rect.height + (nextChildRect ? -nextChildRect.y + rect.y : 0);\n      nextY = y + moveY; // Wrap when width exceeds maxHeight or meet a `newline` group\n\n      if (nextY > maxHeight || child.newline) {\n        x += currentLineMaxSize + gap;\n        y = 0;\n        nextY = moveY;\n        currentLineMaxSize = rect.width;\n      } else {\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n      }\n    }\n\n    if (child.newline) {\n      return;\n    }\n\n    position[0] = x;\n    position[1] = y;\n    orient === 'horizontal' ? x = nextX + gap : y = nextY + gap;\n  });\n}\n/**\n * VBox or HBox layouting\n * @param {string} orient\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\n\nvar box = boxLayout;\n/**\n * VBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar vbox = zrUtil.curry(boxLayout, 'vertical');\n/**\n * HBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar hbox = zrUtil.curry(boxLayout, 'horizontal');\n/**\n * If x or x2 is not specified or 'center' 'left' 'right',\n * the width would be as long as possible.\n * If y or y2 is not specified or 'middle' 'top' 'bottom',\n * the height would be as long as possible.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.x]\n * @param {number|string} [positionInfo.y]\n * @param {number|string} [positionInfo.x2]\n * @param {number|string} [positionInfo.y2]\n * @param {Object} containerRect {width, height}\n * @param {string|number} margin\n * @return {Object} {width, height}\n */\n\nfunction getAvailableSize(positionInfo, containerRect, margin) {\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var x = parsePercent(positionInfo.x, containerWidth);\n  var y = parsePercent(positionInfo.y, containerHeight);\n  var x2 = parsePercent(positionInfo.x2, containerWidth);\n  var y2 = parsePercent(positionInfo.y2, containerHeight);\n  (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n  (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n  (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n  (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  return {\n    width: Math.max(x2 - x - margin[1] - margin[3], 0),\n    height: Math.max(y2 - y - margin[0] - margin[2], 0)\n  };\n}\n/**\n * Parse position info.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width]\n * @param {number|string} [positionInfo.height]\n * @param {number|string} [positionInfo.aspect] Aspect is width / height\n * @param {Object} containerRect\n * @param {string|number} [margin]\n *\n * @return {module:zrender/core/BoundingRect}\n */\n\n\nfunction getLayoutRect(positionInfo, containerRect, margin) {\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var left = parsePercent(positionInfo.left, containerWidth);\n  var top = parsePercent(positionInfo.top, containerHeight);\n  var right = parsePercent(positionInfo.right, containerWidth);\n  var bottom = parsePercent(positionInfo.bottom, containerHeight);\n  var width = parsePercent(positionInfo.width, containerWidth);\n  var height = parsePercent(positionInfo.height, containerHeight);\n  var verticalMargin = margin[2] + margin[0];\n  var horizontalMargin = margin[1] + margin[3];\n  var aspect = positionInfo.aspect; // If width is not specified, calculate width from left and right\n\n  if (isNaN(width)) {\n    width = containerWidth - right - horizontalMargin - left;\n  }\n\n  if (isNaN(height)) {\n    height = containerHeight - bottom - verticalMargin - top;\n  }\n\n  if (aspect != null) {\n    // If width and height are not given\n    // 1. Graph should not exceeds the container\n    // 2. Aspect must be keeped\n    // 3. Graph should take the space as more as possible\n    // FIXME\n    // Margin is not considered, because there is no case that both\n    // using margin and aspect so far.\n    if (isNaN(width) && isNaN(height)) {\n      if (aspect > containerWidth / containerHeight) {\n        width = containerWidth * 0.8;\n      } else {\n        height = containerHeight * 0.8;\n      }\n    } // Calculate width or height with given aspect\n\n\n    if (isNaN(width)) {\n      width = aspect * height;\n    }\n\n    if (isNaN(height)) {\n      height = width / aspect;\n    }\n  } // If left is not specified, calculate left from right and width\n\n\n  if (isNaN(left)) {\n    left = containerWidth - right - width - horizontalMargin;\n  }\n\n  if (isNaN(top)) {\n    top = containerHeight - bottom - height - verticalMargin;\n  } // Align left and top\n\n\n  switch (positionInfo.left || positionInfo.right) {\n    case 'center':\n      left = containerWidth / 2 - width / 2 - margin[3];\n      break;\n\n    case 'right':\n      left = containerWidth - width - horizontalMargin;\n      break;\n  }\n\n  switch (positionInfo.top || positionInfo.bottom) {\n    case 'middle':\n    case 'center':\n      top = containerHeight / 2 - height / 2 - margin[0];\n      break;\n\n    case 'bottom':\n      top = containerHeight - height - verticalMargin;\n      break;\n  } // If something is wrong and left, top, width, height are calculated as NaN\n\n\n  left = left || 0;\n  top = top || 0;\n\n  if (isNaN(width)) {\n    // Width may be NaN if only one value is given except width\n    width = containerWidth - horizontalMargin - left - (right || 0);\n  }\n\n  if (isNaN(height)) {\n    // Height may be NaN if only one value is given except height\n    height = containerHeight - verticalMargin - top - (bottom || 0);\n  }\n\n  var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n  rect.margin = margin;\n  return rect;\n}\n/**\n * Position a zr element in viewport\n *  Group position is specified by either\n *  {left, top}, {right, bottom}\n *  If all properties exists, right and bottom will be igonred.\n *\n * Logic:\n *     1. Scale (against origin point in parent coord)\n *     2. Rotate (against origin point in parent coord)\n *     3. Traslate (with el.position by this method)\n * So this method only fixes the last step 'Traslate', which does not affect\n * scaling and rotating.\n *\n * If be called repeatly with the same input el, the same result will be gotten.\n *\n * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width] Only for opt.boundingModel: 'raw'\n * @param {number|string} [positionInfo.height] Only for opt.boundingModel: 'raw'\n * @param {Object} containerRect\n * @param {string|number} margin\n * @param {Object} [opt]\n * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n * @param {Array.<number>} [opt.boundingMode='all']\n *        Specify how to calculate boundingRect when locating.\n *        'all': Position the boundingRect that is transformed and uioned\n *               both itself and its descendants.\n *               This mode simplies confine the elements in the bounding\n *               of their container (e.g., using 'right: 0').\n *        'raw': Position the boundingRect that is not transformed and only itself.\n *               This mode is useful when you want a element can overflow its\n *               container. (Consider a rotated circle needs to be located in a corner.)\n *               In this mode positionInfo.width/height can only be number.\n */\n\n\nfunction positionElement(el, positionInfo, containerRect, margin, opt) {\n  var h = !opt || !opt.hv || opt.hv[0];\n  var v = !opt || !opt.hv || opt.hv[1];\n  var boundingMode = opt && opt.boundingMode || 'all';\n\n  if (!h && !v) {\n    return;\n  }\n\n  var rect;\n\n  if (boundingMode === 'raw') {\n    rect = el.type === 'group' ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0) : el.getBoundingRect();\n  } else {\n    rect = el.getBoundingRect();\n\n    if (el.needLocalTransform()) {\n      var transform = el.getLocalTransform(); // Notice: raw rect may be inner object of el,\n      // which should not be modified.\n\n      rect = rect.clone();\n      rect.applyTransform(transform);\n    }\n  } // The real width and height can not be specified but calculated by the given el.\n\n\n  positionInfo = getLayoutRect(zrUtil.defaults({\n    width: rect.width,\n    height: rect.height\n  }, positionInfo), containerRect, margin); // Because 'tranlate' is the last step in transform\n  // (see zrender/core/Transformable#getLocalTransfrom),\n  // we can just only modify el.position to get final result.\n\n  var elPos = el.position;\n  var dx = h ? positionInfo.x - rect.x : 0;\n  var dy = v ? positionInfo.y - rect.y : 0;\n  el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n}\n/**\n * @param {Object} option Contains some of the properties in HV_NAMES.\n * @param {number} hvIdx 0: horizontal; 1: vertical.\n */\n\n\nfunction sizeCalculable(option, hvIdx) {\n  return option[HV_NAMES[hvIdx][0]] != null || option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null;\n}\n/**\n * Consider Case:\n * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n * through setOption or media query, using normal zrUtil.merge will cause\n * {right: 0} does not take effect.\n *\n * @example\n * ComponentModel.extend({\n *     init: function () {\n *         ...\n *         var inputPositionParams = layout.getLayoutParams(option);\n *         this.mergeOption(inputPositionParams);\n *     },\n *     mergeOption: function (newOption) {\n *         newOption && zrUtil.merge(thisOption, newOption, true);\n *         layout.mergeLayoutParam(thisOption, newOption);\n *     }\n * });\n *\n * @param {Object} targetOption\n * @param {Object} newOption\n * @param {Object|string} [opt]\n * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Used for the components\n *  that width (or height) should not be calculated by left and right (or top and bottom).\n */\n\n\nfunction mergeLayoutParam(targetOption, newOption, opt) {\n  !zrUtil.isObject(opt) && (opt = {});\n  var ignoreSize = opt.ignoreSize;\n  !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n  var hResult = merge(HV_NAMES[0], 0);\n  var vResult = merge(HV_NAMES[1], 1);\n  copy(HV_NAMES[0], targetOption, hResult);\n  copy(HV_NAMES[1], targetOption, vResult);\n\n  function merge(names, hvIdx) {\n    var newParams = {};\n    var newValueCount = 0;\n    var merged = {};\n    var mergedValueCount = 0;\n    var enoughParamNumber = 2;\n    each(names, function (name) {\n      merged[name] = targetOption[name];\n    });\n    each(names, function (name) {\n      // Consider case: newOption.width is null, which is\n      // set by user for removing width setting.\n      hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n      hasValue(newParams, name) && newValueCount++;\n      hasValue(merged, name) && mergedValueCount++;\n    });\n\n    if (ignoreSize[hvIdx]) {\n      // Only one of left/right is premitted to exist.\n      if (hasValue(newOption, names[1])) {\n        merged[names[2]] = null;\n      } else if (hasValue(newOption, names[2])) {\n        merged[names[1]] = null;\n      }\n\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // or targetOption: {right: ...} and newOption: {width: ...},\n    // There is no conflict when merged only has params count\n    // little than enoughParamNumber.\n\n\n    if (mergedValueCount === enoughParamNumber || !newValueCount) {\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // Than we can make sure user only want those two, and ignore\n    // all origin params in targetOption.\n    else if (newValueCount >= enoughParamNumber) {\n        return newParams;\n      } else {\n        // Chose another param from targetOption by priority.\n        for (var i = 0; i < names.length; i++) {\n          var name = names[i];\n\n          if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n            newParams[name] = targetOption[name];\n            break;\n          }\n        }\n\n        return newParams;\n      }\n  }\n\n  function hasProp(obj, name) {\n    return obj.hasOwnProperty(name);\n  }\n\n  function hasValue(obj, name) {\n    return obj[name] != null && obj[name] !== 'auto';\n  }\n\n  function copy(names, target, source) {\n    each(names, function (name) {\n      target[name] = source[name];\n    });\n  }\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction getLayoutParams(source) {\n  return copyLayoutParams({}, source);\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction copyLayoutParams(target, source) {\n  source && target && each(LOCATION_PARAMS, function (name) {\n    source.hasOwnProperty(name) && (target[name] = source[name]);\n  });\n  return target;\n}\n\nexports.LOCATION_PARAMS = LOCATION_PARAMS;\nexports.HV_NAMES = HV_NAMES;\nexports.box = box;\nexports.vbox = vbox;\nexports.hbox = hbox;\nexports.getAvailableSize = getAvailableSize;\nexports.getLayoutRect = getLayoutRect;\nexports.positionElement = positionElement;\nexports.sizeCalculable = sizeCalculable;\nexports.mergeLayoutParam = mergeLayoutParam;\nexports.getLayoutParams = getLayoutParams;\nexports.copyLayoutParams = copyLayoutParams;\n\n/***/ }),\n\n/***/ 991:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar Model = __webpack_require__(989);\n\nvar componentUtil = __webpack_require__(1027);\n\nvar clazzUtil = __webpack_require__(992);\n\nvar layout = __webpack_require__(990);\n\nvar boxLayoutMixin = __webpack_require__(1124);\n\n/**\n * Component model\n *\n * @module echarts/model/Component\n */\nvar arrayPush = Array.prototype.push;\n/**\n * @alias module:echarts/model/Component\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {module:echarts/model/Model} ecModel\n */\n\nvar ComponentModel = Model.extend({\n  type: 'component',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  id: '',\n\n  /**\n   * @readOnly\n   */\n  name: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  mainType: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  subType: '',\n\n  /**\n   * @readOnly\n   * @type {number}\n   */\n  componentIndex: 0,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n  ecModel: null,\n\n  /**\n   * key: componentType\n   * value:  Component model list, can not be null.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @readOnly\n   */\n  dependentModels: [],\n\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  uid: null,\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  $constructor: function (option, parentModel, ecModel, extraOpt) {\n    Model.call(this, option, parentModel, ecModel, extraOpt);\n    this.uid = componentUtil.getUID('componentModel');\n  },\n  init: function (option, parentModel, ecModel, extraOpt) {\n    this.mergeDefaultAndTheme(option, ecModel);\n  },\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? layout.getLayoutParams(option) : {};\n    var themeModel = ecModel.getTheme();\n    zrUtil.merge(option, themeModel.get(this.mainType));\n    zrUtil.merge(option, this.getDefaultOption());\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (option, extraOpt) {\n    zrUtil.merge(this.option, option, true);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(this.option, option, layoutMode);\n    }\n  },\n  // Hooker after init or mergeOption\n  optionUpdated: function (newCptOption, isInit) {},\n  getDefaultOption: function () {\n    if (!clazzUtil.hasOwn(this, '__defaultOption')) {\n      var optList = [];\n      var Class = this.constructor;\n\n      while (Class) {\n        var opt = Class.prototype.defaultOption;\n        opt && optList.push(opt);\n        Class = Class.superClass;\n      }\n\n      var defaultOption = {};\n\n      for (var i = optList.length - 1; i >= 0; i--) {\n        defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n      }\n\n      clazzUtil.set(this, '__defaultOption', defaultOption);\n    }\n\n    return clazzUtil.get(this, '__defaultOption');\n  },\n  getReferringComponents: function (mainType) {\n    return this.ecModel.queryComponents({\n      mainType: mainType,\n      index: this.get(mainType + 'Index', true),\n      id: this.get(mainType + 'Id', true)\n    });\n  }\n}); // Reset ComponentModel.extend, add preConstruct.\n// clazzUtil.enableClassExtend(\n//     ComponentModel,\n//     function (option, parentModel, ecModel, extraOpt) {\n//         // Set dependentModels, componentIndex, name, id, mainType, subType.\n//         zrUtil.extend(this, extraOpt);\n//         this.uid = componentUtil.getUID('componentModel');\n//         // this.setReadOnly([\n//         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n//         //     'dependentModels', 'componentIndex'\n//         // ]);\n//     }\n// );\n// Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(ComponentModel, {\n  registerWhenExtend: true\n});\ncomponentUtil.enableSubTypeDefaulter(ComponentModel); // Add capability of ComponentModel.topologicalTravel.\n\ncomponentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\nfunction getDependencies(componentType) {\n  var deps = [];\n  zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n    arrayPush.apply(deps, Clazz.prototype.dependencies || []);\n  }); // Ensure main type\n\n  return zrUtil.map(deps, function (type) {\n    return clazzUtil.parseClassType(type).main;\n  });\n}\n\nzrUtil.mixin(ComponentModel, boxLayoutMixin);\nvar _default = ComponentModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 992:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(983);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(978);\n\nvar TYPE_DELIMITER = '.';\nvar IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\nvar MEMBER_PRIFIX = '\\0ec_\\0';\n/**\n * Hide private class member.\n * The same behavior as `host[name] = value;` (can be right-value)\n * @public\n */\n\nfunction set(host, name, value) {\n  return host[MEMBER_PRIFIX + name] = value;\n}\n/**\n * Hide private class member.\n * The same behavior as `host[name];`\n * @public\n */\n\n\nfunction get(host, name) {\n  return host[MEMBER_PRIFIX + name];\n}\n/**\n * For hidden private class member.\n * The same behavior as `host.hasOwnProperty(name);`\n * @public\n */\n\n\nfunction hasOwn(host, name) {\n  return host.hasOwnProperty(MEMBER_PRIFIX + name);\n}\n/**\n * Notice, parseClassType('') should returns {main: '', sub: ''}\n * @public\n */\n\n\nfunction parseClassType(componentType) {\n  var ret = {\n    main: '',\n    sub: ''\n  };\n\n  if (componentType) {\n    componentType = componentType.split(TYPE_DELIMITER);\n    ret.main = componentType[0] || '';\n    ret.sub = componentType[1] || '';\n  }\n\n  return ret;\n}\n/**\n * @public\n */\n\n\nfunction checkClassType(componentType) {\n  zrUtil.assert(/^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType), 'componentType \"' + componentType + '\" illegal');\n}\n/**\n * @public\n */\n\n\nfunction enableClassExtend(RootClass, mandatoryMethods) {\n  RootClass.$constructor = RootClass;\n\n  RootClass.extend = function (proto) {\n    var superClass = this;\n\n    var ExtendedClass = function () {\n      if (!proto.$constructor) {\n        superClass.apply(this, arguments);\n      } else {\n        proto.$constructor.apply(this, arguments);\n      }\n    };\n\n    zrUtil.extend(ExtendedClass.prototype, proto);\n    ExtendedClass.extend = this.extend;\n    ExtendedClass.superCall = superCall;\n    ExtendedClass.superApply = superApply;\n    zrUtil.inherits(ExtendedClass, this);\n    ExtendedClass.superClass = superClass;\n    return ExtendedClass;\n  };\n} // superCall should have class info, which can not be fetch from 'this'.\n// Consider this case:\n// class A has method f,\n// class B inherits class A, overrides method f, f call superApply('f'),\n// class C inherits class B, do not overrides method f,\n// then when method of class C is called, dead loop occured.\n\n\nfunction superCall(context, methodName) {\n  var args = zrUtil.slice(arguments, 2);\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n\nfunction superApply(context, methodName, args) {\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n/**\n * @param {Object} entity\n * @param {Object} options\n * @param {boolean} [options.registerWhenExtend]\n * @public\n */\n\n\nfunction enableClassManagement(entity, options) {\n  options = options || {};\n  /**\n   * Component model classes\n   * key: componentType,\n   * value:\n   *     componentClass, when componentType is 'xxx'\n   *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n   * @type {Object}\n   */\n\n  var storage = {};\n\n  entity.registerClass = function (Clazz, componentType) {\n    if (componentType) {\n      checkClassType(componentType);\n      componentType = parseClassType(componentType);\n\n      if (!componentType.sub) {\n        storage[componentType.main] = Clazz;\n      } else if (componentType.sub !== IS_CONTAINER) {\n        var container = makeContainer(componentType);\n        container[componentType.sub] = Clazz;\n      }\n    }\n\n    return Clazz;\n  };\n\n  entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n    var Clazz = storage[componentMainType];\n\n    if (Clazz && Clazz[IS_CONTAINER]) {\n      Clazz = subType ? Clazz[subType] : null;\n    }\n\n    if (throwWhenNotFound && !Clazz) {\n      throw new Error(!subType ? componentMainType + '.' + 'type should be specified.' : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.');\n    }\n\n    return Clazz;\n  };\n\n  entity.getClassesByMainType = function (componentType) {\n    componentType = parseClassType(componentType);\n    var result = [];\n    var obj = storage[componentType.main];\n\n    if (obj && obj[IS_CONTAINER]) {\n      zrUtil.each(obj, function (o, type) {\n        type !== IS_CONTAINER && result.push(o);\n      });\n    } else {\n      result.push(obj);\n    }\n\n    return result;\n  };\n\n  entity.hasClass = function (componentType) {\n    // Just consider componentType.main.\n    componentType = parseClassType(componentType);\n    return !!storage[componentType.main];\n  };\n  /**\n   * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n   */\n\n\n  entity.getAllClassMainTypes = function () {\n    var types = [];\n    zrUtil.each(storage, function (obj, type) {\n      types.push(type);\n    });\n    return types;\n  };\n  /**\n   * If a main type is container and has sub types\n   * @param  {string}  mainType\n   * @return {boolean}\n   */\n\n\n  entity.hasSubTypes = function (componentType) {\n    componentType = parseClassType(componentType);\n    var obj = storage[componentType.main];\n    return obj && obj[IS_CONTAINER];\n  };\n\n  entity.parseClassType = parseClassType;\n\n  function makeContainer(componentType) {\n    var container = storage[componentType.main];\n\n    if (!container || !container[IS_CONTAINER]) {\n      container = storage[componentType.main] = {};\n      container[IS_CONTAINER] = true;\n    }\n\n    return container;\n  }\n\n  if (options.registerWhenExtend) {\n    var originalExtend = entity.extend;\n\n    if (originalExtend) {\n      entity.extend = function (proto) {\n        var ExtendedClass = originalExtend.call(this, proto);\n        return entity.registerClass(ExtendedClass, proto.type);\n      };\n    }\n  }\n\n  return entity;\n}\n/**\n * @param {string|Array.<string>} properties\n */\n\n\nfunction setReadOnly(obj, properties) {// FIXME It seems broken in IE8 simulation of IE11\n  // if (!zrUtil.isArray(properties)) {\n  //     properties = properties != null ? [properties] : [];\n  // }\n  // zrUtil.each(properties, function (prop) {\n  //     var value = obj[prop];\n  //     Object.defineProperty\n  //         && Object.defineProperty(obj, prop, {\n  //             value: value, writable: false\n  //         });\n  //     zrUtil.isArray(obj[prop])\n  //         && Object.freeze\n  //         && Object.freeze(obj[prop]);\n  // });\n}\n\nexports.set = set;\nexports.get = get;\nexports.hasOwn = hasOwn;\nexports.parseClassType = parseClassType;\nexports.enableClassExtend = enableClassExtend;\nexports.enableClassManagement = enableClassManagement;\nexports.setReadOnly = setReadOnly;\n\n/***/ }),\n\n/***/ 993:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar BoundingRect = __webpack_require__(987);\n\nvar imageHelper = __webpack_require__(1026);\n\nvar _util = __webpack_require__(978);\n\nvar getContext = _util.getContext;\nvar extend = _util.extend;\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar textWidthCache = {};\nvar textWidthCacheCounter = 0;\nvar TEXT_CACHE_MAX = 5000;\nvar STYLE_REG = /\\{([a-zA-Z0-9_]+)\\|([^}]*)\\}/g;\nvar DEFAULT_FONT = '12px sans-serif'; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  methods[name] = fn;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {number} width\n */\n\n\nfunction getWidth(text, font) {\n  font = font || DEFAULT_FONT;\n  var key = text + ':' + font;\n\n  if (textWidthCache[key]) {\n    return textWidthCache[key];\n  }\n\n  var textLines = (text + '').split('\\n');\n  var width = 0;\n\n  for (var i = 0, l = textLines.length; i < l; i++) {\n    // textContain.measureText may be overrided in SVG or VML\n    width = Math.max(measureText(textLines[i], font).width, width);\n  }\n\n  if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n    textWidthCacheCounter = 0;\n    textWidthCache = {};\n  }\n\n  textWidthCacheCounter++;\n  textWidthCache[key] = width;\n  return width;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {string} [textAlign='left']\n * @param {string} [textVerticalAlign='top']\n * @param {Array.<number>} [textPadding]\n * @param {Object} [rich]\n * @param {Object} [truncate]\n * @return {Object} {x, y, width, height, lineHeight}\n */\n\n\nfunction getBoundingRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  return rich ? getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) : getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate);\n}\n\nfunction getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate) {\n  var contentBlock = parsePlainText(text, font, textPadding, truncate);\n  var outerWidth = getWidth(text, font);\n\n  if (textPadding) {\n    outerWidth += textPadding[1] + textPadding[3];\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  var rect = new BoundingRect(x, y, outerWidth, outerHeight);\n  rect.lineHeight = contentBlock.lineHeight;\n  return rect;\n}\n\nfunction getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  var contentBlock = parseRichText(text, {\n    rich: rich,\n    truncate: truncate,\n    font: font,\n    textAlign: textAlign,\n    textPadding: textPadding\n  });\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  return new BoundingRect(x, y, outerWidth, outerHeight);\n}\n/**\n * @public\n * @param {number} x\n * @param {number} width\n * @param {string} [textAlign='left']\n * @return {number} Adjusted x.\n */\n\n\nfunction adjustTextX(x, width, textAlign) {\n  // FIXME Right to left language\n  if (textAlign === 'right') {\n    x -= width;\n  } else if (textAlign === 'center') {\n    x -= width / 2;\n  }\n\n  return x;\n}\n/**\n * @public\n * @param {number} y\n * @param {number} height\n * @param {string} [textVerticalAlign='top']\n * @return {number} Adjusted y.\n */\n\n\nfunction adjustTextY(y, height, textVerticalAlign) {\n  if (textVerticalAlign === 'middle') {\n    y -= height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y -= height;\n  }\n\n  return y;\n}\n/**\n * @public\n * @param {stirng} textPosition\n * @param {Object} rect {x, y, width, height}\n * @param {number} distance\n * @return {Object} {x, y, textAlign, textVerticalAlign}\n */\n\n\nfunction adjustTextPositionOnRect(textPosition, rect, distance) {\n  var x = rect.x;\n  var y = rect.y;\n  var height = rect.height;\n  var width = rect.width;\n  var halfHeight = height / 2;\n  var textAlign = 'left';\n  var textVerticalAlign = 'top';\n\n  switch (textPosition) {\n    case 'left':\n      x -= distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'right':\n      x += distance + width;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'top':\n      x += width / 2;\n      y -= distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'bottom':\n      x += width / 2;\n      y += height + distance;\n      textAlign = 'center';\n      break;\n\n    case 'inside':\n      x += width / 2;\n      y += halfHeight;\n      textAlign = 'center';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideLeft':\n      x += distance;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideRight':\n      x += width - distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideTop':\n      x += width / 2;\n      y += distance;\n      textAlign = 'center';\n      break;\n\n    case 'insideBottom':\n      x += width / 2;\n      y += height - distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideTopLeft':\n      x += distance;\n      y += distance;\n      break;\n\n    case 'insideTopRight':\n      x += width - distance;\n      y += distance;\n      textAlign = 'right';\n      break;\n\n    case 'insideBottomLeft':\n      x += distance;\n      y += height - distance;\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideBottomRight':\n      x += width - distance;\n      y += height - distance;\n      textAlign = 'right';\n      textVerticalAlign = 'bottom';\n      break;\n  }\n\n  return {\n    x: x,\n    y: y,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n/**\n * Show ellipsis if overflow.\n *\n * @public\n * @param  {string} text\n * @param  {string} containerWidth\n * @param  {string} font\n * @param  {number} [ellipsis='...']\n * @param  {Object} [options]\n * @param  {number} [options.maxIterations=3]\n * @param  {number} [options.minChar=0] If truncate result are less\n *                  then minChar, ellipsis will not show, which is\n *                  better for user hint in some cases.\n * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n * @return {string}\n */\n\n\nfunction truncateText(text, containerWidth, font, ellipsis, options) {\n  if (!containerWidth) {\n    return '';\n  }\n\n  var textLines = (text + '').split('\\n');\n  options = prepareTruncateOptions(containerWidth, font, ellipsis, options); // FIXME\n  // It is not appropriate that every line has '...' when truncate multiple lines.\n\n  for (var i = 0, len = textLines.length; i < len; i++) {\n    textLines[i] = truncateSingleLine(textLines[i], options);\n  }\n\n  return textLines.join('\\n');\n}\n\nfunction prepareTruncateOptions(containerWidth, font, ellipsis, options) {\n  options = extend({}, options);\n  options.font = font;\n  var ellipsis = retrieve2(ellipsis, '...');\n  options.maxIterations = retrieve2(options.maxIterations, 2);\n  var minChar = options.minChar = retrieve2(options.minChar, 0); // FIXME\n  // Other languages?\n\n  options.cnCharWidth = getWidth('国', font); // FIXME\n  // Consider proportional font?\n\n  var ascCharWidth = options.ascCharWidth = getWidth('a', font);\n  options.placeholder = retrieve2(options.placeholder, ''); // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n  // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n\n  var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n\n  for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n    contentWidth -= ascCharWidth;\n  }\n\n  var ellipsisWidth = getWidth(ellipsis);\n\n  if (ellipsisWidth > contentWidth) {\n    ellipsis = '';\n    ellipsisWidth = 0;\n  }\n\n  contentWidth = containerWidth - ellipsisWidth;\n  options.ellipsis = ellipsis;\n  options.ellipsisWidth = ellipsisWidth;\n  options.contentWidth = contentWidth;\n  options.containerWidth = containerWidth;\n  return options;\n}\n\nfunction truncateSingleLine(textLine, options) {\n  var containerWidth = options.containerWidth;\n  var font = options.font;\n  var contentWidth = options.contentWidth;\n\n  if (!containerWidth) {\n    return '';\n  }\n\n  var lineWidth = getWidth(textLine, font);\n\n  if (lineWidth <= containerWidth) {\n    return textLine;\n  }\n\n  for (var j = 0;; j++) {\n    if (lineWidth <= contentWidth || j >= options.maxIterations) {\n      textLine += options.ellipsis;\n      break;\n    }\n\n    var subLength = j === 0 ? estimateLength(textLine, contentWidth, options.ascCharWidth, options.cnCharWidth) : lineWidth > 0 ? Math.floor(textLine.length * contentWidth / lineWidth) : 0;\n    textLine = textLine.substr(0, subLength);\n    lineWidth = getWidth(textLine, font);\n  }\n\n  if (textLine === '') {\n    textLine = options.placeholder;\n  }\n\n  return textLine;\n}\n\nfunction estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n  var width = 0;\n  var i = 0;\n\n  for (var len = text.length; i < len && width < contentWidth; i++) {\n    var charCode = text.charCodeAt(i);\n    width += 0 <= charCode && charCode <= 127 ? ascCharWidth : cnCharWidth;\n  }\n\n  return i;\n}\n/**\n * @public\n * @param {string} font\n * @return {number} line height\n */\n\n\nfunction getLineHeight(font) {\n  // FIXME A rough approach.\n  return getWidth('国', font);\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {Object} width\n */\n\n\nfunction measureText(text, font) {\n  return methods.measureText(text, font);\n} // Avoid assign to an exported variable, for transforming to cjs.\n\n\nmethods.measureText = function (text, font) {\n  var ctx = getContext();\n  ctx.font = font || DEFAULT_FONT;\n  return ctx.measureText(text);\n};\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {Object} [truncate]\n * @return {Object} block: {lineHeight, lines, height, outerHeight}\n *  Notice: for performance, do not calculate outerWidth util needed.\n */\n\n\nfunction parsePlainText(text, font, padding, truncate) {\n  text != null && (text += '');\n  var lineHeight = getLineHeight(font);\n  var lines = text ? text.split('\\n') : [];\n  var height = lines.length * lineHeight;\n  var outerHeight = height;\n\n  if (padding) {\n    outerHeight += padding[0] + padding[2];\n  }\n\n  if (text && truncate) {\n    var truncOuterHeight = truncate.outerHeight;\n    var truncOuterWidth = truncate.outerWidth;\n\n    if (truncOuterHeight != null && outerHeight > truncOuterHeight) {\n      text = '';\n      lines = [];\n    } else if (truncOuterWidth != null) {\n      var options = prepareTruncateOptions(truncOuterWidth - (padding ? padding[1] + padding[3] : 0), font, truncate.ellipsis, {\n        minChar: truncate.minChar,\n        placeholder: truncate.placeholder\n      }); // FIXME\n      // It is not appropriate that every line has '...' when truncate multiple lines.\n\n      for (var i = 0, len = lines.length; i < len; i++) {\n        lines[i] = truncateSingleLine(lines[i], options);\n      }\n    }\n  }\n\n  return {\n    lines: lines,\n    height: height,\n    outerHeight: outerHeight,\n    lineHeight: lineHeight\n  };\n}\n/**\n * For example: 'some text {a|some text}other text{b|some text}xxx{c|}xxx'\n * Also consider 'bbbb{a|xxx\\nzzz}xxxx\\naaaa'.\n *\n * @public\n * @param {string} text\n * @param {Object} style\n * @return {Object} block\n * {\n *      width,\n *      height,\n *      lines: [{\n *          lineHeight,\n *          width,\n *          tokens: [[{\n *              styleName,\n *              text,\n *              width,      // include textPadding\n *              height,     // include textPadding\n *              textWidth, // pure text width\n *              textHeight, // pure text height\n *              lineHeihgt,\n *              font,\n *              textAlign,\n *              textVerticalAlign\n *          }], [...], ...]\n *      }, ...]\n * }\n * If styleName is undefined, it is plain text.\n */\n\n\nfunction parseRichText(text, style) {\n  var contentBlock = {\n    lines: [],\n    width: 0,\n    height: 0\n  };\n  text != null && (text += '');\n\n  if (!text) {\n    return contentBlock;\n  }\n\n  var lastIndex = STYLE_REG.lastIndex = 0;\n  var result;\n\n  while ((result = STYLE_REG.exec(text)) != null) {\n    var matchedIndex = result.index;\n\n    if (matchedIndex > lastIndex) {\n      pushTokens(contentBlock, text.substring(lastIndex, matchedIndex));\n    }\n\n    pushTokens(contentBlock, result[2], result[1]);\n    lastIndex = STYLE_REG.lastIndex;\n  }\n\n  if (lastIndex < text.length) {\n    pushTokens(contentBlock, text.substring(lastIndex, text.length));\n  }\n\n  var lines = contentBlock.lines;\n  var contentHeight = 0;\n  var contentWidth = 0; // For `textWidth: 100%`\n\n  var pendingList = [];\n  var stlPadding = style.textPadding;\n  var truncate = style.truncate;\n  var truncateWidth = truncate && truncate.outerWidth;\n  var truncateHeight = truncate && truncate.outerHeight;\n\n  if (stlPadding) {\n    truncateWidth != null && (truncateWidth -= stlPadding[1] + stlPadding[3]);\n    truncateHeight != null && (truncateHeight -= stlPadding[0] + stlPadding[2]);\n  } // Calculate layout info of tokens.\n\n\n  for (var i = 0; i < lines.length; i++) {\n    var line = lines[i];\n    var lineHeight = 0;\n    var lineWidth = 0;\n\n    for (var j = 0; j < line.tokens.length; j++) {\n      var token = line.tokens[j];\n      var tokenStyle = token.styleName && style.rich[token.styleName] || {}; // textPadding should not inherit from style.\n\n      var textPadding = token.textPadding = tokenStyle.textPadding; // textFont has been asigned to font by `normalizeStyle`.\n\n      var font = token.font = tokenStyle.font || style.font; // textHeight can be used when textVerticalAlign is specified in token.\n\n      var tokenHeight = token.textHeight = retrieve2( // textHeight should not be inherited, consider it can be specified\n      // as box height of the block.\n      tokenStyle.textHeight, getLineHeight(font));\n      textPadding && (tokenHeight += textPadding[0] + textPadding[2]);\n      token.height = tokenHeight;\n      token.lineHeight = retrieve3(tokenStyle.textLineHeight, style.textLineHeight, tokenHeight);\n      token.textAlign = tokenStyle && tokenStyle.textAlign || style.textAlign;\n      token.textVerticalAlign = tokenStyle && tokenStyle.textVerticalAlign || 'middle';\n\n      if (truncateHeight != null && contentHeight + token.lineHeight > truncateHeight) {\n        return {\n          lines: [],\n          width: 0,\n          height: 0\n        };\n      }\n\n      token.textWidth = getWidth(token.text, font);\n      var tokenWidth = tokenStyle.textWidth;\n      var tokenWidthNotSpecified = tokenWidth == null || tokenWidth === 'auto'; // Percent width, can be `100%`, can be used in drawing separate\n      // line when box width is needed to be auto.\n\n      if (typeof tokenWidth === 'string' && tokenWidth.charAt(tokenWidth.length - 1) === '%') {\n        token.percentWidth = tokenWidth;\n        pendingList.push(token);\n        tokenWidth = 0; // Do not truncate in this case, because there is no user case\n        // and it is too complicated.\n      } else {\n        if (tokenWidthNotSpecified) {\n          tokenWidth = token.textWidth; // FIXME: If image is not loaded and textWidth is not specified, calling\n          // `getBoundingRect()` will not get correct result.\n\n          var textBackgroundColor = tokenStyle.textBackgroundColor;\n          var bgImg = textBackgroundColor && textBackgroundColor.image; // Use cases:\n          // (1) If image is not loaded, it will be loaded at render phase and call\n          // `dirty()` and `textBackgroundColor.image` will be replaced with the loaded\n          // image, and then the right size will be calculated here at the next tick.\n          // See `graphic/helper/text.js`.\n          // (2) If image loaded, and `textBackgroundColor.image` is image src string,\n          // use `imageHelper.findExistImage` to find cached image.\n          // `imageHelper.findExistImage` will always be called here before\n          // `imageHelper.createOrUpdateImage` in `graphic/helper/text.js#renderRichText`\n          // which ensures that image will not be rendered before correct size calcualted.\n\n          if (bgImg) {\n            bgImg = imageHelper.findExistImage(bgImg);\n\n            if (imageHelper.isImageReady(bgImg)) {\n              tokenWidth = Math.max(tokenWidth, bgImg.width * tokenHeight / bgImg.height);\n            }\n          }\n        }\n\n        var paddingW = textPadding ? textPadding[1] + textPadding[3] : 0;\n        tokenWidth += paddingW;\n        var remianTruncWidth = truncateWidth != null ? truncateWidth - lineWidth : null;\n\n        if (remianTruncWidth != null && remianTruncWidth < tokenWidth) {\n          if (!tokenWidthNotSpecified || remianTruncWidth < paddingW) {\n            token.text = '';\n            token.textWidth = tokenWidth = 0;\n          } else {\n            token.text = truncateText(token.text, remianTruncWidth - paddingW, font, truncate.ellipsis, {\n              minChar: truncate.minChar\n            });\n            token.textWidth = getWidth(token.text, font);\n            tokenWidth = token.textWidth + paddingW;\n          }\n        }\n      }\n\n      lineWidth += token.width = tokenWidth;\n      tokenStyle && (lineHeight = Math.max(lineHeight, token.lineHeight));\n    }\n\n    line.width = lineWidth;\n    line.lineHeight = lineHeight;\n    contentHeight += lineHeight;\n    contentWidth = Math.max(contentWidth, lineWidth);\n  }\n\n  contentBlock.outerWidth = contentBlock.width = retrieve2(style.textWidth, contentWidth);\n  contentBlock.outerHeight = contentBlock.height = retrieve2(style.textHeight, contentHeight);\n\n  if (stlPadding) {\n    contentBlock.outerWidth += stlPadding[1] + stlPadding[3];\n    contentBlock.outerHeight += stlPadding[0] + stlPadding[2];\n  }\n\n  for (var i = 0; i < pendingList.length; i++) {\n    var token = pendingList[i];\n    var percentWidth = token.percentWidth; // Should not base on outerWidth, because token can not be placed out of padding.\n\n    token.width = parseInt(percentWidth, 10) / 100 * contentWidth;\n  }\n\n  return contentBlock;\n}\n\nfunction pushTokens(block, str, styleName) {\n  var isEmptyStr = str === '';\n  var strs = str.split('\\n');\n  var lines = block.lines;\n\n  for (var i = 0; i < strs.length; i++) {\n    var text = strs[i];\n    var token = {\n      styleName: styleName,\n      text: text,\n      isLineHolder: !text && !isEmptyStr\n    }; // The first token should be appended to the last line.\n\n    if (!i) {\n      var tokens = (lines[lines.length - 1] || (lines[0] = {\n        tokens: []\n      })).tokens; // Consider cases:\n      // (1) ''.split('\\n') => ['', '\\n', ''], the '' at the first item\n      // (which is a placeholder) should be replaced by new token.\n      // (2) A image backage, where token likes {a|}.\n      // (3) A redundant '' will affect textAlign in line.\n      // (4) tokens with the same tplName should not be merged, because\n      // they should be displayed in different box (with border and padding).\n\n      var tokensLen = tokens.length;\n      tokensLen === 1 && tokens[0].isLineHolder ? tokens[0] = token : // Consider text is '', only insert when it is the \"lineHolder\" or\n      // \"emptyStr\". Otherwise a redundant '' will affect textAlign in line.\n      (text || !tokensLen || isEmptyStr) && tokens.push(token);\n    } // Other tokens always start a new line.\n    else {\n        // If there is '', insert it as a placeholder.\n        lines.push({\n          tokens: [token]\n        });\n      }\n  }\n}\n\nfunction makeFont(style) {\n  // FIXME in node-canvas fontWeight is before fontStyle\n  // Use `fontSize` `fontFamily` to check whether font properties are defined.\n  return (style.fontSize || style.fontFamily) && [style.fontStyle, style.fontWeight, (style.fontSize || 12) + 'px', // If font properties are defined, `fontFamily` should not be ignored.\n  style.fontFamily || 'sans-serif'].join(' ') || style.textFont || style.font;\n}\n\nexports.DEFAULT_FONT = DEFAULT_FONT;\nexports.$override = $override;\nexports.getWidth = getWidth;\nexports.getBoundingRect = getBoundingRect;\nexports.adjustTextX = adjustTextX;\nexports.adjustTextY = adjustTextY;\nexports.adjustTextPositionOnRect = adjustTextPositionOnRect;\nexports.truncateText = truncateText;\nexports.getLineHeight = getLineHeight;\nexports.measureText = measureText;\nexports.parsePlainText = parsePlainText;\nexports.parseRichText = parseRichText;\nexports.makeFont = makeFont;\n\n/***/ }),\n\n/***/ 994:\n/***/ (function(module, exports) {\n\n/**\n * 3x2矩阵操作类\n * @exports zrender/tool/matrix\n */\nvar ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * 创建一个单位矩阵\n * @return {Float32Array|Array.<number>}\n */\n\nfunction create() {\n  var out = new ArrayCtor(6);\n  identity(out);\n  return out;\n}\n/**\n * 设置矩阵为单位矩阵\n * @param {Float32Array|Array.<number>} out\n */\n\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * 复制矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m\n */\n\n\nfunction copy(out, m) {\n  out[0] = m[0];\n  out[1] = m[1];\n  out[2] = m[2];\n  out[3] = m[3];\n  out[4] = m[4];\n  out[5] = m[5];\n  return out;\n}\n/**\n * 矩阵相乘\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m1\n * @param {Float32Array|Array.<number>} m2\n */\n\n\nfunction mul(out, m1, m2) {\n  // Consider matrix.mul(m, m2, m);\n  // where out is the same as m2.\n  // So use temp variable to escape error.\n  var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n  var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n  var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n  var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n  var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n  var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = out3;\n  out[4] = out4;\n  out[5] = out5;\n  return out;\n}\n/**\n * 平移变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction translate(out, a, v) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4] + v[0];\n  out[5] = a[5] + v[1];\n  return out;\n}\n/**\n * 旋转变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {number} rad\n */\n\n\nfunction rotate(out, a, rad) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var st = Math.sin(rad);\n  var ct = Math.cos(rad);\n  out[0] = aa * ct + ab * st;\n  out[1] = -aa * st + ab * ct;\n  out[2] = ac * ct + ad * st;\n  out[3] = -ac * st + ct * ad;\n  out[4] = ct * atx + st * aty;\n  out[5] = ct * aty - st * atx;\n  return out;\n}\n/**\n * 缩放变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction scale(out, a, v) {\n  var vx = v[0];\n  var vy = v[1];\n  out[0] = a[0] * vx;\n  out[1] = a[1] * vy;\n  out[2] = a[2] * vx;\n  out[3] = a[3] * vy;\n  out[4] = a[4] * vx;\n  out[5] = a[5] * vy;\n  return out;\n}\n/**\n * 求逆矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n */\n\n\nfunction invert(out, a) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var det = aa * ad - ab * ac;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n\nexports.create = create;\nexports.identity = identity;\nexports.copy = copy;\nexports.mul = mul;\nexports.translate = translate;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.invert = invert;\n\n/***/ }),\n\n/***/ 995:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {var _config = __webpack_require__(983);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(978);\n\nvar Model = __webpack_require__(989);\n\nvar DataDiffer = __webpack_require__(1013);\n\nvar modelUtil = __webpack_require__(982);\n\n/**\n * List for data storage\n * @module echarts/data/List\n */\nvar isObject = zrUtil.isObject;\nvar UNDEFINED = 'undefined';\nvar globalObj = typeof window === UNDEFINED ? global : window;\nvar dataCtors = {\n  'float': typeof globalObj.Float64Array === UNDEFINED ? Array : globalObj.Float64Array,\n  'int': typeof globalObj.Int32Array === UNDEFINED ? Array : globalObj.Int32Array,\n  // Ordinal data type can be string or int\n  'ordinal': Array,\n  'number': Array,\n  'time': Array\n};\nvar TRANSFERABLE_PROPERTIES = ['stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'];\n\nfunction transferProperties(a, b) {\n  zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n    if (b.hasOwnProperty(propName)) {\n      a[propName] = b[propName];\n    }\n  });\n  a.__wrappedMethods = b.__wrappedMethods;\n}\n\nfunction DefaultDataProvider(dataArray) {\n  this._array = dataArray || [];\n}\n\nDefaultDataProvider.prototype.pure = false;\n\nDefaultDataProvider.prototype.count = function () {\n  return this._array.length;\n};\n\nDefaultDataProvider.prototype.getItem = function (idx) {\n  return this._array[idx];\n};\n/**\n * @constructor\n * @alias module:echarts/data/List\n *\n * @param {Array.<string|Object>} dimensions\n *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n * @param {module:echarts/model/Model} hostModel\n */\n\n\nvar List = function (dimensions, hostModel) {\n  dimensions = dimensions || ['x', 'y'];\n  var dimensionInfos = {};\n  var dimensionNames = [];\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimensionName;\n    var dimensionInfo = {};\n\n    if (typeof dimensions[i] === 'string') {\n      dimensionName = dimensions[i];\n      dimensionInfo = {\n        name: dimensionName,\n        coordDim: dimensionName,\n        coordDimIndex: 0,\n        stackable: false,\n        // Type can be 'float', 'int', 'number'\n        // Default is number, Precision of float may not enough\n        type: 'number'\n      };\n    } else {\n      dimensionInfo = dimensions[i];\n      dimensionName = dimensionInfo.name;\n      dimensionInfo.type = dimensionInfo.type || 'number';\n\n      if (!dimensionInfo.coordDim) {\n        dimensionInfo.coordDim = dimensionName;\n        dimensionInfo.coordDimIndex = 0;\n      }\n    }\n\n    dimensionInfo.otherDims = dimensionInfo.otherDims || {};\n    dimensionNames.push(dimensionName);\n    dimensionInfos[dimensionName] = dimensionInfo;\n  }\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n\n\n  this.dimensions = dimensionNames;\n  /**\n   * Infomation of each data dimension, like data type.\n   * @type {Object}\n   */\n\n  this._dimensionInfos = dimensionInfos;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.hostModel = hostModel;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.dataType;\n  /**\n   * Indices stores the indices of data subset after filtered.\n   * This data subset will be used in chart.\n   * @type {Array.<number>}\n   * @readOnly\n   */\n\n  this.indices = [];\n  /**\n   * Data storage\n   * @type {Object.<key, TypedArray|Array>}\n   * @private\n   */\n\n  this._storage = {};\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._nameList = [];\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._idList = [];\n  /**\n   * Models of data option is stored sparse for optimizing memory cost\n   * @type {Array.<module:echarts/model/Model>}\n   * @private\n   */\n\n  this._optionModels = [];\n  /**\n   * @param {module:echarts/data/List}\n   */\n\n  this.stackedOn = null;\n  /**\n   * Global visual properties after visual coding\n   * @type {Object}\n   * @private\n   */\n\n  this._visual = {};\n  /**\n   * Globel layout properties.\n   * @type {Object}\n   * @private\n   */\n\n  this._layout = {};\n  /**\n   * Item visual properties after visual coding\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemVisuals = [];\n  /**\n   * Item layout properties after layout\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemLayouts = [];\n  /**\n   * Graphic elemnents\n   * @type {Array.<module:zrender/Element>}\n   * @private\n   */\n\n  this._graphicEls = [];\n  /**\n   * @type {Array.<Array|Object>}\n   * @private\n   */\n\n  this._rawData;\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._extent;\n};\n\nvar listProto = List.prototype;\nlistProto.type = 'list';\n/**\n * If each data item has it's own option\n * @type {boolean}\n */\n\nlistProto.hasItemOption = true;\n/**\n * Get dimension name\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n * @return {string} Concrete dim name.\n */\n\nlistProto.getDimension = function (dim) {\n  if (!isNaN(dim)) {\n    dim = this.dimensions[dim] || dim;\n  }\n\n  return dim;\n};\n/**\n * Get type and stackable info of particular dimension\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n */\n\n\nlistProto.getDimensionInfo = function (dim) {\n  return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);\n};\n/**\n * Initialize from data\n * @param {Array.<Object|number|Array>} data\n * @param {Array.<string>} [nameList]\n * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n */\n\n\nlistProto.initData = function (data, nameList, dimValueGetter) {\n  data = data || [];\n  var isDataArray = zrUtil.isArray(data);\n\n  if (isDataArray) {\n    data = new DefaultDataProvider(data);\n  }\n\n  this._rawData = data; // Clear\n\n  var storage = this._storage = {};\n  var indices = this.indices = [];\n  var dimensions = this.dimensions;\n  var dimensionInfoMap = this._dimensionInfos;\n  var size = data.count();\n  var idList = [];\n  var nameRepeatCount = {};\n  var nameDimIdx;\n  nameList = nameList || []; // Init storage\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimInfo = dimensionInfoMap[dimensions[i]];\n    dimInfo.otherDims.itemName === 0 && (nameDimIdx = i);\n    var DataCtor = dataCtors[dimInfo.type];\n    storage[dimensions[i]] = new DataCtor(size);\n  }\n\n  var self = this;\n\n  if (!dimValueGetter) {\n    self.hasItemOption = false;\n  } // Default dim value getter\n\n\n  dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {\n    var value = modelUtil.getDataItemValue(dataItem); // If any dataItem is like { value: 10 }\n\n    if (modelUtil.isDataItemOption(dataItem)) {\n      self.hasItemOption = true;\n    }\n\n    return modelUtil.converDataValue(value instanceof Array ? value[dimIndex] // If value is a single number or something else not array.\n    : value, dimensionInfoMap[dimName]);\n  };\n\n  for (var i = 0; i < size; i++) {\n    // NOTICE: Try not to write things into dataItem\n    var dataItem = data.getItem(i); // Each data item is value\n    // [1, 2]\n    // 2\n    // Bar chart, line chart which uses category axis\n    // only gives the 'y' value. 'x' value is the indices of cateogry\n    // Use a tempValue to normalize the value to be a (x, y) value\n    // Store the data by dimensions\n\n    for (var k = 0; k < dimensions.length; k++) {\n      var dim = dimensions[k];\n      var dimStorage = storage[dim]; // PENDING NULL is empty or zero\n\n      dimStorage[i] = dimValueGetter(dataItem, dim, i, k);\n    }\n\n    indices.push(i);\n  } // Use the name in option and create id\n\n\n  for (var i = 0; i < size; i++) {\n    var dataItem = data.getItem(i);\n\n    if (!nameList[i] && dataItem) {\n      if (dataItem.name != null) {\n        nameList[i] = dataItem.name;\n      } else if (nameDimIdx != null) {\n        nameList[i] = storage[dimensions[nameDimIdx]][i];\n      }\n    }\n\n    var name = nameList[i] || ''; // Try using the id in option\n\n    var id = dataItem && dataItem.id;\n\n    if (!id && name) {\n      // Use name as id and add counter to avoid same name\n      nameRepeatCount[name] = nameRepeatCount[name] || 0;\n      id = name;\n\n      if (nameRepeatCount[name] > 0) {\n        id += '__ec__' + nameRepeatCount[name];\n      }\n\n      nameRepeatCount[name]++;\n    }\n\n    id && (idList[i] = id);\n  }\n\n  this._nameList = nameList;\n  this._idList = idList;\n};\n/**\n * @return {number}\n */\n\n\nlistProto.count = function () {\n  return this.indices.length;\n};\n/**\n * Get value. Return NaN if idx is out of range.\n * @param {string} dim Dim must be concrete name.\n * @param {number} idx\n * @param {boolean} stack\n * @return {number}\n */\n\n\nlistProto.get = function (dim, idx, stack) {\n  var storage = this._storage;\n  var dataIndex = this.indices[idx]; // If value not exists\n\n  if (dataIndex == null || !storage[dim]) {\n    return NaN;\n  }\n\n  var value = storage[dim][dataIndex]; // FIXME ordinal data type is not stackable\n\n  if (stack) {\n    var dimensionInfo = this._dimensionInfos[dim];\n\n    if (dimensionInfo && dimensionInfo.stackable) {\n      var stackedOn = this.stackedOn;\n\n      while (stackedOn) {\n        // Get no stacked data of stacked on\n        var stackedValue = stackedOn.get(dim, idx); // Considering positive stack, negative stack and empty data\n\n        if (value >= 0 && stackedValue > 0 || // Positive stack\n        value <= 0 && stackedValue < 0 // Negative stack\n        ) {\n            value += stackedValue;\n          }\n\n        stackedOn = stackedOn.stackedOn;\n      }\n    }\n  }\n\n  return value;\n};\n/**\n * Get value for multi dimensions.\n * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n * @param {number} idx\n * @param {boolean} stack\n * @return {number}\n */\n\n\nlistProto.getValues = function (dimensions, idx, stack) {\n  var values = [];\n\n  if (!zrUtil.isArray(dimensions)) {\n    stack = idx;\n    idx = dimensions;\n    dimensions = this.dimensions;\n  }\n\n  for (var i = 0, len = dimensions.length; i < len; i++) {\n    values.push(this.get(dimensions[i], idx, stack));\n  }\n\n  return values;\n};\n/**\n * If value is NaN. Inlcuding '-'\n * @param {string} dim\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.hasValue = function (idx) {\n  var dimensions = this.dimensions;\n  var dimensionInfos = this._dimensionInfos;\n\n  for (var i = 0, len = dimensions.length; i < len; i++) {\n    if ( // Ordinal type can be string or number\n    dimensionInfos[dimensions[i]].type !== 'ordinal' && isNaN(this.get(dimensions[i], idx))) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Get extent of data in one dimension\n * @param {string} dim\n * @param {boolean} stack\n * @param {Function} filter\n */\n\n\nlistProto.getDataExtent = function (dim, stack, filter) {\n  dim = this.getDimension(dim);\n  var dimData = this._storage[dim];\n  var dimInfo = this.getDimensionInfo(dim);\n  stack = dimInfo && dimInfo.stackable && stack;\n  var dimExtent = (this._extent || (this._extent = {}))[dim + !!stack];\n  var value;\n\n  if (dimExtent) {\n    return dimExtent;\n  } // var dimInfo = this._dimensionInfos[dim];\n\n\n  if (dimData) {\n    var min = Infinity;\n    var max = -Infinity; // var isOrdinal = dimInfo.type === 'ordinal';\n\n    for (var i = 0, len = this.count(); i < len; i++) {\n      value = this.get(dim, i, stack); // FIXME\n      // if (isOrdinal && typeof value === 'string') {\n      //     value = zrUtil.indexOf(dimData, value);\n      // }\n\n      if (!filter || filter(value, dim, i)) {\n        value < min && (min = value);\n        value > max && (max = value);\n      }\n    }\n\n    return this._extent[dim + !!stack] = [min, max];\n  } else {\n    return [Infinity, -Infinity];\n  }\n};\n/**\n * Get sum of data in one dimension\n * @param {string} dim\n * @param {boolean} stack\n */\n\n\nlistProto.getSum = function (dim, stack) {\n  var dimData = this._storage[dim];\n  var sum = 0;\n\n  if (dimData) {\n    for (var i = 0, len = this.count(); i < len; i++) {\n      var value = this.get(dim, i, stack);\n\n      if (!isNaN(value)) {\n        sum += value;\n      }\n    }\n  }\n\n  return sum;\n};\n/**\n * Retreive the index with given value\n * @param {number} idx\n * @param {number} value\n * @return {number}\n */\n// FIXME Precision of float value\n\n\nlistProto.indexOf = function (dim, value) {\n  var storage = this._storage;\n  var dimData = storage[dim];\n  var indices = this.indices;\n\n  if (dimData) {\n    for (var i = 0, len = indices.length; i < len; i++) {\n      var rawIndex = indices[i];\n\n      if (dimData[rawIndex] === value) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index with given name\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfName = function (name) {\n  var indices = this.indices;\n  var nameList = this._nameList;\n\n  for (var i = 0, len = indices.length; i < len; i++) {\n    var rawIndex = indices[i];\n\n    if (nameList[rawIndex] === name) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index with given raw data index\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfRawIndex = function (rawIndex) {\n  // Indices are ascending\n  var indices = this.indices; // If rawIndex === dataIndex\n\n  var rawDataIndex = indices[rawIndex];\n\n  if (rawDataIndex != null && rawDataIndex === rawIndex) {\n    return rawIndex;\n  }\n\n  var left = 0;\n  var right = indices.length - 1;\n\n  while (left <= right) {\n    var mid = (left + right) / 2 | 0;\n\n    if (indices[mid] < rawIndex) {\n      left = mid + 1;\n    } else if (indices[mid] > rawIndex) {\n      right = mid - 1;\n    } else {\n      return mid;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index of nearest value\n * @param {string} dim\n * @param {number} value\n * @param {boolean} stack If given value is after stacked\n * @param {number} [maxDistance=Infinity]\n * @return {Array.<number>} Considere multiple points has the same value.\n */\n\n\nlistProto.indicesOfNearest = function (dim, value, stack, maxDistance) {\n  var storage = this._storage;\n  var dimData = storage[dim];\n  var nearestIndices = [];\n\n  if (!dimData) {\n    return nearestIndices;\n  }\n\n  if (maxDistance == null) {\n    maxDistance = Infinity;\n  }\n\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n\n  for (var i = 0, len = this.count(); i < len; i++) {\n    var diff = value - this.get(dim, i, stack);\n    var dist = Math.abs(diff);\n\n    if (diff <= maxDistance && dist <= minDist) {\n      // For the case of two data are same on xAxis, which has sequence data.\n      // Show the nearest index\n      // https://github.com/ecomfe/echarts/issues/2869\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        nearestIndices.length = 0;\n      }\n\n      nearestIndices.push(i);\n    }\n  }\n\n  return nearestIndices;\n};\n/**\n * Get raw data index\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawIndex = function (idx) {\n  var rawIdx = this.indices[idx];\n  return rawIdx == null ? -1 : rawIdx;\n};\n/**\n * Get raw data item\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawDataItem = function (idx) {\n  return this._rawData.getItem(this.getRawIndex(idx));\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getName = function (idx) {\n  return this._nameList[this.indices[idx]] || '';\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getId = function (idx) {\n  return this._idList[this.indices[idx]] || this.getRawIndex(idx) + '';\n};\n\nfunction normalizeDimensions(dimensions) {\n  if (!zrUtil.isArray(dimensions)) {\n    dimensions = [dimensions];\n  }\n\n  return dimensions;\n}\n/**\n * Data iteration\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n *\n * @example\n *  list.each('x', function (x, idx) {});\n *  list.each(['x', 'y'], function (x, y, idx) {});\n *  list.each(function (idx) {})\n */\n\n\nlistProto.each = function (dims, cb, stack, context) {\n  if (typeof dims === 'function') {\n    context = stack;\n    stack = cb;\n    cb = dims;\n    dims = [];\n  }\n\n  dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n  var value = [];\n  var dimSize = dims.length;\n  var indices = this.indices;\n  context = context || this;\n\n  for (var i = 0; i < indices.length; i++) {\n    // Simple optimization\n    switch (dimSize) {\n      case 0:\n        cb.call(context, i);\n        break;\n\n      case 1:\n        cb.call(context, this.get(dims[0], i, stack), i);\n        break;\n\n      case 2:\n        cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n        break;\n\n      default:\n        for (var k = 0; k < dimSize; k++) {\n          value[k] = this.get(dims[k], i, stack);\n        } // Index\n\n\n        value[k] = i;\n        cb.apply(context, value);\n    }\n  }\n};\n/**\n * Data filter\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n */\n\n\nlistProto.filterSelf = function (dimensions, cb, stack, context) {\n  if (typeof dimensions === 'function') {\n    context = stack;\n    stack = cb;\n    cb = dimensions;\n    dimensions = [];\n  }\n\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var newIndices = [];\n  var value = [];\n  var dimSize = dimensions.length;\n  var indices = this.indices;\n  context = context || this;\n\n  for (var i = 0; i < indices.length; i++) {\n    var keep; // Simple optimization\n\n    if (!dimSize) {\n      keep = cb.call(context, i);\n    } else if (dimSize === 1) {\n      keep = cb.call(context, this.get(dimensions[0], i, stack), i);\n    } else {\n      for (var k = 0; k < dimSize; k++) {\n        value[k] = this.get(dimensions[k], i, stack);\n      }\n\n      value[k] = i;\n      keep = cb.apply(context, value);\n    }\n\n    if (keep) {\n      newIndices.push(indices[i]);\n    }\n  }\n\n  this.indices = newIndices; // Reset data extent\n\n  this._extent = {};\n  return this;\n};\n/**\n * Data mapping to a plain array\n * @param {string|Array.<string>} [dimensions]\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.mapArray = function (dimensions, cb, stack, context) {\n  if (typeof dimensions === 'function') {\n    context = stack;\n    stack = cb;\n    cb = dimensions;\n    dimensions = [];\n  }\n\n  var result = [];\n  this.each(dimensions, function () {\n    result.push(cb && cb.apply(this, arguments));\n  }, stack, context);\n  return result;\n};\n\nfunction cloneListForMapAndSample(original, excludeDimensions) {\n  var allDimensions = original.dimensions;\n  var list = new List(zrUtil.map(allDimensions, original.getDimensionInfo, original), original.hostModel); // FIXME If needs stackedOn, value may already been stacked\n\n  transferProperties(list, original);\n  var storage = list._storage = {};\n  var originalStorage = original._storage; // Init storage\n\n  for (var i = 0; i < allDimensions.length; i++) {\n    var dim = allDimensions[i];\n    var dimStore = originalStorage[dim];\n\n    if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n      storage[dim] = new dimStore.constructor(originalStorage[dim].length);\n    } else {\n      // Direct reference for other dimensions\n      storage[dim] = originalStorage[dim];\n    }\n  }\n\n  return list;\n}\n/**\n * Data mapping to a new List with given dimensions\n * @param {string|Array.<string>} dimensions\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.map = function (dimensions, cb, stack, context) {\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var list = cloneListForMapAndSample(this, dimensions); // Following properties are all immutable.\n  // So we can reference to the same value\n\n  var indices = list.indices = this.indices;\n  var storage = list._storage;\n  var tmpRetValue = [];\n  this.each(dimensions, function () {\n    var idx = arguments[arguments.length - 1];\n    var retValue = cb && cb.apply(this, arguments);\n\n    if (retValue != null) {\n      // a number\n      if (typeof retValue === 'number') {\n        tmpRetValue[0] = retValue;\n        retValue = tmpRetValue;\n      }\n\n      for (var i = 0; i < retValue.length; i++) {\n        var dim = dimensions[i];\n        var dimStore = storage[dim];\n        var rawIdx = indices[idx];\n\n        if (dimStore) {\n          dimStore[rawIdx] = retValue[i];\n        }\n      }\n    }\n  }, stack, context);\n  return list;\n};\n/**\n * Large data down sampling on given dimension\n * @param {string} dimension\n * @param {number} rate\n * @param {Function} sampleValue\n * @param {Function} sampleIndex Sample index for name and id\n */\n\n\nlistProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n  var list = cloneListForMapAndSample(this, [dimension]);\n  var storage = this._storage;\n  var targetStorage = list._storage;\n  var originalIndices = this.indices;\n  var indices = list.indices = [];\n  var frameValues = [];\n  var frameIndices = [];\n  var frameSize = Math.floor(1 / rate);\n  var dimStore = targetStorage[dimension];\n  var len = this.count(); // Copy data from original data\n\n  for (var i = 0; i < storage[dimension].length; i++) {\n    targetStorage[dimension][i] = storage[dimension][i];\n  }\n\n  for (var i = 0; i < len; i += frameSize) {\n    // Last frame\n    if (frameSize > len - i) {\n      frameSize = len - i;\n      frameValues.length = frameSize;\n    }\n\n    for (var k = 0; k < frameSize; k++) {\n      var idx = originalIndices[i + k];\n      frameValues[k] = dimStore[idx];\n      frameIndices[k] = idx;\n    }\n\n    var value = sampleValue(frameValues);\n    var idx = frameIndices[sampleIndex(frameValues, value) || 0]; // Only write value on the filtered data\n\n    dimStore[idx] = value;\n    indices.push(idx);\n  }\n\n  return list;\n};\n/**\n * Get model of one data item.\n *\n * @param {number} idx\n */\n// FIXME Model proxy ?\n\n\nlistProto.getItemModel = function (idx) {\n  var hostModel = this.hostModel;\n  idx = this.indices[idx];\n  return new Model(this._rawData.getItem(idx), hostModel, hostModel && hostModel.ecModel);\n};\n/**\n * Create a data differ\n * @param {module:echarts/data/List} otherList\n * @return {module:echarts/data/DataDiffer}\n */\n\n\nlistProto.diff = function (otherList) {\n  var idList = this._idList;\n  var otherIdList = otherList && otherList._idList;\n  var val; // Use prefix to avoid index to be the same as otherIdList[idx],\n  // which will cause weird udpate animation.\n\n  var prefix = 'e\\0\\0';\n  return new DataDiffer(otherList ? otherList.indices : [], this.indices, function (idx) {\n    return (val = otherIdList[idx]) != null ? val : prefix + idx;\n  }, function (idx) {\n    return (val = idList[idx]) != null ? val : prefix + idx;\n  });\n};\n/**\n * Get visual property.\n * @param {string} key\n */\n\n\nlistProto.getVisual = function (key) {\n  var visual = this._visual;\n  return visual && visual[key];\n};\n/**\n * Set visual property\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setVisual('color', color);\n *  setVisual({\n *      'color': color\n *  });\n */\n\n\nlistProto.setVisual = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setVisual(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._visual = this._visual || {};\n  this._visual[key] = val;\n};\n/**\n * Set layout property.\n * @param {string|Object} key\n * @param {*} [val]\n */\n\n\nlistProto.setLayout = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setLayout(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._layout[key] = val;\n};\n/**\n * Get layout property.\n * @param  {string} key.\n * @return {*}\n */\n\n\nlistProto.getLayout = function (key) {\n  return this._layout[key];\n};\n/**\n * Get layout of single data item\n * @param {number} idx\n */\n\n\nlistProto.getItemLayout = function (idx) {\n  return this._itemLayouts[idx];\n};\n/**\n * Set layout of single data item\n * @param {number} idx\n * @param {Object} layout\n * @param {boolean=} [merge=false]\n */\n\n\nlistProto.setItemLayout = function (idx, layout, merge) {\n  this._itemLayouts[idx] = merge ? zrUtil.extend(this._itemLayouts[idx] || {}, layout) : layout;\n};\n/**\n * Clear all layout of single data item\n */\n\n\nlistProto.clearItemLayouts = function () {\n  this._itemLayouts.length = 0;\n};\n/**\n * Get visual property of single data item\n * @param {number} idx\n * @param {string} key\n * @param {boolean} [ignoreParent=false]\n */\n\n\nlistProto.getItemVisual = function (idx, key, ignoreParent) {\n  var itemVisual = this._itemVisuals[idx];\n  var val = itemVisual && itemVisual[key];\n\n  if (val == null && !ignoreParent) {\n    // Use global visual property\n    return this.getVisual(key);\n  }\n\n  return val;\n};\n/**\n * Set visual property of single data item\n *\n * @param {number} idx\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setItemVisual(0, 'color', color);\n *  setItemVisual(0, {\n *      'color': color\n *  });\n */\n\n\nlistProto.setItemVisual = function (idx, key, value) {\n  var itemVisual = this._itemVisuals[idx] || {};\n  this._itemVisuals[idx] = itemVisual;\n\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        itemVisual[name] = key[name];\n      }\n    }\n\n    return;\n  }\n\n  itemVisual[key] = value;\n};\n/**\n * Clear itemVisuals and list visual.\n */\n\n\nlistProto.clearAllVisual = function () {\n  this._visual = {};\n  this._itemVisuals = [];\n};\n\nvar setItemDataAndSeriesIndex = function (child) {\n  child.seriesIndex = this.seriesIndex;\n  child.dataIndex = this.dataIndex;\n  child.dataType = this.dataType;\n};\n/**\n * Set graphic element relative to data. It can be set as null\n * @param {number} idx\n * @param {module:zrender/Element} [el]\n */\n\n\nlistProto.setItemGraphicEl = function (idx, el) {\n  var hostModel = this.hostModel;\n\n  if (el) {\n    // Add data index and series index for indexing the data by element\n    // Useful in tooltip\n    el.dataIndex = idx;\n    el.dataType = this.dataType;\n    el.seriesIndex = hostModel && hostModel.seriesIndex;\n\n    if (el.type === 'group') {\n      el.traverse(setItemDataAndSeriesIndex, el);\n    }\n  }\n\n  this._graphicEls[idx] = el;\n};\n/**\n * @param {number} idx\n * @return {module:zrender/Element}\n */\n\n\nlistProto.getItemGraphicEl = function (idx) {\n  return this._graphicEls[idx];\n};\n/**\n * @param {Function} cb\n * @param {*} context\n */\n\n\nlistProto.eachItemGraphicEl = function (cb, context) {\n  zrUtil.each(this._graphicEls, function (el, idx) {\n    if (el) {\n      cb && cb.call(context, el, idx);\n    }\n  });\n};\n/**\n * Shallow clone a new list except visual and layout properties, and graph elements.\n * New list only change the indices.\n */\n\n\nlistProto.cloneShallow = function () {\n  var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n  var list = new List(dimensionInfoList, this.hostModel); // FIXME\n\n  list._storage = this._storage;\n  transferProperties(list, this); // Clone will not change the data extent and indices\n\n  list.indices = this.indices.slice();\n\n  if (this._extent) {\n    list._extent = zrUtil.extend({}, this._extent);\n  }\n\n  return list;\n};\n/**\n * Wrap some method to add more feature\n * @param {string} methodName\n * @param {Function} injectFunction\n */\n\n\nlistProto.wrapMethod = function (methodName, injectFunction) {\n  var originalMethod = this[methodName];\n\n  if (typeof originalMethod !== 'function') {\n    return;\n  }\n\n  this.__wrappedMethods = this.__wrappedMethods || [];\n\n  this.__wrappedMethods.push(methodName);\n\n  this[methodName] = function () {\n    var res = originalMethod.apply(this, arguments);\n    return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n  };\n}; // Methods that create a new list based on this list should be listed here.\n// Notice that those method should `RETURN` the new list.\n\n\nlistProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map']; // Methods that change indices of this list should be listed here.\n\nlistProto.CHANGABLE_METHODS = ['filterSelf'];\nvar _default = List;\nmodule.exports = _default;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(23)))\n\n/***/ }),\n\n/***/ 996:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(983);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(978);\n\nvar textContain = __webpack_require__(993);\n\nvar OrdinalScale = __webpack_require__(1133);\n\nvar IntervalScale = __webpack_require__(1020);\n\nvar Scale = __webpack_require__(1014);\n\nvar numberUtil = __webpack_require__(981);\n\n__webpack_require__(1134);\n\n__webpack_require__(1135);\n\n/**\n * Get axis scale extent before niced.\n * Item of returned array can only be number (including Infinity and NaN).\n */\nfunction getScaleExtent(scale, model) {\n  var scaleType = scale.type;\n  var min = model.getMin();\n  var max = model.getMax();\n  var fixMin = min != null;\n  var fixMax = max != null;\n  var originalExtent = scale.getExtent();\n  var axisDataLen;\n  var boundaryGap;\n  var span;\n\n  if (scaleType === 'ordinal') {\n    axisDataLen = (model.get('data') || []).length;\n  } else {\n    boundaryGap = model.get('boundaryGap');\n\n    if (!zrUtil.isArray(boundaryGap)) {\n      boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n    }\n\n    if (typeof boundaryGap[0] === 'boolean') {\n      boundaryGap = [0, 0];\n    }\n\n    boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n    boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n    span = originalExtent[1] - originalExtent[0] || Math.abs(originalExtent[0]);\n  } // Notice: When min/max is not set (that is, when there are null/undefined,\n  // which is the most common case), these cases should be ensured:\n  // (1) For 'ordinal', show all axis.data.\n  // (2) For others:\n  //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n  //      disabled).\n  //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n  //      be the result that originalExtent enlarged by boundaryGap.\n  // (3) If no data, it should be ensured that `scale.setBlank` is set.\n  // FIXME\n  // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\n  // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\n  // that the results processed by boundaryGap are positive/negative?\n\n\n  if (min == null) {\n    min = scaleType === 'ordinal' ? axisDataLen ? 0 : NaN : originalExtent[0] - boundaryGap[0] * span;\n  }\n\n  if (max == null) {\n    max = scaleType === 'ordinal' ? axisDataLen ? axisDataLen - 1 : NaN : originalExtent[1] + boundaryGap[1] * span;\n  }\n\n  if (min === 'dataMin') {\n    min = originalExtent[0];\n  } else if (typeof min === 'function') {\n    min = min({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  if (max === 'dataMax') {\n    max = originalExtent[1];\n  } else if (typeof max === 'function') {\n    max = max({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  (min == null || !isFinite(min)) && (min = NaN);\n  (max == null || !isFinite(max)) && (max = NaN);\n  scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max)); // Evaluate if axis needs cross zero\n\n  if (model.getNeedCrossZero()) {\n    // Axis is over zero and min is not set\n    if (min > 0 && max > 0 && !fixMin) {\n      min = 0;\n    } // Axis is under zero and max is not set\n\n\n    if (min < 0 && max < 0 && !fixMax) {\n      max = 0;\n    }\n  }\n\n  return [min, max];\n}\n\nfunction niceScaleExtent(scale, model) {\n  var extent = getScaleExtent(scale, model);\n  var fixMin = model.getMin() != null;\n  var fixMax = model.getMax() != null;\n  var splitNumber = model.get('splitNumber');\n\n  if (scale.type === 'log') {\n    scale.base = model.get('logBase');\n  }\n\n  var scaleType = scale.type;\n  scale.setExtent(extent[0], extent[1]);\n  scale.niceExtent({\n    splitNumber: splitNumber,\n    fixMin: fixMin,\n    fixMax: fixMax,\n    minInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('minInterval') : null,\n    maxInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('maxInterval') : null\n  }); // If some one specified the min, max. And the default calculated interval\n  // is not good enough. He can specify the interval. It is often appeared\n  // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n  // to be 60.\n  // FIXME\n\n  var interval = model.get('interval');\n\n  if (interval != null) {\n    scale.setInterval && scale.setInterval(interval);\n  }\n}\n/**\n * @param {module:echarts/model/Model} model\n * @param {string} [axisType] Default retrieve from model.type\n * @return {module:echarts/scale/*}\n */\n\n\nfunction createScaleByModel(model, axisType) {\n  axisType = axisType || model.get('type');\n\n  if (axisType) {\n    switch (axisType) {\n      // Buildin scale\n      case 'category':\n        return new OrdinalScale(model.getCategories(), [Infinity, -Infinity]);\n\n      case 'value':\n        return new IntervalScale();\n      // Extended scale, like time and log\n\n      default:\n        return (Scale.getClass(axisType) || IntervalScale).create(model);\n    }\n  }\n}\n/**\n * Check if the axis corss 0\n */\n\n\nfunction ifAxisCrossZero(axis) {\n  var dataExtent = axis.scale.getExtent();\n  var min = dataExtent[0];\n  var max = dataExtent[1];\n  return !(min > 0 && max > 0 || min < 0 && max < 0);\n}\n/**\n * @param {Array.<number>} tickCoords In axis self coordinate.\n * @param {Array.<string>} labels\n * @param {string} font\n * @param {number} axisRotate 0: towards right horizontally, clock-wise is negative.\n * @param {number} [labelRotate=0] 0: towards right horizontally, clock-wise is negative.\n * @return {number}\n */\n\n\nfunction getAxisLabelInterval(tickCoords, labels, font, axisRotate, labelRotate) {\n  var textSpaceTakenRect;\n  var autoLabelInterval = 0;\n  var accumulatedLabelInterval = 0;\n  var rotation = (axisRotate - labelRotate) / 180 * Math.PI;\n  var step = 1;\n\n  if (labels.length > 40) {\n    // Simple optimization for large amount of labels\n    step = Math.floor(labels.length / 40);\n  }\n\n  for (var i = 0; i < tickCoords.length; i += step) {\n    var tickCoord = tickCoords[i]; // Not precise, do not consider align and vertical align\n    // and each distance from axis line yet.\n\n    var rect = textContain.getBoundingRect(labels[i], font, 'center', 'top');\n    rect.x += tickCoord * Math.cos(rotation);\n    rect.y += tickCoord * Math.sin(rotation); // Magic number\n\n    rect.width *= 1.3;\n    rect.height *= 1.3;\n\n    if (!textSpaceTakenRect) {\n      textSpaceTakenRect = rect.clone();\n    } // There is no space for current label;\n    else if (textSpaceTakenRect.intersect(rect)) {\n        accumulatedLabelInterval++;\n        autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n      } else {\n        textSpaceTakenRect.union(rect); // Reset\n\n        accumulatedLabelInterval = 0;\n      }\n  }\n\n  if (autoLabelInterval === 0 && step > 1) {\n    return step;\n  }\n\n  return (autoLabelInterval + 1) * step - 1;\n}\n/**\n * @param {Object} axis\n * @param {Function} labelFormatter\n * @return {Array.<string>}\n */\n\n\nfunction getFormattedLabels(axis, labelFormatter) {\n  var scale = axis.scale;\n  var labels = scale.getTicksLabels();\n  var ticks = scale.getTicks();\n\n  if (typeof labelFormatter === 'string') {\n    labelFormatter = function (tpl) {\n      return function (val) {\n        return tpl.replace('{value}', val != null ? val : '');\n      };\n    }(labelFormatter); // Consider empty array\n\n\n    return zrUtil.map(labels, labelFormatter);\n  } else if (typeof labelFormatter === 'function') {\n    return zrUtil.map(ticks, function (tick, idx) {\n      return labelFormatter(getAxisRawValue(axis, tick), idx);\n    }, this);\n  } else {\n    return labels;\n  }\n}\n\nfunction getAxisRawValue(axis, value) {\n  // In category axis with data zoom, tick is not the original\n  // index of axis.data. So tick should not be exposed to user\n  // in category axis.\n  return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n}\n\nexports.getScaleExtent = getScaleExtent;\nexports.niceScaleExtent = niceScaleExtent;\nexports.createScaleByModel = createScaleByModel;\nexports.ifAxisCrossZero = ifAxisCrossZero;\nexports.getAxisLabelInterval = getAxisLabelInterval;\nexports.getFormattedLabels = getFormattedLabels;\nexports.getAxisRawValue = getAxisRawValue;\n\n/***/ }),\n\n/***/ 997:\n/***/ (function(module, exports) {\n\nvar features = {};\n\nfunction register(name, ctor) {\n  features[name] = ctor;\n}\n\nfunction get(name) {\n  return features[name];\n}\n\nexports.register = register;\nexports.get = get;\n\n/***/ }),\n\n/***/ 998:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Eventful = __webpack_require__(1001);\n\nexports.Dispatcher = Eventful;\n\nvar env = __webpack_require__(986);\n\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\nvar isDomLevel2 = typeof window !== 'undefined' && !!window.addEventListener;\nvar MOUSE_EVENT_REG = /^(?:mouse|pointer|contextmenu|drag|drop)|click/;\n\nfunction getBoundingClientRect(el) {\n  // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n  return el.getBoundingClientRect ? el.getBoundingClientRect() : {\n    left: 0,\n    top: 0\n  };\n} // `calculate` is optional, default false\n\n\nfunction clientToLocal(el, e, out, calculate) {\n  out = out || {}; // According to the W3C Working Draft, offsetX and offsetY should be relative\n  // to the padding edge of the target element. The only browser using this convention\n  // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n  // not support the properties.\n  // (see http://www.jacklmoore.com/notes/mouse-position/)\n  // In zr painter.dom, padding edge equals to border edge.\n  // FIXME\n  // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n  // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n  // is too complex. So css-transfrom dont support in this case temporarily.\n\n  if (calculate || !env.canvasSupported) {\n    defaultGetZrXY(el, e, out);\n  } // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n  // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n  // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n  // zoom-factor, overflow / opacity layers, transforms ...)\n  // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n  // <https://bugs.jquery.com/ticket/8523#comment:14>\n  // BTW3, In ff, offsetX/offsetY is always 0.\n  else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n      out.zrX = e.layerX;\n      out.zrY = e.layerY;\n    } // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n    else if (e.offsetX != null) {\n        out.zrX = e.offsetX;\n        out.zrY = e.offsetY;\n      } // For some other device, e.g., IOS safari.\n      else {\n          defaultGetZrXY(el, e, out);\n        }\n\n  return out;\n}\n\nfunction defaultGetZrXY(el, e, out) {\n  // This well-known method below does not support css transform.\n  var box = getBoundingClientRect(el);\n  out.zrX = e.clientX - box.left;\n  out.zrY = e.clientY - box.top;\n}\n/**\n * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n * `calculate` is optional, default false.\n */\n\n\nfunction normalizeEvent(el, e, calculate) {\n  e = e || window.event;\n\n  if (e.zrX != null) {\n    return e;\n  }\n\n  var eventType = e.type;\n  var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n  if (!isTouch) {\n    clientToLocal(el, e, e, calculate);\n    e.zrDelta = e.wheelDelta ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n  } else {\n    var touch = eventType != 'touchend' ? e.targetTouches[0] : e.changedTouches[0];\n    touch && clientToLocal(el, touch, e, calculate);\n  } // Add which for click: 1 === left; 2 === middle; 3 === right; otherwise: 0;\n  // See jQuery: https://github.com/jquery/jquery/blob/master/src/event.js\n  // If e.which has been defined, if may be readonly,\n  // see: https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/which\n\n\n  var button = e.button;\n\n  if (e.which == null && button !== undefined && MOUSE_EVENT_REG.test(e.type)) {\n    e.which = button & 1 ? 1 : button & 2 ? 3 : button & 4 ? 2 : 0;\n  }\n\n  return e;\n}\n\nfunction addEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    el.addEventListener(name, handler);\n  } else {\n    el.attachEvent('on' + name, handler);\n  }\n}\n\nfunction removeEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    el.removeEventListener(name, handler);\n  } else {\n    el.detachEvent('on' + name, handler);\n  }\n}\n/**\n * preventDefault and stopPropagation.\n * Notice: do not do that in zrender. Upper application\n * do that if necessary.\n *\n * @memberOf module:zrender/core/event\n * @method\n * @param {Event} e : event对象\n */\n\n\nvar stop = isDomLevel2 ? function (e) {\n  e.preventDefault();\n  e.stopPropagation();\n  e.cancelBubble = true;\n} : function (e) {\n  e.returnValue = false;\n  e.cancelBubble = true;\n};\n\nfunction notLeftMouse(e) {\n  // If e.which is undefined, considered as left mouse event.\n  return e.which > 1;\n} // 做向上兼容\n\n\nexports.clientToLocal = clientToLocal;\nexports.normalizeEvent = normalizeEvent;\nexports.addEventListener = addEventListener;\nexports.removeEventListener = removeEventListener;\nexports.stop = stop;\nexports.notLeftMouse = notLeftMouse;\n\n/***/ }),\n\n/***/ 999:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _vector = __webpack_require__(984);\n\nvar v2Create = _vector.create;\nvar v2DistSquare = _vector.distSquare;\n\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\nvar mathPow = Math.pow;\nvar mathSqrt = Math.sqrt;\nvar EPSILON = 1e-8;\nvar EPSILON_NUMERIC = 1e-4;\nvar THREE_SQRT = mathSqrt(3);\nvar ONE_THIRD = 1 / 3; // 临时变量\n\nvar _v0 = v2Create();\n\nvar _v1 = v2Create();\n\nvar _v2 = v2Create();\n\nfunction isAroundZero(val) {\n  return val > -EPSILON && val < EPSILON;\n}\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * 计算三次贝塞尔值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return onet * onet * (onet * p0 + 3 * t * p1) + t * t * (t * p3 + 3 * onet * p2);\n}\n/**\n * 计算三次贝塞尔导数值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicDerivativeAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return 3 * (((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet + (p3 - p2) * t * t);\n}\n/**\n * 计算三次贝塞尔方程根，使用盛金公式\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} val\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction cubicRootAt(p0, p1, p2, p3, val, roots) {\n  // Evaluate roots of cubic functions\n  var a = p3 + 3 * (p1 - p2) - p0;\n  var b = 3 * (p2 - p1 * 2 + p0);\n  var c = 3 * (p1 - p0);\n  var d = p0 - val;\n  var A = b * b - 3 * a * c;\n  var B = b * c - 9 * a * d;\n  var C = c * c - 3 * b * d;\n  var n = 0;\n\n  if (isAroundZero(A) && isAroundZero(B)) {\n    if (isAroundZero(b)) {\n      roots[0] = 0;\n    } else {\n      var t1 = -c / b; //t1, t2, t3, b is not zero\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = B * B - 4 * A * C;\n\n    if (isAroundZero(disc)) {\n      var K = B / A;\n      var t1 = -b / a + K; // t1, a is not zero\n\n      var t2 = -K / 2; // t2, t3\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n      var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n\n      if (Y1 < 0) {\n        Y1 = -mathPow(-Y1, ONE_THIRD);\n      } else {\n        Y1 = mathPow(Y1, ONE_THIRD);\n      }\n\n      if (Y2 < 0) {\n        Y2 = -mathPow(-Y2, ONE_THIRD);\n      } else {\n        Y2 = mathPow(Y2, ONE_THIRD);\n      }\n\n      var t1 = (-b - (Y1 + Y2)) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else {\n      var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n      var theta = Math.acos(T) / 3;\n      var ASqrt = mathSqrt(A);\n      var tmp = Math.cos(theta);\n      var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n      var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n      var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n\n      if (t3 >= 0 && t3 <= 1) {\n        roots[n++] = t3;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算三次贝塞尔方程极限值的位置\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {Array.<number>} extrema\n * @return {number} 有效数目\n */\n\n\nfunction cubicExtrema(p0, p1, p2, p3, extrema) {\n  var b = 6 * p2 - 12 * p1 + 6 * p0;\n  var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n  var c = 3 * p1 - 3 * p0;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      extrema[0] = -b / (2 * a);\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        extrema[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 细分三次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction cubicSubdivide(p0, p1, p2, p3, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p23 = (p3 - p2) * t + p2;\n  var p012 = (p12 - p01) * t + p01;\n  var p123 = (p23 - p12) * t + p12;\n  var p0123 = (p123 - p012) * t + p012; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012;\n  out[3] = p0123; // Seg1\n\n  out[4] = p0123;\n  out[5] = p123;\n  out[6] = p23;\n  out[7] = p3;\n}\n/**\n * 投射点到三次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} [out] 投射点\n * @return {number}\n */\n\n\nfunction cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  var prev;\n  var next;\n  var d1;\n  var d2;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n    _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n    d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    prev = t - interval;\n    next = t + interval; // t - interval\n\n    _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n    _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n    d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = cubicAt(x0, x1, x2, x3, next);\n      _v2[1] = cubicAt(y0, y1, y2, y3, next);\n      d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = cubicAt(x0, x1, x2, x3, t);\n    out[1] = cubicAt(y0, y1, y2, y3, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n/**\n * 计算二次方贝塞尔值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticAt(p0, p1, p2, t) {\n  var onet = 1 - t;\n  return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n}\n/**\n * 计算二次方贝塞尔导数值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticDerivativeAt(p0, p1, p2, t) {\n  return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n}\n/**\n * 计算二次方贝塞尔方程根\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction quadraticRootAt(p0, p1, p2, val, roots) {\n  var a = p0 - 2 * p1 + p2;\n  var b = 2 * (p1 - p0);\n  var c = p0 - val;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      var t1 = -b / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算二次贝塞尔方程极限值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @return {number}\n */\n\n\nfunction quadraticExtremum(p0, p1, p2) {\n  var divider = p0 + p2 - 2 * p1;\n\n  if (divider === 0) {\n    // p1 is center of p0 and p2\n    return 0.5;\n  } else {\n    return (p0 - p1) / divider;\n  }\n}\n/**\n * 细分二次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction quadraticSubdivide(p0, p1, p2, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p012 = (p12 - p01) * t + p01; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012; // Seg1\n\n  out[3] = p012;\n  out[4] = p12;\n  out[5] = p2;\n}\n/**\n * 投射点到二次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} out 投射点\n * @return {number}\n */\n\n\nfunction quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = quadraticAt(x0, x1, x2, _t);\n    _v1[1] = quadraticAt(y0, y1, y2, _t);\n    var d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    var prev = t - interval;\n    var next = t + interval; // t - interval\n\n    _v1[0] = quadraticAt(x0, x1, x2, prev);\n    _v1[1] = quadraticAt(y0, y1, y2, prev);\n    var d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = quadraticAt(x0, x1, x2, next);\n      _v2[1] = quadraticAt(y0, y1, y2, next);\n      var d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = quadraticAt(x0, x1, x2, t);\n    out[1] = quadraticAt(y0, y1, y2, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n\nexports.cubicAt = cubicAt;\nexports.cubicDerivativeAt = cubicDerivativeAt;\nexports.cubicRootAt = cubicRootAt;\nexports.cubicExtrema = cubicExtrema;\nexports.cubicSubdivide = cubicSubdivide;\nexports.cubicProjectPoint = cubicProjectPoint;\nexports.quadraticAt = quadraticAt;\nexports.quadraticDerivativeAt = quadraticDerivativeAt;\nexports.quadraticRootAt = quadraticRootAt;\nexports.quadraticExtremum = quadraticExtremum;\nexports.quadraticSubdivide = quadraticSubdivide;\nexports.quadraticProjectPoint = quadraticProjectPoint;\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/PieReact.26840e49.chunk.js","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar _format = require(\"../util/format\");\n\nvar formatTime = _format.formatTime;\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\nvar getTooltipMarker = _format.getTooltipMarker;\n\nvar _clazz = require(\"../util/clazz\");\n\nvar set = _clazz.set;\nvar get = _clazz.get;\n\nvar modelUtil = require(\"../util/model\");\n\nvar ComponentModel = require(\"./Component\");\n\nvar colorPaletteMixin = require(\"./mixin/colorPalette\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\nvar SeriesModel = ComponentModel.extend({\n  type: 'series.__base__',\n\n  /**\n   * @readOnly\n   */\n  seriesIndex: 0,\n  // coodinateSystem will be injected in the echarts/CoordinateSystem\n  coordinateSystem: null,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * Data provided for legend\n   * @type {Function}\n   */\n  // PENDING\n  legendDataProvider: null,\n\n  /**\n   * Access path of color for visual\n   */\n  visualColorAccessPath: 'itemStyle.normal.color',\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  init: function (option, parentModel, ecModel, extraOpt) {\n    /**\n     * @type {number}\n     * @readOnly\n     */\n    this.seriesIndex = this.componentIndex;\n    this.mergeDefaultAndTheme(option, ecModel);\n    var data = this.getInitialData(option, ecModel);\n\n    /**\n     * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n     * @private\n     */\n    set(this, 'dataBeforeProcessed', data); // If we reverse the order (make data firstly, and then make\n    // dataBeforeProcessed by cloneShallow), cloneShallow will\n    // cause data.graph.data !== data when using\n    // module:echarts/data/Graph or module:echarts/data/Tree.\n    // See module:echarts/data/helper/linkList\n\n    this.restoreData();\n  },\n\n  /**\n   * Util for merge default and theme to option\n   * @param  {Object} option\n   * @param  {module:echarts/model/Global} ecModel\n   */\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? getLayoutParams(option) : {}; // Backward compat: using subType on theme.\n    // But if name duplicate between series subType\n    // (for example: parallel) add component mainType,\n    // add suffix 'Series'.\n\n    var themeSubType = this.subType;\n\n    if (ComponentModel.hasClass(themeSubType)) {\n      themeSubType += 'Series';\n    }\n\n    zrUtil.merge(option, ecModel.getTheme().get(this.subType));\n    zrUtil.merge(option, this.getDefaultOption()); // Default label emphasis `show`\n\n    modelUtil.defaultEmphasis(option.label, ['show']);\n    this.fillDataTextStyle(option.data);\n\n    if (layoutMode) {\n      mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (newSeriesOption, ecModel) {\n    newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n    this.fillDataTextStyle(newSeriesOption.data);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n    }\n\n    var data = this.getInitialData(newSeriesOption, ecModel); // TODO Merge data?\n\n    if (data) {\n      set(this, 'data', data);\n      set(this, 'dataBeforeProcessed', data.cloneShallow());\n    }\n  },\n  fillDataTextStyle: function (data) {\n    // Default data label emphasis `show`\n    // FIXME Tree structure data ?\n    // FIXME Performance ?\n    if (data) {\n      var props = ['show'];\n\n      for (var i = 0; i < data.length; i++) {\n        if (data[i] && data[i].label) {\n          modelUtil.defaultEmphasis(data[i].label, props);\n        }\n      }\n    }\n  },\n\n  /**\n   * Init a data structure from data related option in series\n   * Must be overwritten\n   */\n  getInitialData: function () {},\n\n  /**\n   * @param {string} [dataType]\n   * @return {module:echarts/data/List}\n   */\n  getData: function (dataType) {\n    var data = get(this, 'data');\n    return dataType == null ? data : data.getLinkedData(dataType);\n  },\n\n  /**\n   * @param {module:echarts/data/List} data\n   */\n  setData: function (data) {\n    set(this, 'data', data);\n  },\n\n  /**\n   * Get data before processed\n   * @return {module:echarts/data/List}\n   */\n  getRawData: function () {\n    return get(this, 'dataBeforeProcessed');\n  },\n\n  /**\n   * Coord dimension to data dimension.\n   *\n   * By default the result is the same as dimensions of series data.\n   * But in some series data dimensions are different from coord dimensions (i.e.\n   * candlestick and boxplot). Override this method to handle those cases.\n   *\n   * Coord dimension to data dimension can be one-to-many\n   *\n   * @param {string} coordDim\n   * @return {Array.<string>} dimensions on the axis.\n   */\n  coordDimToDataDim: function (coordDim) {\n    return modelUtil.coordDimToDataDim(this.getData(), coordDim);\n  },\n\n  /**\n   * Convert data dimension to coord dimension.\n   *\n   * @param {string|number} dataDim\n   * @return {string}\n   */\n  dataDimToCoordDim: function (dataDim) {\n    return modelUtil.dataDimToCoordDim(this.getData(), dataDim);\n  },\n\n  /**\n   * Get base axis if has coordinate system and has axis.\n   * By default use coordSys.getBaseAxis();\n   * Can be overrided for some chart.\n   * @return {type} description\n   */\n  getBaseAxis: function () {\n    var coordSys = this.coordinateSystem;\n    return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n  },\n  // FIXME\n\n  /**\n   * Default tooltip formatter\n   *\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    function formatArrayValue(value) {\n      var vertially = zrUtil.reduce(value, function (vertially, val, idx) {\n        var dimItem = data.getDimensionInfo(idx);\n        return vertially |= dimItem && dimItem.tooltip !== false && dimItem.tooltipName != null;\n      }, 0);\n      var result = [];\n      var tooltipDims = modelUtil.otherDimToDataDim(data, 'tooltip');\n      tooltipDims.length ? zrUtil.each(tooltipDims, function (dimIdx) {\n        setEachItem(data.get(dimIdx, dataIndex), dimIdx);\n      }) // By default, all dims is used on tooltip.\n      : zrUtil.each(value, setEachItem);\n\n      function setEachItem(val, dimIdx) {\n        var dimInfo = data.getDimensionInfo(dimIdx); // If `dimInfo.tooltip` is not set, show tooltip.\n\n        if (!dimInfo || dimInfo.otherDims.tooltip === false) {\n          return;\n        }\n\n        var dimType = dimInfo.type;\n        var valStr = (vertially ? '- ' + (dimInfo.tooltipName || dimInfo.name) + ': ' : '') + (dimType === 'ordinal' ? val + '' : dimType === 'time' ? multipleSeries ? '' : formatTime('yyyy/MM/dd hh:mm:ss', val) : addCommas(val));\n        valStr && result.push(encodeHTML(valStr));\n      }\n\n      return (vertially ? '<br/>' : '') + result.join(vertially ? '<br/>' : ', ');\n    }\n\n    var data = get(this, 'data');\n    var value = this.getRawValue(dataIndex);\n    var formattedValue = zrUtil.isArray(value) ? formatArrayValue(value) : encodeHTML(addCommas(value));\n    var name = data.getName(dataIndex);\n    var color = data.getItemVisual(dataIndex, 'color');\n\n    if (zrUtil.isObject(color) && color.colorStops) {\n      color = (color.colorStops[0] || {}).color;\n    }\n\n    color = color || 'transparent';\n    var colorEl = getTooltipMarker(color);\n    var seriesName = this.name; // FIXME\n\n    if (seriesName === '\\0-') {\n      // Not show '-'\n      seriesName = '';\n    }\n\n    seriesName = seriesName ? encodeHTML(seriesName) + (!multipleSeries ? '<br/>' : ': ') : '';\n    return !multipleSeries ? seriesName + colorEl + (name ? encodeHTML(name) + ': ' + formattedValue : formattedValue) : colorEl + seriesName + formattedValue;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isAnimationEnabled: function () {\n    if (env.node) {\n      return false;\n    }\n\n    var animationEnabled = this.getShallow('animation');\n\n    if (animationEnabled) {\n      if (this.getData().count() > this.getShallow('animationThreshold')) {\n        animationEnabled = false;\n      }\n    }\n\n    return animationEnabled;\n  },\n  restoreData: function () {\n    set(this, 'data', get(this, 'dataBeforeProcessed').cloneShallow());\n  },\n  getColorFromPalette: function (name, scope) {\n    var ecModel = this.ecModel; // PENDING\n\n    var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n\n    if (!color) {\n      color = ecModel.getColorFromPalette(name, scope);\n    }\n\n    return color;\n  },\n\n  /**\n   * Get data indices for show tooltip content. See tooltip.\n   * @abstract\n   * @param {Array.<string>|string} dim\n   * @param {Array.<number>} value\n   * @param {module:echarts/coord/single/SingleAxis} baseAxis\n   * @return {Object} {dataIndices, nestestValue}.\n   */\n  getAxisTooltipData: null,\n\n  /**\n   * See tooltip.\n   * @abstract\n   * @param {number} dataIndex\n   * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n   */\n  getTooltipPosition: null\n});\nzrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\nzrUtil.mixin(SeriesModel, colorPaletteMixin);\nvar _default = SeriesModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/Series.js\n// module id = 1000\n// module chunks = 0 1 2","/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\nvar arrySlice = Array.prototype.slice;\n/**\n * 事件分发器\n * @alias module:zrender/mixin/Eventful\n * @constructor\n */\n\nvar Eventful = function () {\n  this._$handlers = {};\n};\n\nEventful.prototype = {\n  constructor: Eventful,\n\n  /**\n   * 单次触发绑定，trigger后销毁\n   *\n   * @param {string} event 事件名\n   * @param {Function} handler 响应函数\n   * @param {Object} context\n   */\n  one: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: true,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 绑定事件\n   * @param {string} event 事件名\n   * @param {Function} handler 事件处理函数\n   * @param {Object} [context]\n   */\n  on: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: false,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 是否绑定了事件\n   * @param  {string}  event\n   * @return {boolean}\n   */\n  isSilent: function (event) {\n    var _h = this._$handlers;\n    return _h[event] && _h[event].length;\n  },\n\n  /**\n   * 解绑事件\n   * @param {string} event 事件名\n   * @param {Function} [handler] 事件处理函数\n   */\n  off: function (event, handler) {\n    var _h = this._$handlers;\n\n    if (!event) {\n      this._$handlers = {};\n      return this;\n    }\n\n    if (handler) {\n      if (_h[event]) {\n        var newList = [];\n\n        for (var i = 0, l = _h[event].length; i < l; i++) {\n          if (_h[event][i]['h'] != handler) {\n            newList.push(_h[event][i]);\n          }\n        }\n\n        _h[event] = newList;\n      }\n\n      if (_h[event] && _h[event].length === 0) {\n        delete _h[event];\n      }\n    } else {\n      delete _h[event];\n    }\n\n    return this;\n  },\n\n  /**\n   * 事件分发\n   *\n   * @param {string} type 事件类型\n   */\n  trigger: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 3) {\n        args = arrySlice.call(args, 1);\n      }\n\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(_h[i]['ctx']);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(_h[i]['ctx'], args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * 带有context的事件分发, 最后一个参数是事件回调的context\n   * @param {string} type 事件类型\n   */\n  triggerWithContext: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 4) {\n        args = arrySlice.call(args, 1, args.length - 1);\n      }\n\n      var ctx = args[args.length - 1];\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(ctx);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(ctx, args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(ctx, args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(ctx, args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  }\n}; // 对象可以通过 onxxxx 绑定事件\n\n/**\n * @event module:zrender/mixin/Eventful#onclick\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseout\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousemove\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousewheel\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousedown\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseup\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrag\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragstart\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragend\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragenter\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragleave\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrop\n * @type {Function}\n * @default null\n */\n\nvar _default = Eventful;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/mixin/Eventful.js\n// module id = 1001\n// module chunks = 0 1 2","var LRU = require(\"../core/LRU\");\n\nvar kCSSColorTable = {\n  'transparent': [0, 0, 0, 0],\n  'aliceblue': [240, 248, 255, 1],\n  'antiquewhite': [250, 235, 215, 1],\n  'aqua': [0, 255, 255, 1],\n  'aquamarine': [127, 255, 212, 1],\n  'azure': [240, 255, 255, 1],\n  'beige': [245, 245, 220, 1],\n  'bisque': [255, 228, 196, 1],\n  'black': [0, 0, 0, 1],\n  'blanchedalmond': [255, 235, 205, 1],\n  'blue': [0, 0, 255, 1],\n  'blueviolet': [138, 43, 226, 1],\n  'brown': [165, 42, 42, 1],\n  'burlywood': [222, 184, 135, 1],\n  'cadetblue': [95, 158, 160, 1],\n  'chartreuse': [127, 255, 0, 1],\n  'chocolate': [210, 105, 30, 1],\n  'coral': [255, 127, 80, 1],\n  'cornflowerblue': [100, 149, 237, 1],\n  'cornsilk': [255, 248, 220, 1],\n  'crimson': [220, 20, 60, 1],\n  'cyan': [0, 255, 255, 1],\n  'darkblue': [0, 0, 139, 1],\n  'darkcyan': [0, 139, 139, 1],\n  'darkgoldenrod': [184, 134, 11, 1],\n  'darkgray': [169, 169, 169, 1],\n  'darkgreen': [0, 100, 0, 1],\n  'darkgrey': [169, 169, 169, 1],\n  'darkkhaki': [189, 183, 107, 1],\n  'darkmagenta': [139, 0, 139, 1],\n  'darkolivegreen': [85, 107, 47, 1],\n  'darkorange': [255, 140, 0, 1],\n  'darkorchid': [153, 50, 204, 1],\n  'darkred': [139, 0, 0, 1],\n  'darksalmon': [233, 150, 122, 1],\n  'darkseagreen': [143, 188, 143, 1],\n  'darkslateblue': [72, 61, 139, 1],\n  'darkslategray': [47, 79, 79, 1],\n  'darkslategrey': [47, 79, 79, 1],\n  'darkturquoise': [0, 206, 209, 1],\n  'darkviolet': [148, 0, 211, 1],\n  'deeppink': [255, 20, 147, 1],\n  'deepskyblue': [0, 191, 255, 1],\n  'dimgray': [105, 105, 105, 1],\n  'dimgrey': [105, 105, 105, 1],\n  'dodgerblue': [30, 144, 255, 1],\n  'firebrick': [178, 34, 34, 1],\n  'floralwhite': [255, 250, 240, 1],\n  'forestgreen': [34, 139, 34, 1],\n  'fuchsia': [255, 0, 255, 1],\n  'gainsboro': [220, 220, 220, 1],\n  'ghostwhite': [248, 248, 255, 1],\n  'gold': [255, 215, 0, 1],\n  'goldenrod': [218, 165, 32, 1],\n  'gray': [128, 128, 128, 1],\n  'green': [0, 128, 0, 1],\n  'greenyellow': [173, 255, 47, 1],\n  'grey': [128, 128, 128, 1],\n  'honeydew': [240, 255, 240, 1],\n  'hotpink': [255, 105, 180, 1],\n  'indianred': [205, 92, 92, 1],\n  'indigo': [75, 0, 130, 1],\n  'ivory': [255, 255, 240, 1],\n  'khaki': [240, 230, 140, 1],\n  'lavender': [230, 230, 250, 1],\n  'lavenderblush': [255, 240, 245, 1],\n  'lawngreen': [124, 252, 0, 1],\n  'lemonchiffon': [255, 250, 205, 1],\n  'lightblue': [173, 216, 230, 1],\n  'lightcoral': [240, 128, 128, 1],\n  'lightcyan': [224, 255, 255, 1],\n  'lightgoldenrodyellow': [250, 250, 210, 1],\n  'lightgray': [211, 211, 211, 1],\n  'lightgreen': [144, 238, 144, 1],\n  'lightgrey': [211, 211, 211, 1],\n  'lightpink': [255, 182, 193, 1],\n  'lightsalmon': [255, 160, 122, 1],\n  'lightseagreen': [32, 178, 170, 1],\n  'lightskyblue': [135, 206, 250, 1],\n  'lightslategray': [119, 136, 153, 1],\n  'lightslategrey': [119, 136, 153, 1],\n  'lightsteelblue': [176, 196, 222, 1],\n  'lightyellow': [255, 255, 224, 1],\n  'lime': [0, 255, 0, 1],\n  'limegreen': [50, 205, 50, 1],\n  'linen': [250, 240, 230, 1],\n  'magenta': [255, 0, 255, 1],\n  'maroon': [128, 0, 0, 1],\n  'mediumaquamarine': [102, 205, 170, 1],\n  'mediumblue': [0, 0, 205, 1],\n  'mediumorchid': [186, 85, 211, 1],\n  'mediumpurple': [147, 112, 219, 1],\n  'mediumseagreen': [60, 179, 113, 1],\n  'mediumslateblue': [123, 104, 238, 1],\n  'mediumspringgreen': [0, 250, 154, 1],\n  'mediumturquoise': [72, 209, 204, 1],\n  'mediumvioletred': [199, 21, 133, 1],\n  'midnightblue': [25, 25, 112, 1],\n  'mintcream': [245, 255, 250, 1],\n  'mistyrose': [255, 228, 225, 1],\n  'moccasin': [255, 228, 181, 1],\n  'navajowhite': [255, 222, 173, 1],\n  'navy': [0, 0, 128, 1],\n  'oldlace': [253, 245, 230, 1],\n  'olive': [128, 128, 0, 1],\n  'olivedrab': [107, 142, 35, 1],\n  'orange': [255, 165, 0, 1],\n  'orangered': [255, 69, 0, 1],\n  'orchid': [218, 112, 214, 1],\n  'palegoldenrod': [238, 232, 170, 1],\n  'palegreen': [152, 251, 152, 1],\n  'paleturquoise': [175, 238, 238, 1],\n  'palevioletred': [219, 112, 147, 1],\n  'papayawhip': [255, 239, 213, 1],\n  'peachpuff': [255, 218, 185, 1],\n  'peru': [205, 133, 63, 1],\n  'pink': [255, 192, 203, 1],\n  'plum': [221, 160, 221, 1],\n  'powderblue': [176, 224, 230, 1],\n  'purple': [128, 0, 128, 1],\n  'red': [255, 0, 0, 1],\n  'rosybrown': [188, 143, 143, 1],\n  'royalblue': [65, 105, 225, 1],\n  'saddlebrown': [139, 69, 19, 1],\n  'salmon': [250, 128, 114, 1],\n  'sandybrown': [244, 164, 96, 1],\n  'seagreen': [46, 139, 87, 1],\n  'seashell': [255, 245, 238, 1],\n  'sienna': [160, 82, 45, 1],\n  'silver': [192, 192, 192, 1],\n  'skyblue': [135, 206, 235, 1],\n  'slateblue': [106, 90, 205, 1],\n  'slategray': [112, 128, 144, 1],\n  'slategrey': [112, 128, 144, 1],\n  'snow': [255, 250, 250, 1],\n  'springgreen': [0, 255, 127, 1],\n  'steelblue': [70, 130, 180, 1],\n  'tan': [210, 180, 140, 1],\n  'teal': [0, 128, 128, 1],\n  'thistle': [216, 191, 216, 1],\n  'tomato': [255, 99, 71, 1],\n  'turquoise': [64, 224, 208, 1],\n  'violet': [238, 130, 238, 1],\n  'wheat': [245, 222, 179, 1],\n  'white': [255, 255, 255, 1],\n  'whitesmoke': [245, 245, 245, 1],\n  'yellow': [255, 255, 0, 1],\n  'yellowgreen': [154, 205, 50, 1]\n};\n\nfunction clampCssByte(i) {\n  // Clamp to integer 0 .. 255.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 255 ? 255 : i;\n}\n\nfunction clampCssAngle(i) {\n  // Clamp to integer 0 .. 360.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 360 ? 360 : i;\n}\n\nfunction clampCssFloat(f) {\n  // Clamp to float 0.0 .. 1.0.\n  return f < 0 ? 0 : f > 1 ? 1 : f;\n}\n\nfunction parseCssInt(str) {\n  // int or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssByte(parseFloat(str) / 100 * 255);\n  }\n\n  return clampCssByte(parseInt(str, 10));\n}\n\nfunction parseCssFloat(str) {\n  // float or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssFloat(parseFloat(str) / 100);\n  }\n\n  return clampCssFloat(parseFloat(str));\n}\n\nfunction cssHueToRgb(m1, m2, h) {\n  if (h < 0) {\n    h += 1;\n  } else if (h > 1) {\n    h -= 1;\n  }\n\n  if (h * 6 < 1) {\n    return m1 + (m2 - m1) * h * 6;\n  }\n\n  if (h * 2 < 1) {\n    return m2;\n  }\n\n  if (h * 3 < 2) {\n    return m1 + (m2 - m1) * (2 / 3 - h) * 6;\n  }\n\n  return m1;\n}\n\nfunction lerpNumber(a, b, p) {\n  return a + (b - a) * p;\n}\n\nfunction setRgba(out, r, g, b, a) {\n  out[0] = r;\n  out[1] = g;\n  out[2] = b;\n  out[3] = a;\n  return out;\n}\n\nfunction copyRgba(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\nvar colorCache = new LRU(20);\nvar lastRemovedArr = null;\n\nfunction putToCache(colorStr, rgbaArr) {\n  // Reuse removed array\n  if (lastRemovedArr) {\n    copyRgba(lastRemovedArr, rgbaArr);\n  }\n\n  lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || rgbaArr.slice());\n}\n/**\n * @param {string} colorStr\n * @param {Array.<number>} out\n * @return {Array.<number>}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction parse(colorStr, rgbaArr) {\n  if (!colorStr) {\n    return;\n  }\n\n  rgbaArr = rgbaArr || [];\n  var cached = colorCache.get(colorStr);\n\n  if (cached) {\n    return copyRgba(rgbaArr, cached);\n  } // colorStr may be not string\n\n\n  colorStr = colorStr + ''; // Remove all whitespace, not compliant, but should just be more accepting.\n\n  var str = colorStr.replace(/ /g, '').toLowerCase(); // Color keywords (and transparent) lookup.\n\n  if (str in kCSSColorTable) {\n    copyRgba(rgbaArr, kCSSColorTable[str]);\n    putToCache(colorStr, rgbaArr);\n    return rgbaArr;\n  } // #abc and #abc123 syntax.\n\n\n  if (str.charAt(0) === '#') {\n    if (str.length === 4) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xfff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xf00) >> 4 | (iv & 0xf00) >> 8, iv & 0xf0 | (iv & 0xf0) >> 4, iv & 0xf | (iv & 0xf) << 4, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    } else if (str.length === 7) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xffffff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xff0000) >> 16, (iv & 0xff00) >> 8, iv & 0xff, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    }\n\n    return;\n  }\n\n  var op = str.indexOf('('),\n      ep = str.indexOf(')');\n\n  if (op !== -1 && ep + 1 === str.length) {\n    var fname = str.substr(0, op);\n    var params = str.substr(op + 1, ep - (op + 1)).split(',');\n    var alpha = 1; // To allow case fallthrough.\n\n    switch (fname) {\n      case 'rgba':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        alpha = parseCssFloat(params.pop());\n      // jshint ignore:line\n      // Fall through.\n\n      case 'rgb':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        setRgba(rgbaArr, parseCssInt(params[0]), parseCssInt(params[1]), parseCssInt(params[2]), alpha);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsla':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        params[3] = parseCssFloat(params[3]);\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsl':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      default:\n        return;\n    }\n  }\n\n  setRgba(rgbaArr, 0, 0, 0, 1);\n  return;\n}\n/**\n * @param {Array.<number>} hsla\n * @param {Array.<number>} rgba\n * @return {Array.<number>} rgba\n */\n\n\nfunction hsla2rgba(hsla, rgba) {\n  var h = (parseFloat(hsla[0]) % 360 + 360) % 360 / 360; // 0 .. 1\n  // NOTE(deanm): According to the CSS spec s/l should only be\n  // percentages, but we don't bother and let float or percentage.\n\n  var s = parseCssFloat(hsla[1]);\n  var l = parseCssFloat(hsla[2]);\n  var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n  var m1 = l * 2 - m2;\n  rgba = rgba || [];\n  setRgba(rgba, clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255), clampCssByte(cssHueToRgb(m1, m2, h) * 255), clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255), 1);\n\n  if (hsla.length === 4) {\n    rgba[3] = hsla[3];\n  }\n\n  return rgba;\n}\n/**\n * @param {Array.<number>} rgba\n * @return {Array.<number>} hsla\n */\n\n\nfunction rgba2hsla(rgba) {\n  if (!rgba) {\n    return;\n  } // RGB from 0 to 255\n\n\n  var R = rgba[0] / 255;\n  var G = rgba[1] / 255;\n  var B = rgba[2] / 255;\n  var vMin = Math.min(R, G, B); // Min. value of RGB\n\n  var vMax = Math.max(R, G, B); // Max. value of RGB\n\n  var delta = vMax - vMin; // Delta RGB value\n\n  var L = (vMax + vMin) / 2;\n  var H;\n  var S; // HSL results from 0 to 1\n\n  if (delta === 0) {\n    H = 0;\n    S = 0;\n  } else {\n    if (L < 0.5) {\n      S = delta / (vMax + vMin);\n    } else {\n      S = delta / (2 - vMax - vMin);\n    }\n\n    var deltaR = ((vMax - R) / 6 + delta / 2) / delta;\n    var deltaG = ((vMax - G) / 6 + delta / 2) / delta;\n    var deltaB = ((vMax - B) / 6 + delta / 2) / delta;\n\n    if (R === vMax) {\n      H = deltaB - deltaG;\n    } else if (G === vMax) {\n      H = 1 / 3 + deltaR - deltaB;\n    } else if (B === vMax) {\n      H = 2 / 3 + deltaG - deltaR;\n    }\n\n    if (H < 0) {\n      H += 1;\n    }\n\n    if (H > 1) {\n      H -= 1;\n    }\n  }\n\n  var hsla = [H * 360, S, L];\n\n  if (rgba[3] != null) {\n    hsla.push(rgba[3]);\n  }\n\n  return hsla;\n}\n/**\n * @param {string} color\n * @param {number} level\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction lift(color, level) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    for (var i = 0; i < 3; i++) {\n      if (level < 0) {\n        colorArr[i] = colorArr[i] * (1 - level) | 0;\n      } else {\n        colorArr[i] = (255 - colorArr[i]) * level + colorArr[i] | 0;\n      }\n    }\n\n    return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n  }\n}\n/**\n * @param {string} color\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction toHex(color) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + +colorArr[2]).toString(16).slice(1);\n  }\n}\n/**\n * Map value to color. Faster than lerp methods because color is represented by rgba array.\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<Array.<number>>} colors List of rgba color array\n * @param {Array.<number>} [out] Mapped gba color array\n * @return {Array.<number>} will be null/undefined if input illegal.\n */\n\n\nfunction fastLerp(normalizedValue, colors, out) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  out = out || [];\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = colors[leftIndex];\n  var rightColor = colors[rightIndex];\n  var dv = value - leftIndex;\n  out[0] = clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv));\n  out[1] = clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv));\n  out[2] = clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv));\n  out[3] = clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv));\n  return out;\n}\n/**\n * @deprecated\n */\n\n\nvar fastMapToColor = fastLerp;\n/**\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<string>} colors Color list.\n * @param {boolean=} fullOutput Default false.\n * @return {(string|Object)} Result color. If fullOutput,\n *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n * @memberOf module:zrender/util/color\n */\n\nfunction lerp(normalizedValue, colors, fullOutput) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = parse(colors[leftIndex]);\n  var rightColor = parse(colors[rightIndex]);\n  var dv = value - leftIndex;\n  var color = stringify([clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv)), clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv)), clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv)), clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv))], 'rgba');\n  return fullOutput ? {\n    color: color,\n    leftIndex: leftIndex,\n    rightIndex: rightIndex,\n    value: value\n  } : color;\n}\n/**\n * @deprecated\n */\n\n\nvar mapToColor = lerp;\n/**\n * @param {string} color\n * @param {number=} h 0 ~ 360, ignore when null.\n * @param {number=} s 0 ~ 1, ignore when null.\n * @param {number=} l 0 ~ 1, ignore when null.\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\nfunction modifyHSL(color, h, s, l) {\n  color = parse(color);\n\n  if (color) {\n    color = rgba2hsla(color);\n    h != null && (color[0] = clampCssAngle(h));\n    s != null && (color[1] = parseCssFloat(s));\n    l != null && (color[2] = parseCssFloat(l));\n    return stringify(hsla2rgba(color), 'rgba');\n  }\n}\n/**\n * @param {string} color\n * @param {number=} alpha 0 ~ 1\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\n\nfunction modifyAlpha(color, alpha) {\n  color = parse(color);\n\n  if (color && alpha != null) {\n    color[3] = clampCssFloat(alpha);\n    return stringify(color, 'rgba');\n  }\n}\n/**\n * @param {Array.<number>} arrColor like [12,33,44,0.4]\n * @param {string} type 'rgba', 'hsva', ...\n * @return {string} Result color. (If input illegal, return undefined).\n */\n\n\nfunction stringify(arrColor, type) {\n  if (!arrColor || !arrColor.length) {\n    return;\n  }\n\n  var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n\n  if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n    colorStr += ',' + arrColor[3];\n  }\n\n  return type + '(' + colorStr + ')';\n}\n\nexports.parse = parse;\nexports.lift = lift;\nexports.toHex = toHex;\nexports.fastLerp = fastLerp;\nexports.fastMapToColor = fastMapToColor;\nexports.lerp = lerp;\nexports.mapToColor = mapToColor;\nexports.modifyHSL = modifyHSL;\nexports.modifyAlpha = modifyAlpha;\nexports.stringify = stringify;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/tool/color.js\n// module id = 1002\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"./graphic\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\n// Symbol factory\n\n/**\n * Triangle shape\n * @inner\n */\nvar Triangle = graphic.extendShape({\n  type: 'triangle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy + height);\n    path.lineTo(cx - width, cy + height);\n    path.closePath();\n  }\n});\n/**\n * Diamond shape\n * @inner\n */\n\nvar Diamond = graphic.extendShape({\n  type: 'diamond',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy);\n    path.lineTo(cx, cy + height);\n    path.lineTo(cx - width, cy);\n    path.closePath();\n  }\n});\n/**\n * Pin shape\n * @inner\n */\n\nvar Pin = graphic.extendShape({\n  type: 'pin',\n  shape: {\n    // x, y on the cusp\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var w = shape.width / 5 * 3; // Height must be larger than width\n\n    var h = Math.max(w, shape.height);\n    var r = w / 2; // Dist on y with tangent point and circle center\n\n    var dy = r * r / (h - r);\n    var cy = y - h + r + dy;\n    var angle = Math.asin(dy / r); // Dist on x with tangent point and circle center\n\n    var dx = Math.cos(angle) * r;\n    var tanX = Math.sin(angle);\n    var tanY = Math.cos(angle);\n    var cpLen = r * 0.6;\n    var cpLen2 = r * 0.7;\n    path.moveTo(x - dx, cy + dy);\n    path.arc(x, cy, r, Math.PI - angle, Math.PI * 2 + angle);\n    path.bezierCurveTo(x + dx - tanX * cpLen, cy + dy + tanY * cpLen, x, y - cpLen2, x, y);\n    path.bezierCurveTo(x, y - cpLen2, x - dx + tanX * cpLen, cy + dy + tanY * cpLen, x - dx, cy + dy);\n    path.closePath();\n  }\n});\n/**\n * Arrow shape\n * @inner\n */\n\nvar Arrow = graphic.extendShape({\n  type: 'arrow',\n  shape: {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var height = shape.height;\n    var width = shape.width;\n    var x = shape.x;\n    var y = shape.y;\n    var dx = width / 3 * 2;\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + dx, y + height);\n    ctx.lineTo(x, y + height / 4 * 3);\n    ctx.lineTo(x - dx, y + height);\n    ctx.lineTo(x, y);\n    ctx.closePath();\n  }\n});\n/**\n * Map of path contructors\n * @type {Object.<string, module:zrender/graphic/Path>}\n */\n\nvar symbolCtors = {\n  line: graphic.Line,\n  rect: graphic.Rect,\n  roundRect: graphic.Rect,\n  square: graphic.Rect,\n  circle: graphic.Circle,\n  diamond: Diamond,\n  pin: Pin,\n  arrow: Arrow,\n  triangle: Triangle\n};\nvar symbolShapeMakers = {\n  line: function (x, y, w, h, shape) {\n    // FIXME\n    shape.x1 = x;\n    shape.y1 = y + h / 2;\n    shape.x2 = x + w;\n    shape.y2 = y + h / 2;\n  },\n  rect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n  },\n  roundRect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n    shape.r = Math.min(w, h) / 4;\n  },\n  square: function (x, y, w, h, shape) {\n    var size = Math.min(w, h);\n    shape.x = x;\n    shape.y = y;\n    shape.width = size;\n    shape.height = size;\n  },\n  circle: function (x, y, w, h, shape) {\n    // Put circle in the center of square\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.r = Math.min(w, h) / 2;\n  },\n  diamond: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  pin: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  arrow: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  triangle: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  }\n};\nvar symbolBuildProxies = {};\nzrUtil.each(symbolCtors, function (Ctor, name) {\n  symbolBuildProxies[name] = new Ctor();\n});\nvar SymbolClz = graphic.extendShape({\n  type: 'symbol',\n  shape: {\n    symbolType: '',\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  beforeBrush: function () {\n    var style = this.style;\n    var shape = this.shape; // FIXME\n\n    if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n      style.textPosition = ['50%', '40%'];\n      style.textAlign = 'center';\n      style.textVerticalAlign = 'middle';\n    }\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    var symbolType = shape.symbolType;\n    var proxySymbol = symbolBuildProxies[symbolType];\n\n    if (shape.symbolType !== 'none') {\n      if (!proxySymbol) {\n        // Default rect\n        symbolType = 'rect';\n        proxySymbol = symbolBuildProxies[symbolType];\n      }\n\n      symbolShapeMakers[symbolType](shape.x, shape.y, shape.width, shape.height, proxySymbol.shape);\n      proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n    }\n  }\n}); // Provide setColor helper method to avoid determine if set the fill or stroke outside\n\nfunction symbolPathSetColor(color, innerColor) {\n  if (this.type !== 'image') {\n    var symbolStyle = this.style;\n    var symbolShape = this.shape;\n\n    if (symbolShape && symbolShape.symbolType === 'line') {\n      symbolStyle.stroke = color;\n    } else if (this.__isEmptyBrush) {\n      symbolStyle.stroke = color;\n      symbolStyle.fill = innerColor || '#fff';\n    } else {\n      // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n      symbolStyle.fill && (symbolStyle.fill = color);\n      symbolStyle.stroke && (symbolStyle.stroke = color);\n    }\n\n    this.dirty(false);\n  }\n}\n/**\n * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n * @param {string} symbolType\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @param {string} color\n * @param {boolean} [keepAspect=false] whether to keep the ratio of w/h,\n *                            for path and image only.\n */\n\n\nfunction createSymbol(symbolType, x, y, w, h, color, keepAspect) {\n  // TODO Support image object, DynamicImage.\n  var isEmpty = symbolType.indexOf('empty') === 0;\n\n  if (isEmpty) {\n    symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n  }\n\n  var symbolPath;\n\n  if (symbolType.indexOf('image://') === 0) {\n    symbolPath = graphic.makeImage(symbolType.slice(8), new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else if (symbolType.indexOf('path://') === 0) {\n    symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else {\n    symbolPath = new SymbolClz({\n      shape: {\n        symbolType: symbolType,\n        x: x,\n        y: y,\n        width: w,\n        height: h\n      }\n    });\n  }\n\n  symbolPath.__isEmptyBrush = isEmpty;\n  symbolPath.setColor = symbolPathSetColor;\n  symbolPath.setColor(color);\n  return symbolPath;\n}\n\nexports.createSymbol = createSymbol;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/symbol.js\n// module id = 1003\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _model = require(\"../../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\n/**\n * Complete dimensions by data (guess dimension).\n */\nvar each = zrUtil.each;\nvar isString = zrUtil.isString;\nvar defaults = zrUtil.defaults;\nvar OTHER_DIMS = {\n  tooltip: 1,\n  label: 1,\n  itemName: 1\n};\n/**\n * Complete the dimensions array, by user defined `dimension` and `encode`,\n * and guessing from the data structure.\n * If no 'value' dimension specified, the first no-named dimension will be\n * named as 'value'.\n *\n * @param {Array.<string>} sysDims Necessary dimensions, like ['x', 'y'], which\n *      provides not only dim template, but also default order.\n *      `name` of each item provides default coord name.\n *      [{dimsDef: []}, ...] can be specified to give names.\n * @param {Array} data Data list. [[1, 2, 3], [2, 3, 4]].\n * @param {Object} [opt]\n * @param {Array.<Object|string>} [opt.dimsDef] option.series.dimensions User defined dimensions\n *      For example: ['asdf', {name, type}, ...].\n * @param {Object} [opt.encodeDef] option.series.encode {x: 2, y: [3, 1], tooltip: [1, 2], label: 3}\n * @param {string} [opt.extraPrefix] Prefix of name when filling the left dimensions.\n * @param {string} [opt.extraFromZero] If specified, extra dim names will be:\n *                      extraPrefix + 0, extraPrefix + extraBaseIndex + 1 ...\n *                      If not specified, extra dim names will be:\n *                      extraPrefix, extraPrefix + 0, extraPrefix + 1 ...\n * @param {number} [opt.dimCount] If not specified, guess by the first data item.\n * @return {Array.<Object>} [{\n *      name: string mandatory,\n *      coordDim: string mandatory,\n *      coordDimIndex: number mandatory,\n *      type: string optional,\n *      tooltipName: string optional,\n *      otherDims: {\n *          tooltip: number optional,\n *          label: number optional\n *      },\n *      isExtraCoord: boolean true or undefined.\n *      other props ...\n * }]\n */\n\nfunction completeDimensions(sysDims, data, opt) {\n  data = data || [];\n  opt = opt || {};\n  sysDims = (sysDims || []).slice();\n  var dimsDef = (opt.dimsDef || []).slice();\n  var encodeDef = zrUtil.createHashMap(opt.encodeDef);\n  var dataDimNameMap = zrUtil.createHashMap();\n  var coordDimNameMap = zrUtil.createHashMap(); // var valueCandidate;\n\n  var result = [];\n  var dimCount = opt.dimCount;\n\n  if (dimCount == null) {\n    var value0 = retrieveValue(data[0]);\n    dimCount = Math.max(zrUtil.isArray(value0) && value0.length || 1, sysDims.length, dimsDef.length);\n    each(sysDims, function (sysDimItem) {\n      var sysDimItemDimsDef = sysDimItem.dimsDef;\n      sysDimItemDimsDef && (dimCount = Math.max(dimCount, sysDimItemDimsDef.length));\n    });\n  } // Apply user defined dims (`name` and `type`) and init result.\n\n\n  for (var i = 0; i < dimCount; i++) {\n    var dimDefItem = isString(dimsDef[i]) ? {\n      name: dimsDef[i]\n    } : dimsDef[i] || {};\n    var userDimName = dimDefItem.name;\n    var resultItem = result[i] = {\n      otherDims: {}\n    }; // Name will be applied later for avoiding duplication.\n\n    if (userDimName != null && dataDimNameMap.get(userDimName) == null) {\n      // Only if `series.dimensions` is defined in option, tooltipName\n      // will be set, and dimension will be diplayed vertically in\n      // tooltip by default.\n      resultItem.name = resultItem.tooltipName = userDimName;\n      dataDimNameMap.set(userDimName, i);\n    }\n\n    dimDefItem.type != null && (resultItem.type = dimDefItem.type);\n  } // Set `coordDim` and `coordDimIndex` by `encodeDef` and normalize `encodeDef`.\n\n\n  encodeDef.each(function (dataDims, coordDim) {\n    dataDims = encodeDef.set(coordDim, normalizeToArray(dataDims).slice());\n    each(dataDims, function (resultDimIdx, coordDimIndex) {\n      // The input resultDimIdx can be dim name or index.\n      isString(resultDimIdx) && (resultDimIdx = dataDimNameMap.get(resultDimIdx));\n\n      if (resultDimIdx != null && resultDimIdx < dimCount) {\n        dataDims[coordDimIndex] = resultDimIdx;\n        applyDim(result[resultDimIdx], coordDim, coordDimIndex);\n      }\n    });\n  }); // Apply templetes and default order from `sysDims`.\n\n  var availDimIdx = 0;\n  each(sysDims, function (sysDimItem, sysDimIndex) {\n    var coordDim;\n    var sysDimItem;\n    var sysDimItemDimsDef;\n    var sysDimItemOtherDims;\n\n    if (isString(sysDimItem)) {\n      coordDim = sysDimItem;\n      sysDimItem = {};\n    } else {\n      coordDim = sysDimItem.name;\n      sysDimItem = zrUtil.clone(sysDimItem); // `coordDimIndex` should not be set directly.\n\n      sysDimItemDimsDef = sysDimItem.dimsDef;\n      sysDimItemOtherDims = sysDimItem.otherDims;\n      sysDimItem.name = sysDimItem.coordDim = sysDimItem.coordDimIndex = sysDimItem.dimsDef = sysDimItem.otherDims = null;\n    }\n\n    var dataDims = normalizeToArray(encodeDef.get(coordDim)); // dimensions provides default dim sequences.\n\n    if (!dataDims.length) {\n      for (var i = 0; i < (sysDimItemDimsDef && sysDimItemDimsDef.length || 1); i++) {\n        while (availDimIdx < result.length && result[availDimIdx].coordDim != null) {\n          availDimIdx++;\n        }\n\n        availDimIdx < result.length && dataDims.push(availDimIdx++);\n      }\n    } // Apply templates.\n\n\n    each(dataDims, function (resultDimIdx, coordDimIndex) {\n      var resultItem = result[resultDimIdx];\n      applyDim(defaults(resultItem, sysDimItem), coordDim, coordDimIndex);\n\n      if (resultItem.name == null && sysDimItemDimsDef) {\n        resultItem.name = resultItem.tooltipName = sysDimItemDimsDef[coordDimIndex];\n      }\n\n      sysDimItemOtherDims && defaults(resultItem.otherDims, sysDimItemOtherDims);\n    });\n  }); // Make sure the first extra dim is 'value'.\n\n  var extra = opt.extraPrefix || 'value'; // Set dim `name` and other `coordDim` and other props.\n\n  for (var resultDimIdx = 0; resultDimIdx < dimCount; resultDimIdx++) {\n    var resultItem = result[resultDimIdx] = result[resultDimIdx] || {};\n    var coordDim = resultItem.coordDim;\n    coordDim == null && (resultItem.coordDim = genName(extra, coordDimNameMap, opt.extraFromZero), resultItem.coordDimIndex = 0, resultItem.isExtraCoord = true);\n    resultItem.name == null && (resultItem.name = genName(resultItem.coordDim, dataDimNameMap));\n    resultItem.type == null && guessOrdinal(data, resultDimIdx) && (resultItem.type = 'ordinal');\n  }\n\n  return result;\n\n  function applyDim(resultItem, coordDim, coordDimIndex) {\n    if (OTHER_DIMS[coordDim]) {\n      resultItem.otherDims[coordDim] = coordDimIndex;\n    } else {\n      resultItem.coordDim = coordDim;\n      resultItem.coordDimIndex = coordDimIndex;\n      coordDimNameMap.set(coordDim, true);\n    }\n  }\n\n  function genName(name, map, fromZero) {\n    if (fromZero || map.get(name) != null) {\n      var i = 0;\n\n      while (map.get(name + i) != null) {\n        i++;\n      }\n\n      name += i;\n    }\n\n    map.set(name, true);\n    return name;\n  }\n} // The rule should not be complex, otherwise user might not\n// be able to known where the data is wrong.\n\n\nvar guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {\n  for (var i = 0, len = data.length; i < len; i++) {\n    var value = retrieveValue(data[i]);\n\n    if (!zrUtil.isArray(value)) {\n      return false;\n    }\n\n    var value = value[dimIndex]; // Consider usage convenience, '1', '2' will be treated as \"number\".\n    // `isFinit('')` get `true`.\n\n    if (value != null && isFinite(value) && value !== '') {\n      return false;\n    } else if (isString(value) && value !== '-') {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nfunction retrieveValue(o) {\n  return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value : o;\n}\n\nvar _default = completeDimensions;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/data/helper/completeDimensions.js\n// module id = 1004\n// module chunks = 0 1 2","var _default = {\n  toolbox: {\n    brush: {\n      title: {\n        rect: '矩形选择',\n        polygon: '圈选',\n        lineX: '横向选择',\n        lineY: '纵向选择',\n        keep: '保持选择',\n        clear: '清除选择'\n      }\n    },\n    dataView: {\n      title: '数据视图',\n      lang: ['数据视图', '关闭', '刷新']\n    },\n    dataZoom: {\n      title: {\n        zoom: '区域缩放',\n        back: '区域缩放还原'\n      }\n    },\n    magicType: {\n      title: {\n        line: '切换为折线图',\n        bar: '切换为柱状图',\n        stack: '切换为堆叠',\n        tiled: '切换为平铺'\n      }\n    },\n    restore: {\n      title: '还原'\n    },\n    saveAsImage: {\n      title: '保存为图片',\n      lang: ['右键另存为图片']\n    }\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/lang.js\n// module id = 1005\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar coordinateSystemCreators = {};\n\nfunction CoordinateSystemManager() {\n  this._coordinateSystems = [];\n}\n\nCoordinateSystemManager.prototype = {\n  constructor: CoordinateSystemManager,\n  create: function (ecModel, api) {\n    var coordinateSystems = [];\n    zrUtil.each(coordinateSystemCreators, function (creater, type) {\n      var list = creater.create(ecModel, api);\n      coordinateSystems = coordinateSystems.concat(list || []);\n    });\n    this._coordinateSystems = coordinateSystems;\n  },\n  update: function (ecModel, api) {\n    zrUtil.each(this._coordinateSystems, function (coordSys) {\n      // FIXME MUST have\n      coordSys.update && coordSys.update(ecModel, api);\n    });\n  },\n  getCoordinateSystems: function () {\n    return this._coordinateSystems.slice();\n  }\n};\n\nCoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n  coordinateSystemCreators[type] = coordinateSystemCreator;\n};\n\nCoordinateSystemManager.get = function (type) {\n  return coordinateSystemCreators[type];\n};\n\nvar _default = CoordinateSystemManager;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/CoordinateSystem.js\n// module id = 1006\n// module chunks = 0 1 2","var curve = require(\"./curve\");\n\nvar vec2 = require(\"./vector\");\n\nvar bbox = require(\"./bbox\");\n\nvar BoundingRect = require(\"./BoundingRect\");\n\nvar _config = require(\"../config\");\n\nvar dpr = _config.devicePixelRatio;\n\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n// TODO getTotalLength, getPointAtLength\nvar CMD = {\n  M: 1,\n  L: 2,\n  C: 3,\n  Q: 4,\n  A: 5,\n  Z: 6,\n  // Rect\n  R: 7\n}; // var CMD_MEM_SIZE = {\n//     M: 3,\n//     L: 3,\n//     C: 7,\n//     Q: 5,\n//     A: 9,\n//     R: 5,\n//     Z: 1\n// };\n\nvar min = [];\nvar max = [];\nvar min2 = [];\nvar max2 = [];\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathCos = Math.cos;\nvar mathSin = Math.sin;\nvar mathSqrt = Math.sqrt;\nvar mathAbs = Math.abs;\nvar hasTypedArray = typeof Float32Array != 'undefined';\n/**\n * @alias module:zrender/core/PathProxy\n * @constructor\n */\n\nvar PathProxy = function (notSaveData) {\n  this._saveData = !(notSaveData || false);\n\n  if (this._saveData) {\n    /**\n     * Path data. Stored as flat array\n     * @type {Array.<Object>}\n     */\n    this.data = [];\n  }\n\n  this._ctx = null;\n};\n/**\n * 快速计算Path包围盒（并不是最小包围盒）\n * @return {Object}\n */\n\n\nPathProxy.prototype = {\n  constructor: PathProxy,\n  _xi: 0,\n  _yi: 0,\n  _x0: 0,\n  _y0: 0,\n  // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n  _ux: 0,\n  _uy: 0,\n  _len: 0,\n  _lineDash: null,\n  _dashOffset: 0,\n  _dashIdx: 0,\n  _dashSum: 0,\n\n  /**\n   * @readOnly\n   */\n  setScale: function (sx, sy) {\n    this._ux = mathAbs(1 / dpr / sx) || 0;\n    this._uy = mathAbs(1 / dpr / sy) || 0;\n  },\n  getContext: function () {\n    return this._ctx;\n  },\n\n  /**\n   * @param  {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  beginPath: function (ctx) {\n    this._ctx = ctx;\n    ctx && ctx.beginPath();\n    ctx && (this.dpr = ctx.dpr); // Reset\n\n    if (this._saveData) {\n      this._len = 0;\n    }\n\n    if (this._lineDash) {\n      this._lineDash = null;\n      this._dashOffset = 0;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  moveTo: function (x, y) {\n    this.addData(CMD.M, x, y);\n    this._ctx && this._ctx.moveTo(x, y); // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n    // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n    // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n    // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n\n    this._x0 = x;\n    this._y0 = y;\n    this._xi = x;\n    this._yi = y;\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  lineTo: function (x, y) {\n    var exceedUnit = mathAbs(x - this._xi) > this._ux || mathAbs(y - this._yi) > this._uy // Force draw the first segment\n    || this._len < 5;\n    this.addData(CMD.L, x, y);\n\n    if (this._ctx && exceedUnit) {\n      this._needsDash() ? this._dashedLineTo(x, y) : this._ctx.lineTo(x, y);\n    }\n\n    if (exceedUnit) {\n      this._xi = x;\n      this._yi = y;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @param  {number} x3\n   * @param  {number} y3\n   * @return {module:zrender/core/PathProxy}\n   */\n  bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n    this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3) : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n    }\n\n    this._xi = x3;\n    this._yi = y3;\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @return {module:zrender/core/PathProxy}\n   */\n  quadraticCurveTo: function (x1, y1, x2, y2) {\n    this.addData(CMD.Q, x1, y1, x2, y2);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2) : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n    }\n\n    this._xi = x2;\n    this._yi = y2;\n    return this;\n  },\n\n  /**\n   * @param  {number} cx\n   * @param  {number} cy\n   * @param  {number} r\n   * @param  {number} startAngle\n   * @param  {number} endAngle\n   * @param  {boolean} anticlockwise\n   * @return {module:zrender/core/PathProxy}\n   */\n  arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n    this.addData(CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1);\n    this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n    this._xi = mathCos(endAngle) * r + cx;\n    this._yi = mathSin(endAngle) * r + cx;\n    return this;\n  },\n  // TODO\n  arcTo: function (x1, y1, x2, y2, radius) {\n    if (this._ctx) {\n      this._ctx.arcTo(x1, y1, x2, y2, radius);\n    }\n\n    return this;\n  },\n  // TODO\n  rect: function (x, y, w, h) {\n    this._ctx && this._ctx.rect(x, y, w, h);\n    this.addData(CMD.R, x, y, w, h);\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/PathProxy}\n   */\n  closePath: function () {\n    this.addData(CMD.Z);\n    var ctx = this._ctx;\n    var x0 = this._x0;\n    var y0 = this._y0;\n\n    if (ctx) {\n      this._needsDash() && this._dashedLineTo(x0, y0);\n      ctx.closePath();\n    }\n\n    this._xi = x0;\n    this._yi = y0;\n    return this;\n  },\n\n  /**\n   * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n   * stroke 同样\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  fill: function (ctx) {\n    ctx && ctx.fill();\n    this.toStatic();\n  },\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  stroke: function (ctx) {\n    ctx && ctx.stroke();\n    this.toStatic();\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDash: function (lineDash) {\n    if (lineDash instanceof Array) {\n      this._lineDash = lineDash;\n      this._dashIdx = 0;\n      var lineDashSum = 0;\n\n      for (var i = 0; i < lineDash.length; i++) {\n        lineDashSum += lineDash[i];\n      }\n\n      this._dashSum = lineDashSum;\n    }\n\n    return this;\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDashOffset: function (offset) {\n    this._dashOffset = offset;\n    return this;\n  },\n\n  /**\n   *\n   * @return {boolean}\n   */\n  len: function () {\n    return this._len;\n  },\n\n  /**\n   * 直接设置 Path 数据\n   */\n  setData: function (data) {\n    var len = data.length;\n\n    if (!(this.data && this.data.length == len) && hasTypedArray) {\n      this.data = new Float32Array(len);\n    }\n\n    for (var i = 0; i < len; i++) {\n      this.data[i] = data[i];\n    }\n\n    this._len = len;\n  },\n\n  /**\n   * 添加子路径\n   * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n   */\n  appendPath: function (path) {\n    if (!(path instanceof Array)) {\n      path = [path];\n    }\n\n    var len = path.length;\n    var appendSize = 0;\n    var offset = this._len;\n\n    for (var i = 0; i < len; i++) {\n      appendSize += path[i].len();\n    }\n\n    if (hasTypedArray && this.data instanceof Float32Array) {\n      this.data = new Float32Array(offset + appendSize);\n    }\n\n    for (var i = 0; i < len; i++) {\n      var appendPathData = path[i].data;\n\n      for (var k = 0; k < appendPathData.length; k++) {\n        this.data[offset++] = appendPathData[k];\n      }\n    }\n\n    this._len = offset;\n  },\n\n  /**\n   * 填充 Path 数据。\n   * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n   */\n  addData: function (cmd) {\n    if (!this._saveData) {\n      return;\n    }\n\n    var data = this.data;\n\n    if (this._len + arguments.length > data.length) {\n      // 因为之前的数组已经转换成静态的 Float32Array\n      // 所以不够用时需要扩展一个新的动态数组\n      this._expandData();\n\n      data = this.data;\n    }\n\n    for (var i = 0; i < arguments.length; i++) {\n      data[this._len++] = arguments[i];\n    }\n\n    this._prevCmd = cmd;\n  },\n  _expandData: function () {\n    // Only if data is Float32Array\n    if (!(this.data instanceof Array)) {\n      var newData = [];\n\n      for (var i = 0; i < this._len; i++) {\n        newData[i] = this.data[i];\n      }\n\n      this.data = newData;\n    }\n  },\n\n  /**\n   * If needs js implemented dashed line\n   * @return {boolean}\n   * @private\n   */\n  _needsDash: function () {\n    return this._lineDash;\n  },\n  _dashedLineTo: function (x1, y1) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    var dist = mathSqrt(dx * dx + dy * dy);\n    var x = x0;\n    var y = y0;\n    var dash;\n    var nDash = lineDash.length;\n    var idx;\n    dx /= dist;\n    dy /= dist;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum;\n    x -= offset * dx;\n    y -= offset * dy;\n\n    while (dx > 0 && x <= x1 || dx < 0 && x >= x1 || dx == 0 && (dy > 0 && y <= y1 || dy < 0 && y >= y1)) {\n      idx = this._dashIdx;\n      dash = lineDash[idx];\n      x += dx * dash;\n      y += dy * dash;\n      this._dashIdx = (idx + 1) % nDash; // Skip positive offset\n\n      if (dx > 0 && x < x0 || dx < 0 && x > x0 || dy > 0 && y < y0 || dy < 0 && y > y0) {\n        continue;\n      }\n\n      ctx[idx % 2 ? 'moveTo' : 'lineTo'](dx >= 0 ? mathMin(x, x1) : mathMax(x, x1), dy >= 0 ? mathMin(y, y1) : mathMax(y, y1));\n    } // Offset for next lineTo\n\n\n    dx = x - x1;\n    dy = y - y1;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  // Not accurate dashed line to\n  _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var t;\n    var dx;\n    var dy;\n    var cubicAt = curve.cubicAt;\n    var bezierLen = 0;\n    var idx = this._dashIdx;\n    var nDash = lineDash.length;\n    var x;\n    var y;\n    var tmpLen = 0;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum; // Bezier approx length\n\n    for (t = 0; t < 1; t += 0.1) {\n      dx = cubicAt(x0, x1, x2, x3, t + 0.1) - cubicAt(x0, x1, x2, x3, t);\n      dy = cubicAt(y0, y1, y2, y3, t + 0.1) - cubicAt(y0, y1, y2, y3, t);\n      bezierLen += mathSqrt(dx * dx + dy * dy);\n    } // Find idx after add offset\n\n\n    for (; idx < nDash; idx++) {\n      tmpLen += lineDash[idx];\n\n      if (tmpLen > offset) {\n        break;\n      }\n    }\n\n    t = (tmpLen - offset) / bezierLen;\n\n    while (t <= 1) {\n      x = cubicAt(x0, x1, x2, x3, t);\n      y = cubicAt(y0, y1, y2, y3, t); // Use line to approximate dashed bezier\n      // Bad result if dash is long\n\n      idx % 2 ? ctx.moveTo(x, y) : ctx.lineTo(x, y);\n      t += lineDash[idx] / bezierLen;\n      idx = (idx + 1) % nDash;\n    } // Finish the last segment and calculate the new offset\n\n\n    idx % 2 !== 0 && ctx.lineTo(x3, y3);\n    dx = x3 - x;\n    dy = y3 - y;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  _dashedQuadraticTo: function (x1, y1, x2, y2) {\n    // Convert quadratic to cubic using degree elevation\n    var x3 = x2;\n    var y3 = y2;\n    x2 = (x2 + 2 * x1) / 3;\n    y2 = (y2 + 2 * y1) / 3;\n    x1 = (this._xi + 2 * x1) / 3;\n    y1 = (this._yi + 2 * y1) / 3;\n\n    this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n  },\n\n  /**\n   * 转成静态的 Float32Array 减少堆内存占用\n   * Convert dynamic array to static Float32Array\n   */\n  toStatic: function () {\n    var data = this.data;\n\n    if (data instanceof Array) {\n      data.length = this._len;\n\n      if (hasTypedArray) {\n        this.data = new Float32Array(data);\n      }\n    }\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n    max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n    var data = this.data;\n    var xi = 0;\n    var yi = 0;\n    var x0 = 0;\n    var y0 = 0;\n\n    for (var i = 0; i < data.length;) {\n      var cmd = data[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = data[i];\n        yi = data[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n          // 在 closePath 的时候使用\n          x0 = data[i++];\n          y0 = data[i++];\n          xi = x0;\n          yi = y0;\n          min2[0] = x0;\n          min2[1] = y0;\n          max2[0] = x0;\n          max2[1] = y0;\n          break;\n\n        case CMD.L:\n          bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.C:\n          bbox.fromCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.Q:\n          bbox.fromQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.A:\n          // TODO Arc 判断的开销比较大\n          var cx = data[i++];\n          var cy = data[i++];\n          var rx = data[i++];\n          var ry = data[i++];\n          var startAngle = data[i++];\n          var endAngle = data[i++] + startAngle; // TODO Arc 旋转\n\n          var psi = data[i++];\n          var anticlockwise = 1 - data[i++];\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(startAngle) * rx + cx;\n            y0 = mathSin(startAngle) * ry + cy;\n          }\n\n          bbox.fromArc(cx, cy, rx, ry, startAngle, endAngle, anticlockwise, min2, max2);\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = data[i++];\n          y0 = yi = data[i++];\n          var width = data[i++];\n          var height = data[i++]; // Use fromLine\n\n          bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n          break;\n\n        case CMD.Z:\n          xi = x0;\n          yi = y0;\n          break;\n      } // Union\n\n\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * Rebuild path from current data\n   * Rebuild path will not consider javascript implemented line dash.\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  rebuildPath: function (ctx) {\n    var d = this.data;\n    var x0, y0;\n    var xi, yi;\n    var x, y;\n    var ux = this._ux;\n    var uy = this._uy;\n    var len = this._len;\n\n    for (var i = 0; i < len;) {\n      var cmd = d[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = d[i];\n        yi = d[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          x0 = xi = d[i++];\n          y0 = yi = d[i++];\n          ctx.moveTo(xi, yi);\n          break;\n\n        case CMD.L:\n          x = d[i++];\n          y = d[i++]; // Not draw too small seg between\n\n          if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n            ctx.lineTo(x, y);\n            xi = x;\n            yi = y;\n          }\n\n          break;\n\n        case CMD.C:\n          ctx.bezierCurveTo(d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.Q:\n          ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.A:\n          var cx = d[i++];\n          var cy = d[i++];\n          var rx = d[i++];\n          var ry = d[i++];\n          var theta = d[i++];\n          var dTheta = d[i++];\n          var psi = d[i++];\n          var fs = d[i++];\n          var r = rx > ry ? rx : ry;\n          var scaleX = rx > ry ? 1 : rx / ry;\n          var scaleY = rx > ry ? ry / rx : 1;\n          var isEllipse = Math.abs(rx - ry) > 1e-3;\n          var endAngle = theta + dTheta;\n\n          if (isEllipse) {\n            ctx.translate(cx, cy);\n            ctx.rotate(psi);\n            ctx.scale(scaleX, scaleY);\n            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n            ctx.scale(1 / scaleX, 1 / scaleY);\n            ctx.rotate(-psi);\n            ctx.translate(-cx, -cy);\n          } else {\n            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n          }\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(theta) * rx + cx;\n            y0 = mathSin(theta) * ry + cy;\n          }\n\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = d[i];\n          y0 = yi = d[i + 1];\n          ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n          break;\n\n        case CMD.Z:\n          ctx.closePath();\n          xi = x0;\n          yi = y0;\n      }\n    }\n  }\n};\nPathProxy.CMD = CMD;\nvar _default = PathProxy;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/PathProxy.js\n// module id = 1007\n// module chunks = 0 1 2","var ORIGIN_METHOD = '\\0__throttleOriginMethod';\nvar RATE = '\\0__throttleRate';\nvar THROTTLE_TYPE = '\\0__throttleType';\n/**\n * @public\n * @param {(Function)} fn\n * @param {number} [delay=0] Unit: ms.\n * @param {boolean} [debounce=false]\n *        true: If call interval less than `delay`, only the last call works.\n *        false: If call interval less than `delay, call works on fixed rate.\n * @return {(Function)} throttled fn.\n */\n\nfunction throttle(fn, delay, debounce) {\n  var currCall;\n  var lastCall = 0;\n  var lastExec = 0;\n  var timer = null;\n  var diff;\n  var scope;\n  var args;\n  var debounceNextCall;\n  delay = delay || 0;\n\n  function exec() {\n    lastExec = new Date().getTime();\n    timer = null;\n    fn.apply(scope, args || []);\n  }\n\n  var cb = function () {\n    currCall = new Date().getTime();\n    scope = this;\n    args = arguments;\n    var thisDelay = debounceNextCall || delay;\n    var thisDebounce = debounceNextCall || debounce;\n    debounceNextCall = null;\n    diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\n    clearTimeout(timer);\n\n    if (thisDebounce) {\n      timer = setTimeout(exec, thisDelay);\n    } else {\n      if (diff >= 0) {\n        exec();\n      } else {\n        timer = setTimeout(exec, -diff);\n      }\n    }\n\n    lastCall = currCall;\n  };\n  /**\n   * Clear throttle.\n   * @public\n   */\n\n\n  cb.clear = function () {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  };\n  /**\n   * Enable debounce once.\n   */\n\n\n  cb.debounceNextCall = function (debounceDelay) {\n    debounceNextCall = debounceDelay;\n  };\n\n  return cb;\n}\n/**\n * Create throttle method or update throttle rate.\n *\n * @example\n * ComponentView.prototype.render = function () {\n *     ...\n *     throttle.createOrUpdate(\n *         this,\n *         '_dispatchAction',\n *         this.model.get('throttle'),\n *         'fixRate'\n *     );\n * };\n * ComponentView.prototype.remove = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n * ComponentView.prototype.dispose = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n * @param {number} [rate]\n * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n * @return {Function} throttled function.\n */\n\n\nfunction createOrUpdate(obj, fnAttr, rate, throttleType) {\n  var fn = obj[fnAttr];\n\n  if (!fn) {\n    return;\n  }\n\n  var originFn = fn[ORIGIN_METHOD] || fn;\n  var lastThrottleType = fn[THROTTLE_TYPE];\n  var lastRate = fn[RATE];\n\n  if (lastRate !== rate || lastThrottleType !== throttleType) {\n    if (rate == null || !throttleType) {\n      return obj[fnAttr] = originFn;\n    }\n\n    fn = obj[fnAttr] = throttle(originFn, rate, throttleType === 'debounce');\n    fn[ORIGIN_METHOD] = originFn;\n    fn[THROTTLE_TYPE] = throttleType;\n    fn[RATE] = rate;\n  }\n\n  return fn;\n}\n/**\n * Clear throttle. Example see throttle.createOrUpdate.\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n */\n\n\nfunction clear(obj, fnAttr) {\n  var fn = obj[fnAttr];\n\n  if (fn && fn[ORIGIN_METHOD]) {\n    obj[fnAttr] = fn[ORIGIN_METHOD];\n  }\n}\n\nexports.throttle = throttle;\nexports.createOrUpdate = createOrUpdate;\nexports.clear = clear;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/throttle.js\n// module id = 1008\n// module chunks = 0 1 2","var zrUtil = require(\"../core/util\");\n\nvar Element = require(\"../Element\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\n/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/container/Group');\n *     var Circle = require('zrender/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n/**\n * @alias module:zrender/graphic/Group\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @extends module:zrender/mixin/Eventful\n */\nvar Group = function (opts) {\n  opts = opts || {};\n  Element.call(this, opts);\n\n  for (var key in opts) {\n    if (opts.hasOwnProperty(key)) {\n      this[key] = opts[key];\n    }\n  }\n\n  this._children = [];\n  this.__storage = null;\n  this.__dirty = true;\n};\n\nGroup.prototype = {\n  constructor: Group,\n  isGroup: true,\n\n  /**\n   * @type {string}\n   */\n  type: 'group',\n\n  /**\n   * 所有子孙元素是否响应鼠标事件\n   * @name module:/zrender/container/Group#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * @return {Array.<module:zrender/Element>}\n   */\n  children: function () {\n    return this._children.slice();\n  },\n\n  /**\n   * 获取指定 index 的儿子节点\n   * @param  {number} idx\n   * @return {module:zrender/Element}\n   */\n  childAt: function (idx) {\n    return this._children[idx];\n  },\n\n  /**\n   * 获取指定名字的儿子节点\n   * @param  {string} name\n   * @return {module:zrender/Element}\n   */\n  childOfName: function (name) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      if (children[i].name === name) {\n        return children[i];\n      }\n    }\n  },\n\n  /**\n   * @return {number}\n   */\n  childCount: function () {\n    return this._children.length;\n  },\n\n  /**\n   * 添加子节点到最后\n   * @param {module:zrender/Element} child\n   */\n  add: function (child) {\n    if (child && child !== this && child.parent !== this) {\n      this._children.push(child);\n\n      this._doAdd(child);\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加子节点在 nextSibling 之前\n   * @param {module:zrender/Element} child\n   * @param {module:zrender/Element} nextSibling\n   */\n  addBefore: function (child, nextSibling) {\n    if (child && child !== this && child.parent !== this && nextSibling && nextSibling.parent === this) {\n      var children = this._children;\n      var idx = children.indexOf(nextSibling);\n\n      if (idx >= 0) {\n        children.splice(idx, 0, child);\n\n        this._doAdd(child);\n      }\n    }\n\n    return this;\n  },\n  _doAdd: function (child) {\n    if (child.parent) {\n      child.parent.remove(child);\n    }\n\n    child.parent = this;\n    var storage = this.__storage;\n    var zr = this.__zr;\n\n    if (storage && storage !== child.__storage) {\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n  },\n\n  /**\n   * 移除子节点\n   * @param {module:zrender/Element} child\n   */\n  remove: function (child) {\n    var zr = this.__zr;\n    var storage = this.__storage;\n    var children = this._children;\n    var idx = zrUtil.indexOf(children, child);\n\n    if (idx < 0) {\n      return this;\n    }\n\n    children.splice(idx, 1);\n    child.parent = null;\n\n    if (storage) {\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n    return this;\n  },\n\n  /**\n   * 移除所有子节点\n   */\n  removeAll: function () {\n    var children = this._children;\n    var storage = this.__storage;\n    var child;\n    var i;\n\n    for (i = 0; i < children.length; i++) {\n      child = children[i];\n\n      if (storage) {\n        storage.delFromStorage(child);\n\n        if (child instanceof Group) {\n          child.delChildrenFromStorage(storage);\n        }\n      }\n\n      child.parent = null;\n    }\n\n    children.length = 0;\n    return this;\n  },\n\n  /**\n   * 遍历所有子节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  eachChild: function (cb, context) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n      cb.call(context, child, i);\n    }\n\n    return this;\n  },\n\n  /**\n   * 深度优先遍历所有子孙节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      cb.call(context, child);\n\n      if (child.type === 'group') {\n        child.traverse(cb, context);\n      }\n    }\n\n    return this;\n  },\n  addChildrenToStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n  },\n  delChildrenFromStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n  },\n  dirty: function () {\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh();\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function (includeChildren) {\n    // TODO Caching\n    var rect = null;\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var children = includeChildren || this._children;\n    var tmpMat = [];\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n\n      if (child.ignore || child.invisible) {\n        continue;\n      }\n\n      var childRect = child.getBoundingRect();\n      var transform = child.getLocalTransform(tmpMat); // TODO\n      // The boundingRect cacluated by transforming original\n      // rect may be bigger than the actual bundingRect when rotation\n      // is used. (Consider a circle rotated aginst its center, where\n      // the actual boundingRect should be the same as that not be\n      // rotated.) But we can not find better approach to calculate\n      // actual boundingRect yet, considering performance.\n\n      if (transform) {\n        tmpRect.copy(childRect);\n        tmpRect.applyTransform(transform);\n        rect = rect || tmpRect.clone();\n        rect.union(tmpRect);\n      } else {\n        rect = rect || childRect.clone();\n        rect.union(childRect);\n      }\n    }\n\n    return rect || tmpRect;\n  }\n};\nzrUtil.inherits(Group, Element);\nvar _default = Group;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/container/Group.js\n// module id = 1009\n// module chunks = 0 1 2","var dpr = 1; // If in browser environment\n\nif (typeof window !== 'undefined') {\n  dpr = Math.max(window.devicePixelRatio || 1, 1);\n}\n/**\n * config默认配置项\n * @exports zrender/config\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n/**\n * debug日志选项：catchBrushException为true下有效\n * 0 : 不生成debug数据，发布用\n * 1 : 异常抛出，调试用\n * 2 : 控制台输出，调试用\n */\n\n\nvar debugMode = 0; // retina 屏幕优化\n\nvar devicePixelRatio = dpr;\nexports.debugMode = debugMode;\nexports.devicePixelRatio = devicePixelRatio;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/config.js\n// module id = 1010\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\n// TODO Parse shadow style\n// TODO Only shallow path support\nfunction _default(properties) {\n  // Normalize\n  for (var i = 0; i < properties.length; i++) {\n    if (!properties[i][1]) {\n      properties[i][1] = properties[i][0];\n    }\n  }\n\n  return function (model, excludes, includes) {\n    var style = {};\n\n    for (var i = 0; i < properties.length; i++) {\n      var propName = properties[i][1];\n\n      if (excludes && zrUtil.indexOf(excludes, propName) >= 0 || includes && zrUtil.indexOf(includes, propName) < 0) {\n        continue;\n      }\n\n      var val = model.getShallow(propName);\n\n      if (val != null) {\n        style[properties[i][0]] = val;\n      }\n    }\n\n    return style;\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/mixin/makeStyleMapper.js\n// module id = 1011\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\nvar modelUtil = require(\"../util/model\");\n\nfunction Chart() {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewChart');\n}\n\nChart.prototype = {\n  type: 'chart',\n\n  /**\n   * Init the chart\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  init: function (ecModel, api) {},\n\n  /**\n   * Render the chart\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  render: function (seriesModel, ecModel, api, payload) {},\n\n  /**\n   * Highlight series or specified data item\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  highlight: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n  },\n\n  /**\n   * Downplay series or specified data item\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  downplay: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'normal');\n  },\n\n  /**\n   * Remove self\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  remove: function (ecModel, api) {\n    this.group.removeAll();\n  },\n\n  /**\n   * Dispose self\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  dispose: function () {}\n  /**\n   * The view contains the given point.\n   * @interface\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  // containPoint: function () {}\n\n};\nvar chartProto = Chart.prototype;\n\nchartProto.updateView = chartProto.updateLayout = chartProto.updateVisual = function (seriesModel, ecModel, api, payload) {\n  this.render(seriesModel, ecModel, api, payload);\n};\n/**\n * Set state of single element\n * @param  {module:zrender/Element} el\n * @param  {string} state\n */\n\n\nfunction elSetState(el, state) {\n  if (el) {\n    el.trigger(state);\n\n    if (el.type === 'group') {\n      for (var i = 0; i < el.childCount(); i++) {\n        elSetState(el.childAt(i), state);\n      }\n    }\n  }\n}\n/**\n * @param  {module:echarts/data/List} data\n * @param  {Object} payload\n * @param  {string} state 'normal'|'emphasis'\n * @inner\n */\n\n\nfunction toggleHighlight(data, payload, state) {\n  var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n  if (dataIndex != null) {\n    zrUtil.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n      elSetState(data.getItemGraphicEl(dataIdx), state);\n    });\n  } else {\n    data.eachItemGraphicEl(function (el) {\n      elSetState(el, state);\n    });\n  }\n} // Enable Chart.extend.\n\n\nclazzUtil.enableClassExtend(Chart, ['dispose']); // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Chart, {\n  registerWhenExtend: true\n});\nvar _default = Chart;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/view/Chart.js\n// module id = 1012\n// module chunks = 0 1 2","function defaultKeyGetter(item) {\n  return item;\n}\n/**\n * @param {Array} oldArr\n * @param {Array} newArr\n * @param {Function} oldKeyGetter\n * @param {Function} newKeyGetter\n * @param {Object} [context] Can be visited by this.context in callback.\n */\n\n\nfunction DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter, context) {\n  this._old = oldArr;\n  this._new = newArr;\n  this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n  this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n  this.context = context;\n}\n\nDataDiffer.prototype = {\n  constructor: DataDiffer,\n\n  /**\n   * Callback function when add a data\n   */\n  add: function (func) {\n    this._add = func;\n    return this;\n  },\n\n  /**\n   * Callback function when update a data\n   */\n  update: function (func) {\n    this._update = func;\n    return this;\n  },\n\n  /**\n   * Callback function when remove a data\n   */\n  remove: function (func) {\n    this._remove = func;\n    return this;\n  },\n  execute: function () {\n    var oldArr = this._old;\n    var newArr = this._new;\n    var oldDataIndexMap = {};\n    var newDataIndexMap = {};\n    var oldDataKeyArr = [];\n    var newDataKeyArr = [];\n    var i;\n    initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, '_oldKeyGetter', this);\n    initIndexMap(newArr, newDataIndexMap, newDataKeyArr, '_newKeyGetter', this); // Travel by inverted order to make sure order consistency\n    // when duplicate keys exists (consider newDataIndex.pop() below).\n    // For performance consideration, these code below do not look neat.\n\n    for (i = 0; i < oldArr.length; i++) {\n      var key = oldDataKeyArr[i];\n      var idx = newDataIndexMap[key]; // idx can never be empty array here. see 'set null' logic below.\n\n      if (idx != null) {\n        // Consider there is duplicate key (for example, use dataItem.name as key).\n        // We should make sure every item in newArr and oldArr can be visited.\n        var len = idx.length;\n\n        if (len) {\n          len === 1 && (newDataIndexMap[key] = null);\n          idx = idx.unshift();\n        } else {\n          newDataIndexMap[key] = null;\n        }\n\n        this._update && this._update(idx, i);\n      } else {\n        this._remove && this._remove(i);\n      }\n    }\n\n    for (var i = 0; i < newDataKeyArr.length; i++) {\n      var key = newDataKeyArr[i];\n\n      if (newDataIndexMap.hasOwnProperty(key)) {\n        var idx = newDataIndexMap[key];\n\n        if (idx == null) {\n          continue;\n        } // idx can never be empty array here. see 'set null' logic above.\n\n\n        if (!idx.length) {\n          this._add && this._add(idx);\n        } else {\n          for (var j = 0, len = idx.length; j < len; j++) {\n            this._add && this._add(idx[j]);\n          }\n        }\n      }\n    }\n  }\n};\n\nfunction initIndexMap(arr, map, keyArr, keyGetterName, dataDiffer) {\n  for (var i = 0; i < arr.length; i++) {\n    // Add prefix to avoid conflict with Object.prototype.\n    var key = '_ec_' + dataDiffer[keyGetterName](arr[i], i);\n    var existence = map[key];\n\n    if (existence == null) {\n      keyArr.push(key);\n      map[key] = i;\n    } else {\n      if (!existence.length) {\n        map[key] = existence = [existence];\n      }\n\n      existence.push(i);\n    }\n  }\n}\n\nvar _default = DataDiffer;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/data/DataDiffer.js\n// module id = 1013\n// module chunks = 0 1 2","var clazzUtil = require(\"../util/clazz\");\n\n/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n/**\n * @param {Object} [setting]\n */\nfunction Scale(setting) {\n  this._setting = setting || {};\n  /**\n   * Extent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._extent = [Infinity, -Infinity];\n  /**\n   * Step is calculated in adjustExtent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._interval = 0;\n  this.init && this.init.apply(this, arguments);\n}\n/**\n * Parse input val to valid inner number.\n * @param {*} val\n * @return {number}\n */\n\n\nScale.prototype.parse = function (val) {\n  // Notice: This would be a trap here, If the implementation\n  // of this method depends on extent, and this method is used\n  // before extent set (like in dataZoom), it would be wrong.\n  // Nevertheless, parse does not depend on extent generally.\n  return val;\n};\n\nScale.prototype.getSetting = function (name) {\n  return this._setting[name];\n};\n\nScale.prototype.contain = function (val) {\n  var extent = this._extent;\n  return val >= extent[0] && val <= extent[1];\n};\n/**\n * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.normalize = function (val) {\n  var extent = this._extent;\n\n  if (extent[1] === extent[0]) {\n    return 0.5;\n  }\n\n  return (val - extent[0]) / (extent[1] - extent[0]);\n};\n/**\n * Scale normalized value\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.scale = function (val) {\n  var extent = this._extent;\n  return val * (extent[1] - extent[0]) + extent[0];\n};\n/**\n * Set extent from data\n * @param {Array.<number>} other\n */\n\n\nScale.prototype.unionExtent = function (other) {\n  var extent = this._extent;\n  other[0] < extent[0] && (extent[0] = other[0]);\n  other[1] > extent[1] && (extent[1] = other[1]); // not setExtent because in log axis it may transformed to power\n  // this.setExtent(extent[0], extent[1]);\n};\n/**\n * Set extent from data\n * @param {module:echarts/data/List} data\n * @param {string} dim\n */\n\n\nScale.prototype.unionExtentFromData = function (data, dim) {\n  this.unionExtent(data.getDataExtent(dim, true));\n};\n/**\n * Get extent\n * @return {Array.<number>}\n */\n\n\nScale.prototype.getExtent = function () {\n  return this._extent.slice();\n};\n/**\n * Set extent\n * @param {number} start\n * @param {number} end\n */\n\n\nScale.prototype.setExtent = function (start, end) {\n  var thisExtent = this._extent;\n\n  if (!isNaN(start)) {\n    thisExtent[0] = start;\n  }\n\n  if (!isNaN(end)) {\n    thisExtent[1] = end;\n  }\n};\n/**\n * @return {Array.<string>}\n */\n\n\nScale.prototype.getTicksLabels = function () {\n  var labels = [];\n  var ticks = this.getTicks();\n\n  for (var i = 0; i < ticks.length; i++) {\n    labels.push(this.getLabel(ticks[i]));\n  }\n\n  return labels;\n};\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\n\n\nScale.prototype.isBlank = function () {\n  return this._isBlank;\n},\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\nScale.prototype.setBlank = function (isBlank) {\n  this._isBlank = isBlank;\n};\nclazzUtil.enableClassExtend(Scale);\nclazzUtil.enableClassManagement(Scale, {\n  registerWhenExtend: true\n});\nvar _default = Scale;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/scale/Scale.js\n// module id = 1014\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\nvar each = zrUtil.each;\nvar curry = zrUtil.curry; // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n// allAxesInfo should be updated when setOption performed.\n\nfunction collect(ecModel, api) {\n  var result = {\n    /**\n     * key: makeKey(axis.model)\n     * value: {\n     *      axis,\n     *      coordSys,\n     *      axisPointerModel,\n     *      triggerTooltip,\n     *      involveSeries,\n     *      snap,\n     *      seriesModels,\n     *      seriesDataCount\n     * }\n     */\n    axesInfo: {},\n    seriesInvolved: false,\n\n    /**\n     * key: makeKey(coordSys.model)\n     * value: Object: key makeKey(axis.model), value: axisInfo\n     */\n    coordSysAxesInfo: {},\n    coordSysMap: {}\n  };\n  collectAxesInfo(result, ecModel, api); // Check seriesInvolved for performance, in case too many series in some chart.\n\n  result.seriesInvolved && collectSeriesInfo(result, ecModel);\n  return result;\n}\n\nfunction collectAxesInfo(result, ecModel, api) {\n  var globalTooltipModel = ecModel.getComponent('tooltip');\n  var globalAxisPointerModel = ecModel.getComponent('axisPointer'); // links can only be set on global.\n\n  var linksOption = globalAxisPointerModel.get('link', true) || [];\n  var linkGroups = []; // Collect axes info.\n\n  each(api.getCoordinateSystems(), function (coordSys) {\n    // Some coordinate system do not support axes, like geo.\n    if (!coordSys.axisPointerEnabled) {\n      return;\n    }\n\n    var coordSysKey = makeKey(coordSys.model);\n    var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n    result.coordSysMap[coordSysKey] = coordSys; // Set tooltip (like 'cross') is a convienent way to show axisPointer\n    // for user. So we enable seting tooltip on coordSys model.\n\n    var coordSysModel = coordSys.model;\n    var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n    each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null)); // If axis tooltip used, choose tooltip axis for each coordSys.\n    // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n\n    if (coordSys.getTooltipAxes && globalTooltipModel // If tooltip.showContent is set as false, tooltip will not\n    // show but axisPointer will show as normal.\n    && baseTooltipModel.get('show')) {\n      // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n      // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n      var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n      var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n      var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n\n      if (triggerAxis || cross) {\n        each(tooltipAxes.baseAxes, curry(saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis));\n      }\n\n      if (cross) {\n        each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n      }\n    } // fromTooltip: true | false | 'cross'\n    // triggerTooltip: true | false | null\n\n\n    function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n      var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n      var axisPointerShow = axisPointerModel.get('show');\n\n      if (!axisPointerShow || axisPointerShow === 'auto' && !fromTooltip && !isHandleTrigger(axisPointerModel)) {\n        return;\n      }\n\n      if (triggerTooltip == null) {\n        triggerTooltip = axisPointerModel.get('triggerTooltip');\n      }\n\n      axisPointerModel = fromTooltip ? makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) : axisPointerModel;\n      var snap = axisPointerModel.get('snap');\n      var key = makeKey(axis.model);\n      var involveSeries = triggerTooltip || snap || axis.type === 'category'; // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n\n      var axisInfo = result.axesInfo[key] = {\n        key: key,\n        axis: axis,\n        coordSys: coordSys,\n        axisPointerModel: axisPointerModel,\n        triggerTooltip: triggerTooltip,\n        involveSeries: involveSeries,\n        snap: snap,\n        useHandle: isHandleTrigger(axisPointerModel),\n        seriesModels: []\n      };\n      axesInfoInCoordSys[key] = axisInfo;\n      result.seriesInvolved |= involveSeries;\n      var groupIndex = getLinkGroupIndex(linksOption, axis);\n\n      if (groupIndex != null) {\n        var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {\n          axesInfo: {}\n        });\n        linkGroup.axesInfo[key] = axisInfo;\n        linkGroup.mapper = linksOption[groupIndex].mapper;\n        axisInfo.linkGroup = linkGroup;\n      }\n    }\n  });\n}\n\nfunction makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) {\n  var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n  var volatileOption = {};\n  each(['type', 'snap', 'lineStyle', 'shadowStyle', 'label', 'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'], function (field) {\n    volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n  }); // category axis do not auto snap, otherwise some tick that do not\n  // has value can not be hovered. value/time/log axis default snap if\n  // triggered from tooltip and trigger tooltip.\n\n  volatileOption.snap = axis.type !== 'category' && !!triggerTooltip; // Compatibel with previous behavior, tooltip axis do not show label by default.\n  // Only these properties can be overrided from tooltip to axisPointer.\n\n  if (tooltipAxisPointerModel.get('type') === 'cross') {\n    volatileOption.type = 'line';\n  }\n\n  var labelOption = volatileOption.label || (volatileOption.label = {}); // Follow the convention, do not show label when triggered by tooltip by default.\n\n  labelOption.show == null && (labelOption.show = false);\n\n  if (fromTooltip === 'cross') {\n    // When 'cross', both axes show labels.\n    labelOption.show = true; // If triggerTooltip, this is a base axis, which should better not use cross style\n    // (cross style is dashed by default)\n\n    if (!triggerTooltip) {\n      var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n      crossStyle && zrUtil.defaults(labelOption, crossStyle.textStyle);\n    }\n  }\n\n  return axis.model.getModel('axisPointer', new Model(volatileOption, globalAxisPointerModel, ecModel));\n}\n\nfunction collectSeriesInfo(result, ecModel) {\n  // Prepare data for axis trigger\n  ecModel.eachSeries(function (seriesModel) {\n    // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n    var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n\n    if (!coordSys || seriesTooltipTrigger === 'none' || seriesTooltipTrigger === false || seriesTooltipTrigger === 'item' || seriesTooltipShow === false || seriesModel.get('axisPointer.show', true) === false) {\n      return;\n    }\n\n    each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n      var axis = axisInfo.axis;\n\n      if (coordSys.getAxis(axis.dim) === axis) {\n        axisInfo.seriesModels.push(seriesModel);\n        axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n        axisInfo.seriesDataCount += seriesModel.getData().count();\n      }\n    });\n  }, this);\n}\n/**\n * For example:\n * {\n *     axisPointer: {\n *         links: [{\n *             xAxisIndex: [2, 4],\n *             yAxisIndex: 'all'\n *         }, {\n *             xAxisId: ['a5', 'a7'],\n *             xAxisName: 'xxx'\n *         }]\n *     }\n * }\n */\n\n\nfunction getLinkGroupIndex(linksOption, axis) {\n  var axisModel = axis.model;\n  var dim = axis.dim;\n\n  for (var i = 0; i < linksOption.length; i++) {\n    var linkOption = linksOption[i] || {};\n\n    if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id) || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex) || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)) {\n      return i;\n    }\n  }\n}\n\nfunction checkPropInLink(linkPropValue, axisPropValue) {\n  return linkPropValue === 'all' || zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0 || linkPropValue === axisPropValue;\n}\n\nfunction fixValue(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n\n  if (!axisInfo) {\n    return;\n  }\n\n  var axisPointerModel = axisInfo.axisPointerModel;\n  var scale = axisInfo.axis.scale;\n  var option = axisPointerModel.option;\n  var status = axisPointerModel.get('status');\n  var value = axisPointerModel.get('value'); // Parse init value for category and time axis.\n\n  if (value != null) {\n    value = scale.parse(value);\n  }\n\n  var useHandle = isHandleTrigger(axisPointerModel); // If `handle` used, `axisPointer` will always be displayed, so value\n  // and status should be initialized.\n\n  if (status == null) {\n    option.status = useHandle ? 'show' : 'hide';\n  }\n\n  var extent = scale.getExtent().slice();\n  extent[0] > extent[1] && extent.reverse();\n\n  if ( // Pick a value on axis when initializing.\n  value == null // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n  // where we should re-pick a value to keep `handle` displaying normally.\n  || value > extent[1]) {\n    // Make handle displayed on the end of the axis when init, which looks better.\n    value = extent[1];\n  }\n\n  if (value < extent[0]) {\n    value = extent[0];\n  }\n\n  option.value = value;\n\n  if (useHandle) {\n    option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n  }\n}\n\nfunction getAxisInfo(axisModel) {\n  var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n  return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n}\n\nfunction getAxisPointerModel(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n  return axisInfo && axisInfo.axisPointerModel;\n}\n\nfunction isHandleTrigger(axisPointerModel) {\n  return !!axisPointerModel.get('handle.show');\n}\n/**\n * @param {module:echarts/model/Model} model\n * @return {string} unique key\n */\n\n\nfunction makeKey(model) {\n  return model.type + '||' + model.id;\n}\n\nexports.collect = collect;\nexports.fixValue = fixValue;\nexports.getAxisInfo = getAxisInfo;\nexports.getAxisPointerModel = getAxisPointerModel;\nexports.makeKey = makeKey;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/modelHelper.js\n// module id = 1015\n// module chunks = 0 1 2","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar List = require(\"../../data/List\");\n\nvar completeDimensions = require(\"../../data/helper/completeDimensions\");\n\nvar _model = require(\"../../util/model\");\n\nvar getDataItemValue = _model.getDataItemValue;\nvar converDataValue = _model.converDataValue;\nvar isDataItemOption = _model.isDataItemOption;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nfunction firstDataNotNull(data) {\n  var i = 0;\n\n  while (i < data.length && data[i] == null) {\n    i++;\n  }\n\n  return data[i];\n}\n\nfunction ifNeedCompleteOrdinalData(data) {\n  var sampleItem = firstDataNotNull(data);\n  return sampleItem != null && !zrUtil.isArray(getDataItemValue(sampleItem));\n}\n/**\n * Helper function to create a list from option data\n */\n\n\nfunction createListFromArray(data, seriesModel, ecModel) {\n  // If data is undefined\n  data = data || [];\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var creator = creators[coordSysName];\n  var registeredCoordSys = CoordinateSystem.get(coordSysName);\n  var completeDimOpt = {\n    encodeDef: seriesModel.get('encode'),\n    dimsDef: seriesModel.get('dimensions')\n  }; // FIXME\n\n  var axesInfo = creator && creator(data, seriesModel, ecModel, completeDimOpt);\n  var dimensions = axesInfo && axesInfo.dimensions;\n\n  if (!dimensions) {\n    // Get dimensions from registered coordinate system\n    dimensions = registeredCoordSys && (registeredCoordSys.getDimensionsInfo ? registeredCoordSys.getDimensionsInfo() : registeredCoordSys.dimensions.slice()) || ['x', 'y'];\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n  }\n\n  var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;\n  var list = new List(dimensions, seriesModel);\n  var nameList = createNameList(axesInfo, data);\n  var categories = {};\n  var dimValueGetter = categoryIndex >= 0 && ifNeedCompleteOrdinalData(data) ? function (itemOpt, dimName, dataIndex, dimIndex) {\n    // If any dataItem is like { value: 10 }\n    if (isDataItemOption(itemOpt)) {\n      list.hasItemOption = true;\n    } // Use dataIndex as ordinal value in categoryAxis\n\n\n    return dimIndex === categoryIndex ? dataIndex : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);\n  } : function (itemOpt, dimName, dataIndex, dimIndex) {\n    var value = getDataItemValue(itemOpt);\n    var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]); // If any dataItem is like { value: 10 }\n\n    if (isDataItemOption(itemOpt)) {\n      list.hasItemOption = true;\n    }\n\n    var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;\n\n    if (categoryAxesModels && categoryAxesModels[dimName]) {\n      // If given value is a category string\n      if (typeof val === 'string') {\n        // Lazy get categories\n        categories[dimName] = categories[dimName] || categoryAxesModels[dimName].getCategories();\n        val = zrUtil.indexOf(categories[dimName], val);\n\n        if (val < 0 && !isNaN(val)) {\n          // In case some one write '1', '2' istead of 1, 2\n          val = +val;\n        }\n      }\n    }\n\n    return val;\n  };\n  list.hasItemOption = false;\n  list.initData(data, nameList, dimValueGetter);\n  return list;\n}\n\nfunction isStackable(axisType) {\n  return axisType !== 'category' && axisType !== 'time';\n}\n\nfunction getDimTypeByAxis(axisType) {\n  return axisType === 'category' ? 'ordinal' : axisType === 'time' ? 'time' : 'float';\n}\n/**\n * Creaters for each coord system.\n */\n\n\nvar creators = {\n  cartesian2d: function (data, seriesModel, ecModel, completeDimOpt) {\n    var axesModels = zrUtil.map(['xAxis', 'yAxis'], function (name) {\n      return ecModel.queryComponents({\n        mainType: name,\n        index: seriesModel.get(name + 'Index'),\n        id: seriesModel.get(name + 'Id')\n      })[0];\n    });\n    var xAxisModel = axesModels[0];\n    var yAxisModel = axesModels[1];\n    var xAxisType = xAxisModel.get('type');\n    var yAxisType = yAxisModel.get('type');\n    var dimensions = [{\n      name: 'x',\n      type: getDimTypeByAxis(xAxisType),\n      stackable: isStackable(xAxisType)\n    }, {\n      name: 'y',\n      // If two category axes\n      type: getDimTypeByAxis(yAxisType),\n      stackable: isStackable(yAxisType)\n    }];\n    var isXAxisCateogry = xAxisType === 'category';\n    var isYAxisCategory = yAxisType === 'category';\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n    var categoryAxesModels = {};\n\n    if (isXAxisCateogry) {\n      categoryAxesModels.x = xAxisModel;\n    }\n\n    if (isYAxisCategory) {\n      categoryAxesModels.y = yAxisModel;\n    }\n\n    return {\n      dimensions: dimensions,\n      categoryIndex: isXAxisCateogry ? 0 : isYAxisCategory ? 1 : -1,\n      categoryAxesModels: categoryAxesModels\n    };\n  },\n  singleAxis: function (data, seriesModel, ecModel, completeDimOpt) {\n    var singleAxisModel = ecModel.queryComponents({\n      mainType: 'singleAxis',\n      index: seriesModel.get('singleAxisIndex'),\n      id: seriesModel.get('singleAxisId')\n    })[0];\n    var singleAxisType = singleAxisModel.get('type');\n    var isCategory = singleAxisType === 'category';\n    var dimensions = [{\n      name: 'single',\n      type: getDimTypeByAxis(singleAxisType),\n      stackable: isStackable(singleAxisType)\n    }];\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n    var categoryAxesModels = {};\n\n    if (isCategory) {\n      categoryAxesModels.single = singleAxisModel;\n    }\n\n    return {\n      dimensions: dimensions,\n      categoryIndex: isCategory ? 0 : -1,\n      categoryAxesModels: categoryAxesModels\n    };\n  },\n  polar: function (data, seriesModel, ecModel, completeDimOpt) {\n    var polarModel = ecModel.queryComponents({\n      mainType: 'polar',\n      index: seriesModel.get('polarIndex'),\n      id: seriesModel.get('polarId')\n    })[0];\n    var angleAxisModel = polarModel.findAxisModel('angleAxis');\n    var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n    var radiusAxisType = radiusAxisModel.get('type');\n    var angleAxisType = angleAxisModel.get('type');\n    var dimensions = [{\n      name: 'radius',\n      type: getDimTypeByAxis(radiusAxisType),\n      stackable: isStackable(radiusAxisType)\n    }, {\n      name: 'angle',\n      type: getDimTypeByAxis(angleAxisType),\n      stackable: isStackable(angleAxisType)\n    }];\n    var isAngleAxisCateogry = angleAxisType === 'category';\n    var isRadiusAxisCateogry = radiusAxisType === 'category';\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n    var categoryAxesModels = {};\n\n    if (isRadiusAxisCateogry) {\n      categoryAxesModels.radius = radiusAxisModel;\n    }\n\n    if (isAngleAxisCateogry) {\n      categoryAxesModels.angle = angleAxisModel;\n    }\n\n    return {\n      dimensions: dimensions,\n      categoryIndex: isAngleAxisCateogry ? 1 : isRadiusAxisCateogry ? 0 : -1,\n      categoryAxesModels: categoryAxesModels\n    };\n  },\n  geo: function (data, seriesModel, ecModel, completeDimOpt) {\n    // TODO Region\n    // 多个散点图系列在同一个地区的时候\n    return {\n      dimensions: completeDimensions([{\n        name: 'lng'\n      }, {\n        name: 'lat'\n      }], data, completeDimOpt)\n    };\n  }\n};\n\nfunction createNameList(result, data) {\n  var nameList = [];\n  var categoryDim = result && result.dimensions[result.categoryIndex];\n  var categoryAxisModel;\n\n  if (categoryDim) {\n    categoryAxisModel = result.categoryAxesModels[categoryDim.name];\n  }\n\n  if (categoryAxisModel) {\n    // FIXME Two category axis\n    var categories = categoryAxisModel.getCategories();\n\n    if (categories) {\n      var dataLen = data.length; // Ordered data is given explicitly like\n      // [[3, 0.2], [1, 0.3], [2, 0.15]]\n      // or given scatter data,\n      // pick the category\n\n      if (zrUtil.isArray(data[0]) && data[0].length > 1) {\n        nameList = [];\n\n        for (var i = 0; i < dataLen; i++) {\n          nameList[i] = categories[data[i][result.categoryIndex || 0]];\n        }\n      } else {\n        nameList = categories.slice(0);\n      }\n    }\n  }\n\n  return nameList;\n}\n\nvar _default = createListFromArray;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/createListFromArray.js\n// module id = 1016\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar axisHelper = require(\"./axisHelper\");\n\nvar linearMap = numberUtil.linearMap;\n\nfunction fixExtentWithBands(extent, nTick) {\n  var size = extent[1] - extent[0];\n  var len = nTick;\n  var margin = size / len / 2;\n  extent[0] += margin;\n  extent[1] -= margin;\n}\n\nvar normalizedExtent = [0, 1];\n/**\n * @name module:echarts/coord/CartesianAxis\n * @constructor\n */\n\nvar Axis = function (dim, scale, extent) {\n  /**\n   * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n   * @type {string}\n   */\n  this.dim = dim;\n  /**\n   * Axis scale\n   * @type {module:echarts/coord/scale/*}\n   */\n\n  this.scale = scale;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  this._extent = extent || [0, 0];\n  /**\n   * @type {boolean}\n   */\n\n  this.inverse = false;\n  /**\n   * Usually true when axis has a ordinal scale\n   * @type {boolean}\n   */\n\n  this.onBand = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._labelInterval;\n};\n\nAxis.prototype = {\n  constructor: Axis,\n\n  /**\n   * If axis extent contain given coord\n   * @param {number} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var extent = this._extent;\n    var min = Math.min(extent[0], extent[1]);\n    var max = Math.max(extent[0], extent[1]);\n    return coord >= min && coord <= max;\n  },\n\n  /**\n   * If axis extent contain given data\n   * @param {number} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.contain(this.dataToCoord(data));\n  },\n\n  /**\n   * Get coord extent.\n   * @return {Array.<number>}\n   */\n  getExtent: function () {\n    return this._extent.slice();\n  },\n\n  /**\n   * Get precision used for formatting\n   * @param {Array.<number>} [dataExtent]\n   * @return {number}\n   */\n  getPixelPrecision: function (dataExtent) {\n    return numberUtil.getPixelPrecision(dataExtent || this.scale.getExtent(), this._extent);\n  },\n\n  /**\n   * Set coord extent\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var extent = this._extent;\n    extent[0] = start;\n    extent[1] = end;\n  },\n\n  /**\n   * Convert data to coord. Data is the rank if it has a ordinal scale\n   * @param {number} data\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  dataToCoord: function (data, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n    data = scale.normalize(data);\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    return linearMap(data, normalizedExtent, extent, clamp);\n  },\n\n  /**\n   * Convert coord to data. Data is the rank if it has a ordinal scale\n   * @param {number} coord\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  coordToData: function (coord, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    var t = linearMap(coord, extent, normalizedExtent, clamp);\n    return this.scale.scale(t);\n  },\n\n  /**\n   * Convert pixel point to data in axis\n   * @param {Array.<number>} point\n   * @param  {boolean} clamp\n   * @return {number} data\n   */\n  pointToData: function (point, clamp) {// Should be implemented in derived class if necessary.\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicksCoords: function (alignWithLabel) {\n    if (this.onBand && !alignWithLabel) {\n      var bands = this.getBands();\n      var coords = [];\n\n      for (var i = 0; i < bands.length; i++) {\n        coords.push(bands[i][0]);\n      }\n\n      if (bands[i - 1]) {\n        coords.push(bands[i - 1][1]);\n      }\n\n      return coords;\n    } else {\n      return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n    }\n  },\n\n  /**\n   * Coords of labels are on the ticks or on the middle of bands\n   * @return {Array.<number>}\n   */\n  getLabelsCoords: function () {\n    return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n  },\n\n  /**\n   * Get bands.\n   *\n   * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n   * |---1---|---2---|---3---|---4---|.\n   *\n   * @return {Array}\n   */\n  // FIXME Situation when labels is on ticks\n  getBands: function () {\n    var extent = this.getExtent();\n    var bands = [];\n    var len = this.scale.count();\n    var start = extent[0];\n    var end = extent[1];\n    var span = end - start;\n\n    for (var i = 0; i < len; i++) {\n      bands.push([span * i / len + start, span * (i + 1) / len + start]);\n    }\n\n    return bands;\n  },\n\n  /**\n   * Get width of band\n   * @return {number}\n   */\n  getBandWidth: function () {\n    var axisExtent = this._extent;\n    var dataExtent = this.scale.getExtent();\n    var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0); // Fix #2728, avoid NaN when only one data.\n\n    len === 0 && (len = 1);\n    var size = Math.abs(axisExtent[1] - axisExtent[0]);\n    return Math.abs(size) / len;\n  },\n\n  /**\n   * @abstract\n   * @return {boolean} Is horizontal\n   */\n  isHorizontal: null,\n\n  /**\n   * @abstract\n   * @return {number} Get axis rotate, by degree.\n   */\n  getRotate: null,\n\n  /**\n   * Get interval of the axis label.\n   * To get precise result, at least one of `getRotate` and `isHorizontal`\n   * should be implemented.\n   * @return {number}\n   */\n  getLabelInterval: function () {\n    var labelInterval = this._labelInterval;\n\n    if (!labelInterval) {\n      var axisModel = this.model;\n      var labelModel = axisModel.getModel('axisLabel');\n      labelInterval = labelModel.get('interval');\n\n      if (this.type === 'category' && (labelInterval == null || labelInterval === 'auto')) {\n        labelInterval = axisHelper.getAxisLabelInterval(zrUtil.map(this.scale.getTicks(), this.dataToCoord, this), axisModel.getFormattedLabels(), labelModel.getFont(), this.getRotate ? this.getRotate() : this.isHorizontal && !this.isHorizontal() ? 90 : 0, labelModel.get('rotate'));\n      }\n\n      this._labelInterval = labelInterval;\n    }\n\n    return labelInterval;\n  }\n};\nvar _default = Axis;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/Axis.js\n// module id = 1017\n// module chunks = 0 1 2","var zrUtil = require(\"../core/util\");\n\nvar Style = require(\"./Style\");\n\nvar Element = require(\"../Element\");\n\nvar RectText = require(\"./mixin/RectText\");\n\n/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n/**\n * @alias module:zrender/graphic/Displayable\n * @extends module:zrender/Element\n * @extends module:zrender/graphic/mixin/RectText\n */\nfunction Displayable(opts) {\n  opts = opts || {};\n  Element.call(this, opts); // Extend properties\n\n  for (var name in opts) {\n    if (opts.hasOwnProperty(name) && name !== 'style') {\n      this[name] = opts[name];\n    }\n  }\n  /**\n   * @type {module:zrender/graphic/Style}\n   */\n\n\n  this.style = new Style(opts.style, this);\n  this._rect = null; // Shapes for cascade clipping.\n\n  this.__clipPaths = []; // FIXME Stateful must be mixined after style is setted\n  // Stateful.call(this, opts);\n}\n\nDisplayable.prototype = {\n  constructor: Displayable,\n  type: 'displayable',\n\n  /**\n   * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n   * Dirty flag. From which painter will determine if this displayable object needs brush\n   * @name module:zrender/graphic/Displayable#__dirty\n   * @type {boolean}\n   */\n  __dirty: true,\n\n  /**\n   * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n   * If ignore drawing of the displayable object. Mouse event will still be triggered\n   * @name module:/zrender/graphic/Displayable#invisible\n   * @type {boolean}\n   * @default false\n   */\n  invisible: false,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z: 0,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z2: 0,\n\n  /**\n   * z层level，决定绘画在哪层canvas中\n   * @name module:/zrender/graphic/Displayable#zlevel\n   * @type {number}\n   * @default 0\n   */\n  zlevel: 0,\n\n  /**\n   * 是否可拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  draggable: false,\n\n  /**\n   * 是否正在拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  dragging: false,\n\n  /**\n   * 是否相应鼠标事件\n   * @name module:/zrender/graphic/Displayable#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * If enable culling\n   * @type {boolean}\n   * @default false\n   */\n  culling: false,\n\n  /**\n   * Mouse cursor when hovered\n   * @name module:/zrender/graphic/Displayable#cursor\n   * @type {string}\n   */\n  cursor: 'pointer',\n\n  /**\n   * If hover area is bounding rect\n   * @name module:/zrender/graphic/Displayable#rectHover\n   * @type {string}\n   */\n  rectHover: false,\n\n  /**\n   * Render the element progressively when the value >= 0,\n   * usefull for large data.\n   * @type {number}\n   */\n  progressive: -1,\n  beforeBrush: function (ctx) {},\n  afterBrush: function (ctx) {},\n\n  /**\n   * 图形绘制方法\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  // Interface\n  brush: function (ctx, prevEl) {},\n\n  /**\n   * 获取最小包围盒\n   * @return {module:zrender/core/BoundingRect}\n   */\n  // Interface\n  getBoundingRect: function () {},\n\n  /**\n   * 判断坐标 x, y 是否在图形上\n   * If displayable element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  contain: function (x, y) {\n    return this.rectContain(x, y);\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    cb.call(context, this);\n  },\n\n  /**\n   * 判断坐标 x, y 是否在图形的包围盒上\n   * If bounding rect of element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  rectContain: function (x, y) {\n    var coord = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    return rect.contain(coord[0], coord[1]);\n  },\n\n  /**\n   * 标记图形元素为脏，并且在下一帧重绘\n   * Mark displayable element dirty and refresh next frame\n   */\n  dirty: function () {\n    this.__dirty = true;\n    this._rect = null;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * 图形是否会触发事件\n   * If displayable object binded any event\n   * @return {boolean}\n   */\n  // TODO, 通过 bind 绑定的事件\n  // isSilent: function () {\n  //     return !(\n  //         this.hoverable || this.draggable\n  //         || this.onmousemove || this.onmouseover || this.onmouseout\n  //         || this.onmousedown || this.onmouseup || this.onclick\n  //         || this.ondragenter || this.ondragover || this.ondragleave\n  //         || this.ondrop\n  //     );\n  // },\n\n  /**\n   * Alias for animate('style')\n   * @param {boolean} loop\n   */\n  animateStyle: function (loop) {\n    return this.animate('style', loop);\n  },\n  attrKV: function (key, value) {\n    if (key !== 'style') {\n      Element.prototype.attrKV.call(this, key, value);\n    } else {\n      this.style.set(value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setStyle: function (key, value) {\n    this.style.set(key, value);\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * Use given style object\n   * @param  {Object} obj\n   */\n  useStyle: function (obj) {\n    this.style = new Style(obj, this);\n    this.dirty(false);\n    return this;\n  }\n};\nzrUtil.inherits(Displayable, Element);\nzrUtil.mixin(Displayable, RectText); // zrUtil.mixin(Displayable, Stateful);\n\nvar _default = Displayable;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/Displayable.js\n// module id = 1018\n// module chunks = 0 1 2","/**\n * @param {Array.<Object>} colorStops\n */\nvar Gradient = function (colorStops) {\n  this.colorStops = colorStops || [];\n};\n\nGradient.prototype = {\n  constructor: Gradient,\n  addColorStop: function (offset, color) {\n    this.colorStops.push({\n      offset: offset,\n      color: color\n    });\n  }\n};\nvar _default = Gradient;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/Gradient.js\n// module id = 1019\n// module chunks = 0 1 2","var numberUtil = require(\"../util/number\");\n\nvar formatUtil = require(\"../util/format\");\n\nvar Scale = require(\"./Scale\");\n\nvar helper = require(\"./helper\");\n\n/**\n * Interval scale\n * @module echarts/scale/Interval\n */\nvar roundNumber = numberUtil.round;\n/**\n * @alias module:echarts/coord/scale/Interval\n * @constructor\n */\n\nvar IntervalScale = Scale.extend({\n  type: 'interval',\n  _interval: 0,\n  _intervalPrecision: 2,\n  setExtent: function (start, end) {\n    var thisExtent = this._extent; //start,end may be a Number like '25',so...\n\n    if (!isNaN(start)) {\n      thisExtent[0] = parseFloat(start);\n    }\n\n    if (!isNaN(end)) {\n      thisExtent[1] = parseFloat(end);\n    }\n  },\n  unionExtent: function (other) {\n    var extent = this._extent;\n    other[0] < extent[0] && (extent[0] = other[0]);\n    other[1] > extent[1] && (extent[1] = other[1]); // unionExtent may called by it's sub classes\n\n    IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n  },\n\n  /**\n   * Get interval\n   */\n  getInterval: function () {\n    return this._interval;\n  },\n\n  /**\n   * Set interval\n   */\n  setInterval: function (interval) {\n    this._interval = interval; // Dropped auto calculated niceExtent and use user setted extent\n    // We assume user wan't to set both interval, min, max to get a better result\n\n    this._niceExtent = this._extent.slice();\n    this._intervalPrecision = helper.getIntervalPrecision(interval);\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    return helper.intervalScaleGetTicks(this._interval, this._extent, this._niceExtent, this._intervalPrecision);\n  },\n\n  /**\n   * @return {Array.<string>}\n   */\n  getTicksLabels: function () {\n    var labels = [];\n    var ticks = this.getTicks();\n\n    for (var i = 0; i < ticks.length; i++) {\n      labels.push(this.getLabel(ticks[i]));\n    }\n\n    return labels;\n  },\n\n  /**\n   * @param {number} data\n   * @param {Object} [opt]\n   * @param {number|string} [opt.precision] If 'auto', use nice presision.\n   * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n   * @return {string}\n   */\n  getLabel: function (data, opt) {\n    if (data == null) {\n      return '';\n    }\n\n    var precision = opt && opt.precision;\n\n    if (precision == null) {\n      precision = numberUtil.getPrecisionSafe(data) || 0;\n    } else if (precision === 'auto') {\n      // Should be more precise then tick.\n      precision = this._intervalPrecision;\n    } // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n    // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n\n\n    data = roundNumber(data, precision, true);\n    return formatUtil.addCommas(data);\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   *\n   * @param {number} [splitNumber = 5] Desired number of ticks\n   * @param {number} [minInterval]\n   * @param {number} [maxInterval]\n   */\n  niceTicks: function (splitNumber, minInterval, maxInterval) {\n    splitNumber = splitNumber || 5;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (!isFinite(span)) {\n      return;\n    } // User may set axis min 0 and data are all negative\n    // FIXME If it needs to reverse ?\n\n\n    if (span < 0) {\n      span = -span;\n      extent.reverse();\n    }\n\n    var result = helper.intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval);\n    this._intervalPrecision = result.intervalPrecision;\n    this._interval = result.interval;\n    this._niceExtent = result.niceTickExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @param {Object} opt\n   * @param {number} [opt.splitNumber = 5] Given approx tick number\n   * @param {boolean} [opt.fixMin=false]\n   * @param {boolean} [opt.fixMax=false]\n   * @param {boolean} [opt.minInterval]\n   * @param {boolean} [opt.maxInterval]\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      if (extent[0] !== 0) {\n        // Expand extent\n        var expandSize = extent[0]; // In the fowllowing case\n        //      Axis has been fixed max 100\n        //      Plus data are all 100 and axis extent are [100, 100].\n        // Extend to the both side will cause expanded max is larger than fixed max.\n        // So only expand to the smaller side.\n\n        if (!opt.fixMax) {\n          extent[1] += expandSize / 2;\n          extent[0] -= expandSize / 2;\n        } else {\n          extent[0] -= expandSize / 2;\n        }\n      } else {\n        extent[1] = 1;\n      }\n    }\n\n    var span = extent[1] - extent[0]; // If there are no data and extent are [Infinity, -Infinity]\n\n    if (!isFinite(span)) {\n      extent[0] = 0;\n      extent[1] = 1;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n    }\n  }\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nIntervalScale.create = function () {\n  return new IntervalScale();\n};\n\nvar _default = IntervalScale;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/scale/Interval.js\n// module id = 1020\n// module chunks = 0 1 2","var _util = require(\"zrender/lib/core/util\");\n\nvar retrieve = _util.retrieve;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar each = _util.each;\n\nvar formatUtil = require(\"../../util/format\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _number = require(\"../../util/number\");\n\nvar isRadianAroundZero = _number.isRadianAroundZero;\nvar remRadian = _number.remRadian;\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar matrixUtil = require(\"zrender/lib/core/matrix\");\n\nvar _vector = require(\"zrender/lib/core/vector\");\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar PI = Math.PI;\n\nfunction makeAxisEventDataBase(axisModel) {\n  var eventData = {\n    componentType: axisModel.mainType\n  };\n  eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n  return eventData;\n}\n/**\n * A final axis is translated and rotated from a \"standard axis\".\n * So opt.position and opt.rotation is required.\n *\n * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n * for example: (0, 0) ------------> (0, 50)\n *\n * nameDirection or tickDirection or labelDirection is 1 means tick\n * or label is below the standard axis, whereas is -1 means above\n * the standard axis. labelOffset means offset between label and axis,\n * which is useful when 'onZero', where axisLabel is in the grid and\n * label in outside grid.\n *\n * Tips: like always,\n * positive rotation represents anticlockwise, and negative rotation\n * represents clockwise.\n * The direction of position coordinate is the same as the direction\n * of screen coordinate.\n *\n * Do not need to consider axis 'inverse', which is auto processed by\n * axis extent.\n *\n * @param {module:zrender/container/Group} group\n * @param {Object} axisModel\n * @param {Object} opt Standard axis parameters.\n * @param {Array.<number>} opt.position [x, y]\n * @param {number} opt.rotation by radian\n * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle' or 'center'.\n * @param {number} [opt.tickDirection=1] 1 or -1\n * @param {number} [opt.labelDirection=1] 1 or -1\n * @param {number} [opt.labelOffset=0] Usefull when onZero.\n * @param {string} [opt.axisLabelShow] default get from axisModel.\n * @param {string} [opt.axisName] default get from axisModel.\n * @param {number} [opt.axisNameAvailableWidth]\n * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n * @param {number} [opt.labelInterval] Default label interval when label\n *                                     interval from model is null or 'auto'.\n * @param {number} [opt.strokeContainThreshold] Default label interval when label\n * @param {number} [opt.nameTruncateMaxWidth]\n */\n\n\nvar AxisBuilder = function (axisModel, opt) {\n  /**\n   * @readOnly\n   */\n  this.opt = opt;\n  /**\n   * @readOnly\n   */\n\n  this.axisModel = axisModel; // Default value\n\n  defaults(opt, {\n    labelOffset: 0,\n    nameDirection: 1,\n    tickDirection: 1,\n    labelDirection: 1,\n    silent: true\n  });\n  /**\n   * @readOnly\n   */\n\n  this.group = new graphic.Group(); // FIXME Not use a seperate text group?\n\n  var dumbGroup = new graphic.Group({\n    position: opt.position.slice(),\n    rotation: opt.rotation\n  }); // this.group.add(dumbGroup);\n  // this._dumbGroup = dumbGroup;\n\n  dumbGroup.updateTransform();\n  this._transform = dumbGroup.transform;\n  this._dumbGroup = dumbGroup;\n};\n\nAxisBuilder.prototype = {\n  constructor: AxisBuilder,\n  hasBuilder: function (name) {\n    return !!builders[name];\n  },\n  add: function (name) {\n    builders[name].call(this);\n  },\n  getGroup: function () {\n    return this.group;\n  }\n};\nvar builders = {\n  /**\n   * @private\n   */\n  axisLine: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n\n    if (!axisModel.get('axisLine.show')) {\n      return;\n    }\n\n    var extent = this.axisModel.axis.getExtent();\n    var matrix = this._transform;\n    var pt1 = [extent[0], 0];\n    var pt2 = [extent[1], 0];\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    }\n\n    var lineStyle = extend({\n      lineCap: 'round'\n    }, axisModel.getModel('axisLine.lineStyle').getLineStyle());\n    this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'line',\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: lineStyle,\n      strokeContainThreshold: opt.strokeContainThreshold || 5,\n      silent: true,\n      z2: 1\n    })));\n    var arrows = axisModel.get('axisLine.symbol');\n    var arrowSize = axisModel.get('axisLine.symbolSize');\n\n    if (arrows != null) {\n      if (typeof arrows === 'string') {\n        // Use the same arrow for start and end point\n        arrows = [arrows, arrows];\n      }\n\n      if (typeof arrowSize === 'string' || typeof arrowSize === 'number') {\n        // Use the same size for width and height\n        arrowSize = [arrowSize, arrowSize];\n      }\n\n      var symbolWidth = arrowSize[0];\n      var symbolHeight = arrowSize[1];\n      each([[opt.rotation + Math.PI / 2, pt1], [opt.rotation - Math.PI / 2, pt2]], function (item, index) {\n        if (arrows[index] !== 'none' && arrows[index] != null) {\n          var symbol = createSymbol(arrows[index], -symbolWidth / 2, -symbolHeight / 2, symbolWidth, symbolHeight, lineStyle.stroke, true);\n          symbol.attr({\n            rotation: item[0],\n            position: item[1],\n            silent: true\n          });\n          this.group.add(symbol);\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  axisTickLabel: function () {\n    var axisModel = this.axisModel;\n    var opt = this.opt;\n    var tickEls = buildAxisTick(this, axisModel, opt);\n    var labelEls = buildAxisLabel(this, axisModel, opt);\n    fixMinMaxLabelShow(axisModel, labelEls, tickEls);\n  },\n\n  /**\n   * @private\n   */\n  axisName: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n    var name = retrieve(opt.axisName, axisModel.get('name'));\n\n    if (!name) {\n      return;\n    }\n\n    var nameLocation = axisModel.get('nameLocation');\n    var nameDirection = opt.nameDirection;\n    var textStyleModel = axisModel.getModel('nameTextStyle');\n    var gap = axisModel.get('nameGap') || 0;\n    var extent = this.axisModel.axis.getExtent();\n    var gapSignal = extent[0] > extent[1] ? -1 : 1;\n    var pos = [nameLocation === 'start' ? extent[0] - gapSignal * gap : nameLocation === 'end' ? extent[1] + gapSignal * gap : (extent[0] + extent[1]) / 2, // 'middle'\n    // Reuse labelOffset.\n    isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0];\n    var labelLayout;\n    var nameRotation = axisModel.get('nameRotate');\n\n    if (nameRotation != null) {\n      nameRotation = nameRotation * PI / 180; // To radian.\n    }\n\n    var axisNameAvailableWidth;\n\n    if (isNameLocationCenter(nameLocation)) {\n      labelLayout = innerTextLayout(opt.rotation, nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n      nameDirection);\n    } else {\n      labelLayout = endTextLayout(opt, nameLocation, nameRotation || 0, extent);\n      axisNameAvailableWidth = opt.axisNameAvailableWidth;\n\n      if (axisNameAvailableWidth != null) {\n        axisNameAvailableWidth = Math.abs(axisNameAvailableWidth / Math.sin(labelLayout.rotation));\n        !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n      }\n    }\n\n    var textFont = textStyleModel.getFont();\n    var truncateOpt = axisModel.get('nameTruncate', true) || {};\n    var ellipsis = truncateOpt.ellipsis;\n    var maxWidth = retrieve(opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth); // FIXME\n    // truncate rich text? (consider performance)\n\n    var truncatedText = ellipsis != null && maxWidth != null ? formatUtil.truncateText(name, maxWidth, textFont, ellipsis, {\n      minChar: 2,\n      placeholder: truncateOpt.placeholder\n    }) : name;\n    var tooltipOpt = axisModel.get('tooltip', true);\n    var mainType = axisModel.mainType;\n    var formatterParams = {\n      componentType: mainType,\n      name: name,\n      $vars: ['name']\n    };\n    formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'name',\n      __fullText: name,\n      __truncatedText: truncatedText,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: isSilent(axisModel),\n      z2: 1,\n      tooltip: tooltipOpt && tooltipOpt.show ? extend({\n        content: name,\n        formatter: function () {\n          return name;\n        },\n        formatterParams: formatterParams\n      }, tooltipOpt) : null\n    });\n    graphic.setTextStyle(textEl.style, textStyleModel, {\n      text: truncatedText,\n      textFont: textFont,\n      textFill: textStyleModel.getTextColor() || axisModel.get('axisLine.lineStyle.color'),\n      textAlign: labelLayout.textAlign,\n      textVerticalAlign: labelLayout.textVerticalAlign\n    });\n\n    if (axisModel.get('triggerEvent')) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisName';\n      textEl.eventData.name = name;\n    } // FIXME\n\n\n    this._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    this.group.add(textEl);\n    textEl.decomposeTransform();\n  }\n};\n/**\n * @public\n * @static\n * @param {Object} opt\n * @param {number} axisRotation in radian\n * @param {number} textRotation in radian\n * @param {number} direction\n * @return {Object} {\n *  rotation, // according to axis\n *  textAlign,\n *  textVerticalAlign\n * }\n */\n\nvar innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n  var rotationDiff = remRadian(textRotation - axisRotation);\n  var textAlign;\n  var textVerticalAlign;\n\n  if (isRadianAroundZero(rotationDiff)) {\n    // Label is parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI)) {\n    // Label is inverse parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff > 0 && rotationDiff < PI) {\n      textAlign = direction > 0 ? 'right' : 'left';\n    } else {\n      textAlign = direction > 0 ? 'left' : 'right';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n};\n\nfunction endTextLayout(opt, textPosition, textRotate, extent) {\n  var rotationDiff = remRadian(textRotate - opt.rotation);\n  var textAlign;\n  var textVerticalAlign;\n  var inverse = extent[0] > extent[1];\n  var onLeft = textPosition === 'start' && !inverse || textPosition !== 'start' && inverse;\n\n  if (isRadianAroundZero(rotationDiff - PI / 2)) {\n    textVerticalAlign = onLeft ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n    textVerticalAlign = onLeft ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n      textAlign = onLeft ? 'left' : 'right';\n    } else {\n      textAlign = onLeft ? 'right' : 'left';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction isSilent(axisModel) {\n  var tooltipOpt = axisModel.get('tooltip');\n  return axisModel.get('silent') // Consider mouse cursor, add these restrictions.\n  || !(axisModel.get('triggerEvent') || tooltipOpt && tooltipOpt.show);\n}\n\nfunction fixMinMaxLabelShow(axisModel, labelEls, tickEls) {\n  // If min or max are user set, we need to check\n  // If the tick on min(max) are overlap on their neighbour tick\n  // If they are overlapped, we need to hide the min(max) tick label\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel'); // FIXME\n  // Have not consider onBand yet, where tick els is more than label els.\n\n  labelEls = labelEls || [];\n  tickEls = tickEls || [];\n  var firstLabel = labelEls[0];\n  var nextLabel = labelEls[1];\n  var lastLabel = labelEls[labelEls.length - 1];\n  var prevLabel = labelEls[labelEls.length - 2];\n  var firstTick = tickEls[0];\n  var nextTick = tickEls[1];\n  var lastTick = tickEls[tickEls.length - 1];\n  var prevTick = tickEls[tickEls.length - 2];\n\n  if (showMinLabel === false) {\n    ignoreEl(firstLabel);\n    ignoreEl(firstTick);\n  } else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n    if (showMinLabel) {\n      ignoreEl(nextLabel);\n      ignoreEl(nextTick);\n    } else {\n      ignoreEl(firstLabel);\n      ignoreEl(firstTick);\n    }\n  }\n\n  if (showMaxLabel === false) {\n    ignoreEl(lastLabel);\n    ignoreEl(lastTick);\n  } else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n    if (showMaxLabel) {\n      ignoreEl(prevLabel);\n      ignoreEl(prevTick);\n    } else {\n      ignoreEl(lastLabel);\n      ignoreEl(lastTick);\n    }\n  }\n}\n\nfunction ignoreEl(el) {\n  el && (el.ignore = true);\n}\n\nfunction isTwoLabelOverlapped(current, next, labelLayout) {\n  // current and next has the same rotation.\n  var firstRect = current && current.getBoundingRect().clone();\n  var nextRect = next && next.getBoundingRect().clone();\n\n  if (!firstRect || !nextRect) {\n    return;\n  } // When checking intersect of two rotated labels, we use mRotationBack\n  // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n\n\n  var mRotationBack = matrixUtil.identity([]);\n  matrixUtil.rotate(mRotationBack, mRotationBack, -current.rotation);\n  firstRect.applyTransform(matrixUtil.mul([], mRotationBack, current.getLocalTransform()));\n  nextRect.applyTransform(matrixUtil.mul([], mRotationBack, next.getLocalTransform()));\n  return firstRect.intersect(nextRect);\n}\n\nfunction isNameLocationCenter(nameLocation) {\n  return nameLocation === 'middle' || nameLocation === 'center';\n}\n/**\n * @static\n */\n\n\nvar ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval, ticksCnt, showMinLabel, showMaxLabel) {\n  if (i === 0 && showMinLabel || i === ticksCnt - 1 && showMaxLabel) {\n    return false;\n  } // FIXME\n  // Have not consider label overlap (if label is too long) yet.\n\n\n  var rawTick;\n  var scale = axis.scale;\n  return scale.type === 'ordinal' && (typeof interval === 'function' ? (rawTick = scale.getTicks()[i], !interval(rawTick, scale.getLabel(rawTick))) : i % (interval + 1));\n};\n/**\n * @static\n */\n\n\nvar getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n  var interval = model.get('interval');\n\n  if (interval == null || interval == 'auto') {\n    interval = labelInterval;\n  }\n\n  return interval;\n};\n\nfunction buildAxisTick(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n\n  if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n    return;\n  }\n\n  var tickModel = axisModel.getModel('axisTick');\n  var lineStyleModel = tickModel.getModel('lineStyle');\n  var tickLen = tickModel.get('length');\n  var tickInterval = getInterval(tickModel, opt.labelInterval);\n  var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel')); // FIXME\n  // Corresponds to ticksCoords ?\n\n  var ticks = axis.scale.getTicks();\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n  var pt1 = [];\n  var pt2 = [];\n  var matrix = axisBuilder._transform;\n  var tickEls = [];\n  var ticksCnt = ticksCoords.length;\n\n  for (var i = 0; i < ticksCnt; i++) {\n    // Only ordinal scale support tick interval\n    if (ifIgnoreOnTick(axis, i, tickInterval, ticksCnt, showMinLabel, showMaxLabel)) {\n      continue;\n    }\n\n    var tickCoord = ticksCoords[i];\n    pt1[0] = tickCoord;\n    pt1[1] = 0;\n    pt2[0] = tickCoord;\n    pt2[1] = opt.tickDirection * tickLen;\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    } // Tick line, Not use group transform to have better line draw\n\n\n    var tickEl = new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'tick_' + ticks[i],\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: defaults(lineStyleModel.getLineStyle(), {\n        stroke: axisModel.get('axisLine.lineStyle.color')\n      }),\n      z2: 2,\n      silent: true\n    }));\n    axisBuilder.group.add(tickEl);\n    tickEls.push(tickEl);\n  }\n\n  return tickEls;\n}\n\nfunction buildAxisLabel(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n  var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n  if (!show || axis.scale.isBlank()) {\n    return;\n  }\n\n  var labelModel = axisModel.getModel('axisLabel');\n  var labelMargin = labelModel.get('margin');\n  var ticks = axis.scale.getTicks();\n  var labels = axisModel.getFormattedLabels(); // Special label rotate.\n\n  var labelRotation = (retrieve(opt.labelRotate, labelModel.get('rotate')) || 0) * PI / 180;\n  var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n  var categoryData = axisModel.get('data');\n  var labelEls = [];\n  var silent = isSilent(axisModel);\n  var triggerEvent = axisModel.get('triggerEvent');\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n  each(ticks, function (tickVal, index) {\n    if (ifIgnoreOnTick(axis, index, opt.labelInterval, ticks.length, showMinLabel, showMaxLabel)) {\n      return;\n    }\n\n    var itemLabelModel = labelModel;\n\n    if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n      itemLabelModel = new Model(categoryData[tickVal].textStyle, labelModel, axisModel.ecModel);\n    }\n\n    var textColor = itemLabelModel.getTextColor() || axisModel.get('axisLine.lineStyle.color');\n    var tickCoord = axis.dataToCoord(tickVal);\n    var pos = [tickCoord, opt.labelOffset + opt.labelDirection * labelMargin];\n    var labelStr = axis.scale.getLabel(tickVal);\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'label_' + tickVal,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: silent,\n      z2: 10\n    });\n    graphic.setTextStyle(textEl.style, itemLabelModel, {\n      text: labels[index],\n      textAlign: itemLabelModel.getShallow('align', true) || labelLayout.textAlign,\n      textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true) || itemLabelModel.getShallow('baseline', true) || labelLayout.textVerticalAlign,\n      textFill: typeof textColor === 'function' ? textColor( // (1) In category axis with data zoom, tick is not the original\n      // index of axis.data. So tick should not be exposed to user\n      // in category axis.\n      // (2) Compatible with previous version, which always returns labelStr.\n      // But in interval scale labelStr is like '223,445', which maked\n      // user repalce ','. So we modify it to return original val but remain\n      // it as 'string' to avoid error in replacing.\n      axis.type === 'category' ? labelStr : axis.type === 'value' ? tickVal + '' : tickVal, index) : textColor\n    }); // Pack data for mouse event\n\n    if (triggerEvent) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisLabel';\n      textEl.eventData.value = labelStr;\n    } // FIXME\n\n\n    axisBuilder._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    labelEls.push(textEl);\n    axisBuilder.group.add(textEl);\n    textEl.decomposeTransform();\n  });\n  return labelEls;\n}\n\nvar _default = AxisBuilder;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axis/AxisBuilder.js\n// module id = 1021\n// module chunks = 0 1 2","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar axisPointerModelHelper = require(\"../axisPointer/modelHelper\");\n\n/**\n * Base class of AxisView.\n */\nvar AxisView = echarts.extendComponentView({\n  type: 'axis',\n\n  /**\n   * @private\n   */\n  _axisPointer: null,\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  axisPointerClass: null,\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    // FIXME\n    // This process should proformed after coordinate systems updated\n    // (axis scale updated), and should be performed each time update.\n    // So put it here temporarily, although it is not appropriate to\n    // put a model-writing procedure in `view`.\n    this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n    AxisView.superApply(this, 'render', arguments);\n    updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n  },\n\n  /**\n   * Action handler.\n   * @public\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/model/Global} ecModel\n   * @param {module:echarts/ExtensionAPI} api\n   * @param {Object} payload\n   */\n  updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n    updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    var axisPointer = this._axisPointer;\n    axisPointer && axisPointer.remove(api);\n    AxisView.superApply(this, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    disposeAxisPointer(this, api);\n    AxisView.superApply(this, 'dispose', arguments);\n  }\n});\n\nfunction updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n  var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n\n  if (!Clazz) {\n    return;\n  }\n\n  var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n  axisPointerModel ? (axisView._axisPointer || (axisView._axisPointer = new Clazz())).render(axisModel, axisPointerModel, api, forceRender) : disposeAxisPointer(axisView, api);\n}\n\nfunction disposeAxisPointer(axisView, ecModel, api) {\n  var axisPointer = axisView._axisPointer;\n  axisPointer && axisPointer.dispose(ecModel, api);\n  axisView._axisPointer = null;\n}\n\nvar axisPointerClazz = [];\n\nAxisView.registerAxisPointerClass = function (type, clazz) {\n  axisPointerClazz[type] = clazz;\n};\n\nAxisView.getAxisPointerClass = function (type) {\n  return type && axisPointerClazz[type];\n};\n\nvar _default = AxisView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axis/AxisView.js\n// module id = 1022\n// module chunks = 0 1 2","var _config = require(\"../config\");\n\nvar debugMode = _config.debugMode;\n\nvar log = function () {};\n\nif (debugMode === 1) {\n  log = function () {\n    for (var k in arguments) {\n      throw new Error(arguments[k]);\n    }\n  };\n} else if (debugMode > 1) {\n  log = function () {\n    for (var k in arguments) {\n      console.log(arguments[k]);\n    }\n  };\n}\n\nvar _default = log;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/log.js\n// module id = 1023\n// module chunks = 0 1 2","// https://github.com/mziccard/node-timsort\nvar DEFAULT_MIN_MERGE = 32;\nvar DEFAULT_MIN_GALLOPING = 7;\nvar DEFAULT_TMP_STORAGE_LENGTH = 256;\n\nfunction minRunLength(n) {\n  var r = 0;\n\n  while (n >= DEFAULT_MIN_MERGE) {\n    r |= n & 1;\n    n >>= 1;\n  }\n\n  return n + r;\n}\n\nfunction makeAscendingRun(array, lo, hi, compare) {\n  var runHi = lo + 1;\n\n  if (runHi === hi) {\n    return 1;\n  }\n\n  if (compare(array[runHi++], array[lo]) < 0) {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n      runHi++;\n    }\n\n    reverseRun(array, lo, runHi);\n  } else {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n      runHi++;\n    }\n  }\n\n  return runHi - lo;\n}\n\nfunction reverseRun(array, lo, hi) {\n  hi--;\n\n  while (lo < hi) {\n    var t = array[lo];\n    array[lo++] = array[hi];\n    array[hi--] = t;\n  }\n}\n\nfunction binaryInsertionSort(array, lo, hi, start, compare) {\n  if (start === lo) {\n    start++;\n  }\n\n  for (; start < hi; start++) {\n    var pivot = array[start];\n    var left = lo;\n    var right = start;\n    var mid;\n\n    while (left < right) {\n      mid = left + right >>> 1;\n\n      if (compare(pivot, array[mid]) < 0) {\n        right = mid;\n      } else {\n        left = mid + 1;\n      }\n    }\n\n    var n = start - left;\n\n    switch (n) {\n      case 3:\n        array[left + 3] = array[left + 2];\n\n      case 2:\n        array[left + 2] = array[left + 1];\n\n      case 1:\n        array[left + 1] = array[left];\n        break;\n\n      default:\n        while (n > 0) {\n          array[left + n] = array[left + n - 1];\n          n--;\n        }\n\n    }\n\n    array[left] = pivot;\n  }\n}\n\nfunction gallopLeft(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) > 0) {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  } else {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) > 0) {\n      lastOffset = m + 1;\n    } else {\n      offset = m;\n    }\n  }\n\n  return offset;\n}\n\nfunction gallopRight(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) < 0) {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  } else {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) < 0) {\n      offset = m;\n    } else {\n      lastOffset = m + 1;\n    }\n  }\n\n  return offset;\n}\n\nfunction TimSort(array, compare) {\n  var minGallop = DEFAULT_MIN_GALLOPING;\n  var length = 0;\n  var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n  var stackLength = 0;\n  var runStart;\n  var runLength;\n  var stackSize = 0;\n  length = array.length;\n\n  if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n    tmpStorageLength = length >>> 1;\n  }\n\n  var tmp = [];\n  stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n  runStart = [];\n  runLength = [];\n\n  function pushRun(_runStart, _runLength) {\n    runStart[stackSize] = _runStart;\n    runLength[stackSize] = _runLength;\n    stackSize += 1;\n  }\n\n  function mergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n        if (runLength[n - 1] < runLength[n + 1]) {\n          n--;\n        }\n      } else if (runLength[n] > runLength[n + 1]) {\n        break;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function forceMergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n        n--;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function mergeAt(i) {\n    var start1 = runStart[i];\n    var length1 = runLength[i];\n    var start2 = runStart[i + 1];\n    var length2 = runLength[i + 1];\n    runLength[i] = length1 + length2;\n\n    if (i === stackSize - 3) {\n      runStart[i + 1] = runStart[i + 2];\n      runLength[i + 1] = runLength[i + 2];\n    }\n\n    stackSize--;\n    var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n    start1 += k;\n    length1 -= k;\n\n    if (length1 === 0) {\n      return;\n    }\n\n    length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n    if (length2 === 0) {\n      return;\n    }\n\n    if (length1 <= length2) {\n      mergeLow(start1, length1, start2, length2);\n    } else {\n      mergeHigh(start1, length1, start2, length2);\n    }\n  }\n\n  function mergeLow(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length1; i++) {\n      tmp[i] = array[start1 + i];\n    }\n\n    var cursor1 = 0;\n    var cursor2 = start2;\n    var dest = start1;\n    array[dest++] = array[cursor2++];\n\n    if (--length2 === 0) {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n\n      return;\n    }\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n      return;\n    }\n\n    var _minGallop = minGallop;\n    var count1, count2, exit;\n\n    while (1) {\n      count1 = 0;\n      count2 = 0;\n      exit = false;\n\n      do {\n        if (compare(array[cursor2], tmp[cursor1]) < 0) {\n          array[dest++] = array[cursor2++];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest++] = tmp[cursor1++];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n        if (count1 !== 0) {\n          for (i = 0; i < count1; i++) {\n            array[dest + i] = tmp[cursor1 + i];\n          }\n\n          dest += count1;\n          cursor1 += count1;\n          length1 -= count1;\n\n          if (length1 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = array[cursor2++];\n\n        if (--length2 === 0) {\n          exit = true;\n          break;\n        }\n\n        count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n        if (count2 !== 0) {\n          for (i = 0; i < count2; i++) {\n            array[dest + i] = array[cursor2 + i];\n          }\n\n          dest += count2;\n          cursor2 += count2;\n          length2 -= count2;\n\n          if (length2 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = tmp[cursor1++];\n\n        if (--length1 === 1) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n    minGallop < 1 && (minGallop = 1);\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n    } else if (length1 === 0) {\n      throw new Error(); // throw new Error('mergeLow preconditions were not respected');\n    } else {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n    }\n  }\n\n  function mergeHigh(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length2; i++) {\n      tmp[i] = array[start2 + i];\n    }\n\n    var cursor1 = start1 + length1 - 1;\n    var cursor2 = length2 - 1;\n    var dest = start2 + length2 - 1;\n    var customCursor = 0;\n    var customDest = 0;\n    array[dest--] = array[cursor1--];\n\n    if (--length1 === 0) {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n\n      return;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n      return;\n    }\n\n    var _minGallop = minGallop;\n\n    while (true) {\n      var count1 = 0;\n      var count2 = 0;\n      var exit = false;\n\n      do {\n        if (compare(tmp[cursor2], array[cursor1]) < 0) {\n          array[dest--] = array[cursor1--];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest--] = tmp[cursor2--];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n        if (count1 !== 0) {\n          dest -= count1;\n          cursor1 -= count1;\n          length1 -= count1;\n          customDest = dest + 1;\n          customCursor = cursor1 + 1;\n\n          for (i = count1 - 1; i >= 0; i--) {\n            array[customDest + i] = array[customCursor + i];\n          }\n\n          if (length1 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = tmp[cursor2--];\n\n        if (--length2 === 1) {\n          exit = true;\n          break;\n        }\n\n        count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n        if (count2 !== 0) {\n          dest -= count2;\n          cursor2 -= count2;\n          length2 -= count2;\n          customDest = dest + 1;\n          customCursor = cursor2 + 1;\n\n          for (i = 0; i < count2; i++) {\n            array[customDest + i] = tmp[customCursor + i];\n          }\n\n          if (length2 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = array[cursor1--];\n\n        if (--length1 === 0) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n\n    if (minGallop < 1) {\n      minGallop = 1;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n    } else if (length2 === 0) {\n      throw new Error(); // throw new Error('mergeHigh preconditions were not respected');\n    } else {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n    }\n  }\n\n  this.mergeRuns = mergeRuns;\n  this.forceMergeRuns = forceMergeRuns;\n  this.pushRun = pushRun;\n}\n\nfunction sort(array, compare, lo, hi) {\n  if (!lo) {\n    lo = 0;\n  }\n\n  if (!hi) {\n    hi = array.length;\n  }\n\n  var remaining = hi - lo;\n\n  if (remaining < 2) {\n    return;\n  }\n\n  var runLength = 0;\n\n  if (remaining < DEFAULT_MIN_MERGE) {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n    binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n    return;\n  }\n\n  var ts = new TimSort(array, compare);\n  var minRun = minRunLength(remaining);\n\n  do {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n\n    if (runLength < minRun) {\n      var force = remaining;\n\n      if (force > minRun) {\n        force = minRun;\n      }\n\n      binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n      runLength = force;\n    }\n\n    ts.pushRun(lo, runLength);\n    ts.mergeRuns();\n    remaining -= runLength;\n    lo += runLength;\n  } while (remaining !== 0);\n\n  ts.forceMergeRuns();\n}\n\nmodule.exports = sort;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/timsort.js\n// module id = 1024\n// module chunks = 0 1 2","var Displayable = require(\"./Displayable\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar imageHelper = require(\"./helper/image\");\n\n/**\n * @alias zrender/graphic/Image\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nfunction ZImage(opts) {\n  Displayable.call(this, opts);\n}\n\nZImage.prototype = {\n  constructor: ZImage,\n  type: 'image',\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var src = style.image; // Must bind each time\n\n    style.bind(ctx, this, prevEl);\n    var image = this._image = imageHelper.createOrUpdateImage(src, this._image, this, this.onload);\n\n    if (!image || !imageHelper.isImageReady(image)) {\n      return;\n    } // 图片已经加载完成\n    // if (image.nodeName.toUpperCase() == 'IMG') {\n    //     if (!image.complete) {\n    //         return;\n    //     }\n    // }\n    // Else is canvas\n\n\n    var x = style.x || 0;\n    var y = style.y || 0;\n    var width = style.width;\n    var height = style.height;\n    var aspect = image.width / image.height;\n\n    if (width == null && height != null) {\n      // Keep image/height ratio\n      width = height * aspect;\n    } else if (height == null && width != null) {\n      height = width / aspect;\n    } else if (width == null && height == null) {\n      width = image.width;\n      height = image.height;\n    } // 设置transform\n\n\n    this.setTransform(ctx);\n\n    if (style.sWidth && style.sHeight) {\n      var sx = style.sx || 0;\n      var sy = style.sy || 0;\n      ctx.drawImage(image, sx, sy, style.sWidth, style.sHeight, x, y, width, height);\n    } else if (style.sx && style.sy) {\n      var sx = style.sx;\n      var sy = style.sy;\n      var sWidth = width - sx;\n      var sHeight = height - sy;\n      ctx.drawImage(image, sx, sy, sWidth, sHeight, x, y, width, height);\n    } else {\n      ctx.drawImage(image, x, y, width, height);\n    }\n\n    this.restoreTransform(ctx); // Draw rect text\n\n    if (style.text != null) {\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  getBoundingRect: function () {\n    var style = this.style;\n\n    if (!this._rect) {\n      this._rect = new BoundingRect(style.x || 0, style.y || 0, style.width || 0, style.height || 0);\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(ZImage, Displayable);\nvar _default = ZImage;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/Image.js\n// module id = 1025\n// module chunks = 0 1 2","var LRU = require(\"../../core/LRU\");\n\nvar globalImageCache = new LRU(50);\n/**\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\nfunction findExistImage(newImageOrSrc) {\n  if (typeof newImageOrSrc === 'string') {\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    return cachedImgObj && cachedImgObj.image;\n  } else {\n    return newImageOrSrc;\n  }\n}\n/**\n * Caution: User should cache loaded images, but not just count on LRU.\n * Consider if required images more than LRU size, will dead loop occur?\n *\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @param {HTMLImageElement|HTMLCanvasElement|Canvas} image Existent image.\n * @param {module:zrender/Element} [hostEl] For calling `dirty`.\n * @param {Function} [cb] params: (image, cbPayload)\n * @param {Object} [cbPayload] Payload on cb calling.\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\n\nfunction createOrUpdateImage(newImageOrSrc, image, hostEl, cb, cbPayload) {\n  if (!newImageOrSrc) {\n    return image;\n  } else if (typeof newImageOrSrc === 'string') {\n    // Image should not be loaded repeatly.\n    if (image && image.__zrImageSrc === newImageOrSrc || !hostEl) {\n      return image;\n    } // Only when there is no existent image or existent image src\n    // is different, this method is responsible for load.\n\n\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    var pendingWrap = {\n      hostEl: hostEl,\n      cb: cb,\n      cbPayload: cbPayload\n    };\n\n    if (cachedImgObj) {\n      image = cachedImgObj.image;\n      !isImageReady(image) && cachedImgObj.pending.push(pendingWrap);\n    } else {\n      !image && (image = new Image());\n      image.onload = imageOnLoad;\n      globalImageCache.put(newImageOrSrc, image.__cachedImgObj = {\n        image: image,\n        pending: [pendingWrap]\n      });\n      image.src = image.__zrImageSrc = newImageOrSrc;\n    }\n\n    return image;\n  } // newImageOrSrc is an HTMLImageElement or HTMLCanvasElement or Canvas\n  else {\n      return newImageOrSrc;\n    }\n}\n\nfunction imageOnLoad() {\n  var cachedImgObj = this.__cachedImgObj;\n  this.onload = this.__cachedImgObj = null;\n\n  for (var i = 0; i < cachedImgObj.pending.length; i++) {\n    var pendingWrap = cachedImgObj.pending[i];\n    var cb = pendingWrap.cb;\n    cb && cb(this, pendingWrap.cbPayload);\n    pendingWrap.hostEl.dirty();\n  }\n\n  cachedImgObj.pending.length = 0;\n}\n\nfunction isImageReady(image) {\n  return image && image.width && image.height;\n}\n\nexports.findExistImage = findExistImage;\nexports.createOrUpdateImage = createOrUpdateImage;\nexports.isImageReady = isImageReady;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/helper/image.js\n// module id = 1026\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _clazz = require(\"./clazz\");\n\nvar parseClassType = _clazz.parseClassType;\nvar base = 0;\nvar DELIMITER = '_';\n/**\n * @public\n * @param {string} type\n * @return {string}\n */\n\nfunction getUID(type) {\n  // Considering the case of crossing js context,\n  // use Math.random to make id as unique as possible.\n  return [type || '', base++, Math.random()].join(DELIMITER);\n}\n/**\n * @inner\n */\n\n\nfunction enableSubTypeDefaulter(entity) {\n  var subTypeDefaulters = {};\n\n  entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n    componentType = parseClassType(componentType);\n    subTypeDefaulters[componentType.main] = defaulter;\n  };\n\n  entity.determineSubType = function (componentType, option) {\n    var type = option.type;\n\n    if (!type) {\n      var componentTypeMain = parseClassType(componentType).main;\n\n      if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n        type = subTypeDefaulters[componentTypeMain](option);\n      }\n    }\n\n    return type;\n  };\n\n  return entity;\n}\n/**\n * Topological travel on Activity Network (Activity On Vertices).\n * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n *\n * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n *\n * If there is circle dependencey, Error will be thrown.\n *\n */\n\n\nfunction enableTopologicalTravel(entity, dependencyGetter) {\n  /**\n   * @public\n   * @param {Array.<string>} targetNameList Target Component type list.\n   *                                           Can be ['aa', 'bb', 'aa.xx']\n   * @param {Array.<string>} fullNameList By which we can build dependency graph.\n   * @param {Function} callback Params: componentType, dependencies.\n   * @param {Object} context Scope of callback.\n   */\n  entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n    if (!targetNameList.length) {\n      return;\n    }\n\n    var result = makeDepndencyGraph(fullNameList);\n    var graph = result.graph;\n    var stack = result.noEntryList;\n    var targetNameSet = {};\n    zrUtil.each(targetNameList, function (name) {\n      targetNameSet[name] = true;\n    });\n\n    while (stack.length) {\n      var currComponentType = stack.pop();\n      var currVertex = graph[currComponentType];\n      var isInTargetNameSet = !!targetNameSet[currComponentType];\n\n      if (isInTargetNameSet) {\n        callback.call(context, currComponentType, currVertex.originalDeps.slice());\n        delete targetNameSet[currComponentType];\n      }\n\n      zrUtil.each(currVertex.successor, isInTargetNameSet ? removeEdgeAndAdd : removeEdge);\n    }\n\n    zrUtil.each(targetNameSet, function () {\n      throw new Error('Circle dependency may exists');\n    });\n\n    function removeEdge(succComponentType) {\n      graph[succComponentType].entryCount--;\n\n      if (graph[succComponentType].entryCount === 0) {\n        stack.push(succComponentType);\n      }\n    } // Consider this case: legend depends on series, and we call\n    // chart.setOption({series: [...]}), where only series is in option.\n    // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n    // not be called, but only sereis.mergeOption is called. Thus legend\n    // have no chance to update its local record about series (like which\n    // name of series is available in legend).\n\n\n    function removeEdgeAndAdd(succComponentType) {\n      targetNameSet[succComponentType] = true;\n      removeEdge(succComponentType);\n    }\n  };\n  /**\n   * DepndencyGraph: {Object}\n   * key: conponentType,\n   * value: {\n   *     successor: [conponentTypes...],\n   *     originalDeps: [conponentTypes...],\n   *     entryCount: {number}\n   * }\n   */\n\n\n  function makeDepndencyGraph(fullNameList) {\n    var graph = {};\n    var noEntryList = [];\n    zrUtil.each(fullNameList, function (name) {\n      var thisItem = createDependencyGraphItem(graph, name);\n      var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n      var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n      thisItem.entryCount = availableDeps.length;\n\n      if (thisItem.entryCount === 0) {\n        noEntryList.push(name);\n      }\n\n      zrUtil.each(availableDeps, function (dependentName) {\n        if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n          thisItem.predecessor.push(dependentName);\n        }\n\n        var thatItem = createDependencyGraphItem(graph, dependentName);\n\n        if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n          thatItem.successor.push(name);\n        }\n      });\n    });\n    return {\n      graph: graph,\n      noEntryList: noEntryList\n    };\n  }\n\n  function createDependencyGraphItem(graph, name) {\n    if (!graph[name]) {\n      graph[name] = {\n        predecessor: [],\n        successor: []\n      };\n    }\n\n    return graph[name];\n  }\n\n  function getAvailableDependencies(originalDeps, fullNameList) {\n    var availableDeps = [];\n    zrUtil.each(originalDeps, function (dep) {\n      zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n    });\n    return availableDeps;\n  }\n}\n\nexports.getUID = getUID;\nexports.enableSubTypeDefaulter = enableSubTypeDefaulter;\nexports.enableTopologicalTravel = enableTopologicalTravel;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/component.js\n// module id = 1027\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisHelper = require(\"./axisHelper\");\n\nfunction getName(obj) {\n  if (zrUtil.isObject(obj) && obj.value != null) {\n    return obj.value;\n  } else {\n    return obj + '';\n  }\n}\n\nvar _default = {\n  /**\n   * Format labels\n   * @return {Array.<string>}\n   */\n  getFormattedLabels: function () {\n    return axisHelper.getFormattedLabels(this.axis, this.get('axisLabel.formatter'));\n  },\n\n  /**\n   * Get categories\n   */\n  getCategories: function () {\n    return this.get('type') === 'category' && zrUtil.map(this.get('data'), getName);\n  },\n\n  /**\n   * @param {boolean} origin\n   * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n   */\n  getMin: function (origin) {\n    var option = this.option;\n    var min = !origin && option.rangeStart != null ? option.rangeStart : option.min;\n\n    if (this.axis && min != null && min !== 'dataMin' && typeof min !== 'function' && !zrUtil.eqNaN(min)) {\n      min = this.axis.scale.parse(min);\n    }\n\n    return min;\n  },\n\n  /**\n   * @param {boolean} origin\n   * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n   */\n  getMax: function (origin) {\n    var option = this.option;\n    var max = !origin && option.rangeEnd != null ? option.rangeEnd : option.max;\n\n    if (this.axis && max != null && max !== 'dataMax' && typeof max !== 'function' && !zrUtil.eqNaN(max)) {\n      max = this.axis.scale.parse(max);\n    }\n\n    return max;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  getNeedCrossZero: function () {\n    var option = this.option;\n    return option.rangeStart != null || option.rangeEnd != null ? false : !option.scale;\n  },\n\n  /**\n   * Should be implemented by each axis model if necessary.\n   * @return {module:echarts/model/Component} coordinate system model\n   */\n  getCoordSysModel: zrUtil.noop,\n\n  /**\n   * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n   * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n   */\n  setRange: function (rangeStart, rangeEnd) {\n    this.option.rangeStart = rangeStart;\n    this.option.rangeEnd = rangeEnd;\n  },\n\n  /**\n   * Reset range\n   */\n  resetRange: function () {\n    // rangeStart and rangeEnd is readonly.\n    this.option.rangeStart = this.option.rangeEnd = null;\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/axisModelCommonMixin.js\n// module id = 1028\n// module chunks = 0 1 2","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar helper = require(\"./helper\");\n\nvar AxisProxy = require(\"./AxisProxy\");\n\nvar each = zrUtil.each;\nvar eachAxisDim = helper.eachAxisDim;\nvar DataZoomModel = echarts.extendComponentModel({\n  type: 'dataZoom',\n  dependencies: ['xAxis', 'yAxis', 'zAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'series'],\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    zlevel: 0,\n    z: 4,\n    // Higher than normal component (z: 2).\n    orient: null,\n    // Default auto by axisIndex. Possible value: 'horizontal', 'vertical'.\n    xAxisIndex: null,\n    // Default the first horizontal category axis.\n    yAxisIndex: null,\n    // Default the first vertical category axis.\n    filterMode: 'filter',\n    // Possible values: 'filter' or 'empty' or 'weakFilter'.\n    // 'filter': data items which are out of window will be removed. This option is\n    //          applicable when filtering outliers. For each data item, it will be\n    //          filtered if one of the relevant dimensions is out of the window.\n    // 'weakFilter': data items which are out of window will be removed. This option\n    //          is applicable when filtering outliers. For each data item, it will be\n    //          filtered only if all  of the relevant dimensions are out of the same\n    //          side of the window.\n    // 'empty': data items which are out of window will be set to empty.\n    //          This option is applicable when user should not neglect\n    //          that there are some data items out of window.\n    // 'none': Do not filter.\n    // Taking line chart as an example, line will be broken in\n    // the filtered points when filterModel is set to 'empty', but\n    // be connected when set to 'filter'.\n    throttle: null,\n    // Dispatch action by the fixed rate, avoid frequency.\n    // default 100. Do not throttle when use null/undefined.\n    // If animation === true and animationDurationUpdate > 0,\n    // default value is 100, otherwise 20.\n    start: 0,\n    // Start percent. 0 ~ 100\n    end: 100,\n    // End percent. 0 ~ 100\n    startValue: null,\n    // Start value. If startValue specified, start is ignored.\n    endValue: null,\n    // End value. If endValue specified, end is ignored.\n    minSpan: null,\n    // 0 ~ 100\n    maxSpan: null,\n    // 0 ~ 100\n    minValueSpan: null,\n    // The range of dataZoom can not be smaller than that.\n    maxValueSpan: null,\n    // The range of dataZoom can not be larger than that.\n    rangeMode: null // Array, can be 'value' or 'percent'.\n\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel) {\n    /**\n     * key like x_0, y_1\n     * @private\n     * @type {Object}\n     */\n    this._dataIntervalByAxis = {};\n    /**\n     * @private\n     */\n\n    this._dataInfo = {};\n    /**\n     * key like x_0, y_1\n     * @private\n     */\n\n    this._axisProxies = {};\n    /**\n     * @readOnly\n     */\n\n    this.textStyleModel;\n    /**\n     * @private\n     */\n\n    this._autoThrottle = true;\n    /**\n     * 'percent' or 'value'\n     * @private\n     */\n\n    this._rangePropMode = ['percent', 'percent'];\n    var rawOption = retrieveRaw(option);\n    this.mergeDefaultAndTheme(option, ecModel);\n    this.doInit(rawOption);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (newOption) {\n    var rawOption = retrieveRaw(newOption); //FIX #2591\n\n    zrUtil.merge(this.option, newOption, true);\n    this.doInit(rawOption);\n  },\n\n  /**\n   * @protected\n   */\n  doInit: function (rawOption) {\n    var thisOption = this.option; // Disable realtime view update if canvas is not supported.\n\n    if (!env.canvasSupported) {\n      thisOption.realtime = false;\n    }\n\n    this._setDefaultThrottle(rawOption);\n\n    updateRangeUse(this, rawOption);\n    each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n      // start/end has higher priority over startValue/endValue if they\n      // both set, but we should make chart.setOption({endValue: 1000})\n      // effective, rather than chart.setOption({endValue: 1000, end: null}).\n      if (this._rangePropMode[index] === 'value') {\n        thisOption[names[0]] = null;\n      } // Otherwise do nothing and use the merge result.\n\n    }, this);\n    this.textStyleModel = this.getModel('textStyle');\n\n    this._resetTarget();\n\n    this._giveAxisProxies();\n  },\n\n  /**\n   * @private\n   */\n  _giveAxisProxies: function () {\n    var axisProxies = this._axisProxies;\n    this.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel, ecModel) {\n      var axisModel = this.dependentModels[dimNames.axis][axisIndex]; // If exists, share axisProxy with other dataZoomModels.\n\n      var axisProxy = axisModel.__dzAxisProxy || ( // Use the first dataZoomModel as the main model of axisProxy.\n      axisModel.__dzAxisProxy = new AxisProxy(dimNames.name, axisIndex, this, ecModel)); // FIXME\n      // dispose __dzAxisProxy\n\n      axisProxies[dimNames.name + '_' + axisIndex] = axisProxy;\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _resetTarget: function () {\n    var thisOption = this.option;\n\n    var autoMode = this._judgeAutoMode();\n\n    eachAxisDim(function (dimNames) {\n      var axisIndexName = dimNames.axisIndex;\n      thisOption[axisIndexName] = modelUtil.normalizeToArray(thisOption[axisIndexName]);\n    }, this);\n\n    if (autoMode === 'axisIndex') {\n      this._autoSetAxisIndex();\n    } else if (autoMode === 'orient') {\n      this._autoSetOrient();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _judgeAutoMode: function () {\n    // Auto set only works for setOption at the first time.\n    // The following is user's reponsibility. So using merged\n    // option is OK.\n    var thisOption = this.option;\n    var hasIndexSpecified = false;\n    eachAxisDim(function (dimNames) {\n      // When user set axisIndex as a empty array, we think that user specify axisIndex\n      // but do not want use auto mode. Because empty array may be encountered when\n      // some error occured.\n      if (thisOption[dimNames.axisIndex] != null) {\n        hasIndexSpecified = true;\n      }\n    }, this);\n    var orient = thisOption.orient;\n\n    if (orient == null && hasIndexSpecified) {\n      return 'orient';\n    } else if (!hasIndexSpecified) {\n      if (orient == null) {\n        thisOption.orient = 'horizontal';\n      }\n\n      return 'axisIndex';\n    }\n  },\n\n  /**\n   * @private\n   */\n  _autoSetAxisIndex: function () {\n    var autoAxisIndex = true;\n    var orient = this.get('orient', true);\n    var thisOption = this.option;\n    var dependentModels = this.dependentModels;\n\n    if (autoAxisIndex) {\n      // Find axis that parallel to dataZoom as default.\n      var dimName = orient === 'vertical' ? 'y' : 'x';\n\n      if (dependentModels[dimName + 'Axis'].length) {\n        thisOption[dimName + 'AxisIndex'] = [0];\n        autoAxisIndex = false;\n      } else {\n        each(dependentModels.singleAxis, function (singleAxisModel) {\n          if (autoAxisIndex && singleAxisModel.get('orient', true) === orient) {\n            thisOption.singleAxisIndex = [singleAxisModel.componentIndex];\n            autoAxisIndex = false;\n          }\n        });\n      }\n    }\n\n    if (autoAxisIndex) {\n      // Find the first category axis as default. (consider polar)\n      eachAxisDim(function (dimNames) {\n        if (!autoAxisIndex) {\n          return;\n        }\n\n        var axisIndices = [];\n        var axisModels = this.dependentModels[dimNames.axis];\n\n        if (axisModels.length && !axisIndices.length) {\n          for (var i = 0, len = axisModels.length; i < len; i++) {\n            if (axisModels[i].get('type') === 'category') {\n              axisIndices.push(i);\n            }\n          }\n        }\n\n        thisOption[dimNames.axisIndex] = axisIndices;\n\n        if (axisIndices.length) {\n          autoAxisIndex = false;\n        }\n      }, this);\n    }\n\n    if (autoAxisIndex) {\n      // FIXME\n      // 这里是兼容ec2的写法（没指定xAxisIndex和yAxisIndex时把scatter和双数值轴折柱纳入dataZoom控制），\n      // 但是实际是否需要Grid.js#getScaleByOption来判断（考虑time，log等axis type）？\n      // If both dataZoom.xAxisIndex and dataZoom.yAxisIndex is not specified,\n      // dataZoom component auto adopts series that reference to\n      // both xAxis and yAxis which type is 'value'.\n      this.ecModel.eachSeries(function (seriesModel) {\n        if (this._isSeriesHasAllAxesTypeOf(seriesModel, 'value')) {\n          eachAxisDim(function (dimNames) {\n            var axisIndices = thisOption[dimNames.axisIndex];\n            var axisIndex = seriesModel.get(dimNames.axisIndex);\n            var axisId = seriesModel.get(dimNames.axisId);\n            var axisModel = seriesModel.ecModel.queryComponents({\n              mainType: dimNames.axis,\n              index: axisIndex,\n              id: axisId\n            })[0];\n            axisIndex = axisModel.componentIndex;\n\n            if (zrUtil.indexOf(axisIndices, axisIndex) < 0) {\n              axisIndices.push(axisIndex);\n            }\n          });\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _autoSetOrient: function () {\n    var dim; // Find the first axis\n\n    this.eachTargetAxis(function (dimNames) {\n      !dim && (dim = dimNames.name);\n    }, this);\n    this.option.orient = dim === 'y' ? 'vertical' : 'horizontal';\n  },\n\n  /**\n   * @private\n   */\n  _isSeriesHasAllAxesTypeOf: function (seriesModel, axisType) {\n    // FIXME\n    // 需要series的xAxisIndex和yAxisIndex都首先自动设置上。\n    // 例如series.type === scatter时。\n    var is = true;\n    eachAxisDim(function (dimNames) {\n      var seriesAxisIndex = seriesModel.get(dimNames.axisIndex);\n      var axisModel = this.dependentModels[dimNames.axis][seriesAxisIndex];\n\n      if (!axisModel || axisModel.get('type') !== axisType) {\n        is = false;\n      }\n    }, this);\n    return is;\n  },\n\n  /**\n   * @private\n   */\n  _setDefaultThrottle: function (rawOption) {\n    // When first time user set throttle, auto throttle ends.\n    if (rawOption.hasOwnProperty('throttle')) {\n      this._autoThrottle = false;\n    }\n\n    if (this._autoThrottle) {\n      var globalOption = this.ecModel.option;\n      this.option.throttle = globalOption.animation && globalOption.animationDurationUpdate > 0 ? 100 : 20;\n    }\n  },\n\n  /**\n   * @public\n   */\n  getFirstTargetAxisModel: function () {\n    var firstAxisModel;\n    eachAxisDim(function (dimNames) {\n      if (firstAxisModel == null) {\n        var indices = this.get(dimNames.axisIndex);\n\n        if (indices.length) {\n          firstAxisModel = this.dependentModels[dimNames.axis][indices[0]];\n        }\n      }\n    }, this);\n    return firstAxisModel;\n  },\n\n  /**\n   * @public\n   * @param {Function} callback param: axisModel, dimNames, axisIndex, dataZoomModel, ecModel\n   */\n  eachTargetAxis: function (callback, context) {\n    var ecModel = this.ecModel;\n    eachAxisDim(function (dimNames) {\n      each(this.get(dimNames.axisIndex), function (axisIndex) {\n        callback.call(context, dimNames, axisIndex, this, ecModel);\n      }, this);\n    }, this);\n  },\n\n  /**\n   * @param {string} dimName\n   * @param {number} axisIndex\n   * @return {module:echarts/component/dataZoom/AxisProxy} If not found, return null/undefined.\n   */\n  getAxisProxy: function (dimName, axisIndex) {\n    return this._axisProxies[dimName + '_' + axisIndex];\n  },\n\n  /**\n   * @param {string} dimName\n   * @param {number} axisIndex\n   * @return {module:echarts/model/Model} If not found, return null/undefined.\n   */\n  getAxisModel: function (dimName, axisIndex) {\n    var axisProxy = this.getAxisProxy(dimName, axisIndex);\n    return axisProxy && axisProxy.getAxisModel();\n  },\n\n  /**\n   * If not specified, set to undefined.\n   *\n   * @public\n   * @param {Object} opt\n   * @param {number} [opt.start]\n   * @param {number} [opt.end]\n   * @param {number} [opt.startValue]\n   * @param {number} [opt.endValue]\n   * @param {boolean} [ignoreUpdateRangeUsg=false]\n   */\n  setRawRange: function (opt, ignoreUpdateRangeUsg) {\n    var option = this.option;\n    each([['start', 'startValue'], ['end', 'endValue']], function (names) {\n      // If only one of 'start' and 'startValue' is not null/undefined, the other\n      // should be cleared, which enable clear the option.\n      // If both of them are not set, keep option with the original value, which\n      // enable use only set start but not set end when calling `dispatchAction`.\n      // The same as 'end' and 'endValue'.\n      if (opt[names[0]] != null || opt[names[1]] != null) {\n        option[names[0]] = opt[names[0]];\n        option[names[1]] = opt[names[1]];\n      }\n    }, this);\n    !ignoreUpdateRangeUsg && updateRangeUse(this, opt);\n  },\n\n  /**\n   * @public\n   * @return {Array.<number>} [startPercent, endPercent]\n   */\n  getPercentRange: function () {\n    var axisProxy = this.findRepresentativeAxisProxy();\n\n    if (axisProxy) {\n      return axisProxy.getDataPercentWindow();\n    }\n  },\n\n  /**\n   * @public\n   * For example, chart.getModel().getComponent('dataZoom').getValueRange('y', 0);\n   *\n   * @param {string} [axisDimName]\n   * @param {number} [axisIndex]\n   * @return {Array.<number>} [startValue, endValue] value can only be '-' or finite number.\n   */\n  getValueRange: function (axisDimName, axisIndex) {\n    if (axisDimName == null && axisIndex == null) {\n      var axisProxy = this.findRepresentativeAxisProxy();\n\n      if (axisProxy) {\n        return axisProxy.getDataValueWindow();\n      }\n    } else {\n      return this.getAxisProxy(axisDimName, axisIndex).getDataValueWindow();\n    }\n  },\n\n  /**\n   * @public\n   * @param {module:echarts/model/Model} [axisModel] If axisModel given, find axisProxy\n   *      corresponding to the axisModel\n   * @return {module:echarts/component/dataZoom/AxisProxy}\n   */\n  findRepresentativeAxisProxy: function (axisModel) {\n    if (axisModel) {\n      return axisModel.__dzAxisProxy;\n    } // Find the first hosted axisProxy\n\n\n    var axisProxies = this._axisProxies;\n\n    for (var key in axisProxies) {\n      if (axisProxies.hasOwnProperty(key) && axisProxies[key].hostedBy(this)) {\n        return axisProxies[key];\n      }\n    } // If no hosted axis find not hosted axisProxy.\n    // Consider this case: dataZoomModel1 and dataZoomModel2 control the same axis,\n    // and the option.start or option.end settings are different. The percentRange\n    // should follow axisProxy.\n    // (We encounter this problem in toolbox data zoom.)\n\n\n    for (var key in axisProxies) {\n      if (axisProxies.hasOwnProperty(key) && !axisProxies[key].hostedBy(this)) {\n        return axisProxies[key];\n      }\n    }\n  },\n\n  /**\n   * @return {Array.<string>}\n   */\n  getRangePropMode: function () {\n    return this._rangePropMode.slice();\n  }\n});\n\nfunction retrieveRaw(option) {\n  var ret = {};\n  each(['start', 'end', 'startValue', 'endValue', 'throttle'], function (name) {\n    option.hasOwnProperty(name) && (ret[name] = option[name]);\n  });\n  return ret;\n}\n\nfunction updateRangeUse(dataZoomModel, rawOption) {\n  var rangePropMode = dataZoomModel._rangePropMode;\n  var rangeModeInOption = dataZoomModel.get('rangeMode');\n  each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n    var percentSpecified = rawOption[names[0]] != null;\n    var valueSpecified = rawOption[names[1]] != null;\n\n    if (percentSpecified && !valueSpecified) {\n      rangePropMode[index] = 'percent';\n    } else if (!percentSpecified && valueSpecified) {\n      rangePropMode[index] = 'value';\n    } else if (rangeModeInOption) {\n      rangePropMode[index] = rangeModeInOption[index];\n    } else if (percentSpecified) {\n      // percentSpecified && valueSpecified\n      rangePropMode[index] = 'percent';\n    } // else remain its original setting.\n\n  });\n}\n\nvar _default = DataZoomModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/DataZoomModel.js\n// module id = 1029\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar AXIS_DIMS = ['x', 'y', 'z', 'radius', 'angle', 'single']; // Supported coords.\n\nvar COORDS = ['cartesian2d', 'polar', 'singleAxis'];\n/**\n * @param {string} coordType\n * @return {boolean}\n */\n\nfunction isCoordSupported(coordType) {\n  return zrUtil.indexOf(COORDS, coordType) >= 0;\n}\n/**\n * Create \"each\" method to iterate names.\n *\n * @pubilc\n * @param  {Array.<string>} names\n * @param  {Array.<string>=} attrs\n * @return {Function}\n */\n\n\nfunction createNameEach(names, attrs) {\n  names = names.slice();\n  var capitalNames = zrUtil.map(names, formatUtil.capitalFirst);\n  attrs = (attrs || []).slice();\n  var capitalAttrs = zrUtil.map(attrs, formatUtil.capitalFirst);\n  return function (callback, context) {\n    zrUtil.each(names, function (name, index) {\n      var nameObj = {\n        name: name,\n        capital: capitalNames[index]\n      };\n\n      for (var j = 0; j < attrs.length; j++) {\n        nameObj[attrs[j]] = name + capitalAttrs[j];\n      }\n\n      callback.call(context, nameObj);\n    });\n  };\n}\n/**\n * Iterate each dimension name.\n *\n * @public\n * @param {Function} callback The parameter is like:\n *                            {\n *                                name: 'angle',\n *                                capital: 'Angle',\n *                                axis: 'angleAxis',\n *                                axisIndex: 'angleAixs',\n *                                index: 'angleIndex'\n *                            }\n * @param {Object} context\n */\n\n\nvar eachAxisDim = createNameEach(AXIS_DIMS, ['axisIndex', 'axis', 'index', 'id']);\n/**\n * If tow dataZoomModels has the same axis controlled, we say that they are 'linked'.\n * dataZoomModels and 'links' make up one or more graphics.\n * This function finds the graphic where the source dataZoomModel is in.\n *\n * @public\n * @param {Function} forEachNode Node iterator.\n * @param {Function} forEachEdgeType edgeType iterator\n * @param {Function} edgeIdGetter Giving node and edgeType, return an array of edge id.\n * @return {Function} Input: sourceNode, Output: Like {nodes: [], dims: {}}\n */\n\nfunction createLinkedNodesFinder(forEachNode, forEachEdgeType, edgeIdGetter) {\n  return function (sourceNode) {\n    var result = {\n      nodes: [],\n      records: {} // key: edgeType.name, value: Object (key: edge id, value: boolean).\n\n    };\n    forEachEdgeType(function (edgeType) {\n      result.records[edgeType.name] = {};\n    });\n\n    if (!sourceNode) {\n      return result;\n    }\n\n    absorb(sourceNode, result);\n    var existsLink;\n\n    do {\n      existsLink = false;\n      forEachNode(processSingleNode);\n    } while (existsLink);\n\n    function processSingleNode(node) {\n      if (!isNodeAbsorded(node, result) && isLinked(node, result)) {\n        absorb(node, result);\n        existsLink = true;\n      }\n    }\n\n    return result;\n  };\n\n  function isNodeAbsorded(node, result) {\n    return zrUtil.indexOf(result.nodes, node) >= 0;\n  }\n\n  function isLinked(node, result) {\n    var hasLink = false;\n    forEachEdgeType(function (edgeType) {\n      zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n        result.records[edgeType.name][edgeId] && (hasLink = true);\n      });\n    });\n    return hasLink;\n  }\n\n  function absorb(node, result) {\n    result.nodes.push(node);\n    forEachEdgeType(function (edgeType) {\n      zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n        result.records[edgeType.name][edgeId] = true;\n      });\n    });\n  }\n}\n\nexports.isCoordSupported = isCoordSupported;\nexports.createNameEach = createNameEach;\nexports.eachAxisDim = eachAxisDim;\nexports.createLinkedNodesFinder = createLinkedNodesFinder;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/helper.js\n// module id = 1030\n// module chunks = 0 1 2","var ComponentView = require(\"../../view/Component\");\n\nvar _default = ComponentView.extend({\n  type: 'dataZoom',\n  render: function (dataZoomModel, ecModel, api, payload) {\n    this.dataZoomModel = dataZoomModel;\n    this.ecModel = ecModel;\n    this.api = api;\n  },\n\n  /**\n   * Find the first target coordinate system.\n   *\n   * @protected\n   * @return {Object} {\n   *                   grid: [\n   *                       {model: coord0, axisModels: [axis1, axis3], coordIndex: 1},\n   *                       {model: coord1, axisModels: [axis0, axis2], coordIndex: 0},\n   *                       ...\n   *                   ],  // cartesians must not be null/undefined.\n   *                   polar: [\n   *                       {model: coord0, axisModels: [axis4], coordIndex: 0},\n   *                       ...\n   *                   ],  // polars must not be null/undefined.\n   *                   singleAxis: [\n   *                       {model: coord0, axisModels: [], coordIndex: 0}\n   *                   ]\n   */\n  getTargetCoordInfo: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var ecModel = this.ecModel;\n    var coordSysLists = {};\n    dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\n      var axisModel = ecModel.getComponent(dimNames.axis, axisIndex);\n\n      if (axisModel) {\n        var coordModel = axisModel.getCoordSysModel();\n        coordModel && save(coordModel, axisModel, coordSysLists[coordModel.mainType] || (coordSysLists[coordModel.mainType] = []), coordModel.componentIndex);\n      }\n    }, this);\n\n    function save(coordModel, axisModel, store, coordIndex) {\n      var item;\n\n      for (var i = 0; i < store.length; i++) {\n        if (store[i].model === coordModel) {\n          item = store[i];\n          break;\n        }\n      }\n\n      if (!item) {\n        store.push(item = {\n          model: coordModel,\n          axisModels: [],\n          coordIndex: coordIndex\n        });\n      }\n\n      item.axisModels.push(axisModel);\n    }\n\n    return coordSysLists;\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/DataZoomView.js\n// module id = 1031\n// module chunks = 0 1 2","var guid = require(\"./core/guid\");\n\nvar env = require(\"./core/env\");\n\nvar zrUtil = require(\"./core/util\");\n\nvar Handler = require(\"./Handler\");\n\nvar Storage = require(\"./Storage\");\n\nvar Painter = require(\"./Painter\");\n\nvar Animation = require(\"./animation/Animation\");\n\nvar HandlerProxy = require(\"./dom/HandlerProxy\");\n\n/*!\n* ZRender, a high performance 2d drawing library.\n*\n* Copyright (c) 2013, Baidu Inc.\n* All rights reserved.\n*\n* LICENSE\n* https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n*/\nvar useVML = !env.canvasSupported;\nvar painterCtors = {\n  canvas: Painter\n};\nvar instances = {}; // ZRender实例map索引\n\n/**\n * @type {string}\n */\n\nvar version = '3.7.4';\n/**\n * Initializing a zrender instance\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n * @return {module:zrender/ZRender}\n */\n\nfunction init(dom, opts) {\n  var zr = new ZRender(guid(), dom, opts);\n  instances[zr.id] = zr;\n  return zr;\n}\n/**\n * Dispose zrender instance\n * @param {module:zrender/ZRender} zr\n */\n\n\nfunction dispose(zr) {\n  if (zr) {\n    zr.dispose();\n  } else {\n    for (var key in instances) {\n      if (instances.hasOwnProperty(key)) {\n        instances[key].dispose();\n      }\n    }\n\n    instances = {};\n  }\n\n  return this;\n}\n/**\n * Get zrender instance by id\n * @param {string} id zrender instance id\n * @return {module:zrender/ZRender}\n */\n\n\nfunction getInstance(id) {\n  return instances[id];\n}\n\nfunction registerPainter(name, Ctor) {\n  painterCtors[name] = Ctor;\n}\n\nfunction delInstance(id) {\n  delete instances[id];\n}\n/**\n * @module zrender/ZRender\n */\n\n/**\n * @constructor\n * @alias module:zrender/ZRender\n * @param {string} id\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n */\n\n\nvar ZRender = function (id, dom, opts) {\n  opts = opts || {};\n  /**\n   * @type {HTMLDomElement}\n   */\n\n  this.dom = dom;\n  /**\n   * @type {string}\n   */\n\n  this.id = id;\n  var self = this;\n  var storage = new Storage();\n  var rendererType = opts.renderer; // TODO WebGL\n\n  if (useVML) {\n    if (!painterCtors.vml) {\n      throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n    }\n\n    rendererType = 'vml';\n  } else if (!rendererType || !painterCtors[rendererType]) {\n    rendererType = 'canvas';\n  }\n\n  var painter = new painterCtors[rendererType](dom, storage, opts);\n  this.storage = storage;\n  this.painter = painter;\n  var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;\n  this.handler = new Handler(storage, painter, handerProxy, painter.root);\n  /**\n   * @type {module:zrender/animation/Animation}\n   */\n\n  this.animation = new Animation({\n    stage: {\n      update: zrUtil.bind(this.flush, this)\n    }\n  });\n  this.animation.start();\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._needsRefresh; // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n  // FIXME 有点ugly\n\n  var oldDelFromStorage = storage.delFromStorage;\n  var oldAddToStorage = storage.addToStorage;\n\n  storage.delFromStorage = function (el) {\n    oldDelFromStorage.call(storage, el);\n    el && el.removeSelfFromZr(self);\n  };\n\n  storage.addToStorage = function (el) {\n    oldAddToStorage.call(storage, el);\n    el.addSelfToZr(self);\n  };\n};\n\nZRender.prototype = {\n  constructor: ZRender,\n\n  /**\n   * 获取实例唯一标识\n   * @return {string}\n   */\n  getId: function () {\n    return this.id;\n  },\n\n  /**\n   * 添加元素\n   * @param  {module:zrender/Element} el\n   */\n  add: function (el) {\n    this.storage.addRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * 删除元素\n   * @param  {module:zrender/Element} el\n   */\n  remove: function (el) {\n    this.storage.delRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Change configuration of layer\n   * @param {string} zLevel\n   * @param {Object} config\n   * @param {string} [config.clearColor=0] Clear color\n   * @param {string} [config.motionBlur=false] If enable motion blur\n   * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n  */\n  configLayer: function (zLevel, config) {\n    this.painter.configLayer(zLevel, config);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Repaint the canvas immediately\n   */\n  refreshImmediately: function () {\n    // var start = new Date();\n    // Clear needsRefresh ahead to avoid something wrong happens in refresh\n    // Or it will cause zrender refreshes again and again.\n    this._needsRefresh = false;\n    this.painter.refresh();\n    /**\n     * Avoid trigger zr.refresh in Element#beforeUpdate hook\n     */\n\n    this._needsRefresh = false; // var end = new Date();\n    // var log = document.getElementById('log');\n    // if (log) {\n    //     log.innerHTML = log.innerHTML + '<br>' + (end - start);\n    // }\n  },\n\n  /**\n   * Mark and repaint the canvas in the next frame of browser\n   */\n  refresh: function () {\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Perform all refresh\n   */\n  flush: function () {\n    if (this._needsRefresh) {\n      this.refreshImmediately();\n    }\n\n    if (this._needsRefreshHover) {\n      this.refreshHoverImmediately();\n    }\n  },\n\n  /**\n   * Add element to hover layer\n   * @param  {module:zrender/Element} el\n   * @param {Object} style\n   */\n  addHover: function (el, style) {\n    if (this.painter.addHover) {\n      this.painter.addHover(el, style);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Add element from hover layer\n   * @param  {module:zrender/Element} el\n   */\n  removeHover: function (el) {\n    if (this.painter.removeHover) {\n      this.painter.removeHover(el);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Clear all hover elements in hover layer\n   * @param  {module:zrender/Element} el\n   */\n  clearHover: function () {\n    if (this.painter.clearHover) {\n      this.painter.clearHover();\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Refresh hover in next frame\n   */\n  refreshHover: function () {\n    this._needsRefreshHover = true;\n  },\n\n  /**\n   * Refresh hover immediately\n   */\n  refreshHoverImmediately: function () {\n    this._needsRefreshHover = false;\n    this.painter.refreshHover && this.painter.refreshHover();\n  },\n\n  /**\n   * Resize the canvas.\n   * Should be invoked when container size is changed\n   * @param {Object} [opts]\n   * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n   * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n   */\n  resize: function (opts) {\n    opts = opts || {};\n    this.painter.resize(opts.width, opts.height);\n    this.handler.resize();\n  },\n\n  /**\n   * Stop and clear all animation immediately\n   */\n  clearAnimation: function () {\n    this.animation.clear();\n  },\n\n  /**\n   * Get container width\n   */\n  getWidth: function () {\n    return this.painter.getWidth();\n  },\n\n  /**\n   * Get container height\n   */\n  getHeight: function () {\n    return this.painter.getHeight();\n  },\n\n  /**\n   * Export the canvas as Base64 URL\n   * @param {string} type\n   * @param {string} [backgroundColor='#fff']\n   * @return {string} Base64 URL\n   */\n  // toDataURL: function(type, backgroundColor) {\n  //     return this.painter.getRenderedCanvas({\n  //         backgroundColor: backgroundColor\n  //     }).toDataURL(type);\n  // },\n\n  /**\n   * Converting a path to image.\n   * It has much better performance of drawing image rather than drawing a vector path.\n   * @param {module:zrender/graphic/Path} e\n   * @param {number} width\n   * @param {number} height\n   */\n  pathToImage: function (e, dpr) {\n    return this.painter.pathToImage(e, dpr);\n  },\n\n  /**\n   * Set default cursor\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    this.handler.setCursorStyle(cursorStyle);\n  },\n\n  /**\n   * Find hovered element\n   * @param {number} x\n   * @param {number} y\n   * @return {Object} {target, topTarget}\n   */\n  findHover: function (x, y) {\n    return this.handler.findHover(x, y);\n  },\n\n  /**\n   * Bind event\n   *\n   * @param {string} eventName Event name\n   * @param {Function} eventHandler Handler function\n   * @param {Object} [context] Context object\n   */\n  on: function (eventName, eventHandler, context) {\n    this.handler.on(eventName, eventHandler, context);\n  },\n\n  /**\n   * Unbind event\n   * @param {string} eventName Event name\n   * @param {Function} [eventHandler] Handler function\n   */\n  off: function (eventName, eventHandler) {\n    this.handler.off(eventName, eventHandler);\n  },\n\n  /**\n   * Trigger event manually\n   *\n   * @param {string} eventName Event name\n   * @param {event=} event Event object\n   */\n  trigger: function (eventName, event) {\n    this.handler.trigger(eventName, event);\n  },\n\n  /**\n   * Clear all objects and the canvas.\n   */\n  clear: function () {\n    this.storage.delRoot();\n    this.painter.clear();\n  },\n\n  /**\n   * Dispose self.\n   */\n  dispose: function () {\n    this.animation.stop();\n    this.clear();\n    this.storage.dispose();\n    this.painter.dispose();\n    this.handler.dispose();\n    this.animation = this.storage = this.painter = this.handler = null;\n    delInstance(this.id);\n  }\n};\nexports.version = version;\nexports.init = init;\nexports.dispose = dispose;\nexports.getInstance = getInstance;\nexports.registerPainter = registerPainter;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/zrender.js\n// module id = 1032\n// module chunks = 0 1 2","var _util = require(\"../../core/util\");\n\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar each = _util.each;\nvar normalizeCssArray = _util.normalizeCssArray;\nvar isString = _util.isString;\nvar isObject = _util.isObject;\n\nvar textContain = require(\"../../contain/text\");\n\nvar roundRectHelper = require(\"./roundRect\");\n\nvar imageHelper = require(\"./image\");\n\n// TODO: Have not support 'start', 'end' yet.\nvar VALID_TEXT_ALIGN = {\n  left: 1,\n  right: 1,\n  center: 1\n};\nvar VALID_TEXT_VERTICAL_ALIGN = {\n  top: 1,\n  bottom: 1,\n  middle: 1\n};\n/**\n * @param {module:zrender/graphic/Style} style\n * @return {module:zrender/graphic/Style} The input style.\n */\n\nfunction normalizeTextStyle(style) {\n  normalizeStyle(style);\n  each(style.rich, normalizeStyle);\n  return style;\n}\n\nfunction normalizeStyle(style) {\n  if (style) {\n    style.font = textContain.makeFont(style);\n    var textAlign = style.textAlign;\n    textAlign === 'middle' && (textAlign = 'center');\n    style.textAlign = textAlign == null || VALID_TEXT_ALIGN[textAlign] ? textAlign : 'left'; // Compatible with textBaseline.\n\n    var textVerticalAlign = style.textVerticalAlign || style.textBaseline;\n    textVerticalAlign === 'center' && (textVerticalAlign = 'middle');\n    style.textVerticalAlign = textVerticalAlign == null || VALID_TEXT_VERTICAL_ALIGN[textVerticalAlign] ? textVerticalAlign : 'top';\n    var textPadding = style.textPadding;\n\n    if (textPadding) {\n      style.textPadding = normalizeCssArray(style.textPadding);\n    }\n  }\n}\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {string} text\n * @param {module:zrender/graphic/Style} style\n * @param {Object|boolean} [rect] {x, y, width, height}\n *                  If set false, rect text is not used.\n */\n\n\nfunction renderText(hostEl, ctx, text, style, rect) {\n  style.rich ? renderRichText(hostEl, ctx, text, style, rect) : renderPlainText(hostEl, ctx, text, style, rect);\n}\n\nfunction renderPlainText(hostEl, ctx, text, style, rect) {\n  var font = setCtx(ctx, 'font', style.font || textContain.DEFAULT_FONT);\n  var textPadding = style.textPadding;\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parsePlainText(text, font, textPadding, style.truncate);\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var textLines = contentBlock.lines;\n  var lineHeight = contentBlock.lineHeight;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var textX = baseX;\n  var textY = boxY;\n  var needDrawBg = needDrawBackground(style);\n\n  if (needDrawBg || textPadding) {\n    // Consider performance, do not call getTextWidth util necessary.\n    var textWidth = textContain.getWidth(text, font);\n    var outerWidth = textWidth;\n    textPadding && (outerWidth += textPadding[1] + textPadding[3]);\n    var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n    needDrawBg && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n    if (textPadding) {\n      textX = getTextXForPadding(baseX, textAlign, textPadding);\n      textY += textPadding[0];\n    }\n  }\n\n  setCtx(ctx, 'textAlign', textAlign || 'left'); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle'); // Always set shadowBlur and shadowOffset to avoid leak from displayable.\n\n  setCtx(ctx, 'shadowBlur', style.textShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textShadowOffsetY || 0); // `textBaseline` is set as 'middle'.\n\n  textY += lineHeight / 2;\n  var textStrokeWidth = style.textStrokeWidth;\n  var textStroke = getStroke(style.textStroke, textStrokeWidth);\n  var textFill = getFill(style.textFill);\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n  }\n\n  for (var i = 0; i < textLines.length; i++) {\n    // Fill after stroke so the outline will not cover the main part.\n    textStroke && ctx.strokeText(textLines[i], textX, textY);\n    textFill && ctx.fillText(textLines[i], textX, textY);\n    textY += lineHeight;\n  }\n}\n\nfunction renderRichText(hostEl, ctx, text, style, rect) {\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parseRichText(text, style);\n  }\n\n  drawRichText(hostEl, ctx, contentBlock, style, rect);\n}\n\nfunction drawRichText(hostEl, ctx, contentBlock, style, rect) {\n  var contentWidth = contentBlock.width;\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var textPadding = style.textPadding;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var xLeft = boxX;\n  var lineTop = boxY;\n\n  if (textPadding) {\n    xLeft += textPadding[3];\n    lineTop += textPadding[0];\n  }\n\n  var xRight = xLeft + contentWidth;\n  needDrawBackground(style) && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n  for (var i = 0; i < contentBlock.lines.length; i++) {\n    var line = contentBlock.lines[i];\n    var tokens = line.tokens;\n    var tokenCount = tokens.length;\n    var lineHeight = line.lineHeight;\n    var usedWidth = line.width;\n    var leftIndex = 0;\n    var lineXLeft = xLeft;\n    var lineXRight = xRight;\n    var rightIndex = tokenCount - 1;\n    var token;\n\n    while (leftIndex < tokenCount && (token = tokens[leftIndex], !token.textAlign || token.textAlign === 'left')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft, 'left');\n      usedWidth -= token.width;\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    while (rightIndex >= 0 && (token = tokens[rightIndex], token.textAlign === 'right')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXRight, 'right');\n      usedWidth -= token.width;\n      lineXRight -= token.width;\n      rightIndex--;\n    } // The other tokens are placed as textAlign 'center' if there is enough space.\n\n\n    lineXLeft += (contentWidth - (lineXLeft - xLeft) - (xRight - lineXRight) - usedWidth) / 2;\n\n    while (leftIndex <= rightIndex) {\n      token = tokens[leftIndex]; // Consider width specified by user, use 'center' rather than 'left'.\n\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft + token.width / 2, 'center');\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    lineTop += lineHeight;\n  }\n}\n\nfunction applyTextRotation(ctx, style, rect, x, y) {\n  // textRotation only apply in RectText.\n  if (rect && style.textRotation) {\n    var origin = style.textOrigin;\n\n    if (origin === 'center') {\n      x = rect.width / 2 + rect.x;\n      y = rect.height / 2 + rect.y;\n    } else if (origin) {\n      x = origin[0] + rect.x;\n      y = origin[1] + rect.y;\n    }\n\n    ctx.translate(x, y); // Positive: anticlockwise\n\n    ctx.rotate(-style.textRotation);\n    ctx.translate(-x, -y);\n  }\n}\n\nfunction placeToken(hostEl, ctx, token, style, lineHeight, lineTop, x, textAlign) {\n  var tokenStyle = style.rich[token.styleName] || {}; // 'ctx.textBaseline' is always set as 'middle', for sake of\n  // the bias of \"Microsoft YaHei\".\n\n  var textVerticalAlign = token.textVerticalAlign;\n  var y = lineTop + lineHeight / 2;\n\n  if (textVerticalAlign === 'top') {\n    y = lineTop + token.height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y = lineTop + lineHeight - token.height / 2;\n  }\n\n  !token.isLineHolder && needDrawBackground(tokenStyle) && drawBackground(hostEl, ctx, tokenStyle, textAlign === 'right' ? x - token.width : textAlign === 'center' ? x - token.width / 2 : x, y - token.height / 2, token.width, token.height);\n  var textPadding = token.textPadding;\n\n  if (textPadding) {\n    x = getTextXForPadding(x, textAlign, textPadding);\n    y -= token.height / 2 - textPadding[2] - token.textHeight / 2;\n  }\n\n  setCtx(ctx, 'shadowBlur', retrieve3(tokenStyle.textShadowBlur, style.textShadowBlur, 0));\n  setCtx(ctx, 'shadowColor', tokenStyle.textShadowColor || style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', retrieve3(tokenStyle.textShadowOffsetX, style.textShadowOffsetX, 0));\n  setCtx(ctx, 'shadowOffsetY', retrieve3(tokenStyle.textShadowOffsetY, style.textShadowOffsetY, 0));\n  setCtx(ctx, 'textAlign', textAlign); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle');\n  setCtx(ctx, 'font', token.font || textContain.DEFAULT_FONT);\n  var textStroke = getStroke(tokenStyle.textStroke || style.textStroke, textStrokeWidth);\n  var textFill = getFill(tokenStyle.textFill || style.textFill);\n  var textStrokeWidth = retrieve2(tokenStyle.textStrokeWidth, style.textStrokeWidth); // Fill after stroke so the outline will not cover the main part.\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n    ctx.strokeText(token.text, x, y);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n    ctx.fillText(token.text, x, y);\n  }\n}\n\nfunction needDrawBackground(style) {\n  return style.textBackgroundColor || style.textBorderWidth && style.textBorderColor;\n} // style: {textBackgroundColor, textBorderWidth, textBorderColor, textBorderRadius}\n// shape: {x, y, width, height}\n\n\nfunction drawBackground(hostEl, ctx, style, x, y, width, height) {\n  var textBackgroundColor = style.textBackgroundColor;\n  var textBorderWidth = style.textBorderWidth;\n  var textBorderColor = style.textBorderColor;\n  var isPlainBg = isString(textBackgroundColor);\n  setCtx(ctx, 'shadowBlur', style.textBoxShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textBoxShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textBoxShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textBoxShadowOffsetY || 0);\n\n  if (isPlainBg || textBorderWidth && textBorderColor) {\n    ctx.beginPath();\n    var textBorderRadius = style.textBorderRadius;\n\n    if (!textBorderRadius) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height,\n        r: textBorderRadius\n      });\n    }\n\n    ctx.closePath();\n  }\n\n  if (isPlainBg) {\n    setCtx(ctx, 'fillStyle', textBackgroundColor);\n    ctx.fill();\n  } else if (isObject(textBackgroundColor)) {\n    var image = textBackgroundColor.image;\n    image = imageHelper.createOrUpdateImage(image, null, hostEl, onBgImageLoaded, textBackgroundColor);\n\n    if (image && imageHelper.isImageReady(image)) {\n      ctx.drawImage(image, x, y, width, height);\n    }\n  }\n\n  if (textBorderWidth && textBorderColor) {\n    setCtx(ctx, 'lineWidth', textBorderWidth);\n    setCtx(ctx, 'strokeStyle', textBorderColor);\n    ctx.stroke();\n  }\n}\n\nfunction onBgImageLoaded(image, textBackgroundColor) {\n  // Replace image, so that `contain/text.js#parseRichText`\n  // will get correct result in next tick.\n  textBackgroundColor.image = image;\n}\n\nfunction getBoxPosition(blockHeiht, style, rect) {\n  var baseX = style.x || 0;\n  var baseY = style.y || 0;\n  var textAlign = style.textAlign;\n  var textVerticalAlign = style.textVerticalAlign; // Text position represented by coord\n\n  if (rect) {\n    var textPosition = style.textPosition;\n\n    if (textPosition instanceof Array) {\n      // Percent\n      baseX = rect.x + parsePercent(textPosition[0], rect.width);\n      baseY = rect.y + parsePercent(textPosition[1], rect.height);\n    } else {\n      var res = textContain.adjustTextPositionOnRect(textPosition, rect, style.textDistance);\n      baseX = res.x;\n      baseY = res.y; // Default align and baseline when has textPosition\n\n      textAlign = textAlign || res.textAlign;\n      textVerticalAlign = textVerticalAlign || res.textVerticalAlign;\n    } // textOffset is only support in RectText, otherwise\n    // we have to adjust boundingRect for textOffset.\n\n\n    var textOffset = style.textOffset;\n\n    if (textOffset) {\n      baseX += textOffset[0];\n      baseY += textOffset[1];\n    }\n  }\n\n  return {\n    baseX: baseX,\n    baseY: baseY,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction setCtx(ctx, prop, value) {\n  // FIXME ??? performance try\n  // if (ctx.__currentValues[prop] !== value) {\n  // ctx[prop] = ctx.__currentValues[prop] = value;\n  ctx[prop] = value; // }\n\n  return ctx[prop];\n}\n/**\n * @param {string} [stroke] If specified, do not check style.textStroke.\n * @param {string} [lineWidth] If specified, do not check style.textStroke.\n * @param {number} style\n */\n\n\nfunction getStroke(stroke, lineWidth) {\n  return stroke == null || lineWidth <= 0 || stroke === 'transparent' || stroke === 'none' ? null // TODO pattern and gradient?\n  : stroke.image || stroke.colorStops ? '#000' : stroke;\n}\n\nfunction getFill(fill) {\n  return fill == null || fill === 'none' ? null // TODO pattern and gradient?\n  : fill.image || fill.colorStops ? '#000' : fill;\n}\n\nfunction parsePercent(value, maxValue) {\n  if (typeof value === 'string') {\n    if (value.lastIndexOf('%') >= 0) {\n      return parseFloat(value) / 100 * maxValue;\n    }\n\n    return parseFloat(value);\n  }\n\n  return value;\n}\n\nfunction getTextXForPadding(x, textAlign, textPadding) {\n  return textAlign === 'right' ? x - textPadding[1] : textAlign === 'center' ? x + textPadding[3] / 2 - textPadding[1] / 2 : x + textPadding[3];\n}\n/**\n * @param {string} text\n * @param {module:zrender/Style} style\n * @return {boolean}\n */\n\n\nfunction needDrawText(text, style) {\n  return text != null && (text || style.textBackgroundColor || style.textBorderWidth && style.textBorderColor || style.textPadding);\n}\n\nexports.normalizeTextStyle = normalizeTextStyle;\nexports.renderText = renderText;\nexports.getStroke = getStroke;\nexports.getFill = getFill;\nexports.needDrawText = needDrawText;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/helper/text.js\n// module id = 1033\n// module chunks = 0 1 2","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisPointerModelHelper = require(\"./axisPointer/modelHelper\");\n\nvar axisTrigger = require(\"./axisPointer/axisTrigger\");\n\nrequire(\"./axisPointer/AxisPointerModel\");\n\nrequire(\"./axisPointer/AxisPointerView\");\n\nrequire(\"./axisPointer/CartesianAxisPointer\");\n\n// CartesianAxisPointer is not supposed to be required here. But consider\n// echarts.simple.js and online build tooltip, which only require gridSimple,\n// CartesianAxisPointer should be able to required somewhere.\necharts.registerPreprocessor(function (option) {\n  // Always has a global axisPointerModel for default setting.\n  if (option) {\n    (!option.axisPointer || option.axisPointer.length === 0) && (option.axisPointer = {});\n    var link = option.axisPointer.link; // Normalize to array to avoid object mergin. But if link\n    // is not set, remain null/undefined, otherwise it will\n    // override existent link setting.\n\n    if (link && !zrUtil.isArray(link)) {\n      option.axisPointer.link = [link];\n    }\n  }\n}); // This process should proformed after coordinate systems created\n// and series data processed. So put it on statistic processing stage.\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n  // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n  // allAxesInfo should be updated when setOption performed.\n  ecModel.getComponent('axisPointer').coordSysAxesInfo = axisPointerModelHelper.collect(ecModel, api);\n}); // Broadcast to all views.\n\necharts.registerAction({\n  type: 'updateAxisPointer',\n  event: 'updateAxisPointer',\n  update: ':updateAxisPointer'\n}, axisTrigger);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer.js\n// module id = 1034\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar AxisBuilder = require(\"../axis/AxisBuilder\");\n\n/**\n * @param {module:echarts/model/Model} axisPointerModel\n */\nfunction buildElStyle(axisPointerModel) {\n  var axisPointerType = axisPointerModel.get('type');\n  var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n  var style;\n\n  if (axisPointerType === 'line') {\n    style = styleModel.getLineStyle();\n    style.fill = null;\n  } else if (axisPointerType === 'shadow') {\n    style = styleModel.getAreaStyle();\n    style.stroke = null;\n  }\n\n  return style;\n}\n/**\n * @param {Function} labelPos {align, verticalAlign, position}\n */\n\n\nfunction buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos) {\n  var value = axisPointerModel.get('value');\n  var text = getValueLabel(value, axisModel.axis, axisModel.ecModel, axisPointerModel.get('seriesDataIndices'), {\n    precision: axisPointerModel.get('label.precision'),\n    formatter: axisPointerModel.get('label.formatter')\n  });\n  var labelModel = axisPointerModel.getModel('label');\n  var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n  var font = labelModel.getFont();\n  var textRect = textContain.getBoundingRect(text, font);\n  var position = labelPos.position;\n  var width = textRect.width + paddings[1] + paddings[3];\n  var height = textRect.height + paddings[0] + paddings[2]; // Adjust by align.\n\n  var align = labelPos.align;\n  align === 'right' && (position[0] -= width);\n  align === 'center' && (position[0] -= width / 2);\n  var verticalAlign = labelPos.verticalAlign;\n  verticalAlign === 'bottom' && (position[1] -= height);\n  verticalAlign === 'middle' && (position[1] -= height / 2); // Not overflow ec container\n\n  confineInContainer(position, width, height, api);\n  var bgColor = labelModel.get('backgroundColor');\n\n  if (!bgColor || bgColor === 'auto') {\n    bgColor = axisModel.get('axisLine.lineStyle.color');\n  }\n\n  elOption.label = {\n    shape: {\n      x: 0,\n      y: 0,\n      width: width,\n      height: height,\n      r: labelModel.get('borderRadius')\n    },\n    position: position.slice(),\n    // TODO: rich\n    style: {\n      text: text,\n      textFont: font,\n      textFill: labelModel.getTextColor(),\n      textPosition: 'inside',\n      fill: bgColor,\n      stroke: labelModel.get('borderColor') || 'transparent',\n      lineWidth: labelModel.get('borderWidth') || 0,\n      shadowBlur: labelModel.get('shadowBlur'),\n      shadowColor: labelModel.get('shadowColor'),\n      shadowOffsetX: labelModel.get('shadowOffsetX'),\n      shadowOffsetY: labelModel.get('shadowOffsetY')\n    },\n    // Lable should be over axisPointer.\n    z2: 10\n  };\n} // Do not overflow ec container\n\n\nfunction confineInContainer(position, width, height, api) {\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  position[0] = Math.min(position[0] + width, viewWidth) - width;\n  position[1] = Math.min(position[1] + height, viewHeight) - height;\n  position[0] = Math.max(position[0], 0);\n  position[1] = Math.max(position[1], 0);\n}\n/**\n * @param {number} value\n * @param {module:echarts/coord/Axis} axis\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} opt\n * @param {Array.<Object>} seriesDataIndices\n * @param {number|string} opt.precision 'auto' or a number\n * @param {string|Function} opt.formatter label formatter\n */\n\n\nfunction getValueLabel(value, axis, ecModel, seriesDataIndices, opt) {\n  var text = axis.scale.getLabel( // If `precision` is set, width can be fixed (like '12.00500'), which\n  // helps to debounce when when moving label.\n  value, {\n    precision: opt.precision\n  });\n  var formatter = opt.formatter;\n\n  if (formatter) {\n    var params = {\n      value: axisHelper.getAxisRawValue(axis, value),\n      seriesData: []\n    };\n    zrUtil.each(seriesDataIndices, function (idxItem) {\n      var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n      var dataIndex = idxItem.dataIndexInside;\n      var dataParams = series && series.getDataParams(dataIndex);\n      dataParams && params.seriesData.push(dataParams);\n    });\n\n    if (zrUtil.isString(formatter)) {\n      text = formatter.replace('{value}', text);\n    } else if (zrUtil.isFunction(formatter)) {\n      text = formatter(params);\n    }\n  }\n\n  return text;\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @param {number} value\n * @param {Object} layoutInfo {\n *  rotation, position, labelOffset, labelDirection, labelMargin\n * }\n */\n\n\nfunction getTransformedPosition(axis, value, layoutInfo) {\n  var transform = matrix.create();\n  matrix.rotate(transform, transform, layoutInfo.rotation);\n  matrix.translate(transform, transform, layoutInfo.position);\n  return graphic.applyTransform([axis.dataToCoord(value), (layoutInfo.labelOffset || 0) + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)], transform);\n}\n\nfunction buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api) {\n  var textLayout = AxisBuilder.innerTextLayout(layoutInfo.rotation, 0, layoutInfo.labelDirection);\n  layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n  buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n    position: getTransformedPosition(axisModel.axis, value, layoutInfo),\n    align: textLayout.textAlign,\n    verticalAlign: textLayout.textVerticalAlign\n  });\n}\n/**\n * @param {Array.<number>} p1\n * @param {Array.<number>} p2\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeLineShape(p1, p2, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x1: p1[xDimIndex],\n    y1: p1[1 - xDimIndex],\n    x2: p2[xDimIndex],\n    y2: p2[1 - xDimIndex]\n  };\n}\n/**\n * @param {Array.<number>} xy\n * @param {Array.<number>} wh\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeRectShape(xy, wh, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x: xy[xDimIndex],\n    y: xy[1 - xDimIndex],\n    width: wh[xDimIndex],\n    height: wh[1 - xDimIndex]\n  };\n}\n\nfunction makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\n  return {\n    cx: cx,\n    cy: cy,\n    r0: r0,\n    r: r,\n    startAngle: startAngle,\n    endAngle: endAngle,\n    clockwise: true\n  };\n}\n\nexports.buildElStyle = buildElStyle;\nexports.buildLabelElOption = buildLabelElOption;\nexports.getValueLabel = getValueLabel;\nexports.getTransformedPosition = getTransformedPosition;\nexports.buildCartesianSingleLabelElOption = buildCartesianSingleLabelElOption;\nexports.makeLineShape = makeLineShape;\nexports.makeRectShape = makeRectShape;\nexports.makeSectorShape = makeSectorShape;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/viewHelper.js\n// module id = 1035\n// module chunks = 0 1 2","var matrix = require(\"../core/matrix\");\n\nvar vector = require(\"../core/vector\");\n\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\nvar mIdentity = matrix.identity;\nvar EPSILON = 5e-5;\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * @alias module:zrender/mixin/Transformable\n * @constructor\n */\n\n\nvar Transformable = function (opts) {\n  opts = opts || {}; // If there are no given position, rotation, scale\n\n  if (!opts.position) {\n    /**\n     * 平移\n     * @type {Array.<number>}\n     * @default [0, 0]\n     */\n    this.position = [0, 0];\n  }\n\n  if (opts.rotation == null) {\n    /**\n     * 旋转\n     * @type {Array.<number>}\n     * @default 0\n     */\n    this.rotation = 0;\n  }\n\n  if (!opts.scale) {\n    /**\n     * 缩放\n     * @type {Array.<number>}\n     * @default [1, 1]\n     */\n    this.scale = [1, 1];\n  }\n  /**\n   * 旋转和缩放的原点\n   * @type {Array.<number>}\n   * @default null\n   */\n\n\n  this.origin = this.origin || null;\n};\n\nvar transformableProto = Transformable.prototype;\ntransformableProto.transform = null;\n/**\n * 判断是否需要有坐标变换\n * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n */\n\ntransformableProto.needLocalTransform = function () {\n  return isNotAroundZero(this.rotation) || isNotAroundZero(this.position[0]) || isNotAroundZero(this.position[1]) || isNotAroundZero(this.scale[0] - 1) || isNotAroundZero(this.scale[1] - 1);\n};\n\ntransformableProto.updateTransform = function () {\n  var parent = this.parent;\n  var parentHasTransform = parent && parent.transform;\n  var needLocalTransform = this.needLocalTransform();\n  var m = this.transform;\n\n  if (!(needLocalTransform || parentHasTransform)) {\n    m && mIdentity(m);\n    return;\n  }\n\n  m = m || matrix.create();\n\n  if (needLocalTransform) {\n    this.getLocalTransform(m);\n  } else {\n    mIdentity(m);\n  } // 应用父节点变换\n\n\n  if (parentHasTransform) {\n    if (needLocalTransform) {\n      matrix.mul(m, parent.transform, m);\n    } else {\n      matrix.copy(m, parent.transform);\n    }\n  } // 保存这个变换矩阵\n\n\n  this.transform = m;\n  this.invTransform = this.invTransform || matrix.create();\n  matrix.invert(this.invTransform, m);\n};\n\ntransformableProto.getLocalTransform = function (m) {\n  return Transformable.getLocalTransform(this, m);\n};\n/**\n * 将自己的transform应用到context上\n * @param {CanvasRenderingContext2D} ctx\n */\n\n\ntransformableProto.setTransform = function (ctx) {\n  var m = this.transform;\n  var dpr = ctx.dpr || 1;\n\n  if (m) {\n    ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n  } else {\n    ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n  }\n};\n\ntransformableProto.restoreTransform = function (ctx) {\n  var dpr = ctx.dpr || 1;\n  ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n};\n\nvar tmpTransform = [];\n/**\n * 分解`transform`矩阵到`position`, `rotation`, `scale`\n */\n\ntransformableProto.decomposeTransform = function () {\n  if (!this.transform) {\n    return;\n  }\n\n  var parent = this.parent;\n  var m = this.transform;\n\n  if (parent && parent.transform) {\n    // Get local transform and decompose them to position, scale, rotation\n    matrix.mul(tmpTransform, parent.invTransform, m);\n    m = tmpTransform;\n  }\n\n  var sx = m[0] * m[0] + m[1] * m[1];\n  var sy = m[2] * m[2] + m[3] * m[3];\n  var position = this.position;\n  var scale = this.scale;\n\n  if (isNotAroundZero(sx - 1)) {\n    sx = Math.sqrt(sx);\n  }\n\n  if (isNotAroundZero(sy - 1)) {\n    sy = Math.sqrt(sy);\n  }\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  position[0] = m[4];\n  position[1] = m[5];\n  scale[0] = sx;\n  scale[1] = sy;\n  this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n};\n/**\n * Get global scale\n * @return {Array.<number>}\n */\n\n\ntransformableProto.getGlobalScale = function () {\n  var m = this.transform;\n\n  if (!m) {\n    return [1, 1];\n  }\n\n  var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n  var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  return [sx, sy];\n};\n/**\n * 变换坐标位置到 shape 的局部坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToLocal = function (x, y) {\n  var v2 = [x, y];\n  var invTransform = this.invTransform;\n\n  if (invTransform) {\n    vector.applyTransform(v2, v2, invTransform);\n  }\n\n  return v2;\n};\n/**\n * 变换局部坐标位置到全局坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToGlobal = function (x, y) {\n  var v2 = [x, y];\n  var transform = this.transform;\n\n  if (transform) {\n    vector.applyTransform(v2, v2, transform);\n  }\n\n  return v2;\n};\n/**\n * @static\n * @param {Object} target\n * @param {Array.<number>} target.origin\n * @param {number} target.rotation\n * @param {Array.<number>} target.position\n * @param {Array.<number>} [m]\n */\n\n\nTransformable.getLocalTransform = function (target, m) {\n  m = m || [];\n  mIdentity(m);\n  var origin = target.origin;\n  var scale = target.scale || [1, 1];\n  var rotation = target.rotation || 0;\n  var position = target.position || [0, 0];\n\n  if (origin) {\n    // Translate to origin\n    m[4] -= origin[0];\n    m[5] -= origin[1];\n  }\n\n  matrix.scale(m, m, scale);\n\n  if (rotation) {\n    matrix.rotate(m, m, rotation);\n  }\n\n  if (origin) {\n    // Translate back from origin\n    m[4] += origin[0];\n    m[5] += origin[1];\n  }\n\n  m[4] += position[0];\n  m[5] += position[1];\n  return m;\n};\n\nvar _default = Transformable;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/mixin/Transformable.js\n// module id = 1036\n// module chunks = 0 1 2","var vec2 = require(\"./vector\");\n\nvar curve = require(\"./curve\");\n\n/**\n * @author Yi Shen(https://github.com/pissang)\n */\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI2 = Math.PI * 2;\nvar start = vec2.create();\nvar end = vec2.create();\nvar extremity = vec2.create();\n/**\n * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n * @module zrender/core/bbox\n * @param {Array<Object>} points 顶点数组\n * @param {number} min\n * @param {number} max\n */\n\nfunction fromPoints(points, min, max) {\n  if (points.length === 0) {\n    return;\n  }\n\n  var p = points[0];\n  var left = p[0];\n  var right = p[0];\n  var top = p[1];\n  var bottom = p[1];\n  var i;\n\n  for (i = 1; i < points.length; i++) {\n    p = points[i];\n    left = mathMin(left, p[0]);\n    right = mathMax(right, p[0]);\n    top = mathMin(top, p[1]);\n    bottom = mathMax(bottom, p[1]);\n  }\n\n  min[0] = left;\n  min[1] = top;\n  max[0] = right;\n  max[1] = bottom;\n}\n/**\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromLine(x0, y0, x1, y1, min, max) {\n  min[0] = mathMin(x0, x1);\n  min[1] = mathMin(y0, y1);\n  max[0] = mathMax(x0, x1);\n  max[1] = mathMax(y0, y1);\n}\n\nvar xDim = [];\nvar yDim = [];\n/**\n * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\nfunction fromCubic(x0, y0, x1, y1, x2, y2, x3, y3, min, max) {\n  var cubicExtrema = curve.cubicExtrema;\n  var cubicAt = curve.cubicAt;\n  var i;\n  var n = cubicExtrema(x0, x1, x2, x3, xDim);\n  min[0] = Infinity;\n  min[1] = Infinity;\n  max[0] = -Infinity;\n  max[1] = -Infinity;\n\n  for (i = 0; i < n; i++) {\n    var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n    min[0] = mathMin(x, min[0]);\n    max[0] = mathMax(x, max[0]);\n  }\n\n  n = cubicExtrema(y0, y1, y2, y3, yDim);\n\n  for (i = 0; i < n; i++) {\n    var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n    min[1] = mathMin(y, min[1]);\n    max[1] = mathMax(y, max[1]);\n  }\n\n  min[0] = mathMin(x0, min[0]);\n  max[0] = mathMax(x0, max[0]);\n  min[0] = mathMin(x3, min[0]);\n  max[0] = mathMax(x3, max[0]);\n  min[1] = mathMin(y0, min[1]);\n  max[1] = mathMax(y0, max[1]);\n  min[1] = mathMin(y3, min[1]);\n  max[1] = mathMax(y3, max[1]);\n}\n/**\n * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromQuadratic(x0, y0, x1, y1, x2, y2, min, max) {\n  var quadraticExtremum = curve.quadraticExtremum;\n  var quadraticAt = curve.quadraticAt; // Find extremities, where derivative in x dim or y dim is zero\n\n  var tx = mathMax(mathMin(quadraticExtremum(x0, x1, x2), 1), 0);\n  var ty = mathMax(mathMin(quadraticExtremum(y0, y1, y2), 1), 0);\n  var x = quadraticAt(x0, x1, x2, tx);\n  var y = quadraticAt(y0, y1, y2, ty);\n  min[0] = mathMin(x0, x2, x);\n  min[1] = mathMin(y0, y2, y);\n  max[0] = mathMax(x0, x2, x);\n  max[1] = mathMax(y0, y2, y);\n}\n/**\n * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n * @method\n * @memberOf module:zrender/core/bbox\n * @param {number} x\n * @param {number} y\n * @param {number} rx\n * @param {number} ry\n * @param {number} startAngle\n * @param {number} endAngle\n * @param {number} anticlockwise\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromArc(x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max) {\n  var vec2Min = vec2.min;\n  var vec2Max = vec2.max;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff % PI2 < 1e-4 && diff > 1e-4) {\n    // Is a circle\n    min[0] = x - rx;\n    min[1] = y - ry;\n    max[0] = x + rx;\n    max[1] = y + ry;\n    return;\n  }\n\n  start[0] = mathCos(startAngle) * rx + x;\n  start[1] = mathSin(startAngle) * ry + y;\n  end[0] = mathCos(endAngle) * rx + x;\n  end[1] = mathSin(endAngle) * ry + y;\n  vec2Min(min, start, end);\n  vec2Max(max, start, end); // Thresh to [0, Math.PI * 2]\n\n  startAngle = startAngle % PI2;\n\n  if (startAngle < 0) {\n    startAngle = startAngle + PI2;\n  }\n\n  endAngle = endAngle % PI2;\n\n  if (endAngle < 0) {\n    endAngle = endAngle + PI2;\n  }\n\n  if (startAngle > endAngle && !anticlockwise) {\n    endAngle += PI2;\n  } else if (startAngle < endAngle && anticlockwise) {\n    startAngle += PI2;\n  }\n\n  if (anticlockwise) {\n    var tmp = endAngle;\n    endAngle = startAngle;\n    startAngle = tmp;\n  } // var number = 0;\n  // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n\n\n  for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n    if (angle > startAngle) {\n      extremity[0] = mathCos(angle) * rx + x;\n      extremity[1] = mathSin(angle) * ry + y;\n      vec2Min(min, extremity, min);\n      vec2Max(max, extremity, max);\n    }\n  }\n}\n\nexports.fromPoints = fromPoints;\nexports.fromLine = fromLine;\nexports.fromCubic = fromCubic;\nexports.fromQuadratic = fromQuadratic;\nexports.fromArc = fromArc;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/bbox.js\n// module id = 1037\n// module chunks = 0 1 2","var Displayable = require(\"./Displayable\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar textContain = require(\"../contain/text\");\n\nvar textHelper = require(\"./helper/text\");\n\n/**\n * @alias zrender/graphic/Text\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nvar Text = function (opts) {\n  // jshint ignore:line\n  Displayable.call(this, opts);\n};\n\nText.prototype = {\n  constructor: Text,\n  type: 'text',\n  brush: function (ctx, prevEl) {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true); // Use props with prefix 'text'.\n\n    style.fill = style.stroke = style.shadowBlur = style.shadowColor = style.shadowOffsetX = style.shadowOffsetY = null;\n    var text = style.text; // Convert to string\n\n    text != null && (text += ''); // Always bind style\n\n    style.bind(ctx, this, prevEl);\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    }\n\n    this.setTransform(ctx);\n    textHelper.renderText(this, ctx, text, style);\n    this.restoreTransform(ctx);\n  },\n  getBoundingRect: function () {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n    if (!this._rect) {\n      var text = style.text;\n      text != null ? text += '' : text = '';\n      var rect = textContain.getBoundingRect(style.text + '', style.font, style.textAlign, style.textVerticalAlign, style.textPadding, style.rich);\n      rect.x += style.x || 0;\n      rect.y += style.y || 0;\n\n      if (textHelper.getStroke(style.textStroke, style.textStrokeWidth)) {\n        var w = style.textStrokeWidth;\n        rect.x -= w / 2;\n        rect.y -= w / 2;\n        rect.width += w;\n        rect.height += w;\n      }\n\n      this._rect = rect;\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(Text, Displayable);\nvar _default = Text;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/Text.js\n// module id = 1038\n// module chunks = 0 1 2","var Group = require(\"zrender/lib/container/Group\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\nvar Component = function () {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewComponent');\n};\n\nComponent.prototype = {\n  constructor: Component,\n  init: function (ecModel, api) {},\n  render: function (componentModel, ecModel, api, payload) {},\n  dispose: function () {}\n};\nvar componentProto = Component.prototype;\n\ncomponentProto.updateView = componentProto.updateLayout = componentProto.updateVisual = function (seriesModel, ecModel, api, payload) {// Do nothing;\n}; // Enable Component.extend.\n\n\nclazzUtil.enableClassExtend(Component); // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Component, {\n  registerWhenExtend: true\n});\nvar _default = Component;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/view/Component.js\n// module id = 1039\n// module chunks = 0 1 2","/**\n * Calculate slider move result.\n * Usage:\n * (1) If both handle0 and handle1 are needed to be moved, set minSpan the same as\n * maxSpan and the same as `Math.abs(handleEnd[1] - handleEnds[0])`.\n * (2) If handle0 is forbidden to cross handle1, set minSpan as `0`.\n *\n * @param {number} delta Move length.\n * @param {Array.<number>} handleEnds handleEnds[0] can be bigger then handleEnds[1].\n *              handleEnds will be modified in this method.\n * @param {Array.<number>} extent handleEnds is restricted by extent.\n *              extent[0] should less or equals than extent[1].\n * @param {number|string} handleIndex Can be 'all', means that both move the two handleEnds,\n *              where the input minSpan and maxSpan will not work.\n * @param {number} [minSpan] The range of dataZoom can not be smaller than that.\n *              If not set, handle0 and cross handle1. If set as a non-negative\n *              number (including `0`), handles will push each other when reaching\n *              the minSpan.\n * @param {number} [maxSpan] The range of dataZoom can not be larger than that.\n * @return {Array.<number>} The input handleEnds.\n */\nfunction _default(delta, handleEnds, extent, handleIndex, minSpan, maxSpan) {\n  // Normalize firstly.\n  handleEnds[0] = restrict(handleEnds[0], extent);\n  handleEnds[1] = restrict(handleEnds[1], extent);\n  delta = delta || 0;\n  var extentSpan = extent[1] - extent[0]; // Notice maxSpan and minSpan can be null/undefined.\n\n  if (minSpan != null) {\n    minSpan = restrict(minSpan, [0, extentSpan]);\n  }\n\n  if (maxSpan != null) {\n    maxSpan = Math.max(maxSpan, minSpan != null ? minSpan : 0);\n  }\n\n  if (handleIndex === 'all') {\n    minSpan = maxSpan = Math.abs(handleEnds[1] - handleEnds[0]);\n    handleIndex = 0;\n  }\n\n  var originalDistSign = getSpanSign(handleEnds, handleIndex);\n  handleEnds[handleIndex] += delta; // Restrict in extent.\n\n  var extentMinSpan = minSpan || 0;\n  var realExtent = extent.slice();\n  originalDistSign.sign < 0 ? realExtent[0] += extentMinSpan : realExtent[1] -= extentMinSpan;\n  handleEnds[handleIndex] = restrict(handleEnds[handleIndex], realExtent); // Expand span.\n\n  var currDistSign = getSpanSign(handleEnds, handleIndex);\n\n  if (minSpan != null && (currDistSign.sign !== originalDistSign.sign || currDistSign.span < minSpan)) {\n    // If minSpan exists, 'cross' is forbinden.\n    handleEnds[1 - handleIndex] = handleEnds[handleIndex] + originalDistSign.sign * minSpan;\n  } // Shrink span.\n\n\n  var currDistSign = getSpanSign(handleEnds, handleIndex);\n\n  if (maxSpan != null && currDistSign.span > maxSpan) {\n    handleEnds[1 - handleIndex] = handleEnds[handleIndex] + currDistSign.sign * maxSpan;\n  }\n\n  return handleEnds;\n}\n\nfunction getSpanSign(handleEnds, handleIndex) {\n  var dist = handleEnds[handleIndex] - handleEnds[1 - handleIndex]; // If `handleEnds[0] === handleEnds[1]`, always believe that handleEnd[0]\n  // is at left of handleEnds[1] for non-cross case.\n\n  return {\n    span: Math.abs(dist),\n    sign: dist > 0 ? -1 : dist < 0 ? 1 : handleIndex ? -1 : 1\n  };\n}\n\nfunction restrict(value, extend) {\n  return Math.min(extend[1], Math.max(extend[0], value));\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/sliderMove.js\n// module id = 1040\n// module chunks = 0 1 2","/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\nvar idStart = 0x0907;\n\nfunction _default() {\n  return idStart++;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/guid.js\n// module id = 1042\n// module chunks = 0 1 2","var guid = require(\"./core/guid\");\n\nvar Eventful = require(\"./mixin/Eventful\");\n\nvar Transformable = require(\"./mixin/Transformable\");\n\nvar Animatable = require(\"./mixin/Animatable\");\n\nvar zrUtil = require(\"./core/util\");\n\n/**\n * @alias module:zrender/Element\n * @constructor\n * @extends {module:zrender/mixin/Animatable}\n * @extends {module:zrender/mixin/Transformable}\n * @extends {module:zrender/mixin/Eventful}\n */\nvar Element = function (opts) {\n  // jshint ignore:line\n  Transformable.call(this, opts);\n  Eventful.call(this, opts);\n  Animatable.call(this, opts);\n  /**\n   * 画布元素ID\n   * @type {string}\n   */\n\n  this.id = opts.id || guid();\n};\n\nElement.prototype = {\n  /**\n   * 元素类型\n   * Element type\n   * @type {string}\n   */\n  type: 'element',\n\n  /**\n   * 元素名字\n   * Element name\n   * @type {string}\n   */\n  name: '',\n\n  /**\n   * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n   * ZRender instance will be assigned when element is associated with zrender\n   * @name module:/zrender/Element#__zr\n   * @type {module:zrender/ZRender}\n   */\n  __zr: null,\n\n  /**\n   * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n   * If ignore drawing and events of the element object\n   * @name module:/zrender/Element#ignore\n   * @type {boolean}\n   * @default false\n   */\n  ignore: false,\n\n  /**\n   * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n   * 该路径会继承被裁减对象的变换\n   * @type {module:zrender/graphic/Path}\n   * @see http://www.w3.org/TR/2dcontext/#clipping-region\n   * @readOnly\n   */\n  clipPath: null,\n\n  /**\n   * Drift element\n   * @param  {number} dx dx on the global space\n   * @param  {number} dy dy on the global space\n   */\n  drift: function (dx, dy) {\n    switch (this.draggable) {\n      case 'horizontal':\n        dy = 0;\n        break;\n\n      case 'vertical':\n        dx = 0;\n        break;\n    }\n\n    var m = this.transform;\n\n    if (!m) {\n      m = this.transform = [1, 0, 0, 1, 0, 0];\n    }\n\n    m[4] += dx;\n    m[5] += dy;\n    this.decomposeTransform();\n    this.dirty(false);\n  },\n\n  /**\n   * Hook before update\n   */\n  beforeUpdate: function () {},\n\n  /**\n   * Hook after update\n   */\n  afterUpdate: function () {},\n\n  /**\n   * Update each frame\n   */\n  update: function () {\n    this.updateTransform();\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {},\n\n  /**\n   * @protected\n   */\n  attrKV: function (key, value) {\n    if (key === 'position' || key === 'scale' || key === 'origin') {\n      // Copy the array\n      if (value) {\n        var target = this[key];\n\n        if (!target) {\n          target = this[key] = [];\n        }\n\n        target[0] = value[0];\n        target[1] = value[1];\n      }\n    } else {\n      this[key] = value;\n    }\n  },\n\n  /**\n   * Hide the element\n   */\n  hide: function () {\n    this.ignore = true;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * Show the element\n   */\n  show: function () {\n    this.ignore = false;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * @param {string|Object} key\n   * @param {*} value\n   */\n  attr: function (key, value) {\n    if (typeof key === 'string') {\n      this.attrKV(key, value);\n    } else if (zrUtil.isObject(key)) {\n      for (var name in key) {\n        if (key.hasOwnProperty(name)) {\n          this.attrKV(name, key[name]);\n        }\n      }\n    }\n\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * @param {module:zrender/graphic/Path} clipPath\n   */\n  setClipPath: function (clipPath) {\n    var zr = this.__zr;\n\n    if (zr) {\n      clipPath.addSelfToZr(zr);\n    } // Remove previous clip path\n\n\n    if (this.clipPath && this.clipPath !== clipPath) {\n      this.removeClipPath();\n    }\n\n    this.clipPath = clipPath;\n    clipPath.__zr = zr;\n    clipPath.__clipTarget = this;\n    this.dirty(false);\n  },\n\n  /**\n   */\n  removeClipPath: function () {\n    var clipPath = this.clipPath;\n\n    if (clipPath) {\n      if (clipPath.__zr) {\n        clipPath.removeSelfFromZr(clipPath.__zr);\n      }\n\n      clipPath.__zr = null;\n      clipPath.__clipTarget = null;\n      this.clipPath = null;\n      this.dirty(false);\n    }\n  },\n\n  /**\n   * Add self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  addSelfToZr: function (zr) {\n    this.__zr = zr; // 添加动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.addAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.addSelfToZr(zr);\n    }\n  },\n\n  /**\n   * Remove self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  removeSelfFromZr: function (zr) {\n    this.__zr = null; // 移除动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.removeAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.removeSelfFromZr(zr);\n    }\n  }\n};\nzrUtil.mixin(Element, Animatable);\nzrUtil.mixin(Element, Transformable);\nzrUtil.mixin(Element, Eventful);\nvar _default = Element;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/Element.js\n// module id = 1043\n// module chunks = 0 1 2","var Clip = require(\"./Clip\");\n\nvar color = require(\"../tool/color\");\n\nvar _util = require(\"../core/util\");\n\nvar isArrayLike = _util.isArrayLike;\n\n/**\n * @module echarts/animation/Animator\n */\nvar arraySlice = Array.prototype.slice;\n\nfunction defaultGetter(target, key) {\n  return target[key];\n}\n\nfunction defaultSetter(target, key, value) {\n  target[key] = value;\n}\n/**\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} percent\n * @return {number}\n */\n\n\nfunction interpolateNumber(p0, p1, percent) {\n  return (p1 - p0) * percent + p0;\n}\n/**\n * @param  {string} p0\n * @param  {string} p1\n * @param  {number} percent\n * @return {string}\n */\n\n\nfunction interpolateString(p0, p1, percent) {\n  return percent > 0.5 ? p1 : p0;\n}\n/**\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {number} percent\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction interpolateArray(p0, p1, percent, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = interpolateNumber(p0[i], p1[i], percent);\n    }\n  } else {\n    var len2 = len && p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = interpolateNumber(p0[i][j], p1[i][j], percent);\n      }\n    }\n  }\n} // arr0 is source array, arr1 is target array.\n// Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n\n\nfunction fillArr(arr0, arr1, arrDim) {\n  var arr0Len = arr0.length;\n  var arr1Len = arr1.length;\n\n  if (arr0Len !== arr1Len) {\n    // FIXME Not work for TypedArray\n    var isPreviousLarger = arr0Len > arr1Len;\n\n    if (isPreviousLarger) {\n      // Cut the previous\n      arr0.length = arr1Len;\n    } else {\n      // Fill the previous\n      for (var i = arr0Len; i < arr1Len; i++) {\n        arr0.push(arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i]));\n      }\n    }\n  } // Handling NaN value\n\n\n  var len2 = arr0[0] && arr0[0].length;\n\n  for (var i = 0; i < arr0.length; i++) {\n    if (arrDim === 1) {\n      if (isNaN(arr0[i])) {\n        arr0[i] = arr1[i];\n      }\n    } else {\n      for (var j = 0; j < len2; j++) {\n        if (isNaN(arr0[i][j])) {\n          arr0[i][j] = arr1[i][j];\n        }\n      }\n    }\n  }\n}\n/**\n * @param  {Array} arr0\n * @param  {Array} arr1\n * @param  {number} arrDim\n * @return {boolean}\n */\n\n\nfunction isArraySame(arr0, arr1, arrDim) {\n  if (arr0 === arr1) {\n    return true;\n  }\n\n  var len = arr0.length;\n\n  if (len !== arr1.length) {\n    return false;\n  }\n\n  if (arrDim === 1) {\n    for (var i = 0; i < len; i++) {\n      if (arr0[i] !== arr1[i]) {\n        return false;\n      }\n    }\n  } else {\n    var len2 = arr0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        if (arr0[i][j] !== arr1[i][j]) {\n          return false;\n        }\n      }\n    }\n  }\n\n  return true;\n}\n/**\n * Catmull Rom interpolate array\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {Array} p2\n * @param  {Array} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction catmullRomInterpolateArray(p0, p1, p2, p3, t, t2, t3, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = catmullRomInterpolate(p0[i], p1[i], p2[i], p3[i], t, t2, t3);\n    }\n  } else {\n    var len2 = p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = catmullRomInterpolate(p0[i][j], p1[i][j], p2[i][j], p3[i][j], t, t2, t3);\n      }\n    }\n  }\n}\n/**\n * Catmull Rom interpolate number\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @return {number}\n */\n\n\nfunction catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n\nfunction cloneValue(value) {\n  if (isArrayLike(value)) {\n    var len = value.length;\n\n    if (isArrayLike(value[0])) {\n      var ret = [];\n\n      for (var i = 0; i < len; i++) {\n        ret.push(arraySlice.call(value[i]));\n      }\n\n      return ret;\n    }\n\n    return arraySlice.call(value);\n  }\n\n  return value;\n}\n\nfunction rgba2String(rgba) {\n  rgba[0] = Math.floor(rgba[0]);\n  rgba[1] = Math.floor(rgba[1]);\n  rgba[2] = Math.floor(rgba[2]);\n  return 'rgba(' + rgba.join(',') + ')';\n}\n\nfunction getArrayDim(keyframes) {\n  var lastValue = keyframes[keyframes.length - 1].value;\n  return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\n}\n\nfunction createTrackClip(animator, easing, oneTrackDone, keyframes, propName, forceAnimate) {\n  var getter = animator._getter;\n  var setter = animator._setter;\n  var useSpline = easing === 'spline';\n  var trackLen = keyframes.length;\n\n  if (!trackLen) {\n    return;\n  } // Guess data type\n\n\n  var firstVal = keyframes[0].value;\n  var isValueArray = isArrayLike(firstVal);\n  var isValueColor = false;\n  var isValueString = false; // For vertices morphing\n\n  var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\n  var trackMaxTime; // Sort keyframe as ascending\n\n  keyframes.sort(function (a, b) {\n    return a.time - b.time;\n  });\n  trackMaxTime = keyframes[trackLen - 1].time; // Percents of each keyframe\n\n  var kfPercents = []; // Value of each keyframe\n\n  var kfValues = [];\n  var prevValue = keyframes[0].value;\n  var isAllValueEqual = true;\n\n  for (var i = 0; i < trackLen; i++) {\n    kfPercents.push(keyframes[i].time / trackMaxTime); // Assume value is a color when it is a string\n\n    var value = keyframes[i].value; // Check if value is equal, deep check if value is array\n\n    if (!(isValueArray && isArraySame(value, prevValue, arrDim) || !isValueArray && value === prevValue)) {\n      isAllValueEqual = false;\n    }\n\n    prevValue = value; // Try converting a string to a color array\n\n    if (typeof value == 'string') {\n      var colorArray = color.parse(value);\n\n      if (colorArray) {\n        value = colorArray;\n        isValueColor = true;\n      } else {\n        isValueString = true;\n      }\n    }\n\n    kfValues.push(value);\n  }\n\n  if (!forceAnimate && isAllValueEqual) {\n    return;\n  }\n\n  var lastValue = kfValues[trackLen - 1]; // Polyfill array and NaN value\n\n  for (var i = 0; i < trackLen - 1; i++) {\n    if (isValueArray) {\n      fillArr(kfValues[i], lastValue, arrDim);\n    } else {\n      if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n        kfValues[i] = lastValue;\n      }\n    }\n  }\n\n  isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim); // Cache the key of last frame to speed up when\n  // animation playback is sequency\n\n  var lastFrame = 0;\n  var lastFramePercent = 0;\n  var start;\n  var w;\n  var p0;\n  var p1;\n  var p2;\n  var p3;\n\n  if (isValueColor) {\n    var rgba = [0, 0, 0, 0];\n  }\n\n  var onframe = function (target, percent) {\n    // Find the range keyframes\n    // kf1-----kf2---------current--------kf3\n    // find kf2 and kf3 and do interpolation\n    var frame; // In the easing function like elasticOut, percent may less than 0\n\n    if (percent < 0) {\n      frame = 0;\n    } else if (percent < lastFramePercent) {\n      // Start from next key\n      // PENDING start from lastFrame ?\n      start = Math.min(lastFrame + 1, trackLen - 1);\n\n      for (frame = start; frame >= 0; frame--) {\n        if (kfPercents[frame] <= percent) {\n          break;\n        }\n      } // PENDING really need to do this ?\n\n\n      frame = Math.min(frame, trackLen - 2);\n    } else {\n      for (frame = lastFrame; frame < trackLen; frame++) {\n        if (kfPercents[frame] > percent) {\n          break;\n        }\n      }\n\n      frame = Math.min(frame - 1, trackLen - 2);\n    }\n\n    lastFrame = frame;\n    lastFramePercent = percent;\n    var range = kfPercents[frame + 1] - kfPercents[frame];\n\n    if (range === 0) {\n      return;\n    } else {\n      w = (percent - kfPercents[frame]) / range;\n    }\n\n    if (useSpline) {\n      p1 = kfValues[frame];\n      p0 = kfValues[frame === 0 ? frame : frame - 1];\n      p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n      p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n\n      if (isValueArray) {\n        catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          value = catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(p1, p2, w);\n        } else {\n          value = catmullRomInterpolate(p0, p1, p2, p3, w, w * w, w * w * w);\n        }\n\n        setter(target, propName, value);\n      }\n    } else {\n      if (isValueArray) {\n        interpolateArray(kfValues[frame], kfValues[frame + 1], w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          interpolateArray(kfValues[frame], kfValues[frame + 1], w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n        } else {\n          value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n        }\n\n        setter(target, propName, value);\n      }\n    }\n  };\n\n  var clip = new Clip({\n    target: animator._target,\n    life: trackMaxTime,\n    loop: animator._loop,\n    delay: animator._delay,\n    onframe: onframe,\n    ondestroy: oneTrackDone\n  });\n\n  if (easing && easing !== 'spline') {\n    clip.easing = easing;\n  }\n\n  return clip;\n}\n/**\n * @alias module:zrender/animation/Animator\n * @constructor\n * @param {Object} target\n * @param {boolean} loop\n * @param {Function} getter\n * @param {Function} setter\n */\n\n\nvar Animator = function (target, loop, getter, setter) {\n  this._tracks = {};\n  this._target = target;\n  this._loop = loop || false;\n  this._getter = getter || defaultGetter;\n  this._setter = setter || defaultSetter;\n  this._clipCount = 0;\n  this._delay = 0;\n  this._doneList = [];\n  this._onframeList = [];\n  this._clipList = [];\n};\n\nAnimator.prototype = {\n  /**\n   * 设置动画关键帧\n   * @param  {number} time 关键帧时间，单位是ms\n   * @param  {Object} props 关键帧的属性值，key-value表示\n   * @return {module:zrender/animation/Animator}\n   */\n  when: function (time\n  /* ms */\n  , props) {\n    var tracks = this._tracks;\n\n    for (var propName in props) {\n      if (!props.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      if (!tracks[propName]) {\n        tracks[propName] = []; // Invalid value\n\n        var value = this._getter(this._target, propName);\n\n        if (value == null) {\n          // zrLog('Invalid property ' + propName);\n          continue;\n        } // If time is 0\n        //  Then props is given initialize value\n        // Else\n        //  Initialize value from current prop value\n\n\n        if (time !== 0) {\n          tracks[propName].push({\n            time: 0,\n            value: cloneValue(value)\n          });\n        }\n      }\n\n      tracks[propName].push({\n        time: time,\n        value: props[propName]\n      });\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加动画每一帧的回调函数\n   * @param  {Function} callback\n   * @return {module:zrender/animation/Animator}\n   */\n  during: function (callback) {\n    this._onframeList.push(callback);\n\n    return this;\n  },\n  pause: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].pause();\n    }\n\n    this._paused = true;\n  },\n  resume: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].resume();\n    }\n\n    this._paused = false;\n  },\n  isPaused: function () {\n    return !!this._paused;\n  },\n  _doneCallback: function () {\n    // Clear all tracks\n    this._tracks = {}; // Clear all clips\n\n    this._clipList.length = 0;\n    var doneList = this._doneList;\n    var len = doneList.length;\n\n    for (var i = 0; i < len; i++) {\n      doneList[i].call(this);\n    }\n  },\n\n  /**\n   * 开始执行动画\n   * @param  {string|Function} [easing]\n   *         动画缓动函数，详见{@link module:zrender/animation/easing}\n   * @param  {boolean} forceAnimate\n   * @return {module:zrender/animation/Animator}\n   */\n  start: function (easing, forceAnimate) {\n    var self = this;\n    var clipCount = 0;\n\n    var oneTrackDone = function () {\n      clipCount--;\n\n      if (!clipCount) {\n        self._doneCallback();\n      }\n    };\n\n    var lastClip;\n\n    for (var propName in this._tracks) {\n      if (!this._tracks.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      var clip = createTrackClip(this, easing, oneTrackDone, this._tracks[propName], propName, forceAnimate);\n\n      if (clip) {\n        this._clipList.push(clip);\n\n        clipCount++; // If start after added to animation\n\n        if (this.animation) {\n          this.animation.addClip(clip);\n        }\n\n        lastClip = clip;\n      }\n    } // Add during callback on the last clip\n\n\n    if (lastClip) {\n      var oldOnFrame = lastClip.onframe;\n\n      lastClip.onframe = function (target, percent) {\n        oldOnFrame(target, percent);\n\n        for (var i = 0; i < self._onframeList.length; i++) {\n          self._onframeList[i](target, percent);\n        }\n      };\n    } // This optimization will help the case that in the upper application\n    // the view may be refreshed frequently, where animation will be\n    // called repeatly but nothing changed.\n\n\n    if (!clipCount) {\n      this._doneCallback();\n    }\n\n    return this;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stop: function (forwardToLast) {\n    var clipList = this._clipList;\n    var animation = this.animation;\n\n    for (var i = 0; i < clipList.length; i++) {\n      var clip = clipList[i];\n\n      if (forwardToLast) {\n        // Move to last frame before stop\n        clip.onframe(this._target, 1);\n      }\n\n      animation && animation.removeClip(clip);\n    }\n\n    clipList.length = 0;\n  },\n\n  /**\n   * 设置动画延迟开始的时间\n   * @param  {number} time 单位ms\n   * @return {module:zrender/animation/Animator}\n   */\n  delay: function (time) {\n    this._delay = time;\n    return this;\n  },\n\n  /**\n   * 添加动画结束的回调\n   * @param  {Function} cb\n   * @return {module:zrender/animation/Animator}\n   */\n  done: function (cb) {\n    if (cb) {\n      this._doneList.push(cb);\n    }\n\n    return this;\n  },\n\n  /**\n   * @return {Array.<module:zrender/animation/Clip>}\n   */\n  getClips: function () {\n    return this._clipList;\n  }\n};\nvar _default = Animator;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/animation/Animator.js\n// module id = 1044\n// module chunks = 0 1 2","// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n/**\n * Simple double linked list. Compared with array, it has O(1) remove operation.\n * @constructor\n */\nvar LinkedList = function () {\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n  this.head = null;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.tail = null;\n  this._len = 0;\n};\n\nvar linkedListProto = LinkedList.prototype;\n/**\n * Insert a new value at the tail\n * @param  {} val\n * @return {module:zrender/core/LRU~Entry}\n */\n\nlinkedListProto.insert = function (val) {\n  var entry = new Entry(val);\n  this.insertEntry(entry);\n  return entry;\n};\n/**\n * Insert an entry at the tail\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.insertEntry = function (entry) {\n  if (!this.head) {\n    this.head = this.tail = entry;\n  } else {\n    this.tail.next = entry;\n    entry.prev = this.tail;\n    entry.next = null;\n    this.tail = entry;\n  }\n\n  this._len++;\n};\n/**\n * Remove entry.\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.remove = function (entry) {\n  var prev = entry.prev;\n  var next = entry.next;\n\n  if (prev) {\n    prev.next = next;\n  } else {\n    // Is head\n    this.head = next;\n  }\n\n  if (next) {\n    next.prev = prev;\n  } else {\n    // Is tail\n    this.tail = prev;\n  }\n\n  entry.next = entry.prev = null;\n  this._len--;\n};\n/**\n * @return {number}\n */\n\n\nlinkedListProto.len = function () {\n  return this._len;\n};\n/**\n * Clear list\n */\n\n\nlinkedListProto.clear = function () {\n  this.head = this.tail = null;\n  this._len = 0;\n};\n/**\n * @constructor\n * @param {} val\n */\n\n\nvar Entry = function (val) {\n  /**\n   * @type {}\n   */\n  this.value = val;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.next;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.prev;\n};\n/**\n * LRU Cache\n * @constructor\n * @alias module:zrender/core/LRU\n */\n\n\nvar LRU = function (maxSize) {\n  this._list = new LinkedList();\n  this._map = {};\n  this._maxSize = maxSize || 10;\n  this._lastRemovedEntry = null;\n};\n\nvar LRUProto = LRU.prototype;\n/**\n * @param  {string} key\n * @param  {} value\n * @return {} Removed value\n */\n\nLRUProto.put = function (key, value) {\n  var list = this._list;\n  var map = this._map;\n  var removed = null;\n\n  if (map[key] == null) {\n    var len = list.len(); // Reuse last removed entry\n\n    var entry = this._lastRemovedEntry;\n\n    if (len >= this._maxSize && len > 0) {\n      // Remove the least recently used\n      var leastUsedEntry = list.head;\n      list.remove(leastUsedEntry);\n      delete map[leastUsedEntry.key];\n      removed = leastUsedEntry.value;\n      this._lastRemovedEntry = leastUsedEntry;\n    }\n\n    if (entry) {\n      entry.value = value;\n    } else {\n      entry = new Entry(value);\n    }\n\n    entry.key = key;\n    list.insertEntry(entry);\n    map[key] = entry;\n  }\n\n  return removed;\n};\n/**\n * @param  {string} key\n * @return {}\n */\n\n\nLRUProto.get = function (key) {\n  var entry = this._map[key];\n  var list = this._list;\n\n  if (entry != null) {\n    // Put the latest used entry in the tail\n    if (entry !== list.tail) {\n      list.remove(entry);\n      list.insertEntry(entry);\n    }\n\n    return entry.value;\n  }\n};\n/**\n * Clear the cache\n */\n\n\nLRUProto.clear = function () {\n  this._list.clear();\n\n  this._map = {};\n};\n\nvar _default = LRU;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/LRU.js\n// module id = 1045\n// module chunks = 0 1 2","var STYLE_COMMON_PROPS = [['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'], ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]]; // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n// var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\nvar Style = function (opts, host) {\n  this.extendFrom(opts, false);\n  this.host = host;\n};\n\nfunction createLinearGradient(ctx, obj, rect) {\n  var x = obj.x == null ? 0 : obj.x;\n  var x2 = obj.x2 == null ? 1 : obj.x2;\n  var y = obj.y == null ? 0 : obj.y;\n  var y2 = obj.y2 == null ? 0 : obj.y2;\n\n  if (!obj.global) {\n    x = x * rect.width + rect.x;\n    x2 = x2 * rect.width + rect.x;\n    y = y * rect.height + rect.y;\n    y2 = y2 * rect.height + rect.y;\n  }\n\n  var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n  return canvasGradient;\n}\n\nfunction createRadialGradient(ctx, obj, rect) {\n  var width = rect.width;\n  var height = rect.height;\n  var min = Math.min(width, height);\n  var x = obj.x == null ? 0.5 : obj.x;\n  var y = obj.y == null ? 0.5 : obj.y;\n  var r = obj.r == null ? 0.5 : obj.r;\n\n  if (!obj.global) {\n    x = x * width + rect.x;\n    y = y * height + rect.y;\n    r = r * min;\n  }\n\n  var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n  return canvasGradient;\n}\n\nStyle.prototype = {\n  constructor: Style,\n\n  /**\n   * @type {module:zrender/graphic/Displayable}\n   */\n  host: null,\n\n  /**\n   * @type {string}\n   */\n  fill: '#000',\n\n  /**\n   * @type {string}\n   */\n  stroke: null,\n\n  /**\n   * @type {number}\n   */\n  opacity: 1,\n\n  /**\n   * @type {Array.<number>}\n   */\n  lineDash: null,\n\n  /**\n   * @type {number}\n   */\n  lineDashOffset: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetY: 0,\n\n  /**\n   * @type {number}\n   */\n  lineWidth: 1,\n\n  /**\n   * If stroke ignore scale\n   * @type {Boolean}\n   */\n  strokeNoScale: false,\n  // Bounding rect text configuration\n  // Not affected by element transform\n\n  /**\n   * @type {string}\n   */\n  text: null,\n\n  /**\n   * If `fontSize` or `fontFamily` exists, `font` will be reset by\n   * `fontSize`, `fontStyle`, `fontWeight`, `fontFamily`.\n   * So do not visit it directly in upper application (like echarts),\n   * but use `contain/text#makeFont` instead.\n   * @type {string}\n   */\n  font: null,\n\n  /**\n   * The same as font. Use font please.\n   * @deprecated\n   * @type {string}\n   */\n  textFont: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontStyle: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontWeight: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * Should be 12 but not '12px'.\n   * @type {number}\n   */\n  fontSize: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontFamily: null,\n\n  /**\n   * Reserved for special functinality, like 'hr'.\n   * @type {string}\n   */\n  textTag: null,\n\n  /**\n   * @type {string}\n   */\n  textFill: '#000',\n\n  /**\n   * @type {string}\n   */\n  textStroke: null,\n\n  /**\n   * @type {number}\n   */\n  textWidth: null,\n\n  /**\n   * Only for textBackground.\n   * @type {number}\n   */\n  textHeight: null,\n\n  /**\n   * textStroke may be set as some color as a default\n   * value in upper applicaion, where the default value\n   * of textStrokeWidth should be 0 to make sure that\n   * user can choose to do not use text stroke.\n   * @type {number}\n   */\n  textStrokeWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textLineHeight: null,\n\n  /**\n   * 'inside', 'left', 'right', 'top', 'bottom'\n   * [x, y]\n   * Based on x, y of rect.\n   * @type {string|Array.<number>}\n   * @default 'inside'\n   */\n  textPosition: 'inside',\n\n  /**\n   * If not specified, use the boundingRect of a `displayable`.\n   * @type {Object}\n   */\n  textRect: null,\n\n  /**\n   * [x, y]\n   * @type {Array.<number>}\n   */\n  textOffset: null,\n\n  /**\n   * @type {string}\n   */\n  textAlign: null,\n\n  /**\n   * @type {string}\n   */\n  textVerticalAlign: null,\n\n  /**\n   * @type {number}\n   */\n  textDistance: 5,\n\n  /**\n   * @type {string}\n   */\n  textShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetY: 0,\n\n  /**\n   * @type {string}\n   */\n  textBoxShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetY: 0,\n\n  /**\n   * Whether transform text.\n   * Only useful in Path and Image element\n   * @type {boolean}\n   */\n  transformText: false,\n\n  /**\n   * Text rotate around position of Path or Image\n   * Only useful in Path and Image element and transformText is false.\n   */\n  textRotation: 0,\n\n  /**\n   * Text origin of text rotation, like [10, 40].\n   * Based on x, y of rect.\n   * Useful in label rotation of circular symbol.\n   * By default, this origin is textPosition.\n   * Can be 'center'.\n   * @type {string|Array.<number>}\n   */\n  textOrigin: null,\n\n  /**\n   * @type {string}\n   */\n  textBackgroundColor: null,\n\n  /**\n   * @type {string}\n   */\n  textBorderColor: null,\n\n  /**\n   * @type {number}\n   */\n  textBorderWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textBorderRadius: 0,\n\n  /**\n   * Can be `2` or `[2, 4]` or `[2, 3, 4, 5]`\n   * @type {number|Array.<number>}\n   */\n  textPadding: null,\n\n  /**\n   * Text styles for rich text.\n   * @type {Object}\n   */\n  rich: null,\n\n  /**\n   * {outerWidth, outerHeight, ellipsis, placeholder}\n   * @type {Object}\n   */\n  truncate: null,\n\n  /**\n   * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n   * @type {string}\n   */\n  blend: null,\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  bind: function (ctx, el, prevEl) {\n    var style = this;\n    var prevStyle = prevEl && prevEl.style;\n    var firstDraw = !prevStyle;\n\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n      var prop = STYLE_COMMON_PROPS[i];\n      var styleName = prop[0];\n\n      if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n        // FIXME Invalid property value will cause style leak from previous element.\n        ctx[styleName] = style[styleName] || prop[1];\n      }\n    }\n\n    if (firstDraw || style.fill !== prevStyle.fill) {\n      ctx.fillStyle = style.fill;\n    }\n\n    if (firstDraw || style.stroke !== prevStyle.stroke) {\n      ctx.strokeStyle = style.stroke;\n    }\n\n    if (firstDraw || style.opacity !== prevStyle.opacity) {\n      ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n    }\n\n    if (firstDraw || style.blend !== prevStyle.blend) {\n      ctx.globalCompositeOperation = style.blend || 'source-over';\n    }\n\n    if (this.hasStroke()) {\n      var lineWidth = style.lineWidth;\n      ctx.lineWidth = lineWidth / (this.strokeNoScale && el && el.getLineScale ? el.getLineScale() : 1);\n    }\n  },\n  hasFill: function () {\n    var fill = this.fill;\n    return fill != null && fill !== 'none';\n  },\n  hasStroke: function () {\n    var stroke = this.stroke;\n    return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n  },\n\n  /**\n   * Extend from other style\n   * @param {zrender/graphic/Style} otherStyle\n   * @param {boolean} overwrite true: overwrirte any way.\n   *                            false: overwrite only when !target.hasOwnProperty\n   *                            others: overwrite when property is not null/undefined.\n   */\n  extendFrom: function (otherStyle, overwrite) {\n    if (otherStyle) {\n      for (var name in otherStyle) {\n        if (otherStyle.hasOwnProperty(name) && (overwrite === true || (overwrite === false ? !this.hasOwnProperty(name) : otherStyle[name] != null))) {\n          this[name] = otherStyle[name];\n        }\n      }\n    }\n  },\n\n  /**\n   * Batch setting style with a given object\n   * @param {Object|string} obj\n   * @param {*} [obj]\n   */\n  set: function (obj, value) {\n    if (typeof obj === 'string') {\n      this[obj] = value;\n    } else {\n      this.extendFrom(obj, true);\n    }\n  },\n\n  /**\n   * Clone\n   * @return {zrender/graphic/Style} [description]\n   */\n  clone: function () {\n    var newStyle = new this.constructor();\n    newStyle.extendFrom(this, true);\n    return newStyle;\n  },\n  getGradient: function (ctx, obj, rect) {\n    var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n    var canvasGradient = method(ctx, obj, rect);\n    var colorStops = obj.colorStops;\n\n    for (var i = 0; i < colorStops.length; i++) {\n      canvasGradient.addColorStop(colorStops[i].offset, colorStops[i].color);\n    }\n\n    return canvasGradient;\n  }\n};\nvar styleProto = Style.prototype;\n\nfor (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n  var prop = STYLE_COMMON_PROPS[i];\n\n  if (!(prop[0] in styleProto)) {\n    styleProto[prop[0]] = prop[1];\n  }\n} // Provide for others\n\n\nStyle.getGradient = styleProto.getGradient;\nvar _default = Style;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/Style.js\n// module id = 1046\n// module chunks = 0 1 2","var Pattern = function (image, repeat) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {image: ...}`, where this constructor will not be called.\n  this.image = image;\n  this.repeat = repeat; // Can be cloned\n\n  this.type = 'pattern';\n};\n\nPattern.prototype.getCanvasPattern = function (ctx) {\n  return ctx.createPattern(this.image, this.repeat || 'repeat');\n};\n\nvar _default = Pattern;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/Pattern.js\n// module id = 1047\n// module chunks = 0 1 2","var _default = typeof window !== 'undefined' && (window.requestAnimationFrame && window.requestAnimationFrame.bind(window) || // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\nwindow.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window) || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame) || function (func) {\n  setTimeout(func, 16);\n};\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/animation/requestAnimationFrame.js\n// module id = 1048\n// module chunks = 0 1 2","function buildPath(ctx, shape) {\n  var x = shape.x;\n  var y = shape.y;\n  var width = shape.width;\n  var height = shape.height;\n  var r = shape.r;\n  var r1;\n  var r2;\n  var r3;\n  var r4; // Convert width and height to positive for better borderRadius\n\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n\n  if (typeof r === 'number') {\n    r1 = r2 = r3 = r4 = r;\n  } else if (r instanceof Array) {\n    if (r.length === 1) {\n      r1 = r2 = r3 = r4 = r[0];\n    } else if (r.length === 2) {\n      r1 = r3 = r[0];\n      r2 = r4 = r[1];\n    } else if (r.length === 3) {\n      r1 = r[0];\n      r2 = r4 = r[1];\n      r3 = r[2];\n    } else {\n      r1 = r[0];\n      r2 = r[1];\n      r3 = r[2];\n      r4 = r[3];\n    }\n  } else {\n    r1 = r2 = r3 = r4 = 0;\n  }\n\n  var total;\n\n  if (r1 + r2 > width) {\n    total = r1 + r2;\n    r1 *= width / total;\n    r2 *= width / total;\n  }\n\n  if (r3 + r4 > width) {\n    total = r3 + r4;\n    r3 *= width / total;\n    r4 *= width / total;\n  }\n\n  if (r2 + r3 > height) {\n    total = r2 + r3;\n    r2 *= height / total;\n    r3 *= height / total;\n  }\n\n  if (r1 + r4 > height) {\n    total = r1 + r4;\n    r1 *= height / total;\n    r4 *= height / total;\n  }\n\n  ctx.moveTo(x + r1, y);\n  ctx.lineTo(x + width - r2, y);\n  r2 !== 0 && ctx.quadraticCurveTo(x + width, y, x + width, y + r2);\n  ctx.lineTo(x + width, y + height - r3);\n  r3 !== 0 && ctx.quadraticCurveTo(x + width, y + height, x + width - r3, y + height);\n  ctx.lineTo(x + r4, y + height);\n  r4 !== 0 && ctx.quadraticCurveTo(x, y + height, x, y + height - r4);\n  ctx.lineTo(x, y + r1);\n  r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n}\n\nexports.buildPath = buildPath;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/helper/roundRect.js\n// module id = 1049\n// module chunks = 0 1 2","var PI2 = Math.PI * 2;\n\nfunction normalizeRadian(angle) {\n  angle %= PI2;\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle;\n}\n\nexports.normalizeRadian = normalizeRadian;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/contain/util.js\n// module id = 1050\n// module chunks = 0 1 2","function windingLine(x0, y0, x1, y1, x, y) {\n  if (y > y0 && y > y1 || y < y0 && y < y1) {\n    return 0;\n  } // Ignore horizontal line\n\n\n  if (y1 === y0) {\n    return 0;\n  }\n\n  var dir = y1 < y0 ? 1 : -1;\n  var t = (y - y0) / (y1 - y0); // Avoid winding error when intersection point is the connect point of two line of polygon\n\n  if (t === 1 || t === 0) {\n    dir = y1 < y0 ? 0.5 : -0.5;\n  }\n\n  var x_ = t * (x1 - x0) + x0;\n  return x_ > x ? dir : 0;\n}\n\nmodule.exports = windingLine;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/contain/windingLine.js\n// module id = 1051\n// module chunks = 0 1 2","var smoothSpline = require(\"./smoothSpline\");\n\nvar smoothBezier = require(\"./smoothBezier\");\n\nfunction buildPath(ctx, shape, closePath) {\n  var points = shape.points;\n  var smooth = shape.smooth;\n\n  if (points && points.length >= 2) {\n    if (smooth && smooth !== 'spline') {\n      var controlPoints = smoothBezier(points, smooth, closePath, shape.smoothConstraint);\n      ctx.moveTo(points[0][0], points[0][1]);\n      var len = points.length;\n\n      for (var i = 0; i < (closePath ? len : len - 1); i++) {\n        var cp1 = controlPoints[i * 2];\n        var cp2 = controlPoints[i * 2 + 1];\n        var p = points[(i + 1) % len];\n        ctx.bezierCurveTo(cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]);\n      }\n    } else {\n      if (smooth === 'spline') {\n        points = smoothSpline(points, closePath);\n      }\n\n      ctx.moveTo(points[0][0], points[0][1]);\n\n      for (var i = 1, l = points.length; i < l; i++) {\n        ctx.lineTo(points[i][0], points[i][1]);\n      }\n    }\n\n    closePath && ctx.closePath();\n  }\n}\n\nexports.buildPath = buildPath;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/helper/poly.js\n// module id = 1052\n// module chunks = 0 1 2","var _clazz = require(\"../../util/clazz\");\n\nvar set = _clazz.set;\nvar get = _clazz.get;\nvar _default = {\n  clearColorPalette: function () {\n    set(this, 'colorIdx', 0);\n    set(this, 'colorNameMap', {});\n  },\n  getColorFromPalette: function (name, scope) {\n    scope = scope || this;\n    var colorIdx = get(scope, 'colorIdx') || 0;\n    var colorNameMap = get(scope, 'colorNameMap') || set(scope, 'colorNameMap', {}); // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n\n    if (colorNameMap.hasOwnProperty(name)) {\n      return colorNameMap[name];\n    }\n\n    var colorPalette = this.get('color', true) || [];\n\n    if (!colorPalette.length) {\n      return;\n    }\n\n    var color = colorPalette[colorIdx];\n\n    if (name) {\n      colorNameMap[name] = color;\n    }\n\n    set(scope, 'colorIdx', (colorIdx + 1) % colorPalette.length);\n    return color;\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/mixin/colorPalette.js\n// module id = 1053\n// module chunks = 0 1 2","var numberUtil = require(\"../util/number\");\n\n/**\n * For testable.\n */\nvar roundNumber = numberUtil.round;\n/**\n * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n *                                Should be extent[0] < extent[1].\n * @param {number} splitNumber splitNumber should be >= 1.\n * @param {number} [minInterval]\n * @param {number} [maxInterval]\n * @return {Object} {interval, intervalPrecision, niceTickExtent}\n */\n\nfunction intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval) {\n  var result = {};\n  var span = extent[1] - extent[0];\n  var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n\n  if (minInterval != null && interval < minInterval) {\n    interval = result.interval = minInterval;\n  }\n\n  if (maxInterval != null && interval > maxInterval) {\n    interval = result.interval = maxInterval;\n  } // Tow more digital for tick.\n\n\n  var precision = result.intervalPrecision = getIntervalPrecision(interval); // Niced extent inside original extent\n\n  var niceTickExtent = result.niceTickExtent = [roundNumber(Math.ceil(extent[0] / interval) * interval, precision), roundNumber(Math.floor(extent[1] / interval) * interval, precision)];\n  fixExtent(niceTickExtent, extent);\n  return result;\n}\n/**\n * @param {number} interval\n * @return {number} interval precision\n */\n\n\nfunction getIntervalPrecision(interval) {\n  // Tow more digital for tick.\n  return numberUtil.getPrecisionSafe(interval) + 2;\n}\n\nfunction clamp(niceTickExtent, idx, extent) {\n  niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n} // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n\n\nfunction fixExtent(niceTickExtent, extent) {\n  !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n  !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n  clamp(niceTickExtent, 0, extent);\n  clamp(niceTickExtent, 1, extent);\n\n  if (niceTickExtent[0] > niceTickExtent[1]) {\n    niceTickExtent[0] = niceTickExtent[1];\n  }\n}\n\nfunction intervalScaleGetTicks(interval, extent, niceTickExtent, intervalPrecision) {\n  var ticks = []; // If interval is 0, return [];\n\n  if (!interval) {\n    return ticks;\n  } // Consider this case: using dataZoom toolbox, zoom and zoom.\n\n\n  var safeLimit = 10000;\n\n  if (extent[0] < niceTickExtent[0]) {\n    ticks.push(extent[0]);\n  }\n\n  var tick = niceTickExtent[0];\n\n  while (tick <= niceTickExtent[1]) {\n    ticks.push(tick); // Avoid rounding error\n\n    tick = roundNumber(tick + interval, intervalPrecision);\n\n    if (tick === ticks[ticks.length - 1]) {\n      // Consider out of safe float point, e.g.,\n      // -3711126.9907707 + 2e-10 === -3711126.9907707\n      break;\n    }\n\n    if (ticks.length > safeLimit) {\n      return [];\n    }\n  } // Consider this case: the last item of ticks is smaller\n  // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n\n\n  if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n    ticks.push(extent[1]);\n  }\n\n  return ticks;\n}\n\nexports.intervalScaleNiceTicks = intervalScaleNiceTicks;\nexports.getIntervalPrecision = getIntervalPrecision;\nexports.fixExtent = fixExtent;\nexports.intervalScaleGetTicks = intervalScaleGetTicks;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/scale/helper.js\n// module id = 1054\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\n/**\n * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} {point: [x, y], el: ...} point Will not be null.\n */\nfunction _default(finder, ecModel) {\n  var point = [];\n  var seriesIndex = finder.seriesIndex;\n  var seriesModel;\n\n  if (seriesIndex == null || !(seriesModel = ecModel.getSeriesByIndex(seriesIndex))) {\n    return {\n      point: []\n    };\n  }\n\n  var data = seriesModel.getData();\n  var dataIndex = modelUtil.queryDataIndex(data, finder);\n\n  if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n    return {\n      point: []\n    };\n  }\n\n  var el = data.getItemGraphicEl(dataIndex);\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (seriesModel.getTooltipPosition) {\n    point = seriesModel.getTooltipPosition(dataIndex) || [];\n  } else if (coordSys && coordSys.dataToPoint) {\n    point = coordSys.dataToPoint(data.getValues(zrUtil.map(coordSys.dimensions, function (dim) {\n      return seriesModel.coordDimToDataDim(dim)[0];\n    }), dataIndex, true)) || [];\n  } else if (el) {\n    // Use graphic bounding rect\n    var rect = el.getBoundingRect().clone();\n    rect.applyTransform(el.transform);\n    point = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n\n  return {\n    point: point,\n    el: el\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/findPointFromSeries.js\n// module id = 1055\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar get = modelUtil.makeGetter();\nvar each = zrUtil.each;\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n * @param {Function} handler\n *      param: {string} currTrigger\n *      param: {Array.<number>} point\n */\n\nfunction register(key, api, handler) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  get(zr).records || (get(zr).records = {});\n  initGlobalListeners(zr, api);\n  var record = get(zr).records[key] || (get(zr).records[key] = {});\n  record.handler = handler;\n}\n\nfunction initGlobalListeners(zr, api) {\n  if (get(zr).initialized) {\n    return;\n  }\n\n  get(zr).initialized = true;\n  useHandler('click', zrUtil.curry(doEnter, 'click'));\n  useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove')); // useHandler('mouseout', onLeave);\n\n  useHandler('globalout', onLeave);\n\n  function useHandler(eventType, cb) {\n    zr.on(eventType, function (e) {\n      var dis = makeDispatchAction(api);\n      each(get(zr).records, function (record) {\n        record && cb(record, e, dis.dispatchAction);\n      });\n      dispatchTooltipFinally(dis.pendings, api);\n    });\n  }\n}\n\nfunction dispatchTooltipFinally(pendings, api) {\n  var showLen = pendings.showTip.length;\n  var hideLen = pendings.hideTip.length;\n  var actuallyPayload;\n\n  if (showLen) {\n    actuallyPayload = pendings.showTip[showLen - 1];\n  } else if (hideLen) {\n    actuallyPayload = pendings.hideTip[hideLen - 1];\n  }\n\n  if (actuallyPayload) {\n    actuallyPayload.dispatchAction = null;\n    api.dispatchAction(actuallyPayload);\n  }\n}\n\nfunction onLeave(record, e, dispatchAction) {\n  record.handler('leave', null, dispatchAction);\n}\n\nfunction doEnter(currTrigger, record, e, dispatchAction) {\n  record.handler(currTrigger, e, dispatchAction);\n}\n\nfunction makeDispatchAction(api) {\n  var pendings = {\n    showTip: [],\n    hideTip: []\n  }; // FIXME\n  // better approach?\n  // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n  // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n  // So we have to add \"final stage\" to merge those dispatched actions.\n\n  var dispatchAction = function (payload) {\n    var pendingList = pendings[payload.type];\n\n    if (pendingList) {\n      pendingList.push(payload);\n    } else {\n      payload.dispatchAction = dispatchAction;\n      api.dispatchAction(payload);\n    }\n  };\n\n  return {\n    dispatchAction: dispatchAction,\n    pendings: pendings\n  };\n}\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction unregister(key, api) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  var record = (get(zr).records || {})[key];\n\n  if (record) {\n    get(zr).records[key] = null;\n  }\n}\n\nexports.register = register;\nexports.unregister = unregister;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/globalListener.js\n// module id = 1056\n// module chunks = 0 1 2","var _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\nvar layoutBox = _layout.box;\nvar positionElement = _layout.positionElement;\n\nvar formatUtil = require(\"../../util/format\");\n\nvar graphic = require(\"../../util/graphic\");\n\n/**\n * Layout list like component.\n * It will box layout each items in group of component and then position the whole group in the viewport\n * @param {module:zrender/group/Group} group\n * @param {module:echarts/model/Component} componentModel\n * @param {module:echarts/ExtensionAPI}\n */\nfunction layout(group, componentModel, api) {\n  var boxLayoutParams = componentModel.getBoxLayoutParams();\n  var padding = componentModel.get('padding');\n  var viewportSize = {\n    width: api.getWidth(),\n    height: api.getHeight()\n  };\n  var rect = getLayoutRect(boxLayoutParams, viewportSize, padding);\n  layoutBox(componentModel.get('orient'), group, componentModel.get('itemGap'), rect.width, rect.height);\n  positionElement(group, boxLayoutParams, viewportSize, padding);\n}\n\nfunction makeBackground(rect, componentModel) {\n  var padding = formatUtil.normalizeCssArray(componentModel.get('padding'));\n  var style = componentModel.getItemStyle(['color', 'opacity']);\n  style.fill = componentModel.get('backgroundColor');\n  var rect = new graphic.Rect({\n    shape: {\n      x: rect.x - padding[3],\n      y: rect.y - padding[0],\n      width: rect.width + padding[1] + padding[3],\n      height: rect.height + padding[0] + padding[2],\n      r: componentModel.get('borderRadius')\n    },\n    style: style,\n    silent: true,\n    z2: -1\n  }); // FIXME\n  // `subPixelOptimizeRect` may bring some gap between edge of viewpart\n  // and background rect when setting like `left: 0`, `top: 0`.\n  // graphic.subPixelOptimizeRect(rect);\n\n  return rect;\n}\n\nexports.layout = layout;\nexports.makeBackground = makeBackground;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/listComponent.js\n// module id = 1057\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar each = zrUtil.each;\nvar ATTR = '\\0_ec_hist_store';\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} newSnapshot {dataZoomId, batch: [payloadInfo, ...]}\n */\n\nfunction push(ecModel, newSnapshot) {\n  var store = giveStore(ecModel); // If previous dataZoom can not be found,\n  // complete an range with current range.\n\n  each(newSnapshot, function (batchItem, dataZoomId) {\n    var i = store.length - 1;\n\n    for (; i >= 0; i--) {\n      var snapshot = store[i];\n\n      if (snapshot[dataZoomId]) {\n        break;\n      }\n    }\n\n    if (i < 0) {\n      // No origin range set, create one by current range.\n      var dataZoomModel = ecModel.queryComponents({\n        mainType: 'dataZoom',\n        subType: 'select',\n        id: dataZoomId\n      })[0];\n\n      if (dataZoomModel) {\n        var percentRange = dataZoomModel.getPercentRange();\n        store[0][dataZoomId] = {\n          dataZoomId: dataZoomId,\n          start: percentRange[0],\n          end: percentRange[1]\n        };\n      }\n    }\n  });\n  store.push(newSnapshot);\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} snapshot\n */\n\n\nfunction pop(ecModel) {\n  var store = giveStore(ecModel);\n  var head = store[store.length - 1];\n  store.length > 1 && store.pop(); // Find top for all dataZoom.\n\n  var snapshot = {};\n  each(head, function (batchItem, dataZoomId) {\n    for (var i = store.length - 1; i >= 0; i--) {\n      var batchItem = store[i][dataZoomId];\n\n      if (batchItem) {\n        snapshot[dataZoomId] = batchItem;\n        break;\n      }\n    }\n  });\n  return snapshot;\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n */\n\n\nfunction clear(ecModel) {\n  ecModel[ATTR] = null;\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n * @return {number} records. always >= 1.\n */\n\n\nfunction count(ecModel) {\n  return giveStore(ecModel).length;\n}\n/**\n * [{key: dataZoomId, value: {dataZoomId, range}}, ...]\n * History length of each dataZoom may be different.\n * this._history[0] is used to store origin range.\n * @type {Array.<Object>}\n */\n\n\nfunction giveStore(ecModel) {\n  var store = ecModel[ATTR];\n\n  if (!store) {\n    store = ecModel[ATTR] = [{}];\n  }\n\n  return store;\n}\n\nexports.push = push;\nexports.pop = pop;\nexports.clear = clear;\nexports.count = count;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/history.js\n// module id = 1058\n// module chunks = 0 1 2","var env = require(\"../../core/env\");\n\n// Fix weird bug in some version of IE11 (like 11.0.9600.178**),\n// where exception \"unexpected call to method or property access\"\n// might be thrown when calling ctx.fill or ctx.stroke after a path\n// whose area size is zero is drawn and ctx.clip() is called and\n// shadowBlur is set. See #4572, #3112, #5777.\n// (e.g.,\n//  ctx.moveTo(10, 10);\n//  ctx.lineTo(20, 10);\n//  ctx.closePath();\n//  ctx.clip();\n//  ctx.shadowBlur = 10;\n//  ...\n//  ctx.fill();\n// )\nvar shadowTemp = [['shadowBlur', 0], ['shadowColor', '#000'], ['shadowOffsetX', 0], ['shadowOffsetY', 0]];\n\nfunction _default(orignalBrush) {\n  // version string can be: '11.0'\n  return env.browser.ie && env.browser.version >= 11 ? function () {\n    var clipPaths = this.__clipPaths;\n    var style = this.style;\n    var modified;\n\n    if (clipPaths) {\n      for (var i = 0; i < clipPaths.length; i++) {\n        var clipPath = clipPaths[i];\n        var shape = clipPath && clipPath.shape;\n        var type = clipPath && clipPath.type;\n\n        if (shape && (type === 'sector' && shape.startAngle === shape.endAngle || type === 'rect' && (!shape.width || !shape.height))) {\n          for (var j = 0; j < shadowTemp.length; j++) {\n            // It is save to put shadowTemp static, because shadowTemp\n            // will be all modified each item brush called.\n            shadowTemp[j][2] = style[shadowTemp[j][0]];\n            style[shadowTemp[j][0]] = shadowTemp[j][1];\n          }\n\n          modified = true;\n          break;\n        }\n      }\n    }\n\n    orignalBrush.apply(this, arguments);\n\n    if (modified) {\n      for (var j = 0; j < shadowTemp.length; j++) {\n        style[shadowTemp[j][0]] = shadowTemp[j][2];\n      }\n    }\n  } : orignalBrush;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/helper/fixClipWithShadow.js\n// module id = 1060\n// module chunks = 0 1 2","var graphic = require(\"../../util/graphic\");\n\nvar BaseAxisPointer = require(\"./BaseAxisPointer\");\n\nvar viewHelper = require(\"./viewHelper\");\n\nvar cartesianAxisHelper = require(\"../axis/cartesianAxisHelper\");\n\nvar AxisView = require(\"../axis/AxisView\");\n\nvar CartesianAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisPointerType = axisPointerModel.get('type');\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  },\n\n  /**\n   * @override\n   */\n  getHandleTransform: function (value, axisModel, axisPointerModel) {\n    var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n      labelInside: false\n    });\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n    return {\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  },\n\n  /**\n   * @override\n   */\n  updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisExtent = axis.getGlobalExtent(true);\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var dimIndex = axis.dim === 'x' ? 0 : 1;\n    var currPosition = transform.position;\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex]; // Make tooltip do not overlap axisPointer and in the middle of the grid.\n\n    var tooltipOptions = [{\n      verticalAlign: 'middle'\n    }, {\n      align: 'center'\n    }];\n    return {\n      position: currPosition,\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: tooltipOptions[dimIndex]\n    };\n  }\n});\n\nfunction getCartesian(grid, axis) {\n  var opt = {};\n  opt[axis.dim + 'AxisIndex'] = axis.index;\n  return grid.getCartesian(opt);\n}\n\nvar pointerShapeBuilder = {\n  line: function (axis, pixelValue, otherExtent, elStyle) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getAxisDimIndex(axis));\n    graphic.subPixelOptimizeLine({\n      shape: targetShape,\n      style: elStyle\n    });\n    return {\n      type: 'Line',\n      shape: targetShape\n    };\n  },\n  shadow: function (axis, pixelValue, otherExtent, elStyle) {\n    var bandWidth = axis.getBandWidth();\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getAxisDimIndex(axis))\n    };\n  }\n};\n\nfunction getAxisDimIndex(axis) {\n  return axis.dim === 'x' ? 0 : 1;\n}\n\nAxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\nvar _default = CartesianAxisPointer;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/CartesianAxisPointer.js\n// module id = 1061\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar clazzUtil = require(\"../../util/clazz\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar axisPointerModelHelper = require(\"./modelHelper\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar throttleUtil = require(\"../../util/throttle\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar get = modelUtil.makeGetter();\nvar clone = zrUtil.clone;\nvar bind = zrUtil.bind;\n/**\n * Base axis pointer class in 2D.\n * Implemenents {module:echarts/component/axis/IAxisPointer}.\n */\n\nfunction BaseAxisPointer() {}\n\nBaseAxisPointer.prototype = {\n  /**\n   * @private\n   */\n  _group: null,\n\n  /**\n   * @private\n   */\n  _lastGraphicKey: null,\n\n  /**\n   * @private\n   */\n  _handle: null,\n\n  /**\n   * @private\n   */\n  _dragging: false,\n\n  /**\n   * @private\n   */\n  _lastValue: null,\n\n  /**\n   * @private\n   */\n  _lastStatus: null,\n\n  /**\n   * @private\n   */\n  _payloadInfo: null,\n\n  /**\n   * In px, arbitrary value. Do not set too small,\n   * no animation is ok for most cases.\n   * @protected\n   */\n  animationThreshold: 15,\n\n  /**\n   * @implement\n   */\n  render: function (axisModel, axisPointerModel, api, forceRender) {\n    var value = axisPointerModel.get('value');\n    var status = axisPointerModel.get('status'); // Bind them to `this`, not in closure, otherwise they will not\n    // be replaced when user calling setOption in not merge mode.\n\n    this._axisModel = axisModel;\n    this._axisPointerModel = axisPointerModel;\n    this._api = api; // Optimize: `render` will be called repeatly during mouse move.\n    // So it is power consuming if performing `render` each time,\n    // especially on mobile device.\n\n    if (!forceRender && this._lastValue === value && this._lastStatus === status) {\n      return;\n    }\n\n    this._lastValue = value;\n    this._lastStatus = status;\n    var group = this._group;\n    var handle = this._handle;\n\n    if (!status || status === 'hide') {\n      // Do not clear here, for animation better.\n      group && group.hide();\n      handle && handle.hide();\n      return;\n    }\n\n    group && group.show();\n    handle && handle.show(); // Otherwise status is 'show'\n\n    var elOption = {};\n    this.makeElOption(elOption, value, axisModel, axisPointerModel, api); // Enable change axis pointer type.\n\n    var graphicKey = elOption.graphicKey;\n\n    if (graphicKey !== this._lastGraphicKey) {\n      this.clear(api);\n    }\n\n    this._lastGraphicKey = graphicKey;\n    var moveAnimation = this._moveAnimation = this.determineAnimation(axisModel, axisPointerModel);\n\n    if (!group) {\n      group = this._group = new graphic.Group();\n      this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n      this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n      api.getZr().add(group);\n    } else {\n      var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n      this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n      this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n    }\n\n    updateMandatoryProps(group, axisPointerModel, true);\n\n    this._renderHandle(value);\n  },\n\n  /**\n   * @implement\n   */\n  remove: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @implement\n   */\n  dispose: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @protected\n   */\n  determineAnimation: function (axisModel, axisPointerModel) {\n    var animation = axisPointerModel.get('animation');\n    var axis = axisModel.axis;\n    var isCategoryAxis = axis.type === 'category';\n    var useSnap = axisPointerModel.get('snap'); // Value axis without snap always do not snap.\n\n    if (!useSnap && !isCategoryAxis) {\n      return false;\n    }\n\n    if (animation === 'auto' || animation == null) {\n      var animationThreshold = this.animationThreshold;\n\n      if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n        return true;\n      } // It is important to auto animation when snap used. Consider if there is\n      // a dataZoom, animation will be disabled when too many points exist, while\n      // it will be enabled for better visual effect when little points exist.\n\n\n      if (useSnap) {\n        var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n        var axisExtent = axis.getExtent(); // Approximate band width\n\n        return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n      }\n\n      return false;\n    }\n\n    return animation === true;\n  },\n\n  /**\n   * add {pointer, label, graphicKey} to elOption\n   * @protected\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {// Shoule be implemenented by sub-class.\n  },\n\n  /**\n   * @protected\n   */\n  createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n    var pointerOption = elOption.pointer;\n\n    if (pointerOption) {\n      var pointerEl = get(group).pointerEl = new graphic[pointerOption.type](clone(elOption.pointer));\n      group.add(pointerEl);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n    if (elOption.label) {\n      var labelEl = get(group).labelEl = new graphic.Rect(clone(elOption.label));\n      group.add(labelEl);\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updatePointerEl: function (group, elOption, updateProps) {\n    var pointerEl = get(group).pointerEl;\n\n    if (pointerEl) {\n      pointerEl.setStyle(elOption.pointer.style);\n      updateProps(pointerEl, {\n        shape: elOption.pointer.shape\n      });\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n    var labelEl = get(group).labelEl;\n\n    if (labelEl) {\n      labelEl.setStyle(elOption.label.style);\n      updateProps(labelEl, {\n        // Consider text length change in vertical axis, animation should\n        // be used on shape, otherwise the effect will be weird.\n        shape: elOption.label.shape,\n        position: elOption.label.position\n      });\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderHandle: function (value) {\n    if (this._dragging || !this.updateHandleTransform) {\n      return;\n    }\n\n    var axisPointerModel = this._axisPointerModel;\n\n    var zr = this._api.getZr();\n\n    var handle = this._handle;\n    var handleModel = axisPointerModel.getModel('handle');\n    var status = axisPointerModel.get('status');\n\n    if (!handleModel.get('show') || !status || status === 'hide') {\n      handle && zr.remove(handle);\n      this._handle = null;\n      return;\n    }\n\n    var isInit;\n\n    if (!this._handle) {\n      isInit = true;\n      handle = this._handle = graphic.createIcon(handleModel.get('icon'), {\n        cursor: 'move',\n        draggable: true,\n        onmousemove: function (e) {\n          // Fot mobile devicem, prevent screen slider on the button.\n          eventTool.stop(e.event);\n        },\n        onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n        drift: bind(this._onHandleDragMove, this),\n        ondragend: bind(this._onHandleDragEnd, this)\n      });\n      zr.add(handle);\n    }\n\n    updateMandatoryProps(handle, axisPointerModel, false); // update style\n\n    var includeStyles = ['color', 'borderColor', 'borderWidth', 'opacity', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'];\n    handle.setStyle(handleModel.getItemStyle(null, includeStyles)); // update position\n\n    var handleSize = handleModel.get('size');\n\n    if (!zrUtil.isArray(handleSize)) {\n      handleSize = [handleSize, handleSize];\n    }\n\n    handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n    throttleUtil.createOrUpdate(this, '_doDispatchAxisPointer', handleModel.get('throttle') || 0, 'fixRate');\n\n    this._moveHandleToValue(value, isInit);\n  },\n\n  /**\n   * @private\n   */\n  _moveHandleToValue: function (value, isInit) {\n    updateProps(this._axisPointerModel, !isInit && this._moveAnimation, this._handle, getHandleTransProps(this.getHandleTransform(value, this._axisModel, this._axisPointerModel)));\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragMove: function (dx, dy) {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    this._dragging = true; // Persistent for throttle.\n\n    var trans = this.updateHandleTransform(getHandleTransProps(handle), [dx, dy], this._axisModel, this._axisPointerModel);\n    this._payloadInfo = trans;\n    handle.stopAnimation();\n    handle.attr(getHandleTransProps(trans));\n    get(handle).lastProp = null;\n\n    this._doDispatchAxisPointer();\n  },\n\n  /**\n   * Throttled method.\n   * @private\n   */\n  _doDispatchAxisPointer: function () {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var payloadInfo = this._payloadInfo;\n    var axisModel = this._axisModel;\n\n    this._api.dispatchAction({\n      type: 'updateAxisPointer',\n      x: payloadInfo.cursorPoint[0],\n      y: payloadInfo.cursorPoint[1],\n      tooltipOption: payloadInfo.tooltipOption,\n      axesInfo: [{\n        axisDim: axisModel.axis.dim,\n        axisIndex: axisModel.componentIndex\n      }]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragEnd: function (moveAnimation) {\n    this._dragging = false;\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var value = this._axisPointerModel.get('value'); // Consider snap or categroy axis, handle may be not consistent with\n    // axisPointer. So move handle to align the exact value position when\n    // drag ended.\n\n\n    this._moveHandleToValue(value); // For the effect: tooltip will be shown when finger holding on handle\n    // button, and will be hidden after finger left handle button.\n\n\n    this._api.dispatchAction({\n      type: 'hideTip'\n    });\n  },\n\n  /**\n   * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {number} value\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0}\n   */\n  getHandleTransform: null,\n\n  /**\n   * * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {Object} transform {position, rotation}\n   * @param {Array.<number>} delta [dx, dy]\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n   */\n  updateHandleTransform: null,\n\n  /**\n   * @private\n   */\n  clear: function (api) {\n    this._lastValue = null;\n    this._lastStatus = null;\n    var zr = api.getZr();\n    var group = this._group;\n    var handle = this._handle;\n\n    if (zr && group) {\n      this._lastGraphicKey = null;\n      group && zr.remove(group);\n      handle && zr.remove(handle);\n      this._group = null;\n      this._handle = null;\n      this._payloadInfo = null;\n    }\n  },\n\n  /**\n   * @protected\n   */\n  doClear: function () {// Implemented by sub-class if necessary.\n  },\n\n  /**\n   * @protected\n   * @param {Array.<number>} xy\n   * @param {Array.<number>} wh\n   * @param {number} [xDimIndex=0] or 1\n   */\n  buildLabel: function (xy, wh, xDimIndex) {\n    xDimIndex = xDimIndex || 0;\n    return {\n      x: xy[xDimIndex],\n      y: xy[1 - xDimIndex],\n      width: wh[xDimIndex],\n      height: wh[1 - xDimIndex]\n    };\n  }\n};\nBaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\nfunction updateProps(animationModel, moveAnimation, el, props) {\n  // Animation optimize.\n  if (!propsEqual(get(el).lastProp, props)) {\n    get(el).lastProp = props;\n    moveAnimation ? graphic.updateProps(el, props, animationModel) : (el.stopAnimation(), el.attr(props));\n  }\n}\n\nfunction propsEqual(lastProps, newProps) {\n  if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n    var equals = true;\n    zrUtil.each(newProps, function (item, key) {\n      equals = equals && propsEqual(lastProps[key], item);\n    });\n    return !!equals;\n  } else {\n    return lastProps === newProps;\n  }\n}\n\nfunction updateLabelShowHide(labelEl, axisPointerModel) {\n  labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n}\n\nfunction getHandleTransProps(trans) {\n  return {\n    position: trans.position.slice(),\n    rotation: trans.rotation || 0\n  };\n}\n\nfunction updateMandatoryProps(group, axisPointerModel, silent) {\n  var z = axisPointerModel.get('z');\n  var zlevel = axisPointerModel.get('zlevel');\n  group && group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n      el.silent = silent;\n    }\n  });\n}\n\nclazzUtil.enableClassExtend(BaseAxisPointer);\nvar _default = BaseAxisPointer;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/BaseAxisPointer.js\n// module id = 1062\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * @param {Object} opt {labelInside}\n * @return {Object} {\n *  position, rotation, labelDirection, labelOffset,\n *  tickDirection, labelRotate, labelInterval, z2\n * }\n */\nfunction layout(gridModel, axisModel, opt) {\n  opt = opt || {};\n  var grid = gridModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var rawAxisPosition = axis.position;\n  var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n  var axisDim = axis.dim;\n  var rect = grid.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var idx = {\n    left: 0,\n    right: 1,\n    top: 0,\n    bottom: 1,\n    onZero: 2\n  };\n  var axisOffset = axisModel.get('offset') || 0;\n  var posBound = axisDim === 'x' ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset] : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\n\n  if (axis.onZero) {\n    var otherAxis = grid.getAxis(axisDim === 'x' ? 'y' : 'x', axis.onZeroAxisIndex);\n    var onZeroCoord = otherAxis.toGlobalCoord(otherAxis.dataToCoord(0));\n    posBound[idx['onZero']] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\n  } // Axis position\n\n\n  layout.position = [axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0], axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]]; // Axis rotation\n\n  layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1); // Tick and label direction, x y is axisDim\n\n  var dirMap = {\n    top: -1,\n    bottom: 1,\n    left: -1,\n    right: 1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n  layout.labelOffset = axis.onZero ? posBound[idx[rawAxisPosition]] - posBound[idx['onZero']] : 0;\n\n  if (axisModel.get('axisTick.inside')) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n    layout.labelDirection = -layout.labelDirection;\n  } // Special label rotation\n\n\n  var labelRotate = axisModel.get('axisLabel.rotate');\n  layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate; // label interval when auto mode.\n\n  layout.labelInterval = axis.getLabelInterval(); // Over splitLine and splitArea\n\n  layout.z2 = 1;\n  return layout;\n}\n\nexports.layout = layout;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axis/cartesianAxisHelper.js\n// module id = 1063\n// module chunks = 0 1 2","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\nvar LegendModel = echarts.extendComponentModel({\n  type: 'legend.plain',\n  dependencies: ['series'],\n  layoutMode: {\n    type: 'box',\n    // legend.width/height are maxWidth/maxHeight actually,\n    // whereas realy width/height is calculated by its content.\n    // (Setting {left: 10, right: 10} does not make sense).\n    // So consider the case:\n    // `setOption({legend: {left: 10});`\n    // then `setOption({legend: {right: 10});`\n    // The previous `left` should be cleared by setting `ignoreSize`.\n    ignoreSize: true\n  },\n  init: function (option, parentModel, ecModel) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    option.selected = option.selected || {};\n  },\n  mergeOption: function (option) {\n    LegendModel.superCall(this, 'mergeOption', option);\n  },\n  optionUpdated: function () {\n    this._updateData(this.ecModel);\n\n    var legendData = this._data; // If selectedMode is single, try to select one\n\n    if (legendData[0] && this.get('selectedMode') === 'single') {\n      var hasSelected = false; // If has any selected in option.selected\n\n      for (var i = 0; i < legendData.length; i++) {\n        var name = legendData[i].get('name');\n\n        if (this.isSelected(name)) {\n          // Force to unselect others\n          this.select(name);\n          hasSelected = true;\n          break;\n        }\n      } // Try select the first if selectedMode is single\n\n\n      !hasSelected && this.select(legendData[0].get('name'));\n    }\n  },\n  _updateData: function (ecModel) {\n    var legendData = zrUtil.map(this.get('data') || [], function (dataItem) {\n      // Can be string or number\n      if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n        dataItem = {\n          name: dataItem\n        };\n      }\n\n      return new Model(dataItem, this, this.ecModel);\n    }, this);\n    this._data = legendData;\n    var availableNames = zrUtil.map(ecModel.getSeries(), function (series) {\n      return series.name;\n    });\n    ecModel.eachSeries(function (seriesModel) {\n      if (seriesModel.legendDataProvider) {\n        var data = seriesModel.legendDataProvider();\n        availableNames = availableNames.concat(data.mapArray(data.getName));\n      }\n    });\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n\n    this._availableNames = availableNames;\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Model>}\n   */\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @param {string} name\n   */\n  select: function (name) {\n    var selected = this.option.selected;\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      var data = this._data;\n      zrUtil.each(data, function (dataItem) {\n        selected[dataItem.get('name')] = false;\n      });\n    }\n\n    selected[name] = true;\n  },\n\n  /**\n   * @param {string} name\n   */\n  unSelect: function (name) {\n    if (this.get('selectedMode') !== 'single') {\n      this.option.selected[name] = false;\n    }\n  },\n\n  /**\n   * @param {string} name\n   */\n  toggleSelected: function (name) {\n    var selected = this.option.selected; // Default is true\n\n    if (!selected.hasOwnProperty(name)) {\n      selected[name] = true;\n    }\n\n    this[selected[name] ? 'unSelect' : 'select'](name);\n  },\n\n  /**\n   * @param {string} name\n   */\n  isSelected: function (name) {\n    var selected = this.option.selected;\n    return !(selected.hasOwnProperty(name) && !selected[name]) && zrUtil.indexOf(this._availableNames, name) >= 0;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 4,\n    show: true,\n    // 布局方式，默认为水平布局，可选为：\n    // 'horizontal' | 'vertical'\n    orient: 'horizontal',\n    left: 'center',\n    // right: 'center',\n    top: 0,\n    // bottom: null,\n    // 水平对齐\n    // 'auto' | 'left' | 'right'\n    // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n    align: 'auto',\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 图例边框颜色\n    borderColor: '#ccc',\n    borderRadius: 0,\n    // 图例边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 图例内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 各个item之间的间隔，单位px，默认为10，\n    // 横向布局时为水平间隔，纵向布局时为纵向间隔\n    itemGap: 10,\n    // 图例图形宽度\n    itemWidth: 25,\n    // 图例图形高度\n    itemHeight: 14,\n    // 图例关闭时候的颜色\n    inactiveColor: '#ccc',\n    textStyle: {\n      // 图例文字颜色\n      color: '#333'\n    },\n    // formatter: '',\n    // 选择模式，默认开启图例开关\n    selectedMode: true,\n    // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n    // selected: null,\n    // 图例内容（详见legend.data，数组中每一项代表一个item\n    // data: [],\n    // Tooltip 相关配置\n    tooltip: {\n      show: false\n    }\n  }\n});\nvar _default = LegendModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/LegendModel.js\n// module id = 1064\n// module chunks = 0 1 2","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _listComponent = require(\"../helper/listComponent\");\n\nvar makeBackground = _listComponent.makeBackground;\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar Group = graphic.Group;\n\nvar _default = echarts.extendComponentView({\n  type: 'legend.plain',\n  newlineDisabled: false,\n\n  /**\n   * @override\n   */\n  init: function () {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this.group.add(this._contentGroup = new Group());\n    /**\n     * @private\n     * @type {module:zrender/Element}\n     */\n\n    this._backgroundEl;\n  },\n\n  /**\n   * @protected\n   */\n  getContentGroup: function () {\n    return this._contentGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (legendModel, ecModel, api) {\n    this.resetInner();\n\n    if (!legendModel.get('show', true)) {\n      return;\n    }\n\n    var itemAlign = legendModel.get('align');\n\n    if (!itemAlign || itemAlign === 'auto') {\n      itemAlign = legendModel.get('left') === 'right' && legendModel.get('orient') === 'vertical' ? 'right' : 'left';\n    }\n\n    this.renderInner(itemAlign, legendModel, ecModel, api); // Perform layout.\n\n    var positionInfo = legendModel.getBoxLayoutParams();\n    var viewportSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var padding = legendModel.get('padding');\n    var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize); // Place mainGroup, based on the calculated `mainRect`.\n\n    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({\n      width: mainRect.width,\n      height: mainRect.height\n    }, positionInfo), viewportSize, padding);\n    this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]); // Render background after group is layout.\n\n    this.group.add(this._backgroundEl = makeBackground(mainRect, legendModel));\n  },\n\n  /**\n   * @protected\n   */\n  resetInner: function () {\n    this.getContentGroup().removeAll();\n    this._backgroundEl && this.group.remove(this._backgroundEl);\n  },\n\n  /**\n   * @protected\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var contentGroup = this.getContentGroup();\n    var legendDrawnMap = zrUtil.createHashMap();\n    var selectMode = legendModel.get('selectedMode');\n    each(legendModel.getData(), function (itemModel, dataIndex) {\n      var name = itemModel.get('name'); // Use empty string or \\n as a newline string\n\n      if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n        contentGroup.add(new Group({\n          newline: true\n        }));\n        return;\n      }\n\n      var seriesModel = ecModel.getSeriesByName(name)[0];\n\n      if (legendDrawnMap.get(name)) {\n        // Have been drawed\n        return;\n      } // Series legend\n\n\n      if (seriesModel) {\n        var data = seriesModel.getData();\n        var color = data.getVisual('color'); // If color is a callback function\n\n        if (typeof color === 'function') {\n          // Use the first data\n          color = color(seriesModel.getDataParams(0));\n        } // Using rect symbol defaultly\n\n\n        var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n        var symbolType = data.getVisual('symbol');\n\n        var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode);\n\n        itemGroup.on('click', curry(dispatchSelectAction, name, api)).on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api));\n        legendDrawnMap.set(name, true);\n      } else {\n        // Data legend of pie, funnel\n        ecModel.eachRawSeries(function (seriesModel) {\n          // In case multiple series has same data name\n          if (legendDrawnMap.get(name)) {\n            return;\n          }\n\n          if (seriesModel.legendDataProvider) {\n            var data = seriesModel.legendDataProvider();\n            var idx = data.indexOfName(name);\n\n            if (idx < 0) {\n              return;\n            }\n\n            var color = data.getItemVisual(idx, 'color');\n            var legendSymbolType = 'roundRect';\n\n            var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, null, itemAlign, color, selectMode);\n\n            itemGroup.on('click', curry(dispatchSelectAction, name, api)) // FIXME Should not specify the series name\n            .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));\n            legendDrawnMap.set(name, true);\n          }\n        }, this);\n      }\n    }, this);\n  },\n  _createItem: function (name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode) {\n    var itemWidth = legendModel.get('itemWidth');\n    var itemHeight = legendModel.get('itemHeight');\n    var inactiveColor = legendModel.get('inactiveColor');\n    var isSelected = legendModel.isSelected(name);\n    var itemGroup = new Group();\n    var textStyleModel = itemModel.getModel('textStyle');\n    var itemIcon = itemModel.get('icon');\n    var tooltipModel = itemModel.getModel('tooltip');\n    var legendGlobalTooltipModel = tooltipModel.parentModel; // Use user given icon first\n\n    legendSymbolType = itemIcon || legendSymbolType;\n    itemGroup.add(createSymbol(legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor, true)); // Compose symbols\n    // PENDING\n\n    if (!itemIcon && symbolType // At least show one symbol, can't be all none\n    && (symbolType !== legendSymbolType || symbolType == 'none')) {\n      var size = itemHeight * 0.8;\n\n      if (symbolType === 'none') {\n        symbolType = 'circle';\n      } // Put symbol in the center\n\n\n      itemGroup.add(createSymbol(symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size, isSelected ? color : inactiveColor));\n    }\n\n    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n    var textAlign = itemAlign;\n    var formatter = legendModel.get('formatter');\n    var content = name;\n\n    if (typeof formatter === 'string' && formatter) {\n      content = formatter.replace('{name}', name != null ? name : '');\n    } else if (typeof formatter === 'function') {\n      content = formatter(name);\n    }\n\n    itemGroup.add(new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: content,\n        x: textX,\n        y: itemHeight / 2,\n        textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n        textAlign: textAlign,\n        textVerticalAlign: 'middle'\n      })\n    })); // Add a invisible rect to increase the area of mouse hover\n\n    var hitRect = new graphic.Rect({\n      shape: itemGroup.getBoundingRect(),\n      invisible: true,\n      tooltip: tooltipModel.get('show') ? zrUtil.extend({\n        content: name,\n        // Defaul formatter\n        formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n          return name;\n        },\n        formatterParams: {\n          componentType: 'legend',\n          legendIndex: legendModel.componentIndex,\n          name: name,\n          $vars: ['name']\n        }\n      }, tooltipModel.option) : null\n    });\n    itemGroup.add(hitRect);\n    itemGroup.eachChild(function (child) {\n      child.silent = true;\n    });\n    hitRect.silent = !selectMode;\n    this.getContentGroup().add(itemGroup);\n    graphic.setHoverStyle(itemGroup);\n    itemGroup.__legendDataIndex = dataIndex;\n    return itemGroup;\n  },\n\n  /**\n   * @protected\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup(); // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\n    var contentRect = contentGroup.getBoundingRect();\n    contentGroup.attr('position', [-contentRect.x, -contentRect.y]);\n    return this.group.getBoundingRect();\n  }\n});\n\nfunction dispatchSelectAction(name, api) {\n  api.dispatchAction({\n    type: 'legendToggleSelect',\n    name: name\n  });\n}\n\nfunction dispatchHighlightAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'highlight',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nfunction dispatchDownplayAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'downplay',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/LegendView.js\n// module id = 1065\n// module chunks = 0 1 2","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar interactionMutex = require(\"./interactionMutex\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar map = zrUtil.map;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathPow = Math.pow;\nvar COVER_Z = 10000;\nvar UNSELECT_THRESHOLD = 6;\nvar MIN_RESIZE_LINE_WIDTH = 6;\nvar MUTEX_RESOURCE_KEY = 'globalPan';\nvar DIRECTION_MAP = {\n  w: [0, 0],\n  e: [0, 1],\n  n: [1, 0],\n  s: [1, 1]\n};\nvar CURSOR_MAP = {\n  w: 'ew',\n  e: 'ew',\n  n: 'ns',\n  s: 'ns',\n  ne: 'nesw',\n  sw: 'nesw',\n  nw: 'nwse',\n  se: 'nwse'\n};\nvar DEFAULT_BRUSH_OPT = {\n  brushStyle: {\n    lineWidth: 2,\n    stroke: 'rgba(0,0,0,0.3)',\n    fill: 'rgba(0,0,0,0.1)'\n  },\n  transformable: true,\n  brushMode: 'single',\n  removeOnClick: false\n};\nvar baseUID = 0;\n/**\n * @alias module:echarts/component/helper/BrushController\n * @constructor\n * @mixin {module:zrender/mixin/Eventful}\n * @event module:echarts/component/helper/BrushController#brush\n *        params:\n *            areas: Array.<Array>, coord relates to container group,\n *                                    If no container specified, to global.\n *            opt {\n *                isEnd: boolean,\n *                removeOnClick: boolean\n *            }\n *\n * @param {module:zrender/zrender~ZRender} zr\n */\n\nfunction BrushController(zr) {\n  Eventful.call(this);\n  /**\n   * @type {module:zrender/zrender~ZRender}\n   * @private\n   */\n\n  this._zr = zr;\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n\n  this.group = new graphic.Group();\n  /**\n   * Only for drawing (after enabledBrush).\n   *     'line', 'rect', 'polygon' or false\n   *     If passing false/null/undefined, disable brush.\n   *     If passing 'auto', determined by panel.defaultBrushType\n   * @private\n   * @type {string}\n   */\n\n  this._brushType;\n  /**\n   * Only for drawing (after enabledBrush).\n   *\n   * @private\n   * @type {Object}\n   */\n\n  this._brushOption;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._panels;\n  /**\n   * @private\n   * @type {Array.<nubmer>}\n   */\n\n  this._track = [];\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._dragging;\n  /**\n   * @private\n   * @type {Array}\n   */\n\n  this._covers = [];\n  /**\n   * @private\n   * @type {moudule:zrender/container/Group}\n   */\n\n  this._creatingCover;\n  /**\n   * `true` means global panel\n   * @private\n   * @type {module:zrender/container/Group|boolean}\n   */\n\n  this._creatingPanel;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._enableGlobalPan;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this._uid = 'brushController_' + baseUID++;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._handlers = {};\n  each(mouseHandlers, function (handler, eventName) {\n    this._handlers[eventName] = zrUtil.bind(handler, this);\n  }, this);\n}\n\nBrushController.prototype = {\n  constructor: BrushController,\n\n  /**\n   * If set to null/undefined/false, select disabled.\n   * @param {Object} brushOption\n   * @param {string|boolean} brushOption.brushType 'line', 'rect', 'polygon' or false\n   *                          If passing false/null/undefined, disable brush.\n   *                          If passing 'auto', determined by panel.defaultBrushType.\n   *                              ('auto' can not be used in global panel)\n   * @param {number} [brushOption.brushMode='single'] 'single' or 'multiple'\n   * @param {boolean} [brushOption.transformable=true]\n   * @param {boolean} [brushOption.removeOnClick=false]\n   * @param {Object} [brushOption.brushStyle]\n   * @param {number} [brushOption.brushStyle.width]\n   * @param {number} [brushOption.brushStyle.lineWidth]\n   * @param {string} [brushOption.brushStyle.stroke]\n   * @param {string} [brushOption.brushStyle.fill]\n   * @param {number} [brushOption.z]\n   */\n  enableBrush: function (brushOption) {\n    this._brushType && doDisableBrush(this);\n    brushOption.brushType && doEnableBrush(this, brushOption);\n    return this;\n  },\n\n  /**\n   * @param {Array.<Object>} panelOpts If not pass, it is global brush.\n   *        Each items: {\n   *            panelId, // mandatory.\n   *            clipPath, // mandatory. function.\n   *            isTargetByCursor, // mandatory. function.\n   *            defaultBrushType, // optional, only used when brushType is 'auto'.\n   *            getLinearBrushOtherExtent, // optional. function.\n   *        }\n   */\n  setPanels: function (panelOpts) {\n    if (panelOpts && panelOpts.length) {\n      var panels = this._panels = {};\n      zrUtil.each(panelOpts, function (panelOpts) {\n        panels[panelOpts.panelId] = zrUtil.clone(panelOpts);\n      });\n    } else {\n      this._panels = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param {Object} [opt]\n   * @return {boolean} [opt.enableGlobalPan=false]\n   */\n  mount: function (opt) {\n    opt = opt || {};\n    this._enableGlobalPan = opt.enableGlobalPan;\n    var thisGroup = this.group;\n\n    this._zr.add(thisGroup);\n\n    thisGroup.attr({\n      position: opt.position || [0, 0],\n      rotation: opt.rotation || 0,\n      scale: opt.scale || [1, 1]\n    });\n    this._transform = thisGroup.getLocalTransform();\n    return this;\n  },\n  eachCover: function (cb, context) {\n    each(this._covers, cb, context);\n  },\n\n  /**\n   * Update covers.\n   * @param {Array.<Object>} brushOptionList Like:\n   *        [\n   *            {id: 'xx', brushType: 'line', range: [23, 44], brushStyle, transformable},\n   *            {id: 'yy', brushType: 'rect', range: [[23, 44], [23, 54]]},\n   *            ...\n   *        ]\n   *        `brushType` is required in each cover info. (can not be 'auto')\n   *        `id` is not mandatory.\n   *        `brushStyle`, `transformable` is not mandatory, use DEFAULT_BRUSH_OPT by default.\n   *        If brushOptionList is null/undefined, all covers removed.\n   */\n  updateCovers: function (brushOptionList) {\n    brushOptionList = zrUtil.map(brushOptionList, function (brushOption) {\n      return zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n    });\n    var tmpIdPrefix = '\\0-brush-index-';\n    var oldCovers = this._covers;\n    var newCovers = this._covers = [];\n    var controller = this;\n    var creatingCover = this._creatingCover;\n    new DataDiffer(oldCovers, brushOptionList, oldGetKey, getKey).add(addOrUpdate).update(addOrUpdate).remove(remove).execute();\n    return this;\n\n    function getKey(brushOption, index) {\n      return (brushOption.id != null ? brushOption.id : tmpIdPrefix + index) + '-' + brushOption.brushType;\n    }\n\n    function oldGetKey(cover, index) {\n      return getKey(cover.__brushOption, index);\n    }\n\n    function addOrUpdate(newIndex, oldIndex) {\n      var newBrushOption = brushOptionList[newIndex]; // Consider setOption in event listener of brushSelect,\n      // where updating cover when creating should be forbiden.\n\n      if (oldIndex != null && oldCovers[oldIndex] === creatingCover) {\n        newCovers[newIndex] = oldCovers[oldIndex];\n      } else {\n        var cover = newCovers[newIndex] = oldIndex != null ? (oldCovers[oldIndex].__brushOption = newBrushOption, oldCovers[oldIndex]) : endCreating(controller, createCover(controller, newBrushOption));\n        updateCoverAfterCreation(controller, cover);\n      }\n    }\n\n    function remove(oldIndex) {\n      if (oldCovers[oldIndex] !== creatingCover) {\n        controller.group.remove(oldCovers[oldIndex]);\n      }\n    }\n  },\n  unmount: function () {\n    this.enableBrush(false); // container may 'removeAll' outside.\n\n    clearCovers(this);\n\n    this._zr.remove(this.group);\n\n    return this;\n  },\n  dispose: function () {\n    this.unmount();\n    this.off();\n  }\n};\nzrUtil.mixin(BrushController, Eventful);\n\nfunction doEnableBrush(controller, brushOption) {\n  var zr = controller._zr; // Consider roam, which takes globalPan too.\n\n  if (!controller._enableGlobalPan) {\n    interactionMutex.take(zr, MUTEX_RESOURCE_KEY, controller._uid);\n  }\n\n  each(controller._handlers, function (handler, eventName) {\n    zr.on(eventName, handler);\n  });\n  controller._brushType = brushOption.brushType;\n  controller._brushOption = zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n}\n\nfunction doDisableBrush(controller) {\n  var zr = controller._zr;\n  interactionMutex.release(zr, MUTEX_RESOURCE_KEY, controller._uid);\n  each(controller._handlers, function (handler, eventName) {\n    zr.off(eventName, handler);\n  });\n  controller._brushType = controller._brushOption = null;\n}\n\nfunction createCover(controller, brushOption) {\n  var cover = coverRenderers[brushOption.brushType].createCover(controller, brushOption);\n  cover.__brushOption = brushOption;\n  updateZ(cover, brushOption);\n  controller.group.add(cover);\n  return cover;\n}\n\nfunction endCreating(controller, creatingCover) {\n  var coverRenderer = getCoverRenderer(creatingCover);\n\n  if (coverRenderer.endCreating) {\n    coverRenderer.endCreating(controller, creatingCover);\n    updateZ(creatingCover, creatingCover.__brushOption);\n  }\n\n  return creatingCover;\n}\n\nfunction updateCoverShape(controller, cover) {\n  var brushOption = cover.__brushOption;\n  getCoverRenderer(cover).updateCoverShape(controller, cover, brushOption.range, brushOption);\n}\n\nfunction updateZ(cover, brushOption) {\n  var z = brushOption.z;\n  z == null && (z = COVER_Z);\n  cover.traverse(function (el) {\n    el.z = z;\n    el.z2 = z; // Consider in given container.\n  });\n}\n\nfunction updateCoverAfterCreation(controller, cover) {\n  getCoverRenderer(cover).updateCommon(controller, cover);\n  updateCoverShape(controller, cover);\n}\n\nfunction getCoverRenderer(cover) {\n  return coverRenderers[cover.__brushOption.brushType];\n} // return target panel or `true` (means global panel)\n\n\nfunction getPanelByPoint(controller, e, localCursorPoint) {\n  var panels = controller._panels;\n\n  if (!panels) {\n    return true; // Global panel\n  }\n\n  var panel;\n  var transform = controller._transform;\n  each(panels, function (pn) {\n    pn.isTargetByCursor(e, localCursorPoint, transform) && (panel = pn);\n  });\n  return panel;\n} // Return a panel or true\n\n\nfunction getPanelByCover(controller, cover) {\n  var panels = controller._panels;\n\n  if (!panels) {\n    return true; // Global panel\n  }\n\n  var panelId = cover.__brushOption.panelId; // User may give cover without coord sys info,\n  // which is then treated as global panel.\n\n  return panelId != null ? panels[panelId] : true;\n}\n\nfunction clearCovers(controller) {\n  var covers = controller._covers;\n  var originalLength = covers.length;\n  each(covers, function (cover) {\n    controller.group.remove(cover);\n  }, controller);\n  covers.length = 0;\n  return !!originalLength;\n}\n\nfunction trigger(controller, opt) {\n  var areas = map(controller._covers, function (cover) {\n    var brushOption = cover.__brushOption;\n    var range = zrUtil.clone(brushOption.range);\n    return {\n      brushType: brushOption.brushType,\n      panelId: brushOption.panelId,\n      range: range\n    };\n  });\n  controller.trigger('brush', areas, {\n    isEnd: !!opt.isEnd,\n    removeOnClick: !!opt.removeOnClick\n  });\n}\n\nfunction shouldShowCover(controller) {\n  var track = controller._track;\n\n  if (!track.length) {\n    return false;\n  }\n\n  var p2 = track[track.length - 1];\n  var p1 = track[0];\n  var dx = p2[0] - p1[0];\n  var dy = p2[1] - p1[1];\n  var dist = mathPow(dx * dx + dy * dy, 0.5);\n  return dist > UNSELECT_THRESHOLD;\n}\n\nfunction getTrackEnds(track) {\n  var tail = track.length - 1;\n  tail < 0 && (tail = 0);\n  return [track[0], track[tail]];\n}\n\nfunction createBaseRectCover(doDrift, controller, brushOption, edgeNames) {\n  var cover = new graphic.Group();\n  cover.add(new graphic.Rect({\n    name: 'main',\n    style: makeStyle(brushOption),\n    silent: true,\n    draggable: true,\n    cursor: 'move',\n    drift: curry(doDrift, controller, cover, 'nswe'),\n    ondragend: curry(trigger, controller, {\n      isEnd: true\n    })\n  }));\n  each(edgeNames, function (name) {\n    cover.add(new graphic.Rect({\n      name: name,\n      style: {\n        opacity: 0\n      },\n      draggable: true,\n      silent: true,\n      invisible: true,\n      drift: curry(doDrift, controller, cover, name),\n      ondragend: curry(trigger, controller, {\n        isEnd: true\n      })\n    }));\n  });\n  return cover;\n}\n\nfunction updateBaseRect(controller, cover, localRange, brushOption) {\n  var lineWidth = brushOption.brushStyle.lineWidth || 0;\n  var handleSize = mathMax(lineWidth, MIN_RESIZE_LINE_WIDTH);\n  var x = localRange[0][0];\n  var y = localRange[1][0];\n  var xa = x - lineWidth / 2;\n  var ya = y - lineWidth / 2;\n  var x2 = localRange[0][1];\n  var y2 = localRange[1][1];\n  var x2a = x2 - handleSize + lineWidth / 2;\n  var y2a = y2 - handleSize + lineWidth / 2;\n  var width = x2 - x;\n  var height = y2 - y;\n  var widtha = width + lineWidth;\n  var heighta = height + lineWidth;\n  updateRectShape(controller, cover, 'main', x, y, width, height);\n\n  if (brushOption.transformable) {\n    updateRectShape(controller, cover, 'w', xa, ya, handleSize, heighta);\n    updateRectShape(controller, cover, 'e', x2a, ya, handleSize, heighta);\n    updateRectShape(controller, cover, 'n', xa, ya, widtha, handleSize);\n    updateRectShape(controller, cover, 's', xa, y2a, widtha, handleSize);\n    updateRectShape(controller, cover, 'nw', xa, ya, handleSize, handleSize);\n    updateRectShape(controller, cover, 'ne', x2a, ya, handleSize, handleSize);\n    updateRectShape(controller, cover, 'sw', xa, y2a, handleSize, handleSize);\n    updateRectShape(controller, cover, 'se', x2a, y2a, handleSize, handleSize);\n  }\n}\n\nfunction updateCommon(controller, cover) {\n  var brushOption = cover.__brushOption;\n  var transformable = brushOption.transformable;\n  var mainEl = cover.childAt(0);\n  mainEl.useStyle(makeStyle(brushOption));\n  mainEl.attr({\n    silent: !transformable,\n    cursor: transformable ? 'move' : 'default'\n  });\n  each(['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw'], function (name) {\n    var el = cover.childOfName(name);\n    var globalDir = getGlobalDirection(controller, name);\n    el && el.attr({\n      silent: !transformable,\n      invisible: !transformable,\n      cursor: transformable ? CURSOR_MAP[globalDir] + '-resize' : null\n    });\n  });\n}\n\nfunction updateRectShape(controller, cover, name, x, y, w, h) {\n  var el = cover.childOfName(name);\n  el && el.setShape(pointsToRect(clipByPanel(controller, cover, [[x, y], [x + w, y + h]])));\n}\n\nfunction makeStyle(brushOption) {\n  return zrUtil.defaults({\n    strokeNoScale: true\n  }, brushOption.brushStyle);\n}\n\nfunction formatRectRange(x, y, x2, y2) {\n  var min = [mathMin(x, x2), mathMin(y, y2)];\n  var max = [mathMax(x, x2), mathMax(y, y2)];\n  return [[min[0], max[0]], // x range\n  [min[1], max[1]] // y range\n  ];\n}\n\nfunction getTransform(controller) {\n  return graphic.getTransform(controller.group);\n}\n\nfunction getGlobalDirection(controller, localDirection) {\n  if (localDirection.length > 1) {\n    localDirection = localDirection.split('');\n    var globalDir = [getGlobalDirection(controller, localDirection[0]), getGlobalDirection(controller, localDirection[1])];\n    (globalDir[0] === 'e' || globalDir[0] === 'w') && globalDir.reverse();\n    return globalDir.join('');\n  } else {\n    var map = {\n      w: 'left',\n      e: 'right',\n      n: 'top',\n      s: 'bottom'\n    };\n    var inverseMap = {\n      left: 'w',\n      right: 'e',\n      top: 'n',\n      bottom: 's'\n    };\n    var globalDir = graphic.transformDirection(map[localDirection], getTransform(controller));\n    return inverseMap[globalDir];\n  }\n}\n\nfunction driftRect(toRectRange, fromRectRange, controller, cover, name, dx, dy, e) {\n  var brushOption = cover.__brushOption;\n  var rectRange = toRectRange(brushOption.range);\n  var localDelta = toLocalDelta(controller, dx, dy);\n  each(name.split(''), function (namePart) {\n    var ind = DIRECTION_MAP[namePart];\n    rectRange[ind[0]][ind[1]] += localDelta[ind[0]];\n  });\n  brushOption.range = fromRectRange(formatRectRange(rectRange[0][0], rectRange[1][0], rectRange[0][1], rectRange[1][1]));\n  updateCoverAfterCreation(controller, cover);\n  trigger(controller, {\n    isEnd: false\n  });\n}\n\nfunction driftPolygon(controller, cover, dx, dy, e) {\n  var range = cover.__brushOption.range;\n  var localDelta = toLocalDelta(controller, dx, dy);\n  each(range, function (point) {\n    point[0] += localDelta[0];\n    point[1] += localDelta[1];\n  });\n  updateCoverAfterCreation(controller, cover);\n  trigger(controller, {\n    isEnd: false\n  });\n}\n\nfunction toLocalDelta(controller, dx, dy) {\n  var thisGroup = controller.group;\n  var localD = thisGroup.transformCoordToLocal(dx, dy);\n  var localZero = thisGroup.transformCoordToLocal(0, 0);\n  return [localD[0] - localZero[0], localD[1] - localZero[1]];\n}\n\nfunction clipByPanel(controller, cover, data) {\n  var panel = getPanelByCover(controller, cover);\n  return panel && panel !== true ? panel.clipPath(data, controller._transform) : zrUtil.clone(data);\n}\n\nfunction pointsToRect(points) {\n  var xmin = mathMin(points[0][0], points[1][0]);\n  var ymin = mathMin(points[0][1], points[1][1]);\n  var xmax = mathMax(points[0][0], points[1][0]);\n  var ymax = mathMax(points[0][1], points[1][1]);\n  return {\n    x: xmin,\n    y: ymin,\n    width: xmax - xmin,\n    height: ymax - ymin\n  };\n}\n\nfunction resetCursor(controller, e, localCursorPoint) {\n  // Check active\n  if (!controller._brushType) {\n    return;\n  }\n\n  var zr = controller._zr;\n  var covers = controller._covers;\n  var currPanel = getPanelByPoint(controller, e, localCursorPoint); // Check whether in covers.\n\n  if (!controller._dragging) {\n    for (var i = 0; i < covers.length; i++) {\n      var brushOption = covers[i].__brushOption;\n\n      if (currPanel && (currPanel === true || brushOption.panelId === currPanel.panelId) && coverRenderers[brushOption.brushType].contain(covers[i], localCursorPoint[0], localCursorPoint[1])) {\n        // Use cursor style set on cover.\n        return;\n      }\n    }\n  }\n\n  currPanel && zr.setCursorStyle('crosshair');\n}\n\nfunction preventDefault(e) {\n  var rawE = e.event;\n  rawE.preventDefault && rawE.preventDefault();\n}\n\nfunction mainShapeContain(cover, x, y) {\n  return cover.childOfName('main').contain(x, y);\n}\n\nfunction updateCoverByMouse(controller, e, localCursorPoint, isEnd) {\n  var creatingCover = controller._creatingCover;\n  var panel = controller._creatingPanel;\n  var thisBrushOption = controller._brushOption;\n  var eventParams;\n\n  controller._track.push(localCursorPoint.slice());\n\n  if (shouldShowCover(controller) || creatingCover) {\n    if (panel && !creatingCover) {\n      thisBrushOption.brushMode === 'single' && clearCovers(controller);\n      var brushOption = zrUtil.clone(thisBrushOption);\n      brushOption.brushType = determineBrushType(brushOption.brushType, panel);\n      brushOption.panelId = panel === true ? null : panel.panelId;\n      creatingCover = controller._creatingCover = createCover(controller, brushOption);\n\n      controller._covers.push(creatingCover);\n    }\n\n    if (creatingCover) {\n      var coverRenderer = coverRenderers[determineBrushType(controller._brushType, panel)];\n      var coverBrushOption = creatingCover.__brushOption;\n      coverBrushOption.range = coverRenderer.getCreatingRange(clipByPanel(controller, creatingCover, controller._track));\n\n      if (isEnd) {\n        endCreating(controller, creatingCover);\n        coverRenderer.updateCommon(controller, creatingCover);\n      }\n\n      updateCoverShape(controller, creatingCover);\n      eventParams = {\n        isEnd: isEnd\n      };\n    }\n  } else if (isEnd && thisBrushOption.brushMode === 'single' && thisBrushOption.removeOnClick) {\n    // Help user to remove covers easily, only by a tiny drag, in 'single' mode.\n    // But a single click do not clear covers, because user may have casual\n    // clicks (for example, click on other component and do not expect covers\n    // disappear).\n    // Only some cover removed, trigger action, but not every click trigger action.\n    if (getPanelByPoint(controller, e, localCursorPoint) && clearCovers(controller)) {\n      eventParams = {\n        isEnd: isEnd,\n        removeOnClick: true\n      };\n    }\n  }\n\n  return eventParams;\n}\n\nfunction determineBrushType(brushType, panel) {\n  if (brushType === 'auto') {\n    return panel.defaultBrushType;\n  }\n\n  return brushType;\n}\n\nvar mouseHandlers = {\n  mousedown: function (e) {\n    if (this._dragging) {\n      // In case some browser do not support globalOut,\n      // and release mose out side the browser.\n      handleDragEnd.call(this, e);\n    } else if (!e.target || !e.target.draggable) {\n      preventDefault(e);\n      var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n      this._creatingCover = null;\n      var panel = this._creatingPanel = getPanelByPoint(this, e, localCursorPoint);\n\n      if (panel) {\n        this._dragging = true;\n        this._track = [localCursorPoint.slice()];\n      }\n    }\n  },\n  mousemove: function (e) {\n    var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n    resetCursor(this, e, localCursorPoint);\n\n    if (this._dragging) {\n      preventDefault(e);\n      var eventParams = updateCoverByMouse(this, e, localCursorPoint, false);\n      eventParams && trigger(this, eventParams);\n    }\n  },\n  mouseup: handleDragEnd //,\n  // FIXME\n  // in tooltip, globalout should not be triggered.\n  // globalout: handleDragEnd\n\n};\n\nfunction handleDragEnd(e) {\n  if (this._dragging) {\n    preventDefault(e);\n    var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n    var eventParams = updateCoverByMouse(this, e, localCursorPoint, true);\n    this._dragging = false;\n    this._track = [];\n    this._creatingCover = null; // trigger event shoule be at final, after procedure will be nested.\n\n    eventParams && trigger(this, eventParams);\n  }\n}\n/**\n * key: brushType\n * @type {Object}\n */\n\n\nvar coverRenderers = {\n  lineX: getLineRenderer(0),\n  lineY: getLineRenderer(1),\n  rect: {\n    createCover: function (controller, brushOption) {\n      return createBaseRectCover(curry(driftRect, function (range) {\n        return range;\n      }, function (range) {\n        return range;\n      }), controller, brushOption, ['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw']);\n    },\n    getCreatingRange: function (localTrack) {\n      var ends = getTrackEnds(localTrack);\n      return formatRectRange(ends[1][0], ends[1][1], ends[0][0], ends[0][1]);\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      updateBaseRect(controller, cover, localRange, brushOption);\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  },\n  polygon: {\n    createCover: function (controller, brushOption) {\n      var cover = new graphic.Group(); // Do not use graphic.Polygon because graphic.Polyline do not close the\n      // border of the shape when drawing, which is a better experience for user.\n\n      cover.add(new graphic.Polyline({\n        name: 'main',\n        style: makeStyle(brushOption),\n        silent: true\n      }));\n      return cover;\n    },\n    getCreatingRange: function (localTrack) {\n      return localTrack;\n    },\n    endCreating: function (controller, cover) {\n      cover.remove(cover.childAt(0)); // Use graphic.Polygon close the shape.\n\n      cover.add(new graphic.Polygon({\n        name: 'main',\n        draggable: true,\n        drift: curry(driftPolygon, controller, cover),\n        ondragend: curry(trigger, controller, {\n          isEnd: true\n        })\n      }));\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      cover.childAt(0).setShape({\n        points: clipByPanel(controller, cover, localRange)\n      });\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  }\n};\n\nfunction getLineRenderer(xyIndex) {\n  return {\n    createCover: function (controller, brushOption) {\n      return createBaseRectCover(curry(driftRect, function (range) {\n        var rectRange = [range, [0, 100]];\n        xyIndex && rectRange.reverse();\n        return rectRange;\n      }, function (rectRange) {\n        return rectRange[xyIndex];\n      }), controller, brushOption, [['w', 'e'], ['n', 's']][xyIndex]);\n    },\n    getCreatingRange: function (localTrack) {\n      var ends = getTrackEnds(localTrack);\n      var min = mathMin(ends[0][xyIndex], ends[1][xyIndex]);\n      var max = mathMax(ends[0][xyIndex], ends[1][xyIndex]);\n      return [min, max];\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      var otherExtent; // If brushWidth not specified, fit the panel.\n\n      var panel = getPanelByCover(controller, cover);\n\n      if (panel !== true && panel.getLinearBrushOtherExtent) {\n        otherExtent = panel.getLinearBrushOtherExtent(xyIndex, controller._transform);\n      } else {\n        var zr = controller._zr;\n        otherExtent = [0, [zr.getWidth(), zr.getHeight()][1 - xyIndex]];\n      }\n\n      var rectRange = [localRange, otherExtent];\n      xyIndex && rectRange.reverse();\n      updateBaseRect(controller, cover, rectRange, brushOption);\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  };\n}\n\nvar _default = BrushController;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/BrushController.js\n// module id = 1066\n// module chunks = 0 1 2","var IRRELEVANT_EXCLUDES = {\n  'axisPointer': 1,\n  'tooltip': 1,\n  'brush': 1\n};\n/**\n * Avoid that: mouse click on a elements that is over geo or graph,\n * but roam is triggered.\n */\n\nfunction onIrrelevantElement(e, api, targetCoordSysModel) {\n  var model = api.getComponentByElement(e.topTarget); // If model is axisModel, it works only if it is injected with coordinateSystem.\n\n  var coordSys = model && model.coordinateSystem;\n  return model && model !== targetCoordSysModel && !IRRELEVANT_EXCLUDES[model.mainType] && coordSys && coordSys.model !== targetCoordSysModel;\n}\n\nexports.onIrrelevantElement = onIrrelevantElement;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/cursorHelper.js\n// module id = 1067\n// module chunks = 0 1 2","var textHelper = require(\"../helper/text\");\n\nvar BoundingRect = require(\"../../core/BoundingRect\");\n\n/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\nvar tmpRect = new BoundingRect();\n\nvar RectText = function () {};\n\nRectText.prototype = {\n  constructor: RectText,\n\n  /**\n   * Draw text in a rect with specified position.\n   * @param  {CanvasRenderingContext2D} ctx\n   * @param  {Object} rect Displayable rect\n   */\n  drawRectText: function (ctx, rect) {\n    var style = this.style;\n    rect = style.textRect || rect; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n    var text = style.text; // Convert to string\n\n    text != null && (text += '');\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    } // FIXME\n\n\n    ctx.save(); // Transform rect to view space\n\n    var transform = this.transform;\n\n    if (!style.transformText) {\n      if (transform) {\n        tmpRect.copy(rect);\n        tmpRect.applyTransform(transform);\n        rect = tmpRect;\n      }\n    } else {\n      this.setTransform(ctx);\n    } // transformText and textRotation can not be used at the same time.\n\n\n    textHelper.renderText(this, ctx, text, style, rect);\n    ctx.restore();\n  }\n};\nvar _default = RectText;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/mixin/RectText.js\n// module id = 1071\n// module chunks = 0 1 2","/**\n * 线段包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  var _a = 0;\n  var _b = x0; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l || y < y0 - _l && y < y1 - _l || x > x0 + _l && x > x1 + _l || x < x0 - _l && x < x1 - _l) {\n    return false;\n  }\n\n  if (x0 !== x1) {\n    _a = (y0 - y1) / (x0 - x1);\n    _b = (x0 * y1 - x1 * y0) / (x0 - x1);\n  } else {\n    return Math.abs(x - x0) <= _l / 2;\n  }\n\n  var tmp = _a * x - y + _b;\n\n  var _s = tmp * tmp / (_a * _a + 1);\n\n  return _s <= _l / 2 * _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/contain/line.js\n// module id = 1072\n// module chunks = 0 1 2","var _curve = require(\"../core/curve\");\n\nvar quadraticProjectPoint = _curve.quadraticProjectPoint;\n\n/**\n * 二次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l) {\n    return false;\n  }\n\n  var d = quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/contain/quadratic.js\n// module id = 1073\n// module chunks = 0 1 2","var zrUtil = require(\"../core/util\");\n\nvar Gradient = require(\"./Gradient\");\n\n/**\n * x, y, x2, y2 are all percent from 0 to 1\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @param {number} [x2=1]\n * @param {number} [y2=0]\n * @param {Array.<Object>} colorStops\n * @param {boolean} [globalCoord=false]\n */\nvar LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'linear', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0 : x;\n  this.y = y == null ? 0 : y;\n  this.x2 = x2 == null ? 1 : x2;\n  this.y2 = y2 == null ? 0 : y2; // Can be cloned\n\n  this.type = 'linear'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nLinearGradient.prototype = {\n  constructor: LinearGradient\n};\nzrUtil.inherits(LinearGradient, Gradient);\nvar _default = LinearGradient;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/LinearGradient.js\n// module id = 1074\n// module chunks = 0 1 2","var zrender = require(\"zrender/lib/zrender\");\n\nexports.zrender = zrender;\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nexports.matrix = matrix;\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nexports.vector = vector;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nexports.color = colorTool;\n\nvar graphic = require(\"./util/graphic\");\n\nexports.graphic = graphic;\n\nvar numberUtil = require(\"./util/number\");\n\nexports.number = numberUtil;\n\nvar formatUtil = require(\"./util/format\");\n\nexports.format = formatUtil;\n\nvar _throttle = require(\"./util/throttle\");\n\nvar throttle = _throttle.throttle;\nexports.throttle = _throttle.throttle;\n\nvar ecHelper = require(\"./helper\");\n\nexports.helper = ecHelper;\n\nvar _List = require(\"./data/List\");\n\nexports.List = _List;\n\nvar _Model = require(\"./model/Model\");\n\nexports.Model = _Model;\n\nvar _Axis = require(\"./coord/Axis\");\n\nexports.Axis = _Axis;\n\nvar _env = require(\"zrender/lib/core/env\");\n\nexports.env = _env;\n\nvar _parseGeoJson = require(\"./coord/geo/parseGeoJson\");\n\nexports.parseGeoJson = _parseGeoJson;\n\n/**\n * Do not mount those modules on 'src/echarts' for better tree shaking.\n */\nvar ecUtil = {};\nzrUtil.each(['map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter', 'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction', 'extend', 'defaults', 'clone', 'merge'], function (name) {\n  ecUtil[name] = zrUtil[name];\n});\nexports.util = ecUtil;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/export.js\n// module id = 1075\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Region = require(\"./Region\");\n\n/**\n * Parse and decode geo json\n * @module echarts/coord/geo/parseGeoJson\n */\nfunction decode(json) {\n  if (!json.UTF8Encoding) {\n    return json;\n  }\n\n  var encodeScale = json.UTF8Scale;\n\n  if (encodeScale == null) {\n    encodeScale = 1024;\n  }\n\n  var features = json.features;\n\n  for (var f = 0; f < features.length; f++) {\n    var feature = features[f];\n    var geometry = feature.geometry;\n    var coordinates = geometry.coordinates;\n    var encodeOffsets = geometry.encodeOffsets;\n\n    for (var c = 0; c < coordinates.length; c++) {\n      var coordinate = coordinates[c];\n\n      if (geometry.type === 'Polygon') {\n        coordinates[c] = decodePolygon(coordinate, encodeOffsets[c], encodeScale);\n      } else if (geometry.type === 'MultiPolygon') {\n        for (var c2 = 0; c2 < coordinate.length; c2++) {\n          var polygon = coordinate[c2];\n          coordinate[c2] = decodePolygon(polygon, encodeOffsets[c][c2], encodeScale);\n        }\n      }\n    }\n  } // Has been decoded\n\n\n  json.UTF8Encoding = false;\n  return json;\n}\n\nfunction decodePolygon(coordinate, encodeOffsets, encodeScale) {\n  var result = [];\n  var prevX = encodeOffsets[0];\n  var prevY = encodeOffsets[1];\n\n  for (var i = 0; i < coordinate.length; i += 2) {\n    var x = coordinate.charCodeAt(i) - 64;\n    var y = coordinate.charCodeAt(i + 1) - 64; // ZigZag decoding\n\n    x = x >> 1 ^ -(x & 1);\n    y = y >> 1 ^ -(y & 1); // Delta deocding\n\n    x += prevX;\n    y += prevY;\n    prevX = x;\n    prevY = y; // Dequantize\n\n    result.push([x / encodeScale, y / encodeScale]);\n  }\n\n  return result;\n}\n/**\n * @alias module:echarts/coord/geo/parseGeoJson\n * @param {Object} geoJson\n * @return {module:zrender/container/Group}\n */\n\n\nfunction _default(geoJson) {\n  decode(geoJson);\n  return zrUtil.map(zrUtil.filter(geoJson.features, function (featureObj) {\n    // Output of mapshaper may have geometry null\n    return featureObj.geometry && featureObj.properties && featureObj.geometry.coordinates.length > 0;\n  }), function (featureObj) {\n    var properties = featureObj.properties;\n    var geo = featureObj.geometry;\n    var coordinates = geo.coordinates;\n    var geometries = [];\n\n    if (geo.type === 'Polygon') {\n      geometries.push({\n        type: 'polygon',\n        // According to the GeoJSON specification.\n        // First must be exterior, and the rest are all interior(holes).\n        exterior: coordinates[0],\n        interiors: coordinates.slice(1)\n      });\n    }\n\n    if (geo.type === 'MultiPolygon') {\n      zrUtil.each(coordinates, function (item) {\n        if (item[0]) {\n          geometries.push({\n            type: 'polygon',\n            exterior: item[0],\n            interiors: item.slice(1)\n          });\n        }\n      });\n    }\n\n    var region = new Region(properties.name, geometries, properties.cp);\n    region.properties = properties;\n    return region;\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/geo/parseGeoJson.js\n// module id = 1076\n// module chunks = 0 1 2","var BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar bbox = require(\"zrender/lib/core/bbox\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar polygonContain = require(\"zrender/lib/contain/polygon\");\n\n/**\n * @module echarts/coord/geo/Region\n */\n\n/**\n * @param {string} name\n * @param {Array} geometries\n * @param {Array.<number>} cp\n */\nfunction Region(name, geometries, cp) {\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  this.name = name;\n  /**\n   * @type {Array.<Array>}\n   * @readOnly\n   */\n\n  this.geometries = geometries;\n\n  if (!cp) {\n    var rect = this.getBoundingRect();\n    cp = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  } else {\n    cp = [cp[0], cp[1]];\n  }\n  /**\n   * @type {Array.<number>}\n   */\n\n\n  this.center = cp;\n}\n\nRegion.prototype = {\n  constructor: Region,\n  properties: null,\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    var rect = this._rect;\n\n    if (rect) {\n      return rect;\n    }\n\n    var MAX_NUMBER = Number.MAX_VALUE;\n    var min = [MAX_NUMBER, MAX_NUMBER];\n    var max = [-MAX_NUMBER, -MAX_NUMBER];\n    var min2 = [];\n    var max2 = [];\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      } // Doesn't consider hole\n\n\n      var exterior = geometries[i].exterior;\n      bbox.fromPoints(exterior, min2, max2);\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return this._rect = new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * @param {<Array.<number>} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var rect = this.getBoundingRect();\n    var geometries = this.geometries;\n\n    if (!rect.contain(coord[0], coord[1])) {\n      return false;\n    }\n\n    loopGeo: for (var i = 0, len = geometries.length; i < len; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      if (polygonContain.contain(exterior, coord[0], coord[1])) {\n        // Not in the region if point is in the hole.\n        for (var k = 0; k < (interiors ? interiors.length : 0); k++) {\n          if (polygonContain.contain(interiors[k])) {\n            continue loopGeo;\n          }\n        }\n\n        return true;\n      }\n    }\n\n    return false;\n  },\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var aspect = rect.width / rect.height;\n\n    if (!width) {\n      width = aspect * height;\n    } else if (!height) {\n      height = width / aspect;\n    }\n\n    var target = new BoundingRect(x, y, width, height);\n    var transform = rect.calculateTransform(target);\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      for (var p = 0; p < exterior.length; p++) {\n        vec2.applyTransform(exterior[p], exterior[p], transform);\n      }\n\n      for (var h = 0; h < (interiors ? interiors.length : 0); h++) {\n        for (var p = 0; p < interiors[h].length; p++) {\n          vec2.applyTransform(interiors[h][p], interiors[h][p], transform);\n        }\n      }\n    }\n\n    rect = this._rect;\n    rect.copy(target); // Update center\n\n    this.center = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n};\nvar _default = Region;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/geo/Region.js\n// module id = 1077\n// module chunks = 0 1 2","var windingLine = require(\"./windingLine\");\n\nvar EPSILON = 1e-8;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n}\n\nfunction contain(points, x, y) {\n  var w = 0;\n  var p = points[0];\n\n  if (!p) {\n    return false;\n  }\n\n  for (var i = 1; i < points.length; i++) {\n    var p2 = points[i];\n    w += windingLine(p[0], p[1], p2[0], p2[1], x, y);\n    p = p2;\n  } // Close polygon\n\n\n  var p0 = points[0];\n\n  if (!isAroundEqual(p[0], p0[0]) || !isAroundEqual(p[1], p0[1])) {\n    w += windingLine(p[0], p[1], p0[0], p0[1], x, y);\n  }\n\n  return w !== 0;\n}\n\nexports.contain = contain;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/contain/polygon.js\n// module id = 1078\n// module chunks = 0 1 2","var echarts = require(\"../echarts\");\n\nrequire(\"./axisPointer\");\n\nrequire(\"./tooltip/TooltipModel\");\n\nrequire(\"./tooltip/TooltipView\");\n\n// FIXME Better way to pack data in graphic element\n\n/**\n * @action\n * @property {string} type\n * @property {number} seriesIndex\n * @property {number} dataIndex\n * @property {number} [x]\n * @property {number} [y]\n */\necharts.registerAction({\n  type: 'showTip',\n  event: 'showTip',\n  update: 'tooltip:manuallyShowTip'\n}, // noop\nfunction () {});\necharts.registerAction({\n  type: 'hideTip',\n  event: 'hideTip',\n  update: 'tooltip:manuallyHideTip'\n}, // noop\nfunction () {});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/tooltip.js\n// module id = 1079\n// module chunks = 0 1 2","var echarts = require(\"../echarts\");\n\nrequire(\"./legend/LegendModel\");\n\nrequire(\"./legend/legendAction\");\n\nrequire(\"./legend/LegendView\");\n\nvar legendFilter = require(\"./legend/legendFilter\");\n\nvar Component = require(\"../model/Component\");\n\n// Do not contain scrollable legend, for sake of file size.\n// Series Filter\necharts.registerProcessor(legendFilter);\nComponent.registerSubTypeDefaulter('legend', function () {\n  // Default 'plain' when no type specified.\n  return 'plain';\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend.js\n// module id = 1080\n// module chunks = 0 1 2","function _default(seriesType, ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (!legendModels || !legendModels.length) {\n    return;\n  }\n\n  ecModel.eachSeriesByType(seriesType, function (series) {\n    var data = series.getData();\n    data.filterSelf(function (idx) {\n      var name = data.getName(idx); // If in any legend component the status is not selected.\n\n      for (var i = 0; i < legendModels.length; i++) {\n        if (!legendModels[i].isSelected(name)) {\n          return false;\n        }\n      }\n\n      return true;\n    }, this);\n  }, this);\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/processor/dataFilter.js\n// module id = 1081\n// module chunks = 0 2","require(\"./toolbox/ToolboxModel\");\n\nrequire(\"./toolbox/ToolboxView\");\n\nrequire(\"./toolbox/feature/SaveAsImage\");\n\nrequire(\"./toolbox/feature/MagicType\");\n\nrequire(\"./toolbox/feature/DataView\");\n\nrequire(\"./toolbox/feature/DataZoom\");\n\nrequire(\"./toolbox/feature/Restore\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox.js\n// module id = 1082\n// module chunks = 0 1 2","var echarts = require(\"../../echarts\");\n\nvar ATTR = '\\0_ec_interaction_mutex';\n\nfunction take(zr, resourceKey, userKey) {\n  var store = getStore(zr);\n  store[resourceKey] = userKey;\n}\n\nfunction release(zr, resourceKey, userKey) {\n  var store = getStore(zr);\n  var uKey = store[resourceKey];\n\n  if (uKey === userKey) {\n    store[resourceKey] = null;\n  }\n}\n\nfunction isTaken(zr, resourceKey) {\n  return !!getStore(zr)[resourceKey];\n}\n\nfunction getStore(zr) {\n  return zr[ATTR] || (zr[ATTR] = {});\n}\n/**\n * payload: {\n *     type: 'takeGlobalCursor',\n *     key: 'dataZoomSelect', or 'brush', or ...,\n *         If no userKey, release global cursor.\n * }\n */\n\n\necharts.registerAction({\n  type: 'takeGlobalCursor',\n  event: 'globalCursorTaken',\n  update: 'update'\n}, function () {});\nexports.take = take;\nexports.release = release;\nexports.isTaken = isTaken;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/interactionMutex.js\n// module id = 1083\n// module chunks = 0 1 2","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar brushHelper = require(\"./brushHelper\");\n\nvar each = zrUtil.each;\nvar indexOf = zrUtil.indexOf;\nvar curry = zrUtil.curry;\nvar COORD_CONVERTS = ['dataToPoint', 'pointToData']; // FIXME\n// how to genarialize to more coordinate systems.\n\nvar INCLUDE_FINDER_MAIN_TYPES = ['grid', 'xAxis', 'yAxis', 'geo', 'graph', 'polar', 'radiusAxis', 'angleAxis', 'bmap'];\n/**\n * [option in constructor]:\n * {\n *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n * }\n *\n *\n * [targetInfo]:\n *\n * There can be multiple axes in a single targetInfo. Consider the case\n * of `grid` component, a targetInfo represents a grid which contains one or more\n * cartesian and one or more axes. And consider the case of parallel system,\n * which has multiple axes in a coordinate system.\n * Can be {\n *     panelId: ...,\n *     coordSys: <a representitive cartesian in grid (first cartesian by default)>,\n *     coordSyses: all cartesians.\n *     gridModel: <grid component>\n *     xAxes: correspond to coordSyses on index\n *     yAxes: correspond to coordSyses on index\n * }\n * or {\n *     panelId: ...,\n *     coordSys: <geo coord sys>\n *     coordSyses: [<geo coord sys>]\n *     geoModel: <geo component>\n * }\n *\n *\n * [panelOpt]:\n *\n * Make from targetInfo. Input to BrushController.\n * {\n *     panelId: ...,\n *     rect: ...\n * }\n *\n *\n * [area]:\n *\n * Generated by BrushController or user input.\n * {\n *     panelId: Used to locate coordInfo directly. If user inpput, no panelId.\n *     brushType: determine how to convert to/from coord('rect' or 'polygon' or 'lineX/Y').\n *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n *     range: pixel range.\n *     coordRange: representitive coord range (the first one of coordRanges).\n *     coordRanges: <Array> coord ranges, used in multiple cartesian in one grid.\n * }\n */\n\n/**\n * @param {Object} option contains Index/Id/Name of xAxis/yAxis/geo/grid\n *        Each can be {number|Array.<number>}. like: {xAxisIndex: [3, 4]}\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} [opt]\n * @param {Array.<string>} [opt.include] include coordinate system types.\n */\n\nfunction BrushTargetManager(option, ecModel, opt) {\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n  var targetInfoList = this._targetInfoList = [];\n  var info = {};\n  var foundCpts = parseFinder(ecModel, option);\n  each(targetInfoBuilders, function (builder, type) {\n    if (!opt || !opt.include || indexOf(opt.include, type) >= 0) {\n      builder(foundCpts, targetInfoList, info);\n    }\n  });\n}\n\nvar proto = BrushTargetManager.prototype;\n\nproto.setOutputRanges = function (areas, ecModel) {\n  this.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n    (area.coordRanges || (area.coordRanges = [])).push(coordRange); // area.coordRange is the first of area.coordRanges\n\n    if (!area.coordRange) {\n      area.coordRange = coordRange; // In 'category' axis, coord to pixel is not reversible, so we can not\n      // rebuild range by coordRange accrately, which may bring trouble when\n      // brushing only one item. So we use __rangeOffset to rebuilding range\n      // by coordRange. And this it only used in brush component so it is no\n      // need to be adapted to coordRanges.\n\n      var result = coordConvert[area.brushType](0, coordSys, coordRange);\n      area.__rangeOffset = {\n        offset: diffProcessor[area.brushType](result.values, area.range, [1, 1]),\n        xyMinMax: result.xyMinMax\n      };\n    }\n  });\n};\n\nproto.matchOutputRanges = function (areas, ecModel, cb) {\n  each(areas, function (area) {\n    var targetInfo = this.findTargetInfo(area, ecModel);\n\n    if (targetInfo && targetInfo !== true) {\n      zrUtil.each(targetInfo.coordSyses, function (coordSys) {\n        var result = coordConvert[area.brushType](1, coordSys, area.range);\n        cb(area, result.values, coordSys, ecModel);\n      });\n    }\n  }, this);\n};\n\nproto.setInputRanges = function (areas, ecModel) {\n  each(areas, function (area) {\n    var targetInfo = this.findTargetInfo(area, ecModel);\n    area.range = area.range || []; // convert coordRange to global range and set panelId.\n\n    if (targetInfo && targetInfo !== true) {\n      area.panelId = targetInfo.panelId; // (1) area.range shoule always be calculate from coordRange but does\n      // not keep its original value, for the sake of the dataZoom scenario,\n      // where area.coordRange remains unchanged but area.range may be changed.\n      // (2) Only support converting one coordRange to pixel range in brush\n      // component. So do not consider `coordRanges`.\n      // (3) About __rangeOffset, see comment above.\n\n      var result = coordConvert[area.brushType](0, targetInfo.coordSys, area.coordRange);\n      var rangeOffset = area.__rangeOffset;\n      area.range = rangeOffset ? diffProcessor[area.brushType](result.values, rangeOffset.offset, getScales(result.xyMinMax, rangeOffset.xyMinMax)) : result.values;\n    }\n  }, this);\n};\n\nproto.makePanelOpts = function (api, getDefaultBrushType) {\n  return zrUtil.map(this._targetInfoList, function (targetInfo) {\n    var rect = targetInfo.getPanelRect();\n    return {\n      panelId: targetInfo.panelId,\n      defaultBrushType: getDefaultBrushType && getDefaultBrushType(targetInfo),\n      clipPath: brushHelper.makeRectPanelClipPath(rect),\n      isTargetByCursor: brushHelper.makeRectIsTargetByCursor(rect, api, targetInfo.coordSysModel),\n      getLinearBrushOtherExtent: brushHelper.makeLinearBrushOtherExtent(rect)\n    };\n  });\n};\n\nproto.controlSeries = function (area, seriesModel, ecModel) {\n  // Check whether area is bound in coord, and series do not belong to that coord.\n  // If do not do this check, some brush (like lineX) will controll all axes.\n  var targetInfo = this.findTargetInfo(area, ecModel);\n  return targetInfo === true || targetInfo && indexOf(targetInfo.coordSyses, seriesModel.coordinateSystem) >= 0;\n};\n/**\n * If return Object, a coord found.\n * If reutrn true, global found.\n * Otherwise nothing found.\n *\n * @param {Object} area\n * @param {Array} targetInfoList\n * @return {Object|boolean}\n */\n\n\nproto.findTargetInfo = function (area, ecModel) {\n  var targetInfoList = this._targetInfoList;\n  var foundCpts = parseFinder(ecModel, area);\n\n  for (var i = 0; i < targetInfoList.length; i++) {\n    var targetInfo = targetInfoList[i];\n    var areaPanelId = area.panelId;\n\n    if (areaPanelId) {\n      if (targetInfo.panelId === areaPanelId) {\n        return targetInfo;\n      }\n    } else {\n      for (var i = 0; i < targetInfoMatchers.length; i++) {\n        if (targetInfoMatchers[i](foundCpts, targetInfo)) {\n          return targetInfo;\n        }\n      }\n    }\n  }\n\n  return true;\n};\n\nfunction formatMinMax(minMax) {\n  minMax[0] > minMax[1] && minMax.reverse();\n  return minMax;\n}\n\nfunction parseFinder(ecModel, option) {\n  return modelUtil.parseFinder(ecModel, option, {\n    includeMainTypes: INCLUDE_FINDER_MAIN_TYPES\n  });\n}\n\nvar targetInfoBuilders = {\n  grid: function (foundCpts, targetInfoList) {\n    var xAxisModels = foundCpts.xAxisModels;\n    var yAxisModels = foundCpts.yAxisModels;\n    var gridModels = foundCpts.gridModels; // Remove duplicated.\n\n    var gridModelMap = zrUtil.createHashMap();\n    var xAxesHas = {};\n    var yAxesHas = {};\n\n    if (!xAxisModels && !yAxisModels && !gridModels) {\n      return;\n    }\n\n    each(xAxisModels, function (axisModel) {\n      var gridModel = axisModel.axis.grid.model;\n      gridModelMap.set(gridModel.id, gridModel);\n      xAxesHas[gridModel.id] = true;\n    });\n    each(yAxisModels, function (axisModel) {\n      var gridModel = axisModel.axis.grid.model;\n      gridModelMap.set(gridModel.id, gridModel);\n      yAxesHas[gridModel.id] = true;\n    });\n    each(gridModels, function (gridModel) {\n      gridModelMap.set(gridModel.id, gridModel);\n      xAxesHas[gridModel.id] = true;\n      yAxesHas[gridModel.id] = true;\n    });\n    gridModelMap.each(function (gridModel) {\n      var grid = gridModel.coordinateSystem;\n      var cartesians = [];\n      each(grid.getCartesians(), function (cartesian, index) {\n        if (indexOf(xAxisModels, cartesian.getAxis('x').model) >= 0 || indexOf(yAxisModels, cartesian.getAxis('y').model) >= 0) {\n          cartesians.push(cartesian);\n        }\n      });\n      targetInfoList.push({\n        panelId: 'grid--' + gridModel.id,\n        gridModel: gridModel,\n        coordSysModel: gridModel,\n        // Use the first one as the representitive coordSys.\n        coordSys: cartesians[0],\n        coordSyses: cartesians,\n        getPanelRect: panelRectBuilder.grid,\n        xAxisDeclared: xAxesHas[gridModel.id],\n        yAxisDeclared: yAxesHas[gridModel.id]\n      });\n    });\n  },\n  geo: function (foundCpts, targetInfoList) {\n    each(foundCpts.geoModels, function (geoModel) {\n      var coordSys = geoModel.coordinateSystem;\n      targetInfoList.push({\n        panelId: 'geo--' + geoModel.id,\n        geoModel: geoModel,\n        coordSysModel: geoModel,\n        coordSys: coordSys,\n        coordSyses: [coordSys],\n        getPanelRect: panelRectBuilder.geo\n      });\n    });\n  }\n};\nvar targetInfoMatchers = [// grid\nfunction (foundCpts, targetInfo) {\n  var xAxisModel = foundCpts.xAxisModel;\n  var yAxisModel = foundCpts.yAxisModel;\n  var gridModel = foundCpts.gridModel;\n  !gridModel && xAxisModel && (gridModel = xAxisModel.axis.grid.model);\n  !gridModel && yAxisModel && (gridModel = yAxisModel.axis.grid.model);\n  return gridModel && gridModel === targetInfo.gridModel;\n}, // geo\nfunction (foundCpts, targetInfo) {\n  var geoModel = foundCpts.geoModel;\n  return geoModel && geoModel === targetInfo.geoModel;\n}];\nvar panelRectBuilder = {\n  grid: function () {\n    // grid is not Transformable.\n    return this.coordSys.grid.getRect().clone();\n  },\n  geo: function () {\n    var coordSys = this.coordSys;\n    var rect = coordSys.getBoundingRect().clone(); // geo roam and zoom transform\n\n    rect.applyTransform(graphic.getTransform(coordSys));\n    return rect;\n  }\n};\nvar coordConvert = {\n  lineX: curry(axisConvert, 0),\n  lineY: curry(axisConvert, 1),\n  rect: function (to, coordSys, rangeOrCoordRange) {\n    var xminymin = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][0], rangeOrCoordRange[1][0]]);\n    var xmaxymax = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][1], rangeOrCoordRange[1][1]]);\n    var values = [formatMinMax([xminymin[0], xmaxymax[0]]), formatMinMax([xminymin[1], xmaxymax[1]])];\n    return {\n      values: values,\n      xyMinMax: values\n    };\n  },\n  polygon: function (to, coordSys, rangeOrCoordRange) {\n    var xyMinMax = [[Infinity, -Infinity], [Infinity, -Infinity]];\n    var values = zrUtil.map(rangeOrCoordRange, function (item) {\n      var p = coordSys[COORD_CONVERTS[to]](item);\n      xyMinMax[0][0] = Math.min(xyMinMax[0][0], p[0]);\n      xyMinMax[1][0] = Math.min(xyMinMax[1][0], p[1]);\n      xyMinMax[0][1] = Math.max(xyMinMax[0][1], p[0]);\n      xyMinMax[1][1] = Math.max(xyMinMax[1][1], p[1]);\n      return p;\n    });\n    return {\n      values: values,\n      xyMinMax: xyMinMax\n    };\n  }\n};\n\nfunction axisConvert(axisNameIndex, to, coordSys, rangeOrCoordRange) {\n  var axis = coordSys.getAxis(['x', 'y'][axisNameIndex]);\n  var values = formatMinMax(zrUtil.map([0, 1], function (i) {\n    return to ? axis.coordToData(axis.toLocalCoord(rangeOrCoordRange[i])) : axis.toGlobalCoord(axis.dataToCoord(rangeOrCoordRange[i]));\n  }));\n  var xyMinMax = [];\n  xyMinMax[axisNameIndex] = values;\n  xyMinMax[1 - axisNameIndex] = [NaN, NaN];\n  return {\n    values: values,\n    xyMinMax: xyMinMax\n  };\n}\n\nvar diffProcessor = {\n  lineX: curry(axisDiffProcessor, 0),\n  lineY: curry(axisDiffProcessor, 1),\n  rect: function (values, refer, scales) {\n    return [[values[0][0] - scales[0] * refer[0][0], values[0][1] - scales[0] * refer[0][1]], [values[1][0] - scales[1] * refer[1][0], values[1][1] - scales[1] * refer[1][1]]];\n  },\n  polygon: function (values, refer, scales) {\n    return zrUtil.map(values, function (item, idx) {\n      return [item[0] - scales[0] * refer[idx][0], item[1] - scales[1] * refer[idx][1]];\n    });\n  }\n};\n\nfunction axisDiffProcessor(axisNameIndex, values, refer, scales) {\n  return [values[0] - scales[axisNameIndex] * refer[0], values[1] - scales[axisNameIndex] * refer[1]];\n} // We have to process scale caused by dataZoom manually,\n// although it might be not accurate.\n\n\nfunction getScales(xyMinMaxCurr, xyMinMaxOrigin) {\n  var sizeCurr = getSize(xyMinMaxCurr);\n  var sizeOrigin = getSize(xyMinMaxOrigin);\n  var scales = [sizeCurr[0] / sizeOrigin[0], sizeCurr[1] / sizeOrigin[1]];\n  isNaN(scales[0]) && (scales[0] = 1);\n  isNaN(scales[1]) && (scales[1] = 1);\n  return scales;\n}\n\nfunction getSize(xyMinMax) {\n  return xyMinMax ? [xyMinMax[0][1] - xyMinMax[0][0], xyMinMax[1][1] - xyMinMax[1][0]] : [NaN, NaN];\n}\n\nvar _default = BrushTargetManager;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/BrushTargetManager.js\n// module id = 1084\n// module chunks = 0 1 2","var BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _cursorHelper = require(\"./cursorHelper\");\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar graphicUtil = require(\"../../util/graphic\");\n\nfunction makeRectPanelClipPath(rect) {\n  rect = normalizeRect(rect);\n  return function (localPoints, transform) {\n    return graphicUtil.clipPointsByRect(localPoints, rect);\n  };\n}\n\nfunction makeLinearBrushOtherExtent(rect, specifiedXYIndex) {\n  rect = normalizeRect(rect);\n  return function (xyIndex) {\n    var idx = specifiedXYIndex != null ? specifiedXYIndex : xyIndex;\n    var brushWidth = idx ? rect.width : rect.height;\n    var base = idx ? rect.x : rect.y;\n    return [base, base + (brushWidth || 0)];\n  };\n}\n\nfunction makeRectIsTargetByCursor(rect, api, targetModel) {\n  rect = normalizeRect(rect);\n  return function (e, localCursorPoint, transform) {\n    return rect.contain(localCursorPoint[0], localCursorPoint[1]) && !onIrrelevantElement(e, api, targetModel);\n  };\n} // Consider width/height is negative.\n\n\nfunction normalizeRect(rect) {\n  return BoundingRect.create(rect);\n}\n\nexports.makeRectPanelClipPath = makeRectPanelClipPath;\nexports.makeLinearBrushOtherExtent = makeLinearBrushOtherExtent;\nexports.makeRectIsTargetByCursor = makeRectIsTargetByCursor;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/brushHelper.js\n// module id = 1085\n// module chunks = 0 1 2","var Component = require(\"../../model/Component\");\n\nComponent.registerSubTypeDefaulter('dataZoom', function () {\n  // Default 'slider' when no type specified.\n  return 'slider';\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/typeDefaulter.js\n// module id = 1086\n// module chunks = 0 1 2","var echarts = require(\"../../echarts\");\n\necharts.registerProcessor(function (ecModel, api) {\n  ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n    // We calculate window and reset axis here but not in model\n    // init stage and not after action dispatch handler, because\n    // reset should be called after seriesData.restoreData.\n    dataZoomModel.eachTargetAxis(resetSingleAxis); // Caution: data zoom filtering is order sensitive when using\n    // percent range and no min/max/scale set on axis.\n    // For example, we have dataZoom definition:\n    // [\n    //      {xAxisIndex: 0, start: 30, end: 70},\n    //      {yAxisIndex: 0, start: 20, end: 80}\n    // ]\n    // In this case, [20, 80] of y-dataZoom should be based on data\n    // that have filtered by x-dataZoom using range of [30, 70],\n    // but should not be based on full raw data. Thus sliding\n    // x-dataZoom will change both ranges of xAxis and yAxis,\n    // while sliding y-dataZoom will only change the range of yAxis.\n    // So we should filter x-axis after reset x-axis immediately,\n    // and then reset y-axis and filter y-axis.\n\n    dataZoomModel.eachTargetAxis(filterSingleAxis);\n  });\n  ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n    // Fullfill all of the range props so that user\n    // is able to get them from chart.getOption().\n    var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n    var percentRange = axisProxy.getDataPercentWindow();\n    var valueRange = axisProxy.getDataValueWindow();\n    dataZoomModel.setRawRange({\n      start: percentRange[0],\n      end: percentRange[1],\n      startValue: valueRange[0],\n      endValue: valueRange[1]\n    }, true);\n  });\n});\n\nfunction resetSingleAxis(dimNames, axisIndex, dataZoomModel) {\n  dataZoomModel.getAxisProxy(dimNames.name, axisIndex).reset(dataZoomModel);\n}\n\nfunction filterSingleAxis(dimNames, axisIndex, dataZoomModel) {\n  dataZoomModel.getAxisProxy(dimNames.name, axisIndex).filterData(dataZoomModel);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/dataZoomProcessor.js\n// module id = 1087\n// module chunks = 0 1 2","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar helper = require(\"./helper\");\n\necharts.registerAction('dataZoom', function (payload, ecModel) {\n  var linkedNodesFinder = helper.createLinkedNodesFinder(zrUtil.bind(ecModel.eachComponent, ecModel, 'dataZoom'), helper.eachAxisDim, function (model, dimNames) {\n    return model.get(dimNames.axisIndex);\n  });\n  var effectedModels = [];\n  ecModel.eachComponent({\n    mainType: 'dataZoom',\n    query: payload\n  }, function (model, index) {\n    effectedModels.push.apply(effectedModels, linkedNodesFinder(model).nodes);\n  });\n  zrUtil.each(effectedModels, function (dataZoomModel, index) {\n    dataZoomModel.setRawRange({\n      start: payload.start,\n      end: payload.end,\n      startValue: payload.startValue,\n      endValue: payload.endValue\n    });\n  });\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/dataZoomAction.js\n// module id = 1088\n// module chunks = 0 1 2","var util = require(\"./core/util\");\n\nvar vec2 = require(\"./core/vector\");\n\nvar Draggable = require(\"./mixin/Draggable\");\n\nvar Eventful = require(\"./mixin/Eventful\");\n\n/**\n * Handler\n * @module zrender/Handler\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (shenyi.914@gmail.com)\n */\nvar SILENT = 'silent';\n\nfunction makeEventPacket(eveType, targetInfo, event) {\n  return {\n    type: eveType,\n    event: event,\n    // target can only be an element that is not silent.\n    target: targetInfo.target,\n    // topTarget can be a silent element.\n    topTarget: targetInfo.topTarget,\n    cancelBubble: false,\n    offsetX: event.zrX,\n    offsetY: event.zrY,\n    gestureEvent: event.gestureEvent,\n    pinchX: event.pinchX,\n    pinchY: event.pinchY,\n    pinchScale: event.pinchScale,\n    wheelDelta: event.zrDelta,\n    zrByTouch: event.zrByTouch,\n    which: event.which\n  };\n}\n\nfunction EmptyProxy() {}\n\nEmptyProxy.prototype.dispose = function () {};\n\nvar handlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\n/**\n * @alias module:zrender/Handler\n * @constructor\n * @extends module:zrender/mixin/Eventful\n * @param {module:zrender/Storage} storage Storage instance.\n * @param {module:zrender/Painter} painter Painter instance.\n * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n */\n\nvar Handler = function (storage, painter, proxy, painterRoot) {\n  Eventful.call(this);\n  this.storage = storage;\n  this.painter = painter;\n  this.painterRoot = painterRoot;\n  proxy = proxy || new EmptyProxy();\n  /**\n   * Proxy of event. can be Dom, WebGLSurface, etc.\n   */\n\n  this.proxy = proxy; // Attach handler\n\n  proxy.handler = this;\n  /**\n   * {target, topTarget, x, y}\n   * @private\n   * @type {Object}\n   */\n\n  this._hovered = {};\n  /**\n   * @private\n   * @type {Date}\n   */\n\n  this._lastTouchMoment;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastX;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastY;\n  Draggable.call(this);\n  util.each(handlerNames, function (name) {\n    proxy.on && proxy.on(name, this[name], this);\n  }, this);\n};\n\nHandler.prototype = {\n  constructor: Handler,\n  mousemove: function (event) {\n    var x = event.zrX;\n    var y = event.zrY;\n    var lastHovered = this._hovered;\n    var lastHoveredTarget = lastHovered.target; // If lastHoveredTarget is removed from zr (detected by '__zr') by some API call\n    // (like 'setOption' or 'dispatchAction') in event handlers, we should find\n    // lastHovered again here. Otherwise 'mouseout' can not be triggered normally.\n    // See #6198.\n\n    if (lastHoveredTarget && !lastHoveredTarget.__zr) {\n      lastHovered = this.findHover(lastHovered.x, lastHovered.y);\n      lastHoveredTarget = lastHovered.target;\n    }\n\n    var hovered = this._hovered = this.findHover(x, y);\n    var hoveredTarget = hovered.target;\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default'); // Mouse out on previous hovered element\n\n    if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(lastHovered, 'mouseout', event);\n    } // Mouse moving on one element\n\n\n    this.dispatchToElement(hovered, 'mousemove', event); // Mouse over on a new element\n\n    if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(hovered, 'mouseover', event);\n    }\n  },\n  mouseout: function (event) {\n    this.dispatchToElement(this._hovered, 'mouseout', event); // There might be some doms created by upper layer application\n    // at the same level of painter.getViewportRoot() (e.g., tooltip\n    // dom created by echarts), where 'globalout' event should not\n    // be triggered when mouse enters these doms. (But 'mouseout'\n    // should be triggered at the original hovered element as usual).\n\n    var element = event.toElement || event.relatedTarget;\n    var innerDom;\n\n    do {\n      element = element && element.parentNode;\n    } while (element && element.nodeType != 9 && !(innerDom = element === this.painterRoot));\n\n    !innerDom && this.trigger('globalout', {\n      event: event\n    });\n  },\n\n  /**\n   * Resize\n   */\n  resize: function (event) {\n    this._hovered = {};\n  },\n\n  /**\n   * Dispatch event\n   * @param {string} eventName\n   * @param {event=} eventArgs\n   */\n  dispatch: function (eventName, eventArgs) {\n    var handler = this[eventName];\n    handler && handler.call(this, eventArgs);\n  },\n\n  /**\n   * Dispose\n   */\n  dispose: function () {\n    this.proxy.dispose();\n    this.storage = this.proxy = this.painter = null;\n  },\n\n  /**\n   * 设置默认的cursor style\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(cursorStyle);\n  },\n\n  /**\n   * 事件分发代理\n   *\n   * @private\n   * @param {Object} targetInfo {target, topTarget} 目标图形元素\n   * @param {string} eventName 事件名称\n   * @param {Object} event 事件对象\n   */\n  dispatchToElement: function (targetInfo, eventName, event) {\n    targetInfo = targetInfo || {};\n    var el = targetInfo.target;\n\n    if (el && el.silent) {\n      return;\n    }\n\n    var eventHandler = 'on' + eventName;\n    var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n    while (el) {\n      el[eventHandler] && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n      el.trigger(eventName, eventPacket);\n      el = el.parent;\n\n      if (eventPacket.cancelBubble) {\n        break;\n      }\n    }\n\n    if (!eventPacket.cancelBubble) {\n      // 冒泡到顶级 zrender 对象\n      this.trigger(eventName, eventPacket); // 分发事件到用户自定义层\n      // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n\n      this.painter && this.painter.eachOtherLayer(function (layer) {\n        if (typeof layer[eventHandler] == 'function') {\n          layer[eventHandler].call(layer, eventPacket);\n        }\n\n        if (layer.trigger) {\n          layer.trigger(eventName, eventPacket);\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   * @param {number} x\n   * @param {number} y\n   * @param {module:zrender/graphic/Displayable} exclude\n   * @return {model:zrender/Element}\n   * @method\n   */\n  findHover: function (x, y, exclude) {\n    var list = this.storage.getDisplayList();\n    var out = {\n      x: x,\n      y: y\n    };\n\n    for (var i = list.length - 1; i >= 0; i--) {\n      var hoverCheckResult;\n\n      if (list[i] !== exclude // getDisplayList may include ignored item in VML mode\n      && !list[i].ignore && (hoverCheckResult = isHover(list[i], x, y))) {\n        !out.topTarget && (out.topTarget = list[i]);\n\n        if (hoverCheckResult !== SILENT) {\n          out.target = list[i];\n          break;\n        }\n      }\n    }\n\n    return out;\n  }\n}; // Common handlers\n\nutil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  Handler.prototype[name] = function (event) {\n    // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n    var hovered = this.findHover(event.zrX, event.zrY);\n    var hoveredTarget = hovered.target;\n\n    if (name === 'mousedown') {\n      this._downEl = hoveredTarget;\n      this._downPoint = [event.zrX, event.zrY]; // In case click triggered before mouseup\n\n      this._upEl = hoveredTarget;\n    } else if (name === 'mosueup') {\n      this._upEl = hoveredTarget;\n    } else if (name === 'click') {\n      if (this._downEl !== this._upEl // Original click event is triggered on the whole canvas element,\n      // including the case that `mousedown` - `mousemove` - `mouseup`,\n      // which should be filtered, otherwise it will bring trouble to\n      // pan and zoom.\n      || !this._downPoint // Arbitrary value\n      || vec2.dist(this._downPoint, [event.zrX, event.zrY]) > 4) {\n        return;\n      }\n\n      this._downPoint = null;\n    }\n\n    this.dispatchToElement(hovered, name, event);\n  };\n});\n\nfunction isHover(displayable, x, y) {\n  if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n    var el = displayable;\n    var isSilent;\n\n    while (el) {\n      // If clipped by ancestor.\n      // FIXME: If clipPath has neither stroke nor fill,\n      // el.clipPath.contain(x, y) will always return false.\n      if (el.clipPath && !el.clipPath.contain(x, y)) {\n        return false;\n      }\n\n      if (el.silent) {\n        isSilent = true;\n      }\n\n      el = el.parent;\n    }\n\n    return isSilent ? SILENT : true;\n  }\n\n  return false;\n}\n\nutil.mixin(Handler, Eventful);\nutil.mixin(Handler, Draggable);\nvar _default = Handler;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/Handler.js\n// module id = 1090\n// module chunks = 0 1 2","// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\nfunction Draggable() {\n  this.on('mousedown', this._dragStart, this);\n  this.on('mousemove', this._drag, this);\n  this.on('mouseup', this._dragEnd, this);\n  this.on('globalout', this._dragEnd, this); // this._dropTarget = null;\n  // this._draggingTarget = null;\n  // this._x = 0;\n  // this._y = 0;\n}\n\nDraggable.prototype = {\n  constructor: Draggable,\n  _dragStart: function (e) {\n    var draggingTarget = e.target;\n\n    if (draggingTarget && draggingTarget.draggable) {\n      this._draggingTarget = draggingTarget;\n      draggingTarget.dragging = true;\n      this._x = e.offsetX;\n      this._y = e.offsetY;\n      this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n    }\n  },\n  _drag: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      var x = e.offsetX;\n      var y = e.offsetY;\n      var dx = x - this._x;\n      var dy = y - this._y;\n      this._x = x;\n      this._y = y;\n      draggingTarget.drift(dx, dy, e);\n      this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n      var dropTarget = this.findHover(x, y, draggingTarget).target;\n      var lastDropTarget = this._dropTarget;\n      this._dropTarget = dropTarget;\n\n      if (draggingTarget !== dropTarget) {\n        if (lastDropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n        }\n\n        if (dropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n        }\n      }\n    }\n  },\n  _dragEnd: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      draggingTarget.dragging = false;\n    }\n\n    this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n    if (this._dropTarget) {\n      this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n    }\n\n    this._draggingTarget = null;\n    this._dropTarget = null;\n  }\n};\n\nfunction param(target, e) {\n  return {\n    target: target,\n    topTarget: e && e.topTarget\n  };\n}\n\nvar _default = Draggable;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/mixin/Draggable.js\n// module id = 1091\n// module chunks = 0 1 2","var util = require(\"./core/util\");\n\nvar env = require(\"./core/env\");\n\nvar Group = require(\"./container/Group\");\n\nvar timsort = require(\"./core/timsort\");\n\n/**\n * Storage内容仓库模块\n * @module zrender/Storage\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @author errorrik (errorrik@gmail.com)\n * @author pissang (https://github.com/pissang/)\n */\n// Use timsort because in most case elements are partially sorted\n// https://jsfiddle.net/pissang/jr4x7mdm/8/\nfunction shapeCompareFunc(a, b) {\n  if (a.zlevel === b.zlevel) {\n    if (a.z === b.z) {\n      // if (a.z2 === b.z2) {\n      //     // FIXME Slow has renderidx compare\n      //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n      //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n      //     return a.__renderidx - b.__renderidx;\n      // }\n      return a.z2 - b.z2;\n    }\n\n    return a.z - b.z;\n  }\n\n  return a.zlevel - b.zlevel;\n}\n/**\n * 内容仓库 (M)\n * @alias module:zrender/Storage\n * @constructor\n */\n\n\nvar Storage = function () {\n  // jshint ignore:line\n  this._roots = [];\n  this._displayList = [];\n  this._displayListLen = 0;\n};\n\nStorage.prototype = {\n  constructor: Storage,\n\n  /**\n   * @param  {Function} cb\n   *\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._roots.length; i++) {\n      this._roots[i].traverse(cb, context);\n    }\n  },\n\n  /**\n   * 返回所有图形的绘制队列\n   * @param {boolean} [update=false] 是否在返回前更新该数组\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n   *\n   * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n   * @return {Array.<module:zrender/graphic/Displayable>}\n   */\n  getDisplayList: function (update, includeIgnore) {\n    includeIgnore = includeIgnore || false;\n\n    if (update) {\n      this.updateDisplayList(includeIgnore);\n    }\n\n    return this._displayList;\n  },\n\n  /**\n   * 更新图形的绘制队列。\n   * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n   * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n   */\n  updateDisplayList: function (includeIgnore) {\n    this._displayListLen = 0;\n    var roots = this._roots;\n    var displayList = this._displayList;\n\n    for (var i = 0, len = roots.length; i < len; i++) {\n      this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n    }\n\n    displayList.length = this._displayListLen; // for (var i = 0, len = displayList.length; i < len; i++) {\n    //     displayList[i].__renderidx = i;\n    // }\n    // displayList.sort(shapeCompareFunc);\n\n    env.canvasSupported && timsort(displayList, shapeCompareFunc);\n  },\n  _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n    if (el.ignore && !includeIgnore) {\n      return;\n    }\n\n    el.beforeUpdate();\n\n    if (el.__dirty) {\n      el.update();\n    }\n\n    el.afterUpdate();\n    var userSetClipPath = el.clipPath;\n\n    if (userSetClipPath) {\n      // FIXME 效率影响\n      if (clipPaths) {\n        clipPaths = clipPaths.slice();\n      } else {\n        clipPaths = [];\n      }\n\n      var currentClipPath = userSetClipPath;\n      var parentClipPath = el; // Recursively add clip path\n\n      while (currentClipPath) {\n        // clipPath 的变换是基于使用这个 clipPath 的元素\n        currentClipPath.parent = parentClipPath;\n        currentClipPath.updateTransform();\n        clipPaths.push(currentClipPath);\n        parentClipPath = currentClipPath;\n        currentClipPath = currentClipPath.clipPath;\n      }\n    }\n\n    if (el.isGroup) {\n      var children = el._children;\n\n      for (var i = 0; i < children.length; i++) {\n        var child = children[i]; // Force to mark as dirty if group is dirty\n        // FIXME __dirtyPath ?\n\n        if (el.__dirty) {\n          child.__dirty = true;\n        }\n\n        this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n      } // Mark group clean here\n\n\n      el.__dirty = false;\n    } else {\n      el.__clipPaths = clipPaths;\n      this._displayList[this._displayListLen++] = el;\n    }\n  },\n\n  /**\n   * 添加图形(Shape)或者组(Group)到根节点\n   * @param {module:zrender/Element} el\n   */\n  addRoot: function (el) {\n    if (el.__storage === this) {\n      return;\n    }\n\n    if (el instanceof Group) {\n      el.addChildrenToStorage(this);\n    }\n\n    this.addToStorage(el);\n\n    this._roots.push(el);\n  },\n\n  /**\n   * 删除指定的图形(Shape)或者组(Group)\n   * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n   */\n  delRoot: function (el) {\n    if (el == null) {\n      // 不指定el清空\n      for (var i = 0; i < this._roots.length; i++) {\n        var root = this._roots[i];\n\n        if (root instanceof Group) {\n          root.delChildrenFromStorage(this);\n        }\n      }\n\n      this._roots = [];\n      this._displayList = [];\n      this._displayListLen = 0;\n      return;\n    }\n\n    if (el instanceof Array) {\n      for (var i = 0, l = el.length; i < l; i++) {\n        this.delRoot(el[i]);\n      }\n\n      return;\n    }\n\n    var idx = util.indexOf(this._roots, el);\n\n    if (idx >= 0) {\n      this.delFromStorage(el);\n\n      this._roots.splice(idx, 1);\n\n      if (el instanceof Group) {\n        el.delChildrenFromStorage(this);\n      }\n    }\n  },\n  addToStorage: function (el) {\n    el.__storage = this;\n    el.dirty(false);\n    return this;\n  },\n  delFromStorage: function (el) {\n    if (el) {\n      el.__storage = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * 清空并且释放Storage\n   */\n  dispose: function () {\n    this._renderList = this._roots = null;\n  },\n  displayableSortFunc: shapeCompareFunc\n};\nvar _default = Storage;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/Storage.js\n// module id = 1092\n// module chunks = 0 1 2","var Animator = require(\"../animation/Animator\");\n\nvar log = require(\"../core/log\");\n\nvar _util = require(\"../core/util\");\n\nvar isString = _util.isString;\nvar isFunction = _util.isFunction;\nvar isObject = _util.isObject;\nvar isArrayLike = _util.isArrayLike;\nvar indexOf = _util.indexOf;\n\n/**\n * @alias modue:zrender/mixin/Animatable\n * @constructor\n */\nvar Animatable = function () {\n  /**\n   * @type {Array.<module:zrender/animation/Animator>}\n   * @readOnly\n   */\n  this.animators = [];\n};\n\nAnimatable.prototype = {\n  constructor: Animatable,\n\n  /**\n   * 动画\n   *\n   * @param {string} path The path to fetch value from object, like 'a.b.c'.\n   * @param {boolean} [loop] Whether to loop animation.\n   * @return {module:zrender/animation/Animator}\n   * @example:\n   *     el.animate('style', false)\n   *         .when(1000, {x: 10} )\n   *         .done(function(){ // Animation done })\n   *         .start()\n   */\n  animate: function (path, loop) {\n    var target;\n    var animatingShape = false;\n    var el = this;\n    var zr = this.__zr;\n\n    if (path) {\n      var pathSplitted = path.split('.');\n      var prop = el; // If animating shape\n\n      animatingShape = pathSplitted[0] === 'shape';\n\n      for (var i = 0, l = pathSplitted.length; i < l; i++) {\n        if (!prop) {\n          continue;\n        }\n\n        prop = prop[pathSplitted[i]];\n      }\n\n      if (prop) {\n        target = prop;\n      }\n    } else {\n      target = el;\n    }\n\n    if (!target) {\n      log('Property \"' + path + '\" is not existed in element ' + el.id);\n      return;\n    }\n\n    var animators = el.animators;\n    var animator = new Animator(target, loop);\n    animator.during(function (target) {\n      el.dirty(animatingShape);\n    }).done(function () {\n      // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n      animators.splice(indexOf(animators, animator), 1);\n    });\n    animators.push(animator); // If animate after added to the zrender\n\n    if (zr) {\n      zr.animation.addAnimator(animator);\n    }\n\n    return animator;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stopAnimation: function (forwardToLast) {\n    var animators = this.animators;\n    var len = animators.length;\n\n    for (var i = 0; i < len; i++) {\n      animators[i].stop(forwardToLast);\n    }\n\n    animators.length = 0;\n    return this;\n  },\n\n  /**\n   * Caution: this method will stop previous animation.\n   * So do not use this method to one element twice before\n   * animation starts, unless you know what you are doing.\n   * @param {Object} target\n   * @param {number} [time=500] Time in ms\n   * @param {string} [easing='linear']\n   * @param {number} [delay=0]\n   * @param {Function} [callback]\n   * @param {Function} [forceAnimate] Prevent stop animation and callback\n   *        immediently when target values are the same as current values.\n   *\n   * @example\n   *  // Animate position\n   *  el.animateTo({\n   *      position: [10, 10]\n   *  }, function () { // done })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n   *  el.animateTo({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100, 'cubicOut', function () { // done })\n   */\n  // TODO Return animation key\n  animateTo: function (target, time, delay, easing, callback, forceAnimate) {\n    // animateTo(target, time, easing, callback);\n    if (isString(delay)) {\n      callback = easing;\n      easing = delay;\n      delay = 0;\n    } // animateTo(target, time, delay, callback);\n    else if (isFunction(easing)) {\n        callback = easing;\n        easing = 'linear';\n        delay = 0;\n      } // animateTo(target, time, callback);\n      else if (isFunction(delay)) {\n          callback = delay;\n          delay = 0;\n        } // animateTo(target, callback)\n        else if (isFunction(time)) {\n            callback = time;\n            time = 500;\n          } // animateTo(target)\n          else if (!time) {\n              time = 500;\n            } // Stop all previous animations\n\n\n    this.stopAnimation();\n\n    this._animateToShallow('', this, target, time, delay); // Animators may be removed immediately after start\n    // if there is nothing to animate\n\n\n    var animators = this.animators.slice();\n    var count = animators.length;\n\n    function done() {\n      count--;\n\n      if (!count) {\n        callback && callback();\n      }\n    } // No animators. This should be checked before animators[i].start(),\n    // because 'done' may be executed immediately if no need to animate.\n\n\n    if (!count) {\n      callback && callback();\n    } // Start after all animators created\n    // Incase any animator is done immediately when all animation properties are not changed\n\n\n    for (var i = 0; i < animators.length; i++) {\n      animators[i].done(done).start(easing, forceAnimate);\n    }\n  },\n\n  /**\n   * @private\n   * @param {string} path=''\n   * @param {Object} source=this\n   * @param {Object} target\n   * @param {number} [time=500]\n   * @param {number} [delay=0]\n   *\n   * @example\n   *  // Animate position\n   *  el._animateToShallow({\n   *      position: [10, 10]\n   *  })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms\n   *  el._animateToShallow({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100)\n   */\n  _animateToShallow: function (path, source, target, time, delay) {\n    var objShallow = {};\n    var propertyCount = 0;\n\n    for (var name in target) {\n      if (!target.hasOwnProperty(name)) {\n        continue;\n      }\n\n      if (source[name] != null) {\n        if (isObject(target[name]) && !isArrayLike(target[name])) {\n          this._animateToShallow(path ? path + '.' + name : name, source[name], target[name], time, delay);\n        } else {\n          objShallow[name] = target[name];\n          propertyCount++;\n        }\n      } else if (target[name] != null) {\n        // Attr directly if not has property\n        // FIXME, if some property not needed for element ?\n        if (!path) {\n          this.attr(name, target[name]);\n        } else {\n          // Shape or style\n          var props = {};\n          props[path] = {};\n          props[path][name] = target[name];\n          this.attr(props);\n        }\n      }\n    }\n\n    if (propertyCount > 0) {\n      this.animate(path, false).when(time == null ? 500 : time, objShallow).delay(delay || 0);\n    }\n\n    return this;\n  }\n};\nvar _default = Animatable;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/mixin/Animatable.js\n// module id = 1093\n// module chunks = 0 1 2","var easingFuncs = require(\"./easing\");\n\n/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\nfunction Clip(options) {\n  this._target = options.target; // 生命周期\n\n  this._life = options.life || 1000; // 延时\n\n  this._delay = options.delay || 0; // 开始时间\n  // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n\n  this._initialized = false; // 是否循环\n\n  this.loop = options.loop == null ? false : options.loop;\n  this.gap = options.gap || 0;\n  this.easing = options.easing || 'Linear';\n  this.onframe = options.onframe;\n  this.ondestroy = options.ondestroy;\n  this.onrestart = options.onrestart;\n  this._pausedTime = 0;\n  this._paused = false;\n}\n\nClip.prototype = {\n  constructor: Clip,\n  step: function (globalTime, deltaTime) {\n    // Set startTime on first step, or _startTime may has milleseconds different between clips\n    // PENDING\n    if (!this._initialized) {\n      this._startTime = globalTime + this._delay;\n      this._initialized = true;\n    }\n\n    if (this._paused) {\n      this._pausedTime += deltaTime;\n      return;\n    }\n\n    var percent = (globalTime - this._startTime - this._pausedTime) / this._life; // 还没开始\n\n    if (percent < 0) {\n      return;\n    }\n\n    percent = Math.min(percent, 1);\n    var easing = this.easing;\n    var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n    var schedule = typeof easingFunc === 'function' ? easingFunc(percent) : percent;\n    this.fire('frame', schedule); // 结束\n\n    if (percent == 1) {\n      if (this.loop) {\n        this.restart(globalTime); // 重新开始周期\n        // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n\n        return 'restart';\n      } // 动画完成将这个控制器标识为待删除\n      // 在Animation.update中进行批量删除\n\n\n      this._needsRemove = true;\n      return 'destroy';\n    }\n\n    return null;\n  },\n  restart: function (globalTime) {\n    var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n    this._startTime = globalTime - remainder + this.gap;\n    this._pausedTime = 0;\n    this._needsRemove = false;\n  },\n  fire: function (eventType, arg) {\n    eventType = 'on' + eventType;\n\n    if (this[eventType]) {\n      this[eventType](this._target, arg);\n    }\n  },\n  pause: function () {\n    this._paused = true;\n  },\n  resume: function () {\n    this._paused = false;\n  }\n};\nvar _default = Clip;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/animation/Clip.js\n// module id = 1094\n// module chunks = 0 1 2","/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\nvar easing = {\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  linear: function (k) {\n    return k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticIn: function (k) {\n    return k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticOut: function (k) {\n    return k * (2 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k;\n    }\n\n    return -0.5 * (--k * (k - 2) - 1);\n  },\n  // 三次方的缓动（t^3）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicIn: function (k) {\n    return k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicOut: function (k) {\n    return --k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k + 2);\n  },\n  // 四次方的缓动（t^4）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticIn: function (k) {\n    return k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticOut: function (k) {\n    return 1 - --k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k;\n    }\n\n    return -0.5 * ((k -= 2) * k * k * k - 2);\n  },\n  // 五次方的缓动（t^5）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticIn: function (k) {\n    return k * k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticOut: function (k) {\n    return --k * k * k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k * k * k + 2);\n  },\n  // 正弦曲线的缓动（sin(t)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalIn: function (k) {\n    return 1 - Math.cos(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalOut: function (k) {\n    return Math.sin(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalInOut: function (k) {\n    return 0.5 * (1 - Math.cos(Math.PI * k));\n  },\n  // 指数曲线的缓动（2^t）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialIn: function (k) {\n    return k === 0 ? 0 : Math.pow(1024, k - 1);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialOut: function (k) {\n    return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialInOut: function (k) {\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if ((k *= 2) < 1) {\n      return 0.5 * Math.pow(1024, k - 1);\n    }\n\n    return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n  },\n  // 圆形曲线的缓动（sqrt(1-t^2)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularIn: function (k) {\n    return 1 - Math.sqrt(1 - k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularOut: function (k) {\n    return Math.sqrt(1 - --k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return -0.5 * (Math.sqrt(1 - k * k) - 1);\n    }\n\n    return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n  },\n  // 创建类似于弹簧在停止前来回振荡的动画\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticIn: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return -(a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return a * Math.pow(2, -10 * k) * Math.sin((k - s) * (2 * Math.PI) / p) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticInOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    if ((k *= 2) < 1) {\n      return -0.5 * (a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n    }\n\n    return a * Math.pow(2, -10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n  },\n  // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backIn: function (k) {\n    var s = 1.70158;\n    return k * k * ((s + 1) * k - s);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backOut: function (k) {\n    var s = 1.70158;\n    return --k * k * ((s + 1) * k + s) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backInOut: function (k) {\n    var s = 1.70158 * 1.525;\n\n    if ((k *= 2) < 1) {\n      return 0.5 * (k * k * ((s + 1) * k - s));\n    }\n\n    return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n  },\n  // 创建弹跳效果\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceIn: function (k) {\n    return 1 - easing.bounceOut(1 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceOut: function (k) {\n    if (k < 1 / 2.75) {\n      return 7.5625 * k * k;\n    } else if (k < 2 / 2.75) {\n      return 7.5625 * (k -= 1.5 / 2.75) * k + 0.75;\n    } else if (k < 2.5 / 2.75) {\n      return 7.5625 * (k -= 2.25 / 2.75) * k + 0.9375;\n    } else {\n      return 7.5625 * (k -= 2.625 / 2.75) * k + 0.984375;\n    }\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceInOut: function (k) {\n    if (k < 0.5) {\n      return easing.bounceIn(k * 2) * 0.5;\n    }\n\n    return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n  }\n};\nvar _default = easing;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/animation/easing.js\n// module id = 1095\n// module chunks = 0 1 2","var _config = require(\"./config\");\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar util = require(\"./core/util\");\n\nvar log = require(\"./core/log\");\n\nvar BoundingRect = require(\"./core/BoundingRect\");\n\nvar timsort = require(\"./core/timsort\");\n\nvar Layer = require(\"./Layer\");\n\nvar requestAnimationFrame = require(\"./animation/requestAnimationFrame\");\n\nvar Image = require(\"./graphic/Image\");\n\n/**\n * Default canvas painter\n * @module zrender/Painter\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n// PENDIGN\n// Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.\n//\n// Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.\nvar MAX_PROGRESSIVE_LAYER_NUMBER = 5;\n\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n\nfunction isLayerValid(layer) {\n  if (!layer) {\n    return false;\n  }\n\n  if (layer.__builtin__) {\n    return true;\n  }\n\n  if (typeof layer.resize !== 'function' || typeof layer.refresh !== 'function') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction preProcessLayer(layer) {\n  layer.__unusedCount++;\n}\n\nfunction postProcessLayer(layer) {\n  if (layer.__unusedCount == 1) {\n    layer.clear();\n  }\n}\n\nvar tmpRect = new BoundingRect(0, 0, 0, 0);\nvar viewRect = new BoundingRect(0, 0, 0, 0);\n\nfunction isDisplayableCulled(el, width, height) {\n  tmpRect.copy(el.getBoundingRect());\n\n  if (el.transform) {\n    tmpRect.applyTransform(el.transform);\n  }\n\n  viewRect.width = width;\n  viewRect.height = height;\n  return !tmpRect.intersect(viewRect);\n}\n\nfunction isClipPathChanged(clipPaths, prevClipPaths) {\n  if (clipPaths == prevClipPaths) {\n    // Can both be null or undefined\n    return false;\n  }\n\n  if (!clipPaths || !prevClipPaths || clipPaths.length !== prevClipPaths.length) {\n    return true;\n  }\n\n  for (var i = 0; i < clipPaths.length; i++) {\n    if (clipPaths[i] !== prevClipPaths[i]) {\n      return true;\n    }\n  }\n}\n\nfunction doClip(clipPaths, ctx) {\n  for (var i = 0; i < clipPaths.length; i++) {\n    var clipPath = clipPaths[i];\n    clipPath.setTransform(ctx);\n    ctx.beginPath();\n    clipPath.buildPath(ctx, clipPath.shape);\n    ctx.clip(); // Transform back\n\n    clipPath.restoreTransform(ctx);\n  }\n}\n\nfunction createRoot(width, height) {\n  var domRoot = document.createElement('div'); // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n  domRoot.style.cssText = ['position:relative', 'overflow:hidden', 'width:' + width + 'px', 'height:' + height + 'px', 'padding:0', 'margin:0', 'border-width:0'].join(';') + ';';\n  return domRoot;\n}\n/**\n * @alias module:zrender/Painter\n * @constructor\n * @param {HTMLElement} root 绘图容器\n * @param {module:zrender/Storage} storage\n * @param {Object} opts\n */\n\n\nvar Painter = function (root, storage, opts) {\n  this.type = 'canvas'; // In node environment using node-canvas\n\n  var singleCanvas = !root.nodeName // In node ?\n  || root.nodeName.toUpperCase() === 'CANVAS';\n  this._opts = opts = util.extend({}, opts || {});\n  /**\n   * @type {number}\n   */\n\n  this.dpr = opts.devicePixelRatio || devicePixelRatio;\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._singleCanvas = singleCanvas;\n  /**\n   * 绘图容器\n   * @type {HTMLElement}\n   */\n\n  this.root = root;\n  var rootStyle = root.style;\n\n  if (rootStyle) {\n    rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n    rootStyle['-webkit-user-select'] = rootStyle['user-select'] = rootStyle['-webkit-touch-callout'] = 'none';\n    root.innerHTML = '';\n  }\n  /**\n   * @type {module:zrender/Storage}\n   */\n\n\n  this.storage = storage;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  var zlevelList = this._zlevelList = [];\n  /**\n   * @type {Object.<string, module:zrender/Layer>}\n   * @private\n   */\n\n  var layers = this._layers = {};\n  /**\n   * @type {Object.<string, Object>}\n   * @type {private}\n   */\n\n  this._layerConfig = {};\n\n  if (!singleCanvas) {\n    this._width = this._getSize(0);\n    this._height = this._getSize(1);\n    var domRoot = this._domRoot = createRoot(this._width, this._height);\n    root.appendChild(domRoot);\n  } else {\n    if (opts.width != null) {\n      root.width = opts.width;\n    }\n\n    if (opts.height != null) {\n      root.height = opts.height;\n    } // Use canvas width and height directly\n\n\n    var width = root.width;\n    var height = root.height;\n    this._width = width;\n    this._height = height; // Create layer if only one given canvas\n    // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n\n    var mainLayer = new Layer(root, this, 1);\n    mainLayer.initContext(); // FIXME Use canvas width and height\n    // mainLayer.resize(width, height);\n\n    layers[0] = mainLayer;\n    zlevelList.push(0);\n    this._domRoot = root;\n  } // Layers for progressive rendering\n\n\n  this._progressiveLayers = [];\n  /**\n   * @type {module:zrender/Layer}\n   * @private\n   */\n\n  this._hoverlayer;\n  this._hoverElements = [];\n};\n\nPainter.prototype = {\n  constructor: Painter,\n  getType: function () {\n    return 'canvas';\n  },\n\n  /**\n   * If painter use a single canvas\n   * @return {boolean}\n   */\n  isSingleCanvas: function () {\n    return this._singleCanvas;\n  },\n\n  /**\n   * @return {HTMLDivElement}\n   */\n  getViewportRoot: function () {\n    return this._domRoot;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n\n  /**\n   * 刷新\n   * @param {boolean} [paintAll=false] 强制绘制所有displayable\n   */\n  refresh: function (paintAll) {\n    var list = this.storage.getDisplayList(true);\n    var zlevelList = this._zlevelList;\n\n    this._paintList(list, paintAll); // Paint custum layers\n\n\n    for (var i = 0; i < zlevelList.length; i++) {\n      var z = zlevelList[i];\n      var layer = this._layers[z];\n\n      if (!layer.__builtin__ && layer.refresh) {\n        layer.refresh();\n      }\n    }\n\n    this.refreshHover();\n\n    if (this._progressiveLayers.length) {\n      this._startProgessive();\n    }\n\n    return this;\n  },\n  addHover: function (el, hoverStyle) {\n    if (el.__hoverMir) {\n      return;\n    }\n\n    var elMirror = new el.constructor({\n      style: el.style,\n      shape: el.shape\n    });\n    elMirror.__from = el;\n    el.__hoverMir = elMirror;\n    elMirror.setStyle(hoverStyle);\n\n    this._hoverElements.push(elMirror);\n  },\n  removeHover: function (el) {\n    var elMirror = el.__hoverMir;\n    var hoverElements = this._hoverElements;\n    var idx = util.indexOf(hoverElements, elMirror);\n\n    if (idx >= 0) {\n      hoverElements.splice(idx, 1);\n    }\n\n    el.__hoverMir = null;\n  },\n  clearHover: function (el) {\n    var hoverElements = this._hoverElements;\n\n    for (var i = 0; i < hoverElements.length; i++) {\n      var from = hoverElements[i].__from;\n\n      if (from) {\n        from.__hoverMir = null;\n      }\n    }\n\n    hoverElements.length = 0;\n  },\n  refreshHover: function () {\n    var hoverElements = this._hoverElements;\n    var len = hoverElements.length;\n    var hoverLayer = this._hoverlayer;\n    hoverLayer && hoverLayer.clear();\n\n    if (!len) {\n      return;\n    }\n\n    timsort(hoverElements, this.storage.displayableSortFunc); // Use a extream large zlevel\n    // FIXME?\n\n    if (!hoverLayer) {\n      hoverLayer = this._hoverlayer = this.getLayer(1e5);\n    }\n\n    var scope = {};\n    hoverLayer.ctx.save();\n\n    for (var i = 0; i < len;) {\n      var el = hoverElements[i];\n      var originalEl = el.__from; // Original el is removed\n      // PENDING\n\n      if (!(originalEl && originalEl.__zr)) {\n        hoverElements.splice(i, 1);\n        originalEl.__hoverMir = null;\n        len--;\n        continue;\n      }\n\n      i++; // Use transform\n      // FIXME style and shape ?\n\n      if (!originalEl.invisible) {\n        el.transform = originalEl.transform;\n        el.invTransform = originalEl.invTransform;\n        el.__clipPaths = originalEl.__clipPaths; // el.\n\n        this._doPaintEl(el, hoverLayer, true, scope);\n      }\n    }\n\n    hoverLayer.ctx.restore();\n  },\n  _startProgessive: function () {\n    var self = this;\n\n    if (!self._furtherProgressive) {\n      return;\n    } // Use a token to stop progress steps triggered by\n    // previous zr.refresh calling.\n\n\n    var token = self._progressiveToken = +new Date();\n    self._progress++;\n    requestAnimationFrame(step);\n\n    function step() {\n      // In case refreshed or disposed\n      if (token === self._progressiveToken && self.storage) {\n        self._doPaintList(self.storage.getDisplayList());\n\n        if (self._furtherProgressive) {\n          self._progress++;\n          requestAnimationFrame(step);\n        } else {\n          self._progressiveToken = -1;\n        }\n      }\n    }\n  },\n  _clearProgressive: function () {\n    this._progressiveToken = -1;\n    this._progress = 0;\n    util.each(this._progressiveLayers, function (layer) {\n      layer.__dirty && layer.clear();\n    });\n  },\n  _paintList: function (list, paintAll) {\n    if (paintAll == null) {\n      paintAll = false;\n    }\n\n    this._updateLayerStatus(list);\n\n    this._clearProgressive();\n\n    this.eachBuiltinLayer(preProcessLayer);\n\n    this._doPaintList(list, paintAll);\n\n    this.eachBuiltinLayer(postProcessLayer);\n  },\n  _doPaintList: function (list, paintAll) {\n    var currentLayer;\n    var currentZLevel;\n    var ctx; // var invTransform = [];\n\n    var scope;\n    var progressiveLayerIdx = 0;\n    var currentProgressiveLayer;\n    var width = this._width;\n    var height = this._height;\n    var layerProgress;\n    var frame = this._progress;\n\n    function flushProgressiveLayer(layer) {\n      var dpr = ctx.dpr || 1;\n      ctx.save();\n      ctx.globalAlpha = 1;\n      ctx.shadowBlur = 0; // Avoid layer don't clear in next progressive frame\n\n      currentLayer.__dirty = true;\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\n      ctx.drawImage(layer.dom, 0, 0, width * dpr, height * dpr);\n      ctx.restore();\n    }\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      var el = list[i];\n      var elZLevel = this._singleCanvas ? 0 : el.zlevel;\n      var elFrame = el.__frame; // Flush at current context\n      // PENDING\n\n      if (elFrame < 0 && currentProgressiveLayer) {\n        flushProgressiveLayer(currentProgressiveLayer);\n        currentProgressiveLayer = null;\n      } // Change draw layer\n\n\n      if (currentZLevel !== elZLevel) {\n        if (ctx) {\n          ctx.restore();\n        } // Reset scope\n\n\n        scope = {}; // Only 0 zlevel if only has one canvas\n\n        currentZLevel = elZLevel;\n        currentLayer = this.getLayer(currentZLevel);\n\n        if (!currentLayer.__builtin__) {\n          log('ZLevel ' + currentZLevel + ' has been used by unkown layer ' + currentLayer.id);\n        }\n\n        ctx = currentLayer.ctx;\n        ctx.save(); // Reset the count\n\n        currentLayer.__unusedCount = 0;\n\n        if (currentLayer.__dirty || paintAll) {\n          currentLayer.clear();\n        }\n      }\n\n      if (!(currentLayer.__dirty || paintAll)) {\n        continue;\n      }\n\n      if (elFrame >= 0) {\n        // Progressive layer changed\n        if (!currentProgressiveLayer) {\n          currentProgressiveLayer = this._progressiveLayers[Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)];\n          currentProgressiveLayer.ctx.save();\n          currentProgressiveLayer.renderScope = {};\n\n          if (currentProgressiveLayer && currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress) {\n            // flushProgressiveLayer(currentProgressiveLayer);\n            // Quick jump all progressive elements\n            // All progressive element are not dirty, jump over and flush directly\n            i = currentProgressiveLayer.__nextIdxNotProg - 1; // currentProgressiveLayer = null;\n\n            continue;\n          }\n\n          layerProgress = currentProgressiveLayer.__progress;\n\n          if (!currentProgressiveLayer.__dirty) {\n            // Keep rendering\n            frame = layerProgress;\n          }\n\n          currentProgressiveLayer.__progress = frame + 1;\n        }\n\n        if (elFrame === frame) {\n          this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);\n        }\n      } else {\n        this._doPaintEl(el, currentLayer, paintAll, scope);\n      }\n\n      el.__dirty = false;\n    }\n\n    if (currentProgressiveLayer) {\n      flushProgressiveLayer(currentProgressiveLayer);\n    } // Restore the lastLayer ctx\n\n\n    ctx && ctx.restore(); // If still has clipping state\n    // if (scope.prevElClipPaths) {\n    //     ctx.restore();\n    // }\n\n    this._furtherProgressive = false;\n    util.each(this._progressiveLayers, function (layer) {\n      if (layer.__maxProgress >= layer.__progress) {\n        this._furtherProgressive = true;\n      }\n    }, this);\n  },\n  _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n    var ctx = currentLayer.ctx;\n    var m = el.transform;\n\n    if ((currentLayer.__dirty || forcePaint) && // Ignore invisible element\n    !el.invisible // Ignore transparent element\n    && el.style.opacity !== 0 // Ignore scale 0 element, in some environment like node-canvas\n    // Draw a scale 0 element can cause all following draw wrong\n    // And setTransform with scale 0 will cause set back transform failed.\n    && !(m && !m[0] && !m[3]) // Ignore culled element\n    && !(el.culling && isDisplayableCulled(el, this._width, this._height))) {\n      var clipPaths = el.__clipPaths; // Optimize when clipping on group with several elements\n\n      if (scope.prevClipLayer !== currentLayer || isClipPathChanged(clipPaths, scope.prevElClipPaths)) {\n        // If has previous clipping state, restore from it\n        if (scope.prevElClipPaths) {\n          scope.prevClipLayer.ctx.restore();\n          scope.prevClipLayer = scope.prevElClipPaths = null; // Reset prevEl since context has been restored\n\n          scope.prevEl = null;\n        } // New clipping state\n\n\n        if (clipPaths) {\n          ctx.save();\n          doClip(clipPaths, ctx);\n          scope.prevClipLayer = currentLayer;\n          scope.prevElClipPaths = clipPaths;\n        }\n      }\n\n      el.beforeBrush && el.beforeBrush(ctx);\n      el.brush(ctx, scope.prevEl || null);\n      scope.prevEl = el;\n      el.afterBrush && el.afterBrush(ctx);\n    }\n  },\n\n  /**\n   * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n   * @param {number} zlevel\n   * @return {module:zrender/Layer}\n   */\n  getLayer: function (zlevel) {\n    if (this._singleCanvas) {\n      return this._layers[0];\n    }\n\n    var layer = this._layers[zlevel];\n\n    if (!layer) {\n      // Create a new layer\n      layer = new Layer('zr_' + zlevel, this, this.dpr);\n      layer.__builtin__ = true;\n\n      if (this._layerConfig[zlevel]) {\n        util.merge(layer, this._layerConfig[zlevel], true);\n      }\n\n      this.insertLayer(zlevel, layer); // Context is created after dom inserted to document\n      // Or excanvas will get 0px clientWidth and clientHeight\n\n      layer.initContext();\n    }\n\n    return layer;\n  },\n  insertLayer: function (zlevel, layer) {\n    var layersMap = this._layers;\n    var zlevelList = this._zlevelList;\n    var len = zlevelList.length;\n    var prevLayer = null;\n    var i = -1;\n    var domRoot = this._domRoot;\n\n    if (layersMap[zlevel]) {\n      log('ZLevel ' + zlevel + ' has been used already');\n      return;\n    } // Check if is a valid layer\n\n\n    if (!isLayerValid(layer)) {\n      log('Layer of zlevel ' + zlevel + ' is not valid');\n      return;\n    }\n\n    if (len > 0 && zlevel > zlevelList[0]) {\n      for (i = 0; i < len - 1; i++) {\n        if (zlevelList[i] < zlevel && zlevelList[i + 1] > zlevel) {\n          break;\n        }\n      }\n\n      prevLayer = layersMap[zlevelList[i]];\n    }\n\n    zlevelList.splice(i + 1, 0, zlevel);\n    layersMap[zlevel] = layer; // Vitual layer will not directly show on the screen.\n    // (It can be a WebGL layer and assigned to a ZImage element)\n    // But it still under management of zrender.\n\n    if (!layer.virtual) {\n      if (prevLayer) {\n        var prevDom = prevLayer.dom;\n\n        if (prevDom.nextSibling) {\n          domRoot.insertBefore(layer.dom, prevDom.nextSibling);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      } else {\n        if (domRoot.firstChild) {\n          domRoot.insertBefore(layer.dom, domRoot.firstChild);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      }\n    }\n  },\n  // Iterate each layer\n  eachLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      cb.call(context, this._layers[z], z);\n    }\n  },\n  // Iterate each buildin layer\n  eachBuiltinLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n  // Iterate each other layer except buildin layer\n  eachOtherLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (!layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n\n  /**\n   * 获取所有已创建的层\n   * @param {Array.<module:zrender/Layer>} [prevLayer]\n   */\n  getLayers: function () {\n    return this._layers;\n  },\n  _updateLayerStatus: function (list) {\n    var layers = this._layers;\n    var progressiveLayers = this._progressiveLayers;\n    var elCountsLastFrame = {};\n    var progressiveElCountsLastFrame = {};\n    this.eachBuiltinLayer(function (layer, z) {\n      elCountsLastFrame[z] = layer.elCount;\n      layer.elCount = 0;\n      layer.__dirty = false;\n    });\n    util.each(progressiveLayers, function (layer, idx) {\n      progressiveElCountsLastFrame[idx] = layer.elCount;\n      layer.elCount = 0;\n      layer.__dirty = false;\n    });\n    var progressiveLayerCount = 0;\n    var currentProgressiveLayer;\n    var lastProgressiveKey;\n    var frameCount = 0;\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      var el = list[i];\n      var zlevel = this._singleCanvas ? 0 : el.zlevel;\n      var layer = layers[zlevel];\n      var elProgress = el.progressive;\n\n      if (layer) {\n        layer.elCount++;\n        layer.__dirty = layer.__dirty || el.__dirty;\n      } /////// Update progressive\n\n\n      if (elProgress >= 0) {\n        // Fix wrong progressive sequence problem.\n        if (lastProgressiveKey !== elProgress) {\n          lastProgressiveKey = elProgress;\n          frameCount++;\n        }\n\n        var elFrame = el.__frame = frameCount - 1;\n\n        if (!currentProgressiveLayer) {\n          var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);\n          currentProgressiveLayer = progressiveLayers[idx];\n\n          if (!currentProgressiveLayer) {\n            currentProgressiveLayer = progressiveLayers[idx] = new Layer('progressive', this, this.dpr);\n            currentProgressiveLayer.initContext();\n          }\n\n          currentProgressiveLayer.__maxProgress = 0;\n        }\n\n        currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;\n        currentProgressiveLayer.elCount++;\n        currentProgressiveLayer.__maxProgress = Math.max(currentProgressiveLayer.__maxProgress, elFrame);\n\n        if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {\n          // Should keep rendering this  layer because progressive rendering is not finished yet\n          layer.__dirty = true;\n        }\n      } else {\n        el.__frame = -1;\n\n        if (currentProgressiveLayer) {\n          currentProgressiveLayer.__nextIdxNotProg = i;\n          progressiveLayerCount++;\n          currentProgressiveLayer = null;\n        }\n      }\n    }\n\n    if (currentProgressiveLayer) {\n      progressiveLayerCount++;\n      currentProgressiveLayer.__nextIdxNotProg = i;\n    } // 层中的元素数量有发生变化\n\n\n    this.eachBuiltinLayer(function (layer, z) {\n      if (elCountsLastFrame[z] !== layer.elCount) {\n        layer.__dirty = true;\n      }\n    });\n    progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);\n    util.each(progressiveLayers, function (layer, idx) {\n      if (progressiveElCountsLastFrame[idx] !== layer.elCount) {\n        el.__dirty = true;\n      }\n\n      if (layer.__dirty) {\n        layer.__progress = 0;\n      }\n    });\n  },\n\n  /**\n   * 清除hover层外所有内容\n   */\n  clear: function () {\n    this.eachBuiltinLayer(this._clearLayer);\n    return this;\n  },\n  _clearLayer: function (layer) {\n    layer.clear();\n  },\n\n  /**\n   * 修改指定zlevel的绘制参数\n   *\n   * @param {string} zlevel\n   * @param {Object} config 配置对象\n   * @param {string} [config.clearColor=0] 每次清空画布的颜色\n   * @param {string} [config.motionBlur=false] 是否开启动态模糊\n   * @param {number} [config.lastFrameAlpha=0.7]\n   *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   */\n  configLayer: function (zlevel, config) {\n    if (config) {\n      var layerConfig = this._layerConfig;\n\n      if (!layerConfig[zlevel]) {\n        layerConfig[zlevel] = config;\n      } else {\n        util.merge(layerConfig[zlevel], config, true);\n      }\n\n      var layer = this._layers[zlevel];\n\n      if (layer) {\n        util.merge(layer, layerConfig[zlevel], true);\n      }\n    }\n  },\n\n  /**\n   * 删除指定层\n   * @param {number} zlevel 层所在的zlevel\n   */\n  delLayer: function (zlevel) {\n    var layers = this._layers;\n    var zlevelList = this._zlevelList;\n    var layer = layers[zlevel];\n\n    if (!layer) {\n      return;\n    }\n\n    layer.dom.parentNode.removeChild(layer.dom);\n    delete layers[zlevel];\n    zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n  },\n\n  /**\n   * 区域大小变化后重绘\n   */\n  resize: function (width, height) {\n    var domRoot = this._domRoot; // FIXME Why ?\n\n    domRoot.style.display = 'none'; // Save input w/h\n\n    var opts = this._opts;\n    width != null && (opts.width = width);\n    height != null && (opts.height = height);\n    width = this._getSize(0);\n    height = this._getSize(1);\n    domRoot.style.display = ''; // 优化没有实际改变的resize\n\n    if (this._width != width || height != this._height) {\n      domRoot.style.width = width + 'px';\n      domRoot.style.height = height + 'px';\n\n      for (var id in this._layers) {\n        if (this._layers.hasOwnProperty(id)) {\n          this._layers[id].resize(width, height);\n        }\n      }\n\n      util.each(this._progressiveLayers, function (layer) {\n        layer.resize(width, height);\n      });\n      this.refresh(true);\n    }\n\n    this._width = width;\n    this._height = height;\n    return this;\n  },\n\n  /**\n   * 清除单独的一个层\n   * @param {number} zlevel\n   */\n  clearLayer: function (zlevel) {\n    var layer = this._layers[zlevel];\n\n    if (layer) {\n      layer.clear();\n    }\n  },\n\n  /**\n   * 释放\n   */\n  dispose: function () {\n    this.root.innerHTML = '';\n    this.root = this.storage = this._domRoot = this._layers = null;\n  },\n\n  /**\n   * Get canvas which has all thing rendered\n   * @param {Object} opts\n   * @param {string} [opts.backgroundColor]\n   * @param {number} [opts.pixelRatio]\n   */\n  getRenderedCanvas: function (opts) {\n    opts = opts || {};\n\n    if (this._singleCanvas) {\n      return this._layers[0].dom;\n    }\n\n    var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n    imageLayer.initContext();\n    imageLayer.clearColor = opts.backgroundColor;\n    imageLayer.clear();\n    var displayList = this.storage.getDisplayList(true);\n    var scope = {};\n    var zlevel;\n    var self = this;\n\n    function findAndDrawOtherLayer(smaller, larger) {\n      var zlevelList = self._zlevelList;\n\n      if (smaller == null) {\n        smaller = -Infinity;\n      }\n\n      var intermediateLayer;\n\n      for (var i = 0; i < zlevelList.length; i++) {\n        var z = zlevelList[i];\n        var layer = self._layers[z];\n\n        if (!layer.__builtin__ && z > smaller && z < larger) {\n          intermediateLayer = layer;\n          break;\n        }\n      }\n\n      if (intermediateLayer && intermediateLayer.renderToCanvas) {\n        imageLayer.ctx.save();\n        intermediateLayer.renderToCanvas(imageLayer.ctx);\n        imageLayer.ctx.restore();\n      }\n    }\n\n    for (var i = 0; i < displayList.length; i++) {\n      var el = displayList[i];\n\n      if (el.zlevel !== zlevel) {\n        findAndDrawOtherLayer(zlevel, el.zlevel);\n        zlevel = el.zlevel;\n      }\n\n      this._doPaintEl(el, imageLayer, true, scope);\n    }\n\n    findAndDrawOtherLayer(zlevel, Infinity);\n    return imageLayer.dom;\n  },\n\n  /**\n   * 获取绘图区域宽度\n   */\n  getWidth: function () {\n    return this._width;\n  },\n\n  /**\n   * 获取绘图区域高度\n   */\n  getHeight: function () {\n    return this._height;\n  },\n  _getSize: function (whIdx) {\n    var opts = this._opts;\n    var wh = ['width', 'height'][whIdx];\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n    if (opts[wh] != null && opts[wh] !== 'auto') {\n      return parseFloat(opts[wh]);\n    }\n\n    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.\n\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n  },\n  pathToImage: function (path, dpr) {\n    dpr = dpr || this.dpr;\n    var canvas = document.createElement('canvas');\n    var ctx = canvas.getContext('2d');\n    var rect = path.getBoundingRect();\n    var style = path.style;\n    var shadowBlurSize = style.shadowBlur;\n    var shadowOffsetX = style.shadowOffsetX;\n    var shadowOffsetY = style.shadowOffsetY;\n    var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n    var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n    var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n    var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n    var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n    var width = rect.width + leftMargin + rightMargin;\n    var height = rect.height + topMargin + bottomMargin;\n    canvas.width = width * dpr;\n    canvas.height = height * dpr;\n    ctx.scale(dpr, dpr);\n    ctx.clearRect(0, 0, width, height);\n    ctx.dpr = dpr;\n    var pathTransform = {\n      position: path.position,\n      rotation: path.rotation,\n      scale: path.scale\n    };\n    path.position = [leftMargin - rect.x, topMargin - rect.y];\n    path.rotation = 0;\n    path.scale = [1, 1];\n    path.updateTransform();\n\n    if (path) {\n      path.brush(ctx);\n    }\n\n    var ImageShape = Image;\n    var imgShape = new ImageShape({\n      style: {\n        x: 0,\n        y: 0,\n        image: canvas\n      }\n    });\n\n    if (pathTransform.position != null) {\n      imgShape.position = path.position = pathTransform.position;\n    }\n\n    if (pathTransform.rotation != null) {\n      imgShape.rotation = path.rotation = pathTransform.rotation;\n    }\n\n    if (pathTransform.scale != null) {\n      imgShape.scale = path.scale = pathTransform.scale;\n    }\n\n    return imgShape;\n  }\n};\nvar _default = Painter;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/Painter.js\n// module id = 1096\n// module chunks = 0 1 2","var util = require(\"./core/util\");\n\nvar _config = require(\"./config\");\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar Style = require(\"./graphic/Style\");\n\nvar Pattern = require(\"./graphic/Pattern\");\n\n/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\nfunction returnFalse() {\n  return false;\n}\n/**\n * 创建dom\n *\n * @inner\n * @param {string} id dom id 待用\n * @param {Painter} painter painter instance\n * @param {number} number\n */\n\n\nfunction createDom(id, painter, dpr) {\n  var newDom = util.createCanvas();\n  var width = painter.getWidth();\n  var height = painter.getHeight();\n  var newDomStyle = newDom.style; // 没append呢，请原谅我这样写，清晰~\n\n  newDomStyle.position = 'absolute';\n  newDomStyle.left = 0;\n  newDomStyle.top = 0;\n  newDomStyle.width = width + 'px';\n  newDomStyle.height = height + 'px';\n  newDom.width = width * dpr;\n  newDom.height = height * dpr; // id不作为索引用，避免可能造成的重名，定义为私有属性\n\n  newDom.setAttribute('data-zr-dom-id', id);\n  return newDom;\n}\n/**\n * @alias module:zrender/Layer\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @param {string} id\n * @param {module:zrender/Painter} painter\n * @param {number} [dpr]\n */\n\n\nvar Layer = function (id, painter, dpr) {\n  var dom;\n  dpr = dpr || devicePixelRatio;\n\n  if (typeof id === 'string') {\n    dom = createDom(id, painter, dpr);\n  } // Not using isDom because in node it will return false\n  else if (util.isObject(id)) {\n      dom = id;\n      id = dom.id;\n    }\n\n  this.id = id;\n  this.dom = dom;\n  var domStyle = dom.style;\n\n  if (domStyle) {\n    // Not in node\n    dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n    domStyle['-webkit-user-select'] = 'none';\n    domStyle['user-select'] = 'none';\n    domStyle['-webkit-touch-callout'] = 'none';\n    domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n    domStyle['padding'] = 0;\n    domStyle['margin'] = 0;\n    domStyle['border-width'] = 0;\n  }\n\n  this.domBack = null;\n  this.ctxBack = null;\n  this.painter = painter;\n  this.config = null; // Configs\n\n  /**\n   * 每次清空画布的颜色\n   * @type {string}\n   * @default 0\n   */\n\n  this.clearColor = 0;\n  /**\n   * 是否开启动态模糊\n   * @type {boolean}\n   * @default false\n   */\n\n  this.motionBlur = false;\n  /**\n   * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   * @type {number}\n   * @default 0.7\n   */\n\n  this.lastFrameAlpha = 0.7;\n  /**\n   * Layer dpr\n   * @type {number}\n   */\n\n  this.dpr = dpr;\n};\n\nLayer.prototype = {\n  constructor: Layer,\n  elCount: 0,\n  __dirty: true,\n  initContext: function () {\n    this.ctx = this.dom.getContext('2d');\n    this.ctx.__currentValues = {};\n    this.ctx.dpr = this.dpr;\n  },\n  createBackBuffer: function () {\n    var dpr = this.dpr;\n    this.domBack = createDom('back-' + this.id, this.painter, dpr);\n    this.ctxBack = this.domBack.getContext('2d');\n    this.ctxBack.__currentValues = {};\n\n    if (dpr != 1) {\n      this.ctxBack.scale(dpr, dpr);\n    }\n  },\n\n  /**\n   * @param  {number} width\n   * @param  {number} height\n   */\n  resize: function (width, height) {\n    var dpr = this.dpr;\n    var dom = this.dom;\n    var domStyle = dom.style;\n    var domBack = this.domBack;\n    domStyle.width = width + 'px';\n    domStyle.height = height + 'px';\n    dom.width = width * dpr;\n    dom.height = height * dpr;\n\n    if (domBack) {\n      domBack.width = width * dpr;\n      domBack.height = height * dpr;\n\n      if (dpr != 1) {\n        this.ctxBack.scale(dpr, dpr);\n      }\n    }\n  },\n\n  /**\n   * 清空该层画布\n   * @param {boolean} clearAll Clear all with out motion blur\n   */\n  clear: function (clearAll) {\n    var dom = this.dom;\n    var ctx = this.ctx;\n    var width = dom.width;\n    var height = dom.height;\n    var clearColor = this.clearColor;\n    var haveMotionBLur = this.motionBlur && !clearAll;\n    var lastFrameAlpha = this.lastFrameAlpha;\n    var dpr = this.dpr;\n\n    if (haveMotionBLur) {\n      if (!this.domBack) {\n        this.createBackBuffer();\n      }\n\n      this.ctxBack.globalCompositeOperation = 'copy';\n      this.ctxBack.drawImage(dom, 0, 0, width / dpr, height / dpr);\n    }\n\n    ctx.clearRect(0, 0, width, height);\n\n    if (clearColor) {\n      var clearColorGradientOrPattern; // Gradient\n\n      if (clearColor.colorStops) {\n        // Cache canvas gradient\n        clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n          x: 0,\n          y: 0,\n          width: width,\n          height: height\n        });\n        clearColor.__canvasGradient = clearColorGradientOrPattern;\n      } // Pattern\n      else if (clearColor.image) {\n          clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n        }\n\n      ctx.save();\n      ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    if (haveMotionBLur) {\n      var domBack = this.domBack;\n      ctx.save();\n      ctx.globalAlpha = lastFrameAlpha;\n      ctx.drawImage(domBack, 0, 0, width, height);\n      ctx.restore();\n    }\n  }\n};\nvar _default = Layer;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/Layer.js\n// module id = 1097\n// module chunks = 0 1 2","var util = require(\"../core/util\");\n\nvar _event = require(\"../core/event\");\n\nvar Dispatcher = _event.Dispatcher;\n\nvar requestAnimationFrame = require(\"./requestAnimationFrame\");\n\nvar Animator = require(\"./Animator\");\n\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n/**\n * @typedef {Object} IZRenderStage\n * @property {Function} update\n */\n\n/**\n * @alias module:zrender/animation/Animation\n * @constructor\n * @param {Object} [options]\n * @param {Function} [options.onframe]\n * @param {IZRenderStage} [options.stage]\n * @example\n *     var animation = new Animation();\n *     var obj = {\n *         x: 100,\n *         y: 100\n *     };\n *     animation.animate(node.position)\n *         .when(1000, {\n *             x: 500,\n *             y: 500\n *         })\n *         .when(2000, {\n *             x: 100,\n *             y: 100\n *         })\n *         .start('spline');\n */\nvar Animation = function (options) {\n  options = options || {};\n  this.stage = options.stage || {};\n\n  this.onframe = options.onframe || function () {}; // private properties\n\n\n  this._clips = [];\n  this._running = false;\n  this._time;\n  this._pausedTime;\n  this._pauseStart;\n  this._paused = false;\n  Dispatcher.call(this);\n};\n\nAnimation.prototype = {\n  constructor: Animation,\n\n  /**\n   * 添加 clip\n   * @param {module:zrender/animation/Clip} clip\n   */\n  addClip: function (clip) {\n    this._clips.push(clip);\n  },\n\n  /**\n   * 添加 animator\n   * @param {module:zrender/animation/Animator} animator\n   */\n  addAnimator: function (animator) {\n    animator.animation = this;\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.addClip(clips[i]);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Clip} clip\n   */\n  removeClip: function (clip) {\n    var idx = util.indexOf(this._clips, clip);\n\n    if (idx >= 0) {\n      this._clips.splice(idx, 1);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Animator} animator\n   */\n  removeAnimator: function (animator) {\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.removeClip(clips[i]);\n    }\n\n    animator.animation = null;\n  },\n  _update: function () {\n    var time = new Date().getTime() - this._pausedTime;\n\n    var delta = time - this._time;\n    var clips = this._clips;\n    var len = clips.length;\n    var deferredEvents = [];\n    var deferredClips = [];\n\n    for (var i = 0; i < len; i++) {\n      var clip = clips[i];\n      var e = clip.step(time, delta); // Throw out the events need to be called after\n      // stage.update, like destroy\n\n      if (e) {\n        deferredEvents.push(e);\n        deferredClips.push(clip);\n      }\n    } // Remove the finished clip\n\n\n    for (var i = 0; i < len;) {\n      if (clips[i]._needsRemove) {\n        clips[i] = clips[len - 1];\n        clips.pop();\n        len--;\n      } else {\n        i++;\n      }\n    }\n\n    len = deferredEvents.length;\n\n    for (var i = 0; i < len; i++) {\n      deferredClips[i].fire(deferredEvents[i]);\n    }\n\n    this._time = time;\n    this.onframe(delta);\n    this.trigger('frame', delta);\n\n    if (this.stage.update) {\n      this.stage.update();\n    }\n  },\n  _startLoop: function () {\n    var self = this;\n    this._running = true;\n\n    function step() {\n      if (self._running) {\n        requestAnimationFrame(step);\n        !self._paused && self._update();\n      }\n    }\n\n    requestAnimationFrame(step);\n  },\n\n  /**\n   * 开始运行动画\n   */\n  start: function () {\n    this._time = new Date().getTime();\n    this._pausedTime = 0;\n\n    this._startLoop();\n  },\n\n  /**\n   * 停止运行动画\n   */\n  stop: function () {\n    this._running = false;\n  },\n\n  /**\n   * Pause\n   */\n  pause: function () {\n    if (!this._paused) {\n      this._pauseStart = new Date().getTime();\n      this._paused = true;\n    }\n  },\n\n  /**\n   * Resume\n   */\n  resume: function () {\n    if (this._paused) {\n      this._pausedTime += new Date().getTime() - this._pauseStart;\n      this._paused = false;\n    }\n  },\n\n  /**\n   * 清除所有动画片段\n   */\n  clear: function () {\n    this._clips = [];\n  },\n\n  /**\n   * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n   * @param  {Object} target\n   * @param  {Object} options\n   * @param  {boolean} [options.loop=false] 是否循环播放动画\n   * @param  {Function} [options.getter=null]\n   *         如果指定getter函数，会通过getter函数取属性值\n   * @param  {Function} [options.setter=null]\n   *         如果指定setter函数，会通过setter函数设置属性值\n   * @return {module:zrender/animation/Animation~Animator}\n   */\n  // TODO Gap\n  animate: function (target, options) {\n    options = options || {};\n    var animator = new Animator(target, options.loop, options.getter, options.setter);\n    this.addAnimator(animator);\n    return animator;\n  }\n};\nutil.mixin(Animation, Dispatcher);\nvar _default = Animation;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/animation/Animation.js\n// module id = 1098\n// module chunks = 0 1 2","var _event = require(\"../core/event\");\n\nvar addEventListener = _event.addEventListener;\nvar removeEventListener = _event.removeEventListener;\nvar normalizeEvent = _event.normalizeEvent;\n\nvar zrUtil = require(\"../core/util\");\n\nvar Eventful = require(\"../mixin/Eventful\");\n\nvar env = require(\"../core/env\");\n\nvar GestureMgr = require(\"../core/GestureMgr\");\n\nvar TOUCH_CLICK_DELAY = 300;\nvar mouseHandlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\nvar touchHandlerNames = ['touchstart', 'touchend', 'touchmove'];\nvar pointerEventNames = {\n  pointerdown: 1,\n  pointerup: 1,\n  pointermove: 1,\n  pointerout: 1\n};\nvar pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n  var nm = name.replace('mouse', 'pointer');\n  return pointerEventNames[nm] ? nm : name;\n});\n\nfunction eventNameFix(name) {\n  return name === 'mousewheel' && env.browser.firefox ? 'DOMMouseScroll' : name;\n}\n\nfunction processGesture(proxy, event, stage) {\n  var gestureMgr = proxy._gestureMgr;\n  stage === 'start' && gestureMgr.clear();\n  var gestureInfo = gestureMgr.recognize(event, proxy.handler.findHover(event.zrX, event.zrY, null).target, proxy.dom);\n  stage === 'end' && gestureMgr.clear(); // Do not do any preventDefault here. Upper application do that if necessary.\n\n  if (gestureInfo) {\n    var type = gestureInfo.type;\n    event.gestureEvent = type;\n    proxy.handler.dispatchToElement({\n      target: gestureInfo.target\n    }, type, gestureInfo.event);\n  }\n} // function onMSGestureChange(proxy, event) {\n//     if (event.translationX || event.translationY) {\n//         // mousemove is carried by MSGesture to reduce the sensitivity.\n//         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n//     }\n//     if (event.scale !== 1) {\n//         event.pinchX = event.offsetX;\n//         event.pinchY = event.offsetY;\n//         event.pinchScale = event.scale;\n//         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n//     }\n// }\n\n/**\n * Prevent mouse event from being dispatched after Touch Events action\n * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n * Result: Blocking Mouse Events for 700ms.\n */\n\n\nfunction setTouchTimer(instance) {\n  instance._touching = true;\n  clearTimeout(instance._touchTimer);\n  instance._touchTimer = setTimeout(function () {\n    instance._touching = false;\n  }, 700);\n}\n\nvar domHandlers = {\n  /**\n   * Mouse move handler\n   * @inner\n   * @param {Event} event\n   */\n  mousemove: function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger('mousemove', event);\n  },\n\n  /**\n   * Mouse out handler\n   * @inner\n   * @param {Event} event\n   */\n  mouseout: function (event) {\n    event = normalizeEvent(this.dom, event);\n    var element = event.toElement || event.relatedTarget;\n\n    if (element != this.dom) {\n      while (element && element.nodeType != 9) {\n        // 忽略包含在root中的dom引起的mouseOut\n        if (element === this.dom) {\n          return;\n        }\n\n        element = element.parentNode;\n      }\n    }\n\n    this.trigger('mouseout', event);\n  },\n\n  /**\n   * Touch开始响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchstart: function (event) {\n    // Default mouse behaviour should not be disabled here.\n    // For example, page may needs to be slided.\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    this._lastTouchMoment = new Date();\n    processGesture(this, event, 'start'); // In touch device, trigger `mousemove`(`mouseover`) should\n    // be triggered, and must before `mousedown` triggered.\n\n    domHandlers.mousemove.call(this, event);\n    domHandlers.mousedown.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch移动响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchmove: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'change'); // Mouse move should always be triggered no matter whether\n    // there is gestrue event, because mouse move and pinch may\n    // be used at the same time.\n\n    domHandlers.mousemove.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch结束响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchend: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'end');\n    domHandlers.mouseup.call(this, event); // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n    // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n    // we can conveniently implement \"hover style\" in both PC and touch device just\n    // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n    // to remove \"hover style\" on an element, without any additional code for\n    // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n    // style\" will remain for user view)\n    // click event should always be triggered no matter whether\n    // there is gestrue event. System click can not be prevented.\n\n    if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n      domHandlers.click.call(this, event);\n    }\n\n    setTouchTimer(this);\n  },\n  pointerdown: function (event) {\n    domHandlers.mousedown.call(this, event); // if (useMSGuesture(this, event)) {\n    //     this._msGesture.addPointer(event.pointerId);\n    // }\n  },\n  pointermove: function (event) {\n    // FIXME\n    // pointermove is so sensitive that it always triggered when\n    // tap(click) on touch screen, which affect some judgement in\n    // upper application. So, we dont support mousemove on MS touch\n    // device yet.\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mousemove.call(this, event);\n    }\n  },\n  pointerup: function (event) {\n    domHandlers.mouseup.call(this, event);\n  },\n  pointerout: function (event) {\n    // pointerout will be triggered when tap on touch screen\n    // (IE11+/Edge on MS Surface) after click event triggered,\n    // which is inconsistent with the mousout behavior we defined\n    // in touchend. So we unify them.\n    // (check domHandlers.touchend for detailed explanation)\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mouseout.call(this, event);\n    }\n  }\n};\n\nfunction isPointerFromTouch(event) {\n  var pointerType = event.pointerType;\n  return pointerType === 'pen' || pointerType === 'touch';\n} // function useMSGuesture(handlerProxy, event) {\n//     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n// }\n// Common handlers\n\n\nzrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  domHandlers[name] = function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger(name, event);\n  };\n});\n/**\n * 为控制类实例初始化dom 事件处理函数\n *\n * @inner\n * @param {module:zrender/Handler} instance 控制类实例\n */\n\nfunction initDomHandler(instance) {\n  zrUtil.each(touchHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(pointerHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(mouseHandlerNames, function (name) {\n    instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n  });\n\n  function makeMouseHandler(fn, instance) {\n    return function () {\n      if (instance._touching) {\n        return;\n      }\n\n      return fn.apply(instance, arguments);\n    };\n  }\n}\n\nfunction HandlerDomProxy(dom) {\n  Eventful.call(this);\n  this.dom = dom;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._touching = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._touchTimer;\n  /**\n   * @private\n   * @type {module:zrender/core/GestureMgr}\n   */\n\n  this._gestureMgr = new GestureMgr();\n  this._handlers = {};\n  initDomHandler(this);\n\n  if (env.pointerEventsSupported) {\n    // Only IE11+/Edge\n    // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n    // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n    // at the same time.\n    // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n    // screen, which do not occurs in pointer event.\n    // So we use pointer event to both detect touch gesture and mouse behavior.\n    mountHandlers(pointerHandlerNames, this); // FIXME\n    // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n    // which does not prevent defuault behavior occasionally (which may cause view port\n    // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n    // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n    // touch screen. And we only support click behavior on MS touch screen now.\n    // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n    // We dont support touch on IE on win7.\n    // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n    // if (typeof MSGesture === 'function') {\n    //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n    //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n    // }\n  } else {\n    if (env.touchEventsSupported) {\n      mountHandlers(touchHandlerNames, this); // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n      // addEventListener(root, 'mouseout', this._mouseoutHandler);\n    } // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n    // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n    // mouse event can not be handle in those devices.\n    // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n    // mouseevent after touch event triggered, see `setTouchTimer`.\n\n\n    mountHandlers(mouseHandlerNames, this);\n  }\n\n  function mountHandlers(handlerNames, instance) {\n    zrUtil.each(handlerNames, function (name) {\n      addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n    }, instance);\n  }\n}\n\nvar handlerDomProxyProto = HandlerDomProxy.prototype;\n\nhandlerDomProxyProto.dispose = function () {\n  var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n  for (var i = 0; i < handlerNames.length; i++) {\n    var name = handlerNames[i];\n    removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n  }\n};\n\nhandlerDomProxyProto.setCursor = function (cursorStyle) {\n  this.dom.style.cursor = cursorStyle || 'default';\n};\n\nzrUtil.mixin(HandlerDomProxy, Eventful);\nvar _default = HandlerDomProxy;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/dom/HandlerProxy.js\n// module id = 1099\n// module chunks = 0 1 2","var eventUtil = require(\"./event\");\n\n/**\n * Only implements needed gestures for mobile.\n */\nvar GestureMgr = function () {\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n  this._track = [];\n};\n\nGestureMgr.prototype = {\n  constructor: GestureMgr,\n  recognize: function (event, target, root) {\n    this._doTrack(event, target, root);\n\n    return this._recognize(event);\n  },\n  clear: function () {\n    this._track.length = 0;\n    return this;\n  },\n  _doTrack: function (event, target, root) {\n    var touches = event.touches;\n\n    if (!touches) {\n      return;\n    }\n\n    var trackItem = {\n      points: [],\n      touches: [],\n      target: target,\n      event: event\n    };\n\n    for (var i = 0, len = touches.length; i < len; i++) {\n      var touch = touches[i];\n      var pos = eventUtil.clientToLocal(root, touch, {});\n      trackItem.points.push([pos.zrX, pos.zrY]);\n      trackItem.touches.push(touch);\n    }\n\n    this._track.push(trackItem);\n  },\n  _recognize: function (event) {\n    for (var eventName in recognizers) {\n      if (recognizers.hasOwnProperty(eventName)) {\n        var gestureInfo = recognizers[eventName](this._track, event);\n\n        if (gestureInfo) {\n          return gestureInfo;\n        }\n      }\n    }\n  }\n};\n\nfunction dist(pointPair) {\n  var dx = pointPair[1][0] - pointPair[0][0];\n  var dy = pointPair[1][1] - pointPair[0][1];\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\nfunction center(pointPair) {\n  return [(pointPair[0][0] + pointPair[1][0]) / 2, (pointPair[0][1] + pointPair[1][1]) / 2];\n}\n\nvar recognizers = {\n  pinch: function (track, event) {\n    var trackLen = track.length;\n\n    if (!trackLen) {\n      return;\n    }\n\n    var pinchEnd = (track[trackLen - 1] || {}).points;\n    var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n    if (pinchPre && pinchPre.length > 1 && pinchEnd && pinchEnd.length > 1) {\n      var pinchScale = dist(pinchEnd) / dist(pinchPre);\n      !isFinite(pinchScale) && (pinchScale = 1);\n      event.pinchScale = pinchScale;\n      var pinchCenter = center(pinchEnd);\n      event.pinchX = pinchCenter[0];\n      event.pinchY = pinchCenter[1];\n      return {\n        type: 'pinch',\n        target: track[0].target,\n        event: event\n      };\n    }\n  } // Only pinch currently.\n\n};\nvar _default = GestureMgr;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/GestureMgr.js\n// module id = 1100\n// module chunks = 0 1 2","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar Model = require(\"./Model\");\n\nvar ComponentModel = require(\"./Component\");\n\nvar globalDefault = require(\"./globalDefault\");\n\nvar colorPaletteMinin = require(\"./mixin/colorPalette\");\n\n/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n/**\n * Caution: If the mechanism should be changed some day, these cases\n * should be considered:\n *\n * (1) In `merge option` mode, if using the same option to call `setOption`\n * many times, the result should be the same (try our best to ensure that).\n * (2) In `merge option` mode, if a component has no id/name specified, it\n * will be merged by index, and the result sequence of the components is\n * consistent to the original sequence.\n * (3) `reset` feature (in toolbox). Find detailed info in comments about\n * `mergeOption` in module:echarts/model/OptionManager.\n */\nvar each = zrUtil.each;\nvar filter = zrUtil.filter;\nvar map = zrUtil.map;\nvar isArray = zrUtil.isArray;\nvar indexOf = zrUtil.indexOf;\nvar isObject = zrUtil.isObject;\nvar OPTION_INNER_KEY = '\\0_ec_inner';\n/**\n * @alias module:echarts/model/Global\n *\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {Object} theme\n */\n\nvar GlobalModel = Model.extend({\n  constructor: GlobalModel,\n  init: function (option, parentModel, theme, optionManager) {\n    theme = theme || {};\n    this.option = null; // Mark as not initialized.\n\n    /**\n     * @type {module:echarts/model/Model}\n     * @private\n     */\n\n    this._theme = new Model(theme);\n    /**\n     * @type {module:echarts/model/OptionManager}\n     */\n\n    this._optionManager = optionManager;\n  },\n  setOption: function (option, optionPreprocessorFuncs) {\n    zrUtil.assert(!(OPTION_INNER_KEY in option), 'please use chart.getOption()');\n\n    this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n    this.resetOption(null);\n  },\n\n  /**\n   * @param {string} type null/undefined: reset all.\n   *                      'recreate': force recreate all.\n   *                      'timeline': only reset timeline option\n   *                      'media': only reset media query option\n   * @return {boolean} Whether option changed.\n   */\n  resetOption: function (type) {\n    var optionChanged = false;\n    var optionManager = this._optionManager;\n\n    if (!type || type === 'recreate') {\n      var baseOption = optionManager.mountOption(type === 'recreate');\n\n      if (!this.option || type === 'recreate') {\n        initBase.call(this, baseOption);\n      } else {\n        this.restoreData();\n        this.mergeOption(baseOption);\n      }\n\n      optionChanged = true;\n    }\n\n    if (type === 'timeline' || type === 'media') {\n      this.restoreData();\n    }\n\n    if (!type || type === 'recreate' || type === 'timeline') {\n      var timelineOption = optionManager.getTimelineOption(this);\n      timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n    }\n\n    if (!type || type === 'recreate' || type === 'media') {\n      var mediaOptions = optionManager.getMediaOption(this, this._api);\n\n      if (mediaOptions.length) {\n        each(mediaOptions, function (mediaOption) {\n          this.mergeOption(mediaOption, optionChanged = true);\n        }, this);\n      }\n    }\n\n    return optionChanged;\n  },\n\n  /**\n   * @protected\n   */\n  mergeOption: function (newOption) {\n    var option = this.option;\n    var componentsMap = this._componentsMap;\n    var newCptTypes = []; // 如果不存在对应的 component model 则直接 merge\n\n    each(newOption, function (componentOption, mainType) {\n      if (componentOption == null) {\n        return;\n      }\n\n      if (!ComponentModel.hasClass(mainType)) {\n        option[mainType] = option[mainType] == null ? zrUtil.clone(componentOption) : zrUtil.merge(option[mainType], componentOption, true);\n      } else {\n        newCptTypes.push(mainType);\n      }\n    }); // FIXME OPTION 同步是否要改回原来的\n\n    ComponentModel.topologicalTravel(newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this);\n    this._seriesIndices = this._seriesIndices || [];\n\n    function visitComponent(mainType, dependencies) {\n      var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n      var mapResult = modelUtil.mappingToExists(componentsMap.get(mainType), newCptOptionList);\n      modelUtil.makeIdAndName(mapResult); // Set mainType and complete subType.\n\n      each(mapResult, function (item, index) {\n        var opt = item.option;\n\n        if (isObject(opt)) {\n          item.keyInfo.mainType = mainType;\n          item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n        }\n      });\n      var dependentModels = getComponentsByTypes(componentsMap, dependencies);\n      option[mainType] = [];\n      componentsMap.set(mainType, []);\n      each(mapResult, function (resultItem, index) {\n        var componentModel = resultItem.exist;\n        var newCptOption = resultItem.option;\n        zrUtil.assert(isObject(newCptOption) || componentModel, 'Empty component definition'); // Consider where is no new option and should be merged using {},\n        // see removeEdgeAndAdd in topologicalTravel and\n        // ComponentModel.getAllClassMainTypes.\n\n        if (!newCptOption) {\n          componentModel.mergeOption({}, this);\n          componentModel.optionUpdated({}, false);\n        } else {\n          var ComponentModelClass = ComponentModel.getClass(mainType, resultItem.keyInfo.subType, true);\n\n          if (componentModel && componentModel instanceof ComponentModelClass) {\n            componentModel.name = resultItem.keyInfo.name;\n            componentModel.mergeOption(newCptOption, this);\n            componentModel.optionUpdated(newCptOption, false);\n          } else {\n            // PENDING Global as parent ?\n            var extraOpt = zrUtil.extend({\n              dependentModels: dependentModels,\n              componentIndex: index\n            }, resultItem.keyInfo);\n            componentModel = new ComponentModelClass(newCptOption, this, this, extraOpt);\n            zrUtil.extend(componentModel, extraOpt);\n            componentModel.init(newCptOption, this, this, extraOpt); // Call optionUpdated after init.\n            // newCptOption has been used as componentModel.option\n            // and may be merged with theme and default, so pass null\n            // to avoid confusion.\n\n            componentModel.optionUpdated(null, true);\n          }\n        }\n\n        componentsMap.get(mainType)[index] = componentModel;\n        option[mainType][index] = componentModel.option;\n      }, this); // Backup series for filtering.\n\n      if (mainType === 'series') {\n        this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n      }\n    }\n  },\n\n  /**\n   * Get option for output (cloned option and inner info removed)\n   * @public\n   * @return {Object}\n   */\n  getOption: function () {\n    var option = zrUtil.clone(this.option);\n    each(option, function (opts, mainType) {\n      if (ComponentModel.hasClass(mainType)) {\n        var opts = modelUtil.normalizeToArray(opts);\n\n        for (var i = opts.length - 1; i >= 0; i--) {\n          // Remove options with inner id.\n          if (modelUtil.isIdInner(opts[i])) {\n            opts.splice(i, 1);\n          }\n        }\n\n        option[mainType] = opts;\n      }\n    });\n    delete option[OPTION_INNER_KEY];\n    return option;\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getTheme: function () {\n    return this._theme;\n  },\n\n  /**\n   * @param {string} mainType\n   * @param {number} [idx=0]\n   * @return {module:echarts/model/Component}\n   */\n  getComponent: function (mainType, idx) {\n    var list = this._componentsMap.get(mainType);\n\n    if (list) {\n      return list[idx || 0];\n    }\n  },\n\n  /**\n   * If none of index and id and name used, return all components with mainType.\n   * @param {Object} condition\n   * @param {string} condition.mainType\n   * @param {string} [condition.subType] If ignore, only query by mainType\n   * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  queryComponents: function (condition) {\n    var mainType = condition.mainType;\n\n    if (!mainType) {\n      return [];\n    }\n\n    var index = condition.index;\n    var id = condition.id;\n    var name = condition.name;\n\n    var cpts = this._componentsMap.get(mainType);\n\n    if (!cpts || !cpts.length) {\n      return [];\n    }\n\n    var result;\n\n    if (index != null) {\n      if (!isArray(index)) {\n        index = [index];\n      }\n\n      result = filter(map(index, function (idx) {\n        return cpts[idx];\n      }), function (val) {\n        return !!val;\n      });\n    } else if (id != null) {\n      var isIdArray = isArray(id);\n      result = filter(cpts, function (cpt) {\n        return isIdArray && indexOf(id, cpt.id) >= 0 || !isIdArray && cpt.id === id;\n      });\n    } else if (name != null) {\n      var isNameArray = isArray(name);\n      result = filter(cpts, function (cpt) {\n        return isNameArray && indexOf(name, cpt.name) >= 0 || !isNameArray && cpt.name === name;\n      });\n    } else {\n      // Return all components with mainType\n      result = cpts.slice();\n    }\n\n    return filterBySubType(result, condition);\n  },\n\n  /**\n   * The interface is different from queryComponents,\n   * which is convenient for inner usage.\n   *\n   * @usage\n   * var result = findComponents(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series'},\n   *     function (model, index) {...}\n   * );\n   * // result like [component0, componnet1, ...]\n   *\n   * @param {Object} condition\n   * @param {string} condition.mainType Mandatory.\n   * @param {string} [condition.subType] Optional.\n   * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n   *        where xxx is mainType.\n   *        If query attribute is null/undefined or has no index/id/name,\n   *        do not filtering by query conditions, which is convenient for\n   *        no-payload situations or when target of action is global.\n   * @param {Function} [condition.filter] parameter: component, return boolean.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  findComponents: function (condition) {\n    var query = condition.query;\n    var mainType = condition.mainType;\n    var queryCond = getQueryCond(query);\n    var result = queryCond ? this.queryComponents(queryCond) : this._componentsMap.get(mainType);\n    return doFilter(filterBySubType(result, condition));\n\n    function getQueryCond(q) {\n      var indexAttr = mainType + 'Index';\n      var idAttr = mainType + 'Id';\n      var nameAttr = mainType + 'Name';\n      return q && (q[indexAttr] != null || q[idAttr] != null || q[nameAttr] != null) ? {\n        mainType: mainType,\n        // subType will be filtered finally.\n        index: q[indexAttr],\n        id: q[idAttr],\n        name: q[nameAttr]\n      } : null;\n    }\n\n    function doFilter(res) {\n      return condition.filter ? filter(res, condition.filter) : res;\n    }\n  },\n\n  /**\n   * @usage\n   * eachComponent('legend', function (legendModel, index) {\n   *     ...\n   * });\n   * eachComponent(function (componentType, model, index) {\n   *     // componentType does not include subType\n   *     // (componentType is 'xxx' but not 'xxx.aa')\n   * });\n   * eachComponent(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n   *     function (model, index) {...}\n   * );\n   * eachComponent(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n   *     function (model, index) {...}\n   * );\n   *\n   * @param {string|Object=} mainType When mainType is object, the definition\n   *                                  is the same as the method 'findComponents'.\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachComponent: function (mainType, cb, context) {\n    var componentsMap = this._componentsMap;\n\n    if (typeof mainType === 'function') {\n      context = cb;\n      cb = mainType;\n      componentsMap.each(function (components, componentType) {\n        each(components, function (component, index) {\n          cb.call(context, componentType, component, index);\n        });\n      });\n    } else if (zrUtil.isString(mainType)) {\n      each(componentsMap.get(mainType), cb, context);\n    } else if (isObject(mainType)) {\n      var queryResult = this.findComponents(mainType);\n      each(queryResult, cb, context);\n    }\n  },\n\n  /**\n   * @param {string} name\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByName: function (name) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.name === name;\n    });\n  },\n\n  /**\n   * @param {number} seriesIndex\n   * @return {module:echarts/model/Series}\n   */\n  getSeriesByIndex: function (seriesIndex) {\n    return this._componentsMap.get('series')[seriesIndex];\n  },\n\n  /**\n   * @param {string} subType\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByType: function (subType) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.subType === subType;\n    });\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeries: function () {\n    return this._componentsMap.get('series').slice();\n  },\n\n  /**\n   * After filtering, series may be different\n   * frome raw series.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      cb.call(context, series, rawSeriesIndex);\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeries: function (cb, context) {\n    each(this._componentsMap.get('series'), cb, context);\n  },\n\n  /**\n   * After filtering, series may be different.\n   * frome raw series.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeriesByType: function (subType, cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      if (series.subType === subType) {\n        cb.call(context, series, rawSeriesIndex);\n      }\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered of given type.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeriesByType: function (subType, cb, context) {\n    return each(this.getSeriesByType(subType), cb, context);\n  },\n\n  /**\n   * @param {module:echarts/model/Series} seriesModel\n   */\n  isSeriesFiltered: function (seriesModel) {\n    assertSeriesInitialized(this);\n    return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getCurrentSeriesIndices: function () {\n    return (this._seriesIndices || []).slice();\n  },\n\n  /**\n   * @param {Function} cb\n   * @param {*} context\n   */\n  filterSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    var filteredSeries = filter(this._componentsMap.get('series'), cb, context);\n    this._seriesIndices = createSeriesIndices(filteredSeries);\n  },\n  restoreData: function () {\n    var componentsMap = this._componentsMap;\n    this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n    var componentTypes = [];\n    componentsMap.each(function (components, componentType) {\n      componentTypes.push(componentType);\n    });\n    ComponentModel.topologicalTravel(componentTypes, ComponentModel.getAllClassMainTypes(), function (componentType, dependencies) {\n      each(componentsMap.get(componentType), function (component) {\n        component.restoreData();\n      });\n    });\n  }\n});\n/**\n * @inner\n */\n\nfunction mergeTheme(option, theme) {\n  zrUtil.each(theme, function (themeItem, name) {\n    // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n    if (!ComponentModel.hasClass(name)) {\n      if (typeof themeItem === 'object') {\n        option[name] = !option[name] ? zrUtil.clone(themeItem) : zrUtil.merge(option[name], themeItem, false);\n      } else {\n        if (option[name] == null) {\n          option[name] = themeItem;\n        }\n      }\n    }\n  });\n}\n\nfunction initBase(baseOption) {\n  baseOption = baseOption; // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n  // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n\n  this.option = {};\n  this.option[OPTION_INNER_KEY] = 1;\n  /**\n   * Init with series: [], in case of calling findSeries method\n   * before series initialized.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @private\n   */\n\n  this._componentsMap = zrUtil.createHashMap({\n    series: []\n  });\n  /**\n   * Mapping between filtered series list and raw series list.\n   * key: filtered series indices, value: raw series indices.\n   * @type {Array.<nubmer>}\n   * @private\n   */\n\n  this._seriesIndices = null;\n  mergeTheme(baseOption, this._theme.option); // TODO Needs clone when merging to the unexisted property\n\n  zrUtil.merge(baseOption, globalDefault, false);\n  this.mergeOption(baseOption);\n}\n/**\n * @inner\n * @param {Array.<string>|string} types model types\n * @return {Object} key: {string} type, value: {Array.<Object>} models\n */\n\n\nfunction getComponentsByTypes(componentsMap, types) {\n  if (!zrUtil.isArray(types)) {\n    types = types ? [types] : [];\n  }\n\n  var ret = {};\n  each(types, function (type) {\n    ret[type] = (componentsMap.get(type) || []).slice();\n  });\n  return ret;\n}\n/**\n * @inner\n */\n\n\nfunction determineSubType(mainType, newCptOption, existComponent) {\n  var subType = newCptOption.type ? newCptOption.type : existComponent ? existComponent.subType // Use determineSubType only when there is no existComponent.\n  : ComponentModel.determineSubType(mainType, newCptOption); // tooltip, markline, markpoint may always has no subType\n\n  return subType;\n}\n/**\n * @inner\n */\n\n\nfunction createSeriesIndices(seriesModels) {\n  return map(seriesModels, function (series) {\n    return series.componentIndex;\n  }) || [];\n}\n/**\n * @inner\n */\n\n\nfunction filterBySubType(components, condition) {\n  // Using hasOwnProperty for restrict. Consider\n  // subType is undefined in user payload.\n  return condition.hasOwnProperty('subType') ? filter(components, function (cpt) {\n    return cpt.subType === condition.subType;\n  }) : components;\n}\n/**\n * @inner\n */\n\n\nfunction assertSeriesInitialized(ecModel) {}\n\nzrUtil.mixin(GlobalModel, colorPaletteMinin);\nvar _default = GlobalModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/Global.js\n// module id = 1101\n// module chunks = 0 1 2","var makeStyleMapper = require(\"./makeStyleMapper\");\n\nvar getLineStyle = makeStyleMapper([['lineWidth', 'width'], ['stroke', 'color'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\nvar _default = {\n  getLineStyle: function (excludes) {\n    var style = getLineStyle(this, excludes);\n    var lineDash = this.getLineDash(style.lineWidth);\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getLineDash: function (lineWidth) {\n    if (lineWidth == null) {\n      lineWidth = 1;\n    }\n\n    var lineType = this.get('type');\n    var dotSize = Math.max(lineWidth, 2);\n    var dashSize = lineWidth * 4;\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize];\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/mixin/lineStyle.js\n// module id = 1102\n// module chunks = 0 1 2","var makeStyleMapper = require(\"./makeStyleMapper\");\n\nvar getAreaStyle = makeStyleMapper([['fill', 'color'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['opacity'], ['shadowColor']]);\nvar _default = {\n  getAreaStyle: function (excludes, includes) {\n    return getAreaStyle(this, excludes, includes);\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/mixin/areaStyle.js\n// module id = 1103\n// module chunks = 0 1 2","var textContain = require(\"zrender/lib/contain/text\");\n\nvar graphicUtil = require(\"../../util/graphic\");\n\nvar PATH_COLOR = ['textStyle', 'color'];\nvar _default = {\n  /**\n   * Get color property or get color from option.textStyle.color\n   * @param {boolean} [isEmphasis]\n   * @return {string}\n   */\n  getTextColor: function (isEmphasis) {\n    var ecModel = this.ecModel;\n    return this.getShallow('color') || (!isEmphasis && ecModel ? ecModel.get(PATH_COLOR) : null);\n  },\n\n  /**\n   * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n   * @return {string}\n   */\n  getFont: function () {\n    return graphicUtil.getFont({\n      fontStyle: this.getShallow('fontStyle'),\n      fontWeight: this.getShallow('fontWeight'),\n      fontSize: this.getShallow('fontSize'),\n      fontFamily: this.getShallow('fontFamily')\n    }, this.ecModel);\n  },\n  getTextRect: function (text) {\n    return textContain.getBoundingRect(text, this.getFont(), this.getShallow('align'), this.getShallow('verticalAlign') || this.getShallow('baseline'), this.getShallow('padding'), this.getShallow('rich'), this.getShallow('truncateText'));\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/mixin/textStyle.js\n// module id = 1104\n// module chunks = 0 1 2","var Path = require(\"../graphic/Path\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar transformPath = require(\"./transformPath\");\n\n// command chars\nvar cc = ['m', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z', 'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'];\nvar mathSqrt = Math.sqrt;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI = Math.PI;\n\nvar vMag = function (v) {\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n};\n\nvar vRatio = function (u, v) {\n  return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n};\n\nvar vAngle = function (u, v) {\n  return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n};\n\nfunction processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n  var psi = psiDeg * (PI / 180.0);\n  var xp = mathCos(psi) * (x1 - x2) / 2.0 + mathSin(psi) * (y1 - y2) / 2.0;\n  var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0 + mathCos(psi) * (y1 - y2) / 2.0;\n  var lambda = xp * xp / (rx * rx) + yp * yp / (ry * ry);\n\n  if (lambda > 1) {\n    rx *= mathSqrt(lambda);\n    ry *= mathSqrt(lambda);\n  }\n\n  var f = (fa === fs ? -1 : 1) * mathSqrt((rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) / (rx * rx * (yp * yp) + ry * ry * (xp * xp))) || 0;\n  var cxp = f * rx * yp / ry;\n  var cyp = f * -ry * xp / rx;\n  var cx = (x1 + x2) / 2.0 + mathCos(psi) * cxp - mathSin(psi) * cyp;\n  var cy = (y1 + y2) / 2.0 + mathSin(psi) * cxp + mathCos(psi) * cyp;\n  var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n  var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n  var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n  var dTheta = vAngle(u, v);\n\n  if (vRatio(u, v) <= -1) {\n    dTheta = PI;\n  }\n\n  if (vRatio(u, v) >= 1) {\n    dTheta = 0;\n  }\n\n  if (fs === 0 && dTheta > 0) {\n    dTheta = dTheta - 2 * PI;\n  }\n\n  if (fs === 1 && dTheta < 0) {\n    dTheta = dTheta + 2 * PI;\n  }\n\n  path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n}\n\nfunction createPathProxyFromString(data) {\n  if (!data) {\n    return [];\n  } // command string\n\n\n  var cs = data.replace(/-/g, ' -').replace(/  /g, ' ').replace(/ /g, ',').replace(/,,/g, ',');\n  var n; // create pipes so that we can split the data\n\n  for (n = 0; n < cc.length; n++) {\n    cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n  } // create array\n\n\n  var arr = cs.split('|'); // init context point\n\n  var cpx = 0;\n  var cpy = 0;\n  var path = new PathProxy();\n  var CMD = PathProxy.CMD;\n  var prevCmd;\n\n  for (n = 1; n < arr.length; n++) {\n    var str = arr[n];\n    var c = str.charAt(0);\n    var off = 0;\n    var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n    var cmd;\n\n    if (p.length > 0 && p[0] === '') {\n      p.shift();\n    }\n\n    for (var i = 0; i < p.length; i++) {\n      p[i] = parseFloat(p[i]);\n    }\n\n    while (off < p.length && !isNaN(p[off])) {\n      if (isNaN(p[0])) {\n        break;\n      }\n\n      var ctlPtx;\n      var ctlPty;\n      var rx;\n      var ry;\n      var psi;\n      var fa;\n      var fs;\n      var x1 = cpx;\n      var y1 = cpy; // convert l, H, h, V, and v to L\n\n      switch (c) {\n        case 'l':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'L':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'm':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'l';\n          break;\n\n        case 'M':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'L';\n          break;\n\n        case 'h':\n          cpx += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'H':\n          cpx = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'v':\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'V':\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'C':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]);\n          cpx = p[off - 2];\n          cpy = p[off - 1];\n          break;\n\n        case 'c':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy);\n          cpx += p[off - 2];\n          cpy += p[off - 1];\n          break;\n\n        case 'S':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 's':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = cpx + p[off++];\n          y1 = cpy + p[off++];\n          cpx += p[off++];\n          cpy += p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 'Q':\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'q':\n          x1 = p[off++] + cpx;\n          y1 = p[off++] + cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'T':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 't':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 'A':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n\n        case 'a':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n      }\n    }\n\n    if (c === 'z' || c === 'Z') {\n      cmd = CMD.Z;\n      path.addData(cmd);\n    }\n\n    prevCmd = cmd;\n  }\n\n  path.toStatic();\n  return path;\n} // TODO Optimize double memory cost problem\n\n\nfunction createPathOptions(str, opts) {\n  var pathProxy = createPathProxyFromString(str);\n  opts = opts || {};\n\n  opts.buildPath = function (path) {\n    if (path.setData) {\n      path.setData(pathProxy.data); // Svg and vml renderer don't have context\n\n      var ctx = path.getContext();\n\n      if (ctx) {\n        path.rebuildPath(ctx);\n      }\n    } else {\n      var ctx = path;\n      pathProxy.rebuildPath(ctx);\n    }\n  };\n\n  opts.applyTransform = function (m) {\n    transformPath(pathProxy, m);\n    this.dirty(true);\n  };\n\n  return opts;\n}\n/**\n * Create a Path object from path string data\n * http://www.w3.org/TR/SVG/paths.html#PathData\n * @param  {Object} opts Other options\n */\n\n\nfunction createFromString(str, opts) {\n  return new Path(createPathOptions(str, opts));\n}\n/**\n * Create a Path class from path string data\n * @param  {string} str\n * @param  {Object} opts Other options\n */\n\n\nfunction extendFromString(str, opts) {\n  return Path.extend(createPathOptions(str, opts));\n}\n/**\n * Merge multiple paths\n */\n// TODO Apply transform\n// TODO stroke dash\n// TODO Optimize double memory cost problem\n\n\nfunction mergePath(pathEls, opts) {\n  var pathList = [];\n  var len = pathEls.length;\n\n  for (var i = 0; i < len; i++) {\n    var pathEl = pathEls[i];\n\n    if (!pathEl.path) {\n      pathEl.createPathProxy();\n    }\n\n    if (pathEl.__dirtyPath) {\n      pathEl.buildPath(pathEl.path, pathEl.shape, true);\n    }\n\n    pathList.push(pathEl.path);\n  }\n\n  var pathBundle = new Path(opts); // Need path proxy.\n\n  pathBundle.createPathProxy();\n\n  pathBundle.buildPath = function (path) {\n    path.appendPath(pathList); // Svg and vml renderer don't have context\n\n    var ctx = path.getContext();\n\n    if (ctx) {\n      path.rebuildPath(ctx);\n    }\n  };\n\n  return pathBundle;\n}\n\nexports.createFromString = createFromString;\nexports.extendFromString = extendFromString;\nexports.mergePath = mergePath;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/tool/path.js\n// module id = 1105\n// module chunks = 0 1 2","var PathProxy = require(\"../core/PathProxy\");\n\nvar line = require(\"./line\");\n\nvar cubic = require(\"./cubic\");\n\nvar quadratic = require(\"./quadratic\");\n\nvar arc = require(\"./arc\");\n\nvar _util = require(\"./util\");\n\nvar normalizeRadian = _util.normalizeRadian;\n\nvar curve = require(\"../core/curve\");\n\nvar windingLine = require(\"./windingLine\");\n\nvar CMD = PathProxy.CMD;\nvar PI2 = Math.PI * 2;\nvar EPSILON = 1e-4;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n} // 临时数组\n\n\nvar roots = [-1, -1, -1];\nvar extrema = [-1, -1];\n\nfunction swapExtrema() {\n  var tmp = extrema[0];\n  extrema[0] = extrema[1];\n  extrema[1] = tmp;\n}\n\nfunction windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 && y > y3 || y < y0 && y < y1 && y < y2 && y < y3) {\n    return 0;\n  }\n\n  var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var w = 0;\n    var nExtrema = -1;\n    var y0_, y1_;\n\n    for (var i = 0; i < nRoots; i++) {\n      var t = roots[i]; // Avoid winding error when intersection point is the connect point of two line of polygon\n\n      var unit = t === 0 || t === 1 ? 0.5 : 1;\n      var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n\n      if (x_ < x) {\n        // Quick reject\n        continue;\n      }\n\n      if (nExtrema < 0) {\n        nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n\n        if (extrema[1] < extrema[0] && nExtrema > 1) {\n          swapExtrema();\n        }\n\n        y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n\n        if (nExtrema > 1) {\n          y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n        }\n      }\n\n      if (nExtrema == 2) {\n        // 分成三段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else if (t < extrema[1]) {\n          w += y1_ < y0_ ? unit : -unit;\n        } else {\n          w += y3 < y1_ ? unit : -unit;\n        }\n      } else {\n        // 分成两段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else {\n          w += y3 < y0_ ? unit : -unit;\n        }\n      }\n    }\n\n    return w;\n  }\n}\n\nfunction windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 || y < y0 && y < y1 && y < y2) {\n    return 0;\n  }\n\n  var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var t = curve.quadraticExtremum(y0, y1, y2);\n\n    if (t >= 0 && t <= 1) {\n      var w = 0;\n      var y_ = curve.quadraticAt(y0, y1, y2, t);\n\n      for (var i = 0; i < nRoots; i++) {\n        // Remove one endpoint.\n        var unit = roots[i] === 0 || roots[i] === 1 ? 0.5 : 1;\n        var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n\n        if (x_ < x) {\n          // Quick reject\n          continue;\n        }\n\n        if (roots[i] < t) {\n          w += y_ < y0 ? unit : -unit;\n        } else {\n          w += y2 < y_ ? unit : -unit;\n        }\n      }\n\n      return w;\n    } else {\n      // Remove one endpoint.\n      var unit = roots[0] === 0 || roots[0] === 1 ? 0.5 : 1;\n      var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n\n      if (x_ < x) {\n        // Quick reject\n        return 0;\n      }\n\n      return y2 < y0 ? unit : -unit;\n    }\n  }\n} // TODO\n// Arc 旋转\n\n\nfunction windingArc(cx, cy, r, startAngle, endAngle, anticlockwise, x, y) {\n  y -= cy;\n\n  if (y > r || y < -r) {\n    return 0;\n  }\n\n  var tmp = Math.sqrt(r * r - y * y);\n  roots[0] = -tmp;\n  roots[1] = tmp;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff < 1e-4) {\n    return 0;\n  }\n\n  if (diff % PI2 < 1e-4) {\n    // Is a circle\n    startAngle = 0;\n    endAngle = PI2;\n    var dir = anticlockwise ? 1 : -1;\n\n    if (x >= roots[0] + cx && x <= roots[1] + cx) {\n      return dir;\n    } else {\n      return 0;\n    }\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var w = 0;\n\n  for (var i = 0; i < 2; i++) {\n    var x_ = roots[i];\n\n    if (x_ + cx > x) {\n      var angle = Math.atan2(y, x_);\n      var dir = anticlockwise ? 1 : -1;\n\n      if (angle < 0) {\n        angle = PI2 + angle;\n      }\n\n      if (angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle) {\n        if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n          dir = -dir;\n        }\n\n        w += dir;\n      }\n    }\n  }\n\n  return w;\n}\n\nfunction containPath(data, lineWidth, isStroke, x, y) {\n  var w = 0;\n  var xi = 0;\n  var yi = 0;\n  var x0 = 0;\n  var y0 = 0;\n\n  for (var i = 0; i < data.length;) {\n    var cmd = data[i++]; // Begin a new subpath\n\n    if (cmd === CMD.M && i > 1) {\n      // Close previous subpath\n      if (!isStroke) {\n        w += windingLine(xi, yi, x0, y0, x, y);\n      } // 如果被任何一个 subpath 包含\n      // if (w !== 0) {\n      //     return true;\n      // }\n\n    }\n\n    if (i == 1) {\n      // 如果第一个命令是 L, C, Q\n      // 则 previous point 同绘制命令的第一个 point\n      //\n      // 第一个命令为 Arc 的情况下会在后面特殊处理\n      xi = data[i];\n      yi = data[i + 1];\n      x0 = xi;\n      y0 = yi;\n    }\n\n    switch (cmd) {\n      case CMD.M:\n        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n        // 在 closePath 的时候使用\n        x0 = data[i++];\n        y0 = data[i++];\n        xi = x0;\n        yi = y0;\n        break;\n\n      case CMD.L:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n          w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.C:\n        if (isStroke) {\n          if (cubic.containStroke(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.Q:\n        if (isStroke) {\n          if (quadratic.containStroke(xi, yi, data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.A:\n        // TODO Arc 判断的开销比较大\n        var cx = data[i++];\n        var cy = data[i++];\n        var rx = data[i++];\n        var ry = data[i++];\n        var theta = data[i++];\n        var dTheta = data[i++]; // TODO Arc 旋转\n\n        var psi = data[i++];\n        var anticlockwise = 1 - data[i++];\n        var x1 = Math.cos(theta) * rx + cx;\n        var y1 = Math.sin(theta) * ry + cy; // 不是直接使用 arc 命令\n\n        if (i > 1) {\n          w += windingLine(xi, yi, x1, y1, x, y);\n        } else {\n          // 第一个命令起点还未定义\n          x0 = x1;\n          y0 = y1;\n        } // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n\n\n        var _x = (x - cx) * ry / rx + cx;\n\n        if (isStroke) {\n          if (arc.containStroke(cx, cy, ry, theta, theta + dTheta, anticlockwise, lineWidth, _x, y)) {\n            return true;\n          }\n        } else {\n          w += windingArc(cx, cy, ry, theta, theta + dTheta, anticlockwise, _x, y);\n        }\n\n        xi = Math.cos(theta + dTheta) * rx + cx;\n        yi = Math.sin(theta + dTheta) * ry + cy;\n        break;\n\n      case CMD.R:\n        x0 = xi = data[i++];\n        y0 = yi = data[i++];\n        var width = data[i++];\n        var height = data[i++];\n        var x1 = x0 + width;\n        var y1 = y0 + height;\n\n        if (isStroke) {\n          if (line.containStroke(x0, y0, x1, y0, lineWidth, x, y) || line.containStroke(x1, y0, x1, y1, lineWidth, x, y) || line.containStroke(x1, y1, x0, y1, lineWidth, x, y) || line.containStroke(x0, y1, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // FIXME Clockwise ?\n          w += windingLine(x1, y0, x1, y1, x, y);\n          w += windingLine(x0, y1, x0, y0, x, y);\n        }\n\n        break;\n\n      case CMD.Z:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // Close a subpath\n          w += windingLine(xi, yi, x0, y0, x, y); // 如果被任何一个 subpath 包含\n          // FIXME subpaths may overlap\n          // if (w !== 0) {\n          //     return true;\n          // }\n        }\n\n        xi = x0;\n        yi = y0;\n        break;\n    }\n  }\n\n  if (!isStroke && !isAroundEqual(yi, y0)) {\n    w += windingLine(xi, yi, x0, y0, x, y) || 0;\n  }\n\n  return w !== 0;\n}\n\nfunction contain(pathData, x, y) {\n  return containPath(pathData, 0, false, x, y);\n}\n\nfunction containStroke(pathData, lineWidth, x, y) {\n  return containPath(pathData, lineWidth, true, x, y);\n}\n\nexports.contain = contain;\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/contain/path.js\n// module id = 1106\n// module chunks = 0 1 2","var curve = require(\"../core/curve\");\n\n/**\n * 三次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  x3\n * @param  {number}  y3\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l) {\n    return false;\n  }\n\n  var d = curve.cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/contain/cubic.js\n// module id = 1107\n// module chunks = 0 1 2","var _util = require(\"./util\");\n\nvar normalizeRadian = _util.normalizeRadian;\nvar PI2 = Math.PI * 2;\n/**\n * 圆弧描边包含判断\n * @param  {number}  cx\n * @param  {number}  cy\n * @param  {number}  r\n * @param  {number}  startAngle\n * @param  {number}  endAngle\n * @param  {boolean}  anticlockwise\n * @param  {number} lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {Boolean}\n */\n\nfunction containStroke(cx, cy, r, startAngle, endAngle, anticlockwise, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  x -= cx;\n  y -= cy;\n  var d = Math.sqrt(x * x + y * y);\n\n  if (d - _l > r || d + _l < r) {\n    return false;\n  }\n\n  if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n    // Is a circle\n    return true;\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var angle = Math.atan2(y, x);\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle;\n}\n\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/contain/arc.js\n// module id = 1108\n// module chunks = 0 1 2","var PathProxy = require(\"../core/PathProxy\");\n\nvar _vector = require(\"../core/vector\");\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar CMD = PathProxy.CMD;\nvar points = [[], [], []];\nvar mathSqrt = Math.sqrt;\nvar mathAtan2 = Math.atan2;\n\nfunction _default(path, m) {\n  var data = path.data;\n  var cmd;\n  var nPoint;\n  var i;\n  var j;\n  var k;\n  var p;\n  var M = CMD.M;\n  var C = CMD.C;\n  var L = CMD.L;\n  var R = CMD.R;\n  var A = CMD.A;\n  var Q = CMD.Q;\n\n  for (i = 0, j = 0; i < data.length;) {\n    cmd = data[i++];\n    j = i;\n    nPoint = 0;\n\n    switch (cmd) {\n      case M:\n        nPoint = 1;\n        break;\n\n      case L:\n        nPoint = 1;\n        break;\n\n      case C:\n        nPoint = 3;\n        break;\n\n      case Q:\n        nPoint = 2;\n        break;\n\n      case A:\n        var x = m[4];\n        var y = m[5];\n        var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n        var angle = mathAtan2(-m[1] / sy, m[0] / sx); // cx\n\n        data[i] *= sx;\n        data[i++] += x; // cy\n\n        data[i] *= sy;\n        data[i++] += y; // Scale rx and ry\n        // FIXME Assume psi is 0 here\n\n        data[i++] *= sx;\n        data[i++] *= sy; // Start angle\n\n        data[i++] += angle; // end angle\n\n        data[i++] += angle; // FIXME psi\n\n        i += 2;\n        j = i;\n        break;\n\n      case R:\n        // x0, y0\n        p[0] = data[i++];\n        p[1] = data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1]; // x1, y1\n\n        p[0] += data[i++];\n        p[1] += data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1];\n    }\n\n    for (k = 0; k < nPoint; k++) {\n      var p = points[k];\n      p[0] = data[i++];\n      p[1] = data[i++];\n      v2ApplyTransform(p, p, m); // Write back\n\n      data[j++] = p[0];\n      data[j++] = p[1];\n    }\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/tool/transformPath.js\n// module id = 1109\n// module chunks = 0 1 2","var Path = require(\"../Path\");\n\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\nvar _default = Path.extend({\n  type: 'circle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    // Better stroking in ShapeBundle\n    // Always do it may have performence issue ( fill may be 2x more cost)\n    if (inBundle) {\n      ctx.moveTo(shape.cx + shape.r, shape.cy);\n    } // else {\n    //     if (ctx.allocate && !ctx.data.length) {\n    //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n    //     }\n    // }\n    // Better stroking in ShapeBundle\n    // ctx.moveTo(shape.cx + shape.r, shape.cy);\n\n\n    ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/shape/Circle.js\n// module id = 1110\n// module chunks = 0 1 2","var Path = require(\"../Path\");\n\nvar fixClipWithShadow = require(\"../helper/fixClipWithShadow\");\n\n/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\nvar _default = Path.extend({\n  type: 'sector',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r0: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r0 = Math.max(shape.r0 || 0, 0);\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n    ctx.lineTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n    ctx.lineTo(Math.cos(endAngle) * r0 + x, Math.sin(endAngle) * r0 + y);\n\n    if (r0 !== 0) {\n      ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n    }\n\n    ctx.closePath();\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/shape/Sector.js\n// module id = 1111\n// module chunks = 0 1 2","var Path = require(\"../Path\");\n\n/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\nvar _default = Path.extend({\n  type: 'ring',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    r0: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var PI2 = Math.PI * 2;\n    ctx.moveTo(x + shape.r, y);\n    ctx.arc(x, y, shape.r, 0, PI2, false);\n    ctx.moveTo(x + shape.r0, y);\n    ctx.arc(x, y, shape.r0, 0, PI2, true);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/shape/Ring.js\n// module id = 1112\n// module chunks = 0 1 2","var Path = require(\"../Path\");\n\nvar polyHelper = require(\"../helper/poly\");\n\n/**\n * 多边形\n * @module zrender/shape/Polygon\n */\nvar _default = Path.extend({\n  type: 'polygon',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, true);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/shape/Polygon.js\n// module id = 1113\n// module chunks = 0 1 2","var _vector = require(\"../../core/vector\");\n\nvar v2Distance = _vector.distance;\n\n/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * @inner\n */\nfunction interpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n/**\n * @alias module:zrender/shape/util/smoothSpline\n * @param {Array} points 线段顶点数组\n * @param {boolean} isLoop\n * @return {Array}\n */\n\n\nfunction _default(points, isLoop) {\n  var len = points.length;\n  var ret = [];\n  var distance = 0;\n\n  for (var i = 1; i < len; i++) {\n    distance += v2Distance(points[i - 1], points[i]);\n  }\n\n  var segs = distance / 2;\n  segs = segs < len ? len : segs;\n\n  for (var i = 0; i < segs; i++) {\n    var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n    var idx = Math.floor(pos);\n    var w = pos - idx;\n    var p0;\n    var p1 = points[idx % len];\n    var p2;\n    var p3;\n\n    if (!isLoop) {\n      p0 = points[idx === 0 ? idx : idx - 1];\n      p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n      p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n    } else {\n      p0 = points[(idx - 1 + len) % len];\n      p2 = points[(idx + 1) % len];\n      p3 = points[(idx + 2) % len];\n    }\n\n    var w2 = w * w;\n    var w3 = w * w2;\n    ret.push([interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3), interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)]);\n  }\n\n  return ret;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/helper/smoothSpline.js\n// module id = 1114\n// module chunks = 0 1 2","var _vector = require(\"../../core/vector\");\n\nvar v2Min = _vector.min;\nvar v2Max = _vector.max;\nvar v2Scale = _vector.scale;\nvar v2Distance = _vector.distance;\nvar v2Add = _vector.add;\nvar v2Clone = _vector.clone;\nvar v2Sub = _vector.sub;\n\n/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * 贝塞尔平滑曲线\n * @alias module:zrender/shape/util/smoothBezier\n * @param {Array} points 线段顶点数组\n * @param {number} smooth 平滑等级, 0-1\n * @param {boolean} isLoop\n * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n *                           整个折线的包围盒做一个并集用来约束控制点。\n * @param {Array} 计算出来的控制点数组\n */\nfunction _default(points, smooth, isLoop, constraint) {\n  var cps = [];\n  var v = [];\n  var v1 = [];\n  var v2 = [];\n  var prevPoint;\n  var nextPoint;\n  var min, max;\n\n  if (constraint) {\n    min = [Infinity, Infinity];\n    max = [-Infinity, -Infinity];\n\n    for (var i = 0, len = points.length; i < len; i++) {\n      v2Min(min, min, points[i]);\n      v2Max(max, max, points[i]);\n    } // 与指定的包围盒做并集\n\n\n    v2Min(min, min, constraint[0]);\n    v2Max(max, max, constraint[1]);\n  }\n\n  for (var i = 0, len = points.length; i < len; i++) {\n    var point = points[i];\n\n    if (isLoop) {\n      prevPoint = points[i ? i - 1 : len - 1];\n      nextPoint = points[(i + 1) % len];\n    } else {\n      if (i === 0 || i === len - 1) {\n        cps.push(v2Clone(points[i]));\n        continue;\n      } else {\n        prevPoint = points[i - 1];\n        nextPoint = points[i + 1];\n      }\n    }\n\n    v2Sub(v, nextPoint, prevPoint); // use degree to scale the handle length\n\n    v2Scale(v, v, smooth);\n    var d0 = v2Distance(point, prevPoint);\n    var d1 = v2Distance(point, nextPoint);\n    var sum = d0 + d1;\n\n    if (sum !== 0) {\n      d0 /= sum;\n      d1 /= sum;\n    }\n\n    v2Scale(v1, v, -d0);\n    v2Scale(v2, v, d1);\n    var cp0 = v2Add([], point, v1);\n    var cp1 = v2Add([], point, v2);\n\n    if (constraint) {\n      v2Max(cp0, cp0, min);\n      v2Min(cp0, cp0, max);\n      v2Max(cp1, cp1, min);\n      v2Min(cp1, cp1, max);\n    }\n\n    cps.push(cp0);\n    cps.push(cp1);\n  }\n\n  if (isLoop) {\n    cps.push(cps.shift());\n  }\n\n  return cps;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/helper/smoothBezier.js\n// module id = 1115\n// module chunks = 0 1 2","var Path = require(\"../Path\");\n\nvar polyHelper = require(\"../helper/poly\");\n\n/**\n * @module zrender/graphic/shape/Polyline\n */\nvar _default = Path.extend({\n  type: 'polyline',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, false);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/shape/Polyline.js\n// module id = 1116\n// module chunks = 0 1 2","var Path = require(\"../Path\");\n\nvar roundRectHelper = require(\"../helper/roundRect\");\n\n/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\nvar _default = Path.extend({\n  type: 'rect',\n  shape: {\n    // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n    // r缩写为1         相当于 [1, 1, 1, 1]\n    // r缩写为[1]       相当于 [1, 1, 1, 1]\n    // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n    // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n    r: 0,\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var width = shape.width;\n    var height = shape.height;\n\n    if (!shape.r) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, shape);\n    }\n\n    ctx.closePath();\n    return;\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/shape/Rect.js\n// module id = 1117\n// module chunks = 0 1 2","var Path = require(\"../Path\");\n\n/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\nvar _default = Path.extend({\n  type: 'line',\n  shape: {\n    // Start point\n    x1: 0,\n    y1: 0,\n    // End point\n    x2: 0,\n    y2: 0,\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (percent < 1) {\n      x2 = x1 * (1 - percent) + x2 * percent;\n      y2 = y1 * (1 - percent) + y2 * percent;\n    }\n\n    ctx.lineTo(x2, y2);\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} percent\n   * @return {Array.<number>}\n   */\n  pointAt: function (p) {\n    var shape = this.shape;\n    return [shape.x1 * (1 - p) + shape.x2 * p, shape.y1 * (1 - p) + shape.y2 * p];\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/shape/Line.js\n// module id = 1118\n// module chunks = 0 1 2","var Path = require(\"../Path\");\n\nvar vec2 = require(\"../../core/vector\");\n\nvar _curve = require(\"../../core/curve\");\n\nvar quadraticSubdivide = _curve.quadraticSubdivide;\nvar cubicSubdivide = _curve.cubicSubdivide;\nvar quadraticAt = _curve.quadraticAt;\nvar cubicAt = _curve.cubicAt;\nvar quadraticDerivativeAt = _curve.quadraticDerivativeAt;\nvar cubicDerivativeAt = _curve.cubicDerivativeAt;\n\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\nvar out = [];\n\nfunction someVectorAt(shape, t, isTangent) {\n  var cpx2 = shape.cpx2;\n  var cpy2 = shape.cpy2;\n\n  if (cpx2 === null || cpy2 === null) {\n    return [(isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t), (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)];\n  } else {\n    return [(isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t), (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)];\n  }\n}\n\nvar _default = Path.extend({\n  type: 'bezier-curve',\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    cpx1: 0,\n    cpy1: 0,\n    // cpx2: 0,\n    // cpy2: 0\n    // Curve show percent, for animating\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var cpx1 = shape.cpx1;\n    var cpy1 = shape.cpy1;\n    var cpx2 = shape.cpx2;\n    var cpy2 = shape.cpy2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (cpx2 == null || cpy2 == null) {\n      if (percent < 1) {\n        quadraticSubdivide(x1, cpx1, x2, percent, out);\n        cpx1 = out[1];\n        x2 = out[2];\n        quadraticSubdivide(y1, cpy1, y2, percent, out);\n        cpy1 = out[1];\n        y2 = out[2];\n      }\n\n      ctx.quadraticCurveTo(cpx1, cpy1, x2, y2);\n    } else {\n      if (percent < 1) {\n        cubicSubdivide(x1, cpx1, cpx2, x2, percent, out);\n        cpx1 = out[1];\n        cpx2 = out[2];\n        x2 = out[3];\n        cubicSubdivide(y1, cpy1, cpy2, y2, percent, out);\n        cpy1 = out[1];\n        cpy2 = out[2];\n        y2 = out[3];\n      }\n\n      ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\n    }\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  pointAt: function (t) {\n    return someVectorAt(this.shape, t, false);\n  },\n\n  /**\n   * Get tangent at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  tangentAt: function (t) {\n    var p = someVectorAt(this.shape, t, true);\n    return vec2.normalize(p, p);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/shape/BezierCurve.js\n// module id = 1119\n// module chunks = 0 1 2","var Path = require(\"../Path\");\n\n/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\nvar _default = Path.extend({\n  type: 'arc',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/shape/Arc.js\n// module id = 1120\n// module chunks = 0 1 2","var Path = require(\"./Path\");\n\n// CompoundPath to improve performance\nvar _default = Path.extend({\n  type: 'compound',\n  shape: {\n    paths: null\n  },\n  _updatePathDirty: function () {\n    var dirtyPath = this.__dirtyPath;\n    var paths = this.shape.paths;\n\n    for (var i = 0; i < paths.length; i++) {\n      // Mark as dirty if any subpath is dirty\n      dirtyPath = dirtyPath || paths[i].__dirtyPath;\n    }\n\n    this.__dirtyPath = dirtyPath;\n    this.__dirty = this.__dirty || dirtyPath;\n  },\n  beforeBrush: function () {\n    this._updatePathDirty();\n\n    var paths = this.shape.paths || [];\n    var scale = this.getGlobalScale(); // Update path scale\n\n    for (var i = 0; i < paths.length; i++) {\n      if (!paths[i].path) {\n        paths[i].createPathProxy();\n      }\n\n      paths[i].path.setScale(scale[0], scale[1]);\n    }\n  },\n  buildPath: function (ctx, shape) {\n    var paths = shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].buildPath(ctx, paths[i].shape, true);\n    }\n  },\n  afterBrush: function () {\n    var paths = this.shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].__dirtyPath = false;\n    }\n  },\n  getBoundingRect: function () {\n    this._updatePathDirty();\n\n    return Path.prototype.getBoundingRect.call(this);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/CompoundPath.js\n// module id = 1121\n// module chunks = 0 1 2","var zrUtil = require(\"../core/util\");\n\nvar Gradient = require(\"./Gradient\");\n\n/**\n * x, y, r are all percent from 0 to 1\n * @param {number} [x=0.5]\n * @param {number} [y=0.5]\n * @param {number} [r=0.5]\n * @param {Array.<Object>} [colorStops]\n * @param {boolean} [globalCoord=false]\n */\nvar RadialGradient = function (x, y, r, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'radial', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0.5 : x;\n  this.y = y == null ? 0.5 : y;\n  this.r = r == null ? 0.5 : r; // Can be cloned\n\n  this.type = 'radial'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nRadialGradient.prototype = {\n  constructor: RadialGradient\n};\nzrUtil.inherits(RadialGradient, Gradient);\nvar _default = RadialGradient;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/RadialGradient.js\n// module id = 1122\n// module chunks = 0 1 2","var makeStyleMapper = require(\"./makeStyleMapper\");\n\nvar getItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor'], ['textPosition'], ['textAlign']]);\nvar _default = {\n  getItemStyle: function (excludes, includes) {\n    var style = getItemStyle(this, excludes, includes);\n    var lineDash = this.getBorderLineDash();\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getBorderLineDash: function () {\n    var lineType = this.get('borderType');\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [5, 5] : [1, 1];\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/mixin/itemStyle.js\n// module id = 1123\n// module chunks = 0 1 2","var _default = {\n  getBoxLayoutParams: function () {\n    return {\n      left: this.get('left'),\n      top: this.get('top'),\n      right: this.get('right'),\n      bottom: this.get('bottom'),\n      width: this.get('width'),\n      height: this.get('height')\n    };\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/mixin/boxLayout.js\n// module id = 1124\n// module chunks = 0 1 2","var platform = ''; // Navigator not exists in node\n\nif (typeof navigator !== 'undefined') {\n  platform = navigator.platform || '';\n}\n\nvar _default = {\n  // 全图默认背景\n  // backgroundColor: 'rgba(0,0,0,0)',\n  // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n  // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n  // 浅色\n  // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n  // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n  // 深色\n  color: ['#c23531', '#2f4554', '#61a0a8', '#d48265', '#91c7ae', '#749f83', '#ca8622', '#bda29a', '#6e7074', '#546570', '#c4ccd3'],\n  // 默认需要 Grid 配置项\n  // grid: {},\n  // 主题，主题\n  textStyle: {\n    // color: '#000',\n    // decoration: 'none',\n    // PENDING\n    fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n    // fontFamily: 'Arial, Verdana, sans-serif',\n    fontSize: 12,\n    fontStyle: 'normal',\n    fontWeight: 'normal'\n  },\n  // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n  // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n  // Default is source-over\n  blendMode: null,\n  animation: 'auto',\n  animationDuration: 1000,\n  animationDurationUpdate: 300,\n  animationEasing: 'exponentialOut',\n  animationEasingUpdate: 'cubicOut',\n  animationThreshold: 2000,\n  // Configuration for progressive/incremental rendering\n  progressiveThreshold: 3000,\n  progressive: 400,\n  // Threshold of if use single hover layer to optimize.\n  // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n  // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n  // which is unexpected.\n  // see example <echarts/test/heatmap-large.html>.\n  hoverLayerThreshold: 3000,\n  // See: module:echarts/scale/Time\n  useUTC: false\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/globalDefault.js\n// module id = 1125\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar echartsAPIList = ['getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed', 'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption', 'getViewOfComponentModel', 'getViewOfSeriesModel']; // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\n\nfunction ExtensionAPI(chartInstance) {\n  zrUtil.each(echartsAPIList, function (name) {\n    this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n  }, this);\n}\n\nvar _default = ExtensionAPI;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/ExtensionAPI.js\n// module id = 1126\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar ComponentModel = require(\"./Component\");\n\n/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\nvar each = zrUtil.each;\nvar clone = zrUtil.clone;\nvar map = zrUtil.map;\nvar merge = zrUtil.merge;\nvar QUERY_REG = /^(min|max)?(.+)$/;\n/**\n * TERM EXPLANATIONS:\n *\n * [option]:\n *\n *     An object that contains definitions of components. For example:\n *     var option = {\n *         title: {...},\n *         legend: {...},\n *         visualMap: {...},\n *         series: [\n *             {data: [...]},\n *             {data: [...]},\n *             ...\n *         ]\n *     };\n *\n * [rawOption]:\n *\n *     An object input to echarts.setOption. 'rawOption' may be an\n *     'option', or may be an object contains multi-options. For example:\n *     var option = {\n *         baseOption: {\n *             title: {...},\n *             legend: {...},\n *             series: [\n *                 {data: [...]},\n *                 {data: [...]},\n *                 ...\n *             ]\n *         },\n *         timeline: {...},\n *         options: [\n *             {title: {...}, series: {data: [...]}},\n *             {title: {...}, series: {data: [...]}},\n *             ...\n *         ],\n *         media: [\n *             {\n *                 query: {maxWidth: 320},\n *                 option: {series: {x: 20}, visualMap: {show: false}}\n *             },\n *             {\n *                 query: {minWidth: 320, maxWidth: 720},\n *                 option: {series: {x: 500}, visualMap: {show: true}}\n *             },\n *             {\n *                 option: {series: {x: 1200}, visualMap: {show: true}}\n *             }\n *         ]\n *     };\n *\n * @alias module:echarts/model/OptionManager\n * @param {module:echarts/ExtensionAPI} api\n */\n\nfunction OptionManager(api) {\n  /**\n   * @private\n   * @type {module:echarts/ExtensionAPI}\n   */\n  this._api = api;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._timelineOptions = [];\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n\n  this._mediaList = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._mediaDefault;\n  /**\n   * -1, means default.\n   * empty means no media.\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._currentMediaIndices = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._optionBackup;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._newBaseOption;\n} // timeline.notMerge is not supported in ec3. Firstly there is rearly\n// case that notMerge is needed. Secondly supporting 'notMerge' requires\n// rawOption cloned and backuped when timeline changed, which does no\n// good to performance. What's more, that both timeline and setOption\n// method supply 'notMerge' brings complex and some problems.\n// Consider this case:\n// (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n// (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n\nOptionManager.prototype = {\n  constructor: OptionManager,\n\n  /**\n   * @public\n   * @param {Object} rawOption Raw option.\n   * @param {module:echarts/model/Global} ecModel\n   * @param {Array.<Function>} optionPreprocessorFuncs\n   * @return {Object} Init option\n   */\n  setOption: function (rawOption, optionPreprocessorFuncs) {\n    rawOption = clone(rawOption, true); // FIXME\n    // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n    var oldOptionBackup = this._optionBackup;\n    var newParsedOption = parseRawOption.call(this, rawOption, optionPreprocessorFuncs, !oldOptionBackup);\n    this._newBaseOption = newParsedOption.baseOption; // For setOption at second time (using merge mode);\n\n    if (oldOptionBackup) {\n      // Only baseOption can be merged.\n      mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption); // For simplicity, timeline options and media options do not support merge,\n      // that is, if you `setOption` twice and both has timeline options, the latter\n      // timeline opitons will not be merged to the formers, but just substitude them.\n\n      if (newParsedOption.timelineOptions.length) {\n        oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n      }\n\n      if (newParsedOption.mediaList.length) {\n        oldOptionBackup.mediaList = newParsedOption.mediaList;\n      }\n\n      if (newParsedOption.mediaDefault) {\n        oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n      }\n    } else {\n      this._optionBackup = newParsedOption;\n    }\n  },\n\n  /**\n   * @param {boolean} isRecreate\n   * @return {Object}\n   */\n  mountOption: function (isRecreate) {\n    var optionBackup = this._optionBackup; // TODO\n    // 如果没有reset功能则不clone。\n\n    this._timelineOptions = map(optionBackup.timelineOptions, clone);\n    this._mediaList = map(optionBackup.mediaList, clone);\n    this._mediaDefault = clone(optionBackup.mediaDefault);\n    this._currentMediaIndices = [];\n    return clone(isRecreate // this._optionBackup.baseOption, which is created at the first `setOption`\n    // called, and is merged into every new option by inner method `mergeOption`\n    // each time `setOption` called, can be only used in `isRecreate`, because\n    // its reliability is under suspicion. In other cases option merge is\n    // performed by `model.mergeOption`.\n    ? optionBackup.baseOption : this._newBaseOption);\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Object}\n   */\n  getTimelineOption: function (ecModel) {\n    var option;\n    var timelineOptions = this._timelineOptions;\n\n    if (timelineOptions.length) {\n      // getTimelineOption can only be called after ecModel inited,\n      // so we can get currentIndex from timelineModel.\n      var timelineModel = ecModel.getComponent('timeline');\n\n      if (timelineModel) {\n        option = clone(timelineOptions[timelineModel.getCurrentIndex()], true);\n      }\n    }\n\n    return option;\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Array.<Object>}\n   */\n  getMediaOption: function (ecModel) {\n    var ecWidth = this._api.getWidth();\n\n    var ecHeight = this._api.getHeight();\n\n    var mediaList = this._mediaList;\n    var mediaDefault = this._mediaDefault;\n    var indices = [];\n    var result = []; // No media defined.\n\n    if (!mediaList.length && !mediaDefault) {\n      return result;\n    } // Multi media may be applied, the latter defined media has higher priority.\n\n\n    for (var i = 0, len = mediaList.length; i < len; i++) {\n      if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n        indices.push(i);\n      }\n    } // FIXME\n    // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n\n\n    if (!indices.length && mediaDefault) {\n      indices = [-1];\n    }\n\n    if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n      result = map(indices, function (index) {\n        return clone(index === -1 ? mediaDefault.option : mediaList[index].option);\n      });\n    } // Otherwise return nothing.\n\n\n    this._currentMediaIndices = indices;\n    return result;\n  }\n};\n\nfunction parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n  var timelineOptions = [];\n  var mediaList = [];\n  var mediaDefault;\n  var baseOption; // Compatible with ec2.\n\n  var timelineOpt = rawOption.timeline;\n\n  if (rawOption.baseOption) {\n    baseOption = rawOption.baseOption;\n  } // For timeline\n\n\n  if (timelineOpt || rawOption.options) {\n    baseOption = baseOption || {};\n    timelineOptions = (rawOption.options || []).slice();\n  } // For media query\n\n\n  if (rawOption.media) {\n    baseOption = baseOption || {};\n    var media = rawOption.media;\n    each(media, function (singleMedia) {\n      if (singleMedia && singleMedia.option) {\n        if (singleMedia.query) {\n          mediaList.push(singleMedia);\n        } else if (!mediaDefault) {\n          // Use the first media default.\n          mediaDefault = singleMedia;\n        }\n      }\n    });\n  } // For normal option\n\n\n  if (!baseOption) {\n    baseOption = rawOption;\n  } // Set timelineOpt to baseOption in ec3,\n  // which is convenient for merge option.\n\n\n  if (!baseOption.timeline) {\n    baseOption.timeline = timelineOpt;\n  } // Preprocess.\n\n\n  each([baseOption].concat(timelineOptions).concat(zrUtil.map(mediaList, function (media) {\n    return media.option;\n  })), function (option) {\n    each(optionPreprocessorFuncs, function (preProcess) {\n      preProcess(option, isNew);\n    });\n  });\n  return {\n    baseOption: baseOption,\n    timelineOptions: timelineOptions,\n    mediaDefault: mediaDefault,\n    mediaList: mediaList\n  };\n}\n/**\n * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n * Support: width, height, aspectRatio\n * Can use max or min as prefix.\n */\n\n\nfunction applyMediaQuery(query, ecWidth, ecHeight) {\n  var realMap = {\n    width: ecWidth,\n    height: ecHeight,\n    aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n\n  };\n  var applicatable = true;\n  zrUtil.each(query, function (value, attr) {\n    var matched = attr.match(QUERY_REG);\n\n    if (!matched || !matched[1] || !matched[2]) {\n      return;\n    }\n\n    var operator = matched[1];\n    var realAttr = matched[2].toLowerCase();\n\n    if (!compare(realMap[realAttr], value, operator)) {\n      applicatable = false;\n    }\n  });\n  return applicatable;\n}\n\nfunction compare(real, expect, operator) {\n  if (operator === 'min') {\n    return real >= expect;\n  } else if (operator === 'max') {\n    return real <= expect;\n  } else {\n    // Equals\n    return real === expect;\n  }\n}\n\nfunction indicesEquals(indices1, indices2) {\n  // indices is always order by asc and has only finite number.\n  return indices1.join(',') === indices2.join(',');\n}\n/**\n * Consider case:\n * `chart.setOption(opt1);`\n * Then user do some interaction like dataZoom, dataView changing.\n * `chart.setOption(opt2);`\n * Then user press 'reset button' in toolbox.\n *\n * After doing that all of the interaction effects should be reset, the\n * chart should be the same as the result of invoke\n * `chart.setOption(opt1); chart.setOption(opt2);`.\n *\n * Although it is not able ensure that\n * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n * `chart.setOption(merge(opt1, opt2));` exactly,\n * this might be the only simple way to implement that feature.\n *\n * MEMO: We've considered some other approaches:\n * 1. Each model handle its self restoration but not uniform treatment.\n *     (Too complex in logic and error-prone)\n * 2. Use a shadow ecModel. (Performace expensive)\n */\n\n\nfunction mergeOption(oldOption, newOption) {\n  newOption = newOption || {};\n  each(newOption, function (newCptOpt, mainType) {\n    if (newCptOpt == null) {\n      return;\n    }\n\n    var oldCptOpt = oldOption[mainType];\n\n    if (!ComponentModel.hasClass(mainType)) {\n      oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n    } else {\n      newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n      oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n      var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n      oldOption[mainType] = map(mapResult, function (item) {\n        return item.option && item.exist ? merge(item.exist, item.option, true) : item.exist || item.option;\n      });\n    }\n  });\n}\n\nvar _default = OptionManager;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/OptionManager.js\n// module id = 1127\n// module chunks = 0 1 2","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar isArray = _util.isArray;\nvar isObject = _util.isObject;\n\nvar compatStyle = require(\"./helper/compatStyle\");\n\nvar _model = require(\"../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\n// Compatitable with 2.0\nfunction get(opt, path) {\n  path = path.split(',');\n  var obj = opt;\n\n  for (var i = 0; i < path.length; i++) {\n    obj = obj && obj[path[i]];\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  return obj;\n}\n\nfunction set(opt, path, val, overwrite) {\n  path = path.split(',');\n  var obj = opt;\n  var key;\n\n  for (var i = 0; i < path.length - 1; i++) {\n    key = path[i];\n\n    if (obj[key] == null) {\n      obj[key] = {};\n    }\n\n    obj = obj[key];\n  }\n\n  if (overwrite || obj[path[i]] == null) {\n    obj[path[i]] = val;\n  }\n}\n\nfunction compatLayoutProperties(option) {\n  each(LAYOUT_PROPERTIES, function (prop) {\n    if (prop[0] in option && !(prop[1] in option)) {\n      option[prop[1]] = option[prop[0]];\n    }\n  });\n}\n\nvar LAYOUT_PROPERTIES = [['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']];\nvar COMPATITABLE_COMPONENTS = ['grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'];\nvar COMPATITABLE_SERIES = ['bar', 'boxplot', 'candlestick', 'chord', 'effectScatter', 'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel', 'pie', 'radar', 'sankey', 'scatter', 'treemap'];\n\nfunction _default(option, isTheme) {\n  compatStyle(option, isTheme); // Make sure series array for model initialization.\n\n  option.series = normalizeToArray(option.series);\n  each(option.series, function (seriesOpt) {\n    if (!isObject(seriesOpt)) {\n      return;\n    }\n\n    var seriesType = seriesOpt.type;\n\n    if (seriesType === 'pie' || seriesType === 'gauge') {\n      if (seriesOpt.clockWise != null) {\n        seriesOpt.clockwise = seriesOpt.clockWise;\n      }\n    }\n\n    if (seriesType === 'gauge') {\n      var pointerColor = get(seriesOpt, 'pointer.color');\n      pointerColor != null && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n    }\n\n    for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\n      if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\n        compatLayoutProperties(seriesOpt);\n        break;\n      }\n    }\n  }); // dataRange has changed to visualMap\n\n  if (option.dataRange) {\n    option.visualMap = option.dataRange;\n  }\n\n  each(COMPATITABLE_COMPONENTS, function (componentName) {\n    var options = option[componentName];\n\n    if (options) {\n      if (!isArray(options)) {\n        options = [options];\n      }\n\n      each(options, function (option) {\n        compatLayoutProperties(option);\n      });\n    }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/preprocessor/backwardCompat.js\n// module id = 1128\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar POSSIBLE_STYLES = ['areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle', 'chordStyle', 'label', 'labelLine'];\n\nfunction compatItemStyle(opt) {\n  var itemStyleOpt = opt && opt.itemStyle;\n\n  if (!itemStyleOpt) {\n    return;\n  }\n\n  for (var i = 0, len = POSSIBLE_STYLES.length; i < len; i++) {\n    var styleName = POSSIBLE_STYLES[i];\n    var normalItemStyleOpt = itemStyleOpt.normal;\n    var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n\n    if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].normal) {\n        opt[styleName].normal = normalItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n      }\n\n      normalItemStyleOpt[styleName] = null;\n    }\n\n    if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].emphasis) {\n        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n      }\n\n      emphasisItemStyleOpt[styleName] = null;\n    }\n  }\n}\n\nfunction compatTextStyle(opt, propName) {\n  var labelOptSingle = isObject(opt) && opt[propName];\n  var textStyle = isObject(labelOptSingle) && labelOptSingle.textStyle;\n\n  if (textStyle) {\n    for (var i = 0, len = modelUtil.TEXT_STYLE_OPTIONS.length; i < len; i++) {\n      var propName = modelUtil.TEXT_STYLE_OPTIONS[i];\n\n      if (textStyle.hasOwnProperty(propName)) {\n        labelOptSingle[propName] = textStyle[propName];\n      }\n    }\n  }\n}\n\nfunction compatLabelTextStyle(labelOpt) {\n  if (isObject(labelOpt)) {\n    compatTextStyle(labelOpt, 'normal');\n    compatTextStyle(labelOpt, 'emphasis');\n  }\n}\n\nfunction processSeries(seriesOpt) {\n  if (!isObject(seriesOpt)) {\n    return;\n  }\n\n  compatItemStyle(seriesOpt);\n  compatLabelTextStyle(seriesOpt.label); // treemap\n\n  compatLabelTextStyle(seriesOpt.upperLabel); // graph\n\n  compatLabelTextStyle(seriesOpt.edgeLabel);\n  var markPoint = seriesOpt.markPoint;\n  compatItemStyle(markPoint);\n  compatLabelTextStyle(markPoint && markPoint.label);\n  var markLine = seriesOpt.markLine;\n  compatItemStyle(seriesOpt.markLine);\n  compatLabelTextStyle(markLine && markLine.label);\n  var markArea = seriesOpt.markArea;\n  compatLabelTextStyle(markArea && markArea.label); // For gauge\n\n  compatTextStyle(seriesOpt, 'axisLabel');\n  compatTextStyle(seriesOpt, 'title');\n  compatTextStyle(seriesOpt, 'detail');\n  var data = seriesOpt.data;\n\n  if (data) {\n    for (var i = 0; i < data.length; i++) {\n      compatItemStyle(data[i]);\n      compatLabelTextStyle(data[i] && data[i].label);\n    }\n  } // mark point data\n\n\n  var markPoint = seriesOpt.markPoint;\n\n  if (markPoint && markPoint.data) {\n    var mpData = markPoint.data;\n\n    for (var i = 0; i < mpData.length; i++) {\n      compatItemStyle(mpData[i]);\n      compatLabelTextStyle(mpData[i] && mpData[i].label);\n    }\n  } // mark line data\n\n\n  var markLine = seriesOpt.markLine;\n\n  if (markLine && markLine.data) {\n    var mlData = markLine.data;\n\n    for (var i = 0; i < mlData.length; i++) {\n      if (zrUtil.isArray(mlData[i])) {\n        compatItemStyle(mlData[i][0]);\n        compatLabelTextStyle(mlData[i][0] && mlData[i][0].label);\n        compatItemStyle(mlData[i][1]);\n        compatLabelTextStyle(mlData[i][1] && mlData[i][1].label);\n      } else {\n        compatItemStyle(mlData[i]);\n        compatLabelTextStyle(mlData[i] && mlData[i].label);\n      }\n    }\n  }\n}\n\nfunction toArr(o) {\n  return zrUtil.isArray(o) ? o : o ? [o] : [];\n}\n\nfunction toObj(o) {\n  return (zrUtil.isArray(o) ? o[0] : o) || {};\n}\n\nfunction _default(option, isTheme) {\n  each(toArr(option.series), function (seriesOpt) {\n    isObject(seriesOpt) && processSeries(seriesOpt);\n  });\n  var axes = ['xAxis', 'yAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'parallelAxis', 'radar'];\n  isTheme && axes.push('valueAxis', 'categoryAxis', 'logAxis', 'timeAxis');\n  each(axes, function (axisName) {\n    each(toArr(option[axisName]), function (axisOpt) {\n      if (axisOpt) {\n        compatTextStyle(axisOpt, 'axisLabel');\n        compatTextStyle(axisOpt.axisPointer, 'label');\n      }\n    });\n  });\n  each(toArr(option.parallel), function (parallelOpt) {\n    var parallelAxisDefault = parallelOpt && parallelOpt.parallelAxisDefault;\n    compatTextStyle(parallelAxisDefault, 'axisLabel');\n    compatTextStyle(parallelAxisDefault && parallelAxisDefault.axisPointer, 'label');\n  });\n  each(toArr(option.calendar), function (calendarOpt) {\n    compatTextStyle(calendarOpt, 'dayLabel');\n    compatTextStyle(calendarOpt, 'monthLabel');\n    compatTextStyle(calendarOpt, 'yearLabel');\n  }); // radar.name.textStyle\n\n  each(toArr(option.radar), function (radarOpt) {\n    compatTextStyle(radarOpt, 'name');\n  });\n  each(toArr(option.geo), function (geoOpt) {\n    if (isObject(geoOpt)) {\n      compatLabelTextStyle(geoOpt.label);\n      each(toArr(geoOpt.regions), function (regionObj) {\n        compatLabelTextStyle(regionObj.label);\n      });\n    }\n  });\n  compatLabelTextStyle(toObj(option.timeline).label);\n  compatTextStyle(toObj(option.axisPointer), 'label');\n  compatTextStyle(toObj(option.tooltip).axisPointer, 'label');\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/preprocessor/helper/compatStyle.js\n// module id = 1129\n// module chunks = 0 1 2","var Gradient = require(\"zrender/lib/graphic/Gradient\");\n\nfunction _default(ecModel) {\n  function encodeColor(seriesModel) {\n    var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\n    var data = seriesModel.getData();\n    var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n    || seriesModel.getColorFromPalette(seriesModel.get('name')); // Default color\n    // FIXME Set color function or use the platte color\n\n    data.setVisual('color', color); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      if (typeof color === 'function' && !(color instanceof Gradient)) {\n        data.each(function (idx) {\n          data.setItemVisual(idx, 'color', color(seriesModel.getDataParams(idx)));\n        });\n      } // itemStyle in each data item\n\n\n      data.each(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        var color = itemModel.get(colorAccessPath, true);\n\n        if (color != null) {\n          data.setItemVisual(idx, 'color', color);\n        }\n      });\n    }\n  }\n\n  ecModel.eachRawSeries(encodeColor);\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/visual/seriesColor.js\n// module id = 1130\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../util/graphic\");\n\nvar PI = Math.PI;\n/**\n * @param {module:echarts/ExtensionAPI} api\n * @param {Object} [opts]\n * @param {string} [opts.text]\n * @param {string} [opts.color]\n * @param {string} [opts.textColor]\n * @return {module:zrender/Element}\n */\n\nfunction _default(api, opts) {\n  opts = opts || {};\n  zrUtil.defaults(opts, {\n    text: 'loading',\n    color: '#c23531',\n    textColor: '#000',\n    maskColor: 'rgba(255, 255, 255, 0.8)',\n    zlevel: 0\n  });\n  var mask = new graphic.Rect({\n    style: {\n      fill: opts.maskColor\n    },\n    zlevel: opts.zlevel,\n    z: 10000\n  });\n  var arc = new graphic.Arc({\n    shape: {\n      startAngle: -PI / 2,\n      endAngle: -PI / 2 + 0.1,\n      r: 10\n    },\n    style: {\n      stroke: opts.color,\n      lineCap: 'round',\n      lineWidth: 5\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  var labelRect = new graphic.Rect({\n    style: {\n      fill: 'none',\n      text: opts.text,\n      textPosition: 'right',\n      textDistance: 10,\n      textFill: opts.textColor\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  arc.animateShape(true).when(1000, {\n    endAngle: PI * 3 / 2\n  }).start('circularInOut');\n  arc.animateShape(true).when(1000, {\n    startAngle: PI * 3 / 2\n  }).delay(300).start('circularInOut');\n  var group = new graphic.Group();\n  group.add(arc);\n  group.add(labelRect);\n  group.add(mask); // Inject resize\n\n  group.resize = function () {\n    var cx = api.getWidth() / 2;\n    var cy = api.getHeight() / 2;\n    arc.setShape({\n      cx: cx,\n      cy: cy\n    });\n    var r = arc.shape.r;\n    labelRect.setShape({\n      x: cx - r,\n      y: cy - r,\n      width: r * 2,\n      height: r * 2\n    });\n    mask.setShape({\n      x: 0,\n      y: 0,\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n  };\n\n  group.resize();\n  return group;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/loading/default.js\n// module id = 1131\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar createListFromArray = require(\"./chart/helper/createListFromArray\");\n\nvar axisHelper = require(\"./coord/axisHelper\");\n\nvar axisModelCommonMixin = require(\"./coord/axisModelCommonMixin\");\n\nvar Model = require(\"./model/Model\");\n\nvar _completeDimensions = require(\"./data/helper/completeDimensions\");\n\nexports.completeDimensions = _completeDimensions;\n\nvar _symbol = require(\"./util/symbol\");\n\nexports.createSymbol = _symbol.createSymbol;\n\n/**\n * Create a muti dimension List structure from seriesModel.\n * @param  {module:echarts/model/Model} seriesModel\n * @return {module:echarts/data/List} list\n */\nfunction createList(seriesModel) {\n  var data = seriesModel.get('data');\n  return createListFromArray(data, seriesModel, seriesModel.ecModel);\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n */\n\n\n/**\n * Create scale\n * @param {Array.<number>} dataExtent\n * @param {Object|module:echarts/Model} option\n */\nfunction createScale(dataExtent, option) {\n  var axisModel = option;\n\n  if (!(option instanceof Model)) {\n    axisModel = new Model(option);\n    zrUtil.mixin(axisModel, axisModelCommonMixin);\n  }\n\n  var scale = axisHelper.createScaleByModel(axisModel);\n  scale.setExtent(dataExtent[0], dataExtent[1]);\n  axisHelper.niceScaleExtent(scale, axisModel);\n  return scale;\n}\n/**\n * Mixin common methods to axis model,\n *\n * Inlcude methods\n * `getFormattedLabels() => Array.<string>`\n * `getCategories() => Array.<string>`\n * `getMin(origin: boolean) => number`\n * `getMax(origin: boolean) => number`\n * `getNeedCrossZero() => boolean`\n * `setRange(start: number, end: number)`\n * `resetRange()`\n */\n\n\nfunction mixinAxisModelCommonMethods(Model) {\n  zrUtil.mixin(Model, axisModelCommonMixin);\n}\n\nexports.createList = createList;\nexports.createScale = createScale;\nexports.mixinAxisModelCommonMethods = mixinAxisModelCommonMethods;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/helper.js\n// module id = 1132\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Scale = require(\"./Scale\");\n\n/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n// FIXME only one data\nvar scaleProto = Scale.prototype;\nvar OrdinalScale = Scale.extend({\n  type: 'ordinal',\n  init: function (data, extent) {\n    this._data = data;\n    this._extent = extent || [0, data.length - 1];\n  },\n  parse: function (val) {\n    return typeof val === 'string' ? zrUtil.indexOf(this._data, val) // val might be float.\n    : Math.round(val);\n  },\n  contain: function (rank) {\n    rank = this.parse(rank);\n    return scaleProto.contain.call(this, rank) && this._data[rank] != null;\n  },\n\n  /**\n   * Normalize given rank or name to linear [0, 1]\n   * @param {number|string} [val]\n   * @return {number}\n   */\n  normalize: function (val) {\n    return scaleProto.normalize.call(this, this.parse(val));\n  },\n  scale: function (val) {\n    return Math.round(scaleProto.scale.call(this, val));\n  },\n\n  /**\n   * @return {Array}\n   */\n  getTicks: function () {\n    var ticks = [];\n    var extent = this._extent;\n    var rank = extent[0];\n\n    while (rank <= extent[1]) {\n      ticks.push(rank);\n      rank++;\n    }\n\n    return ticks;\n  },\n\n  /**\n   * Get item on rank n\n   * @param {number} n\n   * @return {string}\n   */\n  getLabel: function (n) {\n    return this._data[n];\n  },\n\n  /**\n   * @return {number}\n   */\n  count: function () {\n    return this._extent[1] - this._extent[0] + 1;\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    this.unionExtent(data.getDataExtent(dim, false));\n  },\n  niceTicks: zrUtil.noop,\n  niceExtent: zrUtil.noop\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nOrdinalScale.create = function () {\n  return new OrdinalScale();\n};\n\nvar _default = OrdinalScale;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/scale/Ordinal.js\n// module id = 1133\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar formatUtil = require(\"../util/format\");\n\nvar scaleHelper = require(\"./helper\");\n\nvar IntervalScale = require(\"./Interval\");\n\n// [About UTC and local time zone]:\n// In most cases, `number.parseDate` will treat input data string as local time\n// (except time zone is specified in time string). And `format.formateTime` returns\n// local time by default. option.useUTC is false by default. This design have\n// concidered these common case:\n// (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n// in local time by default.\n// (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n// as its original time, without any time difference.\nvar intervalScaleProto = IntervalScale.prototype;\nvar mathCeil = Math.ceil;\nvar mathFloor = Math.floor;\nvar ONE_SECOND = 1000;\nvar ONE_MINUTE = ONE_SECOND * 60;\nvar ONE_HOUR = ONE_MINUTE * 60;\nvar ONE_DAY = ONE_HOUR * 24; // FIXME 公用？\n\nvar bisect = function (a, x, lo, hi) {\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n\n    if (a[mid][1] < x) {\n      lo = mid + 1;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return lo;\n};\n/**\n * @alias module:echarts/coord/scale/Time\n * @constructor\n */\n\n\nvar TimeScale = IntervalScale.extend({\n  type: 'time',\n\n  /**\n   * @override\n   */\n  getLabel: function (val) {\n    var stepLvl = this._stepLvl;\n    var date = new Date(val);\n    return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n  },\n\n  /**\n   * @override\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      // Expand extent\n      extent[0] -= ONE_DAY;\n      extent[1] += ONE_DAY;\n    } // If there are no data and extent are [Infinity, -Infinity]\n\n\n    if (extent[1] === -Infinity && extent[0] === Infinity) {\n      var d = new Date();\n      extent[1] = +new Date(d.getFullYear(), d.getMonth(), d.getDate());\n      extent[0] = extent[1] - ONE_DAY;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n    }\n  },\n\n  /**\n   * @override\n   */\n  niceTicks: function (approxTickNum, minInterval, maxInterval) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n    var approxInterval = span / approxTickNum;\n\n    if (minInterval != null && approxInterval < minInterval) {\n      approxInterval = minInterval;\n    }\n\n    if (maxInterval != null && approxInterval > maxInterval) {\n      approxInterval = maxInterval;\n    }\n\n    var scaleLevelsLen = scaleLevels.length;\n    var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n    var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n    var interval = level[1]; // Same with interval scale if span is much larger than 1 year\n\n    if (level[0] === 'year') {\n      var yearSpan = span / interval; // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n      // var niceYearSpan = numberUtil.nice(yearSpan, false);\n\n      var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n      interval *= yearStep;\n    }\n\n    var timezoneOffset = this.getSetting('useUTC') ? 0 : new Date(+extent[0] || +extent[1]).getTimezoneOffset() * 60 * 1000;\n    var niceExtent = [Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset), Math.round(mathFloor((extent[1] - timezoneOffset) / interval) * interval + timezoneOffset)];\n    scaleHelper.fixExtent(niceExtent, extent);\n    this._stepLvl = level; // Interval will be used in getTicks\n\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n  parse: function (val) {\n    // val might be float.\n    return +numberUtil.parseDate(val);\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  TimeScale.prototype[methodName] = function (val) {\n    return intervalScaleProto[methodName].call(this, this.parse(val));\n  };\n}); // Steps from d3\n\nvar scaleLevels = [// Format              interval\n['hh:mm:ss', ONE_SECOND], // 1s\n['hh:mm:ss', ONE_SECOND * 5], // 5s\n['hh:mm:ss', ONE_SECOND * 10], // 10s\n['hh:mm:ss', ONE_SECOND * 15], // 15s\n['hh:mm:ss', ONE_SECOND * 30], // 30s\n['hh:mm\\nMM-dd', ONE_MINUTE], // 1m\n['hh:mm\\nMM-dd', ONE_MINUTE * 5], // 5m\n['hh:mm\\nMM-dd', ONE_MINUTE * 10], // 10m\n['hh:mm\\nMM-dd', ONE_MINUTE * 15], // 15m\n['hh:mm\\nMM-dd', ONE_MINUTE * 30], // 30m\n['hh:mm\\nMM-dd', ONE_HOUR], // 1h\n['hh:mm\\nMM-dd', ONE_HOUR * 2], // 2h\n['hh:mm\\nMM-dd', ONE_HOUR * 6], // 6h\n['hh:mm\\nMM-dd', ONE_HOUR * 12], // 12h\n['MM-dd\\nyyyy', ONE_DAY], // 1d\n['MM-dd\\nyyyy', ONE_DAY * 2], // 2d\n['MM-dd\\nyyyy', ONE_DAY * 3], // 3d\n['MM-dd\\nyyyy', ONE_DAY * 4], // 4d\n['MM-dd\\nyyyy', ONE_DAY * 5], // 5d\n['MM-dd\\nyyyy', ONE_DAY * 6], // 6d\n['week', ONE_DAY * 7], // 7d\n['MM-dd\\nyyyy', ONE_DAY * 10], // 10d\n['week', ONE_DAY * 14], // 2w\n['week', ONE_DAY * 21], // 3w\n['month', ONE_DAY * 31], // 1M\n['week', ONE_DAY * 42], // 6w\n['month', ONE_DAY * 62], // 2M\n['week', ONE_DAY * 42], // 10w\n['quarter', ONE_DAY * 380 / 4], // 3M\n['month', ONE_DAY * 31 * 4], // 4M\n['month', ONE_DAY * 31 * 5], // 5M\n['half-year', ONE_DAY * 380 / 2], // 6M\n['month', ONE_DAY * 31 * 8], // 8M\n['month', ONE_DAY * 31 * 10], // 10M\n['year', ONE_DAY * 380] // 1Y\n];\n/**\n * @param {module:echarts/model/Model}\n * @return {module:echarts/scale/Time}\n */\n\nTimeScale.create = function (model) {\n  return new TimeScale({\n    useUTC: model.ecModel.get('useUTC')\n  });\n};\n\nvar _default = TimeScale;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/scale/Time.js\n// module id = 1134\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Scale = require(\"./Scale\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar IntervalScale = require(\"./Interval\");\n\n/**\n * Log scale\n * @module echarts/scale/Log\n */\n// Use some method of IntervalScale\nvar scaleProto = Scale.prototype;\nvar intervalScaleProto = IntervalScale.prototype;\nvar getPrecisionSafe = numberUtil.getPrecisionSafe;\nvar roundingErrorFix = numberUtil.round;\nvar mathFloor = Math.floor;\nvar mathCeil = Math.ceil;\nvar mathPow = Math.pow;\nvar mathLog = Math.log;\nvar LogScale = Scale.extend({\n  type: 'log',\n  base: 10,\n  $constructor: function () {\n    Scale.apply(this, arguments);\n    this._originalScale = new IntervalScale();\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    var originalScale = this._originalScale;\n    var extent = this._extent;\n    var originalExtent = originalScale.getExtent();\n    return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n      var powVal = numberUtil.round(mathPow(this.base, val)); // Fix #4158\n\n      powVal = val === extent[0] && originalScale.__fixMin ? fixRoundingError(powVal, originalExtent[0]) : powVal;\n      powVal = val === extent[1] && originalScale.__fixMax ? fixRoundingError(powVal, originalExtent[1]) : powVal;\n      return powVal;\n    }, this);\n  },\n\n  /**\n   * @param {number} val\n   * @return {string}\n   */\n  getLabel: intervalScaleProto.getLabel,\n\n  /**\n   * @param  {number} val\n   * @return {number}\n   */\n  scale: function (val) {\n    val = scaleProto.scale.call(this, val);\n    return mathPow(this.base, val);\n  },\n\n  /**\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var base = this.base;\n    start = mathLog(start) / mathLog(base);\n    end = mathLog(end) / mathLog(base);\n    intervalScaleProto.setExtent.call(this, start, end);\n  },\n\n  /**\n   * @return {number} end\n   */\n  getExtent: function () {\n    var base = this.base;\n    var extent = scaleProto.getExtent.call(this);\n    extent[0] = mathPow(base, extent[0]);\n    extent[1] = mathPow(base, extent[1]); // Fix #4158\n\n    var originalScale = this._originalScale;\n    var originalExtent = originalScale.getExtent();\n    originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n    originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n    return extent;\n  },\n\n  /**\n   * @param  {Array.<number>} extent\n   */\n  unionExtent: function (extent) {\n    this._originalScale.unionExtent(extent);\n\n    var base = this.base;\n    extent[0] = mathLog(extent[0]) / mathLog(base);\n    extent[1] = mathLog(extent[1]) / mathLog(base);\n    scaleProto.unionExtent.call(this, extent);\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    this.unionExtent(data.getDataExtent(dim, true, function (val) {\n      return val > 0;\n    }));\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   * @param  {number} [approxTickNum = 10] Given approx tick number\n   */\n  niceTicks: function (approxTickNum) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (span === Infinity || span <= 0) {\n      return;\n    }\n\n    var interval = numberUtil.quantity(span);\n    var err = approxTickNum / span * interval; // Filter ticks to get closer to the desired count.\n\n    if (err <= 0.5) {\n      interval *= 10;\n    } // Interval should be integer\n\n\n    while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n      interval *= 10;\n    }\n\n    var niceExtent = [numberUtil.round(mathCeil(extent[0] / interval) * interval), numberUtil.round(mathFloor(extent[1] / interval) * interval)];\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @override\n   */\n  niceExtent: function (opt) {\n    intervalScaleProto.niceExtent.call(this, opt);\n    var originalScale = this._originalScale;\n    originalScale.__fixMin = opt.fixMin;\n    originalScale.__fixMax = opt.fixMax;\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  LogScale.prototype[methodName] = function (val) {\n    val = mathLog(val) / mathLog(this.base);\n    return scaleProto[methodName].call(this, val);\n  };\n});\n\nLogScale.create = function () {\n  return new LogScale();\n};\n\nfunction fixRoundingError(val, originalVal) {\n  return roundingErrorFix(val, getPrecisionSafe(originalVal));\n}\n\nvar _default = LogScale;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/scale/Log.js\n// module id = 1135\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar modelHelper = require(\"./modelHelper\");\n\nvar findPointFromSeries = require(\"./findPointFromSeries\");\n\nvar each = zrUtil.each;\nvar curry = zrUtil.curry;\nvar get = modelUtil.makeGetter();\n/**\n * Basic logic: check all axis, if they do not demand show/highlight,\n * then hide/downplay them.\n *\n * @param {Object} coordSysAxesInfo\n * @param {Object} payload\n * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n * @param {Object} [payload.dataIndex] finder, restrict target axes.\n * @param {Object} [payload.axesInfo] finder, restrict target axes.\n *        [{\n *          axisDim: 'x'|'y'|'angle'|...,\n *          axisIndex: ...,\n *          value: ...\n *        }, ...]\n * @param {Function} [payload.dispatchAction]\n * @param {Object} [payload.tooltipOption]\n * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n *        which can be specified in dispatchAction\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n * @return {Object} content of event obj for echarts.connect.\n */\n\nfunction _default(payload, ecModel, api) {\n  var currTrigger = payload.currTrigger;\n  var point = [payload.x, payload.y];\n  var finder = payload;\n  var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n  var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo; // Pending\n  // See #6121. But we are not able to reproduce it yet.\n\n  if (!coordSysAxesInfo) {\n    return;\n  }\n\n  if (illegalPoint(point)) {\n    // Used in the default behavior of `connection`: use the sample seriesIndex\n    // and dataIndex. And also used in the tooltipView trigger.\n    point = findPointFromSeries({\n      seriesIndex: finder.seriesIndex,\n      // Do not use dataIndexInside from other ec instance.\n      // FIXME: auto detect it?\n      dataIndex: finder.dataIndex\n    }, ecModel).point;\n  }\n\n  var isIllegalPoint = illegalPoint(point); // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n  // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n  // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n  // and dataIndex.\n\n  var inputAxesInfo = finder.axesInfo;\n  var axesInfo = coordSysAxesInfo.axesInfo;\n  var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n  var outputFinder = {};\n  var showValueMap = {};\n  var dataByCoordSys = {\n    list: [],\n    map: {}\n  };\n  var updaters = {\n    showPointer: curry(showPointer, showValueMap),\n    showTooltip: curry(showTooltip, dataByCoordSys)\n  }; // Process for triggered axes.\n\n  each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n    // If a point given, it must be contained by the coordinate system.\n    var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n    each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n      var axis = axisInfo.axis;\n      var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo); // If no inputAxesInfo, no axis is restricted.\n\n      if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n        var val = inputAxisInfo && inputAxisInfo.value;\n\n        if (val == null && !isIllegalPoint) {\n          val = axis.pointToData(point);\n        }\n\n        val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n      }\n    });\n  }); // Process for linked axes.\n\n  var linkTriggers = {};\n  each(axesInfo, function (tarAxisInfo, tarKey) {\n    var linkGroup = tarAxisInfo.linkGroup; // If axis has been triggered in the previous stage, it should not be triggered by link.\n\n    if (linkGroup && !showValueMap[tarKey]) {\n      each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n        var srcValItem = showValueMap[srcKey]; // If srcValItem exist, source axis is triggered, so link to target axis.\n\n        if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n          var val = srcValItem.value;\n          linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo))));\n          linkTriggers[tarAxisInfo.key] = val;\n        }\n      });\n    }\n  });\n  each(linkTriggers, function (val, tarKey) {\n    processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n  });\n  updateModelActually(showValueMap, axesInfo, outputFinder);\n  dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n  dispatchHighDownActually(axesInfo, dispatchAction, api);\n  return outputFinder;\n}\n\nfunction processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n  var axis = axisInfo.axis;\n\n  if (axis.scale.isBlank() || !axis.containData(newValue)) {\n    return;\n  }\n\n  if (!axisInfo.involveSeries) {\n    updaters.showPointer(axisInfo, newValue);\n    return;\n  } // Heavy calculation. So put it after axis.containData checking.\n\n\n  var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n  var payloadBatch = payloadInfo.payloadBatch;\n  var snapToValue = payloadInfo.snapToValue; // Fill content of event obj for echarts.connect.\n  // By defualt use the first involved series data as a sample to connect.\n\n  if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n    zrUtil.extend(outputFinder, payloadBatch[0]);\n  } // If no linkSource input, this process is for collecting link\n  // target, where snap should not be accepted.\n\n\n  if (!dontSnap && axisInfo.snap) {\n    if (axis.containData(snapToValue) && snapToValue != null) {\n      newValue = snapToValue;\n    }\n  }\n\n  updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder); // Tooltip should always be snapToValue, otherwise there will be\n  // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n\n  updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n}\n\nfunction buildPayloadsBySeries(value, axisInfo) {\n  var axis = axisInfo.axis;\n  var dim = axis.dim;\n  var snapToValue = value;\n  var payloadBatch = [];\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n  each(axisInfo.seriesModels, function (series, idx) {\n    var dataDim = series.coordDimToDataDim(dim);\n    var seriesNestestValue;\n    var dataIndices;\n\n    if (series.getAxisTooltipData) {\n      var result = series.getAxisTooltipData(dataDim, value, axis);\n      dataIndices = result.dataIndices;\n      seriesNestestValue = result.nestestValue;\n    } else {\n      dataIndices = series.getData().indicesOfNearest(dataDim[0], value, // Add a threshold to avoid find the wrong dataIndex\n      // when data length is not same.\n      false, axis.type === 'category' ? 0.5 : null);\n\n      if (!dataIndices.length) {\n        return;\n      }\n\n      seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n    }\n\n    if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n      return;\n    }\n\n    var diff = value - seriesNestestValue;\n    var dist = Math.abs(diff); // Consider category case\n\n    if (dist <= minDist) {\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        snapToValue = seriesNestestValue;\n        payloadBatch.length = 0;\n      }\n\n      each(dataIndices, function (dataIndex) {\n        payloadBatch.push({\n          seriesIndex: series.seriesIndex,\n          dataIndexInside: dataIndex,\n          dataIndex: series.getData().getRawIndex(dataIndex)\n        });\n      });\n    }\n  });\n  return {\n    payloadBatch: payloadBatch,\n    snapToValue: snapToValue\n  };\n}\n\nfunction showPointer(showValueMap, axisInfo, value, payloadBatch) {\n  showValueMap[axisInfo.key] = {\n    value: value,\n    payloadBatch: payloadBatch\n  };\n}\n\nfunction showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n  var payloadBatch = payloadInfo.payloadBatch;\n  var axis = axisInfo.axis;\n  var axisModel = axis.model;\n  var axisPointerModel = axisInfo.axisPointerModel; // If no data, do not create anything in dataByCoordSys,\n  // whose length will be used to judge whether dispatch action.\n\n  if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n    return;\n  }\n\n  var coordSysModel = axisInfo.coordSys.model;\n  var coordSysKey = modelHelper.makeKey(coordSysModel);\n  var coordSysItem = dataByCoordSys.map[coordSysKey];\n\n  if (!coordSysItem) {\n    coordSysItem = dataByCoordSys.map[coordSysKey] = {\n      coordSysId: coordSysModel.id,\n      coordSysIndex: coordSysModel.componentIndex,\n      coordSysType: coordSysModel.type,\n      coordSysMainType: coordSysModel.mainType,\n      dataByAxis: []\n    };\n    dataByCoordSys.list.push(coordSysItem);\n  }\n\n  coordSysItem.dataByAxis.push({\n    axisDim: axis.dim,\n    axisIndex: axisModel.componentIndex,\n    axisType: axisModel.type,\n    axisId: axisModel.id,\n    value: value,\n    // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n    // depends that all models have been updated. So it should not be performed\n    // here. Considering axisPointerModel used here is volatile, which is hard\n    // to be retrieve in TooltipView, we prepare parameters here.\n    valueLabelOpt: {\n      precision: axisPointerModel.get('label.precision'),\n      formatter: axisPointerModel.get('label.formatter')\n    },\n    seriesDataIndices: payloadBatch.slice()\n  });\n}\n\nfunction updateModelActually(showValueMap, axesInfo, outputFinder) {\n  var outputAxesInfo = outputFinder.axesInfo = []; // Basic logic: If no 'show' required, 'hide' this axisPointer.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    var valItem = showValueMap[key];\n\n    if (valItem) {\n      !axisInfo.useHandle && (option.status = 'show');\n      option.value = valItem.value; // For label formatter param and highlight.\n\n      option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n    } // When always show (e.g., handle used), remain\n    // original value and status.\n    else {\n        // If hide, value still need to be set, consider\n        // click legend to toggle axis blank.\n        !axisInfo.useHandle && (option.status = 'hide');\n      } // If status is 'hide', should be no info in payload.\n\n\n    option.status === 'show' && outputAxesInfo.push({\n      axisDim: axisInfo.axis.dim,\n      axisIndex: axisInfo.axis.model.componentIndex,\n      value: option.value\n    });\n  });\n}\n\nfunction dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n  // Basic logic: If no showTip required, hideTip will be dispatched.\n  if (illegalPoint(point) || !dataByCoordSys.list.length) {\n    dispatchAction({\n      type: 'hideTip'\n    });\n    return;\n  } // In most case only one axis (or event one series is used). It is\n  // convinient to fetch payload.seriesIndex and payload.dataIndex\n  // dirtectly. So put the first seriesIndex and dataIndex of the first\n  // axis on the payload.\n\n\n  var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n  dispatchAction({\n    type: 'showTip',\n    escapeConnect: true,\n    x: point[0],\n    y: point[1],\n    tooltipOption: payload.tooltipOption,\n    position: payload.position,\n    dataIndexInside: sampleItem.dataIndexInside,\n    dataIndex: sampleItem.dataIndex,\n    seriesIndex: sampleItem.seriesIndex,\n    dataByCoordSys: dataByCoordSys.list\n  });\n}\n\nfunction dispatchHighDownActually(axesInfo, dispatchAction, api) {\n  // FIXME\n  // highlight status modification shoule be a stage of main process?\n  // (Consider confilct (e.g., legend and axisPointer) and setOption)\n  var zr = api.getZr();\n  var highDownKey = 'axisPointerLastHighlights';\n  var lastHighlights = get(zr)[highDownKey] || {};\n  var newHighlights = get(zr)[highDownKey] = {}; // Update highlight/downplay status according to axisPointer model.\n  // Build hash map and remove duplicate incidentally.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n      var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n      newHighlights[key] = batchItem;\n    });\n  }); // Diff.\n\n  var toHighlight = [];\n  var toDownplay = [];\n  zrUtil.each(lastHighlights, function (batchItem, key) {\n    !newHighlights[key] && toDownplay.push(batchItem);\n  });\n  zrUtil.each(newHighlights, function (batchItem, key) {\n    !lastHighlights[key] && toHighlight.push(batchItem);\n  });\n  toDownplay.length && api.dispatchAction({\n    type: 'downplay',\n    escapeConnect: true,\n    batch: toDownplay\n  });\n  toHighlight.length && api.dispatchAction({\n    type: 'highlight',\n    escapeConnect: true,\n    batch: toHighlight\n  });\n}\n\nfunction findInputAxisInfo(inputAxesInfo, axisInfo) {\n  for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n    var inputAxisInfo = inputAxesInfo[i];\n\n    if (axisInfo.axis.dim === inputAxisInfo.axisDim && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex) {\n      return inputAxisInfo;\n    }\n  }\n}\n\nfunction makeMapperParam(axisInfo) {\n  var axisModel = axisInfo.axis.model;\n  var item = {};\n  var dim = item.axisDim = axisInfo.axis.dim;\n  item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n  item.axisName = item[dim + 'AxisName'] = axisModel.name;\n  item.axisId = item[dim + 'AxisId'] = axisModel.id;\n  return item;\n}\n\nfunction illegalPoint(point) {\n  return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/axisTrigger.js\n// module id = 1136\n// module chunks = 0 1 2","var echarts = require(\"../../echarts\");\n\nvar AxisPointerModel = echarts.extendComponentModel({\n  type: 'axisPointer',\n  coordSysAxesInfo: null,\n  defaultOption: {\n    // 'auto' means that show when triggered by tooltip or handle.\n    show: 'auto',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: null,\n    // set default in AxisPonterView.js\n    zlevel: 0,\n    z: 50,\n    type: 'line',\n    // axispointer triggered by tootip determine snap automatically,\n    // see `modelHelper`.\n    snap: false,\n    triggerTooltip: true,\n    value: null,\n    status: null,\n    // Init value depends on whether handle is used.\n    // [group0, group1, ...]\n    // Each group can be: {\n    //      mapper: function () {},\n    //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n    //      xAxisId: ...,\n    //      yAxisName: ...,\n    //      angleAxisIndex: ...\n    // }\n    // mapper: can be ignored.\n    //      input: {axisInfo, value}\n    //      output: {axisInfo, value}\n    link: [],\n    // Do not set 'auto' here, otherwise global animation: false\n    // will not effect at this axispointer.\n    animation: null,\n    animationDurationUpdate: 200,\n    lineStyle: {\n      color: '#aaa',\n      width: 1,\n      type: 'solid'\n    },\n    shadowStyle: {\n      color: 'rgba(150,150,150,0.3)'\n    },\n    label: {\n      show: true,\n      formatter: null,\n      // string | Function\n      precision: 'auto',\n      // Or a number like 0, 1, 2 ...\n      margin: 3,\n      color: '#fff',\n      padding: [5, 7, 5, 7],\n      backgroundColor: 'auto',\n      // default: axis line color\n      borderColor: null,\n      borderWidth: 0,\n      shadowBlur: 3,\n      shadowColor: '#aaa' // Considering applicability, common style should\n      // better not have shadowOffset.\n      // shadowOffsetX: 0,\n      // shadowOffsetY: 2\n\n    },\n    handle: {\n      show: false,\n      icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z',\n      // jshint ignore:line\n      size: 45,\n      // handle margin is from symbol center to axis, which is stable when circular move.\n      margin: 50,\n      // color: '#1b8bbd'\n      // color: '#2f4554'\n      color: '#333',\n      shadowBlur: 3,\n      shadowColor: '#aaa',\n      shadowOffsetX: 0,\n      shadowOffsetY: 2,\n      // For mobile performance\n      throttle: 40\n    }\n  }\n});\nvar _default = AxisPointerModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/AxisPointerModel.js\n// module id = 1137\n// module chunks = 0 1 2","var echarts = require(\"../../echarts\");\n\nvar globalListener = require(\"./globalListener\");\n\nvar AxisPointerView = echarts.extendComponentView({\n  type: 'axisPointer',\n  render: function (globalAxisPointerModel, ecModel, api) {\n    var globalTooltipModel = ecModel.getComponent('tooltip');\n    var triggerOn = globalAxisPointerModel.get('triggerOn') || globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click'; // Register global listener in AxisPointerView to enable\n    // AxisPointerView to be independent to Tooltip.\n\n    globalListener.register('axisPointer', api, function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none' && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)) {\n        dispatchAction({\n          type: 'updateAxisPointer',\n          currTrigger: currTrigger,\n          x: e && e.offsetX,\n          y: e && e.offsetY\n        });\n      }\n    });\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    globalListener.unregister(api.getZr(), 'axisPointer');\n    AxisPointerView.superApply(this._model, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    globalListener.unregister('axisPointer', api);\n    AxisPointerView.superApply(this._model, 'dispose', arguments);\n  }\n});\nvar _default = AxisPointerView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/AxisPointerView.js\n// module id = 1138\n// module chunks = 0 1 2","var echarts = require(\"../../echarts\");\n\nvar _default = echarts.extendComponentModel({\n  type: 'tooltip',\n  dependencies: ['axisPointer'],\n  defaultOption: {\n    zlevel: 0,\n    z: 8,\n    show: true,\n    // tooltip主体内容\n    showContent: true,\n    // 'trigger' only works on coordinate system.\n    // 'item' | 'axis' | 'none'\n    trigger: 'item',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: 'mousemove|click',\n    alwaysShowContent: false,\n    displayMode: 'single',\n    // 'single' | 'multipleByCoordSys'\n    // 位置 {Array} | {Function}\n    // position: null\n    // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n    // align: null,\n    // verticalAlign: null,\n    // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n    confine: false,\n    // 内容格式器：{string}（Template） ¦ {Function}\n    // formatter: null\n    showDelay: 0,\n    // 隐藏延迟，单位ms\n    hideDelay: 100,\n    // 动画变换时间，单位s\n    transitionDuration: 0.4,\n    enterable: false,\n    // 提示背景颜色，默认为透明度为0.7的黑色\n    backgroundColor: 'rgba(50,50,50,0.7)',\n    // 提示边框颜色\n    borderColor: '#333',\n    // 提示边框圆角，单位px，默认为4\n    borderRadius: 4,\n    // 提示边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 提示内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // Extra css text\n    extraCssText: '',\n    // 坐标轴指示器，坐标轴触发有效\n    axisPointer: {\n      // 默认为直线\n      // 可选为：'line' | 'shadow' | 'cross'\n      type: 'line',\n      // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n      // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n      // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n      // 极坐标系会默认选择 angle 轴\n      axis: 'auto',\n      animation: 'auto',\n      animationDurationUpdate: 200,\n      animationEasingUpdate: 'exponentialOut',\n      crossStyle: {\n        color: '#999',\n        width: 1,\n        type: 'dashed',\n        // TODO formatter\n        textStyle: {} // lineStyle and shadowStyle should not be specified here,\n        // otherwise it will always override those styles on option.axisPointer.\n\n      }\n    },\n    textStyle: {\n      color: '#fff',\n      fontSize: 14\n    }\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/tooltip/TooltipModel.js\n// module id = 1139\n// module chunks = 0 1 2","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar TooltipContent = require(\"./TooltipContent\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar findPointFromSeries = require(\"../axisPointer/findPointFromSeries\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar Model = require(\"../../model/Model\");\n\nvar globalListener = require(\"../axisPointer/globalListener\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar axisPointerViewHelper = require(\"../axisPointer/viewHelper\");\n\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar parsePercent = numberUtil.parsePercent;\nvar proxyRect = new graphic.Rect({\n  shape: {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  }\n});\n\nvar _default = echarts.extendComponentView({\n  type: 'tooltip',\n  init: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    var tooltipContent = new TooltipContent(api.getDom(), api);\n    this._tooltipContent = tooltipContent;\n  },\n  render: function (tooltipModel, ecModel, api) {\n    if (env.node) {\n      return;\n    } // Reset\n\n\n    this.group.removeAll();\n    /**\n     * @private\n     * @type {module:echarts/component/tooltip/TooltipModel}\n     */\n\n    this._tooltipModel = tooltipModel;\n    /**\n     * @private\n     * @type {module:echarts/model/Global}\n     */\n\n    this._ecModel = ecModel;\n    /**\n     * @private\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this._api = api;\n    /**\n     * Should be cleaned when render.\n     * @private\n     * @type {Array.<Array.<Object>>}\n     */\n\n    this._lastDataByCoordSys = null;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.update();\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n    this._initGlobalListener();\n\n    this._keepShow();\n  },\n  _initGlobalListener: function () {\n    var tooltipModel = this._tooltipModel;\n    var triggerOn = tooltipModel.get('triggerOn');\n    globalListener.register('itemTooltip', this._api, bind(function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none') {\n        if (triggerOn.indexOf(currTrigger) >= 0) {\n          this._tryShow(e, dispatchAction);\n        } else if (currTrigger === 'leave') {\n          this._hide(dispatchAction);\n        }\n      }\n    }, this));\n  },\n  _keepShow: function () {\n    var tooltipModel = this._tooltipModel;\n    var ecModel = this._ecModel;\n    var api = this._api; // Try to keep the tooltip show when refreshing\n\n    if (this._lastX != null && this._lastY != null // When user is willing to control tooltip totally using API,\n    // self.manuallyShowTip({x, y}) might cause tooltip hide,\n    // which is not expected.\n    && tooltipModel.get('triggerOn') !== 'none') {\n      var self = this;\n      clearTimeout(this._refreshUpdateTimeout);\n      this._refreshUpdateTimeout = setTimeout(function () {\n        // Show tip next tick after other charts are rendered\n        // In case highlight action has wrong result\n        // FIXME\n        self.manuallyShowTip(tooltipModel, ecModel, api, {\n          x: self._lastX,\n          y: self._lastY\n        });\n      });\n    }\n  },\n\n  /**\n   * Show tip manually by\n   * dispatchAction({\n   *     type: 'showTip',\n   *     x: 10,\n   *     y: 10\n   * });\n   * Or\n   * dispatchAction({\n   *      type: 'showTip',\n   *      seriesIndex: 0,\n   *      dataIndex or dataIndexInside or name\n   * });\n   *\n   *  TODO Batch\n   */\n  manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n    if (payload.from === this.uid || env.node) {\n      return;\n    }\n\n    var dispatchAction = makeDispatchAction(payload, api); // Reset ticket\n\n    this._ticket = ''; // When triggered from axisPointer.\n\n    var dataByCoordSys = payload.dataByCoordSys;\n\n    if (payload.tooltip && payload.x != null && payload.y != null) {\n      var el = proxyRect;\n      el.position = [payload.x, payload.y];\n      el.update();\n      el.tooltip = payload.tooltip; // Manually show tooltip while view is not using zrender elements.\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        target: el\n      }, dispatchAction);\n    } else if (dataByCoordSys) {\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        event: {},\n        dataByCoordSys: payload.dataByCoordSys,\n        tooltipOption: payload.tooltipOption\n      }, dispatchAction);\n    } else if (payload.seriesIndex != null) {\n      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n        return;\n      }\n\n      var pointInfo = findPointFromSeries(payload, ecModel);\n      var cx = pointInfo.point[0];\n      var cy = pointInfo.point[1];\n\n      if (cx != null && cy != null) {\n        this._tryShow({\n          offsetX: cx,\n          offsetY: cy,\n          position: payload.position,\n          target: pointInfo.el,\n          event: {}\n        }, dispatchAction);\n      }\n    } else if (payload.x != null && payload.y != null) {\n      // FIXME\n      // should wrap dispatchAction like `axisPointer/globalListener` ?\n      api.dispatchAction({\n        type: 'updateAxisPointer',\n        x: payload.x,\n        y: payload.y\n      });\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        target: api.getZr().findHover(payload.x, payload.y).target,\n        event: {}\n      }, dispatchAction);\n    }\n  },\n  manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n    var tooltipContent = this._tooltipContent;\n\n    if (!this._alwaysShowContent) {\n      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n    }\n\n    this._lastX = this._lastY = null;\n\n    if (payload.from !== this.uid) {\n      this._hide(makeDispatchAction(payload, api));\n    }\n  },\n  // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n  // and tooltip.\n  _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n    var seriesIndex = payload.seriesIndex;\n    var dataIndex = payload.dataIndex;\n    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n      return;\n    }\n\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (!seriesModel) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model, tooltipModel]);\n\n    if (tooltipModel.get('trigger') !== 'axis') {\n      return;\n    }\n\n    api.dispatchAction({\n      type: 'updateAxisPointer',\n      seriesIndex: seriesIndex,\n      dataIndex: dataIndex,\n      position: payload.position\n    });\n    return true;\n  },\n  _tryShow: function (e, dispatchAction) {\n    var el = e.target;\n    var tooltipModel = this._tooltipModel;\n\n    if (!tooltipModel) {\n      return;\n    } // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n\n\n    this._lastX = e.offsetX;\n    this._lastY = e.offsetY;\n    var dataByCoordSys = e.dataByCoordSys;\n\n    if (dataByCoordSys && dataByCoordSys.length) {\n      this._showAxisTooltip(dataByCoordSys, e);\n    } // Always show item tooltip if mouse is on the element with dataIndex\n    else if (el && el.dataIndex != null) {\n        this._lastDataByCoordSys = null;\n\n        this._showSeriesItemTooltip(e, el, dispatchAction);\n      } // Tooltip provided directly. Like legend.\n      else if (el && el.tooltip) {\n          this._lastDataByCoordSys = null;\n\n          this._showComponentItemTooltip(e, el, dispatchAction);\n        } else {\n          this._lastDataByCoordSys = null;\n\n          this._hide(dispatchAction);\n        }\n  },\n  _showOrMove: function (tooltipModel, cb) {\n    // showDelay is used in this case: tooltip.enterable is set\n    // as true. User intent to move mouse into tooltip and click\n    // something. `showDelay` makes it easyer to enter the content\n    // but tooltip do not move immediately.\n    var delay = tooltipModel.get('showDelay');\n    cb = zrUtil.bind(cb, this);\n    clearTimeout(this._showTimout);\n    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\n  },\n  _showAxisTooltip: function (dataByCoordSys, e) {\n    var ecModel = this._ecModel;\n    var globalTooltipModel = this._tooltipModel;\n    var point = [e.offsetX, e.offsetY];\n    var singleDefaultHTML = [];\n    var singleParamsList = [];\n    var singleTooltipModel = buildTooltipModel([e.tooltipOption, globalTooltipModel]);\n    each(dataByCoordSys, function (itemCoordSys) {\n      // var coordParamList = [];\n      // var coordDefaultHTML = [];\n      // var coordTooltipModel = buildTooltipModel([\n      //     e.tooltipOption,\n      //     itemCoordSys.tooltipOption,\n      //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n      //     globalTooltipModel\n      // ]);\n      // var displayMode = coordTooltipModel.get('displayMode');\n      // var paramsList = displayMode === 'single' ? singleParamsList : [];\n      each(itemCoordSys.dataByAxis, function (item) {\n        var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n        var axisValue = item.value;\n        var seriesDefaultHTML = [];\n\n        if (!axisModel || axisValue == null) {\n          return;\n        }\n\n        var valueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, item.seriesDataIndices, item.valueLabelOpt);\n        zrUtil.each(item.seriesDataIndices, function (idxItem) {\n          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n          var dataIndex = idxItem.dataIndexInside;\n          var dataParams = series && series.getDataParams(dataIndex);\n          dataParams.axisDim = item.axisDim;\n          dataParams.axisIndex = item.axisIndex;\n          dataParams.axisType = item.axisType;\n          dataParams.axisId = item.axisId;\n          dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n          dataParams.axisValueLabel = valueLabel;\n\n          if (dataParams) {\n            singleParamsList.push(dataParams);\n            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n          }\n        }); // Default tooltip content\n        // FIXME\n        // (1) shold be the first data which has name?\n        // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n\n        var firstLine = valueLabel;\n        singleDefaultHTML.push((firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '') + seriesDefaultHTML.join('<br />'));\n      });\n    }, this); // In most case, the second axis is shown upper than the first one.\n\n    singleDefaultHTML.reverse();\n    singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n    var positionExpr = e.position;\n\n    this._showOrMove(singleTooltipModel, function () {\n      if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, singleParamsList);\n      } else {\n        this._showTooltipContent(singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(), point[0], point[1], positionExpr);\n      }\n    }); // Do not trigger events here, because this branch only be entered\n    // from dispatchAction.\n\n  },\n  _showSeriesItemTooltip: function (e, el, dispatchAction) {\n    var ecModel = this._ecModel; // Use dataModel in element if possible\n    // Used when mouseover on a element like markPoint or edge\n    // In which case, the data is not main data in series.\n\n    var seriesIndex = el.seriesIndex;\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex); // For example, graph link.\n\n    var dataModel = el.dataModel || seriesModel;\n    var dataIndex = el.dataIndex;\n    var dataType = el.dataType;\n    var data = dataModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model, this._tooltipModel]);\n    var tooltipTrigger = tooltipModel.get('trigger');\n\n    if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n      return;\n    }\n\n    var params = dataModel.getDataParams(dataIndex, dataType);\n    var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n    this._showOrMove(tooltipModel, function () {\n      this._showTooltipContent(tooltipModel, defaultHtml, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target);\n    }); // FIXME\n    // duplicated showtip if manuallyShowTip is called from dispatchAction.\n\n\n    dispatchAction({\n      type: 'showTip',\n      dataIndexInside: dataIndex,\n      dataIndex: data.getRawIndex(dataIndex),\n      seriesIndex: seriesIndex,\n      from: this.uid\n    });\n  },\n  _showComponentItemTooltip: function (e, el, dispatchAction) {\n    var tooltipOpt = el.tooltip;\n\n    if (typeof tooltipOpt === 'string') {\n      var content = tooltipOpt;\n      tooltipOpt = {\n        content: content,\n        // Fixed formatter\n        formatter: content\n      };\n    }\n\n    var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n    var defaultHtml = subTooltipModel.get('content');\n    var asyncTicket = Math.random(); // Do not check whether `trigger` is 'none' here, because `trigger`\n    // only works on cooridinate system. In fact, we have not found case\n    // that requires setting `trigger` nothing on component yet.\n\n    this._showOrMove(subTooltipModel, function () {\n      this._showTooltipContent(subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {}, asyncTicket, e.offsetX, e.offsetY, e.position, el);\n    }); // If not dispatch showTip, tip may be hide triggered by axis.\n\n\n    dispatchAction({\n      type: 'showTip',\n      from: this.uid\n    });\n  },\n  _showTooltipContent: function (tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el) {\n    // Reset ticket\n    this._ticket = '';\n\n    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n      return;\n    }\n\n    var tooltipContent = this._tooltipContent;\n    var formatter = tooltipModel.get('formatter');\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var html = defaultHtml;\n\n    if (formatter && typeof formatter === 'string') {\n      html = formatUtil.formatTpl(formatter, params, true);\n    } else if (typeof formatter === 'function') {\n      var callback = bind(function (cbTicket, html) {\n        if (cbTicket === this._ticket) {\n          tooltipContent.setContent(html);\n\n          this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n        }\n      }, this);\n      this._ticket = asyncTicket;\n      html = formatter(params, asyncTicket, callback);\n    }\n\n    tooltipContent.setContent(html);\n    tooltipContent.show(tooltipModel);\n\n    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n  },\n\n  /**\n   * @param  {string|Function|Array.<number>|Object} positionExpr\n   * @param  {number} x Mouse x\n   * @param  {number} y Mouse y\n   * @param  {boolean} confine Whether confine tooltip content in view rect.\n   * @param  {Object|<Array.<Object>} params\n   * @param  {module:zrender/Element} el target element\n   * @param  {module:echarts/ExtensionAPI} api\n   * @return {Array.<number>}\n   */\n  _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n    var viewWidth = this._api.getWidth();\n\n    var viewHeight = this._api.getHeight();\n\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var contentSize = content.getSize();\n    var align = tooltipModel.get('align');\n    var vAlign = tooltipModel.get('verticalAlign');\n    var rect = el && el.getBoundingRect().clone();\n    el && rect.applyTransform(el.transform);\n\n    if (typeof positionExpr === 'function') {\n      // Callback of position can be an array or a string specify the position\n      positionExpr = positionExpr([x, y], params, content.el, rect, {\n        viewSize: [viewWidth, viewHeight],\n        contentSize: contentSize.slice()\n      });\n    }\n\n    if (zrUtil.isArray(positionExpr)) {\n      x = parsePercent(positionExpr[0], viewWidth);\n      y = parsePercent(positionExpr[1], viewHeight);\n    } else if (zrUtil.isObject(positionExpr)) {\n      positionExpr.width = contentSize[0];\n      positionExpr.height = contentSize[1];\n      var layoutRect = layoutUtil.getLayoutRect(positionExpr, {\n        width: viewWidth,\n        height: viewHeight\n      });\n      x = layoutRect.x;\n      y = layoutRect.y;\n      align = null; // When positionExpr is left/top/right/bottom,\n      // align and verticalAlign will not work.\n\n      vAlign = null;\n    } // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n    else if (typeof positionExpr === 'string' && el) {\n        var pos = calcTooltipPosition(positionExpr, rect, contentSize);\n        x = pos[0];\n        y = pos[1];\n      } else {\n        var pos = refixTooltipPosition(x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\n        x = pos[0];\n        y = pos[1];\n      }\n\n    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n    if (tooltipModel.get('confine')) {\n      var pos = confineTooltipPosition(x, y, content.el, viewWidth, viewHeight);\n      x = pos[0];\n      y = pos[1];\n    }\n\n    content.moveTo(x, y);\n  },\n  // FIXME\n  // Should we remove this but leave this to user?\n  _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n    var lastCoordSys = this._lastDataByCoordSys;\n    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\n    contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n      var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n      contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n      contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n        var thisItem = thisDataByAxis[indexAxis] || {};\n        var lastIndices = lastItem.seriesDataIndices || [];\n        var newIndices = thisItem.seriesDataIndices || [];\n        contentNotChanged &= lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\n        contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n          var newIdxItem = newIndices[j];\n          contentNotChanged &= lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n        });\n      });\n    });\n    this._lastDataByCoordSys = dataByCoordSys;\n    return !!contentNotChanged;\n  },\n  _hide: function (dispatchAction) {\n    // Do not directly hideLater here, because this behavior may be prevented\n    // in dispatchAction when showTip is dispatched.\n    // FIXME\n    // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n    this._lastDataByCoordSys = null;\n    dispatchAction({\n      type: 'hideTip',\n      from: this.uid\n    });\n  },\n  dispose: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    this._tooltipContent.hide();\n\n    globalListener.unregister('itemTooltip', api);\n  }\n});\n/**\n * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n * From top to bottom. (the last one should be globalTooltipModel);\n */\n\n\nfunction buildTooltipModel(modelCascade) {\n  var resultModel = modelCascade.pop();\n\n  while (modelCascade.length) {\n    var tooltipOpt = modelCascade.pop();\n\n    if (tooltipOpt) {\n      if (tooltipOpt instanceof Model) {\n        tooltipOpt = tooltipOpt.get('tooltip', true);\n      } // In each data item tooltip can be simply write:\n      // {\n      //  value: 10,\n      //  tooltip: 'Something you need to know'\n      // }\n\n\n      if (typeof tooltipOpt === 'string') {\n        tooltipOpt = {\n          formatter: tooltipOpt\n        };\n      }\n\n      resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n    }\n  }\n\n  return resultModel;\n}\n\nfunction makeDispatchAction(payload, api) {\n  return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n}\n\nfunction refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n\n  if (gapH != null) {\n    if (x + width + gapH > viewWidth) {\n      x -= width + gapH;\n    } else {\n      x += gapH;\n    }\n  }\n\n  if (gapV != null) {\n    if (y + height + gapV > viewHeight) {\n      y -= height + gapV;\n    } else {\n      y += gapV;\n    }\n  }\n\n  return [x, y];\n}\n\nfunction confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n  x = Math.min(x + width, viewWidth) - width;\n  y = Math.min(y + height, viewHeight) - height;\n  x = Math.max(x, 0);\n  y = Math.max(y, 0);\n  return [x, y];\n}\n\nfunction getOuterSize(el) {\n  var width = el.clientWidth;\n  var height = el.clientHeight; // Consider browser compatibility.\n  // IE8 does not support getComputedStyle.\n\n  if (document.defaultView && document.defaultView.getComputedStyle) {\n    var stl = document.defaultView.getComputedStyle(el);\n\n    if (stl) {\n      width += parseInt(stl.paddingLeft, 10) + parseInt(stl.paddingRight, 10) + parseInt(stl.borderLeftWidth, 10) + parseInt(stl.borderRightWidth, 10);\n      height += parseInt(stl.paddingTop, 10) + parseInt(stl.paddingBottom, 10) + parseInt(stl.borderTopWidth, 10) + parseInt(stl.borderBottomWidth, 10);\n    }\n  }\n\n  return {\n    width: width,\n    height: height\n  };\n}\n\nfunction calcTooltipPosition(position, rect, contentSize) {\n  var domWidth = contentSize[0];\n  var domHeight = contentSize[1];\n  var gap = 5;\n  var x = 0;\n  var y = 0;\n  var rectWidth = rect.width;\n  var rectHeight = rect.height;\n\n  switch (position) {\n    case 'inside':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'top':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y - domHeight - gap;\n      break;\n\n    case 'bottom':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight + gap;\n      break;\n\n    case 'left':\n      x = rect.x - domWidth - gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'right':\n      x = rect.x + rectWidth + gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n  }\n\n  return [x, y];\n}\n\nfunction isCenterAlign(align) {\n  return align === 'center' || align === 'middle';\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/tooltip/TooltipView.js\n// module id = 1140\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar zrColor = require(\"zrender/lib/tool/color\");\n\nvar eventUtil = require(\"zrender/lib/core/event\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar each = zrUtil.each;\nvar toCamelCase = formatUtil.toCamelCase;\nvar vendors = ['', '-webkit-', '-moz-', '-o-'];\nvar gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n/**\n * @param {number} duration\n * @return {string}\n * @inner\n */\n\nfunction assembleTransition(duration) {\n  var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n  var transitionText = 'left ' + duration + 's ' + transitionCurve + ',' + 'top ' + duration + 's ' + transitionCurve;\n  return zrUtil.map(vendors, function (vendorPrefix) {\n    return vendorPrefix + 'transition:' + transitionText;\n  }).join(';');\n}\n/**\n * @param {Object} textStyle\n * @return {string}\n * @inner\n */\n\n\nfunction assembleFont(textStyleModel) {\n  var cssText = [];\n  var fontSize = textStyleModel.get('fontSize');\n  var color = textStyleModel.getTextColor();\n  color && cssText.push('color:' + color);\n  cssText.push('font:' + textStyleModel.getFont());\n  fontSize && cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n  each(['decoration', 'align'], function (name) {\n    var val = textStyleModel.get(name);\n    val && cssText.push('text-' + name + ':' + val);\n  });\n  return cssText.join(';');\n}\n/**\n * @param {Object} tooltipModel\n * @return {string}\n * @inner\n */\n\n\nfunction assembleCssText(tooltipModel) {\n  var cssText = [];\n  var transitionDuration = tooltipModel.get('transitionDuration');\n  var backgroundColor = tooltipModel.get('backgroundColor');\n  var textStyleModel = tooltipModel.getModel('textStyle');\n  var padding = tooltipModel.get('padding'); // Animation transition. Do not animate when transitionDuration is 0.\n\n  transitionDuration && cssText.push(assembleTransition(transitionDuration));\n\n  if (backgroundColor) {\n    if (env.canvasSupported) {\n      cssText.push('background-Color:' + backgroundColor);\n    } else {\n      // for ie\n      cssText.push('background-Color:#' + zrColor.toHex(backgroundColor));\n      cssText.push('filter:alpha(opacity=70)');\n    }\n  } // Border style\n\n\n  each(['width', 'color', 'radius'], function (name) {\n    var borderName = 'border-' + name;\n    var camelCase = toCamelCase(borderName);\n    var val = tooltipModel.get(camelCase);\n    val != null && cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n  }); // Text style\n\n  cssText.push(assembleFont(textStyleModel)); // Padding\n\n  if (padding != null) {\n    cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n  }\n\n  return cssText.join(';') + ';';\n}\n/**\n * @alias module:echarts/component/tooltip/TooltipContent\n * @constructor\n */\n\n\nfunction TooltipContent(container, api) {\n  var el = document.createElement('div');\n  var zr = this._zr = api.getZr();\n  this.el = el;\n  this._x = api.getWidth() / 2;\n  this._y = api.getHeight() / 2;\n  container.appendChild(el);\n  this._container = container;\n  this._show = false;\n  /**\n   * @private\n   */\n\n  this._hideTimeout;\n  var self = this;\n\n  el.onmouseenter = function () {\n    // clear the timeout in hideLater and keep showing tooltip\n    if (self._enterable) {\n      clearTimeout(self._hideTimeout);\n      self._show = true;\n    }\n\n    self._inContent = true;\n  };\n\n  el.onmousemove = function (e) {\n    e = e || window.event;\n\n    if (!self._enterable) {\n      // Try trigger zrender event to avoid mouse\n      // in and out shape too frequently\n      var handler = zr.handler;\n      eventUtil.normalizeEvent(container, e, true);\n      handler.dispatch('mousemove', e);\n    }\n  };\n\n  el.onmouseleave = function () {\n    if (self._enterable) {\n      if (self._show) {\n        self.hideLater(self._hideDelay);\n      }\n    }\n\n    self._inContent = false;\n  };\n}\n\nTooltipContent.prototype = {\n  constructor: TooltipContent,\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  _enterable: true,\n\n  /**\n   * Update when tooltip is rendered\n   */\n  update: function () {\n    // FIXME\n    // Move this logic to ec main?\n    var container = this._container;\n    var stl = container.currentStyle || document.defaultView.getComputedStyle(container);\n    var domStyle = container.style;\n\n    if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n      domStyle.position = 'relative';\n    } // Hide the tooltip\n    // PENDING\n    // this.hide();\n\n  },\n  show: function (tooltipModel) {\n    clearTimeout(this._hideTimeout);\n    var el = this.el;\n    el.style.cssText = gCssText + assembleCssText(tooltipModel) // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n    + ';left:' + this._x + 'px;top:' + this._y + 'px;' + (tooltipModel.get('extraCssText') || '');\n    el.style.display = el.innerHTML ? 'block' : 'none';\n    this._show = true;\n  },\n  setContent: function (content) {\n    this.el.innerHTML = content == null ? '' : content;\n  },\n  setEnterable: function (enterable) {\n    this._enterable = enterable;\n  },\n  getSize: function () {\n    var el = this.el;\n    return [el.clientWidth, el.clientHeight];\n  },\n  moveTo: function (x, y) {\n    // xy should be based on canvas root. But tooltipContent is\n    // the sibling of canvas root. So padding of ec container\n    // should be considered here.\n    var zr = this._zr;\n    var viewportRootOffset;\n\n    if (zr && zr.painter && (viewportRootOffset = zr.painter.getViewportRootOffset())) {\n      x += viewportRootOffset.offsetLeft;\n      y += viewportRootOffset.offsetTop;\n    }\n\n    var style = this.el.style;\n    style.left = x + 'px';\n    style.top = y + 'px';\n    this._x = x;\n    this._y = y;\n  },\n  hide: function () {\n    this.el.style.display = 'none';\n    this._show = false;\n  },\n  hideLater: function (time) {\n    if (this._show && !(this._inContent && this._enterable)) {\n      if (time) {\n        this._hideDelay = time; // Set show false to avoid invoke hideLater mutiple times\n\n        this._show = false;\n        this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n      } else {\n        this.hide();\n      }\n    }\n  },\n  isShow: function () {\n    return this._show;\n  }\n};\nvar _default = TooltipContent;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/tooltip/TooltipContent.js\n// module id = 1141\n// module chunks = 0 1 2","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nfunction legendSelectActionHandler(methodName, payload, ecModel) {\n  var selectedMap = {};\n  var isToggleSelect = methodName === 'toggleSelected';\n  var isSelected; // Update all legend components\n\n  ecModel.eachComponent('legend', function (legendModel) {\n    if (isToggleSelect && isSelected != null) {\n      // Force other legend has same selected status\n      // Or the first is toggled to true and other are toggled to false\n      // In the case one legend has some item unSelected in option. And if other legend\n      // doesn't has the item, they will assume it is selected.\n      legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n    } else {\n      legendModel[methodName](payload.name);\n      isSelected = legendModel.isSelected(payload.name);\n    }\n\n    var legendData = legendModel.getData();\n    zrUtil.each(legendData, function (model) {\n      var name = model.get('name'); // Wrap element\n\n      if (name === '\\n' || name === '') {\n        return;\n      }\n\n      var isItemSelected = legendModel.isSelected(name);\n\n      if (selectedMap.hasOwnProperty(name)) {\n        // Unselected if any legend is unselected\n        selectedMap[name] = selectedMap[name] && isItemSelected;\n      } else {\n        selectedMap[name] = isItemSelected;\n      }\n    });\n  }); // Return the event explicitly\n\n  return {\n    name: payload.name,\n    selected: selectedMap\n  };\n}\n/**\n * @event legendToggleSelect\n * @type {Object}\n * @property {string} type 'legendToggleSelect'\n * @property {string} [from]\n * @property {string} name Series name or data item name\n */\n\n\necharts.registerAction('legendToggleSelect', 'legendselectchanged', zrUtil.curry(legendSelectActionHandler, 'toggleSelected'));\n/**\n * @event legendSelect\n * @type {Object}\n * @property {string} type 'legendSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendSelect', 'legendselected', zrUtil.curry(legendSelectActionHandler, 'select'));\n/**\n * @event legendUnSelect\n * @type {Object}\n * @property {string} type 'legendUnSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendUnSelect', 'legendunselected', zrUtil.curry(legendSelectActionHandler, 'unSelect'));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/legendAction.js\n// module id = 1142\n// module chunks = 0 1 2","function _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (legendModels && legendModels.length) {\n    ecModel.filterSeries(function (series) {\n      // If in any legend component the status is not selected.\n      // Because in legend series is assumed selected when it is not in the legend data.\n      for (var i = 0; i < legendModels.length; i++) {\n        if (!legendModels[i].isSelected(series.name)) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/legendFilter.js\n// module id = 1143\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * Data selectable mixin for chart series.\n * To eanble data select, option of series must have `selectedMode`.\n * And each data item will use `selected` to toggle itself selected status\n */\nvar _default = {\n  updateSelectedMap: function (targetList) {\n    this._targetList = targetList.slice();\n    this._selectTargetMap = zrUtil.reduce(targetList || [], function (targetMap, target) {\n      targetMap.set(target.name, target);\n      return targetMap;\n    }, zrUtil.createHashMap());\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  // PENGING If selectedMode is null ?\n  select: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      this._selectTargetMap.each(function (target) {\n        target.selected = false;\n      });\n    }\n\n    target && (target.selected = true);\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  unSelect: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name); // var selectedMode = this.get('selectedMode');\n    // selectedMode !== 'single' && target && (target.selected = false);\n\n    target && (target.selected = false);\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  toggleSelected: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n\n    if (target != null) {\n      this[target.selected ? 'unSelect' : 'select'](name, id);\n      return target.selected;\n    }\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  isSelected: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n    return target && target.selected;\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/selectableMixin.js\n// module id = 1144\n// module chunks = 0 2","// Pick color from palette for each data item.\n// Applicable for charts that require applying color palette\n// in data level (like pie, funnel, chord).\nfunction _default(seriesType, ecModel) {\n  // Pie and funnel may use diferrent scope\n  var paletteScope = {};\n  ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n    var dataAll = seriesModel.getRawData();\n    var idxMap = {};\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      var data = seriesModel.getData();\n      data.each(function (idx) {\n        var rawIdx = data.getRawIndex(idx);\n        idxMap[rawIdx] = idx;\n      });\n      dataAll.each(function (rawIdx) {\n        var filteredIdx = idxMap[rawIdx]; // If series.itemStyle.normal.color is a function. itemVisual may be encoded\n\n        var singleDataColor = filteredIdx != null && data.getItemVisual(filteredIdx, 'color', true);\n\n        if (!singleDataColor) {\n          // FIXME Performance\n          var itemModel = dataAll.getItemModel(rawIdx);\n          var color = itemModel.get('itemStyle.normal.color') || seriesModel.getColorFromPalette(dataAll.getName(rawIdx), paletteScope); // Legend may use the visual info in data before processed\n\n          dataAll.setItemVisual(rawIdx, 'color', color); // Data is not filtered\n\n          if (filteredIdx != null) {\n            data.setItemVisual(filteredIdx, 'color', color);\n          }\n        } else {\n          // Set data all color for legend\n          dataAll.setItemVisual(rawIdx, 'color', singleDataColor);\n        }\n      });\n    }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/visual/dataColor.js\n// module id = 1145\n// module chunks = 0 2","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar featureManager = require(\"./featureManager\");\n\nvar ToolboxModel = echarts.extendComponentModel({\n  type: 'toolbox',\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n  mergeDefaultAndTheme: function (option) {\n    ToolboxModel.superApply(this, 'mergeDefaultAndTheme', arguments);\n    zrUtil.each(this.option.feature, function (featureOpt, featureName) {\n      var Feature = featureManager.get(featureName);\n      Feature && zrUtil.merge(featureOpt, Feature.defaultOption);\n    });\n  },\n  defaultOption: {\n    show: true,\n    z: 6,\n    zlevel: 0,\n    orient: 'horizontal',\n    left: 'right',\n    top: 'top',\n    // right\n    // bottom\n    backgroundColor: 'transparent',\n    borderColor: '#ccc',\n    borderRadius: 0,\n    borderWidth: 0,\n    padding: 5,\n    itemSize: 15,\n    itemGap: 8,\n    showTitle: true,\n    iconStyle: {\n      normal: {\n        borderColor: '#666',\n        color: 'none'\n      },\n      emphasis: {\n        borderColor: '#3E98C5'\n      } // textStyle: {},\n      // feature\n\n    }\n  }\n});\nvar _default = ToolboxModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox/ToolboxModel.js\n// module id = 1146\n// module chunks = 0 1 2","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar featureManager = require(\"./featureManager\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\nvar listComponentHelper = require(\"../helper/listComponent\");\n\nvar _default = echarts.extendComponentView({\n  type: 'toolbox',\n  render: function (toolboxModel, ecModel, api, payload) {\n    var group = this.group;\n    group.removeAll();\n\n    if (!toolboxModel.get('show')) {\n      return;\n    }\n\n    var itemSize = +toolboxModel.get('itemSize');\n    var featureOpts = toolboxModel.get('feature') || {};\n    var features = this._features || (this._features = {});\n    var featureNames = [];\n    zrUtil.each(featureOpts, function (opt, name) {\n      featureNames.push(name);\n    });\n    new DataDiffer(this._featureNames || [], featureNames).add(processFeature).update(processFeature).remove(zrUtil.curry(processFeature, null)).execute(); // Keep for diff.\n\n    this._featureNames = featureNames;\n\n    function processFeature(newIndex, oldIndex) {\n      var featureName = featureNames[newIndex];\n      var oldName = featureNames[oldIndex];\n      var featureOpt = featureOpts[featureName];\n      var featureModel = new Model(featureOpt, toolboxModel, toolboxModel.ecModel);\n      var feature;\n\n      if (featureName && !oldName) {\n        // Create\n        if (isUserFeatureName(featureName)) {\n          feature = {\n            model: featureModel,\n            onclick: featureModel.option.onclick,\n            featureName: featureName\n          };\n        } else {\n          var Feature = featureManager.get(featureName);\n\n          if (!Feature) {\n            return;\n          }\n\n          feature = new Feature(featureModel, ecModel, api);\n        }\n\n        features[featureName] = feature;\n      } else {\n        feature = features[oldName]; // If feature does not exsit.\n\n        if (!feature) {\n          return;\n        }\n\n        feature.model = featureModel;\n        feature.ecModel = ecModel;\n        feature.api = api;\n      }\n\n      if (!featureName && oldName) {\n        feature.dispose && feature.dispose(ecModel, api);\n        return;\n      }\n\n      if (!featureModel.get('show') || feature.unusable) {\n        feature.remove && feature.remove(ecModel, api);\n        return;\n      }\n\n      createIconPaths(featureModel, feature, featureName);\n\n      featureModel.setIconStatus = function (iconName, status) {\n        var option = this.option;\n        var iconPaths = this.iconPaths;\n        option.iconStatus = option.iconStatus || {};\n        option.iconStatus[iconName] = status; // FIXME\n\n        iconPaths[iconName] && iconPaths[iconName].trigger(status);\n      };\n\n      if (feature.render) {\n        feature.render(featureModel, ecModel, api, payload);\n      }\n    }\n\n    function createIconPaths(featureModel, feature, featureName) {\n      var iconStyleModel = featureModel.getModel('iconStyle'); // If one feature has mutiple icon. they are orginaized as\n      // {\n      //     icon: {\n      //         foo: '',\n      //         bar: ''\n      //     },\n      //     title: {\n      //         foo: '',\n      //         bar: ''\n      //     }\n      // }\n\n      var icons = feature.getIcons ? feature.getIcons() : featureModel.get('icon');\n      var titles = featureModel.get('title') || {};\n\n      if (typeof icons === 'string') {\n        var icon = icons;\n        var title = titles;\n        icons = {};\n        titles = {};\n        icons[featureName] = icon;\n        titles[featureName] = title;\n      }\n\n      var iconPaths = featureModel.iconPaths = {};\n      zrUtil.each(icons, function (iconStr, iconName) {\n        var path = graphic.createIcon(iconStr, {}, {\n          x: -itemSize / 2,\n          y: -itemSize / 2,\n          width: itemSize,\n          height: itemSize\n        });\n        path.setStyle(iconStyleModel.getModel('normal').getItemStyle());\n        path.hoverStyle = iconStyleModel.getModel('emphasis').getItemStyle();\n        graphic.setHoverStyle(path);\n\n        if (toolboxModel.get('showTitle')) {\n          path.__title = titles[iconName];\n          path.on('mouseover', function () {\n            // Should not reuse above hoverStyle, which might be modified.\n            var hoverStyle = iconStyleModel.getModel('emphasis').getItemStyle();\n            path.setStyle({\n              text: titles[iconName],\n              textPosition: hoverStyle.textPosition || 'bottom',\n              textFill: hoverStyle.fill || hoverStyle.stroke || '#000',\n              textAlign: hoverStyle.textAlign || 'center'\n            });\n          }).on('mouseout', function () {\n            path.setStyle({\n              textFill: null\n            });\n          });\n        }\n\n        path.trigger(featureModel.get('iconStatus.' + iconName) || 'normal');\n        group.add(path);\n        path.on('click', zrUtil.bind(feature.onclick, feature, ecModel, api, iconName));\n        iconPaths[iconName] = path;\n      });\n    }\n\n    listComponentHelper.layout(group, toolboxModel, api); // Render background after group is layout\n    // FIXME\n\n    group.add(listComponentHelper.makeBackground(group.getBoundingRect(), toolboxModel)); // Adjust icon title positions to avoid them out of screen\n\n    group.eachChild(function (icon) {\n      var titleText = icon.__title;\n      var hoverStyle = icon.hoverStyle; // May be background element\n\n      if (hoverStyle && titleText) {\n        var rect = textContain.getBoundingRect(titleText, textContain.makeFont(hoverStyle));\n        var offsetX = icon.position[0] + group.position[0];\n        var offsetY = icon.position[1] + group.position[1] + itemSize;\n        var needPutOnTop = false;\n\n        if (offsetY + rect.height > api.getHeight()) {\n          hoverStyle.textPosition = 'top';\n          needPutOnTop = true;\n        }\n\n        var topOffset = needPutOnTop ? -5 - rect.height : itemSize + 8;\n\n        if (offsetX + rect.width / 2 > api.getWidth()) {\n          hoverStyle.textPosition = ['100%', topOffset];\n          hoverStyle.textAlign = 'right';\n        } else if (offsetX - rect.width / 2 < 0) {\n          hoverStyle.textPosition = [0, topOffset];\n          hoverStyle.textAlign = 'left';\n        }\n      }\n    });\n  },\n  updateView: function (toolboxModel, ecModel, api, payload) {\n    zrUtil.each(this._features, function (feature) {\n      feature.updateView && feature.updateView(feature.model, ecModel, api, payload);\n    });\n  },\n  updateLayout: function (toolboxModel, ecModel, api, payload) {\n    zrUtil.each(this._features, function (feature) {\n      feature.updateLayout && feature.updateLayout(feature.model, ecModel, api, payload);\n    });\n  },\n  remove: function (ecModel, api) {\n    zrUtil.each(this._features, function (feature) {\n      feature.remove && feature.remove(ecModel, api);\n    });\n    this.group.removeAll();\n  },\n  dispose: function (ecModel, api) {\n    zrUtil.each(this._features, function (feature) {\n      feature.dispose && feature.dispose(ecModel, api);\n    });\n  }\n});\n\nfunction isUserFeatureName(featureName) {\n  return featureName.indexOf('my') === 0;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox/ToolboxView.js\n// module id = 1147\n// module chunks = 0 1 2","var env = require(\"zrender/lib/core/env\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\nvar saveAsImageLang = lang.toolbox.saveAsImage;\n\nfunction SaveAsImage(model) {\n  this.model = model;\n}\n\nSaveAsImage.defaultOption = {\n  show: true,\n  icon: 'M4.7,22.9L29.3,45.5L54.7,23.4M4.6,43.6L4.6,58L53.8,58L53.8,43.6M29.2,45.1L29.2,0',\n  title: saveAsImageLang.title,\n  type: 'png',\n  // Default use option.backgroundColor\n  // backgroundColor: '#fff',\n  name: '',\n  excludeComponents: ['toolbox'],\n  pixelRatio: 1,\n  lang: saveAsImageLang.lang.slice()\n};\nSaveAsImage.prototype.unusable = !env.canvasSupported;\nvar proto = SaveAsImage.prototype;\n\nproto.onclick = function (ecModel, api) {\n  var model = this.model;\n  var title = model.get('name') || ecModel.get('title.0.text') || 'echarts';\n  var $a = document.createElement('a');\n  var type = model.get('type', true) || 'png';\n  $a.download = title + '.' + type;\n  $a.target = '_blank';\n  var url = api.getConnectedDataURL({\n    type: type,\n    backgroundColor: model.get('backgroundColor', true) || ecModel.get('backgroundColor') || '#fff',\n    excludeComponents: model.get('excludeComponents'),\n    pixelRatio: model.get('pixelRatio')\n  });\n  $a.href = url; // Chrome and Firefox\n\n  if (typeof MouseEvent === 'function' && !env.browser.ie && !env.browser.edge) {\n    var evt = new MouseEvent('click', {\n      view: window,\n      bubbles: true,\n      cancelable: false\n    });\n    $a.dispatchEvent(evt);\n  } // IE\n  else {\n      if (window.navigator.msSaveOrOpenBlob) {\n        var bstr = atob(url.split(',')[1]);\n        var n = bstr.length;\n        var u8arr = new Uint8Array(n);\n\n        while (n--) {\n          u8arr[n] = bstr.charCodeAt(n);\n        }\n\n        var blob = new Blob([u8arr]);\n        window.navigator.msSaveOrOpenBlob(blob, title + '.' + type);\n      } else {\n        var lang = model.get('lang');\n        var html = '' + '<body style=\"margin:0;\">' + '<img src=\"' + url + '\" style=\"max-width:100%;\" title=\"' + (lang && lang[0] || '') + '\" />' + '</body>';\n        var tab = window.open();\n        tab.document.write(html);\n      }\n    }\n};\n\nfeatureManager.register('saveAsImage', SaveAsImage);\nvar _default = SaveAsImage;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox/feature/SaveAsImage.js\n// module id = 1148\n// module chunks = 0 1 2","var echarts = require(\"../../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\nvar magicTypeLang = lang.toolbox.magicType;\n\nfunction MagicType(model) {\n  this.model = model;\n}\n\nMagicType.defaultOption = {\n  show: true,\n  type: [],\n  // Icon group\n  icon: {\n    line: 'M4.1,28.9h7.1l9.3-22l7.4,38l9.7-19.7l3,12.8h14.9M4.1,58h51.4',\n    bar: 'M6.7,22.9h10V48h-10V22.9zM24.9,13h10v35h-10V13zM43.2,2h10v46h-10V2zM3.1,58h53.7',\n    stack: 'M8.2,38.4l-8.4,4.1l30.6,15.3L60,42.5l-8.1-4.1l-21.5,11L8.2,38.4z M51.9,30l-8.1,4.2l-13.4,6.9l-13.9-6.9L8.2,30l-8.4,4.2l8.4,4.2l22.2,11l21.5-11l8.1-4.2L51.9,30z M51.9,21.7l-8.1,4.2L35.7,30l-5.3,2.8L24.9,30l-8.4-4.1l-8.3-4.2l-8.4,4.2L8.2,30l8.3,4.2l13.9,6.9l13.4-6.9l8.1-4.2l8.1-4.1L51.9,21.7zM30.4,2.2L-0.2,17.5l8.4,4.1l8.3,4.2l8.4,4.2l5.5,2.7l5.3-2.7l8.1-4.2l8.1-4.2l8.1-4.1L30.4,2.2z',\n    // jshint ignore:line\n    tiled: 'M2.3,2.2h22.8V25H2.3V2.2z M35,2.2h22.8V25H35V2.2zM2.3,35h22.8v22.8H2.3V35z M35,35h22.8v22.8H35V35z'\n  },\n  // `line`, `bar`, `stack`, `tiled`\n  title: zrUtil.clone(magicTypeLang.title),\n  option: {},\n  seriesIndex: {}\n};\nvar proto = MagicType.prototype;\n\nproto.getIcons = function () {\n  var model = this.model;\n  var availableIcons = model.get('icon');\n  var icons = {};\n  zrUtil.each(model.get('type'), function (type) {\n    if (availableIcons[type]) {\n      icons[type] = availableIcons[type];\n    }\n  });\n  return icons;\n};\n\nvar seriesOptGenreator = {\n  'line': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        type: 'line',\n        // Preserve data related option\n        data: seriesModel.get('data'),\n        stack: seriesModel.get('stack'),\n        markPoint: seriesModel.get('markPoint'),\n        markLine: seriesModel.get('markLine')\n      }, model.get('option.line') || {}, true);\n    }\n  },\n  'bar': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line') {\n      return zrUtil.merge({\n        id: seriesId,\n        type: 'bar',\n        // Preserve data related option\n        data: seriesModel.get('data'),\n        stack: seriesModel.get('stack'),\n        markPoint: seriesModel.get('markPoint'),\n        markLine: seriesModel.get('markLine')\n      }, model.get('option.bar') || {}, true);\n    }\n  },\n  'stack': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line' || seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        stack: '__ec_magicType_stack__'\n      }, model.get('option.stack') || {}, true);\n    }\n  },\n  'tiled': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line' || seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        stack: ''\n      }, model.get('option.tiled') || {}, true);\n    }\n  }\n};\nvar radioTypes = [['line', 'bar'], ['stack', 'tiled']];\n\nproto.onclick = function (ecModel, api, type) {\n  var model = this.model;\n  var seriesIndex = model.get('seriesIndex.' + type); // Not supported magicType\n\n  if (!seriesOptGenreator[type]) {\n    return;\n  }\n\n  var newOption = {\n    series: []\n  };\n\n  var generateNewSeriesTypes = function (seriesModel) {\n    var seriesType = seriesModel.subType;\n    var seriesId = seriesModel.id;\n    var newSeriesOpt = seriesOptGenreator[type](seriesType, seriesId, seriesModel, model);\n\n    if (newSeriesOpt) {\n      // PENDING If merge original option?\n      zrUtil.defaults(newSeriesOpt, seriesModel.option);\n      newOption.series.push(newSeriesOpt);\n    } // Modify boundaryGap\n\n\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.type === 'cartesian2d' && (type === 'line' || type === 'bar')) {\n      var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n\n      if (categoryAxis) {\n        var axisDim = categoryAxis.dim;\n        var axisType = axisDim + 'Axis';\n        var axisModel = ecModel.queryComponents({\n          mainType: axisType,\n          index: seriesModel.get(name + 'Index'),\n          id: seriesModel.get(name + 'Id')\n        })[0];\n        var axisIndex = axisModel.componentIndex;\n        newOption[axisType] = newOption[axisType] || [];\n\n        for (var i = 0; i <= axisIndex; i++) {\n          newOption[axisType][axisIndex] = newOption[axisType][axisIndex] || {};\n        }\n\n        newOption[axisType][axisIndex].boundaryGap = type === 'bar' ? true : false;\n      }\n    }\n  };\n\n  zrUtil.each(radioTypes, function (radio) {\n    if (zrUtil.indexOf(radio, type) >= 0) {\n      zrUtil.each(radio, function (item) {\n        model.setIconStatus(item, 'normal');\n      });\n    }\n  });\n  model.setIconStatus(type, 'emphasis');\n  ecModel.eachComponent({\n    mainType: 'series',\n    query: seriesIndex == null ? null : {\n      seriesIndex: seriesIndex\n    }\n  }, generateNewSeriesTypes);\n  api.dispatchAction({\n    type: 'changeMagicType',\n    currentType: type,\n    newOption: newOption\n  });\n};\n\necharts.registerAction({\n  type: 'changeMagicType',\n  event: 'magicTypeChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  ecModel.mergeOption(payload.newOption);\n});\nfeatureManager.register('magicType', MagicType);\nvar _default = MagicType;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox/feature/MagicType.js\n// module id = 1149\n// module chunks = 0 1 2","var echarts = require(\"../../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\nvar dataViewLang = lang.toolbox.dataView;\nvar BLOCK_SPLITER = new Array(60).join('-');\nvar ITEM_SPLITER = '\\t';\n/**\n * Group series into two types\n *  1. on category axis, like line, bar\n *  2. others, like scatter, pie\n * @param {module:echarts/model/Global} ecModel\n * @return {Object}\n * @inner\n */\n\nfunction groupSeries(ecModel) {\n  var seriesGroupByCategoryAxis = {};\n  var otherSeries = [];\n  var meta = [];\n  ecModel.eachRawSeries(function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && (coordSys.type === 'cartesian2d' || coordSys.type === 'polar')) {\n      var baseAxis = coordSys.getBaseAxis();\n\n      if (baseAxis.type === 'category') {\n        var key = baseAxis.dim + '_' + baseAxis.index;\n\n        if (!seriesGroupByCategoryAxis[key]) {\n          seriesGroupByCategoryAxis[key] = {\n            categoryAxis: baseAxis,\n            valueAxis: coordSys.getOtherAxis(baseAxis),\n            series: []\n          };\n          meta.push({\n            axisDim: baseAxis.dim,\n            axisIndex: baseAxis.index\n          });\n        }\n\n        seriesGroupByCategoryAxis[key].series.push(seriesModel);\n      } else {\n        otherSeries.push(seriesModel);\n      }\n    } else {\n      otherSeries.push(seriesModel);\n    }\n  });\n  return {\n    seriesGroupByCategoryAxis: seriesGroupByCategoryAxis,\n    other: otherSeries,\n    meta: meta\n  };\n}\n/**\n * Assemble content of series on cateogory axis\n * @param {Array.<module:echarts/model/Series>} series\n * @return {string}\n * @inner\n */\n\n\nfunction assembleSeriesWithCategoryAxis(series) {\n  var tables = [];\n  zrUtil.each(series, function (group, key) {\n    var categoryAxis = group.categoryAxis;\n    var valueAxis = group.valueAxis;\n    var valueAxisDim = valueAxis.dim;\n    var headers = [' '].concat(zrUtil.map(group.series, function (series) {\n      return series.name;\n    }));\n    var columns = [categoryAxis.model.getCategories()];\n    zrUtil.each(group.series, function (series) {\n      columns.push(series.getRawData().mapArray(valueAxisDim, function (val) {\n        return val;\n      }));\n    }); // Assemble table content\n\n    var lines = [headers.join(ITEM_SPLITER)];\n\n    for (var i = 0; i < columns[0].length; i++) {\n      var items = [];\n\n      for (var j = 0; j < columns.length; j++) {\n        items.push(columns[j][i]);\n      }\n\n      lines.push(items.join(ITEM_SPLITER));\n    }\n\n    tables.push(lines.join('\\n'));\n  });\n  return tables.join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n}\n/**\n * Assemble content of other series\n * @param {Array.<module:echarts/model/Series>} series\n * @return {string}\n * @inner\n */\n\n\nfunction assembleOtherSeries(series) {\n  return zrUtil.map(series, function (series) {\n    var data = series.getRawData();\n    var lines = [series.name];\n    var vals = [];\n    data.each(data.dimensions, function () {\n      var argLen = arguments.length;\n      var dataIndex = arguments[argLen - 1];\n      var name = data.getName(dataIndex);\n\n      for (var i = 0; i < argLen - 1; i++) {\n        vals[i] = arguments[i];\n      }\n\n      lines.push((name ? name + ITEM_SPLITER : '') + vals.join(ITEM_SPLITER));\n    });\n    return lines.join('\\n');\n  }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n}\n/**\n * @param {module:echarts/model/Global}\n * @return {Object}\n * @inner\n */\n\n\nfunction getContentFromModel(ecModel) {\n  var result = groupSeries(ecModel);\n  return {\n    value: zrUtil.filter([assembleSeriesWithCategoryAxis(result.seriesGroupByCategoryAxis), assembleOtherSeries(result.other)], function (str) {\n      return str.replace(/[\\n\\t\\s]/g, '');\n    }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n'),\n    meta: result.meta\n  };\n}\n\nfunction trim(str) {\n  return str.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n}\n/**\n * If a block is tsv format\n */\n\n\nfunction isTSVFormat(block) {\n  // Simple method to find out if a block is tsv format\n  var firstLine = block.slice(0, block.indexOf('\\n'));\n\n  if (firstLine.indexOf(ITEM_SPLITER) >= 0) {\n    return true;\n  }\n}\n\nvar itemSplitRegex = new RegExp('[' + ITEM_SPLITER + ']+', 'g');\n/**\n * @param {string} tsv\n * @return {Object}\n */\n\nfunction parseTSVContents(tsv) {\n  var tsvLines = tsv.split(/\\n+/g);\n  var headers = trim(tsvLines.shift()).split(itemSplitRegex);\n  var categories = [];\n  var series = zrUtil.map(headers, function (header) {\n    return {\n      name: header,\n      data: []\n    };\n  });\n\n  for (var i = 0; i < tsvLines.length; i++) {\n    var items = trim(tsvLines[i]).split(itemSplitRegex);\n    categories.push(items.shift());\n\n    for (var j = 0; j < items.length; j++) {\n      series[j] && (series[j].data[i] = items[j]);\n    }\n  }\n\n  return {\n    series: series,\n    categories: categories\n  };\n}\n/**\n * @param {string} str\n * @return {Array.<Object>}\n * @inner\n */\n\n\nfunction parseListContents(str) {\n  var lines = str.split(/\\n+/g);\n  var seriesName = trim(lines.shift());\n  var data = [];\n\n  for (var i = 0; i < lines.length; i++) {\n    var items = trim(lines[i]).split(itemSplitRegex);\n    var name = '';\n    var value;\n    var hasName = false;\n\n    if (isNaN(items[0])) {\n      // First item is name\n      hasName = true;\n      name = items[0];\n      items = items.slice(1);\n      data[i] = {\n        name: name,\n        value: []\n      };\n      value = data[i].value;\n    } else {\n      value = data[i] = [];\n    }\n\n    for (var j = 0; j < items.length; j++) {\n      value.push(+items[j]);\n    }\n\n    if (value.length === 1) {\n      hasName ? data[i].value = value[0] : data[i] = value[0];\n    }\n  }\n\n  return {\n    name: seriesName,\n    data: data\n  };\n}\n/**\n * @param {string} str\n * @param {Array.<Object>} blockMetaList\n * @return {Object}\n * @inner\n */\n\n\nfunction parseContents(str, blockMetaList) {\n  var blocks = str.split(new RegExp('\\n*' + BLOCK_SPLITER + '\\n*', 'g'));\n  var newOption = {\n    series: []\n  };\n  zrUtil.each(blocks, function (block, idx) {\n    if (isTSVFormat(block)) {\n      var result = parseTSVContents(block);\n      var blockMeta = blockMetaList[idx];\n      var axisKey = blockMeta.axisDim + 'Axis';\n\n      if (blockMeta) {\n        newOption[axisKey] = newOption[axisKey] || [];\n        newOption[axisKey][blockMeta.axisIndex] = {\n          data: result.categories\n        };\n        newOption.series = newOption.series.concat(result.series);\n      }\n    } else {\n      var result = parseListContents(block);\n      newOption.series.push(result);\n    }\n  });\n  return newOption;\n}\n/**\n * @alias {module:echarts/component/toolbox/feature/DataView}\n * @constructor\n * @param {module:echarts/model/Model} model\n */\n\n\nfunction DataView(model) {\n  this._dom = null;\n  this.model = model;\n}\n\nDataView.defaultOption = {\n  show: true,\n  readOnly: false,\n  optionToContent: null,\n  contentToOption: null,\n  icon: 'M17.5,17.3H33 M17.5,17.3H33 M45.4,29.5h-28 M11.5,2v56H51V14.8L38.4,2H11.5z M38.4,2.2v12.7H51 M45.4,41.7h-28',\n  title: zrUtil.clone(dataViewLang.title),\n  lang: zrUtil.clone(dataViewLang.lang),\n  backgroundColor: '#fff',\n  textColor: '#000',\n  textareaColor: '#fff',\n  textareaBorderColor: '#333',\n  buttonColor: '#c23531',\n  buttonTextColor: '#fff'\n};\n\nDataView.prototype.onclick = function (ecModel, api) {\n  var container = api.getDom();\n  var model = this.model;\n\n  if (this._dom) {\n    container.removeChild(this._dom);\n  }\n\n  var root = document.createElement('div');\n  root.style.cssText = 'position:absolute;left:5px;top:5px;bottom:5px;right:5px;';\n  root.style.backgroundColor = model.get('backgroundColor') || '#fff'; // Create elements\n\n  var header = document.createElement('h4');\n  var lang = model.get('lang') || [];\n  header.innerHTML = lang[0] || model.get('title');\n  header.style.cssText = 'margin: 10px 20px;';\n  header.style.color = model.get('textColor');\n  var viewMain = document.createElement('div');\n  var textarea = document.createElement('textarea');\n  viewMain.style.cssText = 'display:block;width:100%;overflow:auto;';\n  var optionToContent = model.get('optionToContent');\n  var contentToOption = model.get('contentToOption');\n  var result = getContentFromModel(ecModel);\n\n  if (typeof optionToContent === 'function') {\n    var htmlOrDom = optionToContent(api.getOption());\n\n    if (typeof htmlOrDom === 'string') {\n      viewMain.innerHTML = htmlOrDom;\n    } else if (zrUtil.isDom(htmlOrDom)) {\n      viewMain.appendChild(htmlOrDom);\n    }\n  } else {\n    // Use default textarea\n    viewMain.appendChild(textarea);\n    textarea.readOnly = model.get('readOnly');\n    textarea.style.cssText = 'width:100%;height:100%;font-family:monospace;font-size:14px;line-height:1.6rem;';\n    textarea.style.color = model.get('textColor');\n    textarea.style.borderColor = model.get('textareaBorderColor');\n    textarea.style.backgroundColor = model.get('textareaColor');\n    textarea.value = result.value;\n  }\n\n  var blockMetaList = result.meta;\n  var buttonContainer = document.createElement('div');\n  buttonContainer.style.cssText = 'position:absolute;bottom:0;left:0;right:0;';\n  var buttonStyle = 'float:right;margin-right:20px;border:none;' + 'cursor:pointer;padding:2px 5px;font-size:12px;border-radius:3px';\n  var closeButton = document.createElement('div');\n  var refreshButton = document.createElement('div');\n  buttonStyle += ';background-color:' + model.get('buttonColor');\n  buttonStyle += ';color:' + model.get('buttonTextColor');\n  var self = this;\n\n  function close() {\n    container.removeChild(root);\n    self._dom = null;\n  }\n\n  eventTool.addEventListener(closeButton, 'click', close);\n  eventTool.addEventListener(refreshButton, 'click', function () {\n    var newOption;\n\n    try {\n      if (typeof contentToOption === 'function') {\n        newOption = contentToOption(viewMain, api.getOption());\n      } else {\n        newOption = parseContents(textarea.value, blockMetaList);\n      }\n    } catch (e) {\n      close();\n      throw new Error('Data view format error ' + e);\n    }\n\n    if (newOption) {\n      api.dispatchAction({\n        type: 'changeDataView',\n        newOption: newOption\n      });\n    }\n\n    close();\n  });\n  closeButton.innerHTML = lang[1];\n  refreshButton.innerHTML = lang[2];\n  refreshButton.style.cssText = buttonStyle;\n  closeButton.style.cssText = buttonStyle;\n  !model.get('readOnly') && buttonContainer.appendChild(refreshButton);\n  buttonContainer.appendChild(closeButton); // http://stackoverflow.com/questions/6637341/use-tab-to-indent-in-textarea\n\n  eventTool.addEventListener(textarea, 'keydown', function (e) {\n    if ((e.keyCode || e.which) === 9) {\n      // get caret position/selection\n      var val = this.value;\n      var start = this.selectionStart;\n      var end = this.selectionEnd; // set textarea value to: text before caret + tab + text after caret\n\n      this.value = val.substring(0, start) + ITEM_SPLITER + val.substring(end); // put caret at right position again\n\n      this.selectionStart = this.selectionEnd = start + 1; // prevent the focus lose\n\n      eventTool.stop(e);\n    }\n  });\n  root.appendChild(header);\n  root.appendChild(viewMain);\n  root.appendChild(buttonContainer);\n  viewMain.style.height = container.clientHeight - 80 + 'px';\n  container.appendChild(root);\n  this._dom = root;\n};\n\nDataView.prototype.remove = function (ecModel, api) {\n  this._dom && api.getDom().removeChild(this._dom);\n};\n\nDataView.prototype.dispose = function (ecModel, api) {\n  this.remove(ecModel, api);\n};\n/**\n * @inner\n */\n\n\nfunction tryMergeDataOption(newData, originalData) {\n  return zrUtil.map(newData, function (newVal, idx) {\n    var original = originalData && originalData[idx];\n\n    if (zrUtil.isObject(original) && !zrUtil.isArray(original)) {\n      if (zrUtil.isObject(newVal) && !zrUtil.isArray(newVal)) {\n        newVal = newVal.value;\n      } // Original data has option\n\n\n      return zrUtil.defaults({\n        value: newVal\n      }, original);\n    } else {\n      return newVal;\n    }\n  });\n}\n\nfeatureManager.register('dataView', DataView);\necharts.registerAction({\n  type: 'changeDataView',\n  event: 'dataViewChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  var newSeriesOptList = [];\n  zrUtil.each(payload.newOption.series, function (seriesOpt) {\n    var seriesModel = ecModel.getSeriesByName(seriesOpt.name)[0];\n\n    if (!seriesModel) {\n      // New created series\n      // Geuss the series type\n      newSeriesOptList.push(zrUtil.extend({\n        // Default is scatter\n        type: 'scatter'\n      }, seriesOpt));\n    } else {\n      var originalData = seriesModel.get('data');\n      newSeriesOptList.push({\n        name: seriesOpt.name,\n        data: tryMergeDataOption(seriesOpt.data, originalData)\n      });\n    }\n  });\n  ecModel.mergeOption(zrUtil.defaults({\n    series: newSeriesOptList\n  }, payload.newOption));\n});\nvar _default = DataView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox/feature/DataView.js\n// module id = 1150\n// module chunks = 0 1 2","var echarts = require(\"../../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BrushController = require(\"../../helper/BrushController\");\n\nvar BrushTargetManager = require(\"../../helper/BrushTargetManager\");\n\nvar history = require(\"../../dataZoom/history\");\n\nvar sliderMove = require(\"../../helper/sliderMove\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\nrequire(\"../../dataZoomSelect\");\n\n// Use dataZoomSelect\nvar dataZoomLang = lang.toolbox.dataZoom;\nvar each = zrUtil.each; // Spectial component id start with \\0ec\\0, see echarts/model/Global.js~hasInnerId\n\nvar DATA_ZOOM_ID_BASE = '\\0_ec_\\0toolbox-dataZoom_';\n\nfunction DataZoom(model, ecModel, api) {\n  /**\n   * @private\n   * @type {module:echarts/component/helper/BrushController}\n   */\n  (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this)).mount();\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._isZoomActive;\n}\n\nDataZoom.defaultOption = {\n  show: true,\n  // Icon group\n  icon: {\n    zoom: 'M0,13.5h26.9 M13.5,26.9V0 M32.1,13.5H58V58H13.5 V32.1',\n    back: 'M22,1.4L9.9,13.5l12.3,12.3 M10.3,13.5H54.9v44.6 H10.3v-26'\n  },\n  // `zoom`, `back`\n  title: zrUtil.clone(dataZoomLang.title)\n};\nvar proto = DataZoom.prototype;\n\nproto.render = function (featureModel, ecModel, api, payload) {\n  this.model = featureModel;\n  this.ecModel = ecModel;\n  this.api = api;\n  updateZoomBtnStatus(featureModel, ecModel, this, payload, api);\n  updateBackBtnStatus(featureModel, ecModel);\n};\n\nproto.onclick = function (ecModel, api, type) {\n  handlers[type].call(this);\n};\n\nproto.remove = function (ecModel, api) {\n  this._brushController.unmount();\n};\n\nproto.dispose = function (ecModel, api) {\n  this._brushController.dispose();\n};\n/**\n * @private\n */\n\n\nvar handlers = {\n  zoom: function () {\n    var nextActive = !this._isZoomActive;\n    this.api.dispatchAction({\n      type: 'takeGlobalCursor',\n      key: 'dataZoomSelect',\n      dataZoomSelectActive: nextActive\n    });\n  },\n  back: function () {\n    this._dispatchZoomAction(history.pop(this.ecModel));\n  }\n};\n/**\n * @private\n */\n\nproto._onBrush = function (areas, opt) {\n  if (!opt.isEnd || !areas.length) {\n    return;\n  }\n\n  var snapshot = {};\n  var ecModel = this.ecModel;\n\n  this._brushController.updateCovers([]); // remove cover\n\n\n  var brushTargetManager = new BrushTargetManager(retrieveAxisSetting(this.model.option), ecModel, {\n    include: ['grid']\n  });\n  brushTargetManager.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n    if (coordSys.type !== 'cartesian2d') {\n      return;\n    }\n\n    var brushType = area.brushType;\n\n    if (brushType === 'rect') {\n      setBatch('x', coordSys, coordRange[0]);\n      setBatch('y', coordSys, coordRange[1]);\n    } else {\n      setBatch({\n        lineX: 'x',\n        lineY: 'y'\n      }[brushType], coordSys, coordRange);\n    }\n  });\n  history.push(ecModel, snapshot);\n\n  this._dispatchZoomAction(snapshot);\n\n  function setBatch(dimName, coordSys, minMax) {\n    var axis = coordSys.getAxis(dimName);\n    var axisModel = axis.model;\n    var dataZoomModel = findDataZoom(dimName, axisModel, ecModel); // Restrict range.\n\n    var minMaxSpan = dataZoomModel.findRepresentativeAxisProxy(axisModel).getMinMaxSpan();\n\n    if (minMaxSpan.minValueSpan != null || minMaxSpan.maxValueSpan != null) {\n      minMax = sliderMove(0, minMax.slice(), axis.scale.getExtent(), 0, minMaxSpan.minValueSpan, minMaxSpan.maxValueSpan);\n    }\n\n    dataZoomModel && (snapshot[dataZoomModel.id] = {\n      dataZoomId: dataZoomModel.id,\n      startValue: minMax[0],\n      endValue: minMax[1]\n    });\n  }\n\n  function findDataZoom(dimName, axisModel, ecModel) {\n    var found;\n    ecModel.eachComponent({\n      mainType: 'dataZoom',\n      subType: 'select'\n    }, function (dzModel) {\n      var has = dzModel.getAxisModel(dimName, axisModel.componentIndex);\n      has && (found = dzModel);\n    });\n    return found;\n  }\n};\n/**\n * @private\n */\n\n\nproto._dispatchZoomAction = function (snapshot) {\n  var batch = []; // Convert from hash map to array.\n\n  each(snapshot, function (batchItem, dataZoomId) {\n    batch.push(zrUtil.clone(batchItem));\n  });\n  batch.length && this.api.dispatchAction({\n    type: 'dataZoom',\n    from: this.uid,\n    batch: batch\n  });\n};\n\nfunction retrieveAxisSetting(option) {\n  var setting = {}; // Compatible with previous setting: null => all axis, false => no axis.\n\n  zrUtil.each(['xAxisIndex', 'yAxisIndex'], function (name) {\n    setting[name] = option[name];\n    setting[name] == null && (setting[name] = 'all');\n    (setting[name] === false || setting[name] === 'none') && (setting[name] = []);\n  });\n  return setting;\n}\n\nfunction updateBackBtnStatus(featureModel, ecModel) {\n  featureModel.setIconStatus('back', history.count(ecModel) > 1 ? 'emphasis' : 'normal');\n}\n\nfunction updateZoomBtnStatus(featureModel, ecModel, view, payload, api) {\n  var zoomActive = view._isZoomActive;\n\n  if (payload && payload.type === 'takeGlobalCursor') {\n    zoomActive = payload.key === 'dataZoomSelect' ? payload.dataZoomSelectActive : false;\n  }\n\n  view._isZoomActive = zoomActive;\n  featureModel.setIconStatus('zoom', zoomActive ? 'emphasis' : 'normal');\n  var brushTargetManager = new BrushTargetManager(retrieveAxisSetting(featureModel.option), ecModel, {\n    include: ['grid']\n  });\n\n  view._brushController.setPanels(brushTargetManager.makePanelOpts(api, function (targetInfo) {\n    return targetInfo.xAxisDeclared && !targetInfo.yAxisDeclared ? 'lineX' : !targetInfo.xAxisDeclared && targetInfo.yAxisDeclared ? 'lineY' : 'rect';\n  })).enableBrush(zoomActive ? {\n    brushType: 'auto',\n    brushStyle: {\n      // FIXME user customized?\n      lineWidth: 0,\n      fill: 'rgba(0,0,0,0.2)'\n    }\n  } : false);\n}\n\nfeatureManager.register('dataZoom', DataZoom); // Create special dataZoom option for select\n\necharts.registerPreprocessor(function (option) {\n  if (!option) {\n    return;\n  }\n\n  var dataZoomOpts = option.dataZoom || (option.dataZoom = []);\n\n  if (!zrUtil.isArray(dataZoomOpts)) {\n    option.dataZoom = dataZoomOpts = [dataZoomOpts];\n  }\n\n  var toolboxOpt = option.toolbox;\n\n  if (toolboxOpt) {\n    // Assume there is only one toolbox\n    if (zrUtil.isArray(toolboxOpt)) {\n      toolboxOpt = toolboxOpt[0];\n    }\n\n    if (toolboxOpt && toolboxOpt.feature) {\n      var dataZoomOpt = toolboxOpt.feature.dataZoom;\n      addForAxis('xAxis', dataZoomOpt);\n      addForAxis('yAxis', dataZoomOpt);\n    }\n  }\n\n  function addForAxis(axisName, dataZoomOpt) {\n    if (!dataZoomOpt) {\n      return;\n    } // Try not to modify model, because it is not merged yet.\n\n\n    var axisIndicesName = axisName + 'Index';\n    var givenAxisIndices = dataZoomOpt[axisIndicesName];\n\n    if (givenAxisIndices != null && givenAxisIndices != 'all' && !zrUtil.isArray(givenAxisIndices)) {\n      givenAxisIndices = givenAxisIndices === false || givenAxisIndices === 'none' ? [] : [givenAxisIndices];\n    }\n\n    forEachComponent(axisName, function (axisOpt, axisIndex) {\n      if (givenAxisIndices != null && givenAxisIndices != 'all' && zrUtil.indexOf(givenAxisIndices, axisIndex) === -1) {\n        return;\n      }\n\n      var newOpt = {\n        type: 'select',\n        $fromToolbox: true,\n        // Id for merge mapping.\n        id: DATA_ZOOM_ID_BASE + axisName + axisIndex\n      }; // FIXME\n      // Only support one axis now.\n\n      newOpt[axisIndicesName] = axisIndex;\n      dataZoomOpts.push(newOpt);\n    });\n  }\n\n  function forEachComponent(mainType, cb) {\n    var opts = option[mainType];\n\n    if (!zrUtil.isArray(opts)) {\n      opts = opts ? [opts] : [];\n    }\n\n    each(opts, cb);\n  }\n});\nvar _default = DataZoom;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox/feature/DataZoom.js\n// module id = 1151\n// module chunks = 0 1 2","require(\"./dataZoom/typeDefaulter\");\n\nrequire(\"./dataZoom/DataZoomModel\");\n\nrequire(\"./dataZoom/DataZoomView\");\n\nrequire(\"./dataZoom/SelectZoomModel\");\n\nrequire(\"./dataZoom/SelectZoomView\");\n\nrequire(\"./dataZoom/dataZoomProcessor\");\n\nrequire(\"./dataZoom/dataZoomAction\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoomSelect.js\n// module id = 1152\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar helper = require(\"./helper\");\n\nvar each = zrUtil.each;\nvar asc = numberUtil.asc;\n/**\n * Operate single axis.\n * One axis can only operated by one axis operator.\n * Different dataZoomModels may be defined to operate the same axis.\n * (i.e. 'inside' data zoom and 'slider' data zoom components)\n * So dataZoomModels share one axisProxy in that case.\n *\n * @class\n */\n\nvar AxisProxy = function (dimName, axisIndex, dataZoomModel, ecModel) {\n  /**\n   * @private\n   * @type {string}\n   */\n  this._dimName = dimName;\n  /**\n   * @private\n   */\n\n  this._axisIndex = axisIndex;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._valueWindow;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._percentWindow;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._dataExtent;\n  /**\n   * {minSpan, maxSpan, minValueSpan, maxValueSpan}\n   * @private\n   * @type {Object}\n   */\n\n  this._minMaxSpan;\n  /**\n   * @readOnly\n   * @type {module: echarts/model/Global}\n   */\n\n  this.ecModel = ecModel;\n  /**\n   * @private\n   * @type {module: echarts/component/dataZoom/DataZoomModel}\n   */\n\n  this._dataZoomModel = dataZoomModel;\n};\n\nAxisProxy.prototype = {\n  constructor: AxisProxy,\n\n  /**\n   * Whether the axisProxy is hosted by dataZoomModel.\n   *\n   * @public\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   * @return {boolean}\n   */\n  hostedBy: function (dataZoomModel) {\n    return this._dataZoomModel === dataZoomModel;\n  },\n\n  /**\n   * @return {Array.<number>} Value can only be NaN or finite value.\n   */\n  getDataValueWindow: function () {\n    return this._valueWindow.slice();\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getDataPercentWindow: function () {\n    return this._percentWindow.slice();\n  },\n\n  /**\n   * @public\n   * @param {number} axisIndex\n   * @return {Array} seriesModels\n   */\n  getTargetSeriesModels: function () {\n    var seriesModels = [];\n    var ecModel = this.ecModel;\n    ecModel.eachSeries(function (seriesModel) {\n      if (helper.isCoordSupported(seriesModel.get('coordinateSystem'))) {\n        var dimName = this._dimName;\n        var axisModel = ecModel.queryComponents({\n          mainType: dimName + 'Axis',\n          index: seriesModel.get(dimName + 'AxisIndex'),\n          id: seriesModel.get(dimName + 'AxisId')\n        })[0];\n\n        if (this._axisIndex === (axisModel && axisModel.componentIndex)) {\n          seriesModels.push(seriesModel);\n        }\n      }\n    }, this);\n    return seriesModels;\n  },\n  getAxisModel: function () {\n    return this.ecModel.getComponent(this._dimName + 'Axis', this._axisIndex);\n  },\n  getOtherAxisModel: function () {\n    var axisDim = this._dimName;\n    var ecModel = this.ecModel;\n    var axisModel = this.getAxisModel();\n    var isCartesian = axisDim === 'x' || axisDim === 'y';\n    var otherAxisDim;\n    var coordSysIndexName;\n\n    if (isCartesian) {\n      coordSysIndexName = 'gridIndex';\n      otherAxisDim = axisDim === 'x' ? 'y' : 'x';\n    } else {\n      coordSysIndexName = 'polarIndex';\n      otherAxisDim = axisDim === 'angle' ? 'radius' : 'angle';\n    }\n\n    var foundOtherAxisModel;\n    ecModel.eachComponent(otherAxisDim + 'Axis', function (otherAxisModel) {\n      if ((otherAxisModel.get(coordSysIndexName) || 0) === (axisModel.get(coordSysIndexName) || 0)) {\n        foundOtherAxisModel = otherAxisModel;\n      }\n    });\n    return foundOtherAxisModel;\n  },\n  getMinMaxSpan: function () {\n    return zrUtil.clone(this._minMaxSpan);\n  },\n\n  /**\n   * Only calculate by given range and this._dataExtent, do not change anything.\n   *\n   * @param {Object} opt\n   * @param {number} [opt.start]\n   * @param {number} [opt.end]\n   * @param {number} [opt.startValue]\n   * @param {number} [opt.endValue]\n   */\n  calculateDataWindow: function (opt) {\n    var dataExtent = this._dataExtent;\n    var axisModel = this.getAxisModel();\n    var scale = axisModel.axis.scale;\n\n    var rangePropMode = this._dataZoomModel.getRangePropMode();\n\n    var percentExtent = [0, 100];\n    var percentWindow = [opt.start, opt.end];\n    var valueWindow = [];\n    each(['startValue', 'endValue'], function (prop) {\n      valueWindow.push(opt[prop] != null ? scale.parse(opt[prop]) : null);\n    }); // Normalize bound.\n\n    each([0, 1], function (idx) {\n      var boundValue = valueWindow[idx];\n      var boundPercent = percentWindow[idx]; // Notice: dataZoom is based either on `percentProp` ('start', 'end') or\n      // on `valueProp` ('startValue', 'endValue'). The former one is suitable\n      // for cases that a dataZoom component controls multiple axes with different\n      // unit or extent, and the latter one is suitable for accurate zoom by pixel\n      // (e.g., in dataZoomSelect). `valueProp` can be calculated from `percentProp`,\n      // but it is awkward that `percentProp` can not be obtained from `valueProp`\n      // accurately (because all of values that are overflow the `dataExtent` will\n      // be calculated to percent '100%'). So we have to use\n      // `dataZoom.getRangePropMode()` to mark which prop is used.\n      // `rangePropMode` is updated only when setOption or dispatchAction, otherwise\n      // it remains its original value.\n\n      if (rangePropMode[idx] === 'percent') {\n        if (boundPercent == null) {\n          boundPercent = percentExtent[idx];\n        } // Use scale.parse to math round for category or time axis.\n\n\n        boundValue = scale.parse(numberUtil.linearMap(boundPercent, percentExtent, dataExtent, true));\n      } else {\n        // Calculating `percent` from `value` may be not accurate, because\n        // This calculation can not be inversed, because all of values that\n        // are overflow the `dataExtent` will be calculated to percent '100%'\n        boundPercent = numberUtil.linearMap(boundValue, dataExtent, percentExtent, true);\n      } // valueWindow[idx] = round(boundValue);\n      // percentWindow[idx] = round(boundPercent);\n\n\n      valueWindow[idx] = boundValue;\n      percentWindow[idx] = boundPercent;\n    });\n    return {\n      valueWindow: asc(valueWindow),\n      percentWindow: asc(percentWindow)\n    };\n  },\n\n  /**\n   * Notice: reset should not be called before series.restoreData() called,\n   * so it is recommanded to be called in \"process stage\" but not \"model init\n   * stage\".\n   *\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  reset: function (dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    } // Culculate data window and data extent, and record them.\n\n\n    this._dataExtent = calculateDataExtent(this, this._dimName, this.getTargetSeriesModels());\n    var dataWindow = this.calculateDataWindow(dataZoomModel.option);\n    this._valueWindow = dataWindow.valueWindow;\n    this._percentWindow = dataWindow.percentWindow;\n    setMinMaxSpan(this); // Update axis setting then.\n\n    setAxisModel(this);\n  },\n\n  /**\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  restore: function (dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    this._valueWindow = this._percentWindow = null;\n    setAxisModel(this, true);\n  },\n\n  /**\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  filterData: function (dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    var axisDim = this._dimName;\n    var seriesModels = this.getTargetSeriesModels();\n    var filterMode = dataZoomModel.get('filterMode');\n    var valueWindow = this._valueWindow;\n\n    if (filterMode === 'none') {\n      return;\n    } // FIXME\n    // Toolbox may has dataZoom injected. And if there are stacked bar chart\n    // with NaN data, NaN will be filtered and stack will be wrong.\n    // So we need to force the mode to be set empty.\n    // In fect, it is not a big deal that do not support filterMode-'filter'\n    // when using toolbox#dataZoom, utill tooltip#dataZoom support \"single axis\n    // selection\" some day, which might need \"adapt to data extent on the\n    // otherAxis\", which is disabled by filterMode-'empty'.\n\n\n    var otherAxisModel = this.getOtherAxisModel();\n\n    if (dataZoomModel.get('$fromToolbox') && otherAxisModel && otherAxisModel.get('type') === 'category') {\n      filterMode = 'empty';\n    } // Process series data\n\n\n    each(seriesModels, function (seriesModel) {\n      var seriesData = seriesModel.getData();\n      var dataDims = seriesModel.coordDimToDataDim(axisDim);\n\n      if (filterMode === 'weakFilter') {\n        seriesData && seriesData.filterSelf(function (dataIndex) {\n          var leftOut;\n          var rightOut;\n          var hasValue;\n\n          for (var i = 0; i < dataDims.length; i++) {\n            var value = seriesData.get(dataDims[i], dataIndex);\n            var thisHasValue = !isNaN(value);\n            var thisLeftOut = value < valueWindow[0];\n            var thisRightOut = value > valueWindow[1];\n\n            if (thisHasValue && !thisLeftOut && !thisRightOut) {\n              return true;\n            }\n\n            thisHasValue && (hasValue = true);\n            thisLeftOut && (leftOut = true);\n            thisRightOut && (rightOut = true);\n          } // If both left out and right out, do not filter.\n\n\n          return hasValue && leftOut && rightOut;\n        });\n      } else {\n        seriesData && each(dataDims, function (dim) {\n          if (filterMode === 'empty') {\n            seriesModel.setData(seriesData.map(dim, function (value) {\n              return !isInWindow(value) ? NaN : value;\n            }));\n          } else {\n            seriesData.filterSelf(dim, isInWindow);\n          }\n        });\n      }\n    });\n\n    function isInWindow(value) {\n      return value >= valueWindow[0] && value <= valueWindow[1];\n    }\n  }\n};\n\nfunction calculateDataExtent(axisProxy, axisDim, seriesModels) {\n  var dataExtent = [Infinity, -Infinity];\n  each(seriesModels, function (seriesModel) {\n    var seriesData = seriesModel.getData();\n\n    if (seriesData) {\n      each(seriesModel.coordDimToDataDim(axisDim), function (dim) {\n        var seriesExtent = seriesData.getDataExtent(dim);\n        seriesExtent[0] < dataExtent[0] && (dataExtent[0] = seriesExtent[0]);\n        seriesExtent[1] > dataExtent[1] && (dataExtent[1] = seriesExtent[1]);\n      });\n    }\n  });\n\n  if (dataExtent[1] < dataExtent[0]) {\n    dataExtent = [NaN, NaN];\n  } // It is important to get \"consistent\" extent when more then one axes is\n  // controlled by a `dataZoom`, otherwise those axes will not be synchronized\n  // when zooming. But it is difficult to know what is \"consistent\", considering\n  // axes have different type or even different meanings (For example, two\n  // time axes are used to compare data of the same date in different years).\n  // So basically dataZoom just obtains extent by series.data (in category axis\n  // extent can be obtained from axis.data).\n  // Nevertheless, user can set min/max/scale on axes to make extent of axes\n  // consistent.\n\n\n  fixExtentByAxis(axisProxy, dataExtent);\n  return dataExtent;\n}\n\nfunction fixExtentByAxis(axisProxy, dataExtent) {\n  var axisModel = axisProxy.getAxisModel();\n  var min = axisModel.getMin(true); // For category axis, if min/max/scale are not set, extent is determined\n  // by axis.data by default.\n\n  var isCategoryAxis = axisModel.get('type') === 'category';\n  var axisDataLen = isCategoryAxis && (axisModel.get('data') || []).length;\n\n  if (min != null && min !== 'dataMin' && typeof min !== 'function') {\n    dataExtent[0] = min;\n  } else if (isCategoryAxis) {\n    dataExtent[0] = axisDataLen > 0 ? 0 : NaN;\n  }\n\n  var max = axisModel.getMax(true);\n\n  if (max != null && max !== 'dataMax' && typeof max !== 'function') {\n    dataExtent[1] = max;\n  } else if (isCategoryAxis) {\n    dataExtent[1] = axisDataLen > 0 ? axisDataLen - 1 : NaN;\n  }\n\n  if (!axisModel.get('scale', true)) {\n    dataExtent[0] > 0 && (dataExtent[0] = 0);\n    dataExtent[1] < 0 && (dataExtent[1] = 0);\n  } // For value axis, if min/max/scale are not set, we just use the extent obtained\n  // by series data, which may be a little different from the extent calculated by\n  // `axisHelper.getScaleExtent`. But the different just affects the experience a\n  // little when zooming. So it will not be fixed until some users require it strongly.\n\n\n  return dataExtent;\n}\n\nfunction setAxisModel(axisProxy, isRestore) {\n  var axisModel = axisProxy.getAxisModel();\n  var percentWindow = axisProxy._percentWindow;\n  var valueWindow = axisProxy._valueWindow;\n\n  if (!percentWindow) {\n    return;\n  } // [0, 500]: arbitrary value, guess axis extent.\n\n\n  var precision = numberUtil.getPixelPrecision(valueWindow, [0, 500]);\n  precision = Math.min(precision, 20); // isRestore or isFull\n\n  var useOrigin = isRestore || percentWindow[0] === 0 && percentWindow[1] === 100;\n  axisModel.setRange(useOrigin ? null : +valueWindow[0].toFixed(precision), useOrigin ? null : +valueWindow[1].toFixed(precision));\n}\n\nfunction setMinMaxSpan(axisProxy) {\n  var minMaxSpan = axisProxy._minMaxSpan = {};\n  var dataZoomModel = axisProxy._dataZoomModel;\n  each(['min', 'max'], function (minMax) {\n    minMaxSpan[minMax + 'Span'] = dataZoomModel.get(minMax + 'Span'); // minValueSpan and maxValueSpan has higher priority than minSpan and maxSpan\n\n    var valueSpan = dataZoomModel.get(minMax + 'ValueSpan');\n\n    if (valueSpan != null) {\n      minMaxSpan[minMax + 'ValueSpan'] = valueSpan;\n      valueSpan = axisProxy.getAxisModel().axis.scale.parse(valueSpan);\n\n      if (valueSpan != null) {\n        var dataExtent = axisProxy._dataExtent;\n        minMaxSpan[minMax + 'Span'] = numberUtil.linearMap(dataExtent[0] + valueSpan, dataExtent, [0, 100], true);\n      }\n    }\n  });\n}\n\nvar _default = AxisProxy;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/AxisProxy.js\n// module id = 1153\n// module chunks = 0 1 2","var DataZoomModel = require(\"./DataZoomModel\");\n\nvar _default = DataZoomModel.extend({\n  type: 'dataZoom.select'\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/SelectZoomModel.js\n// module id = 1154\n// module chunks = 0 1 2","var DataZoomView = require(\"./DataZoomView\");\n\nvar _default = DataZoomView.extend({\n  type: 'dataZoom.select'\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/SelectZoomView.js\n// module id = 1155\n// module chunks = 0 1 2","var echarts = require(\"../../../echarts\");\n\nvar history = require(\"../../dataZoom/history\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\nvar restoreLang = lang.toolbox.restore;\n\nfunction Restore(model) {\n  this.model = model;\n}\n\nRestore.defaultOption = {\n  show: true,\n  icon: 'M3.8,33.4 M47,18.9h9.8V8.7 M56.3,20.1 C52.1,9,40.5,0.6,26.8,2.1C12.6,3.7,1.6,16.2,2.1,30.6 M13,41.1H3.1v10.2 M3.7,39.9c4.2,11.1,15.8,19.5,29.5,18 c14.2-1.6,25.2-14.1,24.7-28.5',\n  title: restoreLang.title\n};\nvar proto = Restore.prototype;\n\nproto.onclick = function (ecModel, api, type) {\n  history.clear(ecModel);\n  api.dispatchAction({\n    type: 'restore',\n    from: this.uid\n  });\n};\n\nfeatureManager.register('restore', Restore);\necharts.registerAction({\n  type: 'restore',\n  event: 'restore',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  ecModel.resetOption('recreate');\n});\nvar _default = Restore;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox/feature/Restore.js\n// module id = 1156\n// module chunks = 0 1 2","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nfunction _default(seriesType, actionInfos) {\n  zrUtil.each(actionInfos, function (actionInfo) {\n    actionInfo.update = 'updateView';\n    /**\n     * @payload\n     * @property {string} seriesName\n     * @property {string} name\n     */\n\n    echarts.registerAction(actionInfo, function (payload, ecModel) {\n      var selected = {};\n      ecModel.eachComponent({\n        mainType: 'series',\n        subType: seriesType,\n        query: payload\n      }, function (seriesModel) {\n        if (seriesModel[actionInfo.method]) {\n          seriesModel[actionInfo.method](payload.name, payload.dataIndex);\n        }\n\n        var data = seriesModel.getData(); // Create selected map\n\n        data.each(function (idx) {\n          var name = data.getName(idx);\n          selected[name] = seriesModel.isSelected(name) || false;\n        });\n      });\n      return {\n        name: payload.name,\n        selected: selected\n      };\n    });\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/action/createDataSelectAction.js\n// module id = 1161\n// module chunks = 0 2","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"./pie/PieSeries\");\n\nrequire(\"./pie/PieView\");\n\nvar createDataSelectAction = require(\"../action/createDataSelectAction\");\n\nvar dataColor = require(\"../visual/dataColor\");\n\nvar pieLayout = require(\"./pie/pieLayout\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\ncreateDataSelectAction('pie', [{\n  type: 'pieToggleSelect',\n  event: 'pieselectchanged',\n  method: 'toggleSelected'\n}, {\n  type: 'pieSelect',\n  event: 'pieselected',\n  method: 'select'\n}, {\n  type: 'pieUnSelect',\n  event: 'pieunselected',\n  method: 'unSelect'\n}]);\necharts.registerVisual(zrUtil.curry(dataColor, 'pie'));\necharts.registerLayout(zrUtil.curry(pieLayout, 'pie'));\necharts.registerProcessor(zrUtil.curry(dataFilter, 'pie'));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/pie.js\n// module id = 1169\n// module chunks = 0 2","var echarts = require(\"../../echarts\");\n\nvar List = require(\"../../data/List\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar _number = require(\"../../util/number\");\n\nvar getPercentWithPrecision = _number.getPercentWithPrecision;\n\nvar completeDimensions = require(\"../../data/helper/completeDimensions\");\n\nvar dataSelectableMixin = require(\"../../component/helper/selectableMixin\");\n\nvar PieSeries = echarts.extendSeriesModel({\n  type: 'series.pie',\n  // Overwrite\n  init: function (option) {\n    PieSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    };\n\n    this.updateSelectedMap(option.data);\n\n    this._defaultLabelLine(option);\n  },\n  // Overwrite\n  mergeOption: function (newOption) {\n    PieSeries.superCall(this, 'mergeOption', newOption);\n    this.updateSelectedMap(this.option.data);\n  },\n  getInitialData: function (option, ecModel) {\n    var dimensions = completeDimensions(['value'], option.data);\n    var list = new List(dimensions, this);\n    list.initData(option.data);\n    return list;\n  },\n  // Overwrite\n  getDataParams: function (dataIndex) {\n    var data = this.getData();\n    var params = PieSeries.superCall(this, 'getDataParams', dataIndex); // FIXME toFixed?\n\n    var valueList = [];\n    data.each('value', function (value) {\n      valueList.push(value);\n    });\n    params.percent = getPercentWithPrecision(valueList, dataIndex, data.hostModel.get('percentPrecision'));\n    params.$vars.push('percent');\n    return params;\n  },\n  _defaultLabelLine: function (option) {\n    // Extend labelLine emphasis\n    modelUtil.defaultEmphasis(option.labelLine, ['show']);\n    var labelLineNormalOpt = option.labelLine.normal;\n    var labelLineEmphasisOpt = option.labelLine.emphasis; // Not show label line if `label.normal.show = false`\n\n    labelLineNormalOpt.show = labelLineNormalOpt.show && option.label.normal.show;\n    labelLineEmphasisOpt.show = labelLineEmphasisOpt.show && option.label.emphasis.show;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // 默认全局居中\n    center: ['50%', '50%'],\n    radius: [0, '75%'],\n    // 默认顺时针\n    clockwise: true,\n    startAngle: 90,\n    // 最小角度改为0\n    minAngle: 0,\n    // 选中时扇区偏移量\n    selectedOffset: 10,\n    // 高亮扇区偏移量\n    hoverOffset: 10,\n    // If use strategy to avoid label overlapping\n    avoidLabelOverlap: true,\n    // 选择模式，默认关闭，可选single，multiple\n    // selectedMode: false,\n    // 南丁格尔玫瑰图模式，'radius'（半径） | 'area'（面积）\n    // roseType: null,\n    percentPrecision: 2,\n    // If still show when all data zero.\n    stillShowZeroSum: true,\n    // cursor: null,\n    label: {\n      normal: {\n        // If rotate around circle\n        rotate: false,\n        show: true,\n        // 'outer', 'inside', 'center'\n        position: 'outer' // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n        // 默认使用全局文本样式，详见TEXTSTYLE\n        // distance: 当position为inner时有效，为label位置到圆心的距离与圆半径(环状图为内外半径和)的比例系数\n\n      },\n      emphasis: {}\n    },\n    // Enabled when label.normal.position is 'outer'\n    labelLine: {\n      normal: {\n        show: true,\n        // 引导线两段中的第一段长度\n        length: 15,\n        // 引导线两段中的第二段长度\n        length2: 15,\n        smooth: false,\n        lineStyle: {\n          // color: 各异,\n          width: 1,\n          type: 'solid'\n        }\n      }\n    },\n    itemStyle: {\n      normal: {\n        borderWidth: 1\n      },\n      emphasis: {}\n    },\n    // Animation type canbe expansion, scale\n    animationType: 'expansion',\n    animationEasing: 'cubicOut',\n    data: []\n  }\n});\nzrUtil.mixin(PieSeries, dataSelectableMixin);\nvar _default = PieSeries;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/pie/PieSeries.js\n// module id = 1170\n// module chunks = 0 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar ChartView = require(\"../../view/Chart\");\n\n/**\n * @param {module:echarts/model/Series} seriesModel\n * @param {boolean} hasAnimation\n * @inner\n */\nfunction updateDataSelected(uid, seriesModel, hasAnimation, api) {\n  var data = seriesModel.getData();\n  var dataIndex = this.dataIndex;\n  var name = data.getName(dataIndex);\n  var selectedOffset = seriesModel.get('selectedOffset');\n  api.dispatchAction({\n    type: 'pieToggleSelect',\n    from: uid,\n    name: name,\n    seriesId: seriesModel.id\n  });\n  data.each(function (idx) {\n    toggleItemSelected(data.getItemGraphicEl(idx), data.getItemLayout(idx), seriesModel.isSelected(data.getName(idx)), selectedOffset, hasAnimation);\n  });\n}\n/**\n * @param {module:zrender/graphic/Sector} el\n * @param {Object} layout\n * @param {boolean} isSelected\n * @param {number} selectedOffset\n * @param {boolean} hasAnimation\n * @inner\n */\n\n\nfunction toggleItemSelected(el, layout, isSelected, selectedOffset, hasAnimation) {\n  var midAngle = (layout.startAngle + layout.endAngle) / 2;\n  var dx = Math.cos(midAngle);\n  var dy = Math.sin(midAngle);\n  var offset = isSelected ? selectedOffset : 0;\n  var position = [dx * offset, dy * offset];\n  hasAnimation // animateTo will stop revious animation like update transition\n  ? el.animate().when(200, {\n    position: position\n  }).start('bounceOut') : el.attr('position', position);\n}\n/**\n * Piece of pie including Sector, Label, LabelLine\n * @constructor\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction PiePiece(data, idx) {\n  graphic.Group.call(this);\n  var sector = new graphic.Sector({\n    z2: 2\n  });\n  var polyline = new graphic.Polyline();\n  var text = new graphic.Text();\n  this.add(sector);\n  this.add(polyline);\n  this.add(text);\n  this.updateData(data, idx, true); // Hover to change label and labelLine\n\n  function onEmphasis() {\n    polyline.ignore = polyline.hoverIgnore;\n    text.ignore = text.hoverIgnore;\n  }\n\n  function onNormal() {\n    polyline.ignore = polyline.normalIgnore;\n    text.ignore = text.normalIgnore;\n  }\n\n  this.on('emphasis', onEmphasis).on('normal', onNormal).on('mouseover', onEmphasis).on('mouseout', onNormal);\n}\n\nvar piePieceProto = PiePiece.prototype;\n\npiePieceProto.updateData = function (data, idx, firstCreate) {\n  var sector = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var sectorShape = zrUtil.extend({}, layout);\n  sectorShape.label = null;\n\n  if (firstCreate) {\n    sector.setShape(sectorShape);\n    var animationType = seriesModel.getShallow('animationType');\n\n    if (animationType === 'scale') {\n      sector.shape.r = layout.r0;\n      graphic.initProps(sector, {\n        shape: {\n          r: layout.r\n        }\n      }, seriesModel, idx);\n    } // Expansion\n    else {\n        sector.shape.endAngle = layout.startAngle;\n        graphic.updateProps(sector, {\n          shape: {\n            endAngle: layout.endAngle\n          }\n        }, seriesModel, idx);\n      }\n  } else {\n    graphic.updateProps(sector, {\n      shape: sectorShape\n    }, seriesModel, idx);\n  } // Update common style\n\n\n  var itemStyleModel = itemModel.getModel('itemStyle');\n  var visualColor = data.getItemVisual(idx, 'color');\n  sector.useStyle(zrUtil.defaults({\n    lineJoin: 'bevel',\n    fill: visualColor\n  }, itemStyleModel.getModel('normal').getItemStyle()));\n  sector.hoverStyle = itemStyleModel.getModel('emphasis').getItemStyle();\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && sector.attr('cursor', cursorStyle); // Toggle selected\n\n  toggleItemSelected(this, data.getItemLayout(idx), itemModel.get('selected'), seriesModel.get('selectedOffset'), seriesModel.get('animation'));\n\n  function onEmphasis() {\n    // Sector may has animation of updating data. Force to move to the last frame\n    // Or it may stopped on the wrong shape\n    sector.stopAnimation(true);\n    sector.animateTo({\n      shape: {\n        r: layout.r + seriesModel.get('hoverOffset')\n      }\n    }, 300, 'elasticOut');\n  }\n\n  function onNormal() {\n    sector.stopAnimation(true);\n    sector.animateTo({\n      shape: {\n        r: layout.r\n      }\n    }, 300, 'elasticOut');\n  }\n\n  sector.off('mouseover').off('mouseout').off('emphasis').off('normal');\n\n  if (itemModel.get('hoverAnimation') && seriesModel.isAnimationEnabled()) {\n    sector.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n  }\n\n  this._updateLabel(data, idx);\n\n  graphic.setHoverStyle(this);\n};\n\npiePieceProto._updateLabel = function (data, idx) {\n  var labelLine = this.childAt(1);\n  var labelText = this.childAt(2);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var labelLayout = layout.label;\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.updateProps(labelLine, {\n    shape: {\n      points: labelLayout.linePoints || [[labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y]]\n    }\n  }, seriesModel, idx);\n  graphic.updateProps(labelText, {\n    style: {\n      x: labelLayout.x,\n      y: labelLayout.y\n    }\n  }, seriesModel, idx);\n  labelText.attr({\n    rotation: labelLayout.rotation,\n    origin: [labelLayout.x, labelLayout.y],\n    z2: 10\n  });\n  var labelModel = itemModel.getModel('label.normal');\n  var labelHoverModel = itemModel.getModel('label.emphasis');\n  var labelLineModel = itemModel.getModel('labelLine.normal');\n  var labelLineHoverModel = itemModel.getModel('labelLine.emphasis');\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.setLabelStyle(labelText.style, labelText.hoverStyle = {}, labelModel, labelHoverModel, {\n    labelFetcher: data.hostModel,\n    labelDataIndex: idx,\n    defaultText: data.getName(idx),\n    autoColor: visualColor,\n    useInsideStyle: !!labelLayout.inside\n  }, {\n    textAlign: labelLayout.textAlign,\n    textVerticalAlign: labelLayout.verticalAlign,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n  labelText.hoverIgnore = !labelHoverModel.get('show');\n  labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n  labelLine.hoverIgnore = !labelLineHoverModel.get('show'); // Default use item visual color\n\n  labelLine.setStyle({\n    stroke: visualColor,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n  labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n  var smooth = labelLineModel.get('smooth');\n\n  if (smooth && smooth === true) {\n    smooth = 0.4;\n  }\n\n  labelLine.setShape({\n    smooth: smooth\n  });\n};\n\nzrUtil.inherits(PiePiece, graphic.Group); // Pie view\n\nvar PieView = ChartView.extend({\n  type: 'pie',\n  init: function () {\n    var sectorGroup = new graphic.Group();\n    this._sectorGroup = sectorGroup;\n  },\n  render: function (seriesModel, ecModel, api, payload) {\n    if (payload && payload.from === this.uid) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    var hasAnimation = ecModel.get('animation');\n    var isFirstRender = !oldData;\n    var animationType = seriesModel.get('animationType');\n    var onSectorClick = zrUtil.curry(updateDataSelected, this.uid, seriesModel, hasAnimation, api);\n    var selectedMode = seriesModel.get('selectedMode');\n    data.diff(oldData).add(function (idx) {\n      var piePiece = new PiePiece(data, idx); // Default expansion animation\n\n      if (isFirstRender && animationType !== 'scale') {\n        piePiece.eachChild(function (child) {\n          child.stopAnimation(true);\n        });\n      }\n\n      selectedMode && piePiece.on('click', onSectorClick);\n      data.setItemGraphicEl(idx, piePiece);\n      group.add(piePiece);\n    }).update(function (newIdx, oldIdx) {\n      var piePiece = oldData.getItemGraphicEl(oldIdx);\n      piePiece.updateData(data, newIdx);\n      piePiece.off('click');\n      selectedMode && piePiece.on('click', onSectorClick);\n      group.add(piePiece);\n      data.setItemGraphicEl(newIdx, piePiece);\n    }).remove(function (idx) {\n      var piePiece = oldData.getItemGraphicEl(idx);\n      group.remove(piePiece);\n    }).execute();\n\n    if (hasAnimation && isFirstRender && data.count() > 0 // Default expansion animation\n    && animationType !== 'scale') {\n      var shape = data.getItemLayout(0);\n      var r = Math.max(api.getWidth(), api.getHeight()) / 2;\n      var removeClipPath = zrUtil.bind(group.removeClipPath, group);\n      group.setClipPath(this._createClipPath(shape.cx, shape.cy, r, shape.startAngle, shape.clockwise, removeClipPath, seriesModel));\n    }\n\n    this._data = data;\n  },\n  dispose: function () {},\n  _createClipPath: function (cx, cy, r, startAngle, clockwise, cb, seriesModel) {\n    var clipPath = new graphic.Sector({\n      shape: {\n        cx: cx,\n        cy: cy,\n        r0: 0,\n        r: r,\n        startAngle: startAngle,\n        endAngle: startAngle,\n        clockwise: clockwise\n      }\n    });\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: startAngle + (clockwise ? 1 : -1) * Math.PI * 2\n      }\n    }, seriesModel, cb);\n    return clipPath;\n  },\n\n  /**\n   * @implement\n   */\n  containPoint: function (point, seriesModel) {\n    var data = seriesModel.getData();\n    var itemLayout = data.getItemLayout(0);\n\n    if (itemLayout) {\n      var dx = point[0] - itemLayout.cx;\n      var dy = point[1] - itemLayout.cy;\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      return radius <= itemLayout.r && radius >= itemLayout.r0;\n    }\n  }\n});\nvar _default = PieView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/pie/PieView.js\n// module id = 1171\n// module chunks = 0 2","var _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar linearMap = _number.linearMap;\n\nvar labelLayout = require(\"./labelLayout\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar PI2 = Math.PI * 2;\nvar RADIAN = Math.PI / 180;\n\nfunction _default(seriesType, ecModel, api, payload) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var center = seriesModel.get('center');\n    var radius = seriesModel.get('radius');\n\n    if (!zrUtil.isArray(radius)) {\n      radius = [0, radius];\n    }\n\n    if (!zrUtil.isArray(center)) {\n      center = [center, center];\n    }\n\n    var width = api.getWidth();\n    var height = api.getHeight();\n    var size = Math.min(width, height);\n    var cx = parsePercent(center[0], width);\n    var cy = parsePercent(center[1], height);\n    var r0 = parsePercent(radius[0], size / 2);\n    var r = parsePercent(radius[1], size / 2);\n    var data = seriesModel.getData();\n    var startAngle = -seriesModel.get('startAngle') * RADIAN;\n    var minAngle = seriesModel.get('minAngle') * RADIAN;\n    var validDataCount = 0;\n    data.each('value', function (value) {\n      !isNaN(value) && validDataCount++;\n    });\n    var sum = data.getSum('value'); // Sum may be 0\n\n    var unitRadian = Math.PI / (sum || validDataCount) * 2;\n    var clockwise = seriesModel.get('clockwise');\n    var roseType = seriesModel.get('roseType');\n    var stillShowZeroSum = seriesModel.get('stillShowZeroSum'); // [0...max]\n\n    var extent = data.getDataExtent('value');\n    extent[0] = 0; // In the case some sector angle is smaller than minAngle\n\n    var restAngle = PI2;\n    var valueSumLargerThanMinAngle = 0;\n    var currentAngle = startAngle;\n    var dir = clockwise ? 1 : -1;\n    data.each('value', function (value, idx) {\n      var angle;\n\n      if (isNaN(value)) {\n        data.setItemLayout(idx, {\n          angle: NaN,\n          startAngle: NaN,\n          endAngle: NaN,\n          clockwise: clockwise,\n          cx: cx,\n          cy: cy,\n          r0: r0,\n          r: roseType ? NaN : r\n        });\n        return;\n      } // FIXME 兼容 2.0 但是 roseType 是 area 的时候才是这样？\n\n\n      if (roseType !== 'area') {\n        angle = sum === 0 && stillShowZeroSum ? unitRadian : value * unitRadian;\n      } else {\n        angle = PI2 / validDataCount;\n      }\n\n      if (angle < minAngle) {\n        angle = minAngle;\n        restAngle -= minAngle;\n      } else {\n        valueSumLargerThanMinAngle += value;\n      }\n\n      var endAngle = currentAngle + dir * angle;\n      data.setItemLayout(idx, {\n        angle: angle,\n        startAngle: currentAngle,\n        endAngle: endAngle,\n        clockwise: clockwise,\n        cx: cx,\n        cy: cy,\n        r0: r0,\n        r: roseType ? linearMap(value, extent, [r0, r]) : r\n      });\n      currentAngle = endAngle;\n    }, true); // Some sector is constrained by minAngle\n    // Rest sectors needs recalculate angle\n\n    if (restAngle < PI2 && validDataCount) {\n      // Average the angle if rest angle is not enough after all angles is\n      // Constrained by minAngle\n      if (restAngle <= 1e-3) {\n        var angle = PI2 / validDataCount;\n        data.each('value', function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            layout.angle = angle;\n            layout.startAngle = startAngle + dir * idx * angle;\n            layout.endAngle = startAngle + dir * (idx + 1) * angle;\n          }\n        });\n      } else {\n        unitRadian = restAngle / valueSumLargerThanMinAngle;\n        currentAngle = startAngle;\n        data.each('value', function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            var angle = layout.angle === minAngle ? minAngle : value * unitRadian;\n            layout.startAngle = currentAngle;\n            layout.endAngle = currentAngle + dir * angle;\n            currentAngle += dir * angle;\n          }\n        });\n      }\n    }\n\n    labelLayout(seriesModel, r, width, height);\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/pie/pieLayout.js\n// module id = 1172\n// module chunks = 0 2","var textContain = require(\"zrender/lib/contain/text\");\n\n// FIXME emphasis label position is not same with normal label position\nfunction adjustSingleSide(list, cx, cy, r, dir, viewWidth, viewHeight) {\n  list.sort(function (a, b) {\n    return a.y - b.y;\n  }); // 压\n\n  function shiftDown(start, end, delta, dir) {\n    for (var j = start; j < end; j++) {\n      list[j].y += delta;\n\n      if (j > start && j + 1 < end && list[j + 1].y > list[j].y + list[j].height) {\n        shiftUp(j, delta / 2);\n        return;\n      }\n    }\n\n    shiftUp(end - 1, delta / 2);\n  } // 弹\n\n\n  function shiftUp(end, delta) {\n    for (var j = end; j >= 0; j--) {\n      list[j].y -= delta;\n\n      if (j > 0 && list[j].y > list[j - 1].y + list[j - 1].height) {\n        break;\n      }\n    }\n  }\n\n  function changeX(list, isDownList, cx, cy, r, dir) {\n    var lastDeltaX = dir > 0 ? isDownList // 右侧\n    ? Number.MAX_VALUE // 下\n    : 0 // 上\n    : isDownList // 左侧\n    ? Number.MAX_VALUE // 下\n    : 0; // 上\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      // Not change x for center label\n      if (list[i].position === 'center') {\n        continue;\n      }\n\n      var deltaY = Math.abs(list[i].y - cy);\n      var length = list[i].len;\n      var length2 = list[i].len2;\n      var deltaX = deltaY < r + length ? Math.sqrt((r + length + length2) * (r + length + length2) - deltaY * deltaY) : Math.abs(list[i].x - cx);\n\n      if (isDownList && deltaX >= lastDeltaX) {\n        // 右下，左下\n        deltaX = lastDeltaX - 10;\n      }\n\n      if (!isDownList && deltaX <= lastDeltaX) {\n        // 右上，左上\n        deltaX = lastDeltaX + 10;\n      }\n\n      list[i].x = cx + deltaX * dir;\n      lastDeltaX = deltaX;\n    }\n  }\n\n  var lastY = 0;\n  var delta;\n  var len = list.length;\n  var upList = [];\n  var downList = [];\n\n  for (var i = 0; i < len; i++) {\n    delta = list[i].y - lastY;\n\n    if (delta < 0) {\n      shiftDown(i, len, -delta, dir);\n    }\n\n    lastY = list[i].y + list[i].height;\n  }\n\n  if (viewHeight - lastY < 0) {\n    shiftUp(len - 1, lastY - viewHeight);\n  }\n\n  for (var i = 0; i < len; i++) {\n    if (list[i].y >= cy) {\n      downList.push(list[i]);\n    } else {\n      upList.push(list[i]);\n    }\n  }\n\n  changeX(upList, false, cx, cy, r, dir);\n  changeX(downList, true, cx, cy, r, dir);\n}\n\nfunction avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight) {\n  var leftList = [];\n  var rightList = [];\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    if (labelLayoutList[i].x < cx) {\n      leftList.push(labelLayoutList[i]);\n    } else {\n      rightList.push(labelLayoutList[i]);\n    }\n  }\n\n  adjustSingleSide(rightList, cx, cy, r, 1, viewWidth, viewHeight);\n  adjustSingleSide(leftList, cx, cy, r, -1, viewWidth, viewHeight);\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    var linePoints = labelLayoutList[i].linePoints;\n\n    if (linePoints) {\n      var dist = linePoints[1][0] - linePoints[2][0];\n\n      if (labelLayoutList[i].x < cx) {\n        linePoints[2][0] = labelLayoutList[i].x + 3;\n      } else {\n        linePoints[2][0] = labelLayoutList[i].x - 3;\n      }\n\n      linePoints[1][1] = linePoints[2][1] = labelLayoutList[i].y;\n      linePoints[1][0] = linePoints[2][0] + dist;\n    }\n  }\n}\n\nfunction _default(seriesModel, r, viewWidth, viewHeight) {\n  var data = seriesModel.getData();\n  var labelLayoutList = [];\n  var cx;\n  var cy;\n  var hasLabelRotate = false;\n  data.each(function (idx) {\n    var layout = data.getItemLayout(idx);\n    var itemModel = data.getItemModel(idx);\n    var labelModel = itemModel.getModel('label.normal'); // Use position in normal or emphasis\n\n    var labelPosition = labelModel.get('position') || itemModel.get('label.emphasis.position');\n    var labelLineModel = itemModel.getModel('labelLine.normal');\n    var labelLineLen = labelLineModel.get('length');\n    var labelLineLen2 = labelLineModel.get('length2');\n    var midAngle = (layout.startAngle + layout.endAngle) / 2;\n    var dx = Math.cos(midAngle);\n    var dy = Math.sin(midAngle);\n    var textX;\n    var textY;\n    var linePoints;\n    var textAlign;\n    cx = layout.cx;\n    cy = layout.cy;\n    var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\n\n    if (labelPosition === 'center') {\n      textX = layout.cx;\n      textY = layout.cy;\n      textAlign = 'center';\n    } else {\n      var x1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dx : layout.r * dx) + cx;\n      var y1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dy : layout.r * dy) + cy;\n      textX = x1 + dx * 3;\n      textY = y1 + dy * 3;\n\n      if (!isLabelInside) {\n        // For roseType\n        var x2 = x1 + dx * (labelLineLen + r - layout.r);\n        var y2 = y1 + dy * (labelLineLen + r - layout.r);\n        var x3 = x2 + (dx < 0 ? -1 : 1) * labelLineLen2;\n        var y3 = y2;\n        textX = x3 + (dx < 0 ? -5 : 5);\n        textY = y3;\n        linePoints = [[x1, y1], [x2, y2], [x3, y3]];\n      }\n\n      textAlign = isLabelInside ? 'center' : dx > 0 ? 'left' : 'right';\n    }\n\n    var font = labelModel.getFont();\n    var labelRotate = labelModel.get('rotate') ? dx < 0 ? -midAngle + Math.PI : -midAngle : 0;\n    var text = seriesModel.getFormattedLabel(idx, 'normal') || data.getName(idx);\n    var textRect = textContain.getBoundingRect(text, font, textAlign, 'top');\n    hasLabelRotate = !!labelRotate;\n    layout.label = {\n      x: textX,\n      y: textY,\n      position: labelPosition,\n      height: textRect.height,\n      len: labelLineLen,\n      len2: labelLineLen2,\n      linePoints: linePoints,\n      textAlign: textAlign,\n      verticalAlign: 'middle',\n      rotation: labelRotate,\n      inside: isLabelInside\n    }; // Not layout the inside label\n\n    if (!isLabelInside) {\n      labelLayoutList.push(layout.label);\n    }\n  });\n\n  if (!hasLabelRotate && seriesModel.get('avoidLabelOverlap')) {\n    avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight);\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/pie/labelLayout.js\n// module id = 1173\n// module chunks = 0 2","import React from 'react'\nimport echarts from 'echarts/lib/echarts' //必须\nimport 'echarts/lib/component/tooltip'\nimport 'echarts/lib/component/legend'\nimport 'echarts/lib/chart/pie'\nimport 'echarts/lib/component/toolbox'\n\nexport default class PieReact extends React.Component {\n  \n  constructor(props) {\n    super(props)\n    this.initPie = this.initPie.bind(this)\n  }\n  \n  initPie() {\n    const { option={} } = this.props; //外部传入的data数据\n    let myChart = echarts.init(this.ID); //初始化echarts\n\n    //设置options\n    myChart.setOption(option)\n    window.onresize = function() {\n      myChart.resize()\n    }\n  }\n  \n  componentDidMount() {\n    this.initPie()\n  }\n  \n  componentDidUpdate() {\n    this.initPie()\n  }\n  \n  render() {\n    const { width=\"100%\", height = '300px' } = this.props\n    return <div ref={ID => this.ID = ID} style={{width, height}}></div>\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/Echarts/PieReact.js","/**\n * @module zrender/core/util\n */\n// 用于处理merge时无法遍历Date等对象的问题\nvar BUILTIN_OBJECT = {\n  '[object Function]': 1,\n  '[object RegExp]': 1,\n  '[object Date]': 1,\n  '[object Error]': 1,\n  '[object CanvasGradient]': 1,\n  '[object CanvasPattern]': 1,\n  // For node-canvas\n  '[object Image]': 1,\n  '[object Canvas]': 1\n};\nvar TYPED_ARRAY = {\n  '[object Int8Array]': 1,\n  '[object Uint8Array]': 1,\n  '[object Uint8ClampedArray]': 1,\n  '[object Int16Array]': 1,\n  '[object Uint16Array]': 1,\n  '[object Int32Array]': 1,\n  '[object Uint32Array]': 1,\n  '[object Float32Array]': 1,\n  '[object Float64Array]': 1\n};\nvar objToString = Object.prototype.toString;\nvar arrayProto = Array.prototype;\nvar nativeForEach = arrayProto.forEach;\nvar nativeFilter = arrayProto.filter;\nvar nativeSlice = arrayProto.slice;\nvar nativeMap = arrayProto.map;\nvar nativeReduce = arrayProto.reduce; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  methods[name] = fn;\n}\n/**\n * Those data types can be cloned:\n *     Plain object, Array, TypedArray, number, string, null, undefined.\n * Those data types will be assgined using the orginal data:\n *     BUILTIN_OBJECT\n * Instance of user defined class will be cloned to a plain object, without\n * properties in prototype.\n * Other data types is not supported (not sure what will happen).\n *\n * Caution: do not support clone Date, for performance consideration.\n * (There might be a large number of date in `series.data`).\n * So date should not be modified in and out of echarts.\n *\n * @param {*} source\n * @return {*} new\n */\n\n\nfunction clone(source) {\n  if (source == null || typeof source != 'object') {\n    return source;\n  }\n\n  var result = source;\n  var typeStr = objToString.call(source);\n\n  if (typeStr === '[object Array]') {\n    result = [];\n\n    for (var i = 0, len = source.length; i < len; i++) {\n      result[i] = clone(source[i]);\n    }\n  } else if (TYPED_ARRAY[typeStr]) {\n    var Ctor = source.constructor;\n\n    if (source.constructor.from) {\n      result = Ctor.from(source);\n    } else {\n      result = new Ctor(source.length);\n\n      for (var i = 0, len = source.length; i < len; i++) {\n        result[i] = clone(source[i]);\n      }\n    }\n  } else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n    result = {};\n\n    for (var key in source) {\n      if (source.hasOwnProperty(key)) {\n        result[key] = clone(source[key]);\n      }\n    }\n  }\n\n  return result;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overwrite=false]\n */\n\n\nfunction merge(target, source, overwrite) {\n  // We should escapse that source is string\n  // and enter for ... in ...\n  if (!isObject(source) || !isObject(target)) {\n    return overwrite ? clone(source) : target;\n  }\n\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      var targetProp = target[key];\n      var sourceProp = source[key];\n\n      if (isObject(sourceProp) && isObject(targetProp) && !isArray(sourceProp) && !isArray(targetProp) && !isDom(sourceProp) && !isDom(targetProp) && !isBuiltInObject(sourceProp) && !isBuiltInObject(targetProp) && !isPrimitive(sourceProp) && !isPrimitive(targetProp)) {\n        // 如果需要递归覆盖，就递归调用merge\n        merge(targetProp, sourceProp, overwrite);\n      } else if (overwrite || !(key in target)) {\n        // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n        // NOTE，在 target[key] 不存在的时候也是直接覆盖\n        target[key] = clone(source[key], true);\n      }\n    }\n  }\n\n  return target;\n}\n/**\n * @param {Array} targetAndSources The first item is target, and the rests are source.\n * @param {boolean} [overwrite=false]\n * @return {*} target\n */\n\n\nfunction mergeAll(targetAndSources, overwrite) {\n  var result = targetAndSources[0];\n\n  for (var i = 1, len = targetAndSources.length; i < len; i++) {\n    result = merge(result, targetAndSources[i], overwrite);\n  }\n\n  return result;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @memberOf module:zrender/core/util\n */\n\n\nfunction extend(target, source) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overlay=false]\n * @memberOf module:zrender/core/util\n */\n\n\nfunction defaults(target, source, overlay) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key) && (overlay ? source[key] != null : target[key] == null)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar createCanvas = function () {\n  return methods.createCanvas();\n};\n\nmethods.createCanvas = function () {\n  return document.createElement('canvas');\n}; // FIXME\n\n\nvar _ctx;\n\nfunction getContext() {\n  if (!_ctx) {\n    // Use util.createCanvas instead of createCanvas\n    // because createCanvas may be overwritten in different environment\n    _ctx = createCanvas().getContext('2d');\n  }\n\n  return _ctx;\n}\n/**\n * 查询数组中元素的index\n * @memberOf module:zrender/core/util\n */\n\n\nfunction indexOf(array, value) {\n  if (array) {\n    if (array.indexOf) {\n      return array.indexOf(value);\n    }\n\n    for (var i = 0, len = array.length; i < len; i++) {\n      if (array[i] === value) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n}\n/**\n * 构造类继承关系\n *\n * @memberOf module:zrender/core/util\n * @param {Function} clazz 源类\n * @param {Function} baseClazz 基类\n */\n\n\nfunction inherits(clazz, baseClazz) {\n  var clazzPrototype = clazz.prototype;\n\n  function F() {}\n\n  F.prototype = baseClazz.prototype;\n  clazz.prototype = new F();\n\n  for (var prop in clazzPrototype) {\n    clazz.prototype[prop] = clazzPrototype[prop];\n  }\n\n  clazz.prototype.constructor = clazz;\n  clazz.superClass = baseClazz;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Object|Function} target\n * @param {Object|Function} sorce\n * @param {boolean} overlay\n */\n\n\nfunction mixin(target, source, overlay) {\n  target = 'prototype' in target ? target.prototype : target;\n  source = 'prototype' in source ? source.prototype : source;\n  defaults(target, source, overlay);\n}\n/**\n * Consider typed array.\n * @param {Array|TypedArray} data\n */\n\n\nfunction isArrayLike(data) {\n  if (!data) {\n    return;\n  }\n\n  if (typeof data == 'string') {\n    return false;\n  }\n\n  return typeof data.length == 'number';\n}\n/**\n * 数组或对象遍历\n * @memberOf module:zrender/core/util\n * @param {Object|Array} obj\n * @param {Function} cb\n * @param {*} [context]\n */\n\n\nfunction each(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.forEach && obj.forEach === nativeForEach) {\n    obj.forEach(cb, context);\n  } else if (obj.length === +obj.length) {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      cb.call(context, obj[i], i, obj);\n    }\n  } else {\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        cb.call(context, obj[key], key, obj);\n      }\n    }\n  }\n}\n/**\n * 数组映射\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction map(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.map && obj.map === nativeMap) {\n    return obj.map(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      result.push(cb.call(context, obj[i], i, obj));\n    }\n\n    return result;\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {Object} [memo]\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction reduce(obj, cb, memo, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.reduce && obj.reduce === nativeReduce) {\n    return obj.reduce(cb, memo, context);\n  } else {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      memo = cb.call(context, memo, obj[i], i, obj);\n    }\n\n    return memo;\n  }\n}\n/**\n * 数组过滤\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction filter(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.filter && obj.filter === nativeFilter) {\n    return obj.filter(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      if (cb.call(context, obj[i], i, obj)) {\n        result.push(obj[i]);\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * 数组项查找\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {*}\n */\n\n\nfunction find(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  for (var i = 0, len = obj.length; i < len; i++) {\n    if (cb.call(context, obj[i], i, obj)) {\n      return obj[i];\n    }\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @param {*} context\n * @return {Function}\n */\n\n\nfunction bind(func, context) {\n  var args = nativeSlice.call(arguments, 2);\n  return function () {\n    return func.apply(context, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @return {Function}\n */\n\n\nfunction curry(func) {\n  var args = nativeSlice.call(arguments, 1);\n  return function () {\n    return func.apply(this, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isArray(value) {\n  return objToString.call(value) === '[object Array]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isString(value) {\n  return objToString.call(value) === '[object String]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return type === 'function' || !!value && type == 'object';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isBuiltInObject(value) {\n  return !!BUILTIN_OBJECT[objToString.call(value)];\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isDom(value) {\n  return typeof value === 'object' && typeof value.nodeType === 'number' && typeof value.ownerDocument === 'object';\n}\n/**\n * Whether is exactly NaN. Notice isNaN('a') returns true.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction eqNaN(value) {\n  return value !== value;\n}\n/**\n * If value1 is not null, then return value1, otherwise judget rest of values.\n * Low performance.\n * @memberOf module:zrender/core/util\n * @return {*} Final value\n */\n\n\nfunction retrieve(values) {\n  for (var i = 0, len = arguments.length; i < len; i++) {\n    if (arguments[i] != null) {\n      return arguments[i];\n    }\n  }\n}\n\nfunction retrieve2(value0, value1) {\n  return value0 != null ? value0 : value1;\n}\n\nfunction retrieve3(value0, value1, value2) {\n  return value0 != null ? value0 : value1 != null ? value1 : value2;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} arr\n * @param {number} startIndex\n * @param {number} endIndex\n * @return {Array}\n */\n\n\nfunction slice() {\n  return Function.call.apply(nativeSlice, arguments);\n}\n/**\n * Normalize css liked array configuration\n * e.g.\n *  3 => [3, 3, 3, 3]\n *  [4, 2] => [4, 2, 4, 2]\n *  [4, 3, 2] => [4, 3, 2, 3]\n * @param {number|Array.<number>} val\n * @return {Array.<number>}\n */\n\n\nfunction normalizeCssArray(val) {\n  if (typeof val === 'number') {\n    return [val, val, val, val];\n  }\n\n  var len = val.length;\n\n  if (len === 2) {\n    // vertical | horizontal\n    return [val[0], val[1], val[0], val[1]];\n  } else if (len === 3) {\n    // top | horizontal | bottom\n    return [val[0], val[1], val[2], val[1]];\n  }\n\n  return val;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {boolean} condition\n * @param {string} message\n */\n\n\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error(message);\n  }\n}\n\nvar primitiveKey = '__ec_primitive__';\n/**\n * Set an object as primitive to be ignored traversing children in clone or merge\n */\n\nfunction setAsPrimitive(obj) {\n  obj[primitiveKey] = true;\n}\n\nfunction isPrimitive(obj) {\n  return obj[primitiveKey];\n}\n/**\n * @constructor\n * @param {Object} obj Only apply `ownProperty`.\n */\n\n\nfunction HashMap(obj) {\n  obj && each(obj, function (value, key) {\n    this.set(key, value);\n  }, this);\n} // Add prefix to avoid conflict with Object.prototype.\n\n\nvar HASH_MAP_PREFIX = '_ec_';\nvar HASH_MAP_PREFIX_LENGTH = 4;\nHashMap.prototype = {\n  constructor: HashMap,\n  // Do not provide `has` method to avoid defining what is `has`.\n  // (We usually treat `null` and `undefined` as the same, different\n  // from ES6 Map).\n  get: function (key) {\n    return this[HASH_MAP_PREFIX + key];\n  },\n  set: function (key, value) {\n    this[HASH_MAP_PREFIX + key] = value; // Comparing with invocation chaining, `return value` is more commonly\n    // used in this case: `var someVal = map.set('a', genVal());`\n\n    return value;\n  },\n  // Although util.each can be performed on this hashMap directly, user\n  // should not use the exposed keys, who are prefixed.\n  each: function (cb, context) {\n    context !== void 0 && (cb = bind(cb, context));\n\n    for (var prefixedKey in this) {\n      this.hasOwnProperty(prefixedKey) && cb(this[prefixedKey], prefixedKey.slice(HASH_MAP_PREFIX_LENGTH));\n    }\n  },\n  // Do not use this method if performance sensitive.\n  removeKey: function (key) {\n    delete this[HASH_MAP_PREFIX + key];\n  }\n};\n\nfunction createHashMap(obj) {\n  return new HashMap(obj);\n}\n\nfunction noop() {}\n\nexports.$override = $override;\nexports.clone = clone;\nexports.merge = merge;\nexports.mergeAll = mergeAll;\nexports.extend = extend;\nexports.defaults = defaults;\nexports.createCanvas = createCanvas;\nexports.getContext = getContext;\nexports.indexOf = indexOf;\nexports.inherits = inherits;\nexports.mixin = mixin;\nexports.isArrayLike = isArrayLike;\nexports.each = each;\nexports.map = map;\nexports.reduce = reduce;\nexports.filter = filter;\nexports.find = find;\nexports.bind = bind;\nexports.curry = curry;\nexports.isArray = isArray;\nexports.isFunction = isFunction;\nexports.isString = isString;\nexports.isObject = isObject;\nexports.isBuiltInObject = isBuiltInObject;\nexports.isDom = isDom;\nexports.eqNaN = eqNaN;\nexports.retrieve = retrieve;\nexports.retrieve2 = retrieve2;\nexports.retrieve3 = retrieve3;\nexports.slice = slice;\nexports.normalizeCssArray = normalizeCssArray;\nexports.assert = assert;\nexports.setAsPrimitive = setAsPrimitive;\nexports.isPrimitive = isPrimitive;\nexports.createHashMap = createHashMap;\nexports.noop = noop;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/util.js\n// module id = 978\n// module chunks = 0 1 2","var _config = require(\"./config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrender = require(\"zrender/lib/zrender\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar timsort = require(\"zrender/lib/core/timsort\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar GlobalModel = require(\"./model/Global\");\n\nvar ExtensionAPI = require(\"./ExtensionAPI\");\n\nvar CoordinateSystemManager = require(\"./CoordinateSystem\");\n\nvar OptionManager = require(\"./model/OptionManager\");\n\nvar backwardCompat = require(\"./preprocessor/backwardCompat\");\n\nvar ComponentModel = require(\"./model/Component\");\n\nvar SeriesModel = require(\"./model/Series\");\n\nvar ComponentView = require(\"./view/Component\");\n\nvar ChartView = require(\"./view/Chart\");\n\nvar graphic = require(\"./util/graphic\");\n\nvar modelUtil = require(\"./util/model\");\n\nvar _throttle = require(\"./util/throttle\");\n\nvar throttle = _throttle.throttle;\n\nvar seriesColor = require(\"./visual/seriesColor\");\n\nvar loadingDefault = require(\"./loading/default\");\n\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\nvar each = zrUtil.each;\nvar parseClassType = ComponentModel.parseClassType;\nvar version = '3.8.5';\nvar dependencies = {\n  zrender: '3.7.4'\n};\nvar PRIORITY_PROCESSOR_FILTER = 1000;\nvar PRIORITY_PROCESSOR_STATISTIC = 5000;\nvar PRIORITY_VISUAL_LAYOUT = 1000;\nvar PRIORITY_VISUAL_GLOBAL = 2000;\nvar PRIORITY_VISUAL_CHART = 3000;\nvar PRIORITY_VISUAL_COMPONENT = 4000; // FIXME\n// necessary?\n\nvar PRIORITY_VISUAL_BRUSH = 5000;\nvar PRIORITY = {\n  PROCESSOR: {\n    FILTER: PRIORITY_PROCESSOR_FILTER,\n    STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n  },\n  VISUAL: {\n    LAYOUT: PRIORITY_VISUAL_LAYOUT,\n    GLOBAL: PRIORITY_VISUAL_GLOBAL,\n    CHART: PRIORITY_VISUAL_CHART,\n    COMPONENT: PRIORITY_VISUAL_COMPONENT,\n    BRUSH: PRIORITY_VISUAL_BRUSH\n  }\n}; // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n// where they must not be invoked nestedly, except the only case: invoke\n// dispatchAction with updateMethod \"none\" in main process.\n// This flag is used to carry out this rule.\n// All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n\nvar IN_MAIN_PROCESS = '__flagInMainProcess';\nvar HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\nvar OPTION_UPDATED = '__optionUpdated';\nvar ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\nfunction createRegisterEventWithLowercaseName(method) {\n  return function (eventName, handler, context) {\n    // Event name is all lowercase\n    eventName = eventName && eventName.toLowerCase();\n    Eventful.prototype[method].call(this, eventName, handler, context);\n  };\n}\n/**\n * @module echarts~MessageCenter\n */\n\n\nfunction MessageCenter() {\n  Eventful.call(this);\n}\n\nMessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\nMessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\nMessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\nzrUtil.mixin(MessageCenter, Eventful);\n/**\n * @module echarts~ECharts\n */\n\nfunction ECharts(dom, theme, opts) {\n  opts = opts || {}; // Get theme by name\n\n  if (typeof theme === 'string') {\n    theme = themeStorage[theme];\n  }\n  /**\n   * @type {string}\n   */\n\n\n  this.id;\n  /**\n   * Group id\n   * @type {string}\n   */\n\n  this.group;\n  /**\n   * @type {HTMLElement}\n   * @private\n   */\n\n  this._dom = dom;\n  var defaultRenderer = 'canvas';\n\n  /**\n   * @type {module:zrender/ZRender}\n   * @private\n   */\n  var zr = this._zr = zrender.init(dom, {\n    renderer: opts.renderer || defaultRenderer,\n    devicePixelRatio: opts.devicePixelRatio,\n    width: opts.width,\n    height: opts.height\n  });\n  /**\n   * Expect 60 pfs.\n   * @type {Function}\n   * @private\n   */\n\n  this._throttledZrFlush = throttle(zrUtil.bind(zr.flush, zr), 17);\n  var theme = zrUtil.clone(theme);\n  theme && backwardCompat(theme, true);\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._theme = theme;\n  /**\n   * @type {Array.<module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsMap = {};\n  /**\n   * @type {Array.<module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsMap = {};\n  /**\n   * @type {module:echarts/CoordinateSystem}\n   * @private\n   */\n\n  this._coordSysMgr = new CoordinateSystemManager();\n  /**\n   * @type {module:echarts/ExtensionAPI}\n   * @private\n   */\n\n  this._api = createExtensionAPI(this);\n  Eventful.call(this);\n  /**\n   * @type {module:echarts~MessageCenter}\n   * @private\n   */\n\n  this._messageCenter = new MessageCenter(); // Init mouse events\n\n  this._initEvents(); // In case some people write `window.onresize = chart.resize`\n\n\n  this.resize = zrUtil.bind(this.resize, this); // Can't dispatch action during rendering procedure\n\n  this._pendingActions = []; // Sort on demand\n\n  function prioritySortFunc(a, b) {\n    return a.prio - b.prio;\n  }\n\n  timsort(visualFuncs, prioritySortFunc);\n  timsort(dataProcessorFuncs, prioritySortFunc);\n  zr.animation.on('frame', this._onframe, this); // ECharts instance can be used as value.\n\n  zrUtil.setAsPrimitive(this);\n}\n\nvar echartsProto = ECharts.prototype;\n\nechartsProto._onframe = function () {\n  // Lazy update\n  if (this[OPTION_UPDATED]) {\n    var silent = this[OPTION_UPDATED].silent;\n    this[IN_MAIN_PROCESS] = true;\n    updateMethods.prepareAndUpdate.call(this);\n    this[IN_MAIN_PROCESS] = false;\n    this[OPTION_UPDATED] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @return {HTMLElement}\n */\n\n\nechartsProto.getDom = function () {\n  return this._dom;\n};\n/**\n * @return {module:zrender~ZRender}\n */\n\n\nechartsProto.getZr = function () {\n  return this._zr;\n};\n/**\n * Usage:\n * chart.setOption(option, notMerge, lazyUpdate);\n * chart.setOption(option, {\n *     notMerge: ...,\n *     lazyUpdate: ...,\n *     silent: ...\n * });\n *\n * @param {Object} option\n * @param {Object|boolean} [opts] opts or notMerge.\n * @param {boolean} [opts.notMerge=false]\n * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n */\n\n\nechartsProto.setOption = function (option, notMerge, lazyUpdate) {\n  var silent;\n\n  if (zrUtil.isObject(notMerge)) {\n    lazyUpdate = notMerge.lazyUpdate;\n    silent = notMerge.silent;\n    notMerge = notMerge.notMerge;\n  }\n\n  this[IN_MAIN_PROCESS] = true;\n\n  if (!this._model || notMerge) {\n    var optionManager = new OptionManager(this._api);\n    var theme = this._theme;\n    var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n    ecModel.init(null, null, theme, optionManager);\n  }\n\n  this._model.setOption(option, optionPreprocessorFuncs);\n\n  if (lazyUpdate) {\n    this[OPTION_UPDATED] = {\n      silent: silent\n    };\n    this[IN_MAIN_PROCESS] = false;\n  } else {\n    updateMethods.prepareAndUpdate.call(this); // Ensure zr refresh sychronously, and then pixel in canvas can be\n    // fetched after `setOption`.\n\n    this._zr.flush();\n\n    this[OPTION_UPDATED] = false;\n    this[IN_MAIN_PROCESS] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @DEPRECATED\n */\n\n\nechartsProto.setTheme = function () {\n  console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n};\n/**\n * @return {module:echarts/model/Global}\n */\n\n\nechartsProto.getModel = function () {\n  return this._model;\n};\n/**\n * @return {Object}\n */\n\n\nechartsProto.getOption = function () {\n  return this._model && this._model.getOption();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getWidth = function () {\n  return this._zr.getWidth();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getHeight = function () {\n  return this._zr.getHeight();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getDevicePixelRatio = function () {\n  return this._zr.painter.dpr || window.devicePixelRatio || 1;\n};\n/**\n * Get canvas which has all thing rendered\n * @param {Object} opts\n * @param {string} [opts.backgroundColor]\n * @return {string}\n */\n\n\nechartsProto.getRenderedCanvas = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  opts = opts || {};\n  opts.pixelRatio = opts.pixelRatio || 1;\n  opts.backgroundColor = opts.backgroundColor || this._model.get('backgroundColor');\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.getRenderedCanvas(opts);\n};\n/**\n * Get svg data url\n * @return {string}\n */\n\n\nechartsProto.getSvgDataUrl = function () {\n  if (!env.svgSupported) {\n    return;\n  }\n\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.pathToSvg();\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n * @param {string} [opts.excludeComponents]\n */\n\n\nechartsProto.getDataURL = function (opts) {\n  opts = opts || {};\n  var excludeComponents = opts.excludeComponents;\n  var ecModel = this._model;\n  var excludesComponentViews = [];\n  var self = this;\n  each(excludeComponents, function (componentType) {\n    ecModel.eachComponent({\n      mainType: componentType\n    }, function (component) {\n      var view = self._componentsMap[component.__viewId];\n\n      if (!view.group.ignore) {\n        excludesComponentViews.push(view);\n        view.group.ignore = true;\n      }\n    });\n  });\n  var url = this._zr.painter.getType() === 'svg' ? this.getSvgDataUrl() : this.getRenderedCanvas(opts).toDataURL('image/' + (opts && opts.type || 'png'));\n  each(excludesComponentViews, function (view) {\n    view.group.ignore = false;\n  });\n  return url;\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n */\n\n\nechartsProto.getConnectedDataURL = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  var groupId = this.group;\n  var mathMin = Math.min;\n  var mathMax = Math.max;\n  var MAX_NUMBER = Infinity;\n\n  if (connectedGroups[groupId]) {\n    var left = MAX_NUMBER;\n    var top = MAX_NUMBER;\n    var right = -MAX_NUMBER;\n    var bottom = -MAX_NUMBER;\n    var canvasList = [];\n    var dpr = opts && opts.pixelRatio || 1;\n    zrUtil.each(instances, function (chart, id) {\n      if (chart.group === groupId) {\n        var canvas = chart.getRenderedCanvas(zrUtil.clone(opts));\n        var boundingRect = chart.getDom().getBoundingClientRect();\n        left = mathMin(boundingRect.left, left);\n        top = mathMin(boundingRect.top, top);\n        right = mathMax(boundingRect.right, right);\n        bottom = mathMax(boundingRect.bottom, bottom);\n        canvasList.push({\n          dom: canvas,\n          left: boundingRect.left,\n          top: boundingRect.top\n        });\n      }\n    });\n    left *= dpr;\n    top *= dpr;\n    right *= dpr;\n    bottom *= dpr;\n    var width = right - left;\n    var height = bottom - top;\n    var targetCanvas = zrUtil.createCanvas();\n    targetCanvas.width = width;\n    targetCanvas.height = height;\n    var zr = zrender.init(targetCanvas);\n    each(canvasList, function (item) {\n      var img = new graphic.Image({\n        style: {\n          x: item.left * dpr - left,\n          y: item.top * dpr - top,\n          image: item.dom\n        }\n      });\n      zr.add(img);\n    });\n    zr.refreshImmediately();\n    return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n  } else {\n    return this.getDataURL(opts);\n  }\n};\n/**\n * Convert from logical coordinate system to pixel coordinate system.\n * See CoordinateSystem#convertToPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId, geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\n\nechartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n/**\n * Convert from pixel coordinate system to logical coordinate system.\n * See CoordinateSystem#convertFromPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\nechartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\nfunction doConvertPixel(methodName, finder, value) {\n  var ecModel = this._model;\n\n  var coordSysList = this._coordSysMgr.getCoordinateSystems();\n\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n\n  for (var i = 0; i < coordSysList.length; i++) {\n    var coordSys = coordSysList[i];\n\n    if (coordSys[methodName] && (result = coordSys[methodName](ecModel, finder, value)) != null) {\n      return result;\n    }\n  }\n}\n/**\n * Is the specified coordinate systems or components contain the given pixel point.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {boolean} result\n */\n\n\nechartsProto.containPixel = function (finder, value) {\n  var ecModel = this._model;\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n  zrUtil.each(finder, function (models, key) {\n    key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n      var coordSys = model.coordinateSystem;\n\n      if (coordSys && coordSys.containPoint) {\n        result |= !!coordSys.containPoint(value);\n      } else if (key === 'seriesModels') {\n        var view = this._chartsMap[model.__viewId];\n\n        if (view && view.containPoint) {\n          result |= view.containPoint(value, model);\n        } else {}\n      } else {}\n    }, this);\n  }, this);\n  return !!result;\n};\n/**\n * Get visual from series or data.\n * @param {string|Object} finder\n *        If string, e.g., 'series', means {seriesIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            dataIndex / dataIndexInside\n *        }\n *        If dataIndex is not specified, series visual will be fetched,\n *        but not data item visual.\n *        If all of seriesIndex, seriesId, seriesName are not specified,\n *        visual will be fetched from first series.\n * @param {string} visualType 'color', 'symbol', 'symbolSize'\n */\n\n\nechartsProto.getVisual = function (finder, visualType) {\n  var ecModel = this._model;\n  finder = modelUtil.parseFinder(ecModel, finder, {\n    defaultMainType: 'series'\n  });\n  var seriesModel = finder.seriesModel;\n  var data = seriesModel.getData();\n  var dataIndexInside = finder.hasOwnProperty('dataIndexInside') ? finder.dataIndexInside : finder.hasOwnProperty('dataIndex') ? data.indexOfRawIndex(finder.dataIndex) : null;\n  return dataIndexInside != null ? data.getItemVisual(dataIndexInside, visualType) : data.getVisual(visualType);\n};\n/**\n * Get view of corresponding component model\n * @param  {module:echarts/model/Component} componentModel\n * @return {module:echarts/view/Component}\n */\n\n\nechartsProto.getViewOfComponentModel = function (componentModel) {\n  return this._componentsMap[componentModel.__viewId];\n};\n/**\n * Get view of corresponding series model\n * @param  {module:echarts/model/Series} seriesModel\n * @return {module:echarts/view/Chart}\n */\n\n\nechartsProto.getViewOfSeriesModel = function (seriesModel) {\n  return this._chartsMap[seriesModel.__viewId];\n};\n\nvar updateMethods = {\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  update: function (payload) {\n    // console.profile && console.profile('update');\n    var ecModel = this._model;\n    var api = this._api;\n    var coordSysMgr = this._coordSysMgr;\n    var zr = this._zr; // update before setOption\n\n    if (!ecModel) {\n      return;\n    } // Fixme First time update ?\n\n\n    ecModel.restoreData(); // TODO\n    // Save total ecModel here for undo/redo (after restoring data and before processing data).\n    // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n    // Create new coordinate system each update\n    // In LineView may save the old coordinate system and use it to get the orignal point\n\n    coordSysMgr.create(this._model, this._api);\n    processData.call(this, ecModel, api);\n    stackSeriesData.call(this, ecModel);\n    coordSysMgr.update(ecModel, api);\n    doVisualEncoding.call(this, ecModel, payload);\n    doRender.call(this, ecModel, payload); // Set background\n\n    var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n    var painter = zr.painter; // TODO all use clearColor ?\n\n    if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n      zr.configLayer(0, {\n        clearColor: backgroundColor\n      });\n    } else {\n      // In IE8\n      if (!env.canvasSupported) {\n        var colorArr = colorTool.parse(backgroundColor);\n        backgroundColor = colorTool.stringify(colorArr, 'rgb');\n\n        if (colorArr[3] === 0) {\n          backgroundColor = 'transparent';\n        }\n      }\n\n      if (backgroundColor.colorStops || backgroundColor.image) {\n        // Gradient background\n        // FIXME Fixed layer？\n        zr.configLayer(0, {\n          clearColor: backgroundColor\n        });\n        this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n        this._dom.style.background = 'transparent';\n      } else {\n        if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n          zr.configLayer(0, {\n            clearColor: null\n          });\n        }\n\n        this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n        this._dom.style.background = backgroundColor;\n      }\n    }\n\n    each(postUpdateFuncs, function (func) {\n      func(ecModel, api);\n    }); // console.profile && console.profileEnd('update');\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateView: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ecModel.eachSeries(function (seriesModel) {\n      seriesModel.getData().clearAllVisual();\n    });\n    doVisualEncoding.call(this, ecModel, payload);\n    invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateVisual: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ecModel.eachSeries(function (seriesModel) {\n      seriesModel.getData().clearAllVisual();\n    });\n    doVisualEncoding.call(this, ecModel, payload, true);\n    invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateLayout: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    doLayout.call(this, ecModel, payload);\n    invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  prepareAndUpdate: function (payload) {\n    var ecModel = this._model;\n    prepareView.call(this, 'component', ecModel);\n    prepareView.call(this, 'chart', ecModel);\n    updateMethods.update.call(this, payload);\n  }\n};\n/**\n * @private\n */\n\nfunction updateDirectly(ecIns, method, payload, mainType, subType) {\n  var ecModel = ecIns._model; // broadcast\n\n  if (!mainType) {\n    each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n    return;\n  }\n\n  var query = {};\n  query[mainType + 'Id'] = payload[mainType + 'Id'];\n  query[mainType + 'Index'] = payload[mainType + 'Index'];\n  query[mainType + 'Name'] = payload[mainType + 'Name'];\n  var condition = {\n    mainType: mainType,\n    query: query\n  };\n  subType && (condition.subType = subType); // subType may be '' by parseClassType;\n  // If dispatchAction before setOption, do nothing.\n\n  ecModel && ecModel.eachComponent(condition, function (model, index) {\n    callView(ecIns[mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId]);\n  }, ecIns);\n\n  function callView(view) {\n    view && view.__alive && view[method] && view[method](view.__model, ecModel, ecIns._api, payload);\n  }\n}\n/**\n * Resize the chart\n * @param {Object} opts\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n * @param {boolean} [opts.silent=false]\n */\n\n\nechartsProto.resize = function (opts) {\n  this[IN_MAIN_PROCESS] = true;\n\n  this._zr.resize(opts);\n\n  var optionChanged = this._model && this._model.resetOption('media');\n\n  var updateMethod = optionChanged ? 'prepareAndUpdate' : 'update';\n  updateMethods[updateMethod].call(this); // Resize loading effect\n\n  this._loadingFX && this._loadingFX.resize();\n  this[IN_MAIN_PROCESS] = false;\n  var silent = opts && opts.silent;\n  flushPendingActions.call(this, silent);\n  triggerUpdatedEvent.call(this, silent);\n};\n/**\n * Show loading effect\n * @param  {string} [name='default']\n * @param  {Object} [cfg]\n */\n\n\nechartsProto.showLoading = function (name, cfg) {\n  if (zrUtil.isObject(name)) {\n    cfg = name;\n    name = '';\n  }\n\n  name = name || 'default';\n  this.hideLoading();\n\n  if (!loadingEffects[name]) {\n    return;\n  }\n\n  var el = loadingEffects[name](this._api, cfg);\n  var zr = this._zr;\n  this._loadingFX = el;\n  zr.add(el);\n};\n/**\n * Hide loading effect\n */\n\n\nechartsProto.hideLoading = function () {\n  this._loadingFX && this._zr.remove(this._loadingFX);\n  this._loadingFX = null;\n};\n/**\n * @param {Object} eventObj\n * @return {Object}\n */\n\n\nechartsProto.makeActionFromEvent = function (eventObj) {\n  var payload = zrUtil.extend({}, eventObj);\n  payload.type = eventActionMap[eventObj.type];\n  return payload;\n};\n/**\n * @pubilc\n * @param {Object} payload\n * @param {string} [payload.type] Action type\n * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n * @param {boolean} [opt.silent=false] Whether trigger events.\n * @param {boolean} [opt.flush=undefined]\n *                  true: Flush immediately, and then pixel in canvas can be fetched\n *                      immediately. Caution: it might affect performance.\n *                  false: Not not flush.\n *                  undefined: Auto decide whether perform flush.\n */\n\n\nechartsProto.dispatchAction = function (payload, opt) {\n  if (!zrUtil.isObject(opt)) {\n    opt = {\n      silent: !!opt\n    };\n  }\n\n  if (!actions[payload.type]) {\n    return;\n  } // Avoid dispatch action before setOption. Especially in `connect`.\n\n\n  if (!this._model) {\n    return;\n  } // May dispatchAction in rendering procedure\n\n\n  if (this[IN_MAIN_PROCESS]) {\n    this._pendingActions.push(payload);\n\n    return;\n  }\n\n  doDispatchAction.call(this, payload, opt.silent);\n\n  if (opt.flush) {\n    this._zr.flush(true);\n  } else if (opt.flush !== false && env.browser.weChat) {\n    // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n    // hang when sliding page (on touch event), which cause that zr does not\n    // refresh util user interaction finished, which is not expected.\n    // But `dispatchAction` may be called too frequently when pan on touch\n    // screen, which impacts performance if do not throttle them.\n    this._throttledZrFlush();\n  }\n\n  flushPendingActions.call(this, opt.silent);\n  triggerUpdatedEvent.call(this, opt.silent);\n};\n\nfunction doDispatchAction(payload, silent) {\n  var payloadType = payload.type;\n  var escapeConnect = payload.escapeConnect;\n  var actionWrap = actions[payloadType];\n  var actionInfo = actionWrap.actionInfo;\n  var cptType = (actionInfo.update || 'update').split(':');\n  var updateMethod = cptType.pop();\n  cptType = cptType[0] != null && parseClassType(cptType[0]);\n  this[IN_MAIN_PROCESS] = true;\n  var payloads = [payload];\n  var batched = false; // Batch action\n\n  if (payload.batch) {\n    batched = true;\n    payloads = zrUtil.map(payload.batch, function (item) {\n      item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n      item.batch = null;\n      return item;\n    });\n  }\n\n  var eventObjBatch = [];\n  var eventObj;\n  var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n  each(payloads, function (batchItem) {\n    // Action can specify the event by return it.\n    eventObj = actionWrap.action(batchItem, this._model, this._api); // Emit event outside\n\n    eventObj = eventObj || zrUtil.extend({}, batchItem); // Convert type to eventType\n\n    eventObj.type = actionInfo.event || eventObj.type;\n    eventObjBatch.push(eventObj); // light update does not perform data process, layout and visual.\n\n    if (isHighDown) {\n      // method, payload, mainType, subType\n      updateDirectly(this, updateMethod, batchItem, 'series');\n    } else if (cptType) {\n      updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n    }\n  }, this);\n\n  if (updateMethod !== 'none' && !isHighDown && !cptType) {\n    // Still dirty\n    if (this[OPTION_UPDATED]) {\n      // FIXME Pass payload ?\n      updateMethods.prepareAndUpdate.call(this, payload);\n      this[OPTION_UPDATED] = false;\n    } else {\n      updateMethods[updateMethod].call(this, payload);\n    }\n  } // Follow the rule of action batch\n\n\n  if (batched) {\n    eventObj = {\n      type: actionInfo.event || payloadType,\n      escapeConnect: escapeConnect,\n      batch: eventObjBatch\n    };\n  } else {\n    eventObj = eventObjBatch[0];\n  }\n\n  this[IN_MAIN_PROCESS] = false;\n  !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n}\n\nfunction flushPendingActions(silent) {\n  var pendingActions = this._pendingActions;\n\n  while (pendingActions.length) {\n    var payload = pendingActions.shift();\n    doDispatchAction.call(this, payload, silent);\n  }\n}\n\nfunction triggerUpdatedEvent(silent) {\n  !silent && this.trigger('updated');\n}\n/**\n * Register event\n * @method\n */\n\n\nechartsProto.on = createRegisterEventWithLowercaseName('on');\nechartsProto.off = createRegisterEventWithLowercaseName('off');\nechartsProto.one = createRegisterEventWithLowercaseName('one');\n/**\n * @param {string} methodName\n * @private\n */\n\nfunction invokeUpdateMethod(methodName, ecModel, payload) {\n  var api = this._api; // Update all components\n\n  each(this._componentsViews, function (component) {\n    var componentModel = component.__model;\n    component[methodName](componentModel, ecModel, api, payload);\n    updateZ(componentModel, component);\n  }, this); // Upate all charts\n\n  ecModel.eachSeries(function (seriesModel, idx) {\n    var chart = this._chartsMap[seriesModel.__viewId];\n    chart[methodName](seriesModel, ecModel, api, payload);\n    updateZ(seriesModel, chart);\n    updateProgressiveAndBlend(seriesModel, chart);\n  }, this); // If use hover layer\n\n  updateHoverLayerStatus(this._zr, ecModel); // Post render\n\n  each(postUpdateFuncs, function (func) {\n    func(ecModel, api);\n  });\n}\n/**\n * Prepare view instances of charts and components\n * @param  {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction prepareView(type, ecModel) {\n  var isComponent = type === 'component';\n  var viewList = isComponent ? this._componentsViews : this._chartsViews;\n  var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n  var zr = this._zr;\n\n  for (var i = 0; i < viewList.length; i++) {\n    viewList[i].__alive = false;\n  }\n\n  ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n    if (isComponent) {\n      if (componentType === 'series') {\n        return;\n      }\n    } else {\n      model = componentType;\n    } // Consider: id same and type changed.\n\n\n    var viewId = '_ec_' + model.id + '_' + model.type;\n    var view = viewMap[viewId];\n\n    if (!view) {\n      var classType = parseClassType(model.type);\n      var Clazz = isComponent ? ComponentView.getClass(classType.main, classType.sub) : ChartView.getClass(classType.sub);\n\n      if (Clazz) {\n        view = new Clazz();\n        view.init(ecModel, this._api);\n        viewMap[viewId] = view;\n        viewList.push(view);\n        zr.add(view.group);\n      } else {\n        // Error\n        return;\n      }\n    }\n\n    model.__viewId = view.__id = viewId;\n    view.__alive = true;\n    view.__model = model;\n    view.group.__ecComponentInfo = {\n      mainType: model.mainType,\n      index: model.componentIndex\n    };\n  }, this);\n\n  for (var i = 0; i < viewList.length;) {\n    var view = viewList[i];\n\n    if (!view.__alive) {\n      zr.remove(view.group);\n      view.dispose(ecModel, this._api);\n      viewList.splice(i, 1);\n      delete viewMap[view.__id];\n      view.__id = view.group.__ecComponentInfo = null;\n    } else {\n      i++;\n    }\n  }\n}\n/**\n * Processor data in each series\n *\n * @param {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction processData(ecModel, api) {\n  each(dataProcessorFuncs, function (process) {\n    process.func(ecModel, api);\n  });\n}\n/**\n * @private\n */\n\n\nfunction stackSeriesData(ecModel) {\n  var stackedDataMap = {};\n  ecModel.eachSeries(function (series) {\n    var stack = series.get('stack');\n    var data = series.getData();\n\n    if (stack && data.type === 'list') {\n      var previousStack = stackedDataMap[stack]; // Avoid conflict with Object.prototype\n\n      if (stackedDataMap.hasOwnProperty(stack) && previousStack) {\n        data.stackedOn = previousStack;\n      }\n\n      stackedDataMap[stack] = data;\n    }\n  });\n}\n/**\n * Layout before each chart render there series, special visual encoding stage\n *\n * @param {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction doLayout(ecModel, payload) {\n  var api = this._api;\n  each(visualFuncs, function (visual) {\n    if (visual.isLayout) {\n      visual.func(ecModel, api, payload);\n    }\n  });\n}\n/**\n * Encode visual infomation from data after data processing\n *\n * @param {module:echarts/model/Global} ecModel\n * @param {object} layout\n * @param {boolean} [excludesLayout]\n * @private\n */\n\n\nfunction doVisualEncoding(ecModel, payload, excludesLayout) {\n  var api = this._api;\n  ecModel.clearColorPalette();\n  ecModel.eachSeries(function (seriesModel) {\n    seriesModel.clearColorPalette();\n  });\n  each(visualFuncs, function (visual) {\n    (!excludesLayout || !visual.isLayout) && visual.func(ecModel, api, payload);\n  });\n}\n/**\n * Render each chart and component\n * @private\n */\n\n\nfunction doRender(ecModel, payload) {\n  var api = this._api; // Render all components\n\n  each(this._componentsViews, function (componentView) {\n    var componentModel = componentView.__model;\n    componentView.render(componentModel, ecModel, api, payload);\n    updateZ(componentModel, componentView);\n  }, this);\n  each(this._chartsViews, function (chart) {\n    chart.__alive = false;\n  }, this); // Render all charts\n\n  ecModel.eachSeries(function (seriesModel, idx) {\n    var chartView = this._chartsMap[seriesModel.__viewId];\n    chartView.__alive = true;\n    chartView.render(seriesModel, ecModel, api, payload);\n    chartView.group.silent = !!seriesModel.get('silent');\n    updateZ(seriesModel, chartView);\n    updateProgressiveAndBlend(seriesModel, chartView);\n  }, this); // If use hover layer\n\n  updateHoverLayerStatus(this._zr, ecModel); // Remove groups of unrendered charts\n\n  each(this._chartsViews, function (chart) {\n    if (!chart.__alive) {\n      chart.remove(ecModel, api);\n    }\n  }, this);\n}\n\nvar MOUSE_EVENT_NAMES = ['click', 'dblclick', 'mouseover', 'mouseout', 'mousemove', 'mousedown', 'mouseup', 'globalout', 'contextmenu'];\n/**\n * @private\n */\n\nechartsProto._initEvents = function () {\n  each(MOUSE_EVENT_NAMES, function (eveName) {\n    this._zr.on(eveName, function (e) {\n      var ecModel = this.getModel();\n      var el = e.target;\n      var params; // no e.target when 'globalout'.\n\n      if (eveName === 'globalout') {\n        params = {};\n      } else if (el && el.dataIndex != null) {\n        var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n        params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n      } // If element has custom eventData of components\n      else if (el && el.eventData) {\n          params = zrUtil.extend({}, el.eventData);\n        }\n\n      if (params) {\n        params.event = e;\n        params.type = eveName;\n        this.trigger(eveName, params);\n      }\n    }, this);\n  }, this);\n  each(eventActionMap, function (actionType, eventType) {\n    this._messageCenter.on(eventType, function (event) {\n      this.trigger(eventType, event);\n    }, this);\n  }, this);\n};\n/**\n * @return {boolean}\n */\n\n\nechartsProto.isDisposed = function () {\n  return this._disposed;\n};\n/**\n * Clear\n */\n\n\nechartsProto.clear = function () {\n  this.setOption({\n    series: []\n  }, true);\n};\n/**\n * Dispose instance\n */\n\n\nechartsProto.dispose = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  this._disposed = true;\n  var api = this._api;\n  var ecModel = this._model;\n  each(this._componentsViews, function (component) {\n    component.dispose(ecModel, api);\n  });\n  each(this._chartsViews, function (chart) {\n    chart.dispose(ecModel, api);\n  }); // Dispose after all views disposed\n\n  this._zr.dispose();\n\n  delete instances[this.id];\n};\n\nzrUtil.mixin(ECharts, Eventful);\n\nfunction updateHoverLayerStatus(zr, ecModel) {\n  var storage = zr.storage;\n  var elCount = 0;\n  storage.traverse(function (el) {\n    if (!el.isGroup) {\n      elCount++;\n    }\n  });\n\n  if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n    storage.traverse(function (el) {\n      if (!el.isGroup) {\n        el.useHoverLayer = true;\n      }\n    });\n  }\n}\n/**\n * Update chart progressive and blend.\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateProgressiveAndBlend(seriesModel, chartView) {\n  // Progressive configuration\n  var elCount = 0;\n  chartView.group.traverse(function (el) {\n    if (el.type !== 'group' && !el.ignore) {\n      elCount++;\n    }\n  });\n  var frameDrawNum = +seriesModel.get('progressive');\n  var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n\n  if (needProgressive) {\n    chartView.group.traverse(function (el) {\n      // FIXME marker and other components\n      if (!el.isGroup) {\n        el.progressive = needProgressive ? Math.floor(elCount++ / frameDrawNum) : -1;\n\n        if (needProgressive) {\n          el.stopAnimation(true);\n        }\n      }\n    });\n  } // Blend configration\n\n\n  var blendMode = seriesModel.get('blendMode') || null;\n  chartView.group.traverse(function (el) {\n    // FIXME marker and other components\n    if (!el.isGroup) {\n      el.setStyle('blend', blendMode);\n    }\n  });\n}\n/**\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateZ(model, view) {\n  var z = model.get('z');\n  var zlevel = model.get('zlevel'); // Set z and zlevel\n\n  view.group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n    }\n  });\n}\n\nfunction createExtensionAPI(ecInstance) {\n  var coordSysMgr = ecInstance._coordSysMgr;\n  return zrUtil.extend(new ExtensionAPI(ecInstance), {\n    // Inject methods\n    getCoordinateSystems: zrUtil.bind(coordSysMgr.getCoordinateSystems, coordSysMgr),\n    getComponentByElement: function (el) {\n      while (el) {\n        var modelInfo = el.__ecComponentInfo;\n\n        if (modelInfo != null) {\n          return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n        }\n\n        el = el.parent;\n      }\n    }\n  });\n}\n/**\n * @type {Object} key: actionType.\n * @inner\n */\n\n\nvar actions = {};\n/**\n * Map eventType to actionType\n * @type {Object}\n */\n\nvar eventActionMap = {};\n/**\n * Data processor functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar dataProcessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar optionPreprocessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar postUpdateFuncs = [];\n/**\n * Visual encoding functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar visualFuncs = [];\n/**\n * Theme storage\n * @type {Object.<key, Object>}\n */\n\nvar themeStorage = {};\n/**\n * Loading effects\n */\n\nvar loadingEffects = {};\nvar instances = {};\nvar connectedGroups = {};\nvar idBase = new Date() - 0;\nvar groupIdBase = new Date() - 0;\nvar DOM_ATTRIBUTE_KEY = '_echarts_instance_';\nvar mapDataStores = {};\n\nfunction enableConnect(chart) {\n  var STATUS_PENDING = 0;\n  var STATUS_UPDATING = 1;\n  var STATUS_UPDATED = 2;\n  var STATUS_KEY = '__connectUpdateStatus';\n\n  function updateConnectedChartsStatus(charts, status) {\n    for (var i = 0; i < charts.length; i++) {\n      var otherChart = charts[i];\n      otherChart[STATUS_KEY] = status;\n    }\n  }\n\n  zrUtil.each(eventActionMap, function (actionType, eventType) {\n    chart._messageCenter.on(eventType, function (event) {\n      if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n        if (event && event.escapeConnect) {\n          return;\n        }\n\n        var action = chart.makeActionFromEvent(event);\n        var otherCharts = [];\n        zrUtil.each(instances, function (otherChart) {\n          if (otherChart !== chart && otherChart.group === chart.group) {\n            otherCharts.push(otherChart);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n        each(otherCharts, function (otherChart) {\n          if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n            otherChart.dispatchAction(action);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n      }\n    });\n  });\n}\n/**\n * @param {HTMLElement} dom\n * @param {Object} [theme]\n * @param {Object} opts\n * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n *                              Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n *                               Can be 'auto' (the same as null/undefined)\n */\n\n\nfunction init(dom, theme, opts) {\n  var existInstance = getInstanceByDom(dom);\n\n  if (existInstance) {\n    return existInstance;\n  }\n\n  var chart = new ECharts(dom, theme, opts);\n  chart.id = 'ec_' + idBase++;\n  instances[chart.id] = chart;\n\n  if (dom.setAttribute) {\n    dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n  } else {\n    dom[DOM_ATTRIBUTE_KEY] = chart.id;\n  }\n\n  enableConnect(chart);\n  return chart;\n}\n/**\n * @return {string|Array.<module:echarts~ECharts>} groupId\n */\n\n\nfunction connect(groupId) {\n  // Is array of charts\n  if (zrUtil.isArray(groupId)) {\n    var charts = groupId;\n    groupId = null; // If any chart has group\n\n    zrUtil.each(charts, function (chart) {\n      if (chart.group != null) {\n        groupId = chart.group;\n      }\n    });\n    groupId = groupId || 'g_' + groupIdBase++;\n    zrUtil.each(charts, function (chart) {\n      chart.group = groupId;\n    });\n  }\n\n  connectedGroups[groupId] = true;\n  return groupId;\n}\n/**\n * @DEPRECATED\n * @return {string} groupId\n */\n\n\nfunction disConnect(groupId) {\n  connectedGroups[groupId] = false;\n}\n/**\n * @return {string} groupId\n */\n\n\nvar disconnect = disConnect;\n/**\n * Dispose a chart instance\n * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n */\n\nfunction dispose(chart) {\n  if (typeof chart === 'string') {\n    chart = instances[chart];\n  } else if (!(chart instanceof ECharts)) {\n    // Try to treat as dom\n    chart = getInstanceByDom(chart);\n  }\n\n  if (chart instanceof ECharts && !chart.isDisposed()) {\n    chart.dispose();\n  }\n}\n/**\n * @param  {HTMLElement} dom\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceByDom(dom) {\n  var key;\n\n  if (dom.getAttribute) {\n    key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n  } else {\n    key = dom[DOM_ATTRIBUTE_KEY];\n  }\n\n  return instances[key];\n}\n/**\n * @param {string} key\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceById(key) {\n  return instances[key];\n}\n/**\n * Register theme\n */\n\n\nfunction registerTheme(name, theme) {\n  themeStorage[name] = theme;\n}\n/**\n * Register option preprocessor\n * @param {Function} preprocessorFunc\n */\n\n\nfunction registerPreprocessor(preprocessorFunc) {\n  optionPreprocessorFuncs.push(preprocessorFunc);\n}\n/**\n * @param {number} [priority=1000]\n * @param {Function} processorFunc\n */\n\n\nfunction registerProcessor(priority, processorFunc) {\n  if (typeof priority === 'function') {\n    processorFunc = priority;\n    priority = PRIORITY_PROCESSOR_FILTER;\n  }\n\n  dataProcessorFuncs.push({\n    prio: priority,\n    func: processorFunc\n  });\n}\n/**\n * Register postUpdater\n * @param {Function} postUpdateFunc\n */\n\n\nfunction registerPostUpdate(postUpdateFunc) {\n  postUpdateFuncs.push(postUpdateFunc);\n}\n/**\n * Usage:\n * registerAction('someAction', 'someEvent', function () { ... });\n * registerAction('someAction', function () { ... });\n * registerAction(\n *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n *     function () { ... }\n * );\n *\n * @param {(string|Object)} actionInfo\n * @param {string} actionInfo.type\n * @param {string} [actionInfo.event]\n * @param {string} [actionInfo.update]\n * @param {string} [eventName]\n * @param {Function} action\n */\n\n\nfunction registerAction(actionInfo, eventName, action) {\n  if (typeof eventName === 'function') {\n    action = eventName;\n    eventName = '';\n  }\n\n  var actionType = zrUtil.isObject(actionInfo) ? actionInfo.type : [actionInfo, actionInfo = {\n    event: eventName\n  }][0]; // Event name is all lowercase\n\n  actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n  eventName = actionInfo.event; // Validate action type and event name.\n\n  zrUtil.assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n  if (!actions[actionType]) {\n    actions[actionType] = {\n      action: action,\n      actionInfo: actionInfo\n    };\n  }\n\n  eventActionMap[eventName] = actionType;\n}\n/**\n * @param {string} type\n * @param {*} CoordinateSystem\n */\n\n\nfunction registerCoordinateSystem(type, CoordinateSystem) {\n  CoordinateSystemManager.register(type, CoordinateSystem);\n}\n/**\n * Get dimensions of specified coordinate system.\n * @param {string} type\n * @return {Array.<string|Object>}\n */\n\n\nfunction getCoordinateSystemDimensions(type) {\n  var coordSysCreator = CoordinateSystemManager.get(type);\n\n  if (coordSysCreator) {\n    return coordSysCreator.getDimensionsInfo ? coordSysCreator.getDimensionsInfo() : coordSysCreator.dimensions.slice();\n  }\n}\n/**\n * Layout is a special stage of visual encoding\n * Most visual encoding like color are common for different chart\n * But each chart has it's own layout algorithm\n *\n * @param {number} [priority=1000]\n * @param {Function} layoutFunc\n */\n\n\nfunction registerLayout(priority, layoutFunc) {\n  if (typeof priority === 'function') {\n    layoutFunc = priority;\n    priority = PRIORITY_VISUAL_LAYOUT;\n  }\n\n  visualFuncs.push({\n    prio: priority,\n    func: layoutFunc,\n    isLayout: true\n  });\n}\n/**\n * @param {number} [priority=3000]\n * @param {Function} visualFunc\n */\n\n\nfunction registerVisual(priority, visualFunc) {\n  if (typeof priority === 'function') {\n    visualFunc = priority;\n    priority = PRIORITY_VISUAL_CHART;\n  }\n\n  visualFuncs.push({\n    prio: priority,\n    func: visualFunc\n  });\n}\n/**\n * @param {string} name\n */\n\n\nfunction registerLoading(name, loadingFx) {\n  loadingEffects[name] = loadingFx;\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentModel(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentModel;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentView(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentView;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentView.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendSeriesModel(opts\n/*, superClass*/\n) {\n  // var Clazz = SeriesModel;\n  // if (superClass) {\n  //     superClass = 'series.' + superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return SeriesModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendChartView(opts\n/*, superClass*/\n) {\n  // var Clazz = ChartView;\n  // if (superClass) {\n  //     superClass = superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ChartView.getClass(classType.main, true);\n  // }\n  return ChartView.extend(opts);\n}\n/**\n * ZRender need a canvas context to do measureText.\n * But in node environment canvas may be created by node-canvas.\n * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n *\n * Be careful of using it in the browser.\n *\n * @param {Function} creator\n * @example\n *     var Canvas = require('canvas');\n *     var echarts = require('echarts');\n *     echarts.setCanvasCreator(function () {\n *         // Small size is enough.\n *         return new Canvas(32, 32);\n *     });\n */\n\n\nfunction setCanvasCreator(creator) {\n  zrUtil.$override('createCanvas', creator);\n}\n/**\n * @param {string} mapName\n * @param {Object|string} geoJson\n * @param {Object} [specialAreas]\n *\n * @example\n *     $.get('USA.json', function (geoJson) {\n *         echarts.registerMap('USA', geoJson);\n *         // Or\n *         echarts.registerMap('USA', {\n *             geoJson: geoJson,\n *             specialAreas: {}\n *         })\n *     });\n */\n\n\nfunction registerMap(mapName, geoJson, specialAreas) {\n  if (geoJson.geoJson && !geoJson.features) {\n    specialAreas = geoJson.specialAreas;\n    geoJson = geoJson.geoJson;\n  }\n\n  if (typeof geoJson === 'string') {\n    geoJson = typeof JSON !== 'undefined' && JSON.parse ? JSON.parse(geoJson) : new Function('return (' + geoJson + ');')();\n  }\n\n  mapDataStores[mapName] = {\n    geoJson: geoJson,\n    specialAreas: specialAreas\n  };\n}\n/**\n * @param {string} mapName\n * @return {Object}\n */\n\n\nfunction getMap(mapName) {\n  return mapDataStores[mapName];\n}\n\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesColor);\nregisterPreprocessor(backwardCompat);\nregisterLoading('default', loadingDefault); // Default actions\n\nregisterAction({\n  type: 'highlight',\n  event: 'highlight',\n  update: 'highlight'\n}, zrUtil.noop);\nregisterAction({\n  type: 'downplay',\n  event: 'downplay',\n  update: 'downplay'\n}, zrUtil.noop); // For backward compatibility, where the namespace `dataTool` will\n// be mounted on `echarts` is the extension `dataTool` is imported.\n\nvar dataTool = {};\nexports.version = version;\nexports.dependencies = dependencies;\nexports.PRIORITY = PRIORITY;\nexports.init = init;\nexports.connect = connect;\nexports.disConnect = disConnect;\nexports.disconnect = disconnect;\nexports.dispose = dispose;\nexports.getInstanceByDom = getInstanceByDom;\nexports.getInstanceById = getInstanceById;\nexports.registerTheme = registerTheme;\nexports.registerPreprocessor = registerPreprocessor;\nexports.registerProcessor = registerProcessor;\nexports.registerPostUpdate = registerPostUpdate;\nexports.registerAction = registerAction;\nexports.registerCoordinateSystem = registerCoordinateSystem;\nexports.getCoordinateSystemDimensions = getCoordinateSystemDimensions;\nexports.registerLayout = registerLayout;\nexports.registerVisual = registerVisual;\nexports.registerLoading = registerLoading;\nexports.extendComponentModel = extendComponentModel;\nexports.extendComponentView = extendComponentView;\nexports.extendSeriesModel = extendSeriesModel;\nexports.extendChartView = extendChartView;\nexports.setCanvasCreator = setCanvasCreator;\nexports.registerMap = registerMap;\nexports.getMap = getMap;\nexports.dataTool = dataTool;\nvar ___ec_export = require(\"./export\");\n(function () {\n    for (var key in ___ec_export) {\n        if (___ec_export.hasOwnProperty(key)) {\n            exports[key] = ___ec_export[key];\n        }\n    }\n})();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/echarts.js\n// module id = 979\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar pathTool = require(\"zrender/lib/tool/path\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\nvar Transformable = require(\"zrender/lib/mixin/Transformable\");\n\nvar Image = require(\"zrender/lib/graphic/Image\");\n\nexports.Image = Image;\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nexports.Group = Group;\n\nvar Text = require(\"zrender/lib/graphic/Text\");\n\nexports.Text = Text;\n\nvar Circle = require(\"zrender/lib/graphic/shape/Circle\");\n\nexports.Circle = Circle;\n\nvar Sector = require(\"zrender/lib/graphic/shape/Sector\");\n\nexports.Sector = Sector;\n\nvar Ring = require(\"zrender/lib/graphic/shape/Ring\");\n\nexports.Ring = Ring;\n\nvar Polygon = require(\"zrender/lib/graphic/shape/Polygon\");\n\nexports.Polygon = Polygon;\n\nvar Polyline = require(\"zrender/lib/graphic/shape/Polyline\");\n\nexports.Polyline = Polyline;\n\nvar Rect = require(\"zrender/lib/graphic/shape/Rect\");\n\nexports.Rect = Rect;\n\nvar Line = require(\"zrender/lib/graphic/shape/Line\");\n\nexports.Line = Line;\n\nvar BezierCurve = require(\"zrender/lib/graphic/shape/BezierCurve\");\n\nexports.BezierCurve = BezierCurve;\n\nvar Arc = require(\"zrender/lib/graphic/shape/Arc\");\n\nexports.Arc = Arc;\n\nvar CompoundPath = require(\"zrender/lib/graphic/CompoundPath\");\n\nexports.CompoundPath = CompoundPath;\n\nvar LinearGradient = require(\"zrender/lib/graphic/LinearGradient\");\n\nexports.LinearGradient = LinearGradient;\n\nvar RadialGradient = require(\"zrender/lib/graphic/RadialGradient\");\n\nexports.RadialGradient = RadialGradient;\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nexports.BoundingRect = BoundingRect;\nvar round = Math.round;\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar EMPTY_OBJ = {};\n/**\n * Extend shape with parameters\n */\n\nfunction extendShape(opts) {\n  return Path.extend(opts);\n}\n/**\n * Extend path\n */\n\n\nfunction extendPath(pathData, opts) {\n  return pathTool.extendFromString(pathData, opts);\n}\n/**\n * Create a path element from path data string\n * @param {string} pathData\n * @param {Object} opts\n * @param {module:zrender/core/BoundingRect} rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makePath(pathData, opts, rect, layout) {\n  var path = pathTool.createFromString(pathData, opts);\n  var boundingRect = path.getBoundingRect();\n\n  if (rect) {\n    if (layout === 'center') {\n      rect = centerGraphic(rect, boundingRect);\n    }\n\n    resizePath(path, rect);\n  }\n\n  return path;\n}\n/**\n * Create a image element from image url\n * @param {string} imageUrl image url\n * @param {Object} opts options\n * @param {module:zrender/core/BoundingRect} rect constrain rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makeImage(imageUrl, rect, layout) {\n  var path = new Image({\n    style: {\n      image: imageUrl,\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    onload: function (img) {\n      if (layout === 'center') {\n        var boundingRect = {\n          width: img.width,\n          height: img.height\n        };\n        path.setStyle(centerGraphic(rect, boundingRect));\n      }\n    }\n  });\n  return path;\n}\n/**\n * Get position of centered element in bounding box.\n *\n * @param  {Object} rect         element local bounding box\n * @param  {Object} boundingRect constraint bounding box\n * @return {Object} element position containing x, y, width, and height\n */\n\n\nfunction centerGraphic(rect, boundingRect) {\n  // Set rect to center, keep width / height ratio.\n  var aspect = boundingRect.width / boundingRect.height;\n  var width = rect.height * aspect;\n  var height;\n\n  if (width <= rect.width) {\n    height = rect.height;\n  } else {\n    width = rect.width;\n    height = width / aspect;\n  }\n\n  var cx = rect.x + rect.width / 2;\n  var cy = rect.y + rect.height / 2;\n  return {\n    x: cx - width / 2,\n    y: cy - height / 2,\n    width: width,\n    height: height\n  };\n}\n\nvar mergePath = pathTool.mergePath;\n/**\n * Resize a path to fit the rect\n * @param {module:zrender/graphic/Path} path\n * @param {Object} rect\n */\n\nfunction resizePath(path, rect) {\n  if (!path.applyTransform) {\n    return;\n  }\n\n  var pathRect = path.getBoundingRect();\n  var m = pathRect.calculateTransform(rect);\n  path.applyTransform(m);\n}\n/**\n * Sub pixel optimize line for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x1]\n * @param {number} [param.shape.y1]\n * @param {number} [param.shape.x2]\n * @param {number} [param.shape.y2]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeLine(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n\n  if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n    shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n  }\n\n  if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n    shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n  }\n\n  return param;\n}\n/**\n * Sub pixel optimize rect for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x]\n * @param {number} [param.shape.y]\n * @param {number} [param.shape.width]\n * @param {number} [param.shape.height]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeRect(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n  var originX = shape.x;\n  var originY = shape.y;\n  var originWidth = shape.width;\n  var originHeight = shape.height;\n  shape.x = subPixelOptimize(shape.x, lineWidth, true);\n  shape.y = subPixelOptimize(shape.y, lineWidth, true);\n  shape.width = Math.max(subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x, originWidth === 0 ? 0 : 1);\n  shape.height = Math.max(subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y, originHeight === 0 ? 0 : 1);\n  return param;\n}\n/**\n * Sub pixel optimize for canvas\n *\n * @param {number} position Coordinate, such as x, y\n * @param {number} lineWidth Should be nonnegative integer.\n * @param {boolean=} positiveOrNegative Default false (negative).\n * @return {number} Optimized position.\n */\n\n\nfunction subPixelOptimize(position, lineWidth, positiveOrNegative) {\n  // Assure that (position + lineWidth / 2) is near integer edge,\n  // otherwise line will be fuzzy in canvas.\n  var doubledPosition = round(position * 2);\n  return (doubledPosition + round(lineWidth)) % 2 === 0 ? doubledPosition / 2 : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n}\n\nfunction hasFillOrStroke(fillOrStroke) {\n  return fillOrStroke != null && fillOrStroke != 'none';\n}\n\nfunction liftColor(color) {\n  return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n}\n/**\n * @private\n */\n\n\nfunction cacheElementStl(el) {\n  if (el.__hoverStlDirty) {\n    var stroke = el.style.stroke;\n    var fill = el.style.fill; // Create hoverStyle on mouseover\n\n    var hoverStyle = el.__hoverStl;\n    hoverStyle.fill = hoverStyle.fill || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n    hoverStyle.stroke = hoverStyle.stroke || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n    var normalStyle = {};\n\n    for (var name in hoverStyle) {\n      // See comment in `doSingleEnterHover`.\n      if (hoverStyle[name] != null) {\n        normalStyle[name] = el.style[name];\n      }\n    }\n\n    el.__normalStl = normalStyle;\n    el.__hoverStlDirty = false;\n  }\n}\n/**\n * @private\n */\n\n\nfunction doSingleEnterHover(el) {\n  if (el.__isHover) {\n    return;\n  }\n\n  cacheElementStl(el);\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.addHover(el, el.__hoverStl);\n  } else {\n    var style = el.style;\n    var insideRollbackOpt = style.insideRollbackOpt; // Consider case: only `position: 'top'` is set on emphasis, then text\n    // color should be returned to `autoColor`, rather than remain '#fff'.\n    // So we should rollback then apply again after style merging.\n\n    insideRollbackOpt && rollbackInsideStyle(style); // styles can be:\n    // {\n    //     label: {\n    //         normal: {\n    //             show: false,\n    //             position: 'outside',\n    //             fontSize: 18\n    //         },\n    //         emphasis: {\n    //             show: true\n    //         }\n    //     }\n    // },\n    // where properties of `emphasis` may not appear in `normal`. We previously use\n    // module:echarts/util/model#defaultEmphasis to merge `normal` to `emphasis`.\n    // But consider rich text and setOption in merge mode, it is impossible to cover\n    // all properties in merge. So we use merge mode when setting style here, where\n    // only properties that is not `null/undefined` can be set. The disadventage:\n    // null/undefined can not be used to remove style any more in `emphasis`.\n\n    style.extendFrom(el.__hoverStl); // Do not save `insideRollback`.\n\n    if (insideRollbackOpt) {\n      applyInsideStyle(style, style.insideOriginalTextPosition, insideRollbackOpt); // textFill may be rollbacked to null.\n\n      if (style.textFill == null) {\n        style.textFill = insideRollbackOpt.autoColor;\n      }\n    }\n\n    el.dirty(false);\n    el.z2 += 1;\n  }\n\n  el.__isHover = true;\n}\n/**\n * @inner\n */\n\n\nfunction doSingleLeaveHover(el) {\n  if (!el.__isHover) {\n    return;\n  }\n\n  var normalStl = el.__normalStl;\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.removeHover(el);\n  } else {\n    // Consider null/undefined value, should use\n    // `setStyle` but not `extendFrom(stl, true)`.\n    normalStl && el.setStyle(normalStl);\n    el.z2 -= 1;\n  }\n\n  el.__isHover = false;\n}\n/**\n * @inner\n */\n\n\nfunction doEnterHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleEnterHover(child);\n    }\n  }) : doSingleEnterHover(el);\n}\n\nfunction doLeaveHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleLeaveHover(child);\n    }\n  }) : doSingleLeaveHover(el);\n}\n/**\n * @inner\n */\n\n\nfunction setElementHoverStl(el, hoverStl) {\n  // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n  // Often used when item group has a label element and it's hoverStyle is different\n  el.__hoverStl = el.hoverStyle || hoverStl || {};\n  el.__hoverStlDirty = true;\n\n  if (el.__isHover) {\n    cacheElementStl(el);\n  }\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOver(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOut(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doLeaveHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction enterEmphasis() {\n  this.__isEmphasis = true;\n  doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction leaveEmphasis() {\n  this.__isEmphasis = false;\n  doLeaveHover(this);\n}\n/**\n * Set hover style of element.\n * This method can be called repeatly without side-effects.\n * @param {module:zrender/Element} el\n * @param {Object} [hoverStyle]\n * @param {Object} [opt]\n * @param {boolean} [opt.hoverSilentOnTouch=false]\n *        In touch device, mouseover event will be trigger on touchstart event\n *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n *        conviniently use hoverStyle when tap on touch screen without additional\n *        code for compatibility.\n *        But if the chart/component has select feature, which usually also use\n *        hoverStyle, there might be conflict between 'select-highlight' and\n *        'hover-highlight' especially when roam is enabled (see geo for example).\n *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n *        on touch device.\n */\n\n\nfunction setHoverStyle(el, hoverStyle, opt) {\n  el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      setElementHoverStl(child, hoverStyle);\n    }\n  }) : setElementHoverStl(el, hoverStyle); // Duplicated function will be auto-ignored, see Eventful.js.\n\n  el.on('mouseover', onElementMouseOver).on('mouseout', onElementMouseOut); // Emphasis, normal can be triggered manually\n\n  el.on('emphasis', enterEmphasis).on('normal', leaveEmphasis);\n}\n/**\n * @param {Object|module:zrender/graphic/Style} normalStyle\n * @param {Object} emphasisStyle\n * @param {module:echarts/model/Model} normalModel\n * @param {module:echarts/model/Model} emphasisModel\n * @param {Object} opt Check `opt` of `setTextStyleCommon` to find other props.\n * @param {Object} [opt.defaultText]\n * @param {module:echarts/model/Model} [opt.labelFetcher] Fetch text by\n *      `opt.labelFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDataIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDimIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {Object} [normalSpecified]\n * @param {Object} [emphasisSpecified]\n */\n\n\nfunction setLabelStyle(normalStyle, emphasisStyle, normalModel, emphasisModel, opt, normalSpecified, emphasisSpecified) {\n  opt = opt || EMPTY_OBJ;\n  var labelFetcher = opt.labelFetcher;\n  var labelDataIndex = opt.labelDataIndex;\n  var labelDimIndex = opt.labelDimIndex; // This scenario, `label.normal.show = true; label.emphasis.show = false`,\n  // is not supported util someone requests.\n\n  var showNormal = normalModel.getShallow('show');\n  var showEmphasis = emphasisModel.getShallow('show'); // Consider performance, only fetch label when necessary.\n  // If `normal.show` is `false` and `emphasis.show` is `true` and `emphasis.formatter` is not set,\n  // label should be displayed, where text is fetched by `normal.formatter` or `opt.defaultText`.\n\n  var baseText = showNormal || showEmphasis ? zrUtil.retrieve2(labelFetcher ? labelFetcher.getFormattedLabel(labelDataIndex, 'normal', null, labelDimIndex) : null, opt.defaultText) : null;\n  var normalStyleText = showNormal ? baseText : null;\n  var emphasisStyleText = showEmphasis ? zrUtil.retrieve2(labelFetcher ? labelFetcher.getFormattedLabel(labelDataIndex, 'emphasis', null, labelDimIndex) : null, baseText) : null; // Optimize: If style.text is null, text will not be drawn.\n\n  if (normalStyleText != null || emphasisStyleText != null) {\n    // Always set `textStyle` even if `normalStyle.text` is null, because default\n    // values have to be set on `normalStyle`.\n    // If we set default values on `emphasisStyle`, consider case:\n    // Firstly, `setOption(... label: {normal: {text: null}, emphasis: {show: true}} ...);`\n    // Secondly, `setOption(... label: {noraml: {show: true, text: 'abc', color: 'red'} ...);`\n    // Then the 'red' will not work on emphasis.\n    setTextStyle(normalStyle, normalModel, normalSpecified, opt);\n    setTextStyle(emphasisStyle, emphasisModel, emphasisSpecified, opt, true);\n  }\n\n  normalStyle.text = normalStyleText;\n  emphasisStyle.text = emphasisStyleText;\n}\n/**\n * Set basic textStyle properties.\n * @param {Object|module:zrender/graphic/Style} textStyle\n * @param {module:echarts/model/Model} model\n * @param {Object} [specifiedTextStyle] Can be overrided by settings in model.\n * @param {Object} [opt] See `opt` of `setTextStyleCommon`.\n * @param {boolean} [isEmphasis]\n */\n\n\nfunction setTextStyle(textStyle, textStyleModel, specifiedTextStyle, opt, isEmphasis) {\n  setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis);\n  specifiedTextStyle && zrUtil.extend(textStyle, specifiedTextStyle);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n  return textStyle;\n}\n/**\n * Set text option in the style.\n * @deprecated\n * @param {Object} textStyle\n * @param {module:echarts/model/Model} labelModel\n * @param {string|boolean} defaultColor Default text color.\n *        If set as false, it will be processed as a emphasis style.\n */\n\n\nfunction setText(textStyle, labelModel, defaultColor) {\n  var opt = {\n    isRectText: true\n  };\n  var isEmphasis;\n\n  if (defaultColor === false) {\n    isEmphasis = true;\n  } else {\n    // Support setting color as 'auto' to get visual color.\n    opt.autoColor = defaultColor;\n  }\n\n  setTextStyleCommon(textStyle, labelModel, opt, isEmphasis);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n}\n/**\n * {\n *      disableBox: boolean, Whether diable drawing box of block (outer most).\n *      isRectText: boolean,\n *      autoColor: string, specify a color when color is 'auto',\n *              for textFill, textStroke, textBackgroundColor, and textBorderColor.\n *              If autoColor specified, it is used as default textFill.\n *      useInsideStyle:\n *              `true`: Use inside style (textFill, textStroke, textStrokeWidth)\n *                  if `textFill` is not specified.\n *              `false`: Do not use inside style.\n *              `null/undefined`: use inside style if `isRectText` is true and\n *                  `textFill` is not specified and textPosition contains `'inside'`.\n *      forceRich: boolean\n * }\n */\n\n\nfunction setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis) {\n  // Consider there will be abnormal when merge hover style to normal style if given default value.\n  opt = opt || EMPTY_OBJ;\n\n  if (opt.isRectText) {\n    var textPosition = textStyleModel.getShallow('position') || (isEmphasis ? null : 'inside'); // 'outside' is not a valid zr textPostion value, but used\n    // in bar series, and magric type should be considered.\n\n    textPosition === 'outside' && (textPosition = 'top');\n    textStyle.textPosition = textPosition;\n    textStyle.textOffset = textStyleModel.getShallow('offset');\n    var labelRotate = textStyleModel.getShallow('rotate');\n    labelRotate != null && (labelRotate *= Math.PI / 180);\n    textStyle.textRotation = labelRotate;\n    textStyle.textDistance = zrUtil.retrieve2(textStyleModel.getShallow('distance'), isEmphasis ? null : 5);\n  }\n\n  var ecModel = textStyleModel.ecModel;\n  var globalTextStyle = ecModel && ecModel.option.textStyle; // Consider case:\n  // {\n  //     data: [{\n  //         value: 12,\n  //         label: {\n  //             normal: {\n  //                 rich: {\n  //                     // no 'a' here but using parent 'a'.\n  //                 }\n  //             }\n  //         }\n  //     }],\n  //     rich: {\n  //         a: { ... }\n  //     }\n  // }\n\n  var richItemNames = getRichItemNames(textStyleModel);\n  var richResult;\n\n  if (richItemNames) {\n    richResult = {};\n\n    for (var name in richItemNames) {\n      if (richItemNames.hasOwnProperty(name)) {\n        // Cascade is supported in rich.\n        var richTextStyle = textStyleModel.getModel(['rich', name]); // In rich, never `disableBox`.\n\n        setTokenTextStyle(richResult[name] = {}, richTextStyle, globalTextStyle, opt, isEmphasis);\n      }\n    }\n  }\n\n  textStyle.rich = richResult;\n  setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, true);\n\n  if (opt.forceRich && !opt.textStyle) {\n    opt.textStyle = {};\n  }\n\n  return textStyle;\n} // Consider case:\n// {\n//     data: [{\n//         value: 12,\n//         label: {\n//             normal: {\n//                 rich: {\n//                     // no 'a' here but using parent 'a'.\n//                 }\n//             }\n//         }\n//     }],\n//     rich: {\n//         a: { ... }\n//     }\n// }\n\n\nfunction getRichItemNames(textStyleModel) {\n  // Use object to remove duplicated names.\n  var richItemNameMap;\n\n  while (textStyleModel && textStyleModel !== textStyleModel.ecModel) {\n    var rich = (textStyleModel.option || EMPTY_OBJ).rich;\n\n    if (rich) {\n      richItemNameMap = richItemNameMap || {};\n\n      for (var name in rich) {\n        if (rich.hasOwnProperty(name)) {\n          richItemNameMap[name] = 1;\n        }\n      }\n    }\n\n    textStyleModel = textStyleModel.parentModel;\n  }\n\n  return richItemNameMap;\n}\n\nfunction setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, isBlock) {\n  // In merge mode, default value should not be given.\n  globalTextStyle = !isEmphasis && globalTextStyle || EMPTY_OBJ;\n  textStyle.textFill = getAutoColor(textStyleModel.getShallow('color'), opt) || globalTextStyle.color;\n  textStyle.textStroke = getAutoColor(textStyleModel.getShallow('textBorderColor'), opt) || globalTextStyle.textBorderColor;\n  textStyle.textStrokeWidth = zrUtil.retrieve2(textStyleModel.getShallow('textBorderWidth'), globalTextStyle.textBorderWidth);\n\n  if (!isEmphasis) {\n    if (isBlock) {\n      // Always set `insideRollback`, for clearing previous.\n      var originalTextPosition = textStyle.textPosition;\n      textStyle.insideRollback = applyInsideStyle(textStyle, originalTextPosition, opt); // Save original textPosition, because style.textPosition will be repalced by\n      // real location (like [10, 30]) in zrender.\n\n      textStyle.insideOriginalTextPosition = originalTextPosition;\n      textStyle.insideRollbackOpt = opt;\n    } // Set default finally.\n\n\n    if (textStyle.textFill == null) {\n      textStyle.textFill = opt.autoColor;\n    }\n  } // Do not use `getFont` here, because merge should be supported, where\n  // part of these properties may be changed in emphasis style, and the\n  // others should remain their original value got from normal style.\n\n\n  textStyle.fontStyle = textStyleModel.getShallow('fontStyle') || globalTextStyle.fontStyle;\n  textStyle.fontWeight = textStyleModel.getShallow('fontWeight') || globalTextStyle.fontWeight;\n  textStyle.fontSize = textStyleModel.getShallow('fontSize') || globalTextStyle.fontSize;\n  textStyle.fontFamily = textStyleModel.getShallow('fontFamily') || globalTextStyle.fontFamily;\n  textStyle.textAlign = textStyleModel.getShallow('align');\n  textStyle.textVerticalAlign = textStyleModel.getShallow('verticalAlign') || textStyleModel.getShallow('baseline');\n  textStyle.textLineHeight = textStyleModel.getShallow('lineHeight');\n  textStyle.textWidth = textStyleModel.getShallow('width');\n  textStyle.textHeight = textStyleModel.getShallow('height');\n  textStyle.textTag = textStyleModel.getShallow('tag');\n\n  if (!isBlock || !opt.disableBox) {\n    textStyle.textBackgroundColor = getAutoColor(textStyleModel.getShallow('backgroundColor'), opt);\n    textStyle.textPadding = textStyleModel.getShallow('padding');\n    textStyle.textBorderColor = getAutoColor(textStyleModel.getShallow('borderColor'), opt);\n    textStyle.textBorderWidth = textStyleModel.getShallow('borderWidth');\n    textStyle.textBorderRadius = textStyleModel.getShallow('borderRadius');\n    textStyle.textBoxShadowColor = textStyleModel.getShallow('shadowColor');\n    textStyle.textBoxShadowBlur = textStyleModel.getShallow('shadowBlur');\n    textStyle.textBoxShadowOffsetX = textStyleModel.getShallow('shadowOffsetX');\n    textStyle.textBoxShadowOffsetY = textStyleModel.getShallow('shadowOffsetY');\n  }\n\n  textStyle.textShadowColor = textStyleModel.getShallow('textShadowColor') || globalTextStyle.textShadowColor;\n  textStyle.textShadowBlur = textStyleModel.getShallow('textShadowBlur') || globalTextStyle.textShadowBlur;\n  textStyle.textShadowOffsetX = textStyleModel.getShallow('textShadowOffsetX') || globalTextStyle.textShadowOffsetX;\n  textStyle.textShadowOffsetY = textStyleModel.getShallow('textShadowOffsetY') || globalTextStyle.textShadowOffsetY;\n}\n\nfunction getAutoColor(color, opt) {\n  return color !== 'auto' ? color : opt && opt.autoColor ? opt.autoColor : null;\n}\n\nfunction applyInsideStyle(textStyle, textPosition, opt) {\n  var useInsideStyle = opt.useInsideStyle;\n  var insideRollback;\n\n  if (textStyle.textFill == null && useInsideStyle !== false && (useInsideStyle === true || opt.isRectText && textPosition // textPosition can be [10, 30]\n  && typeof textPosition === 'string' && textPosition.indexOf('inside') >= 0)) {\n    insideRollback = {\n      textFill: null,\n      textStroke: textStyle.textStroke,\n      textStrokeWidth: textStyle.textStrokeWidth\n    };\n    textStyle.textFill = '#fff'; // Consider text with #fff overflow its container.\n\n    if (textStyle.textStroke == null) {\n      textStyle.textStroke = opt.autoColor;\n      textStyle.textStrokeWidth == null && (textStyle.textStrokeWidth = 2);\n    }\n  }\n\n  return insideRollback;\n}\n\nfunction rollbackInsideStyle(style) {\n  var insideRollback = style.insideRollback;\n\n  if (insideRollback) {\n    style.textFill = insideRollback.textFill;\n    style.textStroke = insideRollback.textStroke;\n    style.textStrokeWidth = insideRollback.textStrokeWidth;\n  }\n}\n\nfunction getFont(opt, ecModel) {\n  // ecModel or default text style model.\n  var gTextStyleModel = ecModel || ecModel.getModel('textStyle');\n  return [// FIXME in node-canvas fontWeight is before fontStyle\n  opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '', opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '', (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px', opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'].join(' ');\n}\n\nfunction animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n  if (typeof dataIndex === 'function') {\n    cb = dataIndex;\n    dataIndex = null;\n  } // Do not check 'animation' property directly here. Consider this case:\n  // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n  // but its parent model (`seriesModel`) does.\n\n\n  var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n  if (animationEnabled) {\n    var postfix = isUpdate ? 'Update' : '';\n    var duration = animatableModel.getShallow('animationDuration' + postfix);\n    var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n    var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n\n    if (typeof animationDelay === 'function') {\n      animationDelay = animationDelay(dataIndex, animatableModel.getAnimationDelayParams ? animatableModel.getAnimationDelayParams(el, dataIndex) : null);\n    }\n\n    if (typeof duration === 'function') {\n      duration = duration(dataIndex);\n    }\n\n    duration > 0 ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb, !!cb) : (el.stopAnimation(), el.attr(props), cb && cb());\n  } else {\n    el.stopAnimation();\n    el.attr(props);\n    cb && cb();\n  }\n}\n/**\n * Update graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} [cb]\n * @example\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n *     // Or\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, function () { console.log('Animation done!'); });\n */\n\n\nfunction updateProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Init graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} cb\n */\n\n\nfunction initProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Get transform matrix of target (param target),\n * in coordinate of its ancestor (param ancestor)\n *\n * @param {module:zrender/mixin/Transformable} target\n * @param {module:zrender/mixin/Transformable} [ancestor]\n */\n\n\nfunction getTransform(target, ancestor) {\n  var mat = matrix.identity([]);\n\n  while (target && target !== ancestor) {\n    matrix.mul(mat, target.getLocalTransform(), mat);\n    target = target.parent;\n  }\n\n  return mat;\n}\n/**\n * Apply transform to an vertex.\n * @param {Array.<number>} target [x, y]\n * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\n *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n * @param {boolean=} invert Whether use invert matrix.\n * @return {Array.<number>} [x, y]\n */\n\n\nfunction applyTransform(target, transform, invert) {\n  if (transform && !zrUtil.isArrayLike(transform)) {\n    transform = Transformable.getLocalTransform(transform);\n  }\n\n  if (invert) {\n    transform = matrix.invert([], transform);\n  }\n\n  return vector.applyTransform([], target, transform);\n}\n/**\n * @param {string} direction 'left' 'right' 'top' 'bottom'\n * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n * @param {boolean=} invert Whether use invert matrix.\n * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n */\n\n\nfunction transformDirection(direction, transform, invert) {\n  // Pick a base, ensure that transform result will not be (0, 0).\n  var hBase = transform[4] === 0 || transform[5] === 0 || transform[0] === 0 ? 1 : Math.abs(2 * transform[4] / transform[0]);\n  var vBase = transform[4] === 0 || transform[5] === 0 || transform[2] === 0 ? 1 : Math.abs(2 * transform[4] / transform[2]);\n  var vertex = [direction === 'left' ? -hBase : direction === 'right' ? hBase : 0, direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0];\n  vertex = applyTransform(vertex, transform, invert);\n  return Math.abs(vertex[0]) > Math.abs(vertex[1]) ? vertex[0] > 0 ? 'right' : 'left' : vertex[1] > 0 ? 'bottom' : 'top';\n}\n/**\n * Apply group transition animation from g1 to g2.\n * If no animatableModel, no animation.\n */\n\n\nfunction groupTransition(g1, g2, animatableModel, cb) {\n  if (!g1 || !g2) {\n    return;\n  }\n\n  function getElMap(g) {\n    var elMap = {};\n    g.traverse(function (el) {\n      if (!el.isGroup && el.anid) {\n        elMap[el.anid] = el;\n      }\n    });\n    return elMap;\n  }\n\n  function getAnimatableProps(el) {\n    var obj = {\n      position: vector.clone(el.position),\n      rotation: el.rotation\n    };\n\n    if (el.shape) {\n      obj.shape = zrUtil.extend({}, el.shape);\n    }\n\n    return obj;\n  }\n\n  var elMap1 = getElMap(g1);\n  g2.traverse(function (el) {\n    if (!el.isGroup && el.anid) {\n      var oldEl = elMap1[el.anid];\n\n      if (oldEl) {\n        var newProp = getAnimatableProps(el);\n        el.attr(getAnimatableProps(oldEl));\n        updateProps(el, newProp, animatableModel, el.dataIndex);\n      } // else {\n      //     if (el.previousProps) {\n      //         graphic.updateProps\n      //     }\n      // }\n\n    }\n  });\n}\n/**\n * @param {Array.<Array.<number>>} points Like: [[23, 44], [53, 66], ...]\n * @param {Object} rect {x, y, width, height}\n * @return {Array.<Array.<number>>} A new clipped points.\n */\n\n\nfunction clipPointsByRect(points, rect) {\n  return zrUtil.map(points, function (point) {\n    var x = point[0];\n    x = mathMax(x, rect.x);\n    x = mathMin(x, rect.x + rect.width);\n    var y = point[1];\n    y = mathMax(y, rect.y);\n    y = mathMin(y, rect.y + rect.height);\n    return [x, y];\n  });\n}\n/**\n * @param {Object} targetRect {x, y, width, height}\n * @param {Object} rect {x, y, width, height}\n * @return {Object} A new clipped rect. If rect size are negative, return undefined.\n */\n\n\nfunction clipRectByRect(targetRect, rect) {\n  var x = mathMax(targetRect.x, rect.x);\n  var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\n  var y = mathMax(targetRect.y, rect.y);\n  var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height);\n\n  if (x2 >= x && y2 >= y) {\n    return {\n      x: x,\n      y: y,\n      width: x2 - x,\n      height: y2 - y\n    };\n  }\n}\n/**\n * @param {string} iconStr Support 'image://' or 'path://' or direct svg path.\n * @param {Object} [opt] Properties of `module:zrender/Element`, except `style`.\n * @param {Object} [rect] {x, y, width, height}\n * @return {module:zrender/Element} Icon path or image element.\n */\n\n\nfunction createIcon(iconStr, opt, rect) {\n  opt = zrUtil.extend({\n    rectHover: true\n  }, opt);\n  var style = opt.style = {\n    strokeNoScale: true\n  };\n  rect = rect || {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  };\n\n  if (iconStr) {\n    return iconStr.indexOf('image://') === 0 ? (style.image = iconStr.slice(8), zrUtil.defaults(style, rect), new Image(opt)) : makePath(iconStr.replace('path://', ''), opt, rect, 'center');\n  }\n}\n\nexports.extendShape = extendShape;\nexports.extendPath = extendPath;\nexports.makePath = makePath;\nexports.makeImage = makeImage;\nexports.mergePath = mergePath;\nexports.resizePath = resizePath;\nexports.subPixelOptimizeLine = subPixelOptimizeLine;\nexports.subPixelOptimizeRect = subPixelOptimizeRect;\nexports.subPixelOptimize = subPixelOptimize;\nexports.setHoverStyle = setHoverStyle;\nexports.setLabelStyle = setLabelStyle;\nexports.setTextStyle = setTextStyle;\nexports.setText = setText;\nexports.getFont = getFont;\nexports.updateProps = updateProps;\nexports.initProps = initProps;\nexports.getTransform = getTransform;\nexports.applyTransform = applyTransform;\nexports.transformDirection = transformDirection;\nexports.groupTransition = groupTransition;\nexports.clipPointsByRect = clipPointsByRect;\nexports.clipRectByRect = clipRectByRect;\nexports.createIcon = createIcon;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/graphic.js\n// module id = 980\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar RADIAN_EPSILON = 1e-4;\n\nfunction _trim(str) {\n  return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n}\n/**\n * Linear mapping a value from domain to range\n * @memberOf module:echarts/util/number\n * @param  {(number|Array.<number>)} val\n * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n * @param  {boolean} clamp\n * @return {(number|Array.<number>}\n */\n\n\nfunction linearMap(val, domain, range, clamp) {\n  var subDomain = domain[1] - domain[0];\n  var subRange = range[1] - range[0];\n\n  if (subDomain === 0) {\n    return subRange === 0 ? range[0] : (range[0] + range[1]) / 2;\n  } // Avoid accuracy problem in edge, such as\n  // 146.39 - 62.83 === 83.55999999999999.\n  // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n  // It is a little verbose for efficiency considering this method\n  // is a hotspot.\n\n\n  if (clamp) {\n    if (subDomain > 0) {\n      if (val <= domain[0]) {\n        return range[0];\n      } else if (val >= domain[1]) {\n        return range[1];\n      }\n    } else {\n      if (val >= domain[0]) {\n        return range[0];\n      } else if (val <= domain[1]) {\n        return range[1];\n      }\n    }\n  } else {\n    if (val === domain[0]) {\n      return range[0];\n    }\n\n    if (val === domain[1]) {\n      return range[1];\n    }\n  }\n\n  return (val - domain[0]) / subDomain * subRange + range[0];\n}\n/**\n * Convert a percent string to absolute number.\n * Returns NaN if percent is not a valid string or number\n * @memberOf module:echarts/util/number\n * @param {string|number} percent\n * @param {number} all\n * @return {number}\n */\n\n\nfunction parsePercent(percent, all) {\n  switch (percent) {\n    case 'center':\n    case 'middle':\n      percent = '50%';\n      break;\n\n    case 'left':\n    case 'top':\n      percent = '0%';\n      break;\n\n    case 'right':\n    case 'bottom':\n      percent = '100%';\n      break;\n  }\n\n  if (typeof percent === 'string') {\n    if (_trim(percent).match(/%$/)) {\n      return parseFloat(percent) / 100 * all;\n    }\n\n    return parseFloat(percent);\n  }\n\n  return percent == null ? NaN : +percent;\n}\n/**\n * (1) Fix rounding error of float numbers.\n * (2) Support return string to avoid scientific notation like '3.5e-7'.\n *\n * @param {number} x\n * @param {number} [precision]\n * @param {boolean} [returnStr]\n * @return {number|string}\n */\n\n\nfunction round(x, precision, returnStr) {\n  if (precision == null) {\n    precision = 10;\n  } // Avoid range error\n\n\n  precision = Math.min(Math.max(0, precision), 20);\n  x = (+x).toFixed(precision);\n  return returnStr ? x : +x;\n}\n\nfunction asc(arr) {\n  arr.sort(function (a, b) {\n    return a - b;\n  });\n  return arr;\n}\n/**\n * Get precision\n * @param {number} val\n */\n\n\nfunction getPrecision(val) {\n  val = +val;\n\n  if (isNaN(val)) {\n    return 0;\n  } // It is much faster than methods converting number to string as follows\n  //      var tmp = val.toString();\n  //      return tmp.length - 1 - tmp.indexOf('.');\n  // especially when precision is low\n\n\n  var e = 1;\n  var count = 0;\n\n  while (Math.round(val * e) / e !== val) {\n    e *= 10;\n    count++;\n  }\n\n  return count;\n}\n/**\n * @param {string|number} val\n * @return {number}\n */\n\n\nfunction getPrecisionSafe(val) {\n  var str = val.toString(); // Consider scientific notation: '3.4e-12' '3.4e+12'\n\n  var eIndex = str.indexOf('e');\n\n  if (eIndex > 0) {\n    var precision = +str.slice(eIndex + 1);\n    return precision < 0 ? -precision : 0;\n  } else {\n    var dotIndex = str.indexOf('.');\n    return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n  }\n}\n/**\n * Minimal dicernible data precisioin according to a single pixel.\n *\n * @param {Array.<number>} dataExtent\n * @param {Array.<number>} pixelExtent\n * @return {number} precision\n */\n\n\nfunction getPixelPrecision(dataExtent, pixelExtent) {\n  var log = Math.log;\n  var LN10 = Math.LN10;\n  var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n  var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10); // toFixed() digits argument must be between 0 and 20.\n\n  var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n  return !isFinite(precision) ? 20 : precision;\n}\n/**\n * Get a data of given precision, assuring the sum of percentages\n * in valueList is 1.\n * The largest remainer method is used.\n * https://en.wikipedia.org/wiki/Largest_remainder_method\n *\n * @param {Array.<number>} valueList a list of all data\n * @param {number} idx index of the data to be processed in valueList\n * @param {number} precision integer number showing digits of precision\n * @return {number} percent ranging from 0 to 100\n */\n\n\nfunction getPercentWithPrecision(valueList, idx, precision) {\n  if (!valueList[idx]) {\n    return 0;\n  }\n\n  var sum = zrUtil.reduce(valueList, function (acc, val) {\n    return acc + (isNaN(val) ? 0 : val);\n  }, 0);\n\n  if (sum === 0) {\n    return 0;\n  }\n\n  var digits = Math.pow(10, precision);\n  var votesPerQuota = zrUtil.map(valueList, function (val) {\n    return (isNaN(val) ? 0 : val) / sum * digits * 100;\n  });\n  var targetSeats = digits * 100;\n  var seats = zrUtil.map(votesPerQuota, function (votes) {\n    // Assign automatic seats.\n    return Math.floor(votes);\n  });\n  var currentSum = zrUtil.reduce(seats, function (acc, val) {\n    return acc + val;\n  }, 0);\n  var remainder = zrUtil.map(votesPerQuota, function (votes, idx) {\n    return votes - seats[idx];\n  }); // Has remainding votes.\n\n  while (currentSum < targetSeats) {\n    // Find next largest remainder.\n    var max = Number.NEGATIVE_INFINITY;\n    var maxId = null;\n\n    for (var i = 0, len = remainder.length; i < len; ++i) {\n      if (remainder[i] > max) {\n        max = remainder[i];\n        maxId = i;\n      }\n    } // Add a vote to max remainder.\n\n\n    ++seats[maxId];\n    remainder[maxId] = 0;\n    ++currentSum;\n  }\n\n  return seats[idx] / digits;\n} // Number.MAX_SAFE_INTEGER, ie do not support.\n\n\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * To 0 - 2 * PI, considering negative radian.\n * @param {number} radian\n * @return {number}\n */\n\nfunction remRadian(radian) {\n  var pi2 = Math.PI * 2;\n  return (radian % pi2 + pi2) % pi2;\n}\n/**\n * @param {type} radian\n * @return {boolean}\n */\n\n\nfunction isRadianAroundZero(val) {\n  return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n}\n\nvar TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n/**\n * @param {string|Date|number} value These values can be accepted:\n *   + An instance of Date, represent a time in its own time zone.\n *   + Or string in a subset of ISO 8601, only including:\n *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n *     all of which will be treated as local time if time zone is not specified\n *     (see <https://momentjs.com/>).\n *   + Or other string format, including (all of which will be treated as loacal time):\n *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n *   + a timestamp, which represent a time in UTC.\n * @return {Date} date\n */\n\nfunction parseDate(value) {\n  if (value instanceof Date) {\n    return value;\n  } else if (typeof value === 'string') {\n    // Different browsers parse date in different way, so we parse it manually.\n    // Some other issues:\n    // new Date('1970-01-01') is UTC,\n    // new Date('1970/01/01') and new Date('1970-1-01') is local.\n    // See issue #3623\n    var match = TIME_REG.exec(value);\n\n    if (!match) {\n      // return Invalid Date.\n      return new Date(NaN);\n    } // Use local time when no timezone offset specifed.\n\n\n    if (!match[8]) {\n      // match[n] can only be string or undefined.\n      // But take care of '12' + 1 => '121'.\n      return new Date(+match[1], +(match[2] || 1) - 1, +match[3] || 1, +match[4] || 0, +(match[5] || 0), +match[6] || 0, +match[7] || 0);\n    } // Timezoneoffset of Javascript Date has considered DST (Daylight Saving Time,\n    // https://tc39.github.io/ecma262/#sec-daylight-saving-time-adjustment).\n    // For example, system timezone is set as \"Time Zone: America/Toronto\",\n    // then these code will get different result:\n    // `new Date(1478411999999).getTimezoneOffset();  // get 240`\n    // `new Date(1478412000000).getTimezoneOffset();  // get 300`\n    // So we should not use `new Date`, but use `Date.UTC`.\n    else {\n        var hour = +match[4] || 0;\n\n        if (match[8].toUpperCase() !== 'Z') {\n          hour -= match[8].slice(0, 3);\n        }\n\n        return new Date(Date.UTC(+match[1], +(match[2] || 1) - 1, +match[3] || 1, hour, +(match[5] || 0), +match[6] || 0, +match[7] || 0));\n      }\n  } else if (value == null) {\n    return new Date(NaN);\n  }\n\n  return new Date(Math.round(value));\n}\n/**\n * Quantity of a number. e.g. 0.1, 1, 10, 100\n *\n * @param  {number} val\n * @return {number}\n */\n\n\nfunction quantity(val) {\n  return Math.pow(10, quantityExponent(val));\n}\n\nfunction quantityExponent(val) {\n  return Math.floor(Math.log(val) / Math.LN10);\n}\n/**\n * find a “nice” number approximately equal to x. Round the number if round = true,\n * take ceiling if round = false. The primary observation is that the “nicest”\n * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n *\n * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n *\n * @param  {number} val Non-negative value.\n * @param  {boolean} round\n * @return {number}\n */\n\n\nfunction nice(val, round) {\n  var exponent = quantityExponent(val);\n  var exp10 = Math.pow(10, exponent);\n  var f = val / exp10; // 1 <= f < 10\n\n  var nf;\n\n  if (round) {\n    if (f < 1.5) {\n      nf = 1;\n    } else if (f < 2.5) {\n      nf = 2;\n    } else if (f < 4) {\n      nf = 3;\n    } else if (f < 7) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  } else {\n    if (f < 1) {\n      nf = 1;\n    } else if (f < 2) {\n      nf = 2;\n    } else if (f < 3) {\n      nf = 3;\n    } else if (f < 5) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  }\n\n  val = nf * exp10; // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n  // 20 is the uppper bound of toFixed.\n\n  return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n}\n/**\n * Order intervals asc, and split them when overlap.\n * expect(numberUtil.reformIntervals([\n *     {interval: [18, 62], close: [1, 1]},\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [1, 1]},\n *     {interval: [62, 150], close: [1, 1]},\n *     {interval: [106, 150], close: [1, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ])).toEqual([\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [0, 1]},\n *     {interval: [18, 62], close: [0, 1]},\n *     {interval: [62, 150], close: [0, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ]);\n * @param {Array.<Object>} list, where `close` mean open or close\n *        of the interval, and Infinity can be used.\n * @return {Array.<Object>} The origin list, which has been reformed.\n */\n\n\nfunction reformIntervals(list) {\n  list.sort(function (a, b) {\n    return littleThan(a, b, 0) ? -1 : 1;\n  });\n  var curr = -Infinity;\n  var currClose = 1;\n\n  for (var i = 0; i < list.length;) {\n    var interval = list[i].interval;\n    var close = list[i].close;\n\n    for (var lg = 0; lg < 2; lg++) {\n      if (interval[lg] <= curr) {\n        interval[lg] = curr;\n        close[lg] = !lg ? 1 - currClose : 1;\n      }\n\n      curr = interval[lg];\n      currClose = close[lg];\n    }\n\n    if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n      list.splice(i, 1);\n    } else {\n      i++;\n    }\n  }\n\n  return list;\n\n  function littleThan(a, b, lg) {\n    return a.interval[lg] < b.interval[lg] || a.interval[lg] === b.interval[lg] && (a.close[lg] - b.close[lg] === (!lg ? 1 : -1) || !lg && littleThan(a, b, 1));\n  }\n}\n/**\n * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n * subtraction forces infinities to NaN\n *\n * @param {*} v\n * @return {boolean}\n */\n\n\nfunction isNumeric(v) {\n  return v - parseFloat(v) >= 0;\n}\n\nexports.linearMap = linearMap;\nexports.parsePercent = parsePercent;\nexports.round = round;\nexports.asc = asc;\nexports.getPrecision = getPrecision;\nexports.getPrecisionSafe = getPrecisionSafe;\nexports.getPixelPrecision = getPixelPrecision;\nexports.getPercentWithPrecision = getPercentWithPrecision;\nexports.MAX_SAFE_INTEGER = MAX_SAFE_INTEGER;\nexports.remRadian = remRadian;\nexports.isRadianAroundZero = isRadianAroundZero;\nexports.parseDate = parseDate;\nexports.quantity = quantity;\nexports.nice = nice;\nexports.reformIntervals = reformIntervals;\nexports.isNumeric = isNumeric;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/number.js\n// module id = 981\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar formatUtil = require(\"./format\");\n\nvar nubmerUtil = require(\"./number\");\n\nvar Model = require(\"../model/Model\");\n\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\n/**\n * If value is not array, then translate it to array.\n * @param  {*} value\n * @return {Array} [value] or value\n */\n\nfunction normalizeToArray(value) {\n  return value instanceof Array ? value : value == null ? [] : [value];\n}\n/**\n * Sync default option between normal and emphasis like `position` and `show`\n * In case some one will write code like\n *     label: {\n *         normal: {\n *             show: false,\n *             position: 'outside',\n *             fontSize: 18\n *         },\n *         emphasis: {\n *             show: true\n *         }\n *     }\n * @param {Object} opt\n * @param {Array.<string>} subOpts\n */\n\n\nfunction defaultEmphasis(opt, subOpts) {\n  if (opt) {\n    var emphasisOpt = opt.emphasis = opt.emphasis || {};\n    var normalOpt = opt.normal = opt.normal || {}; // Default emphasis option from normal\n\n    for (var i = 0, len = subOpts.length; i < len; i++) {\n      var subOptName = subOpts[i];\n\n      if (!emphasisOpt.hasOwnProperty(subOptName) && normalOpt.hasOwnProperty(subOptName)) {\n        emphasisOpt[subOptName] = normalOpt[subOptName];\n      }\n    }\n  }\n}\n\nvar TEXT_STYLE_OPTIONS = ['fontStyle', 'fontWeight', 'fontSize', 'fontFamily', 'rich', 'tag', 'color', 'textBorderColor', 'textBorderWidth', 'width', 'height', 'lineHeight', 'align', 'verticalAlign', 'baseline', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY', 'textShadowColor', 'textShadowBlur', 'textShadowOffsetX', 'textShadowOffsetY', 'backgroundColor', 'borderColor', 'borderWidth', 'borderRadius', 'padding']; // modelUtil.LABEL_OPTIONS = modelUtil.TEXT_STYLE_OPTIONS.concat([\n//     'position', 'offset', 'rotate', 'origin', 'show', 'distance', 'formatter',\n//     'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\n//     // FIXME: deprecated, check and remove it.\n//     'textStyle'\n// ]);\n\n/**\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method retieves value from data.\n * @param {string|number|Date|Array|Object} dataItem\n * @return {number|string|Date|Array.<number|string|Date>}\n */\n\nfunction getDataItemValue(dataItem) {\n  // Performance sensitive.\n  return dataItem && (dataItem.value == null ? dataItem : dataItem.value);\n}\n/**\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method determine if dataItem has extra option besides value\n * @param {string|number|Date|Array|Object} dataItem\n */\n\n\nfunction isDataItemOption(dataItem) {\n  return isObject(dataItem) && !(dataItem instanceof Array); // // markLine data can be array\n  // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n}\n/**\n * This helper method convert value in data.\n * @param {string|number|Date} value\n * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n */\n\n\nfunction converDataValue(value, dimInfo) {\n  // Performance sensitive.\n  var dimType = dimInfo && dimInfo.type;\n\n  if (dimType === 'ordinal') {\n    return value;\n  }\n\n  if (dimType === 'time' // spead up when using timestamp\n  && typeof value !== 'number' && value != null && value !== '-') {\n    value = +nubmerUtil.parseDate(value);\n  } // dimType defaults 'number'.\n  // If dimType is not ordinal and value is null or undefined or NaN or '-',\n  // parse to NaN.\n\n\n  return value == null || value === '' ? NaN : +value; // If string (like '-'), using '+' parse to NaN\n}\n/**\n * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.\n * @param {module:echarts/data/List} data\n * @param {Object} opt\n * @param {string} [opt.seriesIndex]\n * @param {Object} [opt.name]\n * @param {Object} [opt.mainType]\n * @param {Object} [opt.subType]\n */\n\n\nfunction createDataFormatModel(data, opt) {\n  var model = new Model();\n  zrUtil.mixin(model, dataFormatMixin);\n  model.seriesIndex = opt.seriesIndex;\n  model.name = opt.name || '';\n  model.mainType = opt.mainType;\n  model.subType = opt.subType;\n\n  model.getData = function () {\n    return data;\n  };\n\n  return model;\n} // PENDING A little ugly\n\n\nvar dataFormatMixin = {\n  /**\n   * Get params for formatter\n   * @param {number} dataIndex\n   * @param {string} [dataType]\n   * @return {Object}\n   */\n  getDataParams: function (dataIndex, dataType) {\n    var data = this.getData(dataType);\n    var rawValue = this.getRawValue(dataIndex, dataType);\n    var rawDataIndex = data.getRawIndex(dataIndex);\n    var name = data.getName(dataIndex, true);\n    var itemOpt = data.getRawDataItem(dataIndex);\n    var color = data.getItemVisual(dataIndex, 'color');\n    return {\n      componentType: this.mainType,\n      componentSubType: this.subType,\n      seriesType: this.mainType === 'series' ? this.subType : null,\n      seriesIndex: this.seriesIndex,\n      seriesId: this.id,\n      seriesName: this.name,\n      name: name,\n      dataIndex: rawDataIndex,\n      data: itemOpt,\n      dataType: dataType,\n      value: rawValue,\n      color: color,\n      marker: formatUtil.getTooltipMarker(color),\n      // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n      $vars: ['seriesName', 'name', 'value']\n    };\n  },\n\n  /**\n   * Format label\n   * @param {number} dataIndex\n   * @param {string} [status='normal'] 'normal' or 'emphasis'\n   * @param {string} [dataType]\n   * @param {number} [dimIndex]\n   * @param {string} [labelProp='label']\n   * @return {string}\n   */\n  getFormattedLabel: function (dataIndex, status, dataType, dimIndex, labelProp) {\n    status = status || 'normal';\n    var data = this.getData(dataType);\n    var itemModel = data.getItemModel(dataIndex);\n    var params = this.getDataParams(dataIndex, dataType);\n\n    if (dimIndex != null && params.value instanceof Array) {\n      params.value = params.value[dimIndex];\n    }\n\n    var formatter = itemModel.get([labelProp || 'label', status, 'formatter']);\n\n    if (typeof formatter === 'function') {\n      params.status = status;\n      return formatter(params);\n    } else if (typeof formatter === 'string') {\n      return formatUtil.formatTpl(formatter, params);\n    }\n  },\n\n  /**\n   * Get raw value in option\n   * @param {number} idx\n   * @param {string} [dataType]\n   * @return {Object}\n   */\n  getRawValue: function (idx, dataType) {\n    var data = this.getData(dataType);\n    var dataItem = data.getRawDataItem(idx);\n\n    if (dataItem != null) {\n      return isObject(dataItem) && !(dataItem instanceof Array) ? dataItem.value : dataItem;\n    }\n  },\n\n  /**\n   * Should be implemented.\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   * @return {string} tooltip string\n   */\n  formatTooltip: zrUtil.noop\n};\n/**\n * Mapping to exists for merge.\n *\n * @public\n * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n * @param {Object|Array.<Object>} newCptOptions\n * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          index of which is the same as exists.\n */\n\nfunction mappingToExists(exists, newCptOptions) {\n  // Mapping by the order by original option (but not order of\n  // new option) in merge mode. Because we should ensure\n  // some specified index (like xAxisIndex) is consistent with\n  // original option, which is easy to understand, espatially in\n  // media query. And in most case, merge option is used to\n  // update partial option but not be expected to change order.\n  newCptOptions = (newCptOptions || []).slice();\n  var result = zrUtil.map(exists || [], function (obj, index) {\n    return {\n      exist: obj\n    };\n  }); // Mapping by id or name if specified.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    } // id has highest priority.\n\n\n    for (var i = 0; i < result.length; i++) {\n      if (!result[i].option // Consider name: two map to one.\n      && cptOption.id != null && result[i].exist.id === cptOption.id + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n\n    for (var i = 0; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Consider name: two map to one.\n      // Can not match when both ids exist but different.\n      && (exist.id == null || cptOption.id == null) && cptOption.name != null && !isIdInner(cptOption) && !isIdInner(exist) && exist.name === cptOption.name + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n  }); // Otherwise mapping by index.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    }\n\n    var i = 0;\n\n    for (; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Existing model that already has id should be able to\n      // mapped to (because after mapping performed model may\n      // be assigned with a id, whish should not affect next\n      // mapping), except those has inner id.\n      && !isIdInner(exist) // Caution:\n      // Do not overwrite id. But name can be overwritten,\n      // because axis use name as 'show label text'.\n      // 'exist' always has id and name and we dont\n      // need to check it.\n      && cptOption.id == null) {\n        result[i].option = cptOption;\n        break;\n      }\n    }\n\n    if (i >= result.length) {\n      result.push({\n        option: cptOption\n      });\n    }\n  });\n  return result;\n}\n/**\n * Make id and name for mapping result (result of mappingToExists)\n * into `keyInfo` field.\n *\n * @public\n * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          which order is the same as exists.\n * @return {Array.<Object>} The input.\n */\n\n\nfunction makeIdAndName(mapResult) {\n  // We use this id to hash component models and view instances\n  // in echarts. id can be specified by user, or auto generated.\n  // The id generation rule ensures new view instance are able\n  // to mapped to old instance when setOption are called in\n  // no-merge mode. So we generate model id by name and plus\n  // type in view id.\n  // name can be duplicated among components, which is convenient\n  // to specify multi components (like series) by one name.\n  // Ensure that each id is distinct.\n  var idMap = zrUtil.createHashMap();\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    existCpt && idMap.set(existCpt.id, item);\n  });\n  each(mapResult, function (item, index) {\n    var opt = item.option;\n    zrUtil.assert(!opt || opt.id == null || !idMap.get(opt.id) || idMap.get(opt.id) === item, 'id duplicates: ' + (opt && opt.id));\n    opt && opt.id != null && idMap.set(opt.id, item);\n    !item.keyInfo && (item.keyInfo = {});\n  }); // Make name and id.\n\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    var opt = item.option;\n    var keyInfo = item.keyInfo;\n\n    if (!isObject(opt)) {\n      return;\n    } // name can be overwitten. Consider case: axis.name = '20km'.\n    // But id generated by name will not be changed, which affect\n    // only in that case: setOption with 'not merge mode' and view\n    // instance will be recreated, which can be accepted.\n\n\n    keyInfo.name = opt.name != null ? opt.name + '' : existCpt ? existCpt.name : '\\0-'; // name may be displayed on screen, so use '-'.\n\n    if (existCpt) {\n      keyInfo.id = existCpt.id;\n    } else if (opt.id != null) {\n      keyInfo.id = opt.id + '';\n    } else {\n      // Consider this situatoin:\n      //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n      //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n      // Series with the same name between optionA and optionB\n      // should be mapped.\n      var idNum = 0;\n\n      do {\n        keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n      } while (idMap.get(keyInfo.id));\n    }\n\n    idMap.set(keyInfo.id, item);\n  });\n}\n/**\n * @public\n * @param {Object} cptOption\n * @return {boolean}\n */\n\n\nfunction isIdInner(cptOption) {\n  return isObject(cptOption) && cptOption.id && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n}\n/**\n * A helper for removing duplicate items between batchA and batchB,\n * and in themselves, and categorize by series.\n *\n * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n */\n\n\nfunction compressBatches(batchA, batchB) {\n  var mapA = {};\n  var mapB = {};\n  makeMap(batchA || [], mapA);\n  makeMap(batchB || [], mapB, mapA);\n  return [mapToArray(mapA), mapToArray(mapB)];\n\n  function makeMap(sourceBatch, map, otherMap) {\n    for (var i = 0, len = sourceBatch.length; i < len; i++) {\n      var seriesId = sourceBatch[i].seriesId;\n      var dataIndices = normalizeToArray(sourceBatch[i].dataIndex);\n      var otherDataIndices = otherMap && otherMap[seriesId];\n\n      for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n        var dataIndex = dataIndices[j];\n\n        if (otherDataIndices && otherDataIndices[dataIndex]) {\n          otherDataIndices[dataIndex] = null;\n        } else {\n          (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n        }\n      }\n    }\n  }\n\n  function mapToArray(map, isData) {\n    var result = [];\n\n    for (var i in map) {\n      if (map.hasOwnProperty(i) && map[i] != null) {\n        if (isData) {\n          result.push(+i);\n        } else {\n          var dataIndices = mapToArray(map[i], true);\n          dataIndices.length && result.push({\n            seriesId: i,\n            dataIndex: dataIndices\n          });\n        }\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n *                         each of which can be Array or primary type.\n * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n */\n\n\nfunction queryDataIndex(data, payload) {\n  if (payload.dataIndexInside != null) {\n    return payload.dataIndexInside;\n  } else if (payload.dataIndex != null) {\n    return zrUtil.isArray(payload.dataIndex) ? zrUtil.map(payload.dataIndex, function (value) {\n      return data.indexOfRawIndex(value);\n    }) : data.indexOfRawIndex(payload.dataIndex);\n  } else if (payload.name != null) {\n    return zrUtil.isArray(payload.name) ? zrUtil.map(payload.name, function (value) {\n      return data.indexOfName(value);\n    }) : data.indexOfName(payload.name);\n  }\n}\n/**\n * Enable property storage to any host object.\n * Notice: Serialization is not supported.\n *\n * For example:\n * var get = modelUitl.makeGetter();\n *\n * function some(hostObj) {\n *      get(hostObj)._someProperty = 1212;\n *      ...\n * }\n *\n * @return {Function}\n */\n\n\nvar makeGetter = function () {\n  var index = 0;\n  return function () {\n    var key = '\\0__ec_prop_getter_' + index++;\n    return function (hostObj) {\n      return hostObj[key] || (hostObj[key] = {});\n    };\n  };\n}();\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex, seriesId, seriesName,\n *            geoIndex, geoId, geoName,\n *            bmapIndex, bmapId, bmapName,\n *            xAxisIndex, xAxisId, xAxisName,\n *            yAxisIndex, yAxisId, yAxisName,\n *            gridIndex, gridId, gridName,\n *            ... (can be extended)\n *        }\n *        Each properties can be number|string|Array.<number>|Array.<string>\n *        For example, a finder could be\n *        {\n *            seriesIndex: 3,\n *            geoId: ['aa', 'cc'],\n *            gridName: ['xx', 'rr']\n *        }\n *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n *        If nothing or null/undefined specified, return nothing.\n * @param {Object} [opt]\n * @param {string} [opt.defaultMainType]\n * @param {Array.<string>} [opt.includeMainTypes]\n * @return {Object} result like:\n *        {\n *            seriesModels: [seriesModel1, seriesModel2],\n *            seriesModel: seriesModel1, // The first model\n *            geoModels: [geoModel1, geoModel2],\n *            geoModel: geoModel1, // The first model\n *            ...\n *        }\n */\n\n\nfunction parseFinder(ecModel, finder, opt) {\n  if (zrUtil.isString(finder)) {\n    var obj = {};\n    obj[finder + 'Index'] = 0;\n    finder = obj;\n  }\n\n  var defaultMainType = opt && opt.defaultMainType;\n\n  if (defaultMainType && !has(finder, defaultMainType + 'Index') && !has(finder, defaultMainType + 'Id') && !has(finder, defaultMainType + 'Name')) {\n    finder[defaultMainType + 'Index'] = 0;\n  }\n\n  var result = {};\n  each(finder, function (value, key) {\n    var value = finder[key]; // Exclude 'dataIndex' and other illgal keys.\n\n    if (key === 'dataIndex' || key === 'dataIndexInside') {\n      result[key] = value;\n      return;\n    }\n\n    var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n    var mainType = parsedKey[1];\n    var queryType = (parsedKey[2] || '').toLowerCase();\n\n    if (!mainType || !queryType || value == null || queryType === 'index' && value === 'none' || opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0) {\n      return;\n    }\n\n    var queryParam = {\n      mainType: mainType\n    };\n\n    if (queryType !== 'index' || value !== 'all') {\n      queryParam[queryType] = value;\n    }\n\n    var models = ecModel.queryComponents(queryParam);\n    result[mainType + 'Models'] = models;\n    result[mainType + 'Model'] = models[0];\n  });\n  return result;\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n * @param {module:echarts/data/List} data\n * @param {string|number} dataDim\n * @return {string}\n */\n\n\nfunction dataDimToCoordDim(data, dataDim) {\n  var dimensions = data.dimensions;\n  dataDim = data.getDimension(dataDim);\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimItem = data.getDimensionInfo(dimensions[i]);\n\n    if (dimItem.name === dataDim) {\n      return dimItem.coordDim;\n    }\n  }\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n * @param {module:echarts/data/List} data\n * @param {string} coordDim\n * @return {Array.<string>} data dimensions on the coordDim.\n */\n\n\nfunction coordDimToDataDim(data, coordDim) {\n  var dataDim = [];\n  each(data.dimensions, function (dimName) {\n    var dimItem = data.getDimensionInfo(dimName);\n\n    if (dimItem.coordDim === coordDim) {\n      dataDim[dimItem.coordDimIndex] = dimItem.name;\n    }\n  });\n  return dataDim;\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n * @param {module:echarts/data/List} data\n * @param {string} otherDim Can be `otherDims`\n *                        like 'label' or 'tooltip'.\n * @return {Array.<string>} data dimensions on the otherDim.\n */\n\n\nfunction otherDimToDataDim(data, otherDim) {\n  var dataDim = [];\n  each(data.dimensions, function (dimName) {\n    var dimItem = data.getDimensionInfo(dimName);\n    var otherDims = dimItem.otherDims;\n    var dimIndex = otherDims[otherDim];\n\n    if (dimIndex != null && dimIndex !== false) {\n      dataDim[dimIndex] = dimItem.name;\n    }\n  });\n  return dataDim;\n}\n\nfunction has(obj, prop) {\n  return obj && obj.hasOwnProperty(prop);\n}\n\nexports.normalizeToArray = normalizeToArray;\nexports.defaultEmphasis = defaultEmphasis;\nexports.TEXT_STYLE_OPTIONS = TEXT_STYLE_OPTIONS;\nexports.getDataItemValue = getDataItemValue;\nexports.isDataItemOption = isDataItemOption;\nexports.converDataValue = converDataValue;\nexports.createDataFormatModel = createDataFormatModel;\nexports.dataFormatMixin = dataFormatMixin;\nexports.mappingToExists = mappingToExists;\nexports.makeIdAndName = makeIdAndName;\nexports.isIdInner = isIdInner;\nexports.compressBatches = compressBatches;\nexports.queryDataIndex = queryDataIndex;\nexports.makeGetter = makeGetter;\nexports.parseFinder = parseFinder;\nexports.dataDimToCoordDim = dataDimToCoordDim;\nexports.coordDimToDataDim = coordDimToDataDim;\nexports.otherDimToDataDim = otherDimToDataDim;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/model.js\n// module id = 982\n// module chunks = 0 1 2","// (1) The code `if (__DEV__) ...` can be removed by build tool.\n// (2) If intend to use `__DEV__`, this module should be imported. Use a global\n// variable `__DEV__` may cause that miss the declaration (see #6535), or the\n// declaration is behind of the using position (for example in `Model.extent`,\n// And tools like rollup can not analysis the dependency if not import).\nvar dev; // In browser\n\nif (typeof window !== 'undefined') {\n  dev = window.__DEV__;\n} // In node\nelse if (typeof global !== 'undefined') {\n    dev = global.__DEV__;\n  }\n\nif (typeof dev === 'undefined') {\n  dev = true;\n}\n\nvar __DEV__ = dev;\nexports.__DEV__ = __DEV__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/config.js\n// module id = 983\n// module chunks = 0 1 2","var ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * 创建一个向量\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @return {Vector2}\n */\n\nfunction create(x, y) {\n  var out = new ArrayCtor(2);\n\n  if (x == null) {\n    x = 0;\n  }\n\n  if (y == null) {\n    y = 0;\n  }\n\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * 复制向量数据\n * @param {Vector2} out\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction copy(out, v) {\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 克隆一个向量\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction clone(v) {\n  var out = new ArrayCtor(2);\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 设置向量的两个项\n * @param {Vector2} out\n * @param {number} a\n * @param {number} b\n * @return {Vector2} 结果\n */\n\n\nfunction set(out, a, b) {\n  out[0] = a;\n  out[1] = b;\n  return out;\n}\n/**\n * 向量相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction add(out, v1, v2) {\n  out[0] = v1[0] + v2[0];\n  out[1] = v1[1] + v2[1];\n  return out;\n}\n/**\n * 向量缩放后相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} a\n */\n\n\nfunction scaleAndAdd(out, v1, v2, a) {\n  out[0] = v1[0] + v2[0] * a;\n  out[1] = v1[1] + v2[1] * a;\n  return out;\n}\n/**\n * 向量相减\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction sub(out, v1, v2) {\n  out[0] = v1[0] - v2[0];\n  out[1] = v1[1] - v2[1];\n  return out;\n}\n/**\n * 向量长度\n * @param {Vector2} v\n * @return {number}\n */\n\n\nfunction len(v) {\n  return Math.sqrt(lenSquare(v));\n}\n\nvar length = len; // jshint ignore:line\n\n/**\n * 向量长度平方\n * @param {Vector2} v\n * @return {number}\n */\n\nfunction lenSquare(v) {\n  return v[0] * v[0] + v[1] * v[1];\n}\n\nvar lengthSquare = lenSquare;\n/**\n * 向量乘法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\nfunction mul(out, v1, v2) {\n  out[0] = v1[0] * v2[0];\n  out[1] = v1[1] * v2[1];\n  return out;\n}\n/**\n * 向量除法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction div(out, v1, v2) {\n  out[0] = v1[0] / v2[0];\n  out[1] = v1[1] / v2[1];\n  return out;\n}\n/**\n * 向量点乘\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction dot(v1, v2) {\n  return v1[0] * v2[0] + v1[1] * v2[1];\n}\n/**\n * 向量缩放\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {number} s\n */\n\n\nfunction scale(out, v, s) {\n  out[0] = v[0] * s;\n  out[1] = v[1] * s;\n  return out;\n}\n/**\n * 向量归一化\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\n\nfunction normalize(out, v) {\n  var d = len(v);\n\n  if (d === 0) {\n    out[0] = 0;\n    out[1] = 0;\n  } else {\n    out[0] = v[0] / d;\n    out[1] = v[1] / d;\n  }\n\n  return out;\n}\n/**\n * 计算向量间距离\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction distance(v1, v2) {\n  return Math.sqrt((v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]));\n}\n\nvar dist = distance;\n/**\n * 向量距离平方\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\nfunction distanceSquare(v1, v2) {\n  return (v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n}\n\nvar distSquare = distanceSquare;\n/**\n * 求负向量\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\nfunction negate(out, v) {\n  out[0] = -v[0];\n  out[1] = -v[1];\n  return out;\n}\n/**\n * 插值两个点\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} t\n */\n\n\nfunction lerp(out, v1, v2, t) {\n  out[0] = v1[0] + t * (v2[0] - v1[0]);\n  out[1] = v1[1] + t * (v2[1] - v1[1]);\n  return out;\n}\n/**\n * 矩阵左乘向量\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {Vector2} m\n */\n\n\nfunction applyTransform(out, v, m) {\n  var x = v[0];\n  var y = v[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\n * 求两个向量最小值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction min(out, v1, v2) {\n  out[0] = Math.min(v1[0], v2[0]);\n  out[1] = Math.min(v1[1], v2[1]);\n  return out;\n}\n/**\n * 求两个向量最大值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction max(out, v1, v2) {\n  out[0] = Math.max(v1[0], v2[0]);\n  out[1] = Math.max(v1[1], v2[1]);\n  return out;\n}\n\nexports.create = create;\nexports.copy = copy;\nexports.clone = clone;\nexports.set = set;\nexports.add = add;\nexports.scaleAndAdd = scaleAndAdd;\nexports.sub = sub;\nexports.len = len;\nexports.length = length;\nexports.lenSquare = lenSquare;\nexports.lengthSquare = lengthSquare;\nexports.mul = mul;\nexports.div = div;\nexports.dot = dot;\nexports.scale = scale;\nexports.normalize = normalize;\nexports.distance = distance;\nexports.dist = dist;\nexports.distanceSquare = distanceSquare;\nexports.distSquare = distSquare;\nexports.negate = negate;\nexports.lerp = lerp;\nexports.applyTransform = applyTransform;\nexports.min = min;\nexports.max = max;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/vector.js\n// module id = 984\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar numberUtil = require(\"./number\");\n\n/**\n * 每三位默认加,格式化\n * @param {string|number} x\n * @return {string}\n */\nfunction addCommas(x) {\n  if (isNaN(x)) {\n    return '-';\n  }\n\n  x = (x + '').split('.');\n  return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g, '$1,') + (x.length > 1 ? '.' + x[1] : '');\n}\n/**\n * @param {string} str\n * @param {boolean} [upperCaseFirst=false]\n * @return {string} str\n */\n\n\nfunction toCamelCase(str, upperCaseFirst) {\n  str = (str || '').toLowerCase().replace(/-(.)/g, function (match, group1) {\n    return group1.toUpperCase();\n  });\n\n  if (upperCaseFirst && str) {\n    str = str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  return str;\n}\n\nvar normalizeCssArray = zrUtil.normalizeCssArray;\n\nfunction encodeHTML(source) {\n  return String(source).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/'/g, '&#39;');\n}\n\nvar TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\nvar wrapVar = function (varName, seriesIdx) {\n  return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n};\n/**\n * Template formatter\n * @param {string} tpl\n * @param {Array.<Object>|Object} paramsList\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTpl(tpl, paramsList, encode) {\n  if (!zrUtil.isArray(paramsList)) {\n    paramsList = [paramsList];\n  }\n\n  var seriesLen = paramsList.length;\n\n  if (!seriesLen) {\n    return '';\n  }\n\n  var $vars = paramsList[0].$vars || [];\n\n  for (var i = 0; i < $vars.length; i++) {\n    var alias = TPL_VAR_ALIAS[i];\n    var val = wrapVar(alias, 0);\n    tpl = tpl.replace(wrapVar(alias), encode ? encodeHTML(val) : val);\n  }\n\n  for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n    for (var k = 0; k < $vars.length; k++) {\n      var val = paramsList[seriesIdx][$vars[k]];\n      tpl = tpl.replace(wrapVar(TPL_VAR_ALIAS[k], seriesIdx), encode ? encodeHTML(val) : val);\n    }\n  }\n\n  return tpl;\n}\n/**\n * simple Template formatter\n *\n * @param {string} tpl\n * @param {Object} param\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTplSimple(tpl, param, encode) {\n  zrUtil.each(param, function (value, key) {\n    tpl = tpl.replace('{' + key + '}', encode ? encodeHTML(value) : value);\n  });\n  return tpl;\n}\n/**\n * @param {string} color\n * @param {string} [extraCssText]\n * @return {string}\n */\n\n\nfunction getTooltipMarker(color, extraCssText) {\n  return color ? '<span style=\"display:inline-block;margin-right:5px;' + 'border-radius:10px;width:9px;height:9px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>' : '';\n}\n/**\n * @param {string} str\n * @return {string}\n * @inner\n */\n\n\nvar s2d = function (str) {\n  return str < 10 ? '0' + str : str;\n};\n/**\n * ISO Date format\n * @param {string} tpl\n * @param {number} value\n * @param {boolean} [isUTC=false] Default in local time.\n *           see `module:echarts/scale/Time`\n *           and `module:echarts/util/number#parseDate`.\n * @inner\n */\n\n\nfunction formatTime(tpl, value, isUTC) {\n  if (tpl === 'week' || tpl === 'month' || tpl === 'quarter' || tpl === 'half-year' || tpl === 'year') {\n    tpl = 'MM-dd\\nyyyy';\n  }\n\n  var date = numberUtil.parseDate(value);\n  var utc = isUTC ? 'UTC' : '';\n  var y = date['get' + utc + 'FullYear']();\n  var M = date['get' + utc + 'Month']() + 1;\n  var d = date['get' + utc + 'Date']();\n  var h = date['get' + utc + 'Hours']();\n  var m = date['get' + utc + 'Minutes']();\n  var s = date['get' + utc + 'Seconds']();\n  tpl = tpl.replace('MM', s2d(M)).replace('M', M).replace('yyyy', y).replace('yy', y % 100).replace('dd', s2d(d)).replace('d', d).replace('hh', s2d(h)).replace('h', h).replace('mm', s2d(m)).replace('m', m).replace('ss', s2d(s)).replace('s', s);\n  return tpl;\n}\n/**\n * Capital first\n * @param {string} str\n * @return {string}\n */\n\n\nfunction capitalFirst(str) {\n  return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n}\n\nvar truncateText = textContain.truncateText;\nvar getTextRect = textContain.getBoundingRect;\nexports.addCommas = addCommas;\nexports.toCamelCase = toCamelCase;\nexports.normalizeCssArray = normalizeCssArray;\nexports.encodeHTML = encodeHTML;\nexports.formatTpl = formatTpl;\nexports.formatTplSimple = formatTplSimple;\nexports.getTooltipMarker = getTooltipMarker;\nexports.formatTime = formatTime;\nexports.capitalFirst = capitalFirst;\nexports.truncateText = truncateText;\nexports.getTextRect = getTextRect;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/format.js\n// module id = 985\n// module chunks = 0 1 2","/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\nvar env = {};\n\nif (typeof navigator === 'undefined') {\n  // In node\n  env = {\n    browser: {},\n    os: {},\n    node: true,\n    // Assume canvas is supported\n    canvasSupported: true,\n    svgSupported: true\n  };\n} else {\n  env = detect(navigator.userAgent);\n}\n\nvar _default = env; // Zepto.js\n// (c) 2010-2013 Thomas Fuchs\n// Zepto.js may be freely distributed under the MIT license.\n\nfunction detect(ua) {\n  var os = {};\n  var browser = {}; // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n  // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n  // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n  // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n  // var touchpad = webos && ua.match(/TouchPad/);\n  // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n  // var silk = ua.match(/Silk\\/([\\d._]+)/);\n  // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n  // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n  // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n  // var playbook = ua.match(/PlayBook/);\n  // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n\n  var firefox = ua.match(/Firefox\\/([\\d.]+)/); // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n  // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n\n  var ie = ua.match(/MSIE\\s([\\d.]+)/) // IE 11 Trident/7.0; rv:11.0\n  || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n  var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n  var weChat = /micromessenger/i.test(ua); // Todo: clean this up with a better OS/browser seperation:\n  // - discern (more) between multiple browsers on android\n  // - decide if kindle fire in silk mode is android or not\n  // - Firefox on Android doesn't specify the Android version\n  // - possibly devide in os, device and browser hashes\n  // if (browser.webkit = !!webkit) browser.version = webkit[1];\n  // if (android) os.android = true, os.version = android[2];\n  // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n  // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n  // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n  // if (webos) os.webos = true, os.version = webos[2];\n  // if (touchpad) os.touchpad = true;\n  // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n  // if (bb10) os.bb10 = true, os.version = bb10[2];\n  // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n  // if (playbook) browser.playbook = true;\n  // if (kindle) os.kindle = true, os.version = kindle[1];\n  // if (silk) browser.silk = true, browser.version = silk[1];\n  // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n  // if (chrome) browser.chrome = true, browser.version = chrome[1];\n\n  if (firefox) {\n    browser.firefox = true;\n    browser.version = firefox[1];\n  } // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n  // if (webview) browser.webview = true;\n\n\n  if (ie) {\n    browser.ie = true;\n    browser.version = ie[1];\n  }\n\n  if (edge) {\n    browser.edge = true;\n    browser.version = edge[1];\n  } // It is difficult to detect WeChat in Win Phone precisely, because ua can\n  // not be set on win phone. So we do not consider Win Phone.\n\n\n  if (weChat) {\n    browser.weChat = true;\n  } // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n  //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n  // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n  //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n  //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n\n  return {\n    browser: browser,\n    os: os,\n    node: false,\n    // 原生canvas支持，改极端点了\n    // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n    canvasSupported: !!document.createElement('canvas').getContext,\n    svgSupported: typeof SVGRect !== 'undefined',\n    // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\n    // works on most browsers\n    // IE10/11 does not support touch event, and MS Edge supports them but not by\n    // default, so we dont check navigator.maxTouchPoints for them here.\n    touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n    // <http://caniuse.com/#search=pointer%20event>.\n    pointerEventsSupported: 'onpointerdown' in window // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n    // events currently. So we dont use that on other browsers unless tested sufficiently.\n    // Although IE 10 supports pointer event, it use old style and is different from the\n    // standard. So we exclude that. (IE 10 is hardly used on touch device)\n    && (browser.edge || browser.ie && browser.version >= 11)\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/env.js\n// module id = 986\n// module chunks = 0 1 2","var vec2 = require(\"./vector\");\n\nvar matrix = require(\"./matrix\");\n\n/**\n * @module echarts/core/BoundingRect\n */\nvar v2ApplyTransform = vec2.applyTransform;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\n/**\n * @alias module:echarts/core/BoundingRect\n */\n\nfunction BoundingRect(x, y, width, height) {\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n  /**\n   * @type {number}\n   */\n\n\n  this.x = x;\n  /**\n   * @type {number}\n   */\n\n  this.y = y;\n  /**\n   * @type {number}\n   */\n\n  this.width = width;\n  /**\n   * @type {number}\n   */\n\n  this.height = height;\n}\n\nBoundingRect.prototype = {\n  constructor: BoundingRect,\n\n  /**\n   * @param {module:echarts/core/BoundingRect} other\n   */\n  union: function (other) {\n    var x = mathMin(other.x, this.x);\n    var y = mathMin(other.y, this.y);\n    this.width = mathMax(other.x + other.width, this.x + this.width) - x;\n    this.height = mathMax(other.y + other.height, this.y + this.height) - y;\n    this.x = x;\n    this.y = y;\n  },\n\n  /**\n   * @param {Array.<number>} m\n   * @methods\n   */\n  applyTransform: function () {\n    var lt = [];\n    var rb = [];\n    var lb = [];\n    var rt = [];\n    return function (m) {\n      // In case usage like this\n      // el.getBoundingRect().applyTransform(el.transform)\n      // And element has no transform\n      if (!m) {\n        return;\n      }\n\n      lt[0] = lb[0] = this.x;\n      lt[1] = rt[1] = this.y;\n      rb[0] = rt[0] = this.x + this.width;\n      rb[1] = lb[1] = this.y + this.height;\n      v2ApplyTransform(lt, lt, m);\n      v2ApplyTransform(rb, rb, m);\n      v2ApplyTransform(lb, lb, m);\n      v2ApplyTransform(rt, rt, m);\n      this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n      this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n      var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n      var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n      this.width = maxX - this.x;\n      this.height = maxY - this.y;\n    };\n  }(),\n\n  /**\n   * Calculate matrix of transforming from self to target rect\n   * @param  {module:zrender/core/BoundingRect} b\n   * @return {Array.<number>}\n   */\n  calculateTransform: function (b) {\n    var a = this;\n    var sx = b.width / a.width;\n    var sy = b.height / a.height;\n    var m = matrix.create(); // 矩阵右乘\n\n    matrix.translate(m, m, [-a.x, -a.y]);\n    matrix.scale(m, m, [sx, sy]);\n    matrix.translate(m, m, [b.x, b.y]);\n    return m;\n  },\n\n  /**\n   * @param {(module:echarts/core/BoundingRect|Object)} b\n   * @return {boolean}\n   */\n  intersect: function (b) {\n    if (!b) {\n      return false;\n    }\n\n    if (!(b instanceof BoundingRect)) {\n      // Normalize negative width/height.\n      b = BoundingRect.create(b);\n    }\n\n    var a = this;\n    var ax0 = a.x;\n    var ax1 = a.x + a.width;\n    var ay0 = a.y;\n    var ay1 = a.y + a.height;\n    var bx0 = b.x;\n    var bx1 = b.x + b.width;\n    var by0 = b.y;\n    var by1 = b.y + b.height;\n    return !(ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n  },\n  contain: function (x, y) {\n    var rect = this;\n    return x >= rect.x && x <= rect.x + rect.width && y >= rect.y && y <= rect.y + rect.height;\n  },\n\n  /**\n   * @return {module:echarts/core/BoundingRect}\n   */\n  clone: function () {\n    return new BoundingRect(this.x, this.y, this.width, this.height);\n  },\n\n  /**\n   * Copy from another rect\n   */\n  copy: function (other) {\n    this.x = other.x;\n    this.y = other.y;\n    this.width = other.width;\n    this.height = other.height;\n  },\n  plain: function () {\n    return {\n      x: this.x,\n      y: this.y,\n      width: this.width,\n      height: this.height\n    };\n  }\n};\n/**\n * @param {Object|module:zrender/core/BoundingRect} rect\n * @param {number} rect.x\n * @param {number} rect.y\n * @param {number} rect.width\n * @param {number} rect.height\n * @return {module:zrender/core/BoundingRect}\n */\n\nBoundingRect.create = function (rect) {\n  return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n};\n\nvar _default = BoundingRect;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/BoundingRect.js\n// module id = 987\n// module chunks = 0 1 2","var Displayable = require(\"./Displayable\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar pathContain = require(\"../contain/path\");\n\nvar Pattern = require(\"./Pattern\");\n\nvar getCanvasPattern = Pattern.prototype.getCanvasPattern;\nvar abs = Math.abs;\nvar pathProxyForDraw = new PathProxy(true);\n/**\n * @alias module:zrender/graphic/Path\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\n\nfunction Path(opts) {\n  Displayable.call(this, opts);\n  /**\n   * @type {module:zrender/core/PathProxy}\n   * @readOnly\n   */\n\n  this.path = null;\n}\n\nPath.prototype = {\n  constructor: Path,\n  type: 'path',\n  __dirtyPath: true,\n  strokeContainThreshold: 5,\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var path = this.path || pathProxyForDraw;\n    var hasStroke = style.hasStroke();\n    var hasFill = style.hasFill();\n    var fill = style.fill;\n    var stroke = style.stroke;\n    var hasFillGradient = hasFill && !!fill.colorStops;\n    var hasStrokeGradient = hasStroke && !!stroke.colorStops;\n    var hasFillPattern = hasFill && !!fill.image;\n    var hasStrokePattern = hasStroke && !!stroke.image;\n    style.bind(ctx, this, prevEl);\n    this.setTransform(ctx);\n\n    if (this.__dirty) {\n      var rect; // Update gradient because bounding rect may changed\n\n      if (hasFillGradient) {\n        rect = rect || this.getBoundingRect();\n        this._fillGradient = style.getGradient(ctx, fill, rect);\n      }\n\n      if (hasStrokeGradient) {\n        rect = rect || this.getBoundingRect();\n        this._strokeGradient = style.getGradient(ctx, stroke, rect);\n      }\n    } // Use the gradient or pattern\n\n\n    if (hasFillGradient) {\n      // PENDING If may have affect the state\n      ctx.fillStyle = this._fillGradient;\n    } else if (hasFillPattern) {\n      ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n    }\n\n    if (hasStrokeGradient) {\n      ctx.strokeStyle = this._strokeGradient;\n    } else if (hasStrokePattern) {\n      ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n    }\n\n    var lineDash = style.lineDash;\n    var lineDashOffset = style.lineDashOffset;\n    var ctxLineDash = !!ctx.setLineDash; // Update path sx, sy\n\n    var scale = this.getGlobalScale();\n    path.setScale(scale[0], scale[1]); // Proxy context\n    // Rebuild path in following 2 cases\n    // 1. Path is dirty\n    // 2. Path needs javascript implemented lineDash stroking.\n    //    In this case, lineDash information will not be saved in PathProxy\n\n    if (this.__dirtyPath || lineDash && !ctxLineDash && hasStroke) {\n      path.beginPath(ctx); // Setting line dash before build path\n\n      if (lineDash && !ctxLineDash) {\n        path.setLineDash(lineDash);\n        path.setLineDashOffset(lineDashOffset);\n      }\n\n      this.buildPath(path, this.shape, false); // Clear path dirty flag\n\n      if (this.path) {\n        this.__dirtyPath = false;\n      }\n    } else {\n      // Replay path building\n      ctx.beginPath();\n      this.path.rebuildPath(ctx);\n    }\n\n    hasFill && path.fill(ctx);\n\n    if (lineDash && ctxLineDash) {\n      ctx.setLineDash(lineDash);\n      ctx.lineDashOffset = lineDashOffset;\n    }\n\n    hasStroke && path.stroke(ctx);\n\n    if (lineDash && ctxLineDash) {\n      // PENDING\n      // Remove lineDash\n      ctx.setLineDash([]);\n    }\n\n    this.restoreTransform(ctx); // Draw rect text\n\n    if (style.text != null) {\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n  // Like in circle\n  buildPath: function (ctx, shapeCfg, inBundle) {},\n  createPathProxy: function () {\n    this.path = new PathProxy();\n  },\n  getBoundingRect: function () {\n    var rect = this._rect;\n    var style = this.style;\n    var needsUpdateRect = !rect;\n\n    if (needsUpdateRect) {\n      var path = this.path;\n\n      if (!path) {\n        // Create path on demand.\n        path = this.path = new PathProxy();\n      }\n\n      if (this.__dirtyPath) {\n        path.beginPath();\n        this.buildPath(path, this.shape, false);\n      }\n\n      rect = path.getBoundingRect();\n    }\n\n    this._rect = rect;\n\n    if (style.hasStroke()) {\n      // Needs update rect with stroke lineWidth when\n      // 1. Element changes scale or lineWidth\n      // 2. Shape is changed\n      var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n\n      if (this.__dirty || needsUpdateRect) {\n        rectWithStroke.copy(rect); // FIXME Must after updateTransform\n\n        var w = style.lineWidth; // PENDING, Min line width is needed when line is horizontal or vertical\n\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Only add extra hover lineWidth when there are no fill\n\n        if (!style.hasFill()) {\n          w = Math.max(w, this.strokeContainThreshold || 4);\n        } // Consider line width\n        // Line scale can't be 0;\n\n\n        if (lineScale > 1e-10) {\n          rectWithStroke.width += w / lineScale;\n          rectWithStroke.height += w / lineScale;\n          rectWithStroke.x -= w / lineScale / 2;\n          rectWithStroke.y -= w / lineScale / 2;\n        }\n      } // Return rect with stroke\n\n\n      return rectWithStroke;\n    }\n\n    return rect;\n  },\n  contain: function (x, y) {\n    var localPos = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    var style = this.style;\n    x = localPos[0];\n    y = localPos[1];\n\n    if (rect.contain(x, y)) {\n      var pathData = this.path.data;\n\n      if (style.hasStroke()) {\n        var lineWidth = style.lineWidth;\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Line scale can't be 0;\n\n        if (lineScale > 1e-10) {\n          // Only add extra hover lineWidth when there are no fill\n          if (!style.hasFill()) {\n            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n          }\n\n          if (pathContain.containStroke(pathData, lineWidth / lineScale, x, y)) {\n            return true;\n          }\n        }\n      }\n\n      if (style.hasFill()) {\n        return pathContain.contain(pathData, x, y);\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * @param  {boolean} dirtyPath\n   */\n  dirty: function (dirtyPath) {\n    if (dirtyPath == null) {\n      dirtyPath = true;\n    } // Only mark dirty, not mark clean\n\n\n    if (dirtyPath) {\n      this.__dirtyPath = dirtyPath;\n      this._rect = null;\n    }\n\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh(); // Used as a clipping path\n\n    if (this.__clipTarget) {\n      this.__clipTarget.dirty();\n    }\n  },\n\n  /**\n   * Alias for animate('shape')\n   * @param {boolean} loop\n   */\n  animateShape: function (loop) {\n    return this.animate('shape', loop);\n  },\n  // Overwrite attrKV\n  attrKV: function (key, value) {\n    // FIXME\n    if (key === 'shape') {\n      this.setShape(value);\n      this.__dirtyPath = true;\n      this._rect = null;\n    } else {\n      Displayable.prototype.attrKV.call(this, key, value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setShape: function (key, value) {\n    var shape = this.shape; // Path from string may not have shape\n\n    if (shape) {\n      if (zrUtil.isObject(key)) {\n        for (var name in key) {\n          if (key.hasOwnProperty(name)) {\n            shape[name] = key[name];\n          }\n        }\n      } else {\n        shape[key] = value;\n      }\n\n      this.dirty(true);\n    }\n\n    return this;\n  },\n  getLineScale: function () {\n    var m = this.transform; // Get the line scale.\n    // Determinant of `m` means how much the area is enlarged by the\n    // transformation. So its square root can be used as a scale factor\n    // for width.\n\n    return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10 ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1])) : 1;\n  }\n};\n/**\n * 扩展一个 Path element, 比如星形，圆等。\n * Extend a path element\n * @param {Object} props\n * @param {string} props.type Path type\n * @param {Function} props.init Initialize\n * @param {Function} props.buildPath Overwrite buildPath method\n * @param {Object} [props.style] Extended default style config\n * @param {Object} [props.shape] Extended default shape config\n */\n\nPath.extend = function (defaults) {\n  var Sub = function (opts) {\n    Path.call(this, opts);\n\n    if (defaults.style) {\n      // Extend default style\n      this.style.extendFrom(defaults.style, false);\n    } // Extend default shape\n\n\n    var defaultShape = defaults.shape;\n\n    if (defaultShape) {\n      this.shape = this.shape || {};\n      var thisShape = this.shape;\n\n      for (var name in defaultShape) {\n        if (!thisShape.hasOwnProperty(name) && defaultShape.hasOwnProperty(name)) {\n          thisShape[name] = defaultShape[name];\n        }\n      }\n    }\n\n    defaults.init && defaults.init.call(this, opts);\n  };\n\n  zrUtil.inherits(Sub, Path); // FIXME 不能 extend position, rotation 等引用对象\n\n  for (var name in defaults) {\n    // Extending prototype values and methods\n    if (name !== 'style' && name !== 'shape') {\n      Sub.prototype[name] = defaults[name];\n    }\n  }\n\n  return Sub;\n};\n\nzrUtil.inherits(Path, Displayable);\nvar _default = Path;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/Path.js\n// module id = 988\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\nvar lineStyleMixin = require(\"./mixin/lineStyle\");\n\nvar areaStyleMixin = require(\"./mixin/areaStyle\");\n\nvar textStyleMixin = require(\"./mixin/textStyle\");\n\nvar itemStyleMixin = require(\"./mixin/itemStyle\");\n\n/**\n * @module echarts/model/Model\n */\nvar mixin = zrUtil.mixin;\n/**\n * @alias module:echarts/model/Model\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} [parentModel]\n * @param {module:echarts/model/Global} [ecModel]\n */\n\nfunction Model(option, parentModel, ecModel) {\n  /**\n   * @type {module:echarts/model/Model}\n   * @readOnly\n   */\n  this.parentModel = parentModel;\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n\n  this.ecModel = ecModel;\n  /**\n   * @type {Object}\n   * @protected\n   */\n\n  this.option = option; // Simple optimization\n  // if (this.init) {\n  //     if (arguments.length <= 4) {\n  //         this.init(option, parentModel, ecModel, extraOpt);\n  //     }\n  //     else {\n  //         this.init.apply(this, arguments);\n  //     }\n  // }\n}\n\nModel.prototype = {\n  constructor: Model,\n\n  /**\n   * Model 的初始化函数\n   * @param {Object} option\n   */\n  init: null,\n\n  /**\n   * 从新的 Option merge\n   */\n  mergeOption: function (option) {\n    zrUtil.merge(this.option, option, true);\n  },\n\n  /**\n   * @param {string|Array.<string>} path\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  get: function (path, ignoreParent) {\n    if (path == null) {\n      return this.option;\n    }\n\n    return doGet(this.option, this.parsePath(path), !ignoreParent && getParent(this, path));\n  },\n\n  /**\n   * @param {string} key\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  getShallow: function (key, ignoreParent) {\n    var option = this.option;\n    var val = option == null ? option : option[key];\n    var parentModel = !ignoreParent && getParent(this, key);\n\n    if (val == null && parentModel) {\n      val = parentModel.getShallow(key);\n    }\n\n    return val;\n  },\n\n  /**\n   * @param {string|Array.<string>} [path]\n   * @param {module:echarts/model/Model} [parentModel]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path, parentModel) {\n    var obj = path == null ? this.option : doGet(this.option, path = this.parsePath(path));\n    var thisParentModel;\n    parentModel = parentModel || (thisParentModel = getParent(this, path)) && thisParentModel.getModel(path);\n    return new Model(obj, parentModel, this.ecModel);\n  },\n\n  /**\n   * If model has option\n   */\n  isEmpty: function () {\n    return this.option == null;\n  },\n  restoreData: function () {},\n  // Pending\n  clone: function () {\n    var Ctor = this.constructor;\n    return new Ctor(zrUtil.clone(this.option));\n  },\n  setReadOnly: function (properties) {\n    clazzUtil.setReadOnly(this, properties);\n  },\n  // If path is null/undefined, return null/undefined.\n  parsePath: function (path) {\n    if (typeof path === 'string') {\n      path = path.split('.');\n    }\n\n    return path;\n  },\n\n  /**\n   * @param {Function} getParentMethod\n   *        param {Array.<string>|string} path\n   *        return {module:echarts/model/Model}\n   */\n  customizeGetParent: function (getParentMethod) {\n    clazzUtil.set(this, 'getParent', getParentMethod);\n  },\n  isAnimationEnabled: function () {\n    if (!env.node) {\n      if (this.option.animation != null) {\n        return !!this.option.animation;\n      } else if (this.parentModel) {\n        return this.parentModel.isAnimationEnabled();\n      }\n    }\n  }\n};\n\nfunction doGet(obj, pathArr, parentModel) {\n  for (var i = 0; i < pathArr.length; i++) {\n    // Ignore empty\n    if (!pathArr[i]) {\n      continue;\n    } // obj could be number/string/... (like 0)\n\n\n    obj = obj && typeof obj === 'object' ? obj[pathArr[i]] : null;\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  if (obj == null && parentModel) {\n    obj = parentModel.get(pathArr);\n  }\n\n  return obj;\n} // `path` can be null/undefined\n\n\nfunction getParent(model, path) {\n  var getParentMethod = clazzUtil.get(model, 'getParent');\n  return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n} // Enable Model.extend.\n\n\nclazzUtil.enableClassExtend(Model);\nmixin(Model, lineStyleMixin);\nmixin(Model, areaStyleMixin);\nmixin(Model, textStyleMixin);\nmixin(Model, itemStyleMixin);\nvar _default = Model;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/Model.js\n// module id = 989\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _number = require(\"./number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar formatUtil = require(\"./format\");\n\n// Layout helpers for each component positioning\nvar each = zrUtil.each;\n/**\n * @public\n */\n\nvar LOCATION_PARAMS = ['left', 'right', 'top', 'bottom', 'width', 'height'];\n/**\n * @public\n */\n\nvar HV_NAMES = [['width', 'left', 'right'], ['height', 'top', 'bottom']];\n\nfunction boxLayout(orient, group, gap, maxWidth, maxHeight) {\n  var x = 0;\n  var y = 0;\n\n  if (maxWidth == null) {\n    maxWidth = Infinity;\n  }\n\n  if (maxHeight == null) {\n    maxHeight = Infinity;\n  }\n\n  var currentLineMaxSize = 0;\n  group.eachChild(function (child, idx) {\n    var position = child.position;\n    var rect = child.getBoundingRect();\n    var nextChild = group.childAt(idx + 1);\n    var nextChildRect = nextChild && nextChild.getBoundingRect();\n    var nextX;\n    var nextY;\n\n    if (orient === 'horizontal') {\n      var moveX = rect.width + (nextChildRect ? -nextChildRect.x + rect.x : 0);\n      nextX = x + moveX; // Wrap when width exceeds maxWidth or meet a `newline` group\n      // FIXME compare before adding gap?\n\n      if (nextX > maxWidth || child.newline) {\n        x = 0;\n        nextX = moveX;\n        y += currentLineMaxSize + gap;\n        currentLineMaxSize = rect.height;\n      } else {\n        // FIXME: consider rect.y is not `0`?\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n      }\n    } else {\n      var moveY = rect.height + (nextChildRect ? -nextChildRect.y + rect.y : 0);\n      nextY = y + moveY; // Wrap when width exceeds maxHeight or meet a `newline` group\n\n      if (nextY > maxHeight || child.newline) {\n        x += currentLineMaxSize + gap;\n        y = 0;\n        nextY = moveY;\n        currentLineMaxSize = rect.width;\n      } else {\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n      }\n    }\n\n    if (child.newline) {\n      return;\n    }\n\n    position[0] = x;\n    position[1] = y;\n    orient === 'horizontal' ? x = nextX + gap : y = nextY + gap;\n  });\n}\n/**\n * VBox or HBox layouting\n * @param {string} orient\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\n\nvar box = boxLayout;\n/**\n * VBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar vbox = zrUtil.curry(boxLayout, 'vertical');\n/**\n * HBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar hbox = zrUtil.curry(boxLayout, 'horizontal');\n/**\n * If x or x2 is not specified or 'center' 'left' 'right',\n * the width would be as long as possible.\n * If y or y2 is not specified or 'middle' 'top' 'bottom',\n * the height would be as long as possible.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.x]\n * @param {number|string} [positionInfo.y]\n * @param {number|string} [positionInfo.x2]\n * @param {number|string} [positionInfo.y2]\n * @param {Object} containerRect {width, height}\n * @param {string|number} margin\n * @return {Object} {width, height}\n */\n\nfunction getAvailableSize(positionInfo, containerRect, margin) {\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var x = parsePercent(positionInfo.x, containerWidth);\n  var y = parsePercent(positionInfo.y, containerHeight);\n  var x2 = parsePercent(positionInfo.x2, containerWidth);\n  var y2 = parsePercent(positionInfo.y2, containerHeight);\n  (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n  (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n  (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n  (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  return {\n    width: Math.max(x2 - x - margin[1] - margin[3], 0),\n    height: Math.max(y2 - y - margin[0] - margin[2], 0)\n  };\n}\n/**\n * Parse position info.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width]\n * @param {number|string} [positionInfo.height]\n * @param {number|string} [positionInfo.aspect] Aspect is width / height\n * @param {Object} containerRect\n * @param {string|number} [margin]\n *\n * @return {module:zrender/core/BoundingRect}\n */\n\n\nfunction getLayoutRect(positionInfo, containerRect, margin) {\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var left = parsePercent(positionInfo.left, containerWidth);\n  var top = parsePercent(positionInfo.top, containerHeight);\n  var right = parsePercent(positionInfo.right, containerWidth);\n  var bottom = parsePercent(positionInfo.bottom, containerHeight);\n  var width = parsePercent(positionInfo.width, containerWidth);\n  var height = parsePercent(positionInfo.height, containerHeight);\n  var verticalMargin = margin[2] + margin[0];\n  var horizontalMargin = margin[1] + margin[3];\n  var aspect = positionInfo.aspect; // If width is not specified, calculate width from left and right\n\n  if (isNaN(width)) {\n    width = containerWidth - right - horizontalMargin - left;\n  }\n\n  if (isNaN(height)) {\n    height = containerHeight - bottom - verticalMargin - top;\n  }\n\n  if (aspect != null) {\n    // If width and height are not given\n    // 1. Graph should not exceeds the container\n    // 2. Aspect must be keeped\n    // 3. Graph should take the space as more as possible\n    // FIXME\n    // Margin is not considered, because there is no case that both\n    // using margin and aspect so far.\n    if (isNaN(width) && isNaN(height)) {\n      if (aspect > containerWidth / containerHeight) {\n        width = containerWidth * 0.8;\n      } else {\n        height = containerHeight * 0.8;\n      }\n    } // Calculate width or height with given aspect\n\n\n    if (isNaN(width)) {\n      width = aspect * height;\n    }\n\n    if (isNaN(height)) {\n      height = width / aspect;\n    }\n  } // If left is not specified, calculate left from right and width\n\n\n  if (isNaN(left)) {\n    left = containerWidth - right - width - horizontalMargin;\n  }\n\n  if (isNaN(top)) {\n    top = containerHeight - bottom - height - verticalMargin;\n  } // Align left and top\n\n\n  switch (positionInfo.left || positionInfo.right) {\n    case 'center':\n      left = containerWidth / 2 - width / 2 - margin[3];\n      break;\n\n    case 'right':\n      left = containerWidth - width - horizontalMargin;\n      break;\n  }\n\n  switch (positionInfo.top || positionInfo.bottom) {\n    case 'middle':\n    case 'center':\n      top = containerHeight / 2 - height / 2 - margin[0];\n      break;\n\n    case 'bottom':\n      top = containerHeight - height - verticalMargin;\n      break;\n  } // If something is wrong and left, top, width, height are calculated as NaN\n\n\n  left = left || 0;\n  top = top || 0;\n\n  if (isNaN(width)) {\n    // Width may be NaN if only one value is given except width\n    width = containerWidth - horizontalMargin - left - (right || 0);\n  }\n\n  if (isNaN(height)) {\n    // Height may be NaN if only one value is given except height\n    height = containerHeight - verticalMargin - top - (bottom || 0);\n  }\n\n  var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n  rect.margin = margin;\n  return rect;\n}\n/**\n * Position a zr element in viewport\n *  Group position is specified by either\n *  {left, top}, {right, bottom}\n *  If all properties exists, right and bottom will be igonred.\n *\n * Logic:\n *     1. Scale (against origin point in parent coord)\n *     2. Rotate (against origin point in parent coord)\n *     3. Traslate (with el.position by this method)\n * So this method only fixes the last step 'Traslate', which does not affect\n * scaling and rotating.\n *\n * If be called repeatly with the same input el, the same result will be gotten.\n *\n * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width] Only for opt.boundingModel: 'raw'\n * @param {number|string} [positionInfo.height] Only for opt.boundingModel: 'raw'\n * @param {Object} containerRect\n * @param {string|number} margin\n * @param {Object} [opt]\n * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n * @param {Array.<number>} [opt.boundingMode='all']\n *        Specify how to calculate boundingRect when locating.\n *        'all': Position the boundingRect that is transformed and uioned\n *               both itself and its descendants.\n *               This mode simplies confine the elements in the bounding\n *               of their container (e.g., using 'right: 0').\n *        'raw': Position the boundingRect that is not transformed and only itself.\n *               This mode is useful when you want a element can overflow its\n *               container. (Consider a rotated circle needs to be located in a corner.)\n *               In this mode positionInfo.width/height can only be number.\n */\n\n\nfunction positionElement(el, positionInfo, containerRect, margin, opt) {\n  var h = !opt || !opt.hv || opt.hv[0];\n  var v = !opt || !opt.hv || opt.hv[1];\n  var boundingMode = opt && opt.boundingMode || 'all';\n\n  if (!h && !v) {\n    return;\n  }\n\n  var rect;\n\n  if (boundingMode === 'raw') {\n    rect = el.type === 'group' ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0) : el.getBoundingRect();\n  } else {\n    rect = el.getBoundingRect();\n\n    if (el.needLocalTransform()) {\n      var transform = el.getLocalTransform(); // Notice: raw rect may be inner object of el,\n      // which should not be modified.\n\n      rect = rect.clone();\n      rect.applyTransform(transform);\n    }\n  } // The real width and height can not be specified but calculated by the given el.\n\n\n  positionInfo = getLayoutRect(zrUtil.defaults({\n    width: rect.width,\n    height: rect.height\n  }, positionInfo), containerRect, margin); // Because 'tranlate' is the last step in transform\n  // (see zrender/core/Transformable#getLocalTransfrom),\n  // we can just only modify el.position to get final result.\n\n  var elPos = el.position;\n  var dx = h ? positionInfo.x - rect.x : 0;\n  var dy = v ? positionInfo.y - rect.y : 0;\n  el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n}\n/**\n * @param {Object} option Contains some of the properties in HV_NAMES.\n * @param {number} hvIdx 0: horizontal; 1: vertical.\n */\n\n\nfunction sizeCalculable(option, hvIdx) {\n  return option[HV_NAMES[hvIdx][0]] != null || option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null;\n}\n/**\n * Consider Case:\n * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n * through setOption or media query, using normal zrUtil.merge will cause\n * {right: 0} does not take effect.\n *\n * @example\n * ComponentModel.extend({\n *     init: function () {\n *         ...\n *         var inputPositionParams = layout.getLayoutParams(option);\n *         this.mergeOption(inputPositionParams);\n *     },\n *     mergeOption: function (newOption) {\n *         newOption && zrUtil.merge(thisOption, newOption, true);\n *         layout.mergeLayoutParam(thisOption, newOption);\n *     }\n * });\n *\n * @param {Object} targetOption\n * @param {Object} newOption\n * @param {Object|string} [opt]\n * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Used for the components\n *  that width (or height) should not be calculated by left and right (or top and bottom).\n */\n\n\nfunction mergeLayoutParam(targetOption, newOption, opt) {\n  !zrUtil.isObject(opt) && (opt = {});\n  var ignoreSize = opt.ignoreSize;\n  !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n  var hResult = merge(HV_NAMES[0], 0);\n  var vResult = merge(HV_NAMES[1], 1);\n  copy(HV_NAMES[0], targetOption, hResult);\n  copy(HV_NAMES[1], targetOption, vResult);\n\n  function merge(names, hvIdx) {\n    var newParams = {};\n    var newValueCount = 0;\n    var merged = {};\n    var mergedValueCount = 0;\n    var enoughParamNumber = 2;\n    each(names, function (name) {\n      merged[name] = targetOption[name];\n    });\n    each(names, function (name) {\n      // Consider case: newOption.width is null, which is\n      // set by user for removing width setting.\n      hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n      hasValue(newParams, name) && newValueCount++;\n      hasValue(merged, name) && mergedValueCount++;\n    });\n\n    if (ignoreSize[hvIdx]) {\n      // Only one of left/right is premitted to exist.\n      if (hasValue(newOption, names[1])) {\n        merged[names[2]] = null;\n      } else if (hasValue(newOption, names[2])) {\n        merged[names[1]] = null;\n      }\n\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // or targetOption: {right: ...} and newOption: {width: ...},\n    // There is no conflict when merged only has params count\n    // little than enoughParamNumber.\n\n\n    if (mergedValueCount === enoughParamNumber || !newValueCount) {\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // Than we can make sure user only want those two, and ignore\n    // all origin params in targetOption.\n    else if (newValueCount >= enoughParamNumber) {\n        return newParams;\n      } else {\n        // Chose another param from targetOption by priority.\n        for (var i = 0; i < names.length; i++) {\n          var name = names[i];\n\n          if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n            newParams[name] = targetOption[name];\n            break;\n          }\n        }\n\n        return newParams;\n      }\n  }\n\n  function hasProp(obj, name) {\n    return obj.hasOwnProperty(name);\n  }\n\n  function hasValue(obj, name) {\n    return obj[name] != null && obj[name] !== 'auto';\n  }\n\n  function copy(names, target, source) {\n    each(names, function (name) {\n      target[name] = source[name];\n    });\n  }\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction getLayoutParams(source) {\n  return copyLayoutParams({}, source);\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction copyLayoutParams(target, source) {\n  source && target && each(LOCATION_PARAMS, function (name) {\n    source.hasOwnProperty(name) && (target[name] = source[name]);\n  });\n  return target;\n}\n\nexports.LOCATION_PARAMS = LOCATION_PARAMS;\nexports.HV_NAMES = HV_NAMES;\nexports.box = box;\nexports.vbox = vbox;\nexports.hbox = hbox;\nexports.getAvailableSize = getAvailableSize;\nexports.getLayoutRect = getLayoutRect;\nexports.positionElement = positionElement;\nexports.sizeCalculable = sizeCalculable;\nexports.mergeLayoutParam = mergeLayoutParam;\nexports.getLayoutParams = getLayoutParams;\nexports.copyLayoutParams = copyLayoutParams;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/layout.js\n// module id = 990\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"./Model\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\nvar layout = require(\"../util/layout\");\n\nvar boxLayoutMixin = require(\"./mixin/boxLayout\");\n\n/**\n * Component model\n *\n * @module echarts/model/Component\n */\nvar arrayPush = Array.prototype.push;\n/**\n * @alias module:echarts/model/Component\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {module:echarts/model/Model} ecModel\n */\n\nvar ComponentModel = Model.extend({\n  type: 'component',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  id: '',\n\n  /**\n   * @readOnly\n   */\n  name: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  mainType: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  subType: '',\n\n  /**\n   * @readOnly\n   * @type {number}\n   */\n  componentIndex: 0,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n  ecModel: null,\n\n  /**\n   * key: componentType\n   * value:  Component model list, can not be null.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @readOnly\n   */\n  dependentModels: [],\n\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  uid: null,\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  $constructor: function (option, parentModel, ecModel, extraOpt) {\n    Model.call(this, option, parentModel, ecModel, extraOpt);\n    this.uid = componentUtil.getUID('componentModel');\n  },\n  init: function (option, parentModel, ecModel, extraOpt) {\n    this.mergeDefaultAndTheme(option, ecModel);\n  },\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? layout.getLayoutParams(option) : {};\n    var themeModel = ecModel.getTheme();\n    zrUtil.merge(option, themeModel.get(this.mainType));\n    zrUtil.merge(option, this.getDefaultOption());\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (option, extraOpt) {\n    zrUtil.merge(this.option, option, true);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(this.option, option, layoutMode);\n    }\n  },\n  // Hooker after init or mergeOption\n  optionUpdated: function (newCptOption, isInit) {},\n  getDefaultOption: function () {\n    if (!clazzUtil.hasOwn(this, '__defaultOption')) {\n      var optList = [];\n      var Class = this.constructor;\n\n      while (Class) {\n        var opt = Class.prototype.defaultOption;\n        opt && optList.push(opt);\n        Class = Class.superClass;\n      }\n\n      var defaultOption = {};\n\n      for (var i = optList.length - 1; i >= 0; i--) {\n        defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n      }\n\n      clazzUtil.set(this, '__defaultOption', defaultOption);\n    }\n\n    return clazzUtil.get(this, '__defaultOption');\n  },\n  getReferringComponents: function (mainType) {\n    return this.ecModel.queryComponents({\n      mainType: mainType,\n      index: this.get(mainType + 'Index', true),\n      id: this.get(mainType + 'Id', true)\n    });\n  }\n}); // Reset ComponentModel.extend, add preConstruct.\n// clazzUtil.enableClassExtend(\n//     ComponentModel,\n//     function (option, parentModel, ecModel, extraOpt) {\n//         // Set dependentModels, componentIndex, name, id, mainType, subType.\n//         zrUtil.extend(this, extraOpt);\n//         this.uid = componentUtil.getUID('componentModel');\n//         // this.setReadOnly([\n//         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n//         //     'dependentModels', 'componentIndex'\n//         // ]);\n//     }\n// );\n// Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(ComponentModel, {\n  registerWhenExtend: true\n});\ncomponentUtil.enableSubTypeDefaulter(ComponentModel); // Add capability of ComponentModel.topologicalTravel.\n\ncomponentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\nfunction getDependencies(componentType) {\n  var deps = [];\n  zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n    arrayPush.apply(deps, Clazz.prototype.dependencies || []);\n  }); // Ensure main type\n\n  return zrUtil.map(deps, function (type) {\n    return clazzUtil.parseClassType(type).main;\n  });\n}\n\nzrUtil.mixin(ComponentModel, boxLayoutMixin);\nvar _default = ComponentModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/Component.js\n// module id = 991\n// module chunks = 0 1 2","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar TYPE_DELIMITER = '.';\nvar IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\nvar MEMBER_PRIFIX = '\\0ec_\\0';\n/**\n * Hide private class member.\n * The same behavior as `host[name] = value;` (can be right-value)\n * @public\n */\n\nfunction set(host, name, value) {\n  return host[MEMBER_PRIFIX + name] = value;\n}\n/**\n * Hide private class member.\n * The same behavior as `host[name];`\n * @public\n */\n\n\nfunction get(host, name) {\n  return host[MEMBER_PRIFIX + name];\n}\n/**\n * For hidden private class member.\n * The same behavior as `host.hasOwnProperty(name);`\n * @public\n */\n\n\nfunction hasOwn(host, name) {\n  return host.hasOwnProperty(MEMBER_PRIFIX + name);\n}\n/**\n * Notice, parseClassType('') should returns {main: '', sub: ''}\n * @public\n */\n\n\nfunction parseClassType(componentType) {\n  var ret = {\n    main: '',\n    sub: ''\n  };\n\n  if (componentType) {\n    componentType = componentType.split(TYPE_DELIMITER);\n    ret.main = componentType[0] || '';\n    ret.sub = componentType[1] || '';\n  }\n\n  return ret;\n}\n/**\n * @public\n */\n\n\nfunction checkClassType(componentType) {\n  zrUtil.assert(/^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType), 'componentType \"' + componentType + '\" illegal');\n}\n/**\n * @public\n */\n\n\nfunction enableClassExtend(RootClass, mandatoryMethods) {\n  RootClass.$constructor = RootClass;\n\n  RootClass.extend = function (proto) {\n    var superClass = this;\n\n    var ExtendedClass = function () {\n      if (!proto.$constructor) {\n        superClass.apply(this, arguments);\n      } else {\n        proto.$constructor.apply(this, arguments);\n      }\n    };\n\n    zrUtil.extend(ExtendedClass.prototype, proto);\n    ExtendedClass.extend = this.extend;\n    ExtendedClass.superCall = superCall;\n    ExtendedClass.superApply = superApply;\n    zrUtil.inherits(ExtendedClass, this);\n    ExtendedClass.superClass = superClass;\n    return ExtendedClass;\n  };\n} // superCall should have class info, which can not be fetch from 'this'.\n// Consider this case:\n// class A has method f,\n// class B inherits class A, overrides method f, f call superApply('f'),\n// class C inherits class B, do not overrides method f,\n// then when method of class C is called, dead loop occured.\n\n\nfunction superCall(context, methodName) {\n  var args = zrUtil.slice(arguments, 2);\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n\nfunction superApply(context, methodName, args) {\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n/**\n * @param {Object} entity\n * @param {Object} options\n * @param {boolean} [options.registerWhenExtend]\n * @public\n */\n\n\nfunction enableClassManagement(entity, options) {\n  options = options || {};\n  /**\n   * Component model classes\n   * key: componentType,\n   * value:\n   *     componentClass, when componentType is 'xxx'\n   *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n   * @type {Object}\n   */\n\n  var storage = {};\n\n  entity.registerClass = function (Clazz, componentType) {\n    if (componentType) {\n      checkClassType(componentType);\n      componentType = parseClassType(componentType);\n\n      if (!componentType.sub) {\n        storage[componentType.main] = Clazz;\n      } else if (componentType.sub !== IS_CONTAINER) {\n        var container = makeContainer(componentType);\n        container[componentType.sub] = Clazz;\n      }\n    }\n\n    return Clazz;\n  };\n\n  entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n    var Clazz = storage[componentMainType];\n\n    if (Clazz && Clazz[IS_CONTAINER]) {\n      Clazz = subType ? Clazz[subType] : null;\n    }\n\n    if (throwWhenNotFound && !Clazz) {\n      throw new Error(!subType ? componentMainType + '.' + 'type should be specified.' : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.');\n    }\n\n    return Clazz;\n  };\n\n  entity.getClassesByMainType = function (componentType) {\n    componentType = parseClassType(componentType);\n    var result = [];\n    var obj = storage[componentType.main];\n\n    if (obj && obj[IS_CONTAINER]) {\n      zrUtil.each(obj, function (o, type) {\n        type !== IS_CONTAINER && result.push(o);\n      });\n    } else {\n      result.push(obj);\n    }\n\n    return result;\n  };\n\n  entity.hasClass = function (componentType) {\n    // Just consider componentType.main.\n    componentType = parseClassType(componentType);\n    return !!storage[componentType.main];\n  };\n  /**\n   * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n   */\n\n\n  entity.getAllClassMainTypes = function () {\n    var types = [];\n    zrUtil.each(storage, function (obj, type) {\n      types.push(type);\n    });\n    return types;\n  };\n  /**\n   * If a main type is container and has sub types\n   * @param  {string}  mainType\n   * @return {boolean}\n   */\n\n\n  entity.hasSubTypes = function (componentType) {\n    componentType = parseClassType(componentType);\n    var obj = storage[componentType.main];\n    return obj && obj[IS_CONTAINER];\n  };\n\n  entity.parseClassType = parseClassType;\n\n  function makeContainer(componentType) {\n    var container = storage[componentType.main];\n\n    if (!container || !container[IS_CONTAINER]) {\n      container = storage[componentType.main] = {};\n      container[IS_CONTAINER] = true;\n    }\n\n    return container;\n  }\n\n  if (options.registerWhenExtend) {\n    var originalExtend = entity.extend;\n\n    if (originalExtend) {\n      entity.extend = function (proto) {\n        var ExtendedClass = originalExtend.call(this, proto);\n        return entity.registerClass(ExtendedClass, proto.type);\n      };\n    }\n  }\n\n  return entity;\n}\n/**\n * @param {string|Array.<string>} properties\n */\n\n\nfunction setReadOnly(obj, properties) {// FIXME It seems broken in IE8 simulation of IE11\n  // if (!zrUtil.isArray(properties)) {\n  //     properties = properties != null ? [properties] : [];\n  // }\n  // zrUtil.each(properties, function (prop) {\n  //     var value = obj[prop];\n  //     Object.defineProperty\n  //         && Object.defineProperty(obj, prop, {\n  //             value: value, writable: false\n  //         });\n  //     zrUtil.isArray(obj[prop])\n  //         && Object.freeze\n  //         && Object.freeze(obj[prop]);\n  // });\n}\n\nexports.set = set;\nexports.get = get;\nexports.hasOwn = hasOwn;\nexports.parseClassType = parseClassType;\nexports.enableClassExtend = enableClassExtend;\nexports.enableClassManagement = enableClassManagement;\nexports.setReadOnly = setReadOnly;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/clazz.js\n// module id = 992\n// module chunks = 0 1 2","var BoundingRect = require(\"../core/BoundingRect\");\n\nvar imageHelper = require(\"../graphic/helper/image\");\n\nvar _util = require(\"../core/util\");\n\nvar getContext = _util.getContext;\nvar extend = _util.extend;\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar textWidthCache = {};\nvar textWidthCacheCounter = 0;\nvar TEXT_CACHE_MAX = 5000;\nvar STYLE_REG = /\\{([a-zA-Z0-9_]+)\\|([^}]*)\\}/g;\nvar DEFAULT_FONT = '12px sans-serif'; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  methods[name] = fn;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {number} width\n */\n\n\nfunction getWidth(text, font) {\n  font = font || DEFAULT_FONT;\n  var key = text + ':' + font;\n\n  if (textWidthCache[key]) {\n    return textWidthCache[key];\n  }\n\n  var textLines = (text + '').split('\\n');\n  var width = 0;\n\n  for (var i = 0, l = textLines.length; i < l; i++) {\n    // textContain.measureText may be overrided in SVG or VML\n    width = Math.max(measureText(textLines[i], font).width, width);\n  }\n\n  if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n    textWidthCacheCounter = 0;\n    textWidthCache = {};\n  }\n\n  textWidthCacheCounter++;\n  textWidthCache[key] = width;\n  return width;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {string} [textAlign='left']\n * @param {string} [textVerticalAlign='top']\n * @param {Array.<number>} [textPadding]\n * @param {Object} [rich]\n * @param {Object} [truncate]\n * @return {Object} {x, y, width, height, lineHeight}\n */\n\n\nfunction getBoundingRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  return rich ? getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) : getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate);\n}\n\nfunction getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate) {\n  var contentBlock = parsePlainText(text, font, textPadding, truncate);\n  var outerWidth = getWidth(text, font);\n\n  if (textPadding) {\n    outerWidth += textPadding[1] + textPadding[3];\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  var rect = new BoundingRect(x, y, outerWidth, outerHeight);\n  rect.lineHeight = contentBlock.lineHeight;\n  return rect;\n}\n\nfunction getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  var contentBlock = parseRichText(text, {\n    rich: rich,\n    truncate: truncate,\n    font: font,\n    textAlign: textAlign,\n    textPadding: textPadding\n  });\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  return new BoundingRect(x, y, outerWidth, outerHeight);\n}\n/**\n * @public\n * @param {number} x\n * @param {number} width\n * @param {string} [textAlign='left']\n * @return {number} Adjusted x.\n */\n\n\nfunction adjustTextX(x, width, textAlign) {\n  // FIXME Right to left language\n  if (textAlign === 'right') {\n    x -= width;\n  } else if (textAlign === 'center') {\n    x -= width / 2;\n  }\n\n  return x;\n}\n/**\n * @public\n * @param {number} y\n * @param {number} height\n * @param {string} [textVerticalAlign='top']\n * @return {number} Adjusted y.\n */\n\n\nfunction adjustTextY(y, height, textVerticalAlign) {\n  if (textVerticalAlign === 'middle') {\n    y -= height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y -= height;\n  }\n\n  return y;\n}\n/**\n * @public\n * @param {stirng} textPosition\n * @param {Object} rect {x, y, width, height}\n * @param {number} distance\n * @return {Object} {x, y, textAlign, textVerticalAlign}\n */\n\n\nfunction adjustTextPositionOnRect(textPosition, rect, distance) {\n  var x = rect.x;\n  var y = rect.y;\n  var height = rect.height;\n  var width = rect.width;\n  var halfHeight = height / 2;\n  var textAlign = 'left';\n  var textVerticalAlign = 'top';\n\n  switch (textPosition) {\n    case 'left':\n      x -= distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'right':\n      x += distance + width;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'top':\n      x += width / 2;\n      y -= distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'bottom':\n      x += width / 2;\n      y += height + distance;\n      textAlign = 'center';\n      break;\n\n    case 'inside':\n      x += width / 2;\n      y += halfHeight;\n      textAlign = 'center';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideLeft':\n      x += distance;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideRight':\n      x += width - distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideTop':\n      x += width / 2;\n      y += distance;\n      textAlign = 'center';\n      break;\n\n    case 'insideBottom':\n      x += width / 2;\n      y += height - distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideTopLeft':\n      x += distance;\n      y += distance;\n      break;\n\n    case 'insideTopRight':\n      x += width - distance;\n      y += distance;\n      textAlign = 'right';\n      break;\n\n    case 'insideBottomLeft':\n      x += distance;\n      y += height - distance;\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideBottomRight':\n      x += width - distance;\n      y += height - distance;\n      textAlign = 'right';\n      textVerticalAlign = 'bottom';\n      break;\n  }\n\n  return {\n    x: x,\n    y: y,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n/**\n * Show ellipsis if overflow.\n *\n * @public\n * @param  {string} text\n * @param  {string} containerWidth\n * @param  {string} font\n * @param  {number} [ellipsis='...']\n * @param  {Object} [options]\n * @param  {number} [options.maxIterations=3]\n * @param  {number} [options.minChar=0] If truncate result are less\n *                  then minChar, ellipsis will not show, which is\n *                  better for user hint in some cases.\n * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n * @return {string}\n */\n\n\nfunction truncateText(text, containerWidth, font, ellipsis, options) {\n  if (!containerWidth) {\n    return '';\n  }\n\n  var textLines = (text + '').split('\\n');\n  options = prepareTruncateOptions(containerWidth, font, ellipsis, options); // FIXME\n  // It is not appropriate that every line has '...' when truncate multiple lines.\n\n  for (var i = 0, len = textLines.length; i < len; i++) {\n    textLines[i] = truncateSingleLine(textLines[i], options);\n  }\n\n  return textLines.join('\\n');\n}\n\nfunction prepareTruncateOptions(containerWidth, font, ellipsis, options) {\n  options = extend({}, options);\n  options.font = font;\n  var ellipsis = retrieve2(ellipsis, '...');\n  options.maxIterations = retrieve2(options.maxIterations, 2);\n  var minChar = options.minChar = retrieve2(options.minChar, 0); // FIXME\n  // Other languages?\n\n  options.cnCharWidth = getWidth('国', font); // FIXME\n  // Consider proportional font?\n\n  var ascCharWidth = options.ascCharWidth = getWidth('a', font);\n  options.placeholder = retrieve2(options.placeholder, ''); // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n  // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n\n  var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n\n  for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n    contentWidth -= ascCharWidth;\n  }\n\n  var ellipsisWidth = getWidth(ellipsis);\n\n  if (ellipsisWidth > contentWidth) {\n    ellipsis = '';\n    ellipsisWidth = 0;\n  }\n\n  contentWidth = containerWidth - ellipsisWidth;\n  options.ellipsis = ellipsis;\n  options.ellipsisWidth = ellipsisWidth;\n  options.contentWidth = contentWidth;\n  options.containerWidth = containerWidth;\n  return options;\n}\n\nfunction truncateSingleLine(textLine, options) {\n  var containerWidth = options.containerWidth;\n  var font = options.font;\n  var contentWidth = options.contentWidth;\n\n  if (!containerWidth) {\n    return '';\n  }\n\n  var lineWidth = getWidth(textLine, font);\n\n  if (lineWidth <= containerWidth) {\n    return textLine;\n  }\n\n  for (var j = 0;; j++) {\n    if (lineWidth <= contentWidth || j >= options.maxIterations) {\n      textLine += options.ellipsis;\n      break;\n    }\n\n    var subLength = j === 0 ? estimateLength(textLine, contentWidth, options.ascCharWidth, options.cnCharWidth) : lineWidth > 0 ? Math.floor(textLine.length * contentWidth / lineWidth) : 0;\n    textLine = textLine.substr(0, subLength);\n    lineWidth = getWidth(textLine, font);\n  }\n\n  if (textLine === '') {\n    textLine = options.placeholder;\n  }\n\n  return textLine;\n}\n\nfunction estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n  var width = 0;\n  var i = 0;\n\n  for (var len = text.length; i < len && width < contentWidth; i++) {\n    var charCode = text.charCodeAt(i);\n    width += 0 <= charCode && charCode <= 127 ? ascCharWidth : cnCharWidth;\n  }\n\n  return i;\n}\n/**\n * @public\n * @param {string} font\n * @return {number} line height\n */\n\n\nfunction getLineHeight(font) {\n  // FIXME A rough approach.\n  return getWidth('国', font);\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {Object} width\n */\n\n\nfunction measureText(text, font) {\n  return methods.measureText(text, font);\n} // Avoid assign to an exported variable, for transforming to cjs.\n\n\nmethods.measureText = function (text, font) {\n  var ctx = getContext();\n  ctx.font = font || DEFAULT_FONT;\n  return ctx.measureText(text);\n};\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {Object} [truncate]\n * @return {Object} block: {lineHeight, lines, height, outerHeight}\n *  Notice: for performance, do not calculate outerWidth util needed.\n */\n\n\nfunction parsePlainText(text, font, padding, truncate) {\n  text != null && (text += '');\n  var lineHeight = getLineHeight(font);\n  var lines = text ? text.split('\\n') : [];\n  var height = lines.length * lineHeight;\n  var outerHeight = height;\n\n  if (padding) {\n    outerHeight += padding[0] + padding[2];\n  }\n\n  if (text && truncate) {\n    var truncOuterHeight = truncate.outerHeight;\n    var truncOuterWidth = truncate.outerWidth;\n\n    if (truncOuterHeight != null && outerHeight > truncOuterHeight) {\n      text = '';\n      lines = [];\n    } else if (truncOuterWidth != null) {\n      var options = prepareTruncateOptions(truncOuterWidth - (padding ? padding[1] + padding[3] : 0), font, truncate.ellipsis, {\n        minChar: truncate.minChar,\n        placeholder: truncate.placeholder\n      }); // FIXME\n      // It is not appropriate that every line has '...' when truncate multiple lines.\n\n      for (var i = 0, len = lines.length; i < len; i++) {\n        lines[i] = truncateSingleLine(lines[i], options);\n      }\n    }\n  }\n\n  return {\n    lines: lines,\n    height: height,\n    outerHeight: outerHeight,\n    lineHeight: lineHeight\n  };\n}\n/**\n * For example: 'some text {a|some text}other text{b|some text}xxx{c|}xxx'\n * Also consider 'bbbb{a|xxx\\nzzz}xxxx\\naaaa'.\n *\n * @public\n * @param {string} text\n * @param {Object} style\n * @return {Object} block\n * {\n *      width,\n *      height,\n *      lines: [{\n *          lineHeight,\n *          width,\n *          tokens: [[{\n *              styleName,\n *              text,\n *              width,      // include textPadding\n *              height,     // include textPadding\n *              textWidth, // pure text width\n *              textHeight, // pure text height\n *              lineHeihgt,\n *              font,\n *              textAlign,\n *              textVerticalAlign\n *          }], [...], ...]\n *      }, ...]\n * }\n * If styleName is undefined, it is plain text.\n */\n\n\nfunction parseRichText(text, style) {\n  var contentBlock = {\n    lines: [],\n    width: 0,\n    height: 0\n  };\n  text != null && (text += '');\n\n  if (!text) {\n    return contentBlock;\n  }\n\n  var lastIndex = STYLE_REG.lastIndex = 0;\n  var result;\n\n  while ((result = STYLE_REG.exec(text)) != null) {\n    var matchedIndex = result.index;\n\n    if (matchedIndex > lastIndex) {\n      pushTokens(contentBlock, text.substring(lastIndex, matchedIndex));\n    }\n\n    pushTokens(contentBlock, result[2], result[1]);\n    lastIndex = STYLE_REG.lastIndex;\n  }\n\n  if (lastIndex < text.length) {\n    pushTokens(contentBlock, text.substring(lastIndex, text.length));\n  }\n\n  var lines = contentBlock.lines;\n  var contentHeight = 0;\n  var contentWidth = 0; // For `textWidth: 100%`\n\n  var pendingList = [];\n  var stlPadding = style.textPadding;\n  var truncate = style.truncate;\n  var truncateWidth = truncate && truncate.outerWidth;\n  var truncateHeight = truncate && truncate.outerHeight;\n\n  if (stlPadding) {\n    truncateWidth != null && (truncateWidth -= stlPadding[1] + stlPadding[3]);\n    truncateHeight != null && (truncateHeight -= stlPadding[0] + stlPadding[2]);\n  } // Calculate layout info of tokens.\n\n\n  for (var i = 0; i < lines.length; i++) {\n    var line = lines[i];\n    var lineHeight = 0;\n    var lineWidth = 0;\n\n    for (var j = 0; j < line.tokens.length; j++) {\n      var token = line.tokens[j];\n      var tokenStyle = token.styleName && style.rich[token.styleName] || {}; // textPadding should not inherit from style.\n\n      var textPadding = token.textPadding = tokenStyle.textPadding; // textFont has been asigned to font by `normalizeStyle`.\n\n      var font = token.font = tokenStyle.font || style.font; // textHeight can be used when textVerticalAlign is specified in token.\n\n      var tokenHeight = token.textHeight = retrieve2( // textHeight should not be inherited, consider it can be specified\n      // as box height of the block.\n      tokenStyle.textHeight, getLineHeight(font));\n      textPadding && (tokenHeight += textPadding[0] + textPadding[2]);\n      token.height = tokenHeight;\n      token.lineHeight = retrieve3(tokenStyle.textLineHeight, style.textLineHeight, tokenHeight);\n      token.textAlign = tokenStyle && tokenStyle.textAlign || style.textAlign;\n      token.textVerticalAlign = tokenStyle && tokenStyle.textVerticalAlign || 'middle';\n\n      if (truncateHeight != null && contentHeight + token.lineHeight > truncateHeight) {\n        return {\n          lines: [],\n          width: 0,\n          height: 0\n        };\n      }\n\n      token.textWidth = getWidth(token.text, font);\n      var tokenWidth = tokenStyle.textWidth;\n      var tokenWidthNotSpecified = tokenWidth == null || tokenWidth === 'auto'; // Percent width, can be `100%`, can be used in drawing separate\n      // line when box width is needed to be auto.\n\n      if (typeof tokenWidth === 'string' && tokenWidth.charAt(tokenWidth.length - 1) === '%') {\n        token.percentWidth = tokenWidth;\n        pendingList.push(token);\n        tokenWidth = 0; // Do not truncate in this case, because there is no user case\n        // and it is too complicated.\n      } else {\n        if (tokenWidthNotSpecified) {\n          tokenWidth = token.textWidth; // FIXME: If image is not loaded and textWidth is not specified, calling\n          // `getBoundingRect()` will not get correct result.\n\n          var textBackgroundColor = tokenStyle.textBackgroundColor;\n          var bgImg = textBackgroundColor && textBackgroundColor.image; // Use cases:\n          // (1) If image is not loaded, it will be loaded at render phase and call\n          // `dirty()` and `textBackgroundColor.image` will be replaced with the loaded\n          // image, and then the right size will be calculated here at the next tick.\n          // See `graphic/helper/text.js`.\n          // (2) If image loaded, and `textBackgroundColor.image` is image src string,\n          // use `imageHelper.findExistImage` to find cached image.\n          // `imageHelper.findExistImage` will always be called here before\n          // `imageHelper.createOrUpdateImage` in `graphic/helper/text.js#renderRichText`\n          // which ensures that image will not be rendered before correct size calcualted.\n\n          if (bgImg) {\n            bgImg = imageHelper.findExistImage(bgImg);\n\n            if (imageHelper.isImageReady(bgImg)) {\n              tokenWidth = Math.max(tokenWidth, bgImg.width * tokenHeight / bgImg.height);\n            }\n          }\n        }\n\n        var paddingW = textPadding ? textPadding[1] + textPadding[3] : 0;\n        tokenWidth += paddingW;\n        var remianTruncWidth = truncateWidth != null ? truncateWidth - lineWidth : null;\n\n        if (remianTruncWidth != null && remianTruncWidth < tokenWidth) {\n          if (!tokenWidthNotSpecified || remianTruncWidth < paddingW) {\n            token.text = '';\n            token.textWidth = tokenWidth = 0;\n          } else {\n            token.text = truncateText(token.text, remianTruncWidth - paddingW, font, truncate.ellipsis, {\n              minChar: truncate.minChar\n            });\n            token.textWidth = getWidth(token.text, font);\n            tokenWidth = token.textWidth + paddingW;\n          }\n        }\n      }\n\n      lineWidth += token.width = tokenWidth;\n      tokenStyle && (lineHeight = Math.max(lineHeight, token.lineHeight));\n    }\n\n    line.width = lineWidth;\n    line.lineHeight = lineHeight;\n    contentHeight += lineHeight;\n    contentWidth = Math.max(contentWidth, lineWidth);\n  }\n\n  contentBlock.outerWidth = contentBlock.width = retrieve2(style.textWidth, contentWidth);\n  contentBlock.outerHeight = contentBlock.height = retrieve2(style.textHeight, contentHeight);\n\n  if (stlPadding) {\n    contentBlock.outerWidth += stlPadding[1] + stlPadding[3];\n    contentBlock.outerHeight += stlPadding[0] + stlPadding[2];\n  }\n\n  for (var i = 0; i < pendingList.length; i++) {\n    var token = pendingList[i];\n    var percentWidth = token.percentWidth; // Should not base on outerWidth, because token can not be placed out of padding.\n\n    token.width = parseInt(percentWidth, 10) / 100 * contentWidth;\n  }\n\n  return contentBlock;\n}\n\nfunction pushTokens(block, str, styleName) {\n  var isEmptyStr = str === '';\n  var strs = str.split('\\n');\n  var lines = block.lines;\n\n  for (var i = 0; i < strs.length; i++) {\n    var text = strs[i];\n    var token = {\n      styleName: styleName,\n      text: text,\n      isLineHolder: !text && !isEmptyStr\n    }; // The first token should be appended to the last line.\n\n    if (!i) {\n      var tokens = (lines[lines.length - 1] || (lines[0] = {\n        tokens: []\n      })).tokens; // Consider cases:\n      // (1) ''.split('\\n') => ['', '\\n', ''], the '' at the first item\n      // (which is a placeholder) should be replaced by new token.\n      // (2) A image backage, where token likes {a|}.\n      // (3) A redundant '' will affect textAlign in line.\n      // (4) tokens with the same tplName should not be merged, because\n      // they should be displayed in different box (with border and padding).\n\n      var tokensLen = tokens.length;\n      tokensLen === 1 && tokens[0].isLineHolder ? tokens[0] = token : // Consider text is '', only insert when it is the \"lineHolder\" or\n      // \"emptyStr\". Otherwise a redundant '' will affect textAlign in line.\n      (text || !tokensLen || isEmptyStr) && tokens.push(token);\n    } // Other tokens always start a new line.\n    else {\n        // If there is '', insert it as a placeholder.\n        lines.push({\n          tokens: [token]\n        });\n      }\n  }\n}\n\nfunction makeFont(style) {\n  // FIXME in node-canvas fontWeight is before fontStyle\n  // Use `fontSize` `fontFamily` to check whether font properties are defined.\n  return (style.fontSize || style.fontFamily) && [style.fontStyle, style.fontWeight, (style.fontSize || 12) + 'px', // If font properties are defined, `fontFamily` should not be ignored.\n  style.fontFamily || 'sans-serif'].join(' ') || style.textFont || style.font;\n}\n\nexports.DEFAULT_FONT = DEFAULT_FONT;\nexports.$override = $override;\nexports.getWidth = getWidth;\nexports.getBoundingRect = getBoundingRect;\nexports.adjustTextX = adjustTextX;\nexports.adjustTextY = adjustTextY;\nexports.adjustTextPositionOnRect = adjustTextPositionOnRect;\nexports.truncateText = truncateText;\nexports.getLineHeight = getLineHeight;\nexports.measureText = measureText;\nexports.parsePlainText = parsePlainText;\nexports.parseRichText = parseRichText;\nexports.makeFont = makeFont;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/contain/text.js\n// module id = 993\n// module chunks = 0 1 2","/**\n * 3x2矩阵操作类\n * @exports zrender/tool/matrix\n */\nvar ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * 创建一个单位矩阵\n * @return {Float32Array|Array.<number>}\n */\n\nfunction create() {\n  var out = new ArrayCtor(6);\n  identity(out);\n  return out;\n}\n/**\n * 设置矩阵为单位矩阵\n * @param {Float32Array|Array.<number>} out\n */\n\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * 复制矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m\n */\n\n\nfunction copy(out, m) {\n  out[0] = m[0];\n  out[1] = m[1];\n  out[2] = m[2];\n  out[3] = m[3];\n  out[4] = m[4];\n  out[5] = m[5];\n  return out;\n}\n/**\n * 矩阵相乘\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m1\n * @param {Float32Array|Array.<number>} m2\n */\n\n\nfunction mul(out, m1, m2) {\n  // Consider matrix.mul(m, m2, m);\n  // where out is the same as m2.\n  // So use temp variable to escape error.\n  var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n  var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n  var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n  var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n  var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n  var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = out3;\n  out[4] = out4;\n  out[5] = out5;\n  return out;\n}\n/**\n * 平移变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction translate(out, a, v) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4] + v[0];\n  out[5] = a[5] + v[1];\n  return out;\n}\n/**\n * 旋转变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {number} rad\n */\n\n\nfunction rotate(out, a, rad) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var st = Math.sin(rad);\n  var ct = Math.cos(rad);\n  out[0] = aa * ct + ab * st;\n  out[1] = -aa * st + ab * ct;\n  out[2] = ac * ct + ad * st;\n  out[3] = -ac * st + ct * ad;\n  out[4] = ct * atx + st * aty;\n  out[5] = ct * aty - st * atx;\n  return out;\n}\n/**\n * 缩放变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction scale(out, a, v) {\n  var vx = v[0];\n  var vy = v[1];\n  out[0] = a[0] * vx;\n  out[1] = a[1] * vy;\n  out[2] = a[2] * vx;\n  out[3] = a[3] * vy;\n  out[4] = a[4] * vx;\n  out[5] = a[5] * vy;\n  return out;\n}\n/**\n * 求逆矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n */\n\n\nfunction invert(out, a) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var det = aa * ad - ab * ac;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n\nexports.create = create;\nexports.identity = identity;\nexports.copy = copy;\nexports.mul = mul;\nexports.translate = translate;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.invert = invert;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/matrix.js\n// module id = 994\n// module chunks = 0 1 2","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../model/Model\");\n\nvar DataDiffer = require(\"./DataDiffer\");\n\nvar modelUtil = require(\"../util/model\");\n\n/**\n * List for data storage\n * @module echarts/data/List\n */\nvar isObject = zrUtil.isObject;\nvar UNDEFINED = 'undefined';\nvar globalObj = typeof window === UNDEFINED ? global : window;\nvar dataCtors = {\n  'float': typeof globalObj.Float64Array === UNDEFINED ? Array : globalObj.Float64Array,\n  'int': typeof globalObj.Int32Array === UNDEFINED ? Array : globalObj.Int32Array,\n  // Ordinal data type can be string or int\n  'ordinal': Array,\n  'number': Array,\n  'time': Array\n};\nvar TRANSFERABLE_PROPERTIES = ['stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'];\n\nfunction transferProperties(a, b) {\n  zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n    if (b.hasOwnProperty(propName)) {\n      a[propName] = b[propName];\n    }\n  });\n  a.__wrappedMethods = b.__wrappedMethods;\n}\n\nfunction DefaultDataProvider(dataArray) {\n  this._array = dataArray || [];\n}\n\nDefaultDataProvider.prototype.pure = false;\n\nDefaultDataProvider.prototype.count = function () {\n  return this._array.length;\n};\n\nDefaultDataProvider.prototype.getItem = function (idx) {\n  return this._array[idx];\n};\n/**\n * @constructor\n * @alias module:echarts/data/List\n *\n * @param {Array.<string|Object>} dimensions\n *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n * @param {module:echarts/model/Model} hostModel\n */\n\n\nvar List = function (dimensions, hostModel) {\n  dimensions = dimensions || ['x', 'y'];\n  var dimensionInfos = {};\n  var dimensionNames = [];\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimensionName;\n    var dimensionInfo = {};\n\n    if (typeof dimensions[i] === 'string') {\n      dimensionName = dimensions[i];\n      dimensionInfo = {\n        name: dimensionName,\n        coordDim: dimensionName,\n        coordDimIndex: 0,\n        stackable: false,\n        // Type can be 'float', 'int', 'number'\n        // Default is number, Precision of float may not enough\n        type: 'number'\n      };\n    } else {\n      dimensionInfo = dimensions[i];\n      dimensionName = dimensionInfo.name;\n      dimensionInfo.type = dimensionInfo.type || 'number';\n\n      if (!dimensionInfo.coordDim) {\n        dimensionInfo.coordDim = dimensionName;\n        dimensionInfo.coordDimIndex = 0;\n      }\n    }\n\n    dimensionInfo.otherDims = dimensionInfo.otherDims || {};\n    dimensionNames.push(dimensionName);\n    dimensionInfos[dimensionName] = dimensionInfo;\n  }\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n\n\n  this.dimensions = dimensionNames;\n  /**\n   * Infomation of each data dimension, like data type.\n   * @type {Object}\n   */\n\n  this._dimensionInfos = dimensionInfos;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.hostModel = hostModel;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.dataType;\n  /**\n   * Indices stores the indices of data subset after filtered.\n   * This data subset will be used in chart.\n   * @type {Array.<number>}\n   * @readOnly\n   */\n\n  this.indices = [];\n  /**\n   * Data storage\n   * @type {Object.<key, TypedArray|Array>}\n   * @private\n   */\n\n  this._storage = {};\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._nameList = [];\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._idList = [];\n  /**\n   * Models of data option is stored sparse for optimizing memory cost\n   * @type {Array.<module:echarts/model/Model>}\n   * @private\n   */\n\n  this._optionModels = [];\n  /**\n   * @param {module:echarts/data/List}\n   */\n\n  this.stackedOn = null;\n  /**\n   * Global visual properties after visual coding\n   * @type {Object}\n   * @private\n   */\n\n  this._visual = {};\n  /**\n   * Globel layout properties.\n   * @type {Object}\n   * @private\n   */\n\n  this._layout = {};\n  /**\n   * Item visual properties after visual coding\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemVisuals = [];\n  /**\n   * Item layout properties after layout\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemLayouts = [];\n  /**\n   * Graphic elemnents\n   * @type {Array.<module:zrender/Element>}\n   * @private\n   */\n\n  this._graphicEls = [];\n  /**\n   * @type {Array.<Array|Object>}\n   * @private\n   */\n\n  this._rawData;\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._extent;\n};\n\nvar listProto = List.prototype;\nlistProto.type = 'list';\n/**\n * If each data item has it's own option\n * @type {boolean}\n */\n\nlistProto.hasItemOption = true;\n/**\n * Get dimension name\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n * @return {string} Concrete dim name.\n */\n\nlistProto.getDimension = function (dim) {\n  if (!isNaN(dim)) {\n    dim = this.dimensions[dim] || dim;\n  }\n\n  return dim;\n};\n/**\n * Get type and stackable info of particular dimension\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n */\n\n\nlistProto.getDimensionInfo = function (dim) {\n  return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);\n};\n/**\n * Initialize from data\n * @param {Array.<Object|number|Array>} data\n * @param {Array.<string>} [nameList]\n * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n */\n\n\nlistProto.initData = function (data, nameList, dimValueGetter) {\n  data = data || [];\n  var isDataArray = zrUtil.isArray(data);\n\n  if (isDataArray) {\n    data = new DefaultDataProvider(data);\n  }\n\n  this._rawData = data; // Clear\n\n  var storage = this._storage = {};\n  var indices = this.indices = [];\n  var dimensions = this.dimensions;\n  var dimensionInfoMap = this._dimensionInfos;\n  var size = data.count();\n  var idList = [];\n  var nameRepeatCount = {};\n  var nameDimIdx;\n  nameList = nameList || []; // Init storage\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimInfo = dimensionInfoMap[dimensions[i]];\n    dimInfo.otherDims.itemName === 0 && (nameDimIdx = i);\n    var DataCtor = dataCtors[dimInfo.type];\n    storage[dimensions[i]] = new DataCtor(size);\n  }\n\n  var self = this;\n\n  if (!dimValueGetter) {\n    self.hasItemOption = false;\n  } // Default dim value getter\n\n\n  dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {\n    var value = modelUtil.getDataItemValue(dataItem); // If any dataItem is like { value: 10 }\n\n    if (modelUtil.isDataItemOption(dataItem)) {\n      self.hasItemOption = true;\n    }\n\n    return modelUtil.converDataValue(value instanceof Array ? value[dimIndex] // If value is a single number or something else not array.\n    : value, dimensionInfoMap[dimName]);\n  };\n\n  for (var i = 0; i < size; i++) {\n    // NOTICE: Try not to write things into dataItem\n    var dataItem = data.getItem(i); // Each data item is value\n    // [1, 2]\n    // 2\n    // Bar chart, line chart which uses category axis\n    // only gives the 'y' value. 'x' value is the indices of cateogry\n    // Use a tempValue to normalize the value to be a (x, y) value\n    // Store the data by dimensions\n\n    for (var k = 0; k < dimensions.length; k++) {\n      var dim = dimensions[k];\n      var dimStorage = storage[dim]; // PENDING NULL is empty or zero\n\n      dimStorage[i] = dimValueGetter(dataItem, dim, i, k);\n    }\n\n    indices.push(i);\n  } // Use the name in option and create id\n\n\n  for (var i = 0; i < size; i++) {\n    var dataItem = data.getItem(i);\n\n    if (!nameList[i] && dataItem) {\n      if (dataItem.name != null) {\n        nameList[i] = dataItem.name;\n      } else if (nameDimIdx != null) {\n        nameList[i] = storage[dimensions[nameDimIdx]][i];\n      }\n    }\n\n    var name = nameList[i] || ''; // Try using the id in option\n\n    var id = dataItem && dataItem.id;\n\n    if (!id && name) {\n      // Use name as id and add counter to avoid same name\n      nameRepeatCount[name] = nameRepeatCount[name] || 0;\n      id = name;\n\n      if (nameRepeatCount[name] > 0) {\n        id += '__ec__' + nameRepeatCount[name];\n      }\n\n      nameRepeatCount[name]++;\n    }\n\n    id && (idList[i] = id);\n  }\n\n  this._nameList = nameList;\n  this._idList = idList;\n};\n/**\n * @return {number}\n */\n\n\nlistProto.count = function () {\n  return this.indices.length;\n};\n/**\n * Get value. Return NaN if idx is out of range.\n * @param {string} dim Dim must be concrete name.\n * @param {number} idx\n * @param {boolean} stack\n * @return {number}\n */\n\n\nlistProto.get = function (dim, idx, stack) {\n  var storage = this._storage;\n  var dataIndex = this.indices[idx]; // If value not exists\n\n  if (dataIndex == null || !storage[dim]) {\n    return NaN;\n  }\n\n  var value = storage[dim][dataIndex]; // FIXME ordinal data type is not stackable\n\n  if (stack) {\n    var dimensionInfo = this._dimensionInfos[dim];\n\n    if (dimensionInfo && dimensionInfo.stackable) {\n      var stackedOn = this.stackedOn;\n\n      while (stackedOn) {\n        // Get no stacked data of stacked on\n        var stackedValue = stackedOn.get(dim, idx); // Considering positive stack, negative stack and empty data\n\n        if (value >= 0 && stackedValue > 0 || // Positive stack\n        value <= 0 && stackedValue < 0 // Negative stack\n        ) {\n            value += stackedValue;\n          }\n\n        stackedOn = stackedOn.stackedOn;\n      }\n    }\n  }\n\n  return value;\n};\n/**\n * Get value for multi dimensions.\n * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n * @param {number} idx\n * @param {boolean} stack\n * @return {number}\n */\n\n\nlistProto.getValues = function (dimensions, idx, stack) {\n  var values = [];\n\n  if (!zrUtil.isArray(dimensions)) {\n    stack = idx;\n    idx = dimensions;\n    dimensions = this.dimensions;\n  }\n\n  for (var i = 0, len = dimensions.length; i < len; i++) {\n    values.push(this.get(dimensions[i], idx, stack));\n  }\n\n  return values;\n};\n/**\n * If value is NaN. Inlcuding '-'\n * @param {string} dim\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.hasValue = function (idx) {\n  var dimensions = this.dimensions;\n  var dimensionInfos = this._dimensionInfos;\n\n  for (var i = 0, len = dimensions.length; i < len; i++) {\n    if ( // Ordinal type can be string or number\n    dimensionInfos[dimensions[i]].type !== 'ordinal' && isNaN(this.get(dimensions[i], idx))) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Get extent of data in one dimension\n * @param {string} dim\n * @param {boolean} stack\n * @param {Function} filter\n */\n\n\nlistProto.getDataExtent = function (dim, stack, filter) {\n  dim = this.getDimension(dim);\n  var dimData = this._storage[dim];\n  var dimInfo = this.getDimensionInfo(dim);\n  stack = dimInfo && dimInfo.stackable && stack;\n  var dimExtent = (this._extent || (this._extent = {}))[dim + !!stack];\n  var value;\n\n  if (dimExtent) {\n    return dimExtent;\n  } // var dimInfo = this._dimensionInfos[dim];\n\n\n  if (dimData) {\n    var min = Infinity;\n    var max = -Infinity; // var isOrdinal = dimInfo.type === 'ordinal';\n\n    for (var i = 0, len = this.count(); i < len; i++) {\n      value = this.get(dim, i, stack); // FIXME\n      // if (isOrdinal && typeof value === 'string') {\n      //     value = zrUtil.indexOf(dimData, value);\n      // }\n\n      if (!filter || filter(value, dim, i)) {\n        value < min && (min = value);\n        value > max && (max = value);\n      }\n    }\n\n    return this._extent[dim + !!stack] = [min, max];\n  } else {\n    return [Infinity, -Infinity];\n  }\n};\n/**\n * Get sum of data in one dimension\n * @param {string} dim\n * @param {boolean} stack\n */\n\n\nlistProto.getSum = function (dim, stack) {\n  var dimData = this._storage[dim];\n  var sum = 0;\n\n  if (dimData) {\n    for (var i = 0, len = this.count(); i < len; i++) {\n      var value = this.get(dim, i, stack);\n\n      if (!isNaN(value)) {\n        sum += value;\n      }\n    }\n  }\n\n  return sum;\n};\n/**\n * Retreive the index with given value\n * @param {number} idx\n * @param {number} value\n * @return {number}\n */\n// FIXME Precision of float value\n\n\nlistProto.indexOf = function (dim, value) {\n  var storage = this._storage;\n  var dimData = storage[dim];\n  var indices = this.indices;\n\n  if (dimData) {\n    for (var i = 0, len = indices.length; i < len; i++) {\n      var rawIndex = indices[i];\n\n      if (dimData[rawIndex] === value) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index with given name\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfName = function (name) {\n  var indices = this.indices;\n  var nameList = this._nameList;\n\n  for (var i = 0, len = indices.length; i < len; i++) {\n    var rawIndex = indices[i];\n\n    if (nameList[rawIndex] === name) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index with given raw data index\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfRawIndex = function (rawIndex) {\n  // Indices are ascending\n  var indices = this.indices; // If rawIndex === dataIndex\n\n  var rawDataIndex = indices[rawIndex];\n\n  if (rawDataIndex != null && rawDataIndex === rawIndex) {\n    return rawIndex;\n  }\n\n  var left = 0;\n  var right = indices.length - 1;\n\n  while (left <= right) {\n    var mid = (left + right) / 2 | 0;\n\n    if (indices[mid] < rawIndex) {\n      left = mid + 1;\n    } else if (indices[mid] > rawIndex) {\n      right = mid - 1;\n    } else {\n      return mid;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index of nearest value\n * @param {string} dim\n * @param {number} value\n * @param {boolean} stack If given value is after stacked\n * @param {number} [maxDistance=Infinity]\n * @return {Array.<number>} Considere multiple points has the same value.\n */\n\n\nlistProto.indicesOfNearest = function (dim, value, stack, maxDistance) {\n  var storage = this._storage;\n  var dimData = storage[dim];\n  var nearestIndices = [];\n\n  if (!dimData) {\n    return nearestIndices;\n  }\n\n  if (maxDistance == null) {\n    maxDistance = Infinity;\n  }\n\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n\n  for (var i = 0, len = this.count(); i < len; i++) {\n    var diff = value - this.get(dim, i, stack);\n    var dist = Math.abs(diff);\n\n    if (diff <= maxDistance && dist <= minDist) {\n      // For the case of two data are same on xAxis, which has sequence data.\n      // Show the nearest index\n      // https://github.com/ecomfe/echarts/issues/2869\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        nearestIndices.length = 0;\n      }\n\n      nearestIndices.push(i);\n    }\n  }\n\n  return nearestIndices;\n};\n/**\n * Get raw data index\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawIndex = function (idx) {\n  var rawIdx = this.indices[idx];\n  return rawIdx == null ? -1 : rawIdx;\n};\n/**\n * Get raw data item\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawDataItem = function (idx) {\n  return this._rawData.getItem(this.getRawIndex(idx));\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getName = function (idx) {\n  return this._nameList[this.indices[idx]] || '';\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getId = function (idx) {\n  return this._idList[this.indices[idx]] || this.getRawIndex(idx) + '';\n};\n\nfunction normalizeDimensions(dimensions) {\n  if (!zrUtil.isArray(dimensions)) {\n    dimensions = [dimensions];\n  }\n\n  return dimensions;\n}\n/**\n * Data iteration\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n *\n * @example\n *  list.each('x', function (x, idx) {});\n *  list.each(['x', 'y'], function (x, y, idx) {});\n *  list.each(function (idx) {})\n */\n\n\nlistProto.each = function (dims, cb, stack, context) {\n  if (typeof dims === 'function') {\n    context = stack;\n    stack = cb;\n    cb = dims;\n    dims = [];\n  }\n\n  dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n  var value = [];\n  var dimSize = dims.length;\n  var indices = this.indices;\n  context = context || this;\n\n  for (var i = 0; i < indices.length; i++) {\n    // Simple optimization\n    switch (dimSize) {\n      case 0:\n        cb.call(context, i);\n        break;\n\n      case 1:\n        cb.call(context, this.get(dims[0], i, stack), i);\n        break;\n\n      case 2:\n        cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n        break;\n\n      default:\n        for (var k = 0; k < dimSize; k++) {\n          value[k] = this.get(dims[k], i, stack);\n        } // Index\n\n\n        value[k] = i;\n        cb.apply(context, value);\n    }\n  }\n};\n/**\n * Data filter\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n */\n\n\nlistProto.filterSelf = function (dimensions, cb, stack, context) {\n  if (typeof dimensions === 'function') {\n    context = stack;\n    stack = cb;\n    cb = dimensions;\n    dimensions = [];\n  }\n\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var newIndices = [];\n  var value = [];\n  var dimSize = dimensions.length;\n  var indices = this.indices;\n  context = context || this;\n\n  for (var i = 0; i < indices.length; i++) {\n    var keep; // Simple optimization\n\n    if (!dimSize) {\n      keep = cb.call(context, i);\n    } else if (dimSize === 1) {\n      keep = cb.call(context, this.get(dimensions[0], i, stack), i);\n    } else {\n      for (var k = 0; k < dimSize; k++) {\n        value[k] = this.get(dimensions[k], i, stack);\n      }\n\n      value[k] = i;\n      keep = cb.apply(context, value);\n    }\n\n    if (keep) {\n      newIndices.push(indices[i]);\n    }\n  }\n\n  this.indices = newIndices; // Reset data extent\n\n  this._extent = {};\n  return this;\n};\n/**\n * Data mapping to a plain array\n * @param {string|Array.<string>} [dimensions]\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.mapArray = function (dimensions, cb, stack, context) {\n  if (typeof dimensions === 'function') {\n    context = stack;\n    stack = cb;\n    cb = dimensions;\n    dimensions = [];\n  }\n\n  var result = [];\n  this.each(dimensions, function () {\n    result.push(cb && cb.apply(this, arguments));\n  }, stack, context);\n  return result;\n};\n\nfunction cloneListForMapAndSample(original, excludeDimensions) {\n  var allDimensions = original.dimensions;\n  var list = new List(zrUtil.map(allDimensions, original.getDimensionInfo, original), original.hostModel); // FIXME If needs stackedOn, value may already been stacked\n\n  transferProperties(list, original);\n  var storage = list._storage = {};\n  var originalStorage = original._storage; // Init storage\n\n  for (var i = 0; i < allDimensions.length; i++) {\n    var dim = allDimensions[i];\n    var dimStore = originalStorage[dim];\n\n    if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n      storage[dim] = new dimStore.constructor(originalStorage[dim].length);\n    } else {\n      // Direct reference for other dimensions\n      storage[dim] = originalStorage[dim];\n    }\n  }\n\n  return list;\n}\n/**\n * Data mapping to a new List with given dimensions\n * @param {string|Array.<string>} dimensions\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.map = function (dimensions, cb, stack, context) {\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var list = cloneListForMapAndSample(this, dimensions); // Following properties are all immutable.\n  // So we can reference to the same value\n\n  var indices = list.indices = this.indices;\n  var storage = list._storage;\n  var tmpRetValue = [];\n  this.each(dimensions, function () {\n    var idx = arguments[arguments.length - 1];\n    var retValue = cb && cb.apply(this, arguments);\n\n    if (retValue != null) {\n      // a number\n      if (typeof retValue === 'number') {\n        tmpRetValue[0] = retValue;\n        retValue = tmpRetValue;\n      }\n\n      for (var i = 0; i < retValue.length; i++) {\n        var dim = dimensions[i];\n        var dimStore = storage[dim];\n        var rawIdx = indices[idx];\n\n        if (dimStore) {\n          dimStore[rawIdx] = retValue[i];\n        }\n      }\n    }\n  }, stack, context);\n  return list;\n};\n/**\n * Large data down sampling on given dimension\n * @param {string} dimension\n * @param {number} rate\n * @param {Function} sampleValue\n * @param {Function} sampleIndex Sample index for name and id\n */\n\n\nlistProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n  var list = cloneListForMapAndSample(this, [dimension]);\n  var storage = this._storage;\n  var targetStorage = list._storage;\n  var originalIndices = this.indices;\n  var indices = list.indices = [];\n  var frameValues = [];\n  var frameIndices = [];\n  var frameSize = Math.floor(1 / rate);\n  var dimStore = targetStorage[dimension];\n  var len = this.count(); // Copy data from original data\n\n  for (var i = 0; i < storage[dimension].length; i++) {\n    targetStorage[dimension][i] = storage[dimension][i];\n  }\n\n  for (var i = 0; i < len; i += frameSize) {\n    // Last frame\n    if (frameSize > len - i) {\n      frameSize = len - i;\n      frameValues.length = frameSize;\n    }\n\n    for (var k = 0; k < frameSize; k++) {\n      var idx = originalIndices[i + k];\n      frameValues[k] = dimStore[idx];\n      frameIndices[k] = idx;\n    }\n\n    var value = sampleValue(frameValues);\n    var idx = frameIndices[sampleIndex(frameValues, value) || 0]; // Only write value on the filtered data\n\n    dimStore[idx] = value;\n    indices.push(idx);\n  }\n\n  return list;\n};\n/**\n * Get model of one data item.\n *\n * @param {number} idx\n */\n// FIXME Model proxy ?\n\n\nlistProto.getItemModel = function (idx) {\n  var hostModel = this.hostModel;\n  idx = this.indices[idx];\n  return new Model(this._rawData.getItem(idx), hostModel, hostModel && hostModel.ecModel);\n};\n/**\n * Create a data differ\n * @param {module:echarts/data/List} otherList\n * @return {module:echarts/data/DataDiffer}\n */\n\n\nlistProto.diff = function (otherList) {\n  var idList = this._idList;\n  var otherIdList = otherList && otherList._idList;\n  var val; // Use prefix to avoid index to be the same as otherIdList[idx],\n  // which will cause weird udpate animation.\n\n  var prefix = 'e\\0\\0';\n  return new DataDiffer(otherList ? otherList.indices : [], this.indices, function (idx) {\n    return (val = otherIdList[idx]) != null ? val : prefix + idx;\n  }, function (idx) {\n    return (val = idList[idx]) != null ? val : prefix + idx;\n  });\n};\n/**\n * Get visual property.\n * @param {string} key\n */\n\n\nlistProto.getVisual = function (key) {\n  var visual = this._visual;\n  return visual && visual[key];\n};\n/**\n * Set visual property\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setVisual('color', color);\n *  setVisual({\n *      'color': color\n *  });\n */\n\n\nlistProto.setVisual = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setVisual(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._visual = this._visual || {};\n  this._visual[key] = val;\n};\n/**\n * Set layout property.\n * @param {string|Object} key\n * @param {*} [val]\n */\n\n\nlistProto.setLayout = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setLayout(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._layout[key] = val;\n};\n/**\n * Get layout property.\n * @param  {string} key.\n * @return {*}\n */\n\n\nlistProto.getLayout = function (key) {\n  return this._layout[key];\n};\n/**\n * Get layout of single data item\n * @param {number} idx\n */\n\n\nlistProto.getItemLayout = function (idx) {\n  return this._itemLayouts[idx];\n};\n/**\n * Set layout of single data item\n * @param {number} idx\n * @param {Object} layout\n * @param {boolean=} [merge=false]\n */\n\n\nlistProto.setItemLayout = function (idx, layout, merge) {\n  this._itemLayouts[idx] = merge ? zrUtil.extend(this._itemLayouts[idx] || {}, layout) : layout;\n};\n/**\n * Clear all layout of single data item\n */\n\n\nlistProto.clearItemLayouts = function () {\n  this._itemLayouts.length = 0;\n};\n/**\n * Get visual property of single data item\n * @param {number} idx\n * @param {string} key\n * @param {boolean} [ignoreParent=false]\n */\n\n\nlistProto.getItemVisual = function (idx, key, ignoreParent) {\n  var itemVisual = this._itemVisuals[idx];\n  var val = itemVisual && itemVisual[key];\n\n  if (val == null && !ignoreParent) {\n    // Use global visual property\n    return this.getVisual(key);\n  }\n\n  return val;\n};\n/**\n * Set visual property of single data item\n *\n * @param {number} idx\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setItemVisual(0, 'color', color);\n *  setItemVisual(0, {\n *      'color': color\n *  });\n */\n\n\nlistProto.setItemVisual = function (idx, key, value) {\n  var itemVisual = this._itemVisuals[idx] || {};\n  this._itemVisuals[idx] = itemVisual;\n\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        itemVisual[name] = key[name];\n      }\n    }\n\n    return;\n  }\n\n  itemVisual[key] = value;\n};\n/**\n * Clear itemVisuals and list visual.\n */\n\n\nlistProto.clearAllVisual = function () {\n  this._visual = {};\n  this._itemVisuals = [];\n};\n\nvar setItemDataAndSeriesIndex = function (child) {\n  child.seriesIndex = this.seriesIndex;\n  child.dataIndex = this.dataIndex;\n  child.dataType = this.dataType;\n};\n/**\n * Set graphic element relative to data. It can be set as null\n * @param {number} idx\n * @param {module:zrender/Element} [el]\n */\n\n\nlistProto.setItemGraphicEl = function (idx, el) {\n  var hostModel = this.hostModel;\n\n  if (el) {\n    // Add data index and series index for indexing the data by element\n    // Useful in tooltip\n    el.dataIndex = idx;\n    el.dataType = this.dataType;\n    el.seriesIndex = hostModel && hostModel.seriesIndex;\n\n    if (el.type === 'group') {\n      el.traverse(setItemDataAndSeriesIndex, el);\n    }\n  }\n\n  this._graphicEls[idx] = el;\n};\n/**\n * @param {number} idx\n * @return {module:zrender/Element}\n */\n\n\nlistProto.getItemGraphicEl = function (idx) {\n  return this._graphicEls[idx];\n};\n/**\n * @param {Function} cb\n * @param {*} context\n */\n\n\nlistProto.eachItemGraphicEl = function (cb, context) {\n  zrUtil.each(this._graphicEls, function (el, idx) {\n    if (el) {\n      cb && cb.call(context, el, idx);\n    }\n  });\n};\n/**\n * Shallow clone a new list except visual and layout properties, and graph elements.\n * New list only change the indices.\n */\n\n\nlistProto.cloneShallow = function () {\n  var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n  var list = new List(dimensionInfoList, this.hostModel); // FIXME\n\n  list._storage = this._storage;\n  transferProperties(list, this); // Clone will not change the data extent and indices\n\n  list.indices = this.indices.slice();\n\n  if (this._extent) {\n    list._extent = zrUtil.extend({}, this._extent);\n  }\n\n  return list;\n};\n/**\n * Wrap some method to add more feature\n * @param {string} methodName\n * @param {Function} injectFunction\n */\n\n\nlistProto.wrapMethod = function (methodName, injectFunction) {\n  var originalMethod = this[methodName];\n\n  if (typeof originalMethod !== 'function') {\n    return;\n  }\n\n  this.__wrappedMethods = this.__wrappedMethods || [];\n\n  this.__wrappedMethods.push(methodName);\n\n  this[methodName] = function () {\n    var res = originalMethod.apply(this, arguments);\n    return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n  };\n}; // Methods that create a new list based on this list should be listed here.\n// Notice that those method should `RETURN` the new list.\n\n\nlistProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map']; // Methods that change indices of this list should be listed here.\n\nlistProto.CHANGABLE_METHODS = ['filterSelf'];\nvar _default = List;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/data/List.js\n// module id = 995\n// module chunks = 0 1 2","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar OrdinalScale = require(\"../scale/Ordinal\");\n\nvar IntervalScale = require(\"../scale/Interval\");\n\nvar Scale = require(\"../scale/Scale\");\n\nvar numberUtil = require(\"../util/number\");\n\nrequire(\"../scale/Time\");\n\nrequire(\"../scale/Log\");\n\n/**\n * Get axis scale extent before niced.\n * Item of returned array can only be number (including Infinity and NaN).\n */\nfunction getScaleExtent(scale, model) {\n  var scaleType = scale.type;\n  var min = model.getMin();\n  var max = model.getMax();\n  var fixMin = min != null;\n  var fixMax = max != null;\n  var originalExtent = scale.getExtent();\n  var axisDataLen;\n  var boundaryGap;\n  var span;\n\n  if (scaleType === 'ordinal') {\n    axisDataLen = (model.get('data') || []).length;\n  } else {\n    boundaryGap = model.get('boundaryGap');\n\n    if (!zrUtil.isArray(boundaryGap)) {\n      boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n    }\n\n    if (typeof boundaryGap[0] === 'boolean') {\n      boundaryGap = [0, 0];\n    }\n\n    boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n    boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n    span = originalExtent[1] - originalExtent[0] || Math.abs(originalExtent[0]);\n  } // Notice: When min/max is not set (that is, when there are null/undefined,\n  // which is the most common case), these cases should be ensured:\n  // (1) For 'ordinal', show all axis.data.\n  // (2) For others:\n  //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n  //      disabled).\n  //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n  //      be the result that originalExtent enlarged by boundaryGap.\n  // (3) If no data, it should be ensured that `scale.setBlank` is set.\n  // FIXME\n  // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\n  // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\n  // that the results processed by boundaryGap are positive/negative?\n\n\n  if (min == null) {\n    min = scaleType === 'ordinal' ? axisDataLen ? 0 : NaN : originalExtent[0] - boundaryGap[0] * span;\n  }\n\n  if (max == null) {\n    max = scaleType === 'ordinal' ? axisDataLen ? axisDataLen - 1 : NaN : originalExtent[1] + boundaryGap[1] * span;\n  }\n\n  if (min === 'dataMin') {\n    min = originalExtent[0];\n  } else if (typeof min === 'function') {\n    min = min({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  if (max === 'dataMax') {\n    max = originalExtent[1];\n  } else if (typeof max === 'function') {\n    max = max({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  (min == null || !isFinite(min)) && (min = NaN);\n  (max == null || !isFinite(max)) && (max = NaN);\n  scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max)); // Evaluate if axis needs cross zero\n\n  if (model.getNeedCrossZero()) {\n    // Axis is over zero and min is not set\n    if (min > 0 && max > 0 && !fixMin) {\n      min = 0;\n    } // Axis is under zero and max is not set\n\n\n    if (min < 0 && max < 0 && !fixMax) {\n      max = 0;\n    }\n  }\n\n  return [min, max];\n}\n\nfunction niceScaleExtent(scale, model) {\n  var extent = getScaleExtent(scale, model);\n  var fixMin = model.getMin() != null;\n  var fixMax = model.getMax() != null;\n  var splitNumber = model.get('splitNumber');\n\n  if (scale.type === 'log') {\n    scale.base = model.get('logBase');\n  }\n\n  var scaleType = scale.type;\n  scale.setExtent(extent[0], extent[1]);\n  scale.niceExtent({\n    splitNumber: splitNumber,\n    fixMin: fixMin,\n    fixMax: fixMax,\n    minInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('minInterval') : null,\n    maxInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('maxInterval') : null\n  }); // If some one specified the min, max. And the default calculated interval\n  // is not good enough. He can specify the interval. It is often appeared\n  // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n  // to be 60.\n  // FIXME\n\n  var interval = model.get('interval');\n\n  if (interval != null) {\n    scale.setInterval && scale.setInterval(interval);\n  }\n}\n/**\n * @param {module:echarts/model/Model} model\n * @param {string} [axisType] Default retrieve from model.type\n * @return {module:echarts/scale/*}\n */\n\n\nfunction createScaleByModel(model, axisType) {\n  axisType = axisType || model.get('type');\n\n  if (axisType) {\n    switch (axisType) {\n      // Buildin scale\n      case 'category':\n        return new OrdinalScale(model.getCategories(), [Infinity, -Infinity]);\n\n      case 'value':\n        return new IntervalScale();\n      // Extended scale, like time and log\n\n      default:\n        return (Scale.getClass(axisType) || IntervalScale).create(model);\n    }\n  }\n}\n/**\n * Check if the axis corss 0\n */\n\n\nfunction ifAxisCrossZero(axis) {\n  var dataExtent = axis.scale.getExtent();\n  var min = dataExtent[0];\n  var max = dataExtent[1];\n  return !(min > 0 && max > 0 || min < 0 && max < 0);\n}\n/**\n * @param {Array.<number>} tickCoords In axis self coordinate.\n * @param {Array.<string>} labels\n * @param {string} font\n * @param {number} axisRotate 0: towards right horizontally, clock-wise is negative.\n * @param {number} [labelRotate=0] 0: towards right horizontally, clock-wise is negative.\n * @return {number}\n */\n\n\nfunction getAxisLabelInterval(tickCoords, labels, font, axisRotate, labelRotate) {\n  var textSpaceTakenRect;\n  var autoLabelInterval = 0;\n  var accumulatedLabelInterval = 0;\n  var rotation = (axisRotate - labelRotate) / 180 * Math.PI;\n  var step = 1;\n\n  if (labels.length > 40) {\n    // Simple optimization for large amount of labels\n    step = Math.floor(labels.length / 40);\n  }\n\n  for (var i = 0; i < tickCoords.length; i += step) {\n    var tickCoord = tickCoords[i]; // Not precise, do not consider align and vertical align\n    // and each distance from axis line yet.\n\n    var rect = textContain.getBoundingRect(labels[i], font, 'center', 'top');\n    rect.x += tickCoord * Math.cos(rotation);\n    rect.y += tickCoord * Math.sin(rotation); // Magic number\n\n    rect.width *= 1.3;\n    rect.height *= 1.3;\n\n    if (!textSpaceTakenRect) {\n      textSpaceTakenRect = rect.clone();\n    } // There is no space for current label;\n    else if (textSpaceTakenRect.intersect(rect)) {\n        accumulatedLabelInterval++;\n        autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n      } else {\n        textSpaceTakenRect.union(rect); // Reset\n\n        accumulatedLabelInterval = 0;\n      }\n  }\n\n  if (autoLabelInterval === 0 && step > 1) {\n    return step;\n  }\n\n  return (autoLabelInterval + 1) * step - 1;\n}\n/**\n * @param {Object} axis\n * @param {Function} labelFormatter\n * @return {Array.<string>}\n */\n\n\nfunction getFormattedLabels(axis, labelFormatter) {\n  var scale = axis.scale;\n  var labels = scale.getTicksLabels();\n  var ticks = scale.getTicks();\n\n  if (typeof labelFormatter === 'string') {\n    labelFormatter = function (tpl) {\n      return function (val) {\n        return tpl.replace('{value}', val != null ? val : '');\n      };\n    }(labelFormatter); // Consider empty array\n\n\n    return zrUtil.map(labels, labelFormatter);\n  } else if (typeof labelFormatter === 'function') {\n    return zrUtil.map(ticks, function (tick, idx) {\n      return labelFormatter(getAxisRawValue(axis, tick), idx);\n    }, this);\n  } else {\n    return labels;\n  }\n}\n\nfunction getAxisRawValue(axis, value) {\n  // In category axis with data zoom, tick is not the original\n  // index of axis.data. So tick should not be exposed to user\n  // in category axis.\n  return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n}\n\nexports.getScaleExtent = getScaleExtent;\nexports.niceScaleExtent = niceScaleExtent;\nexports.createScaleByModel = createScaleByModel;\nexports.ifAxisCrossZero = ifAxisCrossZero;\nexports.getAxisLabelInterval = getAxisLabelInterval;\nexports.getFormattedLabels = getFormattedLabels;\nexports.getAxisRawValue = getAxisRawValue;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/axisHelper.js\n// module id = 996\n// module chunks = 0 1 2","var features = {};\n\nfunction register(name, ctor) {\n  features[name] = ctor;\n}\n\nfunction get(name) {\n  return features[name];\n}\n\nexports.register = register;\nexports.get = get;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox/featureManager.js\n// module id = 997\n// module chunks = 0 1 2","var Eventful = require(\"../mixin/Eventful\");\n\nexports.Dispatcher = Eventful;\n\nvar env = require(\"./env\");\n\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\nvar isDomLevel2 = typeof window !== 'undefined' && !!window.addEventListener;\nvar MOUSE_EVENT_REG = /^(?:mouse|pointer|contextmenu|drag|drop)|click/;\n\nfunction getBoundingClientRect(el) {\n  // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n  return el.getBoundingClientRect ? el.getBoundingClientRect() : {\n    left: 0,\n    top: 0\n  };\n} // `calculate` is optional, default false\n\n\nfunction clientToLocal(el, e, out, calculate) {\n  out = out || {}; // According to the W3C Working Draft, offsetX and offsetY should be relative\n  // to the padding edge of the target element. The only browser using this convention\n  // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n  // not support the properties.\n  // (see http://www.jacklmoore.com/notes/mouse-position/)\n  // In zr painter.dom, padding edge equals to border edge.\n  // FIXME\n  // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n  // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n  // is too complex. So css-transfrom dont support in this case temporarily.\n\n  if (calculate || !env.canvasSupported) {\n    defaultGetZrXY(el, e, out);\n  } // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n  // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n  // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n  // zoom-factor, overflow / opacity layers, transforms ...)\n  // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n  // <https://bugs.jquery.com/ticket/8523#comment:14>\n  // BTW3, In ff, offsetX/offsetY is always 0.\n  else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n      out.zrX = e.layerX;\n      out.zrY = e.layerY;\n    } // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n    else if (e.offsetX != null) {\n        out.zrX = e.offsetX;\n        out.zrY = e.offsetY;\n      } // For some other device, e.g., IOS safari.\n      else {\n          defaultGetZrXY(el, e, out);\n        }\n\n  return out;\n}\n\nfunction defaultGetZrXY(el, e, out) {\n  // This well-known method below does not support css transform.\n  var box = getBoundingClientRect(el);\n  out.zrX = e.clientX - box.left;\n  out.zrY = e.clientY - box.top;\n}\n/**\n * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n * `calculate` is optional, default false.\n */\n\n\nfunction normalizeEvent(el, e, calculate) {\n  e = e || window.event;\n\n  if (e.zrX != null) {\n    return e;\n  }\n\n  var eventType = e.type;\n  var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n  if (!isTouch) {\n    clientToLocal(el, e, e, calculate);\n    e.zrDelta = e.wheelDelta ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n  } else {\n    var touch = eventType != 'touchend' ? e.targetTouches[0] : e.changedTouches[0];\n    touch && clientToLocal(el, touch, e, calculate);\n  } // Add which for click: 1 === left; 2 === middle; 3 === right; otherwise: 0;\n  // See jQuery: https://github.com/jquery/jquery/blob/master/src/event.js\n  // If e.which has been defined, if may be readonly,\n  // see: https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/which\n\n\n  var button = e.button;\n\n  if (e.which == null && button !== undefined && MOUSE_EVENT_REG.test(e.type)) {\n    e.which = button & 1 ? 1 : button & 2 ? 3 : button & 4 ? 2 : 0;\n  }\n\n  return e;\n}\n\nfunction addEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    el.addEventListener(name, handler);\n  } else {\n    el.attachEvent('on' + name, handler);\n  }\n}\n\nfunction removeEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    el.removeEventListener(name, handler);\n  } else {\n    el.detachEvent('on' + name, handler);\n  }\n}\n/**\n * preventDefault and stopPropagation.\n * Notice: do not do that in zrender. Upper application\n * do that if necessary.\n *\n * @memberOf module:zrender/core/event\n * @method\n * @param {Event} e : event对象\n */\n\n\nvar stop = isDomLevel2 ? function (e) {\n  e.preventDefault();\n  e.stopPropagation();\n  e.cancelBubble = true;\n} : function (e) {\n  e.returnValue = false;\n  e.cancelBubble = true;\n};\n\nfunction notLeftMouse(e) {\n  // If e.which is undefined, considered as left mouse event.\n  return e.which > 1;\n} // 做向上兼容\n\n\nexports.clientToLocal = clientToLocal;\nexports.normalizeEvent = normalizeEvent;\nexports.addEventListener = addEventListener;\nexports.removeEventListener = removeEventListener;\nexports.stop = stop;\nexports.notLeftMouse = notLeftMouse;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/event.js\n// module id = 998\n// module chunks = 0 1 2","var _vector = require(\"./vector\");\n\nvar v2Create = _vector.create;\nvar v2DistSquare = _vector.distSquare;\n\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\nvar mathPow = Math.pow;\nvar mathSqrt = Math.sqrt;\nvar EPSILON = 1e-8;\nvar EPSILON_NUMERIC = 1e-4;\nvar THREE_SQRT = mathSqrt(3);\nvar ONE_THIRD = 1 / 3; // 临时变量\n\nvar _v0 = v2Create();\n\nvar _v1 = v2Create();\n\nvar _v2 = v2Create();\n\nfunction isAroundZero(val) {\n  return val > -EPSILON && val < EPSILON;\n}\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * 计算三次贝塞尔值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return onet * onet * (onet * p0 + 3 * t * p1) + t * t * (t * p3 + 3 * onet * p2);\n}\n/**\n * 计算三次贝塞尔导数值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicDerivativeAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return 3 * (((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet + (p3 - p2) * t * t);\n}\n/**\n * 计算三次贝塞尔方程根，使用盛金公式\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} val\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction cubicRootAt(p0, p1, p2, p3, val, roots) {\n  // Evaluate roots of cubic functions\n  var a = p3 + 3 * (p1 - p2) - p0;\n  var b = 3 * (p2 - p1 * 2 + p0);\n  var c = 3 * (p1 - p0);\n  var d = p0 - val;\n  var A = b * b - 3 * a * c;\n  var B = b * c - 9 * a * d;\n  var C = c * c - 3 * b * d;\n  var n = 0;\n\n  if (isAroundZero(A) && isAroundZero(B)) {\n    if (isAroundZero(b)) {\n      roots[0] = 0;\n    } else {\n      var t1 = -c / b; //t1, t2, t3, b is not zero\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = B * B - 4 * A * C;\n\n    if (isAroundZero(disc)) {\n      var K = B / A;\n      var t1 = -b / a + K; // t1, a is not zero\n\n      var t2 = -K / 2; // t2, t3\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n      var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n\n      if (Y1 < 0) {\n        Y1 = -mathPow(-Y1, ONE_THIRD);\n      } else {\n        Y1 = mathPow(Y1, ONE_THIRD);\n      }\n\n      if (Y2 < 0) {\n        Y2 = -mathPow(-Y2, ONE_THIRD);\n      } else {\n        Y2 = mathPow(Y2, ONE_THIRD);\n      }\n\n      var t1 = (-b - (Y1 + Y2)) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else {\n      var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n      var theta = Math.acos(T) / 3;\n      var ASqrt = mathSqrt(A);\n      var tmp = Math.cos(theta);\n      var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n      var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n      var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n\n      if (t3 >= 0 && t3 <= 1) {\n        roots[n++] = t3;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算三次贝塞尔方程极限值的位置\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {Array.<number>} extrema\n * @return {number} 有效数目\n */\n\n\nfunction cubicExtrema(p0, p1, p2, p3, extrema) {\n  var b = 6 * p2 - 12 * p1 + 6 * p0;\n  var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n  var c = 3 * p1 - 3 * p0;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      extrema[0] = -b / (2 * a);\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        extrema[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 细分三次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction cubicSubdivide(p0, p1, p2, p3, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p23 = (p3 - p2) * t + p2;\n  var p012 = (p12 - p01) * t + p01;\n  var p123 = (p23 - p12) * t + p12;\n  var p0123 = (p123 - p012) * t + p012; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012;\n  out[3] = p0123; // Seg1\n\n  out[4] = p0123;\n  out[5] = p123;\n  out[6] = p23;\n  out[7] = p3;\n}\n/**\n * 投射点到三次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} [out] 投射点\n * @return {number}\n */\n\n\nfunction cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  var prev;\n  var next;\n  var d1;\n  var d2;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n    _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n    d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    prev = t - interval;\n    next = t + interval; // t - interval\n\n    _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n    _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n    d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = cubicAt(x0, x1, x2, x3, next);\n      _v2[1] = cubicAt(y0, y1, y2, y3, next);\n      d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = cubicAt(x0, x1, x2, x3, t);\n    out[1] = cubicAt(y0, y1, y2, y3, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n/**\n * 计算二次方贝塞尔值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticAt(p0, p1, p2, t) {\n  var onet = 1 - t;\n  return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n}\n/**\n * 计算二次方贝塞尔导数值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticDerivativeAt(p0, p1, p2, t) {\n  return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n}\n/**\n * 计算二次方贝塞尔方程根\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction quadraticRootAt(p0, p1, p2, val, roots) {\n  var a = p0 - 2 * p1 + p2;\n  var b = 2 * (p1 - p0);\n  var c = p0 - val;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      var t1 = -b / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算二次贝塞尔方程极限值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @return {number}\n */\n\n\nfunction quadraticExtremum(p0, p1, p2) {\n  var divider = p0 + p2 - 2 * p1;\n\n  if (divider === 0) {\n    // p1 is center of p0 and p2\n    return 0.5;\n  } else {\n    return (p0 - p1) / divider;\n  }\n}\n/**\n * 细分二次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction quadraticSubdivide(p0, p1, p2, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p012 = (p12 - p01) * t + p01; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012; // Seg1\n\n  out[3] = p012;\n  out[4] = p12;\n  out[5] = p2;\n}\n/**\n * 投射点到二次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} out 投射点\n * @return {number}\n */\n\n\nfunction quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = quadraticAt(x0, x1, x2, _t);\n    _v1[1] = quadraticAt(y0, y1, y2, _t);\n    var d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    var prev = t - interval;\n    var next = t + interval; // t - interval\n\n    _v1[0] = quadraticAt(x0, x1, x2, prev);\n    _v1[1] = quadraticAt(y0, y1, y2, prev);\n    var d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = quadraticAt(x0, x1, x2, next);\n      _v2[1] = quadraticAt(y0, y1, y2, next);\n      var d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = quadraticAt(x0, x1, x2, t);\n    out[1] = quadraticAt(y0, y1, y2, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n\nexports.cubicAt = cubicAt;\nexports.cubicDerivativeAt = cubicDerivativeAt;\nexports.cubicRootAt = cubicRootAt;\nexports.cubicExtrema = cubicExtrema;\nexports.cubicSubdivide = cubicSubdivide;\nexports.cubicProjectPoint = cubicProjectPoint;\nexports.quadraticAt = quadraticAt;\nexports.quadraticDerivativeAt = quadraticDerivativeAt;\nexports.quadraticRootAt = quadraticRootAt;\nexports.quadraticExtremum = quadraticExtremum;\nexports.quadraticSubdivide = quadraticSubdivide;\nexports.quadraticProjectPoint = quadraticProjectPoint;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/curve.js\n// module id = 999\n// module chunks = 0 1 2"],"sourceRoot":""}