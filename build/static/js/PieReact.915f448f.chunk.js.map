{"version":3,"sources":["../static/js/PieReact.915f448f.chunk.js","Echarts/PieReact.js","../node_modules/zrender/lib/core/util.js","../node_modules/echarts/lib/echarts.js","../node_modules/echarts/lib/util/graphic.js","../node_modules/echarts/lib/util/number.js","../node_modules/echarts/lib/util/model.js","../node_modules/echarts/lib/config.js","../node_modules/zrender/lib/core/vector.js","../node_modules/echarts/lib/util/format.js","../node_modules/zrender/lib/core/env.js","../node_modules/zrender/lib/core/BoundingRect.js","../node_modules/zrender/lib/graphic/Path.js","../node_modules/echarts/lib/model/Model.js","../node_modules/echarts/lib/util/layout.js","../node_modules/echarts/lib/model/Component.js","../node_modules/echarts/lib/util/clazz.js","../node_modules/zrender/lib/contain/text.js","../node_modules/zrender/lib/core/matrix.js","../node_modules/echarts/lib/data/List.js","../node_modules/echarts/lib/coord/axisHelper.js","../node_modules/echarts/lib/component/toolbox/featureManager.js","../node_modules/zrender/lib/core/event.js","../node_modules/zrender/lib/core/curve.js","../node_modules/echarts/lib/model/Series.js","../node_modules/zrender/lib/mixin/Eventful.js","../node_modules/zrender/lib/tool/color.js","../node_modules/echarts/lib/util/symbol.js","../node_modules/echarts/lib/data/helper/completeDimensions.js","../node_modules/echarts/lib/lang.js","../node_modules/echarts/lib/CoordinateSystem.js","../node_modules/zrender/lib/core/PathProxy.js","../node_modules/echarts/lib/util/throttle.js","../node_modules/zrender/lib/container/Group.js","../node_modules/zrender/lib/config.js","../node_modules/echarts/lib/model/mixin/makeStyleMapper.js","../node_modules/echarts/lib/view/Chart.js","../node_modules/echarts/lib/data/DataDiffer.js","../node_modules/echarts/lib/scale/Scale.js","../node_modules/echarts/lib/component/axisPointer/modelHelper.js","../node_modules/echarts/lib/chart/helper/createListFromArray.js","../node_modules/echarts/lib/coord/Axis.js","../node_modules/zrender/lib/graphic/Displayable.js","../node_modules/zrender/lib/graphic/Gradient.js","../node_modules/echarts/lib/scale/Interval.js","../node_modules/echarts/lib/component/axis/AxisBuilder.js","../node_modules/echarts/lib/component/axis/AxisView.js","../node_modules/zrender/lib/core/log.js","../node_modules/zrender/lib/core/timsort.js","../node_modules/zrender/lib/graphic/Image.js","../node_modules/zrender/lib/graphic/helper/image.js","../node_modules/echarts/lib/util/component.js","../node_modules/echarts/lib/coord/axisModelCommonMixin.js","../node_modules/echarts/lib/component/dataZoom/DataZoomModel.js","../node_modules/echarts/lib/component/dataZoom/helper.js","../node_modules/echarts/lib/component/dataZoom/DataZoomView.js","../node_modules/zrender/lib/zrender.js","../node_modules/zrender/lib/graphic/helper/text.js","../node_modules/echarts/lib/component/axisPointer.js","../node_modules/echarts/lib/component/axisPointer/viewHelper.js","../node_modules/zrender/lib/mixin/Transformable.js","../node_modules/zrender/lib/core/bbox.js","../node_modules/zrender/lib/graphic/Text.js","../node_modules/echarts/lib/view/Component.js","../node_modules/echarts/lib/component/helper/sliderMove.js","../node_modules/zrender/lib/core/guid.js","../node_modules/zrender/lib/Element.js","../node_modules/zrender/lib/animation/Animator.js","../node_modules/zrender/lib/core/LRU.js","../node_modules/zrender/lib/graphic/Style.js","../node_modules/zrender/lib/graphic/Pattern.js","../node_modules/zrender/lib/animation/requestAnimationFrame.js","../node_modules/zrender/lib/graphic/helper/roundRect.js","../node_modules/zrender/lib/contain/util.js","../node_modules/zrender/lib/contain/windingLine.js","../node_modules/zrender/lib/graphic/helper/poly.js","../node_modules/echarts/lib/model/mixin/colorPalette.js","../node_modules/echarts/lib/scale/helper.js","../node_modules/echarts/lib/component/axisPointer/findPointFromSeries.js","../node_modules/echarts/lib/component/axisPointer/globalListener.js","../node_modules/echarts/lib/component/helper/listComponent.js","../node_modules/echarts/lib/component/dataZoom/history.js","../node_modules/zrender/lib/graphic/helper/fixClipWithShadow.js","../node_modules/echarts/lib/component/axisPointer/CartesianAxisPointer.js","../node_modules/echarts/lib/component/axisPointer/BaseAxisPointer.js","../node_modules/echarts/lib/component/axis/cartesianAxisHelper.js","../node_modules/echarts/lib/component/legend/LegendModel.js","../node_modules/echarts/lib/component/legend/LegendView.js","../node_modules/echarts/lib/component/helper/BrushController.js","../node_modules/echarts/lib/component/helper/cursorHelper.js","../node_modules/zrender/lib/graphic/mixin/RectText.js","../node_modules/zrender/lib/contain/line.js","../node_modules/zrender/lib/contain/quadratic.js","../node_modules/zrender/lib/graphic/LinearGradient.js","../node_modules/echarts/lib/export.js","../node_modules/echarts/lib/coord/geo/parseGeoJson.js","../node_modules/echarts/lib/coord/geo/Region.js","../node_modules/zrender/lib/contain/polygon.js","../node_modules/echarts/lib/component/tooltip.js","../node_modules/echarts/lib/component/legend.js","../node_modules/echarts/lib/processor/dataFilter.js","../node_modules/echarts/lib/component/toolbox.js","../node_modules/echarts/lib/component/helper/interactionMutex.js","../node_modules/echarts/lib/component/helper/BrushTargetManager.js","../node_modules/echarts/lib/component/helper/brushHelper.js","../node_modules/echarts/lib/component/dataZoom/typeDefaulter.js","../node_modules/echarts/lib/component/dataZoom/dataZoomProcessor.js","../node_modules/echarts/lib/component/dataZoom/dataZoomAction.js","../node_modules/zrender/lib/Handler.js","../node_modules/zrender/lib/mixin/Draggable.js","../node_modules/zrender/lib/Storage.js","../node_modules/zrender/lib/mixin/Animatable.js","../node_modules/zrender/lib/animation/Clip.js","../node_modules/zrender/lib/animation/easing.js","../node_modules/zrender/lib/Painter.js","../node_modules/zrender/lib/Layer.js","../node_modules/zrender/lib/animation/Animation.js","../node_modules/zrender/lib/dom/HandlerProxy.js","../node_modules/zrender/lib/core/GestureMgr.js","../node_modules/echarts/lib/model/Global.js","../node_modules/echarts/lib/model/mixin/lineStyle.js","../node_modules/echarts/lib/model/mixin/areaStyle.js","../node_modules/echarts/lib/model/mixin/textStyle.js","../node_modules/zrender/lib/tool/path.js","../node_modules/zrender/lib/contain/path.js","../node_modules/zrender/lib/contain/cubic.js","../node_modules/zrender/lib/contain/arc.js","../node_modules/zrender/lib/tool/transformPath.js","../node_modules/zrender/lib/graphic/shape/Circle.js","../node_modules/zrender/lib/graphic/shape/Sector.js","../node_modules/zrender/lib/graphic/shape/Ring.js","../node_modules/zrender/lib/graphic/shape/Polygon.js","../node_modules/zrender/lib/graphic/helper/smoothSpline.js","../node_modules/zrender/lib/graphic/helper/smoothBezier.js","../node_modules/zrender/lib/graphic/shape/Polyline.js","../node_modules/zrender/lib/graphic/shape/Rect.js","../node_modules/zrender/lib/graphic/shape/Line.js","../node_modules/zrender/lib/graphic/shape/BezierCurve.js","../node_modules/zrender/lib/graphic/shape/Arc.js","../node_modules/zrender/lib/graphic/CompoundPath.js","../node_modules/zrender/lib/graphic/RadialGradient.js","../node_modules/echarts/lib/model/mixin/itemStyle.js","../node_modules/echarts/lib/model/mixin/boxLayout.js","../node_modules/echarts/lib/model/globalDefault.js","../node_modules/echarts/lib/ExtensionAPI.js","../node_modules/echarts/lib/model/OptionManager.js","../node_modules/echarts/lib/preprocessor/backwardCompat.js","../node_modules/echarts/lib/preprocessor/helper/compatStyle.js","../node_modules/echarts/lib/visual/seriesColor.js","../node_modules/echarts/lib/loading/default.js","../node_modules/echarts/lib/helper.js","../node_modules/echarts/lib/scale/Ordinal.js","../node_modules/echarts/lib/scale/Time.js","../node_modules/echarts/lib/scale/Log.js","../node_modules/echarts/lib/component/axisPointer/axisTrigger.js","../node_modules/echarts/lib/component/axisPointer/AxisPointerModel.js","../node_modules/echarts/lib/component/axisPointer/AxisPointerView.js","../node_modules/echarts/lib/component/tooltip/TooltipModel.js","../node_modules/echarts/lib/component/tooltip/TooltipView.js","../node_modules/echarts/lib/component/tooltip/TooltipContent.js","../node_modules/echarts/lib/component/legend/legendAction.js","../node_modules/echarts/lib/component/legend/legendFilter.js","../node_modules/echarts/lib/component/helper/selectableMixin.js","../node_modules/echarts/lib/visual/dataColor.js","../node_modules/echarts/lib/component/toolbox/ToolboxModel.js","../node_modules/echarts/lib/component/toolbox/ToolboxView.js","../node_modules/echarts/lib/component/toolbox/feature/SaveAsImage.js","../node_modules/echarts/lib/component/toolbox/feature/MagicType.js","../node_modules/echarts/lib/component/toolbox/feature/DataView.js","../node_modules/echarts/lib/component/toolbox/feature/DataZoom.js","../node_modules/echarts/lib/component/dataZoomSelect.js","../node_modules/echarts/lib/component/dataZoom/AxisProxy.js","../node_modules/echarts/lib/component/dataZoom/SelectZoomModel.js","../node_modules/echarts/lib/component/dataZoom/SelectZoomView.js","../node_modules/echarts/lib/component/toolbox/feature/Restore.js","../node_modules/echarts/lib/action/createDataSelectAction.js","../node_modules/echarts/lib/chart/pie.js","../node_modules/echarts/lib/chart/pie/PieSeries.js","../node_modules/echarts/lib/chart/pie/PieView.js","../node_modules/echarts/lib/chart/pie/pieLayout.js","../node_modules/echarts/lib/chart/pie/labelLayout.js"],"names":["webpackJsonp","1024","module","__webpack_exports__","__webpack_require__","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","__WEBPACK_IMPORTED_MODULE_0_react__","__WEBPACK_IMPORTED_MODULE_0_react___default","n","__WEBPACK_IMPORTED_MODULE_1_echarts_lib_echarts__","__WEBPACK_IMPORTED_MODULE_1_echarts_lib_echarts___default","__WEBPACK_IMPORTED_MODULE_2_echarts_lib_component_tooltip__","__WEBPACK_IMPORTED_MODULE_3_echarts_lib_component_legend__","__WEBPACK_IMPORTED_MODULE_4_echarts_lib_chart_pie__","__WEBPACK_IMPORTED_MODULE_5_echarts_lib_component_toolbox__","_createClass","defineProperties","target","props","i","length","descriptor","key","protoProps","staticProps","PieReact","_React$Component","this","_this","getPrototypeOf","initPie","bind","_props$option","option","undefined","myChart","a","init","ID","setOption","window","onresize","resize","_this2","_props","_props$width","width","_props$height","height","createElement","ref","style","Component","1027","exports","$override","name","fn","methods","clone","source","result","typeStr","objToString","len","TYPED_ARRAY","Ctor","from","BUILTIN_OBJECT","isPrimitive","isDom","hasOwnProperty","merge","overwrite","isObject","targetProp","sourceProp","isArray","isBuiltInObject","mergeAll","targetAndSources","extend","defaults","overlay","getContext","_ctx","createCanvas","indexOf","array","inherits","clazz","baseClazz","F","clazzPrototype","prop","mixin","isArrayLike","data","each","obj","cb","context","forEach","nativeForEach","map","nativeMap","push","reduce","memo","nativeReduce","filter","nativeFilter","find","func","args","nativeSlice","arguments","apply","concat","curry","isFunction","isString","type","nodeType","ownerDocument","eqNaN","retrieve","values","retrieve2","value0","value1","retrieve3","value2","slice","Function","normalizeCssArray","val","assert","condition","message","Error","setAsPrimitive","primitiveKey","HashMap","set","createHashMap","noop","[object Function]","[object RegExp]","[object Date]","[object Error]","[object CanvasGradient]","[object CanvasPattern]","[object Image]","[object Canvas]","[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]","toString","arrayProto","Array","document","get","prefixedKey","removeKey","1028","createRegisterEventWithLowercaseName","method","eventName","handler","toLowerCase","Eventful","MessageCenter","ECharts","dom","theme","opts","prioritySortFunc","b","prio","themeStorage","id","group","_dom","zr","_zr","zrender","renderer","devicePixelRatio","_throttledZrFlush","throttle","zrUtil","flush","backwardCompat","_theme","_chartsViews","_chartsMap","_componentsViews","_componentsMap","_coordSysMgr","CoordinateSystemManager","_api","createExtensionAPI","_messageCenter","_initEvents","_pendingActions","timsort","visualFuncs","dataProcessorFuncs","animation","on","_onframe","doConvertPixel","methodName","finder","ecModel","_model","coordSysList","getCoordinateSystems","modelUtil","parseFinder","coordSys","updateDirectly","ecIns","payload","mainType","subType","callView","view","__alive","__model","query","eachComponent","model","index","__viewId","doDispatchAction","silent","payloadType","escapeConnect","actionWrap","actions","actionInfo","cptType","update","split","updateMethod","pop","parseClassType","IN_MAIN_PROCESS","payloads","batched","batch","item","eventObj","eventObjBatch","isHighDown","batchItem","action","event","main","sub","OPTION_UPDATED","updateMethods","prepareAndUpdate","trigger","flushPendingActions","pendingActions","shift","triggerUpdatedEvent","invokeUpdateMethod","api","component","componentModel","updateZ","eachSeries","seriesModel","idx","chart","updateProgressiveAndBlend","updateHoverLayerStatus","postUpdateFuncs","prepareView","isComponent","viewList","viewMap","componentType","viewId","classType","Clazz","ComponentView","getClass","ChartView","add","__id","__ecComponentInfo","componentIndex","remove","dispose","splice","processData","process","stackSeriesData","stackedDataMap","series","stack","getData","previousStack","stackedOn","doLayout","visual","isLayout","doVisualEncoding","excludesLayout","clearColorPalette","doRender","componentView","render","chartView","storage","elCount","traverse","el","isGroup","env","node","useHoverLayer","ignore","frameDrawNum","needProgressive","progressive","Math","floor","stopAnimation","blendMode","setStyle","z","zlevel","ecInstance","coordSysMgr","ExtensionAPI","getComponentByElement","modelInfo","getComponent","parent","enableConnect","updateConnectedChartsStatus","charts","status","STATUS_KEY","eventActionMap","actionType","eventType","connectedGroups","makeActionFromEvent","otherCharts","instances","otherChart","dispatchAction","existInstance","getInstanceByDom","idBase","setAttribute","DOM_ATTRIBUTE_KEY","connect","groupId","groupIdBase","disConnect","isDisposed","getAttribute","getInstanceById","registerTheme","registerPreprocessor","preprocessorFunc","optionPreprocessorFuncs","registerProcessor","priority","processorFunc","PRIORITY_PROCESSOR_FILTER","registerPostUpdate","postUpdateFunc","registerAction","ACTION_REG","test","registerCoordinateSystem","CoordinateSystem","register","getCoordinateSystemDimensions","coordSysCreator","getDimensionsInfo","dimensions","registerLayout","layoutFunc","PRIORITY_VISUAL_LAYOUT","registerVisual","visualFunc","PRIORITY_VISUAL_CHART","registerLoading","loadingFx","loadingEffects","extendComponentModel","ComponentModel","extendComponentView","extendSeriesModel","SeriesModel","extendChartView","setCanvasCreator","creator","registerMap","mapName","geoJson","specialAreas","features","JSON","parse","mapDataStores","getMap","_config","__DEV__","colorTool","GlobalModel","OptionManager","graphic","_throttle","seriesColor","loadingDefault","dependencies","PRIORITY","PROCESSOR","FILTER","STATISTIC","VISUAL","LAYOUT","GLOBAL","CHART","COMPONENT","BRUSH","off","one","echartsProto","getDom","getZr","notMerge","lazyUpdate","optionManager","setTheme","console","log","getModel","getOption","getWidth","getHeight","getDevicePixelRatio","painter","dpr","getRenderedCanvas","canvasSupported","pixelRatio","backgroundColor","list","getDisplayList","getSvgDataUrl","svgSupported","pathToSvg","getDataURL","excludeComponents","excludesComponentViews","url","getType","toDataURL","getConnectedDataURL","mathMin","min","mathMax","max","left","Infinity","top","right","bottom","canvasList","canvas","boundingRect","getBoundingClientRect","targetCanvas","img","Image","x","y","image","refreshImmediately","convertToPixel","convertFromPixel","containPixel","models","coordinateSystem","containPoint","getVisual","visualType","defaultMainType","dataIndexInside","indexOfRawIndex","dataIndex","getItemVisual","getViewOfComponentModel","getViewOfSeriesModel","restoreData","isSingleCanvas","configLayer","clearColor","colorArr","stringify","colorStops","background","updateView","clearAllVisual","updateVisual","updateLayout","optionChanged","resetOption","_loadingFX","showLoading","cfg","hideLoading","opt","browser","weChat","MOUSE_EVENT_NAMES","eveName","e","params","dataModel","getSeriesByIndex","seriesIndex","getDataParams","dataType","eventData","_disposed","clear","Date","disconnect","dataTool","version","___ec_export","1029","extendShape","Path","extendPath","pathData","pathTool","extendFromString","makePath","rect","layout","path","createFromString","getBoundingRect","centerGraphic","resizePath","makeImage","imageUrl","onload","aspect","applyTransform","pathRect","m","calculateTransform","subPixelOptimizeLine","param","shape","lineWidth","round","x1","x2","subPixelOptimize","y1","y2","subPixelOptimizeRect","originX","originY","originWidth","originHeight","position","positiveOrNegative","doubledPosition","hasFillOrStroke","fillOrStroke","liftColor","color","lift","cacheElementStl","__hoverStlDirty","stroke","fill","hoverStyle","__hoverStl","normalStyle","__normalStl","doSingleEnterHover","__isHover","__zr","addHover","insideRollbackOpt","rollbackInsideStyle","extendFrom","applyInsideStyle","insideOriginalTextPosition","textFill","autoColor","dirty","z2","doSingleLeaveHover","normalStl","removeHover","doEnterHover","child","doLeaveHover","setElementHoverStl","hoverStl","onElementMouseOver","__hoverSilentOnTouch","zrByTouch","__isEmphasis","onElementMouseOut","enterEmphasis","leaveEmphasis","setHoverStyle","hoverSilentOnTouch","setLabelStyle","emphasisStyle","normalModel","emphasisModel","normalSpecified","emphasisSpecified","EMPTY_OBJ","labelFetcher","labelDataIndex","labelDimIndex","showNormal","getShallow","showEmphasis","baseText","getFormattedLabel","defaultText","normalStyleText","emphasisStyleText","setTextStyle","text","textStyle","textStyleModel","specifiedTextStyle","isEmphasis","setTextStyleCommon","host","setText","labelModel","defaultColor","isRectText","textPosition","textOffset","labelRotate","PI","textRotation","textDistance","richResult","globalTextStyle","richItemNames","getRichItemNames","richTextStyle","setTokenTextStyle","rich","forceRich","richItemNameMap","parentModel","isBlock","getAutoColor","textStroke","textBorderColor","textStrokeWidth","textBorderWidth","originalTextPosition","insideRollback","fontStyle","fontWeight","fontSize","fontFamily","textAlign","textVerticalAlign","textLineHeight","textWidth","textHeight","textTag","disableBox","textBackgroundColor","textPadding","textBorderRadius","textBoxShadowColor","textBoxShadowBlur","textBoxShadowOffsetX","textBoxShadowOffsetY","textShadowColor","textShadowBlur","textShadowOffsetX","textShadowOffsetY","useInsideStyle","getFont","gTextStyleModel","join","animateOrSetProps","isUpdate","animatableModel","isAnimationEnabled","postfix","duration","animationEasing","animationDelay","getAnimationDelayParams","animateTo","attr","updateProps","initProps","getTransform","ancestor","mat","matrix","identity","mul","getLocalTransform","transform","invert","Transformable","vector","transformDirection","direction","hBase","abs","vBase","vertex","groupTransition","g1","g2","getAnimatableProps","rotation","elMap1","g","elMap","anid","oldEl","newProp","clipPointsByRect","points","point","clipRectByRect","targetRect","createIcon","iconStr","rectHover","strokeNoScale","replace","Group","Text","Circle","Sector","Ring","Polygon","Polyline","Rect","Line","BezierCurve","Arc","CompoundPath","LinearGradient","RadialGradient","BoundingRect","mergePath","1030","_trim","str","linearMap","domain","range","clamp","subDomain","subRange","parsePercent","percent","all","match","parseFloat","NaN","precision","returnStr","toFixed","asc","arr","sort","getPrecision","isNaN","count","getPrecisionSafe","eIndex","dotIndex","getPixelPrecision","dataExtent","pixelExtent","LN10","dataQuantity","sizeQuantity","isFinite","getPercentWithPrecision","valueList","sum","acc","digits","pow","votesPerQuota","targetSeats","seats","votes","currentSum","remainder","Number","NEGATIVE_INFINITY","maxId","remRadian","radian","pi2","isRadianAroundZero","RADIAN_EPSILON","parseDate","TIME_REG","exec","hour","toUpperCase","UTC","quantity","quantityExponent","nice","nf","exponent","exp10","f","reformIntervals","littleThan","lg","interval","close","curr","currClose","isNumeric","v","MAX_SAFE_INTEGER","1031","normalizeToArray","defaultEmphasis","subOpts","emphasisOpt","emphasis","normalOpt","normal","subOptName","getDataItemValue","dataItem","isDataItemOption","converDataValue","dimInfo","dimType","nubmerUtil","createDataFormatModel","Model","dataFormatMixin","mappingToExists","exists","newCptOptions","exist","cptOption","isIdInner","makeIdAndName","mapResult","idMap","existCpt","keyInfo","idNum","compressBatches","batchA","batchB","makeMap","sourceBatch","otherMap","seriesId","dataIndices","otherDataIndices","j","lenj","mapToArray","isData","mapA","mapB","queryDataIndex","indexOfName","has","parsedKey","queryType","includeMainTypes","queryParam","queryComponents","dataDimToCoordDim","dataDim","getDimension","dimItem","getDimensionInfo","coordDim","coordDimToDataDim","dimName","coordDimIndex","otherDimToDataDim","otherDim","otherDims","dimIndex","formatUtil","TEXT_STYLE_OPTIONS","rawValue","getRawValue","rawDataIndex","getRawIndex","getName","itemOpt","getRawDataItem","componentSubType","seriesType","seriesName","marker","getTooltipMarker","$vars","labelProp","itemModel","getItemModel","formatter","formatTpl","formatTooltip","makeGetter","hostObj","1032","global","dev","1033","out","ArrayCtor","copy","v1","v2","scaleAndAdd","sqrt","lenSquare","div","dot","scale","s","normalize","d","distance","distanceSquare","negate","lerp","t","Float32Array","lengthSquare","dist","distSquare","1034","addCommas","toCamelCase","upperCaseFirst","group1","charAt","encodeHTML","String","tpl","paramsList","encode","seriesLen","alias","TPL_VAR_ALIAS","wrapVar","seriesIdx","k","formatTplSimple","extraCssText","formatTime","isUTC","date","numberUtil","utc","M","h","s2d","capitalFirst","substr","textContain","varName","truncateText","getTextRect","1035","navigator","os","ua","firefox","ie","edge","SVGRect","touchEventsSupported","pointerEventsSupported","userAgent","_default","1036","vec2","v2ApplyTransform","union","other","lt","rb","lb","rt","maxX","maxY","sx","sy","translate","intersect","ax0","ax1","ay0","ay1","bx0","bx1","by0","by1","contain","plain","1037","Displayable","PathProxy","pathContain","Pattern","getCanvasPattern","pathProxyForDraw","__dirtyPath","strokeContainThreshold","brush","ctx","prevEl","hasStroke","hasFill","hasFillGradient","hasStrokeGradient","hasFillPattern","hasStrokePattern","setTransform","__dirty","_fillGradient","getGradient","_strokeGradient","fillStyle","strokeStyle","lineDash","lineDashOffset","ctxLineDash","setLineDash","getGlobalScale","setScale","beginPath","setLineDashOffset","buildPath","rebuildPath","restoreTransform","drawRectText","shapeCfg","inBundle","createPathProxy","_rect","needsUpdateRect","rectWithStroke","_rectWithStroke","w","lineScale","getLineScale","localPos","transformCoordToLocal","containStroke","dirtyPath","refresh","__clipTarget","animateShape","loop","animate","attrKV","setShape","Sub","defaultShape","thisShape","1038","doGet","pathArr","getParent","getParentMethod","clazzUtil","lineStyleMixin","areaStyleMixin","textStyleMixin","itemStyleMixin","mergeOption","ignoreParent","parsePath","thisParentModel","isEmpty","setReadOnly","properties","customizeGetParent","enableClassExtend","1039","boxLayout","orient","gap","maxWidth","maxHeight","currentLineMaxSize","eachChild","nextX","nextY","nextChild","childAt","nextChildRect","moveX","newline","moveY","getAvailableSize","positionInfo","containerRect","margin","containerWidth","containerHeight","getLayoutRect","verticalMargin","horizontalMargin","positionElement","hv","boundingMode","needLocalTransform","elPos","dx","dy","sizeCalculable","hvIdx","HV_NAMES","mergeLayoutParam","targetOption","newOption","names","newParams","newValueCount","merged","mergedValueCount","hasProp","hasValue","ignoreSize","hResult","vResult","getLayoutParams","copyLayoutParams","LOCATION_PARAMS","_number","box","vbox","hbox","1040","getDependencies","deps","getClassesByMainType","arrayPush","componentUtil","boxLayoutMixin","defaultOption","dependentModels","uid","layoutMode","$constructor","extraOpt","getUID","mergeDefaultAndTheme","inputPositionParams","themeModel","getTheme","getDefaultOption","optionUpdated","newCptOption","isInit","hasOwn","optList","Class","getReferringComponents","enableClassManagement","registerWhenExtend","enableSubTypeDefaulter","enableTopologicalTravel","1041","MEMBER_PRIFIX","ret","TYPE_DELIMITER","checkClassType","RootClass","mandatoryMethods","proto","ExtendedClass","superCall","superApply","entity","options","makeContainer","container","IS_CONTAINER","registerClass","componentMainType","throwWhenNotFound","o","hasClass","getAllClassMainTypes","types","hasSubTypes","originalExtend","1042","font","DEFAULT_FONT","textWidthCache","textLines","l","measureText","textWidthCacheCounter","TEXT_CACHE_MAX","truncate","getRichTextRect","getPlainTextRect","contentBlock","parsePlainText","outerWidth","outerHeight","adjustTextX","adjustTextY","lineHeight","parseRichText","adjustTextPositionOnRect","halfHeight","ellipsis","prepareTruncateOptions","truncateSingleLine","maxIterations","minChar","cnCharWidth","ascCharWidth","placeholder","contentWidth","ellipsisWidth","textLine","subLength","estimateLength","charCode","charCodeAt","getLineHeight","padding","lines","truncOuterHeight","truncOuterWidth","lastIndex","STYLE_REG","matchedIndex","pushTokens","substring","contentHeight","pendingList","stlPadding","truncateWidth","truncateHeight","line","tokens","token","tokenStyle","styleName","tokenHeight","tokenWidth","tokenWidthNotSpecified","percentWidth","bgImg","imageHelper","findExistImage","isImageReady","paddingW","remianTruncWidth","parseInt","block","isEmptyStr","strs","isLineHolder","tokensLen","makeFont","textFont","_util","1043","m1","m2","out0","out1","out2","out3","out4","out5","rotate","rad","aa","ac","atx","ab","ad","aty","st","sin","ct","cos","vx","vy","det","1044","transferProperties","TRANSFERABLE_PROPERTIES","__wrappedMethods","propName","DefaultDataProvider","dataArray","_array","normalizeDimensions","cloneListForMapAndSample","original","excludeDimensions","allDimensions","List","hostModel","_storage","originalStorage","dim","dimStore","DataDiffer","globalObj","dataCtors","float","Float64Array","int","Int32Array","ordinal","number","time","pure","getItem","dimensionInfos","dimensionNames","dimensionName","dimensionInfo","stackable","_dimensionInfos","indices","_nameList","_idList","_optionModels","_visual","_layout","_itemVisuals","_itemLayouts","_graphicEls","_rawData","_extent","listProto","hasItemOption","initData","nameList","dimValueGetter","nameDimIdx","dimensionInfoMap","size","idList","nameRepeatCount","itemName","DataCtor","stackedValue","getValues","getDataExtent","dimData","dimExtent","getSum","rawIndex","mid","indicesOfNearest","maxDistance","nearestIndices","minDist","MAX_VALUE","minDiff","diff","rawIdx","getId","dims","dimSize","filterSelf","newIndices","keep","mapArray","tmpRetValue","retValue","downSample","dimension","rate","sampleValue","sampleIndex","targetStorage","originalIndices","frameValues","frameIndices","frameSize","otherList","otherIdList","setVisual","setLayout","getLayout","getItemLayout","setItemLayout","clearItemLayouts","itemVisual","setItemVisual","setItemDataAndSeriesIndex","setItemGraphicEl","getItemGraphicEl","eachItemGraphicEl","cloneShallow","dimensionInfoList","wrapMethod","injectFunction","originalMethod","res","TRANSFERABLE_METHODS","CHANGABLE_METHODS","1045","getScaleExtent","axisDataLen","boundaryGap","span","scaleType","getMin","getMax","fixMin","fixMax","originalExtent","getExtent","setBlank","getNeedCrossZero","niceScaleExtent","extent","splitNumber","base","setExtent","niceExtent","minInterval","maxInterval","setInterval","createScaleByModel","axisType","OrdinalScale","getCategories","IntervalScale","Scale","ifAxisCrossZero","axis","getAxisLabelInterval","tickCoords","labels","axisRotate","textSpaceTakenRect","autoLabelInterval","accumulatedLabelInterval","step","tickCoord","getFormattedLabels","labelFormatter","getTicksLabels","ticks","getTicks","tick","getAxisRawValue","getLabel","1046","ctor","1047","clientToLocal","calculate","defaultGetZrXY","layerX","offsetX","zrX","zrY","layerY","offsetY","clientX","clientY","normalizeEvent","touch","targetTouches","changedTouches","zrDelta","wheelDelta","detail","button","which","MOUSE_EVENT_REG","addEventListener","isDomLevel2","attachEvent","removeEventListener","detachEvent","notLeftMouse","Dispatcher","stop","preventDefault","stopPropagation","cancelBubble","returnValue","1048","isAroundZero","EPSILON","isNotAroundZero","cubicAt","p0","p1","p2","p3","onet","cubicDerivativeAt","cubicRootAt","roots","c","A","B","C","t1","disc","K","t2","discSqrt","mathSqrt","Y1","Y2","mathPow","ONE_THIRD","T","theta","acos","ASqrt","tmp","THREE_SQRT","t3","cubicExtrema","extrema","cubicSubdivide","p01","p12","p23","p012","p123","p0123","cubicProjectPoint","x0","y0","x3","y3","prev","next","d1","d2","_v0","_t","_v1","v2DistSquare","EPSILON_NUMERIC","_v2","quadraticAt","quadraticDerivativeAt","quadraticRootAt","quadraticExtremum","divider","quadraticSubdivide","quadraticProjectPoint","_vector","v2Create","1049","_format","_clazz","colorPaletteMixin","legendDataProvider","visualColorAccessPath","getInitialData","themeSubType","label","fillDataTextStyle","newSeriesOption","getLinkedData","setData","getRawData","getBaseAxis","multipleSeries","formattedValue","setEachItem","dimIdx","tooltip","valStr","vertially","tooltipName","tooltipDims","colorEl","animationEnabled","getColorFromPalette","scope","getAxisTooltipData","getTooltipPosition","1050","arrySlice","_$handlers","_h","isSilent","newList","argLen","triggerWithContext","1051","clampCssByte","clampCssAngle","clampCssFloat","parseCssInt","parseCssFloat","cssHueToRgb","lerpNumber","p","setRgba","r","copyRgba","putToCache","colorStr","rgbaArr","lastRemovedArr","colorCache","put","cached","kCSSColorTable","op","ep","fname","alpha","hsla2rgba","iv","hsla","rgba","rgba2hsla","H","S","R","G","vMin","vMax","delta","L","deltaR","deltaG","deltaB","level","toHex","fastLerp","normalizedValue","colors","leftIndex","rightIndex","ceil","leftColor","rightColor","dv","fullOutput","modifyHSL","modifyAlpha","arrColor","LRU","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","fastMapToColor","mapToColor","1052","symbolPathSetColor","innerColor","symbolStyle","symbolShape","symbolType","__isEmptyBrush","createSymbol","keepAspect","symbolPath","SymbolClz","setColor","Triangle","cx","cy","moveTo","lineTo","closePath","Diamond","Pin","angle","asin","tanX","tanY","cpLen","cpLen2","arc","bezierCurveTo","Arrow","symbolCtors","roundRect","square","circle","diamond","pin","arrow","triangle","symbolShapeMakers","symbolBuildProxies","beforeBrush","proxySymbol","1053","completeDimensions","sysDims","applyDim","resultItem","OTHER_DIMS","coordDimNameMap","genName","fromZero","dimsDef","encodeDef","dataDimNameMap","dimCount","retrieveValue","sysDimItem","sysDimItemDimsDef","dimDefItem","userDimName","dataDims","resultDimIdx","availDimIdx","sysDimIndex","sysDimItemOtherDims","extra","extraPrefix","extraFromZero","isExtraCoord","guessOrdinal","1054","toolbox","title","polygon","lineX","lineY","dataView","lang","dataZoom","zoom","back","magicType","bar","tiled","restore","saveAsImage","1055","_coordinateSystems","coordinateSystemCreators","coordinateSystems","creater","coordinateSystemCreator","1056","curve","bbox","CMD","Q","Z","min2","max2","mathCos","mathSin","mathAbs","hasTypedArray","notSaveData","_saveData","_xi","_yi","_x0","_y0","_ux","_uy","_len","_lineDash","_dashOffset","_dashIdx","_dashSum","addData","exceedUnit","_needsDash","_dashedLineTo","_dashedBezierTo","quadraticCurveTo","_dashedQuadraticTo","startAngle","endAngle","anticlockwise","arcTo","radius","toStatic","lineDashSum","offset","appendPath","appendSize","appendPathData","cmd","_expandData","_prevCmd","newData","dash","dashSum","nDash","bezierLen","tmpLen","xi","yi","fromLine","fromCubic","fromQuadratic","rx","ry","fromArc","ux","uy","dTheta","psi","fs","scaleX","scaleY","isEllipse","1057","delay","debounce","lastExec","getTime","timer","currCall","debounceNextCall","lastCall","thisDelay","thisDebounce","clearTimeout","setTimeout","debounceDelay","createOrUpdate","fnAttr","throttleType","originFn","ORIGIN_METHOD","lastThrottleType","THROTTLE_TYPE","RATE","1058","Element","_children","__storage","children","childOfName","childCount","_doAdd","addBefore","nextSibling","addToStorage","addChildrenToStorage","delFromStorage","delChildrenFromStorage","removeAll","includeChildren","tmpRect","tmpMat","invisible","childRect","1059","debugMode","1060","excludes","includes","1061","Chart","elSetState","state","toggleHighlight","dataIdx","highlight","downplay","chartProto","1062","defaultKeyGetter","oldArr","newArr","oldKeyGetter","newKeyGetter","_old","_new","_oldKeyGetter","_newKeyGetter","initIndexMap","keyArr","keyGetterName","dataDiffer","existence","_add","_update","_remove","execute","oldDataIndexMap","newDataIndexMap","oldDataKeyArr","newDataKeyArr","unshift","1063","setting","_setting","_interval","getSetting","unionExtent","unionExtentFromData","start","end","thisExtent","isBlank","_isBlank","1064","collect","axesInfo","seriesInvolved","coordSysAxesInfo","coordSysMap","collectAxesInfo","collectSeriesInfo","globalTooltipModel","globalAxisPointerModel","linksOption","linkGroups","saveTooltipAxisInfo","fromTooltip","triggerTooltip","axisPointerModel","axisPointerShow","isHandleTrigger","makeAxisPointerModel","baseTooltipModel","snap","makeKey","involveSeries","axisInfo","useHandle","seriesModels","axesInfoInCoordSys","groupIndex","getLinkGroupIndex","linkGroup","mapper","axisPointerEnabled","coordSysKey","coordSysModel","getAxes","getTooltipAxes","triggerAxis","cross","tooltipAxes","baseAxes","otherAxes","tooltipAxisPointerModel","volatileOption","field","labelOption","show","crossStyle","lineStyle","seriesTooltipTrigger","seriesTooltipShow","getAxis","seriesDataCount","axisModel","linkOption","checkPropInLink","linkPropValue","axisPropValue","fixValue","getAxisInfo","reverse","getAxisPointerModel","1065","firstDataNotNull","ifNeedCompleteOrdinalData","sampleItem","createListFromArray","coordSysName","creators","registeredCoordSys","completeDimOpt","categoryIndex","createNameList","categories","categoryAxesModels","isStackable","getDimTypeByAxis","categoryAxisModel","categoryDim","dataLen","cartesian2d","axesModels","xAxisModel","yAxisModel","xAxisType","yAxisType","isXAxisCateogry","isYAxisCategory","singleAxis","singleAxisModel","singleAxisType","isCategory","single","polar","polarModel","angleAxisModel","findAxisModel","radiusAxisModel","radiusAxisType","angleAxisType","isAngleAxisCateogry","isRadiusAxisCateogry","geo","1066","fixExtentWithBands","nTick","axisHelper","normalizedExtent","Axis","inverse","onBand","_labelInterval","coord","containData","dataToCoord","coordToData","pointToData","getTicksCoords","alignWithLabel","bands","getBands","coords","getLabelsCoords","getBandWidth","axisExtent","isHorizontal","getRotate","getLabelInterval","labelInterval","1067","Style","__clipPaths","RectText","draggable","dragging","culling","cursor","afterBrush","rectContain","animateStyle","useStyle","1068","Gradient","addColorStop","1069","helper","roundNumber","_intervalPrecision","getInterval","_niceExtent","getIntervalPrecision","intervalScaleGetTicks","niceTicks","intervalScaleNiceTicks","intervalPrecision","niceTickExtent","expandSize","1070","makeAxisEventDataBase","endTextLayout","textRotate","rotationDiff","onLeft","tooltipOpt","fixMinMaxLabelShow","labelEls","tickEls","showMinLabel","showMaxLabel","firstLabel","nextLabel","lastLabel","prevLabel","firstTick","nextTick","lastTick","prevTick","ignoreEl","isTwoLabelOverlapped","current","labelLayout","firstRect","nextRect","mRotationBack","matrixUtil","isNameLocationCenter","nameLocation","buildAxisTick","axisBuilder","tickModel","lineStyleModel","tickLen","tickInterval","ticksCoords","pt1","pt2","_transform","ticksCnt","ifIgnoreOnTick","tickDirection","tickEl","getLineStyle","buildAxisLabel","axisLabelShow","labelMargin","labelRotation","innerTextLayout","labelDirection","categoryData","triggerEvent","tickVal","itemLabelModel","textColor","getTextColor","pos","labelOffset","labelStr","textEl","targetType","_dumbGroup","updateTransform","decomposeTransform","_symbol","AxisBuilder","nameDirection","dumbGroup","hasBuilder","builders","getGroup","axisLine","lineCap","arrows","arrowSize","symbolWidth","symbolHeight","symbol","axisTickLabel","axisName","gapSignal","nameRotation","axisNameAvailableWidth","truncateOpt","nameTruncateMaxWidth","truncatedText","formatterParams","__fullText","__truncatedText","content","axisRotation","rawTick","1071","updateAxisPointer","axisView","forceRender","AxisView","getAxisPointerClass","axisPointerClass","axisPointerModelHelper","_axisPointer","disposeAxisPointer","axisPointer","echarts","force","axisPointerClazz","registerAxisPointerClass","1072","1073","minRunLength","DEFAULT_MIN_MERGE","makeAscendingRun","lo","hi","compare","runHi","reverseRun","binaryInsertionSort","pivot","gallopLeft","hint","lastOffset","maxOffset","gallopRight","TimSort","pushRun","_runStart","_runLength","runStart","stackSize","runLength","mergeRuns","mergeAt","forceMergeRuns","start1","length1","start2","length2","mergeLow","mergeHigh","cursor1","cursor2","dest","count1","count2","exit","_minGallop","minGallop","DEFAULT_MIN_GALLOPING","customCursor","customDest","remaining","ts","minRun","1074","ZImage","src","_image","createOrUpdateImage","sWidth","sHeight","drawImage","1075","newImageOrSrc","cachedImgObj","globalImageCache","hostEl","cbPayload","__zrImageSrc","pendingWrap","pending","imageOnLoad","__cachedImgObj","1076","random","DELIMITER","subTypeDefaulters","registerSubTypeDefaulter","defaulter","determineSubType","componentTypeMain","dependencyGetter","makeDepndencyGraph","fullNameList","graph","noEntryList","thisItem","createDependencyGraphItem","originalDeps","availableDeps","getAvailableDependencies","entryCount","dependentName","predecessor","thatItem","successor","dep","topologicalTravel","targetNameList","callback","removeEdge","succComponentType","removeEdgeAndAdd","targetNameSet","currComponentType","currVertex","isInTargetNameSet","1077","origin","rangeStart","rangeEnd","getCoordSysModel","setRange","resetRange","1078","retrieveRaw","updateRangeUse","dataZoomModel","rawOption","rangePropMode","_rangePropMode","rangeModeInOption","percentSpecified","valueSpecified","AxisProxy","eachAxisDim","DataZoomModel","xAxisIndex","yAxisIndex","filterMode","startValue","endValue","minSpan","maxSpan","minValueSpan","maxValueSpan","rangeMode","_dataIntervalByAxis","_dataInfo","_axisProxies","_autoThrottle","doInit","thisOption","realtime","_setDefaultThrottle","_resetTarget","_giveAxisProxies","axisProxies","eachTargetAxis","dimNames","axisIndex","axisProxy","__dzAxisProxy","autoMode","_judgeAutoMode","axisIndexName","_autoSetAxisIndex","_autoSetOrient","hasIndexSpecified","autoAxisIndex","singleAxisIndex","axisIndices","axisModels","_isSeriesHasAllAxesTypeOf","axisId","is","seriesAxisIndex","globalOption","animationDurationUpdate","getFirstTargetAxisModel","firstAxisModel","getAxisProxy","getAxisModel","setRawRange","ignoreUpdateRangeUsg","getPercentRange","findRepresentativeAxisProxy","getDataPercentWindow","getValueRange","axisDimName","getDataValueWindow","hostedBy","getRangePropMode","1079","isCoordSupported","coordType","COORDS","createNameEach","attrs","capitalNames","capitalAttrs","nameObj","capital","createLinkedNodesFinder","forEachNode","forEachEdgeType","edgeIdGetter","isNodeAbsorded","nodes","isLinked","hasLink","edgeType","edgeId","records","absorb","sourceNode","processSingleNode","existsLink","AXIS_DIMS","1080","getTargetCoordInfo","save","coordModel","store","coordIndex","coordSysLists","1081","ZRender","guid","getInstance","registerPainter","painterCtors","delInstance","Handler","Storage","Painter","Animation","HandlerProxy","useVML","rendererType","vml","handerProxy","getViewportRoot","root","stage","_needsRefresh","oldDelFromStorage","oldAddToStorage","removeSelfFromZr","addSelfToZr","addRoot","delRoot","zLevel","config","_needsRefreshHover","refreshHoverImmediately","refreshHover","clearHover","clearAnimation","pathToImage","setCursorStyle","cursorStyle","findHover","eventHandler","1082","normalizeTextStyle","normalizeStyle","VALID_TEXT_ALIGN","textBaseline","VALID_TEXT_VERTICAL_ALIGN","renderText","renderRichText","renderPlainText","setCtx","__textCotentBlock","boxPos","getBoxPosition","baseX","baseY","applyTextRotation","boxY","textX","textY","needDrawBg","needDrawBackground","boxX","drawBackground","getTextXForPadding","getStroke","getFill","strokeText","fillText","drawRichText","xLeft","lineTop","xRight","tokenCount","usedWidth","lineXLeft","lineXRight","placeToken","textOrigin","isPlainBg","roundRectHelper","onBgImageLoaded","blockHeiht","maxValue","lastIndexOf","needDrawText","center","middle","1083","axisTrigger","link","1084","buildElStyle","axisPointerType","styleModel","getAreaStyle","buildLabelElOption","elOption","labelPos","getValueLabel","paddings","textRect","align","verticalAlign","confineInContainer","bgColor","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","viewWidth","viewHeight","seriesDataIndices","seriesData","idxItem","dataParams","getTransformedPosition","layoutInfo","buildCartesianSingleLabelElOption","textLayout","makeLineShape","xDimIndex","makeRectShape","xy","wh","makeSectorShape","r0","clockwise","1085","mIdentity","transformableProto","parentHasTransform","invTransform","tmpTransform","atan2","transformCoordToGlobal","1086","fromPoints","xDim","yDim","tx","ty","vec2Min","vec2Max","PI2","extremity","1087","textHelper","1088","componentProto","1089","handleEnds","handleIndex","restrict","extentSpan","originalDistSign","getSpanSign","extentMinSpan","realExtent","sign","currDistSign","1091","idStart","1092","Animatable","clipPath","drift","beforeUpdate","afterUpdate","hide","setClipPath","removeClipPath","animators","addAnimator","removeAnimator","1093","defaultGetter","defaultSetter","interpolateNumber","interpolateString","interpolateArray","arrDim","len2","fillArr","arr0","arr1","arr0Len","arr1Len","arraySlice","isArraySame","catmullRomInterpolateArray","catmullRomInterpolate","v0","cloneValue","rgba2String","getArrayDim","keyframes","lastValue","createTrackClip","animator","easing","oneTrackDone","forceAnimate","getter","_getter","setter","_setter","useSpline","trackLen","trackMaxTime","firstVal","isValueArray","isValueColor","isValueString","kfPercents","kfValues","prevValue","isAllValueEqual","colorArray","_target","lastFrame","lastFramePercent","onframe","frame","clip","Clip","life","_loop","_delay","ondestroy","Animator","_tracks","_clipCount","_doneList","_onframeList","_clipList","when","tracks","during","pause","_paused","resume","isPaused","_doneCallback","doneList","lastClip","clipCount","addClip","oldOnFrame","forwardToLast","clipList","removeClip","done","getClips","1094","LinkedList","head","tail","linkedListProto","insert","entry","Entry","insertEntry","maxSize","_list","_map","_maxSize","_lastRemovedEntry","LRUProto","removed","leastUsedEntry","1095","createLinearGradient","createRadialGradient","STYLE_COMMON_PROPS","opacity","transformText","blend","prevStyle","firstDraw","globalAlpha","globalCompositeOperation","otherStyle","newStyle","canvasGradient","styleProto","1096","repeat","createPattern","1097","requestAnimationFrame","msRequestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","1098","r1","r2","r3","r4","total","1099","normalizeRadian","1100","windingLine","dir","1101","smooth","controlPoints","smoothBezier","smoothConstraint","cp1","cp2","smoothSpline","1102","colorIdx","colorNameMap","colorPalette","1103","fixExtent","1104","dataToPoint","1105","initGlobalListeners","useHandler","dis","makeDispatchAction","record","dispatchTooltipFinally","pendings","initialized","doEnter","onLeave","actuallyPayload","showLen","showTip","hideLen","hideTip","currTrigger","unregister","1106","boxLayoutParams","getBoxLayoutParams","viewportSize","layoutBox","makeBackground","getItemStyle","1107","newSnapshot","giveStore","dataZoomId","percentRange","snapshot","ATTR","1109","orignalBrush","modified","clipPaths","shadowTemp","1110","getCartesian","grid","getAxisDimIndex","BaseAxisPointer","viewHelper","cartesianAxisHelper","CartesianAxisPointer","makeElOption","otherExtent","getOtherAxis","getGlobalExtent","pixelValue","toGlobalCoord","elStyle","pointerOption","pointerShapeBuilder","graphicKey","pointer","getHandleTransform","labelInside","updateHandleTransform","currPosition","cursorOtherValue","cursorPoint","tooltipOptions","tooltipOption","targetShape","shadow","bandWidth","1111","animationModel","moveAnimation","propsEqual","lastProp","lastProps","newProps","equals","updateLabelShowHide","labelEl","getHandleTransProps","trans","updateMandatoryProps","eventTool","throttleUtil","_group","_lastGraphicKey","_handle","_dragging","_lastValue","_lastStatus","_payloadInfo","animationThreshold","_axisModel","_axisPointerModel","handle","_moveAnimation","determineAnimation","doUpdateProps","updatePointerEl","updateLabelEl","createPointerEl","createLabelEl","_renderHandle","isCategoryAxis","useSnap","pointerEl","handleModel","onmousemove","onmousedown","_onHandleDragMove","ondragend","_onHandleDragEnd","includeStyles","handleSize","_moveHandleToValue","_doDispatchAxisPointer","payloadInfo","axisDim","doClear","buildLabel","1112","gridModel","rawAxisPosition","axisPosition","onZero","getRect","rectBound","axisOffset","posBound","otherAxis","onZeroAxisIndex","onZeroCoord","dirMap","1113","LegendModel","selected","_updateData","legendData","_data","hasSelected","isSelected","select","availableNames","getSeries","_availableNames","unSelect","toggleSelected","borderColor","borderRadius","borderWidth","itemGap","itemWidth","itemHeight","inactiveColor","selectedMode","1114","dispatchSelectAction","dispatchHighlightAction","dataName","dispatchDownplayAction","_listComponent","layoutUtil","newlineDisabled","_contentGroup","_backgroundEl","getContentGroup","legendModel","resetInner","itemAlign","renderInner","mainRect","layoutInner","layoutRect","contentGroup","legendDrawnMap","selectMode","getSeriesByName","legendSymbolType","itemGroup","_createItem","eachRawSeries","itemIcon","tooltipModel","legendGlobalTooltipModel","hitRect","legendIndex","__legendDataIndex","contentRect","1115","BrushController","_brushType","_brushOption","_panels","_track","_covers","_creatingCover","_creatingPanel","_enableGlobalPan","_uid","baseUID","_handlers","mouseHandlers","doEnableBrush","controller","brushOption","interactionMutex","take","MUTEX_RESOURCE_KEY","brushType","DEFAULT_BRUSH_OPT","doDisableBrush","release","createCover","cover","coverRenderers","__brushOption","endCreating","creatingCover","coverRenderer","getCoverRenderer","updateCoverShape","COVER_Z","updateCoverAfterCreation","updateCommon","getPanelByPoint","localCursorPoint","panels","panel","pn","isTargetByCursor","getPanelByCover","panelId","clearCovers","covers","originalLength","areas","isEnd","removeOnClick","shouldShowCover","track","UNSELECT_THRESHOLD","getTrackEnds","createBaseRectCover","doDrift","edgeNames","makeStyle","updateBaseRect","localRange","brushStyle","MIN_RESIZE_LINE_WIDTH","xa","ya","x2a","y2a","widtha","heighta","updateRectShape","transformable","mainEl","globalDir","getGlobalDirection","CURSOR_MAP","pointsToRect","clipByPanel","formatRectRange","localDirection","inverseMap","driftRect","toRectRange","fromRectRange","rectRange","localDelta","toLocalDelta","namePart","ind","DIRECTION_MAP","driftPolygon","thisGroup","localD","localZero","xmin","ymin","resetCursor","currPanel","rawE","mainShapeContain","updateCoverByMouse","eventParams","thisBrushOption","brushMode","determineBrushType","getCreatingRange","defaultBrushType","handleDragEnd","getLineRenderer","xyIndex","localTrack","ends","getLinearBrushOtherExtent","ne","sw","nw","se","enableBrush","setPanels","panelOpts","mount","enableGlobalPan","eachCover","updateCovers","brushOptionList","getKey","tmpIdPrefix","oldGetKey","addOrUpdate","newIndex","oldIndex","newBrushOption","oldCovers","newCovers","unmount","mousedown","mousemove","mouseup","1116","onIrrelevantElement","targetCoordSysModel","topTarget","IRRELEVANT_EXCLUDES","1120","1121","_l","_a","_b","1122","_curve","1123","globalCoord","1124","format","ecHelper","_List","_Model","_Axis","_env","_parseGeoJson","parseGeoJson","ecUtil","util","1125","decode","json","UTF8Encoding","encodeScale","UTF8Scale","feature","geometry","coordinates","encodeOffsets","coordinate","decodePolygon","c2","prevX","prevY","featureObj","geometries","exterior","interiors","region","Region","cp","1126","polygonContain","MAX_NUMBER","loopGeo","transformTo","1127","isAroundEqual","1128","1129","legendFilter","1130","legendModels","findComponents","eachSeriesByType","1131","1132","resourceKey","userKey","getStore","isTaken","1133","BrushTargetManager","targetInfoList","_targetInfoList","info","foundCpts","targetInfoBuilders","builder","include","formatMinMax","minMax","INCLUDE_FINDER_MAIN_TYPES","axisConvert","axisNameIndex","to","rangeOrCoordRange","toLocalCoord","xyMinMax","axisDiffProcessor","refer","scales","getScales","xyMinMaxCurr","xyMinMaxOrigin","sizeCurr","getSize","sizeOrigin","brushHelper","COORD_CONVERTS","setOutputRanges","matchOutputRanges","area","coordRange","coordRanges","coordConvert","__rangeOffset","diffProcessor","targetInfo","findTargetInfo","coordSyses","setInputRanges","rangeOffset","makePanelOpts","getDefaultBrushType","getPanelRect","makeRectPanelClipPath","makeRectIsTargetByCursor","makeLinearBrushOtherExtent","controlSeries","areaPanelId","targetInfoMatchers","xAxisModels","yAxisModels","gridModels","gridModelMap","xAxesHas","yAxesHas","cartesians","getCartesians","cartesian","panelRectBuilder","xAxisDeclared","yAxisDeclared","geoModels","geoModel","xminymin","xmaxymax","1134","normalizeRect","localPoints","graphicUtil","specifiedXYIndex","brushWidth","targetModel","_cursorHelper","1135","1136","resetSingleAxis","reset","filterSingleAxis","filterData","valueRange","1137","linkedNodesFinder","effectedModels","1139","makeEventPacket","eveType","gestureEvent","pinchX","pinchY","pinchScale","EmptyProxy","isHover","displayable","SILENT","Draggable","handlerNames","proxy","painterRoot","_hovered","_lastTouchMoment","_lastX","_lastY","lastHovered","lastHoveredTarget","hovered","hoveredTarget","setCursor","dispatchToElement","mouseout","innerDom","element","toElement","relatedTarget","parentNode","dispatch","eventArgs","eventPacket","eachOtherLayer","layer","exclude","hoverCheckResult","_downEl","_downPoint","_upEl","1140","_dragStart","_drag","_dragEnd","draggingTarget","_draggingTarget","_x","_y","dropTarget","lastDropTarget","_dropTarget","1141","shapeCompareFunc","_roots","_displayList","_displayListLen","includeIgnore","updateDisplayList","displayList","_updateAndAddDisplayable","userSetClipPath","currentClipPath","parentClipPath","_renderList","displayableSortFunc","1142","animatingShape","pathSplitted","_animateToShallow","objShallow","propertyCount","1143","_life","_initialized","onrestart","_pausedTime","easingFuncs","globalTime","deltaTime","_startTime","easingFunc","schedule","fire","restart","_needsRemove","arg","1144","linear","quadraticIn","quadraticOut","quadraticInOut","cubicIn","cubicOut","cubicInOut","quarticIn","quarticOut","quarticInOut","quinticIn","quinticOut","quinticInOut","sinusoidalIn","sinusoidalOut","sinusoidalInOut","exponentialIn","exponentialOut","exponentialInOut","circularIn","circularOut","circularInOut","elasticIn","elasticOut","elasticInOut","backIn","backOut","backInOut","bounceIn","bounceOut","bounceInOut","1145","parseInt10","isLayerValid","__builtin__","preProcessLayer","__unusedCount","postProcessLayer","isDisplayableCulled","viewRect","isClipPathChanged","prevClipPaths","doClip","createRoot","domRoot","cssText","Layer","singleCanvas","nodeName","_opts","_singleCanvas","rootStyle","innerHTML","zlevelList","_zlevelList","layers","_layers","_layerConfig","_width","_height","mainLayer","initContext","_domRoot","_getSize","appendChild","_progressiveLayers","_hoverlayer","_hoverElements","getViewportRootOffset","viewportRoot","offsetLeft","offsetTop","paintAll","_paintList","_startProgessive","__hoverMir","elMirror","__from","hoverElements","hoverLayer","getLayer","originalEl","_doPaintEl","_progressiveToken","_doPaintList","_furtherProgressive","_progress","_clearProgressive","_updateLayerStatus","eachBuiltinLayer","flushProgressiveLayer","currentLayer","currentZLevel","currentProgressiveLayer","layerProgress","progressiveLayerIdx","elZLevel","elFrame","__frame","MAX_PROGRESSIVE_LAYER_NUMBER","renderScope","__progress","__maxProgress","__nextIdxNotProg","forcePaint","prevClipLayer","prevElClipPaths","insertLayer","layersMap","prevLayer","virtual","prevDom","insertBefore","firstChild","eachLayer","getLayers","progressiveLayers","elCountsLastFrame","progressiveElCountsLastFrame","lastProgressiveKey","progressiveLayerCount","frameCount","elProgress","_clearLayer","layerConfig","delLayer","removeChild","display","clearLayer","findAndDrawOtherLayer","smaller","larger","intermediateLayer","renderToCanvas","imageLayer","whIdx","cwh","plt","prb","stl","defaultView","getComputedStyle","shadowBlurSize","leftMargin","rightMargin","topMargin","bottomMargin","clearRect","pathTransform","ImageShape","imgShape","1146","returnFalse","createDom","newDom","newDomStyle","domStyle","onselectstart","domBack","ctxBack","motionBlur","lastFrameAlpha","__currentValues","createBackBuffer","clearAll","haveMotionBLur","clearColorGradientOrPattern","__canvasGradient","fillRect","1147","_event","_clips","_running","_time","_pauseStart","clips","deferredEvents","deferredClips","_startLoop","1148","eventNameFix","processGesture","gestureMgr","_gestureMgr","gestureInfo","recognize","setTouchTimer","_touching","_touchTimer","isPointerFromTouch","pointerType","initDomHandler","makeMouseHandler","touchHandlerNames","domHandlers","pointerHandlerNames","mouseHandlerNames","HandlerDomProxy","mountHandlers","GestureMgr","pointerEventNames","pointerdown","pointerup","pointermove","pointerout","nm","touchstart","touchmove","touchend","click","handlerDomProxyProto","1149","pointPair","eventUtil","_doTrack","_recognize","touches","trackItem","recognizers","pinch","pinchEnd","pinchPre","pinchCenter","1150","mergeTheme","themeItem","initBase","baseOption","OPTION_INNER_KEY","_seriesIndices","globalDefault","getComponentsByTypes","componentsMap","existComponent","createSeriesIndices","filterBySubType","components","cpt","colorPaletteMinin","_optionManager","mountOption","timelineOption","getTimelineOption","mediaOptions","getMediaOption","mediaOption","visitComponent","newCptOptionList","ComponentModelClass","newCptTypes","componentOption","cpts","isIdArray","isNameArray","queryCond","q","indexAttr","idAttr","nameAttr","queryResult","oneSeries","getSeriesByType","rawSeriesIndex","eachRawSeriesByType","isSeriesFiltered","getCurrentSeriesIndices","filterSeries","filteredSeries","componentTypes","1151","makeStyleMapper","getLineDash","lineType","dotSize","dashSize","1152","1153","PATH_COLOR","1154","processArc","fa","psiDeg","xp","yp","lambda","cxp","cyp","vAngle","u","vRatio","createPathProxyFromString","cs","cc","RegExp","prevCmd","cpx","cpy","ctlPtx","ctlPty","createPathOptions","pathProxy","transformPath","pathEls","pathList","pathEl","pathBundle","vMag","1155","swapExtrema","windingCubic","nRoots","y0_","y1_","nExtrema","unit","windingQuadratic","y_","x_","windingArc","containPath","isStroke","cubic","quadratic","1156","1157","1158","nPoint","mathAtan2","1159","1160","fixClipWithShadow","unitX","unitY","1161","1162","polyHelper","1163","interpolate","isLoop","v2Distance","segs","w2","w3","1164","constraint","prevPoint","nextPoint","cps","v2Min","v2Max","v2Clone","v2Sub","v2Scale","d0","cp0","v2Add","1165","1166","1167","pointAt","1168","someVectorAt","isTangent","cpx2","cpy2","cpx1","cpy1","tangentAt","1169","1170","paths","_updatePathDirty","1171","1172","getBorderLineDash","1173","1174","platform","animationDuration","animationEasingUpdate","progressiveThreshold","hoverLayerThreshold","useUTC","1175","chartInstance","echartsAPIList","1176","_timelineOptions","_mediaList","_mediaDefault","_currentMediaIndices","_optionBackup","_newBaseOption","parseRawOption","isNew","mediaDefault","timelineOptions","mediaList","timelineOpt","timeline","media","singleMedia","preProcess","applyMediaQuery","ecWidth","ecHeight","realMap","aspectratio","applicatable","matched","QUERY_REG","operator","realAttr","real","expect","indicesEquals","indices1","indices2","oldOption","newCptOpt","oldCptOpt","oldOptionBackup","newParsedOption","isRecreate","optionBackup","timelineModel","getCurrentIndex","1177","compatLayoutProperties","LAYOUT_PROPERTIES","isTheme","compatStyle","seriesOpt","clockWise","pointerColor","COMPATITABLE_SERIES","dataRange","visualMap","COMPATITABLE_COMPONENTS","componentName","1178","compatItemStyle","itemStyleOpt","itemStyle","POSSIBLE_STYLES","normalItemStyleOpt","emphasisItemStyleOpt","compatTextStyle","labelOptSingle","compatLabelTextStyle","labelOpt","processSeries","upperLabel","edgeLabel","markPoint","markLine","markArea","mpData","mlData","toArr","toObj","axes","axisOpt","parallel","parallelOpt","parallelAxisDefault","calendar","calendarOpt","radar","radarOpt","geoOpt","regions","regionObj","1179","encodeColor","colorAccessPath","1180","maskColor","mask","labelRect","1181","createList","createScale","axisModelCommonMixin","mixinAxisModelCommonMethods","_completeDimensions","1182","scaleProto","rank","1183","scaleHelper","intervalScaleProto","mathCeil","mathFloor","bisect","TimeScale","stepLvl","_stepLvl","ONE_HOUR","getFullYear","getMonth","getDate","approxTickNum","approxInterval","scaleLevelsLen","scaleLevels","yearSpan","timezoneOffset","getTimezoneOffset","ONE_SECOND","ONE_MINUTE","ONE_DAY","1184","fixRoundingError","originalVal","roundingErrorFix","mathLog","LogScale","_originalScale","originalScale","powVal","__fixMin","__fixMax","err","1185","illegalPoint","findPointFromSeries","isIllegalPoint","inputAxesInfo","shouldHide","outputFinder","showValueMap","dataByCoordSys","updaters","showPointer","showTooltip","coordSysContainsPoint","inputAxisInfo","findInputAxisInfo","processOnAxis","linkTriggers","tarAxisInfo","tarKey","srcAxisInfo","srcKey","srcValItem","makeMapperParam","updateModelActually","dispatchTooltipActually","dispatchHighDownActually","newValue","dontSnap","buildPayloadsBySeries","payloadBatch","snapToValue","seriesNestestValue","nestestValue","modelHelper","coordSysItem","coordSysId","coordSysIndex","coordSysType","coordSysMainType","dataByAxis","valueLabelOpt","outputAxesInfo","valItem","lastHighlights","newHighlights","toHighlight","toDownplay","1186","AxisPointerModel","triggerOn","shadowStyle","icon","1187","globalListener","AxisPointerView","1188","showContent","alwaysShowContent","displayMode","confine","showDelay","hideDelay","transitionDuration","enterable","1189","buildTooltipModel","modelCascade","resultModel","refixTooltipPosition","gapH","gapV","getOuterSize","confineTooltipPosition","clientWidth","clientHeight","paddingLeft","paddingRight","borderLeftWidth","borderRightWidth","paddingTop","paddingBottom","borderTopWidth","borderBottomWidth","calcTooltipPosition","contentSize","domWidth","domHeight","rectWidth","rectHeight","isCenterAlign","TooltipContent","axisPointerViewHelper","proxyRect","tooltipContent","_tooltipContent","_tooltipModel","_ecModel","_lastDataByCoordSys","_alwaysShowContent","setEnterable","_initGlobalListener","_keepShow","_tryShow","_hide","_refreshUpdateTimeout","manuallyShowTip","_ticket","_manuallyAxisShowTip","pointInfo","manuallyHideTip","hideLater","_showAxisTooltip","_showSeriesItemTooltip","_showComponentItemTooltip","_showOrMove","_showTimout","singleDefaultHTML","singleParamsList","singleTooltipModel","itemCoordSys","axisValue","seriesDefaultHTML","valueLabel","axisValueLabel","firstLine","positionExpr","_updateContentNotChangedOnAxis","_updatePosition","_showTooltipContent","tooltipTrigger","defaultHtml","asyncTicket","subTooltipModel","html","cbTicket","setContent","vAlign","viewSize","lastCoordSys","contentNotChanged","lastItemCoordSys","indexCoordSys","lastDataByAxis","thisItemCoordSys","thisDataByAxis","lastItem","indexAxis","lastIndices","lastIdxItem","newIdxItem","1190","assembleTransition","transitionText","vendors","vendorPrefix","assembleFont","assembleCssText","zrColor","borderName","camelCase","_container","_show","_hideTimeout","onmouseenter","_enterable","_inContent","onmouseleave","_hideDelay","currentStyle","viewportRootOffset","isShow","1191","legendSelectActionHandler","selectedMap","isToggleSelect","isItemSelected","1192","1193","updateSelectedMap","targetList","_targetList","_selectTargetMap","targetMap","1194","paletteScope","dataAll","idxMap","filteredIdx","singleDataColor","1195","featureManager","ToolboxModel","featureOpt","featureName","Feature","itemSize","showTitle","iconStyle","1196","isUserFeatureName","listComponentHelper","toolboxModel","processFeature","featureNames","oldName","featureOpts","featureModel","onclick","unusable","createIconPaths","setIconStatus","iconName","iconPaths","iconStatus","iconStyleModel","icons","getIcons","titles","__title","_features","_featureNames","titleText","needPutOnTop","topOffset","1197","SaveAsImage","saveAsImageLang","$a","download","href","MouseEvent","msSaveOrOpenBlob","bstr","atob","u8arr","Uint8Array","blob","Blob","tab","open","write","evt","bubbles","cancelable","dispatchEvent","1198","MagicType","magicTypeLang","availableIcons","seriesOptGenreator","radioTypes","generateNewSeriesTypes","newSeriesOpt","categoryAxis","getAxesByScale","radio","currentType","1199","groupSeries","seriesGroupByCategoryAxis","otherSeries","meta","baseAxis","valueAxis","assembleSeriesWithCategoryAxis","tables","valueAxisDim","headers","columns","ITEM_SPLITER","items","BLOCK_SPLITER","assembleOtherSeries","vals","getContentFromModel","trim","isTSVFormat","parseTSVContents","tsv","tsvLines","itemSplitRegex","header","parseListContents","hasName","parseContents","blockMetaList","blocks","blockMeta","axisKey","DataView","tryMergeDataOption","originalData","newVal","dataViewLang","readOnly","optionToContent","contentToOption","textareaColor","textareaBorderColor","buttonColor","buttonTextColor","viewMain","textarea","htmlOrDom","buttonContainer","buttonStyle","closeButton","refreshButton","keyCode","selectionStart","selectionEnd","newSeriesOptList","1200","DataZoom","_brushController","_onBrush","_isZoomActive","retrieveAxisSetting","updateBackBtnStatus","history","updateZoomBtnStatus","zoomActive","dataZoomSelectActive","brushTargetManager","sliderMove","dataZoomLang","DATA_ZOOM_ID_BASE","handlers","nextActive","_dispatchZoomAction","setBatch","findDataZoom","minMaxSpan","getMinMaxSpan","found","dzModel","addForAxis","dataZoomOpt","axisIndicesName","givenAxisIndices","forEachComponent","newOpt","$fromToolbox","dataZoomOpts","toolboxOpt","1201","1202","calculateDataExtent","seriesExtent","fixExtentByAxis","setAxisModel","isRestore","percentWindow","_percentWindow","valueWindow","_valueWindow","useOrigin","setMinMaxSpan","_minMaxSpan","_dataZoomModel","valueSpan","_dataExtent","_dimName","_axisIndex","getTargetSeriesModels","getOtherAxisModel","otherAxisDim","coordSysIndexName","isCartesian","foundOtherAxisModel","otherAxisModel","calculateDataWindow","percentExtent","boundValue","boundPercent","dataWindow","isInWindow","leftOut","rightOut","thisHasValue","thisLeftOut","thisRightOut","1203","1204","DataZoomView","1205","Restore","restoreLang","1210","actionInfos","1218","createDataSelectAction","dataColor","pieLayout","dataFilter","1219","dataSelectableMixin","PieSeries","_defaultLabelLine","labelLine","labelLineNormalOpt","labelLineEmphasisOpt","legendHoverLink","hoverAnimation","minAngle","selectedOffset","hoverOffset","avoidLabelOverlap","percentPrecision","stillShowZeroSum","animationType","1220","updateDataSelected","hasAnimation","toggleItemSelected","midAngle","PiePiece","onEmphasis","polyline","hoverIgnore","onNormal","normalIgnore","sector","updateData","piePieceProto","firstCreate","sectorShape","itemStyleModel","visualColor","lineJoin","_updateLabel","labelText","linePoints","labelHoverModel","labelLineModel","labelLineHoverModel","inside","PieView","sectorGroup","_sectorGroup","oldData","isFirstRender","onSectorClick","piePiece","newIdx","oldIdx","_createClipPath","itemLayout","1221","RADIAN","validDataCount","unitRadian","roseType","restAngle","valueSumLargerThanMinAngle","currentAngle","1222","adjustSingleSide","shiftUp","changeX","isDownList","lastDeltaX","deltaY","deltaX","lastY","upList","downList","avoidOverlap","labelLayoutList","leftList","rightList","hasLabelRotate","labelPosition","labelLineLen","labelLineLen2","isLabelInside"],"mappings":"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","file":"static/js/PieReact.915f448f.chunk.js","sourcesContent":["webpackJsonp([2],{\n\n/***/ 1024:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_echarts_lib_echarts__ = __webpack_require__(1028);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_echarts_lib_echarts___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_echarts_lib_echarts__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_echarts_lib_component_tooltip__ = __webpack_require__(1128);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_echarts_lib_component_tooltip___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_echarts_lib_component_tooltip__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_echarts_lib_component_legend__ = __webpack_require__(1129);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_echarts_lib_component_legend___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_echarts_lib_component_legend__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_echarts_lib_chart_pie__ = __webpack_require__(1218);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_echarts_lib_chart_pie___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_echarts_lib_chart_pie__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_echarts_lib_component_toolbox__ = __webpack_require__(1131);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_echarts_lib_component_toolbox___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_echarts_lib_component_toolbox__);\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}//必须\nvar PieReact=function(_React$Component){_inherits(PieReact,_React$Component);function PieReact(props){_classCallCheck(this,PieReact);var _this=_possibleConstructorReturn(this,(PieReact.__proto__||Object.getPrototypeOf(PieReact)).call(this,props));_this.initPie=_this.initPie.bind(_this);return _this;}_createClass(PieReact,[{key:'initPie',value:function initPie(){var _props$option=this.props.option,option=_props$option===undefined?{}:_props$option;//外部传入的data数据\nvar myChart=__WEBPACK_IMPORTED_MODULE_1_echarts_lib_echarts___default.a.init(this.ID);//初始化echarts\n//设置options\nmyChart.setOption(option);window.onresize=function(){myChart.resize();};}},{key:'componentDidMount',value:function componentDidMount(){this.initPie();}},{key:'componentDidUpdate',value:function componentDidUpdate(){this.initPie();}},{key:'render',value:function render(){var _this2=this;var _props=this.props,_props$width=_props.width,width=_props$width===undefined?\"100%\":_props$width,_props$height=_props.height,height=_props$height===undefined?'300px':_props$height;return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{ref:function ref(ID){return _this2.ID=ID;},style:{width:width,height:height}});}}]);return PieReact;}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);/* harmony default export */ __webpack_exports__[\"default\"] = (PieReact);\n\n/***/ }),\n\n/***/ 1027:\n/***/ (function(module, exports) {\n\n/**\n * @module zrender/core/util\n */\n// 用于处理merge时无法遍历Date等对象的问题\nvar BUILTIN_OBJECT = {\n  '[object Function]': 1,\n  '[object RegExp]': 1,\n  '[object Date]': 1,\n  '[object Error]': 1,\n  '[object CanvasGradient]': 1,\n  '[object CanvasPattern]': 1,\n  // For node-canvas\n  '[object Image]': 1,\n  '[object Canvas]': 1\n};\nvar TYPED_ARRAY = {\n  '[object Int8Array]': 1,\n  '[object Uint8Array]': 1,\n  '[object Uint8ClampedArray]': 1,\n  '[object Int16Array]': 1,\n  '[object Uint16Array]': 1,\n  '[object Int32Array]': 1,\n  '[object Uint32Array]': 1,\n  '[object Float32Array]': 1,\n  '[object Float64Array]': 1\n};\nvar objToString = Object.prototype.toString;\nvar arrayProto = Array.prototype;\nvar nativeForEach = arrayProto.forEach;\nvar nativeFilter = arrayProto.filter;\nvar nativeSlice = arrayProto.slice;\nvar nativeMap = arrayProto.map;\nvar nativeReduce = arrayProto.reduce; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  methods[name] = fn;\n}\n/**\n * Those data types can be cloned:\n *     Plain object, Array, TypedArray, number, string, null, undefined.\n * Those data types will be assgined using the orginal data:\n *     BUILTIN_OBJECT\n * Instance of user defined class will be cloned to a plain object, without\n * properties in prototype.\n * Other data types is not supported (not sure what will happen).\n *\n * Caution: do not support clone Date, for performance consideration.\n * (There might be a large number of date in `series.data`).\n * So date should not be modified in and out of echarts.\n *\n * @param {*} source\n * @return {*} new\n */\n\n\nfunction clone(source) {\n  if (source == null || typeof source != 'object') {\n    return source;\n  }\n\n  var result = source;\n  var typeStr = objToString.call(source);\n\n  if (typeStr === '[object Array]') {\n    result = [];\n\n    for (var i = 0, len = source.length; i < len; i++) {\n      result[i] = clone(source[i]);\n    }\n  } else if (TYPED_ARRAY[typeStr]) {\n    var Ctor = source.constructor;\n\n    if (source.constructor.from) {\n      result = Ctor.from(source);\n    } else {\n      result = new Ctor(source.length);\n\n      for (var i = 0, len = source.length; i < len; i++) {\n        result[i] = clone(source[i]);\n      }\n    }\n  } else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n    result = {};\n\n    for (var key in source) {\n      if (source.hasOwnProperty(key)) {\n        result[key] = clone(source[key]);\n      }\n    }\n  }\n\n  return result;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overwrite=false]\n */\n\n\nfunction merge(target, source, overwrite) {\n  // We should escapse that source is string\n  // and enter for ... in ...\n  if (!isObject(source) || !isObject(target)) {\n    return overwrite ? clone(source) : target;\n  }\n\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      var targetProp = target[key];\n      var sourceProp = source[key];\n\n      if (isObject(sourceProp) && isObject(targetProp) && !isArray(sourceProp) && !isArray(targetProp) && !isDom(sourceProp) && !isDom(targetProp) && !isBuiltInObject(sourceProp) && !isBuiltInObject(targetProp) && !isPrimitive(sourceProp) && !isPrimitive(targetProp)) {\n        // 如果需要递归覆盖，就递归调用merge\n        merge(targetProp, sourceProp, overwrite);\n      } else if (overwrite || !(key in target)) {\n        // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n        // NOTE，在 target[key] 不存在的时候也是直接覆盖\n        target[key] = clone(source[key], true);\n      }\n    }\n  }\n\n  return target;\n}\n/**\n * @param {Array} targetAndSources The first item is target, and the rests are source.\n * @param {boolean} [overwrite=false]\n * @return {*} target\n */\n\n\nfunction mergeAll(targetAndSources, overwrite) {\n  var result = targetAndSources[0];\n\n  for (var i = 1, len = targetAndSources.length; i < len; i++) {\n    result = merge(result, targetAndSources[i], overwrite);\n  }\n\n  return result;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @memberOf module:zrender/core/util\n */\n\n\nfunction extend(target, source) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overlay=false]\n * @memberOf module:zrender/core/util\n */\n\n\nfunction defaults(target, source, overlay) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key) && (overlay ? source[key] != null : target[key] == null)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar createCanvas = function () {\n  return methods.createCanvas();\n};\n\nmethods.createCanvas = function () {\n  return document.createElement('canvas');\n}; // FIXME\n\n\nvar _ctx;\n\nfunction getContext() {\n  if (!_ctx) {\n    // Use util.createCanvas instead of createCanvas\n    // because createCanvas may be overwritten in different environment\n    _ctx = createCanvas().getContext('2d');\n  }\n\n  return _ctx;\n}\n/**\n * 查询数组中元素的index\n * @memberOf module:zrender/core/util\n */\n\n\nfunction indexOf(array, value) {\n  if (array) {\n    if (array.indexOf) {\n      return array.indexOf(value);\n    }\n\n    for (var i = 0, len = array.length; i < len; i++) {\n      if (array[i] === value) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n}\n/**\n * 构造类继承关系\n *\n * @memberOf module:zrender/core/util\n * @param {Function} clazz 源类\n * @param {Function} baseClazz 基类\n */\n\n\nfunction inherits(clazz, baseClazz) {\n  var clazzPrototype = clazz.prototype;\n\n  function F() {}\n\n  F.prototype = baseClazz.prototype;\n  clazz.prototype = new F();\n\n  for (var prop in clazzPrototype) {\n    clazz.prototype[prop] = clazzPrototype[prop];\n  }\n\n  clazz.prototype.constructor = clazz;\n  clazz.superClass = baseClazz;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Object|Function} target\n * @param {Object|Function} sorce\n * @param {boolean} overlay\n */\n\n\nfunction mixin(target, source, overlay) {\n  target = 'prototype' in target ? target.prototype : target;\n  source = 'prototype' in source ? source.prototype : source;\n  defaults(target, source, overlay);\n}\n/**\n * Consider typed array.\n * @param {Array|TypedArray} data\n */\n\n\nfunction isArrayLike(data) {\n  if (!data) {\n    return;\n  }\n\n  if (typeof data == 'string') {\n    return false;\n  }\n\n  return typeof data.length == 'number';\n}\n/**\n * 数组或对象遍历\n * @memberOf module:zrender/core/util\n * @param {Object|Array} obj\n * @param {Function} cb\n * @param {*} [context]\n */\n\n\nfunction each(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.forEach && obj.forEach === nativeForEach) {\n    obj.forEach(cb, context);\n  } else if (obj.length === +obj.length) {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      cb.call(context, obj[i], i, obj);\n    }\n  } else {\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        cb.call(context, obj[key], key, obj);\n      }\n    }\n  }\n}\n/**\n * 数组映射\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction map(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.map && obj.map === nativeMap) {\n    return obj.map(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      result.push(cb.call(context, obj[i], i, obj));\n    }\n\n    return result;\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {Object} [memo]\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction reduce(obj, cb, memo, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.reduce && obj.reduce === nativeReduce) {\n    return obj.reduce(cb, memo, context);\n  } else {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      memo = cb.call(context, memo, obj[i], i, obj);\n    }\n\n    return memo;\n  }\n}\n/**\n * 数组过滤\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction filter(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.filter && obj.filter === nativeFilter) {\n    return obj.filter(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      if (cb.call(context, obj[i], i, obj)) {\n        result.push(obj[i]);\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * 数组项查找\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {*}\n */\n\n\nfunction find(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  for (var i = 0, len = obj.length; i < len; i++) {\n    if (cb.call(context, obj[i], i, obj)) {\n      return obj[i];\n    }\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @param {*} context\n * @return {Function}\n */\n\n\nfunction bind(func, context) {\n  var args = nativeSlice.call(arguments, 2);\n  return function () {\n    return func.apply(context, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @return {Function}\n */\n\n\nfunction curry(func) {\n  var args = nativeSlice.call(arguments, 1);\n  return function () {\n    return func.apply(this, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isArray(value) {\n  return objToString.call(value) === '[object Array]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isString(value) {\n  return objToString.call(value) === '[object String]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return type === 'function' || !!value && type == 'object';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isBuiltInObject(value) {\n  return !!BUILTIN_OBJECT[objToString.call(value)];\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isDom(value) {\n  return typeof value === 'object' && typeof value.nodeType === 'number' && typeof value.ownerDocument === 'object';\n}\n/**\n * Whether is exactly NaN. Notice isNaN('a') returns true.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction eqNaN(value) {\n  return value !== value;\n}\n/**\n * If value1 is not null, then return value1, otherwise judget rest of values.\n * Low performance.\n * @memberOf module:zrender/core/util\n * @return {*} Final value\n */\n\n\nfunction retrieve(values) {\n  for (var i = 0, len = arguments.length; i < len; i++) {\n    if (arguments[i] != null) {\n      return arguments[i];\n    }\n  }\n}\n\nfunction retrieve2(value0, value1) {\n  return value0 != null ? value0 : value1;\n}\n\nfunction retrieve3(value0, value1, value2) {\n  return value0 != null ? value0 : value1 != null ? value1 : value2;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} arr\n * @param {number} startIndex\n * @param {number} endIndex\n * @return {Array}\n */\n\n\nfunction slice() {\n  return Function.call.apply(nativeSlice, arguments);\n}\n/**\n * Normalize css liked array configuration\n * e.g.\n *  3 => [3, 3, 3, 3]\n *  [4, 2] => [4, 2, 4, 2]\n *  [4, 3, 2] => [4, 3, 2, 3]\n * @param {number|Array.<number>} val\n * @return {Array.<number>}\n */\n\n\nfunction normalizeCssArray(val) {\n  if (typeof val === 'number') {\n    return [val, val, val, val];\n  }\n\n  var len = val.length;\n\n  if (len === 2) {\n    // vertical | horizontal\n    return [val[0], val[1], val[0], val[1]];\n  } else if (len === 3) {\n    // top | horizontal | bottom\n    return [val[0], val[1], val[2], val[1]];\n  }\n\n  return val;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {boolean} condition\n * @param {string} message\n */\n\n\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error(message);\n  }\n}\n\nvar primitiveKey = '__ec_primitive__';\n/**\n * Set an object as primitive to be ignored traversing children in clone or merge\n */\n\nfunction setAsPrimitive(obj) {\n  obj[primitiveKey] = true;\n}\n\nfunction isPrimitive(obj) {\n  return obj[primitiveKey];\n}\n/**\n * @constructor\n * @param {Object} obj Only apply `ownProperty`.\n */\n\n\nfunction HashMap(obj) {\n  obj && each(obj, function (value, key) {\n    this.set(key, value);\n  }, this);\n} // Add prefix to avoid conflict with Object.prototype.\n\n\nvar HASH_MAP_PREFIX = '_ec_';\nvar HASH_MAP_PREFIX_LENGTH = 4;\nHashMap.prototype = {\n  constructor: HashMap,\n  // Do not provide `has` method to avoid defining what is `has`.\n  // (We usually treat `null` and `undefined` as the same, different\n  // from ES6 Map).\n  get: function (key) {\n    return this[HASH_MAP_PREFIX + key];\n  },\n  set: function (key, value) {\n    this[HASH_MAP_PREFIX + key] = value; // Comparing with invocation chaining, `return value` is more commonly\n    // used in this case: `var someVal = map.set('a', genVal());`\n\n    return value;\n  },\n  // Although util.each can be performed on this hashMap directly, user\n  // should not use the exposed keys, who are prefixed.\n  each: function (cb, context) {\n    context !== void 0 && (cb = bind(cb, context));\n\n    for (var prefixedKey in this) {\n      this.hasOwnProperty(prefixedKey) && cb(this[prefixedKey], prefixedKey.slice(HASH_MAP_PREFIX_LENGTH));\n    }\n  },\n  // Do not use this method if performance sensitive.\n  removeKey: function (key) {\n    delete this[HASH_MAP_PREFIX + key];\n  }\n};\n\nfunction createHashMap(obj) {\n  return new HashMap(obj);\n}\n\nfunction noop() {}\n\nexports.$override = $override;\nexports.clone = clone;\nexports.merge = merge;\nexports.mergeAll = mergeAll;\nexports.extend = extend;\nexports.defaults = defaults;\nexports.createCanvas = createCanvas;\nexports.getContext = getContext;\nexports.indexOf = indexOf;\nexports.inherits = inherits;\nexports.mixin = mixin;\nexports.isArrayLike = isArrayLike;\nexports.each = each;\nexports.map = map;\nexports.reduce = reduce;\nexports.filter = filter;\nexports.find = find;\nexports.bind = bind;\nexports.curry = curry;\nexports.isArray = isArray;\nexports.isFunction = isFunction;\nexports.isString = isString;\nexports.isObject = isObject;\nexports.isBuiltInObject = isBuiltInObject;\nexports.isDom = isDom;\nexports.eqNaN = eqNaN;\nexports.retrieve = retrieve;\nexports.retrieve2 = retrieve2;\nexports.retrieve3 = retrieve3;\nexports.slice = slice;\nexports.normalizeCssArray = normalizeCssArray;\nexports.assert = assert;\nexports.setAsPrimitive = setAsPrimitive;\nexports.isPrimitive = isPrimitive;\nexports.createHashMap = createHashMap;\nexports.noop = noop;\n\n/***/ }),\n\n/***/ 1028:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(1032);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrender = __webpack_require__(1081);\n\nvar zrUtil = __webpack_require__(1027);\n\nvar colorTool = __webpack_require__(1051);\n\nvar env = __webpack_require__(1035);\n\nvar timsort = __webpack_require__(1073);\n\nvar Eventful = __webpack_require__(1050);\n\nvar GlobalModel = __webpack_require__(1150);\n\nvar ExtensionAPI = __webpack_require__(1175);\n\nvar CoordinateSystemManager = __webpack_require__(1055);\n\nvar OptionManager = __webpack_require__(1176);\n\nvar backwardCompat = __webpack_require__(1177);\n\nvar ComponentModel = __webpack_require__(1040);\n\nvar SeriesModel = __webpack_require__(1049);\n\nvar ComponentView = __webpack_require__(1088);\n\nvar ChartView = __webpack_require__(1061);\n\nvar graphic = __webpack_require__(1029);\n\nvar modelUtil = __webpack_require__(1031);\n\nvar _throttle = __webpack_require__(1057);\n\nvar throttle = _throttle.throttle;\n\nvar seriesColor = __webpack_require__(1179);\n\nvar loadingDefault = __webpack_require__(1180);\n\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\nvar each = zrUtil.each;\nvar parseClassType = ComponentModel.parseClassType;\nvar version = '3.8.5';\nvar dependencies = {\n  zrender: '3.7.4'\n};\nvar PRIORITY_PROCESSOR_FILTER = 1000;\nvar PRIORITY_PROCESSOR_STATISTIC = 5000;\nvar PRIORITY_VISUAL_LAYOUT = 1000;\nvar PRIORITY_VISUAL_GLOBAL = 2000;\nvar PRIORITY_VISUAL_CHART = 3000;\nvar PRIORITY_VISUAL_COMPONENT = 4000; // FIXME\n// necessary?\n\nvar PRIORITY_VISUAL_BRUSH = 5000;\nvar PRIORITY = {\n  PROCESSOR: {\n    FILTER: PRIORITY_PROCESSOR_FILTER,\n    STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n  },\n  VISUAL: {\n    LAYOUT: PRIORITY_VISUAL_LAYOUT,\n    GLOBAL: PRIORITY_VISUAL_GLOBAL,\n    CHART: PRIORITY_VISUAL_CHART,\n    COMPONENT: PRIORITY_VISUAL_COMPONENT,\n    BRUSH: PRIORITY_VISUAL_BRUSH\n  }\n}; // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n// where they must not be invoked nestedly, except the only case: invoke\n// dispatchAction with updateMethod \"none\" in main process.\n// This flag is used to carry out this rule.\n// All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n\nvar IN_MAIN_PROCESS = '__flagInMainProcess';\nvar HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\nvar OPTION_UPDATED = '__optionUpdated';\nvar ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\nfunction createRegisterEventWithLowercaseName(method) {\n  return function (eventName, handler, context) {\n    // Event name is all lowercase\n    eventName = eventName && eventName.toLowerCase();\n    Eventful.prototype[method].call(this, eventName, handler, context);\n  };\n}\n/**\n * @module echarts~MessageCenter\n */\n\n\nfunction MessageCenter() {\n  Eventful.call(this);\n}\n\nMessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\nMessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\nMessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\nzrUtil.mixin(MessageCenter, Eventful);\n/**\n * @module echarts~ECharts\n */\n\nfunction ECharts(dom, theme, opts) {\n  opts = opts || {}; // Get theme by name\n\n  if (typeof theme === 'string') {\n    theme = themeStorage[theme];\n  }\n  /**\n   * @type {string}\n   */\n\n\n  this.id;\n  /**\n   * Group id\n   * @type {string}\n   */\n\n  this.group;\n  /**\n   * @type {HTMLElement}\n   * @private\n   */\n\n  this._dom = dom;\n  var defaultRenderer = 'canvas';\n\n  /**\n   * @type {module:zrender/ZRender}\n   * @private\n   */\n  var zr = this._zr = zrender.init(dom, {\n    renderer: opts.renderer || defaultRenderer,\n    devicePixelRatio: opts.devicePixelRatio,\n    width: opts.width,\n    height: opts.height\n  });\n  /**\n   * Expect 60 pfs.\n   * @type {Function}\n   * @private\n   */\n\n  this._throttledZrFlush = throttle(zrUtil.bind(zr.flush, zr), 17);\n  var theme = zrUtil.clone(theme);\n  theme && backwardCompat(theme, true);\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._theme = theme;\n  /**\n   * @type {Array.<module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsMap = {};\n  /**\n   * @type {Array.<module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsMap = {};\n  /**\n   * @type {module:echarts/CoordinateSystem}\n   * @private\n   */\n\n  this._coordSysMgr = new CoordinateSystemManager();\n  /**\n   * @type {module:echarts/ExtensionAPI}\n   * @private\n   */\n\n  this._api = createExtensionAPI(this);\n  Eventful.call(this);\n  /**\n   * @type {module:echarts~MessageCenter}\n   * @private\n   */\n\n  this._messageCenter = new MessageCenter(); // Init mouse events\n\n  this._initEvents(); // In case some people write `window.onresize = chart.resize`\n\n\n  this.resize = zrUtil.bind(this.resize, this); // Can't dispatch action during rendering procedure\n\n  this._pendingActions = []; // Sort on demand\n\n  function prioritySortFunc(a, b) {\n    return a.prio - b.prio;\n  }\n\n  timsort(visualFuncs, prioritySortFunc);\n  timsort(dataProcessorFuncs, prioritySortFunc);\n  zr.animation.on('frame', this._onframe, this); // ECharts instance can be used as value.\n\n  zrUtil.setAsPrimitive(this);\n}\n\nvar echartsProto = ECharts.prototype;\n\nechartsProto._onframe = function () {\n  // Lazy update\n  if (this[OPTION_UPDATED]) {\n    var silent = this[OPTION_UPDATED].silent;\n    this[IN_MAIN_PROCESS] = true;\n    updateMethods.prepareAndUpdate.call(this);\n    this[IN_MAIN_PROCESS] = false;\n    this[OPTION_UPDATED] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @return {HTMLElement}\n */\n\n\nechartsProto.getDom = function () {\n  return this._dom;\n};\n/**\n * @return {module:zrender~ZRender}\n */\n\n\nechartsProto.getZr = function () {\n  return this._zr;\n};\n/**\n * Usage:\n * chart.setOption(option, notMerge, lazyUpdate);\n * chart.setOption(option, {\n *     notMerge: ...,\n *     lazyUpdate: ...,\n *     silent: ...\n * });\n *\n * @param {Object} option\n * @param {Object|boolean} [opts] opts or notMerge.\n * @param {boolean} [opts.notMerge=false]\n * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n */\n\n\nechartsProto.setOption = function (option, notMerge, lazyUpdate) {\n  var silent;\n\n  if (zrUtil.isObject(notMerge)) {\n    lazyUpdate = notMerge.lazyUpdate;\n    silent = notMerge.silent;\n    notMerge = notMerge.notMerge;\n  }\n\n  this[IN_MAIN_PROCESS] = true;\n\n  if (!this._model || notMerge) {\n    var optionManager = new OptionManager(this._api);\n    var theme = this._theme;\n    var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n    ecModel.init(null, null, theme, optionManager);\n  }\n\n  this._model.setOption(option, optionPreprocessorFuncs);\n\n  if (lazyUpdate) {\n    this[OPTION_UPDATED] = {\n      silent: silent\n    };\n    this[IN_MAIN_PROCESS] = false;\n  } else {\n    updateMethods.prepareAndUpdate.call(this); // Ensure zr refresh sychronously, and then pixel in canvas can be\n    // fetched after `setOption`.\n\n    this._zr.flush();\n\n    this[OPTION_UPDATED] = false;\n    this[IN_MAIN_PROCESS] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @DEPRECATED\n */\n\n\nechartsProto.setTheme = function () {\n  console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n};\n/**\n * @return {module:echarts/model/Global}\n */\n\n\nechartsProto.getModel = function () {\n  return this._model;\n};\n/**\n * @return {Object}\n */\n\n\nechartsProto.getOption = function () {\n  return this._model && this._model.getOption();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getWidth = function () {\n  return this._zr.getWidth();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getHeight = function () {\n  return this._zr.getHeight();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getDevicePixelRatio = function () {\n  return this._zr.painter.dpr || window.devicePixelRatio || 1;\n};\n/**\n * Get canvas which has all thing rendered\n * @param {Object} opts\n * @param {string} [opts.backgroundColor]\n * @return {string}\n */\n\n\nechartsProto.getRenderedCanvas = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  opts = opts || {};\n  opts.pixelRatio = opts.pixelRatio || 1;\n  opts.backgroundColor = opts.backgroundColor || this._model.get('backgroundColor');\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.getRenderedCanvas(opts);\n};\n/**\n * Get svg data url\n * @return {string}\n */\n\n\nechartsProto.getSvgDataUrl = function () {\n  if (!env.svgSupported) {\n    return;\n  }\n\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.pathToSvg();\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n * @param {string} [opts.excludeComponents]\n */\n\n\nechartsProto.getDataURL = function (opts) {\n  opts = opts || {};\n  var excludeComponents = opts.excludeComponents;\n  var ecModel = this._model;\n  var excludesComponentViews = [];\n  var self = this;\n  each(excludeComponents, function (componentType) {\n    ecModel.eachComponent({\n      mainType: componentType\n    }, function (component) {\n      var view = self._componentsMap[component.__viewId];\n\n      if (!view.group.ignore) {\n        excludesComponentViews.push(view);\n        view.group.ignore = true;\n      }\n    });\n  });\n  var url = this._zr.painter.getType() === 'svg' ? this.getSvgDataUrl() : this.getRenderedCanvas(opts).toDataURL('image/' + (opts && opts.type || 'png'));\n  each(excludesComponentViews, function (view) {\n    view.group.ignore = false;\n  });\n  return url;\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n */\n\n\nechartsProto.getConnectedDataURL = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  var groupId = this.group;\n  var mathMin = Math.min;\n  var mathMax = Math.max;\n  var MAX_NUMBER = Infinity;\n\n  if (connectedGroups[groupId]) {\n    var left = MAX_NUMBER;\n    var top = MAX_NUMBER;\n    var right = -MAX_NUMBER;\n    var bottom = -MAX_NUMBER;\n    var canvasList = [];\n    var dpr = opts && opts.pixelRatio || 1;\n    zrUtil.each(instances, function (chart, id) {\n      if (chart.group === groupId) {\n        var canvas = chart.getRenderedCanvas(zrUtil.clone(opts));\n        var boundingRect = chart.getDom().getBoundingClientRect();\n        left = mathMin(boundingRect.left, left);\n        top = mathMin(boundingRect.top, top);\n        right = mathMax(boundingRect.right, right);\n        bottom = mathMax(boundingRect.bottom, bottom);\n        canvasList.push({\n          dom: canvas,\n          left: boundingRect.left,\n          top: boundingRect.top\n        });\n      }\n    });\n    left *= dpr;\n    top *= dpr;\n    right *= dpr;\n    bottom *= dpr;\n    var width = right - left;\n    var height = bottom - top;\n    var targetCanvas = zrUtil.createCanvas();\n    targetCanvas.width = width;\n    targetCanvas.height = height;\n    var zr = zrender.init(targetCanvas);\n    each(canvasList, function (item) {\n      var img = new graphic.Image({\n        style: {\n          x: item.left * dpr - left,\n          y: item.top * dpr - top,\n          image: item.dom\n        }\n      });\n      zr.add(img);\n    });\n    zr.refreshImmediately();\n    return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n  } else {\n    return this.getDataURL(opts);\n  }\n};\n/**\n * Convert from logical coordinate system to pixel coordinate system.\n * See CoordinateSystem#convertToPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId, geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\n\nechartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n/**\n * Convert from pixel coordinate system to logical coordinate system.\n * See CoordinateSystem#convertFromPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\nechartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\nfunction doConvertPixel(methodName, finder, value) {\n  var ecModel = this._model;\n\n  var coordSysList = this._coordSysMgr.getCoordinateSystems();\n\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n\n  for (var i = 0; i < coordSysList.length; i++) {\n    var coordSys = coordSysList[i];\n\n    if (coordSys[methodName] && (result = coordSys[methodName](ecModel, finder, value)) != null) {\n      return result;\n    }\n  }\n}\n/**\n * Is the specified coordinate systems or components contain the given pixel point.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {boolean} result\n */\n\n\nechartsProto.containPixel = function (finder, value) {\n  var ecModel = this._model;\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n  zrUtil.each(finder, function (models, key) {\n    key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n      var coordSys = model.coordinateSystem;\n\n      if (coordSys && coordSys.containPoint) {\n        result |= !!coordSys.containPoint(value);\n      } else if (key === 'seriesModels') {\n        var view = this._chartsMap[model.__viewId];\n\n        if (view && view.containPoint) {\n          result |= view.containPoint(value, model);\n        } else {}\n      } else {}\n    }, this);\n  }, this);\n  return !!result;\n};\n/**\n * Get visual from series or data.\n * @param {string|Object} finder\n *        If string, e.g., 'series', means {seriesIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            dataIndex / dataIndexInside\n *        }\n *        If dataIndex is not specified, series visual will be fetched,\n *        but not data item visual.\n *        If all of seriesIndex, seriesId, seriesName are not specified,\n *        visual will be fetched from first series.\n * @param {string} visualType 'color', 'symbol', 'symbolSize'\n */\n\n\nechartsProto.getVisual = function (finder, visualType) {\n  var ecModel = this._model;\n  finder = modelUtil.parseFinder(ecModel, finder, {\n    defaultMainType: 'series'\n  });\n  var seriesModel = finder.seriesModel;\n  var data = seriesModel.getData();\n  var dataIndexInside = finder.hasOwnProperty('dataIndexInside') ? finder.dataIndexInside : finder.hasOwnProperty('dataIndex') ? data.indexOfRawIndex(finder.dataIndex) : null;\n  return dataIndexInside != null ? data.getItemVisual(dataIndexInside, visualType) : data.getVisual(visualType);\n};\n/**\n * Get view of corresponding component model\n * @param  {module:echarts/model/Component} componentModel\n * @return {module:echarts/view/Component}\n */\n\n\nechartsProto.getViewOfComponentModel = function (componentModel) {\n  return this._componentsMap[componentModel.__viewId];\n};\n/**\n * Get view of corresponding series model\n * @param  {module:echarts/model/Series} seriesModel\n * @return {module:echarts/view/Chart}\n */\n\n\nechartsProto.getViewOfSeriesModel = function (seriesModel) {\n  return this._chartsMap[seriesModel.__viewId];\n};\n\nvar updateMethods = {\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  update: function (payload) {\n    // console.profile && console.profile('update');\n    var ecModel = this._model;\n    var api = this._api;\n    var coordSysMgr = this._coordSysMgr;\n    var zr = this._zr; // update before setOption\n\n    if (!ecModel) {\n      return;\n    } // Fixme First time update ?\n\n\n    ecModel.restoreData(); // TODO\n    // Save total ecModel here for undo/redo (after restoring data and before processing data).\n    // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n    // Create new coordinate system each update\n    // In LineView may save the old coordinate system and use it to get the orignal point\n\n    coordSysMgr.create(this._model, this._api);\n    processData.call(this, ecModel, api);\n    stackSeriesData.call(this, ecModel);\n    coordSysMgr.update(ecModel, api);\n    doVisualEncoding.call(this, ecModel, payload);\n    doRender.call(this, ecModel, payload); // Set background\n\n    var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n    var painter = zr.painter; // TODO all use clearColor ?\n\n    if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n      zr.configLayer(0, {\n        clearColor: backgroundColor\n      });\n    } else {\n      // In IE8\n      if (!env.canvasSupported) {\n        var colorArr = colorTool.parse(backgroundColor);\n        backgroundColor = colorTool.stringify(colorArr, 'rgb');\n\n        if (colorArr[3] === 0) {\n          backgroundColor = 'transparent';\n        }\n      }\n\n      if (backgroundColor.colorStops || backgroundColor.image) {\n        // Gradient background\n        // FIXME Fixed layer？\n        zr.configLayer(0, {\n          clearColor: backgroundColor\n        });\n        this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n        this._dom.style.background = 'transparent';\n      } else {\n        if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n          zr.configLayer(0, {\n            clearColor: null\n          });\n        }\n\n        this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n        this._dom.style.background = backgroundColor;\n      }\n    }\n\n    each(postUpdateFuncs, function (func) {\n      func(ecModel, api);\n    }); // console.profile && console.profileEnd('update');\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateView: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ecModel.eachSeries(function (seriesModel) {\n      seriesModel.getData().clearAllVisual();\n    });\n    doVisualEncoding.call(this, ecModel, payload);\n    invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateVisual: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ecModel.eachSeries(function (seriesModel) {\n      seriesModel.getData().clearAllVisual();\n    });\n    doVisualEncoding.call(this, ecModel, payload, true);\n    invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateLayout: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    doLayout.call(this, ecModel, payload);\n    invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  prepareAndUpdate: function (payload) {\n    var ecModel = this._model;\n    prepareView.call(this, 'component', ecModel);\n    prepareView.call(this, 'chart', ecModel);\n    updateMethods.update.call(this, payload);\n  }\n};\n/**\n * @private\n */\n\nfunction updateDirectly(ecIns, method, payload, mainType, subType) {\n  var ecModel = ecIns._model; // broadcast\n\n  if (!mainType) {\n    each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n    return;\n  }\n\n  var query = {};\n  query[mainType + 'Id'] = payload[mainType + 'Id'];\n  query[mainType + 'Index'] = payload[mainType + 'Index'];\n  query[mainType + 'Name'] = payload[mainType + 'Name'];\n  var condition = {\n    mainType: mainType,\n    query: query\n  };\n  subType && (condition.subType = subType); // subType may be '' by parseClassType;\n  // If dispatchAction before setOption, do nothing.\n\n  ecModel && ecModel.eachComponent(condition, function (model, index) {\n    callView(ecIns[mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId]);\n  }, ecIns);\n\n  function callView(view) {\n    view && view.__alive && view[method] && view[method](view.__model, ecModel, ecIns._api, payload);\n  }\n}\n/**\n * Resize the chart\n * @param {Object} opts\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n * @param {boolean} [opts.silent=false]\n */\n\n\nechartsProto.resize = function (opts) {\n  this[IN_MAIN_PROCESS] = true;\n\n  this._zr.resize(opts);\n\n  var optionChanged = this._model && this._model.resetOption('media');\n\n  var updateMethod = optionChanged ? 'prepareAndUpdate' : 'update';\n  updateMethods[updateMethod].call(this); // Resize loading effect\n\n  this._loadingFX && this._loadingFX.resize();\n  this[IN_MAIN_PROCESS] = false;\n  var silent = opts && opts.silent;\n  flushPendingActions.call(this, silent);\n  triggerUpdatedEvent.call(this, silent);\n};\n/**\n * Show loading effect\n * @param  {string} [name='default']\n * @param  {Object} [cfg]\n */\n\n\nechartsProto.showLoading = function (name, cfg) {\n  if (zrUtil.isObject(name)) {\n    cfg = name;\n    name = '';\n  }\n\n  name = name || 'default';\n  this.hideLoading();\n\n  if (!loadingEffects[name]) {\n    return;\n  }\n\n  var el = loadingEffects[name](this._api, cfg);\n  var zr = this._zr;\n  this._loadingFX = el;\n  zr.add(el);\n};\n/**\n * Hide loading effect\n */\n\n\nechartsProto.hideLoading = function () {\n  this._loadingFX && this._zr.remove(this._loadingFX);\n  this._loadingFX = null;\n};\n/**\n * @param {Object} eventObj\n * @return {Object}\n */\n\n\nechartsProto.makeActionFromEvent = function (eventObj) {\n  var payload = zrUtil.extend({}, eventObj);\n  payload.type = eventActionMap[eventObj.type];\n  return payload;\n};\n/**\n * @pubilc\n * @param {Object} payload\n * @param {string} [payload.type] Action type\n * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n * @param {boolean} [opt.silent=false] Whether trigger events.\n * @param {boolean} [opt.flush=undefined]\n *                  true: Flush immediately, and then pixel in canvas can be fetched\n *                      immediately. Caution: it might affect performance.\n *                  false: Not not flush.\n *                  undefined: Auto decide whether perform flush.\n */\n\n\nechartsProto.dispatchAction = function (payload, opt) {\n  if (!zrUtil.isObject(opt)) {\n    opt = {\n      silent: !!opt\n    };\n  }\n\n  if (!actions[payload.type]) {\n    return;\n  } // Avoid dispatch action before setOption. Especially in `connect`.\n\n\n  if (!this._model) {\n    return;\n  } // May dispatchAction in rendering procedure\n\n\n  if (this[IN_MAIN_PROCESS]) {\n    this._pendingActions.push(payload);\n\n    return;\n  }\n\n  doDispatchAction.call(this, payload, opt.silent);\n\n  if (opt.flush) {\n    this._zr.flush(true);\n  } else if (opt.flush !== false && env.browser.weChat) {\n    // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n    // hang when sliding page (on touch event), which cause that zr does not\n    // refresh util user interaction finished, which is not expected.\n    // But `dispatchAction` may be called too frequently when pan on touch\n    // screen, which impacts performance if do not throttle them.\n    this._throttledZrFlush();\n  }\n\n  flushPendingActions.call(this, opt.silent);\n  triggerUpdatedEvent.call(this, opt.silent);\n};\n\nfunction doDispatchAction(payload, silent) {\n  var payloadType = payload.type;\n  var escapeConnect = payload.escapeConnect;\n  var actionWrap = actions[payloadType];\n  var actionInfo = actionWrap.actionInfo;\n  var cptType = (actionInfo.update || 'update').split(':');\n  var updateMethod = cptType.pop();\n  cptType = cptType[0] != null && parseClassType(cptType[0]);\n  this[IN_MAIN_PROCESS] = true;\n  var payloads = [payload];\n  var batched = false; // Batch action\n\n  if (payload.batch) {\n    batched = true;\n    payloads = zrUtil.map(payload.batch, function (item) {\n      item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n      item.batch = null;\n      return item;\n    });\n  }\n\n  var eventObjBatch = [];\n  var eventObj;\n  var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n  each(payloads, function (batchItem) {\n    // Action can specify the event by return it.\n    eventObj = actionWrap.action(batchItem, this._model, this._api); // Emit event outside\n\n    eventObj = eventObj || zrUtil.extend({}, batchItem); // Convert type to eventType\n\n    eventObj.type = actionInfo.event || eventObj.type;\n    eventObjBatch.push(eventObj); // light update does not perform data process, layout and visual.\n\n    if (isHighDown) {\n      // method, payload, mainType, subType\n      updateDirectly(this, updateMethod, batchItem, 'series');\n    } else if (cptType) {\n      updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n    }\n  }, this);\n\n  if (updateMethod !== 'none' && !isHighDown && !cptType) {\n    // Still dirty\n    if (this[OPTION_UPDATED]) {\n      // FIXME Pass payload ?\n      updateMethods.prepareAndUpdate.call(this, payload);\n      this[OPTION_UPDATED] = false;\n    } else {\n      updateMethods[updateMethod].call(this, payload);\n    }\n  } // Follow the rule of action batch\n\n\n  if (batched) {\n    eventObj = {\n      type: actionInfo.event || payloadType,\n      escapeConnect: escapeConnect,\n      batch: eventObjBatch\n    };\n  } else {\n    eventObj = eventObjBatch[0];\n  }\n\n  this[IN_MAIN_PROCESS] = false;\n  !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n}\n\nfunction flushPendingActions(silent) {\n  var pendingActions = this._pendingActions;\n\n  while (pendingActions.length) {\n    var payload = pendingActions.shift();\n    doDispatchAction.call(this, payload, silent);\n  }\n}\n\nfunction triggerUpdatedEvent(silent) {\n  !silent && this.trigger('updated');\n}\n/**\n * Register event\n * @method\n */\n\n\nechartsProto.on = createRegisterEventWithLowercaseName('on');\nechartsProto.off = createRegisterEventWithLowercaseName('off');\nechartsProto.one = createRegisterEventWithLowercaseName('one');\n/**\n * @param {string} methodName\n * @private\n */\n\nfunction invokeUpdateMethod(methodName, ecModel, payload) {\n  var api = this._api; // Update all components\n\n  each(this._componentsViews, function (component) {\n    var componentModel = component.__model;\n    component[methodName](componentModel, ecModel, api, payload);\n    updateZ(componentModel, component);\n  }, this); // Upate all charts\n\n  ecModel.eachSeries(function (seriesModel, idx) {\n    var chart = this._chartsMap[seriesModel.__viewId];\n    chart[methodName](seriesModel, ecModel, api, payload);\n    updateZ(seriesModel, chart);\n    updateProgressiveAndBlend(seriesModel, chart);\n  }, this); // If use hover layer\n\n  updateHoverLayerStatus(this._zr, ecModel); // Post render\n\n  each(postUpdateFuncs, function (func) {\n    func(ecModel, api);\n  });\n}\n/**\n * Prepare view instances of charts and components\n * @param  {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction prepareView(type, ecModel) {\n  var isComponent = type === 'component';\n  var viewList = isComponent ? this._componentsViews : this._chartsViews;\n  var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n  var zr = this._zr;\n\n  for (var i = 0; i < viewList.length; i++) {\n    viewList[i].__alive = false;\n  }\n\n  ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n    if (isComponent) {\n      if (componentType === 'series') {\n        return;\n      }\n    } else {\n      model = componentType;\n    } // Consider: id same and type changed.\n\n\n    var viewId = '_ec_' + model.id + '_' + model.type;\n    var view = viewMap[viewId];\n\n    if (!view) {\n      var classType = parseClassType(model.type);\n      var Clazz = isComponent ? ComponentView.getClass(classType.main, classType.sub) : ChartView.getClass(classType.sub);\n\n      if (Clazz) {\n        view = new Clazz();\n        view.init(ecModel, this._api);\n        viewMap[viewId] = view;\n        viewList.push(view);\n        zr.add(view.group);\n      } else {\n        // Error\n        return;\n      }\n    }\n\n    model.__viewId = view.__id = viewId;\n    view.__alive = true;\n    view.__model = model;\n    view.group.__ecComponentInfo = {\n      mainType: model.mainType,\n      index: model.componentIndex\n    };\n  }, this);\n\n  for (var i = 0; i < viewList.length;) {\n    var view = viewList[i];\n\n    if (!view.__alive) {\n      zr.remove(view.group);\n      view.dispose(ecModel, this._api);\n      viewList.splice(i, 1);\n      delete viewMap[view.__id];\n      view.__id = view.group.__ecComponentInfo = null;\n    } else {\n      i++;\n    }\n  }\n}\n/**\n * Processor data in each series\n *\n * @param {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction processData(ecModel, api) {\n  each(dataProcessorFuncs, function (process) {\n    process.func(ecModel, api);\n  });\n}\n/**\n * @private\n */\n\n\nfunction stackSeriesData(ecModel) {\n  var stackedDataMap = {};\n  ecModel.eachSeries(function (series) {\n    var stack = series.get('stack');\n    var data = series.getData();\n\n    if (stack && data.type === 'list') {\n      var previousStack = stackedDataMap[stack]; // Avoid conflict with Object.prototype\n\n      if (stackedDataMap.hasOwnProperty(stack) && previousStack) {\n        data.stackedOn = previousStack;\n      }\n\n      stackedDataMap[stack] = data;\n    }\n  });\n}\n/**\n * Layout before each chart render there series, special visual encoding stage\n *\n * @param {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction doLayout(ecModel, payload) {\n  var api = this._api;\n  each(visualFuncs, function (visual) {\n    if (visual.isLayout) {\n      visual.func(ecModel, api, payload);\n    }\n  });\n}\n/**\n * Encode visual infomation from data after data processing\n *\n * @param {module:echarts/model/Global} ecModel\n * @param {object} layout\n * @param {boolean} [excludesLayout]\n * @private\n */\n\n\nfunction doVisualEncoding(ecModel, payload, excludesLayout) {\n  var api = this._api;\n  ecModel.clearColorPalette();\n  ecModel.eachSeries(function (seriesModel) {\n    seriesModel.clearColorPalette();\n  });\n  each(visualFuncs, function (visual) {\n    (!excludesLayout || !visual.isLayout) && visual.func(ecModel, api, payload);\n  });\n}\n/**\n * Render each chart and component\n * @private\n */\n\n\nfunction doRender(ecModel, payload) {\n  var api = this._api; // Render all components\n\n  each(this._componentsViews, function (componentView) {\n    var componentModel = componentView.__model;\n    componentView.render(componentModel, ecModel, api, payload);\n    updateZ(componentModel, componentView);\n  }, this);\n  each(this._chartsViews, function (chart) {\n    chart.__alive = false;\n  }, this); // Render all charts\n\n  ecModel.eachSeries(function (seriesModel, idx) {\n    var chartView = this._chartsMap[seriesModel.__viewId];\n    chartView.__alive = true;\n    chartView.render(seriesModel, ecModel, api, payload);\n    chartView.group.silent = !!seriesModel.get('silent');\n    updateZ(seriesModel, chartView);\n    updateProgressiveAndBlend(seriesModel, chartView);\n  }, this); // If use hover layer\n\n  updateHoverLayerStatus(this._zr, ecModel); // Remove groups of unrendered charts\n\n  each(this._chartsViews, function (chart) {\n    if (!chart.__alive) {\n      chart.remove(ecModel, api);\n    }\n  }, this);\n}\n\nvar MOUSE_EVENT_NAMES = ['click', 'dblclick', 'mouseover', 'mouseout', 'mousemove', 'mousedown', 'mouseup', 'globalout', 'contextmenu'];\n/**\n * @private\n */\n\nechartsProto._initEvents = function () {\n  each(MOUSE_EVENT_NAMES, function (eveName) {\n    this._zr.on(eveName, function (e) {\n      var ecModel = this.getModel();\n      var el = e.target;\n      var params; // no e.target when 'globalout'.\n\n      if (eveName === 'globalout') {\n        params = {};\n      } else if (el && el.dataIndex != null) {\n        var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n        params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n      } // If element has custom eventData of components\n      else if (el && el.eventData) {\n          params = zrUtil.extend({}, el.eventData);\n        }\n\n      if (params) {\n        params.event = e;\n        params.type = eveName;\n        this.trigger(eveName, params);\n      }\n    }, this);\n  }, this);\n  each(eventActionMap, function (actionType, eventType) {\n    this._messageCenter.on(eventType, function (event) {\n      this.trigger(eventType, event);\n    }, this);\n  }, this);\n};\n/**\n * @return {boolean}\n */\n\n\nechartsProto.isDisposed = function () {\n  return this._disposed;\n};\n/**\n * Clear\n */\n\n\nechartsProto.clear = function () {\n  this.setOption({\n    series: []\n  }, true);\n};\n/**\n * Dispose instance\n */\n\n\nechartsProto.dispose = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  this._disposed = true;\n  var api = this._api;\n  var ecModel = this._model;\n  each(this._componentsViews, function (component) {\n    component.dispose(ecModel, api);\n  });\n  each(this._chartsViews, function (chart) {\n    chart.dispose(ecModel, api);\n  }); // Dispose after all views disposed\n\n  this._zr.dispose();\n\n  delete instances[this.id];\n};\n\nzrUtil.mixin(ECharts, Eventful);\n\nfunction updateHoverLayerStatus(zr, ecModel) {\n  var storage = zr.storage;\n  var elCount = 0;\n  storage.traverse(function (el) {\n    if (!el.isGroup) {\n      elCount++;\n    }\n  });\n\n  if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n    storage.traverse(function (el) {\n      if (!el.isGroup) {\n        el.useHoverLayer = true;\n      }\n    });\n  }\n}\n/**\n * Update chart progressive and blend.\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateProgressiveAndBlend(seriesModel, chartView) {\n  // Progressive configuration\n  var elCount = 0;\n  chartView.group.traverse(function (el) {\n    if (el.type !== 'group' && !el.ignore) {\n      elCount++;\n    }\n  });\n  var frameDrawNum = +seriesModel.get('progressive');\n  var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n\n  if (needProgressive) {\n    chartView.group.traverse(function (el) {\n      // FIXME marker and other components\n      if (!el.isGroup) {\n        el.progressive = needProgressive ? Math.floor(elCount++ / frameDrawNum) : -1;\n\n        if (needProgressive) {\n          el.stopAnimation(true);\n        }\n      }\n    });\n  } // Blend configration\n\n\n  var blendMode = seriesModel.get('blendMode') || null;\n  chartView.group.traverse(function (el) {\n    // FIXME marker and other components\n    if (!el.isGroup) {\n      el.setStyle('blend', blendMode);\n    }\n  });\n}\n/**\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateZ(model, view) {\n  var z = model.get('z');\n  var zlevel = model.get('zlevel'); // Set z and zlevel\n\n  view.group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n    }\n  });\n}\n\nfunction createExtensionAPI(ecInstance) {\n  var coordSysMgr = ecInstance._coordSysMgr;\n  return zrUtil.extend(new ExtensionAPI(ecInstance), {\n    // Inject methods\n    getCoordinateSystems: zrUtil.bind(coordSysMgr.getCoordinateSystems, coordSysMgr),\n    getComponentByElement: function (el) {\n      while (el) {\n        var modelInfo = el.__ecComponentInfo;\n\n        if (modelInfo != null) {\n          return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n        }\n\n        el = el.parent;\n      }\n    }\n  });\n}\n/**\n * @type {Object} key: actionType.\n * @inner\n */\n\n\nvar actions = {};\n/**\n * Map eventType to actionType\n * @type {Object}\n */\n\nvar eventActionMap = {};\n/**\n * Data processor functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar dataProcessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar optionPreprocessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar postUpdateFuncs = [];\n/**\n * Visual encoding functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar visualFuncs = [];\n/**\n * Theme storage\n * @type {Object.<key, Object>}\n */\n\nvar themeStorage = {};\n/**\n * Loading effects\n */\n\nvar loadingEffects = {};\nvar instances = {};\nvar connectedGroups = {};\nvar idBase = new Date() - 0;\nvar groupIdBase = new Date() - 0;\nvar DOM_ATTRIBUTE_KEY = '_echarts_instance_';\nvar mapDataStores = {};\n\nfunction enableConnect(chart) {\n  var STATUS_PENDING = 0;\n  var STATUS_UPDATING = 1;\n  var STATUS_UPDATED = 2;\n  var STATUS_KEY = '__connectUpdateStatus';\n\n  function updateConnectedChartsStatus(charts, status) {\n    for (var i = 0; i < charts.length; i++) {\n      var otherChart = charts[i];\n      otherChart[STATUS_KEY] = status;\n    }\n  }\n\n  zrUtil.each(eventActionMap, function (actionType, eventType) {\n    chart._messageCenter.on(eventType, function (event) {\n      if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n        if (event && event.escapeConnect) {\n          return;\n        }\n\n        var action = chart.makeActionFromEvent(event);\n        var otherCharts = [];\n        zrUtil.each(instances, function (otherChart) {\n          if (otherChart !== chart && otherChart.group === chart.group) {\n            otherCharts.push(otherChart);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n        each(otherCharts, function (otherChart) {\n          if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n            otherChart.dispatchAction(action);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n      }\n    });\n  });\n}\n/**\n * @param {HTMLElement} dom\n * @param {Object} [theme]\n * @param {Object} opts\n * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n *                              Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n *                               Can be 'auto' (the same as null/undefined)\n */\n\n\nfunction init(dom, theme, opts) {\n  var existInstance = getInstanceByDom(dom);\n\n  if (existInstance) {\n    return existInstance;\n  }\n\n  var chart = new ECharts(dom, theme, opts);\n  chart.id = 'ec_' + idBase++;\n  instances[chart.id] = chart;\n\n  if (dom.setAttribute) {\n    dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n  } else {\n    dom[DOM_ATTRIBUTE_KEY] = chart.id;\n  }\n\n  enableConnect(chart);\n  return chart;\n}\n/**\n * @return {string|Array.<module:echarts~ECharts>} groupId\n */\n\n\nfunction connect(groupId) {\n  // Is array of charts\n  if (zrUtil.isArray(groupId)) {\n    var charts = groupId;\n    groupId = null; // If any chart has group\n\n    zrUtil.each(charts, function (chart) {\n      if (chart.group != null) {\n        groupId = chart.group;\n      }\n    });\n    groupId = groupId || 'g_' + groupIdBase++;\n    zrUtil.each(charts, function (chart) {\n      chart.group = groupId;\n    });\n  }\n\n  connectedGroups[groupId] = true;\n  return groupId;\n}\n/**\n * @DEPRECATED\n * @return {string} groupId\n */\n\n\nfunction disConnect(groupId) {\n  connectedGroups[groupId] = false;\n}\n/**\n * @return {string} groupId\n */\n\n\nvar disconnect = disConnect;\n/**\n * Dispose a chart instance\n * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n */\n\nfunction dispose(chart) {\n  if (typeof chart === 'string') {\n    chart = instances[chart];\n  } else if (!(chart instanceof ECharts)) {\n    // Try to treat as dom\n    chart = getInstanceByDom(chart);\n  }\n\n  if (chart instanceof ECharts && !chart.isDisposed()) {\n    chart.dispose();\n  }\n}\n/**\n * @param  {HTMLElement} dom\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceByDom(dom) {\n  var key;\n\n  if (dom.getAttribute) {\n    key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n  } else {\n    key = dom[DOM_ATTRIBUTE_KEY];\n  }\n\n  return instances[key];\n}\n/**\n * @param {string} key\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceById(key) {\n  return instances[key];\n}\n/**\n * Register theme\n */\n\n\nfunction registerTheme(name, theme) {\n  themeStorage[name] = theme;\n}\n/**\n * Register option preprocessor\n * @param {Function} preprocessorFunc\n */\n\n\nfunction registerPreprocessor(preprocessorFunc) {\n  optionPreprocessorFuncs.push(preprocessorFunc);\n}\n/**\n * @param {number} [priority=1000]\n * @param {Function} processorFunc\n */\n\n\nfunction registerProcessor(priority, processorFunc) {\n  if (typeof priority === 'function') {\n    processorFunc = priority;\n    priority = PRIORITY_PROCESSOR_FILTER;\n  }\n\n  dataProcessorFuncs.push({\n    prio: priority,\n    func: processorFunc\n  });\n}\n/**\n * Register postUpdater\n * @param {Function} postUpdateFunc\n */\n\n\nfunction registerPostUpdate(postUpdateFunc) {\n  postUpdateFuncs.push(postUpdateFunc);\n}\n/**\n * Usage:\n * registerAction('someAction', 'someEvent', function () { ... });\n * registerAction('someAction', function () { ... });\n * registerAction(\n *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n *     function () { ... }\n * );\n *\n * @param {(string|Object)} actionInfo\n * @param {string} actionInfo.type\n * @param {string} [actionInfo.event]\n * @param {string} [actionInfo.update]\n * @param {string} [eventName]\n * @param {Function} action\n */\n\n\nfunction registerAction(actionInfo, eventName, action) {\n  if (typeof eventName === 'function') {\n    action = eventName;\n    eventName = '';\n  }\n\n  var actionType = zrUtil.isObject(actionInfo) ? actionInfo.type : [actionInfo, actionInfo = {\n    event: eventName\n  }][0]; // Event name is all lowercase\n\n  actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n  eventName = actionInfo.event; // Validate action type and event name.\n\n  zrUtil.assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n  if (!actions[actionType]) {\n    actions[actionType] = {\n      action: action,\n      actionInfo: actionInfo\n    };\n  }\n\n  eventActionMap[eventName] = actionType;\n}\n/**\n * @param {string} type\n * @param {*} CoordinateSystem\n */\n\n\nfunction registerCoordinateSystem(type, CoordinateSystem) {\n  CoordinateSystemManager.register(type, CoordinateSystem);\n}\n/**\n * Get dimensions of specified coordinate system.\n * @param {string} type\n * @return {Array.<string|Object>}\n */\n\n\nfunction getCoordinateSystemDimensions(type) {\n  var coordSysCreator = CoordinateSystemManager.get(type);\n\n  if (coordSysCreator) {\n    return coordSysCreator.getDimensionsInfo ? coordSysCreator.getDimensionsInfo() : coordSysCreator.dimensions.slice();\n  }\n}\n/**\n * Layout is a special stage of visual encoding\n * Most visual encoding like color are common for different chart\n * But each chart has it's own layout algorithm\n *\n * @param {number} [priority=1000]\n * @param {Function} layoutFunc\n */\n\n\nfunction registerLayout(priority, layoutFunc) {\n  if (typeof priority === 'function') {\n    layoutFunc = priority;\n    priority = PRIORITY_VISUAL_LAYOUT;\n  }\n\n  visualFuncs.push({\n    prio: priority,\n    func: layoutFunc,\n    isLayout: true\n  });\n}\n/**\n * @param {number} [priority=3000]\n * @param {Function} visualFunc\n */\n\n\nfunction registerVisual(priority, visualFunc) {\n  if (typeof priority === 'function') {\n    visualFunc = priority;\n    priority = PRIORITY_VISUAL_CHART;\n  }\n\n  visualFuncs.push({\n    prio: priority,\n    func: visualFunc\n  });\n}\n/**\n * @param {string} name\n */\n\n\nfunction registerLoading(name, loadingFx) {\n  loadingEffects[name] = loadingFx;\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentModel(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentModel;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentView(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentView;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentView.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendSeriesModel(opts\n/*, superClass*/\n) {\n  // var Clazz = SeriesModel;\n  // if (superClass) {\n  //     superClass = 'series.' + superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return SeriesModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendChartView(opts\n/*, superClass*/\n) {\n  // var Clazz = ChartView;\n  // if (superClass) {\n  //     superClass = superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ChartView.getClass(classType.main, true);\n  // }\n  return ChartView.extend(opts);\n}\n/**\n * ZRender need a canvas context to do measureText.\n * But in node environment canvas may be created by node-canvas.\n * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n *\n * Be careful of using it in the browser.\n *\n * @param {Function} creator\n * @example\n *     var Canvas = require('canvas');\n *     var echarts = require('echarts');\n *     echarts.setCanvasCreator(function () {\n *         // Small size is enough.\n *         return new Canvas(32, 32);\n *     });\n */\n\n\nfunction setCanvasCreator(creator) {\n  zrUtil.$override('createCanvas', creator);\n}\n/**\n * @param {string} mapName\n * @param {Object|string} geoJson\n * @param {Object} [specialAreas]\n *\n * @example\n *     $.get('USA.json', function (geoJson) {\n *         echarts.registerMap('USA', geoJson);\n *         // Or\n *         echarts.registerMap('USA', {\n *             geoJson: geoJson,\n *             specialAreas: {}\n *         })\n *     });\n */\n\n\nfunction registerMap(mapName, geoJson, specialAreas) {\n  if (geoJson.geoJson && !geoJson.features) {\n    specialAreas = geoJson.specialAreas;\n    geoJson = geoJson.geoJson;\n  }\n\n  if (typeof geoJson === 'string') {\n    geoJson = typeof JSON !== 'undefined' && JSON.parse ? JSON.parse(geoJson) : new Function('return (' + geoJson + ');')();\n  }\n\n  mapDataStores[mapName] = {\n    geoJson: geoJson,\n    specialAreas: specialAreas\n  };\n}\n/**\n * @param {string} mapName\n * @return {Object}\n */\n\n\nfunction getMap(mapName) {\n  return mapDataStores[mapName];\n}\n\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesColor);\nregisterPreprocessor(backwardCompat);\nregisterLoading('default', loadingDefault); // Default actions\n\nregisterAction({\n  type: 'highlight',\n  event: 'highlight',\n  update: 'highlight'\n}, zrUtil.noop);\nregisterAction({\n  type: 'downplay',\n  event: 'downplay',\n  update: 'downplay'\n}, zrUtil.noop); // For backward compatibility, where the namespace `dataTool` will\n// be mounted on `echarts` is the extension `dataTool` is imported.\n\nvar dataTool = {};\nexports.version = version;\nexports.dependencies = dependencies;\nexports.PRIORITY = PRIORITY;\nexports.init = init;\nexports.connect = connect;\nexports.disConnect = disConnect;\nexports.disconnect = disconnect;\nexports.dispose = dispose;\nexports.getInstanceByDom = getInstanceByDom;\nexports.getInstanceById = getInstanceById;\nexports.registerTheme = registerTheme;\nexports.registerPreprocessor = registerPreprocessor;\nexports.registerProcessor = registerProcessor;\nexports.registerPostUpdate = registerPostUpdate;\nexports.registerAction = registerAction;\nexports.registerCoordinateSystem = registerCoordinateSystem;\nexports.getCoordinateSystemDimensions = getCoordinateSystemDimensions;\nexports.registerLayout = registerLayout;\nexports.registerVisual = registerVisual;\nexports.registerLoading = registerLoading;\nexports.extendComponentModel = extendComponentModel;\nexports.extendComponentView = extendComponentView;\nexports.extendSeriesModel = extendSeriesModel;\nexports.extendChartView = extendChartView;\nexports.setCanvasCreator = setCanvasCreator;\nexports.registerMap = registerMap;\nexports.getMap = getMap;\nexports.dataTool = dataTool;\nvar ___ec_export = __webpack_require__(1124);\n(function () {\n    for (var key in ___ec_export) {\n        if (___ec_export.hasOwnProperty(key)) {\n            exports[key] = ___ec_export[key];\n        }\n    }\n})();\n\n/***/ }),\n\n/***/ 1029:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1027);\n\nvar pathTool = __webpack_require__(1154);\n\nvar colorTool = __webpack_require__(1051);\n\nvar matrix = __webpack_require__(1043);\n\nvar vector = __webpack_require__(1033);\n\nvar Path = __webpack_require__(1037);\n\nvar Transformable = __webpack_require__(1085);\n\nvar Image = __webpack_require__(1074);\n\nexports.Image = Image;\n\nvar Group = __webpack_require__(1058);\n\nexports.Group = Group;\n\nvar Text = __webpack_require__(1087);\n\nexports.Text = Text;\n\nvar Circle = __webpack_require__(1159);\n\nexports.Circle = Circle;\n\nvar Sector = __webpack_require__(1160);\n\nexports.Sector = Sector;\n\nvar Ring = __webpack_require__(1161);\n\nexports.Ring = Ring;\n\nvar Polygon = __webpack_require__(1162);\n\nexports.Polygon = Polygon;\n\nvar Polyline = __webpack_require__(1165);\n\nexports.Polyline = Polyline;\n\nvar Rect = __webpack_require__(1166);\n\nexports.Rect = Rect;\n\nvar Line = __webpack_require__(1167);\n\nexports.Line = Line;\n\nvar BezierCurve = __webpack_require__(1168);\n\nexports.BezierCurve = BezierCurve;\n\nvar Arc = __webpack_require__(1169);\n\nexports.Arc = Arc;\n\nvar CompoundPath = __webpack_require__(1170);\n\nexports.CompoundPath = CompoundPath;\n\nvar LinearGradient = __webpack_require__(1123);\n\nexports.LinearGradient = LinearGradient;\n\nvar RadialGradient = __webpack_require__(1171);\n\nexports.RadialGradient = RadialGradient;\n\nvar BoundingRect = __webpack_require__(1036);\n\nexports.BoundingRect = BoundingRect;\nvar round = Math.round;\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar EMPTY_OBJ = {};\n/**\n * Extend shape with parameters\n */\n\nfunction extendShape(opts) {\n  return Path.extend(opts);\n}\n/**\n * Extend path\n */\n\n\nfunction extendPath(pathData, opts) {\n  return pathTool.extendFromString(pathData, opts);\n}\n/**\n * Create a path element from path data string\n * @param {string} pathData\n * @param {Object} opts\n * @param {module:zrender/core/BoundingRect} rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makePath(pathData, opts, rect, layout) {\n  var path = pathTool.createFromString(pathData, opts);\n  var boundingRect = path.getBoundingRect();\n\n  if (rect) {\n    if (layout === 'center') {\n      rect = centerGraphic(rect, boundingRect);\n    }\n\n    resizePath(path, rect);\n  }\n\n  return path;\n}\n/**\n * Create a image element from image url\n * @param {string} imageUrl image url\n * @param {Object} opts options\n * @param {module:zrender/core/BoundingRect} rect constrain rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makeImage(imageUrl, rect, layout) {\n  var path = new Image({\n    style: {\n      image: imageUrl,\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    onload: function (img) {\n      if (layout === 'center') {\n        var boundingRect = {\n          width: img.width,\n          height: img.height\n        };\n        path.setStyle(centerGraphic(rect, boundingRect));\n      }\n    }\n  });\n  return path;\n}\n/**\n * Get position of centered element in bounding box.\n *\n * @param  {Object} rect         element local bounding box\n * @param  {Object} boundingRect constraint bounding box\n * @return {Object} element position containing x, y, width, and height\n */\n\n\nfunction centerGraphic(rect, boundingRect) {\n  // Set rect to center, keep width / height ratio.\n  var aspect = boundingRect.width / boundingRect.height;\n  var width = rect.height * aspect;\n  var height;\n\n  if (width <= rect.width) {\n    height = rect.height;\n  } else {\n    width = rect.width;\n    height = width / aspect;\n  }\n\n  var cx = rect.x + rect.width / 2;\n  var cy = rect.y + rect.height / 2;\n  return {\n    x: cx - width / 2,\n    y: cy - height / 2,\n    width: width,\n    height: height\n  };\n}\n\nvar mergePath = pathTool.mergePath;\n/**\n * Resize a path to fit the rect\n * @param {module:zrender/graphic/Path} path\n * @param {Object} rect\n */\n\nfunction resizePath(path, rect) {\n  if (!path.applyTransform) {\n    return;\n  }\n\n  var pathRect = path.getBoundingRect();\n  var m = pathRect.calculateTransform(rect);\n  path.applyTransform(m);\n}\n/**\n * Sub pixel optimize line for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x1]\n * @param {number} [param.shape.y1]\n * @param {number} [param.shape.x2]\n * @param {number} [param.shape.y2]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeLine(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n\n  if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n    shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n  }\n\n  if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n    shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n  }\n\n  return param;\n}\n/**\n * Sub pixel optimize rect for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x]\n * @param {number} [param.shape.y]\n * @param {number} [param.shape.width]\n * @param {number} [param.shape.height]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeRect(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n  var originX = shape.x;\n  var originY = shape.y;\n  var originWidth = shape.width;\n  var originHeight = shape.height;\n  shape.x = subPixelOptimize(shape.x, lineWidth, true);\n  shape.y = subPixelOptimize(shape.y, lineWidth, true);\n  shape.width = Math.max(subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x, originWidth === 0 ? 0 : 1);\n  shape.height = Math.max(subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y, originHeight === 0 ? 0 : 1);\n  return param;\n}\n/**\n * Sub pixel optimize for canvas\n *\n * @param {number} position Coordinate, such as x, y\n * @param {number} lineWidth Should be nonnegative integer.\n * @param {boolean=} positiveOrNegative Default false (negative).\n * @return {number} Optimized position.\n */\n\n\nfunction subPixelOptimize(position, lineWidth, positiveOrNegative) {\n  // Assure that (position + lineWidth / 2) is near integer edge,\n  // otherwise line will be fuzzy in canvas.\n  var doubledPosition = round(position * 2);\n  return (doubledPosition + round(lineWidth)) % 2 === 0 ? doubledPosition / 2 : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n}\n\nfunction hasFillOrStroke(fillOrStroke) {\n  return fillOrStroke != null && fillOrStroke != 'none';\n}\n\nfunction liftColor(color) {\n  return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n}\n/**\n * @private\n */\n\n\nfunction cacheElementStl(el) {\n  if (el.__hoverStlDirty) {\n    var stroke = el.style.stroke;\n    var fill = el.style.fill; // Create hoverStyle on mouseover\n\n    var hoverStyle = el.__hoverStl;\n    hoverStyle.fill = hoverStyle.fill || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n    hoverStyle.stroke = hoverStyle.stroke || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n    var normalStyle = {};\n\n    for (var name in hoverStyle) {\n      // See comment in `doSingleEnterHover`.\n      if (hoverStyle[name] != null) {\n        normalStyle[name] = el.style[name];\n      }\n    }\n\n    el.__normalStl = normalStyle;\n    el.__hoverStlDirty = false;\n  }\n}\n/**\n * @private\n */\n\n\nfunction doSingleEnterHover(el) {\n  if (el.__isHover) {\n    return;\n  }\n\n  cacheElementStl(el);\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.addHover(el, el.__hoverStl);\n  } else {\n    var style = el.style;\n    var insideRollbackOpt = style.insideRollbackOpt; // Consider case: only `position: 'top'` is set on emphasis, then text\n    // color should be returned to `autoColor`, rather than remain '#fff'.\n    // So we should rollback then apply again after style merging.\n\n    insideRollbackOpt && rollbackInsideStyle(style); // styles can be:\n    // {\n    //     label: {\n    //         normal: {\n    //             show: false,\n    //             position: 'outside',\n    //             fontSize: 18\n    //         },\n    //         emphasis: {\n    //             show: true\n    //         }\n    //     }\n    // },\n    // where properties of `emphasis` may not appear in `normal`. We previously use\n    // module:echarts/util/model#defaultEmphasis to merge `normal` to `emphasis`.\n    // But consider rich text and setOption in merge mode, it is impossible to cover\n    // all properties in merge. So we use merge mode when setting style here, where\n    // only properties that is not `null/undefined` can be set. The disadventage:\n    // null/undefined can not be used to remove style any more in `emphasis`.\n\n    style.extendFrom(el.__hoverStl); // Do not save `insideRollback`.\n\n    if (insideRollbackOpt) {\n      applyInsideStyle(style, style.insideOriginalTextPosition, insideRollbackOpt); // textFill may be rollbacked to null.\n\n      if (style.textFill == null) {\n        style.textFill = insideRollbackOpt.autoColor;\n      }\n    }\n\n    el.dirty(false);\n    el.z2 += 1;\n  }\n\n  el.__isHover = true;\n}\n/**\n * @inner\n */\n\n\nfunction doSingleLeaveHover(el) {\n  if (!el.__isHover) {\n    return;\n  }\n\n  var normalStl = el.__normalStl;\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.removeHover(el);\n  } else {\n    // Consider null/undefined value, should use\n    // `setStyle` but not `extendFrom(stl, true)`.\n    normalStl && el.setStyle(normalStl);\n    el.z2 -= 1;\n  }\n\n  el.__isHover = false;\n}\n/**\n * @inner\n */\n\n\nfunction doEnterHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleEnterHover(child);\n    }\n  }) : doSingleEnterHover(el);\n}\n\nfunction doLeaveHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleLeaveHover(child);\n    }\n  }) : doSingleLeaveHover(el);\n}\n/**\n * @inner\n */\n\n\nfunction setElementHoverStl(el, hoverStl) {\n  // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n  // Often used when item group has a label element and it's hoverStyle is different\n  el.__hoverStl = el.hoverStyle || hoverStl || {};\n  el.__hoverStlDirty = true;\n\n  if (el.__isHover) {\n    cacheElementStl(el);\n  }\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOver(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOut(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doLeaveHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction enterEmphasis() {\n  this.__isEmphasis = true;\n  doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction leaveEmphasis() {\n  this.__isEmphasis = false;\n  doLeaveHover(this);\n}\n/**\n * Set hover style of element.\n * This method can be called repeatly without side-effects.\n * @param {module:zrender/Element} el\n * @param {Object} [hoverStyle]\n * @param {Object} [opt]\n * @param {boolean} [opt.hoverSilentOnTouch=false]\n *        In touch device, mouseover event will be trigger on touchstart event\n *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n *        conviniently use hoverStyle when tap on touch screen without additional\n *        code for compatibility.\n *        But if the chart/component has select feature, which usually also use\n *        hoverStyle, there might be conflict between 'select-highlight' and\n *        'hover-highlight' especially when roam is enabled (see geo for example).\n *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n *        on touch device.\n */\n\n\nfunction setHoverStyle(el, hoverStyle, opt) {\n  el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      setElementHoverStl(child, hoverStyle);\n    }\n  }) : setElementHoverStl(el, hoverStyle); // Duplicated function will be auto-ignored, see Eventful.js.\n\n  el.on('mouseover', onElementMouseOver).on('mouseout', onElementMouseOut); // Emphasis, normal can be triggered manually\n\n  el.on('emphasis', enterEmphasis).on('normal', leaveEmphasis);\n}\n/**\n * @param {Object|module:zrender/graphic/Style} normalStyle\n * @param {Object} emphasisStyle\n * @param {module:echarts/model/Model} normalModel\n * @param {module:echarts/model/Model} emphasisModel\n * @param {Object} opt Check `opt` of `setTextStyleCommon` to find other props.\n * @param {Object} [opt.defaultText]\n * @param {module:echarts/model/Model} [opt.labelFetcher] Fetch text by\n *      `opt.labelFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDataIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDimIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {Object} [normalSpecified]\n * @param {Object} [emphasisSpecified]\n */\n\n\nfunction setLabelStyle(normalStyle, emphasisStyle, normalModel, emphasisModel, opt, normalSpecified, emphasisSpecified) {\n  opt = opt || EMPTY_OBJ;\n  var labelFetcher = opt.labelFetcher;\n  var labelDataIndex = opt.labelDataIndex;\n  var labelDimIndex = opt.labelDimIndex; // This scenario, `label.normal.show = true; label.emphasis.show = false`,\n  // is not supported util someone requests.\n\n  var showNormal = normalModel.getShallow('show');\n  var showEmphasis = emphasisModel.getShallow('show'); // Consider performance, only fetch label when necessary.\n  // If `normal.show` is `false` and `emphasis.show` is `true` and `emphasis.formatter` is not set,\n  // label should be displayed, where text is fetched by `normal.formatter` or `opt.defaultText`.\n\n  var baseText = showNormal || showEmphasis ? zrUtil.retrieve2(labelFetcher ? labelFetcher.getFormattedLabel(labelDataIndex, 'normal', null, labelDimIndex) : null, opt.defaultText) : null;\n  var normalStyleText = showNormal ? baseText : null;\n  var emphasisStyleText = showEmphasis ? zrUtil.retrieve2(labelFetcher ? labelFetcher.getFormattedLabel(labelDataIndex, 'emphasis', null, labelDimIndex) : null, baseText) : null; // Optimize: If style.text is null, text will not be drawn.\n\n  if (normalStyleText != null || emphasisStyleText != null) {\n    // Always set `textStyle` even if `normalStyle.text` is null, because default\n    // values have to be set on `normalStyle`.\n    // If we set default values on `emphasisStyle`, consider case:\n    // Firstly, `setOption(... label: {normal: {text: null}, emphasis: {show: true}} ...);`\n    // Secondly, `setOption(... label: {noraml: {show: true, text: 'abc', color: 'red'} ...);`\n    // Then the 'red' will not work on emphasis.\n    setTextStyle(normalStyle, normalModel, normalSpecified, opt);\n    setTextStyle(emphasisStyle, emphasisModel, emphasisSpecified, opt, true);\n  }\n\n  normalStyle.text = normalStyleText;\n  emphasisStyle.text = emphasisStyleText;\n}\n/**\n * Set basic textStyle properties.\n * @param {Object|module:zrender/graphic/Style} textStyle\n * @param {module:echarts/model/Model} model\n * @param {Object} [specifiedTextStyle] Can be overrided by settings in model.\n * @param {Object} [opt] See `opt` of `setTextStyleCommon`.\n * @param {boolean} [isEmphasis]\n */\n\n\nfunction setTextStyle(textStyle, textStyleModel, specifiedTextStyle, opt, isEmphasis) {\n  setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis);\n  specifiedTextStyle && zrUtil.extend(textStyle, specifiedTextStyle);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n  return textStyle;\n}\n/**\n * Set text option in the style.\n * @deprecated\n * @param {Object} textStyle\n * @param {module:echarts/model/Model} labelModel\n * @param {string|boolean} defaultColor Default text color.\n *        If set as false, it will be processed as a emphasis style.\n */\n\n\nfunction setText(textStyle, labelModel, defaultColor) {\n  var opt = {\n    isRectText: true\n  };\n  var isEmphasis;\n\n  if (defaultColor === false) {\n    isEmphasis = true;\n  } else {\n    // Support setting color as 'auto' to get visual color.\n    opt.autoColor = defaultColor;\n  }\n\n  setTextStyleCommon(textStyle, labelModel, opt, isEmphasis);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n}\n/**\n * {\n *      disableBox: boolean, Whether diable drawing box of block (outer most).\n *      isRectText: boolean,\n *      autoColor: string, specify a color when color is 'auto',\n *              for textFill, textStroke, textBackgroundColor, and textBorderColor.\n *              If autoColor specified, it is used as default textFill.\n *      useInsideStyle:\n *              `true`: Use inside style (textFill, textStroke, textStrokeWidth)\n *                  if `textFill` is not specified.\n *              `false`: Do not use inside style.\n *              `null/undefined`: use inside style if `isRectText` is true and\n *                  `textFill` is not specified and textPosition contains `'inside'`.\n *      forceRich: boolean\n * }\n */\n\n\nfunction setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis) {\n  // Consider there will be abnormal when merge hover style to normal style if given default value.\n  opt = opt || EMPTY_OBJ;\n\n  if (opt.isRectText) {\n    var textPosition = textStyleModel.getShallow('position') || (isEmphasis ? null : 'inside'); // 'outside' is not a valid zr textPostion value, but used\n    // in bar series, and magric type should be considered.\n\n    textPosition === 'outside' && (textPosition = 'top');\n    textStyle.textPosition = textPosition;\n    textStyle.textOffset = textStyleModel.getShallow('offset');\n    var labelRotate = textStyleModel.getShallow('rotate');\n    labelRotate != null && (labelRotate *= Math.PI / 180);\n    textStyle.textRotation = labelRotate;\n    textStyle.textDistance = zrUtil.retrieve2(textStyleModel.getShallow('distance'), isEmphasis ? null : 5);\n  }\n\n  var ecModel = textStyleModel.ecModel;\n  var globalTextStyle = ecModel && ecModel.option.textStyle; // Consider case:\n  // {\n  //     data: [{\n  //         value: 12,\n  //         label: {\n  //             normal: {\n  //                 rich: {\n  //                     // no 'a' here but using parent 'a'.\n  //                 }\n  //             }\n  //         }\n  //     }],\n  //     rich: {\n  //         a: { ... }\n  //     }\n  // }\n\n  var richItemNames = getRichItemNames(textStyleModel);\n  var richResult;\n\n  if (richItemNames) {\n    richResult = {};\n\n    for (var name in richItemNames) {\n      if (richItemNames.hasOwnProperty(name)) {\n        // Cascade is supported in rich.\n        var richTextStyle = textStyleModel.getModel(['rich', name]); // In rich, never `disableBox`.\n\n        setTokenTextStyle(richResult[name] = {}, richTextStyle, globalTextStyle, opt, isEmphasis);\n      }\n    }\n  }\n\n  textStyle.rich = richResult;\n  setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, true);\n\n  if (opt.forceRich && !opt.textStyle) {\n    opt.textStyle = {};\n  }\n\n  return textStyle;\n} // Consider case:\n// {\n//     data: [{\n//         value: 12,\n//         label: {\n//             normal: {\n//                 rich: {\n//                     // no 'a' here but using parent 'a'.\n//                 }\n//             }\n//         }\n//     }],\n//     rich: {\n//         a: { ... }\n//     }\n// }\n\n\nfunction getRichItemNames(textStyleModel) {\n  // Use object to remove duplicated names.\n  var richItemNameMap;\n\n  while (textStyleModel && textStyleModel !== textStyleModel.ecModel) {\n    var rich = (textStyleModel.option || EMPTY_OBJ).rich;\n\n    if (rich) {\n      richItemNameMap = richItemNameMap || {};\n\n      for (var name in rich) {\n        if (rich.hasOwnProperty(name)) {\n          richItemNameMap[name] = 1;\n        }\n      }\n    }\n\n    textStyleModel = textStyleModel.parentModel;\n  }\n\n  return richItemNameMap;\n}\n\nfunction setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, isBlock) {\n  // In merge mode, default value should not be given.\n  globalTextStyle = !isEmphasis && globalTextStyle || EMPTY_OBJ;\n  textStyle.textFill = getAutoColor(textStyleModel.getShallow('color'), opt) || globalTextStyle.color;\n  textStyle.textStroke = getAutoColor(textStyleModel.getShallow('textBorderColor'), opt) || globalTextStyle.textBorderColor;\n  textStyle.textStrokeWidth = zrUtil.retrieve2(textStyleModel.getShallow('textBorderWidth'), globalTextStyle.textBorderWidth);\n\n  if (!isEmphasis) {\n    if (isBlock) {\n      // Always set `insideRollback`, for clearing previous.\n      var originalTextPosition = textStyle.textPosition;\n      textStyle.insideRollback = applyInsideStyle(textStyle, originalTextPosition, opt); // Save original textPosition, because style.textPosition will be repalced by\n      // real location (like [10, 30]) in zrender.\n\n      textStyle.insideOriginalTextPosition = originalTextPosition;\n      textStyle.insideRollbackOpt = opt;\n    } // Set default finally.\n\n\n    if (textStyle.textFill == null) {\n      textStyle.textFill = opt.autoColor;\n    }\n  } // Do not use `getFont` here, because merge should be supported, where\n  // part of these properties may be changed in emphasis style, and the\n  // others should remain their original value got from normal style.\n\n\n  textStyle.fontStyle = textStyleModel.getShallow('fontStyle') || globalTextStyle.fontStyle;\n  textStyle.fontWeight = textStyleModel.getShallow('fontWeight') || globalTextStyle.fontWeight;\n  textStyle.fontSize = textStyleModel.getShallow('fontSize') || globalTextStyle.fontSize;\n  textStyle.fontFamily = textStyleModel.getShallow('fontFamily') || globalTextStyle.fontFamily;\n  textStyle.textAlign = textStyleModel.getShallow('align');\n  textStyle.textVerticalAlign = textStyleModel.getShallow('verticalAlign') || textStyleModel.getShallow('baseline');\n  textStyle.textLineHeight = textStyleModel.getShallow('lineHeight');\n  textStyle.textWidth = textStyleModel.getShallow('width');\n  textStyle.textHeight = textStyleModel.getShallow('height');\n  textStyle.textTag = textStyleModel.getShallow('tag');\n\n  if (!isBlock || !opt.disableBox) {\n    textStyle.textBackgroundColor = getAutoColor(textStyleModel.getShallow('backgroundColor'), opt);\n    textStyle.textPadding = textStyleModel.getShallow('padding');\n    textStyle.textBorderColor = getAutoColor(textStyleModel.getShallow('borderColor'), opt);\n    textStyle.textBorderWidth = textStyleModel.getShallow('borderWidth');\n    textStyle.textBorderRadius = textStyleModel.getShallow('borderRadius');\n    textStyle.textBoxShadowColor = textStyleModel.getShallow('shadowColor');\n    textStyle.textBoxShadowBlur = textStyleModel.getShallow('shadowBlur');\n    textStyle.textBoxShadowOffsetX = textStyleModel.getShallow('shadowOffsetX');\n    textStyle.textBoxShadowOffsetY = textStyleModel.getShallow('shadowOffsetY');\n  }\n\n  textStyle.textShadowColor = textStyleModel.getShallow('textShadowColor') || globalTextStyle.textShadowColor;\n  textStyle.textShadowBlur = textStyleModel.getShallow('textShadowBlur') || globalTextStyle.textShadowBlur;\n  textStyle.textShadowOffsetX = textStyleModel.getShallow('textShadowOffsetX') || globalTextStyle.textShadowOffsetX;\n  textStyle.textShadowOffsetY = textStyleModel.getShallow('textShadowOffsetY') || globalTextStyle.textShadowOffsetY;\n}\n\nfunction getAutoColor(color, opt) {\n  return color !== 'auto' ? color : opt && opt.autoColor ? opt.autoColor : null;\n}\n\nfunction applyInsideStyle(textStyle, textPosition, opt) {\n  var useInsideStyle = opt.useInsideStyle;\n  var insideRollback;\n\n  if (textStyle.textFill == null && useInsideStyle !== false && (useInsideStyle === true || opt.isRectText && textPosition // textPosition can be [10, 30]\n  && typeof textPosition === 'string' && textPosition.indexOf('inside') >= 0)) {\n    insideRollback = {\n      textFill: null,\n      textStroke: textStyle.textStroke,\n      textStrokeWidth: textStyle.textStrokeWidth\n    };\n    textStyle.textFill = '#fff'; // Consider text with #fff overflow its container.\n\n    if (textStyle.textStroke == null) {\n      textStyle.textStroke = opt.autoColor;\n      textStyle.textStrokeWidth == null && (textStyle.textStrokeWidth = 2);\n    }\n  }\n\n  return insideRollback;\n}\n\nfunction rollbackInsideStyle(style) {\n  var insideRollback = style.insideRollback;\n\n  if (insideRollback) {\n    style.textFill = insideRollback.textFill;\n    style.textStroke = insideRollback.textStroke;\n    style.textStrokeWidth = insideRollback.textStrokeWidth;\n  }\n}\n\nfunction getFont(opt, ecModel) {\n  // ecModel or default text style model.\n  var gTextStyleModel = ecModel || ecModel.getModel('textStyle');\n  return [// FIXME in node-canvas fontWeight is before fontStyle\n  opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '', opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '', (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px', opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'].join(' ');\n}\n\nfunction animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n  if (typeof dataIndex === 'function') {\n    cb = dataIndex;\n    dataIndex = null;\n  } // Do not check 'animation' property directly here. Consider this case:\n  // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n  // but its parent model (`seriesModel`) does.\n\n\n  var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n  if (animationEnabled) {\n    var postfix = isUpdate ? 'Update' : '';\n    var duration = animatableModel.getShallow('animationDuration' + postfix);\n    var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n    var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n\n    if (typeof animationDelay === 'function') {\n      animationDelay = animationDelay(dataIndex, animatableModel.getAnimationDelayParams ? animatableModel.getAnimationDelayParams(el, dataIndex) : null);\n    }\n\n    if (typeof duration === 'function') {\n      duration = duration(dataIndex);\n    }\n\n    duration > 0 ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb, !!cb) : (el.stopAnimation(), el.attr(props), cb && cb());\n  } else {\n    el.stopAnimation();\n    el.attr(props);\n    cb && cb();\n  }\n}\n/**\n * Update graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} [cb]\n * @example\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n *     // Or\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, function () { console.log('Animation done!'); });\n */\n\n\nfunction updateProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Init graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} cb\n */\n\n\nfunction initProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Get transform matrix of target (param target),\n * in coordinate of its ancestor (param ancestor)\n *\n * @param {module:zrender/mixin/Transformable} target\n * @param {module:zrender/mixin/Transformable} [ancestor]\n */\n\n\nfunction getTransform(target, ancestor) {\n  var mat = matrix.identity([]);\n\n  while (target && target !== ancestor) {\n    matrix.mul(mat, target.getLocalTransform(), mat);\n    target = target.parent;\n  }\n\n  return mat;\n}\n/**\n * Apply transform to an vertex.\n * @param {Array.<number>} target [x, y]\n * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\n *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n * @param {boolean=} invert Whether use invert matrix.\n * @return {Array.<number>} [x, y]\n */\n\n\nfunction applyTransform(target, transform, invert) {\n  if (transform && !zrUtil.isArrayLike(transform)) {\n    transform = Transformable.getLocalTransform(transform);\n  }\n\n  if (invert) {\n    transform = matrix.invert([], transform);\n  }\n\n  return vector.applyTransform([], target, transform);\n}\n/**\n * @param {string} direction 'left' 'right' 'top' 'bottom'\n * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n * @param {boolean=} invert Whether use invert matrix.\n * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n */\n\n\nfunction transformDirection(direction, transform, invert) {\n  // Pick a base, ensure that transform result will not be (0, 0).\n  var hBase = transform[4] === 0 || transform[5] === 0 || transform[0] === 0 ? 1 : Math.abs(2 * transform[4] / transform[0]);\n  var vBase = transform[4] === 0 || transform[5] === 0 || transform[2] === 0 ? 1 : Math.abs(2 * transform[4] / transform[2]);\n  var vertex = [direction === 'left' ? -hBase : direction === 'right' ? hBase : 0, direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0];\n  vertex = applyTransform(vertex, transform, invert);\n  return Math.abs(vertex[0]) > Math.abs(vertex[1]) ? vertex[0] > 0 ? 'right' : 'left' : vertex[1] > 0 ? 'bottom' : 'top';\n}\n/**\n * Apply group transition animation from g1 to g2.\n * If no animatableModel, no animation.\n */\n\n\nfunction groupTransition(g1, g2, animatableModel, cb) {\n  if (!g1 || !g2) {\n    return;\n  }\n\n  function getElMap(g) {\n    var elMap = {};\n    g.traverse(function (el) {\n      if (!el.isGroup && el.anid) {\n        elMap[el.anid] = el;\n      }\n    });\n    return elMap;\n  }\n\n  function getAnimatableProps(el) {\n    var obj = {\n      position: vector.clone(el.position),\n      rotation: el.rotation\n    };\n\n    if (el.shape) {\n      obj.shape = zrUtil.extend({}, el.shape);\n    }\n\n    return obj;\n  }\n\n  var elMap1 = getElMap(g1);\n  g2.traverse(function (el) {\n    if (!el.isGroup && el.anid) {\n      var oldEl = elMap1[el.anid];\n\n      if (oldEl) {\n        var newProp = getAnimatableProps(el);\n        el.attr(getAnimatableProps(oldEl));\n        updateProps(el, newProp, animatableModel, el.dataIndex);\n      } // else {\n      //     if (el.previousProps) {\n      //         graphic.updateProps\n      //     }\n      // }\n\n    }\n  });\n}\n/**\n * @param {Array.<Array.<number>>} points Like: [[23, 44], [53, 66], ...]\n * @param {Object} rect {x, y, width, height}\n * @return {Array.<Array.<number>>} A new clipped points.\n */\n\n\nfunction clipPointsByRect(points, rect) {\n  return zrUtil.map(points, function (point) {\n    var x = point[0];\n    x = mathMax(x, rect.x);\n    x = mathMin(x, rect.x + rect.width);\n    var y = point[1];\n    y = mathMax(y, rect.y);\n    y = mathMin(y, rect.y + rect.height);\n    return [x, y];\n  });\n}\n/**\n * @param {Object} targetRect {x, y, width, height}\n * @param {Object} rect {x, y, width, height}\n * @return {Object} A new clipped rect. If rect size are negative, return undefined.\n */\n\n\nfunction clipRectByRect(targetRect, rect) {\n  var x = mathMax(targetRect.x, rect.x);\n  var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\n  var y = mathMax(targetRect.y, rect.y);\n  var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height);\n\n  if (x2 >= x && y2 >= y) {\n    return {\n      x: x,\n      y: y,\n      width: x2 - x,\n      height: y2 - y\n    };\n  }\n}\n/**\n * @param {string} iconStr Support 'image://' or 'path://' or direct svg path.\n * @param {Object} [opt] Properties of `module:zrender/Element`, except `style`.\n * @param {Object} [rect] {x, y, width, height}\n * @return {module:zrender/Element} Icon path or image element.\n */\n\n\nfunction createIcon(iconStr, opt, rect) {\n  opt = zrUtil.extend({\n    rectHover: true\n  }, opt);\n  var style = opt.style = {\n    strokeNoScale: true\n  };\n  rect = rect || {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  };\n\n  if (iconStr) {\n    return iconStr.indexOf('image://') === 0 ? (style.image = iconStr.slice(8), zrUtil.defaults(style, rect), new Image(opt)) : makePath(iconStr.replace('path://', ''), opt, rect, 'center');\n  }\n}\n\nexports.extendShape = extendShape;\nexports.extendPath = extendPath;\nexports.makePath = makePath;\nexports.makeImage = makeImage;\nexports.mergePath = mergePath;\nexports.resizePath = resizePath;\nexports.subPixelOptimizeLine = subPixelOptimizeLine;\nexports.subPixelOptimizeRect = subPixelOptimizeRect;\nexports.subPixelOptimize = subPixelOptimize;\nexports.setHoverStyle = setHoverStyle;\nexports.setLabelStyle = setLabelStyle;\nexports.setTextStyle = setTextStyle;\nexports.setText = setText;\nexports.getFont = getFont;\nexports.updateProps = updateProps;\nexports.initProps = initProps;\nexports.getTransform = getTransform;\nexports.applyTransform = applyTransform;\nexports.transformDirection = transformDirection;\nexports.groupTransition = groupTransition;\nexports.clipPointsByRect = clipPointsByRect;\nexports.clipRectByRect = clipRectByRect;\nexports.createIcon = createIcon;\n\n/***/ }),\n\n/***/ 1030:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1027);\n\nvar RADIAN_EPSILON = 1e-4;\n\nfunction _trim(str) {\n  return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n}\n/**\n * Linear mapping a value from domain to range\n * @memberOf module:echarts/util/number\n * @param  {(number|Array.<number>)} val\n * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n * @param  {boolean} clamp\n * @return {(number|Array.<number>}\n */\n\n\nfunction linearMap(val, domain, range, clamp) {\n  var subDomain = domain[1] - domain[0];\n  var subRange = range[1] - range[0];\n\n  if (subDomain === 0) {\n    return subRange === 0 ? range[0] : (range[0] + range[1]) / 2;\n  } // Avoid accuracy problem in edge, such as\n  // 146.39 - 62.83 === 83.55999999999999.\n  // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n  // It is a little verbose for efficiency considering this method\n  // is a hotspot.\n\n\n  if (clamp) {\n    if (subDomain > 0) {\n      if (val <= domain[0]) {\n        return range[0];\n      } else if (val >= domain[1]) {\n        return range[1];\n      }\n    } else {\n      if (val >= domain[0]) {\n        return range[0];\n      } else if (val <= domain[1]) {\n        return range[1];\n      }\n    }\n  } else {\n    if (val === domain[0]) {\n      return range[0];\n    }\n\n    if (val === domain[1]) {\n      return range[1];\n    }\n  }\n\n  return (val - domain[0]) / subDomain * subRange + range[0];\n}\n/**\n * Convert a percent string to absolute number.\n * Returns NaN if percent is not a valid string or number\n * @memberOf module:echarts/util/number\n * @param {string|number} percent\n * @param {number} all\n * @return {number}\n */\n\n\nfunction parsePercent(percent, all) {\n  switch (percent) {\n    case 'center':\n    case 'middle':\n      percent = '50%';\n      break;\n\n    case 'left':\n    case 'top':\n      percent = '0%';\n      break;\n\n    case 'right':\n    case 'bottom':\n      percent = '100%';\n      break;\n  }\n\n  if (typeof percent === 'string') {\n    if (_trim(percent).match(/%$/)) {\n      return parseFloat(percent) / 100 * all;\n    }\n\n    return parseFloat(percent);\n  }\n\n  return percent == null ? NaN : +percent;\n}\n/**\n * (1) Fix rounding error of float numbers.\n * (2) Support return string to avoid scientific notation like '3.5e-7'.\n *\n * @param {number} x\n * @param {number} [precision]\n * @param {boolean} [returnStr]\n * @return {number|string}\n */\n\n\nfunction round(x, precision, returnStr) {\n  if (precision == null) {\n    precision = 10;\n  } // Avoid range error\n\n\n  precision = Math.min(Math.max(0, precision), 20);\n  x = (+x).toFixed(precision);\n  return returnStr ? x : +x;\n}\n\nfunction asc(arr) {\n  arr.sort(function (a, b) {\n    return a - b;\n  });\n  return arr;\n}\n/**\n * Get precision\n * @param {number} val\n */\n\n\nfunction getPrecision(val) {\n  val = +val;\n\n  if (isNaN(val)) {\n    return 0;\n  } // It is much faster than methods converting number to string as follows\n  //      var tmp = val.toString();\n  //      return tmp.length - 1 - tmp.indexOf('.');\n  // especially when precision is low\n\n\n  var e = 1;\n  var count = 0;\n\n  while (Math.round(val * e) / e !== val) {\n    e *= 10;\n    count++;\n  }\n\n  return count;\n}\n/**\n * @param {string|number} val\n * @return {number}\n */\n\n\nfunction getPrecisionSafe(val) {\n  var str = val.toString(); // Consider scientific notation: '3.4e-12' '3.4e+12'\n\n  var eIndex = str.indexOf('e');\n\n  if (eIndex > 0) {\n    var precision = +str.slice(eIndex + 1);\n    return precision < 0 ? -precision : 0;\n  } else {\n    var dotIndex = str.indexOf('.');\n    return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n  }\n}\n/**\n * Minimal dicernible data precisioin according to a single pixel.\n *\n * @param {Array.<number>} dataExtent\n * @param {Array.<number>} pixelExtent\n * @return {number} precision\n */\n\n\nfunction getPixelPrecision(dataExtent, pixelExtent) {\n  var log = Math.log;\n  var LN10 = Math.LN10;\n  var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n  var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10); // toFixed() digits argument must be between 0 and 20.\n\n  var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n  return !isFinite(precision) ? 20 : precision;\n}\n/**\n * Get a data of given precision, assuring the sum of percentages\n * in valueList is 1.\n * The largest remainer method is used.\n * https://en.wikipedia.org/wiki/Largest_remainder_method\n *\n * @param {Array.<number>} valueList a list of all data\n * @param {number} idx index of the data to be processed in valueList\n * @param {number} precision integer number showing digits of precision\n * @return {number} percent ranging from 0 to 100\n */\n\n\nfunction getPercentWithPrecision(valueList, idx, precision) {\n  if (!valueList[idx]) {\n    return 0;\n  }\n\n  var sum = zrUtil.reduce(valueList, function (acc, val) {\n    return acc + (isNaN(val) ? 0 : val);\n  }, 0);\n\n  if (sum === 0) {\n    return 0;\n  }\n\n  var digits = Math.pow(10, precision);\n  var votesPerQuota = zrUtil.map(valueList, function (val) {\n    return (isNaN(val) ? 0 : val) / sum * digits * 100;\n  });\n  var targetSeats = digits * 100;\n  var seats = zrUtil.map(votesPerQuota, function (votes) {\n    // Assign automatic seats.\n    return Math.floor(votes);\n  });\n  var currentSum = zrUtil.reduce(seats, function (acc, val) {\n    return acc + val;\n  }, 0);\n  var remainder = zrUtil.map(votesPerQuota, function (votes, idx) {\n    return votes - seats[idx];\n  }); // Has remainding votes.\n\n  while (currentSum < targetSeats) {\n    // Find next largest remainder.\n    var max = Number.NEGATIVE_INFINITY;\n    var maxId = null;\n\n    for (var i = 0, len = remainder.length; i < len; ++i) {\n      if (remainder[i] > max) {\n        max = remainder[i];\n        maxId = i;\n      }\n    } // Add a vote to max remainder.\n\n\n    ++seats[maxId];\n    remainder[maxId] = 0;\n    ++currentSum;\n  }\n\n  return seats[idx] / digits;\n} // Number.MAX_SAFE_INTEGER, ie do not support.\n\n\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * To 0 - 2 * PI, considering negative radian.\n * @param {number} radian\n * @return {number}\n */\n\nfunction remRadian(radian) {\n  var pi2 = Math.PI * 2;\n  return (radian % pi2 + pi2) % pi2;\n}\n/**\n * @param {type} radian\n * @return {boolean}\n */\n\n\nfunction isRadianAroundZero(val) {\n  return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n}\n\nvar TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n/**\n * @param {string|Date|number} value These values can be accepted:\n *   + An instance of Date, represent a time in its own time zone.\n *   + Or string in a subset of ISO 8601, only including:\n *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n *     all of which will be treated as local time if time zone is not specified\n *     (see <https://momentjs.com/>).\n *   + Or other string format, including (all of which will be treated as loacal time):\n *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n *   + a timestamp, which represent a time in UTC.\n * @return {Date} date\n */\n\nfunction parseDate(value) {\n  if (value instanceof Date) {\n    return value;\n  } else if (typeof value === 'string') {\n    // Different browsers parse date in different way, so we parse it manually.\n    // Some other issues:\n    // new Date('1970-01-01') is UTC,\n    // new Date('1970/01/01') and new Date('1970-1-01') is local.\n    // See issue #3623\n    var match = TIME_REG.exec(value);\n\n    if (!match) {\n      // return Invalid Date.\n      return new Date(NaN);\n    } // Use local time when no timezone offset specifed.\n\n\n    if (!match[8]) {\n      // match[n] can only be string or undefined.\n      // But take care of '12' + 1 => '121'.\n      return new Date(+match[1], +(match[2] || 1) - 1, +match[3] || 1, +match[4] || 0, +(match[5] || 0), +match[6] || 0, +match[7] || 0);\n    } // Timezoneoffset of Javascript Date has considered DST (Daylight Saving Time,\n    // https://tc39.github.io/ecma262/#sec-daylight-saving-time-adjustment).\n    // For example, system timezone is set as \"Time Zone: America/Toronto\",\n    // then these code will get different result:\n    // `new Date(1478411999999).getTimezoneOffset();  // get 240`\n    // `new Date(1478412000000).getTimezoneOffset();  // get 300`\n    // So we should not use `new Date`, but use `Date.UTC`.\n    else {\n        var hour = +match[4] || 0;\n\n        if (match[8].toUpperCase() !== 'Z') {\n          hour -= match[8].slice(0, 3);\n        }\n\n        return new Date(Date.UTC(+match[1], +(match[2] || 1) - 1, +match[3] || 1, hour, +(match[5] || 0), +match[6] || 0, +match[7] || 0));\n      }\n  } else if (value == null) {\n    return new Date(NaN);\n  }\n\n  return new Date(Math.round(value));\n}\n/**\n * Quantity of a number. e.g. 0.1, 1, 10, 100\n *\n * @param  {number} val\n * @return {number}\n */\n\n\nfunction quantity(val) {\n  return Math.pow(10, quantityExponent(val));\n}\n\nfunction quantityExponent(val) {\n  return Math.floor(Math.log(val) / Math.LN10);\n}\n/**\n * find a “nice” number approximately equal to x. Round the number if round = true,\n * take ceiling if round = false. The primary observation is that the “nicest”\n * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n *\n * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n *\n * @param  {number} val Non-negative value.\n * @param  {boolean} round\n * @return {number}\n */\n\n\nfunction nice(val, round) {\n  var exponent = quantityExponent(val);\n  var exp10 = Math.pow(10, exponent);\n  var f = val / exp10; // 1 <= f < 10\n\n  var nf;\n\n  if (round) {\n    if (f < 1.5) {\n      nf = 1;\n    } else if (f < 2.5) {\n      nf = 2;\n    } else if (f < 4) {\n      nf = 3;\n    } else if (f < 7) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  } else {\n    if (f < 1) {\n      nf = 1;\n    } else if (f < 2) {\n      nf = 2;\n    } else if (f < 3) {\n      nf = 3;\n    } else if (f < 5) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  }\n\n  val = nf * exp10; // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n  // 20 is the uppper bound of toFixed.\n\n  return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n}\n/**\n * Order intervals asc, and split them when overlap.\n * expect(numberUtil.reformIntervals([\n *     {interval: [18, 62], close: [1, 1]},\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [1, 1]},\n *     {interval: [62, 150], close: [1, 1]},\n *     {interval: [106, 150], close: [1, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ])).toEqual([\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [0, 1]},\n *     {interval: [18, 62], close: [0, 1]},\n *     {interval: [62, 150], close: [0, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ]);\n * @param {Array.<Object>} list, where `close` mean open or close\n *        of the interval, and Infinity can be used.\n * @return {Array.<Object>} The origin list, which has been reformed.\n */\n\n\nfunction reformIntervals(list) {\n  list.sort(function (a, b) {\n    return littleThan(a, b, 0) ? -1 : 1;\n  });\n  var curr = -Infinity;\n  var currClose = 1;\n\n  for (var i = 0; i < list.length;) {\n    var interval = list[i].interval;\n    var close = list[i].close;\n\n    for (var lg = 0; lg < 2; lg++) {\n      if (interval[lg] <= curr) {\n        interval[lg] = curr;\n        close[lg] = !lg ? 1 - currClose : 1;\n      }\n\n      curr = interval[lg];\n      currClose = close[lg];\n    }\n\n    if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n      list.splice(i, 1);\n    } else {\n      i++;\n    }\n  }\n\n  return list;\n\n  function littleThan(a, b, lg) {\n    return a.interval[lg] < b.interval[lg] || a.interval[lg] === b.interval[lg] && (a.close[lg] - b.close[lg] === (!lg ? 1 : -1) || !lg && littleThan(a, b, 1));\n  }\n}\n/**\n * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n * subtraction forces infinities to NaN\n *\n * @param {*} v\n * @return {boolean}\n */\n\n\nfunction isNumeric(v) {\n  return v - parseFloat(v) >= 0;\n}\n\nexports.linearMap = linearMap;\nexports.parsePercent = parsePercent;\nexports.round = round;\nexports.asc = asc;\nexports.getPrecision = getPrecision;\nexports.getPrecisionSafe = getPrecisionSafe;\nexports.getPixelPrecision = getPixelPrecision;\nexports.getPercentWithPrecision = getPercentWithPrecision;\nexports.MAX_SAFE_INTEGER = MAX_SAFE_INTEGER;\nexports.remRadian = remRadian;\nexports.isRadianAroundZero = isRadianAroundZero;\nexports.parseDate = parseDate;\nexports.quantity = quantity;\nexports.nice = nice;\nexports.reformIntervals = reformIntervals;\nexports.isNumeric = isNumeric;\n\n/***/ }),\n\n/***/ 1031:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1027);\n\nvar formatUtil = __webpack_require__(1034);\n\nvar nubmerUtil = __webpack_require__(1030);\n\nvar Model = __webpack_require__(1038);\n\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\n/**\n * If value is not array, then translate it to array.\n * @param  {*} value\n * @return {Array} [value] or value\n */\n\nfunction normalizeToArray(value) {\n  return value instanceof Array ? value : value == null ? [] : [value];\n}\n/**\n * Sync default option between normal and emphasis like `position` and `show`\n * In case some one will write code like\n *     label: {\n *         normal: {\n *             show: false,\n *             position: 'outside',\n *             fontSize: 18\n *         },\n *         emphasis: {\n *             show: true\n *         }\n *     }\n * @param {Object} opt\n * @param {Array.<string>} subOpts\n */\n\n\nfunction defaultEmphasis(opt, subOpts) {\n  if (opt) {\n    var emphasisOpt = opt.emphasis = opt.emphasis || {};\n    var normalOpt = opt.normal = opt.normal || {}; // Default emphasis option from normal\n\n    for (var i = 0, len = subOpts.length; i < len; i++) {\n      var subOptName = subOpts[i];\n\n      if (!emphasisOpt.hasOwnProperty(subOptName) && normalOpt.hasOwnProperty(subOptName)) {\n        emphasisOpt[subOptName] = normalOpt[subOptName];\n      }\n    }\n  }\n}\n\nvar TEXT_STYLE_OPTIONS = ['fontStyle', 'fontWeight', 'fontSize', 'fontFamily', 'rich', 'tag', 'color', 'textBorderColor', 'textBorderWidth', 'width', 'height', 'lineHeight', 'align', 'verticalAlign', 'baseline', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY', 'textShadowColor', 'textShadowBlur', 'textShadowOffsetX', 'textShadowOffsetY', 'backgroundColor', 'borderColor', 'borderWidth', 'borderRadius', 'padding']; // modelUtil.LABEL_OPTIONS = modelUtil.TEXT_STYLE_OPTIONS.concat([\n//     'position', 'offset', 'rotate', 'origin', 'show', 'distance', 'formatter',\n//     'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\n//     // FIXME: deprecated, check and remove it.\n//     'textStyle'\n// ]);\n\n/**\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method retieves value from data.\n * @param {string|number|Date|Array|Object} dataItem\n * @return {number|string|Date|Array.<number|string|Date>}\n */\n\nfunction getDataItemValue(dataItem) {\n  // Performance sensitive.\n  return dataItem && (dataItem.value == null ? dataItem : dataItem.value);\n}\n/**\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method determine if dataItem has extra option besides value\n * @param {string|number|Date|Array|Object} dataItem\n */\n\n\nfunction isDataItemOption(dataItem) {\n  return isObject(dataItem) && !(dataItem instanceof Array); // // markLine data can be array\n  // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n}\n/**\n * This helper method convert value in data.\n * @param {string|number|Date} value\n * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n */\n\n\nfunction converDataValue(value, dimInfo) {\n  // Performance sensitive.\n  var dimType = dimInfo && dimInfo.type;\n\n  if (dimType === 'ordinal') {\n    return value;\n  }\n\n  if (dimType === 'time' // spead up when using timestamp\n  && typeof value !== 'number' && value != null && value !== '-') {\n    value = +nubmerUtil.parseDate(value);\n  } // dimType defaults 'number'.\n  // If dimType is not ordinal and value is null or undefined or NaN or '-',\n  // parse to NaN.\n\n\n  return value == null || value === '' ? NaN : +value; // If string (like '-'), using '+' parse to NaN\n}\n/**\n * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.\n * @param {module:echarts/data/List} data\n * @param {Object} opt\n * @param {string} [opt.seriesIndex]\n * @param {Object} [opt.name]\n * @param {Object} [opt.mainType]\n * @param {Object} [opt.subType]\n */\n\n\nfunction createDataFormatModel(data, opt) {\n  var model = new Model();\n  zrUtil.mixin(model, dataFormatMixin);\n  model.seriesIndex = opt.seriesIndex;\n  model.name = opt.name || '';\n  model.mainType = opt.mainType;\n  model.subType = opt.subType;\n\n  model.getData = function () {\n    return data;\n  };\n\n  return model;\n} // PENDING A little ugly\n\n\nvar dataFormatMixin = {\n  /**\n   * Get params for formatter\n   * @param {number} dataIndex\n   * @param {string} [dataType]\n   * @return {Object}\n   */\n  getDataParams: function (dataIndex, dataType) {\n    var data = this.getData(dataType);\n    var rawValue = this.getRawValue(dataIndex, dataType);\n    var rawDataIndex = data.getRawIndex(dataIndex);\n    var name = data.getName(dataIndex, true);\n    var itemOpt = data.getRawDataItem(dataIndex);\n    var color = data.getItemVisual(dataIndex, 'color');\n    return {\n      componentType: this.mainType,\n      componentSubType: this.subType,\n      seriesType: this.mainType === 'series' ? this.subType : null,\n      seriesIndex: this.seriesIndex,\n      seriesId: this.id,\n      seriesName: this.name,\n      name: name,\n      dataIndex: rawDataIndex,\n      data: itemOpt,\n      dataType: dataType,\n      value: rawValue,\n      color: color,\n      marker: formatUtil.getTooltipMarker(color),\n      // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n      $vars: ['seriesName', 'name', 'value']\n    };\n  },\n\n  /**\n   * Format label\n   * @param {number} dataIndex\n   * @param {string} [status='normal'] 'normal' or 'emphasis'\n   * @param {string} [dataType]\n   * @param {number} [dimIndex]\n   * @param {string} [labelProp='label']\n   * @return {string}\n   */\n  getFormattedLabel: function (dataIndex, status, dataType, dimIndex, labelProp) {\n    status = status || 'normal';\n    var data = this.getData(dataType);\n    var itemModel = data.getItemModel(dataIndex);\n    var params = this.getDataParams(dataIndex, dataType);\n\n    if (dimIndex != null && params.value instanceof Array) {\n      params.value = params.value[dimIndex];\n    }\n\n    var formatter = itemModel.get([labelProp || 'label', status, 'formatter']);\n\n    if (typeof formatter === 'function') {\n      params.status = status;\n      return formatter(params);\n    } else if (typeof formatter === 'string') {\n      return formatUtil.formatTpl(formatter, params);\n    }\n  },\n\n  /**\n   * Get raw value in option\n   * @param {number} idx\n   * @param {string} [dataType]\n   * @return {Object}\n   */\n  getRawValue: function (idx, dataType) {\n    var data = this.getData(dataType);\n    var dataItem = data.getRawDataItem(idx);\n\n    if (dataItem != null) {\n      return isObject(dataItem) && !(dataItem instanceof Array) ? dataItem.value : dataItem;\n    }\n  },\n\n  /**\n   * Should be implemented.\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   * @return {string} tooltip string\n   */\n  formatTooltip: zrUtil.noop\n};\n/**\n * Mapping to exists for merge.\n *\n * @public\n * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n * @param {Object|Array.<Object>} newCptOptions\n * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          index of which is the same as exists.\n */\n\nfunction mappingToExists(exists, newCptOptions) {\n  // Mapping by the order by original option (but not order of\n  // new option) in merge mode. Because we should ensure\n  // some specified index (like xAxisIndex) is consistent with\n  // original option, which is easy to understand, espatially in\n  // media query. And in most case, merge option is used to\n  // update partial option but not be expected to change order.\n  newCptOptions = (newCptOptions || []).slice();\n  var result = zrUtil.map(exists || [], function (obj, index) {\n    return {\n      exist: obj\n    };\n  }); // Mapping by id or name if specified.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    } // id has highest priority.\n\n\n    for (var i = 0; i < result.length; i++) {\n      if (!result[i].option // Consider name: two map to one.\n      && cptOption.id != null && result[i].exist.id === cptOption.id + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n\n    for (var i = 0; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Consider name: two map to one.\n      // Can not match when both ids exist but different.\n      && (exist.id == null || cptOption.id == null) && cptOption.name != null && !isIdInner(cptOption) && !isIdInner(exist) && exist.name === cptOption.name + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n  }); // Otherwise mapping by index.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    }\n\n    var i = 0;\n\n    for (; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Existing model that already has id should be able to\n      // mapped to (because after mapping performed model may\n      // be assigned with a id, whish should not affect next\n      // mapping), except those has inner id.\n      && !isIdInner(exist) // Caution:\n      // Do not overwrite id. But name can be overwritten,\n      // because axis use name as 'show label text'.\n      // 'exist' always has id and name and we dont\n      // need to check it.\n      && cptOption.id == null) {\n        result[i].option = cptOption;\n        break;\n      }\n    }\n\n    if (i >= result.length) {\n      result.push({\n        option: cptOption\n      });\n    }\n  });\n  return result;\n}\n/**\n * Make id and name for mapping result (result of mappingToExists)\n * into `keyInfo` field.\n *\n * @public\n * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          which order is the same as exists.\n * @return {Array.<Object>} The input.\n */\n\n\nfunction makeIdAndName(mapResult) {\n  // We use this id to hash component models and view instances\n  // in echarts. id can be specified by user, or auto generated.\n  // The id generation rule ensures new view instance are able\n  // to mapped to old instance when setOption are called in\n  // no-merge mode. So we generate model id by name and plus\n  // type in view id.\n  // name can be duplicated among components, which is convenient\n  // to specify multi components (like series) by one name.\n  // Ensure that each id is distinct.\n  var idMap = zrUtil.createHashMap();\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    existCpt && idMap.set(existCpt.id, item);\n  });\n  each(mapResult, function (item, index) {\n    var opt = item.option;\n    zrUtil.assert(!opt || opt.id == null || !idMap.get(opt.id) || idMap.get(opt.id) === item, 'id duplicates: ' + (opt && opt.id));\n    opt && opt.id != null && idMap.set(opt.id, item);\n    !item.keyInfo && (item.keyInfo = {});\n  }); // Make name and id.\n\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    var opt = item.option;\n    var keyInfo = item.keyInfo;\n\n    if (!isObject(opt)) {\n      return;\n    } // name can be overwitten. Consider case: axis.name = '20km'.\n    // But id generated by name will not be changed, which affect\n    // only in that case: setOption with 'not merge mode' and view\n    // instance will be recreated, which can be accepted.\n\n\n    keyInfo.name = opt.name != null ? opt.name + '' : existCpt ? existCpt.name : '\\0-'; // name may be displayed on screen, so use '-'.\n\n    if (existCpt) {\n      keyInfo.id = existCpt.id;\n    } else if (opt.id != null) {\n      keyInfo.id = opt.id + '';\n    } else {\n      // Consider this situatoin:\n      //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n      //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n      // Series with the same name between optionA and optionB\n      // should be mapped.\n      var idNum = 0;\n\n      do {\n        keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n      } while (idMap.get(keyInfo.id));\n    }\n\n    idMap.set(keyInfo.id, item);\n  });\n}\n/**\n * @public\n * @param {Object} cptOption\n * @return {boolean}\n */\n\n\nfunction isIdInner(cptOption) {\n  return isObject(cptOption) && cptOption.id && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n}\n/**\n * A helper for removing duplicate items between batchA and batchB,\n * and in themselves, and categorize by series.\n *\n * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n */\n\n\nfunction compressBatches(batchA, batchB) {\n  var mapA = {};\n  var mapB = {};\n  makeMap(batchA || [], mapA);\n  makeMap(batchB || [], mapB, mapA);\n  return [mapToArray(mapA), mapToArray(mapB)];\n\n  function makeMap(sourceBatch, map, otherMap) {\n    for (var i = 0, len = sourceBatch.length; i < len; i++) {\n      var seriesId = sourceBatch[i].seriesId;\n      var dataIndices = normalizeToArray(sourceBatch[i].dataIndex);\n      var otherDataIndices = otherMap && otherMap[seriesId];\n\n      for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n        var dataIndex = dataIndices[j];\n\n        if (otherDataIndices && otherDataIndices[dataIndex]) {\n          otherDataIndices[dataIndex] = null;\n        } else {\n          (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n        }\n      }\n    }\n  }\n\n  function mapToArray(map, isData) {\n    var result = [];\n\n    for (var i in map) {\n      if (map.hasOwnProperty(i) && map[i] != null) {\n        if (isData) {\n          result.push(+i);\n        } else {\n          var dataIndices = mapToArray(map[i], true);\n          dataIndices.length && result.push({\n            seriesId: i,\n            dataIndex: dataIndices\n          });\n        }\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n *                         each of which can be Array or primary type.\n * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n */\n\n\nfunction queryDataIndex(data, payload) {\n  if (payload.dataIndexInside != null) {\n    return payload.dataIndexInside;\n  } else if (payload.dataIndex != null) {\n    return zrUtil.isArray(payload.dataIndex) ? zrUtil.map(payload.dataIndex, function (value) {\n      return data.indexOfRawIndex(value);\n    }) : data.indexOfRawIndex(payload.dataIndex);\n  } else if (payload.name != null) {\n    return zrUtil.isArray(payload.name) ? zrUtil.map(payload.name, function (value) {\n      return data.indexOfName(value);\n    }) : data.indexOfName(payload.name);\n  }\n}\n/**\n * Enable property storage to any host object.\n * Notice: Serialization is not supported.\n *\n * For example:\n * var get = modelUitl.makeGetter();\n *\n * function some(hostObj) {\n *      get(hostObj)._someProperty = 1212;\n *      ...\n * }\n *\n * @return {Function}\n */\n\n\nvar makeGetter = function () {\n  var index = 0;\n  return function () {\n    var key = '\\0__ec_prop_getter_' + index++;\n    return function (hostObj) {\n      return hostObj[key] || (hostObj[key] = {});\n    };\n  };\n}();\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex, seriesId, seriesName,\n *            geoIndex, geoId, geoName,\n *            bmapIndex, bmapId, bmapName,\n *            xAxisIndex, xAxisId, xAxisName,\n *            yAxisIndex, yAxisId, yAxisName,\n *            gridIndex, gridId, gridName,\n *            ... (can be extended)\n *        }\n *        Each properties can be number|string|Array.<number>|Array.<string>\n *        For example, a finder could be\n *        {\n *            seriesIndex: 3,\n *            geoId: ['aa', 'cc'],\n *            gridName: ['xx', 'rr']\n *        }\n *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n *        If nothing or null/undefined specified, return nothing.\n * @param {Object} [opt]\n * @param {string} [opt.defaultMainType]\n * @param {Array.<string>} [opt.includeMainTypes]\n * @return {Object} result like:\n *        {\n *            seriesModels: [seriesModel1, seriesModel2],\n *            seriesModel: seriesModel1, // The first model\n *            geoModels: [geoModel1, geoModel2],\n *            geoModel: geoModel1, // The first model\n *            ...\n *        }\n */\n\n\nfunction parseFinder(ecModel, finder, opt) {\n  if (zrUtil.isString(finder)) {\n    var obj = {};\n    obj[finder + 'Index'] = 0;\n    finder = obj;\n  }\n\n  var defaultMainType = opt && opt.defaultMainType;\n\n  if (defaultMainType && !has(finder, defaultMainType + 'Index') && !has(finder, defaultMainType + 'Id') && !has(finder, defaultMainType + 'Name')) {\n    finder[defaultMainType + 'Index'] = 0;\n  }\n\n  var result = {};\n  each(finder, function (value, key) {\n    var value = finder[key]; // Exclude 'dataIndex' and other illgal keys.\n\n    if (key === 'dataIndex' || key === 'dataIndexInside') {\n      result[key] = value;\n      return;\n    }\n\n    var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n    var mainType = parsedKey[1];\n    var queryType = (parsedKey[2] || '').toLowerCase();\n\n    if (!mainType || !queryType || value == null || queryType === 'index' && value === 'none' || opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0) {\n      return;\n    }\n\n    var queryParam = {\n      mainType: mainType\n    };\n\n    if (queryType !== 'index' || value !== 'all') {\n      queryParam[queryType] = value;\n    }\n\n    var models = ecModel.queryComponents(queryParam);\n    result[mainType + 'Models'] = models;\n    result[mainType + 'Model'] = models[0];\n  });\n  return result;\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n * @param {module:echarts/data/List} data\n * @param {string|number} dataDim\n * @return {string}\n */\n\n\nfunction dataDimToCoordDim(data, dataDim) {\n  var dimensions = data.dimensions;\n  dataDim = data.getDimension(dataDim);\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimItem = data.getDimensionInfo(dimensions[i]);\n\n    if (dimItem.name === dataDim) {\n      return dimItem.coordDim;\n    }\n  }\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n * @param {module:echarts/data/List} data\n * @param {string} coordDim\n * @return {Array.<string>} data dimensions on the coordDim.\n */\n\n\nfunction coordDimToDataDim(data, coordDim) {\n  var dataDim = [];\n  each(data.dimensions, function (dimName) {\n    var dimItem = data.getDimensionInfo(dimName);\n\n    if (dimItem.coordDim === coordDim) {\n      dataDim[dimItem.coordDimIndex] = dimItem.name;\n    }\n  });\n  return dataDim;\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n * @param {module:echarts/data/List} data\n * @param {string} otherDim Can be `otherDims`\n *                        like 'label' or 'tooltip'.\n * @return {Array.<string>} data dimensions on the otherDim.\n */\n\n\nfunction otherDimToDataDim(data, otherDim) {\n  var dataDim = [];\n  each(data.dimensions, function (dimName) {\n    var dimItem = data.getDimensionInfo(dimName);\n    var otherDims = dimItem.otherDims;\n    var dimIndex = otherDims[otherDim];\n\n    if (dimIndex != null && dimIndex !== false) {\n      dataDim[dimIndex] = dimItem.name;\n    }\n  });\n  return dataDim;\n}\n\nfunction has(obj, prop) {\n  return obj && obj.hasOwnProperty(prop);\n}\n\nexports.normalizeToArray = normalizeToArray;\nexports.defaultEmphasis = defaultEmphasis;\nexports.TEXT_STYLE_OPTIONS = TEXT_STYLE_OPTIONS;\nexports.getDataItemValue = getDataItemValue;\nexports.isDataItemOption = isDataItemOption;\nexports.converDataValue = converDataValue;\nexports.createDataFormatModel = createDataFormatModel;\nexports.dataFormatMixin = dataFormatMixin;\nexports.mappingToExists = mappingToExists;\nexports.makeIdAndName = makeIdAndName;\nexports.isIdInner = isIdInner;\nexports.compressBatches = compressBatches;\nexports.queryDataIndex = queryDataIndex;\nexports.makeGetter = makeGetter;\nexports.parseFinder = parseFinder;\nexports.dataDimToCoordDim = dataDimToCoordDim;\nexports.coordDimToDataDim = coordDimToDataDim;\nexports.otherDimToDataDim = otherDimToDataDim;\n\n/***/ }),\n\n/***/ 1032:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {// (1) The code `if (__DEV__) ...` can be removed by build tool.\n// (2) If intend to use `__DEV__`, this module should be imported. Use a global\n// variable `__DEV__` may cause that miss the declaration (see #6535), or the\n// declaration is behind of the using position (for example in `Model.extent`,\n// And tools like rollup can not analysis the dependency if not import).\nvar dev; // In browser\n\nif (typeof window !== 'undefined') {\n  dev = window.__DEV__;\n} // In node\nelse if (typeof global !== 'undefined') {\n    dev = global.__DEV__;\n  }\n\nif (typeof dev === 'undefined') {\n  dev = true;\n}\n\nvar __DEV__ = dev;\nexports.__DEV__ = __DEV__;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(20)))\n\n/***/ }),\n\n/***/ 1033:\n/***/ (function(module, exports) {\n\nvar ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * 创建一个向量\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @return {Vector2}\n */\n\nfunction create(x, y) {\n  var out = new ArrayCtor(2);\n\n  if (x == null) {\n    x = 0;\n  }\n\n  if (y == null) {\n    y = 0;\n  }\n\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * 复制向量数据\n * @param {Vector2} out\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction copy(out, v) {\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 克隆一个向量\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction clone(v) {\n  var out = new ArrayCtor(2);\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 设置向量的两个项\n * @param {Vector2} out\n * @param {number} a\n * @param {number} b\n * @return {Vector2} 结果\n */\n\n\nfunction set(out, a, b) {\n  out[0] = a;\n  out[1] = b;\n  return out;\n}\n/**\n * 向量相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction add(out, v1, v2) {\n  out[0] = v1[0] + v2[0];\n  out[1] = v1[1] + v2[1];\n  return out;\n}\n/**\n * 向量缩放后相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} a\n */\n\n\nfunction scaleAndAdd(out, v1, v2, a) {\n  out[0] = v1[0] + v2[0] * a;\n  out[1] = v1[1] + v2[1] * a;\n  return out;\n}\n/**\n * 向量相减\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction sub(out, v1, v2) {\n  out[0] = v1[0] - v2[0];\n  out[1] = v1[1] - v2[1];\n  return out;\n}\n/**\n * 向量长度\n * @param {Vector2} v\n * @return {number}\n */\n\n\nfunction len(v) {\n  return Math.sqrt(lenSquare(v));\n}\n\nvar length = len; // jshint ignore:line\n\n/**\n * 向量长度平方\n * @param {Vector2} v\n * @return {number}\n */\n\nfunction lenSquare(v) {\n  return v[0] * v[0] + v[1] * v[1];\n}\n\nvar lengthSquare = lenSquare;\n/**\n * 向量乘法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\nfunction mul(out, v1, v2) {\n  out[0] = v1[0] * v2[0];\n  out[1] = v1[1] * v2[1];\n  return out;\n}\n/**\n * 向量除法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction div(out, v1, v2) {\n  out[0] = v1[0] / v2[0];\n  out[1] = v1[1] / v2[1];\n  return out;\n}\n/**\n * 向量点乘\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction dot(v1, v2) {\n  return v1[0] * v2[0] + v1[1] * v2[1];\n}\n/**\n * 向量缩放\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {number} s\n */\n\n\nfunction scale(out, v, s) {\n  out[0] = v[0] * s;\n  out[1] = v[1] * s;\n  return out;\n}\n/**\n * 向量归一化\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\n\nfunction normalize(out, v) {\n  var d = len(v);\n\n  if (d === 0) {\n    out[0] = 0;\n    out[1] = 0;\n  } else {\n    out[0] = v[0] / d;\n    out[1] = v[1] / d;\n  }\n\n  return out;\n}\n/**\n * 计算向量间距离\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction distance(v1, v2) {\n  return Math.sqrt((v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]));\n}\n\nvar dist = distance;\n/**\n * 向量距离平方\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\nfunction distanceSquare(v1, v2) {\n  return (v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n}\n\nvar distSquare = distanceSquare;\n/**\n * 求负向量\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\nfunction negate(out, v) {\n  out[0] = -v[0];\n  out[1] = -v[1];\n  return out;\n}\n/**\n * 插值两个点\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} t\n */\n\n\nfunction lerp(out, v1, v2, t) {\n  out[0] = v1[0] + t * (v2[0] - v1[0]);\n  out[1] = v1[1] + t * (v2[1] - v1[1]);\n  return out;\n}\n/**\n * 矩阵左乘向量\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {Vector2} m\n */\n\n\nfunction applyTransform(out, v, m) {\n  var x = v[0];\n  var y = v[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\n * 求两个向量最小值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction min(out, v1, v2) {\n  out[0] = Math.min(v1[0], v2[0]);\n  out[1] = Math.min(v1[1], v2[1]);\n  return out;\n}\n/**\n * 求两个向量最大值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction max(out, v1, v2) {\n  out[0] = Math.max(v1[0], v2[0]);\n  out[1] = Math.max(v1[1], v2[1]);\n  return out;\n}\n\nexports.create = create;\nexports.copy = copy;\nexports.clone = clone;\nexports.set = set;\nexports.add = add;\nexports.scaleAndAdd = scaleAndAdd;\nexports.sub = sub;\nexports.len = len;\nexports.length = length;\nexports.lenSquare = lenSquare;\nexports.lengthSquare = lengthSquare;\nexports.mul = mul;\nexports.div = div;\nexports.dot = dot;\nexports.scale = scale;\nexports.normalize = normalize;\nexports.distance = distance;\nexports.dist = dist;\nexports.distanceSquare = distanceSquare;\nexports.distSquare = distSquare;\nexports.negate = negate;\nexports.lerp = lerp;\nexports.applyTransform = applyTransform;\nexports.min = min;\nexports.max = max;\n\n/***/ }),\n\n/***/ 1034:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1027);\n\nvar textContain = __webpack_require__(1042);\n\nvar numberUtil = __webpack_require__(1030);\n\n/**\n * 每三位默认加,格式化\n * @param {string|number} x\n * @return {string}\n */\nfunction addCommas(x) {\n  if (isNaN(x)) {\n    return '-';\n  }\n\n  x = (x + '').split('.');\n  return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g, '$1,') + (x.length > 1 ? '.' + x[1] : '');\n}\n/**\n * @param {string} str\n * @param {boolean} [upperCaseFirst=false]\n * @return {string} str\n */\n\n\nfunction toCamelCase(str, upperCaseFirst) {\n  str = (str || '').toLowerCase().replace(/-(.)/g, function (match, group1) {\n    return group1.toUpperCase();\n  });\n\n  if (upperCaseFirst && str) {\n    str = str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  return str;\n}\n\nvar normalizeCssArray = zrUtil.normalizeCssArray;\n\nfunction encodeHTML(source) {\n  return String(source).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/'/g, '&#39;');\n}\n\nvar TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\nvar wrapVar = function (varName, seriesIdx) {\n  return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n};\n/**\n * Template formatter\n * @param {string} tpl\n * @param {Array.<Object>|Object} paramsList\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTpl(tpl, paramsList, encode) {\n  if (!zrUtil.isArray(paramsList)) {\n    paramsList = [paramsList];\n  }\n\n  var seriesLen = paramsList.length;\n\n  if (!seriesLen) {\n    return '';\n  }\n\n  var $vars = paramsList[0].$vars || [];\n\n  for (var i = 0; i < $vars.length; i++) {\n    var alias = TPL_VAR_ALIAS[i];\n    var val = wrapVar(alias, 0);\n    tpl = tpl.replace(wrapVar(alias), encode ? encodeHTML(val) : val);\n  }\n\n  for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n    for (var k = 0; k < $vars.length; k++) {\n      var val = paramsList[seriesIdx][$vars[k]];\n      tpl = tpl.replace(wrapVar(TPL_VAR_ALIAS[k], seriesIdx), encode ? encodeHTML(val) : val);\n    }\n  }\n\n  return tpl;\n}\n/**\n * simple Template formatter\n *\n * @param {string} tpl\n * @param {Object} param\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTplSimple(tpl, param, encode) {\n  zrUtil.each(param, function (value, key) {\n    tpl = tpl.replace('{' + key + '}', encode ? encodeHTML(value) : value);\n  });\n  return tpl;\n}\n/**\n * @param {string} color\n * @param {string} [extraCssText]\n * @return {string}\n */\n\n\nfunction getTooltipMarker(color, extraCssText) {\n  return color ? '<span style=\"display:inline-block;margin-right:5px;' + 'border-radius:10px;width:9px;height:9px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>' : '';\n}\n/**\n * @param {string} str\n * @return {string}\n * @inner\n */\n\n\nvar s2d = function (str) {\n  return str < 10 ? '0' + str : str;\n};\n/**\n * ISO Date format\n * @param {string} tpl\n * @param {number} value\n * @param {boolean} [isUTC=false] Default in local time.\n *           see `module:echarts/scale/Time`\n *           and `module:echarts/util/number#parseDate`.\n * @inner\n */\n\n\nfunction formatTime(tpl, value, isUTC) {\n  if (tpl === 'week' || tpl === 'month' || tpl === 'quarter' || tpl === 'half-year' || tpl === 'year') {\n    tpl = 'MM-dd\\nyyyy';\n  }\n\n  var date = numberUtil.parseDate(value);\n  var utc = isUTC ? 'UTC' : '';\n  var y = date['get' + utc + 'FullYear']();\n  var M = date['get' + utc + 'Month']() + 1;\n  var d = date['get' + utc + 'Date']();\n  var h = date['get' + utc + 'Hours']();\n  var m = date['get' + utc + 'Minutes']();\n  var s = date['get' + utc + 'Seconds']();\n  tpl = tpl.replace('MM', s2d(M)).replace('M', M).replace('yyyy', y).replace('yy', y % 100).replace('dd', s2d(d)).replace('d', d).replace('hh', s2d(h)).replace('h', h).replace('mm', s2d(m)).replace('m', m).replace('ss', s2d(s)).replace('s', s);\n  return tpl;\n}\n/**\n * Capital first\n * @param {string} str\n * @return {string}\n */\n\n\nfunction capitalFirst(str) {\n  return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n}\n\nvar truncateText = textContain.truncateText;\nvar getTextRect = textContain.getBoundingRect;\nexports.addCommas = addCommas;\nexports.toCamelCase = toCamelCase;\nexports.normalizeCssArray = normalizeCssArray;\nexports.encodeHTML = encodeHTML;\nexports.formatTpl = formatTpl;\nexports.formatTplSimple = formatTplSimple;\nexports.getTooltipMarker = getTooltipMarker;\nexports.formatTime = formatTime;\nexports.capitalFirst = capitalFirst;\nexports.truncateText = truncateText;\nexports.getTextRect = getTextRect;\n\n/***/ }),\n\n/***/ 1035:\n/***/ (function(module, exports) {\n\n/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\nvar env = {};\n\nif (typeof navigator === 'undefined') {\n  // In node\n  env = {\n    browser: {},\n    os: {},\n    node: true,\n    // Assume canvas is supported\n    canvasSupported: true,\n    svgSupported: true\n  };\n} else {\n  env = detect(navigator.userAgent);\n}\n\nvar _default = env; // Zepto.js\n// (c) 2010-2013 Thomas Fuchs\n// Zepto.js may be freely distributed under the MIT license.\n\nfunction detect(ua) {\n  var os = {};\n  var browser = {}; // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n  // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n  // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n  // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n  // var touchpad = webos && ua.match(/TouchPad/);\n  // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n  // var silk = ua.match(/Silk\\/([\\d._]+)/);\n  // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n  // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n  // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n  // var playbook = ua.match(/PlayBook/);\n  // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n\n  var firefox = ua.match(/Firefox\\/([\\d.]+)/); // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n  // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n\n  var ie = ua.match(/MSIE\\s([\\d.]+)/) // IE 11 Trident/7.0; rv:11.0\n  || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n  var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n  var weChat = /micromessenger/i.test(ua); // Todo: clean this up with a better OS/browser seperation:\n  // - discern (more) between multiple browsers on android\n  // - decide if kindle fire in silk mode is android or not\n  // - Firefox on Android doesn't specify the Android version\n  // - possibly devide in os, device and browser hashes\n  // if (browser.webkit = !!webkit) browser.version = webkit[1];\n  // if (android) os.android = true, os.version = android[2];\n  // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n  // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n  // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n  // if (webos) os.webos = true, os.version = webos[2];\n  // if (touchpad) os.touchpad = true;\n  // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n  // if (bb10) os.bb10 = true, os.version = bb10[2];\n  // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n  // if (playbook) browser.playbook = true;\n  // if (kindle) os.kindle = true, os.version = kindle[1];\n  // if (silk) browser.silk = true, browser.version = silk[1];\n  // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n  // if (chrome) browser.chrome = true, browser.version = chrome[1];\n\n  if (firefox) {\n    browser.firefox = true;\n    browser.version = firefox[1];\n  } // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n  // if (webview) browser.webview = true;\n\n\n  if (ie) {\n    browser.ie = true;\n    browser.version = ie[1];\n  }\n\n  if (edge) {\n    browser.edge = true;\n    browser.version = edge[1];\n  } // It is difficult to detect WeChat in Win Phone precisely, because ua can\n  // not be set on win phone. So we do not consider Win Phone.\n\n\n  if (weChat) {\n    browser.weChat = true;\n  } // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n  //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n  // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n  //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n  //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n\n  return {\n    browser: browser,\n    os: os,\n    node: false,\n    // 原生canvas支持，改极端点了\n    // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n    canvasSupported: !!document.createElement('canvas').getContext,\n    svgSupported: typeof SVGRect !== 'undefined',\n    // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\n    // works on most browsers\n    // IE10/11 does not support touch event, and MS Edge supports them but not by\n    // default, so we dont check navigator.maxTouchPoints for them here.\n    touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n    // <http://caniuse.com/#search=pointer%20event>.\n    pointerEventsSupported: 'onpointerdown' in window // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n    // events currently. So we dont use that on other browsers unless tested sufficiently.\n    // Although IE 10 supports pointer event, it use old style and is different from the\n    // standard. So we exclude that. (IE 10 is hardly used on touch device)\n    && (browser.edge || browser.ie && browser.version >= 11)\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1036:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar vec2 = __webpack_require__(1033);\n\nvar matrix = __webpack_require__(1043);\n\n/**\n * @module echarts/core/BoundingRect\n */\nvar v2ApplyTransform = vec2.applyTransform;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\n/**\n * @alias module:echarts/core/BoundingRect\n */\n\nfunction BoundingRect(x, y, width, height) {\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n  /**\n   * @type {number}\n   */\n\n\n  this.x = x;\n  /**\n   * @type {number}\n   */\n\n  this.y = y;\n  /**\n   * @type {number}\n   */\n\n  this.width = width;\n  /**\n   * @type {number}\n   */\n\n  this.height = height;\n}\n\nBoundingRect.prototype = {\n  constructor: BoundingRect,\n\n  /**\n   * @param {module:echarts/core/BoundingRect} other\n   */\n  union: function (other) {\n    var x = mathMin(other.x, this.x);\n    var y = mathMin(other.y, this.y);\n    this.width = mathMax(other.x + other.width, this.x + this.width) - x;\n    this.height = mathMax(other.y + other.height, this.y + this.height) - y;\n    this.x = x;\n    this.y = y;\n  },\n\n  /**\n   * @param {Array.<number>} m\n   * @methods\n   */\n  applyTransform: function () {\n    var lt = [];\n    var rb = [];\n    var lb = [];\n    var rt = [];\n    return function (m) {\n      // In case usage like this\n      // el.getBoundingRect().applyTransform(el.transform)\n      // And element has no transform\n      if (!m) {\n        return;\n      }\n\n      lt[0] = lb[0] = this.x;\n      lt[1] = rt[1] = this.y;\n      rb[0] = rt[0] = this.x + this.width;\n      rb[1] = lb[1] = this.y + this.height;\n      v2ApplyTransform(lt, lt, m);\n      v2ApplyTransform(rb, rb, m);\n      v2ApplyTransform(lb, lb, m);\n      v2ApplyTransform(rt, rt, m);\n      this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n      this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n      var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n      var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n      this.width = maxX - this.x;\n      this.height = maxY - this.y;\n    };\n  }(),\n\n  /**\n   * Calculate matrix of transforming from self to target rect\n   * @param  {module:zrender/core/BoundingRect} b\n   * @return {Array.<number>}\n   */\n  calculateTransform: function (b) {\n    var a = this;\n    var sx = b.width / a.width;\n    var sy = b.height / a.height;\n    var m = matrix.create(); // 矩阵右乘\n\n    matrix.translate(m, m, [-a.x, -a.y]);\n    matrix.scale(m, m, [sx, sy]);\n    matrix.translate(m, m, [b.x, b.y]);\n    return m;\n  },\n\n  /**\n   * @param {(module:echarts/core/BoundingRect|Object)} b\n   * @return {boolean}\n   */\n  intersect: function (b) {\n    if (!b) {\n      return false;\n    }\n\n    if (!(b instanceof BoundingRect)) {\n      // Normalize negative width/height.\n      b = BoundingRect.create(b);\n    }\n\n    var a = this;\n    var ax0 = a.x;\n    var ax1 = a.x + a.width;\n    var ay0 = a.y;\n    var ay1 = a.y + a.height;\n    var bx0 = b.x;\n    var bx1 = b.x + b.width;\n    var by0 = b.y;\n    var by1 = b.y + b.height;\n    return !(ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n  },\n  contain: function (x, y) {\n    var rect = this;\n    return x >= rect.x && x <= rect.x + rect.width && y >= rect.y && y <= rect.y + rect.height;\n  },\n\n  /**\n   * @return {module:echarts/core/BoundingRect}\n   */\n  clone: function () {\n    return new BoundingRect(this.x, this.y, this.width, this.height);\n  },\n\n  /**\n   * Copy from another rect\n   */\n  copy: function (other) {\n    this.x = other.x;\n    this.y = other.y;\n    this.width = other.width;\n    this.height = other.height;\n  },\n  plain: function () {\n    return {\n      x: this.x,\n      y: this.y,\n      width: this.width,\n      height: this.height\n    };\n  }\n};\n/**\n * @param {Object|module:zrender/core/BoundingRect} rect\n * @param {number} rect.x\n * @param {number} rect.y\n * @param {number} rect.width\n * @param {number} rect.height\n * @return {module:zrender/core/BoundingRect}\n */\n\nBoundingRect.create = function (rect) {\n  return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n};\n\nvar _default = BoundingRect;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1037:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Displayable = __webpack_require__(1067);\n\nvar zrUtil = __webpack_require__(1027);\n\nvar PathProxy = __webpack_require__(1056);\n\nvar pathContain = __webpack_require__(1155);\n\nvar Pattern = __webpack_require__(1096);\n\nvar getCanvasPattern = Pattern.prototype.getCanvasPattern;\nvar abs = Math.abs;\nvar pathProxyForDraw = new PathProxy(true);\n/**\n * @alias module:zrender/graphic/Path\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\n\nfunction Path(opts) {\n  Displayable.call(this, opts);\n  /**\n   * @type {module:zrender/core/PathProxy}\n   * @readOnly\n   */\n\n  this.path = null;\n}\n\nPath.prototype = {\n  constructor: Path,\n  type: 'path',\n  __dirtyPath: true,\n  strokeContainThreshold: 5,\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var path = this.path || pathProxyForDraw;\n    var hasStroke = style.hasStroke();\n    var hasFill = style.hasFill();\n    var fill = style.fill;\n    var stroke = style.stroke;\n    var hasFillGradient = hasFill && !!fill.colorStops;\n    var hasStrokeGradient = hasStroke && !!stroke.colorStops;\n    var hasFillPattern = hasFill && !!fill.image;\n    var hasStrokePattern = hasStroke && !!stroke.image;\n    style.bind(ctx, this, prevEl);\n    this.setTransform(ctx);\n\n    if (this.__dirty) {\n      var rect; // Update gradient because bounding rect may changed\n\n      if (hasFillGradient) {\n        rect = rect || this.getBoundingRect();\n        this._fillGradient = style.getGradient(ctx, fill, rect);\n      }\n\n      if (hasStrokeGradient) {\n        rect = rect || this.getBoundingRect();\n        this._strokeGradient = style.getGradient(ctx, stroke, rect);\n      }\n    } // Use the gradient or pattern\n\n\n    if (hasFillGradient) {\n      // PENDING If may have affect the state\n      ctx.fillStyle = this._fillGradient;\n    } else if (hasFillPattern) {\n      ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n    }\n\n    if (hasStrokeGradient) {\n      ctx.strokeStyle = this._strokeGradient;\n    } else if (hasStrokePattern) {\n      ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n    }\n\n    var lineDash = style.lineDash;\n    var lineDashOffset = style.lineDashOffset;\n    var ctxLineDash = !!ctx.setLineDash; // Update path sx, sy\n\n    var scale = this.getGlobalScale();\n    path.setScale(scale[0], scale[1]); // Proxy context\n    // Rebuild path in following 2 cases\n    // 1. Path is dirty\n    // 2. Path needs javascript implemented lineDash stroking.\n    //    In this case, lineDash information will not be saved in PathProxy\n\n    if (this.__dirtyPath || lineDash && !ctxLineDash && hasStroke) {\n      path.beginPath(ctx); // Setting line dash before build path\n\n      if (lineDash && !ctxLineDash) {\n        path.setLineDash(lineDash);\n        path.setLineDashOffset(lineDashOffset);\n      }\n\n      this.buildPath(path, this.shape, false); // Clear path dirty flag\n\n      if (this.path) {\n        this.__dirtyPath = false;\n      }\n    } else {\n      // Replay path building\n      ctx.beginPath();\n      this.path.rebuildPath(ctx);\n    }\n\n    hasFill && path.fill(ctx);\n\n    if (lineDash && ctxLineDash) {\n      ctx.setLineDash(lineDash);\n      ctx.lineDashOffset = lineDashOffset;\n    }\n\n    hasStroke && path.stroke(ctx);\n\n    if (lineDash && ctxLineDash) {\n      // PENDING\n      // Remove lineDash\n      ctx.setLineDash([]);\n    }\n\n    this.restoreTransform(ctx); // Draw rect text\n\n    if (style.text != null) {\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n  // Like in circle\n  buildPath: function (ctx, shapeCfg, inBundle) {},\n  createPathProxy: function () {\n    this.path = new PathProxy();\n  },\n  getBoundingRect: function () {\n    var rect = this._rect;\n    var style = this.style;\n    var needsUpdateRect = !rect;\n\n    if (needsUpdateRect) {\n      var path = this.path;\n\n      if (!path) {\n        // Create path on demand.\n        path = this.path = new PathProxy();\n      }\n\n      if (this.__dirtyPath) {\n        path.beginPath();\n        this.buildPath(path, this.shape, false);\n      }\n\n      rect = path.getBoundingRect();\n    }\n\n    this._rect = rect;\n\n    if (style.hasStroke()) {\n      // Needs update rect with stroke lineWidth when\n      // 1. Element changes scale or lineWidth\n      // 2. Shape is changed\n      var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n\n      if (this.__dirty || needsUpdateRect) {\n        rectWithStroke.copy(rect); // FIXME Must after updateTransform\n\n        var w = style.lineWidth; // PENDING, Min line width is needed when line is horizontal or vertical\n\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Only add extra hover lineWidth when there are no fill\n\n        if (!style.hasFill()) {\n          w = Math.max(w, this.strokeContainThreshold || 4);\n        } // Consider line width\n        // Line scale can't be 0;\n\n\n        if (lineScale > 1e-10) {\n          rectWithStroke.width += w / lineScale;\n          rectWithStroke.height += w / lineScale;\n          rectWithStroke.x -= w / lineScale / 2;\n          rectWithStroke.y -= w / lineScale / 2;\n        }\n      } // Return rect with stroke\n\n\n      return rectWithStroke;\n    }\n\n    return rect;\n  },\n  contain: function (x, y) {\n    var localPos = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    var style = this.style;\n    x = localPos[0];\n    y = localPos[1];\n\n    if (rect.contain(x, y)) {\n      var pathData = this.path.data;\n\n      if (style.hasStroke()) {\n        var lineWidth = style.lineWidth;\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Line scale can't be 0;\n\n        if (lineScale > 1e-10) {\n          // Only add extra hover lineWidth when there are no fill\n          if (!style.hasFill()) {\n            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n          }\n\n          if (pathContain.containStroke(pathData, lineWidth / lineScale, x, y)) {\n            return true;\n          }\n        }\n      }\n\n      if (style.hasFill()) {\n        return pathContain.contain(pathData, x, y);\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * @param  {boolean} dirtyPath\n   */\n  dirty: function (dirtyPath) {\n    if (dirtyPath == null) {\n      dirtyPath = true;\n    } // Only mark dirty, not mark clean\n\n\n    if (dirtyPath) {\n      this.__dirtyPath = dirtyPath;\n      this._rect = null;\n    }\n\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh(); // Used as a clipping path\n\n    if (this.__clipTarget) {\n      this.__clipTarget.dirty();\n    }\n  },\n\n  /**\n   * Alias for animate('shape')\n   * @param {boolean} loop\n   */\n  animateShape: function (loop) {\n    return this.animate('shape', loop);\n  },\n  // Overwrite attrKV\n  attrKV: function (key, value) {\n    // FIXME\n    if (key === 'shape') {\n      this.setShape(value);\n      this.__dirtyPath = true;\n      this._rect = null;\n    } else {\n      Displayable.prototype.attrKV.call(this, key, value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setShape: function (key, value) {\n    var shape = this.shape; // Path from string may not have shape\n\n    if (shape) {\n      if (zrUtil.isObject(key)) {\n        for (var name in key) {\n          if (key.hasOwnProperty(name)) {\n            shape[name] = key[name];\n          }\n        }\n      } else {\n        shape[key] = value;\n      }\n\n      this.dirty(true);\n    }\n\n    return this;\n  },\n  getLineScale: function () {\n    var m = this.transform; // Get the line scale.\n    // Determinant of `m` means how much the area is enlarged by the\n    // transformation. So its square root can be used as a scale factor\n    // for width.\n\n    return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10 ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1])) : 1;\n  }\n};\n/**\n * 扩展一个 Path element, 比如星形，圆等。\n * Extend a path element\n * @param {Object} props\n * @param {string} props.type Path type\n * @param {Function} props.init Initialize\n * @param {Function} props.buildPath Overwrite buildPath method\n * @param {Object} [props.style] Extended default style config\n * @param {Object} [props.shape] Extended default shape config\n */\n\nPath.extend = function (defaults) {\n  var Sub = function (opts) {\n    Path.call(this, opts);\n\n    if (defaults.style) {\n      // Extend default style\n      this.style.extendFrom(defaults.style, false);\n    } // Extend default shape\n\n\n    var defaultShape = defaults.shape;\n\n    if (defaultShape) {\n      this.shape = this.shape || {};\n      var thisShape = this.shape;\n\n      for (var name in defaultShape) {\n        if (!thisShape.hasOwnProperty(name) && defaultShape.hasOwnProperty(name)) {\n          thisShape[name] = defaultShape[name];\n        }\n      }\n    }\n\n    defaults.init && defaults.init.call(this, opts);\n  };\n\n  zrUtil.inherits(Sub, Path); // FIXME 不能 extend position, rotation 等引用对象\n\n  for (var name in defaults) {\n    // Extending prototype values and methods\n    if (name !== 'style' && name !== 'shape') {\n      Sub.prototype[name] = defaults[name];\n    }\n  }\n\n  return Sub;\n};\n\nzrUtil.inherits(Path, Displayable);\nvar _default = Path;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1038:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1027);\n\nvar env = __webpack_require__(1035);\n\nvar clazzUtil = __webpack_require__(1041);\n\nvar lineStyleMixin = __webpack_require__(1151);\n\nvar areaStyleMixin = __webpack_require__(1152);\n\nvar textStyleMixin = __webpack_require__(1153);\n\nvar itemStyleMixin = __webpack_require__(1172);\n\n/**\n * @module echarts/model/Model\n */\nvar mixin = zrUtil.mixin;\n/**\n * @alias module:echarts/model/Model\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} [parentModel]\n * @param {module:echarts/model/Global} [ecModel]\n */\n\nfunction Model(option, parentModel, ecModel) {\n  /**\n   * @type {module:echarts/model/Model}\n   * @readOnly\n   */\n  this.parentModel = parentModel;\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n\n  this.ecModel = ecModel;\n  /**\n   * @type {Object}\n   * @protected\n   */\n\n  this.option = option; // Simple optimization\n  // if (this.init) {\n  //     if (arguments.length <= 4) {\n  //         this.init(option, parentModel, ecModel, extraOpt);\n  //     }\n  //     else {\n  //         this.init.apply(this, arguments);\n  //     }\n  // }\n}\n\nModel.prototype = {\n  constructor: Model,\n\n  /**\n   * Model 的初始化函数\n   * @param {Object} option\n   */\n  init: null,\n\n  /**\n   * 从新的 Option merge\n   */\n  mergeOption: function (option) {\n    zrUtil.merge(this.option, option, true);\n  },\n\n  /**\n   * @param {string|Array.<string>} path\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  get: function (path, ignoreParent) {\n    if (path == null) {\n      return this.option;\n    }\n\n    return doGet(this.option, this.parsePath(path), !ignoreParent && getParent(this, path));\n  },\n\n  /**\n   * @param {string} key\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  getShallow: function (key, ignoreParent) {\n    var option = this.option;\n    var val = option == null ? option : option[key];\n    var parentModel = !ignoreParent && getParent(this, key);\n\n    if (val == null && parentModel) {\n      val = parentModel.getShallow(key);\n    }\n\n    return val;\n  },\n\n  /**\n   * @param {string|Array.<string>} [path]\n   * @param {module:echarts/model/Model} [parentModel]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path, parentModel) {\n    var obj = path == null ? this.option : doGet(this.option, path = this.parsePath(path));\n    var thisParentModel;\n    parentModel = parentModel || (thisParentModel = getParent(this, path)) && thisParentModel.getModel(path);\n    return new Model(obj, parentModel, this.ecModel);\n  },\n\n  /**\n   * If model has option\n   */\n  isEmpty: function () {\n    return this.option == null;\n  },\n  restoreData: function () {},\n  // Pending\n  clone: function () {\n    var Ctor = this.constructor;\n    return new Ctor(zrUtil.clone(this.option));\n  },\n  setReadOnly: function (properties) {\n    clazzUtil.setReadOnly(this, properties);\n  },\n  // If path is null/undefined, return null/undefined.\n  parsePath: function (path) {\n    if (typeof path === 'string') {\n      path = path.split('.');\n    }\n\n    return path;\n  },\n\n  /**\n   * @param {Function} getParentMethod\n   *        param {Array.<string>|string} path\n   *        return {module:echarts/model/Model}\n   */\n  customizeGetParent: function (getParentMethod) {\n    clazzUtil.set(this, 'getParent', getParentMethod);\n  },\n  isAnimationEnabled: function () {\n    if (!env.node) {\n      if (this.option.animation != null) {\n        return !!this.option.animation;\n      } else if (this.parentModel) {\n        return this.parentModel.isAnimationEnabled();\n      }\n    }\n  }\n};\n\nfunction doGet(obj, pathArr, parentModel) {\n  for (var i = 0; i < pathArr.length; i++) {\n    // Ignore empty\n    if (!pathArr[i]) {\n      continue;\n    } // obj could be number/string/... (like 0)\n\n\n    obj = obj && typeof obj === 'object' ? obj[pathArr[i]] : null;\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  if (obj == null && parentModel) {\n    obj = parentModel.get(pathArr);\n  }\n\n  return obj;\n} // `path` can be null/undefined\n\n\nfunction getParent(model, path) {\n  var getParentMethod = clazzUtil.get(model, 'getParent');\n  return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n} // Enable Model.extend.\n\n\nclazzUtil.enableClassExtend(Model);\nmixin(Model, lineStyleMixin);\nmixin(Model, areaStyleMixin);\nmixin(Model, textStyleMixin);\nmixin(Model, itemStyleMixin);\nvar _default = Model;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1039:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1027);\n\nvar BoundingRect = __webpack_require__(1036);\n\nvar _number = __webpack_require__(1030);\n\nvar parsePercent = _number.parsePercent;\n\nvar formatUtil = __webpack_require__(1034);\n\n// Layout helpers for each component positioning\nvar each = zrUtil.each;\n/**\n * @public\n */\n\nvar LOCATION_PARAMS = ['left', 'right', 'top', 'bottom', 'width', 'height'];\n/**\n * @public\n */\n\nvar HV_NAMES = [['width', 'left', 'right'], ['height', 'top', 'bottom']];\n\nfunction boxLayout(orient, group, gap, maxWidth, maxHeight) {\n  var x = 0;\n  var y = 0;\n\n  if (maxWidth == null) {\n    maxWidth = Infinity;\n  }\n\n  if (maxHeight == null) {\n    maxHeight = Infinity;\n  }\n\n  var currentLineMaxSize = 0;\n  group.eachChild(function (child, idx) {\n    var position = child.position;\n    var rect = child.getBoundingRect();\n    var nextChild = group.childAt(idx + 1);\n    var nextChildRect = nextChild && nextChild.getBoundingRect();\n    var nextX;\n    var nextY;\n\n    if (orient === 'horizontal') {\n      var moveX = rect.width + (nextChildRect ? -nextChildRect.x + rect.x : 0);\n      nextX = x + moveX; // Wrap when width exceeds maxWidth or meet a `newline` group\n      // FIXME compare before adding gap?\n\n      if (nextX > maxWidth || child.newline) {\n        x = 0;\n        nextX = moveX;\n        y += currentLineMaxSize + gap;\n        currentLineMaxSize = rect.height;\n      } else {\n        // FIXME: consider rect.y is not `0`?\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n      }\n    } else {\n      var moveY = rect.height + (nextChildRect ? -nextChildRect.y + rect.y : 0);\n      nextY = y + moveY; // Wrap when width exceeds maxHeight or meet a `newline` group\n\n      if (nextY > maxHeight || child.newline) {\n        x += currentLineMaxSize + gap;\n        y = 0;\n        nextY = moveY;\n        currentLineMaxSize = rect.width;\n      } else {\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n      }\n    }\n\n    if (child.newline) {\n      return;\n    }\n\n    position[0] = x;\n    position[1] = y;\n    orient === 'horizontal' ? x = nextX + gap : y = nextY + gap;\n  });\n}\n/**\n * VBox or HBox layouting\n * @param {string} orient\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\n\nvar box = boxLayout;\n/**\n * VBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar vbox = zrUtil.curry(boxLayout, 'vertical');\n/**\n * HBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar hbox = zrUtil.curry(boxLayout, 'horizontal');\n/**\n * If x or x2 is not specified or 'center' 'left' 'right',\n * the width would be as long as possible.\n * If y or y2 is not specified or 'middle' 'top' 'bottom',\n * the height would be as long as possible.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.x]\n * @param {number|string} [positionInfo.y]\n * @param {number|string} [positionInfo.x2]\n * @param {number|string} [positionInfo.y2]\n * @param {Object} containerRect {width, height}\n * @param {string|number} margin\n * @return {Object} {width, height}\n */\n\nfunction getAvailableSize(positionInfo, containerRect, margin) {\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var x = parsePercent(positionInfo.x, containerWidth);\n  var y = parsePercent(positionInfo.y, containerHeight);\n  var x2 = parsePercent(positionInfo.x2, containerWidth);\n  var y2 = parsePercent(positionInfo.y2, containerHeight);\n  (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n  (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n  (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n  (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  return {\n    width: Math.max(x2 - x - margin[1] - margin[3], 0),\n    height: Math.max(y2 - y - margin[0] - margin[2], 0)\n  };\n}\n/**\n * Parse position info.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width]\n * @param {number|string} [positionInfo.height]\n * @param {number|string} [positionInfo.aspect] Aspect is width / height\n * @param {Object} containerRect\n * @param {string|number} [margin]\n *\n * @return {module:zrender/core/BoundingRect}\n */\n\n\nfunction getLayoutRect(positionInfo, containerRect, margin) {\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var left = parsePercent(positionInfo.left, containerWidth);\n  var top = parsePercent(positionInfo.top, containerHeight);\n  var right = parsePercent(positionInfo.right, containerWidth);\n  var bottom = parsePercent(positionInfo.bottom, containerHeight);\n  var width = parsePercent(positionInfo.width, containerWidth);\n  var height = parsePercent(positionInfo.height, containerHeight);\n  var verticalMargin = margin[2] + margin[0];\n  var horizontalMargin = margin[1] + margin[3];\n  var aspect = positionInfo.aspect; // If width is not specified, calculate width from left and right\n\n  if (isNaN(width)) {\n    width = containerWidth - right - horizontalMargin - left;\n  }\n\n  if (isNaN(height)) {\n    height = containerHeight - bottom - verticalMargin - top;\n  }\n\n  if (aspect != null) {\n    // If width and height are not given\n    // 1. Graph should not exceeds the container\n    // 2. Aspect must be keeped\n    // 3. Graph should take the space as more as possible\n    // FIXME\n    // Margin is not considered, because there is no case that both\n    // using margin and aspect so far.\n    if (isNaN(width) && isNaN(height)) {\n      if (aspect > containerWidth / containerHeight) {\n        width = containerWidth * 0.8;\n      } else {\n        height = containerHeight * 0.8;\n      }\n    } // Calculate width or height with given aspect\n\n\n    if (isNaN(width)) {\n      width = aspect * height;\n    }\n\n    if (isNaN(height)) {\n      height = width / aspect;\n    }\n  } // If left is not specified, calculate left from right and width\n\n\n  if (isNaN(left)) {\n    left = containerWidth - right - width - horizontalMargin;\n  }\n\n  if (isNaN(top)) {\n    top = containerHeight - bottom - height - verticalMargin;\n  } // Align left and top\n\n\n  switch (positionInfo.left || positionInfo.right) {\n    case 'center':\n      left = containerWidth / 2 - width / 2 - margin[3];\n      break;\n\n    case 'right':\n      left = containerWidth - width - horizontalMargin;\n      break;\n  }\n\n  switch (positionInfo.top || positionInfo.bottom) {\n    case 'middle':\n    case 'center':\n      top = containerHeight / 2 - height / 2 - margin[0];\n      break;\n\n    case 'bottom':\n      top = containerHeight - height - verticalMargin;\n      break;\n  } // If something is wrong and left, top, width, height are calculated as NaN\n\n\n  left = left || 0;\n  top = top || 0;\n\n  if (isNaN(width)) {\n    // Width may be NaN if only one value is given except width\n    width = containerWidth - horizontalMargin - left - (right || 0);\n  }\n\n  if (isNaN(height)) {\n    // Height may be NaN if only one value is given except height\n    height = containerHeight - verticalMargin - top - (bottom || 0);\n  }\n\n  var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n  rect.margin = margin;\n  return rect;\n}\n/**\n * Position a zr element in viewport\n *  Group position is specified by either\n *  {left, top}, {right, bottom}\n *  If all properties exists, right and bottom will be igonred.\n *\n * Logic:\n *     1. Scale (against origin point in parent coord)\n *     2. Rotate (against origin point in parent coord)\n *     3. Traslate (with el.position by this method)\n * So this method only fixes the last step 'Traslate', which does not affect\n * scaling and rotating.\n *\n * If be called repeatly with the same input el, the same result will be gotten.\n *\n * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width] Only for opt.boundingModel: 'raw'\n * @param {number|string} [positionInfo.height] Only for opt.boundingModel: 'raw'\n * @param {Object} containerRect\n * @param {string|number} margin\n * @param {Object} [opt]\n * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n * @param {Array.<number>} [opt.boundingMode='all']\n *        Specify how to calculate boundingRect when locating.\n *        'all': Position the boundingRect that is transformed and uioned\n *               both itself and its descendants.\n *               This mode simplies confine the elements in the bounding\n *               of their container (e.g., using 'right: 0').\n *        'raw': Position the boundingRect that is not transformed and only itself.\n *               This mode is useful when you want a element can overflow its\n *               container. (Consider a rotated circle needs to be located in a corner.)\n *               In this mode positionInfo.width/height can only be number.\n */\n\n\nfunction positionElement(el, positionInfo, containerRect, margin, opt) {\n  var h = !opt || !opt.hv || opt.hv[0];\n  var v = !opt || !opt.hv || opt.hv[1];\n  var boundingMode = opt && opt.boundingMode || 'all';\n\n  if (!h && !v) {\n    return;\n  }\n\n  var rect;\n\n  if (boundingMode === 'raw') {\n    rect = el.type === 'group' ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0) : el.getBoundingRect();\n  } else {\n    rect = el.getBoundingRect();\n\n    if (el.needLocalTransform()) {\n      var transform = el.getLocalTransform(); // Notice: raw rect may be inner object of el,\n      // which should not be modified.\n\n      rect = rect.clone();\n      rect.applyTransform(transform);\n    }\n  } // The real width and height can not be specified but calculated by the given el.\n\n\n  positionInfo = getLayoutRect(zrUtil.defaults({\n    width: rect.width,\n    height: rect.height\n  }, positionInfo), containerRect, margin); // Because 'tranlate' is the last step in transform\n  // (see zrender/core/Transformable#getLocalTransfrom),\n  // we can just only modify el.position to get final result.\n\n  var elPos = el.position;\n  var dx = h ? positionInfo.x - rect.x : 0;\n  var dy = v ? positionInfo.y - rect.y : 0;\n  el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n}\n/**\n * @param {Object} option Contains some of the properties in HV_NAMES.\n * @param {number} hvIdx 0: horizontal; 1: vertical.\n */\n\n\nfunction sizeCalculable(option, hvIdx) {\n  return option[HV_NAMES[hvIdx][0]] != null || option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null;\n}\n/**\n * Consider Case:\n * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n * through setOption or media query, using normal zrUtil.merge will cause\n * {right: 0} does not take effect.\n *\n * @example\n * ComponentModel.extend({\n *     init: function () {\n *         ...\n *         var inputPositionParams = layout.getLayoutParams(option);\n *         this.mergeOption(inputPositionParams);\n *     },\n *     mergeOption: function (newOption) {\n *         newOption && zrUtil.merge(thisOption, newOption, true);\n *         layout.mergeLayoutParam(thisOption, newOption);\n *     }\n * });\n *\n * @param {Object} targetOption\n * @param {Object} newOption\n * @param {Object|string} [opt]\n * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Used for the components\n *  that width (or height) should not be calculated by left and right (or top and bottom).\n */\n\n\nfunction mergeLayoutParam(targetOption, newOption, opt) {\n  !zrUtil.isObject(opt) && (opt = {});\n  var ignoreSize = opt.ignoreSize;\n  !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n  var hResult = merge(HV_NAMES[0], 0);\n  var vResult = merge(HV_NAMES[1], 1);\n  copy(HV_NAMES[0], targetOption, hResult);\n  copy(HV_NAMES[1], targetOption, vResult);\n\n  function merge(names, hvIdx) {\n    var newParams = {};\n    var newValueCount = 0;\n    var merged = {};\n    var mergedValueCount = 0;\n    var enoughParamNumber = 2;\n    each(names, function (name) {\n      merged[name] = targetOption[name];\n    });\n    each(names, function (name) {\n      // Consider case: newOption.width is null, which is\n      // set by user for removing width setting.\n      hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n      hasValue(newParams, name) && newValueCount++;\n      hasValue(merged, name) && mergedValueCount++;\n    });\n\n    if (ignoreSize[hvIdx]) {\n      // Only one of left/right is premitted to exist.\n      if (hasValue(newOption, names[1])) {\n        merged[names[2]] = null;\n      } else if (hasValue(newOption, names[2])) {\n        merged[names[1]] = null;\n      }\n\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // or targetOption: {right: ...} and newOption: {width: ...},\n    // There is no conflict when merged only has params count\n    // little than enoughParamNumber.\n\n\n    if (mergedValueCount === enoughParamNumber || !newValueCount) {\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // Than we can make sure user only want those two, and ignore\n    // all origin params in targetOption.\n    else if (newValueCount >= enoughParamNumber) {\n        return newParams;\n      } else {\n        // Chose another param from targetOption by priority.\n        for (var i = 0; i < names.length; i++) {\n          var name = names[i];\n\n          if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n            newParams[name] = targetOption[name];\n            break;\n          }\n        }\n\n        return newParams;\n      }\n  }\n\n  function hasProp(obj, name) {\n    return obj.hasOwnProperty(name);\n  }\n\n  function hasValue(obj, name) {\n    return obj[name] != null && obj[name] !== 'auto';\n  }\n\n  function copy(names, target, source) {\n    each(names, function (name) {\n      target[name] = source[name];\n    });\n  }\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction getLayoutParams(source) {\n  return copyLayoutParams({}, source);\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction copyLayoutParams(target, source) {\n  source && target && each(LOCATION_PARAMS, function (name) {\n    source.hasOwnProperty(name) && (target[name] = source[name]);\n  });\n  return target;\n}\n\nexports.LOCATION_PARAMS = LOCATION_PARAMS;\nexports.HV_NAMES = HV_NAMES;\nexports.box = box;\nexports.vbox = vbox;\nexports.hbox = hbox;\nexports.getAvailableSize = getAvailableSize;\nexports.getLayoutRect = getLayoutRect;\nexports.positionElement = positionElement;\nexports.sizeCalculable = sizeCalculable;\nexports.mergeLayoutParam = mergeLayoutParam;\nexports.getLayoutParams = getLayoutParams;\nexports.copyLayoutParams = copyLayoutParams;\n\n/***/ }),\n\n/***/ 1040:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1027);\n\nvar Model = __webpack_require__(1038);\n\nvar componentUtil = __webpack_require__(1076);\n\nvar clazzUtil = __webpack_require__(1041);\n\nvar layout = __webpack_require__(1039);\n\nvar boxLayoutMixin = __webpack_require__(1173);\n\n/**\n * Component model\n *\n * @module echarts/model/Component\n */\nvar arrayPush = Array.prototype.push;\n/**\n * @alias module:echarts/model/Component\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {module:echarts/model/Model} ecModel\n */\n\nvar ComponentModel = Model.extend({\n  type: 'component',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  id: '',\n\n  /**\n   * @readOnly\n   */\n  name: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  mainType: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  subType: '',\n\n  /**\n   * @readOnly\n   * @type {number}\n   */\n  componentIndex: 0,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n  ecModel: null,\n\n  /**\n   * key: componentType\n   * value:  Component model list, can not be null.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @readOnly\n   */\n  dependentModels: [],\n\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  uid: null,\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  $constructor: function (option, parentModel, ecModel, extraOpt) {\n    Model.call(this, option, parentModel, ecModel, extraOpt);\n    this.uid = componentUtil.getUID('componentModel');\n  },\n  init: function (option, parentModel, ecModel, extraOpt) {\n    this.mergeDefaultAndTheme(option, ecModel);\n  },\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? layout.getLayoutParams(option) : {};\n    var themeModel = ecModel.getTheme();\n    zrUtil.merge(option, themeModel.get(this.mainType));\n    zrUtil.merge(option, this.getDefaultOption());\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (option, extraOpt) {\n    zrUtil.merge(this.option, option, true);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(this.option, option, layoutMode);\n    }\n  },\n  // Hooker after init or mergeOption\n  optionUpdated: function (newCptOption, isInit) {},\n  getDefaultOption: function () {\n    if (!clazzUtil.hasOwn(this, '__defaultOption')) {\n      var optList = [];\n      var Class = this.constructor;\n\n      while (Class) {\n        var opt = Class.prototype.defaultOption;\n        opt && optList.push(opt);\n        Class = Class.superClass;\n      }\n\n      var defaultOption = {};\n\n      for (var i = optList.length - 1; i >= 0; i--) {\n        defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n      }\n\n      clazzUtil.set(this, '__defaultOption', defaultOption);\n    }\n\n    return clazzUtil.get(this, '__defaultOption');\n  },\n  getReferringComponents: function (mainType) {\n    return this.ecModel.queryComponents({\n      mainType: mainType,\n      index: this.get(mainType + 'Index', true),\n      id: this.get(mainType + 'Id', true)\n    });\n  }\n}); // Reset ComponentModel.extend, add preConstruct.\n// clazzUtil.enableClassExtend(\n//     ComponentModel,\n//     function (option, parentModel, ecModel, extraOpt) {\n//         // Set dependentModels, componentIndex, name, id, mainType, subType.\n//         zrUtil.extend(this, extraOpt);\n//         this.uid = componentUtil.getUID('componentModel');\n//         // this.setReadOnly([\n//         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n//         //     'dependentModels', 'componentIndex'\n//         // ]);\n//     }\n// );\n// Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(ComponentModel, {\n  registerWhenExtend: true\n});\ncomponentUtil.enableSubTypeDefaulter(ComponentModel); // Add capability of ComponentModel.topologicalTravel.\n\ncomponentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\nfunction getDependencies(componentType) {\n  var deps = [];\n  zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n    arrayPush.apply(deps, Clazz.prototype.dependencies || []);\n  }); // Ensure main type\n\n  return zrUtil.map(deps, function (type) {\n    return clazzUtil.parseClassType(type).main;\n  });\n}\n\nzrUtil.mixin(ComponentModel, boxLayoutMixin);\nvar _default = ComponentModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1041:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(1032);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(1027);\n\nvar TYPE_DELIMITER = '.';\nvar IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\nvar MEMBER_PRIFIX = '\\0ec_\\0';\n/**\n * Hide private class member.\n * The same behavior as `host[name] = value;` (can be right-value)\n * @public\n */\n\nfunction set(host, name, value) {\n  return host[MEMBER_PRIFIX + name] = value;\n}\n/**\n * Hide private class member.\n * The same behavior as `host[name];`\n * @public\n */\n\n\nfunction get(host, name) {\n  return host[MEMBER_PRIFIX + name];\n}\n/**\n * For hidden private class member.\n * The same behavior as `host.hasOwnProperty(name);`\n * @public\n */\n\n\nfunction hasOwn(host, name) {\n  return host.hasOwnProperty(MEMBER_PRIFIX + name);\n}\n/**\n * Notice, parseClassType('') should returns {main: '', sub: ''}\n * @public\n */\n\n\nfunction parseClassType(componentType) {\n  var ret = {\n    main: '',\n    sub: ''\n  };\n\n  if (componentType) {\n    componentType = componentType.split(TYPE_DELIMITER);\n    ret.main = componentType[0] || '';\n    ret.sub = componentType[1] || '';\n  }\n\n  return ret;\n}\n/**\n * @public\n */\n\n\nfunction checkClassType(componentType) {\n  zrUtil.assert(/^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType), 'componentType \"' + componentType + '\" illegal');\n}\n/**\n * @public\n */\n\n\nfunction enableClassExtend(RootClass, mandatoryMethods) {\n  RootClass.$constructor = RootClass;\n\n  RootClass.extend = function (proto) {\n    var superClass = this;\n\n    var ExtendedClass = function () {\n      if (!proto.$constructor) {\n        superClass.apply(this, arguments);\n      } else {\n        proto.$constructor.apply(this, arguments);\n      }\n    };\n\n    zrUtil.extend(ExtendedClass.prototype, proto);\n    ExtendedClass.extend = this.extend;\n    ExtendedClass.superCall = superCall;\n    ExtendedClass.superApply = superApply;\n    zrUtil.inherits(ExtendedClass, this);\n    ExtendedClass.superClass = superClass;\n    return ExtendedClass;\n  };\n} // superCall should have class info, which can not be fetch from 'this'.\n// Consider this case:\n// class A has method f,\n// class B inherits class A, overrides method f, f call superApply('f'),\n// class C inherits class B, do not overrides method f,\n// then when method of class C is called, dead loop occured.\n\n\nfunction superCall(context, methodName) {\n  var args = zrUtil.slice(arguments, 2);\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n\nfunction superApply(context, methodName, args) {\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n/**\n * @param {Object} entity\n * @param {Object} options\n * @param {boolean} [options.registerWhenExtend]\n * @public\n */\n\n\nfunction enableClassManagement(entity, options) {\n  options = options || {};\n  /**\n   * Component model classes\n   * key: componentType,\n   * value:\n   *     componentClass, when componentType is 'xxx'\n   *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n   * @type {Object}\n   */\n\n  var storage = {};\n\n  entity.registerClass = function (Clazz, componentType) {\n    if (componentType) {\n      checkClassType(componentType);\n      componentType = parseClassType(componentType);\n\n      if (!componentType.sub) {\n        storage[componentType.main] = Clazz;\n      } else if (componentType.sub !== IS_CONTAINER) {\n        var container = makeContainer(componentType);\n        container[componentType.sub] = Clazz;\n      }\n    }\n\n    return Clazz;\n  };\n\n  entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n    var Clazz = storage[componentMainType];\n\n    if (Clazz && Clazz[IS_CONTAINER]) {\n      Clazz = subType ? Clazz[subType] : null;\n    }\n\n    if (throwWhenNotFound && !Clazz) {\n      throw new Error(!subType ? componentMainType + '.' + 'type should be specified.' : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.');\n    }\n\n    return Clazz;\n  };\n\n  entity.getClassesByMainType = function (componentType) {\n    componentType = parseClassType(componentType);\n    var result = [];\n    var obj = storage[componentType.main];\n\n    if (obj && obj[IS_CONTAINER]) {\n      zrUtil.each(obj, function (o, type) {\n        type !== IS_CONTAINER && result.push(o);\n      });\n    } else {\n      result.push(obj);\n    }\n\n    return result;\n  };\n\n  entity.hasClass = function (componentType) {\n    // Just consider componentType.main.\n    componentType = parseClassType(componentType);\n    return !!storage[componentType.main];\n  };\n  /**\n   * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n   */\n\n\n  entity.getAllClassMainTypes = function () {\n    var types = [];\n    zrUtil.each(storage, function (obj, type) {\n      types.push(type);\n    });\n    return types;\n  };\n  /**\n   * If a main type is container and has sub types\n   * @param  {string}  mainType\n   * @return {boolean}\n   */\n\n\n  entity.hasSubTypes = function (componentType) {\n    componentType = parseClassType(componentType);\n    var obj = storage[componentType.main];\n    return obj && obj[IS_CONTAINER];\n  };\n\n  entity.parseClassType = parseClassType;\n\n  function makeContainer(componentType) {\n    var container = storage[componentType.main];\n\n    if (!container || !container[IS_CONTAINER]) {\n      container = storage[componentType.main] = {};\n      container[IS_CONTAINER] = true;\n    }\n\n    return container;\n  }\n\n  if (options.registerWhenExtend) {\n    var originalExtend = entity.extend;\n\n    if (originalExtend) {\n      entity.extend = function (proto) {\n        var ExtendedClass = originalExtend.call(this, proto);\n        return entity.registerClass(ExtendedClass, proto.type);\n      };\n    }\n  }\n\n  return entity;\n}\n/**\n * @param {string|Array.<string>} properties\n */\n\n\nfunction setReadOnly(obj, properties) {// FIXME It seems broken in IE8 simulation of IE11\n  // if (!zrUtil.isArray(properties)) {\n  //     properties = properties != null ? [properties] : [];\n  // }\n  // zrUtil.each(properties, function (prop) {\n  //     var value = obj[prop];\n  //     Object.defineProperty\n  //         && Object.defineProperty(obj, prop, {\n  //             value: value, writable: false\n  //         });\n  //     zrUtil.isArray(obj[prop])\n  //         && Object.freeze\n  //         && Object.freeze(obj[prop]);\n  // });\n}\n\nexports.set = set;\nexports.get = get;\nexports.hasOwn = hasOwn;\nexports.parseClassType = parseClassType;\nexports.enableClassExtend = enableClassExtend;\nexports.enableClassManagement = enableClassManagement;\nexports.setReadOnly = setReadOnly;\n\n/***/ }),\n\n/***/ 1042:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar BoundingRect = __webpack_require__(1036);\n\nvar imageHelper = __webpack_require__(1075);\n\nvar _util = __webpack_require__(1027);\n\nvar getContext = _util.getContext;\nvar extend = _util.extend;\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar textWidthCache = {};\nvar textWidthCacheCounter = 0;\nvar TEXT_CACHE_MAX = 5000;\nvar STYLE_REG = /\\{([a-zA-Z0-9_]+)\\|([^}]*)\\}/g;\nvar DEFAULT_FONT = '12px sans-serif'; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  methods[name] = fn;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {number} width\n */\n\n\nfunction getWidth(text, font) {\n  font = font || DEFAULT_FONT;\n  var key = text + ':' + font;\n\n  if (textWidthCache[key]) {\n    return textWidthCache[key];\n  }\n\n  var textLines = (text + '').split('\\n');\n  var width = 0;\n\n  for (var i = 0, l = textLines.length; i < l; i++) {\n    // textContain.measureText may be overrided in SVG or VML\n    width = Math.max(measureText(textLines[i], font).width, width);\n  }\n\n  if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n    textWidthCacheCounter = 0;\n    textWidthCache = {};\n  }\n\n  textWidthCacheCounter++;\n  textWidthCache[key] = width;\n  return width;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {string} [textAlign='left']\n * @param {string} [textVerticalAlign='top']\n * @param {Array.<number>} [textPadding]\n * @param {Object} [rich]\n * @param {Object} [truncate]\n * @return {Object} {x, y, width, height, lineHeight}\n */\n\n\nfunction getBoundingRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  return rich ? getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) : getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate);\n}\n\nfunction getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate) {\n  var contentBlock = parsePlainText(text, font, textPadding, truncate);\n  var outerWidth = getWidth(text, font);\n\n  if (textPadding) {\n    outerWidth += textPadding[1] + textPadding[3];\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  var rect = new BoundingRect(x, y, outerWidth, outerHeight);\n  rect.lineHeight = contentBlock.lineHeight;\n  return rect;\n}\n\nfunction getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  var contentBlock = parseRichText(text, {\n    rich: rich,\n    truncate: truncate,\n    font: font,\n    textAlign: textAlign,\n    textPadding: textPadding\n  });\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  return new BoundingRect(x, y, outerWidth, outerHeight);\n}\n/**\n * @public\n * @param {number} x\n * @param {number} width\n * @param {string} [textAlign='left']\n * @return {number} Adjusted x.\n */\n\n\nfunction adjustTextX(x, width, textAlign) {\n  // FIXME Right to left language\n  if (textAlign === 'right') {\n    x -= width;\n  } else if (textAlign === 'center') {\n    x -= width / 2;\n  }\n\n  return x;\n}\n/**\n * @public\n * @param {number} y\n * @param {number} height\n * @param {string} [textVerticalAlign='top']\n * @return {number} Adjusted y.\n */\n\n\nfunction adjustTextY(y, height, textVerticalAlign) {\n  if (textVerticalAlign === 'middle') {\n    y -= height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y -= height;\n  }\n\n  return y;\n}\n/**\n * @public\n * @param {stirng} textPosition\n * @param {Object} rect {x, y, width, height}\n * @param {number} distance\n * @return {Object} {x, y, textAlign, textVerticalAlign}\n */\n\n\nfunction adjustTextPositionOnRect(textPosition, rect, distance) {\n  var x = rect.x;\n  var y = rect.y;\n  var height = rect.height;\n  var width = rect.width;\n  var halfHeight = height / 2;\n  var textAlign = 'left';\n  var textVerticalAlign = 'top';\n\n  switch (textPosition) {\n    case 'left':\n      x -= distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'right':\n      x += distance + width;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'top':\n      x += width / 2;\n      y -= distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'bottom':\n      x += width / 2;\n      y += height + distance;\n      textAlign = 'center';\n      break;\n\n    case 'inside':\n      x += width / 2;\n      y += halfHeight;\n      textAlign = 'center';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideLeft':\n      x += distance;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideRight':\n      x += width - distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideTop':\n      x += width / 2;\n      y += distance;\n      textAlign = 'center';\n      break;\n\n    case 'insideBottom':\n      x += width / 2;\n      y += height - distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideTopLeft':\n      x += distance;\n      y += distance;\n      break;\n\n    case 'insideTopRight':\n      x += width - distance;\n      y += distance;\n      textAlign = 'right';\n      break;\n\n    case 'insideBottomLeft':\n      x += distance;\n      y += height - distance;\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideBottomRight':\n      x += width - distance;\n      y += height - distance;\n      textAlign = 'right';\n      textVerticalAlign = 'bottom';\n      break;\n  }\n\n  return {\n    x: x,\n    y: y,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n/**\n * Show ellipsis if overflow.\n *\n * @public\n * @param  {string} text\n * @param  {string} containerWidth\n * @param  {string} font\n * @param  {number} [ellipsis='...']\n * @param  {Object} [options]\n * @param  {number} [options.maxIterations=3]\n * @param  {number} [options.minChar=0] If truncate result are less\n *                  then minChar, ellipsis will not show, which is\n *                  better for user hint in some cases.\n * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n * @return {string}\n */\n\n\nfunction truncateText(text, containerWidth, font, ellipsis, options) {\n  if (!containerWidth) {\n    return '';\n  }\n\n  var textLines = (text + '').split('\\n');\n  options = prepareTruncateOptions(containerWidth, font, ellipsis, options); // FIXME\n  // It is not appropriate that every line has '...' when truncate multiple lines.\n\n  for (var i = 0, len = textLines.length; i < len; i++) {\n    textLines[i] = truncateSingleLine(textLines[i], options);\n  }\n\n  return textLines.join('\\n');\n}\n\nfunction prepareTruncateOptions(containerWidth, font, ellipsis, options) {\n  options = extend({}, options);\n  options.font = font;\n  var ellipsis = retrieve2(ellipsis, '...');\n  options.maxIterations = retrieve2(options.maxIterations, 2);\n  var minChar = options.minChar = retrieve2(options.minChar, 0); // FIXME\n  // Other languages?\n\n  options.cnCharWidth = getWidth('国', font); // FIXME\n  // Consider proportional font?\n\n  var ascCharWidth = options.ascCharWidth = getWidth('a', font);\n  options.placeholder = retrieve2(options.placeholder, ''); // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n  // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n\n  var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n\n  for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n    contentWidth -= ascCharWidth;\n  }\n\n  var ellipsisWidth = getWidth(ellipsis);\n\n  if (ellipsisWidth > contentWidth) {\n    ellipsis = '';\n    ellipsisWidth = 0;\n  }\n\n  contentWidth = containerWidth - ellipsisWidth;\n  options.ellipsis = ellipsis;\n  options.ellipsisWidth = ellipsisWidth;\n  options.contentWidth = contentWidth;\n  options.containerWidth = containerWidth;\n  return options;\n}\n\nfunction truncateSingleLine(textLine, options) {\n  var containerWidth = options.containerWidth;\n  var font = options.font;\n  var contentWidth = options.contentWidth;\n\n  if (!containerWidth) {\n    return '';\n  }\n\n  var lineWidth = getWidth(textLine, font);\n\n  if (lineWidth <= containerWidth) {\n    return textLine;\n  }\n\n  for (var j = 0;; j++) {\n    if (lineWidth <= contentWidth || j >= options.maxIterations) {\n      textLine += options.ellipsis;\n      break;\n    }\n\n    var subLength = j === 0 ? estimateLength(textLine, contentWidth, options.ascCharWidth, options.cnCharWidth) : lineWidth > 0 ? Math.floor(textLine.length * contentWidth / lineWidth) : 0;\n    textLine = textLine.substr(0, subLength);\n    lineWidth = getWidth(textLine, font);\n  }\n\n  if (textLine === '') {\n    textLine = options.placeholder;\n  }\n\n  return textLine;\n}\n\nfunction estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n  var width = 0;\n  var i = 0;\n\n  for (var len = text.length; i < len && width < contentWidth; i++) {\n    var charCode = text.charCodeAt(i);\n    width += 0 <= charCode && charCode <= 127 ? ascCharWidth : cnCharWidth;\n  }\n\n  return i;\n}\n/**\n * @public\n * @param {string} font\n * @return {number} line height\n */\n\n\nfunction getLineHeight(font) {\n  // FIXME A rough approach.\n  return getWidth('国', font);\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {Object} width\n */\n\n\nfunction measureText(text, font) {\n  return methods.measureText(text, font);\n} // Avoid assign to an exported variable, for transforming to cjs.\n\n\nmethods.measureText = function (text, font) {\n  var ctx = getContext();\n  ctx.font = font || DEFAULT_FONT;\n  return ctx.measureText(text);\n};\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {Object} [truncate]\n * @return {Object} block: {lineHeight, lines, height, outerHeight}\n *  Notice: for performance, do not calculate outerWidth util needed.\n */\n\n\nfunction parsePlainText(text, font, padding, truncate) {\n  text != null && (text += '');\n  var lineHeight = getLineHeight(font);\n  var lines = text ? text.split('\\n') : [];\n  var height = lines.length * lineHeight;\n  var outerHeight = height;\n\n  if (padding) {\n    outerHeight += padding[0] + padding[2];\n  }\n\n  if (text && truncate) {\n    var truncOuterHeight = truncate.outerHeight;\n    var truncOuterWidth = truncate.outerWidth;\n\n    if (truncOuterHeight != null && outerHeight > truncOuterHeight) {\n      text = '';\n      lines = [];\n    } else if (truncOuterWidth != null) {\n      var options = prepareTruncateOptions(truncOuterWidth - (padding ? padding[1] + padding[3] : 0), font, truncate.ellipsis, {\n        minChar: truncate.minChar,\n        placeholder: truncate.placeholder\n      }); // FIXME\n      // It is not appropriate that every line has '...' when truncate multiple lines.\n\n      for (var i = 0, len = lines.length; i < len; i++) {\n        lines[i] = truncateSingleLine(lines[i], options);\n      }\n    }\n  }\n\n  return {\n    lines: lines,\n    height: height,\n    outerHeight: outerHeight,\n    lineHeight: lineHeight\n  };\n}\n/**\n * For example: 'some text {a|some text}other text{b|some text}xxx{c|}xxx'\n * Also consider 'bbbb{a|xxx\\nzzz}xxxx\\naaaa'.\n *\n * @public\n * @param {string} text\n * @param {Object} style\n * @return {Object} block\n * {\n *      width,\n *      height,\n *      lines: [{\n *          lineHeight,\n *          width,\n *          tokens: [[{\n *              styleName,\n *              text,\n *              width,      // include textPadding\n *              height,     // include textPadding\n *              textWidth, // pure text width\n *              textHeight, // pure text height\n *              lineHeihgt,\n *              font,\n *              textAlign,\n *              textVerticalAlign\n *          }], [...], ...]\n *      }, ...]\n * }\n * If styleName is undefined, it is plain text.\n */\n\n\nfunction parseRichText(text, style) {\n  var contentBlock = {\n    lines: [],\n    width: 0,\n    height: 0\n  };\n  text != null && (text += '');\n\n  if (!text) {\n    return contentBlock;\n  }\n\n  var lastIndex = STYLE_REG.lastIndex = 0;\n  var result;\n\n  while ((result = STYLE_REG.exec(text)) != null) {\n    var matchedIndex = result.index;\n\n    if (matchedIndex > lastIndex) {\n      pushTokens(contentBlock, text.substring(lastIndex, matchedIndex));\n    }\n\n    pushTokens(contentBlock, result[2], result[1]);\n    lastIndex = STYLE_REG.lastIndex;\n  }\n\n  if (lastIndex < text.length) {\n    pushTokens(contentBlock, text.substring(lastIndex, text.length));\n  }\n\n  var lines = contentBlock.lines;\n  var contentHeight = 0;\n  var contentWidth = 0; // For `textWidth: 100%`\n\n  var pendingList = [];\n  var stlPadding = style.textPadding;\n  var truncate = style.truncate;\n  var truncateWidth = truncate && truncate.outerWidth;\n  var truncateHeight = truncate && truncate.outerHeight;\n\n  if (stlPadding) {\n    truncateWidth != null && (truncateWidth -= stlPadding[1] + stlPadding[3]);\n    truncateHeight != null && (truncateHeight -= stlPadding[0] + stlPadding[2]);\n  } // Calculate layout info of tokens.\n\n\n  for (var i = 0; i < lines.length; i++) {\n    var line = lines[i];\n    var lineHeight = 0;\n    var lineWidth = 0;\n\n    for (var j = 0; j < line.tokens.length; j++) {\n      var token = line.tokens[j];\n      var tokenStyle = token.styleName && style.rich[token.styleName] || {}; // textPadding should not inherit from style.\n\n      var textPadding = token.textPadding = tokenStyle.textPadding; // textFont has been asigned to font by `normalizeStyle`.\n\n      var font = token.font = tokenStyle.font || style.font; // textHeight can be used when textVerticalAlign is specified in token.\n\n      var tokenHeight = token.textHeight = retrieve2( // textHeight should not be inherited, consider it can be specified\n      // as box height of the block.\n      tokenStyle.textHeight, getLineHeight(font));\n      textPadding && (tokenHeight += textPadding[0] + textPadding[2]);\n      token.height = tokenHeight;\n      token.lineHeight = retrieve3(tokenStyle.textLineHeight, style.textLineHeight, tokenHeight);\n      token.textAlign = tokenStyle && tokenStyle.textAlign || style.textAlign;\n      token.textVerticalAlign = tokenStyle && tokenStyle.textVerticalAlign || 'middle';\n\n      if (truncateHeight != null && contentHeight + token.lineHeight > truncateHeight) {\n        return {\n          lines: [],\n          width: 0,\n          height: 0\n        };\n      }\n\n      token.textWidth = getWidth(token.text, font);\n      var tokenWidth = tokenStyle.textWidth;\n      var tokenWidthNotSpecified = tokenWidth == null || tokenWidth === 'auto'; // Percent width, can be `100%`, can be used in drawing separate\n      // line when box width is needed to be auto.\n\n      if (typeof tokenWidth === 'string' && tokenWidth.charAt(tokenWidth.length - 1) === '%') {\n        token.percentWidth = tokenWidth;\n        pendingList.push(token);\n        tokenWidth = 0; // Do not truncate in this case, because there is no user case\n        // and it is too complicated.\n      } else {\n        if (tokenWidthNotSpecified) {\n          tokenWidth = token.textWidth; // FIXME: If image is not loaded and textWidth is not specified, calling\n          // `getBoundingRect()` will not get correct result.\n\n          var textBackgroundColor = tokenStyle.textBackgroundColor;\n          var bgImg = textBackgroundColor && textBackgroundColor.image; // Use cases:\n          // (1) If image is not loaded, it will be loaded at render phase and call\n          // `dirty()` and `textBackgroundColor.image` will be replaced with the loaded\n          // image, and then the right size will be calculated here at the next tick.\n          // See `graphic/helper/text.js`.\n          // (2) If image loaded, and `textBackgroundColor.image` is image src string,\n          // use `imageHelper.findExistImage` to find cached image.\n          // `imageHelper.findExistImage` will always be called here before\n          // `imageHelper.createOrUpdateImage` in `graphic/helper/text.js#renderRichText`\n          // which ensures that image will not be rendered before correct size calcualted.\n\n          if (bgImg) {\n            bgImg = imageHelper.findExistImage(bgImg);\n\n            if (imageHelper.isImageReady(bgImg)) {\n              tokenWidth = Math.max(tokenWidth, bgImg.width * tokenHeight / bgImg.height);\n            }\n          }\n        }\n\n        var paddingW = textPadding ? textPadding[1] + textPadding[3] : 0;\n        tokenWidth += paddingW;\n        var remianTruncWidth = truncateWidth != null ? truncateWidth - lineWidth : null;\n\n        if (remianTruncWidth != null && remianTruncWidth < tokenWidth) {\n          if (!tokenWidthNotSpecified || remianTruncWidth < paddingW) {\n            token.text = '';\n            token.textWidth = tokenWidth = 0;\n          } else {\n            token.text = truncateText(token.text, remianTruncWidth - paddingW, font, truncate.ellipsis, {\n              minChar: truncate.minChar\n            });\n            token.textWidth = getWidth(token.text, font);\n            tokenWidth = token.textWidth + paddingW;\n          }\n        }\n      }\n\n      lineWidth += token.width = tokenWidth;\n      tokenStyle && (lineHeight = Math.max(lineHeight, token.lineHeight));\n    }\n\n    line.width = lineWidth;\n    line.lineHeight = lineHeight;\n    contentHeight += lineHeight;\n    contentWidth = Math.max(contentWidth, lineWidth);\n  }\n\n  contentBlock.outerWidth = contentBlock.width = retrieve2(style.textWidth, contentWidth);\n  contentBlock.outerHeight = contentBlock.height = retrieve2(style.textHeight, contentHeight);\n\n  if (stlPadding) {\n    contentBlock.outerWidth += stlPadding[1] + stlPadding[3];\n    contentBlock.outerHeight += stlPadding[0] + stlPadding[2];\n  }\n\n  for (var i = 0; i < pendingList.length; i++) {\n    var token = pendingList[i];\n    var percentWidth = token.percentWidth; // Should not base on outerWidth, because token can not be placed out of padding.\n\n    token.width = parseInt(percentWidth, 10) / 100 * contentWidth;\n  }\n\n  return contentBlock;\n}\n\nfunction pushTokens(block, str, styleName) {\n  var isEmptyStr = str === '';\n  var strs = str.split('\\n');\n  var lines = block.lines;\n\n  for (var i = 0; i < strs.length; i++) {\n    var text = strs[i];\n    var token = {\n      styleName: styleName,\n      text: text,\n      isLineHolder: !text && !isEmptyStr\n    }; // The first token should be appended to the last line.\n\n    if (!i) {\n      var tokens = (lines[lines.length - 1] || (lines[0] = {\n        tokens: []\n      })).tokens; // Consider cases:\n      // (1) ''.split('\\n') => ['', '\\n', ''], the '' at the first item\n      // (which is a placeholder) should be replaced by new token.\n      // (2) A image backage, where token likes {a|}.\n      // (3) A redundant '' will affect textAlign in line.\n      // (4) tokens with the same tplName should not be merged, because\n      // they should be displayed in different box (with border and padding).\n\n      var tokensLen = tokens.length;\n      tokensLen === 1 && tokens[0].isLineHolder ? tokens[0] = token : // Consider text is '', only insert when it is the \"lineHolder\" or\n      // \"emptyStr\". Otherwise a redundant '' will affect textAlign in line.\n      (text || !tokensLen || isEmptyStr) && tokens.push(token);\n    } // Other tokens always start a new line.\n    else {\n        // If there is '', insert it as a placeholder.\n        lines.push({\n          tokens: [token]\n        });\n      }\n  }\n}\n\nfunction makeFont(style) {\n  // FIXME in node-canvas fontWeight is before fontStyle\n  // Use `fontSize` `fontFamily` to check whether font properties are defined.\n  return (style.fontSize || style.fontFamily) && [style.fontStyle, style.fontWeight, (style.fontSize || 12) + 'px', // If font properties are defined, `fontFamily` should not be ignored.\n  style.fontFamily || 'sans-serif'].join(' ') || style.textFont || style.font;\n}\n\nexports.DEFAULT_FONT = DEFAULT_FONT;\nexports.$override = $override;\nexports.getWidth = getWidth;\nexports.getBoundingRect = getBoundingRect;\nexports.adjustTextX = adjustTextX;\nexports.adjustTextY = adjustTextY;\nexports.adjustTextPositionOnRect = adjustTextPositionOnRect;\nexports.truncateText = truncateText;\nexports.getLineHeight = getLineHeight;\nexports.measureText = measureText;\nexports.parsePlainText = parsePlainText;\nexports.parseRichText = parseRichText;\nexports.makeFont = makeFont;\n\n/***/ }),\n\n/***/ 1043:\n/***/ (function(module, exports) {\n\n/**\n * 3x2矩阵操作类\n * @exports zrender/tool/matrix\n */\nvar ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * 创建一个单位矩阵\n * @return {Float32Array|Array.<number>}\n */\n\nfunction create() {\n  var out = new ArrayCtor(6);\n  identity(out);\n  return out;\n}\n/**\n * 设置矩阵为单位矩阵\n * @param {Float32Array|Array.<number>} out\n */\n\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * 复制矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m\n */\n\n\nfunction copy(out, m) {\n  out[0] = m[0];\n  out[1] = m[1];\n  out[2] = m[2];\n  out[3] = m[3];\n  out[4] = m[4];\n  out[5] = m[5];\n  return out;\n}\n/**\n * 矩阵相乘\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m1\n * @param {Float32Array|Array.<number>} m2\n */\n\n\nfunction mul(out, m1, m2) {\n  // Consider matrix.mul(m, m2, m);\n  // where out is the same as m2.\n  // So use temp variable to escape error.\n  var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n  var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n  var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n  var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n  var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n  var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = out3;\n  out[4] = out4;\n  out[5] = out5;\n  return out;\n}\n/**\n * 平移变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction translate(out, a, v) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4] + v[0];\n  out[5] = a[5] + v[1];\n  return out;\n}\n/**\n * 旋转变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {number} rad\n */\n\n\nfunction rotate(out, a, rad) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var st = Math.sin(rad);\n  var ct = Math.cos(rad);\n  out[0] = aa * ct + ab * st;\n  out[1] = -aa * st + ab * ct;\n  out[2] = ac * ct + ad * st;\n  out[3] = -ac * st + ct * ad;\n  out[4] = ct * atx + st * aty;\n  out[5] = ct * aty - st * atx;\n  return out;\n}\n/**\n * 缩放变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction scale(out, a, v) {\n  var vx = v[0];\n  var vy = v[1];\n  out[0] = a[0] * vx;\n  out[1] = a[1] * vy;\n  out[2] = a[2] * vx;\n  out[3] = a[3] * vy;\n  out[4] = a[4] * vx;\n  out[5] = a[5] * vy;\n  return out;\n}\n/**\n * 求逆矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n */\n\n\nfunction invert(out, a) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var det = aa * ad - ab * ac;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n\nexports.create = create;\nexports.identity = identity;\nexports.copy = copy;\nexports.mul = mul;\nexports.translate = translate;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.invert = invert;\n\n/***/ }),\n\n/***/ 1044:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {var _config = __webpack_require__(1032);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(1027);\n\nvar Model = __webpack_require__(1038);\n\nvar DataDiffer = __webpack_require__(1062);\n\nvar modelUtil = __webpack_require__(1031);\n\n/**\n * List for data storage\n * @module echarts/data/List\n */\nvar isObject = zrUtil.isObject;\nvar UNDEFINED = 'undefined';\nvar globalObj = typeof window === UNDEFINED ? global : window;\nvar dataCtors = {\n  'float': typeof globalObj.Float64Array === UNDEFINED ? Array : globalObj.Float64Array,\n  'int': typeof globalObj.Int32Array === UNDEFINED ? Array : globalObj.Int32Array,\n  // Ordinal data type can be string or int\n  'ordinal': Array,\n  'number': Array,\n  'time': Array\n};\nvar TRANSFERABLE_PROPERTIES = ['stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'];\n\nfunction transferProperties(a, b) {\n  zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n    if (b.hasOwnProperty(propName)) {\n      a[propName] = b[propName];\n    }\n  });\n  a.__wrappedMethods = b.__wrappedMethods;\n}\n\nfunction DefaultDataProvider(dataArray) {\n  this._array = dataArray || [];\n}\n\nDefaultDataProvider.prototype.pure = false;\n\nDefaultDataProvider.prototype.count = function () {\n  return this._array.length;\n};\n\nDefaultDataProvider.prototype.getItem = function (idx) {\n  return this._array[idx];\n};\n/**\n * @constructor\n * @alias module:echarts/data/List\n *\n * @param {Array.<string|Object>} dimensions\n *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n * @param {module:echarts/model/Model} hostModel\n */\n\n\nvar List = function (dimensions, hostModel) {\n  dimensions = dimensions || ['x', 'y'];\n  var dimensionInfos = {};\n  var dimensionNames = [];\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimensionName;\n    var dimensionInfo = {};\n\n    if (typeof dimensions[i] === 'string') {\n      dimensionName = dimensions[i];\n      dimensionInfo = {\n        name: dimensionName,\n        coordDim: dimensionName,\n        coordDimIndex: 0,\n        stackable: false,\n        // Type can be 'float', 'int', 'number'\n        // Default is number, Precision of float may not enough\n        type: 'number'\n      };\n    } else {\n      dimensionInfo = dimensions[i];\n      dimensionName = dimensionInfo.name;\n      dimensionInfo.type = dimensionInfo.type || 'number';\n\n      if (!dimensionInfo.coordDim) {\n        dimensionInfo.coordDim = dimensionName;\n        dimensionInfo.coordDimIndex = 0;\n      }\n    }\n\n    dimensionInfo.otherDims = dimensionInfo.otherDims || {};\n    dimensionNames.push(dimensionName);\n    dimensionInfos[dimensionName] = dimensionInfo;\n  }\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n\n\n  this.dimensions = dimensionNames;\n  /**\n   * Infomation of each data dimension, like data type.\n   * @type {Object}\n   */\n\n  this._dimensionInfos = dimensionInfos;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.hostModel = hostModel;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.dataType;\n  /**\n   * Indices stores the indices of data subset after filtered.\n   * This data subset will be used in chart.\n   * @type {Array.<number>}\n   * @readOnly\n   */\n\n  this.indices = [];\n  /**\n   * Data storage\n   * @type {Object.<key, TypedArray|Array>}\n   * @private\n   */\n\n  this._storage = {};\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._nameList = [];\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._idList = [];\n  /**\n   * Models of data option is stored sparse for optimizing memory cost\n   * @type {Array.<module:echarts/model/Model>}\n   * @private\n   */\n\n  this._optionModels = [];\n  /**\n   * @param {module:echarts/data/List}\n   */\n\n  this.stackedOn = null;\n  /**\n   * Global visual properties after visual coding\n   * @type {Object}\n   * @private\n   */\n\n  this._visual = {};\n  /**\n   * Globel layout properties.\n   * @type {Object}\n   * @private\n   */\n\n  this._layout = {};\n  /**\n   * Item visual properties after visual coding\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemVisuals = [];\n  /**\n   * Item layout properties after layout\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemLayouts = [];\n  /**\n   * Graphic elemnents\n   * @type {Array.<module:zrender/Element>}\n   * @private\n   */\n\n  this._graphicEls = [];\n  /**\n   * @type {Array.<Array|Object>}\n   * @private\n   */\n\n  this._rawData;\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._extent;\n};\n\nvar listProto = List.prototype;\nlistProto.type = 'list';\n/**\n * If each data item has it's own option\n * @type {boolean}\n */\n\nlistProto.hasItemOption = true;\n/**\n * Get dimension name\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n * @return {string} Concrete dim name.\n */\n\nlistProto.getDimension = function (dim) {\n  if (!isNaN(dim)) {\n    dim = this.dimensions[dim] || dim;\n  }\n\n  return dim;\n};\n/**\n * Get type and stackable info of particular dimension\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n */\n\n\nlistProto.getDimensionInfo = function (dim) {\n  return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);\n};\n/**\n * Initialize from data\n * @param {Array.<Object|number|Array>} data\n * @param {Array.<string>} [nameList]\n * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n */\n\n\nlistProto.initData = function (data, nameList, dimValueGetter) {\n  data = data || [];\n  var isDataArray = zrUtil.isArray(data);\n\n  if (isDataArray) {\n    data = new DefaultDataProvider(data);\n  }\n\n  this._rawData = data; // Clear\n\n  var storage = this._storage = {};\n  var indices = this.indices = [];\n  var dimensions = this.dimensions;\n  var dimensionInfoMap = this._dimensionInfos;\n  var size = data.count();\n  var idList = [];\n  var nameRepeatCount = {};\n  var nameDimIdx;\n  nameList = nameList || []; // Init storage\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimInfo = dimensionInfoMap[dimensions[i]];\n    dimInfo.otherDims.itemName === 0 && (nameDimIdx = i);\n    var DataCtor = dataCtors[dimInfo.type];\n    storage[dimensions[i]] = new DataCtor(size);\n  }\n\n  var self = this;\n\n  if (!dimValueGetter) {\n    self.hasItemOption = false;\n  } // Default dim value getter\n\n\n  dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {\n    var value = modelUtil.getDataItemValue(dataItem); // If any dataItem is like { value: 10 }\n\n    if (modelUtil.isDataItemOption(dataItem)) {\n      self.hasItemOption = true;\n    }\n\n    return modelUtil.converDataValue(value instanceof Array ? value[dimIndex] // If value is a single number or something else not array.\n    : value, dimensionInfoMap[dimName]);\n  };\n\n  for (var i = 0; i < size; i++) {\n    // NOTICE: Try not to write things into dataItem\n    var dataItem = data.getItem(i); // Each data item is value\n    // [1, 2]\n    // 2\n    // Bar chart, line chart which uses category axis\n    // only gives the 'y' value. 'x' value is the indices of cateogry\n    // Use a tempValue to normalize the value to be a (x, y) value\n    // Store the data by dimensions\n\n    for (var k = 0; k < dimensions.length; k++) {\n      var dim = dimensions[k];\n      var dimStorage = storage[dim]; // PENDING NULL is empty or zero\n\n      dimStorage[i] = dimValueGetter(dataItem, dim, i, k);\n    }\n\n    indices.push(i);\n  } // Use the name in option and create id\n\n\n  for (var i = 0; i < size; i++) {\n    var dataItem = data.getItem(i);\n\n    if (!nameList[i] && dataItem) {\n      if (dataItem.name != null) {\n        nameList[i] = dataItem.name;\n      } else if (nameDimIdx != null) {\n        nameList[i] = storage[dimensions[nameDimIdx]][i];\n      }\n    }\n\n    var name = nameList[i] || ''; // Try using the id in option\n\n    var id = dataItem && dataItem.id;\n\n    if (!id && name) {\n      // Use name as id and add counter to avoid same name\n      nameRepeatCount[name] = nameRepeatCount[name] || 0;\n      id = name;\n\n      if (nameRepeatCount[name] > 0) {\n        id += '__ec__' + nameRepeatCount[name];\n      }\n\n      nameRepeatCount[name]++;\n    }\n\n    id && (idList[i] = id);\n  }\n\n  this._nameList = nameList;\n  this._idList = idList;\n};\n/**\n * @return {number}\n */\n\n\nlistProto.count = function () {\n  return this.indices.length;\n};\n/**\n * Get value. Return NaN if idx is out of range.\n * @param {string} dim Dim must be concrete name.\n * @param {number} idx\n * @param {boolean} stack\n * @return {number}\n */\n\n\nlistProto.get = function (dim, idx, stack) {\n  var storage = this._storage;\n  var dataIndex = this.indices[idx]; // If value not exists\n\n  if (dataIndex == null || !storage[dim]) {\n    return NaN;\n  }\n\n  var value = storage[dim][dataIndex]; // FIXME ordinal data type is not stackable\n\n  if (stack) {\n    var dimensionInfo = this._dimensionInfos[dim];\n\n    if (dimensionInfo && dimensionInfo.stackable) {\n      var stackedOn = this.stackedOn;\n\n      while (stackedOn) {\n        // Get no stacked data of stacked on\n        var stackedValue = stackedOn.get(dim, idx); // Considering positive stack, negative stack and empty data\n\n        if (value >= 0 && stackedValue > 0 || // Positive stack\n        value <= 0 && stackedValue < 0 // Negative stack\n        ) {\n            value += stackedValue;\n          }\n\n        stackedOn = stackedOn.stackedOn;\n      }\n    }\n  }\n\n  return value;\n};\n/**\n * Get value for multi dimensions.\n * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n * @param {number} idx\n * @param {boolean} stack\n * @return {number}\n */\n\n\nlistProto.getValues = function (dimensions, idx, stack) {\n  var values = [];\n\n  if (!zrUtil.isArray(dimensions)) {\n    stack = idx;\n    idx = dimensions;\n    dimensions = this.dimensions;\n  }\n\n  for (var i = 0, len = dimensions.length; i < len; i++) {\n    values.push(this.get(dimensions[i], idx, stack));\n  }\n\n  return values;\n};\n/**\n * If value is NaN. Inlcuding '-'\n * @param {string} dim\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.hasValue = function (idx) {\n  var dimensions = this.dimensions;\n  var dimensionInfos = this._dimensionInfos;\n\n  for (var i = 0, len = dimensions.length; i < len; i++) {\n    if ( // Ordinal type can be string or number\n    dimensionInfos[dimensions[i]].type !== 'ordinal' && isNaN(this.get(dimensions[i], idx))) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Get extent of data in one dimension\n * @param {string} dim\n * @param {boolean} stack\n * @param {Function} filter\n */\n\n\nlistProto.getDataExtent = function (dim, stack, filter) {\n  dim = this.getDimension(dim);\n  var dimData = this._storage[dim];\n  var dimInfo = this.getDimensionInfo(dim);\n  stack = dimInfo && dimInfo.stackable && stack;\n  var dimExtent = (this._extent || (this._extent = {}))[dim + !!stack];\n  var value;\n\n  if (dimExtent) {\n    return dimExtent;\n  } // var dimInfo = this._dimensionInfos[dim];\n\n\n  if (dimData) {\n    var min = Infinity;\n    var max = -Infinity; // var isOrdinal = dimInfo.type === 'ordinal';\n\n    for (var i = 0, len = this.count(); i < len; i++) {\n      value = this.get(dim, i, stack); // FIXME\n      // if (isOrdinal && typeof value === 'string') {\n      //     value = zrUtil.indexOf(dimData, value);\n      // }\n\n      if (!filter || filter(value, dim, i)) {\n        value < min && (min = value);\n        value > max && (max = value);\n      }\n    }\n\n    return this._extent[dim + !!stack] = [min, max];\n  } else {\n    return [Infinity, -Infinity];\n  }\n};\n/**\n * Get sum of data in one dimension\n * @param {string} dim\n * @param {boolean} stack\n */\n\n\nlistProto.getSum = function (dim, stack) {\n  var dimData = this._storage[dim];\n  var sum = 0;\n\n  if (dimData) {\n    for (var i = 0, len = this.count(); i < len; i++) {\n      var value = this.get(dim, i, stack);\n\n      if (!isNaN(value)) {\n        sum += value;\n      }\n    }\n  }\n\n  return sum;\n};\n/**\n * Retreive the index with given value\n * @param {number} idx\n * @param {number} value\n * @return {number}\n */\n// FIXME Precision of float value\n\n\nlistProto.indexOf = function (dim, value) {\n  var storage = this._storage;\n  var dimData = storage[dim];\n  var indices = this.indices;\n\n  if (dimData) {\n    for (var i = 0, len = indices.length; i < len; i++) {\n      var rawIndex = indices[i];\n\n      if (dimData[rawIndex] === value) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index with given name\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfName = function (name) {\n  var indices = this.indices;\n  var nameList = this._nameList;\n\n  for (var i = 0, len = indices.length; i < len; i++) {\n    var rawIndex = indices[i];\n\n    if (nameList[rawIndex] === name) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index with given raw data index\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfRawIndex = function (rawIndex) {\n  // Indices are ascending\n  var indices = this.indices; // If rawIndex === dataIndex\n\n  var rawDataIndex = indices[rawIndex];\n\n  if (rawDataIndex != null && rawDataIndex === rawIndex) {\n    return rawIndex;\n  }\n\n  var left = 0;\n  var right = indices.length - 1;\n\n  while (left <= right) {\n    var mid = (left + right) / 2 | 0;\n\n    if (indices[mid] < rawIndex) {\n      left = mid + 1;\n    } else if (indices[mid] > rawIndex) {\n      right = mid - 1;\n    } else {\n      return mid;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index of nearest value\n * @param {string} dim\n * @param {number} value\n * @param {boolean} stack If given value is after stacked\n * @param {number} [maxDistance=Infinity]\n * @return {Array.<number>} Considere multiple points has the same value.\n */\n\n\nlistProto.indicesOfNearest = function (dim, value, stack, maxDistance) {\n  var storage = this._storage;\n  var dimData = storage[dim];\n  var nearestIndices = [];\n\n  if (!dimData) {\n    return nearestIndices;\n  }\n\n  if (maxDistance == null) {\n    maxDistance = Infinity;\n  }\n\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n\n  for (var i = 0, len = this.count(); i < len; i++) {\n    var diff = value - this.get(dim, i, stack);\n    var dist = Math.abs(diff);\n\n    if (diff <= maxDistance && dist <= minDist) {\n      // For the case of two data are same on xAxis, which has sequence data.\n      // Show the nearest index\n      // https://github.com/ecomfe/echarts/issues/2869\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        nearestIndices.length = 0;\n      }\n\n      nearestIndices.push(i);\n    }\n  }\n\n  return nearestIndices;\n};\n/**\n * Get raw data index\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawIndex = function (idx) {\n  var rawIdx = this.indices[idx];\n  return rawIdx == null ? -1 : rawIdx;\n};\n/**\n * Get raw data item\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawDataItem = function (idx) {\n  return this._rawData.getItem(this.getRawIndex(idx));\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getName = function (idx) {\n  return this._nameList[this.indices[idx]] || '';\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getId = function (idx) {\n  return this._idList[this.indices[idx]] || this.getRawIndex(idx) + '';\n};\n\nfunction normalizeDimensions(dimensions) {\n  if (!zrUtil.isArray(dimensions)) {\n    dimensions = [dimensions];\n  }\n\n  return dimensions;\n}\n/**\n * Data iteration\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n *\n * @example\n *  list.each('x', function (x, idx) {});\n *  list.each(['x', 'y'], function (x, y, idx) {});\n *  list.each(function (idx) {})\n */\n\n\nlistProto.each = function (dims, cb, stack, context) {\n  if (typeof dims === 'function') {\n    context = stack;\n    stack = cb;\n    cb = dims;\n    dims = [];\n  }\n\n  dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n  var value = [];\n  var dimSize = dims.length;\n  var indices = this.indices;\n  context = context || this;\n\n  for (var i = 0; i < indices.length; i++) {\n    // Simple optimization\n    switch (dimSize) {\n      case 0:\n        cb.call(context, i);\n        break;\n\n      case 1:\n        cb.call(context, this.get(dims[0], i, stack), i);\n        break;\n\n      case 2:\n        cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n        break;\n\n      default:\n        for (var k = 0; k < dimSize; k++) {\n          value[k] = this.get(dims[k], i, stack);\n        } // Index\n\n\n        value[k] = i;\n        cb.apply(context, value);\n    }\n  }\n};\n/**\n * Data filter\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n */\n\n\nlistProto.filterSelf = function (dimensions, cb, stack, context) {\n  if (typeof dimensions === 'function') {\n    context = stack;\n    stack = cb;\n    cb = dimensions;\n    dimensions = [];\n  }\n\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var newIndices = [];\n  var value = [];\n  var dimSize = dimensions.length;\n  var indices = this.indices;\n  context = context || this;\n\n  for (var i = 0; i < indices.length; i++) {\n    var keep; // Simple optimization\n\n    if (!dimSize) {\n      keep = cb.call(context, i);\n    } else if (dimSize === 1) {\n      keep = cb.call(context, this.get(dimensions[0], i, stack), i);\n    } else {\n      for (var k = 0; k < dimSize; k++) {\n        value[k] = this.get(dimensions[k], i, stack);\n      }\n\n      value[k] = i;\n      keep = cb.apply(context, value);\n    }\n\n    if (keep) {\n      newIndices.push(indices[i]);\n    }\n  }\n\n  this.indices = newIndices; // Reset data extent\n\n  this._extent = {};\n  return this;\n};\n/**\n * Data mapping to a plain array\n * @param {string|Array.<string>} [dimensions]\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.mapArray = function (dimensions, cb, stack, context) {\n  if (typeof dimensions === 'function') {\n    context = stack;\n    stack = cb;\n    cb = dimensions;\n    dimensions = [];\n  }\n\n  var result = [];\n  this.each(dimensions, function () {\n    result.push(cb && cb.apply(this, arguments));\n  }, stack, context);\n  return result;\n};\n\nfunction cloneListForMapAndSample(original, excludeDimensions) {\n  var allDimensions = original.dimensions;\n  var list = new List(zrUtil.map(allDimensions, original.getDimensionInfo, original), original.hostModel); // FIXME If needs stackedOn, value may already been stacked\n\n  transferProperties(list, original);\n  var storage = list._storage = {};\n  var originalStorage = original._storage; // Init storage\n\n  for (var i = 0; i < allDimensions.length; i++) {\n    var dim = allDimensions[i];\n    var dimStore = originalStorage[dim];\n\n    if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n      storage[dim] = new dimStore.constructor(originalStorage[dim].length);\n    } else {\n      // Direct reference for other dimensions\n      storage[dim] = originalStorage[dim];\n    }\n  }\n\n  return list;\n}\n/**\n * Data mapping to a new List with given dimensions\n * @param {string|Array.<string>} dimensions\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.map = function (dimensions, cb, stack, context) {\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var list = cloneListForMapAndSample(this, dimensions); // Following properties are all immutable.\n  // So we can reference to the same value\n\n  var indices = list.indices = this.indices;\n  var storage = list._storage;\n  var tmpRetValue = [];\n  this.each(dimensions, function () {\n    var idx = arguments[arguments.length - 1];\n    var retValue = cb && cb.apply(this, arguments);\n\n    if (retValue != null) {\n      // a number\n      if (typeof retValue === 'number') {\n        tmpRetValue[0] = retValue;\n        retValue = tmpRetValue;\n      }\n\n      for (var i = 0; i < retValue.length; i++) {\n        var dim = dimensions[i];\n        var dimStore = storage[dim];\n        var rawIdx = indices[idx];\n\n        if (dimStore) {\n          dimStore[rawIdx] = retValue[i];\n        }\n      }\n    }\n  }, stack, context);\n  return list;\n};\n/**\n * Large data down sampling on given dimension\n * @param {string} dimension\n * @param {number} rate\n * @param {Function} sampleValue\n * @param {Function} sampleIndex Sample index for name and id\n */\n\n\nlistProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n  var list = cloneListForMapAndSample(this, [dimension]);\n  var storage = this._storage;\n  var targetStorage = list._storage;\n  var originalIndices = this.indices;\n  var indices = list.indices = [];\n  var frameValues = [];\n  var frameIndices = [];\n  var frameSize = Math.floor(1 / rate);\n  var dimStore = targetStorage[dimension];\n  var len = this.count(); // Copy data from original data\n\n  for (var i = 0; i < storage[dimension].length; i++) {\n    targetStorage[dimension][i] = storage[dimension][i];\n  }\n\n  for (var i = 0; i < len; i += frameSize) {\n    // Last frame\n    if (frameSize > len - i) {\n      frameSize = len - i;\n      frameValues.length = frameSize;\n    }\n\n    for (var k = 0; k < frameSize; k++) {\n      var idx = originalIndices[i + k];\n      frameValues[k] = dimStore[idx];\n      frameIndices[k] = idx;\n    }\n\n    var value = sampleValue(frameValues);\n    var idx = frameIndices[sampleIndex(frameValues, value) || 0]; // Only write value on the filtered data\n\n    dimStore[idx] = value;\n    indices.push(idx);\n  }\n\n  return list;\n};\n/**\n * Get model of one data item.\n *\n * @param {number} idx\n */\n// FIXME Model proxy ?\n\n\nlistProto.getItemModel = function (idx) {\n  var hostModel = this.hostModel;\n  idx = this.indices[idx];\n  return new Model(this._rawData.getItem(idx), hostModel, hostModel && hostModel.ecModel);\n};\n/**\n * Create a data differ\n * @param {module:echarts/data/List} otherList\n * @return {module:echarts/data/DataDiffer}\n */\n\n\nlistProto.diff = function (otherList) {\n  var idList = this._idList;\n  var otherIdList = otherList && otherList._idList;\n  var val; // Use prefix to avoid index to be the same as otherIdList[idx],\n  // which will cause weird udpate animation.\n\n  var prefix = 'e\\0\\0';\n  return new DataDiffer(otherList ? otherList.indices : [], this.indices, function (idx) {\n    return (val = otherIdList[idx]) != null ? val : prefix + idx;\n  }, function (idx) {\n    return (val = idList[idx]) != null ? val : prefix + idx;\n  });\n};\n/**\n * Get visual property.\n * @param {string} key\n */\n\n\nlistProto.getVisual = function (key) {\n  var visual = this._visual;\n  return visual && visual[key];\n};\n/**\n * Set visual property\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setVisual('color', color);\n *  setVisual({\n *      'color': color\n *  });\n */\n\n\nlistProto.setVisual = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setVisual(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._visual = this._visual || {};\n  this._visual[key] = val;\n};\n/**\n * Set layout property.\n * @param {string|Object} key\n * @param {*} [val]\n */\n\n\nlistProto.setLayout = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setLayout(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._layout[key] = val;\n};\n/**\n * Get layout property.\n * @param  {string} key.\n * @return {*}\n */\n\n\nlistProto.getLayout = function (key) {\n  return this._layout[key];\n};\n/**\n * Get layout of single data item\n * @param {number} idx\n */\n\n\nlistProto.getItemLayout = function (idx) {\n  return this._itemLayouts[idx];\n};\n/**\n * Set layout of single data item\n * @param {number} idx\n * @param {Object} layout\n * @param {boolean=} [merge=false]\n */\n\n\nlistProto.setItemLayout = function (idx, layout, merge) {\n  this._itemLayouts[idx] = merge ? zrUtil.extend(this._itemLayouts[idx] || {}, layout) : layout;\n};\n/**\n * Clear all layout of single data item\n */\n\n\nlistProto.clearItemLayouts = function () {\n  this._itemLayouts.length = 0;\n};\n/**\n * Get visual property of single data item\n * @param {number} idx\n * @param {string} key\n * @param {boolean} [ignoreParent=false]\n */\n\n\nlistProto.getItemVisual = function (idx, key, ignoreParent) {\n  var itemVisual = this._itemVisuals[idx];\n  var val = itemVisual && itemVisual[key];\n\n  if (val == null && !ignoreParent) {\n    // Use global visual property\n    return this.getVisual(key);\n  }\n\n  return val;\n};\n/**\n * Set visual property of single data item\n *\n * @param {number} idx\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setItemVisual(0, 'color', color);\n *  setItemVisual(0, {\n *      'color': color\n *  });\n */\n\n\nlistProto.setItemVisual = function (idx, key, value) {\n  var itemVisual = this._itemVisuals[idx] || {};\n  this._itemVisuals[idx] = itemVisual;\n\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        itemVisual[name] = key[name];\n      }\n    }\n\n    return;\n  }\n\n  itemVisual[key] = value;\n};\n/**\n * Clear itemVisuals and list visual.\n */\n\n\nlistProto.clearAllVisual = function () {\n  this._visual = {};\n  this._itemVisuals = [];\n};\n\nvar setItemDataAndSeriesIndex = function (child) {\n  child.seriesIndex = this.seriesIndex;\n  child.dataIndex = this.dataIndex;\n  child.dataType = this.dataType;\n};\n/**\n * Set graphic element relative to data. It can be set as null\n * @param {number} idx\n * @param {module:zrender/Element} [el]\n */\n\n\nlistProto.setItemGraphicEl = function (idx, el) {\n  var hostModel = this.hostModel;\n\n  if (el) {\n    // Add data index and series index for indexing the data by element\n    // Useful in tooltip\n    el.dataIndex = idx;\n    el.dataType = this.dataType;\n    el.seriesIndex = hostModel && hostModel.seriesIndex;\n\n    if (el.type === 'group') {\n      el.traverse(setItemDataAndSeriesIndex, el);\n    }\n  }\n\n  this._graphicEls[idx] = el;\n};\n/**\n * @param {number} idx\n * @return {module:zrender/Element}\n */\n\n\nlistProto.getItemGraphicEl = function (idx) {\n  return this._graphicEls[idx];\n};\n/**\n * @param {Function} cb\n * @param {*} context\n */\n\n\nlistProto.eachItemGraphicEl = function (cb, context) {\n  zrUtil.each(this._graphicEls, function (el, idx) {\n    if (el) {\n      cb && cb.call(context, el, idx);\n    }\n  });\n};\n/**\n * Shallow clone a new list except visual and layout properties, and graph elements.\n * New list only change the indices.\n */\n\n\nlistProto.cloneShallow = function () {\n  var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n  var list = new List(dimensionInfoList, this.hostModel); // FIXME\n\n  list._storage = this._storage;\n  transferProperties(list, this); // Clone will not change the data extent and indices\n\n  list.indices = this.indices.slice();\n\n  if (this._extent) {\n    list._extent = zrUtil.extend({}, this._extent);\n  }\n\n  return list;\n};\n/**\n * Wrap some method to add more feature\n * @param {string} methodName\n * @param {Function} injectFunction\n */\n\n\nlistProto.wrapMethod = function (methodName, injectFunction) {\n  var originalMethod = this[methodName];\n\n  if (typeof originalMethod !== 'function') {\n    return;\n  }\n\n  this.__wrappedMethods = this.__wrappedMethods || [];\n\n  this.__wrappedMethods.push(methodName);\n\n  this[methodName] = function () {\n    var res = originalMethod.apply(this, arguments);\n    return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n  };\n}; // Methods that create a new list based on this list should be listed here.\n// Notice that those method should `RETURN` the new list.\n\n\nlistProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map']; // Methods that change indices of this list should be listed here.\n\nlistProto.CHANGABLE_METHODS = ['filterSelf'];\nvar _default = List;\nmodule.exports = _default;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(20)))\n\n/***/ }),\n\n/***/ 1045:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(1032);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(1027);\n\nvar textContain = __webpack_require__(1042);\n\nvar OrdinalScale = __webpack_require__(1182);\n\nvar IntervalScale = __webpack_require__(1069);\n\nvar Scale = __webpack_require__(1063);\n\nvar numberUtil = __webpack_require__(1030);\n\n__webpack_require__(1183);\n\n__webpack_require__(1184);\n\n/**\n * Get axis scale extent before niced.\n * Item of returned array can only be number (including Infinity and NaN).\n */\nfunction getScaleExtent(scale, model) {\n  var scaleType = scale.type;\n  var min = model.getMin();\n  var max = model.getMax();\n  var fixMin = min != null;\n  var fixMax = max != null;\n  var originalExtent = scale.getExtent();\n  var axisDataLen;\n  var boundaryGap;\n  var span;\n\n  if (scaleType === 'ordinal') {\n    axisDataLen = (model.get('data') || []).length;\n  } else {\n    boundaryGap = model.get('boundaryGap');\n\n    if (!zrUtil.isArray(boundaryGap)) {\n      boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n    }\n\n    if (typeof boundaryGap[0] === 'boolean') {\n      boundaryGap = [0, 0];\n    }\n\n    boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n    boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n    span = originalExtent[1] - originalExtent[0] || Math.abs(originalExtent[0]);\n  } // Notice: When min/max is not set (that is, when there are null/undefined,\n  // which is the most common case), these cases should be ensured:\n  // (1) For 'ordinal', show all axis.data.\n  // (2) For others:\n  //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n  //      disabled).\n  //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n  //      be the result that originalExtent enlarged by boundaryGap.\n  // (3) If no data, it should be ensured that `scale.setBlank` is set.\n  // FIXME\n  // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\n  // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\n  // that the results processed by boundaryGap are positive/negative?\n\n\n  if (min == null) {\n    min = scaleType === 'ordinal' ? axisDataLen ? 0 : NaN : originalExtent[0] - boundaryGap[0] * span;\n  }\n\n  if (max == null) {\n    max = scaleType === 'ordinal' ? axisDataLen ? axisDataLen - 1 : NaN : originalExtent[1] + boundaryGap[1] * span;\n  }\n\n  if (min === 'dataMin') {\n    min = originalExtent[0];\n  } else if (typeof min === 'function') {\n    min = min({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  if (max === 'dataMax') {\n    max = originalExtent[1];\n  } else if (typeof max === 'function') {\n    max = max({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  (min == null || !isFinite(min)) && (min = NaN);\n  (max == null || !isFinite(max)) && (max = NaN);\n  scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max)); // Evaluate if axis needs cross zero\n\n  if (model.getNeedCrossZero()) {\n    // Axis is over zero and min is not set\n    if (min > 0 && max > 0 && !fixMin) {\n      min = 0;\n    } // Axis is under zero and max is not set\n\n\n    if (min < 0 && max < 0 && !fixMax) {\n      max = 0;\n    }\n  }\n\n  return [min, max];\n}\n\nfunction niceScaleExtent(scale, model) {\n  var extent = getScaleExtent(scale, model);\n  var fixMin = model.getMin() != null;\n  var fixMax = model.getMax() != null;\n  var splitNumber = model.get('splitNumber');\n\n  if (scale.type === 'log') {\n    scale.base = model.get('logBase');\n  }\n\n  var scaleType = scale.type;\n  scale.setExtent(extent[0], extent[1]);\n  scale.niceExtent({\n    splitNumber: splitNumber,\n    fixMin: fixMin,\n    fixMax: fixMax,\n    minInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('minInterval') : null,\n    maxInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('maxInterval') : null\n  }); // If some one specified the min, max. And the default calculated interval\n  // is not good enough. He can specify the interval. It is often appeared\n  // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n  // to be 60.\n  // FIXME\n\n  var interval = model.get('interval');\n\n  if (interval != null) {\n    scale.setInterval && scale.setInterval(interval);\n  }\n}\n/**\n * @param {module:echarts/model/Model} model\n * @param {string} [axisType] Default retrieve from model.type\n * @return {module:echarts/scale/*}\n */\n\n\nfunction createScaleByModel(model, axisType) {\n  axisType = axisType || model.get('type');\n\n  if (axisType) {\n    switch (axisType) {\n      // Buildin scale\n      case 'category':\n        return new OrdinalScale(model.getCategories(), [Infinity, -Infinity]);\n\n      case 'value':\n        return new IntervalScale();\n      // Extended scale, like time and log\n\n      default:\n        return (Scale.getClass(axisType) || IntervalScale).create(model);\n    }\n  }\n}\n/**\n * Check if the axis corss 0\n */\n\n\nfunction ifAxisCrossZero(axis) {\n  var dataExtent = axis.scale.getExtent();\n  var min = dataExtent[0];\n  var max = dataExtent[1];\n  return !(min > 0 && max > 0 || min < 0 && max < 0);\n}\n/**\n * @param {Array.<number>} tickCoords In axis self coordinate.\n * @param {Array.<string>} labels\n * @param {string} font\n * @param {number} axisRotate 0: towards right horizontally, clock-wise is negative.\n * @param {number} [labelRotate=0] 0: towards right horizontally, clock-wise is negative.\n * @return {number}\n */\n\n\nfunction getAxisLabelInterval(tickCoords, labels, font, axisRotate, labelRotate) {\n  var textSpaceTakenRect;\n  var autoLabelInterval = 0;\n  var accumulatedLabelInterval = 0;\n  var rotation = (axisRotate - labelRotate) / 180 * Math.PI;\n  var step = 1;\n\n  if (labels.length > 40) {\n    // Simple optimization for large amount of labels\n    step = Math.floor(labels.length / 40);\n  }\n\n  for (var i = 0; i < tickCoords.length; i += step) {\n    var tickCoord = tickCoords[i]; // Not precise, do not consider align and vertical align\n    // and each distance from axis line yet.\n\n    var rect = textContain.getBoundingRect(labels[i], font, 'center', 'top');\n    rect.x += tickCoord * Math.cos(rotation);\n    rect.y += tickCoord * Math.sin(rotation); // Magic number\n\n    rect.width *= 1.3;\n    rect.height *= 1.3;\n\n    if (!textSpaceTakenRect) {\n      textSpaceTakenRect = rect.clone();\n    } // There is no space for current label;\n    else if (textSpaceTakenRect.intersect(rect)) {\n        accumulatedLabelInterval++;\n        autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n      } else {\n        textSpaceTakenRect.union(rect); // Reset\n\n        accumulatedLabelInterval = 0;\n      }\n  }\n\n  if (autoLabelInterval === 0 && step > 1) {\n    return step;\n  }\n\n  return (autoLabelInterval + 1) * step - 1;\n}\n/**\n * @param {Object} axis\n * @param {Function} labelFormatter\n * @return {Array.<string>}\n */\n\n\nfunction getFormattedLabels(axis, labelFormatter) {\n  var scale = axis.scale;\n  var labels = scale.getTicksLabels();\n  var ticks = scale.getTicks();\n\n  if (typeof labelFormatter === 'string') {\n    labelFormatter = function (tpl) {\n      return function (val) {\n        return tpl.replace('{value}', val != null ? val : '');\n      };\n    }(labelFormatter); // Consider empty array\n\n\n    return zrUtil.map(labels, labelFormatter);\n  } else if (typeof labelFormatter === 'function') {\n    return zrUtil.map(ticks, function (tick, idx) {\n      return labelFormatter(getAxisRawValue(axis, tick), idx);\n    }, this);\n  } else {\n    return labels;\n  }\n}\n\nfunction getAxisRawValue(axis, value) {\n  // In category axis with data zoom, tick is not the original\n  // index of axis.data. So tick should not be exposed to user\n  // in category axis.\n  return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n}\n\nexports.getScaleExtent = getScaleExtent;\nexports.niceScaleExtent = niceScaleExtent;\nexports.createScaleByModel = createScaleByModel;\nexports.ifAxisCrossZero = ifAxisCrossZero;\nexports.getAxisLabelInterval = getAxisLabelInterval;\nexports.getFormattedLabels = getFormattedLabels;\nexports.getAxisRawValue = getAxisRawValue;\n\n/***/ }),\n\n/***/ 1046:\n/***/ (function(module, exports) {\n\nvar features = {};\n\nfunction register(name, ctor) {\n  features[name] = ctor;\n}\n\nfunction get(name) {\n  return features[name];\n}\n\nexports.register = register;\nexports.get = get;\n\n/***/ }),\n\n/***/ 1047:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Eventful = __webpack_require__(1050);\n\nexports.Dispatcher = Eventful;\n\nvar env = __webpack_require__(1035);\n\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\nvar isDomLevel2 = typeof window !== 'undefined' && !!window.addEventListener;\nvar MOUSE_EVENT_REG = /^(?:mouse|pointer|contextmenu|drag|drop)|click/;\n\nfunction getBoundingClientRect(el) {\n  // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n  return el.getBoundingClientRect ? el.getBoundingClientRect() : {\n    left: 0,\n    top: 0\n  };\n} // `calculate` is optional, default false\n\n\nfunction clientToLocal(el, e, out, calculate) {\n  out = out || {}; // According to the W3C Working Draft, offsetX and offsetY should be relative\n  // to the padding edge of the target element. The only browser using this convention\n  // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n  // not support the properties.\n  // (see http://www.jacklmoore.com/notes/mouse-position/)\n  // In zr painter.dom, padding edge equals to border edge.\n  // FIXME\n  // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n  // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n  // is too complex. So css-transfrom dont support in this case temporarily.\n\n  if (calculate || !env.canvasSupported) {\n    defaultGetZrXY(el, e, out);\n  } // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n  // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n  // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n  // zoom-factor, overflow / opacity layers, transforms ...)\n  // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n  // <https://bugs.jquery.com/ticket/8523#comment:14>\n  // BTW3, In ff, offsetX/offsetY is always 0.\n  else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n      out.zrX = e.layerX;\n      out.zrY = e.layerY;\n    } // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n    else if (e.offsetX != null) {\n        out.zrX = e.offsetX;\n        out.zrY = e.offsetY;\n      } // For some other device, e.g., IOS safari.\n      else {\n          defaultGetZrXY(el, e, out);\n        }\n\n  return out;\n}\n\nfunction defaultGetZrXY(el, e, out) {\n  // This well-known method below does not support css transform.\n  var box = getBoundingClientRect(el);\n  out.zrX = e.clientX - box.left;\n  out.zrY = e.clientY - box.top;\n}\n/**\n * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n * `calculate` is optional, default false.\n */\n\n\nfunction normalizeEvent(el, e, calculate) {\n  e = e || window.event;\n\n  if (e.zrX != null) {\n    return e;\n  }\n\n  var eventType = e.type;\n  var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n  if (!isTouch) {\n    clientToLocal(el, e, e, calculate);\n    e.zrDelta = e.wheelDelta ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n  } else {\n    var touch = eventType != 'touchend' ? e.targetTouches[0] : e.changedTouches[0];\n    touch && clientToLocal(el, touch, e, calculate);\n  } // Add which for click: 1 === left; 2 === middle; 3 === right; otherwise: 0;\n  // See jQuery: https://github.com/jquery/jquery/blob/master/src/event.js\n  // If e.which has been defined, if may be readonly,\n  // see: https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/which\n\n\n  var button = e.button;\n\n  if (e.which == null && button !== undefined && MOUSE_EVENT_REG.test(e.type)) {\n    e.which = button & 1 ? 1 : button & 2 ? 3 : button & 4 ? 2 : 0;\n  }\n\n  return e;\n}\n\nfunction addEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    el.addEventListener(name, handler);\n  } else {\n    el.attachEvent('on' + name, handler);\n  }\n}\n\nfunction removeEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    el.removeEventListener(name, handler);\n  } else {\n    el.detachEvent('on' + name, handler);\n  }\n}\n/**\n * preventDefault and stopPropagation.\n * Notice: do not do that in zrender. Upper application\n * do that if necessary.\n *\n * @memberOf module:zrender/core/event\n * @method\n * @param {Event} e : event对象\n */\n\n\nvar stop = isDomLevel2 ? function (e) {\n  e.preventDefault();\n  e.stopPropagation();\n  e.cancelBubble = true;\n} : function (e) {\n  e.returnValue = false;\n  e.cancelBubble = true;\n};\n\nfunction notLeftMouse(e) {\n  // If e.which is undefined, considered as left mouse event.\n  return e.which > 1;\n} // 做向上兼容\n\n\nexports.clientToLocal = clientToLocal;\nexports.normalizeEvent = normalizeEvent;\nexports.addEventListener = addEventListener;\nexports.removeEventListener = removeEventListener;\nexports.stop = stop;\nexports.notLeftMouse = notLeftMouse;\n\n/***/ }),\n\n/***/ 1048:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _vector = __webpack_require__(1033);\n\nvar v2Create = _vector.create;\nvar v2DistSquare = _vector.distSquare;\n\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\nvar mathPow = Math.pow;\nvar mathSqrt = Math.sqrt;\nvar EPSILON = 1e-8;\nvar EPSILON_NUMERIC = 1e-4;\nvar THREE_SQRT = mathSqrt(3);\nvar ONE_THIRD = 1 / 3; // 临时变量\n\nvar _v0 = v2Create();\n\nvar _v1 = v2Create();\n\nvar _v2 = v2Create();\n\nfunction isAroundZero(val) {\n  return val > -EPSILON && val < EPSILON;\n}\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * 计算三次贝塞尔值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return onet * onet * (onet * p0 + 3 * t * p1) + t * t * (t * p3 + 3 * onet * p2);\n}\n/**\n * 计算三次贝塞尔导数值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicDerivativeAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return 3 * (((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet + (p3 - p2) * t * t);\n}\n/**\n * 计算三次贝塞尔方程根，使用盛金公式\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} val\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction cubicRootAt(p0, p1, p2, p3, val, roots) {\n  // Evaluate roots of cubic functions\n  var a = p3 + 3 * (p1 - p2) - p0;\n  var b = 3 * (p2 - p1 * 2 + p0);\n  var c = 3 * (p1 - p0);\n  var d = p0 - val;\n  var A = b * b - 3 * a * c;\n  var B = b * c - 9 * a * d;\n  var C = c * c - 3 * b * d;\n  var n = 0;\n\n  if (isAroundZero(A) && isAroundZero(B)) {\n    if (isAroundZero(b)) {\n      roots[0] = 0;\n    } else {\n      var t1 = -c / b; //t1, t2, t3, b is not zero\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = B * B - 4 * A * C;\n\n    if (isAroundZero(disc)) {\n      var K = B / A;\n      var t1 = -b / a + K; // t1, a is not zero\n\n      var t2 = -K / 2; // t2, t3\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n      var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n\n      if (Y1 < 0) {\n        Y1 = -mathPow(-Y1, ONE_THIRD);\n      } else {\n        Y1 = mathPow(Y1, ONE_THIRD);\n      }\n\n      if (Y2 < 0) {\n        Y2 = -mathPow(-Y2, ONE_THIRD);\n      } else {\n        Y2 = mathPow(Y2, ONE_THIRD);\n      }\n\n      var t1 = (-b - (Y1 + Y2)) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else {\n      var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n      var theta = Math.acos(T) / 3;\n      var ASqrt = mathSqrt(A);\n      var tmp = Math.cos(theta);\n      var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n      var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n      var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n\n      if (t3 >= 0 && t3 <= 1) {\n        roots[n++] = t3;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算三次贝塞尔方程极限值的位置\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {Array.<number>} extrema\n * @return {number} 有效数目\n */\n\n\nfunction cubicExtrema(p0, p1, p2, p3, extrema) {\n  var b = 6 * p2 - 12 * p1 + 6 * p0;\n  var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n  var c = 3 * p1 - 3 * p0;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      extrema[0] = -b / (2 * a);\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        extrema[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 细分三次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction cubicSubdivide(p0, p1, p2, p3, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p23 = (p3 - p2) * t + p2;\n  var p012 = (p12 - p01) * t + p01;\n  var p123 = (p23 - p12) * t + p12;\n  var p0123 = (p123 - p012) * t + p012; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012;\n  out[3] = p0123; // Seg1\n\n  out[4] = p0123;\n  out[5] = p123;\n  out[6] = p23;\n  out[7] = p3;\n}\n/**\n * 投射点到三次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} [out] 投射点\n * @return {number}\n */\n\n\nfunction cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  var prev;\n  var next;\n  var d1;\n  var d2;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n    _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n    d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    prev = t - interval;\n    next = t + interval; // t - interval\n\n    _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n    _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n    d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = cubicAt(x0, x1, x2, x3, next);\n      _v2[1] = cubicAt(y0, y1, y2, y3, next);\n      d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = cubicAt(x0, x1, x2, x3, t);\n    out[1] = cubicAt(y0, y1, y2, y3, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n/**\n * 计算二次方贝塞尔值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticAt(p0, p1, p2, t) {\n  var onet = 1 - t;\n  return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n}\n/**\n * 计算二次方贝塞尔导数值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticDerivativeAt(p0, p1, p2, t) {\n  return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n}\n/**\n * 计算二次方贝塞尔方程根\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction quadraticRootAt(p0, p1, p2, val, roots) {\n  var a = p0 - 2 * p1 + p2;\n  var b = 2 * (p1 - p0);\n  var c = p0 - val;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      var t1 = -b / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算二次贝塞尔方程极限值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @return {number}\n */\n\n\nfunction quadraticExtremum(p0, p1, p2) {\n  var divider = p0 + p2 - 2 * p1;\n\n  if (divider === 0) {\n    // p1 is center of p0 and p2\n    return 0.5;\n  } else {\n    return (p0 - p1) / divider;\n  }\n}\n/**\n * 细分二次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction quadraticSubdivide(p0, p1, p2, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p012 = (p12 - p01) * t + p01; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012; // Seg1\n\n  out[3] = p012;\n  out[4] = p12;\n  out[5] = p2;\n}\n/**\n * 投射点到二次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} out 投射点\n * @return {number}\n */\n\n\nfunction quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = quadraticAt(x0, x1, x2, _t);\n    _v1[1] = quadraticAt(y0, y1, y2, _t);\n    var d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    var prev = t - interval;\n    var next = t + interval; // t - interval\n\n    _v1[0] = quadraticAt(x0, x1, x2, prev);\n    _v1[1] = quadraticAt(y0, y1, y2, prev);\n    var d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = quadraticAt(x0, x1, x2, next);\n      _v2[1] = quadraticAt(y0, y1, y2, next);\n      var d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = quadraticAt(x0, x1, x2, t);\n    out[1] = quadraticAt(y0, y1, y2, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n\nexports.cubicAt = cubicAt;\nexports.cubicDerivativeAt = cubicDerivativeAt;\nexports.cubicRootAt = cubicRootAt;\nexports.cubicExtrema = cubicExtrema;\nexports.cubicSubdivide = cubicSubdivide;\nexports.cubicProjectPoint = cubicProjectPoint;\nexports.quadraticAt = quadraticAt;\nexports.quadraticDerivativeAt = quadraticDerivativeAt;\nexports.quadraticRootAt = quadraticRootAt;\nexports.quadraticExtremum = quadraticExtremum;\nexports.quadraticSubdivide = quadraticSubdivide;\nexports.quadraticProjectPoint = quadraticProjectPoint;\n\n/***/ }),\n\n/***/ 1049:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(1032);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(1027);\n\nvar env = __webpack_require__(1035);\n\nvar _format = __webpack_require__(1034);\n\nvar formatTime = _format.formatTime;\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\nvar getTooltipMarker = _format.getTooltipMarker;\n\nvar _clazz = __webpack_require__(1041);\n\nvar set = _clazz.set;\nvar get = _clazz.get;\n\nvar modelUtil = __webpack_require__(1031);\n\nvar ComponentModel = __webpack_require__(1040);\n\nvar colorPaletteMixin = __webpack_require__(1102);\n\nvar _layout = __webpack_require__(1039);\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\nvar SeriesModel = ComponentModel.extend({\n  type: 'series.__base__',\n\n  /**\n   * @readOnly\n   */\n  seriesIndex: 0,\n  // coodinateSystem will be injected in the echarts/CoordinateSystem\n  coordinateSystem: null,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * Data provided for legend\n   * @type {Function}\n   */\n  // PENDING\n  legendDataProvider: null,\n\n  /**\n   * Access path of color for visual\n   */\n  visualColorAccessPath: 'itemStyle.normal.color',\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  init: function (option, parentModel, ecModel, extraOpt) {\n    /**\n     * @type {number}\n     * @readOnly\n     */\n    this.seriesIndex = this.componentIndex;\n    this.mergeDefaultAndTheme(option, ecModel);\n    var data = this.getInitialData(option, ecModel);\n\n    /**\n     * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n     * @private\n     */\n    set(this, 'dataBeforeProcessed', data); // If we reverse the order (make data firstly, and then make\n    // dataBeforeProcessed by cloneShallow), cloneShallow will\n    // cause data.graph.data !== data when using\n    // module:echarts/data/Graph or module:echarts/data/Tree.\n    // See module:echarts/data/helper/linkList\n\n    this.restoreData();\n  },\n\n  /**\n   * Util for merge default and theme to option\n   * @param  {Object} option\n   * @param  {module:echarts/model/Global} ecModel\n   */\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? getLayoutParams(option) : {}; // Backward compat: using subType on theme.\n    // But if name duplicate between series subType\n    // (for example: parallel) add component mainType,\n    // add suffix 'Series'.\n\n    var themeSubType = this.subType;\n\n    if (ComponentModel.hasClass(themeSubType)) {\n      themeSubType += 'Series';\n    }\n\n    zrUtil.merge(option, ecModel.getTheme().get(this.subType));\n    zrUtil.merge(option, this.getDefaultOption()); // Default label emphasis `show`\n\n    modelUtil.defaultEmphasis(option.label, ['show']);\n    this.fillDataTextStyle(option.data);\n\n    if (layoutMode) {\n      mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (newSeriesOption, ecModel) {\n    newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n    this.fillDataTextStyle(newSeriesOption.data);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n    }\n\n    var data = this.getInitialData(newSeriesOption, ecModel); // TODO Merge data?\n\n    if (data) {\n      set(this, 'data', data);\n      set(this, 'dataBeforeProcessed', data.cloneShallow());\n    }\n  },\n  fillDataTextStyle: function (data) {\n    // Default data label emphasis `show`\n    // FIXME Tree structure data ?\n    // FIXME Performance ?\n    if (data) {\n      var props = ['show'];\n\n      for (var i = 0; i < data.length; i++) {\n        if (data[i] && data[i].label) {\n          modelUtil.defaultEmphasis(data[i].label, props);\n        }\n      }\n    }\n  },\n\n  /**\n   * Init a data structure from data related option in series\n   * Must be overwritten\n   */\n  getInitialData: function () {},\n\n  /**\n   * @param {string} [dataType]\n   * @return {module:echarts/data/List}\n   */\n  getData: function (dataType) {\n    var data = get(this, 'data');\n    return dataType == null ? data : data.getLinkedData(dataType);\n  },\n\n  /**\n   * @param {module:echarts/data/List} data\n   */\n  setData: function (data) {\n    set(this, 'data', data);\n  },\n\n  /**\n   * Get data before processed\n   * @return {module:echarts/data/List}\n   */\n  getRawData: function () {\n    return get(this, 'dataBeforeProcessed');\n  },\n\n  /**\n   * Coord dimension to data dimension.\n   *\n   * By default the result is the same as dimensions of series data.\n   * But in some series data dimensions are different from coord dimensions (i.e.\n   * candlestick and boxplot). Override this method to handle those cases.\n   *\n   * Coord dimension to data dimension can be one-to-many\n   *\n   * @param {string} coordDim\n   * @return {Array.<string>} dimensions on the axis.\n   */\n  coordDimToDataDim: function (coordDim) {\n    return modelUtil.coordDimToDataDim(this.getData(), coordDim);\n  },\n\n  /**\n   * Convert data dimension to coord dimension.\n   *\n   * @param {string|number} dataDim\n   * @return {string}\n   */\n  dataDimToCoordDim: function (dataDim) {\n    return modelUtil.dataDimToCoordDim(this.getData(), dataDim);\n  },\n\n  /**\n   * Get base axis if has coordinate system and has axis.\n   * By default use coordSys.getBaseAxis();\n   * Can be overrided for some chart.\n   * @return {type} description\n   */\n  getBaseAxis: function () {\n    var coordSys = this.coordinateSystem;\n    return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n  },\n  // FIXME\n\n  /**\n   * Default tooltip formatter\n   *\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    function formatArrayValue(value) {\n      var vertially = zrUtil.reduce(value, function (vertially, val, idx) {\n        var dimItem = data.getDimensionInfo(idx);\n        return vertially |= dimItem && dimItem.tooltip !== false && dimItem.tooltipName != null;\n      }, 0);\n      var result = [];\n      var tooltipDims = modelUtil.otherDimToDataDim(data, 'tooltip');\n      tooltipDims.length ? zrUtil.each(tooltipDims, function (dimIdx) {\n        setEachItem(data.get(dimIdx, dataIndex), dimIdx);\n      }) // By default, all dims is used on tooltip.\n      : zrUtil.each(value, setEachItem);\n\n      function setEachItem(val, dimIdx) {\n        var dimInfo = data.getDimensionInfo(dimIdx); // If `dimInfo.tooltip` is not set, show tooltip.\n\n        if (!dimInfo || dimInfo.otherDims.tooltip === false) {\n          return;\n        }\n\n        var dimType = dimInfo.type;\n        var valStr = (vertially ? '- ' + (dimInfo.tooltipName || dimInfo.name) + ': ' : '') + (dimType === 'ordinal' ? val + '' : dimType === 'time' ? multipleSeries ? '' : formatTime('yyyy/MM/dd hh:mm:ss', val) : addCommas(val));\n        valStr && result.push(encodeHTML(valStr));\n      }\n\n      return (vertially ? '<br/>' : '') + result.join(vertially ? '<br/>' : ', ');\n    }\n\n    var data = get(this, 'data');\n    var value = this.getRawValue(dataIndex);\n    var formattedValue = zrUtil.isArray(value) ? formatArrayValue(value) : encodeHTML(addCommas(value));\n    var name = data.getName(dataIndex);\n    var color = data.getItemVisual(dataIndex, 'color');\n\n    if (zrUtil.isObject(color) && color.colorStops) {\n      color = (color.colorStops[0] || {}).color;\n    }\n\n    color = color || 'transparent';\n    var colorEl = getTooltipMarker(color);\n    var seriesName = this.name; // FIXME\n\n    if (seriesName === '\\0-') {\n      // Not show '-'\n      seriesName = '';\n    }\n\n    seriesName = seriesName ? encodeHTML(seriesName) + (!multipleSeries ? '<br/>' : ': ') : '';\n    return !multipleSeries ? seriesName + colorEl + (name ? encodeHTML(name) + ': ' + formattedValue : formattedValue) : colorEl + seriesName + formattedValue;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isAnimationEnabled: function () {\n    if (env.node) {\n      return false;\n    }\n\n    var animationEnabled = this.getShallow('animation');\n\n    if (animationEnabled) {\n      if (this.getData().count() > this.getShallow('animationThreshold')) {\n        animationEnabled = false;\n      }\n    }\n\n    return animationEnabled;\n  },\n  restoreData: function () {\n    set(this, 'data', get(this, 'dataBeforeProcessed').cloneShallow());\n  },\n  getColorFromPalette: function (name, scope) {\n    var ecModel = this.ecModel; // PENDING\n\n    var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n\n    if (!color) {\n      color = ecModel.getColorFromPalette(name, scope);\n    }\n\n    return color;\n  },\n\n  /**\n   * Get data indices for show tooltip content. See tooltip.\n   * @abstract\n   * @param {Array.<string>|string} dim\n   * @param {Array.<number>} value\n   * @param {module:echarts/coord/single/SingleAxis} baseAxis\n   * @return {Object} {dataIndices, nestestValue}.\n   */\n  getAxisTooltipData: null,\n\n  /**\n   * See tooltip.\n   * @abstract\n   * @param {number} dataIndex\n   * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n   */\n  getTooltipPosition: null\n});\nzrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\nzrUtil.mixin(SeriesModel, colorPaletteMixin);\nvar _default = SeriesModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1050:\n/***/ (function(module, exports) {\n\n/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\nvar arrySlice = Array.prototype.slice;\n/**\n * 事件分发器\n * @alias module:zrender/mixin/Eventful\n * @constructor\n */\n\nvar Eventful = function () {\n  this._$handlers = {};\n};\n\nEventful.prototype = {\n  constructor: Eventful,\n\n  /**\n   * 单次触发绑定，trigger后销毁\n   *\n   * @param {string} event 事件名\n   * @param {Function} handler 响应函数\n   * @param {Object} context\n   */\n  one: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: true,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 绑定事件\n   * @param {string} event 事件名\n   * @param {Function} handler 事件处理函数\n   * @param {Object} [context]\n   */\n  on: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: false,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 是否绑定了事件\n   * @param  {string}  event\n   * @return {boolean}\n   */\n  isSilent: function (event) {\n    var _h = this._$handlers;\n    return _h[event] && _h[event].length;\n  },\n\n  /**\n   * 解绑事件\n   * @param {string} event 事件名\n   * @param {Function} [handler] 事件处理函数\n   */\n  off: function (event, handler) {\n    var _h = this._$handlers;\n\n    if (!event) {\n      this._$handlers = {};\n      return this;\n    }\n\n    if (handler) {\n      if (_h[event]) {\n        var newList = [];\n\n        for (var i = 0, l = _h[event].length; i < l; i++) {\n          if (_h[event][i]['h'] != handler) {\n            newList.push(_h[event][i]);\n          }\n        }\n\n        _h[event] = newList;\n      }\n\n      if (_h[event] && _h[event].length === 0) {\n        delete _h[event];\n      }\n    } else {\n      delete _h[event];\n    }\n\n    return this;\n  },\n\n  /**\n   * 事件分发\n   *\n   * @param {string} type 事件类型\n   */\n  trigger: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 3) {\n        args = arrySlice.call(args, 1);\n      }\n\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(_h[i]['ctx']);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(_h[i]['ctx'], args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * 带有context的事件分发, 最后一个参数是事件回调的context\n   * @param {string} type 事件类型\n   */\n  triggerWithContext: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 4) {\n        args = arrySlice.call(args, 1, args.length - 1);\n      }\n\n      var ctx = args[args.length - 1];\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(ctx);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(ctx, args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(ctx, args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(ctx, args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  }\n}; // 对象可以通过 onxxxx 绑定事件\n\n/**\n * @event module:zrender/mixin/Eventful#onclick\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseout\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousemove\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousewheel\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousedown\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseup\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrag\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragstart\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragend\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragenter\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragleave\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrop\n * @type {Function}\n * @default null\n */\n\nvar _default = Eventful;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1051:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar LRU = __webpack_require__(1094);\n\nvar kCSSColorTable = {\n  'transparent': [0, 0, 0, 0],\n  'aliceblue': [240, 248, 255, 1],\n  'antiquewhite': [250, 235, 215, 1],\n  'aqua': [0, 255, 255, 1],\n  'aquamarine': [127, 255, 212, 1],\n  'azure': [240, 255, 255, 1],\n  'beige': [245, 245, 220, 1],\n  'bisque': [255, 228, 196, 1],\n  'black': [0, 0, 0, 1],\n  'blanchedalmond': [255, 235, 205, 1],\n  'blue': [0, 0, 255, 1],\n  'blueviolet': [138, 43, 226, 1],\n  'brown': [165, 42, 42, 1],\n  'burlywood': [222, 184, 135, 1],\n  'cadetblue': [95, 158, 160, 1],\n  'chartreuse': [127, 255, 0, 1],\n  'chocolate': [210, 105, 30, 1],\n  'coral': [255, 127, 80, 1],\n  'cornflowerblue': [100, 149, 237, 1],\n  'cornsilk': [255, 248, 220, 1],\n  'crimson': [220, 20, 60, 1],\n  'cyan': [0, 255, 255, 1],\n  'darkblue': [0, 0, 139, 1],\n  'darkcyan': [0, 139, 139, 1],\n  'darkgoldenrod': [184, 134, 11, 1],\n  'darkgray': [169, 169, 169, 1],\n  'darkgreen': [0, 100, 0, 1],\n  'darkgrey': [169, 169, 169, 1],\n  'darkkhaki': [189, 183, 107, 1],\n  'darkmagenta': [139, 0, 139, 1],\n  'darkolivegreen': [85, 107, 47, 1],\n  'darkorange': [255, 140, 0, 1],\n  'darkorchid': [153, 50, 204, 1],\n  'darkred': [139, 0, 0, 1],\n  'darksalmon': [233, 150, 122, 1],\n  'darkseagreen': [143, 188, 143, 1],\n  'darkslateblue': [72, 61, 139, 1],\n  'darkslategray': [47, 79, 79, 1],\n  'darkslategrey': [47, 79, 79, 1],\n  'darkturquoise': [0, 206, 209, 1],\n  'darkviolet': [148, 0, 211, 1],\n  'deeppink': [255, 20, 147, 1],\n  'deepskyblue': [0, 191, 255, 1],\n  'dimgray': [105, 105, 105, 1],\n  'dimgrey': [105, 105, 105, 1],\n  'dodgerblue': [30, 144, 255, 1],\n  'firebrick': [178, 34, 34, 1],\n  'floralwhite': [255, 250, 240, 1],\n  'forestgreen': [34, 139, 34, 1],\n  'fuchsia': [255, 0, 255, 1],\n  'gainsboro': [220, 220, 220, 1],\n  'ghostwhite': [248, 248, 255, 1],\n  'gold': [255, 215, 0, 1],\n  'goldenrod': [218, 165, 32, 1],\n  'gray': [128, 128, 128, 1],\n  'green': [0, 128, 0, 1],\n  'greenyellow': [173, 255, 47, 1],\n  'grey': [128, 128, 128, 1],\n  'honeydew': [240, 255, 240, 1],\n  'hotpink': [255, 105, 180, 1],\n  'indianred': [205, 92, 92, 1],\n  'indigo': [75, 0, 130, 1],\n  'ivory': [255, 255, 240, 1],\n  'khaki': [240, 230, 140, 1],\n  'lavender': [230, 230, 250, 1],\n  'lavenderblush': [255, 240, 245, 1],\n  'lawngreen': [124, 252, 0, 1],\n  'lemonchiffon': [255, 250, 205, 1],\n  'lightblue': [173, 216, 230, 1],\n  'lightcoral': [240, 128, 128, 1],\n  'lightcyan': [224, 255, 255, 1],\n  'lightgoldenrodyellow': [250, 250, 210, 1],\n  'lightgray': [211, 211, 211, 1],\n  'lightgreen': [144, 238, 144, 1],\n  'lightgrey': [211, 211, 211, 1],\n  'lightpink': [255, 182, 193, 1],\n  'lightsalmon': [255, 160, 122, 1],\n  'lightseagreen': [32, 178, 170, 1],\n  'lightskyblue': [135, 206, 250, 1],\n  'lightslategray': [119, 136, 153, 1],\n  'lightslategrey': [119, 136, 153, 1],\n  'lightsteelblue': [176, 196, 222, 1],\n  'lightyellow': [255, 255, 224, 1],\n  'lime': [0, 255, 0, 1],\n  'limegreen': [50, 205, 50, 1],\n  'linen': [250, 240, 230, 1],\n  'magenta': [255, 0, 255, 1],\n  'maroon': [128, 0, 0, 1],\n  'mediumaquamarine': [102, 205, 170, 1],\n  'mediumblue': [0, 0, 205, 1],\n  'mediumorchid': [186, 85, 211, 1],\n  'mediumpurple': [147, 112, 219, 1],\n  'mediumseagreen': [60, 179, 113, 1],\n  'mediumslateblue': [123, 104, 238, 1],\n  'mediumspringgreen': [0, 250, 154, 1],\n  'mediumturquoise': [72, 209, 204, 1],\n  'mediumvioletred': [199, 21, 133, 1],\n  'midnightblue': [25, 25, 112, 1],\n  'mintcream': [245, 255, 250, 1],\n  'mistyrose': [255, 228, 225, 1],\n  'moccasin': [255, 228, 181, 1],\n  'navajowhite': [255, 222, 173, 1],\n  'navy': [0, 0, 128, 1],\n  'oldlace': [253, 245, 230, 1],\n  'olive': [128, 128, 0, 1],\n  'olivedrab': [107, 142, 35, 1],\n  'orange': [255, 165, 0, 1],\n  'orangered': [255, 69, 0, 1],\n  'orchid': [218, 112, 214, 1],\n  'palegoldenrod': [238, 232, 170, 1],\n  'palegreen': [152, 251, 152, 1],\n  'paleturquoise': [175, 238, 238, 1],\n  'palevioletred': [219, 112, 147, 1],\n  'papayawhip': [255, 239, 213, 1],\n  'peachpuff': [255, 218, 185, 1],\n  'peru': [205, 133, 63, 1],\n  'pink': [255, 192, 203, 1],\n  'plum': [221, 160, 221, 1],\n  'powderblue': [176, 224, 230, 1],\n  'purple': [128, 0, 128, 1],\n  'red': [255, 0, 0, 1],\n  'rosybrown': [188, 143, 143, 1],\n  'royalblue': [65, 105, 225, 1],\n  'saddlebrown': [139, 69, 19, 1],\n  'salmon': [250, 128, 114, 1],\n  'sandybrown': [244, 164, 96, 1],\n  'seagreen': [46, 139, 87, 1],\n  'seashell': [255, 245, 238, 1],\n  'sienna': [160, 82, 45, 1],\n  'silver': [192, 192, 192, 1],\n  'skyblue': [135, 206, 235, 1],\n  'slateblue': [106, 90, 205, 1],\n  'slategray': [112, 128, 144, 1],\n  'slategrey': [112, 128, 144, 1],\n  'snow': [255, 250, 250, 1],\n  'springgreen': [0, 255, 127, 1],\n  'steelblue': [70, 130, 180, 1],\n  'tan': [210, 180, 140, 1],\n  'teal': [0, 128, 128, 1],\n  'thistle': [216, 191, 216, 1],\n  'tomato': [255, 99, 71, 1],\n  'turquoise': [64, 224, 208, 1],\n  'violet': [238, 130, 238, 1],\n  'wheat': [245, 222, 179, 1],\n  'white': [255, 255, 255, 1],\n  'whitesmoke': [245, 245, 245, 1],\n  'yellow': [255, 255, 0, 1],\n  'yellowgreen': [154, 205, 50, 1]\n};\n\nfunction clampCssByte(i) {\n  // Clamp to integer 0 .. 255.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 255 ? 255 : i;\n}\n\nfunction clampCssAngle(i) {\n  // Clamp to integer 0 .. 360.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 360 ? 360 : i;\n}\n\nfunction clampCssFloat(f) {\n  // Clamp to float 0.0 .. 1.0.\n  return f < 0 ? 0 : f > 1 ? 1 : f;\n}\n\nfunction parseCssInt(str) {\n  // int or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssByte(parseFloat(str) / 100 * 255);\n  }\n\n  return clampCssByte(parseInt(str, 10));\n}\n\nfunction parseCssFloat(str) {\n  // float or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssFloat(parseFloat(str) / 100);\n  }\n\n  return clampCssFloat(parseFloat(str));\n}\n\nfunction cssHueToRgb(m1, m2, h) {\n  if (h < 0) {\n    h += 1;\n  } else if (h > 1) {\n    h -= 1;\n  }\n\n  if (h * 6 < 1) {\n    return m1 + (m2 - m1) * h * 6;\n  }\n\n  if (h * 2 < 1) {\n    return m2;\n  }\n\n  if (h * 3 < 2) {\n    return m1 + (m2 - m1) * (2 / 3 - h) * 6;\n  }\n\n  return m1;\n}\n\nfunction lerpNumber(a, b, p) {\n  return a + (b - a) * p;\n}\n\nfunction setRgba(out, r, g, b, a) {\n  out[0] = r;\n  out[1] = g;\n  out[2] = b;\n  out[3] = a;\n  return out;\n}\n\nfunction copyRgba(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\nvar colorCache = new LRU(20);\nvar lastRemovedArr = null;\n\nfunction putToCache(colorStr, rgbaArr) {\n  // Reuse removed array\n  if (lastRemovedArr) {\n    copyRgba(lastRemovedArr, rgbaArr);\n  }\n\n  lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || rgbaArr.slice());\n}\n/**\n * @param {string} colorStr\n * @param {Array.<number>} out\n * @return {Array.<number>}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction parse(colorStr, rgbaArr) {\n  if (!colorStr) {\n    return;\n  }\n\n  rgbaArr = rgbaArr || [];\n  var cached = colorCache.get(colorStr);\n\n  if (cached) {\n    return copyRgba(rgbaArr, cached);\n  } // colorStr may be not string\n\n\n  colorStr = colorStr + ''; // Remove all whitespace, not compliant, but should just be more accepting.\n\n  var str = colorStr.replace(/ /g, '').toLowerCase(); // Color keywords (and transparent) lookup.\n\n  if (str in kCSSColorTable) {\n    copyRgba(rgbaArr, kCSSColorTable[str]);\n    putToCache(colorStr, rgbaArr);\n    return rgbaArr;\n  } // #abc and #abc123 syntax.\n\n\n  if (str.charAt(0) === '#') {\n    if (str.length === 4) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xfff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xf00) >> 4 | (iv & 0xf00) >> 8, iv & 0xf0 | (iv & 0xf0) >> 4, iv & 0xf | (iv & 0xf) << 4, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    } else if (str.length === 7) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xffffff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xff0000) >> 16, (iv & 0xff00) >> 8, iv & 0xff, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    }\n\n    return;\n  }\n\n  var op = str.indexOf('('),\n      ep = str.indexOf(')');\n\n  if (op !== -1 && ep + 1 === str.length) {\n    var fname = str.substr(0, op);\n    var params = str.substr(op + 1, ep - (op + 1)).split(',');\n    var alpha = 1; // To allow case fallthrough.\n\n    switch (fname) {\n      case 'rgba':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        alpha = parseCssFloat(params.pop());\n      // jshint ignore:line\n      // Fall through.\n\n      case 'rgb':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        setRgba(rgbaArr, parseCssInt(params[0]), parseCssInt(params[1]), parseCssInt(params[2]), alpha);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsla':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        params[3] = parseCssFloat(params[3]);\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsl':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      default:\n        return;\n    }\n  }\n\n  setRgba(rgbaArr, 0, 0, 0, 1);\n  return;\n}\n/**\n * @param {Array.<number>} hsla\n * @param {Array.<number>} rgba\n * @return {Array.<number>} rgba\n */\n\n\nfunction hsla2rgba(hsla, rgba) {\n  var h = (parseFloat(hsla[0]) % 360 + 360) % 360 / 360; // 0 .. 1\n  // NOTE(deanm): According to the CSS spec s/l should only be\n  // percentages, but we don't bother and let float or percentage.\n\n  var s = parseCssFloat(hsla[1]);\n  var l = parseCssFloat(hsla[2]);\n  var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n  var m1 = l * 2 - m2;\n  rgba = rgba || [];\n  setRgba(rgba, clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255), clampCssByte(cssHueToRgb(m1, m2, h) * 255), clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255), 1);\n\n  if (hsla.length === 4) {\n    rgba[3] = hsla[3];\n  }\n\n  return rgba;\n}\n/**\n * @param {Array.<number>} rgba\n * @return {Array.<number>} hsla\n */\n\n\nfunction rgba2hsla(rgba) {\n  if (!rgba) {\n    return;\n  } // RGB from 0 to 255\n\n\n  var R = rgba[0] / 255;\n  var G = rgba[1] / 255;\n  var B = rgba[2] / 255;\n  var vMin = Math.min(R, G, B); // Min. value of RGB\n\n  var vMax = Math.max(R, G, B); // Max. value of RGB\n\n  var delta = vMax - vMin; // Delta RGB value\n\n  var L = (vMax + vMin) / 2;\n  var H;\n  var S; // HSL results from 0 to 1\n\n  if (delta === 0) {\n    H = 0;\n    S = 0;\n  } else {\n    if (L < 0.5) {\n      S = delta / (vMax + vMin);\n    } else {\n      S = delta / (2 - vMax - vMin);\n    }\n\n    var deltaR = ((vMax - R) / 6 + delta / 2) / delta;\n    var deltaG = ((vMax - G) / 6 + delta / 2) / delta;\n    var deltaB = ((vMax - B) / 6 + delta / 2) / delta;\n\n    if (R === vMax) {\n      H = deltaB - deltaG;\n    } else if (G === vMax) {\n      H = 1 / 3 + deltaR - deltaB;\n    } else if (B === vMax) {\n      H = 2 / 3 + deltaG - deltaR;\n    }\n\n    if (H < 0) {\n      H += 1;\n    }\n\n    if (H > 1) {\n      H -= 1;\n    }\n  }\n\n  var hsla = [H * 360, S, L];\n\n  if (rgba[3] != null) {\n    hsla.push(rgba[3]);\n  }\n\n  return hsla;\n}\n/**\n * @param {string} color\n * @param {number} level\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction lift(color, level) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    for (var i = 0; i < 3; i++) {\n      if (level < 0) {\n        colorArr[i] = colorArr[i] * (1 - level) | 0;\n      } else {\n        colorArr[i] = (255 - colorArr[i]) * level + colorArr[i] | 0;\n      }\n    }\n\n    return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n  }\n}\n/**\n * @param {string} color\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction toHex(color) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + +colorArr[2]).toString(16).slice(1);\n  }\n}\n/**\n * Map value to color. Faster than lerp methods because color is represented by rgba array.\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<Array.<number>>} colors List of rgba color array\n * @param {Array.<number>} [out] Mapped gba color array\n * @return {Array.<number>} will be null/undefined if input illegal.\n */\n\n\nfunction fastLerp(normalizedValue, colors, out) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  out = out || [];\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = colors[leftIndex];\n  var rightColor = colors[rightIndex];\n  var dv = value - leftIndex;\n  out[0] = clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv));\n  out[1] = clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv));\n  out[2] = clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv));\n  out[3] = clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv));\n  return out;\n}\n/**\n * @deprecated\n */\n\n\nvar fastMapToColor = fastLerp;\n/**\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<string>} colors Color list.\n * @param {boolean=} fullOutput Default false.\n * @return {(string|Object)} Result color. If fullOutput,\n *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n * @memberOf module:zrender/util/color\n */\n\nfunction lerp(normalizedValue, colors, fullOutput) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = parse(colors[leftIndex]);\n  var rightColor = parse(colors[rightIndex]);\n  var dv = value - leftIndex;\n  var color = stringify([clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv)), clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv)), clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv)), clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv))], 'rgba');\n  return fullOutput ? {\n    color: color,\n    leftIndex: leftIndex,\n    rightIndex: rightIndex,\n    value: value\n  } : color;\n}\n/**\n * @deprecated\n */\n\n\nvar mapToColor = lerp;\n/**\n * @param {string} color\n * @param {number=} h 0 ~ 360, ignore when null.\n * @param {number=} s 0 ~ 1, ignore when null.\n * @param {number=} l 0 ~ 1, ignore when null.\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\nfunction modifyHSL(color, h, s, l) {\n  color = parse(color);\n\n  if (color) {\n    color = rgba2hsla(color);\n    h != null && (color[0] = clampCssAngle(h));\n    s != null && (color[1] = parseCssFloat(s));\n    l != null && (color[2] = parseCssFloat(l));\n    return stringify(hsla2rgba(color), 'rgba');\n  }\n}\n/**\n * @param {string} color\n * @param {number=} alpha 0 ~ 1\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\n\nfunction modifyAlpha(color, alpha) {\n  color = parse(color);\n\n  if (color && alpha != null) {\n    color[3] = clampCssFloat(alpha);\n    return stringify(color, 'rgba');\n  }\n}\n/**\n * @param {Array.<number>} arrColor like [12,33,44,0.4]\n * @param {string} type 'rgba', 'hsva', ...\n * @return {string} Result color. (If input illegal, return undefined).\n */\n\n\nfunction stringify(arrColor, type) {\n  if (!arrColor || !arrColor.length) {\n    return;\n  }\n\n  var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n\n  if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n    colorStr += ',' + arrColor[3];\n  }\n\n  return type + '(' + colorStr + ')';\n}\n\nexports.parse = parse;\nexports.lift = lift;\nexports.toHex = toHex;\nexports.fastLerp = fastLerp;\nexports.fastMapToColor = fastMapToColor;\nexports.lerp = lerp;\nexports.mapToColor = mapToColor;\nexports.modifyHSL = modifyHSL;\nexports.modifyAlpha = modifyAlpha;\nexports.stringify = stringify;\n\n/***/ }),\n\n/***/ 1052:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1027);\n\nvar graphic = __webpack_require__(1029);\n\nvar BoundingRect = __webpack_require__(1036);\n\n// Symbol factory\n\n/**\n * Triangle shape\n * @inner\n */\nvar Triangle = graphic.extendShape({\n  type: 'triangle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy + height);\n    path.lineTo(cx - width, cy + height);\n    path.closePath();\n  }\n});\n/**\n * Diamond shape\n * @inner\n */\n\nvar Diamond = graphic.extendShape({\n  type: 'diamond',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy);\n    path.lineTo(cx, cy + height);\n    path.lineTo(cx - width, cy);\n    path.closePath();\n  }\n});\n/**\n * Pin shape\n * @inner\n */\n\nvar Pin = graphic.extendShape({\n  type: 'pin',\n  shape: {\n    // x, y on the cusp\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var w = shape.width / 5 * 3; // Height must be larger than width\n\n    var h = Math.max(w, shape.height);\n    var r = w / 2; // Dist on y with tangent point and circle center\n\n    var dy = r * r / (h - r);\n    var cy = y - h + r + dy;\n    var angle = Math.asin(dy / r); // Dist on x with tangent point and circle center\n\n    var dx = Math.cos(angle) * r;\n    var tanX = Math.sin(angle);\n    var tanY = Math.cos(angle);\n    var cpLen = r * 0.6;\n    var cpLen2 = r * 0.7;\n    path.moveTo(x - dx, cy + dy);\n    path.arc(x, cy, r, Math.PI - angle, Math.PI * 2 + angle);\n    path.bezierCurveTo(x + dx - tanX * cpLen, cy + dy + tanY * cpLen, x, y - cpLen2, x, y);\n    path.bezierCurveTo(x, y - cpLen2, x - dx + tanX * cpLen, cy + dy + tanY * cpLen, x - dx, cy + dy);\n    path.closePath();\n  }\n});\n/**\n * Arrow shape\n * @inner\n */\n\nvar Arrow = graphic.extendShape({\n  type: 'arrow',\n  shape: {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var height = shape.height;\n    var width = shape.width;\n    var x = shape.x;\n    var y = shape.y;\n    var dx = width / 3 * 2;\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + dx, y + height);\n    ctx.lineTo(x, y + height / 4 * 3);\n    ctx.lineTo(x - dx, y + height);\n    ctx.lineTo(x, y);\n    ctx.closePath();\n  }\n});\n/**\n * Map of path contructors\n * @type {Object.<string, module:zrender/graphic/Path>}\n */\n\nvar symbolCtors = {\n  line: graphic.Line,\n  rect: graphic.Rect,\n  roundRect: graphic.Rect,\n  square: graphic.Rect,\n  circle: graphic.Circle,\n  diamond: Diamond,\n  pin: Pin,\n  arrow: Arrow,\n  triangle: Triangle\n};\nvar symbolShapeMakers = {\n  line: function (x, y, w, h, shape) {\n    // FIXME\n    shape.x1 = x;\n    shape.y1 = y + h / 2;\n    shape.x2 = x + w;\n    shape.y2 = y + h / 2;\n  },\n  rect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n  },\n  roundRect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n    shape.r = Math.min(w, h) / 4;\n  },\n  square: function (x, y, w, h, shape) {\n    var size = Math.min(w, h);\n    shape.x = x;\n    shape.y = y;\n    shape.width = size;\n    shape.height = size;\n  },\n  circle: function (x, y, w, h, shape) {\n    // Put circle in the center of square\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.r = Math.min(w, h) / 2;\n  },\n  diamond: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  pin: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  arrow: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  triangle: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  }\n};\nvar symbolBuildProxies = {};\nzrUtil.each(symbolCtors, function (Ctor, name) {\n  symbolBuildProxies[name] = new Ctor();\n});\nvar SymbolClz = graphic.extendShape({\n  type: 'symbol',\n  shape: {\n    symbolType: '',\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  beforeBrush: function () {\n    var style = this.style;\n    var shape = this.shape; // FIXME\n\n    if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n      style.textPosition = ['50%', '40%'];\n      style.textAlign = 'center';\n      style.textVerticalAlign = 'middle';\n    }\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    var symbolType = shape.symbolType;\n    var proxySymbol = symbolBuildProxies[symbolType];\n\n    if (shape.symbolType !== 'none') {\n      if (!proxySymbol) {\n        // Default rect\n        symbolType = 'rect';\n        proxySymbol = symbolBuildProxies[symbolType];\n      }\n\n      symbolShapeMakers[symbolType](shape.x, shape.y, shape.width, shape.height, proxySymbol.shape);\n      proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n    }\n  }\n}); // Provide setColor helper method to avoid determine if set the fill or stroke outside\n\nfunction symbolPathSetColor(color, innerColor) {\n  if (this.type !== 'image') {\n    var symbolStyle = this.style;\n    var symbolShape = this.shape;\n\n    if (symbolShape && symbolShape.symbolType === 'line') {\n      symbolStyle.stroke = color;\n    } else if (this.__isEmptyBrush) {\n      symbolStyle.stroke = color;\n      symbolStyle.fill = innerColor || '#fff';\n    } else {\n      // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n      symbolStyle.fill && (symbolStyle.fill = color);\n      symbolStyle.stroke && (symbolStyle.stroke = color);\n    }\n\n    this.dirty(false);\n  }\n}\n/**\n * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n * @param {string} symbolType\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @param {string} color\n * @param {boolean} [keepAspect=false] whether to keep the ratio of w/h,\n *                            for path and image only.\n */\n\n\nfunction createSymbol(symbolType, x, y, w, h, color, keepAspect) {\n  // TODO Support image object, DynamicImage.\n  var isEmpty = symbolType.indexOf('empty') === 0;\n\n  if (isEmpty) {\n    symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n  }\n\n  var symbolPath;\n\n  if (symbolType.indexOf('image://') === 0) {\n    symbolPath = graphic.makeImage(symbolType.slice(8), new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else if (symbolType.indexOf('path://') === 0) {\n    symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else {\n    symbolPath = new SymbolClz({\n      shape: {\n        symbolType: symbolType,\n        x: x,\n        y: y,\n        width: w,\n        height: h\n      }\n    });\n  }\n\n  symbolPath.__isEmptyBrush = isEmpty;\n  symbolPath.setColor = symbolPathSetColor;\n  symbolPath.setColor(color);\n  return symbolPath;\n}\n\nexports.createSymbol = createSymbol;\n\n/***/ }),\n\n/***/ 1053:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1027);\n\nvar _model = __webpack_require__(1031);\n\nvar normalizeToArray = _model.normalizeToArray;\n\n/**\n * Complete dimensions by data (guess dimension).\n */\nvar each = zrUtil.each;\nvar isString = zrUtil.isString;\nvar defaults = zrUtil.defaults;\nvar OTHER_DIMS = {\n  tooltip: 1,\n  label: 1,\n  itemName: 1\n};\n/**\n * Complete the dimensions array, by user defined `dimension` and `encode`,\n * and guessing from the data structure.\n * If no 'value' dimension specified, the first no-named dimension will be\n * named as 'value'.\n *\n * @param {Array.<string>} sysDims Necessary dimensions, like ['x', 'y'], which\n *      provides not only dim template, but also default order.\n *      `name` of each item provides default coord name.\n *      [{dimsDef: []}, ...] can be specified to give names.\n * @param {Array} data Data list. [[1, 2, 3], [2, 3, 4]].\n * @param {Object} [opt]\n * @param {Array.<Object|string>} [opt.dimsDef] option.series.dimensions User defined dimensions\n *      For example: ['asdf', {name, type}, ...].\n * @param {Object} [opt.encodeDef] option.series.encode {x: 2, y: [3, 1], tooltip: [1, 2], label: 3}\n * @param {string} [opt.extraPrefix] Prefix of name when filling the left dimensions.\n * @param {string} [opt.extraFromZero] If specified, extra dim names will be:\n *                      extraPrefix + 0, extraPrefix + extraBaseIndex + 1 ...\n *                      If not specified, extra dim names will be:\n *                      extraPrefix, extraPrefix + 0, extraPrefix + 1 ...\n * @param {number} [opt.dimCount] If not specified, guess by the first data item.\n * @return {Array.<Object>} [{\n *      name: string mandatory,\n *      coordDim: string mandatory,\n *      coordDimIndex: number mandatory,\n *      type: string optional,\n *      tooltipName: string optional,\n *      otherDims: {\n *          tooltip: number optional,\n *          label: number optional\n *      },\n *      isExtraCoord: boolean true or undefined.\n *      other props ...\n * }]\n */\n\nfunction completeDimensions(sysDims, data, opt) {\n  data = data || [];\n  opt = opt || {};\n  sysDims = (sysDims || []).slice();\n  var dimsDef = (opt.dimsDef || []).slice();\n  var encodeDef = zrUtil.createHashMap(opt.encodeDef);\n  var dataDimNameMap = zrUtil.createHashMap();\n  var coordDimNameMap = zrUtil.createHashMap(); // var valueCandidate;\n\n  var result = [];\n  var dimCount = opt.dimCount;\n\n  if (dimCount == null) {\n    var value0 = retrieveValue(data[0]);\n    dimCount = Math.max(zrUtil.isArray(value0) && value0.length || 1, sysDims.length, dimsDef.length);\n    each(sysDims, function (sysDimItem) {\n      var sysDimItemDimsDef = sysDimItem.dimsDef;\n      sysDimItemDimsDef && (dimCount = Math.max(dimCount, sysDimItemDimsDef.length));\n    });\n  } // Apply user defined dims (`name` and `type`) and init result.\n\n\n  for (var i = 0; i < dimCount; i++) {\n    var dimDefItem = isString(dimsDef[i]) ? {\n      name: dimsDef[i]\n    } : dimsDef[i] || {};\n    var userDimName = dimDefItem.name;\n    var resultItem = result[i] = {\n      otherDims: {}\n    }; // Name will be applied later for avoiding duplication.\n\n    if (userDimName != null && dataDimNameMap.get(userDimName) == null) {\n      // Only if `series.dimensions` is defined in option, tooltipName\n      // will be set, and dimension will be diplayed vertically in\n      // tooltip by default.\n      resultItem.name = resultItem.tooltipName = userDimName;\n      dataDimNameMap.set(userDimName, i);\n    }\n\n    dimDefItem.type != null && (resultItem.type = dimDefItem.type);\n  } // Set `coordDim` and `coordDimIndex` by `encodeDef` and normalize `encodeDef`.\n\n\n  encodeDef.each(function (dataDims, coordDim) {\n    dataDims = encodeDef.set(coordDim, normalizeToArray(dataDims).slice());\n    each(dataDims, function (resultDimIdx, coordDimIndex) {\n      // The input resultDimIdx can be dim name or index.\n      isString(resultDimIdx) && (resultDimIdx = dataDimNameMap.get(resultDimIdx));\n\n      if (resultDimIdx != null && resultDimIdx < dimCount) {\n        dataDims[coordDimIndex] = resultDimIdx;\n        applyDim(result[resultDimIdx], coordDim, coordDimIndex);\n      }\n    });\n  }); // Apply templetes and default order from `sysDims`.\n\n  var availDimIdx = 0;\n  each(sysDims, function (sysDimItem, sysDimIndex) {\n    var coordDim;\n    var sysDimItem;\n    var sysDimItemDimsDef;\n    var sysDimItemOtherDims;\n\n    if (isString(sysDimItem)) {\n      coordDim = sysDimItem;\n      sysDimItem = {};\n    } else {\n      coordDim = sysDimItem.name;\n      sysDimItem = zrUtil.clone(sysDimItem); // `coordDimIndex` should not be set directly.\n\n      sysDimItemDimsDef = sysDimItem.dimsDef;\n      sysDimItemOtherDims = sysDimItem.otherDims;\n      sysDimItem.name = sysDimItem.coordDim = sysDimItem.coordDimIndex = sysDimItem.dimsDef = sysDimItem.otherDims = null;\n    }\n\n    var dataDims = normalizeToArray(encodeDef.get(coordDim)); // dimensions provides default dim sequences.\n\n    if (!dataDims.length) {\n      for (var i = 0; i < (sysDimItemDimsDef && sysDimItemDimsDef.length || 1); i++) {\n        while (availDimIdx < result.length && result[availDimIdx].coordDim != null) {\n          availDimIdx++;\n        }\n\n        availDimIdx < result.length && dataDims.push(availDimIdx++);\n      }\n    } // Apply templates.\n\n\n    each(dataDims, function (resultDimIdx, coordDimIndex) {\n      var resultItem = result[resultDimIdx];\n      applyDim(defaults(resultItem, sysDimItem), coordDim, coordDimIndex);\n\n      if (resultItem.name == null && sysDimItemDimsDef) {\n        resultItem.name = resultItem.tooltipName = sysDimItemDimsDef[coordDimIndex];\n      }\n\n      sysDimItemOtherDims && defaults(resultItem.otherDims, sysDimItemOtherDims);\n    });\n  }); // Make sure the first extra dim is 'value'.\n\n  var extra = opt.extraPrefix || 'value'; // Set dim `name` and other `coordDim` and other props.\n\n  for (var resultDimIdx = 0; resultDimIdx < dimCount; resultDimIdx++) {\n    var resultItem = result[resultDimIdx] = result[resultDimIdx] || {};\n    var coordDim = resultItem.coordDim;\n    coordDim == null && (resultItem.coordDim = genName(extra, coordDimNameMap, opt.extraFromZero), resultItem.coordDimIndex = 0, resultItem.isExtraCoord = true);\n    resultItem.name == null && (resultItem.name = genName(resultItem.coordDim, dataDimNameMap));\n    resultItem.type == null && guessOrdinal(data, resultDimIdx) && (resultItem.type = 'ordinal');\n  }\n\n  return result;\n\n  function applyDim(resultItem, coordDim, coordDimIndex) {\n    if (OTHER_DIMS[coordDim]) {\n      resultItem.otherDims[coordDim] = coordDimIndex;\n    } else {\n      resultItem.coordDim = coordDim;\n      resultItem.coordDimIndex = coordDimIndex;\n      coordDimNameMap.set(coordDim, true);\n    }\n  }\n\n  function genName(name, map, fromZero) {\n    if (fromZero || map.get(name) != null) {\n      var i = 0;\n\n      while (map.get(name + i) != null) {\n        i++;\n      }\n\n      name += i;\n    }\n\n    map.set(name, true);\n    return name;\n  }\n} // The rule should not be complex, otherwise user might not\n// be able to known where the data is wrong.\n\n\nvar guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {\n  for (var i = 0, len = data.length; i < len; i++) {\n    var value = retrieveValue(data[i]);\n\n    if (!zrUtil.isArray(value)) {\n      return false;\n    }\n\n    var value = value[dimIndex]; // Consider usage convenience, '1', '2' will be treated as \"number\".\n    // `isFinit('')` get `true`.\n\n    if (value != null && isFinite(value) && value !== '') {\n      return false;\n    } else if (isString(value) && value !== '-') {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nfunction retrieveValue(o) {\n  return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value : o;\n}\n\nvar _default = completeDimensions;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1054:\n/***/ (function(module, exports) {\n\nvar _default = {\n  toolbox: {\n    brush: {\n      title: {\n        rect: '矩形选择',\n        polygon: '圈选',\n        lineX: '横向选择',\n        lineY: '纵向选择',\n        keep: '保持选择',\n        clear: '清除选择'\n      }\n    },\n    dataView: {\n      title: '数据视图',\n      lang: ['数据视图', '关闭', '刷新']\n    },\n    dataZoom: {\n      title: {\n        zoom: '区域缩放',\n        back: '区域缩放还原'\n      }\n    },\n    magicType: {\n      title: {\n        line: '切换为折线图',\n        bar: '切换为柱状图',\n        stack: '切换为堆叠',\n        tiled: '切换为平铺'\n      }\n    },\n    restore: {\n      title: '还原'\n    },\n    saveAsImage: {\n      title: '保存为图片',\n      lang: ['右键另存为图片']\n    }\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1055:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1027);\n\nvar coordinateSystemCreators = {};\n\nfunction CoordinateSystemManager() {\n  this._coordinateSystems = [];\n}\n\nCoordinateSystemManager.prototype = {\n  constructor: CoordinateSystemManager,\n  create: function (ecModel, api) {\n    var coordinateSystems = [];\n    zrUtil.each(coordinateSystemCreators, function (creater, type) {\n      var list = creater.create(ecModel, api);\n      coordinateSystems = coordinateSystems.concat(list || []);\n    });\n    this._coordinateSystems = coordinateSystems;\n  },\n  update: function (ecModel, api) {\n    zrUtil.each(this._coordinateSystems, function (coordSys) {\n      // FIXME MUST have\n      coordSys.update && coordSys.update(ecModel, api);\n    });\n  },\n  getCoordinateSystems: function () {\n    return this._coordinateSystems.slice();\n  }\n};\n\nCoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n  coordinateSystemCreators[type] = coordinateSystemCreator;\n};\n\nCoordinateSystemManager.get = function (type) {\n  return coordinateSystemCreators[type];\n};\n\nvar _default = CoordinateSystemManager;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1056:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar curve = __webpack_require__(1048);\n\nvar vec2 = __webpack_require__(1033);\n\nvar bbox = __webpack_require__(1086);\n\nvar BoundingRect = __webpack_require__(1036);\n\nvar _config = __webpack_require__(1059);\n\nvar dpr = _config.devicePixelRatio;\n\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n// TODO getTotalLength, getPointAtLength\nvar CMD = {\n  M: 1,\n  L: 2,\n  C: 3,\n  Q: 4,\n  A: 5,\n  Z: 6,\n  // Rect\n  R: 7\n}; // var CMD_MEM_SIZE = {\n//     M: 3,\n//     L: 3,\n//     C: 7,\n//     Q: 5,\n//     A: 9,\n//     R: 5,\n//     Z: 1\n// };\n\nvar min = [];\nvar max = [];\nvar min2 = [];\nvar max2 = [];\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathCos = Math.cos;\nvar mathSin = Math.sin;\nvar mathSqrt = Math.sqrt;\nvar mathAbs = Math.abs;\nvar hasTypedArray = typeof Float32Array != 'undefined';\n/**\n * @alias module:zrender/core/PathProxy\n * @constructor\n */\n\nvar PathProxy = function (notSaveData) {\n  this._saveData = !(notSaveData || false);\n\n  if (this._saveData) {\n    /**\n     * Path data. Stored as flat array\n     * @type {Array.<Object>}\n     */\n    this.data = [];\n  }\n\n  this._ctx = null;\n};\n/**\n * 快速计算Path包围盒（并不是最小包围盒）\n * @return {Object}\n */\n\n\nPathProxy.prototype = {\n  constructor: PathProxy,\n  _xi: 0,\n  _yi: 0,\n  _x0: 0,\n  _y0: 0,\n  // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n  _ux: 0,\n  _uy: 0,\n  _len: 0,\n  _lineDash: null,\n  _dashOffset: 0,\n  _dashIdx: 0,\n  _dashSum: 0,\n\n  /**\n   * @readOnly\n   */\n  setScale: function (sx, sy) {\n    this._ux = mathAbs(1 / dpr / sx) || 0;\n    this._uy = mathAbs(1 / dpr / sy) || 0;\n  },\n  getContext: function () {\n    return this._ctx;\n  },\n\n  /**\n   * @param  {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  beginPath: function (ctx) {\n    this._ctx = ctx;\n    ctx && ctx.beginPath();\n    ctx && (this.dpr = ctx.dpr); // Reset\n\n    if (this._saveData) {\n      this._len = 0;\n    }\n\n    if (this._lineDash) {\n      this._lineDash = null;\n      this._dashOffset = 0;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  moveTo: function (x, y) {\n    this.addData(CMD.M, x, y);\n    this._ctx && this._ctx.moveTo(x, y); // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n    // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n    // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n    // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n\n    this._x0 = x;\n    this._y0 = y;\n    this._xi = x;\n    this._yi = y;\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  lineTo: function (x, y) {\n    var exceedUnit = mathAbs(x - this._xi) > this._ux || mathAbs(y - this._yi) > this._uy // Force draw the first segment\n    || this._len < 5;\n    this.addData(CMD.L, x, y);\n\n    if (this._ctx && exceedUnit) {\n      this._needsDash() ? this._dashedLineTo(x, y) : this._ctx.lineTo(x, y);\n    }\n\n    if (exceedUnit) {\n      this._xi = x;\n      this._yi = y;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @param  {number} x3\n   * @param  {number} y3\n   * @return {module:zrender/core/PathProxy}\n   */\n  bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n    this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3) : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n    }\n\n    this._xi = x3;\n    this._yi = y3;\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @return {module:zrender/core/PathProxy}\n   */\n  quadraticCurveTo: function (x1, y1, x2, y2) {\n    this.addData(CMD.Q, x1, y1, x2, y2);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2) : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n    }\n\n    this._xi = x2;\n    this._yi = y2;\n    return this;\n  },\n\n  /**\n   * @param  {number} cx\n   * @param  {number} cy\n   * @param  {number} r\n   * @param  {number} startAngle\n   * @param  {number} endAngle\n   * @param  {boolean} anticlockwise\n   * @return {module:zrender/core/PathProxy}\n   */\n  arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n    this.addData(CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1);\n    this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n    this._xi = mathCos(endAngle) * r + cx;\n    this._yi = mathSin(endAngle) * r + cx;\n    return this;\n  },\n  // TODO\n  arcTo: function (x1, y1, x2, y2, radius) {\n    if (this._ctx) {\n      this._ctx.arcTo(x1, y1, x2, y2, radius);\n    }\n\n    return this;\n  },\n  // TODO\n  rect: function (x, y, w, h) {\n    this._ctx && this._ctx.rect(x, y, w, h);\n    this.addData(CMD.R, x, y, w, h);\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/PathProxy}\n   */\n  closePath: function () {\n    this.addData(CMD.Z);\n    var ctx = this._ctx;\n    var x0 = this._x0;\n    var y0 = this._y0;\n\n    if (ctx) {\n      this._needsDash() && this._dashedLineTo(x0, y0);\n      ctx.closePath();\n    }\n\n    this._xi = x0;\n    this._yi = y0;\n    return this;\n  },\n\n  /**\n   * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n   * stroke 同样\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  fill: function (ctx) {\n    ctx && ctx.fill();\n    this.toStatic();\n  },\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  stroke: function (ctx) {\n    ctx && ctx.stroke();\n    this.toStatic();\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDash: function (lineDash) {\n    if (lineDash instanceof Array) {\n      this._lineDash = lineDash;\n      this._dashIdx = 0;\n      var lineDashSum = 0;\n\n      for (var i = 0; i < lineDash.length; i++) {\n        lineDashSum += lineDash[i];\n      }\n\n      this._dashSum = lineDashSum;\n    }\n\n    return this;\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDashOffset: function (offset) {\n    this._dashOffset = offset;\n    return this;\n  },\n\n  /**\n   *\n   * @return {boolean}\n   */\n  len: function () {\n    return this._len;\n  },\n\n  /**\n   * 直接设置 Path 数据\n   */\n  setData: function (data) {\n    var len = data.length;\n\n    if (!(this.data && this.data.length == len) && hasTypedArray) {\n      this.data = new Float32Array(len);\n    }\n\n    for (var i = 0; i < len; i++) {\n      this.data[i] = data[i];\n    }\n\n    this._len = len;\n  },\n\n  /**\n   * 添加子路径\n   * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n   */\n  appendPath: function (path) {\n    if (!(path instanceof Array)) {\n      path = [path];\n    }\n\n    var len = path.length;\n    var appendSize = 0;\n    var offset = this._len;\n\n    for (var i = 0; i < len; i++) {\n      appendSize += path[i].len();\n    }\n\n    if (hasTypedArray && this.data instanceof Float32Array) {\n      this.data = new Float32Array(offset + appendSize);\n    }\n\n    for (var i = 0; i < len; i++) {\n      var appendPathData = path[i].data;\n\n      for (var k = 0; k < appendPathData.length; k++) {\n        this.data[offset++] = appendPathData[k];\n      }\n    }\n\n    this._len = offset;\n  },\n\n  /**\n   * 填充 Path 数据。\n   * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n   */\n  addData: function (cmd) {\n    if (!this._saveData) {\n      return;\n    }\n\n    var data = this.data;\n\n    if (this._len + arguments.length > data.length) {\n      // 因为之前的数组已经转换成静态的 Float32Array\n      // 所以不够用时需要扩展一个新的动态数组\n      this._expandData();\n\n      data = this.data;\n    }\n\n    for (var i = 0; i < arguments.length; i++) {\n      data[this._len++] = arguments[i];\n    }\n\n    this._prevCmd = cmd;\n  },\n  _expandData: function () {\n    // Only if data is Float32Array\n    if (!(this.data instanceof Array)) {\n      var newData = [];\n\n      for (var i = 0; i < this._len; i++) {\n        newData[i] = this.data[i];\n      }\n\n      this.data = newData;\n    }\n  },\n\n  /**\n   * If needs js implemented dashed line\n   * @return {boolean}\n   * @private\n   */\n  _needsDash: function () {\n    return this._lineDash;\n  },\n  _dashedLineTo: function (x1, y1) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    var dist = mathSqrt(dx * dx + dy * dy);\n    var x = x0;\n    var y = y0;\n    var dash;\n    var nDash = lineDash.length;\n    var idx;\n    dx /= dist;\n    dy /= dist;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum;\n    x -= offset * dx;\n    y -= offset * dy;\n\n    while (dx > 0 && x <= x1 || dx < 0 && x >= x1 || dx == 0 && (dy > 0 && y <= y1 || dy < 0 && y >= y1)) {\n      idx = this._dashIdx;\n      dash = lineDash[idx];\n      x += dx * dash;\n      y += dy * dash;\n      this._dashIdx = (idx + 1) % nDash; // Skip positive offset\n\n      if (dx > 0 && x < x0 || dx < 0 && x > x0 || dy > 0 && y < y0 || dy < 0 && y > y0) {\n        continue;\n      }\n\n      ctx[idx % 2 ? 'moveTo' : 'lineTo'](dx >= 0 ? mathMin(x, x1) : mathMax(x, x1), dy >= 0 ? mathMin(y, y1) : mathMax(y, y1));\n    } // Offset for next lineTo\n\n\n    dx = x - x1;\n    dy = y - y1;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  // Not accurate dashed line to\n  _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var t;\n    var dx;\n    var dy;\n    var cubicAt = curve.cubicAt;\n    var bezierLen = 0;\n    var idx = this._dashIdx;\n    var nDash = lineDash.length;\n    var x;\n    var y;\n    var tmpLen = 0;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum; // Bezier approx length\n\n    for (t = 0; t < 1; t += 0.1) {\n      dx = cubicAt(x0, x1, x2, x3, t + 0.1) - cubicAt(x0, x1, x2, x3, t);\n      dy = cubicAt(y0, y1, y2, y3, t + 0.1) - cubicAt(y0, y1, y2, y3, t);\n      bezierLen += mathSqrt(dx * dx + dy * dy);\n    } // Find idx after add offset\n\n\n    for (; idx < nDash; idx++) {\n      tmpLen += lineDash[idx];\n\n      if (tmpLen > offset) {\n        break;\n      }\n    }\n\n    t = (tmpLen - offset) / bezierLen;\n\n    while (t <= 1) {\n      x = cubicAt(x0, x1, x2, x3, t);\n      y = cubicAt(y0, y1, y2, y3, t); // Use line to approximate dashed bezier\n      // Bad result if dash is long\n\n      idx % 2 ? ctx.moveTo(x, y) : ctx.lineTo(x, y);\n      t += lineDash[idx] / bezierLen;\n      idx = (idx + 1) % nDash;\n    } // Finish the last segment and calculate the new offset\n\n\n    idx % 2 !== 0 && ctx.lineTo(x3, y3);\n    dx = x3 - x;\n    dy = y3 - y;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  _dashedQuadraticTo: function (x1, y1, x2, y2) {\n    // Convert quadratic to cubic using degree elevation\n    var x3 = x2;\n    var y3 = y2;\n    x2 = (x2 + 2 * x1) / 3;\n    y2 = (y2 + 2 * y1) / 3;\n    x1 = (this._xi + 2 * x1) / 3;\n    y1 = (this._yi + 2 * y1) / 3;\n\n    this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n  },\n\n  /**\n   * 转成静态的 Float32Array 减少堆内存占用\n   * Convert dynamic array to static Float32Array\n   */\n  toStatic: function () {\n    var data = this.data;\n\n    if (data instanceof Array) {\n      data.length = this._len;\n\n      if (hasTypedArray) {\n        this.data = new Float32Array(data);\n      }\n    }\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n    max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n    var data = this.data;\n    var xi = 0;\n    var yi = 0;\n    var x0 = 0;\n    var y0 = 0;\n\n    for (var i = 0; i < data.length;) {\n      var cmd = data[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = data[i];\n        yi = data[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n          // 在 closePath 的时候使用\n          x0 = data[i++];\n          y0 = data[i++];\n          xi = x0;\n          yi = y0;\n          min2[0] = x0;\n          min2[1] = y0;\n          max2[0] = x0;\n          max2[1] = y0;\n          break;\n\n        case CMD.L:\n          bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.C:\n          bbox.fromCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.Q:\n          bbox.fromQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.A:\n          // TODO Arc 判断的开销比较大\n          var cx = data[i++];\n          var cy = data[i++];\n          var rx = data[i++];\n          var ry = data[i++];\n          var startAngle = data[i++];\n          var endAngle = data[i++] + startAngle; // TODO Arc 旋转\n\n          var psi = data[i++];\n          var anticlockwise = 1 - data[i++];\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(startAngle) * rx + cx;\n            y0 = mathSin(startAngle) * ry + cy;\n          }\n\n          bbox.fromArc(cx, cy, rx, ry, startAngle, endAngle, anticlockwise, min2, max2);\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = data[i++];\n          y0 = yi = data[i++];\n          var width = data[i++];\n          var height = data[i++]; // Use fromLine\n\n          bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n          break;\n\n        case CMD.Z:\n          xi = x0;\n          yi = y0;\n          break;\n      } // Union\n\n\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * Rebuild path from current data\n   * Rebuild path will not consider javascript implemented line dash.\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  rebuildPath: function (ctx) {\n    var d = this.data;\n    var x0, y0;\n    var xi, yi;\n    var x, y;\n    var ux = this._ux;\n    var uy = this._uy;\n    var len = this._len;\n\n    for (var i = 0; i < len;) {\n      var cmd = d[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = d[i];\n        yi = d[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          x0 = xi = d[i++];\n          y0 = yi = d[i++];\n          ctx.moveTo(xi, yi);\n          break;\n\n        case CMD.L:\n          x = d[i++];\n          y = d[i++]; // Not draw too small seg between\n\n          if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n            ctx.lineTo(x, y);\n            xi = x;\n            yi = y;\n          }\n\n          break;\n\n        case CMD.C:\n          ctx.bezierCurveTo(d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.Q:\n          ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.A:\n          var cx = d[i++];\n          var cy = d[i++];\n          var rx = d[i++];\n          var ry = d[i++];\n          var theta = d[i++];\n          var dTheta = d[i++];\n          var psi = d[i++];\n          var fs = d[i++];\n          var r = rx > ry ? rx : ry;\n          var scaleX = rx > ry ? 1 : rx / ry;\n          var scaleY = rx > ry ? ry / rx : 1;\n          var isEllipse = Math.abs(rx - ry) > 1e-3;\n          var endAngle = theta + dTheta;\n\n          if (isEllipse) {\n            ctx.translate(cx, cy);\n            ctx.rotate(psi);\n            ctx.scale(scaleX, scaleY);\n            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n            ctx.scale(1 / scaleX, 1 / scaleY);\n            ctx.rotate(-psi);\n            ctx.translate(-cx, -cy);\n          } else {\n            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n          }\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(theta) * rx + cx;\n            y0 = mathSin(theta) * ry + cy;\n          }\n\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = d[i];\n          y0 = yi = d[i + 1];\n          ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n          break;\n\n        case CMD.Z:\n          ctx.closePath();\n          xi = x0;\n          yi = y0;\n      }\n    }\n  }\n};\nPathProxy.CMD = CMD;\nvar _default = PathProxy;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1057:\n/***/ (function(module, exports) {\n\nvar ORIGIN_METHOD = '\\0__throttleOriginMethod';\nvar RATE = '\\0__throttleRate';\nvar THROTTLE_TYPE = '\\0__throttleType';\n/**\n * @public\n * @param {(Function)} fn\n * @param {number} [delay=0] Unit: ms.\n * @param {boolean} [debounce=false]\n *        true: If call interval less than `delay`, only the last call works.\n *        false: If call interval less than `delay, call works on fixed rate.\n * @return {(Function)} throttled fn.\n */\n\nfunction throttle(fn, delay, debounce) {\n  var currCall;\n  var lastCall = 0;\n  var lastExec = 0;\n  var timer = null;\n  var diff;\n  var scope;\n  var args;\n  var debounceNextCall;\n  delay = delay || 0;\n\n  function exec() {\n    lastExec = new Date().getTime();\n    timer = null;\n    fn.apply(scope, args || []);\n  }\n\n  var cb = function () {\n    currCall = new Date().getTime();\n    scope = this;\n    args = arguments;\n    var thisDelay = debounceNextCall || delay;\n    var thisDebounce = debounceNextCall || debounce;\n    debounceNextCall = null;\n    diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\n    clearTimeout(timer);\n\n    if (thisDebounce) {\n      timer = setTimeout(exec, thisDelay);\n    } else {\n      if (diff >= 0) {\n        exec();\n      } else {\n        timer = setTimeout(exec, -diff);\n      }\n    }\n\n    lastCall = currCall;\n  };\n  /**\n   * Clear throttle.\n   * @public\n   */\n\n\n  cb.clear = function () {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  };\n  /**\n   * Enable debounce once.\n   */\n\n\n  cb.debounceNextCall = function (debounceDelay) {\n    debounceNextCall = debounceDelay;\n  };\n\n  return cb;\n}\n/**\n * Create throttle method or update throttle rate.\n *\n * @example\n * ComponentView.prototype.render = function () {\n *     ...\n *     throttle.createOrUpdate(\n *         this,\n *         '_dispatchAction',\n *         this.model.get('throttle'),\n *         'fixRate'\n *     );\n * };\n * ComponentView.prototype.remove = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n * ComponentView.prototype.dispose = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n * @param {number} [rate]\n * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n * @return {Function} throttled function.\n */\n\n\nfunction createOrUpdate(obj, fnAttr, rate, throttleType) {\n  var fn = obj[fnAttr];\n\n  if (!fn) {\n    return;\n  }\n\n  var originFn = fn[ORIGIN_METHOD] || fn;\n  var lastThrottleType = fn[THROTTLE_TYPE];\n  var lastRate = fn[RATE];\n\n  if (lastRate !== rate || lastThrottleType !== throttleType) {\n    if (rate == null || !throttleType) {\n      return obj[fnAttr] = originFn;\n    }\n\n    fn = obj[fnAttr] = throttle(originFn, rate, throttleType === 'debounce');\n    fn[ORIGIN_METHOD] = originFn;\n    fn[THROTTLE_TYPE] = throttleType;\n    fn[RATE] = rate;\n  }\n\n  return fn;\n}\n/**\n * Clear throttle. Example see throttle.createOrUpdate.\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n */\n\n\nfunction clear(obj, fnAttr) {\n  var fn = obj[fnAttr];\n\n  if (fn && fn[ORIGIN_METHOD]) {\n    obj[fnAttr] = fn[ORIGIN_METHOD];\n  }\n}\n\nexports.throttle = throttle;\nexports.createOrUpdate = createOrUpdate;\nexports.clear = clear;\n\n/***/ }),\n\n/***/ 1058:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1027);\n\nvar Element = __webpack_require__(1092);\n\nvar BoundingRect = __webpack_require__(1036);\n\n/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/container/Group');\n *     var Circle = require('zrender/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n/**\n * @alias module:zrender/graphic/Group\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @extends module:zrender/mixin/Eventful\n */\nvar Group = function (opts) {\n  opts = opts || {};\n  Element.call(this, opts);\n\n  for (var key in opts) {\n    if (opts.hasOwnProperty(key)) {\n      this[key] = opts[key];\n    }\n  }\n\n  this._children = [];\n  this.__storage = null;\n  this.__dirty = true;\n};\n\nGroup.prototype = {\n  constructor: Group,\n  isGroup: true,\n\n  /**\n   * @type {string}\n   */\n  type: 'group',\n\n  /**\n   * 所有子孙元素是否响应鼠标事件\n   * @name module:/zrender/container/Group#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * @return {Array.<module:zrender/Element>}\n   */\n  children: function () {\n    return this._children.slice();\n  },\n\n  /**\n   * 获取指定 index 的儿子节点\n   * @param  {number} idx\n   * @return {module:zrender/Element}\n   */\n  childAt: function (idx) {\n    return this._children[idx];\n  },\n\n  /**\n   * 获取指定名字的儿子节点\n   * @param  {string} name\n   * @return {module:zrender/Element}\n   */\n  childOfName: function (name) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      if (children[i].name === name) {\n        return children[i];\n      }\n    }\n  },\n\n  /**\n   * @return {number}\n   */\n  childCount: function () {\n    return this._children.length;\n  },\n\n  /**\n   * 添加子节点到最后\n   * @param {module:zrender/Element} child\n   */\n  add: function (child) {\n    if (child && child !== this && child.parent !== this) {\n      this._children.push(child);\n\n      this._doAdd(child);\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加子节点在 nextSibling 之前\n   * @param {module:zrender/Element} child\n   * @param {module:zrender/Element} nextSibling\n   */\n  addBefore: function (child, nextSibling) {\n    if (child && child !== this && child.parent !== this && nextSibling && nextSibling.parent === this) {\n      var children = this._children;\n      var idx = children.indexOf(nextSibling);\n\n      if (idx >= 0) {\n        children.splice(idx, 0, child);\n\n        this._doAdd(child);\n      }\n    }\n\n    return this;\n  },\n  _doAdd: function (child) {\n    if (child.parent) {\n      child.parent.remove(child);\n    }\n\n    child.parent = this;\n    var storage = this.__storage;\n    var zr = this.__zr;\n\n    if (storage && storage !== child.__storage) {\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n  },\n\n  /**\n   * 移除子节点\n   * @param {module:zrender/Element} child\n   */\n  remove: function (child) {\n    var zr = this.__zr;\n    var storage = this.__storage;\n    var children = this._children;\n    var idx = zrUtil.indexOf(children, child);\n\n    if (idx < 0) {\n      return this;\n    }\n\n    children.splice(idx, 1);\n    child.parent = null;\n\n    if (storage) {\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n    return this;\n  },\n\n  /**\n   * 移除所有子节点\n   */\n  removeAll: function () {\n    var children = this._children;\n    var storage = this.__storage;\n    var child;\n    var i;\n\n    for (i = 0; i < children.length; i++) {\n      child = children[i];\n\n      if (storage) {\n        storage.delFromStorage(child);\n\n        if (child instanceof Group) {\n          child.delChildrenFromStorage(storage);\n        }\n      }\n\n      child.parent = null;\n    }\n\n    children.length = 0;\n    return this;\n  },\n\n  /**\n   * 遍历所有子节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  eachChild: function (cb, context) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n      cb.call(context, child, i);\n    }\n\n    return this;\n  },\n\n  /**\n   * 深度优先遍历所有子孙节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      cb.call(context, child);\n\n      if (child.type === 'group') {\n        child.traverse(cb, context);\n      }\n    }\n\n    return this;\n  },\n  addChildrenToStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n  },\n  delChildrenFromStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n  },\n  dirty: function () {\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh();\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function (includeChildren) {\n    // TODO Caching\n    var rect = null;\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var children = includeChildren || this._children;\n    var tmpMat = [];\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n\n      if (child.ignore || child.invisible) {\n        continue;\n      }\n\n      var childRect = child.getBoundingRect();\n      var transform = child.getLocalTransform(tmpMat); // TODO\n      // The boundingRect cacluated by transforming original\n      // rect may be bigger than the actual bundingRect when rotation\n      // is used. (Consider a circle rotated aginst its center, where\n      // the actual boundingRect should be the same as that not be\n      // rotated.) But we can not find better approach to calculate\n      // actual boundingRect yet, considering performance.\n\n      if (transform) {\n        tmpRect.copy(childRect);\n        tmpRect.applyTransform(transform);\n        rect = rect || tmpRect.clone();\n        rect.union(tmpRect);\n      } else {\n        rect = rect || childRect.clone();\n        rect.union(childRect);\n      }\n    }\n\n    return rect || tmpRect;\n  }\n};\nzrUtil.inherits(Group, Element);\nvar _default = Group;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1059:\n/***/ (function(module, exports) {\n\nvar dpr = 1; // If in browser environment\n\nif (typeof window !== 'undefined') {\n  dpr = Math.max(window.devicePixelRatio || 1, 1);\n}\n/**\n * config默认配置项\n * @exports zrender/config\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n/**\n * debug日志选项：catchBrushException为true下有效\n * 0 : 不生成debug数据，发布用\n * 1 : 异常抛出，调试用\n * 2 : 控制台输出，调试用\n */\n\n\nvar debugMode = 0; // retina 屏幕优化\n\nvar devicePixelRatio = dpr;\nexports.debugMode = debugMode;\nexports.devicePixelRatio = devicePixelRatio;\n\n/***/ }),\n\n/***/ 1060:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1027);\n\n// TODO Parse shadow style\n// TODO Only shallow path support\nfunction _default(properties) {\n  // Normalize\n  for (var i = 0; i < properties.length; i++) {\n    if (!properties[i][1]) {\n      properties[i][1] = properties[i][0];\n    }\n  }\n\n  return function (model, excludes, includes) {\n    var style = {};\n\n    for (var i = 0; i < properties.length; i++) {\n      var propName = properties[i][1];\n\n      if (excludes && zrUtil.indexOf(excludes, propName) >= 0 || includes && zrUtil.indexOf(includes, propName) < 0) {\n        continue;\n      }\n\n      var val = model.getShallow(propName);\n\n      if (val != null) {\n        style[properties[i][0]] = val;\n      }\n    }\n\n    return style;\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1061:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1027);\n\nvar Group = __webpack_require__(1058);\n\nvar componentUtil = __webpack_require__(1076);\n\nvar clazzUtil = __webpack_require__(1041);\n\nvar modelUtil = __webpack_require__(1031);\n\nfunction Chart() {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewChart');\n}\n\nChart.prototype = {\n  type: 'chart',\n\n  /**\n   * Init the chart\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  init: function (ecModel, api) {},\n\n  /**\n   * Render the chart\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  render: function (seriesModel, ecModel, api, payload) {},\n\n  /**\n   * Highlight series or specified data item\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  highlight: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n  },\n\n  /**\n   * Downplay series or specified data item\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  downplay: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'normal');\n  },\n\n  /**\n   * Remove self\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  remove: function (ecModel, api) {\n    this.group.removeAll();\n  },\n\n  /**\n   * Dispose self\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  dispose: function () {}\n  /**\n   * The view contains the given point.\n   * @interface\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  // containPoint: function () {}\n\n};\nvar chartProto = Chart.prototype;\n\nchartProto.updateView = chartProto.updateLayout = chartProto.updateVisual = function (seriesModel, ecModel, api, payload) {\n  this.render(seriesModel, ecModel, api, payload);\n};\n/**\n * Set state of single element\n * @param  {module:zrender/Element} el\n * @param  {string} state\n */\n\n\nfunction elSetState(el, state) {\n  if (el) {\n    el.trigger(state);\n\n    if (el.type === 'group') {\n      for (var i = 0; i < el.childCount(); i++) {\n        elSetState(el.childAt(i), state);\n      }\n    }\n  }\n}\n/**\n * @param  {module:echarts/data/List} data\n * @param  {Object} payload\n * @param  {string} state 'normal'|'emphasis'\n * @inner\n */\n\n\nfunction toggleHighlight(data, payload, state) {\n  var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n  if (dataIndex != null) {\n    zrUtil.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n      elSetState(data.getItemGraphicEl(dataIdx), state);\n    });\n  } else {\n    data.eachItemGraphicEl(function (el) {\n      elSetState(el, state);\n    });\n  }\n} // Enable Chart.extend.\n\n\nclazzUtil.enableClassExtend(Chart, ['dispose']); // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Chart, {\n  registerWhenExtend: true\n});\nvar _default = Chart;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1062:\n/***/ (function(module, exports) {\n\nfunction defaultKeyGetter(item) {\n  return item;\n}\n/**\n * @param {Array} oldArr\n * @param {Array} newArr\n * @param {Function} oldKeyGetter\n * @param {Function} newKeyGetter\n * @param {Object} [context] Can be visited by this.context in callback.\n */\n\n\nfunction DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter, context) {\n  this._old = oldArr;\n  this._new = newArr;\n  this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n  this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n  this.context = context;\n}\n\nDataDiffer.prototype = {\n  constructor: DataDiffer,\n\n  /**\n   * Callback function when add a data\n   */\n  add: function (func) {\n    this._add = func;\n    return this;\n  },\n\n  /**\n   * Callback function when update a data\n   */\n  update: function (func) {\n    this._update = func;\n    return this;\n  },\n\n  /**\n   * Callback function when remove a data\n   */\n  remove: function (func) {\n    this._remove = func;\n    return this;\n  },\n  execute: function () {\n    var oldArr = this._old;\n    var newArr = this._new;\n    var oldDataIndexMap = {};\n    var newDataIndexMap = {};\n    var oldDataKeyArr = [];\n    var newDataKeyArr = [];\n    var i;\n    initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, '_oldKeyGetter', this);\n    initIndexMap(newArr, newDataIndexMap, newDataKeyArr, '_newKeyGetter', this); // Travel by inverted order to make sure order consistency\n    // when duplicate keys exists (consider newDataIndex.pop() below).\n    // For performance consideration, these code below do not look neat.\n\n    for (i = 0; i < oldArr.length; i++) {\n      var key = oldDataKeyArr[i];\n      var idx = newDataIndexMap[key]; // idx can never be empty array here. see 'set null' logic below.\n\n      if (idx != null) {\n        // Consider there is duplicate key (for example, use dataItem.name as key).\n        // We should make sure every item in newArr and oldArr can be visited.\n        var len = idx.length;\n\n        if (len) {\n          len === 1 && (newDataIndexMap[key] = null);\n          idx = idx.unshift();\n        } else {\n          newDataIndexMap[key] = null;\n        }\n\n        this._update && this._update(idx, i);\n      } else {\n        this._remove && this._remove(i);\n      }\n    }\n\n    for (var i = 0; i < newDataKeyArr.length; i++) {\n      var key = newDataKeyArr[i];\n\n      if (newDataIndexMap.hasOwnProperty(key)) {\n        var idx = newDataIndexMap[key];\n\n        if (idx == null) {\n          continue;\n        } // idx can never be empty array here. see 'set null' logic above.\n\n\n        if (!idx.length) {\n          this._add && this._add(idx);\n        } else {\n          for (var j = 0, len = idx.length; j < len; j++) {\n            this._add && this._add(idx[j]);\n          }\n        }\n      }\n    }\n  }\n};\n\nfunction initIndexMap(arr, map, keyArr, keyGetterName, dataDiffer) {\n  for (var i = 0; i < arr.length; i++) {\n    // Add prefix to avoid conflict with Object.prototype.\n    var key = '_ec_' + dataDiffer[keyGetterName](arr[i], i);\n    var existence = map[key];\n\n    if (existence == null) {\n      keyArr.push(key);\n      map[key] = i;\n    } else {\n      if (!existence.length) {\n        map[key] = existence = [existence];\n      }\n\n      existence.push(i);\n    }\n  }\n}\n\nvar _default = DataDiffer;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1063:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar clazzUtil = __webpack_require__(1041);\n\n/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n/**\n * @param {Object} [setting]\n */\nfunction Scale(setting) {\n  this._setting = setting || {};\n  /**\n   * Extent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._extent = [Infinity, -Infinity];\n  /**\n   * Step is calculated in adjustExtent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._interval = 0;\n  this.init && this.init.apply(this, arguments);\n}\n/**\n * Parse input val to valid inner number.\n * @param {*} val\n * @return {number}\n */\n\n\nScale.prototype.parse = function (val) {\n  // Notice: This would be a trap here, If the implementation\n  // of this method depends on extent, and this method is used\n  // before extent set (like in dataZoom), it would be wrong.\n  // Nevertheless, parse does not depend on extent generally.\n  return val;\n};\n\nScale.prototype.getSetting = function (name) {\n  return this._setting[name];\n};\n\nScale.prototype.contain = function (val) {\n  var extent = this._extent;\n  return val >= extent[0] && val <= extent[1];\n};\n/**\n * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.normalize = function (val) {\n  var extent = this._extent;\n\n  if (extent[1] === extent[0]) {\n    return 0.5;\n  }\n\n  return (val - extent[0]) / (extent[1] - extent[0]);\n};\n/**\n * Scale normalized value\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.scale = function (val) {\n  var extent = this._extent;\n  return val * (extent[1] - extent[0]) + extent[0];\n};\n/**\n * Set extent from data\n * @param {Array.<number>} other\n */\n\n\nScale.prototype.unionExtent = function (other) {\n  var extent = this._extent;\n  other[0] < extent[0] && (extent[0] = other[0]);\n  other[1] > extent[1] && (extent[1] = other[1]); // not setExtent because in log axis it may transformed to power\n  // this.setExtent(extent[0], extent[1]);\n};\n/**\n * Set extent from data\n * @param {module:echarts/data/List} data\n * @param {string} dim\n */\n\n\nScale.prototype.unionExtentFromData = function (data, dim) {\n  this.unionExtent(data.getDataExtent(dim, true));\n};\n/**\n * Get extent\n * @return {Array.<number>}\n */\n\n\nScale.prototype.getExtent = function () {\n  return this._extent.slice();\n};\n/**\n * Set extent\n * @param {number} start\n * @param {number} end\n */\n\n\nScale.prototype.setExtent = function (start, end) {\n  var thisExtent = this._extent;\n\n  if (!isNaN(start)) {\n    thisExtent[0] = start;\n  }\n\n  if (!isNaN(end)) {\n    thisExtent[1] = end;\n  }\n};\n/**\n * @return {Array.<string>}\n */\n\n\nScale.prototype.getTicksLabels = function () {\n  var labels = [];\n  var ticks = this.getTicks();\n\n  for (var i = 0; i < ticks.length; i++) {\n    labels.push(this.getLabel(ticks[i]));\n  }\n\n  return labels;\n};\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\n\n\nScale.prototype.isBlank = function () {\n  return this._isBlank;\n},\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\nScale.prototype.setBlank = function (isBlank) {\n  this._isBlank = isBlank;\n};\nclazzUtil.enableClassExtend(Scale);\nclazzUtil.enableClassManagement(Scale, {\n  registerWhenExtend: true\n});\nvar _default = Scale;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1064:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1027);\n\nvar Model = __webpack_require__(1038);\n\nvar each = zrUtil.each;\nvar curry = zrUtil.curry; // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n// allAxesInfo should be updated when setOption performed.\n\nfunction collect(ecModel, api) {\n  var result = {\n    /**\n     * key: makeKey(axis.model)\n     * value: {\n     *      axis,\n     *      coordSys,\n     *      axisPointerModel,\n     *      triggerTooltip,\n     *      involveSeries,\n     *      snap,\n     *      seriesModels,\n     *      seriesDataCount\n     * }\n     */\n    axesInfo: {},\n    seriesInvolved: false,\n\n    /**\n     * key: makeKey(coordSys.model)\n     * value: Object: key makeKey(axis.model), value: axisInfo\n     */\n    coordSysAxesInfo: {},\n    coordSysMap: {}\n  };\n  collectAxesInfo(result, ecModel, api); // Check seriesInvolved for performance, in case too many series in some chart.\n\n  result.seriesInvolved && collectSeriesInfo(result, ecModel);\n  return result;\n}\n\nfunction collectAxesInfo(result, ecModel, api) {\n  var globalTooltipModel = ecModel.getComponent('tooltip');\n  var globalAxisPointerModel = ecModel.getComponent('axisPointer'); // links can only be set on global.\n\n  var linksOption = globalAxisPointerModel.get('link', true) || [];\n  var linkGroups = []; // Collect axes info.\n\n  each(api.getCoordinateSystems(), function (coordSys) {\n    // Some coordinate system do not support axes, like geo.\n    if (!coordSys.axisPointerEnabled) {\n      return;\n    }\n\n    var coordSysKey = makeKey(coordSys.model);\n    var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n    result.coordSysMap[coordSysKey] = coordSys; // Set tooltip (like 'cross') is a convienent way to show axisPointer\n    // for user. So we enable seting tooltip on coordSys model.\n\n    var coordSysModel = coordSys.model;\n    var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n    each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null)); // If axis tooltip used, choose tooltip axis for each coordSys.\n    // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n\n    if (coordSys.getTooltipAxes && globalTooltipModel // If tooltip.showContent is set as false, tooltip will not\n    // show but axisPointer will show as normal.\n    && baseTooltipModel.get('show')) {\n      // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n      // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n      var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n      var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n      var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n\n      if (triggerAxis || cross) {\n        each(tooltipAxes.baseAxes, curry(saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis));\n      }\n\n      if (cross) {\n        each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n      }\n    } // fromTooltip: true | false | 'cross'\n    // triggerTooltip: true | false | null\n\n\n    function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n      var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n      var axisPointerShow = axisPointerModel.get('show');\n\n      if (!axisPointerShow || axisPointerShow === 'auto' && !fromTooltip && !isHandleTrigger(axisPointerModel)) {\n        return;\n      }\n\n      if (triggerTooltip == null) {\n        triggerTooltip = axisPointerModel.get('triggerTooltip');\n      }\n\n      axisPointerModel = fromTooltip ? makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) : axisPointerModel;\n      var snap = axisPointerModel.get('snap');\n      var key = makeKey(axis.model);\n      var involveSeries = triggerTooltip || snap || axis.type === 'category'; // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n\n      var axisInfo = result.axesInfo[key] = {\n        key: key,\n        axis: axis,\n        coordSys: coordSys,\n        axisPointerModel: axisPointerModel,\n        triggerTooltip: triggerTooltip,\n        involveSeries: involveSeries,\n        snap: snap,\n        useHandle: isHandleTrigger(axisPointerModel),\n        seriesModels: []\n      };\n      axesInfoInCoordSys[key] = axisInfo;\n      result.seriesInvolved |= involveSeries;\n      var groupIndex = getLinkGroupIndex(linksOption, axis);\n\n      if (groupIndex != null) {\n        var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {\n          axesInfo: {}\n        });\n        linkGroup.axesInfo[key] = axisInfo;\n        linkGroup.mapper = linksOption[groupIndex].mapper;\n        axisInfo.linkGroup = linkGroup;\n      }\n    }\n  });\n}\n\nfunction makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) {\n  var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n  var volatileOption = {};\n  each(['type', 'snap', 'lineStyle', 'shadowStyle', 'label', 'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'], function (field) {\n    volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n  }); // category axis do not auto snap, otherwise some tick that do not\n  // has value can not be hovered. value/time/log axis default snap if\n  // triggered from tooltip and trigger tooltip.\n\n  volatileOption.snap = axis.type !== 'category' && !!triggerTooltip; // Compatibel with previous behavior, tooltip axis do not show label by default.\n  // Only these properties can be overrided from tooltip to axisPointer.\n\n  if (tooltipAxisPointerModel.get('type') === 'cross') {\n    volatileOption.type = 'line';\n  }\n\n  var labelOption = volatileOption.label || (volatileOption.label = {}); // Follow the convention, do not show label when triggered by tooltip by default.\n\n  labelOption.show == null && (labelOption.show = false);\n\n  if (fromTooltip === 'cross') {\n    // When 'cross', both axes show labels.\n    labelOption.show = true; // If triggerTooltip, this is a base axis, which should better not use cross style\n    // (cross style is dashed by default)\n\n    if (!triggerTooltip) {\n      var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n      crossStyle && zrUtil.defaults(labelOption, crossStyle.textStyle);\n    }\n  }\n\n  return axis.model.getModel('axisPointer', new Model(volatileOption, globalAxisPointerModel, ecModel));\n}\n\nfunction collectSeriesInfo(result, ecModel) {\n  // Prepare data for axis trigger\n  ecModel.eachSeries(function (seriesModel) {\n    // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n    var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n\n    if (!coordSys || seriesTooltipTrigger === 'none' || seriesTooltipTrigger === false || seriesTooltipTrigger === 'item' || seriesTooltipShow === false || seriesModel.get('axisPointer.show', true) === false) {\n      return;\n    }\n\n    each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n      var axis = axisInfo.axis;\n\n      if (coordSys.getAxis(axis.dim) === axis) {\n        axisInfo.seriesModels.push(seriesModel);\n        axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n        axisInfo.seriesDataCount += seriesModel.getData().count();\n      }\n    });\n  }, this);\n}\n/**\n * For example:\n * {\n *     axisPointer: {\n *         links: [{\n *             xAxisIndex: [2, 4],\n *             yAxisIndex: 'all'\n *         }, {\n *             xAxisId: ['a5', 'a7'],\n *             xAxisName: 'xxx'\n *         }]\n *     }\n * }\n */\n\n\nfunction getLinkGroupIndex(linksOption, axis) {\n  var axisModel = axis.model;\n  var dim = axis.dim;\n\n  for (var i = 0; i < linksOption.length; i++) {\n    var linkOption = linksOption[i] || {};\n\n    if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id) || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex) || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)) {\n      return i;\n    }\n  }\n}\n\nfunction checkPropInLink(linkPropValue, axisPropValue) {\n  return linkPropValue === 'all' || zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0 || linkPropValue === axisPropValue;\n}\n\nfunction fixValue(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n\n  if (!axisInfo) {\n    return;\n  }\n\n  var axisPointerModel = axisInfo.axisPointerModel;\n  var scale = axisInfo.axis.scale;\n  var option = axisPointerModel.option;\n  var status = axisPointerModel.get('status');\n  var value = axisPointerModel.get('value'); // Parse init value for category and time axis.\n\n  if (value != null) {\n    value = scale.parse(value);\n  }\n\n  var useHandle = isHandleTrigger(axisPointerModel); // If `handle` used, `axisPointer` will always be displayed, so value\n  // and status should be initialized.\n\n  if (status == null) {\n    option.status = useHandle ? 'show' : 'hide';\n  }\n\n  var extent = scale.getExtent().slice();\n  extent[0] > extent[1] && extent.reverse();\n\n  if ( // Pick a value on axis when initializing.\n  value == null // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n  // where we should re-pick a value to keep `handle` displaying normally.\n  || value > extent[1]) {\n    // Make handle displayed on the end of the axis when init, which looks better.\n    value = extent[1];\n  }\n\n  if (value < extent[0]) {\n    value = extent[0];\n  }\n\n  option.value = value;\n\n  if (useHandle) {\n    option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n  }\n}\n\nfunction getAxisInfo(axisModel) {\n  var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n  return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n}\n\nfunction getAxisPointerModel(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n  return axisInfo && axisInfo.axisPointerModel;\n}\n\nfunction isHandleTrigger(axisPointerModel) {\n  return !!axisPointerModel.get('handle.show');\n}\n/**\n * @param {module:echarts/model/Model} model\n * @return {string} unique key\n */\n\n\nfunction makeKey(model) {\n  return model.type + '||' + model.id;\n}\n\nexports.collect = collect;\nexports.fixValue = fixValue;\nexports.getAxisInfo = getAxisInfo;\nexports.getAxisPointerModel = getAxisPointerModel;\nexports.makeKey = makeKey;\n\n/***/ }),\n\n/***/ 1065:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(1032);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(1027);\n\nvar List = __webpack_require__(1044);\n\nvar completeDimensions = __webpack_require__(1053);\n\nvar _model = __webpack_require__(1031);\n\nvar getDataItemValue = _model.getDataItemValue;\nvar converDataValue = _model.converDataValue;\nvar isDataItemOption = _model.isDataItemOption;\n\nvar CoordinateSystem = __webpack_require__(1055);\n\nfunction firstDataNotNull(data) {\n  var i = 0;\n\n  while (i < data.length && data[i] == null) {\n    i++;\n  }\n\n  return data[i];\n}\n\nfunction ifNeedCompleteOrdinalData(data) {\n  var sampleItem = firstDataNotNull(data);\n  return sampleItem != null && !zrUtil.isArray(getDataItemValue(sampleItem));\n}\n/**\n * Helper function to create a list from option data\n */\n\n\nfunction createListFromArray(data, seriesModel, ecModel) {\n  // If data is undefined\n  data = data || [];\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var creator = creators[coordSysName];\n  var registeredCoordSys = CoordinateSystem.get(coordSysName);\n  var completeDimOpt = {\n    encodeDef: seriesModel.get('encode'),\n    dimsDef: seriesModel.get('dimensions')\n  }; // FIXME\n\n  var axesInfo = creator && creator(data, seriesModel, ecModel, completeDimOpt);\n  var dimensions = axesInfo && axesInfo.dimensions;\n\n  if (!dimensions) {\n    // Get dimensions from registered coordinate system\n    dimensions = registeredCoordSys && (registeredCoordSys.getDimensionsInfo ? registeredCoordSys.getDimensionsInfo() : registeredCoordSys.dimensions.slice()) || ['x', 'y'];\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n  }\n\n  var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;\n  var list = new List(dimensions, seriesModel);\n  var nameList = createNameList(axesInfo, data);\n  var categories = {};\n  var dimValueGetter = categoryIndex >= 0 && ifNeedCompleteOrdinalData(data) ? function (itemOpt, dimName, dataIndex, dimIndex) {\n    // If any dataItem is like { value: 10 }\n    if (isDataItemOption(itemOpt)) {\n      list.hasItemOption = true;\n    } // Use dataIndex as ordinal value in categoryAxis\n\n\n    return dimIndex === categoryIndex ? dataIndex : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);\n  } : function (itemOpt, dimName, dataIndex, dimIndex) {\n    var value = getDataItemValue(itemOpt);\n    var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]); // If any dataItem is like { value: 10 }\n\n    if (isDataItemOption(itemOpt)) {\n      list.hasItemOption = true;\n    }\n\n    var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;\n\n    if (categoryAxesModels && categoryAxesModels[dimName]) {\n      // If given value is a category string\n      if (typeof val === 'string') {\n        // Lazy get categories\n        categories[dimName] = categories[dimName] || categoryAxesModels[dimName].getCategories();\n        val = zrUtil.indexOf(categories[dimName], val);\n\n        if (val < 0 && !isNaN(val)) {\n          // In case some one write '1', '2' istead of 1, 2\n          val = +val;\n        }\n      }\n    }\n\n    return val;\n  };\n  list.hasItemOption = false;\n  list.initData(data, nameList, dimValueGetter);\n  return list;\n}\n\nfunction isStackable(axisType) {\n  return axisType !== 'category' && axisType !== 'time';\n}\n\nfunction getDimTypeByAxis(axisType) {\n  return axisType === 'category' ? 'ordinal' : axisType === 'time' ? 'time' : 'float';\n}\n/**\n * Creaters for each coord system.\n */\n\n\nvar creators = {\n  cartesian2d: function (data, seriesModel, ecModel, completeDimOpt) {\n    var axesModels = zrUtil.map(['xAxis', 'yAxis'], function (name) {\n      return ecModel.queryComponents({\n        mainType: name,\n        index: seriesModel.get(name + 'Index'),\n        id: seriesModel.get(name + 'Id')\n      })[0];\n    });\n    var xAxisModel = axesModels[0];\n    var yAxisModel = axesModels[1];\n    var xAxisType = xAxisModel.get('type');\n    var yAxisType = yAxisModel.get('type');\n    var dimensions = [{\n      name: 'x',\n      type: getDimTypeByAxis(xAxisType),\n      stackable: isStackable(xAxisType)\n    }, {\n      name: 'y',\n      // If two category axes\n      type: getDimTypeByAxis(yAxisType),\n      stackable: isStackable(yAxisType)\n    }];\n    var isXAxisCateogry = xAxisType === 'category';\n    var isYAxisCategory = yAxisType === 'category';\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n    var categoryAxesModels = {};\n\n    if (isXAxisCateogry) {\n      categoryAxesModels.x = xAxisModel;\n    }\n\n    if (isYAxisCategory) {\n      categoryAxesModels.y = yAxisModel;\n    }\n\n    return {\n      dimensions: dimensions,\n      categoryIndex: isXAxisCateogry ? 0 : isYAxisCategory ? 1 : -1,\n      categoryAxesModels: categoryAxesModels\n    };\n  },\n  singleAxis: function (data, seriesModel, ecModel, completeDimOpt) {\n    var singleAxisModel = ecModel.queryComponents({\n      mainType: 'singleAxis',\n      index: seriesModel.get('singleAxisIndex'),\n      id: seriesModel.get('singleAxisId')\n    })[0];\n    var singleAxisType = singleAxisModel.get('type');\n    var isCategory = singleAxisType === 'category';\n    var dimensions = [{\n      name: 'single',\n      type: getDimTypeByAxis(singleAxisType),\n      stackable: isStackable(singleAxisType)\n    }];\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n    var categoryAxesModels = {};\n\n    if (isCategory) {\n      categoryAxesModels.single = singleAxisModel;\n    }\n\n    return {\n      dimensions: dimensions,\n      categoryIndex: isCategory ? 0 : -1,\n      categoryAxesModels: categoryAxesModels\n    };\n  },\n  polar: function (data, seriesModel, ecModel, completeDimOpt) {\n    var polarModel = ecModel.queryComponents({\n      mainType: 'polar',\n      index: seriesModel.get('polarIndex'),\n      id: seriesModel.get('polarId')\n    })[0];\n    var angleAxisModel = polarModel.findAxisModel('angleAxis');\n    var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n    var radiusAxisType = radiusAxisModel.get('type');\n    var angleAxisType = angleAxisModel.get('type');\n    var dimensions = [{\n      name: 'radius',\n      type: getDimTypeByAxis(radiusAxisType),\n      stackable: isStackable(radiusAxisType)\n    }, {\n      name: 'angle',\n      type: getDimTypeByAxis(angleAxisType),\n      stackable: isStackable(angleAxisType)\n    }];\n    var isAngleAxisCateogry = angleAxisType === 'category';\n    var isRadiusAxisCateogry = radiusAxisType === 'category';\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n    var categoryAxesModels = {};\n\n    if (isRadiusAxisCateogry) {\n      categoryAxesModels.radius = radiusAxisModel;\n    }\n\n    if (isAngleAxisCateogry) {\n      categoryAxesModels.angle = angleAxisModel;\n    }\n\n    return {\n      dimensions: dimensions,\n      categoryIndex: isAngleAxisCateogry ? 1 : isRadiusAxisCateogry ? 0 : -1,\n      categoryAxesModels: categoryAxesModels\n    };\n  },\n  geo: function (data, seriesModel, ecModel, completeDimOpt) {\n    // TODO Region\n    // 多个散点图系列在同一个地区的时候\n    return {\n      dimensions: completeDimensions([{\n        name: 'lng'\n      }, {\n        name: 'lat'\n      }], data, completeDimOpt)\n    };\n  }\n};\n\nfunction createNameList(result, data) {\n  var nameList = [];\n  var categoryDim = result && result.dimensions[result.categoryIndex];\n  var categoryAxisModel;\n\n  if (categoryDim) {\n    categoryAxisModel = result.categoryAxesModels[categoryDim.name];\n  }\n\n  if (categoryAxisModel) {\n    // FIXME Two category axis\n    var categories = categoryAxisModel.getCategories();\n\n    if (categories) {\n      var dataLen = data.length; // Ordered data is given explicitly like\n      // [[3, 0.2], [1, 0.3], [2, 0.15]]\n      // or given scatter data,\n      // pick the category\n\n      if (zrUtil.isArray(data[0]) && data[0].length > 1) {\n        nameList = [];\n\n        for (var i = 0; i < dataLen; i++) {\n          nameList[i] = categories[data[i][result.categoryIndex || 0]];\n        }\n      } else {\n        nameList = categories.slice(0);\n      }\n    }\n  }\n\n  return nameList;\n}\n\nvar _default = createListFromArray;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1066:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1027);\n\nvar numberUtil = __webpack_require__(1030);\n\nvar axisHelper = __webpack_require__(1045);\n\nvar linearMap = numberUtil.linearMap;\n\nfunction fixExtentWithBands(extent, nTick) {\n  var size = extent[1] - extent[0];\n  var len = nTick;\n  var margin = size / len / 2;\n  extent[0] += margin;\n  extent[1] -= margin;\n}\n\nvar normalizedExtent = [0, 1];\n/**\n * @name module:echarts/coord/CartesianAxis\n * @constructor\n */\n\nvar Axis = function (dim, scale, extent) {\n  /**\n   * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n   * @type {string}\n   */\n  this.dim = dim;\n  /**\n   * Axis scale\n   * @type {module:echarts/coord/scale/*}\n   */\n\n  this.scale = scale;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  this._extent = extent || [0, 0];\n  /**\n   * @type {boolean}\n   */\n\n  this.inverse = false;\n  /**\n   * Usually true when axis has a ordinal scale\n   * @type {boolean}\n   */\n\n  this.onBand = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._labelInterval;\n};\n\nAxis.prototype = {\n  constructor: Axis,\n\n  /**\n   * If axis extent contain given coord\n   * @param {number} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var extent = this._extent;\n    var min = Math.min(extent[0], extent[1]);\n    var max = Math.max(extent[0], extent[1]);\n    return coord >= min && coord <= max;\n  },\n\n  /**\n   * If axis extent contain given data\n   * @param {number} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.contain(this.dataToCoord(data));\n  },\n\n  /**\n   * Get coord extent.\n   * @return {Array.<number>}\n   */\n  getExtent: function () {\n    return this._extent.slice();\n  },\n\n  /**\n   * Get precision used for formatting\n   * @param {Array.<number>} [dataExtent]\n   * @return {number}\n   */\n  getPixelPrecision: function (dataExtent) {\n    return numberUtil.getPixelPrecision(dataExtent || this.scale.getExtent(), this._extent);\n  },\n\n  /**\n   * Set coord extent\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var extent = this._extent;\n    extent[0] = start;\n    extent[1] = end;\n  },\n\n  /**\n   * Convert data to coord. Data is the rank if it has a ordinal scale\n   * @param {number} data\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  dataToCoord: function (data, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n    data = scale.normalize(data);\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    return linearMap(data, normalizedExtent, extent, clamp);\n  },\n\n  /**\n   * Convert coord to data. Data is the rank if it has a ordinal scale\n   * @param {number} coord\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  coordToData: function (coord, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    var t = linearMap(coord, extent, normalizedExtent, clamp);\n    return this.scale.scale(t);\n  },\n\n  /**\n   * Convert pixel point to data in axis\n   * @param {Array.<number>} point\n   * @param  {boolean} clamp\n   * @return {number} data\n   */\n  pointToData: function (point, clamp) {// Should be implemented in derived class if necessary.\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicksCoords: function (alignWithLabel) {\n    if (this.onBand && !alignWithLabel) {\n      var bands = this.getBands();\n      var coords = [];\n\n      for (var i = 0; i < bands.length; i++) {\n        coords.push(bands[i][0]);\n      }\n\n      if (bands[i - 1]) {\n        coords.push(bands[i - 1][1]);\n      }\n\n      return coords;\n    } else {\n      return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n    }\n  },\n\n  /**\n   * Coords of labels are on the ticks or on the middle of bands\n   * @return {Array.<number>}\n   */\n  getLabelsCoords: function () {\n    return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n  },\n\n  /**\n   * Get bands.\n   *\n   * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n   * |---1---|---2---|---3---|---4---|.\n   *\n   * @return {Array}\n   */\n  // FIXME Situation when labels is on ticks\n  getBands: function () {\n    var extent = this.getExtent();\n    var bands = [];\n    var len = this.scale.count();\n    var start = extent[0];\n    var end = extent[1];\n    var span = end - start;\n\n    for (var i = 0; i < len; i++) {\n      bands.push([span * i / len + start, span * (i + 1) / len + start]);\n    }\n\n    return bands;\n  },\n\n  /**\n   * Get width of band\n   * @return {number}\n   */\n  getBandWidth: function () {\n    var axisExtent = this._extent;\n    var dataExtent = this.scale.getExtent();\n    var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0); // Fix #2728, avoid NaN when only one data.\n\n    len === 0 && (len = 1);\n    var size = Math.abs(axisExtent[1] - axisExtent[0]);\n    return Math.abs(size) / len;\n  },\n\n  /**\n   * @abstract\n   * @return {boolean} Is horizontal\n   */\n  isHorizontal: null,\n\n  /**\n   * @abstract\n   * @return {number} Get axis rotate, by degree.\n   */\n  getRotate: null,\n\n  /**\n   * Get interval of the axis label.\n   * To get precise result, at least one of `getRotate` and `isHorizontal`\n   * should be implemented.\n   * @return {number}\n   */\n  getLabelInterval: function () {\n    var labelInterval = this._labelInterval;\n\n    if (!labelInterval) {\n      var axisModel = this.model;\n      var labelModel = axisModel.getModel('axisLabel');\n      labelInterval = labelModel.get('interval');\n\n      if (this.type === 'category' && (labelInterval == null || labelInterval === 'auto')) {\n        labelInterval = axisHelper.getAxisLabelInterval(zrUtil.map(this.scale.getTicks(), this.dataToCoord, this), axisModel.getFormattedLabels(), labelModel.getFont(), this.getRotate ? this.getRotate() : this.isHorizontal && !this.isHorizontal() ? 90 : 0, labelModel.get('rotate'));\n      }\n\n      this._labelInterval = labelInterval;\n    }\n\n    return labelInterval;\n  }\n};\nvar _default = Axis;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1067:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1027);\n\nvar Style = __webpack_require__(1095);\n\nvar Element = __webpack_require__(1092);\n\nvar RectText = __webpack_require__(1120);\n\n/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n/**\n * @alias module:zrender/graphic/Displayable\n * @extends module:zrender/Element\n * @extends module:zrender/graphic/mixin/RectText\n */\nfunction Displayable(opts) {\n  opts = opts || {};\n  Element.call(this, opts); // Extend properties\n\n  for (var name in opts) {\n    if (opts.hasOwnProperty(name) && name !== 'style') {\n      this[name] = opts[name];\n    }\n  }\n  /**\n   * @type {module:zrender/graphic/Style}\n   */\n\n\n  this.style = new Style(opts.style, this);\n  this._rect = null; // Shapes for cascade clipping.\n\n  this.__clipPaths = []; // FIXME Stateful must be mixined after style is setted\n  // Stateful.call(this, opts);\n}\n\nDisplayable.prototype = {\n  constructor: Displayable,\n  type: 'displayable',\n\n  /**\n   * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n   * Dirty flag. From which painter will determine if this displayable object needs brush\n   * @name module:zrender/graphic/Displayable#__dirty\n   * @type {boolean}\n   */\n  __dirty: true,\n\n  /**\n   * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n   * If ignore drawing of the displayable object. Mouse event will still be triggered\n   * @name module:/zrender/graphic/Displayable#invisible\n   * @type {boolean}\n   * @default false\n   */\n  invisible: false,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z: 0,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z2: 0,\n\n  /**\n   * z层level，决定绘画在哪层canvas中\n   * @name module:/zrender/graphic/Displayable#zlevel\n   * @type {number}\n   * @default 0\n   */\n  zlevel: 0,\n\n  /**\n   * 是否可拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  draggable: false,\n\n  /**\n   * 是否正在拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  dragging: false,\n\n  /**\n   * 是否相应鼠标事件\n   * @name module:/zrender/graphic/Displayable#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * If enable culling\n   * @type {boolean}\n   * @default false\n   */\n  culling: false,\n\n  /**\n   * Mouse cursor when hovered\n   * @name module:/zrender/graphic/Displayable#cursor\n   * @type {string}\n   */\n  cursor: 'pointer',\n\n  /**\n   * If hover area is bounding rect\n   * @name module:/zrender/graphic/Displayable#rectHover\n   * @type {string}\n   */\n  rectHover: false,\n\n  /**\n   * Render the element progressively when the value >= 0,\n   * usefull for large data.\n   * @type {number}\n   */\n  progressive: -1,\n  beforeBrush: function (ctx) {},\n  afterBrush: function (ctx) {},\n\n  /**\n   * 图形绘制方法\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  // Interface\n  brush: function (ctx, prevEl) {},\n\n  /**\n   * 获取最小包围盒\n   * @return {module:zrender/core/BoundingRect}\n   */\n  // Interface\n  getBoundingRect: function () {},\n\n  /**\n   * 判断坐标 x, y 是否在图形上\n   * If displayable element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  contain: function (x, y) {\n    return this.rectContain(x, y);\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    cb.call(context, this);\n  },\n\n  /**\n   * 判断坐标 x, y 是否在图形的包围盒上\n   * If bounding rect of element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  rectContain: function (x, y) {\n    var coord = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    return rect.contain(coord[0], coord[1]);\n  },\n\n  /**\n   * 标记图形元素为脏，并且在下一帧重绘\n   * Mark displayable element dirty and refresh next frame\n   */\n  dirty: function () {\n    this.__dirty = true;\n    this._rect = null;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * 图形是否会触发事件\n   * If displayable object binded any event\n   * @return {boolean}\n   */\n  // TODO, 通过 bind 绑定的事件\n  // isSilent: function () {\n  //     return !(\n  //         this.hoverable || this.draggable\n  //         || this.onmousemove || this.onmouseover || this.onmouseout\n  //         || this.onmousedown || this.onmouseup || this.onclick\n  //         || this.ondragenter || this.ondragover || this.ondragleave\n  //         || this.ondrop\n  //     );\n  // },\n\n  /**\n   * Alias for animate('style')\n   * @param {boolean} loop\n   */\n  animateStyle: function (loop) {\n    return this.animate('style', loop);\n  },\n  attrKV: function (key, value) {\n    if (key !== 'style') {\n      Element.prototype.attrKV.call(this, key, value);\n    } else {\n      this.style.set(value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setStyle: function (key, value) {\n    this.style.set(key, value);\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * Use given style object\n   * @param  {Object} obj\n   */\n  useStyle: function (obj) {\n    this.style = new Style(obj, this);\n    this.dirty(false);\n    return this;\n  }\n};\nzrUtil.inherits(Displayable, Element);\nzrUtil.mixin(Displayable, RectText); // zrUtil.mixin(Displayable, Stateful);\n\nvar _default = Displayable;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1068:\n/***/ (function(module, exports) {\n\n/**\n * @param {Array.<Object>} colorStops\n */\nvar Gradient = function (colorStops) {\n  this.colorStops = colorStops || [];\n};\n\nGradient.prototype = {\n  constructor: Gradient,\n  addColorStop: function (offset, color) {\n    this.colorStops.push({\n      offset: offset,\n      color: color\n    });\n  }\n};\nvar _default = Gradient;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1069:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar numberUtil = __webpack_require__(1030);\n\nvar formatUtil = __webpack_require__(1034);\n\nvar Scale = __webpack_require__(1063);\n\nvar helper = __webpack_require__(1103);\n\n/**\n * Interval scale\n * @module echarts/scale/Interval\n */\nvar roundNumber = numberUtil.round;\n/**\n * @alias module:echarts/coord/scale/Interval\n * @constructor\n */\n\nvar IntervalScale = Scale.extend({\n  type: 'interval',\n  _interval: 0,\n  _intervalPrecision: 2,\n  setExtent: function (start, end) {\n    var thisExtent = this._extent; //start,end may be a Number like '25',so...\n\n    if (!isNaN(start)) {\n      thisExtent[0] = parseFloat(start);\n    }\n\n    if (!isNaN(end)) {\n      thisExtent[1] = parseFloat(end);\n    }\n  },\n  unionExtent: function (other) {\n    var extent = this._extent;\n    other[0] < extent[0] && (extent[0] = other[0]);\n    other[1] > extent[1] && (extent[1] = other[1]); // unionExtent may called by it's sub classes\n\n    IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n  },\n\n  /**\n   * Get interval\n   */\n  getInterval: function () {\n    return this._interval;\n  },\n\n  /**\n   * Set interval\n   */\n  setInterval: function (interval) {\n    this._interval = interval; // Dropped auto calculated niceExtent and use user setted extent\n    // We assume user wan't to set both interval, min, max to get a better result\n\n    this._niceExtent = this._extent.slice();\n    this._intervalPrecision = helper.getIntervalPrecision(interval);\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    return helper.intervalScaleGetTicks(this._interval, this._extent, this._niceExtent, this._intervalPrecision);\n  },\n\n  /**\n   * @return {Array.<string>}\n   */\n  getTicksLabels: function () {\n    var labels = [];\n    var ticks = this.getTicks();\n\n    for (var i = 0; i < ticks.length; i++) {\n      labels.push(this.getLabel(ticks[i]));\n    }\n\n    return labels;\n  },\n\n  /**\n   * @param {number} data\n   * @param {Object} [opt]\n   * @param {number|string} [opt.precision] If 'auto', use nice presision.\n   * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n   * @return {string}\n   */\n  getLabel: function (data, opt) {\n    if (data == null) {\n      return '';\n    }\n\n    var precision = opt && opt.precision;\n\n    if (precision == null) {\n      precision = numberUtil.getPrecisionSafe(data) || 0;\n    } else if (precision === 'auto') {\n      // Should be more precise then tick.\n      precision = this._intervalPrecision;\n    } // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n    // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n\n\n    data = roundNumber(data, precision, true);\n    return formatUtil.addCommas(data);\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   *\n   * @param {number} [splitNumber = 5] Desired number of ticks\n   * @param {number} [minInterval]\n   * @param {number} [maxInterval]\n   */\n  niceTicks: function (splitNumber, minInterval, maxInterval) {\n    splitNumber = splitNumber || 5;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (!isFinite(span)) {\n      return;\n    } // User may set axis min 0 and data are all negative\n    // FIXME If it needs to reverse ?\n\n\n    if (span < 0) {\n      span = -span;\n      extent.reverse();\n    }\n\n    var result = helper.intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval);\n    this._intervalPrecision = result.intervalPrecision;\n    this._interval = result.interval;\n    this._niceExtent = result.niceTickExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @param {Object} opt\n   * @param {number} [opt.splitNumber = 5] Given approx tick number\n   * @param {boolean} [opt.fixMin=false]\n   * @param {boolean} [opt.fixMax=false]\n   * @param {boolean} [opt.minInterval]\n   * @param {boolean} [opt.maxInterval]\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      if (extent[0] !== 0) {\n        // Expand extent\n        var expandSize = extent[0]; // In the fowllowing case\n        //      Axis has been fixed max 100\n        //      Plus data are all 100 and axis extent are [100, 100].\n        // Extend to the both side will cause expanded max is larger than fixed max.\n        // So only expand to the smaller side.\n\n        if (!opt.fixMax) {\n          extent[1] += expandSize / 2;\n          extent[0] -= expandSize / 2;\n        } else {\n          extent[0] -= expandSize / 2;\n        }\n      } else {\n        extent[1] = 1;\n      }\n    }\n\n    var span = extent[1] - extent[0]; // If there are no data and extent are [Infinity, -Infinity]\n\n    if (!isFinite(span)) {\n      extent[0] = 0;\n      extent[1] = 1;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n    }\n  }\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nIntervalScale.create = function () {\n  return new IntervalScale();\n};\n\nvar _default = IntervalScale;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1070:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(1027);\n\nvar retrieve = _util.retrieve;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar each = _util.each;\n\nvar formatUtil = __webpack_require__(1034);\n\nvar graphic = __webpack_require__(1029);\n\nvar Model = __webpack_require__(1038);\n\nvar _number = __webpack_require__(1030);\n\nvar isRadianAroundZero = _number.isRadianAroundZero;\nvar remRadian = _number.remRadian;\n\nvar _symbol = __webpack_require__(1052);\n\nvar createSymbol = _symbol.createSymbol;\n\nvar matrixUtil = __webpack_require__(1043);\n\nvar _vector = __webpack_require__(1033);\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar PI = Math.PI;\n\nfunction makeAxisEventDataBase(axisModel) {\n  var eventData = {\n    componentType: axisModel.mainType\n  };\n  eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n  return eventData;\n}\n/**\n * A final axis is translated and rotated from a \"standard axis\".\n * So opt.position and opt.rotation is required.\n *\n * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n * for example: (0, 0) ------------> (0, 50)\n *\n * nameDirection or tickDirection or labelDirection is 1 means tick\n * or label is below the standard axis, whereas is -1 means above\n * the standard axis. labelOffset means offset between label and axis,\n * which is useful when 'onZero', where axisLabel is in the grid and\n * label in outside grid.\n *\n * Tips: like always,\n * positive rotation represents anticlockwise, and negative rotation\n * represents clockwise.\n * The direction of position coordinate is the same as the direction\n * of screen coordinate.\n *\n * Do not need to consider axis 'inverse', which is auto processed by\n * axis extent.\n *\n * @param {module:zrender/container/Group} group\n * @param {Object} axisModel\n * @param {Object} opt Standard axis parameters.\n * @param {Array.<number>} opt.position [x, y]\n * @param {number} opt.rotation by radian\n * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle' or 'center'.\n * @param {number} [opt.tickDirection=1] 1 or -1\n * @param {number} [opt.labelDirection=1] 1 or -1\n * @param {number} [opt.labelOffset=0] Usefull when onZero.\n * @param {string} [opt.axisLabelShow] default get from axisModel.\n * @param {string} [opt.axisName] default get from axisModel.\n * @param {number} [opt.axisNameAvailableWidth]\n * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n * @param {number} [opt.labelInterval] Default label interval when label\n *                                     interval from model is null or 'auto'.\n * @param {number} [opt.strokeContainThreshold] Default label interval when label\n * @param {number} [opt.nameTruncateMaxWidth]\n */\n\n\nvar AxisBuilder = function (axisModel, opt) {\n  /**\n   * @readOnly\n   */\n  this.opt = opt;\n  /**\n   * @readOnly\n   */\n\n  this.axisModel = axisModel; // Default value\n\n  defaults(opt, {\n    labelOffset: 0,\n    nameDirection: 1,\n    tickDirection: 1,\n    labelDirection: 1,\n    silent: true\n  });\n  /**\n   * @readOnly\n   */\n\n  this.group = new graphic.Group(); // FIXME Not use a seperate text group?\n\n  var dumbGroup = new graphic.Group({\n    position: opt.position.slice(),\n    rotation: opt.rotation\n  }); // this.group.add(dumbGroup);\n  // this._dumbGroup = dumbGroup;\n\n  dumbGroup.updateTransform();\n  this._transform = dumbGroup.transform;\n  this._dumbGroup = dumbGroup;\n};\n\nAxisBuilder.prototype = {\n  constructor: AxisBuilder,\n  hasBuilder: function (name) {\n    return !!builders[name];\n  },\n  add: function (name) {\n    builders[name].call(this);\n  },\n  getGroup: function () {\n    return this.group;\n  }\n};\nvar builders = {\n  /**\n   * @private\n   */\n  axisLine: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n\n    if (!axisModel.get('axisLine.show')) {\n      return;\n    }\n\n    var extent = this.axisModel.axis.getExtent();\n    var matrix = this._transform;\n    var pt1 = [extent[0], 0];\n    var pt2 = [extent[1], 0];\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    }\n\n    var lineStyle = extend({\n      lineCap: 'round'\n    }, axisModel.getModel('axisLine.lineStyle').getLineStyle());\n    this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'line',\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: lineStyle,\n      strokeContainThreshold: opt.strokeContainThreshold || 5,\n      silent: true,\n      z2: 1\n    })));\n    var arrows = axisModel.get('axisLine.symbol');\n    var arrowSize = axisModel.get('axisLine.symbolSize');\n\n    if (arrows != null) {\n      if (typeof arrows === 'string') {\n        // Use the same arrow for start and end point\n        arrows = [arrows, arrows];\n      }\n\n      if (typeof arrowSize === 'string' || typeof arrowSize === 'number') {\n        // Use the same size for width and height\n        arrowSize = [arrowSize, arrowSize];\n      }\n\n      var symbolWidth = arrowSize[0];\n      var symbolHeight = arrowSize[1];\n      each([[opt.rotation + Math.PI / 2, pt1], [opt.rotation - Math.PI / 2, pt2]], function (item, index) {\n        if (arrows[index] !== 'none' && arrows[index] != null) {\n          var symbol = createSymbol(arrows[index], -symbolWidth / 2, -symbolHeight / 2, symbolWidth, symbolHeight, lineStyle.stroke, true);\n          symbol.attr({\n            rotation: item[0],\n            position: item[1],\n            silent: true\n          });\n          this.group.add(symbol);\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  axisTickLabel: function () {\n    var axisModel = this.axisModel;\n    var opt = this.opt;\n    var tickEls = buildAxisTick(this, axisModel, opt);\n    var labelEls = buildAxisLabel(this, axisModel, opt);\n    fixMinMaxLabelShow(axisModel, labelEls, tickEls);\n  },\n\n  /**\n   * @private\n   */\n  axisName: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n    var name = retrieve(opt.axisName, axisModel.get('name'));\n\n    if (!name) {\n      return;\n    }\n\n    var nameLocation = axisModel.get('nameLocation');\n    var nameDirection = opt.nameDirection;\n    var textStyleModel = axisModel.getModel('nameTextStyle');\n    var gap = axisModel.get('nameGap') || 0;\n    var extent = this.axisModel.axis.getExtent();\n    var gapSignal = extent[0] > extent[1] ? -1 : 1;\n    var pos = [nameLocation === 'start' ? extent[0] - gapSignal * gap : nameLocation === 'end' ? extent[1] + gapSignal * gap : (extent[0] + extent[1]) / 2, // 'middle'\n    // Reuse labelOffset.\n    isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0];\n    var labelLayout;\n    var nameRotation = axisModel.get('nameRotate');\n\n    if (nameRotation != null) {\n      nameRotation = nameRotation * PI / 180; // To radian.\n    }\n\n    var axisNameAvailableWidth;\n\n    if (isNameLocationCenter(nameLocation)) {\n      labelLayout = innerTextLayout(opt.rotation, nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n      nameDirection);\n    } else {\n      labelLayout = endTextLayout(opt, nameLocation, nameRotation || 0, extent);\n      axisNameAvailableWidth = opt.axisNameAvailableWidth;\n\n      if (axisNameAvailableWidth != null) {\n        axisNameAvailableWidth = Math.abs(axisNameAvailableWidth / Math.sin(labelLayout.rotation));\n        !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n      }\n    }\n\n    var textFont = textStyleModel.getFont();\n    var truncateOpt = axisModel.get('nameTruncate', true) || {};\n    var ellipsis = truncateOpt.ellipsis;\n    var maxWidth = retrieve(opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth); // FIXME\n    // truncate rich text? (consider performance)\n\n    var truncatedText = ellipsis != null && maxWidth != null ? formatUtil.truncateText(name, maxWidth, textFont, ellipsis, {\n      minChar: 2,\n      placeholder: truncateOpt.placeholder\n    }) : name;\n    var tooltipOpt = axisModel.get('tooltip', true);\n    var mainType = axisModel.mainType;\n    var formatterParams = {\n      componentType: mainType,\n      name: name,\n      $vars: ['name']\n    };\n    formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'name',\n      __fullText: name,\n      __truncatedText: truncatedText,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: isSilent(axisModel),\n      z2: 1,\n      tooltip: tooltipOpt && tooltipOpt.show ? extend({\n        content: name,\n        formatter: function () {\n          return name;\n        },\n        formatterParams: formatterParams\n      }, tooltipOpt) : null\n    });\n    graphic.setTextStyle(textEl.style, textStyleModel, {\n      text: truncatedText,\n      textFont: textFont,\n      textFill: textStyleModel.getTextColor() || axisModel.get('axisLine.lineStyle.color'),\n      textAlign: labelLayout.textAlign,\n      textVerticalAlign: labelLayout.textVerticalAlign\n    });\n\n    if (axisModel.get('triggerEvent')) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisName';\n      textEl.eventData.name = name;\n    } // FIXME\n\n\n    this._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    this.group.add(textEl);\n    textEl.decomposeTransform();\n  }\n};\n/**\n * @public\n * @static\n * @param {Object} opt\n * @param {number} axisRotation in radian\n * @param {number} textRotation in radian\n * @param {number} direction\n * @return {Object} {\n *  rotation, // according to axis\n *  textAlign,\n *  textVerticalAlign\n * }\n */\n\nvar innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n  var rotationDiff = remRadian(textRotation - axisRotation);\n  var textAlign;\n  var textVerticalAlign;\n\n  if (isRadianAroundZero(rotationDiff)) {\n    // Label is parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI)) {\n    // Label is inverse parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff > 0 && rotationDiff < PI) {\n      textAlign = direction > 0 ? 'right' : 'left';\n    } else {\n      textAlign = direction > 0 ? 'left' : 'right';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n};\n\nfunction endTextLayout(opt, textPosition, textRotate, extent) {\n  var rotationDiff = remRadian(textRotate - opt.rotation);\n  var textAlign;\n  var textVerticalAlign;\n  var inverse = extent[0] > extent[1];\n  var onLeft = textPosition === 'start' && !inverse || textPosition !== 'start' && inverse;\n\n  if (isRadianAroundZero(rotationDiff - PI / 2)) {\n    textVerticalAlign = onLeft ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n    textVerticalAlign = onLeft ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n      textAlign = onLeft ? 'left' : 'right';\n    } else {\n      textAlign = onLeft ? 'right' : 'left';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction isSilent(axisModel) {\n  var tooltipOpt = axisModel.get('tooltip');\n  return axisModel.get('silent') // Consider mouse cursor, add these restrictions.\n  || !(axisModel.get('triggerEvent') || tooltipOpt && tooltipOpt.show);\n}\n\nfunction fixMinMaxLabelShow(axisModel, labelEls, tickEls) {\n  // If min or max are user set, we need to check\n  // If the tick on min(max) are overlap on their neighbour tick\n  // If they are overlapped, we need to hide the min(max) tick label\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel'); // FIXME\n  // Have not consider onBand yet, where tick els is more than label els.\n\n  labelEls = labelEls || [];\n  tickEls = tickEls || [];\n  var firstLabel = labelEls[0];\n  var nextLabel = labelEls[1];\n  var lastLabel = labelEls[labelEls.length - 1];\n  var prevLabel = labelEls[labelEls.length - 2];\n  var firstTick = tickEls[0];\n  var nextTick = tickEls[1];\n  var lastTick = tickEls[tickEls.length - 1];\n  var prevTick = tickEls[tickEls.length - 2];\n\n  if (showMinLabel === false) {\n    ignoreEl(firstLabel);\n    ignoreEl(firstTick);\n  } else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n    if (showMinLabel) {\n      ignoreEl(nextLabel);\n      ignoreEl(nextTick);\n    } else {\n      ignoreEl(firstLabel);\n      ignoreEl(firstTick);\n    }\n  }\n\n  if (showMaxLabel === false) {\n    ignoreEl(lastLabel);\n    ignoreEl(lastTick);\n  } else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n    if (showMaxLabel) {\n      ignoreEl(prevLabel);\n      ignoreEl(prevTick);\n    } else {\n      ignoreEl(lastLabel);\n      ignoreEl(lastTick);\n    }\n  }\n}\n\nfunction ignoreEl(el) {\n  el && (el.ignore = true);\n}\n\nfunction isTwoLabelOverlapped(current, next, labelLayout) {\n  // current and next has the same rotation.\n  var firstRect = current && current.getBoundingRect().clone();\n  var nextRect = next && next.getBoundingRect().clone();\n\n  if (!firstRect || !nextRect) {\n    return;\n  } // When checking intersect of two rotated labels, we use mRotationBack\n  // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n\n\n  var mRotationBack = matrixUtil.identity([]);\n  matrixUtil.rotate(mRotationBack, mRotationBack, -current.rotation);\n  firstRect.applyTransform(matrixUtil.mul([], mRotationBack, current.getLocalTransform()));\n  nextRect.applyTransform(matrixUtil.mul([], mRotationBack, next.getLocalTransform()));\n  return firstRect.intersect(nextRect);\n}\n\nfunction isNameLocationCenter(nameLocation) {\n  return nameLocation === 'middle' || nameLocation === 'center';\n}\n/**\n * @static\n */\n\n\nvar ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval, ticksCnt, showMinLabel, showMaxLabel) {\n  if (i === 0 && showMinLabel || i === ticksCnt - 1 && showMaxLabel) {\n    return false;\n  } // FIXME\n  // Have not consider label overlap (if label is too long) yet.\n\n\n  var rawTick;\n  var scale = axis.scale;\n  return scale.type === 'ordinal' && (typeof interval === 'function' ? (rawTick = scale.getTicks()[i], !interval(rawTick, scale.getLabel(rawTick))) : i % (interval + 1));\n};\n/**\n * @static\n */\n\n\nvar getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n  var interval = model.get('interval');\n\n  if (interval == null || interval == 'auto') {\n    interval = labelInterval;\n  }\n\n  return interval;\n};\n\nfunction buildAxisTick(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n\n  if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n    return;\n  }\n\n  var tickModel = axisModel.getModel('axisTick');\n  var lineStyleModel = tickModel.getModel('lineStyle');\n  var tickLen = tickModel.get('length');\n  var tickInterval = getInterval(tickModel, opt.labelInterval);\n  var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel')); // FIXME\n  // Corresponds to ticksCoords ?\n\n  var ticks = axis.scale.getTicks();\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n  var pt1 = [];\n  var pt2 = [];\n  var matrix = axisBuilder._transform;\n  var tickEls = [];\n  var ticksCnt = ticksCoords.length;\n\n  for (var i = 0; i < ticksCnt; i++) {\n    // Only ordinal scale support tick interval\n    if (ifIgnoreOnTick(axis, i, tickInterval, ticksCnt, showMinLabel, showMaxLabel)) {\n      continue;\n    }\n\n    var tickCoord = ticksCoords[i];\n    pt1[0] = tickCoord;\n    pt1[1] = 0;\n    pt2[0] = tickCoord;\n    pt2[1] = opt.tickDirection * tickLen;\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    } // Tick line, Not use group transform to have better line draw\n\n\n    var tickEl = new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'tick_' + ticks[i],\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: defaults(lineStyleModel.getLineStyle(), {\n        stroke: axisModel.get('axisLine.lineStyle.color')\n      }),\n      z2: 2,\n      silent: true\n    }));\n    axisBuilder.group.add(tickEl);\n    tickEls.push(tickEl);\n  }\n\n  return tickEls;\n}\n\nfunction buildAxisLabel(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n  var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n  if (!show || axis.scale.isBlank()) {\n    return;\n  }\n\n  var labelModel = axisModel.getModel('axisLabel');\n  var labelMargin = labelModel.get('margin');\n  var ticks = axis.scale.getTicks();\n  var labels = axisModel.getFormattedLabels(); // Special label rotate.\n\n  var labelRotation = (retrieve(opt.labelRotate, labelModel.get('rotate')) || 0) * PI / 180;\n  var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n  var categoryData = axisModel.get('data');\n  var labelEls = [];\n  var silent = isSilent(axisModel);\n  var triggerEvent = axisModel.get('triggerEvent');\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n  each(ticks, function (tickVal, index) {\n    if (ifIgnoreOnTick(axis, index, opt.labelInterval, ticks.length, showMinLabel, showMaxLabel)) {\n      return;\n    }\n\n    var itemLabelModel = labelModel;\n\n    if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n      itemLabelModel = new Model(categoryData[tickVal].textStyle, labelModel, axisModel.ecModel);\n    }\n\n    var textColor = itemLabelModel.getTextColor() || axisModel.get('axisLine.lineStyle.color');\n    var tickCoord = axis.dataToCoord(tickVal);\n    var pos = [tickCoord, opt.labelOffset + opt.labelDirection * labelMargin];\n    var labelStr = axis.scale.getLabel(tickVal);\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'label_' + tickVal,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: silent,\n      z2: 10\n    });\n    graphic.setTextStyle(textEl.style, itemLabelModel, {\n      text: labels[index],\n      textAlign: itemLabelModel.getShallow('align', true) || labelLayout.textAlign,\n      textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true) || itemLabelModel.getShallow('baseline', true) || labelLayout.textVerticalAlign,\n      textFill: typeof textColor === 'function' ? textColor( // (1) In category axis with data zoom, tick is not the original\n      // index of axis.data. So tick should not be exposed to user\n      // in category axis.\n      // (2) Compatible with previous version, which always returns labelStr.\n      // But in interval scale labelStr is like '223,445', which maked\n      // user repalce ','. So we modify it to return original val but remain\n      // it as 'string' to avoid error in replacing.\n      axis.type === 'category' ? labelStr : axis.type === 'value' ? tickVal + '' : tickVal, index) : textColor\n    }); // Pack data for mouse event\n\n    if (triggerEvent) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisLabel';\n      textEl.eventData.value = labelStr;\n    } // FIXME\n\n\n    axisBuilder._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    labelEls.push(textEl);\n    axisBuilder.group.add(textEl);\n    textEl.decomposeTransform();\n  });\n  return labelEls;\n}\n\nvar _default = AxisBuilder;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1071:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(1032);\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = __webpack_require__(1028);\n\nvar axisPointerModelHelper = __webpack_require__(1064);\n\n/**\n * Base class of AxisView.\n */\nvar AxisView = echarts.extendComponentView({\n  type: 'axis',\n\n  /**\n   * @private\n   */\n  _axisPointer: null,\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  axisPointerClass: null,\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    // FIXME\n    // This process should proformed after coordinate systems updated\n    // (axis scale updated), and should be performed each time update.\n    // So put it here temporarily, although it is not appropriate to\n    // put a model-writing procedure in `view`.\n    this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n    AxisView.superApply(this, 'render', arguments);\n    updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n  },\n\n  /**\n   * Action handler.\n   * @public\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/model/Global} ecModel\n   * @param {module:echarts/ExtensionAPI} api\n   * @param {Object} payload\n   */\n  updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n    updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    var axisPointer = this._axisPointer;\n    axisPointer && axisPointer.remove(api);\n    AxisView.superApply(this, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    disposeAxisPointer(this, api);\n    AxisView.superApply(this, 'dispose', arguments);\n  }\n});\n\nfunction updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n  var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n\n  if (!Clazz) {\n    return;\n  }\n\n  var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n  axisPointerModel ? (axisView._axisPointer || (axisView._axisPointer = new Clazz())).render(axisModel, axisPointerModel, api, forceRender) : disposeAxisPointer(axisView, api);\n}\n\nfunction disposeAxisPointer(axisView, ecModel, api) {\n  var axisPointer = axisView._axisPointer;\n  axisPointer && axisPointer.dispose(ecModel, api);\n  axisView._axisPointer = null;\n}\n\nvar axisPointerClazz = [];\n\nAxisView.registerAxisPointerClass = function (type, clazz) {\n  axisPointerClazz[type] = clazz;\n};\n\nAxisView.getAxisPointerClass = function (type) {\n  return type && axisPointerClazz[type];\n};\n\nvar _default = AxisView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1072:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(1059);\n\nvar debugMode = _config.debugMode;\n\nvar log = function () {};\n\nif (debugMode === 1) {\n  log = function () {\n    for (var k in arguments) {\n      throw new Error(arguments[k]);\n    }\n  };\n} else if (debugMode > 1) {\n  log = function () {\n    for (var k in arguments) {\n      console.log(arguments[k]);\n    }\n  };\n}\n\nvar _default = log;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1073:\n/***/ (function(module, exports) {\n\n// https://github.com/mziccard/node-timsort\nvar DEFAULT_MIN_MERGE = 32;\nvar DEFAULT_MIN_GALLOPING = 7;\nvar DEFAULT_TMP_STORAGE_LENGTH = 256;\n\nfunction minRunLength(n) {\n  var r = 0;\n\n  while (n >= DEFAULT_MIN_MERGE) {\n    r |= n & 1;\n    n >>= 1;\n  }\n\n  return n + r;\n}\n\nfunction makeAscendingRun(array, lo, hi, compare) {\n  var runHi = lo + 1;\n\n  if (runHi === hi) {\n    return 1;\n  }\n\n  if (compare(array[runHi++], array[lo]) < 0) {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n      runHi++;\n    }\n\n    reverseRun(array, lo, runHi);\n  } else {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n      runHi++;\n    }\n  }\n\n  return runHi - lo;\n}\n\nfunction reverseRun(array, lo, hi) {\n  hi--;\n\n  while (lo < hi) {\n    var t = array[lo];\n    array[lo++] = array[hi];\n    array[hi--] = t;\n  }\n}\n\nfunction binaryInsertionSort(array, lo, hi, start, compare) {\n  if (start === lo) {\n    start++;\n  }\n\n  for (; start < hi; start++) {\n    var pivot = array[start];\n    var left = lo;\n    var right = start;\n    var mid;\n\n    while (left < right) {\n      mid = left + right >>> 1;\n\n      if (compare(pivot, array[mid]) < 0) {\n        right = mid;\n      } else {\n        left = mid + 1;\n      }\n    }\n\n    var n = start - left;\n\n    switch (n) {\n      case 3:\n        array[left + 3] = array[left + 2];\n\n      case 2:\n        array[left + 2] = array[left + 1];\n\n      case 1:\n        array[left + 1] = array[left];\n        break;\n\n      default:\n        while (n > 0) {\n          array[left + n] = array[left + n - 1];\n          n--;\n        }\n\n    }\n\n    array[left] = pivot;\n  }\n}\n\nfunction gallopLeft(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) > 0) {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  } else {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) > 0) {\n      lastOffset = m + 1;\n    } else {\n      offset = m;\n    }\n  }\n\n  return offset;\n}\n\nfunction gallopRight(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) < 0) {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  } else {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) < 0) {\n      offset = m;\n    } else {\n      lastOffset = m + 1;\n    }\n  }\n\n  return offset;\n}\n\nfunction TimSort(array, compare) {\n  var minGallop = DEFAULT_MIN_GALLOPING;\n  var length = 0;\n  var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n  var stackLength = 0;\n  var runStart;\n  var runLength;\n  var stackSize = 0;\n  length = array.length;\n\n  if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n    tmpStorageLength = length >>> 1;\n  }\n\n  var tmp = [];\n  stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n  runStart = [];\n  runLength = [];\n\n  function pushRun(_runStart, _runLength) {\n    runStart[stackSize] = _runStart;\n    runLength[stackSize] = _runLength;\n    stackSize += 1;\n  }\n\n  function mergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n        if (runLength[n - 1] < runLength[n + 1]) {\n          n--;\n        }\n      } else if (runLength[n] > runLength[n + 1]) {\n        break;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function forceMergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n        n--;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function mergeAt(i) {\n    var start1 = runStart[i];\n    var length1 = runLength[i];\n    var start2 = runStart[i + 1];\n    var length2 = runLength[i + 1];\n    runLength[i] = length1 + length2;\n\n    if (i === stackSize - 3) {\n      runStart[i + 1] = runStart[i + 2];\n      runLength[i + 1] = runLength[i + 2];\n    }\n\n    stackSize--;\n    var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n    start1 += k;\n    length1 -= k;\n\n    if (length1 === 0) {\n      return;\n    }\n\n    length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n    if (length2 === 0) {\n      return;\n    }\n\n    if (length1 <= length2) {\n      mergeLow(start1, length1, start2, length2);\n    } else {\n      mergeHigh(start1, length1, start2, length2);\n    }\n  }\n\n  function mergeLow(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length1; i++) {\n      tmp[i] = array[start1 + i];\n    }\n\n    var cursor1 = 0;\n    var cursor2 = start2;\n    var dest = start1;\n    array[dest++] = array[cursor2++];\n\n    if (--length2 === 0) {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n\n      return;\n    }\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n      return;\n    }\n\n    var _minGallop = minGallop;\n    var count1, count2, exit;\n\n    while (1) {\n      count1 = 0;\n      count2 = 0;\n      exit = false;\n\n      do {\n        if (compare(array[cursor2], tmp[cursor1]) < 0) {\n          array[dest++] = array[cursor2++];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest++] = tmp[cursor1++];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n        if (count1 !== 0) {\n          for (i = 0; i < count1; i++) {\n            array[dest + i] = tmp[cursor1 + i];\n          }\n\n          dest += count1;\n          cursor1 += count1;\n          length1 -= count1;\n\n          if (length1 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = array[cursor2++];\n\n        if (--length2 === 0) {\n          exit = true;\n          break;\n        }\n\n        count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n        if (count2 !== 0) {\n          for (i = 0; i < count2; i++) {\n            array[dest + i] = array[cursor2 + i];\n          }\n\n          dest += count2;\n          cursor2 += count2;\n          length2 -= count2;\n\n          if (length2 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = tmp[cursor1++];\n\n        if (--length1 === 1) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n    minGallop < 1 && (minGallop = 1);\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n    } else if (length1 === 0) {\n      throw new Error(); // throw new Error('mergeLow preconditions were not respected');\n    } else {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n    }\n  }\n\n  function mergeHigh(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length2; i++) {\n      tmp[i] = array[start2 + i];\n    }\n\n    var cursor1 = start1 + length1 - 1;\n    var cursor2 = length2 - 1;\n    var dest = start2 + length2 - 1;\n    var customCursor = 0;\n    var customDest = 0;\n    array[dest--] = array[cursor1--];\n\n    if (--length1 === 0) {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n\n      return;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n      return;\n    }\n\n    var _minGallop = minGallop;\n\n    while (true) {\n      var count1 = 0;\n      var count2 = 0;\n      var exit = false;\n\n      do {\n        if (compare(tmp[cursor2], array[cursor1]) < 0) {\n          array[dest--] = array[cursor1--];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest--] = tmp[cursor2--];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n        if (count1 !== 0) {\n          dest -= count1;\n          cursor1 -= count1;\n          length1 -= count1;\n          customDest = dest + 1;\n          customCursor = cursor1 + 1;\n\n          for (i = count1 - 1; i >= 0; i--) {\n            array[customDest + i] = array[customCursor + i];\n          }\n\n          if (length1 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = tmp[cursor2--];\n\n        if (--length2 === 1) {\n          exit = true;\n          break;\n        }\n\n        count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n        if (count2 !== 0) {\n          dest -= count2;\n          cursor2 -= count2;\n          length2 -= count2;\n          customDest = dest + 1;\n          customCursor = cursor2 + 1;\n\n          for (i = 0; i < count2; i++) {\n            array[customDest + i] = tmp[customCursor + i];\n          }\n\n          if (length2 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = array[cursor1--];\n\n        if (--length1 === 0) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n\n    if (minGallop < 1) {\n      minGallop = 1;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n    } else if (length2 === 0) {\n      throw new Error(); // throw new Error('mergeHigh preconditions were not respected');\n    } else {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n    }\n  }\n\n  this.mergeRuns = mergeRuns;\n  this.forceMergeRuns = forceMergeRuns;\n  this.pushRun = pushRun;\n}\n\nfunction sort(array, compare, lo, hi) {\n  if (!lo) {\n    lo = 0;\n  }\n\n  if (!hi) {\n    hi = array.length;\n  }\n\n  var remaining = hi - lo;\n\n  if (remaining < 2) {\n    return;\n  }\n\n  var runLength = 0;\n\n  if (remaining < DEFAULT_MIN_MERGE) {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n    binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n    return;\n  }\n\n  var ts = new TimSort(array, compare);\n  var minRun = minRunLength(remaining);\n\n  do {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n\n    if (runLength < minRun) {\n      var force = remaining;\n\n      if (force > minRun) {\n        force = minRun;\n      }\n\n      binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n      runLength = force;\n    }\n\n    ts.pushRun(lo, runLength);\n    ts.mergeRuns();\n    remaining -= runLength;\n    lo += runLength;\n  } while (remaining !== 0);\n\n  ts.forceMergeRuns();\n}\n\nmodule.exports = sort;\n\n/***/ }),\n\n/***/ 1074:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Displayable = __webpack_require__(1067);\n\nvar BoundingRect = __webpack_require__(1036);\n\nvar zrUtil = __webpack_require__(1027);\n\nvar imageHelper = __webpack_require__(1075);\n\n/**\n * @alias zrender/graphic/Image\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nfunction ZImage(opts) {\n  Displayable.call(this, opts);\n}\n\nZImage.prototype = {\n  constructor: ZImage,\n  type: 'image',\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var src = style.image; // Must bind each time\n\n    style.bind(ctx, this, prevEl);\n    var image = this._image = imageHelper.createOrUpdateImage(src, this._image, this, this.onload);\n\n    if (!image || !imageHelper.isImageReady(image)) {\n      return;\n    } // 图片已经加载完成\n    // if (image.nodeName.toUpperCase() == 'IMG') {\n    //     if (!image.complete) {\n    //         return;\n    //     }\n    // }\n    // Else is canvas\n\n\n    var x = style.x || 0;\n    var y = style.y || 0;\n    var width = style.width;\n    var height = style.height;\n    var aspect = image.width / image.height;\n\n    if (width == null && height != null) {\n      // Keep image/height ratio\n      width = height * aspect;\n    } else if (height == null && width != null) {\n      height = width / aspect;\n    } else if (width == null && height == null) {\n      width = image.width;\n      height = image.height;\n    } // 设置transform\n\n\n    this.setTransform(ctx);\n\n    if (style.sWidth && style.sHeight) {\n      var sx = style.sx || 0;\n      var sy = style.sy || 0;\n      ctx.drawImage(image, sx, sy, style.sWidth, style.sHeight, x, y, width, height);\n    } else if (style.sx && style.sy) {\n      var sx = style.sx;\n      var sy = style.sy;\n      var sWidth = width - sx;\n      var sHeight = height - sy;\n      ctx.drawImage(image, sx, sy, sWidth, sHeight, x, y, width, height);\n    } else {\n      ctx.drawImage(image, x, y, width, height);\n    }\n\n    this.restoreTransform(ctx); // Draw rect text\n\n    if (style.text != null) {\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  getBoundingRect: function () {\n    var style = this.style;\n\n    if (!this._rect) {\n      this._rect = new BoundingRect(style.x || 0, style.y || 0, style.width || 0, style.height || 0);\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(ZImage, Displayable);\nvar _default = ZImage;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1075:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar LRU = __webpack_require__(1094);\n\nvar globalImageCache = new LRU(50);\n/**\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\nfunction findExistImage(newImageOrSrc) {\n  if (typeof newImageOrSrc === 'string') {\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    return cachedImgObj && cachedImgObj.image;\n  } else {\n    return newImageOrSrc;\n  }\n}\n/**\n * Caution: User should cache loaded images, but not just count on LRU.\n * Consider if required images more than LRU size, will dead loop occur?\n *\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @param {HTMLImageElement|HTMLCanvasElement|Canvas} image Existent image.\n * @param {module:zrender/Element} [hostEl] For calling `dirty`.\n * @param {Function} [cb] params: (image, cbPayload)\n * @param {Object} [cbPayload] Payload on cb calling.\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\n\nfunction createOrUpdateImage(newImageOrSrc, image, hostEl, cb, cbPayload) {\n  if (!newImageOrSrc) {\n    return image;\n  } else if (typeof newImageOrSrc === 'string') {\n    // Image should not be loaded repeatly.\n    if (image && image.__zrImageSrc === newImageOrSrc || !hostEl) {\n      return image;\n    } // Only when there is no existent image or existent image src\n    // is different, this method is responsible for load.\n\n\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    var pendingWrap = {\n      hostEl: hostEl,\n      cb: cb,\n      cbPayload: cbPayload\n    };\n\n    if (cachedImgObj) {\n      image = cachedImgObj.image;\n      !isImageReady(image) && cachedImgObj.pending.push(pendingWrap);\n    } else {\n      !image && (image = new Image());\n      image.onload = imageOnLoad;\n      globalImageCache.put(newImageOrSrc, image.__cachedImgObj = {\n        image: image,\n        pending: [pendingWrap]\n      });\n      image.src = image.__zrImageSrc = newImageOrSrc;\n    }\n\n    return image;\n  } // newImageOrSrc is an HTMLImageElement or HTMLCanvasElement or Canvas\n  else {\n      return newImageOrSrc;\n    }\n}\n\nfunction imageOnLoad() {\n  var cachedImgObj = this.__cachedImgObj;\n  this.onload = this.__cachedImgObj = null;\n\n  for (var i = 0; i < cachedImgObj.pending.length; i++) {\n    var pendingWrap = cachedImgObj.pending[i];\n    var cb = pendingWrap.cb;\n    cb && cb(this, pendingWrap.cbPayload);\n    pendingWrap.hostEl.dirty();\n  }\n\n  cachedImgObj.pending.length = 0;\n}\n\nfunction isImageReady(image) {\n  return image && image.width && image.height;\n}\n\nexports.findExistImage = findExistImage;\nexports.createOrUpdateImage = createOrUpdateImage;\nexports.isImageReady = isImageReady;\n\n/***/ }),\n\n/***/ 1076:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1027);\n\nvar _clazz = __webpack_require__(1041);\n\nvar parseClassType = _clazz.parseClassType;\nvar base = 0;\nvar DELIMITER = '_';\n/**\n * @public\n * @param {string} type\n * @return {string}\n */\n\nfunction getUID(type) {\n  // Considering the case of crossing js context,\n  // use Math.random to make id as unique as possible.\n  return [type || '', base++, Math.random()].join(DELIMITER);\n}\n/**\n * @inner\n */\n\n\nfunction enableSubTypeDefaulter(entity) {\n  var subTypeDefaulters = {};\n\n  entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n    componentType = parseClassType(componentType);\n    subTypeDefaulters[componentType.main] = defaulter;\n  };\n\n  entity.determineSubType = function (componentType, option) {\n    var type = option.type;\n\n    if (!type) {\n      var componentTypeMain = parseClassType(componentType).main;\n\n      if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n        type = subTypeDefaulters[componentTypeMain](option);\n      }\n    }\n\n    return type;\n  };\n\n  return entity;\n}\n/**\n * Topological travel on Activity Network (Activity On Vertices).\n * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n *\n * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n *\n * If there is circle dependencey, Error will be thrown.\n *\n */\n\n\nfunction enableTopologicalTravel(entity, dependencyGetter) {\n  /**\n   * @public\n   * @param {Array.<string>} targetNameList Target Component type list.\n   *                                           Can be ['aa', 'bb', 'aa.xx']\n   * @param {Array.<string>} fullNameList By which we can build dependency graph.\n   * @param {Function} callback Params: componentType, dependencies.\n   * @param {Object} context Scope of callback.\n   */\n  entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n    if (!targetNameList.length) {\n      return;\n    }\n\n    var result = makeDepndencyGraph(fullNameList);\n    var graph = result.graph;\n    var stack = result.noEntryList;\n    var targetNameSet = {};\n    zrUtil.each(targetNameList, function (name) {\n      targetNameSet[name] = true;\n    });\n\n    while (stack.length) {\n      var currComponentType = stack.pop();\n      var currVertex = graph[currComponentType];\n      var isInTargetNameSet = !!targetNameSet[currComponentType];\n\n      if (isInTargetNameSet) {\n        callback.call(context, currComponentType, currVertex.originalDeps.slice());\n        delete targetNameSet[currComponentType];\n      }\n\n      zrUtil.each(currVertex.successor, isInTargetNameSet ? removeEdgeAndAdd : removeEdge);\n    }\n\n    zrUtil.each(targetNameSet, function () {\n      throw new Error('Circle dependency may exists');\n    });\n\n    function removeEdge(succComponentType) {\n      graph[succComponentType].entryCount--;\n\n      if (graph[succComponentType].entryCount === 0) {\n        stack.push(succComponentType);\n      }\n    } // Consider this case: legend depends on series, and we call\n    // chart.setOption({series: [...]}), where only series is in option.\n    // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n    // not be called, but only sereis.mergeOption is called. Thus legend\n    // have no chance to update its local record about series (like which\n    // name of series is available in legend).\n\n\n    function removeEdgeAndAdd(succComponentType) {\n      targetNameSet[succComponentType] = true;\n      removeEdge(succComponentType);\n    }\n  };\n  /**\n   * DepndencyGraph: {Object}\n   * key: conponentType,\n   * value: {\n   *     successor: [conponentTypes...],\n   *     originalDeps: [conponentTypes...],\n   *     entryCount: {number}\n   * }\n   */\n\n\n  function makeDepndencyGraph(fullNameList) {\n    var graph = {};\n    var noEntryList = [];\n    zrUtil.each(fullNameList, function (name) {\n      var thisItem = createDependencyGraphItem(graph, name);\n      var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n      var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n      thisItem.entryCount = availableDeps.length;\n\n      if (thisItem.entryCount === 0) {\n        noEntryList.push(name);\n      }\n\n      zrUtil.each(availableDeps, function (dependentName) {\n        if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n          thisItem.predecessor.push(dependentName);\n        }\n\n        var thatItem = createDependencyGraphItem(graph, dependentName);\n\n        if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n          thatItem.successor.push(name);\n        }\n      });\n    });\n    return {\n      graph: graph,\n      noEntryList: noEntryList\n    };\n  }\n\n  function createDependencyGraphItem(graph, name) {\n    if (!graph[name]) {\n      graph[name] = {\n        predecessor: [],\n        successor: []\n      };\n    }\n\n    return graph[name];\n  }\n\n  function getAvailableDependencies(originalDeps, fullNameList) {\n    var availableDeps = [];\n    zrUtil.each(originalDeps, function (dep) {\n      zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n    });\n    return availableDeps;\n  }\n}\n\nexports.getUID = getUID;\nexports.enableSubTypeDefaulter = enableSubTypeDefaulter;\nexports.enableTopologicalTravel = enableTopologicalTravel;\n\n/***/ }),\n\n/***/ 1077:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1027);\n\nvar axisHelper = __webpack_require__(1045);\n\nfunction getName(obj) {\n  if (zrUtil.isObject(obj) && obj.value != null) {\n    return obj.value;\n  } else {\n    return obj + '';\n  }\n}\n\nvar _default = {\n  /**\n   * Format labels\n   * @return {Array.<string>}\n   */\n  getFormattedLabels: function () {\n    return axisHelper.getFormattedLabels(this.axis, this.get('axisLabel.formatter'));\n  },\n\n  /**\n   * Get categories\n   */\n  getCategories: function () {\n    return this.get('type') === 'category' && zrUtil.map(this.get('data'), getName);\n  },\n\n  /**\n   * @param {boolean} origin\n   * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n   */\n  getMin: function (origin) {\n    var option = this.option;\n    var min = !origin && option.rangeStart != null ? option.rangeStart : option.min;\n\n    if (this.axis && min != null && min !== 'dataMin' && typeof min !== 'function' && !zrUtil.eqNaN(min)) {\n      min = this.axis.scale.parse(min);\n    }\n\n    return min;\n  },\n\n  /**\n   * @param {boolean} origin\n   * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n   */\n  getMax: function (origin) {\n    var option = this.option;\n    var max = !origin && option.rangeEnd != null ? option.rangeEnd : option.max;\n\n    if (this.axis && max != null && max !== 'dataMax' && typeof max !== 'function' && !zrUtil.eqNaN(max)) {\n      max = this.axis.scale.parse(max);\n    }\n\n    return max;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  getNeedCrossZero: function () {\n    var option = this.option;\n    return option.rangeStart != null || option.rangeEnd != null ? false : !option.scale;\n  },\n\n  /**\n   * Should be implemented by each axis model if necessary.\n   * @return {module:echarts/model/Component} coordinate system model\n   */\n  getCoordSysModel: zrUtil.noop,\n\n  /**\n   * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n   * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n   */\n  setRange: function (rangeStart, rangeEnd) {\n    this.option.rangeStart = rangeStart;\n    this.option.rangeEnd = rangeEnd;\n  },\n\n  /**\n   * Reset range\n   */\n  resetRange: function () {\n    // rangeStart and rangeEnd is readonly.\n    this.option.rangeStart = this.option.rangeEnd = null;\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1078:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(1032);\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = __webpack_require__(1028);\n\nvar zrUtil = __webpack_require__(1027);\n\nvar env = __webpack_require__(1035);\n\nvar modelUtil = __webpack_require__(1031);\n\nvar helper = __webpack_require__(1079);\n\nvar AxisProxy = __webpack_require__(1202);\n\nvar each = zrUtil.each;\nvar eachAxisDim = helper.eachAxisDim;\nvar DataZoomModel = echarts.extendComponentModel({\n  type: 'dataZoom',\n  dependencies: ['xAxis', 'yAxis', 'zAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'series'],\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    zlevel: 0,\n    z: 4,\n    // Higher than normal component (z: 2).\n    orient: null,\n    // Default auto by axisIndex. Possible value: 'horizontal', 'vertical'.\n    xAxisIndex: null,\n    // Default the first horizontal category axis.\n    yAxisIndex: null,\n    // Default the first vertical category axis.\n    filterMode: 'filter',\n    // Possible values: 'filter' or 'empty' or 'weakFilter'.\n    // 'filter': data items which are out of window will be removed. This option is\n    //          applicable when filtering outliers. For each data item, it will be\n    //          filtered if one of the relevant dimensions is out of the window.\n    // 'weakFilter': data items which are out of window will be removed. This option\n    //          is applicable when filtering outliers. For each data item, it will be\n    //          filtered only if all  of the relevant dimensions are out of the same\n    //          side of the window.\n    // 'empty': data items which are out of window will be set to empty.\n    //          This option is applicable when user should not neglect\n    //          that there are some data items out of window.\n    // 'none': Do not filter.\n    // Taking line chart as an example, line will be broken in\n    // the filtered points when filterModel is set to 'empty', but\n    // be connected when set to 'filter'.\n    throttle: null,\n    // Dispatch action by the fixed rate, avoid frequency.\n    // default 100. Do not throttle when use null/undefined.\n    // If animation === true and animationDurationUpdate > 0,\n    // default value is 100, otherwise 20.\n    start: 0,\n    // Start percent. 0 ~ 100\n    end: 100,\n    // End percent. 0 ~ 100\n    startValue: null,\n    // Start value. If startValue specified, start is ignored.\n    endValue: null,\n    // End value. If endValue specified, end is ignored.\n    minSpan: null,\n    // 0 ~ 100\n    maxSpan: null,\n    // 0 ~ 100\n    minValueSpan: null,\n    // The range of dataZoom can not be smaller than that.\n    maxValueSpan: null,\n    // The range of dataZoom can not be larger than that.\n    rangeMode: null // Array, can be 'value' or 'percent'.\n\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel) {\n    /**\n     * key like x_0, y_1\n     * @private\n     * @type {Object}\n     */\n    this._dataIntervalByAxis = {};\n    /**\n     * @private\n     */\n\n    this._dataInfo = {};\n    /**\n     * key like x_0, y_1\n     * @private\n     */\n\n    this._axisProxies = {};\n    /**\n     * @readOnly\n     */\n\n    this.textStyleModel;\n    /**\n     * @private\n     */\n\n    this._autoThrottle = true;\n    /**\n     * 'percent' or 'value'\n     * @private\n     */\n\n    this._rangePropMode = ['percent', 'percent'];\n    var rawOption = retrieveRaw(option);\n    this.mergeDefaultAndTheme(option, ecModel);\n    this.doInit(rawOption);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (newOption) {\n    var rawOption = retrieveRaw(newOption); //FIX #2591\n\n    zrUtil.merge(this.option, newOption, true);\n    this.doInit(rawOption);\n  },\n\n  /**\n   * @protected\n   */\n  doInit: function (rawOption) {\n    var thisOption = this.option; // Disable realtime view update if canvas is not supported.\n\n    if (!env.canvasSupported) {\n      thisOption.realtime = false;\n    }\n\n    this._setDefaultThrottle(rawOption);\n\n    updateRangeUse(this, rawOption);\n    each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n      // start/end has higher priority over startValue/endValue if they\n      // both set, but we should make chart.setOption({endValue: 1000})\n      // effective, rather than chart.setOption({endValue: 1000, end: null}).\n      if (this._rangePropMode[index] === 'value') {\n        thisOption[names[0]] = null;\n      } // Otherwise do nothing and use the merge result.\n\n    }, this);\n    this.textStyleModel = this.getModel('textStyle');\n\n    this._resetTarget();\n\n    this._giveAxisProxies();\n  },\n\n  /**\n   * @private\n   */\n  _giveAxisProxies: function () {\n    var axisProxies = this._axisProxies;\n    this.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel, ecModel) {\n      var axisModel = this.dependentModels[dimNames.axis][axisIndex]; // If exists, share axisProxy with other dataZoomModels.\n\n      var axisProxy = axisModel.__dzAxisProxy || ( // Use the first dataZoomModel as the main model of axisProxy.\n      axisModel.__dzAxisProxy = new AxisProxy(dimNames.name, axisIndex, this, ecModel)); // FIXME\n      // dispose __dzAxisProxy\n\n      axisProxies[dimNames.name + '_' + axisIndex] = axisProxy;\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _resetTarget: function () {\n    var thisOption = this.option;\n\n    var autoMode = this._judgeAutoMode();\n\n    eachAxisDim(function (dimNames) {\n      var axisIndexName = dimNames.axisIndex;\n      thisOption[axisIndexName] = modelUtil.normalizeToArray(thisOption[axisIndexName]);\n    }, this);\n\n    if (autoMode === 'axisIndex') {\n      this._autoSetAxisIndex();\n    } else if (autoMode === 'orient') {\n      this._autoSetOrient();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _judgeAutoMode: function () {\n    // Auto set only works for setOption at the first time.\n    // The following is user's reponsibility. So using merged\n    // option is OK.\n    var thisOption = this.option;\n    var hasIndexSpecified = false;\n    eachAxisDim(function (dimNames) {\n      // When user set axisIndex as a empty array, we think that user specify axisIndex\n      // but do not want use auto mode. Because empty array may be encountered when\n      // some error occured.\n      if (thisOption[dimNames.axisIndex] != null) {\n        hasIndexSpecified = true;\n      }\n    }, this);\n    var orient = thisOption.orient;\n\n    if (orient == null && hasIndexSpecified) {\n      return 'orient';\n    } else if (!hasIndexSpecified) {\n      if (orient == null) {\n        thisOption.orient = 'horizontal';\n      }\n\n      return 'axisIndex';\n    }\n  },\n\n  /**\n   * @private\n   */\n  _autoSetAxisIndex: function () {\n    var autoAxisIndex = true;\n    var orient = this.get('orient', true);\n    var thisOption = this.option;\n    var dependentModels = this.dependentModels;\n\n    if (autoAxisIndex) {\n      // Find axis that parallel to dataZoom as default.\n      var dimName = orient === 'vertical' ? 'y' : 'x';\n\n      if (dependentModels[dimName + 'Axis'].length) {\n        thisOption[dimName + 'AxisIndex'] = [0];\n        autoAxisIndex = false;\n      } else {\n        each(dependentModels.singleAxis, function (singleAxisModel) {\n          if (autoAxisIndex && singleAxisModel.get('orient', true) === orient) {\n            thisOption.singleAxisIndex = [singleAxisModel.componentIndex];\n            autoAxisIndex = false;\n          }\n        });\n      }\n    }\n\n    if (autoAxisIndex) {\n      // Find the first category axis as default. (consider polar)\n      eachAxisDim(function (dimNames) {\n        if (!autoAxisIndex) {\n          return;\n        }\n\n        var axisIndices = [];\n        var axisModels = this.dependentModels[dimNames.axis];\n\n        if (axisModels.length && !axisIndices.length) {\n          for (var i = 0, len = axisModels.length; i < len; i++) {\n            if (axisModels[i].get('type') === 'category') {\n              axisIndices.push(i);\n            }\n          }\n        }\n\n        thisOption[dimNames.axisIndex] = axisIndices;\n\n        if (axisIndices.length) {\n          autoAxisIndex = false;\n        }\n      }, this);\n    }\n\n    if (autoAxisIndex) {\n      // FIXME\n      // 这里是兼容ec2的写法（没指定xAxisIndex和yAxisIndex时把scatter和双数值轴折柱纳入dataZoom控制），\n      // 但是实际是否需要Grid.js#getScaleByOption来判断（考虑time，log等axis type）？\n      // If both dataZoom.xAxisIndex and dataZoom.yAxisIndex is not specified,\n      // dataZoom component auto adopts series that reference to\n      // both xAxis and yAxis which type is 'value'.\n      this.ecModel.eachSeries(function (seriesModel) {\n        if (this._isSeriesHasAllAxesTypeOf(seriesModel, 'value')) {\n          eachAxisDim(function (dimNames) {\n            var axisIndices = thisOption[dimNames.axisIndex];\n            var axisIndex = seriesModel.get(dimNames.axisIndex);\n            var axisId = seriesModel.get(dimNames.axisId);\n            var axisModel = seriesModel.ecModel.queryComponents({\n              mainType: dimNames.axis,\n              index: axisIndex,\n              id: axisId\n            })[0];\n            axisIndex = axisModel.componentIndex;\n\n            if (zrUtil.indexOf(axisIndices, axisIndex) < 0) {\n              axisIndices.push(axisIndex);\n            }\n          });\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _autoSetOrient: function () {\n    var dim; // Find the first axis\n\n    this.eachTargetAxis(function (dimNames) {\n      !dim && (dim = dimNames.name);\n    }, this);\n    this.option.orient = dim === 'y' ? 'vertical' : 'horizontal';\n  },\n\n  /**\n   * @private\n   */\n  _isSeriesHasAllAxesTypeOf: function (seriesModel, axisType) {\n    // FIXME\n    // 需要series的xAxisIndex和yAxisIndex都首先自动设置上。\n    // 例如series.type === scatter时。\n    var is = true;\n    eachAxisDim(function (dimNames) {\n      var seriesAxisIndex = seriesModel.get(dimNames.axisIndex);\n      var axisModel = this.dependentModels[dimNames.axis][seriesAxisIndex];\n\n      if (!axisModel || axisModel.get('type') !== axisType) {\n        is = false;\n      }\n    }, this);\n    return is;\n  },\n\n  /**\n   * @private\n   */\n  _setDefaultThrottle: function (rawOption) {\n    // When first time user set throttle, auto throttle ends.\n    if (rawOption.hasOwnProperty('throttle')) {\n      this._autoThrottle = false;\n    }\n\n    if (this._autoThrottle) {\n      var globalOption = this.ecModel.option;\n      this.option.throttle = globalOption.animation && globalOption.animationDurationUpdate > 0 ? 100 : 20;\n    }\n  },\n\n  /**\n   * @public\n   */\n  getFirstTargetAxisModel: function () {\n    var firstAxisModel;\n    eachAxisDim(function (dimNames) {\n      if (firstAxisModel == null) {\n        var indices = this.get(dimNames.axisIndex);\n\n        if (indices.length) {\n          firstAxisModel = this.dependentModels[dimNames.axis][indices[0]];\n        }\n      }\n    }, this);\n    return firstAxisModel;\n  },\n\n  /**\n   * @public\n   * @param {Function} callback param: axisModel, dimNames, axisIndex, dataZoomModel, ecModel\n   */\n  eachTargetAxis: function (callback, context) {\n    var ecModel = this.ecModel;\n    eachAxisDim(function (dimNames) {\n      each(this.get(dimNames.axisIndex), function (axisIndex) {\n        callback.call(context, dimNames, axisIndex, this, ecModel);\n      }, this);\n    }, this);\n  },\n\n  /**\n   * @param {string} dimName\n   * @param {number} axisIndex\n   * @return {module:echarts/component/dataZoom/AxisProxy} If not found, return null/undefined.\n   */\n  getAxisProxy: function (dimName, axisIndex) {\n    return this._axisProxies[dimName + '_' + axisIndex];\n  },\n\n  /**\n   * @param {string} dimName\n   * @param {number} axisIndex\n   * @return {module:echarts/model/Model} If not found, return null/undefined.\n   */\n  getAxisModel: function (dimName, axisIndex) {\n    var axisProxy = this.getAxisProxy(dimName, axisIndex);\n    return axisProxy && axisProxy.getAxisModel();\n  },\n\n  /**\n   * If not specified, set to undefined.\n   *\n   * @public\n   * @param {Object} opt\n   * @param {number} [opt.start]\n   * @param {number} [opt.end]\n   * @param {number} [opt.startValue]\n   * @param {number} [opt.endValue]\n   * @param {boolean} [ignoreUpdateRangeUsg=false]\n   */\n  setRawRange: function (opt, ignoreUpdateRangeUsg) {\n    var option = this.option;\n    each([['start', 'startValue'], ['end', 'endValue']], function (names) {\n      // If only one of 'start' and 'startValue' is not null/undefined, the other\n      // should be cleared, which enable clear the option.\n      // If both of them are not set, keep option with the original value, which\n      // enable use only set start but not set end when calling `dispatchAction`.\n      // The same as 'end' and 'endValue'.\n      if (opt[names[0]] != null || opt[names[1]] != null) {\n        option[names[0]] = opt[names[0]];\n        option[names[1]] = opt[names[1]];\n      }\n    }, this);\n    !ignoreUpdateRangeUsg && updateRangeUse(this, opt);\n  },\n\n  /**\n   * @public\n   * @return {Array.<number>} [startPercent, endPercent]\n   */\n  getPercentRange: function () {\n    var axisProxy = this.findRepresentativeAxisProxy();\n\n    if (axisProxy) {\n      return axisProxy.getDataPercentWindow();\n    }\n  },\n\n  /**\n   * @public\n   * For example, chart.getModel().getComponent('dataZoom').getValueRange('y', 0);\n   *\n   * @param {string} [axisDimName]\n   * @param {number} [axisIndex]\n   * @return {Array.<number>} [startValue, endValue] value can only be '-' or finite number.\n   */\n  getValueRange: function (axisDimName, axisIndex) {\n    if (axisDimName == null && axisIndex == null) {\n      var axisProxy = this.findRepresentativeAxisProxy();\n\n      if (axisProxy) {\n        return axisProxy.getDataValueWindow();\n      }\n    } else {\n      return this.getAxisProxy(axisDimName, axisIndex).getDataValueWindow();\n    }\n  },\n\n  /**\n   * @public\n   * @param {module:echarts/model/Model} [axisModel] If axisModel given, find axisProxy\n   *      corresponding to the axisModel\n   * @return {module:echarts/component/dataZoom/AxisProxy}\n   */\n  findRepresentativeAxisProxy: function (axisModel) {\n    if (axisModel) {\n      return axisModel.__dzAxisProxy;\n    } // Find the first hosted axisProxy\n\n\n    var axisProxies = this._axisProxies;\n\n    for (var key in axisProxies) {\n      if (axisProxies.hasOwnProperty(key) && axisProxies[key].hostedBy(this)) {\n        return axisProxies[key];\n      }\n    } // If no hosted axis find not hosted axisProxy.\n    // Consider this case: dataZoomModel1 and dataZoomModel2 control the same axis,\n    // and the option.start or option.end settings are different. The percentRange\n    // should follow axisProxy.\n    // (We encounter this problem in toolbox data zoom.)\n\n\n    for (var key in axisProxies) {\n      if (axisProxies.hasOwnProperty(key) && !axisProxies[key].hostedBy(this)) {\n        return axisProxies[key];\n      }\n    }\n  },\n\n  /**\n   * @return {Array.<string>}\n   */\n  getRangePropMode: function () {\n    return this._rangePropMode.slice();\n  }\n});\n\nfunction retrieveRaw(option) {\n  var ret = {};\n  each(['start', 'end', 'startValue', 'endValue', 'throttle'], function (name) {\n    option.hasOwnProperty(name) && (ret[name] = option[name]);\n  });\n  return ret;\n}\n\nfunction updateRangeUse(dataZoomModel, rawOption) {\n  var rangePropMode = dataZoomModel._rangePropMode;\n  var rangeModeInOption = dataZoomModel.get('rangeMode');\n  each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n    var percentSpecified = rawOption[names[0]] != null;\n    var valueSpecified = rawOption[names[1]] != null;\n\n    if (percentSpecified && !valueSpecified) {\n      rangePropMode[index] = 'percent';\n    } else if (!percentSpecified && valueSpecified) {\n      rangePropMode[index] = 'value';\n    } else if (rangeModeInOption) {\n      rangePropMode[index] = rangeModeInOption[index];\n    } else if (percentSpecified) {\n      // percentSpecified && valueSpecified\n      rangePropMode[index] = 'percent';\n    } // else remain its original setting.\n\n  });\n}\n\nvar _default = DataZoomModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1079:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1027);\n\nvar formatUtil = __webpack_require__(1034);\n\nvar AXIS_DIMS = ['x', 'y', 'z', 'radius', 'angle', 'single']; // Supported coords.\n\nvar COORDS = ['cartesian2d', 'polar', 'singleAxis'];\n/**\n * @param {string} coordType\n * @return {boolean}\n */\n\nfunction isCoordSupported(coordType) {\n  return zrUtil.indexOf(COORDS, coordType) >= 0;\n}\n/**\n * Create \"each\" method to iterate names.\n *\n * @pubilc\n * @param  {Array.<string>} names\n * @param  {Array.<string>=} attrs\n * @return {Function}\n */\n\n\nfunction createNameEach(names, attrs) {\n  names = names.slice();\n  var capitalNames = zrUtil.map(names, formatUtil.capitalFirst);\n  attrs = (attrs || []).slice();\n  var capitalAttrs = zrUtil.map(attrs, formatUtil.capitalFirst);\n  return function (callback, context) {\n    zrUtil.each(names, function (name, index) {\n      var nameObj = {\n        name: name,\n        capital: capitalNames[index]\n      };\n\n      for (var j = 0; j < attrs.length; j++) {\n        nameObj[attrs[j]] = name + capitalAttrs[j];\n      }\n\n      callback.call(context, nameObj);\n    });\n  };\n}\n/**\n * Iterate each dimension name.\n *\n * @public\n * @param {Function} callback The parameter is like:\n *                            {\n *                                name: 'angle',\n *                                capital: 'Angle',\n *                                axis: 'angleAxis',\n *                                axisIndex: 'angleAixs',\n *                                index: 'angleIndex'\n *                            }\n * @param {Object} context\n */\n\n\nvar eachAxisDim = createNameEach(AXIS_DIMS, ['axisIndex', 'axis', 'index', 'id']);\n/**\n * If tow dataZoomModels has the same axis controlled, we say that they are 'linked'.\n * dataZoomModels and 'links' make up one or more graphics.\n * This function finds the graphic where the source dataZoomModel is in.\n *\n * @public\n * @param {Function} forEachNode Node iterator.\n * @param {Function} forEachEdgeType edgeType iterator\n * @param {Function} edgeIdGetter Giving node and edgeType, return an array of edge id.\n * @return {Function} Input: sourceNode, Output: Like {nodes: [], dims: {}}\n */\n\nfunction createLinkedNodesFinder(forEachNode, forEachEdgeType, edgeIdGetter) {\n  return function (sourceNode) {\n    var result = {\n      nodes: [],\n      records: {} // key: edgeType.name, value: Object (key: edge id, value: boolean).\n\n    };\n    forEachEdgeType(function (edgeType) {\n      result.records[edgeType.name] = {};\n    });\n\n    if (!sourceNode) {\n      return result;\n    }\n\n    absorb(sourceNode, result);\n    var existsLink;\n\n    do {\n      existsLink = false;\n      forEachNode(processSingleNode);\n    } while (existsLink);\n\n    function processSingleNode(node) {\n      if (!isNodeAbsorded(node, result) && isLinked(node, result)) {\n        absorb(node, result);\n        existsLink = true;\n      }\n    }\n\n    return result;\n  };\n\n  function isNodeAbsorded(node, result) {\n    return zrUtil.indexOf(result.nodes, node) >= 0;\n  }\n\n  function isLinked(node, result) {\n    var hasLink = false;\n    forEachEdgeType(function (edgeType) {\n      zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n        result.records[edgeType.name][edgeId] && (hasLink = true);\n      });\n    });\n    return hasLink;\n  }\n\n  function absorb(node, result) {\n    result.nodes.push(node);\n    forEachEdgeType(function (edgeType) {\n      zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n        result.records[edgeType.name][edgeId] = true;\n      });\n    });\n  }\n}\n\nexports.isCoordSupported = isCoordSupported;\nexports.createNameEach = createNameEach;\nexports.eachAxisDim = eachAxisDim;\nexports.createLinkedNodesFinder = createLinkedNodesFinder;\n\n/***/ }),\n\n/***/ 1080:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar ComponentView = __webpack_require__(1088);\n\nvar _default = ComponentView.extend({\n  type: 'dataZoom',\n  render: function (dataZoomModel, ecModel, api, payload) {\n    this.dataZoomModel = dataZoomModel;\n    this.ecModel = ecModel;\n    this.api = api;\n  },\n\n  /**\n   * Find the first target coordinate system.\n   *\n   * @protected\n   * @return {Object} {\n   *                   grid: [\n   *                       {model: coord0, axisModels: [axis1, axis3], coordIndex: 1},\n   *                       {model: coord1, axisModels: [axis0, axis2], coordIndex: 0},\n   *                       ...\n   *                   ],  // cartesians must not be null/undefined.\n   *                   polar: [\n   *                       {model: coord0, axisModels: [axis4], coordIndex: 0},\n   *                       ...\n   *                   ],  // polars must not be null/undefined.\n   *                   singleAxis: [\n   *                       {model: coord0, axisModels: [], coordIndex: 0}\n   *                   ]\n   */\n  getTargetCoordInfo: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var ecModel = this.ecModel;\n    var coordSysLists = {};\n    dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\n      var axisModel = ecModel.getComponent(dimNames.axis, axisIndex);\n\n      if (axisModel) {\n        var coordModel = axisModel.getCoordSysModel();\n        coordModel && save(coordModel, axisModel, coordSysLists[coordModel.mainType] || (coordSysLists[coordModel.mainType] = []), coordModel.componentIndex);\n      }\n    }, this);\n\n    function save(coordModel, axisModel, store, coordIndex) {\n      var item;\n\n      for (var i = 0; i < store.length; i++) {\n        if (store[i].model === coordModel) {\n          item = store[i];\n          break;\n        }\n      }\n\n      if (!item) {\n        store.push(item = {\n          model: coordModel,\n          axisModels: [],\n          coordIndex: coordIndex\n        });\n      }\n\n      item.axisModels.push(axisModel);\n    }\n\n    return coordSysLists;\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1081:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar guid = __webpack_require__(1091);\n\nvar env = __webpack_require__(1035);\n\nvar zrUtil = __webpack_require__(1027);\n\nvar Handler = __webpack_require__(1139);\n\nvar Storage = __webpack_require__(1141);\n\nvar Painter = __webpack_require__(1145);\n\nvar Animation = __webpack_require__(1147);\n\nvar HandlerProxy = __webpack_require__(1148);\n\n/*!\n* ZRender, a high performance 2d drawing library.\n*\n* Copyright (c) 2013, Baidu Inc.\n* All rights reserved.\n*\n* LICENSE\n* https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n*/\nvar useVML = !env.canvasSupported;\nvar painterCtors = {\n  canvas: Painter\n};\nvar instances = {}; // ZRender实例map索引\n\n/**\n * @type {string}\n */\n\nvar version = '3.7.4';\n/**\n * Initializing a zrender instance\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n * @return {module:zrender/ZRender}\n */\n\nfunction init(dom, opts) {\n  var zr = new ZRender(guid(), dom, opts);\n  instances[zr.id] = zr;\n  return zr;\n}\n/**\n * Dispose zrender instance\n * @param {module:zrender/ZRender} zr\n */\n\n\nfunction dispose(zr) {\n  if (zr) {\n    zr.dispose();\n  } else {\n    for (var key in instances) {\n      if (instances.hasOwnProperty(key)) {\n        instances[key].dispose();\n      }\n    }\n\n    instances = {};\n  }\n\n  return this;\n}\n/**\n * Get zrender instance by id\n * @param {string} id zrender instance id\n * @return {module:zrender/ZRender}\n */\n\n\nfunction getInstance(id) {\n  return instances[id];\n}\n\nfunction registerPainter(name, Ctor) {\n  painterCtors[name] = Ctor;\n}\n\nfunction delInstance(id) {\n  delete instances[id];\n}\n/**\n * @module zrender/ZRender\n */\n\n/**\n * @constructor\n * @alias module:zrender/ZRender\n * @param {string} id\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n */\n\n\nvar ZRender = function (id, dom, opts) {\n  opts = opts || {};\n  /**\n   * @type {HTMLDomElement}\n   */\n\n  this.dom = dom;\n  /**\n   * @type {string}\n   */\n\n  this.id = id;\n  var self = this;\n  var storage = new Storage();\n  var rendererType = opts.renderer; // TODO WebGL\n\n  if (useVML) {\n    if (!painterCtors.vml) {\n      throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n    }\n\n    rendererType = 'vml';\n  } else if (!rendererType || !painterCtors[rendererType]) {\n    rendererType = 'canvas';\n  }\n\n  var painter = new painterCtors[rendererType](dom, storage, opts);\n  this.storage = storage;\n  this.painter = painter;\n  var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;\n  this.handler = new Handler(storage, painter, handerProxy, painter.root);\n  /**\n   * @type {module:zrender/animation/Animation}\n   */\n\n  this.animation = new Animation({\n    stage: {\n      update: zrUtil.bind(this.flush, this)\n    }\n  });\n  this.animation.start();\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._needsRefresh; // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n  // FIXME 有点ugly\n\n  var oldDelFromStorage = storage.delFromStorage;\n  var oldAddToStorage = storage.addToStorage;\n\n  storage.delFromStorage = function (el) {\n    oldDelFromStorage.call(storage, el);\n    el && el.removeSelfFromZr(self);\n  };\n\n  storage.addToStorage = function (el) {\n    oldAddToStorage.call(storage, el);\n    el.addSelfToZr(self);\n  };\n};\n\nZRender.prototype = {\n  constructor: ZRender,\n\n  /**\n   * 获取实例唯一标识\n   * @return {string}\n   */\n  getId: function () {\n    return this.id;\n  },\n\n  /**\n   * 添加元素\n   * @param  {module:zrender/Element} el\n   */\n  add: function (el) {\n    this.storage.addRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * 删除元素\n   * @param  {module:zrender/Element} el\n   */\n  remove: function (el) {\n    this.storage.delRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Change configuration of layer\n   * @param {string} zLevel\n   * @param {Object} config\n   * @param {string} [config.clearColor=0] Clear color\n   * @param {string} [config.motionBlur=false] If enable motion blur\n   * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n  */\n  configLayer: function (zLevel, config) {\n    this.painter.configLayer(zLevel, config);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Repaint the canvas immediately\n   */\n  refreshImmediately: function () {\n    // var start = new Date();\n    // Clear needsRefresh ahead to avoid something wrong happens in refresh\n    // Or it will cause zrender refreshes again and again.\n    this._needsRefresh = false;\n    this.painter.refresh();\n    /**\n     * Avoid trigger zr.refresh in Element#beforeUpdate hook\n     */\n\n    this._needsRefresh = false; // var end = new Date();\n    // var log = document.getElementById('log');\n    // if (log) {\n    //     log.innerHTML = log.innerHTML + '<br>' + (end - start);\n    // }\n  },\n\n  /**\n   * Mark and repaint the canvas in the next frame of browser\n   */\n  refresh: function () {\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Perform all refresh\n   */\n  flush: function () {\n    if (this._needsRefresh) {\n      this.refreshImmediately();\n    }\n\n    if (this._needsRefreshHover) {\n      this.refreshHoverImmediately();\n    }\n  },\n\n  /**\n   * Add element to hover layer\n   * @param  {module:zrender/Element} el\n   * @param {Object} style\n   */\n  addHover: function (el, style) {\n    if (this.painter.addHover) {\n      this.painter.addHover(el, style);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Add element from hover layer\n   * @param  {module:zrender/Element} el\n   */\n  removeHover: function (el) {\n    if (this.painter.removeHover) {\n      this.painter.removeHover(el);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Clear all hover elements in hover layer\n   * @param  {module:zrender/Element} el\n   */\n  clearHover: function () {\n    if (this.painter.clearHover) {\n      this.painter.clearHover();\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Refresh hover in next frame\n   */\n  refreshHover: function () {\n    this._needsRefreshHover = true;\n  },\n\n  /**\n   * Refresh hover immediately\n   */\n  refreshHoverImmediately: function () {\n    this._needsRefreshHover = false;\n    this.painter.refreshHover && this.painter.refreshHover();\n  },\n\n  /**\n   * Resize the canvas.\n   * Should be invoked when container size is changed\n   * @param {Object} [opts]\n   * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n   * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n   */\n  resize: function (opts) {\n    opts = opts || {};\n    this.painter.resize(opts.width, opts.height);\n    this.handler.resize();\n  },\n\n  /**\n   * Stop and clear all animation immediately\n   */\n  clearAnimation: function () {\n    this.animation.clear();\n  },\n\n  /**\n   * Get container width\n   */\n  getWidth: function () {\n    return this.painter.getWidth();\n  },\n\n  /**\n   * Get container height\n   */\n  getHeight: function () {\n    return this.painter.getHeight();\n  },\n\n  /**\n   * Export the canvas as Base64 URL\n   * @param {string} type\n   * @param {string} [backgroundColor='#fff']\n   * @return {string} Base64 URL\n   */\n  // toDataURL: function(type, backgroundColor) {\n  //     return this.painter.getRenderedCanvas({\n  //         backgroundColor: backgroundColor\n  //     }).toDataURL(type);\n  // },\n\n  /**\n   * Converting a path to image.\n   * It has much better performance of drawing image rather than drawing a vector path.\n   * @param {module:zrender/graphic/Path} e\n   * @param {number} width\n   * @param {number} height\n   */\n  pathToImage: function (e, dpr) {\n    return this.painter.pathToImage(e, dpr);\n  },\n\n  /**\n   * Set default cursor\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    this.handler.setCursorStyle(cursorStyle);\n  },\n\n  /**\n   * Find hovered element\n   * @param {number} x\n   * @param {number} y\n   * @return {Object} {target, topTarget}\n   */\n  findHover: function (x, y) {\n    return this.handler.findHover(x, y);\n  },\n\n  /**\n   * Bind event\n   *\n   * @param {string} eventName Event name\n   * @param {Function} eventHandler Handler function\n   * @param {Object} [context] Context object\n   */\n  on: function (eventName, eventHandler, context) {\n    this.handler.on(eventName, eventHandler, context);\n  },\n\n  /**\n   * Unbind event\n   * @param {string} eventName Event name\n   * @param {Function} [eventHandler] Handler function\n   */\n  off: function (eventName, eventHandler) {\n    this.handler.off(eventName, eventHandler);\n  },\n\n  /**\n   * Trigger event manually\n   *\n   * @param {string} eventName Event name\n   * @param {event=} event Event object\n   */\n  trigger: function (eventName, event) {\n    this.handler.trigger(eventName, event);\n  },\n\n  /**\n   * Clear all objects and the canvas.\n   */\n  clear: function () {\n    this.storage.delRoot();\n    this.painter.clear();\n  },\n\n  /**\n   * Dispose self.\n   */\n  dispose: function () {\n    this.animation.stop();\n    this.clear();\n    this.storage.dispose();\n    this.painter.dispose();\n    this.handler.dispose();\n    this.animation = this.storage = this.painter = this.handler = null;\n    delInstance(this.id);\n  }\n};\nexports.version = version;\nexports.init = init;\nexports.dispose = dispose;\nexports.getInstance = getInstance;\nexports.registerPainter = registerPainter;\n\n/***/ }),\n\n/***/ 1082:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(1027);\n\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar each = _util.each;\nvar normalizeCssArray = _util.normalizeCssArray;\nvar isString = _util.isString;\nvar isObject = _util.isObject;\n\nvar textContain = __webpack_require__(1042);\n\nvar roundRectHelper = __webpack_require__(1098);\n\nvar imageHelper = __webpack_require__(1075);\n\n// TODO: Have not support 'start', 'end' yet.\nvar VALID_TEXT_ALIGN = {\n  left: 1,\n  right: 1,\n  center: 1\n};\nvar VALID_TEXT_VERTICAL_ALIGN = {\n  top: 1,\n  bottom: 1,\n  middle: 1\n};\n/**\n * @param {module:zrender/graphic/Style} style\n * @return {module:zrender/graphic/Style} The input style.\n */\n\nfunction normalizeTextStyle(style) {\n  normalizeStyle(style);\n  each(style.rich, normalizeStyle);\n  return style;\n}\n\nfunction normalizeStyle(style) {\n  if (style) {\n    style.font = textContain.makeFont(style);\n    var textAlign = style.textAlign;\n    textAlign === 'middle' && (textAlign = 'center');\n    style.textAlign = textAlign == null || VALID_TEXT_ALIGN[textAlign] ? textAlign : 'left'; // Compatible with textBaseline.\n\n    var textVerticalAlign = style.textVerticalAlign || style.textBaseline;\n    textVerticalAlign === 'center' && (textVerticalAlign = 'middle');\n    style.textVerticalAlign = textVerticalAlign == null || VALID_TEXT_VERTICAL_ALIGN[textVerticalAlign] ? textVerticalAlign : 'top';\n    var textPadding = style.textPadding;\n\n    if (textPadding) {\n      style.textPadding = normalizeCssArray(style.textPadding);\n    }\n  }\n}\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {string} text\n * @param {module:zrender/graphic/Style} style\n * @param {Object|boolean} [rect] {x, y, width, height}\n *                  If set false, rect text is not used.\n */\n\n\nfunction renderText(hostEl, ctx, text, style, rect) {\n  style.rich ? renderRichText(hostEl, ctx, text, style, rect) : renderPlainText(hostEl, ctx, text, style, rect);\n}\n\nfunction renderPlainText(hostEl, ctx, text, style, rect) {\n  var font = setCtx(ctx, 'font', style.font || textContain.DEFAULT_FONT);\n  var textPadding = style.textPadding;\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parsePlainText(text, font, textPadding, style.truncate);\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var textLines = contentBlock.lines;\n  var lineHeight = contentBlock.lineHeight;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var textX = baseX;\n  var textY = boxY;\n  var needDrawBg = needDrawBackground(style);\n\n  if (needDrawBg || textPadding) {\n    // Consider performance, do not call getTextWidth util necessary.\n    var textWidth = textContain.getWidth(text, font);\n    var outerWidth = textWidth;\n    textPadding && (outerWidth += textPadding[1] + textPadding[3]);\n    var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n    needDrawBg && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n    if (textPadding) {\n      textX = getTextXForPadding(baseX, textAlign, textPadding);\n      textY += textPadding[0];\n    }\n  }\n\n  setCtx(ctx, 'textAlign', textAlign || 'left'); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle'); // Always set shadowBlur and shadowOffset to avoid leak from displayable.\n\n  setCtx(ctx, 'shadowBlur', style.textShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textShadowOffsetY || 0); // `textBaseline` is set as 'middle'.\n\n  textY += lineHeight / 2;\n  var textStrokeWidth = style.textStrokeWidth;\n  var textStroke = getStroke(style.textStroke, textStrokeWidth);\n  var textFill = getFill(style.textFill);\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n  }\n\n  for (var i = 0; i < textLines.length; i++) {\n    // Fill after stroke so the outline will not cover the main part.\n    textStroke && ctx.strokeText(textLines[i], textX, textY);\n    textFill && ctx.fillText(textLines[i], textX, textY);\n    textY += lineHeight;\n  }\n}\n\nfunction renderRichText(hostEl, ctx, text, style, rect) {\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parseRichText(text, style);\n  }\n\n  drawRichText(hostEl, ctx, contentBlock, style, rect);\n}\n\nfunction drawRichText(hostEl, ctx, contentBlock, style, rect) {\n  var contentWidth = contentBlock.width;\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var textPadding = style.textPadding;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var xLeft = boxX;\n  var lineTop = boxY;\n\n  if (textPadding) {\n    xLeft += textPadding[3];\n    lineTop += textPadding[0];\n  }\n\n  var xRight = xLeft + contentWidth;\n  needDrawBackground(style) && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n  for (var i = 0; i < contentBlock.lines.length; i++) {\n    var line = contentBlock.lines[i];\n    var tokens = line.tokens;\n    var tokenCount = tokens.length;\n    var lineHeight = line.lineHeight;\n    var usedWidth = line.width;\n    var leftIndex = 0;\n    var lineXLeft = xLeft;\n    var lineXRight = xRight;\n    var rightIndex = tokenCount - 1;\n    var token;\n\n    while (leftIndex < tokenCount && (token = tokens[leftIndex], !token.textAlign || token.textAlign === 'left')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft, 'left');\n      usedWidth -= token.width;\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    while (rightIndex >= 0 && (token = tokens[rightIndex], token.textAlign === 'right')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXRight, 'right');\n      usedWidth -= token.width;\n      lineXRight -= token.width;\n      rightIndex--;\n    } // The other tokens are placed as textAlign 'center' if there is enough space.\n\n\n    lineXLeft += (contentWidth - (lineXLeft - xLeft) - (xRight - lineXRight) - usedWidth) / 2;\n\n    while (leftIndex <= rightIndex) {\n      token = tokens[leftIndex]; // Consider width specified by user, use 'center' rather than 'left'.\n\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft + token.width / 2, 'center');\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    lineTop += lineHeight;\n  }\n}\n\nfunction applyTextRotation(ctx, style, rect, x, y) {\n  // textRotation only apply in RectText.\n  if (rect && style.textRotation) {\n    var origin = style.textOrigin;\n\n    if (origin === 'center') {\n      x = rect.width / 2 + rect.x;\n      y = rect.height / 2 + rect.y;\n    } else if (origin) {\n      x = origin[0] + rect.x;\n      y = origin[1] + rect.y;\n    }\n\n    ctx.translate(x, y); // Positive: anticlockwise\n\n    ctx.rotate(-style.textRotation);\n    ctx.translate(-x, -y);\n  }\n}\n\nfunction placeToken(hostEl, ctx, token, style, lineHeight, lineTop, x, textAlign) {\n  var tokenStyle = style.rich[token.styleName] || {}; // 'ctx.textBaseline' is always set as 'middle', for sake of\n  // the bias of \"Microsoft YaHei\".\n\n  var textVerticalAlign = token.textVerticalAlign;\n  var y = lineTop + lineHeight / 2;\n\n  if (textVerticalAlign === 'top') {\n    y = lineTop + token.height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y = lineTop + lineHeight - token.height / 2;\n  }\n\n  !token.isLineHolder && needDrawBackground(tokenStyle) && drawBackground(hostEl, ctx, tokenStyle, textAlign === 'right' ? x - token.width : textAlign === 'center' ? x - token.width / 2 : x, y - token.height / 2, token.width, token.height);\n  var textPadding = token.textPadding;\n\n  if (textPadding) {\n    x = getTextXForPadding(x, textAlign, textPadding);\n    y -= token.height / 2 - textPadding[2] - token.textHeight / 2;\n  }\n\n  setCtx(ctx, 'shadowBlur', retrieve3(tokenStyle.textShadowBlur, style.textShadowBlur, 0));\n  setCtx(ctx, 'shadowColor', tokenStyle.textShadowColor || style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', retrieve3(tokenStyle.textShadowOffsetX, style.textShadowOffsetX, 0));\n  setCtx(ctx, 'shadowOffsetY', retrieve3(tokenStyle.textShadowOffsetY, style.textShadowOffsetY, 0));\n  setCtx(ctx, 'textAlign', textAlign); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle');\n  setCtx(ctx, 'font', token.font || textContain.DEFAULT_FONT);\n  var textStroke = getStroke(tokenStyle.textStroke || style.textStroke, textStrokeWidth);\n  var textFill = getFill(tokenStyle.textFill || style.textFill);\n  var textStrokeWidth = retrieve2(tokenStyle.textStrokeWidth, style.textStrokeWidth); // Fill after stroke so the outline will not cover the main part.\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n    ctx.strokeText(token.text, x, y);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n    ctx.fillText(token.text, x, y);\n  }\n}\n\nfunction needDrawBackground(style) {\n  return style.textBackgroundColor || style.textBorderWidth && style.textBorderColor;\n} // style: {textBackgroundColor, textBorderWidth, textBorderColor, textBorderRadius}\n// shape: {x, y, width, height}\n\n\nfunction drawBackground(hostEl, ctx, style, x, y, width, height) {\n  var textBackgroundColor = style.textBackgroundColor;\n  var textBorderWidth = style.textBorderWidth;\n  var textBorderColor = style.textBorderColor;\n  var isPlainBg = isString(textBackgroundColor);\n  setCtx(ctx, 'shadowBlur', style.textBoxShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textBoxShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textBoxShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textBoxShadowOffsetY || 0);\n\n  if (isPlainBg || textBorderWidth && textBorderColor) {\n    ctx.beginPath();\n    var textBorderRadius = style.textBorderRadius;\n\n    if (!textBorderRadius) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height,\n        r: textBorderRadius\n      });\n    }\n\n    ctx.closePath();\n  }\n\n  if (isPlainBg) {\n    setCtx(ctx, 'fillStyle', textBackgroundColor);\n    ctx.fill();\n  } else if (isObject(textBackgroundColor)) {\n    var image = textBackgroundColor.image;\n    image = imageHelper.createOrUpdateImage(image, null, hostEl, onBgImageLoaded, textBackgroundColor);\n\n    if (image && imageHelper.isImageReady(image)) {\n      ctx.drawImage(image, x, y, width, height);\n    }\n  }\n\n  if (textBorderWidth && textBorderColor) {\n    setCtx(ctx, 'lineWidth', textBorderWidth);\n    setCtx(ctx, 'strokeStyle', textBorderColor);\n    ctx.stroke();\n  }\n}\n\nfunction onBgImageLoaded(image, textBackgroundColor) {\n  // Replace image, so that `contain/text.js#parseRichText`\n  // will get correct result in next tick.\n  textBackgroundColor.image = image;\n}\n\nfunction getBoxPosition(blockHeiht, style, rect) {\n  var baseX = style.x || 0;\n  var baseY = style.y || 0;\n  var textAlign = style.textAlign;\n  var textVerticalAlign = style.textVerticalAlign; // Text position represented by coord\n\n  if (rect) {\n    var textPosition = style.textPosition;\n\n    if (textPosition instanceof Array) {\n      // Percent\n      baseX = rect.x + parsePercent(textPosition[0], rect.width);\n      baseY = rect.y + parsePercent(textPosition[1], rect.height);\n    } else {\n      var res = textContain.adjustTextPositionOnRect(textPosition, rect, style.textDistance);\n      baseX = res.x;\n      baseY = res.y; // Default align and baseline when has textPosition\n\n      textAlign = textAlign || res.textAlign;\n      textVerticalAlign = textVerticalAlign || res.textVerticalAlign;\n    } // textOffset is only support in RectText, otherwise\n    // we have to adjust boundingRect for textOffset.\n\n\n    var textOffset = style.textOffset;\n\n    if (textOffset) {\n      baseX += textOffset[0];\n      baseY += textOffset[1];\n    }\n  }\n\n  return {\n    baseX: baseX,\n    baseY: baseY,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction setCtx(ctx, prop, value) {\n  // FIXME ??? performance try\n  // if (ctx.__currentValues[prop] !== value) {\n  // ctx[prop] = ctx.__currentValues[prop] = value;\n  ctx[prop] = value; // }\n\n  return ctx[prop];\n}\n/**\n * @param {string} [stroke] If specified, do not check style.textStroke.\n * @param {string} [lineWidth] If specified, do not check style.textStroke.\n * @param {number} style\n */\n\n\nfunction getStroke(stroke, lineWidth) {\n  return stroke == null || lineWidth <= 0 || stroke === 'transparent' || stroke === 'none' ? null // TODO pattern and gradient?\n  : stroke.image || stroke.colorStops ? '#000' : stroke;\n}\n\nfunction getFill(fill) {\n  return fill == null || fill === 'none' ? null // TODO pattern and gradient?\n  : fill.image || fill.colorStops ? '#000' : fill;\n}\n\nfunction parsePercent(value, maxValue) {\n  if (typeof value === 'string') {\n    if (value.lastIndexOf('%') >= 0) {\n      return parseFloat(value) / 100 * maxValue;\n    }\n\n    return parseFloat(value);\n  }\n\n  return value;\n}\n\nfunction getTextXForPadding(x, textAlign, textPadding) {\n  return textAlign === 'right' ? x - textPadding[1] : textAlign === 'center' ? x + textPadding[3] / 2 - textPadding[1] / 2 : x + textPadding[3];\n}\n/**\n * @param {string} text\n * @param {module:zrender/Style} style\n * @return {boolean}\n */\n\n\nfunction needDrawText(text, style) {\n  return text != null && (text || style.textBackgroundColor || style.textBorderWidth && style.textBorderColor || style.textPadding);\n}\n\nexports.normalizeTextStyle = normalizeTextStyle;\nexports.renderText = renderText;\nexports.getStroke = getStroke;\nexports.getFill = getFill;\nexports.needDrawText = needDrawText;\n\n/***/ }),\n\n/***/ 1083:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1028);\n\nvar zrUtil = __webpack_require__(1027);\n\nvar axisPointerModelHelper = __webpack_require__(1064);\n\nvar axisTrigger = __webpack_require__(1185);\n\n__webpack_require__(1186);\n\n__webpack_require__(1187);\n\n__webpack_require__(1110);\n\n// CartesianAxisPointer is not supposed to be required here. But consider\n// echarts.simple.js and online build tooltip, which only require gridSimple,\n// CartesianAxisPointer should be able to required somewhere.\necharts.registerPreprocessor(function (option) {\n  // Always has a global axisPointerModel for default setting.\n  if (option) {\n    (!option.axisPointer || option.axisPointer.length === 0) && (option.axisPointer = {});\n    var link = option.axisPointer.link; // Normalize to array to avoid object mergin. But if link\n    // is not set, remain null/undefined, otherwise it will\n    // override existent link setting.\n\n    if (link && !zrUtil.isArray(link)) {\n      option.axisPointer.link = [link];\n    }\n  }\n}); // This process should proformed after coordinate systems created\n// and series data processed. So put it on statistic processing stage.\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n  // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n  // allAxesInfo should be updated when setOption performed.\n  ecModel.getComponent('axisPointer').coordSysAxesInfo = axisPointerModelHelper.collect(ecModel, api);\n}); // Broadcast to all views.\n\necharts.registerAction({\n  type: 'updateAxisPointer',\n  event: 'updateAxisPointer',\n  update: ':updateAxisPointer'\n}, axisTrigger);\n\n/***/ }),\n\n/***/ 1084:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1027);\n\nvar graphic = __webpack_require__(1029);\n\nvar textContain = __webpack_require__(1042);\n\nvar formatUtil = __webpack_require__(1034);\n\nvar matrix = __webpack_require__(1043);\n\nvar axisHelper = __webpack_require__(1045);\n\nvar AxisBuilder = __webpack_require__(1070);\n\n/**\n * @param {module:echarts/model/Model} axisPointerModel\n */\nfunction buildElStyle(axisPointerModel) {\n  var axisPointerType = axisPointerModel.get('type');\n  var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n  var style;\n\n  if (axisPointerType === 'line') {\n    style = styleModel.getLineStyle();\n    style.fill = null;\n  } else if (axisPointerType === 'shadow') {\n    style = styleModel.getAreaStyle();\n    style.stroke = null;\n  }\n\n  return style;\n}\n/**\n * @param {Function} labelPos {align, verticalAlign, position}\n */\n\n\nfunction buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos) {\n  var value = axisPointerModel.get('value');\n  var text = getValueLabel(value, axisModel.axis, axisModel.ecModel, axisPointerModel.get('seriesDataIndices'), {\n    precision: axisPointerModel.get('label.precision'),\n    formatter: axisPointerModel.get('label.formatter')\n  });\n  var labelModel = axisPointerModel.getModel('label');\n  var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n  var font = labelModel.getFont();\n  var textRect = textContain.getBoundingRect(text, font);\n  var position = labelPos.position;\n  var width = textRect.width + paddings[1] + paddings[3];\n  var height = textRect.height + paddings[0] + paddings[2]; // Adjust by align.\n\n  var align = labelPos.align;\n  align === 'right' && (position[0] -= width);\n  align === 'center' && (position[0] -= width / 2);\n  var verticalAlign = labelPos.verticalAlign;\n  verticalAlign === 'bottom' && (position[1] -= height);\n  verticalAlign === 'middle' && (position[1] -= height / 2); // Not overflow ec container\n\n  confineInContainer(position, width, height, api);\n  var bgColor = labelModel.get('backgroundColor');\n\n  if (!bgColor || bgColor === 'auto') {\n    bgColor = axisModel.get('axisLine.lineStyle.color');\n  }\n\n  elOption.label = {\n    shape: {\n      x: 0,\n      y: 0,\n      width: width,\n      height: height,\n      r: labelModel.get('borderRadius')\n    },\n    position: position.slice(),\n    // TODO: rich\n    style: {\n      text: text,\n      textFont: font,\n      textFill: labelModel.getTextColor(),\n      textPosition: 'inside',\n      fill: bgColor,\n      stroke: labelModel.get('borderColor') || 'transparent',\n      lineWidth: labelModel.get('borderWidth') || 0,\n      shadowBlur: labelModel.get('shadowBlur'),\n      shadowColor: labelModel.get('shadowColor'),\n      shadowOffsetX: labelModel.get('shadowOffsetX'),\n      shadowOffsetY: labelModel.get('shadowOffsetY')\n    },\n    // Lable should be over axisPointer.\n    z2: 10\n  };\n} // Do not overflow ec container\n\n\nfunction confineInContainer(position, width, height, api) {\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  position[0] = Math.min(position[0] + width, viewWidth) - width;\n  position[1] = Math.min(position[1] + height, viewHeight) - height;\n  position[0] = Math.max(position[0], 0);\n  position[1] = Math.max(position[1], 0);\n}\n/**\n * @param {number} value\n * @param {module:echarts/coord/Axis} axis\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} opt\n * @param {Array.<Object>} seriesDataIndices\n * @param {number|string} opt.precision 'auto' or a number\n * @param {string|Function} opt.formatter label formatter\n */\n\n\nfunction getValueLabel(value, axis, ecModel, seriesDataIndices, opt) {\n  var text = axis.scale.getLabel( // If `precision` is set, width can be fixed (like '12.00500'), which\n  // helps to debounce when when moving label.\n  value, {\n    precision: opt.precision\n  });\n  var formatter = opt.formatter;\n\n  if (formatter) {\n    var params = {\n      value: axisHelper.getAxisRawValue(axis, value),\n      seriesData: []\n    };\n    zrUtil.each(seriesDataIndices, function (idxItem) {\n      var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n      var dataIndex = idxItem.dataIndexInside;\n      var dataParams = series && series.getDataParams(dataIndex);\n      dataParams && params.seriesData.push(dataParams);\n    });\n\n    if (zrUtil.isString(formatter)) {\n      text = formatter.replace('{value}', text);\n    } else if (zrUtil.isFunction(formatter)) {\n      text = formatter(params);\n    }\n  }\n\n  return text;\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @param {number} value\n * @param {Object} layoutInfo {\n *  rotation, position, labelOffset, labelDirection, labelMargin\n * }\n */\n\n\nfunction getTransformedPosition(axis, value, layoutInfo) {\n  var transform = matrix.create();\n  matrix.rotate(transform, transform, layoutInfo.rotation);\n  matrix.translate(transform, transform, layoutInfo.position);\n  return graphic.applyTransform([axis.dataToCoord(value), (layoutInfo.labelOffset || 0) + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)], transform);\n}\n\nfunction buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api) {\n  var textLayout = AxisBuilder.innerTextLayout(layoutInfo.rotation, 0, layoutInfo.labelDirection);\n  layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n  buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n    position: getTransformedPosition(axisModel.axis, value, layoutInfo),\n    align: textLayout.textAlign,\n    verticalAlign: textLayout.textVerticalAlign\n  });\n}\n/**\n * @param {Array.<number>} p1\n * @param {Array.<number>} p2\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeLineShape(p1, p2, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x1: p1[xDimIndex],\n    y1: p1[1 - xDimIndex],\n    x2: p2[xDimIndex],\n    y2: p2[1 - xDimIndex]\n  };\n}\n/**\n * @param {Array.<number>} xy\n * @param {Array.<number>} wh\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeRectShape(xy, wh, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x: xy[xDimIndex],\n    y: xy[1 - xDimIndex],\n    width: wh[xDimIndex],\n    height: wh[1 - xDimIndex]\n  };\n}\n\nfunction makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\n  return {\n    cx: cx,\n    cy: cy,\n    r0: r0,\n    r: r,\n    startAngle: startAngle,\n    endAngle: endAngle,\n    clockwise: true\n  };\n}\n\nexports.buildElStyle = buildElStyle;\nexports.buildLabelElOption = buildLabelElOption;\nexports.getValueLabel = getValueLabel;\nexports.getTransformedPosition = getTransformedPosition;\nexports.buildCartesianSingleLabelElOption = buildCartesianSingleLabelElOption;\nexports.makeLineShape = makeLineShape;\nexports.makeRectShape = makeRectShape;\nexports.makeSectorShape = makeSectorShape;\n\n/***/ }),\n\n/***/ 1085:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar matrix = __webpack_require__(1043);\n\nvar vector = __webpack_require__(1033);\n\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\nvar mIdentity = matrix.identity;\nvar EPSILON = 5e-5;\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * @alias module:zrender/mixin/Transformable\n * @constructor\n */\n\n\nvar Transformable = function (opts) {\n  opts = opts || {}; // If there are no given position, rotation, scale\n\n  if (!opts.position) {\n    /**\n     * 平移\n     * @type {Array.<number>}\n     * @default [0, 0]\n     */\n    this.position = [0, 0];\n  }\n\n  if (opts.rotation == null) {\n    /**\n     * 旋转\n     * @type {Array.<number>}\n     * @default 0\n     */\n    this.rotation = 0;\n  }\n\n  if (!opts.scale) {\n    /**\n     * 缩放\n     * @type {Array.<number>}\n     * @default [1, 1]\n     */\n    this.scale = [1, 1];\n  }\n  /**\n   * 旋转和缩放的原点\n   * @type {Array.<number>}\n   * @default null\n   */\n\n\n  this.origin = this.origin || null;\n};\n\nvar transformableProto = Transformable.prototype;\ntransformableProto.transform = null;\n/**\n * 判断是否需要有坐标变换\n * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n */\n\ntransformableProto.needLocalTransform = function () {\n  return isNotAroundZero(this.rotation) || isNotAroundZero(this.position[0]) || isNotAroundZero(this.position[1]) || isNotAroundZero(this.scale[0] - 1) || isNotAroundZero(this.scale[1] - 1);\n};\n\ntransformableProto.updateTransform = function () {\n  var parent = this.parent;\n  var parentHasTransform = parent && parent.transform;\n  var needLocalTransform = this.needLocalTransform();\n  var m = this.transform;\n\n  if (!(needLocalTransform || parentHasTransform)) {\n    m && mIdentity(m);\n    return;\n  }\n\n  m = m || matrix.create();\n\n  if (needLocalTransform) {\n    this.getLocalTransform(m);\n  } else {\n    mIdentity(m);\n  } // 应用父节点变换\n\n\n  if (parentHasTransform) {\n    if (needLocalTransform) {\n      matrix.mul(m, parent.transform, m);\n    } else {\n      matrix.copy(m, parent.transform);\n    }\n  } // 保存这个变换矩阵\n\n\n  this.transform = m;\n  this.invTransform = this.invTransform || matrix.create();\n  matrix.invert(this.invTransform, m);\n};\n\ntransformableProto.getLocalTransform = function (m) {\n  return Transformable.getLocalTransform(this, m);\n};\n/**\n * 将自己的transform应用到context上\n * @param {CanvasRenderingContext2D} ctx\n */\n\n\ntransformableProto.setTransform = function (ctx) {\n  var m = this.transform;\n  var dpr = ctx.dpr || 1;\n\n  if (m) {\n    ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n  } else {\n    ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n  }\n};\n\ntransformableProto.restoreTransform = function (ctx) {\n  var dpr = ctx.dpr || 1;\n  ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n};\n\nvar tmpTransform = [];\n/**\n * 分解`transform`矩阵到`position`, `rotation`, `scale`\n */\n\ntransformableProto.decomposeTransform = function () {\n  if (!this.transform) {\n    return;\n  }\n\n  var parent = this.parent;\n  var m = this.transform;\n\n  if (parent && parent.transform) {\n    // Get local transform and decompose them to position, scale, rotation\n    matrix.mul(tmpTransform, parent.invTransform, m);\n    m = tmpTransform;\n  }\n\n  var sx = m[0] * m[0] + m[1] * m[1];\n  var sy = m[2] * m[2] + m[3] * m[3];\n  var position = this.position;\n  var scale = this.scale;\n\n  if (isNotAroundZero(sx - 1)) {\n    sx = Math.sqrt(sx);\n  }\n\n  if (isNotAroundZero(sy - 1)) {\n    sy = Math.sqrt(sy);\n  }\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  position[0] = m[4];\n  position[1] = m[5];\n  scale[0] = sx;\n  scale[1] = sy;\n  this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n};\n/**\n * Get global scale\n * @return {Array.<number>}\n */\n\n\ntransformableProto.getGlobalScale = function () {\n  var m = this.transform;\n\n  if (!m) {\n    return [1, 1];\n  }\n\n  var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n  var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  return [sx, sy];\n};\n/**\n * 变换坐标位置到 shape 的局部坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToLocal = function (x, y) {\n  var v2 = [x, y];\n  var invTransform = this.invTransform;\n\n  if (invTransform) {\n    vector.applyTransform(v2, v2, invTransform);\n  }\n\n  return v2;\n};\n/**\n * 变换局部坐标位置到全局坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToGlobal = function (x, y) {\n  var v2 = [x, y];\n  var transform = this.transform;\n\n  if (transform) {\n    vector.applyTransform(v2, v2, transform);\n  }\n\n  return v2;\n};\n/**\n * @static\n * @param {Object} target\n * @param {Array.<number>} target.origin\n * @param {number} target.rotation\n * @param {Array.<number>} target.position\n * @param {Array.<number>} [m]\n */\n\n\nTransformable.getLocalTransform = function (target, m) {\n  m = m || [];\n  mIdentity(m);\n  var origin = target.origin;\n  var scale = target.scale || [1, 1];\n  var rotation = target.rotation || 0;\n  var position = target.position || [0, 0];\n\n  if (origin) {\n    // Translate to origin\n    m[4] -= origin[0];\n    m[5] -= origin[1];\n  }\n\n  matrix.scale(m, m, scale);\n\n  if (rotation) {\n    matrix.rotate(m, m, rotation);\n  }\n\n  if (origin) {\n    // Translate back from origin\n    m[4] += origin[0];\n    m[5] += origin[1];\n  }\n\n  m[4] += position[0];\n  m[5] += position[1];\n  return m;\n};\n\nvar _default = Transformable;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1086:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar vec2 = __webpack_require__(1033);\n\nvar curve = __webpack_require__(1048);\n\n/**\n * @author Yi Shen(https://github.com/pissang)\n */\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI2 = Math.PI * 2;\nvar start = vec2.create();\nvar end = vec2.create();\nvar extremity = vec2.create();\n/**\n * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n * @module zrender/core/bbox\n * @param {Array<Object>} points 顶点数组\n * @param {number} min\n * @param {number} max\n */\n\nfunction fromPoints(points, min, max) {\n  if (points.length === 0) {\n    return;\n  }\n\n  var p = points[0];\n  var left = p[0];\n  var right = p[0];\n  var top = p[1];\n  var bottom = p[1];\n  var i;\n\n  for (i = 1; i < points.length; i++) {\n    p = points[i];\n    left = mathMin(left, p[0]);\n    right = mathMax(right, p[0]);\n    top = mathMin(top, p[1]);\n    bottom = mathMax(bottom, p[1]);\n  }\n\n  min[0] = left;\n  min[1] = top;\n  max[0] = right;\n  max[1] = bottom;\n}\n/**\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromLine(x0, y0, x1, y1, min, max) {\n  min[0] = mathMin(x0, x1);\n  min[1] = mathMin(y0, y1);\n  max[0] = mathMax(x0, x1);\n  max[1] = mathMax(y0, y1);\n}\n\nvar xDim = [];\nvar yDim = [];\n/**\n * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\nfunction fromCubic(x0, y0, x1, y1, x2, y2, x3, y3, min, max) {\n  var cubicExtrema = curve.cubicExtrema;\n  var cubicAt = curve.cubicAt;\n  var i;\n  var n = cubicExtrema(x0, x1, x2, x3, xDim);\n  min[0] = Infinity;\n  min[1] = Infinity;\n  max[0] = -Infinity;\n  max[1] = -Infinity;\n\n  for (i = 0; i < n; i++) {\n    var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n    min[0] = mathMin(x, min[0]);\n    max[0] = mathMax(x, max[0]);\n  }\n\n  n = cubicExtrema(y0, y1, y2, y3, yDim);\n\n  for (i = 0; i < n; i++) {\n    var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n    min[1] = mathMin(y, min[1]);\n    max[1] = mathMax(y, max[1]);\n  }\n\n  min[0] = mathMin(x0, min[0]);\n  max[0] = mathMax(x0, max[0]);\n  min[0] = mathMin(x3, min[0]);\n  max[0] = mathMax(x3, max[0]);\n  min[1] = mathMin(y0, min[1]);\n  max[1] = mathMax(y0, max[1]);\n  min[1] = mathMin(y3, min[1]);\n  max[1] = mathMax(y3, max[1]);\n}\n/**\n * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromQuadratic(x0, y0, x1, y1, x2, y2, min, max) {\n  var quadraticExtremum = curve.quadraticExtremum;\n  var quadraticAt = curve.quadraticAt; // Find extremities, where derivative in x dim or y dim is zero\n\n  var tx = mathMax(mathMin(quadraticExtremum(x0, x1, x2), 1), 0);\n  var ty = mathMax(mathMin(quadraticExtremum(y0, y1, y2), 1), 0);\n  var x = quadraticAt(x0, x1, x2, tx);\n  var y = quadraticAt(y0, y1, y2, ty);\n  min[0] = mathMin(x0, x2, x);\n  min[1] = mathMin(y0, y2, y);\n  max[0] = mathMax(x0, x2, x);\n  max[1] = mathMax(y0, y2, y);\n}\n/**\n * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n * @method\n * @memberOf module:zrender/core/bbox\n * @param {number} x\n * @param {number} y\n * @param {number} rx\n * @param {number} ry\n * @param {number} startAngle\n * @param {number} endAngle\n * @param {number} anticlockwise\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromArc(x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max) {\n  var vec2Min = vec2.min;\n  var vec2Max = vec2.max;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff % PI2 < 1e-4 && diff > 1e-4) {\n    // Is a circle\n    min[0] = x - rx;\n    min[1] = y - ry;\n    max[0] = x + rx;\n    max[1] = y + ry;\n    return;\n  }\n\n  start[0] = mathCos(startAngle) * rx + x;\n  start[1] = mathSin(startAngle) * ry + y;\n  end[0] = mathCos(endAngle) * rx + x;\n  end[1] = mathSin(endAngle) * ry + y;\n  vec2Min(min, start, end);\n  vec2Max(max, start, end); // Thresh to [0, Math.PI * 2]\n\n  startAngle = startAngle % PI2;\n\n  if (startAngle < 0) {\n    startAngle = startAngle + PI2;\n  }\n\n  endAngle = endAngle % PI2;\n\n  if (endAngle < 0) {\n    endAngle = endAngle + PI2;\n  }\n\n  if (startAngle > endAngle && !anticlockwise) {\n    endAngle += PI2;\n  } else if (startAngle < endAngle && anticlockwise) {\n    startAngle += PI2;\n  }\n\n  if (anticlockwise) {\n    var tmp = endAngle;\n    endAngle = startAngle;\n    startAngle = tmp;\n  } // var number = 0;\n  // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n\n\n  for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n    if (angle > startAngle) {\n      extremity[0] = mathCos(angle) * rx + x;\n      extremity[1] = mathSin(angle) * ry + y;\n      vec2Min(min, extremity, min);\n      vec2Max(max, extremity, max);\n    }\n  }\n}\n\nexports.fromPoints = fromPoints;\nexports.fromLine = fromLine;\nexports.fromCubic = fromCubic;\nexports.fromQuadratic = fromQuadratic;\nexports.fromArc = fromArc;\n\n/***/ }),\n\n/***/ 1087:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Displayable = __webpack_require__(1067);\n\nvar zrUtil = __webpack_require__(1027);\n\nvar textContain = __webpack_require__(1042);\n\nvar textHelper = __webpack_require__(1082);\n\n/**\n * @alias zrender/graphic/Text\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nvar Text = function (opts) {\n  // jshint ignore:line\n  Displayable.call(this, opts);\n};\n\nText.prototype = {\n  constructor: Text,\n  type: 'text',\n  brush: function (ctx, prevEl) {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true); // Use props with prefix 'text'.\n\n    style.fill = style.stroke = style.shadowBlur = style.shadowColor = style.shadowOffsetX = style.shadowOffsetY = null;\n    var text = style.text; // Convert to string\n\n    text != null && (text += ''); // Always bind style\n\n    style.bind(ctx, this, prevEl);\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    }\n\n    this.setTransform(ctx);\n    textHelper.renderText(this, ctx, text, style);\n    this.restoreTransform(ctx);\n  },\n  getBoundingRect: function () {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n    if (!this._rect) {\n      var text = style.text;\n      text != null ? text += '' : text = '';\n      var rect = textContain.getBoundingRect(style.text + '', style.font, style.textAlign, style.textVerticalAlign, style.textPadding, style.rich);\n      rect.x += style.x || 0;\n      rect.y += style.y || 0;\n\n      if (textHelper.getStroke(style.textStroke, style.textStrokeWidth)) {\n        var w = style.textStrokeWidth;\n        rect.x -= w / 2;\n        rect.y -= w / 2;\n        rect.width += w;\n        rect.height += w;\n      }\n\n      this._rect = rect;\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(Text, Displayable);\nvar _default = Text;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1088:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Group = __webpack_require__(1058);\n\nvar componentUtil = __webpack_require__(1076);\n\nvar clazzUtil = __webpack_require__(1041);\n\nvar Component = function () {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewComponent');\n};\n\nComponent.prototype = {\n  constructor: Component,\n  init: function (ecModel, api) {},\n  render: function (componentModel, ecModel, api, payload) {},\n  dispose: function () {}\n};\nvar componentProto = Component.prototype;\n\ncomponentProto.updateView = componentProto.updateLayout = componentProto.updateVisual = function (seriesModel, ecModel, api, payload) {// Do nothing;\n}; // Enable Component.extend.\n\n\nclazzUtil.enableClassExtend(Component); // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Component, {\n  registerWhenExtend: true\n});\nvar _default = Component;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1089:\n/***/ (function(module, exports) {\n\n/**\n * Calculate slider move result.\n * Usage:\n * (1) If both handle0 and handle1 are needed to be moved, set minSpan the same as\n * maxSpan and the same as `Math.abs(handleEnd[1] - handleEnds[0])`.\n * (2) If handle0 is forbidden to cross handle1, set minSpan as `0`.\n *\n * @param {number} delta Move length.\n * @param {Array.<number>} handleEnds handleEnds[0] can be bigger then handleEnds[1].\n *              handleEnds will be modified in this method.\n * @param {Array.<number>} extent handleEnds is restricted by extent.\n *              extent[0] should less or equals than extent[1].\n * @param {number|string} handleIndex Can be 'all', means that both move the two handleEnds,\n *              where the input minSpan and maxSpan will not work.\n * @param {number} [minSpan] The range of dataZoom can not be smaller than that.\n *              If not set, handle0 and cross handle1. If set as a non-negative\n *              number (including `0`), handles will push each other when reaching\n *              the minSpan.\n * @param {number} [maxSpan] The range of dataZoom can not be larger than that.\n * @return {Array.<number>} The input handleEnds.\n */\nfunction _default(delta, handleEnds, extent, handleIndex, minSpan, maxSpan) {\n  // Normalize firstly.\n  handleEnds[0] = restrict(handleEnds[0], extent);\n  handleEnds[1] = restrict(handleEnds[1], extent);\n  delta = delta || 0;\n  var extentSpan = extent[1] - extent[0]; // Notice maxSpan and minSpan can be null/undefined.\n\n  if (minSpan != null) {\n    minSpan = restrict(minSpan, [0, extentSpan]);\n  }\n\n  if (maxSpan != null) {\n    maxSpan = Math.max(maxSpan, minSpan != null ? minSpan : 0);\n  }\n\n  if (handleIndex === 'all') {\n    minSpan = maxSpan = Math.abs(handleEnds[1] - handleEnds[0]);\n    handleIndex = 0;\n  }\n\n  var originalDistSign = getSpanSign(handleEnds, handleIndex);\n  handleEnds[handleIndex] += delta; // Restrict in extent.\n\n  var extentMinSpan = minSpan || 0;\n  var realExtent = extent.slice();\n  originalDistSign.sign < 0 ? realExtent[0] += extentMinSpan : realExtent[1] -= extentMinSpan;\n  handleEnds[handleIndex] = restrict(handleEnds[handleIndex], realExtent); // Expand span.\n\n  var currDistSign = getSpanSign(handleEnds, handleIndex);\n\n  if (minSpan != null && (currDistSign.sign !== originalDistSign.sign || currDistSign.span < minSpan)) {\n    // If minSpan exists, 'cross' is forbinden.\n    handleEnds[1 - handleIndex] = handleEnds[handleIndex] + originalDistSign.sign * minSpan;\n  } // Shrink span.\n\n\n  var currDistSign = getSpanSign(handleEnds, handleIndex);\n\n  if (maxSpan != null && currDistSign.span > maxSpan) {\n    handleEnds[1 - handleIndex] = handleEnds[handleIndex] + currDistSign.sign * maxSpan;\n  }\n\n  return handleEnds;\n}\n\nfunction getSpanSign(handleEnds, handleIndex) {\n  var dist = handleEnds[handleIndex] - handleEnds[1 - handleIndex]; // If `handleEnds[0] === handleEnds[1]`, always believe that handleEnd[0]\n  // is at left of handleEnds[1] for non-cross case.\n\n  return {\n    span: Math.abs(dist),\n    sign: dist > 0 ? -1 : dist < 0 ? 1 : handleIndex ? -1 : 1\n  };\n}\n\nfunction restrict(value, extend) {\n  return Math.min(extend[1], Math.max(extend[0], value));\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1091:\n/***/ (function(module, exports) {\n\n/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\nvar idStart = 0x0907;\n\nfunction _default() {\n  return idStart++;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1092:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar guid = __webpack_require__(1091);\n\nvar Eventful = __webpack_require__(1050);\n\nvar Transformable = __webpack_require__(1085);\n\nvar Animatable = __webpack_require__(1142);\n\nvar zrUtil = __webpack_require__(1027);\n\n/**\n * @alias module:zrender/Element\n * @constructor\n * @extends {module:zrender/mixin/Animatable}\n * @extends {module:zrender/mixin/Transformable}\n * @extends {module:zrender/mixin/Eventful}\n */\nvar Element = function (opts) {\n  // jshint ignore:line\n  Transformable.call(this, opts);\n  Eventful.call(this, opts);\n  Animatable.call(this, opts);\n  /**\n   * 画布元素ID\n   * @type {string}\n   */\n\n  this.id = opts.id || guid();\n};\n\nElement.prototype = {\n  /**\n   * 元素类型\n   * Element type\n   * @type {string}\n   */\n  type: 'element',\n\n  /**\n   * 元素名字\n   * Element name\n   * @type {string}\n   */\n  name: '',\n\n  /**\n   * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n   * ZRender instance will be assigned when element is associated with zrender\n   * @name module:/zrender/Element#__zr\n   * @type {module:zrender/ZRender}\n   */\n  __zr: null,\n\n  /**\n   * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n   * If ignore drawing and events of the element object\n   * @name module:/zrender/Element#ignore\n   * @type {boolean}\n   * @default false\n   */\n  ignore: false,\n\n  /**\n   * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n   * 该路径会继承被裁减对象的变换\n   * @type {module:zrender/graphic/Path}\n   * @see http://www.w3.org/TR/2dcontext/#clipping-region\n   * @readOnly\n   */\n  clipPath: null,\n\n  /**\n   * Drift element\n   * @param  {number} dx dx on the global space\n   * @param  {number} dy dy on the global space\n   */\n  drift: function (dx, dy) {\n    switch (this.draggable) {\n      case 'horizontal':\n        dy = 0;\n        break;\n\n      case 'vertical':\n        dx = 0;\n        break;\n    }\n\n    var m = this.transform;\n\n    if (!m) {\n      m = this.transform = [1, 0, 0, 1, 0, 0];\n    }\n\n    m[4] += dx;\n    m[5] += dy;\n    this.decomposeTransform();\n    this.dirty(false);\n  },\n\n  /**\n   * Hook before update\n   */\n  beforeUpdate: function () {},\n\n  /**\n   * Hook after update\n   */\n  afterUpdate: function () {},\n\n  /**\n   * Update each frame\n   */\n  update: function () {\n    this.updateTransform();\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {},\n\n  /**\n   * @protected\n   */\n  attrKV: function (key, value) {\n    if (key === 'position' || key === 'scale' || key === 'origin') {\n      // Copy the array\n      if (value) {\n        var target = this[key];\n\n        if (!target) {\n          target = this[key] = [];\n        }\n\n        target[0] = value[0];\n        target[1] = value[1];\n      }\n    } else {\n      this[key] = value;\n    }\n  },\n\n  /**\n   * Hide the element\n   */\n  hide: function () {\n    this.ignore = true;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * Show the element\n   */\n  show: function () {\n    this.ignore = false;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * @param {string|Object} key\n   * @param {*} value\n   */\n  attr: function (key, value) {\n    if (typeof key === 'string') {\n      this.attrKV(key, value);\n    } else if (zrUtil.isObject(key)) {\n      for (var name in key) {\n        if (key.hasOwnProperty(name)) {\n          this.attrKV(name, key[name]);\n        }\n      }\n    }\n\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * @param {module:zrender/graphic/Path} clipPath\n   */\n  setClipPath: function (clipPath) {\n    var zr = this.__zr;\n\n    if (zr) {\n      clipPath.addSelfToZr(zr);\n    } // Remove previous clip path\n\n\n    if (this.clipPath && this.clipPath !== clipPath) {\n      this.removeClipPath();\n    }\n\n    this.clipPath = clipPath;\n    clipPath.__zr = zr;\n    clipPath.__clipTarget = this;\n    this.dirty(false);\n  },\n\n  /**\n   */\n  removeClipPath: function () {\n    var clipPath = this.clipPath;\n\n    if (clipPath) {\n      if (clipPath.__zr) {\n        clipPath.removeSelfFromZr(clipPath.__zr);\n      }\n\n      clipPath.__zr = null;\n      clipPath.__clipTarget = null;\n      this.clipPath = null;\n      this.dirty(false);\n    }\n  },\n\n  /**\n   * Add self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  addSelfToZr: function (zr) {\n    this.__zr = zr; // 添加动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.addAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.addSelfToZr(zr);\n    }\n  },\n\n  /**\n   * Remove self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  removeSelfFromZr: function (zr) {\n    this.__zr = null; // 移除动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.removeAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.removeSelfFromZr(zr);\n    }\n  }\n};\nzrUtil.mixin(Element, Animatable);\nzrUtil.mixin(Element, Transformable);\nzrUtil.mixin(Element, Eventful);\nvar _default = Element;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1093:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Clip = __webpack_require__(1143);\n\nvar color = __webpack_require__(1051);\n\nvar _util = __webpack_require__(1027);\n\nvar isArrayLike = _util.isArrayLike;\n\n/**\n * @module echarts/animation/Animator\n */\nvar arraySlice = Array.prototype.slice;\n\nfunction defaultGetter(target, key) {\n  return target[key];\n}\n\nfunction defaultSetter(target, key, value) {\n  target[key] = value;\n}\n/**\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} percent\n * @return {number}\n */\n\n\nfunction interpolateNumber(p0, p1, percent) {\n  return (p1 - p0) * percent + p0;\n}\n/**\n * @param  {string} p0\n * @param  {string} p1\n * @param  {number} percent\n * @return {string}\n */\n\n\nfunction interpolateString(p0, p1, percent) {\n  return percent > 0.5 ? p1 : p0;\n}\n/**\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {number} percent\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction interpolateArray(p0, p1, percent, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = interpolateNumber(p0[i], p1[i], percent);\n    }\n  } else {\n    var len2 = len && p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = interpolateNumber(p0[i][j], p1[i][j], percent);\n      }\n    }\n  }\n} // arr0 is source array, arr1 is target array.\n// Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n\n\nfunction fillArr(arr0, arr1, arrDim) {\n  var arr0Len = arr0.length;\n  var arr1Len = arr1.length;\n\n  if (arr0Len !== arr1Len) {\n    // FIXME Not work for TypedArray\n    var isPreviousLarger = arr0Len > arr1Len;\n\n    if (isPreviousLarger) {\n      // Cut the previous\n      arr0.length = arr1Len;\n    } else {\n      // Fill the previous\n      for (var i = arr0Len; i < arr1Len; i++) {\n        arr0.push(arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i]));\n      }\n    }\n  } // Handling NaN value\n\n\n  var len2 = arr0[0] && arr0[0].length;\n\n  for (var i = 0; i < arr0.length; i++) {\n    if (arrDim === 1) {\n      if (isNaN(arr0[i])) {\n        arr0[i] = arr1[i];\n      }\n    } else {\n      for (var j = 0; j < len2; j++) {\n        if (isNaN(arr0[i][j])) {\n          arr0[i][j] = arr1[i][j];\n        }\n      }\n    }\n  }\n}\n/**\n * @param  {Array} arr0\n * @param  {Array} arr1\n * @param  {number} arrDim\n * @return {boolean}\n */\n\n\nfunction isArraySame(arr0, arr1, arrDim) {\n  if (arr0 === arr1) {\n    return true;\n  }\n\n  var len = arr0.length;\n\n  if (len !== arr1.length) {\n    return false;\n  }\n\n  if (arrDim === 1) {\n    for (var i = 0; i < len; i++) {\n      if (arr0[i] !== arr1[i]) {\n        return false;\n      }\n    }\n  } else {\n    var len2 = arr0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        if (arr0[i][j] !== arr1[i][j]) {\n          return false;\n        }\n      }\n    }\n  }\n\n  return true;\n}\n/**\n * Catmull Rom interpolate array\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {Array} p2\n * @param  {Array} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction catmullRomInterpolateArray(p0, p1, p2, p3, t, t2, t3, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = catmullRomInterpolate(p0[i], p1[i], p2[i], p3[i], t, t2, t3);\n    }\n  } else {\n    var len2 = p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = catmullRomInterpolate(p0[i][j], p1[i][j], p2[i][j], p3[i][j], t, t2, t3);\n      }\n    }\n  }\n}\n/**\n * Catmull Rom interpolate number\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @return {number}\n */\n\n\nfunction catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n\nfunction cloneValue(value) {\n  if (isArrayLike(value)) {\n    var len = value.length;\n\n    if (isArrayLike(value[0])) {\n      var ret = [];\n\n      for (var i = 0; i < len; i++) {\n        ret.push(arraySlice.call(value[i]));\n      }\n\n      return ret;\n    }\n\n    return arraySlice.call(value);\n  }\n\n  return value;\n}\n\nfunction rgba2String(rgba) {\n  rgba[0] = Math.floor(rgba[0]);\n  rgba[1] = Math.floor(rgba[1]);\n  rgba[2] = Math.floor(rgba[2]);\n  return 'rgba(' + rgba.join(',') + ')';\n}\n\nfunction getArrayDim(keyframes) {\n  var lastValue = keyframes[keyframes.length - 1].value;\n  return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\n}\n\nfunction createTrackClip(animator, easing, oneTrackDone, keyframes, propName, forceAnimate) {\n  var getter = animator._getter;\n  var setter = animator._setter;\n  var useSpline = easing === 'spline';\n  var trackLen = keyframes.length;\n\n  if (!trackLen) {\n    return;\n  } // Guess data type\n\n\n  var firstVal = keyframes[0].value;\n  var isValueArray = isArrayLike(firstVal);\n  var isValueColor = false;\n  var isValueString = false; // For vertices morphing\n\n  var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\n  var trackMaxTime; // Sort keyframe as ascending\n\n  keyframes.sort(function (a, b) {\n    return a.time - b.time;\n  });\n  trackMaxTime = keyframes[trackLen - 1].time; // Percents of each keyframe\n\n  var kfPercents = []; // Value of each keyframe\n\n  var kfValues = [];\n  var prevValue = keyframes[0].value;\n  var isAllValueEqual = true;\n\n  for (var i = 0; i < trackLen; i++) {\n    kfPercents.push(keyframes[i].time / trackMaxTime); // Assume value is a color when it is a string\n\n    var value = keyframes[i].value; // Check if value is equal, deep check if value is array\n\n    if (!(isValueArray && isArraySame(value, prevValue, arrDim) || !isValueArray && value === prevValue)) {\n      isAllValueEqual = false;\n    }\n\n    prevValue = value; // Try converting a string to a color array\n\n    if (typeof value == 'string') {\n      var colorArray = color.parse(value);\n\n      if (colorArray) {\n        value = colorArray;\n        isValueColor = true;\n      } else {\n        isValueString = true;\n      }\n    }\n\n    kfValues.push(value);\n  }\n\n  if (!forceAnimate && isAllValueEqual) {\n    return;\n  }\n\n  var lastValue = kfValues[trackLen - 1]; // Polyfill array and NaN value\n\n  for (var i = 0; i < trackLen - 1; i++) {\n    if (isValueArray) {\n      fillArr(kfValues[i], lastValue, arrDim);\n    } else {\n      if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n        kfValues[i] = lastValue;\n      }\n    }\n  }\n\n  isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim); // Cache the key of last frame to speed up when\n  // animation playback is sequency\n\n  var lastFrame = 0;\n  var lastFramePercent = 0;\n  var start;\n  var w;\n  var p0;\n  var p1;\n  var p2;\n  var p3;\n\n  if (isValueColor) {\n    var rgba = [0, 0, 0, 0];\n  }\n\n  var onframe = function (target, percent) {\n    // Find the range keyframes\n    // kf1-----kf2---------current--------kf3\n    // find kf2 and kf3 and do interpolation\n    var frame; // In the easing function like elasticOut, percent may less than 0\n\n    if (percent < 0) {\n      frame = 0;\n    } else if (percent < lastFramePercent) {\n      // Start from next key\n      // PENDING start from lastFrame ?\n      start = Math.min(lastFrame + 1, trackLen - 1);\n\n      for (frame = start; frame >= 0; frame--) {\n        if (kfPercents[frame] <= percent) {\n          break;\n        }\n      } // PENDING really need to do this ?\n\n\n      frame = Math.min(frame, trackLen - 2);\n    } else {\n      for (frame = lastFrame; frame < trackLen; frame++) {\n        if (kfPercents[frame] > percent) {\n          break;\n        }\n      }\n\n      frame = Math.min(frame - 1, trackLen - 2);\n    }\n\n    lastFrame = frame;\n    lastFramePercent = percent;\n    var range = kfPercents[frame + 1] - kfPercents[frame];\n\n    if (range === 0) {\n      return;\n    } else {\n      w = (percent - kfPercents[frame]) / range;\n    }\n\n    if (useSpline) {\n      p1 = kfValues[frame];\n      p0 = kfValues[frame === 0 ? frame : frame - 1];\n      p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n      p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n\n      if (isValueArray) {\n        catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          value = catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(p1, p2, w);\n        } else {\n          value = catmullRomInterpolate(p0, p1, p2, p3, w, w * w, w * w * w);\n        }\n\n        setter(target, propName, value);\n      }\n    } else {\n      if (isValueArray) {\n        interpolateArray(kfValues[frame], kfValues[frame + 1], w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          interpolateArray(kfValues[frame], kfValues[frame + 1], w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n        } else {\n          value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n        }\n\n        setter(target, propName, value);\n      }\n    }\n  };\n\n  var clip = new Clip({\n    target: animator._target,\n    life: trackMaxTime,\n    loop: animator._loop,\n    delay: animator._delay,\n    onframe: onframe,\n    ondestroy: oneTrackDone\n  });\n\n  if (easing && easing !== 'spline') {\n    clip.easing = easing;\n  }\n\n  return clip;\n}\n/**\n * @alias module:zrender/animation/Animator\n * @constructor\n * @param {Object} target\n * @param {boolean} loop\n * @param {Function} getter\n * @param {Function} setter\n */\n\n\nvar Animator = function (target, loop, getter, setter) {\n  this._tracks = {};\n  this._target = target;\n  this._loop = loop || false;\n  this._getter = getter || defaultGetter;\n  this._setter = setter || defaultSetter;\n  this._clipCount = 0;\n  this._delay = 0;\n  this._doneList = [];\n  this._onframeList = [];\n  this._clipList = [];\n};\n\nAnimator.prototype = {\n  /**\n   * 设置动画关键帧\n   * @param  {number} time 关键帧时间，单位是ms\n   * @param  {Object} props 关键帧的属性值，key-value表示\n   * @return {module:zrender/animation/Animator}\n   */\n  when: function (time\n  /* ms */\n  , props) {\n    var tracks = this._tracks;\n\n    for (var propName in props) {\n      if (!props.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      if (!tracks[propName]) {\n        tracks[propName] = []; // Invalid value\n\n        var value = this._getter(this._target, propName);\n\n        if (value == null) {\n          // zrLog('Invalid property ' + propName);\n          continue;\n        } // If time is 0\n        //  Then props is given initialize value\n        // Else\n        //  Initialize value from current prop value\n\n\n        if (time !== 0) {\n          tracks[propName].push({\n            time: 0,\n            value: cloneValue(value)\n          });\n        }\n      }\n\n      tracks[propName].push({\n        time: time,\n        value: props[propName]\n      });\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加动画每一帧的回调函数\n   * @param  {Function} callback\n   * @return {module:zrender/animation/Animator}\n   */\n  during: function (callback) {\n    this._onframeList.push(callback);\n\n    return this;\n  },\n  pause: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].pause();\n    }\n\n    this._paused = true;\n  },\n  resume: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].resume();\n    }\n\n    this._paused = false;\n  },\n  isPaused: function () {\n    return !!this._paused;\n  },\n  _doneCallback: function () {\n    // Clear all tracks\n    this._tracks = {}; // Clear all clips\n\n    this._clipList.length = 0;\n    var doneList = this._doneList;\n    var len = doneList.length;\n\n    for (var i = 0; i < len; i++) {\n      doneList[i].call(this);\n    }\n  },\n\n  /**\n   * 开始执行动画\n   * @param  {string|Function} [easing]\n   *         动画缓动函数，详见{@link module:zrender/animation/easing}\n   * @param  {boolean} forceAnimate\n   * @return {module:zrender/animation/Animator}\n   */\n  start: function (easing, forceAnimate) {\n    var self = this;\n    var clipCount = 0;\n\n    var oneTrackDone = function () {\n      clipCount--;\n\n      if (!clipCount) {\n        self._doneCallback();\n      }\n    };\n\n    var lastClip;\n\n    for (var propName in this._tracks) {\n      if (!this._tracks.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      var clip = createTrackClip(this, easing, oneTrackDone, this._tracks[propName], propName, forceAnimate);\n\n      if (clip) {\n        this._clipList.push(clip);\n\n        clipCount++; // If start after added to animation\n\n        if (this.animation) {\n          this.animation.addClip(clip);\n        }\n\n        lastClip = clip;\n      }\n    } // Add during callback on the last clip\n\n\n    if (lastClip) {\n      var oldOnFrame = lastClip.onframe;\n\n      lastClip.onframe = function (target, percent) {\n        oldOnFrame(target, percent);\n\n        for (var i = 0; i < self._onframeList.length; i++) {\n          self._onframeList[i](target, percent);\n        }\n      };\n    } // This optimization will help the case that in the upper application\n    // the view may be refreshed frequently, where animation will be\n    // called repeatly but nothing changed.\n\n\n    if (!clipCount) {\n      this._doneCallback();\n    }\n\n    return this;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stop: function (forwardToLast) {\n    var clipList = this._clipList;\n    var animation = this.animation;\n\n    for (var i = 0; i < clipList.length; i++) {\n      var clip = clipList[i];\n\n      if (forwardToLast) {\n        // Move to last frame before stop\n        clip.onframe(this._target, 1);\n      }\n\n      animation && animation.removeClip(clip);\n    }\n\n    clipList.length = 0;\n  },\n\n  /**\n   * 设置动画延迟开始的时间\n   * @param  {number} time 单位ms\n   * @return {module:zrender/animation/Animator}\n   */\n  delay: function (time) {\n    this._delay = time;\n    return this;\n  },\n\n  /**\n   * 添加动画结束的回调\n   * @param  {Function} cb\n   * @return {module:zrender/animation/Animator}\n   */\n  done: function (cb) {\n    if (cb) {\n      this._doneList.push(cb);\n    }\n\n    return this;\n  },\n\n  /**\n   * @return {Array.<module:zrender/animation/Clip>}\n   */\n  getClips: function () {\n    return this._clipList;\n  }\n};\nvar _default = Animator;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1094:\n/***/ (function(module, exports) {\n\n// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n/**\n * Simple double linked list. Compared with array, it has O(1) remove operation.\n * @constructor\n */\nvar LinkedList = function () {\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n  this.head = null;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.tail = null;\n  this._len = 0;\n};\n\nvar linkedListProto = LinkedList.prototype;\n/**\n * Insert a new value at the tail\n * @param  {} val\n * @return {module:zrender/core/LRU~Entry}\n */\n\nlinkedListProto.insert = function (val) {\n  var entry = new Entry(val);\n  this.insertEntry(entry);\n  return entry;\n};\n/**\n * Insert an entry at the tail\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.insertEntry = function (entry) {\n  if (!this.head) {\n    this.head = this.tail = entry;\n  } else {\n    this.tail.next = entry;\n    entry.prev = this.tail;\n    entry.next = null;\n    this.tail = entry;\n  }\n\n  this._len++;\n};\n/**\n * Remove entry.\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.remove = function (entry) {\n  var prev = entry.prev;\n  var next = entry.next;\n\n  if (prev) {\n    prev.next = next;\n  } else {\n    // Is head\n    this.head = next;\n  }\n\n  if (next) {\n    next.prev = prev;\n  } else {\n    // Is tail\n    this.tail = prev;\n  }\n\n  entry.next = entry.prev = null;\n  this._len--;\n};\n/**\n * @return {number}\n */\n\n\nlinkedListProto.len = function () {\n  return this._len;\n};\n/**\n * Clear list\n */\n\n\nlinkedListProto.clear = function () {\n  this.head = this.tail = null;\n  this._len = 0;\n};\n/**\n * @constructor\n * @param {} val\n */\n\n\nvar Entry = function (val) {\n  /**\n   * @type {}\n   */\n  this.value = val;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.next;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.prev;\n};\n/**\n * LRU Cache\n * @constructor\n * @alias module:zrender/core/LRU\n */\n\n\nvar LRU = function (maxSize) {\n  this._list = new LinkedList();\n  this._map = {};\n  this._maxSize = maxSize || 10;\n  this._lastRemovedEntry = null;\n};\n\nvar LRUProto = LRU.prototype;\n/**\n * @param  {string} key\n * @param  {} value\n * @return {} Removed value\n */\n\nLRUProto.put = function (key, value) {\n  var list = this._list;\n  var map = this._map;\n  var removed = null;\n\n  if (map[key] == null) {\n    var len = list.len(); // Reuse last removed entry\n\n    var entry = this._lastRemovedEntry;\n\n    if (len >= this._maxSize && len > 0) {\n      // Remove the least recently used\n      var leastUsedEntry = list.head;\n      list.remove(leastUsedEntry);\n      delete map[leastUsedEntry.key];\n      removed = leastUsedEntry.value;\n      this._lastRemovedEntry = leastUsedEntry;\n    }\n\n    if (entry) {\n      entry.value = value;\n    } else {\n      entry = new Entry(value);\n    }\n\n    entry.key = key;\n    list.insertEntry(entry);\n    map[key] = entry;\n  }\n\n  return removed;\n};\n/**\n * @param  {string} key\n * @return {}\n */\n\n\nLRUProto.get = function (key) {\n  var entry = this._map[key];\n  var list = this._list;\n\n  if (entry != null) {\n    // Put the latest used entry in the tail\n    if (entry !== list.tail) {\n      list.remove(entry);\n      list.insertEntry(entry);\n    }\n\n    return entry.value;\n  }\n};\n/**\n * Clear the cache\n */\n\n\nLRUProto.clear = function () {\n  this._list.clear();\n\n  this._map = {};\n};\n\nvar _default = LRU;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1095:\n/***/ (function(module, exports) {\n\nvar STYLE_COMMON_PROPS = [['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'], ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]]; // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n// var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\nvar Style = function (opts, host) {\n  this.extendFrom(opts, false);\n  this.host = host;\n};\n\nfunction createLinearGradient(ctx, obj, rect) {\n  var x = obj.x == null ? 0 : obj.x;\n  var x2 = obj.x2 == null ? 1 : obj.x2;\n  var y = obj.y == null ? 0 : obj.y;\n  var y2 = obj.y2 == null ? 0 : obj.y2;\n\n  if (!obj.global) {\n    x = x * rect.width + rect.x;\n    x2 = x2 * rect.width + rect.x;\n    y = y * rect.height + rect.y;\n    y2 = y2 * rect.height + rect.y;\n  }\n\n  var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n  return canvasGradient;\n}\n\nfunction createRadialGradient(ctx, obj, rect) {\n  var width = rect.width;\n  var height = rect.height;\n  var min = Math.min(width, height);\n  var x = obj.x == null ? 0.5 : obj.x;\n  var y = obj.y == null ? 0.5 : obj.y;\n  var r = obj.r == null ? 0.5 : obj.r;\n\n  if (!obj.global) {\n    x = x * width + rect.x;\n    y = y * height + rect.y;\n    r = r * min;\n  }\n\n  var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n  return canvasGradient;\n}\n\nStyle.prototype = {\n  constructor: Style,\n\n  /**\n   * @type {module:zrender/graphic/Displayable}\n   */\n  host: null,\n\n  /**\n   * @type {string}\n   */\n  fill: '#000',\n\n  /**\n   * @type {string}\n   */\n  stroke: null,\n\n  /**\n   * @type {number}\n   */\n  opacity: 1,\n\n  /**\n   * @type {Array.<number>}\n   */\n  lineDash: null,\n\n  /**\n   * @type {number}\n   */\n  lineDashOffset: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetY: 0,\n\n  /**\n   * @type {number}\n   */\n  lineWidth: 1,\n\n  /**\n   * If stroke ignore scale\n   * @type {Boolean}\n   */\n  strokeNoScale: false,\n  // Bounding rect text configuration\n  // Not affected by element transform\n\n  /**\n   * @type {string}\n   */\n  text: null,\n\n  /**\n   * If `fontSize` or `fontFamily` exists, `font` will be reset by\n   * `fontSize`, `fontStyle`, `fontWeight`, `fontFamily`.\n   * So do not visit it directly in upper application (like echarts),\n   * but use `contain/text#makeFont` instead.\n   * @type {string}\n   */\n  font: null,\n\n  /**\n   * The same as font. Use font please.\n   * @deprecated\n   * @type {string}\n   */\n  textFont: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontStyle: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontWeight: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * Should be 12 but not '12px'.\n   * @type {number}\n   */\n  fontSize: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontFamily: null,\n\n  /**\n   * Reserved for special functinality, like 'hr'.\n   * @type {string}\n   */\n  textTag: null,\n\n  /**\n   * @type {string}\n   */\n  textFill: '#000',\n\n  /**\n   * @type {string}\n   */\n  textStroke: null,\n\n  /**\n   * @type {number}\n   */\n  textWidth: null,\n\n  /**\n   * Only for textBackground.\n   * @type {number}\n   */\n  textHeight: null,\n\n  /**\n   * textStroke may be set as some color as a default\n   * value in upper applicaion, where the default value\n   * of textStrokeWidth should be 0 to make sure that\n   * user can choose to do not use text stroke.\n   * @type {number}\n   */\n  textStrokeWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textLineHeight: null,\n\n  /**\n   * 'inside', 'left', 'right', 'top', 'bottom'\n   * [x, y]\n   * Based on x, y of rect.\n   * @type {string|Array.<number>}\n   * @default 'inside'\n   */\n  textPosition: 'inside',\n\n  /**\n   * If not specified, use the boundingRect of a `displayable`.\n   * @type {Object}\n   */\n  textRect: null,\n\n  /**\n   * [x, y]\n   * @type {Array.<number>}\n   */\n  textOffset: null,\n\n  /**\n   * @type {string}\n   */\n  textAlign: null,\n\n  /**\n   * @type {string}\n   */\n  textVerticalAlign: null,\n\n  /**\n   * @type {number}\n   */\n  textDistance: 5,\n\n  /**\n   * @type {string}\n   */\n  textShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetY: 0,\n\n  /**\n   * @type {string}\n   */\n  textBoxShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetY: 0,\n\n  /**\n   * Whether transform text.\n   * Only useful in Path and Image element\n   * @type {boolean}\n   */\n  transformText: false,\n\n  /**\n   * Text rotate around position of Path or Image\n   * Only useful in Path and Image element and transformText is false.\n   */\n  textRotation: 0,\n\n  /**\n   * Text origin of text rotation, like [10, 40].\n   * Based on x, y of rect.\n   * Useful in label rotation of circular symbol.\n   * By default, this origin is textPosition.\n   * Can be 'center'.\n   * @type {string|Array.<number>}\n   */\n  textOrigin: null,\n\n  /**\n   * @type {string}\n   */\n  textBackgroundColor: null,\n\n  /**\n   * @type {string}\n   */\n  textBorderColor: null,\n\n  /**\n   * @type {number}\n   */\n  textBorderWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textBorderRadius: 0,\n\n  /**\n   * Can be `2` or `[2, 4]` or `[2, 3, 4, 5]`\n   * @type {number|Array.<number>}\n   */\n  textPadding: null,\n\n  /**\n   * Text styles for rich text.\n   * @type {Object}\n   */\n  rich: null,\n\n  /**\n   * {outerWidth, outerHeight, ellipsis, placeholder}\n   * @type {Object}\n   */\n  truncate: null,\n\n  /**\n   * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n   * @type {string}\n   */\n  blend: null,\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  bind: function (ctx, el, prevEl) {\n    var style = this;\n    var prevStyle = prevEl && prevEl.style;\n    var firstDraw = !prevStyle;\n\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n      var prop = STYLE_COMMON_PROPS[i];\n      var styleName = prop[0];\n\n      if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n        // FIXME Invalid property value will cause style leak from previous element.\n        ctx[styleName] = style[styleName] || prop[1];\n      }\n    }\n\n    if (firstDraw || style.fill !== prevStyle.fill) {\n      ctx.fillStyle = style.fill;\n    }\n\n    if (firstDraw || style.stroke !== prevStyle.stroke) {\n      ctx.strokeStyle = style.stroke;\n    }\n\n    if (firstDraw || style.opacity !== prevStyle.opacity) {\n      ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n    }\n\n    if (firstDraw || style.blend !== prevStyle.blend) {\n      ctx.globalCompositeOperation = style.blend || 'source-over';\n    }\n\n    if (this.hasStroke()) {\n      var lineWidth = style.lineWidth;\n      ctx.lineWidth = lineWidth / (this.strokeNoScale && el && el.getLineScale ? el.getLineScale() : 1);\n    }\n  },\n  hasFill: function () {\n    var fill = this.fill;\n    return fill != null && fill !== 'none';\n  },\n  hasStroke: function () {\n    var stroke = this.stroke;\n    return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n  },\n\n  /**\n   * Extend from other style\n   * @param {zrender/graphic/Style} otherStyle\n   * @param {boolean} overwrite true: overwrirte any way.\n   *                            false: overwrite only when !target.hasOwnProperty\n   *                            others: overwrite when property is not null/undefined.\n   */\n  extendFrom: function (otherStyle, overwrite) {\n    if (otherStyle) {\n      for (var name in otherStyle) {\n        if (otherStyle.hasOwnProperty(name) && (overwrite === true || (overwrite === false ? !this.hasOwnProperty(name) : otherStyle[name] != null))) {\n          this[name] = otherStyle[name];\n        }\n      }\n    }\n  },\n\n  /**\n   * Batch setting style with a given object\n   * @param {Object|string} obj\n   * @param {*} [obj]\n   */\n  set: function (obj, value) {\n    if (typeof obj === 'string') {\n      this[obj] = value;\n    } else {\n      this.extendFrom(obj, true);\n    }\n  },\n\n  /**\n   * Clone\n   * @return {zrender/graphic/Style} [description]\n   */\n  clone: function () {\n    var newStyle = new this.constructor();\n    newStyle.extendFrom(this, true);\n    return newStyle;\n  },\n  getGradient: function (ctx, obj, rect) {\n    var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n    var canvasGradient = method(ctx, obj, rect);\n    var colorStops = obj.colorStops;\n\n    for (var i = 0; i < colorStops.length; i++) {\n      canvasGradient.addColorStop(colorStops[i].offset, colorStops[i].color);\n    }\n\n    return canvasGradient;\n  }\n};\nvar styleProto = Style.prototype;\n\nfor (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n  var prop = STYLE_COMMON_PROPS[i];\n\n  if (!(prop[0] in styleProto)) {\n    styleProto[prop[0]] = prop[1];\n  }\n} // Provide for others\n\n\nStyle.getGradient = styleProto.getGradient;\nvar _default = Style;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1096:\n/***/ (function(module, exports) {\n\nvar Pattern = function (image, repeat) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {image: ...}`, where this constructor will not be called.\n  this.image = image;\n  this.repeat = repeat; // Can be cloned\n\n  this.type = 'pattern';\n};\n\nPattern.prototype.getCanvasPattern = function (ctx) {\n  return ctx.createPattern(this.image, this.repeat || 'repeat');\n};\n\nvar _default = Pattern;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1097:\n/***/ (function(module, exports) {\n\nvar _default = typeof window !== 'undefined' && (window.requestAnimationFrame && window.requestAnimationFrame.bind(window) || // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\nwindow.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window) || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame) || function (func) {\n  setTimeout(func, 16);\n};\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1098:\n/***/ (function(module, exports) {\n\nfunction buildPath(ctx, shape) {\n  var x = shape.x;\n  var y = shape.y;\n  var width = shape.width;\n  var height = shape.height;\n  var r = shape.r;\n  var r1;\n  var r2;\n  var r3;\n  var r4; // Convert width and height to positive for better borderRadius\n\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n\n  if (typeof r === 'number') {\n    r1 = r2 = r3 = r4 = r;\n  } else if (r instanceof Array) {\n    if (r.length === 1) {\n      r1 = r2 = r3 = r4 = r[0];\n    } else if (r.length === 2) {\n      r1 = r3 = r[0];\n      r2 = r4 = r[1];\n    } else if (r.length === 3) {\n      r1 = r[0];\n      r2 = r4 = r[1];\n      r3 = r[2];\n    } else {\n      r1 = r[0];\n      r2 = r[1];\n      r3 = r[2];\n      r4 = r[3];\n    }\n  } else {\n    r1 = r2 = r3 = r4 = 0;\n  }\n\n  var total;\n\n  if (r1 + r2 > width) {\n    total = r1 + r2;\n    r1 *= width / total;\n    r2 *= width / total;\n  }\n\n  if (r3 + r4 > width) {\n    total = r3 + r4;\n    r3 *= width / total;\n    r4 *= width / total;\n  }\n\n  if (r2 + r3 > height) {\n    total = r2 + r3;\n    r2 *= height / total;\n    r3 *= height / total;\n  }\n\n  if (r1 + r4 > height) {\n    total = r1 + r4;\n    r1 *= height / total;\n    r4 *= height / total;\n  }\n\n  ctx.moveTo(x + r1, y);\n  ctx.lineTo(x + width - r2, y);\n  r2 !== 0 && ctx.quadraticCurveTo(x + width, y, x + width, y + r2);\n  ctx.lineTo(x + width, y + height - r3);\n  r3 !== 0 && ctx.quadraticCurveTo(x + width, y + height, x + width - r3, y + height);\n  ctx.lineTo(x + r4, y + height);\n  r4 !== 0 && ctx.quadraticCurveTo(x, y + height, x, y + height - r4);\n  ctx.lineTo(x, y + r1);\n  r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n}\n\nexports.buildPath = buildPath;\n\n/***/ }),\n\n/***/ 1099:\n/***/ (function(module, exports) {\n\nvar PI2 = Math.PI * 2;\n\nfunction normalizeRadian(angle) {\n  angle %= PI2;\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle;\n}\n\nexports.normalizeRadian = normalizeRadian;\n\n/***/ }),\n\n/***/ 1100:\n/***/ (function(module, exports) {\n\nfunction windingLine(x0, y0, x1, y1, x, y) {\n  if (y > y0 && y > y1 || y < y0 && y < y1) {\n    return 0;\n  } // Ignore horizontal line\n\n\n  if (y1 === y0) {\n    return 0;\n  }\n\n  var dir = y1 < y0 ? 1 : -1;\n  var t = (y - y0) / (y1 - y0); // Avoid winding error when intersection point is the connect point of two line of polygon\n\n  if (t === 1 || t === 0) {\n    dir = y1 < y0 ? 0.5 : -0.5;\n  }\n\n  var x_ = t * (x1 - x0) + x0;\n  return x_ > x ? dir : 0;\n}\n\nmodule.exports = windingLine;\n\n/***/ }),\n\n/***/ 1101:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar smoothSpline = __webpack_require__(1163);\n\nvar smoothBezier = __webpack_require__(1164);\n\nfunction buildPath(ctx, shape, closePath) {\n  var points = shape.points;\n  var smooth = shape.smooth;\n\n  if (points && points.length >= 2) {\n    if (smooth && smooth !== 'spline') {\n      var controlPoints = smoothBezier(points, smooth, closePath, shape.smoothConstraint);\n      ctx.moveTo(points[0][0], points[0][1]);\n      var len = points.length;\n\n      for (var i = 0; i < (closePath ? len : len - 1); i++) {\n        var cp1 = controlPoints[i * 2];\n        var cp2 = controlPoints[i * 2 + 1];\n        var p = points[(i + 1) % len];\n        ctx.bezierCurveTo(cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]);\n      }\n    } else {\n      if (smooth === 'spline') {\n        points = smoothSpline(points, closePath);\n      }\n\n      ctx.moveTo(points[0][0], points[0][1]);\n\n      for (var i = 1, l = points.length; i < l; i++) {\n        ctx.lineTo(points[i][0], points[i][1]);\n      }\n    }\n\n    closePath && ctx.closePath();\n  }\n}\n\nexports.buildPath = buildPath;\n\n/***/ }),\n\n/***/ 1102:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _clazz = __webpack_require__(1041);\n\nvar set = _clazz.set;\nvar get = _clazz.get;\nvar _default = {\n  clearColorPalette: function () {\n    set(this, 'colorIdx', 0);\n    set(this, 'colorNameMap', {});\n  },\n  getColorFromPalette: function (name, scope) {\n    scope = scope || this;\n    var colorIdx = get(scope, 'colorIdx') || 0;\n    var colorNameMap = get(scope, 'colorNameMap') || set(scope, 'colorNameMap', {}); // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n\n    if (colorNameMap.hasOwnProperty(name)) {\n      return colorNameMap[name];\n    }\n\n    var colorPalette = this.get('color', true) || [];\n\n    if (!colorPalette.length) {\n      return;\n    }\n\n    var color = colorPalette[colorIdx];\n\n    if (name) {\n      colorNameMap[name] = color;\n    }\n\n    set(scope, 'colorIdx', (colorIdx + 1) % colorPalette.length);\n    return color;\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1103:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar numberUtil = __webpack_require__(1030);\n\n/**\n * For testable.\n */\nvar roundNumber = numberUtil.round;\n/**\n * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n *                                Should be extent[0] < extent[1].\n * @param {number} splitNumber splitNumber should be >= 1.\n * @param {number} [minInterval]\n * @param {number} [maxInterval]\n * @return {Object} {interval, intervalPrecision, niceTickExtent}\n */\n\nfunction intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval) {\n  var result = {};\n  var span = extent[1] - extent[0];\n  var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n\n  if (minInterval != null && interval < minInterval) {\n    interval = result.interval = minInterval;\n  }\n\n  if (maxInterval != null && interval > maxInterval) {\n    interval = result.interval = maxInterval;\n  } // Tow more digital for tick.\n\n\n  var precision = result.intervalPrecision = getIntervalPrecision(interval); // Niced extent inside original extent\n\n  var niceTickExtent = result.niceTickExtent = [roundNumber(Math.ceil(extent[0] / interval) * interval, precision), roundNumber(Math.floor(extent[1] / interval) * interval, precision)];\n  fixExtent(niceTickExtent, extent);\n  return result;\n}\n/**\n * @param {number} interval\n * @return {number} interval precision\n */\n\n\nfunction getIntervalPrecision(interval) {\n  // Tow more digital for tick.\n  return numberUtil.getPrecisionSafe(interval) + 2;\n}\n\nfunction clamp(niceTickExtent, idx, extent) {\n  niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n} // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n\n\nfunction fixExtent(niceTickExtent, extent) {\n  !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n  !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n  clamp(niceTickExtent, 0, extent);\n  clamp(niceTickExtent, 1, extent);\n\n  if (niceTickExtent[0] > niceTickExtent[1]) {\n    niceTickExtent[0] = niceTickExtent[1];\n  }\n}\n\nfunction intervalScaleGetTicks(interval, extent, niceTickExtent, intervalPrecision) {\n  var ticks = []; // If interval is 0, return [];\n\n  if (!interval) {\n    return ticks;\n  } // Consider this case: using dataZoom toolbox, zoom and zoom.\n\n\n  var safeLimit = 10000;\n\n  if (extent[0] < niceTickExtent[0]) {\n    ticks.push(extent[0]);\n  }\n\n  var tick = niceTickExtent[0];\n\n  while (tick <= niceTickExtent[1]) {\n    ticks.push(tick); // Avoid rounding error\n\n    tick = roundNumber(tick + interval, intervalPrecision);\n\n    if (tick === ticks[ticks.length - 1]) {\n      // Consider out of safe float point, e.g.,\n      // -3711126.9907707 + 2e-10 === -3711126.9907707\n      break;\n    }\n\n    if (ticks.length > safeLimit) {\n      return [];\n    }\n  } // Consider this case: the last item of ticks is smaller\n  // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n\n\n  if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n    ticks.push(extent[1]);\n  }\n\n  return ticks;\n}\n\nexports.intervalScaleNiceTicks = intervalScaleNiceTicks;\nexports.getIntervalPrecision = getIntervalPrecision;\nexports.fixExtent = fixExtent;\nexports.intervalScaleGetTicks = intervalScaleGetTicks;\n\n/***/ }),\n\n/***/ 1104:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1027);\n\nvar modelUtil = __webpack_require__(1031);\n\n/**\n * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} {point: [x, y], el: ...} point Will not be null.\n */\nfunction _default(finder, ecModel) {\n  var point = [];\n  var seriesIndex = finder.seriesIndex;\n  var seriesModel;\n\n  if (seriesIndex == null || !(seriesModel = ecModel.getSeriesByIndex(seriesIndex))) {\n    return {\n      point: []\n    };\n  }\n\n  var data = seriesModel.getData();\n  var dataIndex = modelUtil.queryDataIndex(data, finder);\n\n  if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n    return {\n      point: []\n    };\n  }\n\n  var el = data.getItemGraphicEl(dataIndex);\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (seriesModel.getTooltipPosition) {\n    point = seriesModel.getTooltipPosition(dataIndex) || [];\n  } else if (coordSys && coordSys.dataToPoint) {\n    point = coordSys.dataToPoint(data.getValues(zrUtil.map(coordSys.dimensions, function (dim) {\n      return seriesModel.coordDimToDataDim(dim)[0];\n    }), dataIndex, true)) || [];\n  } else if (el) {\n    // Use graphic bounding rect\n    var rect = el.getBoundingRect().clone();\n    rect.applyTransform(el.transform);\n    point = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n\n  return {\n    point: point,\n    el: el\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1105:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1027);\n\nvar env = __webpack_require__(1035);\n\nvar modelUtil = __webpack_require__(1031);\n\nvar get = modelUtil.makeGetter();\nvar each = zrUtil.each;\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n * @param {Function} handler\n *      param: {string} currTrigger\n *      param: {Array.<number>} point\n */\n\nfunction register(key, api, handler) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  get(zr).records || (get(zr).records = {});\n  initGlobalListeners(zr, api);\n  var record = get(zr).records[key] || (get(zr).records[key] = {});\n  record.handler = handler;\n}\n\nfunction initGlobalListeners(zr, api) {\n  if (get(zr).initialized) {\n    return;\n  }\n\n  get(zr).initialized = true;\n  useHandler('click', zrUtil.curry(doEnter, 'click'));\n  useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove')); // useHandler('mouseout', onLeave);\n\n  useHandler('globalout', onLeave);\n\n  function useHandler(eventType, cb) {\n    zr.on(eventType, function (e) {\n      var dis = makeDispatchAction(api);\n      each(get(zr).records, function (record) {\n        record && cb(record, e, dis.dispatchAction);\n      });\n      dispatchTooltipFinally(dis.pendings, api);\n    });\n  }\n}\n\nfunction dispatchTooltipFinally(pendings, api) {\n  var showLen = pendings.showTip.length;\n  var hideLen = pendings.hideTip.length;\n  var actuallyPayload;\n\n  if (showLen) {\n    actuallyPayload = pendings.showTip[showLen - 1];\n  } else if (hideLen) {\n    actuallyPayload = pendings.hideTip[hideLen - 1];\n  }\n\n  if (actuallyPayload) {\n    actuallyPayload.dispatchAction = null;\n    api.dispatchAction(actuallyPayload);\n  }\n}\n\nfunction onLeave(record, e, dispatchAction) {\n  record.handler('leave', null, dispatchAction);\n}\n\nfunction doEnter(currTrigger, record, e, dispatchAction) {\n  record.handler(currTrigger, e, dispatchAction);\n}\n\nfunction makeDispatchAction(api) {\n  var pendings = {\n    showTip: [],\n    hideTip: []\n  }; // FIXME\n  // better approach?\n  // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n  // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n  // So we have to add \"final stage\" to merge those dispatched actions.\n\n  var dispatchAction = function (payload) {\n    var pendingList = pendings[payload.type];\n\n    if (pendingList) {\n      pendingList.push(payload);\n    } else {\n      payload.dispatchAction = dispatchAction;\n      api.dispatchAction(payload);\n    }\n  };\n\n  return {\n    dispatchAction: dispatchAction,\n    pendings: pendings\n  };\n}\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction unregister(key, api) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  var record = (get(zr).records || {})[key];\n\n  if (record) {\n    get(zr).records[key] = null;\n  }\n}\n\nexports.register = register;\nexports.unregister = unregister;\n\n/***/ }),\n\n/***/ 1106:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _layout = __webpack_require__(1039);\n\nvar getLayoutRect = _layout.getLayoutRect;\nvar layoutBox = _layout.box;\nvar positionElement = _layout.positionElement;\n\nvar formatUtil = __webpack_require__(1034);\n\nvar graphic = __webpack_require__(1029);\n\n/**\n * Layout list like component.\n * It will box layout each items in group of component and then position the whole group in the viewport\n * @param {module:zrender/group/Group} group\n * @param {module:echarts/model/Component} componentModel\n * @param {module:echarts/ExtensionAPI}\n */\nfunction layout(group, componentModel, api) {\n  var boxLayoutParams = componentModel.getBoxLayoutParams();\n  var padding = componentModel.get('padding');\n  var viewportSize = {\n    width: api.getWidth(),\n    height: api.getHeight()\n  };\n  var rect = getLayoutRect(boxLayoutParams, viewportSize, padding);\n  layoutBox(componentModel.get('orient'), group, componentModel.get('itemGap'), rect.width, rect.height);\n  positionElement(group, boxLayoutParams, viewportSize, padding);\n}\n\nfunction makeBackground(rect, componentModel) {\n  var padding = formatUtil.normalizeCssArray(componentModel.get('padding'));\n  var style = componentModel.getItemStyle(['color', 'opacity']);\n  style.fill = componentModel.get('backgroundColor');\n  var rect = new graphic.Rect({\n    shape: {\n      x: rect.x - padding[3],\n      y: rect.y - padding[0],\n      width: rect.width + padding[1] + padding[3],\n      height: rect.height + padding[0] + padding[2],\n      r: componentModel.get('borderRadius')\n    },\n    style: style,\n    silent: true,\n    z2: -1\n  }); // FIXME\n  // `subPixelOptimizeRect` may bring some gap between edge of viewpart\n  // and background rect when setting like `left: 0`, `top: 0`.\n  // graphic.subPixelOptimizeRect(rect);\n\n  return rect;\n}\n\nexports.layout = layout;\nexports.makeBackground = makeBackground;\n\n/***/ }),\n\n/***/ 1107:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1027);\n\nvar each = zrUtil.each;\nvar ATTR = '\\0_ec_hist_store';\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} newSnapshot {dataZoomId, batch: [payloadInfo, ...]}\n */\n\nfunction push(ecModel, newSnapshot) {\n  var store = giveStore(ecModel); // If previous dataZoom can not be found,\n  // complete an range with current range.\n\n  each(newSnapshot, function (batchItem, dataZoomId) {\n    var i = store.length - 1;\n\n    for (; i >= 0; i--) {\n      var snapshot = store[i];\n\n      if (snapshot[dataZoomId]) {\n        break;\n      }\n    }\n\n    if (i < 0) {\n      // No origin range set, create one by current range.\n      var dataZoomModel = ecModel.queryComponents({\n        mainType: 'dataZoom',\n        subType: 'select',\n        id: dataZoomId\n      })[0];\n\n      if (dataZoomModel) {\n        var percentRange = dataZoomModel.getPercentRange();\n        store[0][dataZoomId] = {\n          dataZoomId: dataZoomId,\n          start: percentRange[0],\n          end: percentRange[1]\n        };\n      }\n    }\n  });\n  store.push(newSnapshot);\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} snapshot\n */\n\n\nfunction pop(ecModel) {\n  var store = giveStore(ecModel);\n  var head = store[store.length - 1];\n  store.length > 1 && store.pop(); // Find top for all dataZoom.\n\n  var snapshot = {};\n  each(head, function (batchItem, dataZoomId) {\n    for (var i = store.length - 1; i >= 0; i--) {\n      var batchItem = store[i][dataZoomId];\n\n      if (batchItem) {\n        snapshot[dataZoomId] = batchItem;\n        break;\n      }\n    }\n  });\n  return snapshot;\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n */\n\n\nfunction clear(ecModel) {\n  ecModel[ATTR] = null;\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n * @return {number} records. always >= 1.\n */\n\n\nfunction count(ecModel) {\n  return giveStore(ecModel).length;\n}\n/**\n * [{key: dataZoomId, value: {dataZoomId, range}}, ...]\n * History length of each dataZoom may be different.\n * this._history[0] is used to store origin range.\n * @type {Array.<Object>}\n */\n\n\nfunction giveStore(ecModel) {\n  var store = ecModel[ATTR];\n\n  if (!store) {\n    store = ecModel[ATTR] = [{}];\n  }\n\n  return store;\n}\n\nexports.push = push;\nexports.pop = pop;\nexports.clear = clear;\nexports.count = count;\n\n/***/ }),\n\n/***/ 1109:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar env = __webpack_require__(1035);\n\n// Fix weird bug in some version of IE11 (like 11.0.9600.178**),\n// where exception \"unexpected call to method or property access\"\n// might be thrown when calling ctx.fill or ctx.stroke after a path\n// whose area size is zero is drawn and ctx.clip() is called and\n// shadowBlur is set. See #4572, #3112, #5777.\n// (e.g.,\n//  ctx.moveTo(10, 10);\n//  ctx.lineTo(20, 10);\n//  ctx.closePath();\n//  ctx.clip();\n//  ctx.shadowBlur = 10;\n//  ...\n//  ctx.fill();\n// )\nvar shadowTemp = [['shadowBlur', 0], ['shadowColor', '#000'], ['shadowOffsetX', 0], ['shadowOffsetY', 0]];\n\nfunction _default(orignalBrush) {\n  // version string can be: '11.0'\n  return env.browser.ie && env.browser.version >= 11 ? function () {\n    var clipPaths = this.__clipPaths;\n    var style = this.style;\n    var modified;\n\n    if (clipPaths) {\n      for (var i = 0; i < clipPaths.length; i++) {\n        var clipPath = clipPaths[i];\n        var shape = clipPath && clipPath.shape;\n        var type = clipPath && clipPath.type;\n\n        if (shape && (type === 'sector' && shape.startAngle === shape.endAngle || type === 'rect' && (!shape.width || !shape.height))) {\n          for (var j = 0; j < shadowTemp.length; j++) {\n            // It is save to put shadowTemp static, because shadowTemp\n            // will be all modified each item brush called.\n            shadowTemp[j][2] = style[shadowTemp[j][0]];\n            style[shadowTemp[j][0]] = shadowTemp[j][1];\n          }\n\n          modified = true;\n          break;\n        }\n      }\n    }\n\n    orignalBrush.apply(this, arguments);\n\n    if (modified) {\n      for (var j = 0; j < shadowTemp.length; j++) {\n        style[shadowTemp[j][0]] = shadowTemp[j][2];\n      }\n    }\n  } : orignalBrush;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1110:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar graphic = __webpack_require__(1029);\n\nvar BaseAxisPointer = __webpack_require__(1111);\n\nvar viewHelper = __webpack_require__(1084);\n\nvar cartesianAxisHelper = __webpack_require__(1112);\n\nvar AxisView = __webpack_require__(1071);\n\nvar CartesianAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisPointerType = axisPointerModel.get('type');\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  },\n\n  /**\n   * @override\n   */\n  getHandleTransform: function (value, axisModel, axisPointerModel) {\n    var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n      labelInside: false\n    });\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n    return {\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  },\n\n  /**\n   * @override\n   */\n  updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisExtent = axis.getGlobalExtent(true);\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var dimIndex = axis.dim === 'x' ? 0 : 1;\n    var currPosition = transform.position;\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex]; // Make tooltip do not overlap axisPointer and in the middle of the grid.\n\n    var tooltipOptions = [{\n      verticalAlign: 'middle'\n    }, {\n      align: 'center'\n    }];\n    return {\n      position: currPosition,\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: tooltipOptions[dimIndex]\n    };\n  }\n});\n\nfunction getCartesian(grid, axis) {\n  var opt = {};\n  opt[axis.dim + 'AxisIndex'] = axis.index;\n  return grid.getCartesian(opt);\n}\n\nvar pointerShapeBuilder = {\n  line: function (axis, pixelValue, otherExtent, elStyle) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getAxisDimIndex(axis));\n    graphic.subPixelOptimizeLine({\n      shape: targetShape,\n      style: elStyle\n    });\n    return {\n      type: 'Line',\n      shape: targetShape\n    };\n  },\n  shadow: function (axis, pixelValue, otherExtent, elStyle) {\n    var bandWidth = axis.getBandWidth();\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getAxisDimIndex(axis))\n    };\n  }\n};\n\nfunction getAxisDimIndex(axis) {\n  return axis.dim === 'x' ? 0 : 1;\n}\n\nAxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\nvar _default = CartesianAxisPointer;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1111:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1027);\n\nvar clazzUtil = __webpack_require__(1041);\n\nvar graphic = __webpack_require__(1029);\n\nvar axisPointerModelHelper = __webpack_require__(1064);\n\nvar eventTool = __webpack_require__(1047);\n\nvar throttleUtil = __webpack_require__(1057);\n\nvar modelUtil = __webpack_require__(1031);\n\nvar get = modelUtil.makeGetter();\nvar clone = zrUtil.clone;\nvar bind = zrUtil.bind;\n/**\n * Base axis pointer class in 2D.\n * Implemenents {module:echarts/component/axis/IAxisPointer}.\n */\n\nfunction BaseAxisPointer() {}\n\nBaseAxisPointer.prototype = {\n  /**\n   * @private\n   */\n  _group: null,\n\n  /**\n   * @private\n   */\n  _lastGraphicKey: null,\n\n  /**\n   * @private\n   */\n  _handle: null,\n\n  /**\n   * @private\n   */\n  _dragging: false,\n\n  /**\n   * @private\n   */\n  _lastValue: null,\n\n  /**\n   * @private\n   */\n  _lastStatus: null,\n\n  /**\n   * @private\n   */\n  _payloadInfo: null,\n\n  /**\n   * In px, arbitrary value. Do not set too small,\n   * no animation is ok for most cases.\n   * @protected\n   */\n  animationThreshold: 15,\n\n  /**\n   * @implement\n   */\n  render: function (axisModel, axisPointerModel, api, forceRender) {\n    var value = axisPointerModel.get('value');\n    var status = axisPointerModel.get('status'); // Bind them to `this`, not in closure, otherwise they will not\n    // be replaced when user calling setOption in not merge mode.\n\n    this._axisModel = axisModel;\n    this._axisPointerModel = axisPointerModel;\n    this._api = api; // Optimize: `render` will be called repeatly during mouse move.\n    // So it is power consuming if performing `render` each time,\n    // especially on mobile device.\n\n    if (!forceRender && this._lastValue === value && this._lastStatus === status) {\n      return;\n    }\n\n    this._lastValue = value;\n    this._lastStatus = status;\n    var group = this._group;\n    var handle = this._handle;\n\n    if (!status || status === 'hide') {\n      // Do not clear here, for animation better.\n      group && group.hide();\n      handle && handle.hide();\n      return;\n    }\n\n    group && group.show();\n    handle && handle.show(); // Otherwise status is 'show'\n\n    var elOption = {};\n    this.makeElOption(elOption, value, axisModel, axisPointerModel, api); // Enable change axis pointer type.\n\n    var graphicKey = elOption.graphicKey;\n\n    if (graphicKey !== this._lastGraphicKey) {\n      this.clear(api);\n    }\n\n    this._lastGraphicKey = graphicKey;\n    var moveAnimation = this._moveAnimation = this.determineAnimation(axisModel, axisPointerModel);\n\n    if (!group) {\n      group = this._group = new graphic.Group();\n      this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n      this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n      api.getZr().add(group);\n    } else {\n      var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n      this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n      this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n    }\n\n    updateMandatoryProps(group, axisPointerModel, true);\n\n    this._renderHandle(value);\n  },\n\n  /**\n   * @implement\n   */\n  remove: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @implement\n   */\n  dispose: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @protected\n   */\n  determineAnimation: function (axisModel, axisPointerModel) {\n    var animation = axisPointerModel.get('animation');\n    var axis = axisModel.axis;\n    var isCategoryAxis = axis.type === 'category';\n    var useSnap = axisPointerModel.get('snap'); // Value axis without snap always do not snap.\n\n    if (!useSnap && !isCategoryAxis) {\n      return false;\n    }\n\n    if (animation === 'auto' || animation == null) {\n      var animationThreshold = this.animationThreshold;\n\n      if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n        return true;\n      } // It is important to auto animation when snap used. Consider if there is\n      // a dataZoom, animation will be disabled when too many points exist, while\n      // it will be enabled for better visual effect when little points exist.\n\n\n      if (useSnap) {\n        var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n        var axisExtent = axis.getExtent(); // Approximate band width\n\n        return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n      }\n\n      return false;\n    }\n\n    return animation === true;\n  },\n\n  /**\n   * add {pointer, label, graphicKey} to elOption\n   * @protected\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {// Shoule be implemenented by sub-class.\n  },\n\n  /**\n   * @protected\n   */\n  createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n    var pointerOption = elOption.pointer;\n\n    if (pointerOption) {\n      var pointerEl = get(group).pointerEl = new graphic[pointerOption.type](clone(elOption.pointer));\n      group.add(pointerEl);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n    if (elOption.label) {\n      var labelEl = get(group).labelEl = new graphic.Rect(clone(elOption.label));\n      group.add(labelEl);\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updatePointerEl: function (group, elOption, updateProps) {\n    var pointerEl = get(group).pointerEl;\n\n    if (pointerEl) {\n      pointerEl.setStyle(elOption.pointer.style);\n      updateProps(pointerEl, {\n        shape: elOption.pointer.shape\n      });\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n    var labelEl = get(group).labelEl;\n\n    if (labelEl) {\n      labelEl.setStyle(elOption.label.style);\n      updateProps(labelEl, {\n        // Consider text length change in vertical axis, animation should\n        // be used on shape, otherwise the effect will be weird.\n        shape: elOption.label.shape,\n        position: elOption.label.position\n      });\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderHandle: function (value) {\n    if (this._dragging || !this.updateHandleTransform) {\n      return;\n    }\n\n    var axisPointerModel = this._axisPointerModel;\n\n    var zr = this._api.getZr();\n\n    var handle = this._handle;\n    var handleModel = axisPointerModel.getModel('handle');\n    var status = axisPointerModel.get('status');\n\n    if (!handleModel.get('show') || !status || status === 'hide') {\n      handle && zr.remove(handle);\n      this._handle = null;\n      return;\n    }\n\n    var isInit;\n\n    if (!this._handle) {\n      isInit = true;\n      handle = this._handle = graphic.createIcon(handleModel.get('icon'), {\n        cursor: 'move',\n        draggable: true,\n        onmousemove: function (e) {\n          // Fot mobile devicem, prevent screen slider on the button.\n          eventTool.stop(e.event);\n        },\n        onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n        drift: bind(this._onHandleDragMove, this),\n        ondragend: bind(this._onHandleDragEnd, this)\n      });\n      zr.add(handle);\n    }\n\n    updateMandatoryProps(handle, axisPointerModel, false); // update style\n\n    var includeStyles = ['color', 'borderColor', 'borderWidth', 'opacity', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'];\n    handle.setStyle(handleModel.getItemStyle(null, includeStyles)); // update position\n\n    var handleSize = handleModel.get('size');\n\n    if (!zrUtil.isArray(handleSize)) {\n      handleSize = [handleSize, handleSize];\n    }\n\n    handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n    throttleUtil.createOrUpdate(this, '_doDispatchAxisPointer', handleModel.get('throttle') || 0, 'fixRate');\n\n    this._moveHandleToValue(value, isInit);\n  },\n\n  /**\n   * @private\n   */\n  _moveHandleToValue: function (value, isInit) {\n    updateProps(this._axisPointerModel, !isInit && this._moveAnimation, this._handle, getHandleTransProps(this.getHandleTransform(value, this._axisModel, this._axisPointerModel)));\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragMove: function (dx, dy) {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    this._dragging = true; // Persistent for throttle.\n\n    var trans = this.updateHandleTransform(getHandleTransProps(handle), [dx, dy], this._axisModel, this._axisPointerModel);\n    this._payloadInfo = trans;\n    handle.stopAnimation();\n    handle.attr(getHandleTransProps(trans));\n    get(handle).lastProp = null;\n\n    this._doDispatchAxisPointer();\n  },\n\n  /**\n   * Throttled method.\n   * @private\n   */\n  _doDispatchAxisPointer: function () {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var payloadInfo = this._payloadInfo;\n    var axisModel = this._axisModel;\n\n    this._api.dispatchAction({\n      type: 'updateAxisPointer',\n      x: payloadInfo.cursorPoint[0],\n      y: payloadInfo.cursorPoint[1],\n      tooltipOption: payloadInfo.tooltipOption,\n      axesInfo: [{\n        axisDim: axisModel.axis.dim,\n        axisIndex: axisModel.componentIndex\n      }]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragEnd: function (moveAnimation) {\n    this._dragging = false;\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var value = this._axisPointerModel.get('value'); // Consider snap or categroy axis, handle may be not consistent with\n    // axisPointer. So move handle to align the exact value position when\n    // drag ended.\n\n\n    this._moveHandleToValue(value); // For the effect: tooltip will be shown when finger holding on handle\n    // button, and will be hidden after finger left handle button.\n\n\n    this._api.dispatchAction({\n      type: 'hideTip'\n    });\n  },\n\n  /**\n   * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {number} value\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0}\n   */\n  getHandleTransform: null,\n\n  /**\n   * * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {Object} transform {position, rotation}\n   * @param {Array.<number>} delta [dx, dy]\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n   */\n  updateHandleTransform: null,\n\n  /**\n   * @private\n   */\n  clear: function (api) {\n    this._lastValue = null;\n    this._lastStatus = null;\n    var zr = api.getZr();\n    var group = this._group;\n    var handle = this._handle;\n\n    if (zr && group) {\n      this._lastGraphicKey = null;\n      group && zr.remove(group);\n      handle && zr.remove(handle);\n      this._group = null;\n      this._handle = null;\n      this._payloadInfo = null;\n    }\n  },\n\n  /**\n   * @protected\n   */\n  doClear: function () {// Implemented by sub-class if necessary.\n  },\n\n  /**\n   * @protected\n   * @param {Array.<number>} xy\n   * @param {Array.<number>} wh\n   * @param {number} [xDimIndex=0] or 1\n   */\n  buildLabel: function (xy, wh, xDimIndex) {\n    xDimIndex = xDimIndex || 0;\n    return {\n      x: xy[xDimIndex],\n      y: xy[1 - xDimIndex],\n      width: wh[xDimIndex],\n      height: wh[1 - xDimIndex]\n    };\n  }\n};\nBaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\nfunction updateProps(animationModel, moveAnimation, el, props) {\n  // Animation optimize.\n  if (!propsEqual(get(el).lastProp, props)) {\n    get(el).lastProp = props;\n    moveAnimation ? graphic.updateProps(el, props, animationModel) : (el.stopAnimation(), el.attr(props));\n  }\n}\n\nfunction propsEqual(lastProps, newProps) {\n  if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n    var equals = true;\n    zrUtil.each(newProps, function (item, key) {\n      equals = equals && propsEqual(lastProps[key], item);\n    });\n    return !!equals;\n  } else {\n    return lastProps === newProps;\n  }\n}\n\nfunction updateLabelShowHide(labelEl, axisPointerModel) {\n  labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n}\n\nfunction getHandleTransProps(trans) {\n  return {\n    position: trans.position.slice(),\n    rotation: trans.rotation || 0\n  };\n}\n\nfunction updateMandatoryProps(group, axisPointerModel, silent) {\n  var z = axisPointerModel.get('z');\n  var zlevel = axisPointerModel.get('zlevel');\n  group && group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n      el.silent = silent;\n    }\n  });\n}\n\nclazzUtil.enableClassExtend(BaseAxisPointer);\nvar _default = BaseAxisPointer;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1112:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1027);\n\n/**\n * @param {Object} opt {labelInside}\n * @return {Object} {\n *  position, rotation, labelDirection, labelOffset,\n *  tickDirection, labelRotate, labelInterval, z2\n * }\n */\nfunction layout(gridModel, axisModel, opt) {\n  opt = opt || {};\n  var grid = gridModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var rawAxisPosition = axis.position;\n  var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n  var axisDim = axis.dim;\n  var rect = grid.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var idx = {\n    left: 0,\n    right: 1,\n    top: 0,\n    bottom: 1,\n    onZero: 2\n  };\n  var axisOffset = axisModel.get('offset') || 0;\n  var posBound = axisDim === 'x' ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset] : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\n\n  if (axis.onZero) {\n    var otherAxis = grid.getAxis(axisDim === 'x' ? 'y' : 'x', axis.onZeroAxisIndex);\n    var onZeroCoord = otherAxis.toGlobalCoord(otherAxis.dataToCoord(0));\n    posBound[idx['onZero']] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\n  } // Axis position\n\n\n  layout.position = [axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0], axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]]; // Axis rotation\n\n  layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1); // Tick and label direction, x y is axisDim\n\n  var dirMap = {\n    top: -1,\n    bottom: 1,\n    left: -1,\n    right: 1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n  layout.labelOffset = axis.onZero ? posBound[idx[rawAxisPosition]] - posBound[idx['onZero']] : 0;\n\n  if (axisModel.get('axisTick.inside')) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n    layout.labelDirection = -layout.labelDirection;\n  } // Special label rotation\n\n\n  var labelRotate = axisModel.get('axisLabel.rotate');\n  layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate; // label interval when auto mode.\n\n  layout.labelInterval = axis.getLabelInterval(); // Over splitLine and splitArea\n\n  layout.z2 = 1;\n  return layout;\n}\n\nexports.layout = layout;\n\n/***/ }),\n\n/***/ 1113:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1028);\n\nvar zrUtil = __webpack_require__(1027);\n\nvar Model = __webpack_require__(1038);\n\nvar LegendModel = echarts.extendComponentModel({\n  type: 'legend.plain',\n  dependencies: ['series'],\n  layoutMode: {\n    type: 'box',\n    // legend.width/height are maxWidth/maxHeight actually,\n    // whereas realy width/height is calculated by its content.\n    // (Setting {left: 10, right: 10} does not make sense).\n    // So consider the case:\n    // `setOption({legend: {left: 10});`\n    // then `setOption({legend: {right: 10});`\n    // The previous `left` should be cleared by setting `ignoreSize`.\n    ignoreSize: true\n  },\n  init: function (option, parentModel, ecModel) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    option.selected = option.selected || {};\n  },\n  mergeOption: function (option) {\n    LegendModel.superCall(this, 'mergeOption', option);\n  },\n  optionUpdated: function () {\n    this._updateData(this.ecModel);\n\n    var legendData = this._data; // If selectedMode is single, try to select one\n\n    if (legendData[0] && this.get('selectedMode') === 'single') {\n      var hasSelected = false; // If has any selected in option.selected\n\n      for (var i = 0; i < legendData.length; i++) {\n        var name = legendData[i].get('name');\n\n        if (this.isSelected(name)) {\n          // Force to unselect others\n          this.select(name);\n          hasSelected = true;\n          break;\n        }\n      } // Try select the first if selectedMode is single\n\n\n      !hasSelected && this.select(legendData[0].get('name'));\n    }\n  },\n  _updateData: function (ecModel) {\n    var legendData = zrUtil.map(this.get('data') || [], function (dataItem) {\n      // Can be string or number\n      if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n        dataItem = {\n          name: dataItem\n        };\n      }\n\n      return new Model(dataItem, this, this.ecModel);\n    }, this);\n    this._data = legendData;\n    var availableNames = zrUtil.map(ecModel.getSeries(), function (series) {\n      return series.name;\n    });\n    ecModel.eachSeries(function (seriesModel) {\n      if (seriesModel.legendDataProvider) {\n        var data = seriesModel.legendDataProvider();\n        availableNames = availableNames.concat(data.mapArray(data.getName));\n      }\n    });\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n\n    this._availableNames = availableNames;\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Model>}\n   */\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @param {string} name\n   */\n  select: function (name) {\n    var selected = this.option.selected;\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      var data = this._data;\n      zrUtil.each(data, function (dataItem) {\n        selected[dataItem.get('name')] = false;\n      });\n    }\n\n    selected[name] = true;\n  },\n\n  /**\n   * @param {string} name\n   */\n  unSelect: function (name) {\n    if (this.get('selectedMode') !== 'single') {\n      this.option.selected[name] = false;\n    }\n  },\n\n  /**\n   * @param {string} name\n   */\n  toggleSelected: function (name) {\n    var selected = this.option.selected; // Default is true\n\n    if (!selected.hasOwnProperty(name)) {\n      selected[name] = true;\n    }\n\n    this[selected[name] ? 'unSelect' : 'select'](name);\n  },\n\n  /**\n   * @param {string} name\n   */\n  isSelected: function (name) {\n    var selected = this.option.selected;\n    return !(selected.hasOwnProperty(name) && !selected[name]) && zrUtil.indexOf(this._availableNames, name) >= 0;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 4,\n    show: true,\n    // 布局方式，默认为水平布局，可选为：\n    // 'horizontal' | 'vertical'\n    orient: 'horizontal',\n    left: 'center',\n    // right: 'center',\n    top: 0,\n    // bottom: null,\n    // 水平对齐\n    // 'auto' | 'left' | 'right'\n    // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n    align: 'auto',\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 图例边框颜色\n    borderColor: '#ccc',\n    borderRadius: 0,\n    // 图例边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 图例内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 各个item之间的间隔，单位px，默认为10，\n    // 横向布局时为水平间隔，纵向布局时为纵向间隔\n    itemGap: 10,\n    // 图例图形宽度\n    itemWidth: 25,\n    // 图例图形高度\n    itemHeight: 14,\n    // 图例关闭时候的颜色\n    inactiveColor: '#ccc',\n    textStyle: {\n      // 图例文字颜色\n      color: '#333'\n    },\n    // formatter: '',\n    // 选择模式，默认开启图例开关\n    selectedMode: true,\n    // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n    // selected: null,\n    // 图例内容（详见legend.data，数组中每一项代表一个item\n    // data: [],\n    // Tooltip 相关配置\n    tooltip: {\n      show: false\n    }\n  }\n});\nvar _default = LegendModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1114:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(1032);\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = __webpack_require__(1028);\n\nvar zrUtil = __webpack_require__(1027);\n\nvar _symbol = __webpack_require__(1052);\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = __webpack_require__(1029);\n\nvar _listComponent = __webpack_require__(1106);\n\nvar makeBackground = _listComponent.makeBackground;\n\nvar layoutUtil = __webpack_require__(1039);\n\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar Group = graphic.Group;\n\nvar _default = echarts.extendComponentView({\n  type: 'legend.plain',\n  newlineDisabled: false,\n\n  /**\n   * @override\n   */\n  init: function () {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this.group.add(this._contentGroup = new Group());\n    /**\n     * @private\n     * @type {module:zrender/Element}\n     */\n\n    this._backgroundEl;\n  },\n\n  /**\n   * @protected\n   */\n  getContentGroup: function () {\n    return this._contentGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (legendModel, ecModel, api) {\n    this.resetInner();\n\n    if (!legendModel.get('show', true)) {\n      return;\n    }\n\n    var itemAlign = legendModel.get('align');\n\n    if (!itemAlign || itemAlign === 'auto') {\n      itemAlign = legendModel.get('left') === 'right' && legendModel.get('orient') === 'vertical' ? 'right' : 'left';\n    }\n\n    this.renderInner(itemAlign, legendModel, ecModel, api); // Perform layout.\n\n    var positionInfo = legendModel.getBoxLayoutParams();\n    var viewportSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var padding = legendModel.get('padding');\n    var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize); // Place mainGroup, based on the calculated `mainRect`.\n\n    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({\n      width: mainRect.width,\n      height: mainRect.height\n    }, positionInfo), viewportSize, padding);\n    this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]); // Render background after group is layout.\n\n    this.group.add(this._backgroundEl = makeBackground(mainRect, legendModel));\n  },\n\n  /**\n   * @protected\n   */\n  resetInner: function () {\n    this.getContentGroup().removeAll();\n    this._backgroundEl && this.group.remove(this._backgroundEl);\n  },\n\n  /**\n   * @protected\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var contentGroup = this.getContentGroup();\n    var legendDrawnMap = zrUtil.createHashMap();\n    var selectMode = legendModel.get('selectedMode');\n    each(legendModel.getData(), function (itemModel, dataIndex) {\n      var name = itemModel.get('name'); // Use empty string or \\n as a newline string\n\n      if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n        contentGroup.add(new Group({\n          newline: true\n        }));\n        return;\n      }\n\n      var seriesModel = ecModel.getSeriesByName(name)[0];\n\n      if (legendDrawnMap.get(name)) {\n        // Have been drawed\n        return;\n      } // Series legend\n\n\n      if (seriesModel) {\n        var data = seriesModel.getData();\n        var color = data.getVisual('color'); // If color is a callback function\n\n        if (typeof color === 'function') {\n          // Use the first data\n          color = color(seriesModel.getDataParams(0));\n        } // Using rect symbol defaultly\n\n\n        var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n        var symbolType = data.getVisual('symbol');\n\n        var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode);\n\n        itemGroup.on('click', curry(dispatchSelectAction, name, api)).on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api));\n        legendDrawnMap.set(name, true);\n      } else {\n        // Data legend of pie, funnel\n        ecModel.eachRawSeries(function (seriesModel) {\n          // In case multiple series has same data name\n          if (legendDrawnMap.get(name)) {\n            return;\n          }\n\n          if (seriesModel.legendDataProvider) {\n            var data = seriesModel.legendDataProvider();\n            var idx = data.indexOfName(name);\n\n            if (idx < 0) {\n              return;\n            }\n\n            var color = data.getItemVisual(idx, 'color');\n            var legendSymbolType = 'roundRect';\n\n            var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, null, itemAlign, color, selectMode);\n\n            itemGroup.on('click', curry(dispatchSelectAction, name, api)) // FIXME Should not specify the series name\n            .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));\n            legendDrawnMap.set(name, true);\n          }\n        }, this);\n      }\n    }, this);\n  },\n  _createItem: function (name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode) {\n    var itemWidth = legendModel.get('itemWidth');\n    var itemHeight = legendModel.get('itemHeight');\n    var inactiveColor = legendModel.get('inactiveColor');\n    var isSelected = legendModel.isSelected(name);\n    var itemGroup = new Group();\n    var textStyleModel = itemModel.getModel('textStyle');\n    var itemIcon = itemModel.get('icon');\n    var tooltipModel = itemModel.getModel('tooltip');\n    var legendGlobalTooltipModel = tooltipModel.parentModel; // Use user given icon first\n\n    legendSymbolType = itemIcon || legendSymbolType;\n    itemGroup.add(createSymbol(legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor, true)); // Compose symbols\n    // PENDING\n\n    if (!itemIcon && symbolType // At least show one symbol, can't be all none\n    && (symbolType !== legendSymbolType || symbolType == 'none')) {\n      var size = itemHeight * 0.8;\n\n      if (symbolType === 'none') {\n        symbolType = 'circle';\n      } // Put symbol in the center\n\n\n      itemGroup.add(createSymbol(symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size, isSelected ? color : inactiveColor));\n    }\n\n    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n    var textAlign = itemAlign;\n    var formatter = legendModel.get('formatter');\n    var content = name;\n\n    if (typeof formatter === 'string' && formatter) {\n      content = formatter.replace('{name}', name != null ? name : '');\n    } else if (typeof formatter === 'function') {\n      content = formatter(name);\n    }\n\n    itemGroup.add(new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: content,\n        x: textX,\n        y: itemHeight / 2,\n        textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n        textAlign: textAlign,\n        textVerticalAlign: 'middle'\n      })\n    })); // Add a invisible rect to increase the area of mouse hover\n\n    var hitRect = new graphic.Rect({\n      shape: itemGroup.getBoundingRect(),\n      invisible: true,\n      tooltip: tooltipModel.get('show') ? zrUtil.extend({\n        content: name,\n        // Defaul formatter\n        formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n          return name;\n        },\n        formatterParams: {\n          componentType: 'legend',\n          legendIndex: legendModel.componentIndex,\n          name: name,\n          $vars: ['name']\n        }\n      }, tooltipModel.option) : null\n    });\n    itemGroup.add(hitRect);\n    itemGroup.eachChild(function (child) {\n      child.silent = true;\n    });\n    hitRect.silent = !selectMode;\n    this.getContentGroup().add(itemGroup);\n    graphic.setHoverStyle(itemGroup);\n    itemGroup.__legendDataIndex = dataIndex;\n    return itemGroup;\n  },\n\n  /**\n   * @protected\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup(); // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\n    var contentRect = contentGroup.getBoundingRect();\n    contentGroup.attr('position', [-contentRect.x, -contentRect.y]);\n    return this.group.getBoundingRect();\n  }\n});\n\nfunction dispatchSelectAction(name, api) {\n  api.dispatchAction({\n    type: 'legendToggleSelect',\n    name: name\n  });\n}\n\nfunction dispatchHighlightAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'highlight',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nfunction dispatchDownplayAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'downplay',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1115:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(1032);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(1027);\n\nvar Eventful = __webpack_require__(1050);\n\nvar graphic = __webpack_require__(1029);\n\nvar interactionMutex = __webpack_require__(1132);\n\nvar DataDiffer = __webpack_require__(1062);\n\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar map = zrUtil.map;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathPow = Math.pow;\nvar COVER_Z = 10000;\nvar UNSELECT_THRESHOLD = 6;\nvar MIN_RESIZE_LINE_WIDTH = 6;\nvar MUTEX_RESOURCE_KEY = 'globalPan';\nvar DIRECTION_MAP = {\n  w: [0, 0],\n  e: [0, 1],\n  n: [1, 0],\n  s: [1, 1]\n};\nvar CURSOR_MAP = {\n  w: 'ew',\n  e: 'ew',\n  n: 'ns',\n  s: 'ns',\n  ne: 'nesw',\n  sw: 'nesw',\n  nw: 'nwse',\n  se: 'nwse'\n};\nvar DEFAULT_BRUSH_OPT = {\n  brushStyle: {\n    lineWidth: 2,\n    stroke: 'rgba(0,0,0,0.3)',\n    fill: 'rgba(0,0,0,0.1)'\n  },\n  transformable: true,\n  brushMode: 'single',\n  removeOnClick: false\n};\nvar baseUID = 0;\n/**\n * @alias module:echarts/component/helper/BrushController\n * @constructor\n * @mixin {module:zrender/mixin/Eventful}\n * @event module:echarts/component/helper/BrushController#brush\n *        params:\n *            areas: Array.<Array>, coord relates to container group,\n *                                    If no container specified, to global.\n *            opt {\n *                isEnd: boolean,\n *                removeOnClick: boolean\n *            }\n *\n * @param {module:zrender/zrender~ZRender} zr\n */\n\nfunction BrushController(zr) {\n  Eventful.call(this);\n  /**\n   * @type {module:zrender/zrender~ZRender}\n   * @private\n   */\n\n  this._zr = zr;\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n\n  this.group = new graphic.Group();\n  /**\n   * Only for drawing (after enabledBrush).\n   *     'line', 'rect', 'polygon' or false\n   *     If passing false/null/undefined, disable brush.\n   *     If passing 'auto', determined by panel.defaultBrushType\n   * @private\n   * @type {string}\n   */\n\n  this._brushType;\n  /**\n   * Only for drawing (after enabledBrush).\n   *\n   * @private\n   * @type {Object}\n   */\n\n  this._brushOption;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._panels;\n  /**\n   * @private\n   * @type {Array.<nubmer>}\n   */\n\n  this._track = [];\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._dragging;\n  /**\n   * @private\n   * @type {Array}\n   */\n\n  this._covers = [];\n  /**\n   * @private\n   * @type {moudule:zrender/container/Group}\n   */\n\n  this._creatingCover;\n  /**\n   * `true` means global panel\n   * @private\n   * @type {module:zrender/container/Group|boolean}\n   */\n\n  this._creatingPanel;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._enableGlobalPan;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this._uid = 'brushController_' + baseUID++;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._handlers = {};\n  each(mouseHandlers, function (handler, eventName) {\n    this._handlers[eventName] = zrUtil.bind(handler, this);\n  }, this);\n}\n\nBrushController.prototype = {\n  constructor: BrushController,\n\n  /**\n   * If set to null/undefined/false, select disabled.\n   * @param {Object} brushOption\n   * @param {string|boolean} brushOption.brushType 'line', 'rect', 'polygon' or false\n   *                          If passing false/null/undefined, disable brush.\n   *                          If passing 'auto', determined by panel.defaultBrushType.\n   *                              ('auto' can not be used in global panel)\n   * @param {number} [brushOption.brushMode='single'] 'single' or 'multiple'\n   * @param {boolean} [brushOption.transformable=true]\n   * @param {boolean} [brushOption.removeOnClick=false]\n   * @param {Object} [brushOption.brushStyle]\n   * @param {number} [brushOption.brushStyle.width]\n   * @param {number} [brushOption.brushStyle.lineWidth]\n   * @param {string} [brushOption.brushStyle.stroke]\n   * @param {string} [brushOption.brushStyle.fill]\n   * @param {number} [brushOption.z]\n   */\n  enableBrush: function (brushOption) {\n    this._brushType && doDisableBrush(this);\n    brushOption.brushType && doEnableBrush(this, brushOption);\n    return this;\n  },\n\n  /**\n   * @param {Array.<Object>} panelOpts If not pass, it is global brush.\n   *        Each items: {\n   *            panelId, // mandatory.\n   *            clipPath, // mandatory. function.\n   *            isTargetByCursor, // mandatory. function.\n   *            defaultBrushType, // optional, only used when brushType is 'auto'.\n   *            getLinearBrushOtherExtent, // optional. function.\n   *        }\n   */\n  setPanels: function (panelOpts) {\n    if (panelOpts && panelOpts.length) {\n      var panels = this._panels = {};\n      zrUtil.each(panelOpts, function (panelOpts) {\n        panels[panelOpts.panelId] = zrUtil.clone(panelOpts);\n      });\n    } else {\n      this._panels = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param {Object} [opt]\n   * @return {boolean} [opt.enableGlobalPan=false]\n   */\n  mount: function (opt) {\n    opt = opt || {};\n    this._enableGlobalPan = opt.enableGlobalPan;\n    var thisGroup = this.group;\n\n    this._zr.add(thisGroup);\n\n    thisGroup.attr({\n      position: opt.position || [0, 0],\n      rotation: opt.rotation || 0,\n      scale: opt.scale || [1, 1]\n    });\n    this._transform = thisGroup.getLocalTransform();\n    return this;\n  },\n  eachCover: function (cb, context) {\n    each(this._covers, cb, context);\n  },\n\n  /**\n   * Update covers.\n   * @param {Array.<Object>} brushOptionList Like:\n   *        [\n   *            {id: 'xx', brushType: 'line', range: [23, 44], brushStyle, transformable},\n   *            {id: 'yy', brushType: 'rect', range: [[23, 44], [23, 54]]},\n   *            ...\n   *        ]\n   *        `brushType` is required in each cover info. (can not be 'auto')\n   *        `id` is not mandatory.\n   *        `brushStyle`, `transformable` is not mandatory, use DEFAULT_BRUSH_OPT by default.\n   *        If brushOptionList is null/undefined, all covers removed.\n   */\n  updateCovers: function (brushOptionList) {\n    brushOptionList = zrUtil.map(brushOptionList, function (brushOption) {\n      return zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n    });\n    var tmpIdPrefix = '\\0-brush-index-';\n    var oldCovers = this._covers;\n    var newCovers = this._covers = [];\n    var controller = this;\n    var creatingCover = this._creatingCover;\n    new DataDiffer(oldCovers, brushOptionList, oldGetKey, getKey).add(addOrUpdate).update(addOrUpdate).remove(remove).execute();\n    return this;\n\n    function getKey(brushOption, index) {\n      return (brushOption.id != null ? brushOption.id : tmpIdPrefix + index) + '-' + brushOption.brushType;\n    }\n\n    function oldGetKey(cover, index) {\n      return getKey(cover.__brushOption, index);\n    }\n\n    function addOrUpdate(newIndex, oldIndex) {\n      var newBrushOption = brushOptionList[newIndex]; // Consider setOption in event listener of brushSelect,\n      // where updating cover when creating should be forbiden.\n\n      if (oldIndex != null && oldCovers[oldIndex] === creatingCover) {\n        newCovers[newIndex] = oldCovers[oldIndex];\n      } else {\n        var cover = newCovers[newIndex] = oldIndex != null ? (oldCovers[oldIndex].__brushOption = newBrushOption, oldCovers[oldIndex]) : endCreating(controller, createCover(controller, newBrushOption));\n        updateCoverAfterCreation(controller, cover);\n      }\n    }\n\n    function remove(oldIndex) {\n      if (oldCovers[oldIndex] !== creatingCover) {\n        controller.group.remove(oldCovers[oldIndex]);\n      }\n    }\n  },\n  unmount: function () {\n    this.enableBrush(false); // container may 'removeAll' outside.\n\n    clearCovers(this);\n\n    this._zr.remove(this.group);\n\n    return this;\n  },\n  dispose: function () {\n    this.unmount();\n    this.off();\n  }\n};\nzrUtil.mixin(BrushController, Eventful);\n\nfunction doEnableBrush(controller, brushOption) {\n  var zr = controller._zr; // Consider roam, which takes globalPan too.\n\n  if (!controller._enableGlobalPan) {\n    interactionMutex.take(zr, MUTEX_RESOURCE_KEY, controller._uid);\n  }\n\n  each(controller._handlers, function (handler, eventName) {\n    zr.on(eventName, handler);\n  });\n  controller._brushType = brushOption.brushType;\n  controller._brushOption = zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n}\n\nfunction doDisableBrush(controller) {\n  var zr = controller._zr;\n  interactionMutex.release(zr, MUTEX_RESOURCE_KEY, controller._uid);\n  each(controller._handlers, function (handler, eventName) {\n    zr.off(eventName, handler);\n  });\n  controller._brushType = controller._brushOption = null;\n}\n\nfunction createCover(controller, brushOption) {\n  var cover = coverRenderers[brushOption.brushType].createCover(controller, brushOption);\n  cover.__brushOption = brushOption;\n  updateZ(cover, brushOption);\n  controller.group.add(cover);\n  return cover;\n}\n\nfunction endCreating(controller, creatingCover) {\n  var coverRenderer = getCoverRenderer(creatingCover);\n\n  if (coverRenderer.endCreating) {\n    coverRenderer.endCreating(controller, creatingCover);\n    updateZ(creatingCover, creatingCover.__brushOption);\n  }\n\n  return creatingCover;\n}\n\nfunction updateCoverShape(controller, cover) {\n  var brushOption = cover.__brushOption;\n  getCoverRenderer(cover).updateCoverShape(controller, cover, brushOption.range, brushOption);\n}\n\nfunction updateZ(cover, brushOption) {\n  var z = brushOption.z;\n  z == null && (z = COVER_Z);\n  cover.traverse(function (el) {\n    el.z = z;\n    el.z2 = z; // Consider in given container.\n  });\n}\n\nfunction updateCoverAfterCreation(controller, cover) {\n  getCoverRenderer(cover).updateCommon(controller, cover);\n  updateCoverShape(controller, cover);\n}\n\nfunction getCoverRenderer(cover) {\n  return coverRenderers[cover.__brushOption.brushType];\n} // return target panel or `true` (means global panel)\n\n\nfunction getPanelByPoint(controller, e, localCursorPoint) {\n  var panels = controller._panels;\n\n  if (!panels) {\n    return true; // Global panel\n  }\n\n  var panel;\n  var transform = controller._transform;\n  each(panels, function (pn) {\n    pn.isTargetByCursor(e, localCursorPoint, transform) && (panel = pn);\n  });\n  return panel;\n} // Return a panel or true\n\n\nfunction getPanelByCover(controller, cover) {\n  var panels = controller._panels;\n\n  if (!panels) {\n    return true; // Global panel\n  }\n\n  var panelId = cover.__brushOption.panelId; // User may give cover without coord sys info,\n  // which is then treated as global panel.\n\n  return panelId != null ? panels[panelId] : true;\n}\n\nfunction clearCovers(controller) {\n  var covers = controller._covers;\n  var originalLength = covers.length;\n  each(covers, function (cover) {\n    controller.group.remove(cover);\n  }, controller);\n  covers.length = 0;\n  return !!originalLength;\n}\n\nfunction trigger(controller, opt) {\n  var areas = map(controller._covers, function (cover) {\n    var brushOption = cover.__brushOption;\n    var range = zrUtil.clone(brushOption.range);\n    return {\n      brushType: brushOption.brushType,\n      panelId: brushOption.panelId,\n      range: range\n    };\n  });\n  controller.trigger('brush', areas, {\n    isEnd: !!opt.isEnd,\n    removeOnClick: !!opt.removeOnClick\n  });\n}\n\nfunction shouldShowCover(controller) {\n  var track = controller._track;\n\n  if (!track.length) {\n    return false;\n  }\n\n  var p2 = track[track.length - 1];\n  var p1 = track[0];\n  var dx = p2[0] - p1[0];\n  var dy = p2[1] - p1[1];\n  var dist = mathPow(dx * dx + dy * dy, 0.5);\n  return dist > UNSELECT_THRESHOLD;\n}\n\nfunction getTrackEnds(track) {\n  var tail = track.length - 1;\n  tail < 0 && (tail = 0);\n  return [track[0], track[tail]];\n}\n\nfunction createBaseRectCover(doDrift, controller, brushOption, edgeNames) {\n  var cover = new graphic.Group();\n  cover.add(new graphic.Rect({\n    name: 'main',\n    style: makeStyle(brushOption),\n    silent: true,\n    draggable: true,\n    cursor: 'move',\n    drift: curry(doDrift, controller, cover, 'nswe'),\n    ondragend: curry(trigger, controller, {\n      isEnd: true\n    })\n  }));\n  each(edgeNames, function (name) {\n    cover.add(new graphic.Rect({\n      name: name,\n      style: {\n        opacity: 0\n      },\n      draggable: true,\n      silent: true,\n      invisible: true,\n      drift: curry(doDrift, controller, cover, name),\n      ondragend: curry(trigger, controller, {\n        isEnd: true\n      })\n    }));\n  });\n  return cover;\n}\n\nfunction updateBaseRect(controller, cover, localRange, brushOption) {\n  var lineWidth = brushOption.brushStyle.lineWidth || 0;\n  var handleSize = mathMax(lineWidth, MIN_RESIZE_LINE_WIDTH);\n  var x = localRange[0][0];\n  var y = localRange[1][0];\n  var xa = x - lineWidth / 2;\n  var ya = y - lineWidth / 2;\n  var x2 = localRange[0][1];\n  var y2 = localRange[1][1];\n  var x2a = x2 - handleSize + lineWidth / 2;\n  var y2a = y2 - handleSize + lineWidth / 2;\n  var width = x2 - x;\n  var height = y2 - y;\n  var widtha = width + lineWidth;\n  var heighta = height + lineWidth;\n  updateRectShape(controller, cover, 'main', x, y, width, height);\n\n  if (brushOption.transformable) {\n    updateRectShape(controller, cover, 'w', xa, ya, handleSize, heighta);\n    updateRectShape(controller, cover, 'e', x2a, ya, handleSize, heighta);\n    updateRectShape(controller, cover, 'n', xa, ya, widtha, handleSize);\n    updateRectShape(controller, cover, 's', xa, y2a, widtha, handleSize);\n    updateRectShape(controller, cover, 'nw', xa, ya, handleSize, handleSize);\n    updateRectShape(controller, cover, 'ne', x2a, ya, handleSize, handleSize);\n    updateRectShape(controller, cover, 'sw', xa, y2a, handleSize, handleSize);\n    updateRectShape(controller, cover, 'se', x2a, y2a, handleSize, handleSize);\n  }\n}\n\nfunction updateCommon(controller, cover) {\n  var brushOption = cover.__brushOption;\n  var transformable = brushOption.transformable;\n  var mainEl = cover.childAt(0);\n  mainEl.useStyle(makeStyle(brushOption));\n  mainEl.attr({\n    silent: !transformable,\n    cursor: transformable ? 'move' : 'default'\n  });\n  each(['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw'], function (name) {\n    var el = cover.childOfName(name);\n    var globalDir = getGlobalDirection(controller, name);\n    el && el.attr({\n      silent: !transformable,\n      invisible: !transformable,\n      cursor: transformable ? CURSOR_MAP[globalDir] + '-resize' : null\n    });\n  });\n}\n\nfunction updateRectShape(controller, cover, name, x, y, w, h) {\n  var el = cover.childOfName(name);\n  el && el.setShape(pointsToRect(clipByPanel(controller, cover, [[x, y], [x + w, y + h]])));\n}\n\nfunction makeStyle(brushOption) {\n  return zrUtil.defaults({\n    strokeNoScale: true\n  }, brushOption.brushStyle);\n}\n\nfunction formatRectRange(x, y, x2, y2) {\n  var min = [mathMin(x, x2), mathMin(y, y2)];\n  var max = [mathMax(x, x2), mathMax(y, y2)];\n  return [[min[0], max[0]], // x range\n  [min[1], max[1]] // y range\n  ];\n}\n\nfunction getTransform(controller) {\n  return graphic.getTransform(controller.group);\n}\n\nfunction getGlobalDirection(controller, localDirection) {\n  if (localDirection.length > 1) {\n    localDirection = localDirection.split('');\n    var globalDir = [getGlobalDirection(controller, localDirection[0]), getGlobalDirection(controller, localDirection[1])];\n    (globalDir[0] === 'e' || globalDir[0] === 'w') && globalDir.reverse();\n    return globalDir.join('');\n  } else {\n    var map = {\n      w: 'left',\n      e: 'right',\n      n: 'top',\n      s: 'bottom'\n    };\n    var inverseMap = {\n      left: 'w',\n      right: 'e',\n      top: 'n',\n      bottom: 's'\n    };\n    var globalDir = graphic.transformDirection(map[localDirection], getTransform(controller));\n    return inverseMap[globalDir];\n  }\n}\n\nfunction driftRect(toRectRange, fromRectRange, controller, cover, name, dx, dy, e) {\n  var brushOption = cover.__brushOption;\n  var rectRange = toRectRange(brushOption.range);\n  var localDelta = toLocalDelta(controller, dx, dy);\n  each(name.split(''), function (namePart) {\n    var ind = DIRECTION_MAP[namePart];\n    rectRange[ind[0]][ind[1]] += localDelta[ind[0]];\n  });\n  brushOption.range = fromRectRange(formatRectRange(rectRange[0][0], rectRange[1][0], rectRange[0][1], rectRange[1][1]));\n  updateCoverAfterCreation(controller, cover);\n  trigger(controller, {\n    isEnd: false\n  });\n}\n\nfunction driftPolygon(controller, cover, dx, dy, e) {\n  var range = cover.__brushOption.range;\n  var localDelta = toLocalDelta(controller, dx, dy);\n  each(range, function (point) {\n    point[0] += localDelta[0];\n    point[1] += localDelta[1];\n  });\n  updateCoverAfterCreation(controller, cover);\n  trigger(controller, {\n    isEnd: false\n  });\n}\n\nfunction toLocalDelta(controller, dx, dy) {\n  var thisGroup = controller.group;\n  var localD = thisGroup.transformCoordToLocal(dx, dy);\n  var localZero = thisGroup.transformCoordToLocal(0, 0);\n  return [localD[0] - localZero[0], localD[1] - localZero[1]];\n}\n\nfunction clipByPanel(controller, cover, data) {\n  var panel = getPanelByCover(controller, cover);\n  return panel && panel !== true ? panel.clipPath(data, controller._transform) : zrUtil.clone(data);\n}\n\nfunction pointsToRect(points) {\n  var xmin = mathMin(points[0][0], points[1][0]);\n  var ymin = mathMin(points[0][1], points[1][1]);\n  var xmax = mathMax(points[0][0], points[1][0]);\n  var ymax = mathMax(points[0][1], points[1][1]);\n  return {\n    x: xmin,\n    y: ymin,\n    width: xmax - xmin,\n    height: ymax - ymin\n  };\n}\n\nfunction resetCursor(controller, e, localCursorPoint) {\n  // Check active\n  if (!controller._brushType) {\n    return;\n  }\n\n  var zr = controller._zr;\n  var covers = controller._covers;\n  var currPanel = getPanelByPoint(controller, e, localCursorPoint); // Check whether in covers.\n\n  if (!controller._dragging) {\n    for (var i = 0; i < covers.length; i++) {\n      var brushOption = covers[i].__brushOption;\n\n      if (currPanel && (currPanel === true || brushOption.panelId === currPanel.panelId) && coverRenderers[brushOption.brushType].contain(covers[i], localCursorPoint[0], localCursorPoint[1])) {\n        // Use cursor style set on cover.\n        return;\n      }\n    }\n  }\n\n  currPanel && zr.setCursorStyle('crosshair');\n}\n\nfunction preventDefault(e) {\n  var rawE = e.event;\n  rawE.preventDefault && rawE.preventDefault();\n}\n\nfunction mainShapeContain(cover, x, y) {\n  return cover.childOfName('main').contain(x, y);\n}\n\nfunction updateCoverByMouse(controller, e, localCursorPoint, isEnd) {\n  var creatingCover = controller._creatingCover;\n  var panel = controller._creatingPanel;\n  var thisBrushOption = controller._brushOption;\n  var eventParams;\n\n  controller._track.push(localCursorPoint.slice());\n\n  if (shouldShowCover(controller) || creatingCover) {\n    if (panel && !creatingCover) {\n      thisBrushOption.brushMode === 'single' && clearCovers(controller);\n      var brushOption = zrUtil.clone(thisBrushOption);\n      brushOption.brushType = determineBrushType(brushOption.brushType, panel);\n      brushOption.panelId = panel === true ? null : panel.panelId;\n      creatingCover = controller._creatingCover = createCover(controller, brushOption);\n\n      controller._covers.push(creatingCover);\n    }\n\n    if (creatingCover) {\n      var coverRenderer = coverRenderers[determineBrushType(controller._brushType, panel)];\n      var coverBrushOption = creatingCover.__brushOption;\n      coverBrushOption.range = coverRenderer.getCreatingRange(clipByPanel(controller, creatingCover, controller._track));\n\n      if (isEnd) {\n        endCreating(controller, creatingCover);\n        coverRenderer.updateCommon(controller, creatingCover);\n      }\n\n      updateCoverShape(controller, creatingCover);\n      eventParams = {\n        isEnd: isEnd\n      };\n    }\n  } else if (isEnd && thisBrushOption.brushMode === 'single' && thisBrushOption.removeOnClick) {\n    // Help user to remove covers easily, only by a tiny drag, in 'single' mode.\n    // But a single click do not clear covers, because user may have casual\n    // clicks (for example, click on other component and do not expect covers\n    // disappear).\n    // Only some cover removed, trigger action, but not every click trigger action.\n    if (getPanelByPoint(controller, e, localCursorPoint) && clearCovers(controller)) {\n      eventParams = {\n        isEnd: isEnd,\n        removeOnClick: true\n      };\n    }\n  }\n\n  return eventParams;\n}\n\nfunction determineBrushType(brushType, panel) {\n  if (brushType === 'auto') {\n    return panel.defaultBrushType;\n  }\n\n  return brushType;\n}\n\nvar mouseHandlers = {\n  mousedown: function (e) {\n    if (this._dragging) {\n      // In case some browser do not support globalOut,\n      // and release mose out side the browser.\n      handleDragEnd.call(this, e);\n    } else if (!e.target || !e.target.draggable) {\n      preventDefault(e);\n      var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n      this._creatingCover = null;\n      var panel = this._creatingPanel = getPanelByPoint(this, e, localCursorPoint);\n\n      if (panel) {\n        this._dragging = true;\n        this._track = [localCursorPoint.slice()];\n      }\n    }\n  },\n  mousemove: function (e) {\n    var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n    resetCursor(this, e, localCursorPoint);\n\n    if (this._dragging) {\n      preventDefault(e);\n      var eventParams = updateCoverByMouse(this, e, localCursorPoint, false);\n      eventParams && trigger(this, eventParams);\n    }\n  },\n  mouseup: handleDragEnd //,\n  // FIXME\n  // in tooltip, globalout should not be triggered.\n  // globalout: handleDragEnd\n\n};\n\nfunction handleDragEnd(e) {\n  if (this._dragging) {\n    preventDefault(e);\n    var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n    var eventParams = updateCoverByMouse(this, e, localCursorPoint, true);\n    this._dragging = false;\n    this._track = [];\n    this._creatingCover = null; // trigger event shoule be at final, after procedure will be nested.\n\n    eventParams && trigger(this, eventParams);\n  }\n}\n/**\n * key: brushType\n * @type {Object}\n */\n\n\nvar coverRenderers = {\n  lineX: getLineRenderer(0),\n  lineY: getLineRenderer(1),\n  rect: {\n    createCover: function (controller, brushOption) {\n      return createBaseRectCover(curry(driftRect, function (range) {\n        return range;\n      }, function (range) {\n        return range;\n      }), controller, brushOption, ['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw']);\n    },\n    getCreatingRange: function (localTrack) {\n      var ends = getTrackEnds(localTrack);\n      return formatRectRange(ends[1][0], ends[1][1], ends[0][0], ends[0][1]);\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      updateBaseRect(controller, cover, localRange, brushOption);\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  },\n  polygon: {\n    createCover: function (controller, brushOption) {\n      var cover = new graphic.Group(); // Do not use graphic.Polygon because graphic.Polyline do not close the\n      // border of the shape when drawing, which is a better experience for user.\n\n      cover.add(new graphic.Polyline({\n        name: 'main',\n        style: makeStyle(brushOption),\n        silent: true\n      }));\n      return cover;\n    },\n    getCreatingRange: function (localTrack) {\n      return localTrack;\n    },\n    endCreating: function (controller, cover) {\n      cover.remove(cover.childAt(0)); // Use graphic.Polygon close the shape.\n\n      cover.add(new graphic.Polygon({\n        name: 'main',\n        draggable: true,\n        drift: curry(driftPolygon, controller, cover),\n        ondragend: curry(trigger, controller, {\n          isEnd: true\n        })\n      }));\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      cover.childAt(0).setShape({\n        points: clipByPanel(controller, cover, localRange)\n      });\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  }\n};\n\nfunction getLineRenderer(xyIndex) {\n  return {\n    createCover: function (controller, brushOption) {\n      return createBaseRectCover(curry(driftRect, function (range) {\n        var rectRange = [range, [0, 100]];\n        xyIndex && rectRange.reverse();\n        return rectRange;\n      }, function (rectRange) {\n        return rectRange[xyIndex];\n      }), controller, brushOption, [['w', 'e'], ['n', 's']][xyIndex]);\n    },\n    getCreatingRange: function (localTrack) {\n      var ends = getTrackEnds(localTrack);\n      var min = mathMin(ends[0][xyIndex], ends[1][xyIndex]);\n      var max = mathMax(ends[0][xyIndex], ends[1][xyIndex]);\n      return [min, max];\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      var otherExtent; // If brushWidth not specified, fit the panel.\n\n      var panel = getPanelByCover(controller, cover);\n\n      if (panel !== true && panel.getLinearBrushOtherExtent) {\n        otherExtent = panel.getLinearBrushOtherExtent(xyIndex, controller._transform);\n      } else {\n        var zr = controller._zr;\n        otherExtent = [0, [zr.getWidth(), zr.getHeight()][1 - xyIndex]];\n      }\n\n      var rectRange = [localRange, otherExtent];\n      xyIndex && rectRange.reverse();\n      updateBaseRect(controller, cover, rectRange, brushOption);\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  };\n}\n\nvar _default = BrushController;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1116:\n/***/ (function(module, exports) {\n\nvar IRRELEVANT_EXCLUDES = {\n  'axisPointer': 1,\n  'tooltip': 1,\n  'brush': 1\n};\n/**\n * Avoid that: mouse click on a elements that is over geo or graph,\n * but roam is triggered.\n */\n\nfunction onIrrelevantElement(e, api, targetCoordSysModel) {\n  var model = api.getComponentByElement(e.topTarget); // If model is axisModel, it works only if it is injected with coordinateSystem.\n\n  var coordSys = model && model.coordinateSystem;\n  return model && model !== targetCoordSysModel && !IRRELEVANT_EXCLUDES[model.mainType] && coordSys && coordSys.model !== targetCoordSysModel;\n}\n\nexports.onIrrelevantElement = onIrrelevantElement;\n\n/***/ }),\n\n/***/ 1120:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar textHelper = __webpack_require__(1082);\n\nvar BoundingRect = __webpack_require__(1036);\n\n/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\nvar tmpRect = new BoundingRect();\n\nvar RectText = function () {};\n\nRectText.prototype = {\n  constructor: RectText,\n\n  /**\n   * Draw text in a rect with specified position.\n   * @param  {CanvasRenderingContext2D} ctx\n   * @param  {Object} rect Displayable rect\n   */\n  drawRectText: function (ctx, rect) {\n    var style = this.style;\n    rect = style.textRect || rect; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n    var text = style.text; // Convert to string\n\n    text != null && (text += '');\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    } // FIXME\n\n\n    ctx.save(); // Transform rect to view space\n\n    var transform = this.transform;\n\n    if (!style.transformText) {\n      if (transform) {\n        tmpRect.copy(rect);\n        tmpRect.applyTransform(transform);\n        rect = tmpRect;\n      }\n    } else {\n      this.setTransform(ctx);\n    } // transformText and textRotation can not be used at the same time.\n\n\n    textHelper.renderText(this, ctx, text, style, rect);\n    ctx.restore();\n  }\n};\nvar _default = RectText;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1121:\n/***/ (function(module, exports) {\n\n/**\n * 线段包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  var _a = 0;\n  var _b = x0; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l || y < y0 - _l && y < y1 - _l || x > x0 + _l && x > x1 + _l || x < x0 - _l && x < x1 - _l) {\n    return false;\n  }\n\n  if (x0 !== x1) {\n    _a = (y0 - y1) / (x0 - x1);\n    _b = (x0 * y1 - x1 * y0) / (x0 - x1);\n  } else {\n    return Math.abs(x - x0) <= _l / 2;\n  }\n\n  var tmp = _a * x - y + _b;\n\n  var _s = tmp * tmp / (_a * _a + 1);\n\n  return _s <= _l / 2 * _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n/***/ }),\n\n/***/ 1122:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curve = __webpack_require__(1048);\n\nvar quadraticProjectPoint = _curve.quadraticProjectPoint;\n\n/**\n * 二次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l) {\n    return false;\n  }\n\n  var d = quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n/***/ }),\n\n/***/ 1123:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1027);\n\nvar Gradient = __webpack_require__(1068);\n\n/**\n * x, y, x2, y2 are all percent from 0 to 1\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @param {number} [x2=1]\n * @param {number} [y2=0]\n * @param {Array.<Object>} colorStops\n * @param {boolean} [globalCoord=false]\n */\nvar LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'linear', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0 : x;\n  this.y = y == null ? 0 : y;\n  this.x2 = x2 == null ? 1 : x2;\n  this.y2 = y2 == null ? 0 : y2; // Can be cloned\n\n  this.type = 'linear'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nLinearGradient.prototype = {\n  constructor: LinearGradient\n};\nzrUtil.inherits(LinearGradient, Gradient);\nvar _default = LinearGradient;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1124:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrender = __webpack_require__(1081);\n\nexports.zrender = zrender;\n\nvar matrix = __webpack_require__(1043);\n\nexports.matrix = matrix;\n\nvar vector = __webpack_require__(1033);\n\nexports.vector = vector;\n\nvar zrUtil = __webpack_require__(1027);\n\nvar colorTool = __webpack_require__(1051);\n\nexports.color = colorTool;\n\nvar graphic = __webpack_require__(1029);\n\nexports.graphic = graphic;\n\nvar numberUtil = __webpack_require__(1030);\n\nexports.number = numberUtil;\n\nvar formatUtil = __webpack_require__(1034);\n\nexports.format = formatUtil;\n\nvar _throttle = __webpack_require__(1057);\n\nvar throttle = _throttle.throttle;\nexports.throttle = _throttle.throttle;\n\nvar ecHelper = __webpack_require__(1181);\n\nexports.helper = ecHelper;\n\nvar _List = __webpack_require__(1044);\n\nexports.List = _List;\n\nvar _Model = __webpack_require__(1038);\n\nexports.Model = _Model;\n\nvar _Axis = __webpack_require__(1066);\n\nexports.Axis = _Axis;\n\nvar _env = __webpack_require__(1035);\n\nexports.env = _env;\n\nvar _parseGeoJson = __webpack_require__(1125);\n\nexports.parseGeoJson = _parseGeoJson;\n\n/**\n * Do not mount those modules on 'src/echarts' for better tree shaking.\n */\nvar ecUtil = {};\nzrUtil.each(['map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter', 'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction', 'extend', 'defaults', 'clone', 'merge'], function (name) {\n  ecUtil[name] = zrUtil[name];\n});\nexports.util = ecUtil;\n\n/***/ }),\n\n/***/ 1125:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1027);\n\nvar Region = __webpack_require__(1126);\n\n/**\n * Parse and decode geo json\n * @module echarts/coord/geo/parseGeoJson\n */\nfunction decode(json) {\n  if (!json.UTF8Encoding) {\n    return json;\n  }\n\n  var encodeScale = json.UTF8Scale;\n\n  if (encodeScale == null) {\n    encodeScale = 1024;\n  }\n\n  var features = json.features;\n\n  for (var f = 0; f < features.length; f++) {\n    var feature = features[f];\n    var geometry = feature.geometry;\n    var coordinates = geometry.coordinates;\n    var encodeOffsets = geometry.encodeOffsets;\n\n    for (var c = 0; c < coordinates.length; c++) {\n      var coordinate = coordinates[c];\n\n      if (geometry.type === 'Polygon') {\n        coordinates[c] = decodePolygon(coordinate, encodeOffsets[c], encodeScale);\n      } else if (geometry.type === 'MultiPolygon') {\n        for (var c2 = 0; c2 < coordinate.length; c2++) {\n          var polygon = coordinate[c2];\n          coordinate[c2] = decodePolygon(polygon, encodeOffsets[c][c2], encodeScale);\n        }\n      }\n    }\n  } // Has been decoded\n\n\n  json.UTF8Encoding = false;\n  return json;\n}\n\nfunction decodePolygon(coordinate, encodeOffsets, encodeScale) {\n  var result = [];\n  var prevX = encodeOffsets[0];\n  var prevY = encodeOffsets[1];\n\n  for (var i = 0; i < coordinate.length; i += 2) {\n    var x = coordinate.charCodeAt(i) - 64;\n    var y = coordinate.charCodeAt(i + 1) - 64; // ZigZag decoding\n\n    x = x >> 1 ^ -(x & 1);\n    y = y >> 1 ^ -(y & 1); // Delta deocding\n\n    x += prevX;\n    y += prevY;\n    prevX = x;\n    prevY = y; // Dequantize\n\n    result.push([x / encodeScale, y / encodeScale]);\n  }\n\n  return result;\n}\n/**\n * @alias module:echarts/coord/geo/parseGeoJson\n * @param {Object} geoJson\n * @return {module:zrender/container/Group}\n */\n\n\nfunction _default(geoJson) {\n  decode(geoJson);\n  return zrUtil.map(zrUtil.filter(geoJson.features, function (featureObj) {\n    // Output of mapshaper may have geometry null\n    return featureObj.geometry && featureObj.properties && featureObj.geometry.coordinates.length > 0;\n  }), function (featureObj) {\n    var properties = featureObj.properties;\n    var geo = featureObj.geometry;\n    var coordinates = geo.coordinates;\n    var geometries = [];\n\n    if (geo.type === 'Polygon') {\n      geometries.push({\n        type: 'polygon',\n        // According to the GeoJSON specification.\n        // First must be exterior, and the rest are all interior(holes).\n        exterior: coordinates[0],\n        interiors: coordinates.slice(1)\n      });\n    }\n\n    if (geo.type === 'MultiPolygon') {\n      zrUtil.each(coordinates, function (item) {\n        if (item[0]) {\n          geometries.push({\n            type: 'polygon',\n            exterior: item[0],\n            interiors: item.slice(1)\n          });\n        }\n      });\n    }\n\n    var region = new Region(properties.name, geometries, properties.cp);\n    region.properties = properties;\n    return region;\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1126:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar BoundingRect = __webpack_require__(1036);\n\nvar bbox = __webpack_require__(1086);\n\nvar vec2 = __webpack_require__(1033);\n\nvar polygonContain = __webpack_require__(1127);\n\n/**\n * @module echarts/coord/geo/Region\n */\n\n/**\n * @param {string} name\n * @param {Array} geometries\n * @param {Array.<number>} cp\n */\nfunction Region(name, geometries, cp) {\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  this.name = name;\n  /**\n   * @type {Array.<Array>}\n   * @readOnly\n   */\n\n  this.geometries = geometries;\n\n  if (!cp) {\n    var rect = this.getBoundingRect();\n    cp = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  } else {\n    cp = [cp[0], cp[1]];\n  }\n  /**\n   * @type {Array.<number>}\n   */\n\n\n  this.center = cp;\n}\n\nRegion.prototype = {\n  constructor: Region,\n  properties: null,\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    var rect = this._rect;\n\n    if (rect) {\n      return rect;\n    }\n\n    var MAX_NUMBER = Number.MAX_VALUE;\n    var min = [MAX_NUMBER, MAX_NUMBER];\n    var max = [-MAX_NUMBER, -MAX_NUMBER];\n    var min2 = [];\n    var max2 = [];\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      } // Doesn't consider hole\n\n\n      var exterior = geometries[i].exterior;\n      bbox.fromPoints(exterior, min2, max2);\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return this._rect = new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * @param {<Array.<number>} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var rect = this.getBoundingRect();\n    var geometries = this.geometries;\n\n    if (!rect.contain(coord[0], coord[1])) {\n      return false;\n    }\n\n    loopGeo: for (var i = 0, len = geometries.length; i < len; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      if (polygonContain.contain(exterior, coord[0], coord[1])) {\n        // Not in the region if point is in the hole.\n        for (var k = 0; k < (interiors ? interiors.length : 0); k++) {\n          if (polygonContain.contain(interiors[k])) {\n            continue loopGeo;\n          }\n        }\n\n        return true;\n      }\n    }\n\n    return false;\n  },\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var aspect = rect.width / rect.height;\n\n    if (!width) {\n      width = aspect * height;\n    } else if (!height) {\n      height = width / aspect;\n    }\n\n    var target = new BoundingRect(x, y, width, height);\n    var transform = rect.calculateTransform(target);\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      for (var p = 0; p < exterior.length; p++) {\n        vec2.applyTransform(exterior[p], exterior[p], transform);\n      }\n\n      for (var h = 0; h < (interiors ? interiors.length : 0); h++) {\n        for (var p = 0; p < interiors[h].length; p++) {\n          vec2.applyTransform(interiors[h][p], interiors[h][p], transform);\n        }\n      }\n    }\n\n    rect = this._rect;\n    rect.copy(target); // Update center\n\n    this.center = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n};\nvar _default = Region;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1127:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar windingLine = __webpack_require__(1100);\n\nvar EPSILON = 1e-8;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n}\n\nfunction contain(points, x, y) {\n  var w = 0;\n  var p = points[0];\n\n  if (!p) {\n    return false;\n  }\n\n  for (var i = 1; i < points.length; i++) {\n    var p2 = points[i];\n    w += windingLine(p[0], p[1], p2[0], p2[1], x, y);\n    p = p2;\n  } // Close polygon\n\n\n  var p0 = points[0];\n\n  if (!isAroundEqual(p[0], p0[0]) || !isAroundEqual(p[1], p0[1])) {\n    w += windingLine(p[0], p[1], p0[0], p0[1], x, y);\n  }\n\n  return w !== 0;\n}\n\nexports.contain = contain;\n\n/***/ }),\n\n/***/ 1128:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1028);\n\n__webpack_require__(1083);\n\n__webpack_require__(1188);\n\n__webpack_require__(1189);\n\n// FIXME Better way to pack data in graphic element\n\n/**\n * @action\n * @property {string} type\n * @property {number} seriesIndex\n * @property {number} dataIndex\n * @property {number} [x]\n * @property {number} [y]\n */\necharts.registerAction({\n  type: 'showTip',\n  event: 'showTip',\n  update: 'tooltip:manuallyShowTip'\n}, // noop\nfunction () {});\necharts.registerAction({\n  type: 'hideTip',\n  event: 'hideTip',\n  update: 'tooltip:manuallyHideTip'\n}, // noop\nfunction () {});\n\n/***/ }),\n\n/***/ 1129:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1028);\n\n__webpack_require__(1113);\n\n__webpack_require__(1191);\n\n__webpack_require__(1114);\n\nvar legendFilter = __webpack_require__(1192);\n\nvar Component = __webpack_require__(1040);\n\n// Do not contain scrollable legend, for sake of file size.\n// Series Filter\necharts.registerProcessor(legendFilter);\nComponent.registerSubTypeDefaulter('legend', function () {\n  // Default 'plain' when no type specified.\n  return 'plain';\n});\n\n/***/ }),\n\n/***/ 1130:\n/***/ (function(module, exports) {\n\nfunction _default(seriesType, ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (!legendModels || !legendModels.length) {\n    return;\n  }\n\n  ecModel.eachSeriesByType(seriesType, function (series) {\n    var data = series.getData();\n    data.filterSelf(function (idx) {\n      var name = data.getName(idx); // If in any legend component the status is not selected.\n\n      for (var i = 0; i < legendModels.length; i++) {\n        if (!legendModels[i].isSelected(name)) {\n          return false;\n        }\n      }\n\n      return true;\n    }, this);\n  }, this);\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1131:\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(1195);\n\n__webpack_require__(1196);\n\n__webpack_require__(1197);\n\n__webpack_require__(1198);\n\n__webpack_require__(1199);\n\n__webpack_require__(1200);\n\n__webpack_require__(1205);\n\n/***/ }),\n\n/***/ 1132:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1028);\n\nvar ATTR = '\\0_ec_interaction_mutex';\n\nfunction take(zr, resourceKey, userKey) {\n  var store = getStore(zr);\n  store[resourceKey] = userKey;\n}\n\nfunction release(zr, resourceKey, userKey) {\n  var store = getStore(zr);\n  var uKey = store[resourceKey];\n\n  if (uKey === userKey) {\n    store[resourceKey] = null;\n  }\n}\n\nfunction isTaken(zr, resourceKey) {\n  return !!getStore(zr)[resourceKey];\n}\n\nfunction getStore(zr) {\n  return zr[ATTR] || (zr[ATTR] = {});\n}\n/**\n * payload: {\n *     type: 'takeGlobalCursor',\n *     key: 'dataZoomSelect', or 'brush', or ...,\n *         If no userKey, release global cursor.\n * }\n */\n\n\necharts.registerAction({\n  type: 'takeGlobalCursor',\n  event: 'globalCursorTaken',\n  update: 'update'\n}, function () {});\nexports.take = take;\nexports.release = release;\nexports.isTaken = isTaken;\n\n/***/ }),\n\n/***/ 1133:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(1032);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(1027);\n\nvar graphic = __webpack_require__(1029);\n\nvar modelUtil = __webpack_require__(1031);\n\nvar brushHelper = __webpack_require__(1134);\n\nvar each = zrUtil.each;\nvar indexOf = zrUtil.indexOf;\nvar curry = zrUtil.curry;\nvar COORD_CONVERTS = ['dataToPoint', 'pointToData']; // FIXME\n// how to genarialize to more coordinate systems.\n\nvar INCLUDE_FINDER_MAIN_TYPES = ['grid', 'xAxis', 'yAxis', 'geo', 'graph', 'polar', 'radiusAxis', 'angleAxis', 'bmap'];\n/**\n * [option in constructor]:\n * {\n *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n * }\n *\n *\n * [targetInfo]:\n *\n * There can be multiple axes in a single targetInfo. Consider the case\n * of `grid` component, a targetInfo represents a grid which contains one or more\n * cartesian and one or more axes. And consider the case of parallel system,\n * which has multiple axes in a coordinate system.\n * Can be {\n *     panelId: ...,\n *     coordSys: <a representitive cartesian in grid (first cartesian by default)>,\n *     coordSyses: all cartesians.\n *     gridModel: <grid component>\n *     xAxes: correspond to coordSyses on index\n *     yAxes: correspond to coordSyses on index\n * }\n * or {\n *     panelId: ...,\n *     coordSys: <geo coord sys>\n *     coordSyses: [<geo coord sys>]\n *     geoModel: <geo component>\n * }\n *\n *\n * [panelOpt]:\n *\n * Make from targetInfo. Input to BrushController.\n * {\n *     panelId: ...,\n *     rect: ...\n * }\n *\n *\n * [area]:\n *\n * Generated by BrushController or user input.\n * {\n *     panelId: Used to locate coordInfo directly. If user inpput, no panelId.\n *     brushType: determine how to convert to/from coord('rect' or 'polygon' or 'lineX/Y').\n *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n *     range: pixel range.\n *     coordRange: representitive coord range (the first one of coordRanges).\n *     coordRanges: <Array> coord ranges, used in multiple cartesian in one grid.\n * }\n */\n\n/**\n * @param {Object} option contains Index/Id/Name of xAxis/yAxis/geo/grid\n *        Each can be {number|Array.<number>}. like: {xAxisIndex: [3, 4]}\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} [opt]\n * @param {Array.<string>} [opt.include] include coordinate system types.\n */\n\nfunction BrushTargetManager(option, ecModel, opt) {\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n  var targetInfoList = this._targetInfoList = [];\n  var info = {};\n  var foundCpts = parseFinder(ecModel, option);\n  each(targetInfoBuilders, function (builder, type) {\n    if (!opt || !opt.include || indexOf(opt.include, type) >= 0) {\n      builder(foundCpts, targetInfoList, info);\n    }\n  });\n}\n\nvar proto = BrushTargetManager.prototype;\n\nproto.setOutputRanges = function (areas, ecModel) {\n  this.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n    (area.coordRanges || (area.coordRanges = [])).push(coordRange); // area.coordRange is the first of area.coordRanges\n\n    if (!area.coordRange) {\n      area.coordRange = coordRange; // In 'category' axis, coord to pixel is not reversible, so we can not\n      // rebuild range by coordRange accrately, which may bring trouble when\n      // brushing only one item. So we use __rangeOffset to rebuilding range\n      // by coordRange. And this it only used in brush component so it is no\n      // need to be adapted to coordRanges.\n\n      var result = coordConvert[area.brushType](0, coordSys, coordRange);\n      area.__rangeOffset = {\n        offset: diffProcessor[area.brushType](result.values, area.range, [1, 1]),\n        xyMinMax: result.xyMinMax\n      };\n    }\n  });\n};\n\nproto.matchOutputRanges = function (areas, ecModel, cb) {\n  each(areas, function (area) {\n    var targetInfo = this.findTargetInfo(area, ecModel);\n\n    if (targetInfo && targetInfo !== true) {\n      zrUtil.each(targetInfo.coordSyses, function (coordSys) {\n        var result = coordConvert[area.brushType](1, coordSys, area.range);\n        cb(area, result.values, coordSys, ecModel);\n      });\n    }\n  }, this);\n};\n\nproto.setInputRanges = function (areas, ecModel) {\n  each(areas, function (area) {\n    var targetInfo = this.findTargetInfo(area, ecModel);\n    area.range = area.range || []; // convert coordRange to global range and set panelId.\n\n    if (targetInfo && targetInfo !== true) {\n      area.panelId = targetInfo.panelId; // (1) area.range shoule always be calculate from coordRange but does\n      // not keep its original value, for the sake of the dataZoom scenario,\n      // where area.coordRange remains unchanged but area.range may be changed.\n      // (2) Only support converting one coordRange to pixel range in brush\n      // component. So do not consider `coordRanges`.\n      // (3) About __rangeOffset, see comment above.\n\n      var result = coordConvert[area.brushType](0, targetInfo.coordSys, area.coordRange);\n      var rangeOffset = area.__rangeOffset;\n      area.range = rangeOffset ? diffProcessor[area.brushType](result.values, rangeOffset.offset, getScales(result.xyMinMax, rangeOffset.xyMinMax)) : result.values;\n    }\n  }, this);\n};\n\nproto.makePanelOpts = function (api, getDefaultBrushType) {\n  return zrUtil.map(this._targetInfoList, function (targetInfo) {\n    var rect = targetInfo.getPanelRect();\n    return {\n      panelId: targetInfo.panelId,\n      defaultBrushType: getDefaultBrushType && getDefaultBrushType(targetInfo),\n      clipPath: brushHelper.makeRectPanelClipPath(rect),\n      isTargetByCursor: brushHelper.makeRectIsTargetByCursor(rect, api, targetInfo.coordSysModel),\n      getLinearBrushOtherExtent: brushHelper.makeLinearBrushOtherExtent(rect)\n    };\n  });\n};\n\nproto.controlSeries = function (area, seriesModel, ecModel) {\n  // Check whether area is bound in coord, and series do not belong to that coord.\n  // If do not do this check, some brush (like lineX) will controll all axes.\n  var targetInfo = this.findTargetInfo(area, ecModel);\n  return targetInfo === true || targetInfo && indexOf(targetInfo.coordSyses, seriesModel.coordinateSystem) >= 0;\n};\n/**\n * If return Object, a coord found.\n * If reutrn true, global found.\n * Otherwise nothing found.\n *\n * @param {Object} area\n * @param {Array} targetInfoList\n * @return {Object|boolean}\n */\n\n\nproto.findTargetInfo = function (area, ecModel) {\n  var targetInfoList = this._targetInfoList;\n  var foundCpts = parseFinder(ecModel, area);\n\n  for (var i = 0; i < targetInfoList.length; i++) {\n    var targetInfo = targetInfoList[i];\n    var areaPanelId = area.panelId;\n\n    if (areaPanelId) {\n      if (targetInfo.panelId === areaPanelId) {\n        return targetInfo;\n      }\n    } else {\n      for (var i = 0; i < targetInfoMatchers.length; i++) {\n        if (targetInfoMatchers[i](foundCpts, targetInfo)) {\n          return targetInfo;\n        }\n      }\n    }\n  }\n\n  return true;\n};\n\nfunction formatMinMax(minMax) {\n  minMax[0] > minMax[1] && minMax.reverse();\n  return minMax;\n}\n\nfunction parseFinder(ecModel, option) {\n  return modelUtil.parseFinder(ecModel, option, {\n    includeMainTypes: INCLUDE_FINDER_MAIN_TYPES\n  });\n}\n\nvar targetInfoBuilders = {\n  grid: function (foundCpts, targetInfoList) {\n    var xAxisModels = foundCpts.xAxisModels;\n    var yAxisModels = foundCpts.yAxisModels;\n    var gridModels = foundCpts.gridModels; // Remove duplicated.\n\n    var gridModelMap = zrUtil.createHashMap();\n    var xAxesHas = {};\n    var yAxesHas = {};\n\n    if (!xAxisModels && !yAxisModels && !gridModels) {\n      return;\n    }\n\n    each(xAxisModels, function (axisModel) {\n      var gridModel = axisModel.axis.grid.model;\n      gridModelMap.set(gridModel.id, gridModel);\n      xAxesHas[gridModel.id] = true;\n    });\n    each(yAxisModels, function (axisModel) {\n      var gridModel = axisModel.axis.grid.model;\n      gridModelMap.set(gridModel.id, gridModel);\n      yAxesHas[gridModel.id] = true;\n    });\n    each(gridModels, function (gridModel) {\n      gridModelMap.set(gridModel.id, gridModel);\n      xAxesHas[gridModel.id] = true;\n      yAxesHas[gridModel.id] = true;\n    });\n    gridModelMap.each(function (gridModel) {\n      var grid = gridModel.coordinateSystem;\n      var cartesians = [];\n      each(grid.getCartesians(), function (cartesian, index) {\n        if (indexOf(xAxisModels, cartesian.getAxis('x').model) >= 0 || indexOf(yAxisModels, cartesian.getAxis('y').model) >= 0) {\n          cartesians.push(cartesian);\n        }\n      });\n      targetInfoList.push({\n        panelId: 'grid--' + gridModel.id,\n        gridModel: gridModel,\n        coordSysModel: gridModel,\n        // Use the first one as the representitive coordSys.\n        coordSys: cartesians[0],\n        coordSyses: cartesians,\n        getPanelRect: panelRectBuilder.grid,\n        xAxisDeclared: xAxesHas[gridModel.id],\n        yAxisDeclared: yAxesHas[gridModel.id]\n      });\n    });\n  },\n  geo: function (foundCpts, targetInfoList) {\n    each(foundCpts.geoModels, function (geoModel) {\n      var coordSys = geoModel.coordinateSystem;\n      targetInfoList.push({\n        panelId: 'geo--' + geoModel.id,\n        geoModel: geoModel,\n        coordSysModel: geoModel,\n        coordSys: coordSys,\n        coordSyses: [coordSys],\n        getPanelRect: panelRectBuilder.geo\n      });\n    });\n  }\n};\nvar targetInfoMatchers = [// grid\nfunction (foundCpts, targetInfo) {\n  var xAxisModel = foundCpts.xAxisModel;\n  var yAxisModel = foundCpts.yAxisModel;\n  var gridModel = foundCpts.gridModel;\n  !gridModel && xAxisModel && (gridModel = xAxisModel.axis.grid.model);\n  !gridModel && yAxisModel && (gridModel = yAxisModel.axis.grid.model);\n  return gridModel && gridModel === targetInfo.gridModel;\n}, // geo\nfunction (foundCpts, targetInfo) {\n  var geoModel = foundCpts.geoModel;\n  return geoModel && geoModel === targetInfo.geoModel;\n}];\nvar panelRectBuilder = {\n  grid: function () {\n    // grid is not Transformable.\n    return this.coordSys.grid.getRect().clone();\n  },\n  geo: function () {\n    var coordSys = this.coordSys;\n    var rect = coordSys.getBoundingRect().clone(); // geo roam and zoom transform\n\n    rect.applyTransform(graphic.getTransform(coordSys));\n    return rect;\n  }\n};\nvar coordConvert = {\n  lineX: curry(axisConvert, 0),\n  lineY: curry(axisConvert, 1),\n  rect: function (to, coordSys, rangeOrCoordRange) {\n    var xminymin = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][0], rangeOrCoordRange[1][0]]);\n    var xmaxymax = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][1], rangeOrCoordRange[1][1]]);\n    var values = [formatMinMax([xminymin[0], xmaxymax[0]]), formatMinMax([xminymin[1], xmaxymax[1]])];\n    return {\n      values: values,\n      xyMinMax: values\n    };\n  },\n  polygon: function (to, coordSys, rangeOrCoordRange) {\n    var xyMinMax = [[Infinity, -Infinity], [Infinity, -Infinity]];\n    var values = zrUtil.map(rangeOrCoordRange, function (item) {\n      var p = coordSys[COORD_CONVERTS[to]](item);\n      xyMinMax[0][0] = Math.min(xyMinMax[0][0], p[0]);\n      xyMinMax[1][0] = Math.min(xyMinMax[1][0], p[1]);\n      xyMinMax[0][1] = Math.max(xyMinMax[0][1], p[0]);\n      xyMinMax[1][1] = Math.max(xyMinMax[1][1], p[1]);\n      return p;\n    });\n    return {\n      values: values,\n      xyMinMax: xyMinMax\n    };\n  }\n};\n\nfunction axisConvert(axisNameIndex, to, coordSys, rangeOrCoordRange) {\n  var axis = coordSys.getAxis(['x', 'y'][axisNameIndex]);\n  var values = formatMinMax(zrUtil.map([0, 1], function (i) {\n    return to ? axis.coordToData(axis.toLocalCoord(rangeOrCoordRange[i])) : axis.toGlobalCoord(axis.dataToCoord(rangeOrCoordRange[i]));\n  }));\n  var xyMinMax = [];\n  xyMinMax[axisNameIndex] = values;\n  xyMinMax[1 - axisNameIndex] = [NaN, NaN];\n  return {\n    values: values,\n    xyMinMax: xyMinMax\n  };\n}\n\nvar diffProcessor = {\n  lineX: curry(axisDiffProcessor, 0),\n  lineY: curry(axisDiffProcessor, 1),\n  rect: function (values, refer, scales) {\n    return [[values[0][0] - scales[0] * refer[0][0], values[0][1] - scales[0] * refer[0][1]], [values[1][0] - scales[1] * refer[1][0], values[1][1] - scales[1] * refer[1][1]]];\n  },\n  polygon: function (values, refer, scales) {\n    return zrUtil.map(values, function (item, idx) {\n      return [item[0] - scales[0] * refer[idx][0], item[1] - scales[1] * refer[idx][1]];\n    });\n  }\n};\n\nfunction axisDiffProcessor(axisNameIndex, values, refer, scales) {\n  return [values[0] - scales[axisNameIndex] * refer[0], values[1] - scales[axisNameIndex] * refer[1]];\n} // We have to process scale caused by dataZoom manually,\n// although it might be not accurate.\n\n\nfunction getScales(xyMinMaxCurr, xyMinMaxOrigin) {\n  var sizeCurr = getSize(xyMinMaxCurr);\n  var sizeOrigin = getSize(xyMinMaxOrigin);\n  var scales = [sizeCurr[0] / sizeOrigin[0], sizeCurr[1] / sizeOrigin[1]];\n  isNaN(scales[0]) && (scales[0] = 1);\n  isNaN(scales[1]) && (scales[1] = 1);\n  return scales;\n}\n\nfunction getSize(xyMinMax) {\n  return xyMinMax ? [xyMinMax[0][1] - xyMinMax[0][0], xyMinMax[1][1] - xyMinMax[1][0]] : [NaN, NaN];\n}\n\nvar _default = BrushTargetManager;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1134:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar BoundingRect = __webpack_require__(1036);\n\nvar _cursorHelper = __webpack_require__(1116);\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar graphicUtil = __webpack_require__(1029);\n\nfunction makeRectPanelClipPath(rect) {\n  rect = normalizeRect(rect);\n  return function (localPoints, transform) {\n    return graphicUtil.clipPointsByRect(localPoints, rect);\n  };\n}\n\nfunction makeLinearBrushOtherExtent(rect, specifiedXYIndex) {\n  rect = normalizeRect(rect);\n  return function (xyIndex) {\n    var idx = specifiedXYIndex != null ? specifiedXYIndex : xyIndex;\n    var brushWidth = idx ? rect.width : rect.height;\n    var base = idx ? rect.x : rect.y;\n    return [base, base + (brushWidth || 0)];\n  };\n}\n\nfunction makeRectIsTargetByCursor(rect, api, targetModel) {\n  rect = normalizeRect(rect);\n  return function (e, localCursorPoint, transform) {\n    return rect.contain(localCursorPoint[0], localCursorPoint[1]) && !onIrrelevantElement(e, api, targetModel);\n  };\n} // Consider width/height is negative.\n\n\nfunction normalizeRect(rect) {\n  return BoundingRect.create(rect);\n}\n\nexports.makeRectPanelClipPath = makeRectPanelClipPath;\nexports.makeLinearBrushOtherExtent = makeLinearBrushOtherExtent;\nexports.makeRectIsTargetByCursor = makeRectIsTargetByCursor;\n\n/***/ }),\n\n/***/ 1135:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(1040);\n\nComponent.registerSubTypeDefaulter('dataZoom', function () {\n  // Default 'slider' when no type specified.\n  return 'slider';\n});\n\n/***/ }),\n\n/***/ 1136:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1028);\n\necharts.registerProcessor(function (ecModel, api) {\n  ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n    // We calculate window and reset axis here but not in model\n    // init stage and not after action dispatch handler, because\n    // reset should be called after seriesData.restoreData.\n    dataZoomModel.eachTargetAxis(resetSingleAxis); // Caution: data zoom filtering is order sensitive when using\n    // percent range and no min/max/scale set on axis.\n    // For example, we have dataZoom definition:\n    // [\n    //      {xAxisIndex: 0, start: 30, end: 70},\n    //      {yAxisIndex: 0, start: 20, end: 80}\n    // ]\n    // In this case, [20, 80] of y-dataZoom should be based on data\n    // that have filtered by x-dataZoom using range of [30, 70],\n    // but should not be based on full raw data. Thus sliding\n    // x-dataZoom will change both ranges of xAxis and yAxis,\n    // while sliding y-dataZoom will only change the range of yAxis.\n    // So we should filter x-axis after reset x-axis immediately,\n    // and then reset y-axis and filter y-axis.\n\n    dataZoomModel.eachTargetAxis(filterSingleAxis);\n  });\n  ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n    // Fullfill all of the range props so that user\n    // is able to get them from chart.getOption().\n    var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n    var percentRange = axisProxy.getDataPercentWindow();\n    var valueRange = axisProxy.getDataValueWindow();\n    dataZoomModel.setRawRange({\n      start: percentRange[0],\n      end: percentRange[1],\n      startValue: valueRange[0],\n      endValue: valueRange[1]\n    }, true);\n  });\n});\n\nfunction resetSingleAxis(dimNames, axisIndex, dataZoomModel) {\n  dataZoomModel.getAxisProxy(dimNames.name, axisIndex).reset(dataZoomModel);\n}\n\nfunction filterSingleAxis(dimNames, axisIndex, dataZoomModel) {\n  dataZoomModel.getAxisProxy(dimNames.name, axisIndex).filterData(dataZoomModel);\n}\n\n/***/ }),\n\n/***/ 1137:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1028);\n\nvar zrUtil = __webpack_require__(1027);\n\nvar helper = __webpack_require__(1079);\n\necharts.registerAction('dataZoom', function (payload, ecModel) {\n  var linkedNodesFinder = helper.createLinkedNodesFinder(zrUtil.bind(ecModel.eachComponent, ecModel, 'dataZoom'), helper.eachAxisDim, function (model, dimNames) {\n    return model.get(dimNames.axisIndex);\n  });\n  var effectedModels = [];\n  ecModel.eachComponent({\n    mainType: 'dataZoom',\n    query: payload\n  }, function (model, index) {\n    effectedModels.push.apply(effectedModels, linkedNodesFinder(model).nodes);\n  });\n  zrUtil.each(effectedModels, function (dataZoomModel, index) {\n    dataZoomModel.setRawRange({\n      start: payload.start,\n      end: payload.end,\n      startValue: payload.startValue,\n      endValue: payload.endValue\n    });\n  });\n});\n\n/***/ }),\n\n/***/ 1139:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar util = __webpack_require__(1027);\n\nvar vec2 = __webpack_require__(1033);\n\nvar Draggable = __webpack_require__(1140);\n\nvar Eventful = __webpack_require__(1050);\n\n/**\n * Handler\n * @module zrender/Handler\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (shenyi.914@gmail.com)\n */\nvar SILENT = 'silent';\n\nfunction makeEventPacket(eveType, targetInfo, event) {\n  return {\n    type: eveType,\n    event: event,\n    // target can only be an element that is not silent.\n    target: targetInfo.target,\n    // topTarget can be a silent element.\n    topTarget: targetInfo.topTarget,\n    cancelBubble: false,\n    offsetX: event.zrX,\n    offsetY: event.zrY,\n    gestureEvent: event.gestureEvent,\n    pinchX: event.pinchX,\n    pinchY: event.pinchY,\n    pinchScale: event.pinchScale,\n    wheelDelta: event.zrDelta,\n    zrByTouch: event.zrByTouch,\n    which: event.which\n  };\n}\n\nfunction EmptyProxy() {}\n\nEmptyProxy.prototype.dispose = function () {};\n\nvar handlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\n/**\n * @alias module:zrender/Handler\n * @constructor\n * @extends module:zrender/mixin/Eventful\n * @param {module:zrender/Storage} storage Storage instance.\n * @param {module:zrender/Painter} painter Painter instance.\n * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n */\n\nvar Handler = function (storage, painter, proxy, painterRoot) {\n  Eventful.call(this);\n  this.storage = storage;\n  this.painter = painter;\n  this.painterRoot = painterRoot;\n  proxy = proxy || new EmptyProxy();\n  /**\n   * Proxy of event. can be Dom, WebGLSurface, etc.\n   */\n\n  this.proxy = proxy; // Attach handler\n\n  proxy.handler = this;\n  /**\n   * {target, topTarget, x, y}\n   * @private\n   * @type {Object}\n   */\n\n  this._hovered = {};\n  /**\n   * @private\n   * @type {Date}\n   */\n\n  this._lastTouchMoment;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastX;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastY;\n  Draggable.call(this);\n  util.each(handlerNames, function (name) {\n    proxy.on && proxy.on(name, this[name], this);\n  }, this);\n};\n\nHandler.prototype = {\n  constructor: Handler,\n  mousemove: function (event) {\n    var x = event.zrX;\n    var y = event.zrY;\n    var lastHovered = this._hovered;\n    var lastHoveredTarget = lastHovered.target; // If lastHoveredTarget is removed from zr (detected by '__zr') by some API call\n    // (like 'setOption' or 'dispatchAction') in event handlers, we should find\n    // lastHovered again here. Otherwise 'mouseout' can not be triggered normally.\n    // See #6198.\n\n    if (lastHoveredTarget && !lastHoveredTarget.__zr) {\n      lastHovered = this.findHover(lastHovered.x, lastHovered.y);\n      lastHoveredTarget = lastHovered.target;\n    }\n\n    var hovered = this._hovered = this.findHover(x, y);\n    var hoveredTarget = hovered.target;\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default'); // Mouse out on previous hovered element\n\n    if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(lastHovered, 'mouseout', event);\n    } // Mouse moving on one element\n\n\n    this.dispatchToElement(hovered, 'mousemove', event); // Mouse over on a new element\n\n    if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(hovered, 'mouseover', event);\n    }\n  },\n  mouseout: function (event) {\n    this.dispatchToElement(this._hovered, 'mouseout', event); // There might be some doms created by upper layer application\n    // at the same level of painter.getViewportRoot() (e.g., tooltip\n    // dom created by echarts), where 'globalout' event should not\n    // be triggered when mouse enters these doms. (But 'mouseout'\n    // should be triggered at the original hovered element as usual).\n\n    var element = event.toElement || event.relatedTarget;\n    var innerDom;\n\n    do {\n      element = element && element.parentNode;\n    } while (element && element.nodeType != 9 && !(innerDom = element === this.painterRoot));\n\n    !innerDom && this.trigger('globalout', {\n      event: event\n    });\n  },\n\n  /**\n   * Resize\n   */\n  resize: function (event) {\n    this._hovered = {};\n  },\n\n  /**\n   * Dispatch event\n   * @param {string} eventName\n   * @param {event=} eventArgs\n   */\n  dispatch: function (eventName, eventArgs) {\n    var handler = this[eventName];\n    handler && handler.call(this, eventArgs);\n  },\n\n  /**\n   * Dispose\n   */\n  dispose: function () {\n    this.proxy.dispose();\n    this.storage = this.proxy = this.painter = null;\n  },\n\n  /**\n   * 设置默认的cursor style\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(cursorStyle);\n  },\n\n  /**\n   * 事件分发代理\n   *\n   * @private\n   * @param {Object} targetInfo {target, topTarget} 目标图形元素\n   * @param {string} eventName 事件名称\n   * @param {Object} event 事件对象\n   */\n  dispatchToElement: function (targetInfo, eventName, event) {\n    targetInfo = targetInfo || {};\n    var el = targetInfo.target;\n\n    if (el && el.silent) {\n      return;\n    }\n\n    var eventHandler = 'on' + eventName;\n    var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n    while (el) {\n      el[eventHandler] && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n      el.trigger(eventName, eventPacket);\n      el = el.parent;\n\n      if (eventPacket.cancelBubble) {\n        break;\n      }\n    }\n\n    if (!eventPacket.cancelBubble) {\n      // 冒泡到顶级 zrender 对象\n      this.trigger(eventName, eventPacket); // 分发事件到用户自定义层\n      // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n\n      this.painter && this.painter.eachOtherLayer(function (layer) {\n        if (typeof layer[eventHandler] == 'function') {\n          layer[eventHandler].call(layer, eventPacket);\n        }\n\n        if (layer.trigger) {\n          layer.trigger(eventName, eventPacket);\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   * @param {number} x\n   * @param {number} y\n   * @param {module:zrender/graphic/Displayable} exclude\n   * @return {model:zrender/Element}\n   * @method\n   */\n  findHover: function (x, y, exclude) {\n    var list = this.storage.getDisplayList();\n    var out = {\n      x: x,\n      y: y\n    };\n\n    for (var i = list.length - 1; i >= 0; i--) {\n      var hoverCheckResult;\n\n      if (list[i] !== exclude // getDisplayList may include ignored item in VML mode\n      && !list[i].ignore && (hoverCheckResult = isHover(list[i], x, y))) {\n        !out.topTarget && (out.topTarget = list[i]);\n\n        if (hoverCheckResult !== SILENT) {\n          out.target = list[i];\n          break;\n        }\n      }\n    }\n\n    return out;\n  }\n}; // Common handlers\n\nutil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  Handler.prototype[name] = function (event) {\n    // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n    var hovered = this.findHover(event.zrX, event.zrY);\n    var hoveredTarget = hovered.target;\n\n    if (name === 'mousedown') {\n      this._downEl = hoveredTarget;\n      this._downPoint = [event.zrX, event.zrY]; // In case click triggered before mouseup\n\n      this._upEl = hoveredTarget;\n    } else if (name === 'mosueup') {\n      this._upEl = hoveredTarget;\n    } else if (name === 'click') {\n      if (this._downEl !== this._upEl // Original click event is triggered on the whole canvas element,\n      // including the case that `mousedown` - `mousemove` - `mouseup`,\n      // which should be filtered, otherwise it will bring trouble to\n      // pan and zoom.\n      || !this._downPoint // Arbitrary value\n      || vec2.dist(this._downPoint, [event.zrX, event.zrY]) > 4) {\n        return;\n      }\n\n      this._downPoint = null;\n    }\n\n    this.dispatchToElement(hovered, name, event);\n  };\n});\n\nfunction isHover(displayable, x, y) {\n  if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n    var el = displayable;\n    var isSilent;\n\n    while (el) {\n      // If clipped by ancestor.\n      // FIXME: If clipPath has neither stroke nor fill,\n      // el.clipPath.contain(x, y) will always return false.\n      if (el.clipPath && !el.clipPath.contain(x, y)) {\n        return false;\n      }\n\n      if (el.silent) {\n        isSilent = true;\n      }\n\n      el = el.parent;\n    }\n\n    return isSilent ? SILENT : true;\n  }\n\n  return false;\n}\n\nutil.mixin(Handler, Eventful);\nutil.mixin(Handler, Draggable);\nvar _default = Handler;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1140:\n/***/ (function(module, exports) {\n\n// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\nfunction Draggable() {\n  this.on('mousedown', this._dragStart, this);\n  this.on('mousemove', this._drag, this);\n  this.on('mouseup', this._dragEnd, this);\n  this.on('globalout', this._dragEnd, this); // this._dropTarget = null;\n  // this._draggingTarget = null;\n  // this._x = 0;\n  // this._y = 0;\n}\n\nDraggable.prototype = {\n  constructor: Draggable,\n  _dragStart: function (e) {\n    var draggingTarget = e.target;\n\n    if (draggingTarget && draggingTarget.draggable) {\n      this._draggingTarget = draggingTarget;\n      draggingTarget.dragging = true;\n      this._x = e.offsetX;\n      this._y = e.offsetY;\n      this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n    }\n  },\n  _drag: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      var x = e.offsetX;\n      var y = e.offsetY;\n      var dx = x - this._x;\n      var dy = y - this._y;\n      this._x = x;\n      this._y = y;\n      draggingTarget.drift(dx, dy, e);\n      this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n      var dropTarget = this.findHover(x, y, draggingTarget).target;\n      var lastDropTarget = this._dropTarget;\n      this._dropTarget = dropTarget;\n\n      if (draggingTarget !== dropTarget) {\n        if (lastDropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n        }\n\n        if (dropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n        }\n      }\n    }\n  },\n  _dragEnd: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      draggingTarget.dragging = false;\n    }\n\n    this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n    if (this._dropTarget) {\n      this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n    }\n\n    this._draggingTarget = null;\n    this._dropTarget = null;\n  }\n};\n\nfunction param(target, e) {\n  return {\n    target: target,\n    topTarget: e && e.topTarget\n  };\n}\n\nvar _default = Draggable;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1141:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar util = __webpack_require__(1027);\n\nvar env = __webpack_require__(1035);\n\nvar Group = __webpack_require__(1058);\n\nvar timsort = __webpack_require__(1073);\n\n/**\n * Storage内容仓库模块\n * @module zrender/Storage\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @author errorrik (errorrik@gmail.com)\n * @author pissang (https://github.com/pissang/)\n */\n// Use timsort because in most case elements are partially sorted\n// https://jsfiddle.net/pissang/jr4x7mdm/8/\nfunction shapeCompareFunc(a, b) {\n  if (a.zlevel === b.zlevel) {\n    if (a.z === b.z) {\n      // if (a.z2 === b.z2) {\n      //     // FIXME Slow has renderidx compare\n      //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n      //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n      //     return a.__renderidx - b.__renderidx;\n      // }\n      return a.z2 - b.z2;\n    }\n\n    return a.z - b.z;\n  }\n\n  return a.zlevel - b.zlevel;\n}\n/**\n * 内容仓库 (M)\n * @alias module:zrender/Storage\n * @constructor\n */\n\n\nvar Storage = function () {\n  // jshint ignore:line\n  this._roots = [];\n  this._displayList = [];\n  this._displayListLen = 0;\n};\n\nStorage.prototype = {\n  constructor: Storage,\n\n  /**\n   * @param  {Function} cb\n   *\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._roots.length; i++) {\n      this._roots[i].traverse(cb, context);\n    }\n  },\n\n  /**\n   * 返回所有图形的绘制队列\n   * @param {boolean} [update=false] 是否在返回前更新该数组\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n   *\n   * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n   * @return {Array.<module:zrender/graphic/Displayable>}\n   */\n  getDisplayList: function (update, includeIgnore) {\n    includeIgnore = includeIgnore || false;\n\n    if (update) {\n      this.updateDisplayList(includeIgnore);\n    }\n\n    return this._displayList;\n  },\n\n  /**\n   * 更新图形的绘制队列。\n   * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n   * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n   */\n  updateDisplayList: function (includeIgnore) {\n    this._displayListLen = 0;\n    var roots = this._roots;\n    var displayList = this._displayList;\n\n    for (var i = 0, len = roots.length; i < len; i++) {\n      this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n    }\n\n    displayList.length = this._displayListLen; // for (var i = 0, len = displayList.length; i < len; i++) {\n    //     displayList[i].__renderidx = i;\n    // }\n    // displayList.sort(shapeCompareFunc);\n\n    env.canvasSupported && timsort(displayList, shapeCompareFunc);\n  },\n  _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n    if (el.ignore && !includeIgnore) {\n      return;\n    }\n\n    el.beforeUpdate();\n\n    if (el.__dirty) {\n      el.update();\n    }\n\n    el.afterUpdate();\n    var userSetClipPath = el.clipPath;\n\n    if (userSetClipPath) {\n      // FIXME 效率影响\n      if (clipPaths) {\n        clipPaths = clipPaths.slice();\n      } else {\n        clipPaths = [];\n      }\n\n      var currentClipPath = userSetClipPath;\n      var parentClipPath = el; // Recursively add clip path\n\n      while (currentClipPath) {\n        // clipPath 的变换是基于使用这个 clipPath 的元素\n        currentClipPath.parent = parentClipPath;\n        currentClipPath.updateTransform();\n        clipPaths.push(currentClipPath);\n        parentClipPath = currentClipPath;\n        currentClipPath = currentClipPath.clipPath;\n      }\n    }\n\n    if (el.isGroup) {\n      var children = el._children;\n\n      for (var i = 0; i < children.length; i++) {\n        var child = children[i]; // Force to mark as dirty if group is dirty\n        // FIXME __dirtyPath ?\n\n        if (el.__dirty) {\n          child.__dirty = true;\n        }\n\n        this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n      } // Mark group clean here\n\n\n      el.__dirty = false;\n    } else {\n      el.__clipPaths = clipPaths;\n      this._displayList[this._displayListLen++] = el;\n    }\n  },\n\n  /**\n   * 添加图形(Shape)或者组(Group)到根节点\n   * @param {module:zrender/Element} el\n   */\n  addRoot: function (el) {\n    if (el.__storage === this) {\n      return;\n    }\n\n    if (el instanceof Group) {\n      el.addChildrenToStorage(this);\n    }\n\n    this.addToStorage(el);\n\n    this._roots.push(el);\n  },\n\n  /**\n   * 删除指定的图形(Shape)或者组(Group)\n   * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n   */\n  delRoot: function (el) {\n    if (el == null) {\n      // 不指定el清空\n      for (var i = 0; i < this._roots.length; i++) {\n        var root = this._roots[i];\n\n        if (root instanceof Group) {\n          root.delChildrenFromStorage(this);\n        }\n      }\n\n      this._roots = [];\n      this._displayList = [];\n      this._displayListLen = 0;\n      return;\n    }\n\n    if (el instanceof Array) {\n      for (var i = 0, l = el.length; i < l; i++) {\n        this.delRoot(el[i]);\n      }\n\n      return;\n    }\n\n    var idx = util.indexOf(this._roots, el);\n\n    if (idx >= 0) {\n      this.delFromStorage(el);\n\n      this._roots.splice(idx, 1);\n\n      if (el instanceof Group) {\n        el.delChildrenFromStorage(this);\n      }\n    }\n  },\n  addToStorage: function (el) {\n    el.__storage = this;\n    el.dirty(false);\n    return this;\n  },\n  delFromStorage: function (el) {\n    if (el) {\n      el.__storage = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * 清空并且释放Storage\n   */\n  dispose: function () {\n    this._renderList = this._roots = null;\n  },\n  displayableSortFunc: shapeCompareFunc\n};\nvar _default = Storage;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1142:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Animator = __webpack_require__(1093);\n\nvar log = __webpack_require__(1072);\n\nvar _util = __webpack_require__(1027);\n\nvar isString = _util.isString;\nvar isFunction = _util.isFunction;\nvar isObject = _util.isObject;\nvar isArrayLike = _util.isArrayLike;\nvar indexOf = _util.indexOf;\n\n/**\n * @alias modue:zrender/mixin/Animatable\n * @constructor\n */\nvar Animatable = function () {\n  /**\n   * @type {Array.<module:zrender/animation/Animator>}\n   * @readOnly\n   */\n  this.animators = [];\n};\n\nAnimatable.prototype = {\n  constructor: Animatable,\n\n  /**\n   * 动画\n   *\n   * @param {string} path The path to fetch value from object, like 'a.b.c'.\n   * @param {boolean} [loop] Whether to loop animation.\n   * @return {module:zrender/animation/Animator}\n   * @example:\n   *     el.animate('style', false)\n   *         .when(1000, {x: 10} )\n   *         .done(function(){ // Animation done })\n   *         .start()\n   */\n  animate: function (path, loop) {\n    var target;\n    var animatingShape = false;\n    var el = this;\n    var zr = this.__zr;\n\n    if (path) {\n      var pathSplitted = path.split('.');\n      var prop = el; // If animating shape\n\n      animatingShape = pathSplitted[0] === 'shape';\n\n      for (var i = 0, l = pathSplitted.length; i < l; i++) {\n        if (!prop) {\n          continue;\n        }\n\n        prop = prop[pathSplitted[i]];\n      }\n\n      if (prop) {\n        target = prop;\n      }\n    } else {\n      target = el;\n    }\n\n    if (!target) {\n      log('Property \"' + path + '\" is not existed in element ' + el.id);\n      return;\n    }\n\n    var animators = el.animators;\n    var animator = new Animator(target, loop);\n    animator.during(function (target) {\n      el.dirty(animatingShape);\n    }).done(function () {\n      // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n      animators.splice(indexOf(animators, animator), 1);\n    });\n    animators.push(animator); // If animate after added to the zrender\n\n    if (zr) {\n      zr.animation.addAnimator(animator);\n    }\n\n    return animator;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stopAnimation: function (forwardToLast) {\n    var animators = this.animators;\n    var len = animators.length;\n\n    for (var i = 0; i < len; i++) {\n      animators[i].stop(forwardToLast);\n    }\n\n    animators.length = 0;\n    return this;\n  },\n\n  /**\n   * Caution: this method will stop previous animation.\n   * So do not use this method to one element twice before\n   * animation starts, unless you know what you are doing.\n   * @param {Object} target\n   * @param {number} [time=500] Time in ms\n   * @param {string} [easing='linear']\n   * @param {number} [delay=0]\n   * @param {Function} [callback]\n   * @param {Function} [forceAnimate] Prevent stop animation and callback\n   *        immediently when target values are the same as current values.\n   *\n   * @example\n   *  // Animate position\n   *  el.animateTo({\n   *      position: [10, 10]\n   *  }, function () { // done })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n   *  el.animateTo({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100, 'cubicOut', function () { // done })\n   */\n  // TODO Return animation key\n  animateTo: function (target, time, delay, easing, callback, forceAnimate) {\n    // animateTo(target, time, easing, callback);\n    if (isString(delay)) {\n      callback = easing;\n      easing = delay;\n      delay = 0;\n    } // animateTo(target, time, delay, callback);\n    else if (isFunction(easing)) {\n        callback = easing;\n        easing = 'linear';\n        delay = 0;\n      } // animateTo(target, time, callback);\n      else if (isFunction(delay)) {\n          callback = delay;\n          delay = 0;\n        } // animateTo(target, callback)\n        else if (isFunction(time)) {\n            callback = time;\n            time = 500;\n          } // animateTo(target)\n          else if (!time) {\n              time = 500;\n            } // Stop all previous animations\n\n\n    this.stopAnimation();\n\n    this._animateToShallow('', this, target, time, delay); // Animators may be removed immediately after start\n    // if there is nothing to animate\n\n\n    var animators = this.animators.slice();\n    var count = animators.length;\n\n    function done() {\n      count--;\n\n      if (!count) {\n        callback && callback();\n      }\n    } // No animators. This should be checked before animators[i].start(),\n    // because 'done' may be executed immediately if no need to animate.\n\n\n    if (!count) {\n      callback && callback();\n    } // Start after all animators created\n    // Incase any animator is done immediately when all animation properties are not changed\n\n\n    for (var i = 0; i < animators.length; i++) {\n      animators[i].done(done).start(easing, forceAnimate);\n    }\n  },\n\n  /**\n   * @private\n   * @param {string} path=''\n   * @param {Object} source=this\n   * @param {Object} target\n   * @param {number} [time=500]\n   * @param {number} [delay=0]\n   *\n   * @example\n   *  // Animate position\n   *  el._animateToShallow({\n   *      position: [10, 10]\n   *  })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms\n   *  el._animateToShallow({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100)\n   */\n  _animateToShallow: function (path, source, target, time, delay) {\n    var objShallow = {};\n    var propertyCount = 0;\n\n    for (var name in target) {\n      if (!target.hasOwnProperty(name)) {\n        continue;\n      }\n\n      if (source[name] != null) {\n        if (isObject(target[name]) && !isArrayLike(target[name])) {\n          this._animateToShallow(path ? path + '.' + name : name, source[name], target[name], time, delay);\n        } else {\n          objShallow[name] = target[name];\n          propertyCount++;\n        }\n      } else if (target[name] != null) {\n        // Attr directly if not has property\n        // FIXME, if some property not needed for element ?\n        if (!path) {\n          this.attr(name, target[name]);\n        } else {\n          // Shape or style\n          var props = {};\n          props[path] = {};\n          props[path][name] = target[name];\n          this.attr(props);\n        }\n      }\n    }\n\n    if (propertyCount > 0) {\n      this.animate(path, false).when(time == null ? 500 : time, objShallow).delay(delay || 0);\n    }\n\n    return this;\n  }\n};\nvar _default = Animatable;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1143:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar easingFuncs = __webpack_require__(1144);\n\n/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\nfunction Clip(options) {\n  this._target = options.target; // 生命周期\n\n  this._life = options.life || 1000; // 延时\n\n  this._delay = options.delay || 0; // 开始时间\n  // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n\n  this._initialized = false; // 是否循环\n\n  this.loop = options.loop == null ? false : options.loop;\n  this.gap = options.gap || 0;\n  this.easing = options.easing || 'Linear';\n  this.onframe = options.onframe;\n  this.ondestroy = options.ondestroy;\n  this.onrestart = options.onrestart;\n  this._pausedTime = 0;\n  this._paused = false;\n}\n\nClip.prototype = {\n  constructor: Clip,\n  step: function (globalTime, deltaTime) {\n    // Set startTime on first step, or _startTime may has milleseconds different between clips\n    // PENDING\n    if (!this._initialized) {\n      this._startTime = globalTime + this._delay;\n      this._initialized = true;\n    }\n\n    if (this._paused) {\n      this._pausedTime += deltaTime;\n      return;\n    }\n\n    var percent = (globalTime - this._startTime - this._pausedTime) / this._life; // 还没开始\n\n    if (percent < 0) {\n      return;\n    }\n\n    percent = Math.min(percent, 1);\n    var easing = this.easing;\n    var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n    var schedule = typeof easingFunc === 'function' ? easingFunc(percent) : percent;\n    this.fire('frame', schedule); // 结束\n\n    if (percent == 1) {\n      if (this.loop) {\n        this.restart(globalTime); // 重新开始周期\n        // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n\n        return 'restart';\n      } // 动画完成将这个控制器标识为待删除\n      // 在Animation.update中进行批量删除\n\n\n      this._needsRemove = true;\n      return 'destroy';\n    }\n\n    return null;\n  },\n  restart: function (globalTime) {\n    var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n    this._startTime = globalTime - remainder + this.gap;\n    this._pausedTime = 0;\n    this._needsRemove = false;\n  },\n  fire: function (eventType, arg) {\n    eventType = 'on' + eventType;\n\n    if (this[eventType]) {\n      this[eventType](this._target, arg);\n    }\n  },\n  pause: function () {\n    this._paused = true;\n  },\n  resume: function () {\n    this._paused = false;\n  }\n};\nvar _default = Clip;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1144:\n/***/ (function(module, exports) {\n\n/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\nvar easing = {\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  linear: function (k) {\n    return k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticIn: function (k) {\n    return k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticOut: function (k) {\n    return k * (2 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k;\n    }\n\n    return -0.5 * (--k * (k - 2) - 1);\n  },\n  // 三次方的缓动（t^3）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicIn: function (k) {\n    return k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicOut: function (k) {\n    return --k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k + 2);\n  },\n  // 四次方的缓动（t^4）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticIn: function (k) {\n    return k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticOut: function (k) {\n    return 1 - --k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k;\n    }\n\n    return -0.5 * ((k -= 2) * k * k * k - 2);\n  },\n  // 五次方的缓动（t^5）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticIn: function (k) {\n    return k * k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticOut: function (k) {\n    return --k * k * k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k * k * k + 2);\n  },\n  // 正弦曲线的缓动（sin(t)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalIn: function (k) {\n    return 1 - Math.cos(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalOut: function (k) {\n    return Math.sin(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalInOut: function (k) {\n    return 0.5 * (1 - Math.cos(Math.PI * k));\n  },\n  // 指数曲线的缓动（2^t）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialIn: function (k) {\n    return k === 0 ? 0 : Math.pow(1024, k - 1);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialOut: function (k) {\n    return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialInOut: function (k) {\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if ((k *= 2) < 1) {\n      return 0.5 * Math.pow(1024, k - 1);\n    }\n\n    return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n  },\n  // 圆形曲线的缓动（sqrt(1-t^2)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularIn: function (k) {\n    return 1 - Math.sqrt(1 - k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularOut: function (k) {\n    return Math.sqrt(1 - --k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return -0.5 * (Math.sqrt(1 - k * k) - 1);\n    }\n\n    return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n  },\n  // 创建类似于弹簧在停止前来回振荡的动画\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticIn: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return -(a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return a * Math.pow(2, -10 * k) * Math.sin((k - s) * (2 * Math.PI) / p) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticInOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    if ((k *= 2) < 1) {\n      return -0.5 * (a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n    }\n\n    return a * Math.pow(2, -10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n  },\n  // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backIn: function (k) {\n    var s = 1.70158;\n    return k * k * ((s + 1) * k - s);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backOut: function (k) {\n    var s = 1.70158;\n    return --k * k * ((s + 1) * k + s) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backInOut: function (k) {\n    var s = 1.70158 * 1.525;\n\n    if ((k *= 2) < 1) {\n      return 0.5 * (k * k * ((s + 1) * k - s));\n    }\n\n    return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n  },\n  // 创建弹跳效果\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceIn: function (k) {\n    return 1 - easing.bounceOut(1 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceOut: function (k) {\n    if (k < 1 / 2.75) {\n      return 7.5625 * k * k;\n    } else if (k < 2 / 2.75) {\n      return 7.5625 * (k -= 1.5 / 2.75) * k + 0.75;\n    } else if (k < 2.5 / 2.75) {\n      return 7.5625 * (k -= 2.25 / 2.75) * k + 0.9375;\n    } else {\n      return 7.5625 * (k -= 2.625 / 2.75) * k + 0.984375;\n    }\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceInOut: function (k) {\n    if (k < 0.5) {\n      return easing.bounceIn(k * 2) * 0.5;\n    }\n\n    return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n  }\n};\nvar _default = easing;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1145:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(1059);\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar util = __webpack_require__(1027);\n\nvar log = __webpack_require__(1072);\n\nvar BoundingRect = __webpack_require__(1036);\n\nvar timsort = __webpack_require__(1073);\n\nvar Layer = __webpack_require__(1146);\n\nvar requestAnimationFrame = __webpack_require__(1097);\n\nvar Image = __webpack_require__(1074);\n\n/**\n * Default canvas painter\n * @module zrender/Painter\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n// PENDIGN\n// Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.\n//\n// Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.\nvar MAX_PROGRESSIVE_LAYER_NUMBER = 5;\n\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n\nfunction isLayerValid(layer) {\n  if (!layer) {\n    return false;\n  }\n\n  if (layer.__builtin__) {\n    return true;\n  }\n\n  if (typeof layer.resize !== 'function' || typeof layer.refresh !== 'function') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction preProcessLayer(layer) {\n  layer.__unusedCount++;\n}\n\nfunction postProcessLayer(layer) {\n  if (layer.__unusedCount == 1) {\n    layer.clear();\n  }\n}\n\nvar tmpRect = new BoundingRect(0, 0, 0, 0);\nvar viewRect = new BoundingRect(0, 0, 0, 0);\n\nfunction isDisplayableCulled(el, width, height) {\n  tmpRect.copy(el.getBoundingRect());\n\n  if (el.transform) {\n    tmpRect.applyTransform(el.transform);\n  }\n\n  viewRect.width = width;\n  viewRect.height = height;\n  return !tmpRect.intersect(viewRect);\n}\n\nfunction isClipPathChanged(clipPaths, prevClipPaths) {\n  if (clipPaths == prevClipPaths) {\n    // Can both be null or undefined\n    return false;\n  }\n\n  if (!clipPaths || !prevClipPaths || clipPaths.length !== prevClipPaths.length) {\n    return true;\n  }\n\n  for (var i = 0; i < clipPaths.length; i++) {\n    if (clipPaths[i] !== prevClipPaths[i]) {\n      return true;\n    }\n  }\n}\n\nfunction doClip(clipPaths, ctx) {\n  for (var i = 0; i < clipPaths.length; i++) {\n    var clipPath = clipPaths[i];\n    clipPath.setTransform(ctx);\n    ctx.beginPath();\n    clipPath.buildPath(ctx, clipPath.shape);\n    ctx.clip(); // Transform back\n\n    clipPath.restoreTransform(ctx);\n  }\n}\n\nfunction createRoot(width, height) {\n  var domRoot = document.createElement('div'); // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n  domRoot.style.cssText = ['position:relative', 'overflow:hidden', 'width:' + width + 'px', 'height:' + height + 'px', 'padding:0', 'margin:0', 'border-width:0'].join(';') + ';';\n  return domRoot;\n}\n/**\n * @alias module:zrender/Painter\n * @constructor\n * @param {HTMLElement} root 绘图容器\n * @param {module:zrender/Storage} storage\n * @param {Object} opts\n */\n\n\nvar Painter = function (root, storage, opts) {\n  this.type = 'canvas'; // In node environment using node-canvas\n\n  var singleCanvas = !root.nodeName // In node ?\n  || root.nodeName.toUpperCase() === 'CANVAS';\n  this._opts = opts = util.extend({}, opts || {});\n  /**\n   * @type {number}\n   */\n\n  this.dpr = opts.devicePixelRatio || devicePixelRatio;\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._singleCanvas = singleCanvas;\n  /**\n   * 绘图容器\n   * @type {HTMLElement}\n   */\n\n  this.root = root;\n  var rootStyle = root.style;\n\n  if (rootStyle) {\n    rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n    rootStyle['-webkit-user-select'] = rootStyle['user-select'] = rootStyle['-webkit-touch-callout'] = 'none';\n    root.innerHTML = '';\n  }\n  /**\n   * @type {module:zrender/Storage}\n   */\n\n\n  this.storage = storage;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  var zlevelList = this._zlevelList = [];\n  /**\n   * @type {Object.<string, module:zrender/Layer>}\n   * @private\n   */\n\n  var layers = this._layers = {};\n  /**\n   * @type {Object.<string, Object>}\n   * @type {private}\n   */\n\n  this._layerConfig = {};\n\n  if (!singleCanvas) {\n    this._width = this._getSize(0);\n    this._height = this._getSize(1);\n    var domRoot = this._domRoot = createRoot(this._width, this._height);\n    root.appendChild(domRoot);\n  } else {\n    if (opts.width != null) {\n      root.width = opts.width;\n    }\n\n    if (opts.height != null) {\n      root.height = opts.height;\n    } // Use canvas width and height directly\n\n\n    var width = root.width;\n    var height = root.height;\n    this._width = width;\n    this._height = height; // Create layer if only one given canvas\n    // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n\n    var mainLayer = new Layer(root, this, 1);\n    mainLayer.initContext(); // FIXME Use canvas width and height\n    // mainLayer.resize(width, height);\n\n    layers[0] = mainLayer;\n    zlevelList.push(0);\n    this._domRoot = root;\n  } // Layers for progressive rendering\n\n\n  this._progressiveLayers = [];\n  /**\n   * @type {module:zrender/Layer}\n   * @private\n   */\n\n  this._hoverlayer;\n  this._hoverElements = [];\n};\n\nPainter.prototype = {\n  constructor: Painter,\n  getType: function () {\n    return 'canvas';\n  },\n\n  /**\n   * If painter use a single canvas\n   * @return {boolean}\n   */\n  isSingleCanvas: function () {\n    return this._singleCanvas;\n  },\n\n  /**\n   * @return {HTMLDivElement}\n   */\n  getViewportRoot: function () {\n    return this._domRoot;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n\n  /**\n   * 刷新\n   * @param {boolean} [paintAll=false] 强制绘制所有displayable\n   */\n  refresh: function (paintAll) {\n    var list = this.storage.getDisplayList(true);\n    var zlevelList = this._zlevelList;\n\n    this._paintList(list, paintAll); // Paint custum layers\n\n\n    for (var i = 0; i < zlevelList.length; i++) {\n      var z = zlevelList[i];\n      var layer = this._layers[z];\n\n      if (!layer.__builtin__ && layer.refresh) {\n        layer.refresh();\n      }\n    }\n\n    this.refreshHover();\n\n    if (this._progressiveLayers.length) {\n      this._startProgessive();\n    }\n\n    return this;\n  },\n  addHover: function (el, hoverStyle) {\n    if (el.__hoverMir) {\n      return;\n    }\n\n    var elMirror = new el.constructor({\n      style: el.style,\n      shape: el.shape\n    });\n    elMirror.__from = el;\n    el.__hoverMir = elMirror;\n    elMirror.setStyle(hoverStyle);\n\n    this._hoverElements.push(elMirror);\n  },\n  removeHover: function (el) {\n    var elMirror = el.__hoverMir;\n    var hoverElements = this._hoverElements;\n    var idx = util.indexOf(hoverElements, elMirror);\n\n    if (idx >= 0) {\n      hoverElements.splice(idx, 1);\n    }\n\n    el.__hoverMir = null;\n  },\n  clearHover: function (el) {\n    var hoverElements = this._hoverElements;\n\n    for (var i = 0; i < hoverElements.length; i++) {\n      var from = hoverElements[i].__from;\n\n      if (from) {\n        from.__hoverMir = null;\n      }\n    }\n\n    hoverElements.length = 0;\n  },\n  refreshHover: function () {\n    var hoverElements = this._hoverElements;\n    var len = hoverElements.length;\n    var hoverLayer = this._hoverlayer;\n    hoverLayer && hoverLayer.clear();\n\n    if (!len) {\n      return;\n    }\n\n    timsort(hoverElements, this.storage.displayableSortFunc); // Use a extream large zlevel\n    // FIXME?\n\n    if (!hoverLayer) {\n      hoverLayer = this._hoverlayer = this.getLayer(1e5);\n    }\n\n    var scope = {};\n    hoverLayer.ctx.save();\n\n    for (var i = 0; i < len;) {\n      var el = hoverElements[i];\n      var originalEl = el.__from; // Original el is removed\n      // PENDING\n\n      if (!(originalEl && originalEl.__zr)) {\n        hoverElements.splice(i, 1);\n        originalEl.__hoverMir = null;\n        len--;\n        continue;\n      }\n\n      i++; // Use transform\n      // FIXME style and shape ?\n\n      if (!originalEl.invisible) {\n        el.transform = originalEl.transform;\n        el.invTransform = originalEl.invTransform;\n        el.__clipPaths = originalEl.__clipPaths; // el.\n\n        this._doPaintEl(el, hoverLayer, true, scope);\n      }\n    }\n\n    hoverLayer.ctx.restore();\n  },\n  _startProgessive: function () {\n    var self = this;\n\n    if (!self._furtherProgressive) {\n      return;\n    } // Use a token to stop progress steps triggered by\n    // previous zr.refresh calling.\n\n\n    var token = self._progressiveToken = +new Date();\n    self._progress++;\n    requestAnimationFrame(step);\n\n    function step() {\n      // In case refreshed or disposed\n      if (token === self._progressiveToken && self.storage) {\n        self._doPaintList(self.storage.getDisplayList());\n\n        if (self._furtherProgressive) {\n          self._progress++;\n          requestAnimationFrame(step);\n        } else {\n          self._progressiveToken = -1;\n        }\n      }\n    }\n  },\n  _clearProgressive: function () {\n    this._progressiveToken = -1;\n    this._progress = 0;\n    util.each(this._progressiveLayers, function (layer) {\n      layer.__dirty && layer.clear();\n    });\n  },\n  _paintList: function (list, paintAll) {\n    if (paintAll == null) {\n      paintAll = false;\n    }\n\n    this._updateLayerStatus(list);\n\n    this._clearProgressive();\n\n    this.eachBuiltinLayer(preProcessLayer);\n\n    this._doPaintList(list, paintAll);\n\n    this.eachBuiltinLayer(postProcessLayer);\n  },\n  _doPaintList: function (list, paintAll) {\n    var currentLayer;\n    var currentZLevel;\n    var ctx; // var invTransform = [];\n\n    var scope;\n    var progressiveLayerIdx = 0;\n    var currentProgressiveLayer;\n    var width = this._width;\n    var height = this._height;\n    var layerProgress;\n    var frame = this._progress;\n\n    function flushProgressiveLayer(layer) {\n      var dpr = ctx.dpr || 1;\n      ctx.save();\n      ctx.globalAlpha = 1;\n      ctx.shadowBlur = 0; // Avoid layer don't clear in next progressive frame\n\n      currentLayer.__dirty = true;\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\n      ctx.drawImage(layer.dom, 0, 0, width * dpr, height * dpr);\n      ctx.restore();\n    }\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      var el = list[i];\n      var elZLevel = this._singleCanvas ? 0 : el.zlevel;\n      var elFrame = el.__frame; // Flush at current context\n      // PENDING\n\n      if (elFrame < 0 && currentProgressiveLayer) {\n        flushProgressiveLayer(currentProgressiveLayer);\n        currentProgressiveLayer = null;\n      } // Change draw layer\n\n\n      if (currentZLevel !== elZLevel) {\n        if (ctx) {\n          ctx.restore();\n        } // Reset scope\n\n\n        scope = {}; // Only 0 zlevel if only has one canvas\n\n        currentZLevel = elZLevel;\n        currentLayer = this.getLayer(currentZLevel);\n\n        if (!currentLayer.__builtin__) {\n          log('ZLevel ' + currentZLevel + ' has been used by unkown layer ' + currentLayer.id);\n        }\n\n        ctx = currentLayer.ctx;\n        ctx.save(); // Reset the count\n\n        currentLayer.__unusedCount = 0;\n\n        if (currentLayer.__dirty || paintAll) {\n          currentLayer.clear();\n        }\n      }\n\n      if (!(currentLayer.__dirty || paintAll)) {\n        continue;\n      }\n\n      if (elFrame >= 0) {\n        // Progressive layer changed\n        if (!currentProgressiveLayer) {\n          currentProgressiveLayer = this._progressiveLayers[Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)];\n          currentProgressiveLayer.ctx.save();\n          currentProgressiveLayer.renderScope = {};\n\n          if (currentProgressiveLayer && currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress) {\n            // flushProgressiveLayer(currentProgressiveLayer);\n            // Quick jump all progressive elements\n            // All progressive element are not dirty, jump over and flush directly\n            i = currentProgressiveLayer.__nextIdxNotProg - 1; // currentProgressiveLayer = null;\n\n            continue;\n          }\n\n          layerProgress = currentProgressiveLayer.__progress;\n\n          if (!currentProgressiveLayer.__dirty) {\n            // Keep rendering\n            frame = layerProgress;\n          }\n\n          currentProgressiveLayer.__progress = frame + 1;\n        }\n\n        if (elFrame === frame) {\n          this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);\n        }\n      } else {\n        this._doPaintEl(el, currentLayer, paintAll, scope);\n      }\n\n      el.__dirty = false;\n    }\n\n    if (currentProgressiveLayer) {\n      flushProgressiveLayer(currentProgressiveLayer);\n    } // Restore the lastLayer ctx\n\n\n    ctx && ctx.restore(); // If still has clipping state\n    // if (scope.prevElClipPaths) {\n    //     ctx.restore();\n    // }\n\n    this._furtherProgressive = false;\n    util.each(this._progressiveLayers, function (layer) {\n      if (layer.__maxProgress >= layer.__progress) {\n        this._furtherProgressive = true;\n      }\n    }, this);\n  },\n  _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n    var ctx = currentLayer.ctx;\n    var m = el.transform;\n\n    if ((currentLayer.__dirty || forcePaint) && // Ignore invisible element\n    !el.invisible // Ignore transparent element\n    && el.style.opacity !== 0 // Ignore scale 0 element, in some environment like node-canvas\n    // Draw a scale 0 element can cause all following draw wrong\n    // And setTransform with scale 0 will cause set back transform failed.\n    && !(m && !m[0] && !m[3]) // Ignore culled element\n    && !(el.culling && isDisplayableCulled(el, this._width, this._height))) {\n      var clipPaths = el.__clipPaths; // Optimize when clipping on group with several elements\n\n      if (scope.prevClipLayer !== currentLayer || isClipPathChanged(clipPaths, scope.prevElClipPaths)) {\n        // If has previous clipping state, restore from it\n        if (scope.prevElClipPaths) {\n          scope.prevClipLayer.ctx.restore();\n          scope.prevClipLayer = scope.prevElClipPaths = null; // Reset prevEl since context has been restored\n\n          scope.prevEl = null;\n        } // New clipping state\n\n\n        if (clipPaths) {\n          ctx.save();\n          doClip(clipPaths, ctx);\n          scope.prevClipLayer = currentLayer;\n          scope.prevElClipPaths = clipPaths;\n        }\n      }\n\n      el.beforeBrush && el.beforeBrush(ctx);\n      el.brush(ctx, scope.prevEl || null);\n      scope.prevEl = el;\n      el.afterBrush && el.afterBrush(ctx);\n    }\n  },\n\n  /**\n   * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n   * @param {number} zlevel\n   * @return {module:zrender/Layer}\n   */\n  getLayer: function (zlevel) {\n    if (this._singleCanvas) {\n      return this._layers[0];\n    }\n\n    var layer = this._layers[zlevel];\n\n    if (!layer) {\n      // Create a new layer\n      layer = new Layer('zr_' + zlevel, this, this.dpr);\n      layer.__builtin__ = true;\n\n      if (this._layerConfig[zlevel]) {\n        util.merge(layer, this._layerConfig[zlevel], true);\n      }\n\n      this.insertLayer(zlevel, layer); // Context is created after dom inserted to document\n      // Or excanvas will get 0px clientWidth and clientHeight\n\n      layer.initContext();\n    }\n\n    return layer;\n  },\n  insertLayer: function (zlevel, layer) {\n    var layersMap = this._layers;\n    var zlevelList = this._zlevelList;\n    var len = zlevelList.length;\n    var prevLayer = null;\n    var i = -1;\n    var domRoot = this._domRoot;\n\n    if (layersMap[zlevel]) {\n      log('ZLevel ' + zlevel + ' has been used already');\n      return;\n    } // Check if is a valid layer\n\n\n    if (!isLayerValid(layer)) {\n      log('Layer of zlevel ' + zlevel + ' is not valid');\n      return;\n    }\n\n    if (len > 0 && zlevel > zlevelList[0]) {\n      for (i = 0; i < len - 1; i++) {\n        if (zlevelList[i] < zlevel && zlevelList[i + 1] > zlevel) {\n          break;\n        }\n      }\n\n      prevLayer = layersMap[zlevelList[i]];\n    }\n\n    zlevelList.splice(i + 1, 0, zlevel);\n    layersMap[zlevel] = layer; // Vitual layer will not directly show on the screen.\n    // (It can be a WebGL layer and assigned to a ZImage element)\n    // But it still under management of zrender.\n\n    if (!layer.virtual) {\n      if (prevLayer) {\n        var prevDom = prevLayer.dom;\n\n        if (prevDom.nextSibling) {\n          domRoot.insertBefore(layer.dom, prevDom.nextSibling);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      } else {\n        if (domRoot.firstChild) {\n          domRoot.insertBefore(layer.dom, domRoot.firstChild);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      }\n    }\n  },\n  // Iterate each layer\n  eachLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      cb.call(context, this._layers[z], z);\n    }\n  },\n  // Iterate each buildin layer\n  eachBuiltinLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n  // Iterate each other layer except buildin layer\n  eachOtherLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (!layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n\n  /**\n   * 获取所有已创建的层\n   * @param {Array.<module:zrender/Layer>} [prevLayer]\n   */\n  getLayers: function () {\n    return this._layers;\n  },\n  _updateLayerStatus: function (list) {\n    var layers = this._layers;\n    var progressiveLayers = this._progressiveLayers;\n    var elCountsLastFrame = {};\n    var progressiveElCountsLastFrame = {};\n    this.eachBuiltinLayer(function (layer, z) {\n      elCountsLastFrame[z] = layer.elCount;\n      layer.elCount = 0;\n      layer.__dirty = false;\n    });\n    util.each(progressiveLayers, function (layer, idx) {\n      progressiveElCountsLastFrame[idx] = layer.elCount;\n      layer.elCount = 0;\n      layer.__dirty = false;\n    });\n    var progressiveLayerCount = 0;\n    var currentProgressiveLayer;\n    var lastProgressiveKey;\n    var frameCount = 0;\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      var el = list[i];\n      var zlevel = this._singleCanvas ? 0 : el.zlevel;\n      var layer = layers[zlevel];\n      var elProgress = el.progressive;\n\n      if (layer) {\n        layer.elCount++;\n        layer.__dirty = layer.__dirty || el.__dirty;\n      } /////// Update progressive\n\n\n      if (elProgress >= 0) {\n        // Fix wrong progressive sequence problem.\n        if (lastProgressiveKey !== elProgress) {\n          lastProgressiveKey = elProgress;\n          frameCount++;\n        }\n\n        var elFrame = el.__frame = frameCount - 1;\n\n        if (!currentProgressiveLayer) {\n          var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);\n          currentProgressiveLayer = progressiveLayers[idx];\n\n          if (!currentProgressiveLayer) {\n            currentProgressiveLayer = progressiveLayers[idx] = new Layer('progressive', this, this.dpr);\n            currentProgressiveLayer.initContext();\n          }\n\n          currentProgressiveLayer.__maxProgress = 0;\n        }\n\n        currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;\n        currentProgressiveLayer.elCount++;\n        currentProgressiveLayer.__maxProgress = Math.max(currentProgressiveLayer.__maxProgress, elFrame);\n\n        if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {\n          // Should keep rendering this  layer because progressive rendering is not finished yet\n          layer.__dirty = true;\n        }\n      } else {\n        el.__frame = -1;\n\n        if (currentProgressiveLayer) {\n          currentProgressiveLayer.__nextIdxNotProg = i;\n          progressiveLayerCount++;\n          currentProgressiveLayer = null;\n        }\n      }\n    }\n\n    if (currentProgressiveLayer) {\n      progressiveLayerCount++;\n      currentProgressiveLayer.__nextIdxNotProg = i;\n    } // 层中的元素数量有发生变化\n\n\n    this.eachBuiltinLayer(function (layer, z) {\n      if (elCountsLastFrame[z] !== layer.elCount) {\n        layer.__dirty = true;\n      }\n    });\n    progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);\n    util.each(progressiveLayers, function (layer, idx) {\n      if (progressiveElCountsLastFrame[idx] !== layer.elCount) {\n        el.__dirty = true;\n      }\n\n      if (layer.__dirty) {\n        layer.__progress = 0;\n      }\n    });\n  },\n\n  /**\n   * 清除hover层外所有内容\n   */\n  clear: function () {\n    this.eachBuiltinLayer(this._clearLayer);\n    return this;\n  },\n  _clearLayer: function (layer) {\n    layer.clear();\n  },\n\n  /**\n   * 修改指定zlevel的绘制参数\n   *\n   * @param {string} zlevel\n   * @param {Object} config 配置对象\n   * @param {string} [config.clearColor=0] 每次清空画布的颜色\n   * @param {string} [config.motionBlur=false] 是否开启动态模糊\n   * @param {number} [config.lastFrameAlpha=0.7]\n   *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   */\n  configLayer: function (zlevel, config) {\n    if (config) {\n      var layerConfig = this._layerConfig;\n\n      if (!layerConfig[zlevel]) {\n        layerConfig[zlevel] = config;\n      } else {\n        util.merge(layerConfig[zlevel], config, true);\n      }\n\n      var layer = this._layers[zlevel];\n\n      if (layer) {\n        util.merge(layer, layerConfig[zlevel], true);\n      }\n    }\n  },\n\n  /**\n   * 删除指定层\n   * @param {number} zlevel 层所在的zlevel\n   */\n  delLayer: function (zlevel) {\n    var layers = this._layers;\n    var zlevelList = this._zlevelList;\n    var layer = layers[zlevel];\n\n    if (!layer) {\n      return;\n    }\n\n    layer.dom.parentNode.removeChild(layer.dom);\n    delete layers[zlevel];\n    zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n  },\n\n  /**\n   * 区域大小变化后重绘\n   */\n  resize: function (width, height) {\n    var domRoot = this._domRoot; // FIXME Why ?\n\n    domRoot.style.display = 'none'; // Save input w/h\n\n    var opts = this._opts;\n    width != null && (opts.width = width);\n    height != null && (opts.height = height);\n    width = this._getSize(0);\n    height = this._getSize(1);\n    domRoot.style.display = ''; // 优化没有实际改变的resize\n\n    if (this._width != width || height != this._height) {\n      domRoot.style.width = width + 'px';\n      domRoot.style.height = height + 'px';\n\n      for (var id in this._layers) {\n        if (this._layers.hasOwnProperty(id)) {\n          this._layers[id].resize(width, height);\n        }\n      }\n\n      util.each(this._progressiveLayers, function (layer) {\n        layer.resize(width, height);\n      });\n      this.refresh(true);\n    }\n\n    this._width = width;\n    this._height = height;\n    return this;\n  },\n\n  /**\n   * 清除单独的一个层\n   * @param {number} zlevel\n   */\n  clearLayer: function (zlevel) {\n    var layer = this._layers[zlevel];\n\n    if (layer) {\n      layer.clear();\n    }\n  },\n\n  /**\n   * 释放\n   */\n  dispose: function () {\n    this.root.innerHTML = '';\n    this.root = this.storage = this._domRoot = this._layers = null;\n  },\n\n  /**\n   * Get canvas which has all thing rendered\n   * @param {Object} opts\n   * @param {string} [opts.backgroundColor]\n   * @param {number} [opts.pixelRatio]\n   */\n  getRenderedCanvas: function (opts) {\n    opts = opts || {};\n\n    if (this._singleCanvas) {\n      return this._layers[0].dom;\n    }\n\n    var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n    imageLayer.initContext();\n    imageLayer.clearColor = opts.backgroundColor;\n    imageLayer.clear();\n    var displayList = this.storage.getDisplayList(true);\n    var scope = {};\n    var zlevel;\n    var self = this;\n\n    function findAndDrawOtherLayer(smaller, larger) {\n      var zlevelList = self._zlevelList;\n\n      if (smaller == null) {\n        smaller = -Infinity;\n      }\n\n      var intermediateLayer;\n\n      for (var i = 0; i < zlevelList.length; i++) {\n        var z = zlevelList[i];\n        var layer = self._layers[z];\n\n        if (!layer.__builtin__ && z > smaller && z < larger) {\n          intermediateLayer = layer;\n          break;\n        }\n      }\n\n      if (intermediateLayer && intermediateLayer.renderToCanvas) {\n        imageLayer.ctx.save();\n        intermediateLayer.renderToCanvas(imageLayer.ctx);\n        imageLayer.ctx.restore();\n      }\n    }\n\n    for (var i = 0; i < displayList.length; i++) {\n      var el = displayList[i];\n\n      if (el.zlevel !== zlevel) {\n        findAndDrawOtherLayer(zlevel, el.zlevel);\n        zlevel = el.zlevel;\n      }\n\n      this._doPaintEl(el, imageLayer, true, scope);\n    }\n\n    findAndDrawOtherLayer(zlevel, Infinity);\n    return imageLayer.dom;\n  },\n\n  /**\n   * 获取绘图区域宽度\n   */\n  getWidth: function () {\n    return this._width;\n  },\n\n  /**\n   * 获取绘图区域高度\n   */\n  getHeight: function () {\n    return this._height;\n  },\n  _getSize: function (whIdx) {\n    var opts = this._opts;\n    var wh = ['width', 'height'][whIdx];\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n    if (opts[wh] != null && opts[wh] !== 'auto') {\n      return parseFloat(opts[wh]);\n    }\n\n    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.\n\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n  },\n  pathToImage: function (path, dpr) {\n    dpr = dpr || this.dpr;\n    var canvas = document.createElement('canvas');\n    var ctx = canvas.getContext('2d');\n    var rect = path.getBoundingRect();\n    var style = path.style;\n    var shadowBlurSize = style.shadowBlur;\n    var shadowOffsetX = style.shadowOffsetX;\n    var shadowOffsetY = style.shadowOffsetY;\n    var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n    var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n    var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n    var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n    var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n    var width = rect.width + leftMargin + rightMargin;\n    var height = rect.height + topMargin + bottomMargin;\n    canvas.width = width * dpr;\n    canvas.height = height * dpr;\n    ctx.scale(dpr, dpr);\n    ctx.clearRect(0, 0, width, height);\n    ctx.dpr = dpr;\n    var pathTransform = {\n      position: path.position,\n      rotation: path.rotation,\n      scale: path.scale\n    };\n    path.position = [leftMargin - rect.x, topMargin - rect.y];\n    path.rotation = 0;\n    path.scale = [1, 1];\n    path.updateTransform();\n\n    if (path) {\n      path.brush(ctx);\n    }\n\n    var ImageShape = Image;\n    var imgShape = new ImageShape({\n      style: {\n        x: 0,\n        y: 0,\n        image: canvas\n      }\n    });\n\n    if (pathTransform.position != null) {\n      imgShape.position = path.position = pathTransform.position;\n    }\n\n    if (pathTransform.rotation != null) {\n      imgShape.rotation = path.rotation = pathTransform.rotation;\n    }\n\n    if (pathTransform.scale != null) {\n      imgShape.scale = path.scale = pathTransform.scale;\n    }\n\n    return imgShape;\n  }\n};\nvar _default = Painter;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1146:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar util = __webpack_require__(1027);\n\nvar _config = __webpack_require__(1059);\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar Style = __webpack_require__(1095);\n\nvar Pattern = __webpack_require__(1096);\n\n/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\nfunction returnFalse() {\n  return false;\n}\n/**\n * 创建dom\n *\n * @inner\n * @param {string} id dom id 待用\n * @param {Painter} painter painter instance\n * @param {number} number\n */\n\n\nfunction createDom(id, painter, dpr) {\n  var newDom = util.createCanvas();\n  var width = painter.getWidth();\n  var height = painter.getHeight();\n  var newDomStyle = newDom.style; // 没append呢，请原谅我这样写，清晰~\n\n  newDomStyle.position = 'absolute';\n  newDomStyle.left = 0;\n  newDomStyle.top = 0;\n  newDomStyle.width = width + 'px';\n  newDomStyle.height = height + 'px';\n  newDom.width = width * dpr;\n  newDom.height = height * dpr; // id不作为索引用，避免可能造成的重名，定义为私有属性\n\n  newDom.setAttribute('data-zr-dom-id', id);\n  return newDom;\n}\n/**\n * @alias module:zrender/Layer\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @param {string} id\n * @param {module:zrender/Painter} painter\n * @param {number} [dpr]\n */\n\n\nvar Layer = function (id, painter, dpr) {\n  var dom;\n  dpr = dpr || devicePixelRatio;\n\n  if (typeof id === 'string') {\n    dom = createDom(id, painter, dpr);\n  } // Not using isDom because in node it will return false\n  else if (util.isObject(id)) {\n      dom = id;\n      id = dom.id;\n    }\n\n  this.id = id;\n  this.dom = dom;\n  var domStyle = dom.style;\n\n  if (domStyle) {\n    // Not in node\n    dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n    domStyle['-webkit-user-select'] = 'none';\n    domStyle['user-select'] = 'none';\n    domStyle['-webkit-touch-callout'] = 'none';\n    domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n    domStyle['padding'] = 0;\n    domStyle['margin'] = 0;\n    domStyle['border-width'] = 0;\n  }\n\n  this.domBack = null;\n  this.ctxBack = null;\n  this.painter = painter;\n  this.config = null; // Configs\n\n  /**\n   * 每次清空画布的颜色\n   * @type {string}\n   * @default 0\n   */\n\n  this.clearColor = 0;\n  /**\n   * 是否开启动态模糊\n   * @type {boolean}\n   * @default false\n   */\n\n  this.motionBlur = false;\n  /**\n   * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   * @type {number}\n   * @default 0.7\n   */\n\n  this.lastFrameAlpha = 0.7;\n  /**\n   * Layer dpr\n   * @type {number}\n   */\n\n  this.dpr = dpr;\n};\n\nLayer.prototype = {\n  constructor: Layer,\n  elCount: 0,\n  __dirty: true,\n  initContext: function () {\n    this.ctx = this.dom.getContext('2d');\n    this.ctx.__currentValues = {};\n    this.ctx.dpr = this.dpr;\n  },\n  createBackBuffer: function () {\n    var dpr = this.dpr;\n    this.domBack = createDom('back-' + this.id, this.painter, dpr);\n    this.ctxBack = this.domBack.getContext('2d');\n    this.ctxBack.__currentValues = {};\n\n    if (dpr != 1) {\n      this.ctxBack.scale(dpr, dpr);\n    }\n  },\n\n  /**\n   * @param  {number} width\n   * @param  {number} height\n   */\n  resize: function (width, height) {\n    var dpr = this.dpr;\n    var dom = this.dom;\n    var domStyle = dom.style;\n    var domBack = this.domBack;\n    domStyle.width = width + 'px';\n    domStyle.height = height + 'px';\n    dom.width = width * dpr;\n    dom.height = height * dpr;\n\n    if (domBack) {\n      domBack.width = width * dpr;\n      domBack.height = height * dpr;\n\n      if (dpr != 1) {\n        this.ctxBack.scale(dpr, dpr);\n      }\n    }\n  },\n\n  /**\n   * 清空该层画布\n   * @param {boolean} clearAll Clear all with out motion blur\n   */\n  clear: function (clearAll) {\n    var dom = this.dom;\n    var ctx = this.ctx;\n    var width = dom.width;\n    var height = dom.height;\n    var clearColor = this.clearColor;\n    var haveMotionBLur = this.motionBlur && !clearAll;\n    var lastFrameAlpha = this.lastFrameAlpha;\n    var dpr = this.dpr;\n\n    if (haveMotionBLur) {\n      if (!this.domBack) {\n        this.createBackBuffer();\n      }\n\n      this.ctxBack.globalCompositeOperation = 'copy';\n      this.ctxBack.drawImage(dom, 0, 0, width / dpr, height / dpr);\n    }\n\n    ctx.clearRect(0, 0, width, height);\n\n    if (clearColor) {\n      var clearColorGradientOrPattern; // Gradient\n\n      if (clearColor.colorStops) {\n        // Cache canvas gradient\n        clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n          x: 0,\n          y: 0,\n          width: width,\n          height: height\n        });\n        clearColor.__canvasGradient = clearColorGradientOrPattern;\n      } // Pattern\n      else if (clearColor.image) {\n          clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n        }\n\n      ctx.save();\n      ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    if (haveMotionBLur) {\n      var domBack = this.domBack;\n      ctx.save();\n      ctx.globalAlpha = lastFrameAlpha;\n      ctx.drawImage(domBack, 0, 0, width, height);\n      ctx.restore();\n    }\n  }\n};\nvar _default = Layer;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1147:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar util = __webpack_require__(1027);\n\nvar _event = __webpack_require__(1047);\n\nvar Dispatcher = _event.Dispatcher;\n\nvar requestAnimationFrame = __webpack_require__(1097);\n\nvar Animator = __webpack_require__(1093);\n\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n/**\n * @typedef {Object} IZRenderStage\n * @property {Function} update\n */\n\n/**\n * @alias module:zrender/animation/Animation\n * @constructor\n * @param {Object} [options]\n * @param {Function} [options.onframe]\n * @param {IZRenderStage} [options.stage]\n * @example\n *     var animation = new Animation();\n *     var obj = {\n *         x: 100,\n *         y: 100\n *     };\n *     animation.animate(node.position)\n *         .when(1000, {\n *             x: 500,\n *             y: 500\n *         })\n *         .when(2000, {\n *             x: 100,\n *             y: 100\n *         })\n *         .start('spline');\n */\nvar Animation = function (options) {\n  options = options || {};\n  this.stage = options.stage || {};\n\n  this.onframe = options.onframe || function () {}; // private properties\n\n\n  this._clips = [];\n  this._running = false;\n  this._time;\n  this._pausedTime;\n  this._pauseStart;\n  this._paused = false;\n  Dispatcher.call(this);\n};\n\nAnimation.prototype = {\n  constructor: Animation,\n\n  /**\n   * 添加 clip\n   * @param {module:zrender/animation/Clip} clip\n   */\n  addClip: function (clip) {\n    this._clips.push(clip);\n  },\n\n  /**\n   * 添加 animator\n   * @param {module:zrender/animation/Animator} animator\n   */\n  addAnimator: function (animator) {\n    animator.animation = this;\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.addClip(clips[i]);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Clip} clip\n   */\n  removeClip: function (clip) {\n    var idx = util.indexOf(this._clips, clip);\n\n    if (idx >= 0) {\n      this._clips.splice(idx, 1);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Animator} animator\n   */\n  removeAnimator: function (animator) {\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.removeClip(clips[i]);\n    }\n\n    animator.animation = null;\n  },\n  _update: function () {\n    var time = new Date().getTime() - this._pausedTime;\n\n    var delta = time - this._time;\n    var clips = this._clips;\n    var len = clips.length;\n    var deferredEvents = [];\n    var deferredClips = [];\n\n    for (var i = 0; i < len; i++) {\n      var clip = clips[i];\n      var e = clip.step(time, delta); // Throw out the events need to be called after\n      // stage.update, like destroy\n\n      if (e) {\n        deferredEvents.push(e);\n        deferredClips.push(clip);\n      }\n    } // Remove the finished clip\n\n\n    for (var i = 0; i < len;) {\n      if (clips[i]._needsRemove) {\n        clips[i] = clips[len - 1];\n        clips.pop();\n        len--;\n      } else {\n        i++;\n      }\n    }\n\n    len = deferredEvents.length;\n\n    for (var i = 0; i < len; i++) {\n      deferredClips[i].fire(deferredEvents[i]);\n    }\n\n    this._time = time;\n    this.onframe(delta);\n    this.trigger('frame', delta);\n\n    if (this.stage.update) {\n      this.stage.update();\n    }\n  },\n  _startLoop: function () {\n    var self = this;\n    this._running = true;\n\n    function step() {\n      if (self._running) {\n        requestAnimationFrame(step);\n        !self._paused && self._update();\n      }\n    }\n\n    requestAnimationFrame(step);\n  },\n\n  /**\n   * 开始运行动画\n   */\n  start: function () {\n    this._time = new Date().getTime();\n    this._pausedTime = 0;\n\n    this._startLoop();\n  },\n\n  /**\n   * 停止运行动画\n   */\n  stop: function () {\n    this._running = false;\n  },\n\n  /**\n   * Pause\n   */\n  pause: function () {\n    if (!this._paused) {\n      this._pauseStart = new Date().getTime();\n      this._paused = true;\n    }\n  },\n\n  /**\n   * Resume\n   */\n  resume: function () {\n    if (this._paused) {\n      this._pausedTime += new Date().getTime() - this._pauseStart;\n      this._paused = false;\n    }\n  },\n\n  /**\n   * 清除所有动画片段\n   */\n  clear: function () {\n    this._clips = [];\n  },\n\n  /**\n   * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n   * @param  {Object} target\n   * @param  {Object} options\n   * @param  {boolean} [options.loop=false] 是否循环播放动画\n   * @param  {Function} [options.getter=null]\n   *         如果指定getter函数，会通过getter函数取属性值\n   * @param  {Function} [options.setter=null]\n   *         如果指定setter函数，会通过setter函数设置属性值\n   * @return {module:zrender/animation/Animation~Animator}\n   */\n  // TODO Gap\n  animate: function (target, options) {\n    options = options || {};\n    var animator = new Animator(target, options.loop, options.getter, options.setter);\n    this.addAnimator(animator);\n    return animator;\n  }\n};\nutil.mixin(Animation, Dispatcher);\nvar _default = Animation;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1148:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _event = __webpack_require__(1047);\n\nvar addEventListener = _event.addEventListener;\nvar removeEventListener = _event.removeEventListener;\nvar normalizeEvent = _event.normalizeEvent;\n\nvar zrUtil = __webpack_require__(1027);\n\nvar Eventful = __webpack_require__(1050);\n\nvar env = __webpack_require__(1035);\n\nvar GestureMgr = __webpack_require__(1149);\n\nvar TOUCH_CLICK_DELAY = 300;\nvar mouseHandlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\nvar touchHandlerNames = ['touchstart', 'touchend', 'touchmove'];\nvar pointerEventNames = {\n  pointerdown: 1,\n  pointerup: 1,\n  pointermove: 1,\n  pointerout: 1\n};\nvar pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n  var nm = name.replace('mouse', 'pointer');\n  return pointerEventNames[nm] ? nm : name;\n});\n\nfunction eventNameFix(name) {\n  return name === 'mousewheel' && env.browser.firefox ? 'DOMMouseScroll' : name;\n}\n\nfunction processGesture(proxy, event, stage) {\n  var gestureMgr = proxy._gestureMgr;\n  stage === 'start' && gestureMgr.clear();\n  var gestureInfo = gestureMgr.recognize(event, proxy.handler.findHover(event.zrX, event.zrY, null).target, proxy.dom);\n  stage === 'end' && gestureMgr.clear(); // Do not do any preventDefault here. Upper application do that if necessary.\n\n  if (gestureInfo) {\n    var type = gestureInfo.type;\n    event.gestureEvent = type;\n    proxy.handler.dispatchToElement({\n      target: gestureInfo.target\n    }, type, gestureInfo.event);\n  }\n} // function onMSGestureChange(proxy, event) {\n//     if (event.translationX || event.translationY) {\n//         // mousemove is carried by MSGesture to reduce the sensitivity.\n//         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n//     }\n//     if (event.scale !== 1) {\n//         event.pinchX = event.offsetX;\n//         event.pinchY = event.offsetY;\n//         event.pinchScale = event.scale;\n//         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n//     }\n// }\n\n/**\n * Prevent mouse event from being dispatched after Touch Events action\n * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n * Result: Blocking Mouse Events for 700ms.\n */\n\n\nfunction setTouchTimer(instance) {\n  instance._touching = true;\n  clearTimeout(instance._touchTimer);\n  instance._touchTimer = setTimeout(function () {\n    instance._touching = false;\n  }, 700);\n}\n\nvar domHandlers = {\n  /**\n   * Mouse move handler\n   * @inner\n   * @param {Event} event\n   */\n  mousemove: function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger('mousemove', event);\n  },\n\n  /**\n   * Mouse out handler\n   * @inner\n   * @param {Event} event\n   */\n  mouseout: function (event) {\n    event = normalizeEvent(this.dom, event);\n    var element = event.toElement || event.relatedTarget;\n\n    if (element != this.dom) {\n      while (element && element.nodeType != 9) {\n        // 忽略包含在root中的dom引起的mouseOut\n        if (element === this.dom) {\n          return;\n        }\n\n        element = element.parentNode;\n      }\n    }\n\n    this.trigger('mouseout', event);\n  },\n\n  /**\n   * Touch开始响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchstart: function (event) {\n    // Default mouse behaviour should not be disabled here.\n    // For example, page may needs to be slided.\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    this._lastTouchMoment = new Date();\n    processGesture(this, event, 'start'); // In touch device, trigger `mousemove`(`mouseover`) should\n    // be triggered, and must before `mousedown` triggered.\n\n    domHandlers.mousemove.call(this, event);\n    domHandlers.mousedown.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch移动响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchmove: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'change'); // Mouse move should always be triggered no matter whether\n    // there is gestrue event, because mouse move and pinch may\n    // be used at the same time.\n\n    domHandlers.mousemove.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch结束响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchend: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'end');\n    domHandlers.mouseup.call(this, event); // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n    // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n    // we can conveniently implement \"hover style\" in both PC and touch device just\n    // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n    // to remove \"hover style\" on an element, without any additional code for\n    // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n    // style\" will remain for user view)\n    // click event should always be triggered no matter whether\n    // there is gestrue event. System click can not be prevented.\n\n    if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n      domHandlers.click.call(this, event);\n    }\n\n    setTouchTimer(this);\n  },\n  pointerdown: function (event) {\n    domHandlers.mousedown.call(this, event); // if (useMSGuesture(this, event)) {\n    //     this._msGesture.addPointer(event.pointerId);\n    // }\n  },\n  pointermove: function (event) {\n    // FIXME\n    // pointermove is so sensitive that it always triggered when\n    // tap(click) on touch screen, which affect some judgement in\n    // upper application. So, we dont support mousemove on MS touch\n    // device yet.\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mousemove.call(this, event);\n    }\n  },\n  pointerup: function (event) {\n    domHandlers.mouseup.call(this, event);\n  },\n  pointerout: function (event) {\n    // pointerout will be triggered when tap on touch screen\n    // (IE11+/Edge on MS Surface) after click event triggered,\n    // which is inconsistent with the mousout behavior we defined\n    // in touchend. So we unify them.\n    // (check domHandlers.touchend for detailed explanation)\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mouseout.call(this, event);\n    }\n  }\n};\n\nfunction isPointerFromTouch(event) {\n  var pointerType = event.pointerType;\n  return pointerType === 'pen' || pointerType === 'touch';\n} // function useMSGuesture(handlerProxy, event) {\n//     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n// }\n// Common handlers\n\n\nzrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  domHandlers[name] = function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger(name, event);\n  };\n});\n/**\n * 为控制类实例初始化dom 事件处理函数\n *\n * @inner\n * @param {module:zrender/Handler} instance 控制类实例\n */\n\nfunction initDomHandler(instance) {\n  zrUtil.each(touchHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(pointerHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(mouseHandlerNames, function (name) {\n    instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n  });\n\n  function makeMouseHandler(fn, instance) {\n    return function () {\n      if (instance._touching) {\n        return;\n      }\n\n      return fn.apply(instance, arguments);\n    };\n  }\n}\n\nfunction HandlerDomProxy(dom) {\n  Eventful.call(this);\n  this.dom = dom;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._touching = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._touchTimer;\n  /**\n   * @private\n   * @type {module:zrender/core/GestureMgr}\n   */\n\n  this._gestureMgr = new GestureMgr();\n  this._handlers = {};\n  initDomHandler(this);\n\n  if (env.pointerEventsSupported) {\n    // Only IE11+/Edge\n    // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n    // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n    // at the same time.\n    // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n    // screen, which do not occurs in pointer event.\n    // So we use pointer event to both detect touch gesture and mouse behavior.\n    mountHandlers(pointerHandlerNames, this); // FIXME\n    // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n    // which does not prevent defuault behavior occasionally (which may cause view port\n    // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n    // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n    // touch screen. And we only support click behavior on MS touch screen now.\n    // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n    // We dont support touch on IE on win7.\n    // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n    // if (typeof MSGesture === 'function') {\n    //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n    //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n    // }\n  } else {\n    if (env.touchEventsSupported) {\n      mountHandlers(touchHandlerNames, this); // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n      // addEventListener(root, 'mouseout', this._mouseoutHandler);\n    } // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n    // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n    // mouse event can not be handle in those devices.\n    // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n    // mouseevent after touch event triggered, see `setTouchTimer`.\n\n\n    mountHandlers(mouseHandlerNames, this);\n  }\n\n  function mountHandlers(handlerNames, instance) {\n    zrUtil.each(handlerNames, function (name) {\n      addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n    }, instance);\n  }\n}\n\nvar handlerDomProxyProto = HandlerDomProxy.prototype;\n\nhandlerDomProxyProto.dispose = function () {\n  var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n  for (var i = 0; i < handlerNames.length; i++) {\n    var name = handlerNames[i];\n    removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n  }\n};\n\nhandlerDomProxyProto.setCursor = function (cursorStyle) {\n  this.dom.style.cursor = cursorStyle || 'default';\n};\n\nzrUtil.mixin(HandlerDomProxy, Eventful);\nvar _default = HandlerDomProxy;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1149:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar eventUtil = __webpack_require__(1047);\n\n/**\n * Only implements needed gestures for mobile.\n */\nvar GestureMgr = function () {\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n  this._track = [];\n};\n\nGestureMgr.prototype = {\n  constructor: GestureMgr,\n  recognize: function (event, target, root) {\n    this._doTrack(event, target, root);\n\n    return this._recognize(event);\n  },\n  clear: function () {\n    this._track.length = 0;\n    return this;\n  },\n  _doTrack: function (event, target, root) {\n    var touches = event.touches;\n\n    if (!touches) {\n      return;\n    }\n\n    var trackItem = {\n      points: [],\n      touches: [],\n      target: target,\n      event: event\n    };\n\n    for (var i = 0, len = touches.length; i < len; i++) {\n      var touch = touches[i];\n      var pos = eventUtil.clientToLocal(root, touch, {});\n      trackItem.points.push([pos.zrX, pos.zrY]);\n      trackItem.touches.push(touch);\n    }\n\n    this._track.push(trackItem);\n  },\n  _recognize: function (event) {\n    for (var eventName in recognizers) {\n      if (recognizers.hasOwnProperty(eventName)) {\n        var gestureInfo = recognizers[eventName](this._track, event);\n\n        if (gestureInfo) {\n          return gestureInfo;\n        }\n      }\n    }\n  }\n};\n\nfunction dist(pointPair) {\n  var dx = pointPair[1][0] - pointPair[0][0];\n  var dy = pointPair[1][1] - pointPair[0][1];\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\nfunction center(pointPair) {\n  return [(pointPair[0][0] + pointPair[1][0]) / 2, (pointPair[0][1] + pointPair[1][1]) / 2];\n}\n\nvar recognizers = {\n  pinch: function (track, event) {\n    var trackLen = track.length;\n\n    if (!trackLen) {\n      return;\n    }\n\n    var pinchEnd = (track[trackLen - 1] || {}).points;\n    var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n    if (pinchPre && pinchPre.length > 1 && pinchEnd && pinchEnd.length > 1) {\n      var pinchScale = dist(pinchEnd) / dist(pinchPre);\n      !isFinite(pinchScale) && (pinchScale = 1);\n      event.pinchScale = pinchScale;\n      var pinchCenter = center(pinchEnd);\n      event.pinchX = pinchCenter[0];\n      event.pinchY = pinchCenter[1];\n      return {\n        type: 'pinch',\n        target: track[0].target,\n        event: event\n      };\n    }\n  } // Only pinch currently.\n\n};\nvar _default = GestureMgr;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1150:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(1032);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(1027);\n\nvar modelUtil = __webpack_require__(1031);\n\nvar Model = __webpack_require__(1038);\n\nvar ComponentModel = __webpack_require__(1040);\n\nvar globalDefault = __webpack_require__(1174);\n\nvar colorPaletteMinin = __webpack_require__(1102);\n\n/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n/**\n * Caution: If the mechanism should be changed some day, these cases\n * should be considered:\n *\n * (1) In `merge option` mode, if using the same option to call `setOption`\n * many times, the result should be the same (try our best to ensure that).\n * (2) In `merge option` mode, if a component has no id/name specified, it\n * will be merged by index, and the result sequence of the components is\n * consistent to the original sequence.\n * (3) `reset` feature (in toolbox). Find detailed info in comments about\n * `mergeOption` in module:echarts/model/OptionManager.\n */\nvar each = zrUtil.each;\nvar filter = zrUtil.filter;\nvar map = zrUtil.map;\nvar isArray = zrUtil.isArray;\nvar indexOf = zrUtil.indexOf;\nvar isObject = zrUtil.isObject;\nvar OPTION_INNER_KEY = '\\0_ec_inner';\n/**\n * @alias module:echarts/model/Global\n *\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {Object} theme\n */\n\nvar GlobalModel = Model.extend({\n  constructor: GlobalModel,\n  init: function (option, parentModel, theme, optionManager) {\n    theme = theme || {};\n    this.option = null; // Mark as not initialized.\n\n    /**\n     * @type {module:echarts/model/Model}\n     * @private\n     */\n\n    this._theme = new Model(theme);\n    /**\n     * @type {module:echarts/model/OptionManager}\n     */\n\n    this._optionManager = optionManager;\n  },\n  setOption: function (option, optionPreprocessorFuncs) {\n    zrUtil.assert(!(OPTION_INNER_KEY in option), 'please use chart.getOption()');\n\n    this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n    this.resetOption(null);\n  },\n\n  /**\n   * @param {string} type null/undefined: reset all.\n   *                      'recreate': force recreate all.\n   *                      'timeline': only reset timeline option\n   *                      'media': only reset media query option\n   * @return {boolean} Whether option changed.\n   */\n  resetOption: function (type) {\n    var optionChanged = false;\n    var optionManager = this._optionManager;\n\n    if (!type || type === 'recreate') {\n      var baseOption = optionManager.mountOption(type === 'recreate');\n\n      if (!this.option || type === 'recreate') {\n        initBase.call(this, baseOption);\n      } else {\n        this.restoreData();\n        this.mergeOption(baseOption);\n      }\n\n      optionChanged = true;\n    }\n\n    if (type === 'timeline' || type === 'media') {\n      this.restoreData();\n    }\n\n    if (!type || type === 'recreate' || type === 'timeline') {\n      var timelineOption = optionManager.getTimelineOption(this);\n      timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n    }\n\n    if (!type || type === 'recreate' || type === 'media') {\n      var mediaOptions = optionManager.getMediaOption(this, this._api);\n\n      if (mediaOptions.length) {\n        each(mediaOptions, function (mediaOption) {\n          this.mergeOption(mediaOption, optionChanged = true);\n        }, this);\n      }\n    }\n\n    return optionChanged;\n  },\n\n  /**\n   * @protected\n   */\n  mergeOption: function (newOption) {\n    var option = this.option;\n    var componentsMap = this._componentsMap;\n    var newCptTypes = []; // 如果不存在对应的 component model 则直接 merge\n\n    each(newOption, function (componentOption, mainType) {\n      if (componentOption == null) {\n        return;\n      }\n\n      if (!ComponentModel.hasClass(mainType)) {\n        option[mainType] = option[mainType] == null ? zrUtil.clone(componentOption) : zrUtil.merge(option[mainType], componentOption, true);\n      } else {\n        newCptTypes.push(mainType);\n      }\n    }); // FIXME OPTION 同步是否要改回原来的\n\n    ComponentModel.topologicalTravel(newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this);\n    this._seriesIndices = this._seriesIndices || [];\n\n    function visitComponent(mainType, dependencies) {\n      var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n      var mapResult = modelUtil.mappingToExists(componentsMap.get(mainType), newCptOptionList);\n      modelUtil.makeIdAndName(mapResult); // Set mainType and complete subType.\n\n      each(mapResult, function (item, index) {\n        var opt = item.option;\n\n        if (isObject(opt)) {\n          item.keyInfo.mainType = mainType;\n          item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n        }\n      });\n      var dependentModels = getComponentsByTypes(componentsMap, dependencies);\n      option[mainType] = [];\n      componentsMap.set(mainType, []);\n      each(mapResult, function (resultItem, index) {\n        var componentModel = resultItem.exist;\n        var newCptOption = resultItem.option;\n        zrUtil.assert(isObject(newCptOption) || componentModel, 'Empty component definition'); // Consider where is no new option and should be merged using {},\n        // see removeEdgeAndAdd in topologicalTravel and\n        // ComponentModel.getAllClassMainTypes.\n\n        if (!newCptOption) {\n          componentModel.mergeOption({}, this);\n          componentModel.optionUpdated({}, false);\n        } else {\n          var ComponentModelClass = ComponentModel.getClass(mainType, resultItem.keyInfo.subType, true);\n\n          if (componentModel && componentModel instanceof ComponentModelClass) {\n            componentModel.name = resultItem.keyInfo.name;\n            componentModel.mergeOption(newCptOption, this);\n            componentModel.optionUpdated(newCptOption, false);\n          } else {\n            // PENDING Global as parent ?\n            var extraOpt = zrUtil.extend({\n              dependentModels: dependentModels,\n              componentIndex: index\n            }, resultItem.keyInfo);\n            componentModel = new ComponentModelClass(newCptOption, this, this, extraOpt);\n            zrUtil.extend(componentModel, extraOpt);\n            componentModel.init(newCptOption, this, this, extraOpt); // Call optionUpdated after init.\n            // newCptOption has been used as componentModel.option\n            // and may be merged with theme and default, so pass null\n            // to avoid confusion.\n\n            componentModel.optionUpdated(null, true);\n          }\n        }\n\n        componentsMap.get(mainType)[index] = componentModel;\n        option[mainType][index] = componentModel.option;\n      }, this); // Backup series for filtering.\n\n      if (mainType === 'series') {\n        this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n      }\n    }\n  },\n\n  /**\n   * Get option for output (cloned option and inner info removed)\n   * @public\n   * @return {Object}\n   */\n  getOption: function () {\n    var option = zrUtil.clone(this.option);\n    each(option, function (opts, mainType) {\n      if (ComponentModel.hasClass(mainType)) {\n        var opts = modelUtil.normalizeToArray(opts);\n\n        for (var i = opts.length - 1; i >= 0; i--) {\n          // Remove options with inner id.\n          if (modelUtil.isIdInner(opts[i])) {\n            opts.splice(i, 1);\n          }\n        }\n\n        option[mainType] = opts;\n      }\n    });\n    delete option[OPTION_INNER_KEY];\n    return option;\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getTheme: function () {\n    return this._theme;\n  },\n\n  /**\n   * @param {string} mainType\n   * @param {number} [idx=0]\n   * @return {module:echarts/model/Component}\n   */\n  getComponent: function (mainType, idx) {\n    var list = this._componentsMap.get(mainType);\n\n    if (list) {\n      return list[idx || 0];\n    }\n  },\n\n  /**\n   * If none of index and id and name used, return all components with mainType.\n   * @param {Object} condition\n   * @param {string} condition.mainType\n   * @param {string} [condition.subType] If ignore, only query by mainType\n   * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  queryComponents: function (condition) {\n    var mainType = condition.mainType;\n\n    if (!mainType) {\n      return [];\n    }\n\n    var index = condition.index;\n    var id = condition.id;\n    var name = condition.name;\n\n    var cpts = this._componentsMap.get(mainType);\n\n    if (!cpts || !cpts.length) {\n      return [];\n    }\n\n    var result;\n\n    if (index != null) {\n      if (!isArray(index)) {\n        index = [index];\n      }\n\n      result = filter(map(index, function (idx) {\n        return cpts[idx];\n      }), function (val) {\n        return !!val;\n      });\n    } else if (id != null) {\n      var isIdArray = isArray(id);\n      result = filter(cpts, function (cpt) {\n        return isIdArray && indexOf(id, cpt.id) >= 0 || !isIdArray && cpt.id === id;\n      });\n    } else if (name != null) {\n      var isNameArray = isArray(name);\n      result = filter(cpts, function (cpt) {\n        return isNameArray && indexOf(name, cpt.name) >= 0 || !isNameArray && cpt.name === name;\n      });\n    } else {\n      // Return all components with mainType\n      result = cpts.slice();\n    }\n\n    return filterBySubType(result, condition);\n  },\n\n  /**\n   * The interface is different from queryComponents,\n   * which is convenient for inner usage.\n   *\n   * @usage\n   * var result = findComponents(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series'},\n   *     function (model, index) {...}\n   * );\n   * // result like [component0, componnet1, ...]\n   *\n   * @param {Object} condition\n   * @param {string} condition.mainType Mandatory.\n   * @param {string} [condition.subType] Optional.\n   * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n   *        where xxx is mainType.\n   *        If query attribute is null/undefined or has no index/id/name,\n   *        do not filtering by query conditions, which is convenient for\n   *        no-payload situations or when target of action is global.\n   * @param {Function} [condition.filter] parameter: component, return boolean.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  findComponents: function (condition) {\n    var query = condition.query;\n    var mainType = condition.mainType;\n    var queryCond = getQueryCond(query);\n    var result = queryCond ? this.queryComponents(queryCond) : this._componentsMap.get(mainType);\n    return doFilter(filterBySubType(result, condition));\n\n    function getQueryCond(q) {\n      var indexAttr = mainType + 'Index';\n      var idAttr = mainType + 'Id';\n      var nameAttr = mainType + 'Name';\n      return q && (q[indexAttr] != null || q[idAttr] != null || q[nameAttr] != null) ? {\n        mainType: mainType,\n        // subType will be filtered finally.\n        index: q[indexAttr],\n        id: q[idAttr],\n        name: q[nameAttr]\n      } : null;\n    }\n\n    function doFilter(res) {\n      return condition.filter ? filter(res, condition.filter) : res;\n    }\n  },\n\n  /**\n   * @usage\n   * eachComponent('legend', function (legendModel, index) {\n   *     ...\n   * });\n   * eachComponent(function (componentType, model, index) {\n   *     // componentType does not include subType\n   *     // (componentType is 'xxx' but not 'xxx.aa')\n   * });\n   * eachComponent(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n   *     function (model, index) {...}\n   * );\n   * eachComponent(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n   *     function (model, index) {...}\n   * );\n   *\n   * @param {string|Object=} mainType When mainType is object, the definition\n   *                                  is the same as the method 'findComponents'.\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachComponent: function (mainType, cb, context) {\n    var componentsMap = this._componentsMap;\n\n    if (typeof mainType === 'function') {\n      context = cb;\n      cb = mainType;\n      componentsMap.each(function (components, componentType) {\n        each(components, function (component, index) {\n          cb.call(context, componentType, component, index);\n        });\n      });\n    } else if (zrUtil.isString(mainType)) {\n      each(componentsMap.get(mainType), cb, context);\n    } else if (isObject(mainType)) {\n      var queryResult = this.findComponents(mainType);\n      each(queryResult, cb, context);\n    }\n  },\n\n  /**\n   * @param {string} name\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByName: function (name) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.name === name;\n    });\n  },\n\n  /**\n   * @param {number} seriesIndex\n   * @return {module:echarts/model/Series}\n   */\n  getSeriesByIndex: function (seriesIndex) {\n    return this._componentsMap.get('series')[seriesIndex];\n  },\n\n  /**\n   * @param {string} subType\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByType: function (subType) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.subType === subType;\n    });\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeries: function () {\n    return this._componentsMap.get('series').slice();\n  },\n\n  /**\n   * After filtering, series may be different\n   * frome raw series.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      cb.call(context, series, rawSeriesIndex);\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeries: function (cb, context) {\n    each(this._componentsMap.get('series'), cb, context);\n  },\n\n  /**\n   * After filtering, series may be different.\n   * frome raw series.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeriesByType: function (subType, cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      if (series.subType === subType) {\n        cb.call(context, series, rawSeriesIndex);\n      }\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered of given type.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeriesByType: function (subType, cb, context) {\n    return each(this.getSeriesByType(subType), cb, context);\n  },\n\n  /**\n   * @param {module:echarts/model/Series} seriesModel\n   */\n  isSeriesFiltered: function (seriesModel) {\n    assertSeriesInitialized(this);\n    return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getCurrentSeriesIndices: function () {\n    return (this._seriesIndices || []).slice();\n  },\n\n  /**\n   * @param {Function} cb\n   * @param {*} context\n   */\n  filterSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    var filteredSeries = filter(this._componentsMap.get('series'), cb, context);\n    this._seriesIndices = createSeriesIndices(filteredSeries);\n  },\n  restoreData: function () {\n    var componentsMap = this._componentsMap;\n    this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n    var componentTypes = [];\n    componentsMap.each(function (components, componentType) {\n      componentTypes.push(componentType);\n    });\n    ComponentModel.topologicalTravel(componentTypes, ComponentModel.getAllClassMainTypes(), function (componentType, dependencies) {\n      each(componentsMap.get(componentType), function (component) {\n        component.restoreData();\n      });\n    });\n  }\n});\n/**\n * @inner\n */\n\nfunction mergeTheme(option, theme) {\n  zrUtil.each(theme, function (themeItem, name) {\n    // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n    if (!ComponentModel.hasClass(name)) {\n      if (typeof themeItem === 'object') {\n        option[name] = !option[name] ? zrUtil.clone(themeItem) : zrUtil.merge(option[name], themeItem, false);\n      } else {\n        if (option[name] == null) {\n          option[name] = themeItem;\n        }\n      }\n    }\n  });\n}\n\nfunction initBase(baseOption) {\n  baseOption = baseOption; // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n  // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n\n  this.option = {};\n  this.option[OPTION_INNER_KEY] = 1;\n  /**\n   * Init with series: [], in case of calling findSeries method\n   * before series initialized.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @private\n   */\n\n  this._componentsMap = zrUtil.createHashMap({\n    series: []\n  });\n  /**\n   * Mapping between filtered series list and raw series list.\n   * key: filtered series indices, value: raw series indices.\n   * @type {Array.<nubmer>}\n   * @private\n   */\n\n  this._seriesIndices = null;\n  mergeTheme(baseOption, this._theme.option); // TODO Needs clone when merging to the unexisted property\n\n  zrUtil.merge(baseOption, globalDefault, false);\n  this.mergeOption(baseOption);\n}\n/**\n * @inner\n * @param {Array.<string>|string} types model types\n * @return {Object} key: {string} type, value: {Array.<Object>} models\n */\n\n\nfunction getComponentsByTypes(componentsMap, types) {\n  if (!zrUtil.isArray(types)) {\n    types = types ? [types] : [];\n  }\n\n  var ret = {};\n  each(types, function (type) {\n    ret[type] = (componentsMap.get(type) || []).slice();\n  });\n  return ret;\n}\n/**\n * @inner\n */\n\n\nfunction determineSubType(mainType, newCptOption, existComponent) {\n  var subType = newCptOption.type ? newCptOption.type : existComponent ? existComponent.subType // Use determineSubType only when there is no existComponent.\n  : ComponentModel.determineSubType(mainType, newCptOption); // tooltip, markline, markpoint may always has no subType\n\n  return subType;\n}\n/**\n * @inner\n */\n\n\nfunction createSeriesIndices(seriesModels) {\n  return map(seriesModels, function (series) {\n    return series.componentIndex;\n  }) || [];\n}\n/**\n * @inner\n */\n\n\nfunction filterBySubType(components, condition) {\n  // Using hasOwnProperty for restrict. Consider\n  // subType is undefined in user payload.\n  return condition.hasOwnProperty('subType') ? filter(components, function (cpt) {\n    return cpt.subType === condition.subType;\n  }) : components;\n}\n/**\n * @inner\n */\n\n\nfunction assertSeriesInitialized(ecModel) {}\n\nzrUtil.mixin(GlobalModel, colorPaletteMinin);\nvar _default = GlobalModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1151:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar makeStyleMapper = __webpack_require__(1060);\n\nvar getLineStyle = makeStyleMapper([['lineWidth', 'width'], ['stroke', 'color'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\nvar _default = {\n  getLineStyle: function (excludes) {\n    var style = getLineStyle(this, excludes);\n    var lineDash = this.getLineDash(style.lineWidth);\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getLineDash: function (lineWidth) {\n    if (lineWidth == null) {\n      lineWidth = 1;\n    }\n\n    var lineType = this.get('type');\n    var dotSize = Math.max(lineWidth, 2);\n    var dashSize = lineWidth * 4;\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize];\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1152:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar makeStyleMapper = __webpack_require__(1060);\n\nvar getAreaStyle = makeStyleMapper([['fill', 'color'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['opacity'], ['shadowColor']]);\nvar _default = {\n  getAreaStyle: function (excludes, includes) {\n    return getAreaStyle(this, excludes, includes);\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1153:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar textContain = __webpack_require__(1042);\n\nvar graphicUtil = __webpack_require__(1029);\n\nvar PATH_COLOR = ['textStyle', 'color'];\nvar _default = {\n  /**\n   * Get color property or get color from option.textStyle.color\n   * @param {boolean} [isEmphasis]\n   * @return {string}\n   */\n  getTextColor: function (isEmphasis) {\n    var ecModel = this.ecModel;\n    return this.getShallow('color') || (!isEmphasis && ecModel ? ecModel.get(PATH_COLOR) : null);\n  },\n\n  /**\n   * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n   * @return {string}\n   */\n  getFont: function () {\n    return graphicUtil.getFont({\n      fontStyle: this.getShallow('fontStyle'),\n      fontWeight: this.getShallow('fontWeight'),\n      fontSize: this.getShallow('fontSize'),\n      fontFamily: this.getShallow('fontFamily')\n    }, this.ecModel);\n  },\n  getTextRect: function (text) {\n    return textContain.getBoundingRect(text, this.getFont(), this.getShallow('align'), this.getShallow('verticalAlign') || this.getShallow('baseline'), this.getShallow('padding'), this.getShallow('rich'), this.getShallow('truncateText'));\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1154:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(1037);\n\nvar PathProxy = __webpack_require__(1056);\n\nvar transformPath = __webpack_require__(1158);\n\n// command chars\nvar cc = ['m', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z', 'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'];\nvar mathSqrt = Math.sqrt;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI = Math.PI;\n\nvar vMag = function (v) {\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n};\n\nvar vRatio = function (u, v) {\n  return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n};\n\nvar vAngle = function (u, v) {\n  return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n};\n\nfunction processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n  var psi = psiDeg * (PI / 180.0);\n  var xp = mathCos(psi) * (x1 - x2) / 2.0 + mathSin(psi) * (y1 - y2) / 2.0;\n  var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0 + mathCos(psi) * (y1 - y2) / 2.0;\n  var lambda = xp * xp / (rx * rx) + yp * yp / (ry * ry);\n\n  if (lambda > 1) {\n    rx *= mathSqrt(lambda);\n    ry *= mathSqrt(lambda);\n  }\n\n  var f = (fa === fs ? -1 : 1) * mathSqrt((rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) / (rx * rx * (yp * yp) + ry * ry * (xp * xp))) || 0;\n  var cxp = f * rx * yp / ry;\n  var cyp = f * -ry * xp / rx;\n  var cx = (x1 + x2) / 2.0 + mathCos(psi) * cxp - mathSin(psi) * cyp;\n  var cy = (y1 + y2) / 2.0 + mathSin(psi) * cxp + mathCos(psi) * cyp;\n  var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n  var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n  var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n  var dTheta = vAngle(u, v);\n\n  if (vRatio(u, v) <= -1) {\n    dTheta = PI;\n  }\n\n  if (vRatio(u, v) >= 1) {\n    dTheta = 0;\n  }\n\n  if (fs === 0 && dTheta > 0) {\n    dTheta = dTheta - 2 * PI;\n  }\n\n  if (fs === 1 && dTheta < 0) {\n    dTheta = dTheta + 2 * PI;\n  }\n\n  path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n}\n\nfunction createPathProxyFromString(data) {\n  if (!data) {\n    return [];\n  } // command string\n\n\n  var cs = data.replace(/-/g, ' -').replace(/  /g, ' ').replace(/ /g, ',').replace(/,,/g, ',');\n  var n; // create pipes so that we can split the data\n\n  for (n = 0; n < cc.length; n++) {\n    cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n  } // create array\n\n\n  var arr = cs.split('|'); // init context point\n\n  var cpx = 0;\n  var cpy = 0;\n  var path = new PathProxy();\n  var CMD = PathProxy.CMD;\n  var prevCmd;\n\n  for (n = 1; n < arr.length; n++) {\n    var str = arr[n];\n    var c = str.charAt(0);\n    var off = 0;\n    var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n    var cmd;\n\n    if (p.length > 0 && p[0] === '') {\n      p.shift();\n    }\n\n    for (var i = 0; i < p.length; i++) {\n      p[i] = parseFloat(p[i]);\n    }\n\n    while (off < p.length && !isNaN(p[off])) {\n      if (isNaN(p[0])) {\n        break;\n      }\n\n      var ctlPtx;\n      var ctlPty;\n      var rx;\n      var ry;\n      var psi;\n      var fa;\n      var fs;\n      var x1 = cpx;\n      var y1 = cpy; // convert l, H, h, V, and v to L\n\n      switch (c) {\n        case 'l':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'L':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'm':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'l';\n          break;\n\n        case 'M':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'L';\n          break;\n\n        case 'h':\n          cpx += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'H':\n          cpx = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'v':\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'V':\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'C':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]);\n          cpx = p[off - 2];\n          cpy = p[off - 1];\n          break;\n\n        case 'c':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy);\n          cpx += p[off - 2];\n          cpy += p[off - 1];\n          break;\n\n        case 'S':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 's':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = cpx + p[off++];\n          y1 = cpy + p[off++];\n          cpx += p[off++];\n          cpy += p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 'Q':\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'q':\n          x1 = p[off++] + cpx;\n          y1 = p[off++] + cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'T':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 't':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 'A':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n\n        case 'a':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n      }\n    }\n\n    if (c === 'z' || c === 'Z') {\n      cmd = CMD.Z;\n      path.addData(cmd);\n    }\n\n    prevCmd = cmd;\n  }\n\n  path.toStatic();\n  return path;\n} // TODO Optimize double memory cost problem\n\n\nfunction createPathOptions(str, opts) {\n  var pathProxy = createPathProxyFromString(str);\n  opts = opts || {};\n\n  opts.buildPath = function (path) {\n    if (path.setData) {\n      path.setData(pathProxy.data); // Svg and vml renderer don't have context\n\n      var ctx = path.getContext();\n\n      if (ctx) {\n        path.rebuildPath(ctx);\n      }\n    } else {\n      var ctx = path;\n      pathProxy.rebuildPath(ctx);\n    }\n  };\n\n  opts.applyTransform = function (m) {\n    transformPath(pathProxy, m);\n    this.dirty(true);\n  };\n\n  return opts;\n}\n/**\n * Create a Path object from path string data\n * http://www.w3.org/TR/SVG/paths.html#PathData\n * @param  {Object} opts Other options\n */\n\n\nfunction createFromString(str, opts) {\n  return new Path(createPathOptions(str, opts));\n}\n/**\n * Create a Path class from path string data\n * @param  {string} str\n * @param  {Object} opts Other options\n */\n\n\nfunction extendFromString(str, opts) {\n  return Path.extend(createPathOptions(str, opts));\n}\n/**\n * Merge multiple paths\n */\n// TODO Apply transform\n// TODO stroke dash\n// TODO Optimize double memory cost problem\n\n\nfunction mergePath(pathEls, opts) {\n  var pathList = [];\n  var len = pathEls.length;\n\n  for (var i = 0; i < len; i++) {\n    var pathEl = pathEls[i];\n\n    if (!pathEl.path) {\n      pathEl.createPathProxy();\n    }\n\n    if (pathEl.__dirtyPath) {\n      pathEl.buildPath(pathEl.path, pathEl.shape, true);\n    }\n\n    pathList.push(pathEl.path);\n  }\n\n  var pathBundle = new Path(opts); // Need path proxy.\n\n  pathBundle.createPathProxy();\n\n  pathBundle.buildPath = function (path) {\n    path.appendPath(pathList); // Svg and vml renderer don't have context\n\n    var ctx = path.getContext();\n\n    if (ctx) {\n      path.rebuildPath(ctx);\n    }\n  };\n\n  return pathBundle;\n}\n\nexports.createFromString = createFromString;\nexports.extendFromString = extendFromString;\nexports.mergePath = mergePath;\n\n/***/ }),\n\n/***/ 1155:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar PathProxy = __webpack_require__(1056);\n\nvar line = __webpack_require__(1121);\n\nvar cubic = __webpack_require__(1156);\n\nvar quadratic = __webpack_require__(1122);\n\nvar arc = __webpack_require__(1157);\n\nvar _util = __webpack_require__(1099);\n\nvar normalizeRadian = _util.normalizeRadian;\n\nvar curve = __webpack_require__(1048);\n\nvar windingLine = __webpack_require__(1100);\n\nvar CMD = PathProxy.CMD;\nvar PI2 = Math.PI * 2;\nvar EPSILON = 1e-4;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n} // 临时数组\n\n\nvar roots = [-1, -1, -1];\nvar extrema = [-1, -1];\n\nfunction swapExtrema() {\n  var tmp = extrema[0];\n  extrema[0] = extrema[1];\n  extrema[1] = tmp;\n}\n\nfunction windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 && y > y3 || y < y0 && y < y1 && y < y2 && y < y3) {\n    return 0;\n  }\n\n  var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var w = 0;\n    var nExtrema = -1;\n    var y0_, y1_;\n\n    for (var i = 0; i < nRoots; i++) {\n      var t = roots[i]; // Avoid winding error when intersection point is the connect point of two line of polygon\n\n      var unit = t === 0 || t === 1 ? 0.5 : 1;\n      var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n\n      if (x_ < x) {\n        // Quick reject\n        continue;\n      }\n\n      if (nExtrema < 0) {\n        nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n\n        if (extrema[1] < extrema[0] && nExtrema > 1) {\n          swapExtrema();\n        }\n\n        y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n\n        if (nExtrema > 1) {\n          y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n        }\n      }\n\n      if (nExtrema == 2) {\n        // 分成三段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else if (t < extrema[1]) {\n          w += y1_ < y0_ ? unit : -unit;\n        } else {\n          w += y3 < y1_ ? unit : -unit;\n        }\n      } else {\n        // 分成两段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else {\n          w += y3 < y0_ ? unit : -unit;\n        }\n      }\n    }\n\n    return w;\n  }\n}\n\nfunction windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 || y < y0 && y < y1 && y < y2) {\n    return 0;\n  }\n\n  var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var t = curve.quadraticExtremum(y0, y1, y2);\n\n    if (t >= 0 && t <= 1) {\n      var w = 0;\n      var y_ = curve.quadraticAt(y0, y1, y2, t);\n\n      for (var i = 0; i < nRoots; i++) {\n        // Remove one endpoint.\n        var unit = roots[i] === 0 || roots[i] === 1 ? 0.5 : 1;\n        var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n\n        if (x_ < x) {\n          // Quick reject\n          continue;\n        }\n\n        if (roots[i] < t) {\n          w += y_ < y0 ? unit : -unit;\n        } else {\n          w += y2 < y_ ? unit : -unit;\n        }\n      }\n\n      return w;\n    } else {\n      // Remove one endpoint.\n      var unit = roots[0] === 0 || roots[0] === 1 ? 0.5 : 1;\n      var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n\n      if (x_ < x) {\n        // Quick reject\n        return 0;\n      }\n\n      return y2 < y0 ? unit : -unit;\n    }\n  }\n} // TODO\n// Arc 旋转\n\n\nfunction windingArc(cx, cy, r, startAngle, endAngle, anticlockwise, x, y) {\n  y -= cy;\n\n  if (y > r || y < -r) {\n    return 0;\n  }\n\n  var tmp = Math.sqrt(r * r - y * y);\n  roots[0] = -tmp;\n  roots[1] = tmp;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff < 1e-4) {\n    return 0;\n  }\n\n  if (diff % PI2 < 1e-4) {\n    // Is a circle\n    startAngle = 0;\n    endAngle = PI2;\n    var dir = anticlockwise ? 1 : -1;\n\n    if (x >= roots[0] + cx && x <= roots[1] + cx) {\n      return dir;\n    } else {\n      return 0;\n    }\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var w = 0;\n\n  for (var i = 0; i < 2; i++) {\n    var x_ = roots[i];\n\n    if (x_ + cx > x) {\n      var angle = Math.atan2(y, x_);\n      var dir = anticlockwise ? 1 : -1;\n\n      if (angle < 0) {\n        angle = PI2 + angle;\n      }\n\n      if (angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle) {\n        if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n          dir = -dir;\n        }\n\n        w += dir;\n      }\n    }\n  }\n\n  return w;\n}\n\nfunction containPath(data, lineWidth, isStroke, x, y) {\n  var w = 0;\n  var xi = 0;\n  var yi = 0;\n  var x0 = 0;\n  var y0 = 0;\n\n  for (var i = 0; i < data.length;) {\n    var cmd = data[i++]; // Begin a new subpath\n\n    if (cmd === CMD.M && i > 1) {\n      // Close previous subpath\n      if (!isStroke) {\n        w += windingLine(xi, yi, x0, y0, x, y);\n      } // 如果被任何一个 subpath 包含\n      // if (w !== 0) {\n      //     return true;\n      // }\n\n    }\n\n    if (i == 1) {\n      // 如果第一个命令是 L, C, Q\n      // 则 previous point 同绘制命令的第一个 point\n      //\n      // 第一个命令为 Arc 的情况下会在后面特殊处理\n      xi = data[i];\n      yi = data[i + 1];\n      x0 = xi;\n      y0 = yi;\n    }\n\n    switch (cmd) {\n      case CMD.M:\n        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n        // 在 closePath 的时候使用\n        x0 = data[i++];\n        y0 = data[i++];\n        xi = x0;\n        yi = y0;\n        break;\n\n      case CMD.L:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n          w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.C:\n        if (isStroke) {\n          if (cubic.containStroke(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.Q:\n        if (isStroke) {\n          if (quadratic.containStroke(xi, yi, data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.A:\n        // TODO Arc 判断的开销比较大\n        var cx = data[i++];\n        var cy = data[i++];\n        var rx = data[i++];\n        var ry = data[i++];\n        var theta = data[i++];\n        var dTheta = data[i++]; // TODO Arc 旋转\n\n        var psi = data[i++];\n        var anticlockwise = 1 - data[i++];\n        var x1 = Math.cos(theta) * rx + cx;\n        var y1 = Math.sin(theta) * ry + cy; // 不是直接使用 arc 命令\n\n        if (i > 1) {\n          w += windingLine(xi, yi, x1, y1, x, y);\n        } else {\n          // 第一个命令起点还未定义\n          x0 = x1;\n          y0 = y1;\n        } // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n\n\n        var _x = (x - cx) * ry / rx + cx;\n\n        if (isStroke) {\n          if (arc.containStroke(cx, cy, ry, theta, theta + dTheta, anticlockwise, lineWidth, _x, y)) {\n            return true;\n          }\n        } else {\n          w += windingArc(cx, cy, ry, theta, theta + dTheta, anticlockwise, _x, y);\n        }\n\n        xi = Math.cos(theta + dTheta) * rx + cx;\n        yi = Math.sin(theta + dTheta) * ry + cy;\n        break;\n\n      case CMD.R:\n        x0 = xi = data[i++];\n        y0 = yi = data[i++];\n        var width = data[i++];\n        var height = data[i++];\n        var x1 = x0 + width;\n        var y1 = y0 + height;\n\n        if (isStroke) {\n          if (line.containStroke(x0, y0, x1, y0, lineWidth, x, y) || line.containStroke(x1, y0, x1, y1, lineWidth, x, y) || line.containStroke(x1, y1, x0, y1, lineWidth, x, y) || line.containStroke(x0, y1, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // FIXME Clockwise ?\n          w += windingLine(x1, y0, x1, y1, x, y);\n          w += windingLine(x0, y1, x0, y0, x, y);\n        }\n\n        break;\n\n      case CMD.Z:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // Close a subpath\n          w += windingLine(xi, yi, x0, y0, x, y); // 如果被任何一个 subpath 包含\n          // FIXME subpaths may overlap\n          // if (w !== 0) {\n          //     return true;\n          // }\n        }\n\n        xi = x0;\n        yi = y0;\n        break;\n    }\n  }\n\n  if (!isStroke && !isAroundEqual(yi, y0)) {\n    w += windingLine(xi, yi, x0, y0, x, y) || 0;\n  }\n\n  return w !== 0;\n}\n\nfunction contain(pathData, x, y) {\n  return containPath(pathData, 0, false, x, y);\n}\n\nfunction containStroke(pathData, lineWidth, x, y) {\n  return containPath(pathData, lineWidth, true, x, y);\n}\n\nexports.contain = contain;\nexports.containStroke = containStroke;\n\n/***/ }),\n\n/***/ 1156:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar curve = __webpack_require__(1048);\n\n/**\n * 三次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  x3\n * @param  {number}  y3\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l) {\n    return false;\n  }\n\n  var d = curve.cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n/***/ }),\n\n/***/ 1157:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(1099);\n\nvar normalizeRadian = _util.normalizeRadian;\nvar PI2 = Math.PI * 2;\n/**\n * 圆弧描边包含判断\n * @param  {number}  cx\n * @param  {number}  cy\n * @param  {number}  r\n * @param  {number}  startAngle\n * @param  {number}  endAngle\n * @param  {boolean}  anticlockwise\n * @param  {number} lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {Boolean}\n */\n\nfunction containStroke(cx, cy, r, startAngle, endAngle, anticlockwise, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  x -= cx;\n  y -= cy;\n  var d = Math.sqrt(x * x + y * y);\n\n  if (d - _l > r || d + _l < r) {\n    return false;\n  }\n\n  if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n    // Is a circle\n    return true;\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var angle = Math.atan2(y, x);\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle;\n}\n\nexports.containStroke = containStroke;\n\n/***/ }),\n\n/***/ 1158:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar PathProxy = __webpack_require__(1056);\n\nvar _vector = __webpack_require__(1033);\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar CMD = PathProxy.CMD;\nvar points = [[], [], []];\nvar mathSqrt = Math.sqrt;\nvar mathAtan2 = Math.atan2;\n\nfunction _default(path, m) {\n  var data = path.data;\n  var cmd;\n  var nPoint;\n  var i;\n  var j;\n  var k;\n  var p;\n  var M = CMD.M;\n  var C = CMD.C;\n  var L = CMD.L;\n  var R = CMD.R;\n  var A = CMD.A;\n  var Q = CMD.Q;\n\n  for (i = 0, j = 0; i < data.length;) {\n    cmd = data[i++];\n    j = i;\n    nPoint = 0;\n\n    switch (cmd) {\n      case M:\n        nPoint = 1;\n        break;\n\n      case L:\n        nPoint = 1;\n        break;\n\n      case C:\n        nPoint = 3;\n        break;\n\n      case Q:\n        nPoint = 2;\n        break;\n\n      case A:\n        var x = m[4];\n        var y = m[5];\n        var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n        var angle = mathAtan2(-m[1] / sy, m[0] / sx); // cx\n\n        data[i] *= sx;\n        data[i++] += x; // cy\n\n        data[i] *= sy;\n        data[i++] += y; // Scale rx and ry\n        // FIXME Assume psi is 0 here\n\n        data[i++] *= sx;\n        data[i++] *= sy; // Start angle\n\n        data[i++] += angle; // end angle\n\n        data[i++] += angle; // FIXME psi\n\n        i += 2;\n        j = i;\n        break;\n\n      case R:\n        // x0, y0\n        p[0] = data[i++];\n        p[1] = data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1]; // x1, y1\n\n        p[0] += data[i++];\n        p[1] += data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1];\n    }\n\n    for (k = 0; k < nPoint; k++) {\n      var p = points[k];\n      p[0] = data[i++];\n      p[1] = data[i++];\n      v2ApplyTransform(p, p, m); // Write back\n\n      data[j++] = p[0];\n      data[j++] = p[1];\n    }\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1159:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(1037);\n\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\nvar _default = Path.extend({\n  type: 'circle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    // Better stroking in ShapeBundle\n    // Always do it may have performence issue ( fill may be 2x more cost)\n    if (inBundle) {\n      ctx.moveTo(shape.cx + shape.r, shape.cy);\n    } // else {\n    //     if (ctx.allocate && !ctx.data.length) {\n    //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n    //     }\n    // }\n    // Better stroking in ShapeBundle\n    // ctx.moveTo(shape.cx + shape.r, shape.cy);\n\n\n    ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1160:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(1037);\n\nvar fixClipWithShadow = __webpack_require__(1109);\n\n/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\nvar _default = Path.extend({\n  type: 'sector',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r0: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r0 = Math.max(shape.r0 || 0, 0);\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n    ctx.lineTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n    ctx.lineTo(Math.cos(endAngle) * r0 + x, Math.sin(endAngle) * r0 + y);\n\n    if (r0 !== 0) {\n      ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n    }\n\n    ctx.closePath();\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1161:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(1037);\n\n/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\nvar _default = Path.extend({\n  type: 'ring',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    r0: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var PI2 = Math.PI * 2;\n    ctx.moveTo(x + shape.r, y);\n    ctx.arc(x, y, shape.r, 0, PI2, false);\n    ctx.moveTo(x + shape.r0, y);\n    ctx.arc(x, y, shape.r0, 0, PI2, true);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1162:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(1037);\n\nvar polyHelper = __webpack_require__(1101);\n\n/**\n * 多边形\n * @module zrender/shape/Polygon\n */\nvar _default = Path.extend({\n  type: 'polygon',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, true);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1163:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _vector = __webpack_require__(1033);\n\nvar v2Distance = _vector.distance;\n\n/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * @inner\n */\nfunction interpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n/**\n * @alias module:zrender/shape/util/smoothSpline\n * @param {Array} points 线段顶点数组\n * @param {boolean} isLoop\n * @return {Array}\n */\n\n\nfunction _default(points, isLoop) {\n  var len = points.length;\n  var ret = [];\n  var distance = 0;\n\n  for (var i = 1; i < len; i++) {\n    distance += v2Distance(points[i - 1], points[i]);\n  }\n\n  var segs = distance / 2;\n  segs = segs < len ? len : segs;\n\n  for (var i = 0; i < segs; i++) {\n    var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n    var idx = Math.floor(pos);\n    var w = pos - idx;\n    var p0;\n    var p1 = points[idx % len];\n    var p2;\n    var p3;\n\n    if (!isLoop) {\n      p0 = points[idx === 0 ? idx : idx - 1];\n      p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n      p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n    } else {\n      p0 = points[(idx - 1 + len) % len];\n      p2 = points[(idx + 1) % len];\n      p3 = points[(idx + 2) % len];\n    }\n\n    var w2 = w * w;\n    var w3 = w * w2;\n    ret.push([interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3), interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)]);\n  }\n\n  return ret;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1164:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _vector = __webpack_require__(1033);\n\nvar v2Min = _vector.min;\nvar v2Max = _vector.max;\nvar v2Scale = _vector.scale;\nvar v2Distance = _vector.distance;\nvar v2Add = _vector.add;\nvar v2Clone = _vector.clone;\nvar v2Sub = _vector.sub;\n\n/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * 贝塞尔平滑曲线\n * @alias module:zrender/shape/util/smoothBezier\n * @param {Array} points 线段顶点数组\n * @param {number} smooth 平滑等级, 0-1\n * @param {boolean} isLoop\n * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n *                           整个折线的包围盒做一个并集用来约束控制点。\n * @param {Array} 计算出来的控制点数组\n */\nfunction _default(points, smooth, isLoop, constraint) {\n  var cps = [];\n  var v = [];\n  var v1 = [];\n  var v2 = [];\n  var prevPoint;\n  var nextPoint;\n  var min, max;\n\n  if (constraint) {\n    min = [Infinity, Infinity];\n    max = [-Infinity, -Infinity];\n\n    for (var i = 0, len = points.length; i < len; i++) {\n      v2Min(min, min, points[i]);\n      v2Max(max, max, points[i]);\n    } // 与指定的包围盒做并集\n\n\n    v2Min(min, min, constraint[0]);\n    v2Max(max, max, constraint[1]);\n  }\n\n  for (var i = 0, len = points.length; i < len; i++) {\n    var point = points[i];\n\n    if (isLoop) {\n      prevPoint = points[i ? i - 1 : len - 1];\n      nextPoint = points[(i + 1) % len];\n    } else {\n      if (i === 0 || i === len - 1) {\n        cps.push(v2Clone(points[i]));\n        continue;\n      } else {\n        prevPoint = points[i - 1];\n        nextPoint = points[i + 1];\n      }\n    }\n\n    v2Sub(v, nextPoint, prevPoint); // use degree to scale the handle length\n\n    v2Scale(v, v, smooth);\n    var d0 = v2Distance(point, prevPoint);\n    var d1 = v2Distance(point, nextPoint);\n    var sum = d0 + d1;\n\n    if (sum !== 0) {\n      d0 /= sum;\n      d1 /= sum;\n    }\n\n    v2Scale(v1, v, -d0);\n    v2Scale(v2, v, d1);\n    var cp0 = v2Add([], point, v1);\n    var cp1 = v2Add([], point, v2);\n\n    if (constraint) {\n      v2Max(cp0, cp0, min);\n      v2Min(cp0, cp0, max);\n      v2Max(cp1, cp1, min);\n      v2Min(cp1, cp1, max);\n    }\n\n    cps.push(cp0);\n    cps.push(cp1);\n  }\n\n  if (isLoop) {\n    cps.push(cps.shift());\n  }\n\n  return cps;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1165:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(1037);\n\nvar polyHelper = __webpack_require__(1101);\n\n/**\n * @module zrender/graphic/shape/Polyline\n */\nvar _default = Path.extend({\n  type: 'polyline',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, false);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1166:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(1037);\n\nvar roundRectHelper = __webpack_require__(1098);\n\n/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\nvar _default = Path.extend({\n  type: 'rect',\n  shape: {\n    // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n    // r缩写为1         相当于 [1, 1, 1, 1]\n    // r缩写为[1]       相当于 [1, 1, 1, 1]\n    // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n    // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n    r: 0,\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var width = shape.width;\n    var height = shape.height;\n\n    if (!shape.r) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, shape);\n    }\n\n    ctx.closePath();\n    return;\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1167:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(1037);\n\n/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\nvar _default = Path.extend({\n  type: 'line',\n  shape: {\n    // Start point\n    x1: 0,\n    y1: 0,\n    // End point\n    x2: 0,\n    y2: 0,\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (percent < 1) {\n      x2 = x1 * (1 - percent) + x2 * percent;\n      y2 = y1 * (1 - percent) + y2 * percent;\n    }\n\n    ctx.lineTo(x2, y2);\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} percent\n   * @return {Array.<number>}\n   */\n  pointAt: function (p) {\n    var shape = this.shape;\n    return [shape.x1 * (1 - p) + shape.x2 * p, shape.y1 * (1 - p) + shape.y2 * p];\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1168:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(1037);\n\nvar vec2 = __webpack_require__(1033);\n\nvar _curve = __webpack_require__(1048);\n\nvar quadraticSubdivide = _curve.quadraticSubdivide;\nvar cubicSubdivide = _curve.cubicSubdivide;\nvar quadraticAt = _curve.quadraticAt;\nvar cubicAt = _curve.cubicAt;\nvar quadraticDerivativeAt = _curve.quadraticDerivativeAt;\nvar cubicDerivativeAt = _curve.cubicDerivativeAt;\n\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\nvar out = [];\n\nfunction someVectorAt(shape, t, isTangent) {\n  var cpx2 = shape.cpx2;\n  var cpy2 = shape.cpy2;\n\n  if (cpx2 === null || cpy2 === null) {\n    return [(isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t), (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)];\n  } else {\n    return [(isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t), (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)];\n  }\n}\n\nvar _default = Path.extend({\n  type: 'bezier-curve',\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    cpx1: 0,\n    cpy1: 0,\n    // cpx2: 0,\n    // cpy2: 0\n    // Curve show percent, for animating\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var cpx1 = shape.cpx1;\n    var cpy1 = shape.cpy1;\n    var cpx2 = shape.cpx2;\n    var cpy2 = shape.cpy2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (cpx2 == null || cpy2 == null) {\n      if (percent < 1) {\n        quadraticSubdivide(x1, cpx1, x2, percent, out);\n        cpx1 = out[1];\n        x2 = out[2];\n        quadraticSubdivide(y1, cpy1, y2, percent, out);\n        cpy1 = out[1];\n        y2 = out[2];\n      }\n\n      ctx.quadraticCurveTo(cpx1, cpy1, x2, y2);\n    } else {\n      if (percent < 1) {\n        cubicSubdivide(x1, cpx1, cpx2, x2, percent, out);\n        cpx1 = out[1];\n        cpx2 = out[2];\n        x2 = out[3];\n        cubicSubdivide(y1, cpy1, cpy2, y2, percent, out);\n        cpy1 = out[1];\n        cpy2 = out[2];\n        y2 = out[3];\n      }\n\n      ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\n    }\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  pointAt: function (t) {\n    return someVectorAt(this.shape, t, false);\n  },\n\n  /**\n   * Get tangent at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  tangentAt: function (t) {\n    var p = someVectorAt(this.shape, t, true);\n    return vec2.normalize(p, p);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1169:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(1037);\n\n/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\nvar _default = Path.extend({\n  type: 'arc',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1170:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(1037);\n\n// CompoundPath to improve performance\nvar _default = Path.extend({\n  type: 'compound',\n  shape: {\n    paths: null\n  },\n  _updatePathDirty: function () {\n    var dirtyPath = this.__dirtyPath;\n    var paths = this.shape.paths;\n\n    for (var i = 0; i < paths.length; i++) {\n      // Mark as dirty if any subpath is dirty\n      dirtyPath = dirtyPath || paths[i].__dirtyPath;\n    }\n\n    this.__dirtyPath = dirtyPath;\n    this.__dirty = this.__dirty || dirtyPath;\n  },\n  beforeBrush: function () {\n    this._updatePathDirty();\n\n    var paths = this.shape.paths || [];\n    var scale = this.getGlobalScale(); // Update path scale\n\n    for (var i = 0; i < paths.length; i++) {\n      if (!paths[i].path) {\n        paths[i].createPathProxy();\n      }\n\n      paths[i].path.setScale(scale[0], scale[1]);\n    }\n  },\n  buildPath: function (ctx, shape) {\n    var paths = shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].buildPath(ctx, paths[i].shape, true);\n    }\n  },\n  afterBrush: function () {\n    var paths = this.shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].__dirtyPath = false;\n    }\n  },\n  getBoundingRect: function () {\n    this._updatePathDirty();\n\n    return Path.prototype.getBoundingRect.call(this);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1171:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1027);\n\nvar Gradient = __webpack_require__(1068);\n\n/**\n * x, y, r are all percent from 0 to 1\n * @param {number} [x=0.5]\n * @param {number} [y=0.5]\n * @param {number} [r=0.5]\n * @param {Array.<Object>} [colorStops]\n * @param {boolean} [globalCoord=false]\n */\nvar RadialGradient = function (x, y, r, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'radial', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0.5 : x;\n  this.y = y == null ? 0.5 : y;\n  this.r = r == null ? 0.5 : r; // Can be cloned\n\n  this.type = 'radial'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nRadialGradient.prototype = {\n  constructor: RadialGradient\n};\nzrUtil.inherits(RadialGradient, Gradient);\nvar _default = RadialGradient;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1172:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar makeStyleMapper = __webpack_require__(1060);\n\nvar getItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor'], ['textPosition'], ['textAlign']]);\nvar _default = {\n  getItemStyle: function (excludes, includes) {\n    var style = getItemStyle(this, excludes, includes);\n    var lineDash = this.getBorderLineDash();\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getBorderLineDash: function () {\n    var lineType = this.get('borderType');\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [5, 5] : [1, 1];\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1173:\n/***/ (function(module, exports) {\n\nvar _default = {\n  getBoxLayoutParams: function () {\n    return {\n      left: this.get('left'),\n      top: this.get('top'),\n      right: this.get('right'),\n      bottom: this.get('bottom'),\n      width: this.get('width'),\n      height: this.get('height')\n    };\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1174:\n/***/ (function(module, exports) {\n\nvar platform = ''; // Navigator not exists in node\n\nif (typeof navigator !== 'undefined') {\n  platform = navigator.platform || '';\n}\n\nvar _default = {\n  // 全图默认背景\n  // backgroundColor: 'rgba(0,0,0,0)',\n  // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n  // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n  // 浅色\n  // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n  // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n  // 深色\n  color: ['#c23531', '#2f4554', '#61a0a8', '#d48265', '#91c7ae', '#749f83', '#ca8622', '#bda29a', '#6e7074', '#546570', '#c4ccd3'],\n  // 默认需要 Grid 配置项\n  // grid: {},\n  // 主题，主题\n  textStyle: {\n    // color: '#000',\n    // decoration: 'none',\n    // PENDING\n    fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n    // fontFamily: 'Arial, Verdana, sans-serif',\n    fontSize: 12,\n    fontStyle: 'normal',\n    fontWeight: 'normal'\n  },\n  // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n  // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n  // Default is source-over\n  blendMode: null,\n  animation: 'auto',\n  animationDuration: 1000,\n  animationDurationUpdate: 300,\n  animationEasing: 'exponentialOut',\n  animationEasingUpdate: 'cubicOut',\n  animationThreshold: 2000,\n  // Configuration for progressive/incremental rendering\n  progressiveThreshold: 3000,\n  progressive: 400,\n  // Threshold of if use single hover layer to optimize.\n  // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n  // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n  // which is unexpected.\n  // see example <echarts/test/heatmap-large.html>.\n  hoverLayerThreshold: 3000,\n  // See: module:echarts/scale/Time\n  useUTC: false\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1175:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1027);\n\nvar echartsAPIList = ['getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed', 'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption', 'getViewOfComponentModel', 'getViewOfSeriesModel']; // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\n\nfunction ExtensionAPI(chartInstance) {\n  zrUtil.each(echartsAPIList, function (name) {\n    this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n  }, this);\n}\n\nvar _default = ExtensionAPI;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1176:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1027);\n\nvar modelUtil = __webpack_require__(1031);\n\nvar ComponentModel = __webpack_require__(1040);\n\n/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\nvar each = zrUtil.each;\nvar clone = zrUtil.clone;\nvar map = zrUtil.map;\nvar merge = zrUtil.merge;\nvar QUERY_REG = /^(min|max)?(.+)$/;\n/**\n * TERM EXPLANATIONS:\n *\n * [option]:\n *\n *     An object that contains definitions of components. For example:\n *     var option = {\n *         title: {...},\n *         legend: {...},\n *         visualMap: {...},\n *         series: [\n *             {data: [...]},\n *             {data: [...]},\n *             ...\n *         ]\n *     };\n *\n * [rawOption]:\n *\n *     An object input to echarts.setOption. 'rawOption' may be an\n *     'option', or may be an object contains multi-options. For example:\n *     var option = {\n *         baseOption: {\n *             title: {...},\n *             legend: {...},\n *             series: [\n *                 {data: [...]},\n *                 {data: [...]},\n *                 ...\n *             ]\n *         },\n *         timeline: {...},\n *         options: [\n *             {title: {...}, series: {data: [...]}},\n *             {title: {...}, series: {data: [...]}},\n *             ...\n *         ],\n *         media: [\n *             {\n *                 query: {maxWidth: 320},\n *                 option: {series: {x: 20}, visualMap: {show: false}}\n *             },\n *             {\n *                 query: {minWidth: 320, maxWidth: 720},\n *                 option: {series: {x: 500}, visualMap: {show: true}}\n *             },\n *             {\n *                 option: {series: {x: 1200}, visualMap: {show: true}}\n *             }\n *         ]\n *     };\n *\n * @alias module:echarts/model/OptionManager\n * @param {module:echarts/ExtensionAPI} api\n */\n\nfunction OptionManager(api) {\n  /**\n   * @private\n   * @type {module:echarts/ExtensionAPI}\n   */\n  this._api = api;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._timelineOptions = [];\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n\n  this._mediaList = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._mediaDefault;\n  /**\n   * -1, means default.\n   * empty means no media.\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._currentMediaIndices = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._optionBackup;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._newBaseOption;\n} // timeline.notMerge is not supported in ec3. Firstly there is rearly\n// case that notMerge is needed. Secondly supporting 'notMerge' requires\n// rawOption cloned and backuped when timeline changed, which does no\n// good to performance. What's more, that both timeline and setOption\n// method supply 'notMerge' brings complex and some problems.\n// Consider this case:\n// (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n// (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n\nOptionManager.prototype = {\n  constructor: OptionManager,\n\n  /**\n   * @public\n   * @param {Object} rawOption Raw option.\n   * @param {module:echarts/model/Global} ecModel\n   * @param {Array.<Function>} optionPreprocessorFuncs\n   * @return {Object} Init option\n   */\n  setOption: function (rawOption, optionPreprocessorFuncs) {\n    rawOption = clone(rawOption, true); // FIXME\n    // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n    var oldOptionBackup = this._optionBackup;\n    var newParsedOption = parseRawOption.call(this, rawOption, optionPreprocessorFuncs, !oldOptionBackup);\n    this._newBaseOption = newParsedOption.baseOption; // For setOption at second time (using merge mode);\n\n    if (oldOptionBackup) {\n      // Only baseOption can be merged.\n      mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption); // For simplicity, timeline options and media options do not support merge,\n      // that is, if you `setOption` twice and both has timeline options, the latter\n      // timeline opitons will not be merged to the formers, but just substitude them.\n\n      if (newParsedOption.timelineOptions.length) {\n        oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n      }\n\n      if (newParsedOption.mediaList.length) {\n        oldOptionBackup.mediaList = newParsedOption.mediaList;\n      }\n\n      if (newParsedOption.mediaDefault) {\n        oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n      }\n    } else {\n      this._optionBackup = newParsedOption;\n    }\n  },\n\n  /**\n   * @param {boolean} isRecreate\n   * @return {Object}\n   */\n  mountOption: function (isRecreate) {\n    var optionBackup = this._optionBackup; // TODO\n    // 如果没有reset功能则不clone。\n\n    this._timelineOptions = map(optionBackup.timelineOptions, clone);\n    this._mediaList = map(optionBackup.mediaList, clone);\n    this._mediaDefault = clone(optionBackup.mediaDefault);\n    this._currentMediaIndices = [];\n    return clone(isRecreate // this._optionBackup.baseOption, which is created at the first `setOption`\n    // called, and is merged into every new option by inner method `mergeOption`\n    // each time `setOption` called, can be only used in `isRecreate`, because\n    // its reliability is under suspicion. In other cases option merge is\n    // performed by `model.mergeOption`.\n    ? optionBackup.baseOption : this._newBaseOption);\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Object}\n   */\n  getTimelineOption: function (ecModel) {\n    var option;\n    var timelineOptions = this._timelineOptions;\n\n    if (timelineOptions.length) {\n      // getTimelineOption can only be called after ecModel inited,\n      // so we can get currentIndex from timelineModel.\n      var timelineModel = ecModel.getComponent('timeline');\n\n      if (timelineModel) {\n        option = clone(timelineOptions[timelineModel.getCurrentIndex()], true);\n      }\n    }\n\n    return option;\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Array.<Object>}\n   */\n  getMediaOption: function (ecModel) {\n    var ecWidth = this._api.getWidth();\n\n    var ecHeight = this._api.getHeight();\n\n    var mediaList = this._mediaList;\n    var mediaDefault = this._mediaDefault;\n    var indices = [];\n    var result = []; // No media defined.\n\n    if (!mediaList.length && !mediaDefault) {\n      return result;\n    } // Multi media may be applied, the latter defined media has higher priority.\n\n\n    for (var i = 0, len = mediaList.length; i < len; i++) {\n      if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n        indices.push(i);\n      }\n    } // FIXME\n    // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n\n\n    if (!indices.length && mediaDefault) {\n      indices = [-1];\n    }\n\n    if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n      result = map(indices, function (index) {\n        return clone(index === -1 ? mediaDefault.option : mediaList[index].option);\n      });\n    } // Otherwise return nothing.\n\n\n    this._currentMediaIndices = indices;\n    return result;\n  }\n};\n\nfunction parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n  var timelineOptions = [];\n  var mediaList = [];\n  var mediaDefault;\n  var baseOption; // Compatible with ec2.\n\n  var timelineOpt = rawOption.timeline;\n\n  if (rawOption.baseOption) {\n    baseOption = rawOption.baseOption;\n  } // For timeline\n\n\n  if (timelineOpt || rawOption.options) {\n    baseOption = baseOption || {};\n    timelineOptions = (rawOption.options || []).slice();\n  } // For media query\n\n\n  if (rawOption.media) {\n    baseOption = baseOption || {};\n    var media = rawOption.media;\n    each(media, function (singleMedia) {\n      if (singleMedia && singleMedia.option) {\n        if (singleMedia.query) {\n          mediaList.push(singleMedia);\n        } else if (!mediaDefault) {\n          // Use the first media default.\n          mediaDefault = singleMedia;\n        }\n      }\n    });\n  } // For normal option\n\n\n  if (!baseOption) {\n    baseOption = rawOption;\n  } // Set timelineOpt to baseOption in ec3,\n  // which is convenient for merge option.\n\n\n  if (!baseOption.timeline) {\n    baseOption.timeline = timelineOpt;\n  } // Preprocess.\n\n\n  each([baseOption].concat(timelineOptions).concat(zrUtil.map(mediaList, function (media) {\n    return media.option;\n  })), function (option) {\n    each(optionPreprocessorFuncs, function (preProcess) {\n      preProcess(option, isNew);\n    });\n  });\n  return {\n    baseOption: baseOption,\n    timelineOptions: timelineOptions,\n    mediaDefault: mediaDefault,\n    mediaList: mediaList\n  };\n}\n/**\n * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n * Support: width, height, aspectRatio\n * Can use max or min as prefix.\n */\n\n\nfunction applyMediaQuery(query, ecWidth, ecHeight) {\n  var realMap = {\n    width: ecWidth,\n    height: ecHeight,\n    aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n\n  };\n  var applicatable = true;\n  zrUtil.each(query, function (value, attr) {\n    var matched = attr.match(QUERY_REG);\n\n    if (!matched || !matched[1] || !matched[2]) {\n      return;\n    }\n\n    var operator = matched[1];\n    var realAttr = matched[2].toLowerCase();\n\n    if (!compare(realMap[realAttr], value, operator)) {\n      applicatable = false;\n    }\n  });\n  return applicatable;\n}\n\nfunction compare(real, expect, operator) {\n  if (operator === 'min') {\n    return real >= expect;\n  } else if (operator === 'max') {\n    return real <= expect;\n  } else {\n    // Equals\n    return real === expect;\n  }\n}\n\nfunction indicesEquals(indices1, indices2) {\n  // indices is always order by asc and has only finite number.\n  return indices1.join(',') === indices2.join(',');\n}\n/**\n * Consider case:\n * `chart.setOption(opt1);`\n * Then user do some interaction like dataZoom, dataView changing.\n * `chart.setOption(opt2);`\n * Then user press 'reset button' in toolbox.\n *\n * After doing that all of the interaction effects should be reset, the\n * chart should be the same as the result of invoke\n * `chart.setOption(opt1); chart.setOption(opt2);`.\n *\n * Although it is not able ensure that\n * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n * `chart.setOption(merge(opt1, opt2));` exactly,\n * this might be the only simple way to implement that feature.\n *\n * MEMO: We've considered some other approaches:\n * 1. Each model handle its self restoration but not uniform treatment.\n *     (Too complex in logic and error-prone)\n * 2. Use a shadow ecModel. (Performace expensive)\n */\n\n\nfunction mergeOption(oldOption, newOption) {\n  newOption = newOption || {};\n  each(newOption, function (newCptOpt, mainType) {\n    if (newCptOpt == null) {\n      return;\n    }\n\n    var oldCptOpt = oldOption[mainType];\n\n    if (!ComponentModel.hasClass(mainType)) {\n      oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n    } else {\n      newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n      oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n      var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n      oldOption[mainType] = map(mapResult, function (item) {\n        return item.option && item.exist ? merge(item.exist, item.option, true) : item.exist || item.option;\n      });\n    }\n  });\n}\n\nvar _default = OptionManager;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1177:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(1027);\n\nvar each = _util.each;\nvar isArray = _util.isArray;\nvar isObject = _util.isObject;\n\nvar compatStyle = __webpack_require__(1178);\n\nvar _model = __webpack_require__(1031);\n\nvar normalizeToArray = _model.normalizeToArray;\n\n// Compatitable with 2.0\nfunction get(opt, path) {\n  path = path.split(',');\n  var obj = opt;\n\n  for (var i = 0; i < path.length; i++) {\n    obj = obj && obj[path[i]];\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  return obj;\n}\n\nfunction set(opt, path, val, overwrite) {\n  path = path.split(',');\n  var obj = opt;\n  var key;\n\n  for (var i = 0; i < path.length - 1; i++) {\n    key = path[i];\n\n    if (obj[key] == null) {\n      obj[key] = {};\n    }\n\n    obj = obj[key];\n  }\n\n  if (overwrite || obj[path[i]] == null) {\n    obj[path[i]] = val;\n  }\n}\n\nfunction compatLayoutProperties(option) {\n  each(LAYOUT_PROPERTIES, function (prop) {\n    if (prop[0] in option && !(prop[1] in option)) {\n      option[prop[1]] = option[prop[0]];\n    }\n  });\n}\n\nvar LAYOUT_PROPERTIES = [['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']];\nvar COMPATITABLE_COMPONENTS = ['grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'];\nvar COMPATITABLE_SERIES = ['bar', 'boxplot', 'candlestick', 'chord', 'effectScatter', 'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel', 'pie', 'radar', 'sankey', 'scatter', 'treemap'];\n\nfunction _default(option, isTheme) {\n  compatStyle(option, isTheme); // Make sure series array for model initialization.\n\n  option.series = normalizeToArray(option.series);\n  each(option.series, function (seriesOpt) {\n    if (!isObject(seriesOpt)) {\n      return;\n    }\n\n    var seriesType = seriesOpt.type;\n\n    if (seriesType === 'pie' || seriesType === 'gauge') {\n      if (seriesOpt.clockWise != null) {\n        seriesOpt.clockwise = seriesOpt.clockWise;\n      }\n    }\n\n    if (seriesType === 'gauge') {\n      var pointerColor = get(seriesOpt, 'pointer.color');\n      pointerColor != null && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n    }\n\n    for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\n      if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\n        compatLayoutProperties(seriesOpt);\n        break;\n      }\n    }\n  }); // dataRange has changed to visualMap\n\n  if (option.dataRange) {\n    option.visualMap = option.dataRange;\n  }\n\n  each(COMPATITABLE_COMPONENTS, function (componentName) {\n    var options = option[componentName];\n\n    if (options) {\n      if (!isArray(options)) {\n        options = [options];\n      }\n\n      each(options, function (option) {\n        compatLayoutProperties(option);\n      });\n    }\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1178:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1027);\n\nvar modelUtil = __webpack_require__(1031);\n\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar POSSIBLE_STYLES = ['areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle', 'chordStyle', 'label', 'labelLine'];\n\nfunction compatItemStyle(opt) {\n  var itemStyleOpt = opt && opt.itemStyle;\n\n  if (!itemStyleOpt) {\n    return;\n  }\n\n  for (var i = 0, len = POSSIBLE_STYLES.length; i < len; i++) {\n    var styleName = POSSIBLE_STYLES[i];\n    var normalItemStyleOpt = itemStyleOpt.normal;\n    var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n\n    if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].normal) {\n        opt[styleName].normal = normalItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n      }\n\n      normalItemStyleOpt[styleName] = null;\n    }\n\n    if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].emphasis) {\n        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n      }\n\n      emphasisItemStyleOpt[styleName] = null;\n    }\n  }\n}\n\nfunction compatTextStyle(opt, propName) {\n  var labelOptSingle = isObject(opt) && opt[propName];\n  var textStyle = isObject(labelOptSingle) && labelOptSingle.textStyle;\n\n  if (textStyle) {\n    for (var i = 0, len = modelUtil.TEXT_STYLE_OPTIONS.length; i < len; i++) {\n      var propName = modelUtil.TEXT_STYLE_OPTIONS[i];\n\n      if (textStyle.hasOwnProperty(propName)) {\n        labelOptSingle[propName] = textStyle[propName];\n      }\n    }\n  }\n}\n\nfunction compatLabelTextStyle(labelOpt) {\n  if (isObject(labelOpt)) {\n    compatTextStyle(labelOpt, 'normal');\n    compatTextStyle(labelOpt, 'emphasis');\n  }\n}\n\nfunction processSeries(seriesOpt) {\n  if (!isObject(seriesOpt)) {\n    return;\n  }\n\n  compatItemStyle(seriesOpt);\n  compatLabelTextStyle(seriesOpt.label); // treemap\n\n  compatLabelTextStyle(seriesOpt.upperLabel); // graph\n\n  compatLabelTextStyle(seriesOpt.edgeLabel);\n  var markPoint = seriesOpt.markPoint;\n  compatItemStyle(markPoint);\n  compatLabelTextStyle(markPoint && markPoint.label);\n  var markLine = seriesOpt.markLine;\n  compatItemStyle(seriesOpt.markLine);\n  compatLabelTextStyle(markLine && markLine.label);\n  var markArea = seriesOpt.markArea;\n  compatLabelTextStyle(markArea && markArea.label); // For gauge\n\n  compatTextStyle(seriesOpt, 'axisLabel');\n  compatTextStyle(seriesOpt, 'title');\n  compatTextStyle(seriesOpt, 'detail');\n  var data = seriesOpt.data;\n\n  if (data) {\n    for (var i = 0; i < data.length; i++) {\n      compatItemStyle(data[i]);\n      compatLabelTextStyle(data[i] && data[i].label);\n    }\n  } // mark point data\n\n\n  var markPoint = seriesOpt.markPoint;\n\n  if (markPoint && markPoint.data) {\n    var mpData = markPoint.data;\n\n    for (var i = 0; i < mpData.length; i++) {\n      compatItemStyle(mpData[i]);\n      compatLabelTextStyle(mpData[i] && mpData[i].label);\n    }\n  } // mark line data\n\n\n  var markLine = seriesOpt.markLine;\n\n  if (markLine && markLine.data) {\n    var mlData = markLine.data;\n\n    for (var i = 0; i < mlData.length; i++) {\n      if (zrUtil.isArray(mlData[i])) {\n        compatItemStyle(mlData[i][0]);\n        compatLabelTextStyle(mlData[i][0] && mlData[i][0].label);\n        compatItemStyle(mlData[i][1]);\n        compatLabelTextStyle(mlData[i][1] && mlData[i][1].label);\n      } else {\n        compatItemStyle(mlData[i]);\n        compatLabelTextStyle(mlData[i] && mlData[i].label);\n      }\n    }\n  }\n}\n\nfunction toArr(o) {\n  return zrUtil.isArray(o) ? o : o ? [o] : [];\n}\n\nfunction toObj(o) {\n  return (zrUtil.isArray(o) ? o[0] : o) || {};\n}\n\nfunction _default(option, isTheme) {\n  each(toArr(option.series), function (seriesOpt) {\n    isObject(seriesOpt) && processSeries(seriesOpt);\n  });\n  var axes = ['xAxis', 'yAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'parallelAxis', 'radar'];\n  isTheme && axes.push('valueAxis', 'categoryAxis', 'logAxis', 'timeAxis');\n  each(axes, function (axisName) {\n    each(toArr(option[axisName]), function (axisOpt) {\n      if (axisOpt) {\n        compatTextStyle(axisOpt, 'axisLabel');\n        compatTextStyle(axisOpt.axisPointer, 'label');\n      }\n    });\n  });\n  each(toArr(option.parallel), function (parallelOpt) {\n    var parallelAxisDefault = parallelOpt && parallelOpt.parallelAxisDefault;\n    compatTextStyle(parallelAxisDefault, 'axisLabel');\n    compatTextStyle(parallelAxisDefault && parallelAxisDefault.axisPointer, 'label');\n  });\n  each(toArr(option.calendar), function (calendarOpt) {\n    compatTextStyle(calendarOpt, 'dayLabel');\n    compatTextStyle(calendarOpt, 'monthLabel');\n    compatTextStyle(calendarOpt, 'yearLabel');\n  }); // radar.name.textStyle\n\n  each(toArr(option.radar), function (radarOpt) {\n    compatTextStyle(radarOpt, 'name');\n  });\n  each(toArr(option.geo), function (geoOpt) {\n    if (isObject(geoOpt)) {\n      compatLabelTextStyle(geoOpt.label);\n      each(toArr(geoOpt.regions), function (regionObj) {\n        compatLabelTextStyle(regionObj.label);\n      });\n    }\n  });\n  compatLabelTextStyle(toObj(option.timeline).label);\n  compatTextStyle(toObj(option.axisPointer), 'label');\n  compatTextStyle(toObj(option.tooltip).axisPointer, 'label');\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1179:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Gradient = __webpack_require__(1068);\n\nfunction _default(ecModel) {\n  function encodeColor(seriesModel) {\n    var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\n    var data = seriesModel.getData();\n    var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n    || seriesModel.getColorFromPalette(seriesModel.get('name')); // Default color\n    // FIXME Set color function or use the platte color\n\n    data.setVisual('color', color); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      if (typeof color === 'function' && !(color instanceof Gradient)) {\n        data.each(function (idx) {\n          data.setItemVisual(idx, 'color', color(seriesModel.getDataParams(idx)));\n        });\n      } // itemStyle in each data item\n\n\n      data.each(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        var color = itemModel.get(colorAccessPath, true);\n\n        if (color != null) {\n          data.setItemVisual(idx, 'color', color);\n        }\n      });\n    }\n  }\n\n  ecModel.eachRawSeries(encodeColor);\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1180:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1027);\n\nvar graphic = __webpack_require__(1029);\n\nvar PI = Math.PI;\n/**\n * @param {module:echarts/ExtensionAPI} api\n * @param {Object} [opts]\n * @param {string} [opts.text]\n * @param {string} [opts.color]\n * @param {string} [opts.textColor]\n * @return {module:zrender/Element}\n */\n\nfunction _default(api, opts) {\n  opts = opts || {};\n  zrUtil.defaults(opts, {\n    text: 'loading',\n    color: '#c23531',\n    textColor: '#000',\n    maskColor: 'rgba(255, 255, 255, 0.8)',\n    zlevel: 0\n  });\n  var mask = new graphic.Rect({\n    style: {\n      fill: opts.maskColor\n    },\n    zlevel: opts.zlevel,\n    z: 10000\n  });\n  var arc = new graphic.Arc({\n    shape: {\n      startAngle: -PI / 2,\n      endAngle: -PI / 2 + 0.1,\n      r: 10\n    },\n    style: {\n      stroke: opts.color,\n      lineCap: 'round',\n      lineWidth: 5\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  var labelRect = new graphic.Rect({\n    style: {\n      fill: 'none',\n      text: opts.text,\n      textPosition: 'right',\n      textDistance: 10,\n      textFill: opts.textColor\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  arc.animateShape(true).when(1000, {\n    endAngle: PI * 3 / 2\n  }).start('circularInOut');\n  arc.animateShape(true).when(1000, {\n    startAngle: PI * 3 / 2\n  }).delay(300).start('circularInOut');\n  var group = new graphic.Group();\n  group.add(arc);\n  group.add(labelRect);\n  group.add(mask); // Inject resize\n\n  group.resize = function () {\n    var cx = api.getWidth() / 2;\n    var cy = api.getHeight() / 2;\n    arc.setShape({\n      cx: cx,\n      cy: cy\n    });\n    var r = arc.shape.r;\n    labelRect.setShape({\n      x: cx - r,\n      y: cy - r,\n      width: r * 2,\n      height: r * 2\n    });\n    mask.setShape({\n      x: 0,\n      y: 0,\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n  };\n\n  group.resize();\n  return group;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1181:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1027);\n\nvar createListFromArray = __webpack_require__(1065);\n\nvar axisHelper = __webpack_require__(1045);\n\nvar axisModelCommonMixin = __webpack_require__(1077);\n\nvar Model = __webpack_require__(1038);\n\nvar _completeDimensions = __webpack_require__(1053);\n\nexports.completeDimensions = _completeDimensions;\n\nvar _symbol = __webpack_require__(1052);\n\nexports.createSymbol = _symbol.createSymbol;\n\n/**\n * Create a muti dimension List structure from seriesModel.\n * @param  {module:echarts/model/Model} seriesModel\n * @return {module:echarts/data/List} list\n */\nfunction createList(seriesModel) {\n  var data = seriesModel.get('data');\n  return createListFromArray(data, seriesModel, seriesModel.ecModel);\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n */\n\n\n/**\n * Create scale\n * @param {Array.<number>} dataExtent\n * @param {Object|module:echarts/Model} option\n */\nfunction createScale(dataExtent, option) {\n  var axisModel = option;\n\n  if (!(option instanceof Model)) {\n    axisModel = new Model(option);\n    zrUtil.mixin(axisModel, axisModelCommonMixin);\n  }\n\n  var scale = axisHelper.createScaleByModel(axisModel);\n  scale.setExtent(dataExtent[0], dataExtent[1]);\n  axisHelper.niceScaleExtent(scale, axisModel);\n  return scale;\n}\n/**\n * Mixin common methods to axis model,\n *\n * Inlcude methods\n * `getFormattedLabels() => Array.<string>`\n * `getCategories() => Array.<string>`\n * `getMin(origin: boolean) => number`\n * `getMax(origin: boolean) => number`\n * `getNeedCrossZero() => boolean`\n * `setRange(start: number, end: number)`\n * `resetRange()`\n */\n\n\nfunction mixinAxisModelCommonMethods(Model) {\n  zrUtil.mixin(Model, axisModelCommonMixin);\n}\n\nexports.createList = createList;\nexports.createScale = createScale;\nexports.mixinAxisModelCommonMethods = mixinAxisModelCommonMethods;\n\n/***/ }),\n\n/***/ 1182:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1027);\n\nvar Scale = __webpack_require__(1063);\n\n/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n// FIXME only one data\nvar scaleProto = Scale.prototype;\nvar OrdinalScale = Scale.extend({\n  type: 'ordinal',\n  init: function (data, extent) {\n    this._data = data;\n    this._extent = extent || [0, data.length - 1];\n  },\n  parse: function (val) {\n    return typeof val === 'string' ? zrUtil.indexOf(this._data, val) // val might be float.\n    : Math.round(val);\n  },\n  contain: function (rank) {\n    rank = this.parse(rank);\n    return scaleProto.contain.call(this, rank) && this._data[rank] != null;\n  },\n\n  /**\n   * Normalize given rank or name to linear [0, 1]\n   * @param {number|string} [val]\n   * @return {number}\n   */\n  normalize: function (val) {\n    return scaleProto.normalize.call(this, this.parse(val));\n  },\n  scale: function (val) {\n    return Math.round(scaleProto.scale.call(this, val));\n  },\n\n  /**\n   * @return {Array}\n   */\n  getTicks: function () {\n    var ticks = [];\n    var extent = this._extent;\n    var rank = extent[0];\n\n    while (rank <= extent[1]) {\n      ticks.push(rank);\n      rank++;\n    }\n\n    return ticks;\n  },\n\n  /**\n   * Get item on rank n\n   * @param {number} n\n   * @return {string}\n   */\n  getLabel: function (n) {\n    return this._data[n];\n  },\n\n  /**\n   * @return {number}\n   */\n  count: function () {\n    return this._extent[1] - this._extent[0] + 1;\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    this.unionExtent(data.getDataExtent(dim, false));\n  },\n  niceTicks: zrUtil.noop,\n  niceExtent: zrUtil.noop\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nOrdinalScale.create = function () {\n  return new OrdinalScale();\n};\n\nvar _default = OrdinalScale;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1183:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1027);\n\nvar numberUtil = __webpack_require__(1030);\n\nvar formatUtil = __webpack_require__(1034);\n\nvar scaleHelper = __webpack_require__(1103);\n\nvar IntervalScale = __webpack_require__(1069);\n\n// [About UTC and local time zone]:\n// In most cases, `number.parseDate` will treat input data string as local time\n// (except time zone is specified in time string). And `format.formateTime` returns\n// local time by default. option.useUTC is false by default. This design have\n// concidered these common case:\n// (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n// in local time by default.\n// (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n// as its original time, without any time difference.\nvar intervalScaleProto = IntervalScale.prototype;\nvar mathCeil = Math.ceil;\nvar mathFloor = Math.floor;\nvar ONE_SECOND = 1000;\nvar ONE_MINUTE = ONE_SECOND * 60;\nvar ONE_HOUR = ONE_MINUTE * 60;\nvar ONE_DAY = ONE_HOUR * 24; // FIXME 公用？\n\nvar bisect = function (a, x, lo, hi) {\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n\n    if (a[mid][1] < x) {\n      lo = mid + 1;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return lo;\n};\n/**\n * @alias module:echarts/coord/scale/Time\n * @constructor\n */\n\n\nvar TimeScale = IntervalScale.extend({\n  type: 'time',\n\n  /**\n   * @override\n   */\n  getLabel: function (val) {\n    var stepLvl = this._stepLvl;\n    var date = new Date(val);\n    return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n  },\n\n  /**\n   * @override\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      // Expand extent\n      extent[0] -= ONE_DAY;\n      extent[1] += ONE_DAY;\n    } // If there are no data and extent are [Infinity, -Infinity]\n\n\n    if (extent[1] === -Infinity && extent[0] === Infinity) {\n      var d = new Date();\n      extent[1] = +new Date(d.getFullYear(), d.getMonth(), d.getDate());\n      extent[0] = extent[1] - ONE_DAY;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n    }\n  },\n\n  /**\n   * @override\n   */\n  niceTicks: function (approxTickNum, minInterval, maxInterval) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n    var approxInterval = span / approxTickNum;\n\n    if (minInterval != null && approxInterval < minInterval) {\n      approxInterval = minInterval;\n    }\n\n    if (maxInterval != null && approxInterval > maxInterval) {\n      approxInterval = maxInterval;\n    }\n\n    var scaleLevelsLen = scaleLevels.length;\n    var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n    var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n    var interval = level[1]; // Same with interval scale if span is much larger than 1 year\n\n    if (level[0] === 'year') {\n      var yearSpan = span / interval; // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n      // var niceYearSpan = numberUtil.nice(yearSpan, false);\n\n      var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n      interval *= yearStep;\n    }\n\n    var timezoneOffset = this.getSetting('useUTC') ? 0 : new Date(+extent[0] || +extent[1]).getTimezoneOffset() * 60 * 1000;\n    var niceExtent = [Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset), Math.round(mathFloor((extent[1] - timezoneOffset) / interval) * interval + timezoneOffset)];\n    scaleHelper.fixExtent(niceExtent, extent);\n    this._stepLvl = level; // Interval will be used in getTicks\n\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n  parse: function (val) {\n    // val might be float.\n    return +numberUtil.parseDate(val);\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  TimeScale.prototype[methodName] = function (val) {\n    return intervalScaleProto[methodName].call(this, this.parse(val));\n  };\n}); // Steps from d3\n\nvar scaleLevels = [// Format              interval\n['hh:mm:ss', ONE_SECOND], // 1s\n['hh:mm:ss', ONE_SECOND * 5], // 5s\n['hh:mm:ss', ONE_SECOND * 10], // 10s\n['hh:mm:ss', ONE_SECOND * 15], // 15s\n['hh:mm:ss', ONE_SECOND * 30], // 30s\n['hh:mm\\nMM-dd', ONE_MINUTE], // 1m\n['hh:mm\\nMM-dd', ONE_MINUTE * 5], // 5m\n['hh:mm\\nMM-dd', ONE_MINUTE * 10], // 10m\n['hh:mm\\nMM-dd', ONE_MINUTE * 15], // 15m\n['hh:mm\\nMM-dd', ONE_MINUTE * 30], // 30m\n['hh:mm\\nMM-dd', ONE_HOUR], // 1h\n['hh:mm\\nMM-dd', ONE_HOUR * 2], // 2h\n['hh:mm\\nMM-dd', ONE_HOUR * 6], // 6h\n['hh:mm\\nMM-dd', ONE_HOUR * 12], // 12h\n['MM-dd\\nyyyy', ONE_DAY], // 1d\n['MM-dd\\nyyyy', ONE_DAY * 2], // 2d\n['MM-dd\\nyyyy', ONE_DAY * 3], // 3d\n['MM-dd\\nyyyy', ONE_DAY * 4], // 4d\n['MM-dd\\nyyyy', ONE_DAY * 5], // 5d\n['MM-dd\\nyyyy', ONE_DAY * 6], // 6d\n['week', ONE_DAY * 7], // 7d\n['MM-dd\\nyyyy', ONE_DAY * 10], // 10d\n['week', ONE_DAY * 14], // 2w\n['week', ONE_DAY * 21], // 3w\n['month', ONE_DAY * 31], // 1M\n['week', ONE_DAY * 42], // 6w\n['month', ONE_DAY * 62], // 2M\n['week', ONE_DAY * 42], // 10w\n['quarter', ONE_DAY * 380 / 4], // 3M\n['month', ONE_DAY * 31 * 4], // 4M\n['month', ONE_DAY * 31 * 5], // 5M\n['half-year', ONE_DAY * 380 / 2], // 6M\n['month', ONE_DAY * 31 * 8], // 8M\n['month', ONE_DAY * 31 * 10], // 10M\n['year', ONE_DAY * 380] // 1Y\n];\n/**\n * @param {module:echarts/model/Model}\n * @return {module:echarts/scale/Time}\n */\n\nTimeScale.create = function (model) {\n  return new TimeScale({\n    useUTC: model.ecModel.get('useUTC')\n  });\n};\n\nvar _default = TimeScale;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1184:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1027);\n\nvar Scale = __webpack_require__(1063);\n\nvar numberUtil = __webpack_require__(1030);\n\nvar IntervalScale = __webpack_require__(1069);\n\n/**\n * Log scale\n * @module echarts/scale/Log\n */\n// Use some method of IntervalScale\nvar scaleProto = Scale.prototype;\nvar intervalScaleProto = IntervalScale.prototype;\nvar getPrecisionSafe = numberUtil.getPrecisionSafe;\nvar roundingErrorFix = numberUtil.round;\nvar mathFloor = Math.floor;\nvar mathCeil = Math.ceil;\nvar mathPow = Math.pow;\nvar mathLog = Math.log;\nvar LogScale = Scale.extend({\n  type: 'log',\n  base: 10,\n  $constructor: function () {\n    Scale.apply(this, arguments);\n    this._originalScale = new IntervalScale();\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    var originalScale = this._originalScale;\n    var extent = this._extent;\n    var originalExtent = originalScale.getExtent();\n    return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n      var powVal = numberUtil.round(mathPow(this.base, val)); // Fix #4158\n\n      powVal = val === extent[0] && originalScale.__fixMin ? fixRoundingError(powVal, originalExtent[0]) : powVal;\n      powVal = val === extent[1] && originalScale.__fixMax ? fixRoundingError(powVal, originalExtent[1]) : powVal;\n      return powVal;\n    }, this);\n  },\n\n  /**\n   * @param {number} val\n   * @return {string}\n   */\n  getLabel: intervalScaleProto.getLabel,\n\n  /**\n   * @param  {number} val\n   * @return {number}\n   */\n  scale: function (val) {\n    val = scaleProto.scale.call(this, val);\n    return mathPow(this.base, val);\n  },\n\n  /**\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var base = this.base;\n    start = mathLog(start) / mathLog(base);\n    end = mathLog(end) / mathLog(base);\n    intervalScaleProto.setExtent.call(this, start, end);\n  },\n\n  /**\n   * @return {number} end\n   */\n  getExtent: function () {\n    var base = this.base;\n    var extent = scaleProto.getExtent.call(this);\n    extent[0] = mathPow(base, extent[0]);\n    extent[1] = mathPow(base, extent[1]); // Fix #4158\n\n    var originalScale = this._originalScale;\n    var originalExtent = originalScale.getExtent();\n    originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n    originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n    return extent;\n  },\n\n  /**\n   * @param  {Array.<number>} extent\n   */\n  unionExtent: function (extent) {\n    this._originalScale.unionExtent(extent);\n\n    var base = this.base;\n    extent[0] = mathLog(extent[0]) / mathLog(base);\n    extent[1] = mathLog(extent[1]) / mathLog(base);\n    scaleProto.unionExtent.call(this, extent);\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    this.unionExtent(data.getDataExtent(dim, true, function (val) {\n      return val > 0;\n    }));\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   * @param  {number} [approxTickNum = 10] Given approx tick number\n   */\n  niceTicks: function (approxTickNum) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (span === Infinity || span <= 0) {\n      return;\n    }\n\n    var interval = numberUtil.quantity(span);\n    var err = approxTickNum / span * interval; // Filter ticks to get closer to the desired count.\n\n    if (err <= 0.5) {\n      interval *= 10;\n    } // Interval should be integer\n\n\n    while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n      interval *= 10;\n    }\n\n    var niceExtent = [numberUtil.round(mathCeil(extent[0] / interval) * interval), numberUtil.round(mathFloor(extent[1] / interval) * interval)];\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @override\n   */\n  niceExtent: function (opt) {\n    intervalScaleProto.niceExtent.call(this, opt);\n    var originalScale = this._originalScale;\n    originalScale.__fixMin = opt.fixMin;\n    originalScale.__fixMax = opt.fixMax;\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  LogScale.prototype[methodName] = function (val) {\n    val = mathLog(val) / mathLog(this.base);\n    return scaleProto[methodName].call(this, val);\n  };\n});\n\nLogScale.create = function () {\n  return new LogScale();\n};\n\nfunction fixRoundingError(val, originalVal) {\n  return roundingErrorFix(val, getPrecisionSafe(originalVal));\n}\n\nvar _default = LogScale;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1185:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1027);\n\nvar modelUtil = __webpack_require__(1031);\n\nvar modelHelper = __webpack_require__(1064);\n\nvar findPointFromSeries = __webpack_require__(1104);\n\nvar each = zrUtil.each;\nvar curry = zrUtil.curry;\nvar get = modelUtil.makeGetter();\n/**\n * Basic logic: check all axis, if they do not demand show/highlight,\n * then hide/downplay them.\n *\n * @param {Object} coordSysAxesInfo\n * @param {Object} payload\n * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n * @param {Object} [payload.dataIndex] finder, restrict target axes.\n * @param {Object} [payload.axesInfo] finder, restrict target axes.\n *        [{\n *          axisDim: 'x'|'y'|'angle'|...,\n *          axisIndex: ...,\n *          value: ...\n *        }, ...]\n * @param {Function} [payload.dispatchAction]\n * @param {Object} [payload.tooltipOption]\n * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n *        which can be specified in dispatchAction\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n * @return {Object} content of event obj for echarts.connect.\n */\n\nfunction _default(payload, ecModel, api) {\n  var currTrigger = payload.currTrigger;\n  var point = [payload.x, payload.y];\n  var finder = payload;\n  var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n  var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo; // Pending\n  // See #6121. But we are not able to reproduce it yet.\n\n  if (!coordSysAxesInfo) {\n    return;\n  }\n\n  if (illegalPoint(point)) {\n    // Used in the default behavior of `connection`: use the sample seriesIndex\n    // and dataIndex. And also used in the tooltipView trigger.\n    point = findPointFromSeries({\n      seriesIndex: finder.seriesIndex,\n      // Do not use dataIndexInside from other ec instance.\n      // FIXME: auto detect it?\n      dataIndex: finder.dataIndex\n    }, ecModel).point;\n  }\n\n  var isIllegalPoint = illegalPoint(point); // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n  // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n  // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n  // and dataIndex.\n\n  var inputAxesInfo = finder.axesInfo;\n  var axesInfo = coordSysAxesInfo.axesInfo;\n  var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n  var outputFinder = {};\n  var showValueMap = {};\n  var dataByCoordSys = {\n    list: [],\n    map: {}\n  };\n  var updaters = {\n    showPointer: curry(showPointer, showValueMap),\n    showTooltip: curry(showTooltip, dataByCoordSys)\n  }; // Process for triggered axes.\n\n  each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n    // If a point given, it must be contained by the coordinate system.\n    var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n    each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n      var axis = axisInfo.axis;\n      var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo); // If no inputAxesInfo, no axis is restricted.\n\n      if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n        var val = inputAxisInfo && inputAxisInfo.value;\n\n        if (val == null && !isIllegalPoint) {\n          val = axis.pointToData(point);\n        }\n\n        val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n      }\n    });\n  }); // Process for linked axes.\n\n  var linkTriggers = {};\n  each(axesInfo, function (tarAxisInfo, tarKey) {\n    var linkGroup = tarAxisInfo.linkGroup; // If axis has been triggered in the previous stage, it should not be triggered by link.\n\n    if (linkGroup && !showValueMap[tarKey]) {\n      each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n        var srcValItem = showValueMap[srcKey]; // If srcValItem exist, source axis is triggered, so link to target axis.\n\n        if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n          var val = srcValItem.value;\n          linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo))));\n          linkTriggers[tarAxisInfo.key] = val;\n        }\n      });\n    }\n  });\n  each(linkTriggers, function (val, tarKey) {\n    processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n  });\n  updateModelActually(showValueMap, axesInfo, outputFinder);\n  dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n  dispatchHighDownActually(axesInfo, dispatchAction, api);\n  return outputFinder;\n}\n\nfunction processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n  var axis = axisInfo.axis;\n\n  if (axis.scale.isBlank() || !axis.containData(newValue)) {\n    return;\n  }\n\n  if (!axisInfo.involveSeries) {\n    updaters.showPointer(axisInfo, newValue);\n    return;\n  } // Heavy calculation. So put it after axis.containData checking.\n\n\n  var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n  var payloadBatch = payloadInfo.payloadBatch;\n  var snapToValue = payloadInfo.snapToValue; // Fill content of event obj for echarts.connect.\n  // By defualt use the first involved series data as a sample to connect.\n\n  if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n    zrUtil.extend(outputFinder, payloadBatch[0]);\n  } // If no linkSource input, this process is for collecting link\n  // target, where snap should not be accepted.\n\n\n  if (!dontSnap && axisInfo.snap) {\n    if (axis.containData(snapToValue) && snapToValue != null) {\n      newValue = snapToValue;\n    }\n  }\n\n  updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder); // Tooltip should always be snapToValue, otherwise there will be\n  // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n\n  updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n}\n\nfunction buildPayloadsBySeries(value, axisInfo) {\n  var axis = axisInfo.axis;\n  var dim = axis.dim;\n  var snapToValue = value;\n  var payloadBatch = [];\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n  each(axisInfo.seriesModels, function (series, idx) {\n    var dataDim = series.coordDimToDataDim(dim);\n    var seriesNestestValue;\n    var dataIndices;\n\n    if (series.getAxisTooltipData) {\n      var result = series.getAxisTooltipData(dataDim, value, axis);\n      dataIndices = result.dataIndices;\n      seriesNestestValue = result.nestestValue;\n    } else {\n      dataIndices = series.getData().indicesOfNearest(dataDim[0], value, // Add a threshold to avoid find the wrong dataIndex\n      // when data length is not same.\n      false, axis.type === 'category' ? 0.5 : null);\n\n      if (!dataIndices.length) {\n        return;\n      }\n\n      seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n    }\n\n    if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n      return;\n    }\n\n    var diff = value - seriesNestestValue;\n    var dist = Math.abs(diff); // Consider category case\n\n    if (dist <= minDist) {\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        snapToValue = seriesNestestValue;\n        payloadBatch.length = 0;\n      }\n\n      each(dataIndices, function (dataIndex) {\n        payloadBatch.push({\n          seriesIndex: series.seriesIndex,\n          dataIndexInside: dataIndex,\n          dataIndex: series.getData().getRawIndex(dataIndex)\n        });\n      });\n    }\n  });\n  return {\n    payloadBatch: payloadBatch,\n    snapToValue: snapToValue\n  };\n}\n\nfunction showPointer(showValueMap, axisInfo, value, payloadBatch) {\n  showValueMap[axisInfo.key] = {\n    value: value,\n    payloadBatch: payloadBatch\n  };\n}\n\nfunction showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n  var payloadBatch = payloadInfo.payloadBatch;\n  var axis = axisInfo.axis;\n  var axisModel = axis.model;\n  var axisPointerModel = axisInfo.axisPointerModel; // If no data, do not create anything in dataByCoordSys,\n  // whose length will be used to judge whether dispatch action.\n\n  if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n    return;\n  }\n\n  var coordSysModel = axisInfo.coordSys.model;\n  var coordSysKey = modelHelper.makeKey(coordSysModel);\n  var coordSysItem = dataByCoordSys.map[coordSysKey];\n\n  if (!coordSysItem) {\n    coordSysItem = dataByCoordSys.map[coordSysKey] = {\n      coordSysId: coordSysModel.id,\n      coordSysIndex: coordSysModel.componentIndex,\n      coordSysType: coordSysModel.type,\n      coordSysMainType: coordSysModel.mainType,\n      dataByAxis: []\n    };\n    dataByCoordSys.list.push(coordSysItem);\n  }\n\n  coordSysItem.dataByAxis.push({\n    axisDim: axis.dim,\n    axisIndex: axisModel.componentIndex,\n    axisType: axisModel.type,\n    axisId: axisModel.id,\n    value: value,\n    // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n    // depends that all models have been updated. So it should not be performed\n    // here. Considering axisPointerModel used here is volatile, which is hard\n    // to be retrieve in TooltipView, we prepare parameters here.\n    valueLabelOpt: {\n      precision: axisPointerModel.get('label.precision'),\n      formatter: axisPointerModel.get('label.formatter')\n    },\n    seriesDataIndices: payloadBatch.slice()\n  });\n}\n\nfunction updateModelActually(showValueMap, axesInfo, outputFinder) {\n  var outputAxesInfo = outputFinder.axesInfo = []; // Basic logic: If no 'show' required, 'hide' this axisPointer.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    var valItem = showValueMap[key];\n\n    if (valItem) {\n      !axisInfo.useHandle && (option.status = 'show');\n      option.value = valItem.value; // For label formatter param and highlight.\n\n      option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n    } // When always show (e.g., handle used), remain\n    // original value and status.\n    else {\n        // If hide, value still need to be set, consider\n        // click legend to toggle axis blank.\n        !axisInfo.useHandle && (option.status = 'hide');\n      } // If status is 'hide', should be no info in payload.\n\n\n    option.status === 'show' && outputAxesInfo.push({\n      axisDim: axisInfo.axis.dim,\n      axisIndex: axisInfo.axis.model.componentIndex,\n      value: option.value\n    });\n  });\n}\n\nfunction dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n  // Basic logic: If no showTip required, hideTip will be dispatched.\n  if (illegalPoint(point) || !dataByCoordSys.list.length) {\n    dispatchAction({\n      type: 'hideTip'\n    });\n    return;\n  } // In most case only one axis (or event one series is used). It is\n  // convinient to fetch payload.seriesIndex and payload.dataIndex\n  // dirtectly. So put the first seriesIndex and dataIndex of the first\n  // axis on the payload.\n\n\n  var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n  dispatchAction({\n    type: 'showTip',\n    escapeConnect: true,\n    x: point[0],\n    y: point[1],\n    tooltipOption: payload.tooltipOption,\n    position: payload.position,\n    dataIndexInside: sampleItem.dataIndexInside,\n    dataIndex: sampleItem.dataIndex,\n    seriesIndex: sampleItem.seriesIndex,\n    dataByCoordSys: dataByCoordSys.list\n  });\n}\n\nfunction dispatchHighDownActually(axesInfo, dispatchAction, api) {\n  // FIXME\n  // highlight status modification shoule be a stage of main process?\n  // (Consider confilct (e.g., legend and axisPointer) and setOption)\n  var zr = api.getZr();\n  var highDownKey = 'axisPointerLastHighlights';\n  var lastHighlights = get(zr)[highDownKey] || {};\n  var newHighlights = get(zr)[highDownKey] = {}; // Update highlight/downplay status according to axisPointer model.\n  // Build hash map and remove duplicate incidentally.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n      var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n      newHighlights[key] = batchItem;\n    });\n  }); // Diff.\n\n  var toHighlight = [];\n  var toDownplay = [];\n  zrUtil.each(lastHighlights, function (batchItem, key) {\n    !newHighlights[key] && toDownplay.push(batchItem);\n  });\n  zrUtil.each(newHighlights, function (batchItem, key) {\n    !lastHighlights[key] && toHighlight.push(batchItem);\n  });\n  toDownplay.length && api.dispatchAction({\n    type: 'downplay',\n    escapeConnect: true,\n    batch: toDownplay\n  });\n  toHighlight.length && api.dispatchAction({\n    type: 'highlight',\n    escapeConnect: true,\n    batch: toHighlight\n  });\n}\n\nfunction findInputAxisInfo(inputAxesInfo, axisInfo) {\n  for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n    var inputAxisInfo = inputAxesInfo[i];\n\n    if (axisInfo.axis.dim === inputAxisInfo.axisDim && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex) {\n      return inputAxisInfo;\n    }\n  }\n}\n\nfunction makeMapperParam(axisInfo) {\n  var axisModel = axisInfo.axis.model;\n  var item = {};\n  var dim = item.axisDim = axisInfo.axis.dim;\n  item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n  item.axisName = item[dim + 'AxisName'] = axisModel.name;\n  item.axisId = item[dim + 'AxisId'] = axisModel.id;\n  return item;\n}\n\nfunction illegalPoint(point) {\n  return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1186:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1028);\n\nvar AxisPointerModel = echarts.extendComponentModel({\n  type: 'axisPointer',\n  coordSysAxesInfo: null,\n  defaultOption: {\n    // 'auto' means that show when triggered by tooltip or handle.\n    show: 'auto',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: null,\n    // set default in AxisPonterView.js\n    zlevel: 0,\n    z: 50,\n    type: 'line',\n    // axispointer triggered by tootip determine snap automatically,\n    // see `modelHelper`.\n    snap: false,\n    triggerTooltip: true,\n    value: null,\n    status: null,\n    // Init value depends on whether handle is used.\n    // [group0, group1, ...]\n    // Each group can be: {\n    //      mapper: function () {},\n    //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n    //      xAxisId: ...,\n    //      yAxisName: ...,\n    //      angleAxisIndex: ...\n    // }\n    // mapper: can be ignored.\n    //      input: {axisInfo, value}\n    //      output: {axisInfo, value}\n    link: [],\n    // Do not set 'auto' here, otherwise global animation: false\n    // will not effect at this axispointer.\n    animation: null,\n    animationDurationUpdate: 200,\n    lineStyle: {\n      color: '#aaa',\n      width: 1,\n      type: 'solid'\n    },\n    shadowStyle: {\n      color: 'rgba(150,150,150,0.3)'\n    },\n    label: {\n      show: true,\n      formatter: null,\n      // string | Function\n      precision: 'auto',\n      // Or a number like 0, 1, 2 ...\n      margin: 3,\n      color: '#fff',\n      padding: [5, 7, 5, 7],\n      backgroundColor: 'auto',\n      // default: axis line color\n      borderColor: null,\n      borderWidth: 0,\n      shadowBlur: 3,\n      shadowColor: '#aaa' // Considering applicability, common style should\n      // better not have shadowOffset.\n      // shadowOffsetX: 0,\n      // shadowOffsetY: 2\n\n    },\n    handle: {\n      show: false,\n      icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z',\n      // jshint ignore:line\n      size: 45,\n      // handle margin is from symbol center to axis, which is stable when circular move.\n      margin: 50,\n      // color: '#1b8bbd'\n      // color: '#2f4554'\n      color: '#333',\n      shadowBlur: 3,\n      shadowColor: '#aaa',\n      shadowOffsetX: 0,\n      shadowOffsetY: 2,\n      // For mobile performance\n      throttle: 40\n    }\n  }\n});\nvar _default = AxisPointerModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1187:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1028);\n\nvar globalListener = __webpack_require__(1105);\n\nvar AxisPointerView = echarts.extendComponentView({\n  type: 'axisPointer',\n  render: function (globalAxisPointerModel, ecModel, api) {\n    var globalTooltipModel = ecModel.getComponent('tooltip');\n    var triggerOn = globalAxisPointerModel.get('triggerOn') || globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click'; // Register global listener in AxisPointerView to enable\n    // AxisPointerView to be independent to Tooltip.\n\n    globalListener.register('axisPointer', api, function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none' && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)) {\n        dispatchAction({\n          type: 'updateAxisPointer',\n          currTrigger: currTrigger,\n          x: e && e.offsetX,\n          y: e && e.offsetY\n        });\n      }\n    });\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    globalListener.unregister(api.getZr(), 'axisPointer');\n    AxisPointerView.superApply(this._model, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    globalListener.unregister('axisPointer', api);\n    AxisPointerView.superApply(this._model, 'dispose', arguments);\n  }\n});\nvar _default = AxisPointerView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1188:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1028);\n\nvar _default = echarts.extendComponentModel({\n  type: 'tooltip',\n  dependencies: ['axisPointer'],\n  defaultOption: {\n    zlevel: 0,\n    z: 8,\n    show: true,\n    // tooltip主体内容\n    showContent: true,\n    // 'trigger' only works on coordinate system.\n    // 'item' | 'axis' | 'none'\n    trigger: 'item',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: 'mousemove|click',\n    alwaysShowContent: false,\n    displayMode: 'single',\n    // 'single' | 'multipleByCoordSys'\n    // 位置 {Array} | {Function}\n    // position: null\n    // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n    // align: null,\n    // verticalAlign: null,\n    // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n    confine: false,\n    // 内容格式器：{string}（Template） ¦ {Function}\n    // formatter: null\n    showDelay: 0,\n    // 隐藏延迟，单位ms\n    hideDelay: 100,\n    // 动画变换时间，单位s\n    transitionDuration: 0.4,\n    enterable: false,\n    // 提示背景颜色，默认为透明度为0.7的黑色\n    backgroundColor: 'rgba(50,50,50,0.7)',\n    // 提示边框颜色\n    borderColor: '#333',\n    // 提示边框圆角，单位px，默认为4\n    borderRadius: 4,\n    // 提示边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 提示内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // Extra css text\n    extraCssText: '',\n    // 坐标轴指示器，坐标轴触发有效\n    axisPointer: {\n      // 默认为直线\n      // 可选为：'line' | 'shadow' | 'cross'\n      type: 'line',\n      // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n      // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n      // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n      // 极坐标系会默认选择 angle 轴\n      axis: 'auto',\n      animation: 'auto',\n      animationDurationUpdate: 200,\n      animationEasingUpdate: 'exponentialOut',\n      crossStyle: {\n        color: '#999',\n        width: 1,\n        type: 'dashed',\n        // TODO formatter\n        textStyle: {} // lineStyle and shadowStyle should not be specified here,\n        // otherwise it will always override those styles on option.axisPointer.\n\n      }\n    },\n    textStyle: {\n      color: '#fff',\n      fontSize: 14\n    }\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1189:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1028);\n\nvar zrUtil = __webpack_require__(1027);\n\nvar env = __webpack_require__(1035);\n\nvar TooltipContent = __webpack_require__(1190);\n\nvar formatUtil = __webpack_require__(1034);\n\nvar numberUtil = __webpack_require__(1030);\n\nvar graphic = __webpack_require__(1029);\n\nvar findPointFromSeries = __webpack_require__(1104);\n\nvar layoutUtil = __webpack_require__(1039);\n\nvar Model = __webpack_require__(1038);\n\nvar globalListener = __webpack_require__(1105);\n\nvar axisHelper = __webpack_require__(1045);\n\nvar axisPointerViewHelper = __webpack_require__(1084);\n\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar parsePercent = numberUtil.parsePercent;\nvar proxyRect = new graphic.Rect({\n  shape: {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  }\n});\n\nvar _default = echarts.extendComponentView({\n  type: 'tooltip',\n  init: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    var tooltipContent = new TooltipContent(api.getDom(), api);\n    this._tooltipContent = tooltipContent;\n  },\n  render: function (tooltipModel, ecModel, api) {\n    if (env.node) {\n      return;\n    } // Reset\n\n\n    this.group.removeAll();\n    /**\n     * @private\n     * @type {module:echarts/component/tooltip/TooltipModel}\n     */\n\n    this._tooltipModel = tooltipModel;\n    /**\n     * @private\n     * @type {module:echarts/model/Global}\n     */\n\n    this._ecModel = ecModel;\n    /**\n     * @private\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this._api = api;\n    /**\n     * Should be cleaned when render.\n     * @private\n     * @type {Array.<Array.<Object>>}\n     */\n\n    this._lastDataByCoordSys = null;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.update();\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n    this._initGlobalListener();\n\n    this._keepShow();\n  },\n  _initGlobalListener: function () {\n    var tooltipModel = this._tooltipModel;\n    var triggerOn = tooltipModel.get('triggerOn');\n    globalListener.register('itemTooltip', this._api, bind(function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none') {\n        if (triggerOn.indexOf(currTrigger) >= 0) {\n          this._tryShow(e, dispatchAction);\n        } else if (currTrigger === 'leave') {\n          this._hide(dispatchAction);\n        }\n      }\n    }, this));\n  },\n  _keepShow: function () {\n    var tooltipModel = this._tooltipModel;\n    var ecModel = this._ecModel;\n    var api = this._api; // Try to keep the tooltip show when refreshing\n\n    if (this._lastX != null && this._lastY != null // When user is willing to control tooltip totally using API,\n    // self.manuallyShowTip({x, y}) might cause tooltip hide,\n    // which is not expected.\n    && tooltipModel.get('triggerOn') !== 'none') {\n      var self = this;\n      clearTimeout(this._refreshUpdateTimeout);\n      this._refreshUpdateTimeout = setTimeout(function () {\n        // Show tip next tick after other charts are rendered\n        // In case highlight action has wrong result\n        // FIXME\n        self.manuallyShowTip(tooltipModel, ecModel, api, {\n          x: self._lastX,\n          y: self._lastY\n        });\n      });\n    }\n  },\n\n  /**\n   * Show tip manually by\n   * dispatchAction({\n   *     type: 'showTip',\n   *     x: 10,\n   *     y: 10\n   * });\n   * Or\n   * dispatchAction({\n   *      type: 'showTip',\n   *      seriesIndex: 0,\n   *      dataIndex or dataIndexInside or name\n   * });\n   *\n   *  TODO Batch\n   */\n  manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n    if (payload.from === this.uid || env.node) {\n      return;\n    }\n\n    var dispatchAction = makeDispatchAction(payload, api); // Reset ticket\n\n    this._ticket = ''; // When triggered from axisPointer.\n\n    var dataByCoordSys = payload.dataByCoordSys;\n\n    if (payload.tooltip && payload.x != null && payload.y != null) {\n      var el = proxyRect;\n      el.position = [payload.x, payload.y];\n      el.update();\n      el.tooltip = payload.tooltip; // Manually show tooltip while view is not using zrender elements.\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        target: el\n      }, dispatchAction);\n    } else if (dataByCoordSys) {\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        event: {},\n        dataByCoordSys: payload.dataByCoordSys,\n        tooltipOption: payload.tooltipOption\n      }, dispatchAction);\n    } else if (payload.seriesIndex != null) {\n      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n        return;\n      }\n\n      var pointInfo = findPointFromSeries(payload, ecModel);\n      var cx = pointInfo.point[0];\n      var cy = pointInfo.point[1];\n\n      if (cx != null && cy != null) {\n        this._tryShow({\n          offsetX: cx,\n          offsetY: cy,\n          position: payload.position,\n          target: pointInfo.el,\n          event: {}\n        }, dispatchAction);\n      }\n    } else if (payload.x != null && payload.y != null) {\n      // FIXME\n      // should wrap dispatchAction like `axisPointer/globalListener` ?\n      api.dispatchAction({\n        type: 'updateAxisPointer',\n        x: payload.x,\n        y: payload.y\n      });\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        target: api.getZr().findHover(payload.x, payload.y).target,\n        event: {}\n      }, dispatchAction);\n    }\n  },\n  manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n    var tooltipContent = this._tooltipContent;\n\n    if (!this._alwaysShowContent) {\n      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n    }\n\n    this._lastX = this._lastY = null;\n\n    if (payload.from !== this.uid) {\n      this._hide(makeDispatchAction(payload, api));\n    }\n  },\n  // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n  // and tooltip.\n  _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n    var seriesIndex = payload.seriesIndex;\n    var dataIndex = payload.dataIndex;\n    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n      return;\n    }\n\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (!seriesModel) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model, tooltipModel]);\n\n    if (tooltipModel.get('trigger') !== 'axis') {\n      return;\n    }\n\n    api.dispatchAction({\n      type: 'updateAxisPointer',\n      seriesIndex: seriesIndex,\n      dataIndex: dataIndex,\n      position: payload.position\n    });\n    return true;\n  },\n  _tryShow: function (e, dispatchAction) {\n    var el = e.target;\n    var tooltipModel = this._tooltipModel;\n\n    if (!tooltipModel) {\n      return;\n    } // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n\n\n    this._lastX = e.offsetX;\n    this._lastY = e.offsetY;\n    var dataByCoordSys = e.dataByCoordSys;\n\n    if (dataByCoordSys && dataByCoordSys.length) {\n      this._showAxisTooltip(dataByCoordSys, e);\n    } // Always show item tooltip if mouse is on the element with dataIndex\n    else if (el && el.dataIndex != null) {\n        this._lastDataByCoordSys = null;\n\n        this._showSeriesItemTooltip(e, el, dispatchAction);\n      } // Tooltip provided directly. Like legend.\n      else if (el && el.tooltip) {\n          this._lastDataByCoordSys = null;\n\n          this._showComponentItemTooltip(e, el, dispatchAction);\n        } else {\n          this._lastDataByCoordSys = null;\n\n          this._hide(dispatchAction);\n        }\n  },\n  _showOrMove: function (tooltipModel, cb) {\n    // showDelay is used in this case: tooltip.enterable is set\n    // as true. User intent to move mouse into tooltip and click\n    // something. `showDelay` makes it easyer to enter the content\n    // but tooltip do not move immediately.\n    var delay = tooltipModel.get('showDelay');\n    cb = zrUtil.bind(cb, this);\n    clearTimeout(this._showTimout);\n    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\n  },\n  _showAxisTooltip: function (dataByCoordSys, e) {\n    var ecModel = this._ecModel;\n    var globalTooltipModel = this._tooltipModel;\n    var point = [e.offsetX, e.offsetY];\n    var singleDefaultHTML = [];\n    var singleParamsList = [];\n    var singleTooltipModel = buildTooltipModel([e.tooltipOption, globalTooltipModel]);\n    each(dataByCoordSys, function (itemCoordSys) {\n      // var coordParamList = [];\n      // var coordDefaultHTML = [];\n      // var coordTooltipModel = buildTooltipModel([\n      //     e.tooltipOption,\n      //     itemCoordSys.tooltipOption,\n      //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n      //     globalTooltipModel\n      // ]);\n      // var displayMode = coordTooltipModel.get('displayMode');\n      // var paramsList = displayMode === 'single' ? singleParamsList : [];\n      each(itemCoordSys.dataByAxis, function (item) {\n        var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n        var axisValue = item.value;\n        var seriesDefaultHTML = [];\n\n        if (!axisModel || axisValue == null) {\n          return;\n        }\n\n        var valueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, item.seriesDataIndices, item.valueLabelOpt);\n        zrUtil.each(item.seriesDataIndices, function (idxItem) {\n          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n          var dataIndex = idxItem.dataIndexInside;\n          var dataParams = series && series.getDataParams(dataIndex);\n          dataParams.axisDim = item.axisDim;\n          dataParams.axisIndex = item.axisIndex;\n          dataParams.axisType = item.axisType;\n          dataParams.axisId = item.axisId;\n          dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n          dataParams.axisValueLabel = valueLabel;\n\n          if (dataParams) {\n            singleParamsList.push(dataParams);\n            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n          }\n        }); // Default tooltip content\n        // FIXME\n        // (1) shold be the first data which has name?\n        // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n\n        var firstLine = valueLabel;\n        singleDefaultHTML.push((firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '') + seriesDefaultHTML.join('<br />'));\n      });\n    }, this); // In most case, the second axis is shown upper than the first one.\n\n    singleDefaultHTML.reverse();\n    singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n    var positionExpr = e.position;\n\n    this._showOrMove(singleTooltipModel, function () {\n      if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, singleParamsList);\n      } else {\n        this._showTooltipContent(singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(), point[0], point[1], positionExpr);\n      }\n    }); // Do not trigger events here, because this branch only be entered\n    // from dispatchAction.\n\n  },\n  _showSeriesItemTooltip: function (e, el, dispatchAction) {\n    var ecModel = this._ecModel; // Use dataModel in element if possible\n    // Used when mouseover on a element like markPoint or edge\n    // In which case, the data is not main data in series.\n\n    var seriesIndex = el.seriesIndex;\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex); // For example, graph link.\n\n    var dataModel = el.dataModel || seriesModel;\n    var dataIndex = el.dataIndex;\n    var dataType = el.dataType;\n    var data = dataModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model, this._tooltipModel]);\n    var tooltipTrigger = tooltipModel.get('trigger');\n\n    if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n      return;\n    }\n\n    var params = dataModel.getDataParams(dataIndex, dataType);\n    var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n    this._showOrMove(tooltipModel, function () {\n      this._showTooltipContent(tooltipModel, defaultHtml, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target);\n    }); // FIXME\n    // duplicated showtip if manuallyShowTip is called from dispatchAction.\n\n\n    dispatchAction({\n      type: 'showTip',\n      dataIndexInside: dataIndex,\n      dataIndex: data.getRawIndex(dataIndex),\n      seriesIndex: seriesIndex,\n      from: this.uid\n    });\n  },\n  _showComponentItemTooltip: function (e, el, dispatchAction) {\n    var tooltipOpt = el.tooltip;\n\n    if (typeof tooltipOpt === 'string') {\n      var content = tooltipOpt;\n      tooltipOpt = {\n        content: content,\n        // Fixed formatter\n        formatter: content\n      };\n    }\n\n    var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n    var defaultHtml = subTooltipModel.get('content');\n    var asyncTicket = Math.random(); // Do not check whether `trigger` is 'none' here, because `trigger`\n    // only works on cooridinate system. In fact, we have not found case\n    // that requires setting `trigger` nothing on component yet.\n\n    this._showOrMove(subTooltipModel, function () {\n      this._showTooltipContent(subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {}, asyncTicket, e.offsetX, e.offsetY, e.position, el);\n    }); // If not dispatch showTip, tip may be hide triggered by axis.\n\n\n    dispatchAction({\n      type: 'showTip',\n      from: this.uid\n    });\n  },\n  _showTooltipContent: function (tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el) {\n    // Reset ticket\n    this._ticket = '';\n\n    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n      return;\n    }\n\n    var tooltipContent = this._tooltipContent;\n    var formatter = tooltipModel.get('formatter');\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var html = defaultHtml;\n\n    if (formatter && typeof formatter === 'string') {\n      html = formatUtil.formatTpl(formatter, params, true);\n    } else if (typeof formatter === 'function') {\n      var callback = bind(function (cbTicket, html) {\n        if (cbTicket === this._ticket) {\n          tooltipContent.setContent(html);\n\n          this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n        }\n      }, this);\n      this._ticket = asyncTicket;\n      html = formatter(params, asyncTicket, callback);\n    }\n\n    tooltipContent.setContent(html);\n    tooltipContent.show(tooltipModel);\n\n    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n  },\n\n  /**\n   * @param  {string|Function|Array.<number>|Object} positionExpr\n   * @param  {number} x Mouse x\n   * @param  {number} y Mouse y\n   * @param  {boolean} confine Whether confine tooltip content in view rect.\n   * @param  {Object|<Array.<Object>} params\n   * @param  {module:zrender/Element} el target element\n   * @param  {module:echarts/ExtensionAPI} api\n   * @return {Array.<number>}\n   */\n  _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n    var viewWidth = this._api.getWidth();\n\n    var viewHeight = this._api.getHeight();\n\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var contentSize = content.getSize();\n    var align = tooltipModel.get('align');\n    var vAlign = tooltipModel.get('verticalAlign');\n    var rect = el && el.getBoundingRect().clone();\n    el && rect.applyTransform(el.transform);\n\n    if (typeof positionExpr === 'function') {\n      // Callback of position can be an array or a string specify the position\n      positionExpr = positionExpr([x, y], params, content.el, rect, {\n        viewSize: [viewWidth, viewHeight],\n        contentSize: contentSize.slice()\n      });\n    }\n\n    if (zrUtil.isArray(positionExpr)) {\n      x = parsePercent(positionExpr[0], viewWidth);\n      y = parsePercent(positionExpr[1], viewHeight);\n    } else if (zrUtil.isObject(positionExpr)) {\n      positionExpr.width = contentSize[0];\n      positionExpr.height = contentSize[1];\n      var layoutRect = layoutUtil.getLayoutRect(positionExpr, {\n        width: viewWidth,\n        height: viewHeight\n      });\n      x = layoutRect.x;\n      y = layoutRect.y;\n      align = null; // When positionExpr is left/top/right/bottom,\n      // align and verticalAlign will not work.\n\n      vAlign = null;\n    } // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n    else if (typeof positionExpr === 'string' && el) {\n        var pos = calcTooltipPosition(positionExpr, rect, contentSize);\n        x = pos[0];\n        y = pos[1];\n      } else {\n        var pos = refixTooltipPosition(x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\n        x = pos[0];\n        y = pos[1];\n      }\n\n    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n    if (tooltipModel.get('confine')) {\n      var pos = confineTooltipPosition(x, y, content.el, viewWidth, viewHeight);\n      x = pos[0];\n      y = pos[1];\n    }\n\n    content.moveTo(x, y);\n  },\n  // FIXME\n  // Should we remove this but leave this to user?\n  _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n    var lastCoordSys = this._lastDataByCoordSys;\n    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\n    contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n      var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n      contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n      contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n        var thisItem = thisDataByAxis[indexAxis] || {};\n        var lastIndices = lastItem.seriesDataIndices || [];\n        var newIndices = thisItem.seriesDataIndices || [];\n        contentNotChanged &= lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\n        contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n          var newIdxItem = newIndices[j];\n          contentNotChanged &= lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n        });\n      });\n    });\n    this._lastDataByCoordSys = dataByCoordSys;\n    return !!contentNotChanged;\n  },\n  _hide: function (dispatchAction) {\n    // Do not directly hideLater here, because this behavior may be prevented\n    // in dispatchAction when showTip is dispatched.\n    // FIXME\n    // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n    this._lastDataByCoordSys = null;\n    dispatchAction({\n      type: 'hideTip',\n      from: this.uid\n    });\n  },\n  dispose: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    this._tooltipContent.hide();\n\n    globalListener.unregister('itemTooltip', api);\n  }\n});\n/**\n * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n * From top to bottom. (the last one should be globalTooltipModel);\n */\n\n\nfunction buildTooltipModel(modelCascade) {\n  var resultModel = modelCascade.pop();\n\n  while (modelCascade.length) {\n    var tooltipOpt = modelCascade.pop();\n\n    if (tooltipOpt) {\n      if (tooltipOpt instanceof Model) {\n        tooltipOpt = tooltipOpt.get('tooltip', true);\n      } // In each data item tooltip can be simply write:\n      // {\n      //  value: 10,\n      //  tooltip: 'Something you need to know'\n      // }\n\n\n      if (typeof tooltipOpt === 'string') {\n        tooltipOpt = {\n          formatter: tooltipOpt\n        };\n      }\n\n      resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n    }\n  }\n\n  return resultModel;\n}\n\nfunction makeDispatchAction(payload, api) {\n  return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n}\n\nfunction refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n\n  if (gapH != null) {\n    if (x + width + gapH > viewWidth) {\n      x -= width + gapH;\n    } else {\n      x += gapH;\n    }\n  }\n\n  if (gapV != null) {\n    if (y + height + gapV > viewHeight) {\n      y -= height + gapV;\n    } else {\n      y += gapV;\n    }\n  }\n\n  return [x, y];\n}\n\nfunction confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n  x = Math.min(x + width, viewWidth) - width;\n  y = Math.min(y + height, viewHeight) - height;\n  x = Math.max(x, 0);\n  y = Math.max(y, 0);\n  return [x, y];\n}\n\nfunction getOuterSize(el) {\n  var width = el.clientWidth;\n  var height = el.clientHeight; // Consider browser compatibility.\n  // IE8 does not support getComputedStyle.\n\n  if (document.defaultView && document.defaultView.getComputedStyle) {\n    var stl = document.defaultView.getComputedStyle(el);\n\n    if (stl) {\n      width += parseInt(stl.paddingLeft, 10) + parseInt(stl.paddingRight, 10) + parseInt(stl.borderLeftWidth, 10) + parseInt(stl.borderRightWidth, 10);\n      height += parseInt(stl.paddingTop, 10) + parseInt(stl.paddingBottom, 10) + parseInt(stl.borderTopWidth, 10) + parseInt(stl.borderBottomWidth, 10);\n    }\n  }\n\n  return {\n    width: width,\n    height: height\n  };\n}\n\nfunction calcTooltipPosition(position, rect, contentSize) {\n  var domWidth = contentSize[0];\n  var domHeight = contentSize[1];\n  var gap = 5;\n  var x = 0;\n  var y = 0;\n  var rectWidth = rect.width;\n  var rectHeight = rect.height;\n\n  switch (position) {\n    case 'inside':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'top':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y - domHeight - gap;\n      break;\n\n    case 'bottom':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight + gap;\n      break;\n\n    case 'left':\n      x = rect.x - domWidth - gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'right':\n      x = rect.x + rectWidth + gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n  }\n\n  return [x, y];\n}\n\nfunction isCenterAlign(align) {\n  return align === 'center' || align === 'middle';\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1190:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1027);\n\nvar zrColor = __webpack_require__(1051);\n\nvar eventUtil = __webpack_require__(1047);\n\nvar env = __webpack_require__(1035);\n\nvar formatUtil = __webpack_require__(1034);\n\nvar each = zrUtil.each;\nvar toCamelCase = formatUtil.toCamelCase;\nvar vendors = ['', '-webkit-', '-moz-', '-o-'];\nvar gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n/**\n * @param {number} duration\n * @return {string}\n * @inner\n */\n\nfunction assembleTransition(duration) {\n  var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n  var transitionText = 'left ' + duration + 's ' + transitionCurve + ',' + 'top ' + duration + 's ' + transitionCurve;\n  return zrUtil.map(vendors, function (vendorPrefix) {\n    return vendorPrefix + 'transition:' + transitionText;\n  }).join(';');\n}\n/**\n * @param {Object} textStyle\n * @return {string}\n * @inner\n */\n\n\nfunction assembleFont(textStyleModel) {\n  var cssText = [];\n  var fontSize = textStyleModel.get('fontSize');\n  var color = textStyleModel.getTextColor();\n  color && cssText.push('color:' + color);\n  cssText.push('font:' + textStyleModel.getFont());\n  fontSize && cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n  each(['decoration', 'align'], function (name) {\n    var val = textStyleModel.get(name);\n    val && cssText.push('text-' + name + ':' + val);\n  });\n  return cssText.join(';');\n}\n/**\n * @param {Object} tooltipModel\n * @return {string}\n * @inner\n */\n\n\nfunction assembleCssText(tooltipModel) {\n  var cssText = [];\n  var transitionDuration = tooltipModel.get('transitionDuration');\n  var backgroundColor = tooltipModel.get('backgroundColor');\n  var textStyleModel = tooltipModel.getModel('textStyle');\n  var padding = tooltipModel.get('padding'); // Animation transition. Do not animate when transitionDuration is 0.\n\n  transitionDuration && cssText.push(assembleTransition(transitionDuration));\n\n  if (backgroundColor) {\n    if (env.canvasSupported) {\n      cssText.push('background-Color:' + backgroundColor);\n    } else {\n      // for ie\n      cssText.push('background-Color:#' + zrColor.toHex(backgroundColor));\n      cssText.push('filter:alpha(opacity=70)');\n    }\n  } // Border style\n\n\n  each(['width', 'color', 'radius'], function (name) {\n    var borderName = 'border-' + name;\n    var camelCase = toCamelCase(borderName);\n    var val = tooltipModel.get(camelCase);\n    val != null && cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n  }); // Text style\n\n  cssText.push(assembleFont(textStyleModel)); // Padding\n\n  if (padding != null) {\n    cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n  }\n\n  return cssText.join(';') + ';';\n}\n/**\n * @alias module:echarts/component/tooltip/TooltipContent\n * @constructor\n */\n\n\nfunction TooltipContent(container, api) {\n  var el = document.createElement('div');\n  var zr = this._zr = api.getZr();\n  this.el = el;\n  this._x = api.getWidth() / 2;\n  this._y = api.getHeight() / 2;\n  container.appendChild(el);\n  this._container = container;\n  this._show = false;\n  /**\n   * @private\n   */\n\n  this._hideTimeout;\n  var self = this;\n\n  el.onmouseenter = function () {\n    // clear the timeout in hideLater and keep showing tooltip\n    if (self._enterable) {\n      clearTimeout(self._hideTimeout);\n      self._show = true;\n    }\n\n    self._inContent = true;\n  };\n\n  el.onmousemove = function (e) {\n    e = e || window.event;\n\n    if (!self._enterable) {\n      // Try trigger zrender event to avoid mouse\n      // in and out shape too frequently\n      var handler = zr.handler;\n      eventUtil.normalizeEvent(container, e, true);\n      handler.dispatch('mousemove', e);\n    }\n  };\n\n  el.onmouseleave = function () {\n    if (self._enterable) {\n      if (self._show) {\n        self.hideLater(self._hideDelay);\n      }\n    }\n\n    self._inContent = false;\n  };\n}\n\nTooltipContent.prototype = {\n  constructor: TooltipContent,\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  _enterable: true,\n\n  /**\n   * Update when tooltip is rendered\n   */\n  update: function () {\n    // FIXME\n    // Move this logic to ec main?\n    var container = this._container;\n    var stl = container.currentStyle || document.defaultView.getComputedStyle(container);\n    var domStyle = container.style;\n\n    if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n      domStyle.position = 'relative';\n    } // Hide the tooltip\n    // PENDING\n    // this.hide();\n\n  },\n  show: function (tooltipModel) {\n    clearTimeout(this._hideTimeout);\n    var el = this.el;\n    el.style.cssText = gCssText + assembleCssText(tooltipModel) // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n    + ';left:' + this._x + 'px;top:' + this._y + 'px;' + (tooltipModel.get('extraCssText') || '');\n    el.style.display = el.innerHTML ? 'block' : 'none';\n    this._show = true;\n  },\n  setContent: function (content) {\n    this.el.innerHTML = content == null ? '' : content;\n  },\n  setEnterable: function (enterable) {\n    this._enterable = enterable;\n  },\n  getSize: function () {\n    var el = this.el;\n    return [el.clientWidth, el.clientHeight];\n  },\n  moveTo: function (x, y) {\n    // xy should be based on canvas root. But tooltipContent is\n    // the sibling of canvas root. So padding of ec container\n    // should be considered here.\n    var zr = this._zr;\n    var viewportRootOffset;\n\n    if (zr && zr.painter && (viewportRootOffset = zr.painter.getViewportRootOffset())) {\n      x += viewportRootOffset.offsetLeft;\n      y += viewportRootOffset.offsetTop;\n    }\n\n    var style = this.el.style;\n    style.left = x + 'px';\n    style.top = y + 'px';\n    this._x = x;\n    this._y = y;\n  },\n  hide: function () {\n    this.el.style.display = 'none';\n    this._show = false;\n  },\n  hideLater: function (time) {\n    if (this._show && !(this._inContent && this._enterable)) {\n      if (time) {\n        this._hideDelay = time; // Set show false to avoid invoke hideLater mutiple times\n\n        this._show = false;\n        this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n      } else {\n        this.hide();\n      }\n    }\n  },\n  isShow: function () {\n    return this._show;\n  }\n};\nvar _default = TooltipContent;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1191:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1028);\n\nvar zrUtil = __webpack_require__(1027);\n\nfunction legendSelectActionHandler(methodName, payload, ecModel) {\n  var selectedMap = {};\n  var isToggleSelect = methodName === 'toggleSelected';\n  var isSelected; // Update all legend components\n\n  ecModel.eachComponent('legend', function (legendModel) {\n    if (isToggleSelect && isSelected != null) {\n      // Force other legend has same selected status\n      // Or the first is toggled to true and other are toggled to false\n      // In the case one legend has some item unSelected in option. And if other legend\n      // doesn't has the item, they will assume it is selected.\n      legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n    } else {\n      legendModel[methodName](payload.name);\n      isSelected = legendModel.isSelected(payload.name);\n    }\n\n    var legendData = legendModel.getData();\n    zrUtil.each(legendData, function (model) {\n      var name = model.get('name'); // Wrap element\n\n      if (name === '\\n' || name === '') {\n        return;\n      }\n\n      var isItemSelected = legendModel.isSelected(name);\n\n      if (selectedMap.hasOwnProperty(name)) {\n        // Unselected if any legend is unselected\n        selectedMap[name] = selectedMap[name] && isItemSelected;\n      } else {\n        selectedMap[name] = isItemSelected;\n      }\n    });\n  }); // Return the event explicitly\n\n  return {\n    name: payload.name,\n    selected: selectedMap\n  };\n}\n/**\n * @event legendToggleSelect\n * @type {Object}\n * @property {string} type 'legendToggleSelect'\n * @property {string} [from]\n * @property {string} name Series name or data item name\n */\n\n\necharts.registerAction('legendToggleSelect', 'legendselectchanged', zrUtil.curry(legendSelectActionHandler, 'toggleSelected'));\n/**\n * @event legendSelect\n * @type {Object}\n * @property {string} type 'legendSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendSelect', 'legendselected', zrUtil.curry(legendSelectActionHandler, 'select'));\n/**\n * @event legendUnSelect\n * @type {Object}\n * @property {string} type 'legendUnSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendUnSelect', 'legendunselected', zrUtil.curry(legendSelectActionHandler, 'unSelect'));\n\n/***/ }),\n\n/***/ 1192:\n/***/ (function(module, exports) {\n\nfunction _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (legendModels && legendModels.length) {\n    ecModel.filterSeries(function (series) {\n      // If in any legend component the status is not selected.\n      // Because in legend series is assumed selected when it is not in the legend data.\n      for (var i = 0; i < legendModels.length; i++) {\n        if (!legendModels[i].isSelected(series.name)) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1193:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1027);\n\n/**\n * Data selectable mixin for chart series.\n * To eanble data select, option of series must have `selectedMode`.\n * And each data item will use `selected` to toggle itself selected status\n */\nvar _default = {\n  updateSelectedMap: function (targetList) {\n    this._targetList = targetList.slice();\n    this._selectTargetMap = zrUtil.reduce(targetList || [], function (targetMap, target) {\n      targetMap.set(target.name, target);\n      return targetMap;\n    }, zrUtil.createHashMap());\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  // PENGING If selectedMode is null ?\n  select: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      this._selectTargetMap.each(function (target) {\n        target.selected = false;\n      });\n    }\n\n    target && (target.selected = true);\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  unSelect: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name); // var selectedMode = this.get('selectedMode');\n    // selectedMode !== 'single' && target && (target.selected = false);\n\n    target && (target.selected = false);\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  toggleSelected: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n\n    if (target != null) {\n      this[target.selected ? 'unSelect' : 'select'](name, id);\n      return target.selected;\n    }\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  isSelected: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n    return target && target.selected;\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1194:\n/***/ (function(module, exports) {\n\n// Pick color from palette for each data item.\n// Applicable for charts that require applying color palette\n// in data level (like pie, funnel, chord).\nfunction _default(seriesType, ecModel) {\n  // Pie and funnel may use diferrent scope\n  var paletteScope = {};\n  ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n    var dataAll = seriesModel.getRawData();\n    var idxMap = {};\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      var data = seriesModel.getData();\n      data.each(function (idx) {\n        var rawIdx = data.getRawIndex(idx);\n        idxMap[rawIdx] = idx;\n      });\n      dataAll.each(function (rawIdx) {\n        var filteredIdx = idxMap[rawIdx]; // If series.itemStyle.normal.color is a function. itemVisual may be encoded\n\n        var singleDataColor = filteredIdx != null && data.getItemVisual(filteredIdx, 'color', true);\n\n        if (!singleDataColor) {\n          // FIXME Performance\n          var itemModel = dataAll.getItemModel(rawIdx);\n          var color = itemModel.get('itemStyle.normal.color') || seriesModel.getColorFromPalette(dataAll.getName(rawIdx), paletteScope); // Legend may use the visual info in data before processed\n\n          dataAll.setItemVisual(rawIdx, 'color', color); // Data is not filtered\n\n          if (filteredIdx != null) {\n            data.setItemVisual(filteredIdx, 'color', color);\n          }\n        } else {\n          // Set data all color for legend\n          dataAll.setItemVisual(rawIdx, 'color', singleDataColor);\n        }\n      });\n    }\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1195:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1028);\n\nvar zrUtil = __webpack_require__(1027);\n\nvar featureManager = __webpack_require__(1046);\n\nvar ToolboxModel = echarts.extendComponentModel({\n  type: 'toolbox',\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n  mergeDefaultAndTheme: function (option) {\n    ToolboxModel.superApply(this, 'mergeDefaultAndTheme', arguments);\n    zrUtil.each(this.option.feature, function (featureOpt, featureName) {\n      var Feature = featureManager.get(featureName);\n      Feature && zrUtil.merge(featureOpt, Feature.defaultOption);\n    });\n  },\n  defaultOption: {\n    show: true,\n    z: 6,\n    zlevel: 0,\n    orient: 'horizontal',\n    left: 'right',\n    top: 'top',\n    // right\n    // bottom\n    backgroundColor: 'transparent',\n    borderColor: '#ccc',\n    borderRadius: 0,\n    borderWidth: 0,\n    padding: 5,\n    itemSize: 15,\n    itemGap: 8,\n    showTitle: true,\n    iconStyle: {\n      normal: {\n        borderColor: '#666',\n        color: 'none'\n      },\n      emphasis: {\n        borderColor: '#3E98C5'\n      } // textStyle: {},\n      // feature\n\n    }\n  }\n});\nvar _default = ToolboxModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1196:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1028);\n\nvar zrUtil = __webpack_require__(1027);\n\nvar textContain = __webpack_require__(1042);\n\nvar featureManager = __webpack_require__(1046);\n\nvar graphic = __webpack_require__(1029);\n\nvar Model = __webpack_require__(1038);\n\nvar DataDiffer = __webpack_require__(1062);\n\nvar listComponentHelper = __webpack_require__(1106);\n\nvar _default = echarts.extendComponentView({\n  type: 'toolbox',\n  render: function (toolboxModel, ecModel, api, payload) {\n    var group = this.group;\n    group.removeAll();\n\n    if (!toolboxModel.get('show')) {\n      return;\n    }\n\n    var itemSize = +toolboxModel.get('itemSize');\n    var featureOpts = toolboxModel.get('feature') || {};\n    var features = this._features || (this._features = {});\n    var featureNames = [];\n    zrUtil.each(featureOpts, function (opt, name) {\n      featureNames.push(name);\n    });\n    new DataDiffer(this._featureNames || [], featureNames).add(processFeature).update(processFeature).remove(zrUtil.curry(processFeature, null)).execute(); // Keep for diff.\n\n    this._featureNames = featureNames;\n\n    function processFeature(newIndex, oldIndex) {\n      var featureName = featureNames[newIndex];\n      var oldName = featureNames[oldIndex];\n      var featureOpt = featureOpts[featureName];\n      var featureModel = new Model(featureOpt, toolboxModel, toolboxModel.ecModel);\n      var feature;\n\n      if (featureName && !oldName) {\n        // Create\n        if (isUserFeatureName(featureName)) {\n          feature = {\n            model: featureModel,\n            onclick: featureModel.option.onclick,\n            featureName: featureName\n          };\n        } else {\n          var Feature = featureManager.get(featureName);\n\n          if (!Feature) {\n            return;\n          }\n\n          feature = new Feature(featureModel, ecModel, api);\n        }\n\n        features[featureName] = feature;\n      } else {\n        feature = features[oldName]; // If feature does not exsit.\n\n        if (!feature) {\n          return;\n        }\n\n        feature.model = featureModel;\n        feature.ecModel = ecModel;\n        feature.api = api;\n      }\n\n      if (!featureName && oldName) {\n        feature.dispose && feature.dispose(ecModel, api);\n        return;\n      }\n\n      if (!featureModel.get('show') || feature.unusable) {\n        feature.remove && feature.remove(ecModel, api);\n        return;\n      }\n\n      createIconPaths(featureModel, feature, featureName);\n\n      featureModel.setIconStatus = function (iconName, status) {\n        var option = this.option;\n        var iconPaths = this.iconPaths;\n        option.iconStatus = option.iconStatus || {};\n        option.iconStatus[iconName] = status; // FIXME\n\n        iconPaths[iconName] && iconPaths[iconName].trigger(status);\n      };\n\n      if (feature.render) {\n        feature.render(featureModel, ecModel, api, payload);\n      }\n    }\n\n    function createIconPaths(featureModel, feature, featureName) {\n      var iconStyleModel = featureModel.getModel('iconStyle'); // If one feature has mutiple icon. they are orginaized as\n      // {\n      //     icon: {\n      //         foo: '',\n      //         bar: ''\n      //     },\n      //     title: {\n      //         foo: '',\n      //         bar: ''\n      //     }\n      // }\n\n      var icons = feature.getIcons ? feature.getIcons() : featureModel.get('icon');\n      var titles = featureModel.get('title') || {};\n\n      if (typeof icons === 'string') {\n        var icon = icons;\n        var title = titles;\n        icons = {};\n        titles = {};\n        icons[featureName] = icon;\n        titles[featureName] = title;\n      }\n\n      var iconPaths = featureModel.iconPaths = {};\n      zrUtil.each(icons, function (iconStr, iconName) {\n        var path = graphic.createIcon(iconStr, {}, {\n          x: -itemSize / 2,\n          y: -itemSize / 2,\n          width: itemSize,\n          height: itemSize\n        });\n        path.setStyle(iconStyleModel.getModel('normal').getItemStyle());\n        path.hoverStyle = iconStyleModel.getModel('emphasis').getItemStyle();\n        graphic.setHoverStyle(path);\n\n        if (toolboxModel.get('showTitle')) {\n          path.__title = titles[iconName];\n          path.on('mouseover', function () {\n            // Should not reuse above hoverStyle, which might be modified.\n            var hoverStyle = iconStyleModel.getModel('emphasis').getItemStyle();\n            path.setStyle({\n              text: titles[iconName],\n              textPosition: hoverStyle.textPosition || 'bottom',\n              textFill: hoverStyle.fill || hoverStyle.stroke || '#000',\n              textAlign: hoverStyle.textAlign || 'center'\n            });\n          }).on('mouseout', function () {\n            path.setStyle({\n              textFill: null\n            });\n          });\n        }\n\n        path.trigger(featureModel.get('iconStatus.' + iconName) || 'normal');\n        group.add(path);\n        path.on('click', zrUtil.bind(feature.onclick, feature, ecModel, api, iconName));\n        iconPaths[iconName] = path;\n      });\n    }\n\n    listComponentHelper.layout(group, toolboxModel, api); // Render background after group is layout\n    // FIXME\n\n    group.add(listComponentHelper.makeBackground(group.getBoundingRect(), toolboxModel)); // Adjust icon title positions to avoid them out of screen\n\n    group.eachChild(function (icon) {\n      var titleText = icon.__title;\n      var hoverStyle = icon.hoverStyle; // May be background element\n\n      if (hoverStyle && titleText) {\n        var rect = textContain.getBoundingRect(titleText, textContain.makeFont(hoverStyle));\n        var offsetX = icon.position[0] + group.position[0];\n        var offsetY = icon.position[1] + group.position[1] + itemSize;\n        var needPutOnTop = false;\n\n        if (offsetY + rect.height > api.getHeight()) {\n          hoverStyle.textPosition = 'top';\n          needPutOnTop = true;\n        }\n\n        var topOffset = needPutOnTop ? -5 - rect.height : itemSize + 8;\n\n        if (offsetX + rect.width / 2 > api.getWidth()) {\n          hoverStyle.textPosition = ['100%', topOffset];\n          hoverStyle.textAlign = 'right';\n        } else if (offsetX - rect.width / 2 < 0) {\n          hoverStyle.textPosition = [0, topOffset];\n          hoverStyle.textAlign = 'left';\n        }\n      }\n    });\n  },\n  updateView: function (toolboxModel, ecModel, api, payload) {\n    zrUtil.each(this._features, function (feature) {\n      feature.updateView && feature.updateView(feature.model, ecModel, api, payload);\n    });\n  },\n  updateLayout: function (toolboxModel, ecModel, api, payload) {\n    zrUtil.each(this._features, function (feature) {\n      feature.updateLayout && feature.updateLayout(feature.model, ecModel, api, payload);\n    });\n  },\n  remove: function (ecModel, api) {\n    zrUtil.each(this._features, function (feature) {\n      feature.remove && feature.remove(ecModel, api);\n    });\n    this.group.removeAll();\n  },\n  dispose: function (ecModel, api) {\n    zrUtil.each(this._features, function (feature) {\n      feature.dispose && feature.dispose(ecModel, api);\n    });\n  }\n});\n\nfunction isUserFeatureName(featureName) {\n  return featureName.indexOf('my') === 0;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1197:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar env = __webpack_require__(1035);\n\nvar lang = __webpack_require__(1054);\n\nvar featureManager = __webpack_require__(1046);\n\nvar saveAsImageLang = lang.toolbox.saveAsImage;\n\nfunction SaveAsImage(model) {\n  this.model = model;\n}\n\nSaveAsImage.defaultOption = {\n  show: true,\n  icon: 'M4.7,22.9L29.3,45.5L54.7,23.4M4.6,43.6L4.6,58L53.8,58L53.8,43.6M29.2,45.1L29.2,0',\n  title: saveAsImageLang.title,\n  type: 'png',\n  // Default use option.backgroundColor\n  // backgroundColor: '#fff',\n  name: '',\n  excludeComponents: ['toolbox'],\n  pixelRatio: 1,\n  lang: saveAsImageLang.lang.slice()\n};\nSaveAsImage.prototype.unusable = !env.canvasSupported;\nvar proto = SaveAsImage.prototype;\n\nproto.onclick = function (ecModel, api) {\n  var model = this.model;\n  var title = model.get('name') || ecModel.get('title.0.text') || 'echarts';\n  var $a = document.createElement('a');\n  var type = model.get('type', true) || 'png';\n  $a.download = title + '.' + type;\n  $a.target = '_blank';\n  var url = api.getConnectedDataURL({\n    type: type,\n    backgroundColor: model.get('backgroundColor', true) || ecModel.get('backgroundColor') || '#fff',\n    excludeComponents: model.get('excludeComponents'),\n    pixelRatio: model.get('pixelRatio')\n  });\n  $a.href = url; // Chrome and Firefox\n\n  if (typeof MouseEvent === 'function' && !env.browser.ie && !env.browser.edge) {\n    var evt = new MouseEvent('click', {\n      view: window,\n      bubbles: true,\n      cancelable: false\n    });\n    $a.dispatchEvent(evt);\n  } // IE\n  else {\n      if (window.navigator.msSaveOrOpenBlob) {\n        var bstr = atob(url.split(',')[1]);\n        var n = bstr.length;\n        var u8arr = new Uint8Array(n);\n\n        while (n--) {\n          u8arr[n] = bstr.charCodeAt(n);\n        }\n\n        var blob = new Blob([u8arr]);\n        window.navigator.msSaveOrOpenBlob(blob, title + '.' + type);\n      } else {\n        var lang = model.get('lang');\n        var html = '' + '<body style=\"margin:0;\">' + '<img src=\"' + url + '\" style=\"max-width:100%;\" title=\"' + (lang && lang[0] || '') + '\" />' + '</body>';\n        var tab = window.open();\n        tab.document.write(html);\n      }\n    }\n};\n\nfeatureManager.register('saveAsImage', SaveAsImage);\nvar _default = SaveAsImage;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1198:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1028);\n\nvar zrUtil = __webpack_require__(1027);\n\nvar lang = __webpack_require__(1054);\n\nvar featureManager = __webpack_require__(1046);\n\nvar magicTypeLang = lang.toolbox.magicType;\n\nfunction MagicType(model) {\n  this.model = model;\n}\n\nMagicType.defaultOption = {\n  show: true,\n  type: [],\n  // Icon group\n  icon: {\n    line: 'M4.1,28.9h7.1l9.3-22l7.4,38l9.7-19.7l3,12.8h14.9M4.1,58h51.4',\n    bar: 'M6.7,22.9h10V48h-10V22.9zM24.9,13h10v35h-10V13zM43.2,2h10v46h-10V2zM3.1,58h53.7',\n    stack: 'M8.2,38.4l-8.4,4.1l30.6,15.3L60,42.5l-8.1-4.1l-21.5,11L8.2,38.4z M51.9,30l-8.1,4.2l-13.4,6.9l-13.9-6.9L8.2,30l-8.4,4.2l8.4,4.2l22.2,11l21.5-11l8.1-4.2L51.9,30z M51.9,21.7l-8.1,4.2L35.7,30l-5.3,2.8L24.9,30l-8.4-4.1l-8.3-4.2l-8.4,4.2L8.2,30l8.3,4.2l13.9,6.9l13.4-6.9l8.1-4.2l8.1-4.1L51.9,21.7zM30.4,2.2L-0.2,17.5l8.4,4.1l8.3,4.2l8.4,4.2l5.5,2.7l5.3-2.7l8.1-4.2l8.1-4.2l8.1-4.1L30.4,2.2z',\n    // jshint ignore:line\n    tiled: 'M2.3,2.2h22.8V25H2.3V2.2z M35,2.2h22.8V25H35V2.2zM2.3,35h22.8v22.8H2.3V35z M35,35h22.8v22.8H35V35z'\n  },\n  // `line`, `bar`, `stack`, `tiled`\n  title: zrUtil.clone(magicTypeLang.title),\n  option: {},\n  seriesIndex: {}\n};\nvar proto = MagicType.prototype;\n\nproto.getIcons = function () {\n  var model = this.model;\n  var availableIcons = model.get('icon');\n  var icons = {};\n  zrUtil.each(model.get('type'), function (type) {\n    if (availableIcons[type]) {\n      icons[type] = availableIcons[type];\n    }\n  });\n  return icons;\n};\n\nvar seriesOptGenreator = {\n  'line': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        type: 'line',\n        // Preserve data related option\n        data: seriesModel.get('data'),\n        stack: seriesModel.get('stack'),\n        markPoint: seriesModel.get('markPoint'),\n        markLine: seriesModel.get('markLine')\n      }, model.get('option.line') || {}, true);\n    }\n  },\n  'bar': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line') {\n      return zrUtil.merge({\n        id: seriesId,\n        type: 'bar',\n        // Preserve data related option\n        data: seriesModel.get('data'),\n        stack: seriesModel.get('stack'),\n        markPoint: seriesModel.get('markPoint'),\n        markLine: seriesModel.get('markLine')\n      }, model.get('option.bar') || {}, true);\n    }\n  },\n  'stack': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line' || seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        stack: '__ec_magicType_stack__'\n      }, model.get('option.stack') || {}, true);\n    }\n  },\n  'tiled': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line' || seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        stack: ''\n      }, model.get('option.tiled') || {}, true);\n    }\n  }\n};\nvar radioTypes = [['line', 'bar'], ['stack', 'tiled']];\n\nproto.onclick = function (ecModel, api, type) {\n  var model = this.model;\n  var seriesIndex = model.get('seriesIndex.' + type); // Not supported magicType\n\n  if (!seriesOptGenreator[type]) {\n    return;\n  }\n\n  var newOption = {\n    series: []\n  };\n\n  var generateNewSeriesTypes = function (seriesModel) {\n    var seriesType = seriesModel.subType;\n    var seriesId = seriesModel.id;\n    var newSeriesOpt = seriesOptGenreator[type](seriesType, seriesId, seriesModel, model);\n\n    if (newSeriesOpt) {\n      // PENDING If merge original option?\n      zrUtil.defaults(newSeriesOpt, seriesModel.option);\n      newOption.series.push(newSeriesOpt);\n    } // Modify boundaryGap\n\n\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.type === 'cartesian2d' && (type === 'line' || type === 'bar')) {\n      var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n\n      if (categoryAxis) {\n        var axisDim = categoryAxis.dim;\n        var axisType = axisDim + 'Axis';\n        var axisModel = ecModel.queryComponents({\n          mainType: axisType,\n          index: seriesModel.get(name + 'Index'),\n          id: seriesModel.get(name + 'Id')\n        })[0];\n        var axisIndex = axisModel.componentIndex;\n        newOption[axisType] = newOption[axisType] || [];\n\n        for (var i = 0; i <= axisIndex; i++) {\n          newOption[axisType][axisIndex] = newOption[axisType][axisIndex] || {};\n        }\n\n        newOption[axisType][axisIndex].boundaryGap = type === 'bar' ? true : false;\n      }\n    }\n  };\n\n  zrUtil.each(radioTypes, function (radio) {\n    if (zrUtil.indexOf(radio, type) >= 0) {\n      zrUtil.each(radio, function (item) {\n        model.setIconStatus(item, 'normal');\n      });\n    }\n  });\n  model.setIconStatus(type, 'emphasis');\n  ecModel.eachComponent({\n    mainType: 'series',\n    query: seriesIndex == null ? null : {\n      seriesIndex: seriesIndex\n    }\n  }, generateNewSeriesTypes);\n  api.dispatchAction({\n    type: 'changeMagicType',\n    currentType: type,\n    newOption: newOption\n  });\n};\n\necharts.registerAction({\n  type: 'changeMagicType',\n  event: 'magicTypeChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  ecModel.mergeOption(payload.newOption);\n});\nfeatureManager.register('magicType', MagicType);\nvar _default = MagicType;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1199:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1028);\n\nvar zrUtil = __webpack_require__(1027);\n\nvar eventTool = __webpack_require__(1047);\n\nvar lang = __webpack_require__(1054);\n\nvar featureManager = __webpack_require__(1046);\n\nvar dataViewLang = lang.toolbox.dataView;\nvar BLOCK_SPLITER = new Array(60).join('-');\nvar ITEM_SPLITER = '\\t';\n/**\n * Group series into two types\n *  1. on category axis, like line, bar\n *  2. others, like scatter, pie\n * @param {module:echarts/model/Global} ecModel\n * @return {Object}\n * @inner\n */\n\nfunction groupSeries(ecModel) {\n  var seriesGroupByCategoryAxis = {};\n  var otherSeries = [];\n  var meta = [];\n  ecModel.eachRawSeries(function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && (coordSys.type === 'cartesian2d' || coordSys.type === 'polar')) {\n      var baseAxis = coordSys.getBaseAxis();\n\n      if (baseAxis.type === 'category') {\n        var key = baseAxis.dim + '_' + baseAxis.index;\n\n        if (!seriesGroupByCategoryAxis[key]) {\n          seriesGroupByCategoryAxis[key] = {\n            categoryAxis: baseAxis,\n            valueAxis: coordSys.getOtherAxis(baseAxis),\n            series: []\n          };\n          meta.push({\n            axisDim: baseAxis.dim,\n            axisIndex: baseAxis.index\n          });\n        }\n\n        seriesGroupByCategoryAxis[key].series.push(seriesModel);\n      } else {\n        otherSeries.push(seriesModel);\n      }\n    } else {\n      otherSeries.push(seriesModel);\n    }\n  });\n  return {\n    seriesGroupByCategoryAxis: seriesGroupByCategoryAxis,\n    other: otherSeries,\n    meta: meta\n  };\n}\n/**\n * Assemble content of series on cateogory axis\n * @param {Array.<module:echarts/model/Series>} series\n * @return {string}\n * @inner\n */\n\n\nfunction assembleSeriesWithCategoryAxis(series) {\n  var tables = [];\n  zrUtil.each(series, function (group, key) {\n    var categoryAxis = group.categoryAxis;\n    var valueAxis = group.valueAxis;\n    var valueAxisDim = valueAxis.dim;\n    var headers = [' '].concat(zrUtil.map(group.series, function (series) {\n      return series.name;\n    }));\n    var columns = [categoryAxis.model.getCategories()];\n    zrUtil.each(group.series, function (series) {\n      columns.push(series.getRawData().mapArray(valueAxisDim, function (val) {\n        return val;\n      }));\n    }); // Assemble table content\n\n    var lines = [headers.join(ITEM_SPLITER)];\n\n    for (var i = 0; i < columns[0].length; i++) {\n      var items = [];\n\n      for (var j = 0; j < columns.length; j++) {\n        items.push(columns[j][i]);\n      }\n\n      lines.push(items.join(ITEM_SPLITER));\n    }\n\n    tables.push(lines.join('\\n'));\n  });\n  return tables.join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n}\n/**\n * Assemble content of other series\n * @param {Array.<module:echarts/model/Series>} series\n * @return {string}\n * @inner\n */\n\n\nfunction assembleOtherSeries(series) {\n  return zrUtil.map(series, function (series) {\n    var data = series.getRawData();\n    var lines = [series.name];\n    var vals = [];\n    data.each(data.dimensions, function () {\n      var argLen = arguments.length;\n      var dataIndex = arguments[argLen - 1];\n      var name = data.getName(dataIndex);\n\n      for (var i = 0; i < argLen - 1; i++) {\n        vals[i] = arguments[i];\n      }\n\n      lines.push((name ? name + ITEM_SPLITER : '') + vals.join(ITEM_SPLITER));\n    });\n    return lines.join('\\n');\n  }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n}\n/**\n * @param {module:echarts/model/Global}\n * @return {Object}\n * @inner\n */\n\n\nfunction getContentFromModel(ecModel) {\n  var result = groupSeries(ecModel);\n  return {\n    value: zrUtil.filter([assembleSeriesWithCategoryAxis(result.seriesGroupByCategoryAxis), assembleOtherSeries(result.other)], function (str) {\n      return str.replace(/[\\n\\t\\s]/g, '');\n    }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n'),\n    meta: result.meta\n  };\n}\n\nfunction trim(str) {\n  return str.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n}\n/**\n * If a block is tsv format\n */\n\n\nfunction isTSVFormat(block) {\n  // Simple method to find out if a block is tsv format\n  var firstLine = block.slice(0, block.indexOf('\\n'));\n\n  if (firstLine.indexOf(ITEM_SPLITER) >= 0) {\n    return true;\n  }\n}\n\nvar itemSplitRegex = new RegExp('[' + ITEM_SPLITER + ']+', 'g');\n/**\n * @param {string} tsv\n * @return {Object}\n */\n\nfunction parseTSVContents(tsv) {\n  var tsvLines = tsv.split(/\\n+/g);\n  var headers = trim(tsvLines.shift()).split(itemSplitRegex);\n  var categories = [];\n  var series = zrUtil.map(headers, function (header) {\n    return {\n      name: header,\n      data: []\n    };\n  });\n\n  for (var i = 0; i < tsvLines.length; i++) {\n    var items = trim(tsvLines[i]).split(itemSplitRegex);\n    categories.push(items.shift());\n\n    for (var j = 0; j < items.length; j++) {\n      series[j] && (series[j].data[i] = items[j]);\n    }\n  }\n\n  return {\n    series: series,\n    categories: categories\n  };\n}\n/**\n * @param {string} str\n * @return {Array.<Object>}\n * @inner\n */\n\n\nfunction parseListContents(str) {\n  var lines = str.split(/\\n+/g);\n  var seriesName = trim(lines.shift());\n  var data = [];\n\n  for (var i = 0; i < lines.length; i++) {\n    var items = trim(lines[i]).split(itemSplitRegex);\n    var name = '';\n    var value;\n    var hasName = false;\n\n    if (isNaN(items[0])) {\n      // First item is name\n      hasName = true;\n      name = items[0];\n      items = items.slice(1);\n      data[i] = {\n        name: name,\n        value: []\n      };\n      value = data[i].value;\n    } else {\n      value = data[i] = [];\n    }\n\n    for (var j = 0; j < items.length; j++) {\n      value.push(+items[j]);\n    }\n\n    if (value.length === 1) {\n      hasName ? data[i].value = value[0] : data[i] = value[0];\n    }\n  }\n\n  return {\n    name: seriesName,\n    data: data\n  };\n}\n/**\n * @param {string} str\n * @param {Array.<Object>} blockMetaList\n * @return {Object}\n * @inner\n */\n\n\nfunction parseContents(str, blockMetaList) {\n  var blocks = str.split(new RegExp('\\n*' + BLOCK_SPLITER + '\\n*', 'g'));\n  var newOption = {\n    series: []\n  };\n  zrUtil.each(blocks, function (block, idx) {\n    if (isTSVFormat(block)) {\n      var result = parseTSVContents(block);\n      var blockMeta = blockMetaList[idx];\n      var axisKey = blockMeta.axisDim + 'Axis';\n\n      if (blockMeta) {\n        newOption[axisKey] = newOption[axisKey] || [];\n        newOption[axisKey][blockMeta.axisIndex] = {\n          data: result.categories\n        };\n        newOption.series = newOption.series.concat(result.series);\n      }\n    } else {\n      var result = parseListContents(block);\n      newOption.series.push(result);\n    }\n  });\n  return newOption;\n}\n/**\n * @alias {module:echarts/component/toolbox/feature/DataView}\n * @constructor\n * @param {module:echarts/model/Model} model\n */\n\n\nfunction DataView(model) {\n  this._dom = null;\n  this.model = model;\n}\n\nDataView.defaultOption = {\n  show: true,\n  readOnly: false,\n  optionToContent: null,\n  contentToOption: null,\n  icon: 'M17.5,17.3H33 M17.5,17.3H33 M45.4,29.5h-28 M11.5,2v56H51V14.8L38.4,2H11.5z M38.4,2.2v12.7H51 M45.4,41.7h-28',\n  title: zrUtil.clone(dataViewLang.title),\n  lang: zrUtil.clone(dataViewLang.lang),\n  backgroundColor: '#fff',\n  textColor: '#000',\n  textareaColor: '#fff',\n  textareaBorderColor: '#333',\n  buttonColor: '#c23531',\n  buttonTextColor: '#fff'\n};\n\nDataView.prototype.onclick = function (ecModel, api) {\n  var container = api.getDom();\n  var model = this.model;\n\n  if (this._dom) {\n    container.removeChild(this._dom);\n  }\n\n  var root = document.createElement('div');\n  root.style.cssText = 'position:absolute;left:5px;top:5px;bottom:5px;right:5px;';\n  root.style.backgroundColor = model.get('backgroundColor') || '#fff'; // Create elements\n\n  var header = document.createElement('h4');\n  var lang = model.get('lang') || [];\n  header.innerHTML = lang[0] || model.get('title');\n  header.style.cssText = 'margin: 10px 20px;';\n  header.style.color = model.get('textColor');\n  var viewMain = document.createElement('div');\n  var textarea = document.createElement('textarea');\n  viewMain.style.cssText = 'display:block;width:100%;overflow:auto;';\n  var optionToContent = model.get('optionToContent');\n  var contentToOption = model.get('contentToOption');\n  var result = getContentFromModel(ecModel);\n\n  if (typeof optionToContent === 'function') {\n    var htmlOrDom = optionToContent(api.getOption());\n\n    if (typeof htmlOrDom === 'string') {\n      viewMain.innerHTML = htmlOrDom;\n    } else if (zrUtil.isDom(htmlOrDom)) {\n      viewMain.appendChild(htmlOrDom);\n    }\n  } else {\n    // Use default textarea\n    viewMain.appendChild(textarea);\n    textarea.readOnly = model.get('readOnly');\n    textarea.style.cssText = 'width:100%;height:100%;font-family:monospace;font-size:14px;line-height:1.6rem;';\n    textarea.style.color = model.get('textColor');\n    textarea.style.borderColor = model.get('textareaBorderColor');\n    textarea.style.backgroundColor = model.get('textareaColor');\n    textarea.value = result.value;\n  }\n\n  var blockMetaList = result.meta;\n  var buttonContainer = document.createElement('div');\n  buttonContainer.style.cssText = 'position:absolute;bottom:0;left:0;right:0;';\n  var buttonStyle = 'float:right;margin-right:20px;border:none;' + 'cursor:pointer;padding:2px 5px;font-size:12px;border-radius:3px';\n  var closeButton = document.createElement('div');\n  var refreshButton = document.createElement('div');\n  buttonStyle += ';background-color:' + model.get('buttonColor');\n  buttonStyle += ';color:' + model.get('buttonTextColor');\n  var self = this;\n\n  function close() {\n    container.removeChild(root);\n    self._dom = null;\n  }\n\n  eventTool.addEventListener(closeButton, 'click', close);\n  eventTool.addEventListener(refreshButton, 'click', function () {\n    var newOption;\n\n    try {\n      if (typeof contentToOption === 'function') {\n        newOption = contentToOption(viewMain, api.getOption());\n      } else {\n        newOption = parseContents(textarea.value, blockMetaList);\n      }\n    } catch (e) {\n      close();\n      throw new Error('Data view format error ' + e);\n    }\n\n    if (newOption) {\n      api.dispatchAction({\n        type: 'changeDataView',\n        newOption: newOption\n      });\n    }\n\n    close();\n  });\n  closeButton.innerHTML = lang[1];\n  refreshButton.innerHTML = lang[2];\n  refreshButton.style.cssText = buttonStyle;\n  closeButton.style.cssText = buttonStyle;\n  !model.get('readOnly') && buttonContainer.appendChild(refreshButton);\n  buttonContainer.appendChild(closeButton); // http://stackoverflow.com/questions/6637341/use-tab-to-indent-in-textarea\n\n  eventTool.addEventListener(textarea, 'keydown', function (e) {\n    if ((e.keyCode || e.which) === 9) {\n      // get caret position/selection\n      var val = this.value;\n      var start = this.selectionStart;\n      var end = this.selectionEnd; // set textarea value to: text before caret + tab + text after caret\n\n      this.value = val.substring(0, start) + ITEM_SPLITER + val.substring(end); // put caret at right position again\n\n      this.selectionStart = this.selectionEnd = start + 1; // prevent the focus lose\n\n      eventTool.stop(e);\n    }\n  });\n  root.appendChild(header);\n  root.appendChild(viewMain);\n  root.appendChild(buttonContainer);\n  viewMain.style.height = container.clientHeight - 80 + 'px';\n  container.appendChild(root);\n  this._dom = root;\n};\n\nDataView.prototype.remove = function (ecModel, api) {\n  this._dom && api.getDom().removeChild(this._dom);\n};\n\nDataView.prototype.dispose = function (ecModel, api) {\n  this.remove(ecModel, api);\n};\n/**\n * @inner\n */\n\n\nfunction tryMergeDataOption(newData, originalData) {\n  return zrUtil.map(newData, function (newVal, idx) {\n    var original = originalData && originalData[idx];\n\n    if (zrUtil.isObject(original) && !zrUtil.isArray(original)) {\n      if (zrUtil.isObject(newVal) && !zrUtil.isArray(newVal)) {\n        newVal = newVal.value;\n      } // Original data has option\n\n\n      return zrUtil.defaults({\n        value: newVal\n      }, original);\n    } else {\n      return newVal;\n    }\n  });\n}\n\nfeatureManager.register('dataView', DataView);\necharts.registerAction({\n  type: 'changeDataView',\n  event: 'dataViewChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  var newSeriesOptList = [];\n  zrUtil.each(payload.newOption.series, function (seriesOpt) {\n    var seriesModel = ecModel.getSeriesByName(seriesOpt.name)[0];\n\n    if (!seriesModel) {\n      // New created series\n      // Geuss the series type\n      newSeriesOptList.push(zrUtil.extend({\n        // Default is scatter\n        type: 'scatter'\n      }, seriesOpt));\n    } else {\n      var originalData = seriesModel.get('data');\n      newSeriesOptList.push({\n        name: seriesOpt.name,\n        data: tryMergeDataOption(seriesOpt.data, originalData)\n      });\n    }\n  });\n  ecModel.mergeOption(zrUtil.defaults({\n    series: newSeriesOptList\n  }, payload.newOption));\n});\nvar _default = DataView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1200:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1028);\n\nvar zrUtil = __webpack_require__(1027);\n\nvar BrushController = __webpack_require__(1115);\n\nvar BrushTargetManager = __webpack_require__(1133);\n\nvar history = __webpack_require__(1107);\n\nvar sliderMove = __webpack_require__(1089);\n\nvar lang = __webpack_require__(1054);\n\nvar featureManager = __webpack_require__(1046);\n\n__webpack_require__(1201);\n\n// Use dataZoomSelect\nvar dataZoomLang = lang.toolbox.dataZoom;\nvar each = zrUtil.each; // Spectial component id start with \\0ec\\0, see echarts/model/Global.js~hasInnerId\n\nvar DATA_ZOOM_ID_BASE = '\\0_ec_\\0toolbox-dataZoom_';\n\nfunction DataZoom(model, ecModel, api) {\n  /**\n   * @private\n   * @type {module:echarts/component/helper/BrushController}\n   */\n  (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this)).mount();\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._isZoomActive;\n}\n\nDataZoom.defaultOption = {\n  show: true,\n  // Icon group\n  icon: {\n    zoom: 'M0,13.5h26.9 M13.5,26.9V0 M32.1,13.5H58V58H13.5 V32.1',\n    back: 'M22,1.4L9.9,13.5l12.3,12.3 M10.3,13.5H54.9v44.6 H10.3v-26'\n  },\n  // `zoom`, `back`\n  title: zrUtil.clone(dataZoomLang.title)\n};\nvar proto = DataZoom.prototype;\n\nproto.render = function (featureModel, ecModel, api, payload) {\n  this.model = featureModel;\n  this.ecModel = ecModel;\n  this.api = api;\n  updateZoomBtnStatus(featureModel, ecModel, this, payload, api);\n  updateBackBtnStatus(featureModel, ecModel);\n};\n\nproto.onclick = function (ecModel, api, type) {\n  handlers[type].call(this);\n};\n\nproto.remove = function (ecModel, api) {\n  this._brushController.unmount();\n};\n\nproto.dispose = function (ecModel, api) {\n  this._brushController.dispose();\n};\n/**\n * @private\n */\n\n\nvar handlers = {\n  zoom: function () {\n    var nextActive = !this._isZoomActive;\n    this.api.dispatchAction({\n      type: 'takeGlobalCursor',\n      key: 'dataZoomSelect',\n      dataZoomSelectActive: nextActive\n    });\n  },\n  back: function () {\n    this._dispatchZoomAction(history.pop(this.ecModel));\n  }\n};\n/**\n * @private\n */\n\nproto._onBrush = function (areas, opt) {\n  if (!opt.isEnd || !areas.length) {\n    return;\n  }\n\n  var snapshot = {};\n  var ecModel = this.ecModel;\n\n  this._brushController.updateCovers([]); // remove cover\n\n\n  var brushTargetManager = new BrushTargetManager(retrieveAxisSetting(this.model.option), ecModel, {\n    include: ['grid']\n  });\n  brushTargetManager.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n    if (coordSys.type !== 'cartesian2d') {\n      return;\n    }\n\n    var brushType = area.brushType;\n\n    if (brushType === 'rect') {\n      setBatch('x', coordSys, coordRange[0]);\n      setBatch('y', coordSys, coordRange[1]);\n    } else {\n      setBatch({\n        lineX: 'x',\n        lineY: 'y'\n      }[brushType], coordSys, coordRange);\n    }\n  });\n  history.push(ecModel, snapshot);\n\n  this._dispatchZoomAction(snapshot);\n\n  function setBatch(dimName, coordSys, minMax) {\n    var axis = coordSys.getAxis(dimName);\n    var axisModel = axis.model;\n    var dataZoomModel = findDataZoom(dimName, axisModel, ecModel); // Restrict range.\n\n    var minMaxSpan = dataZoomModel.findRepresentativeAxisProxy(axisModel).getMinMaxSpan();\n\n    if (minMaxSpan.minValueSpan != null || minMaxSpan.maxValueSpan != null) {\n      minMax = sliderMove(0, minMax.slice(), axis.scale.getExtent(), 0, minMaxSpan.minValueSpan, minMaxSpan.maxValueSpan);\n    }\n\n    dataZoomModel && (snapshot[dataZoomModel.id] = {\n      dataZoomId: dataZoomModel.id,\n      startValue: minMax[0],\n      endValue: minMax[1]\n    });\n  }\n\n  function findDataZoom(dimName, axisModel, ecModel) {\n    var found;\n    ecModel.eachComponent({\n      mainType: 'dataZoom',\n      subType: 'select'\n    }, function (dzModel) {\n      var has = dzModel.getAxisModel(dimName, axisModel.componentIndex);\n      has && (found = dzModel);\n    });\n    return found;\n  }\n};\n/**\n * @private\n */\n\n\nproto._dispatchZoomAction = function (snapshot) {\n  var batch = []; // Convert from hash map to array.\n\n  each(snapshot, function (batchItem, dataZoomId) {\n    batch.push(zrUtil.clone(batchItem));\n  });\n  batch.length && this.api.dispatchAction({\n    type: 'dataZoom',\n    from: this.uid,\n    batch: batch\n  });\n};\n\nfunction retrieveAxisSetting(option) {\n  var setting = {}; // Compatible with previous setting: null => all axis, false => no axis.\n\n  zrUtil.each(['xAxisIndex', 'yAxisIndex'], function (name) {\n    setting[name] = option[name];\n    setting[name] == null && (setting[name] = 'all');\n    (setting[name] === false || setting[name] === 'none') && (setting[name] = []);\n  });\n  return setting;\n}\n\nfunction updateBackBtnStatus(featureModel, ecModel) {\n  featureModel.setIconStatus('back', history.count(ecModel) > 1 ? 'emphasis' : 'normal');\n}\n\nfunction updateZoomBtnStatus(featureModel, ecModel, view, payload, api) {\n  var zoomActive = view._isZoomActive;\n\n  if (payload && payload.type === 'takeGlobalCursor') {\n    zoomActive = payload.key === 'dataZoomSelect' ? payload.dataZoomSelectActive : false;\n  }\n\n  view._isZoomActive = zoomActive;\n  featureModel.setIconStatus('zoom', zoomActive ? 'emphasis' : 'normal');\n  var brushTargetManager = new BrushTargetManager(retrieveAxisSetting(featureModel.option), ecModel, {\n    include: ['grid']\n  });\n\n  view._brushController.setPanels(brushTargetManager.makePanelOpts(api, function (targetInfo) {\n    return targetInfo.xAxisDeclared && !targetInfo.yAxisDeclared ? 'lineX' : !targetInfo.xAxisDeclared && targetInfo.yAxisDeclared ? 'lineY' : 'rect';\n  })).enableBrush(zoomActive ? {\n    brushType: 'auto',\n    brushStyle: {\n      // FIXME user customized?\n      lineWidth: 0,\n      fill: 'rgba(0,0,0,0.2)'\n    }\n  } : false);\n}\n\nfeatureManager.register('dataZoom', DataZoom); // Create special dataZoom option for select\n\necharts.registerPreprocessor(function (option) {\n  if (!option) {\n    return;\n  }\n\n  var dataZoomOpts = option.dataZoom || (option.dataZoom = []);\n\n  if (!zrUtil.isArray(dataZoomOpts)) {\n    option.dataZoom = dataZoomOpts = [dataZoomOpts];\n  }\n\n  var toolboxOpt = option.toolbox;\n\n  if (toolboxOpt) {\n    // Assume there is only one toolbox\n    if (zrUtil.isArray(toolboxOpt)) {\n      toolboxOpt = toolboxOpt[0];\n    }\n\n    if (toolboxOpt && toolboxOpt.feature) {\n      var dataZoomOpt = toolboxOpt.feature.dataZoom;\n      addForAxis('xAxis', dataZoomOpt);\n      addForAxis('yAxis', dataZoomOpt);\n    }\n  }\n\n  function addForAxis(axisName, dataZoomOpt) {\n    if (!dataZoomOpt) {\n      return;\n    } // Try not to modify model, because it is not merged yet.\n\n\n    var axisIndicesName = axisName + 'Index';\n    var givenAxisIndices = dataZoomOpt[axisIndicesName];\n\n    if (givenAxisIndices != null && givenAxisIndices != 'all' && !zrUtil.isArray(givenAxisIndices)) {\n      givenAxisIndices = givenAxisIndices === false || givenAxisIndices === 'none' ? [] : [givenAxisIndices];\n    }\n\n    forEachComponent(axisName, function (axisOpt, axisIndex) {\n      if (givenAxisIndices != null && givenAxisIndices != 'all' && zrUtil.indexOf(givenAxisIndices, axisIndex) === -1) {\n        return;\n      }\n\n      var newOpt = {\n        type: 'select',\n        $fromToolbox: true,\n        // Id for merge mapping.\n        id: DATA_ZOOM_ID_BASE + axisName + axisIndex\n      }; // FIXME\n      // Only support one axis now.\n\n      newOpt[axisIndicesName] = axisIndex;\n      dataZoomOpts.push(newOpt);\n    });\n  }\n\n  function forEachComponent(mainType, cb) {\n    var opts = option[mainType];\n\n    if (!zrUtil.isArray(opts)) {\n      opts = opts ? [opts] : [];\n    }\n\n    each(opts, cb);\n  }\n});\nvar _default = DataZoom;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1201:\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(1135);\n\n__webpack_require__(1078);\n\n__webpack_require__(1080);\n\n__webpack_require__(1203);\n\n__webpack_require__(1204);\n\n__webpack_require__(1136);\n\n__webpack_require__(1137);\n\n/***/ }),\n\n/***/ 1202:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1027);\n\nvar numberUtil = __webpack_require__(1030);\n\nvar helper = __webpack_require__(1079);\n\nvar each = zrUtil.each;\nvar asc = numberUtil.asc;\n/**\n * Operate single axis.\n * One axis can only operated by one axis operator.\n * Different dataZoomModels may be defined to operate the same axis.\n * (i.e. 'inside' data zoom and 'slider' data zoom components)\n * So dataZoomModels share one axisProxy in that case.\n *\n * @class\n */\n\nvar AxisProxy = function (dimName, axisIndex, dataZoomModel, ecModel) {\n  /**\n   * @private\n   * @type {string}\n   */\n  this._dimName = dimName;\n  /**\n   * @private\n   */\n\n  this._axisIndex = axisIndex;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._valueWindow;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._percentWindow;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._dataExtent;\n  /**\n   * {minSpan, maxSpan, minValueSpan, maxValueSpan}\n   * @private\n   * @type {Object}\n   */\n\n  this._minMaxSpan;\n  /**\n   * @readOnly\n   * @type {module: echarts/model/Global}\n   */\n\n  this.ecModel = ecModel;\n  /**\n   * @private\n   * @type {module: echarts/component/dataZoom/DataZoomModel}\n   */\n\n  this._dataZoomModel = dataZoomModel;\n};\n\nAxisProxy.prototype = {\n  constructor: AxisProxy,\n\n  /**\n   * Whether the axisProxy is hosted by dataZoomModel.\n   *\n   * @public\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   * @return {boolean}\n   */\n  hostedBy: function (dataZoomModel) {\n    return this._dataZoomModel === dataZoomModel;\n  },\n\n  /**\n   * @return {Array.<number>} Value can only be NaN or finite value.\n   */\n  getDataValueWindow: function () {\n    return this._valueWindow.slice();\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getDataPercentWindow: function () {\n    return this._percentWindow.slice();\n  },\n\n  /**\n   * @public\n   * @param {number} axisIndex\n   * @return {Array} seriesModels\n   */\n  getTargetSeriesModels: function () {\n    var seriesModels = [];\n    var ecModel = this.ecModel;\n    ecModel.eachSeries(function (seriesModel) {\n      if (helper.isCoordSupported(seriesModel.get('coordinateSystem'))) {\n        var dimName = this._dimName;\n        var axisModel = ecModel.queryComponents({\n          mainType: dimName + 'Axis',\n          index: seriesModel.get(dimName + 'AxisIndex'),\n          id: seriesModel.get(dimName + 'AxisId')\n        })[0];\n\n        if (this._axisIndex === (axisModel && axisModel.componentIndex)) {\n          seriesModels.push(seriesModel);\n        }\n      }\n    }, this);\n    return seriesModels;\n  },\n  getAxisModel: function () {\n    return this.ecModel.getComponent(this._dimName + 'Axis', this._axisIndex);\n  },\n  getOtherAxisModel: function () {\n    var axisDim = this._dimName;\n    var ecModel = this.ecModel;\n    var axisModel = this.getAxisModel();\n    var isCartesian = axisDim === 'x' || axisDim === 'y';\n    var otherAxisDim;\n    var coordSysIndexName;\n\n    if (isCartesian) {\n      coordSysIndexName = 'gridIndex';\n      otherAxisDim = axisDim === 'x' ? 'y' : 'x';\n    } else {\n      coordSysIndexName = 'polarIndex';\n      otherAxisDim = axisDim === 'angle' ? 'radius' : 'angle';\n    }\n\n    var foundOtherAxisModel;\n    ecModel.eachComponent(otherAxisDim + 'Axis', function (otherAxisModel) {\n      if ((otherAxisModel.get(coordSysIndexName) || 0) === (axisModel.get(coordSysIndexName) || 0)) {\n        foundOtherAxisModel = otherAxisModel;\n      }\n    });\n    return foundOtherAxisModel;\n  },\n  getMinMaxSpan: function () {\n    return zrUtil.clone(this._minMaxSpan);\n  },\n\n  /**\n   * Only calculate by given range and this._dataExtent, do not change anything.\n   *\n   * @param {Object} opt\n   * @param {number} [opt.start]\n   * @param {number} [opt.end]\n   * @param {number} [opt.startValue]\n   * @param {number} [opt.endValue]\n   */\n  calculateDataWindow: function (opt) {\n    var dataExtent = this._dataExtent;\n    var axisModel = this.getAxisModel();\n    var scale = axisModel.axis.scale;\n\n    var rangePropMode = this._dataZoomModel.getRangePropMode();\n\n    var percentExtent = [0, 100];\n    var percentWindow = [opt.start, opt.end];\n    var valueWindow = [];\n    each(['startValue', 'endValue'], function (prop) {\n      valueWindow.push(opt[prop] != null ? scale.parse(opt[prop]) : null);\n    }); // Normalize bound.\n\n    each([0, 1], function (idx) {\n      var boundValue = valueWindow[idx];\n      var boundPercent = percentWindow[idx]; // Notice: dataZoom is based either on `percentProp` ('start', 'end') or\n      // on `valueProp` ('startValue', 'endValue'). The former one is suitable\n      // for cases that a dataZoom component controls multiple axes with different\n      // unit or extent, and the latter one is suitable for accurate zoom by pixel\n      // (e.g., in dataZoomSelect). `valueProp` can be calculated from `percentProp`,\n      // but it is awkward that `percentProp` can not be obtained from `valueProp`\n      // accurately (because all of values that are overflow the `dataExtent` will\n      // be calculated to percent '100%'). So we have to use\n      // `dataZoom.getRangePropMode()` to mark which prop is used.\n      // `rangePropMode` is updated only when setOption or dispatchAction, otherwise\n      // it remains its original value.\n\n      if (rangePropMode[idx] === 'percent') {\n        if (boundPercent == null) {\n          boundPercent = percentExtent[idx];\n        } // Use scale.parse to math round for category or time axis.\n\n\n        boundValue = scale.parse(numberUtil.linearMap(boundPercent, percentExtent, dataExtent, true));\n      } else {\n        // Calculating `percent` from `value` may be not accurate, because\n        // This calculation can not be inversed, because all of values that\n        // are overflow the `dataExtent` will be calculated to percent '100%'\n        boundPercent = numberUtil.linearMap(boundValue, dataExtent, percentExtent, true);\n      } // valueWindow[idx] = round(boundValue);\n      // percentWindow[idx] = round(boundPercent);\n\n\n      valueWindow[idx] = boundValue;\n      percentWindow[idx] = boundPercent;\n    });\n    return {\n      valueWindow: asc(valueWindow),\n      percentWindow: asc(percentWindow)\n    };\n  },\n\n  /**\n   * Notice: reset should not be called before series.restoreData() called,\n   * so it is recommanded to be called in \"process stage\" but not \"model init\n   * stage\".\n   *\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  reset: function (dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    } // Culculate data window and data extent, and record them.\n\n\n    this._dataExtent = calculateDataExtent(this, this._dimName, this.getTargetSeriesModels());\n    var dataWindow = this.calculateDataWindow(dataZoomModel.option);\n    this._valueWindow = dataWindow.valueWindow;\n    this._percentWindow = dataWindow.percentWindow;\n    setMinMaxSpan(this); // Update axis setting then.\n\n    setAxisModel(this);\n  },\n\n  /**\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  restore: function (dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    this._valueWindow = this._percentWindow = null;\n    setAxisModel(this, true);\n  },\n\n  /**\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  filterData: function (dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    var axisDim = this._dimName;\n    var seriesModels = this.getTargetSeriesModels();\n    var filterMode = dataZoomModel.get('filterMode');\n    var valueWindow = this._valueWindow;\n\n    if (filterMode === 'none') {\n      return;\n    } // FIXME\n    // Toolbox may has dataZoom injected. And if there are stacked bar chart\n    // with NaN data, NaN will be filtered and stack will be wrong.\n    // So we need to force the mode to be set empty.\n    // In fect, it is not a big deal that do not support filterMode-'filter'\n    // when using toolbox#dataZoom, utill tooltip#dataZoom support \"single axis\n    // selection\" some day, which might need \"adapt to data extent on the\n    // otherAxis\", which is disabled by filterMode-'empty'.\n\n\n    var otherAxisModel = this.getOtherAxisModel();\n\n    if (dataZoomModel.get('$fromToolbox') && otherAxisModel && otherAxisModel.get('type') === 'category') {\n      filterMode = 'empty';\n    } // Process series data\n\n\n    each(seriesModels, function (seriesModel) {\n      var seriesData = seriesModel.getData();\n      var dataDims = seriesModel.coordDimToDataDim(axisDim);\n\n      if (filterMode === 'weakFilter') {\n        seriesData && seriesData.filterSelf(function (dataIndex) {\n          var leftOut;\n          var rightOut;\n          var hasValue;\n\n          for (var i = 0; i < dataDims.length; i++) {\n            var value = seriesData.get(dataDims[i], dataIndex);\n            var thisHasValue = !isNaN(value);\n            var thisLeftOut = value < valueWindow[0];\n            var thisRightOut = value > valueWindow[1];\n\n            if (thisHasValue && !thisLeftOut && !thisRightOut) {\n              return true;\n            }\n\n            thisHasValue && (hasValue = true);\n            thisLeftOut && (leftOut = true);\n            thisRightOut && (rightOut = true);\n          } // If both left out and right out, do not filter.\n\n\n          return hasValue && leftOut && rightOut;\n        });\n      } else {\n        seriesData && each(dataDims, function (dim) {\n          if (filterMode === 'empty') {\n            seriesModel.setData(seriesData.map(dim, function (value) {\n              return !isInWindow(value) ? NaN : value;\n            }));\n          } else {\n            seriesData.filterSelf(dim, isInWindow);\n          }\n        });\n      }\n    });\n\n    function isInWindow(value) {\n      return value >= valueWindow[0] && value <= valueWindow[1];\n    }\n  }\n};\n\nfunction calculateDataExtent(axisProxy, axisDim, seriesModels) {\n  var dataExtent = [Infinity, -Infinity];\n  each(seriesModels, function (seriesModel) {\n    var seriesData = seriesModel.getData();\n\n    if (seriesData) {\n      each(seriesModel.coordDimToDataDim(axisDim), function (dim) {\n        var seriesExtent = seriesData.getDataExtent(dim);\n        seriesExtent[0] < dataExtent[0] && (dataExtent[0] = seriesExtent[0]);\n        seriesExtent[1] > dataExtent[1] && (dataExtent[1] = seriesExtent[1]);\n      });\n    }\n  });\n\n  if (dataExtent[1] < dataExtent[0]) {\n    dataExtent = [NaN, NaN];\n  } // It is important to get \"consistent\" extent when more then one axes is\n  // controlled by a `dataZoom`, otherwise those axes will not be synchronized\n  // when zooming. But it is difficult to know what is \"consistent\", considering\n  // axes have different type or even different meanings (For example, two\n  // time axes are used to compare data of the same date in different years).\n  // So basically dataZoom just obtains extent by series.data (in category axis\n  // extent can be obtained from axis.data).\n  // Nevertheless, user can set min/max/scale on axes to make extent of axes\n  // consistent.\n\n\n  fixExtentByAxis(axisProxy, dataExtent);\n  return dataExtent;\n}\n\nfunction fixExtentByAxis(axisProxy, dataExtent) {\n  var axisModel = axisProxy.getAxisModel();\n  var min = axisModel.getMin(true); // For category axis, if min/max/scale are not set, extent is determined\n  // by axis.data by default.\n\n  var isCategoryAxis = axisModel.get('type') === 'category';\n  var axisDataLen = isCategoryAxis && (axisModel.get('data') || []).length;\n\n  if (min != null && min !== 'dataMin' && typeof min !== 'function') {\n    dataExtent[0] = min;\n  } else if (isCategoryAxis) {\n    dataExtent[0] = axisDataLen > 0 ? 0 : NaN;\n  }\n\n  var max = axisModel.getMax(true);\n\n  if (max != null && max !== 'dataMax' && typeof max !== 'function') {\n    dataExtent[1] = max;\n  } else if (isCategoryAxis) {\n    dataExtent[1] = axisDataLen > 0 ? axisDataLen - 1 : NaN;\n  }\n\n  if (!axisModel.get('scale', true)) {\n    dataExtent[0] > 0 && (dataExtent[0] = 0);\n    dataExtent[1] < 0 && (dataExtent[1] = 0);\n  } // For value axis, if min/max/scale are not set, we just use the extent obtained\n  // by series data, which may be a little different from the extent calculated by\n  // `axisHelper.getScaleExtent`. But the different just affects the experience a\n  // little when zooming. So it will not be fixed until some users require it strongly.\n\n\n  return dataExtent;\n}\n\nfunction setAxisModel(axisProxy, isRestore) {\n  var axisModel = axisProxy.getAxisModel();\n  var percentWindow = axisProxy._percentWindow;\n  var valueWindow = axisProxy._valueWindow;\n\n  if (!percentWindow) {\n    return;\n  } // [0, 500]: arbitrary value, guess axis extent.\n\n\n  var precision = numberUtil.getPixelPrecision(valueWindow, [0, 500]);\n  precision = Math.min(precision, 20); // isRestore or isFull\n\n  var useOrigin = isRestore || percentWindow[0] === 0 && percentWindow[1] === 100;\n  axisModel.setRange(useOrigin ? null : +valueWindow[0].toFixed(precision), useOrigin ? null : +valueWindow[1].toFixed(precision));\n}\n\nfunction setMinMaxSpan(axisProxy) {\n  var minMaxSpan = axisProxy._minMaxSpan = {};\n  var dataZoomModel = axisProxy._dataZoomModel;\n  each(['min', 'max'], function (minMax) {\n    minMaxSpan[minMax + 'Span'] = dataZoomModel.get(minMax + 'Span'); // minValueSpan and maxValueSpan has higher priority than minSpan and maxSpan\n\n    var valueSpan = dataZoomModel.get(minMax + 'ValueSpan');\n\n    if (valueSpan != null) {\n      minMaxSpan[minMax + 'ValueSpan'] = valueSpan;\n      valueSpan = axisProxy.getAxisModel().axis.scale.parse(valueSpan);\n\n      if (valueSpan != null) {\n        var dataExtent = axisProxy._dataExtent;\n        minMaxSpan[minMax + 'Span'] = numberUtil.linearMap(dataExtent[0] + valueSpan, dataExtent, [0, 100], true);\n      }\n    }\n  });\n}\n\nvar _default = AxisProxy;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1203:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar DataZoomModel = __webpack_require__(1078);\n\nvar _default = DataZoomModel.extend({\n  type: 'dataZoom.select'\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1204:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar DataZoomView = __webpack_require__(1080);\n\nvar _default = DataZoomView.extend({\n  type: 'dataZoom.select'\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1205:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1028);\n\nvar history = __webpack_require__(1107);\n\nvar lang = __webpack_require__(1054);\n\nvar featureManager = __webpack_require__(1046);\n\nvar restoreLang = lang.toolbox.restore;\n\nfunction Restore(model) {\n  this.model = model;\n}\n\nRestore.defaultOption = {\n  show: true,\n  icon: 'M3.8,33.4 M47,18.9h9.8V8.7 M56.3,20.1 C52.1,9,40.5,0.6,26.8,2.1C12.6,3.7,1.6,16.2,2.1,30.6 M13,41.1H3.1v10.2 M3.7,39.9c4.2,11.1,15.8,19.5,29.5,18 c14.2-1.6,25.2-14.1,24.7-28.5',\n  title: restoreLang.title\n};\nvar proto = Restore.prototype;\n\nproto.onclick = function (ecModel, api, type) {\n  history.clear(ecModel);\n  api.dispatchAction({\n    type: 'restore',\n    from: this.uid\n  });\n};\n\nfeatureManager.register('restore', Restore);\necharts.registerAction({\n  type: 'restore',\n  event: 'restore',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  ecModel.resetOption('recreate');\n});\nvar _default = Restore;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1210:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1028);\n\nvar zrUtil = __webpack_require__(1027);\n\nfunction _default(seriesType, actionInfos) {\n  zrUtil.each(actionInfos, function (actionInfo) {\n    actionInfo.update = 'updateView';\n    /**\n     * @payload\n     * @property {string} seriesName\n     * @property {string} name\n     */\n\n    echarts.registerAction(actionInfo, function (payload, ecModel) {\n      var selected = {};\n      ecModel.eachComponent({\n        mainType: 'series',\n        subType: seriesType,\n        query: payload\n      }, function (seriesModel) {\n        if (seriesModel[actionInfo.method]) {\n          seriesModel[actionInfo.method](payload.name, payload.dataIndex);\n        }\n\n        var data = seriesModel.getData(); // Create selected map\n\n        data.each(function (idx) {\n          var name = data.getName(idx);\n          selected[name] = seriesModel.isSelected(name) || false;\n        });\n      });\n      return {\n        name: payload.name,\n        selected: selected\n      };\n    });\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1218:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1028);\n\nvar zrUtil = __webpack_require__(1027);\n\n__webpack_require__(1219);\n\n__webpack_require__(1220);\n\nvar createDataSelectAction = __webpack_require__(1210);\n\nvar dataColor = __webpack_require__(1194);\n\nvar pieLayout = __webpack_require__(1221);\n\nvar dataFilter = __webpack_require__(1130);\n\ncreateDataSelectAction('pie', [{\n  type: 'pieToggleSelect',\n  event: 'pieselectchanged',\n  method: 'toggleSelected'\n}, {\n  type: 'pieSelect',\n  event: 'pieselected',\n  method: 'select'\n}, {\n  type: 'pieUnSelect',\n  event: 'pieunselected',\n  method: 'unSelect'\n}]);\necharts.registerVisual(zrUtil.curry(dataColor, 'pie'));\necharts.registerLayout(zrUtil.curry(pieLayout, 'pie'));\necharts.registerProcessor(zrUtil.curry(dataFilter, 'pie'));\n\n/***/ }),\n\n/***/ 1219:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1028);\n\nvar List = __webpack_require__(1044);\n\nvar zrUtil = __webpack_require__(1027);\n\nvar modelUtil = __webpack_require__(1031);\n\nvar _number = __webpack_require__(1030);\n\nvar getPercentWithPrecision = _number.getPercentWithPrecision;\n\nvar completeDimensions = __webpack_require__(1053);\n\nvar dataSelectableMixin = __webpack_require__(1193);\n\nvar PieSeries = echarts.extendSeriesModel({\n  type: 'series.pie',\n  // Overwrite\n  init: function (option) {\n    PieSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    };\n\n    this.updateSelectedMap(option.data);\n\n    this._defaultLabelLine(option);\n  },\n  // Overwrite\n  mergeOption: function (newOption) {\n    PieSeries.superCall(this, 'mergeOption', newOption);\n    this.updateSelectedMap(this.option.data);\n  },\n  getInitialData: function (option, ecModel) {\n    var dimensions = completeDimensions(['value'], option.data);\n    var list = new List(dimensions, this);\n    list.initData(option.data);\n    return list;\n  },\n  // Overwrite\n  getDataParams: function (dataIndex) {\n    var data = this.getData();\n    var params = PieSeries.superCall(this, 'getDataParams', dataIndex); // FIXME toFixed?\n\n    var valueList = [];\n    data.each('value', function (value) {\n      valueList.push(value);\n    });\n    params.percent = getPercentWithPrecision(valueList, dataIndex, data.hostModel.get('percentPrecision'));\n    params.$vars.push('percent');\n    return params;\n  },\n  _defaultLabelLine: function (option) {\n    // Extend labelLine emphasis\n    modelUtil.defaultEmphasis(option.labelLine, ['show']);\n    var labelLineNormalOpt = option.labelLine.normal;\n    var labelLineEmphasisOpt = option.labelLine.emphasis; // Not show label line if `label.normal.show = false`\n\n    labelLineNormalOpt.show = labelLineNormalOpt.show && option.label.normal.show;\n    labelLineEmphasisOpt.show = labelLineEmphasisOpt.show && option.label.emphasis.show;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // 默认全局居中\n    center: ['50%', '50%'],\n    radius: [0, '75%'],\n    // 默认顺时针\n    clockwise: true,\n    startAngle: 90,\n    // 最小角度改为0\n    minAngle: 0,\n    // 选中时扇区偏移量\n    selectedOffset: 10,\n    // 高亮扇区偏移量\n    hoverOffset: 10,\n    // If use strategy to avoid label overlapping\n    avoidLabelOverlap: true,\n    // 选择模式，默认关闭，可选single，multiple\n    // selectedMode: false,\n    // 南丁格尔玫瑰图模式，'radius'（半径） | 'area'（面积）\n    // roseType: null,\n    percentPrecision: 2,\n    // If still show when all data zero.\n    stillShowZeroSum: true,\n    // cursor: null,\n    label: {\n      normal: {\n        // If rotate around circle\n        rotate: false,\n        show: true,\n        // 'outer', 'inside', 'center'\n        position: 'outer' // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n        // 默认使用全局文本样式，详见TEXTSTYLE\n        // distance: 当position为inner时有效，为label位置到圆心的距离与圆半径(环状图为内外半径和)的比例系数\n\n      },\n      emphasis: {}\n    },\n    // Enabled when label.normal.position is 'outer'\n    labelLine: {\n      normal: {\n        show: true,\n        // 引导线两段中的第一段长度\n        length: 15,\n        // 引导线两段中的第二段长度\n        length2: 15,\n        smooth: false,\n        lineStyle: {\n          // color: 各异,\n          width: 1,\n          type: 'solid'\n        }\n      }\n    },\n    itemStyle: {\n      normal: {\n        borderWidth: 1\n      },\n      emphasis: {}\n    },\n    // Animation type canbe expansion, scale\n    animationType: 'expansion',\n    animationEasing: 'cubicOut',\n    data: []\n  }\n});\nzrUtil.mixin(PieSeries, dataSelectableMixin);\nvar _default = PieSeries;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1220:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1027);\n\nvar graphic = __webpack_require__(1029);\n\nvar ChartView = __webpack_require__(1061);\n\n/**\n * @param {module:echarts/model/Series} seriesModel\n * @param {boolean} hasAnimation\n * @inner\n */\nfunction updateDataSelected(uid, seriesModel, hasAnimation, api) {\n  var data = seriesModel.getData();\n  var dataIndex = this.dataIndex;\n  var name = data.getName(dataIndex);\n  var selectedOffset = seriesModel.get('selectedOffset');\n  api.dispatchAction({\n    type: 'pieToggleSelect',\n    from: uid,\n    name: name,\n    seriesId: seriesModel.id\n  });\n  data.each(function (idx) {\n    toggleItemSelected(data.getItemGraphicEl(idx), data.getItemLayout(idx), seriesModel.isSelected(data.getName(idx)), selectedOffset, hasAnimation);\n  });\n}\n/**\n * @param {module:zrender/graphic/Sector} el\n * @param {Object} layout\n * @param {boolean} isSelected\n * @param {number} selectedOffset\n * @param {boolean} hasAnimation\n * @inner\n */\n\n\nfunction toggleItemSelected(el, layout, isSelected, selectedOffset, hasAnimation) {\n  var midAngle = (layout.startAngle + layout.endAngle) / 2;\n  var dx = Math.cos(midAngle);\n  var dy = Math.sin(midAngle);\n  var offset = isSelected ? selectedOffset : 0;\n  var position = [dx * offset, dy * offset];\n  hasAnimation // animateTo will stop revious animation like update transition\n  ? el.animate().when(200, {\n    position: position\n  }).start('bounceOut') : el.attr('position', position);\n}\n/**\n * Piece of pie including Sector, Label, LabelLine\n * @constructor\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction PiePiece(data, idx) {\n  graphic.Group.call(this);\n  var sector = new graphic.Sector({\n    z2: 2\n  });\n  var polyline = new graphic.Polyline();\n  var text = new graphic.Text();\n  this.add(sector);\n  this.add(polyline);\n  this.add(text);\n  this.updateData(data, idx, true); // Hover to change label and labelLine\n\n  function onEmphasis() {\n    polyline.ignore = polyline.hoverIgnore;\n    text.ignore = text.hoverIgnore;\n  }\n\n  function onNormal() {\n    polyline.ignore = polyline.normalIgnore;\n    text.ignore = text.normalIgnore;\n  }\n\n  this.on('emphasis', onEmphasis).on('normal', onNormal).on('mouseover', onEmphasis).on('mouseout', onNormal);\n}\n\nvar piePieceProto = PiePiece.prototype;\n\npiePieceProto.updateData = function (data, idx, firstCreate) {\n  var sector = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var sectorShape = zrUtil.extend({}, layout);\n  sectorShape.label = null;\n\n  if (firstCreate) {\n    sector.setShape(sectorShape);\n    var animationType = seriesModel.getShallow('animationType');\n\n    if (animationType === 'scale') {\n      sector.shape.r = layout.r0;\n      graphic.initProps(sector, {\n        shape: {\n          r: layout.r\n        }\n      }, seriesModel, idx);\n    } // Expansion\n    else {\n        sector.shape.endAngle = layout.startAngle;\n        graphic.updateProps(sector, {\n          shape: {\n            endAngle: layout.endAngle\n          }\n        }, seriesModel, idx);\n      }\n  } else {\n    graphic.updateProps(sector, {\n      shape: sectorShape\n    }, seriesModel, idx);\n  } // Update common style\n\n\n  var itemStyleModel = itemModel.getModel('itemStyle');\n  var visualColor = data.getItemVisual(idx, 'color');\n  sector.useStyle(zrUtil.defaults({\n    lineJoin: 'bevel',\n    fill: visualColor\n  }, itemStyleModel.getModel('normal').getItemStyle()));\n  sector.hoverStyle = itemStyleModel.getModel('emphasis').getItemStyle();\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && sector.attr('cursor', cursorStyle); // Toggle selected\n\n  toggleItemSelected(this, data.getItemLayout(idx), itemModel.get('selected'), seriesModel.get('selectedOffset'), seriesModel.get('animation'));\n\n  function onEmphasis() {\n    // Sector may has animation of updating data. Force to move to the last frame\n    // Or it may stopped on the wrong shape\n    sector.stopAnimation(true);\n    sector.animateTo({\n      shape: {\n        r: layout.r + seriesModel.get('hoverOffset')\n      }\n    }, 300, 'elasticOut');\n  }\n\n  function onNormal() {\n    sector.stopAnimation(true);\n    sector.animateTo({\n      shape: {\n        r: layout.r\n      }\n    }, 300, 'elasticOut');\n  }\n\n  sector.off('mouseover').off('mouseout').off('emphasis').off('normal');\n\n  if (itemModel.get('hoverAnimation') && seriesModel.isAnimationEnabled()) {\n    sector.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n  }\n\n  this._updateLabel(data, idx);\n\n  graphic.setHoverStyle(this);\n};\n\npiePieceProto._updateLabel = function (data, idx) {\n  var labelLine = this.childAt(1);\n  var labelText = this.childAt(2);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var labelLayout = layout.label;\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.updateProps(labelLine, {\n    shape: {\n      points: labelLayout.linePoints || [[labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y]]\n    }\n  }, seriesModel, idx);\n  graphic.updateProps(labelText, {\n    style: {\n      x: labelLayout.x,\n      y: labelLayout.y\n    }\n  }, seriesModel, idx);\n  labelText.attr({\n    rotation: labelLayout.rotation,\n    origin: [labelLayout.x, labelLayout.y],\n    z2: 10\n  });\n  var labelModel = itemModel.getModel('label.normal');\n  var labelHoverModel = itemModel.getModel('label.emphasis');\n  var labelLineModel = itemModel.getModel('labelLine.normal');\n  var labelLineHoverModel = itemModel.getModel('labelLine.emphasis');\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.setLabelStyle(labelText.style, labelText.hoverStyle = {}, labelModel, labelHoverModel, {\n    labelFetcher: data.hostModel,\n    labelDataIndex: idx,\n    defaultText: data.getName(idx),\n    autoColor: visualColor,\n    useInsideStyle: !!labelLayout.inside\n  }, {\n    textAlign: labelLayout.textAlign,\n    textVerticalAlign: labelLayout.verticalAlign,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n  labelText.hoverIgnore = !labelHoverModel.get('show');\n  labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n  labelLine.hoverIgnore = !labelLineHoverModel.get('show'); // Default use item visual color\n\n  labelLine.setStyle({\n    stroke: visualColor,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n  labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n  var smooth = labelLineModel.get('smooth');\n\n  if (smooth && smooth === true) {\n    smooth = 0.4;\n  }\n\n  labelLine.setShape({\n    smooth: smooth\n  });\n};\n\nzrUtil.inherits(PiePiece, graphic.Group); // Pie view\n\nvar PieView = ChartView.extend({\n  type: 'pie',\n  init: function () {\n    var sectorGroup = new graphic.Group();\n    this._sectorGroup = sectorGroup;\n  },\n  render: function (seriesModel, ecModel, api, payload) {\n    if (payload && payload.from === this.uid) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    var hasAnimation = ecModel.get('animation');\n    var isFirstRender = !oldData;\n    var animationType = seriesModel.get('animationType');\n    var onSectorClick = zrUtil.curry(updateDataSelected, this.uid, seriesModel, hasAnimation, api);\n    var selectedMode = seriesModel.get('selectedMode');\n    data.diff(oldData).add(function (idx) {\n      var piePiece = new PiePiece(data, idx); // Default expansion animation\n\n      if (isFirstRender && animationType !== 'scale') {\n        piePiece.eachChild(function (child) {\n          child.stopAnimation(true);\n        });\n      }\n\n      selectedMode && piePiece.on('click', onSectorClick);\n      data.setItemGraphicEl(idx, piePiece);\n      group.add(piePiece);\n    }).update(function (newIdx, oldIdx) {\n      var piePiece = oldData.getItemGraphicEl(oldIdx);\n      piePiece.updateData(data, newIdx);\n      piePiece.off('click');\n      selectedMode && piePiece.on('click', onSectorClick);\n      group.add(piePiece);\n      data.setItemGraphicEl(newIdx, piePiece);\n    }).remove(function (idx) {\n      var piePiece = oldData.getItemGraphicEl(idx);\n      group.remove(piePiece);\n    }).execute();\n\n    if (hasAnimation && isFirstRender && data.count() > 0 // Default expansion animation\n    && animationType !== 'scale') {\n      var shape = data.getItemLayout(0);\n      var r = Math.max(api.getWidth(), api.getHeight()) / 2;\n      var removeClipPath = zrUtil.bind(group.removeClipPath, group);\n      group.setClipPath(this._createClipPath(shape.cx, shape.cy, r, shape.startAngle, shape.clockwise, removeClipPath, seriesModel));\n    }\n\n    this._data = data;\n  },\n  dispose: function () {},\n  _createClipPath: function (cx, cy, r, startAngle, clockwise, cb, seriesModel) {\n    var clipPath = new graphic.Sector({\n      shape: {\n        cx: cx,\n        cy: cy,\n        r0: 0,\n        r: r,\n        startAngle: startAngle,\n        endAngle: startAngle,\n        clockwise: clockwise\n      }\n    });\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: startAngle + (clockwise ? 1 : -1) * Math.PI * 2\n      }\n    }, seriesModel, cb);\n    return clipPath;\n  },\n\n  /**\n   * @implement\n   */\n  containPoint: function (point, seriesModel) {\n    var data = seriesModel.getData();\n    var itemLayout = data.getItemLayout(0);\n\n    if (itemLayout) {\n      var dx = point[0] - itemLayout.cx;\n      var dy = point[1] - itemLayout.cy;\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      return radius <= itemLayout.r && radius >= itemLayout.r0;\n    }\n  }\n});\nvar _default = PieView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1221:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _number = __webpack_require__(1030);\n\nvar parsePercent = _number.parsePercent;\nvar linearMap = _number.linearMap;\n\nvar labelLayout = __webpack_require__(1222);\n\nvar zrUtil = __webpack_require__(1027);\n\nvar PI2 = Math.PI * 2;\nvar RADIAN = Math.PI / 180;\n\nfunction _default(seriesType, ecModel, api, payload) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var center = seriesModel.get('center');\n    var radius = seriesModel.get('radius');\n\n    if (!zrUtil.isArray(radius)) {\n      radius = [0, radius];\n    }\n\n    if (!zrUtil.isArray(center)) {\n      center = [center, center];\n    }\n\n    var width = api.getWidth();\n    var height = api.getHeight();\n    var size = Math.min(width, height);\n    var cx = parsePercent(center[0], width);\n    var cy = parsePercent(center[1], height);\n    var r0 = parsePercent(radius[0], size / 2);\n    var r = parsePercent(radius[1], size / 2);\n    var data = seriesModel.getData();\n    var startAngle = -seriesModel.get('startAngle') * RADIAN;\n    var minAngle = seriesModel.get('minAngle') * RADIAN;\n    var validDataCount = 0;\n    data.each('value', function (value) {\n      !isNaN(value) && validDataCount++;\n    });\n    var sum = data.getSum('value'); // Sum may be 0\n\n    var unitRadian = Math.PI / (sum || validDataCount) * 2;\n    var clockwise = seriesModel.get('clockwise');\n    var roseType = seriesModel.get('roseType');\n    var stillShowZeroSum = seriesModel.get('stillShowZeroSum'); // [0...max]\n\n    var extent = data.getDataExtent('value');\n    extent[0] = 0; // In the case some sector angle is smaller than minAngle\n\n    var restAngle = PI2;\n    var valueSumLargerThanMinAngle = 0;\n    var currentAngle = startAngle;\n    var dir = clockwise ? 1 : -1;\n    data.each('value', function (value, idx) {\n      var angle;\n\n      if (isNaN(value)) {\n        data.setItemLayout(idx, {\n          angle: NaN,\n          startAngle: NaN,\n          endAngle: NaN,\n          clockwise: clockwise,\n          cx: cx,\n          cy: cy,\n          r0: r0,\n          r: roseType ? NaN : r\n        });\n        return;\n      } // FIXME 兼容 2.0 但是 roseType 是 area 的时候才是这样？\n\n\n      if (roseType !== 'area') {\n        angle = sum === 0 && stillShowZeroSum ? unitRadian : value * unitRadian;\n      } else {\n        angle = PI2 / validDataCount;\n      }\n\n      if (angle < minAngle) {\n        angle = minAngle;\n        restAngle -= minAngle;\n      } else {\n        valueSumLargerThanMinAngle += value;\n      }\n\n      var endAngle = currentAngle + dir * angle;\n      data.setItemLayout(idx, {\n        angle: angle,\n        startAngle: currentAngle,\n        endAngle: endAngle,\n        clockwise: clockwise,\n        cx: cx,\n        cy: cy,\n        r0: r0,\n        r: roseType ? linearMap(value, extent, [r0, r]) : r\n      });\n      currentAngle = endAngle;\n    }, true); // Some sector is constrained by minAngle\n    // Rest sectors needs recalculate angle\n\n    if (restAngle < PI2 && validDataCount) {\n      // Average the angle if rest angle is not enough after all angles is\n      // Constrained by minAngle\n      if (restAngle <= 1e-3) {\n        var angle = PI2 / validDataCount;\n        data.each('value', function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            layout.angle = angle;\n            layout.startAngle = startAngle + dir * idx * angle;\n            layout.endAngle = startAngle + dir * (idx + 1) * angle;\n          }\n        });\n      } else {\n        unitRadian = restAngle / valueSumLargerThanMinAngle;\n        currentAngle = startAngle;\n        data.each('value', function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            var angle = layout.angle === minAngle ? minAngle : value * unitRadian;\n            layout.startAngle = currentAngle;\n            layout.endAngle = currentAngle + dir * angle;\n            currentAngle += dir * angle;\n          }\n        });\n      }\n    }\n\n    labelLayout(seriesModel, r, width, height);\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1222:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar textContain = __webpack_require__(1042);\n\n// FIXME emphasis label position is not same with normal label position\nfunction adjustSingleSide(list, cx, cy, r, dir, viewWidth, viewHeight) {\n  list.sort(function (a, b) {\n    return a.y - b.y;\n  }); // 压\n\n  function shiftDown(start, end, delta, dir) {\n    for (var j = start; j < end; j++) {\n      list[j].y += delta;\n\n      if (j > start && j + 1 < end && list[j + 1].y > list[j].y + list[j].height) {\n        shiftUp(j, delta / 2);\n        return;\n      }\n    }\n\n    shiftUp(end - 1, delta / 2);\n  } // 弹\n\n\n  function shiftUp(end, delta) {\n    for (var j = end; j >= 0; j--) {\n      list[j].y -= delta;\n\n      if (j > 0 && list[j].y > list[j - 1].y + list[j - 1].height) {\n        break;\n      }\n    }\n  }\n\n  function changeX(list, isDownList, cx, cy, r, dir) {\n    var lastDeltaX = dir > 0 ? isDownList // 右侧\n    ? Number.MAX_VALUE // 下\n    : 0 // 上\n    : isDownList // 左侧\n    ? Number.MAX_VALUE // 下\n    : 0; // 上\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      // Not change x for center label\n      if (list[i].position === 'center') {\n        continue;\n      }\n\n      var deltaY = Math.abs(list[i].y - cy);\n      var length = list[i].len;\n      var length2 = list[i].len2;\n      var deltaX = deltaY < r + length ? Math.sqrt((r + length + length2) * (r + length + length2) - deltaY * deltaY) : Math.abs(list[i].x - cx);\n\n      if (isDownList && deltaX >= lastDeltaX) {\n        // 右下，左下\n        deltaX = lastDeltaX - 10;\n      }\n\n      if (!isDownList && deltaX <= lastDeltaX) {\n        // 右上，左上\n        deltaX = lastDeltaX + 10;\n      }\n\n      list[i].x = cx + deltaX * dir;\n      lastDeltaX = deltaX;\n    }\n  }\n\n  var lastY = 0;\n  var delta;\n  var len = list.length;\n  var upList = [];\n  var downList = [];\n\n  for (var i = 0; i < len; i++) {\n    delta = list[i].y - lastY;\n\n    if (delta < 0) {\n      shiftDown(i, len, -delta, dir);\n    }\n\n    lastY = list[i].y + list[i].height;\n  }\n\n  if (viewHeight - lastY < 0) {\n    shiftUp(len - 1, lastY - viewHeight);\n  }\n\n  for (var i = 0; i < len; i++) {\n    if (list[i].y >= cy) {\n      downList.push(list[i]);\n    } else {\n      upList.push(list[i]);\n    }\n  }\n\n  changeX(upList, false, cx, cy, r, dir);\n  changeX(downList, true, cx, cy, r, dir);\n}\n\nfunction avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight) {\n  var leftList = [];\n  var rightList = [];\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    if (labelLayoutList[i].x < cx) {\n      leftList.push(labelLayoutList[i]);\n    } else {\n      rightList.push(labelLayoutList[i]);\n    }\n  }\n\n  adjustSingleSide(rightList, cx, cy, r, 1, viewWidth, viewHeight);\n  adjustSingleSide(leftList, cx, cy, r, -1, viewWidth, viewHeight);\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    var linePoints = labelLayoutList[i].linePoints;\n\n    if (linePoints) {\n      var dist = linePoints[1][0] - linePoints[2][0];\n\n      if (labelLayoutList[i].x < cx) {\n        linePoints[2][0] = labelLayoutList[i].x + 3;\n      } else {\n        linePoints[2][0] = labelLayoutList[i].x - 3;\n      }\n\n      linePoints[1][1] = linePoints[2][1] = labelLayoutList[i].y;\n      linePoints[1][0] = linePoints[2][0] + dist;\n    }\n  }\n}\n\nfunction _default(seriesModel, r, viewWidth, viewHeight) {\n  var data = seriesModel.getData();\n  var labelLayoutList = [];\n  var cx;\n  var cy;\n  var hasLabelRotate = false;\n  data.each(function (idx) {\n    var layout = data.getItemLayout(idx);\n    var itemModel = data.getItemModel(idx);\n    var labelModel = itemModel.getModel('label.normal'); // Use position in normal or emphasis\n\n    var labelPosition = labelModel.get('position') || itemModel.get('label.emphasis.position');\n    var labelLineModel = itemModel.getModel('labelLine.normal');\n    var labelLineLen = labelLineModel.get('length');\n    var labelLineLen2 = labelLineModel.get('length2');\n    var midAngle = (layout.startAngle + layout.endAngle) / 2;\n    var dx = Math.cos(midAngle);\n    var dy = Math.sin(midAngle);\n    var textX;\n    var textY;\n    var linePoints;\n    var textAlign;\n    cx = layout.cx;\n    cy = layout.cy;\n    var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\n\n    if (labelPosition === 'center') {\n      textX = layout.cx;\n      textY = layout.cy;\n      textAlign = 'center';\n    } else {\n      var x1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dx : layout.r * dx) + cx;\n      var y1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dy : layout.r * dy) + cy;\n      textX = x1 + dx * 3;\n      textY = y1 + dy * 3;\n\n      if (!isLabelInside) {\n        // For roseType\n        var x2 = x1 + dx * (labelLineLen + r - layout.r);\n        var y2 = y1 + dy * (labelLineLen + r - layout.r);\n        var x3 = x2 + (dx < 0 ? -1 : 1) * labelLineLen2;\n        var y3 = y2;\n        textX = x3 + (dx < 0 ? -5 : 5);\n        textY = y3;\n        linePoints = [[x1, y1], [x2, y2], [x3, y3]];\n      }\n\n      textAlign = isLabelInside ? 'center' : dx > 0 ? 'left' : 'right';\n    }\n\n    var font = labelModel.getFont();\n    var labelRotate = labelModel.get('rotate') ? dx < 0 ? -midAngle + Math.PI : -midAngle : 0;\n    var text = seriesModel.getFormattedLabel(idx, 'normal') || data.getName(idx);\n    var textRect = textContain.getBoundingRect(text, font, textAlign, 'top');\n    hasLabelRotate = !!labelRotate;\n    layout.label = {\n      x: textX,\n      y: textY,\n      position: labelPosition,\n      height: textRect.height,\n      len: labelLineLen,\n      len2: labelLineLen2,\n      linePoints: linePoints,\n      textAlign: textAlign,\n      verticalAlign: 'middle',\n      rotation: labelRotate,\n      inside: isLabelInside\n    }; // Not layout the inside label\n\n    if (!isLabelInside) {\n      labelLayoutList.push(layout.label);\n    }\n  });\n\n  if (!hasLabelRotate && seriesModel.get('avoidLabelOverlap')) {\n    avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight);\n  }\n}\n\nmodule.exports = _default;\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/PieReact.915f448f.chunk.js","import React from 'react'\nimport echarts from 'echarts/lib/echarts' //必须\nimport 'echarts/lib/component/tooltip'\nimport 'echarts/lib/component/legend'\nimport 'echarts/lib/chart/pie'\nimport 'echarts/lib/component/toolbox'\n\nexport default class PieReact extends React.Component {\n  \n  constructor(props) {\n    super(props)\n    this.initPie = this.initPie.bind(this)\n  }\n  \n  initPie() {\n    const { option={} } = this.props; //外部传入的data数据\n    let myChart = echarts.init(this.ID); //初始化echarts\n\n    //设置options\n    myChart.setOption(option)\n    window.onresize = function() {\n      myChart.resize()\n    }\n  }\n  \n  componentDidMount() {\n    this.initPie()\n  }\n  \n  componentDidUpdate() {\n    this.initPie()\n  }\n  \n  render() {\n    const { width=\"100%\", height = '300px' } = this.props\n    return <div ref={ID => this.ID = ID} style={{width, height}}></div>\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/Echarts/PieReact.js","/**\n * @module zrender/core/util\n */\n// 用于处理merge时无法遍历Date等对象的问题\nvar BUILTIN_OBJECT = {\n  '[object Function]': 1,\n  '[object RegExp]': 1,\n  '[object Date]': 1,\n  '[object Error]': 1,\n  '[object CanvasGradient]': 1,\n  '[object CanvasPattern]': 1,\n  // For node-canvas\n  '[object Image]': 1,\n  '[object Canvas]': 1\n};\nvar TYPED_ARRAY = {\n  '[object Int8Array]': 1,\n  '[object Uint8Array]': 1,\n  '[object Uint8ClampedArray]': 1,\n  '[object Int16Array]': 1,\n  '[object Uint16Array]': 1,\n  '[object Int32Array]': 1,\n  '[object Uint32Array]': 1,\n  '[object Float32Array]': 1,\n  '[object Float64Array]': 1\n};\nvar objToString = Object.prototype.toString;\nvar arrayProto = Array.prototype;\nvar nativeForEach = arrayProto.forEach;\nvar nativeFilter = arrayProto.filter;\nvar nativeSlice = arrayProto.slice;\nvar nativeMap = arrayProto.map;\nvar nativeReduce = arrayProto.reduce; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  methods[name] = fn;\n}\n/**\n * Those data types can be cloned:\n *     Plain object, Array, TypedArray, number, string, null, undefined.\n * Those data types will be assgined using the orginal data:\n *     BUILTIN_OBJECT\n * Instance of user defined class will be cloned to a plain object, without\n * properties in prototype.\n * Other data types is not supported (not sure what will happen).\n *\n * Caution: do not support clone Date, for performance consideration.\n * (There might be a large number of date in `series.data`).\n * So date should not be modified in and out of echarts.\n *\n * @param {*} source\n * @return {*} new\n */\n\n\nfunction clone(source) {\n  if (source == null || typeof source != 'object') {\n    return source;\n  }\n\n  var result = source;\n  var typeStr = objToString.call(source);\n\n  if (typeStr === '[object Array]') {\n    result = [];\n\n    for (var i = 0, len = source.length; i < len; i++) {\n      result[i] = clone(source[i]);\n    }\n  } else if (TYPED_ARRAY[typeStr]) {\n    var Ctor = source.constructor;\n\n    if (source.constructor.from) {\n      result = Ctor.from(source);\n    } else {\n      result = new Ctor(source.length);\n\n      for (var i = 0, len = source.length; i < len; i++) {\n        result[i] = clone(source[i]);\n      }\n    }\n  } else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n    result = {};\n\n    for (var key in source) {\n      if (source.hasOwnProperty(key)) {\n        result[key] = clone(source[key]);\n      }\n    }\n  }\n\n  return result;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overwrite=false]\n */\n\n\nfunction merge(target, source, overwrite) {\n  // We should escapse that source is string\n  // and enter for ... in ...\n  if (!isObject(source) || !isObject(target)) {\n    return overwrite ? clone(source) : target;\n  }\n\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      var targetProp = target[key];\n      var sourceProp = source[key];\n\n      if (isObject(sourceProp) && isObject(targetProp) && !isArray(sourceProp) && !isArray(targetProp) && !isDom(sourceProp) && !isDom(targetProp) && !isBuiltInObject(sourceProp) && !isBuiltInObject(targetProp) && !isPrimitive(sourceProp) && !isPrimitive(targetProp)) {\n        // 如果需要递归覆盖，就递归调用merge\n        merge(targetProp, sourceProp, overwrite);\n      } else if (overwrite || !(key in target)) {\n        // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n        // NOTE，在 target[key] 不存在的时候也是直接覆盖\n        target[key] = clone(source[key], true);\n      }\n    }\n  }\n\n  return target;\n}\n/**\n * @param {Array} targetAndSources The first item is target, and the rests are source.\n * @param {boolean} [overwrite=false]\n * @return {*} target\n */\n\n\nfunction mergeAll(targetAndSources, overwrite) {\n  var result = targetAndSources[0];\n\n  for (var i = 1, len = targetAndSources.length; i < len; i++) {\n    result = merge(result, targetAndSources[i], overwrite);\n  }\n\n  return result;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @memberOf module:zrender/core/util\n */\n\n\nfunction extend(target, source) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overlay=false]\n * @memberOf module:zrender/core/util\n */\n\n\nfunction defaults(target, source, overlay) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key) && (overlay ? source[key] != null : target[key] == null)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar createCanvas = function () {\n  return methods.createCanvas();\n};\n\nmethods.createCanvas = function () {\n  return document.createElement('canvas');\n}; // FIXME\n\n\nvar _ctx;\n\nfunction getContext() {\n  if (!_ctx) {\n    // Use util.createCanvas instead of createCanvas\n    // because createCanvas may be overwritten in different environment\n    _ctx = createCanvas().getContext('2d');\n  }\n\n  return _ctx;\n}\n/**\n * 查询数组中元素的index\n * @memberOf module:zrender/core/util\n */\n\n\nfunction indexOf(array, value) {\n  if (array) {\n    if (array.indexOf) {\n      return array.indexOf(value);\n    }\n\n    for (var i = 0, len = array.length; i < len; i++) {\n      if (array[i] === value) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n}\n/**\n * 构造类继承关系\n *\n * @memberOf module:zrender/core/util\n * @param {Function} clazz 源类\n * @param {Function} baseClazz 基类\n */\n\n\nfunction inherits(clazz, baseClazz) {\n  var clazzPrototype = clazz.prototype;\n\n  function F() {}\n\n  F.prototype = baseClazz.prototype;\n  clazz.prototype = new F();\n\n  for (var prop in clazzPrototype) {\n    clazz.prototype[prop] = clazzPrototype[prop];\n  }\n\n  clazz.prototype.constructor = clazz;\n  clazz.superClass = baseClazz;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Object|Function} target\n * @param {Object|Function} sorce\n * @param {boolean} overlay\n */\n\n\nfunction mixin(target, source, overlay) {\n  target = 'prototype' in target ? target.prototype : target;\n  source = 'prototype' in source ? source.prototype : source;\n  defaults(target, source, overlay);\n}\n/**\n * Consider typed array.\n * @param {Array|TypedArray} data\n */\n\n\nfunction isArrayLike(data) {\n  if (!data) {\n    return;\n  }\n\n  if (typeof data == 'string') {\n    return false;\n  }\n\n  return typeof data.length == 'number';\n}\n/**\n * 数组或对象遍历\n * @memberOf module:zrender/core/util\n * @param {Object|Array} obj\n * @param {Function} cb\n * @param {*} [context]\n */\n\n\nfunction each(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.forEach && obj.forEach === nativeForEach) {\n    obj.forEach(cb, context);\n  } else if (obj.length === +obj.length) {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      cb.call(context, obj[i], i, obj);\n    }\n  } else {\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        cb.call(context, obj[key], key, obj);\n      }\n    }\n  }\n}\n/**\n * 数组映射\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction map(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.map && obj.map === nativeMap) {\n    return obj.map(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      result.push(cb.call(context, obj[i], i, obj));\n    }\n\n    return result;\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {Object} [memo]\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction reduce(obj, cb, memo, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.reduce && obj.reduce === nativeReduce) {\n    return obj.reduce(cb, memo, context);\n  } else {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      memo = cb.call(context, memo, obj[i], i, obj);\n    }\n\n    return memo;\n  }\n}\n/**\n * 数组过滤\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction filter(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.filter && obj.filter === nativeFilter) {\n    return obj.filter(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      if (cb.call(context, obj[i], i, obj)) {\n        result.push(obj[i]);\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * 数组项查找\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {*}\n */\n\n\nfunction find(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  for (var i = 0, len = obj.length; i < len; i++) {\n    if (cb.call(context, obj[i], i, obj)) {\n      return obj[i];\n    }\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @param {*} context\n * @return {Function}\n */\n\n\nfunction bind(func, context) {\n  var args = nativeSlice.call(arguments, 2);\n  return function () {\n    return func.apply(context, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @return {Function}\n */\n\n\nfunction curry(func) {\n  var args = nativeSlice.call(arguments, 1);\n  return function () {\n    return func.apply(this, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isArray(value) {\n  return objToString.call(value) === '[object Array]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isString(value) {\n  return objToString.call(value) === '[object String]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return type === 'function' || !!value && type == 'object';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isBuiltInObject(value) {\n  return !!BUILTIN_OBJECT[objToString.call(value)];\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isDom(value) {\n  return typeof value === 'object' && typeof value.nodeType === 'number' && typeof value.ownerDocument === 'object';\n}\n/**\n * Whether is exactly NaN. Notice isNaN('a') returns true.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction eqNaN(value) {\n  return value !== value;\n}\n/**\n * If value1 is not null, then return value1, otherwise judget rest of values.\n * Low performance.\n * @memberOf module:zrender/core/util\n * @return {*} Final value\n */\n\n\nfunction retrieve(values) {\n  for (var i = 0, len = arguments.length; i < len; i++) {\n    if (arguments[i] != null) {\n      return arguments[i];\n    }\n  }\n}\n\nfunction retrieve2(value0, value1) {\n  return value0 != null ? value0 : value1;\n}\n\nfunction retrieve3(value0, value1, value2) {\n  return value0 != null ? value0 : value1 != null ? value1 : value2;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} arr\n * @param {number} startIndex\n * @param {number} endIndex\n * @return {Array}\n */\n\n\nfunction slice() {\n  return Function.call.apply(nativeSlice, arguments);\n}\n/**\n * Normalize css liked array configuration\n * e.g.\n *  3 => [3, 3, 3, 3]\n *  [4, 2] => [4, 2, 4, 2]\n *  [4, 3, 2] => [4, 3, 2, 3]\n * @param {number|Array.<number>} val\n * @return {Array.<number>}\n */\n\n\nfunction normalizeCssArray(val) {\n  if (typeof val === 'number') {\n    return [val, val, val, val];\n  }\n\n  var len = val.length;\n\n  if (len === 2) {\n    // vertical | horizontal\n    return [val[0], val[1], val[0], val[1]];\n  } else if (len === 3) {\n    // top | horizontal | bottom\n    return [val[0], val[1], val[2], val[1]];\n  }\n\n  return val;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {boolean} condition\n * @param {string} message\n */\n\n\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error(message);\n  }\n}\n\nvar primitiveKey = '__ec_primitive__';\n/**\n * Set an object as primitive to be ignored traversing children in clone or merge\n */\n\nfunction setAsPrimitive(obj) {\n  obj[primitiveKey] = true;\n}\n\nfunction isPrimitive(obj) {\n  return obj[primitiveKey];\n}\n/**\n * @constructor\n * @param {Object} obj Only apply `ownProperty`.\n */\n\n\nfunction HashMap(obj) {\n  obj && each(obj, function (value, key) {\n    this.set(key, value);\n  }, this);\n} // Add prefix to avoid conflict with Object.prototype.\n\n\nvar HASH_MAP_PREFIX = '_ec_';\nvar HASH_MAP_PREFIX_LENGTH = 4;\nHashMap.prototype = {\n  constructor: HashMap,\n  // Do not provide `has` method to avoid defining what is `has`.\n  // (We usually treat `null` and `undefined` as the same, different\n  // from ES6 Map).\n  get: function (key) {\n    return this[HASH_MAP_PREFIX + key];\n  },\n  set: function (key, value) {\n    this[HASH_MAP_PREFIX + key] = value; // Comparing with invocation chaining, `return value` is more commonly\n    // used in this case: `var someVal = map.set('a', genVal());`\n\n    return value;\n  },\n  // Although util.each can be performed on this hashMap directly, user\n  // should not use the exposed keys, who are prefixed.\n  each: function (cb, context) {\n    context !== void 0 && (cb = bind(cb, context));\n\n    for (var prefixedKey in this) {\n      this.hasOwnProperty(prefixedKey) && cb(this[prefixedKey], prefixedKey.slice(HASH_MAP_PREFIX_LENGTH));\n    }\n  },\n  // Do not use this method if performance sensitive.\n  removeKey: function (key) {\n    delete this[HASH_MAP_PREFIX + key];\n  }\n};\n\nfunction createHashMap(obj) {\n  return new HashMap(obj);\n}\n\nfunction noop() {}\n\nexports.$override = $override;\nexports.clone = clone;\nexports.merge = merge;\nexports.mergeAll = mergeAll;\nexports.extend = extend;\nexports.defaults = defaults;\nexports.createCanvas = createCanvas;\nexports.getContext = getContext;\nexports.indexOf = indexOf;\nexports.inherits = inherits;\nexports.mixin = mixin;\nexports.isArrayLike = isArrayLike;\nexports.each = each;\nexports.map = map;\nexports.reduce = reduce;\nexports.filter = filter;\nexports.find = find;\nexports.bind = bind;\nexports.curry = curry;\nexports.isArray = isArray;\nexports.isFunction = isFunction;\nexports.isString = isString;\nexports.isObject = isObject;\nexports.isBuiltInObject = isBuiltInObject;\nexports.isDom = isDom;\nexports.eqNaN = eqNaN;\nexports.retrieve = retrieve;\nexports.retrieve2 = retrieve2;\nexports.retrieve3 = retrieve3;\nexports.slice = slice;\nexports.normalizeCssArray = normalizeCssArray;\nexports.assert = assert;\nexports.setAsPrimitive = setAsPrimitive;\nexports.isPrimitive = isPrimitive;\nexports.createHashMap = createHashMap;\nexports.noop = noop;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/util.js\n// module id = 1027\n// module chunks = 0 1 2","var _config = require(\"./config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrender = require(\"zrender/lib/zrender\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar timsort = require(\"zrender/lib/core/timsort\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar GlobalModel = require(\"./model/Global\");\n\nvar ExtensionAPI = require(\"./ExtensionAPI\");\n\nvar CoordinateSystemManager = require(\"./CoordinateSystem\");\n\nvar OptionManager = require(\"./model/OptionManager\");\n\nvar backwardCompat = require(\"./preprocessor/backwardCompat\");\n\nvar ComponentModel = require(\"./model/Component\");\n\nvar SeriesModel = require(\"./model/Series\");\n\nvar ComponentView = require(\"./view/Component\");\n\nvar ChartView = require(\"./view/Chart\");\n\nvar graphic = require(\"./util/graphic\");\n\nvar modelUtil = require(\"./util/model\");\n\nvar _throttle = require(\"./util/throttle\");\n\nvar throttle = _throttle.throttle;\n\nvar seriesColor = require(\"./visual/seriesColor\");\n\nvar loadingDefault = require(\"./loading/default\");\n\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\nvar each = zrUtil.each;\nvar parseClassType = ComponentModel.parseClassType;\nvar version = '3.8.5';\nvar dependencies = {\n  zrender: '3.7.4'\n};\nvar PRIORITY_PROCESSOR_FILTER = 1000;\nvar PRIORITY_PROCESSOR_STATISTIC = 5000;\nvar PRIORITY_VISUAL_LAYOUT = 1000;\nvar PRIORITY_VISUAL_GLOBAL = 2000;\nvar PRIORITY_VISUAL_CHART = 3000;\nvar PRIORITY_VISUAL_COMPONENT = 4000; // FIXME\n// necessary?\n\nvar PRIORITY_VISUAL_BRUSH = 5000;\nvar PRIORITY = {\n  PROCESSOR: {\n    FILTER: PRIORITY_PROCESSOR_FILTER,\n    STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n  },\n  VISUAL: {\n    LAYOUT: PRIORITY_VISUAL_LAYOUT,\n    GLOBAL: PRIORITY_VISUAL_GLOBAL,\n    CHART: PRIORITY_VISUAL_CHART,\n    COMPONENT: PRIORITY_VISUAL_COMPONENT,\n    BRUSH: PRIORITY_VISUAL_BRUSH\n  }\n}; // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n// where they must not be invoked nestedly, except the only case: invoke\n// dispatchAction with updateMethod \"none\" in main process.\n// This flag is used to carry out this rule.\n// All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n\nvar IN_MAIN_PROCESS = '__flagInMainProcess';\nvar HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\nvar OPTION_UPDATED = '__optionUpdated';\nvar ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\nfunction createRegisterEventWithLowercaseName(method) {\n  return function (eventName, handler, context) {\n    // Event name is all lowercase\n    eventName = eventName && eventName.toLowerCase();\n    Eventful.prototype[method].call(this, eventName, handler, context);\n  };\n}\n/**\n * @module echarts~MessageCenter\n */\n\n\nfunction MessageCenter() {\n  Eventful.call(this);\n}\n\nMessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\nMessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\nMessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\nzrUtil.mixin(MessageCenter, Eventful);\n/**\n * @module echarts~ECharts\n */\n\nfunction ECharts(dom, theme, opts) {\n  opts = opts || {}; // Get theme by name\n\n  if (typeof theme === 'string') {\n    theme = themeStorage[theme];\n  }\n  /**\n   * @type {string}\n   */\n\n\n  this.id;\n  /**\n   * Group id\n   * @type {string}\n   */\n\n  this.group;\n  /**\n   * @type {HTMLElement}\n   * @private\n   */\n\n  this._dom = dom;\n  var defaultRenderer = 'canvas';\n\n  /**\n   * @type {module:zrender/ZRender}\n   * @private\n   */\n  var zr = this._zr = zrender.init(dom, {\n    renderer: opts.renderer || defaultRenderer,\n    devicePixelRatio: opts.devicePixelRatio,\n    width: opts.width,\n    height: opts.height\n  });\n  /**\n   * Expect 60 pfs.\n   * @type {Function}\n   * @private\n   */\n\n  this._throttledZrFlush = throttle(zrUtil.bind(zr.flush, zr), 17);\n  var theme = zrUtil.clone(theme);\n  theme && backwardCompat(theme, true);\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._theme = theme;\n  /**\n   * @type {Array.<module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsMap = {};\n  /**\n   * @type {Array.<module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsMap = {};\n  /**\n   * @type {module:echarts/CoordinateSystem}\n   * @private\n   */\n\n  this._coordSysMgr = new CoordinateSystemManager();\n  /**\n   * @type {module:echarts/ExtensionAPI}\n   * @private\n   */\n\n  this._api = createExtensionAPI(this);\n  Eventful.call(this);\n  /**\n   * @type {module:echarts~MessageCenter}\n   * @private\n   */\n\n  this._messageCenter = new MessageCenter(); // Init mouse events\n\n  this._initEvents(); // In case some people write `window.onresize = chart.resize`\n\n\n  this.resize = zrUtil.bind(this.resize, this); // Can't dispatch action during rendering procedure\n\n  this._pendingActions = []; // Sort on demand\n\n  function prioritySortFunc(a, b) {\n    return a.prio - b.prio;\n  }\n\n  timsort(visualFuncs, prioritySortFunc);\n  timsort(dataProcessorFuncs, prioritySortFunc);\n  zr.animation.on('frame', this._onframe, this); // ECharts instance can be used as value.\n\n  zrUtil.setAsPrimitive(this);\n}\n\nvar echartsProto = ECharts.prototype;\n\nechartsProto._onframe = function () {\n  // Lazy update\n  if (this[OPTION_UPDATED]) {\n    var silent = this[OPTION_UPDATED].silent;\n    this[IN_MAIN_PROCESS] = true;\n    updateMethods.prepareAndUpdate.call(this);\n    this[IN_MAIN_PROCESS] = false;\n    this[OPTION_UPDATED] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @return {HTMLElement}\n */\n\n\nechartsProto.getDom = function () {\n  return this._dom;\n};\n/**\n * @return {module:zrender~ZRender}\n */\n\n\nechartsProto.getZr = function () {\n  return this._zr;\n};\n/**\n * Usage:\n * chart.setOption(option, notMerge, lazyUpdate);\n * chart.setOption(option, {\n *     notMerge: ...,\n *     lazyUpdate: ...,\n *     silent: ...\n * });\n *\n * @param {Object} option\n * @param {Object|boolean} [opts] opts or notMerge.\n * @param {boolean} [opts.notMerge=false]\n * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n */\n\n\nechartsProto.setOption = function (option, notMerge, lazyUpdate) {\n  var silent;\n\n  if (zrUtil.isObject(notMerge)) {\n    lazyUpdate = notMerge.lazyUpdate;\n    silent = notMerge.silent;\n    notMerge = notMerge.notMerge;\n  }\n\n  this[IN_MAIN_PROCESS] = true;\n\n  if (!this._model || notMerge) {\n    var optionManager = new OptionManager(this._api);\n    var theme = this._theme;\n    var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n    ecModel.init(null, null, theme, optionManager);\n  }\n\n  this._model.setOption(option, optionPreprocessorFuncs);\n\n  if (lazyUpdate) {\n    this[OPTION_UPDATED] = {\n      silent: silent\n    };\n    this[IN_MAIN_PROCESS] = false;\n  } else {\n    updateMethods.prepareAndUpdate.call(this); // Ensure zr refresh sychronously, and then pixel in canvas can be\n    // fetched after `setOption`.\n\n    this._zr.flush();\n\n    this[OPTION_UPDATED] = false;\n    this[IN_MAIN_PROCESS] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @DEPRECATED\n */\n\n\nechartsProto.setTheme = function () {\n  console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n};\n/**\n * @return {module:echarts/model/Global}\n */\n\n\nechartsProto.getModel = function () {\n  return this._model;\n};\n/**\n * @return {Object}\n */\n\n\nechartsProto.getOption = function () {\n  return this._model && this._model.getOption();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getWidth = function () {\n  return this._zr.getWidth();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getHeight = function () {\n  return this._zr.getHeight();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getDevicePixelRatio = function () {\n  return this._zr.painter.dpr || window.devicePixelRatio || 1;\n};\n/**\n * Get canvas which has all thing rendered\n * @param {Object} opts\n * @param {string} [opts.backgroundColor]\n * @return {string}\n */\n\n\nechartsProto.getRenderedCanvas = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  opts = opts || {};\n  opts.pixelRatio = opts.pixelRatio || 1;\n  opts.backgroundColor = opts.backgroundColor || this._model.get('backgroundColor');\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.getRenderedCanvas(opts);\n};\n/**\n * Get svg data url\n * @return {string}\n */\n\n\nechartsProto.getSvgDataUrl = function () {\n  if (!env.svgSupported) {\n    return;\n  }\n\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.pathToSvg();\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n * @param {string} [opts.excludeComponents]\n */\n\n\nechartsProto.getDataURL = function (opts) {\n  opts = opts || {};\n  var excludeComponents = opts.excludeComponents;\n  var ecModel = this._model;\n  var excludesComponentViews = [];\n  var self = this;\n  each(excludeComponents, function (componentType) {\n    ecModel.eachComponent({\n      mainType: componentType\n    }, function (component) {\n      var view = self._componentsMap[component.__viewId];\n\n      if (!view.group.ignore) {\n        excludesComponentViews.push(view);\n        view.group.ignore = true;\n      }\n    });\n  });\n  var url = this._zr.painter.getType() === 'svg' ? this.getSvgDataUrl() : this.getRenderedCanvas(opts).toDataURL('image/' + (opts && opts.type || 'png'));\n  each(excludesComponentViews, function (view) {\n    view.group.ignore = false;\n  });\n  return url;\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n */\n\n\nechartsProto.getConnectedDataURL = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  var groupId = this.group;\n  var mathMin = Math.min;\n  var mathMax = Math.max;\n  var MAX_NUMBER = Infinity;\n\n  if (connectedGroups[groupId]) {\n    var left = MAX_NUMBER;\n    var top = MAX_NUMBER;\n    var right = -MAX_NUMBER;\n    var bottom = -MAX_NUMBER;\n    var canvasList = [];\n    var dpr = opts && opts.pixelRatio || 1;\n    zrUtil.each(instances, function (chart, id) {\n      if (chart.group === groupId) {\n        var canvas = chart.getRenderedCanvas(zrUtil.clone(opts));\n        var boundingRect = chart.getDom().getBoundingClientRect();\n        left = mathMin(boundingRect.left, left);\n        top = mathMin(boundingRect.top, top);\n        right = mathMax(boundingRect.right, right);\n        bottom = mathMax(boundingRect.bottom, bottom);\n        canvasList.push({\n          dom: canvas,\n          left: boundingRect.left,\n          top: boundingRect.top\n        });\n      }\n    });\n    left *= dpr;\n    top *= dpr;\n    right *= dpr;\n    bottom *= dpr;\n    var width = right - left;\n    var height = bottom - top;\n    var targetCanvas = zrUtil.createCanvas();\n    targetCanvas.width = width;\n    targetCanvas.height = height;\n    var zr = zrender.init(targetCanvas);\n    each(canvasList, function (item) {\n      var img = new graphic.Image({\n        style: {\n          x: item.left * dpr - left,\n          y: item.top * dpr - top,\n          image: item.dom\n        }\n      });\n      zr.add(img);\n    });\n    zr.refreshImmediately();\n    return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n  } else {\n    return this.getDataURL(opts);\n  }\n};\n/**\n * Convert from logical coordinate system to pixel coordinate system.\n * See CoordinateSystem#convertToPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId, geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\n\nechartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n/**\n * Convert from pixel coordinate system to logical coordinate system.\n * See CoordinateSystem#convertFromPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\nechartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\nfunction doConvertPixel(methodName, finder, value) {\n  var ecModel = this._model;\n\n  var coordSysList = this._coordSysMgr.getCoordinateSystems();\n\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n\n  for (var i = 0; i < coordSysList.length; i++) {\n    var coordSys = coordSysList[i];\n\n    if (coordSys[methodName] && (result = coordSys[methodName](ecModel, finder, value)) != null) {\n      return result;\n    }\n  }\n}\n/**\n * Is the specified coordinate systems or components contain the given pixel point.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {boolean} result\n */\n\n\nechartsProto.containPixel = function (finder, value) {\n  var ecModel = this._model;\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n  zrUtil.each(finder, function (models, key) {\n    key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n      var coordSys = model.coordinateSystem;\n\n      if (coordSys && coordSys.containPoint) {\n        result |= !!coordSys.containPoint(value);\n      } else if (key === 'seriesModels') {\n        var view = this._chartsMap[model.__viewId];\n\n        if (view && view.containPoint) {\n          result |= view.containPoint(value, model);\n        } else {}\n      } else {}\n    }, this);\n  }, this);\n  return !!result;\n};\n/**\n * Get visual from series or data.\n * @param {string|Object} finder\n *        If string, e.g., 'series', means {seriesIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            dataIndex / dataIndexInside\n *        }\n *        If dataIndex is not specified, series visual will be fetched,\n *        but not data item visual.\n *        If all of seriesIndex, seriesId, seriesName are not specified,\n *        visual will be fetched from first series.\n * @param {string} visualType 'color', 'symbol', 'symbolSize'\n */\n\n\nechartsProto.getVisual = function (finder, visualType) {\n  var ecModel = this._model;\n  finder = modelUtil.parseFinder(ecModel, finder, {\n    defaultMainType: 'series'\n  });\n  var seriesModel = finder.seriesModel;\n  var data = seriesModel.getData();\n  var dataIndexInside = finder.hasOwnProperty('dataIndexInside') ? finder.dataIndexInside : finder.hasOwnProperty('dataIndex') ? data.indexOfRawIndex(finder.dataIndex) : null;\n  return dataIndexInside != null ? data.getItemVisual(dataIndexInside, visualType) : data.getVisual(visualType);\n};\n/**\n * Get view of corresponding component model\n * @param  {module:echarts/model/Component} componentModel\n * @return {module:echarts/view/Component}\n */\n\n\nechartsProto.getViewOfComponentModel = function (componentModel) {\n  return this._componentsMap[componentModel.__viewId];\n};\n/**\n * Get view of corresponding series model\n * @param  {module:echarts/model/Series} seriesModel\n * @return {module:echarts/view/Chart}\n */\n\n\nechartsProto.getViewOfSeriesModel = function (seriesModel) {\n  return this._chartsMap[seriesModel.__viewId];\n};\n\nvar updateMethods = {\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  update: function (payload) {\n    // console.profile && console.profile('update');\n    var ecModel = this._model;\n    var api = this._api;\n    var coordSysMgr = this._coordSysMgr;\n    var zr = this._zr; // update before setOption\n\n    if (!ecModel) {\n      return;\n    } // Fixme First time update ?\n\n\n    ecModel.restoreData(); // TODO\n    // Save total ecModel here for undo/redo (after restoring data and before processing data).\n    // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n    // Create new coordinate system each update\n    // In LineView may save the old coordinate system and use it to get the orignal point\n\n    coordSysMgr.create(this._model, this._api);\n    processData.call(this, ecModel, api);\n    stackSeriesData.call(this, ecModel);\n    coordSysMgr.update(ecModel, api);\n    doVisualEncoding.call(this, ecModel, payload);\n    doRender.call(this, ecModel, payload); // Set background\n\n    var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n    var painter = zr.painter; // TODO all use clearColor ?\n\n    if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n      zr.configLayer(0, {\n        clearColor: backgroundColor\n      });\n    } else {\n      // In IE8\n      if (!env.canvasSupported) {\n        var colorArr = colorTool.parse(backgroundColor);\n        backgroundColor = colorTool.stringify(colorArr, 'rgb');\n\n        if (colorArr[3] === 0) {\n          backgroundColor = 'transparent';\n        }\n      }\n\n      if (backgroundColor.colorStops || backgroundColor.image) {\n        // Gradient background\n        // FIXME Fixed layer？\n        zr.configLayer(0, {\n          clearColor: backgroundColor\n        });\n        this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n        this._dom.style.background = 'transparent';\n      } else {\n        if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n          zr.configLayer(0, {\n            clearColor: null\n          });\n        }\n\n        this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n        this._dom.style.background = backgroundColor;\n      }\n    }\n\n    each(postUpdateFuncs, function (func) {\n      func(ecModel, api);\n    }); // console.profile && console.profileEnd('update');\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateView: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ecModel.eachSeries(function (seriesModel) {\n      seriesModel.getData().clearAllVisual();\n    });\n    doVisualEncoding.call(this, ecModel, payload);\n    invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateVisual: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ecModel.eachSeries(function (seriesModel) {\n      seriesModel.getData().clearAllVisual();\n    });\n    doVisualEncoding.call(this, ecModel, payload, true);\n    invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateLayout: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    doLayout.call(this, ecModel, payload);\n    invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  prepareAndUpdate: function (payload) {\n    var ecModel = this._model;\n    prepareView.call(this, 'component', ecModel);\n    prepareView.call(this, 'chart', ecModel);\n    updateMethods.update.call(this, payload);\n  }\n};\n/**\n * @private\n */\n\nfunction updateDirectly(ecIns, method, payload, mainType, subType) {\n  var ecModel = ecIns._model; // broadcast\n\n  if (!mainType) {\n    each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n    return;\n  }\n\n  var query = {};\n  query[mainType + 'Id'] = payload[mainType + 'Id'];\n  query[mainType + 'Index'] = payload[mainType + 'Index'];\n  query[mainType + 'Name'] = payload[mainType + 'Name'];\n  var condition = {\n    mainType: mainType,\n    query: query\n  };\n  subType && (condition.subType = subType); // subType may be '' by parseClassType;\n  // If dispatchAction before setOption, do nothing.\n\n  ecModel && ecModel.eachComponent(condition, function (model, index) {\n    callView(ecIns[mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId]);\n  }, ecIns);\n\n  function callView(view) {\n    view && view.__alive && view[method] && view[method](view.__model, ecModel, ecIns._api, payload);\n  }\n}\n/**\n * Resize the chart\n * @param {Object} opts\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n * @param {boolean} [opts.silent=false]\n */\n\n\nechartsProto.resize = function (opts) {\n  this[IN_MAIN_PROCESS] = true;\n\n  this._zr.resize(opts);\n\n  var optionChanged = this._model && this._model.resetOption('media');\n\n  var updateMethod = optionChanged ? 'prepareAndUpdate' : 'update';\n  updateMethods[updateMethod].call(this); // Resize loading effect\n\n  this._loadingFX && this._loadingFX.resize();\n  this[IN_MAIN_PROCESS] = false;\n  var silent = opts && opts.silent;\n  flushPendingActions.call(this, silent);\n  triggerUpdatedEvent.call(this, silent);\n};\n/**\n * Show loading effect\n * @param  {string} [name='default']\n * @param  {Object} [cfg]\n */\n\n\nechartsProto.showLoading = function (name, cfg) {\n  if (zrUtil.isObject(name)) {\n    cfg = name;\n    name = '';\n  }\n\n  name = name || 'default';\n  this.hideLoading();\n\n  if (!loadingEffects[name]) {\n    return;\n  }\n\n  var el = loadingEffects[name](this._api, cfg);\n  var zr = this._zr;\n  this._loadingFX = el;\n  zr.add(el);\n};\n/**\n * Hide loading effect\n */\n\n\nechartsProto.hideLoading = function () {\n  this._loadingFX && this._zr.remove(this._loadingFX);\n  this._loadingFX = null;\n};\n/**\n * @param {Object} eventObj\n * @return {Object}\n */\n\n\nechartsProto.makeActionFromEvent = function (eventObj) {\n  var payload = zrUtil.extend({}, eventObj);\n  payload.type = eventActionMap[eventObj.type];\n  return payload;\n};\n/**\n * @pubilc\n * @param {Object} payload\n * @param {string} [payload.type] Action type\n * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n * @param {boolean} [opt.silent=false] Whether trigger events.\n * @param {boolean} [opt.flush=undefined]\n *                  true: Flush immediately, and then pixel in canvas can be fetched\n *                      immediately. Caution: it might affect performance.\n *                  false: Not not flush.\n *                  undefined: Auto decide whether perform flush.\n */\n\n\nechartsProto.dispatchAction = function (payload, opt) {\n  if (!zrUtil.isObject(opt)) {\n    opt = {\n      silent: !!opt\n    };\n  }\n\n  if (!actions[payload.type]) {\n    return;\n  } // Avoid dispatch action before setOption. Especially in `connect`.\n\n\n  if (!this._model) {\n    return;\n  } // May dispatchAction in rendering procedure\n\n\n  if (this[IN_MAIN_PROCESS]) {\n    this._pendingActions.push(payload);\n\n    return;\n  }\n\n  doDispatchAction.call(this, payload, opt.silent);\n\n  if (opt.flush) {\n    this._zr.flush(true);\n  } else if (opt.flush !== false && env.browser.weChat) {\n    // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n    // hang when sliding page (on touch event), which cause that zr does not\n    // refresh util user interaction finished, which is not expected.\n    // But `dispatchAction` may be called too frequently when pan on touch\n    // screen, which impacts performance if do not throttle them.\n    this._throttledZrFlush();\n  }\n\n  flushPendingActions.call(this, opt.silent);\n  triggerUpdatedEvent.call(this, opt.silent);\n};\n\nfunction doDispatchAction(payload, silent) {\n  var payloadType = payload.type;\n  var escapeConnect = payload.escapeConnect;\n  var actionWrap = actions[payloadType];\n  var actionInfo = actionWrap.actionInfo;\n  var cptType = (actionInfo.update || 'update').split(':');\n  var updateMethod = cptType.pop();\n  cptType = cptType[0] != null && parseClassType(cptType[0]);\n  this[IN_MAIN_PROCESS] = true;\n  var payloads = [payload];\n  var batched = false; // Batch action\n\n  if (payload.batch) {\n    batched = true;\n    payloads = zrUtil.map(payload.batch, function (item) {\n      item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n      item.batch = null;\n      return item;\n    });\n  }\n\n  var eventObjBatch = [];\n  var eventObj;\n  var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n  each(payloads, function (batchItem) {\n    // Action can specify the event by return it.\n    eventObj = actionWrap.action(batchItem, this._model, this._api); // Emit event outside\n\n    eventObj = eventObj || zrUtil.extend({}, batchItem); // Convert type to eventType\n\n    eventObj.type = actionInfo.event || eventObj.type;\n    eventObjBatch.push(eventObj); // light update does not perform data process, layout and visual.\n\n    if (isHighDown) {\n      // method, payload, mainType, subType\n      updateDirectly(this, updateMethod, batchItem, 'series');\n    } else if (cptType) {\n      updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n    }\n  }, this);\n\n  if (updateMethod !== 'none' && !isHighDown && !cptType) {\n    // Still dirty\n    if (this[OPTION_UPDATED]) {\n      // FIXME Pass payload ?\n      updateMethods.prepareAndUpdate.call(this, payload);\n      this[OPTION_UPDATED] = false;\n    } else {\n      updateMethods[updateMethod].call(this, payload);\n    }\n  } // Follow the rule of action batch\n\n\n  if (batched) {\n    eventObj = {\n      type: actionInfo.event || payloadType,\n      escapeConnect: escapeConnect,\n      batch: eventObjBatch\n    };\n  } else {\n    eventObj = eventObjBatch[0];\n  }\n\n  this[IN_MAIN_PROCESS] = false;\n  !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n}\n\nfunction flushPendingActions(silent) {\n  var pendingActions = this._pendingActions;\n\n  while (pendingActions.length) {\n    var payload = pendingActions.shift();\n    doDispatchAction.call(this, payload, silent);\n  }\n}\n\nfunction triggerUpdatedEvent(silent) {\n  !silent && this.trigger('updated');\n}\n/**\n * Register event\n * @method\n */\n\n\nechartsProto.on = createRegisterEventWithLowercaseName('on');\nechartsProto.off = createRegisterEventWithLowercaseName('off');\nechartsProto.one = createRegisterEventWithLowercaseName('one');\n/**\n * @param {string} methodName\n * @private\n */\n\nfunction invokeUpdateMethod(methodName, ecModel, payload) {\n  var api = this._api; // Update all components\n\n  each(this._componentsViews, function (component) {\n    var componentModel = component.__model;\n    component[methodName](componentModel, ecModel, api, payload);\n    updateZ(componentModel, component);\n  }, this); // Upate all charts\n\n  ecModel.eachSeries(function (seriesModel, idx) {\n    var chart = this._chartsMap[seriesModel.__viewId];\n    chart[methodName](seriesModel, ecModel, api, payload);\n    updateZ(seriesModel, chart);\n    updateProgressiveAndBlend(seriesModel, chart);\n  }, this); // If use hover layer\n\n  updateHoverLayerStatus(this._zr, ecModel); // Post render\n\n  each(postUpdateFuncs, function (func) {\n    func(ecModel, api);\n  });\n}\n/**\n * Prepare view instances of charts and components\n * @param  {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction prepareView(type, ecModel) {\n  var isComponent = type === 'component';\n  var viewList = isComponent ? this._componentsViews : this._chartsViews;\n  var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n  var zr = this._zr;\n\n  for (var i = 0; i < viewList.length; i++) {\n    viewList[i].__alive = false;\n  }\n\n  ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n    if (isComponent) {\n      if (componentType === 'series') {\n        return;\n      }\n    } else {\n      model = componentType;\n    } // Consider: id same and type changed.\n\n\n    var viewId = '_ec_' + model.id + '_' + model.type;\n    var view = viewMap[viewId];\n\n    if (!view) {\n      var classType = parseClassType(model.type);\n      var Clazz = isComponent ? ComponentView.getClass(classType.main, classType.sub) : ChartView.getClass(classType.sub);\n\n      if (Clazz) {\n        view = new Clazz();\n        view.init(ecModel, this._api);\n        viewMap[viewId] = view;\n        viewList.push(view);\n        zr.add(view.group);\n      } else {\n        // Error\n        return;\n      }\n    }\n\n    model.__viewId = view.__id = viewId;\n    view.__alive = true;\n    view.__model = model;\n    view.group.__ecComponentInfo = {\n      mainType: model.mainType,\n      index: model.componentIndex\n    };\n  }, this);\n\n  for (var i = 0; i < viewList.length;) {\n    var view = viewList[i];\n\n    if (!view.__alive) {\n      zr.remove(view.group);\n      view.dispose(ecModel, this._api);\n      viewList.splice(i, 1);\n      delete viewMap[view.__id];\n      view.__id = view.group.__ecComponentInfo = null;\n    } else {\n      i++;\n    }\n  }\n}\n/**\n * Processor data in each series\n *\n * @param {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction processData(ecModel, api) {\n  each(dataProcessorFuncs, function (process) {\n    process.func(ecModel, api);\n  });\n}\n/**\n * @private\n */\n\n\nfunction stackSeriesData(ecModel) {\n  var stackedDataMap = {};\n  ecModel.eachSeries(function (series) {\n    var stack = series.get('stack');\n    var data = series.getData();\n\n    if (stack && data.type === 'list') {\n      var previousStack = stackedDataMap[stack]; // Avoid conflict with Object.prototype\n\n      if (stackedDataMap.hasOwnProperty(stack) && previousStack) {\n        data.stackedOn = previousStack;\n      }\n\n      stackedDataMap[stack] = data;\n    }\n  });\n}\n/**\n * Layout before each chart render there series, special visual encoding stage\n *\n * @param {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction doLayout(ecModel, payload) {\n  var api = this._api;\n  each(visualFuncs, function (visual) {\n    if (visual.isLayout) {\n      visual.func(ecModel, api, payload);\n    }\n  });\n}\n/**\n * Encode visual infomation from data after data processing\n *\n * @param {module:echarts/model/Global} ecModel\n * @param {object} layout\n * @param {boolean} [excludesLayout]\n * @private\n */\n\n\nfunction doVisualEncoding(ecModel, payload, excludesLayout) {\n  var api = this._api;\n  ecModel.clearColorPalette();\n  ecModel.eachSeries(function (seriesModel) {\n    seriesModel.clearColorPalette();\n  });\n  each(visualFuncs, function (visual) {\n    (!excludesLayout || !visual.isLayout) && visual.func(ecModel, api, payload);\n  });\n}\n/**\n * Render each chart and component\n * @private\n */\n\n\nfunction doRender(ecModel, payload) {\n  var api = this._api; // Render all components\n\n  each(this._componentsViews, function (componentView) {\n    var componentModel = componentView.__model;\n    componentView.render(componentModel, ecModel, api, payload);\n    updateZ(componentModel, componentView);\n  }, this);\n  each(this._chartsViews, function (chart) {\n    chart.__alive = false;\n  }, this); // Render all charts\n\n  ecModel.eachSeries(function (seriesModel, idx) {\n    var chartView = this._chartsMap[seriesModel.__viewId];\n    chartView.__alive = true;\n    chartView.render(seriesModel, ecModel, api, payload);\n    chartView.group.silent = !!seriesModel.get('silent');\n    updateZ(seriesModel, chartView);\n    updateProgressiveAndBlend(seriesModel, chartView);\n  }, this); // If use hover layer\n\n  updateHoverLayerStatus(this._zr, ecModel); // Remove groups of unrendered charts\n\n  each(this._chartsViews, function (chart) {\n    if (!chart.__alive) {\n      chart.remove(ecModel, api);\n    }\n  }, this);\n}\n\nvar MOUSE_EVENT_NAMES = ['click', 'dblclick', 'mouseover', 'mouseout', 'mousemove', 'mousedown', 'mouseup', 'globalout', 'contextmenu'];\n/**\n * @private\n */\n\nechartsProto._initEvents = function () {\n  each(MOUSE_EVENT_NAMES, function (eveName) {\n    this._zr.on(eveName, function (e) {\n      var ecModel = this.getModel();\n      var el = e.target;\n      var params; // no e.target when 'globalout'.\n\n      if (eveName === 'globalout') {\n        params = {};\n      } else if (el && el.dataIndex != null) {\n        var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n        params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n      } // If element has custom eventData of components\n      else if (el && el.eventData) {\n          params = zrUtil.extend({}, el.eventData);\n        }\n\n      if (params) {\n        params.event = e;\n        params.type = eveName;\n        this.trigger(eveName, params);\n      }\n    }, this);\n  }, this);\n  each(eventActionMap, function (actionType, eventType) {\n    this._messageCenter.on(eventType, function (event) {\n      this.trigger(eventType, event);\n    }, this);\n  }, this);\n};\n/**\n * @return {boolean}\n */\n\n\nechartsProto.isDisposed = function () {\n  return this._disposed;\n};\n/**\n * Clear\n */\n\n\nechartsProto.clear = function () {\n  this.setOption({\n    series: []\n  }, true);\n};\n/**\n * Dispose instance\n */\n\n\nechartsProto.dispose = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  this._disposed = true;\n  var api = this._api;\n  var ecModel = this._model;\n  each(this._componentsViews, function (component) {\n    component.dispose(ecModel, api);\n  });\n  each(this._chartsViews, function (chart) {\n    chart.dispose(ecModel, api);\n  }); // Dispose after all views disposed\n\n  this._zr.dispose();\n\n  delete instances[this.id];\n};\n\nzrUtil.mixin(ECharts, Eventful);\n\nfunction updateHoverLayerStatus(zr, ecModel) {\n  var storage = zr.storage;\n  var elCount = 0;\n  storage.traverse(function (el) {\n    if (!el.isGroup) {\n      elCount++;\n    }\n  });\n\n  if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n    storage.traverse(function (el) {\n      if (!el.isGroup) {\n        el.useHoverLayer = true;\n      }\n    });\n  }\n}\n/**\n * Update chart progressive and blend.\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateProgressiveAndBlend(seriesModel, chartView) {\n  // Progressive configuration\n  var elCount = 0;\n  chartView.group.traverse(function (el) {\n    if (el.type !== 'group' && !el.ignore) {\n      elCount++;\n    }\n  });\n  var frameDrawNum = +seriesModel.get('progressive');\n  var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n\n  if (needProgressive) {\n    chartView.group.traverse(function (el) {\n      // FIXME marker and other components\n      if (!el.isGroup) {\n        el.progressive = needProgressive ? Math.floor(elCount++ / frameDrawNum) : -1;\n\n        if (needProgressive) {\n          el.stopAnimation(true);\n        }\n      }\n    });\n  } // Blend configration\n\n\n  var blendMode = seriesModel.get('blendMode') || null;\n  chartView.group.traverse(function (el) {\n    // FIXME marker and other components\n    if (!el.isGroup) {\n      el.setStyle('blend', blendMode);\n    }\n  });\n}\n/**\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateZ(model, view) {\n  var z = model.get('z');\n  var zlevel = model.get('zlevel'); // Set z and zlevel\n\n  view.group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n    }\n  });\n}\n\nfunction createExtensionAPI(ecInstance) {\n  var coordSysMgr = ecInstance._coordSysMgr;\n  return zrUtil.extend(new ExtensionAPI(ecInstance), {\n    // Inject methods\n    getCoordinateSystems: zrUtil.bind(coordSysMgr.getCoordinateSystems, coordSysMgr),\n    getComponentByElement: function (el) {\n      while (el) {\n        var modelInfo = el.__ecComponentInfo;\n\n        if (modelInfo != null) {\n          return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n        }\n\n        el = el.parent;\n      }\n    }\n  });\n}\n/**\n * @type {Object} key: actionType.\n * @inner\n */\n\n\nvar actions = {};\n/**\n * Map eventType to actionType\n * @type {Object}\n */\n\nvar eventActionMap = {};\n/**\n * Data processor functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar dataProcessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar optionPreprocessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar postUpdateFuncs = [];\n/**\n * Visual encoding functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar visualFuncs = [];\n/**\n * Theme storage\n * @type {Object.<key, Object>}\n */\n\nvar themeStorage = {};\n/**\n * Loading effects\n */\n\nvar loadingEffects = {};\nvar instances = {};\nvar connectedGroups = {};\nvar idBase = new Date() - 0;\nvar groupIdBase = new Date() - 0;\nvar DOM_ATTRIBUTE_KEY = '_echarts_instance_';\nvar mapDataStores = {};\n\nfunction enableConnect(chart) {\n  var STATUS_PENDING = 0;\n  var STATUS_UPDATING = 1;\n  var STATUS_UPDATED = 2;\n  var STATUS_KEY = '__connectUpdateStatus';\n\n  function updateConnectedChartsStatus(charts, status) {\n    for (var i = 0; i < charts.length; i++) {\n      var otherChart = charts[i];\n      otherChart[STATUS_KEY] = status;\n    }\n  }\n\n  zrUtil.each(eventActionMap, function (actionType, eventType) {\n    chart._messageCenter.on(eventType, function (event) {\n      if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n        if (event && event.escapeConnect) {\n          return;\n        }\n\n        var action = chart.makeActionFromEvent(event);\n        var otherCharts = [];\n        zrUtil.each(instances, function (otherChart) {\n          if (otherChart !== chart && otherChart.group === chart.group) {\n            otherCharts.push(otherChart);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n        each(otherCharts, function (otherChart) {\n          if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n            otherChart.dispatchAction(action);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n      }\n    });\n  });\n}\n/**\n * @param {HTMLElement} dom\n * @param {Object} [theme]\n * @param {Object} opts\n * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n *                              Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n *                               Can be 'auto' (the same as null/undefined)\n */\n\n\nfunction init(dom, theme, opts) {\n  var existInstance = getInstanceByDom(dom);\n\n  if (existInstance) {\n    return existInstance;\n  }\n\n  var chart = new ECharts(dom, theme, opts);\n  chart.id = 'ec_' + idBase++;\n  instances[chart.id] = chart;\n\n  if (dom.setAttribute) {\n    dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n  } else {\n    dom[DOM_ATTRIBUTE_KEY] = chart.id;\n  }\n\n  enableConnect(chart);\n  return chart;\n}\n/**\n * @return {string|Array.<module:echarts~ECharts>} groupId\n */\n\n\nfunction connect(groupId) {\n  // Is array of charts\n  if (zrUtil.isArray(groupId)) {\n    var charts = groupId;\n    groupId = null; // If any chart has group\n\n    zrUtil.each(charts, function (chart) {\n      if (chart.group != null) {\n        groupId = chart.group;\n      }\n    });\n    groupId = groupId || 'g_' + groupIdBase++;\n    zrUtil.each(charts, function (chart) {\n      chart.group = groupId;\n    });\n  }\n\n  connectedGroups[groupId] = true;\n  return groupId;\n}\n/**\n * @DEPRECATED\n * @return {string} groupId\n */\n\n\nfunction disConnect(groupId) {\n  connectedGroups[groupId] = false;\n}\n/**\n * @return {string} groupId\n */\n\n\nvar disconnect = disConnect;\n/**\n * Dispose a chart instance\n * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n */\n\nfunction dispose(chart) {\n  if (typeof chart === 'string') {\n    chart = instances[chart];\n  } else if (!(chart instanceof ECharts)) {\n    // Try to treat as dom\n    chart = getInstanceByDom(chart);\n  }\n\n  if (chart instanceof ECharts && !chart.isDisposed()) {\n    chart.dispose();\n  }\n}\n/**\n * @param  {HTMLElement} dom\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceByDom(dom) {\n  var key;\n\n  if (dom.getAttribute) {\n    key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n  } else {\n    key = dom[DOM_ATTRIBUTE_KEY];\n  }\n\n  return instances[key];\n}\n/**\n * @param {string} key\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceById(key) {\n  return instances[key];\n}\n/**\n * Register theme\n */\n\n\nfunction registerTheme(name, theme) {\n  themeStorage[name] = theme;\n}\n/**\n * Register option preprocessor\n * @param {Function} preprocessorFunc\n */\n\n\nfunction registerPreprocessor(preprocessorFunc) {\n  optionPreprocessorFuncs.push(preprocessorFunc);\n}\n/**\n * @param {number} [priority=1000]\n * @param {Function} processorFunc\n */\n\n\nfunction registerProcessor(priority, processorFunc) {\n  if (typeof priority === 'function') {\n    processorFunc = priority;\n    priority = PRIORITY_PROCESSOR_FILTER;\n  }\n\n  dataProcessorFuncs.push({\n    prio: priority,\n    func: processorFunc\n  });\n}\n/**\n * Register postUpdater\n * @param {Function} postUpdateFunc\n */\n\n\nfunction registerPostUpdate(postUpdateFunc) {\n  postUpdateFuncs.push(postUpdateFunc);\n}\n/**\n * Usage:\n * registerAction('someAction', 'someEvent', function () { ... });\n * registerAction('someAction', function () { ... });\n * registerAction(\n *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n *     function () { ... }\n * );\n *\n * @param {(string|Object)} actionInfo\n * @param {string} actionInfo.type\n * @param {string} [actionInfo.event]\n * @param {string} [actionInfo.update]\n * @param {string} [eventName]\n * @param {Function} action\n */\n\n\nfunction registerAction(actionInfo, eventName, action) {\n  if (typeof eventName === 'function') {\n    action = eventName;\n    eventName = '';\n  }\n\n  var actionType = zrUtil.isObject(actionInfo) ? actionInfo.type : [actionInfo, actionInfo = {\n    event: eventName\n  }][0]; // Event name is all lowercase\n\n  actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n  eventName = actionInfo.event; // Validate action type and event name.\n\n  zrUtil.assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n  if (!actions[actionType]) {\n    actions[actionType] = {\n      action: action,\n      actionInfo: actionInfo\n    };\n  }\n\n  eventActionMap[eventName] = actionType;\n}\n/**\n * @param {string} type\n * @param {*} CoordinateSystem\n */\n\n\nfunction registerCoordinateSystem(type, CoordinateSystem) {\n  CoordinateSystemManager.register(type, CoordinateSystem);\n}\n/**\n * Get dimensions of specified coordinate system.\n * @param {string} type\n * @return {Array.<string|Object>}\n */\n\n\nfunction getCoordinateSystemDimensions(type) {\n  var coordSysCreator = CoordinateSystemManager.get(type);\n\n  if (coordSysCreator) {\n    return coordSysCreator.getDimensionsInfo ? coordSysCreator.getDimensionsInfo() : coordSysCreator.dimensions.slice();\n  }\n}\n/**\n * Layout is a special stage of visual encoding\n * Most visual encoding like color are common for different chart\n * But each chart has it's own layout algorithm\n *\n * @param {number} [priority=1000]\n * @param {Function} layoutFunc\n */\n\n\nfunction registerLayout(priority, layoutFunc) {\n  if (typeof priority === 'function') {\n    layoutFunc = priority;\n    priority = PRIORITY_VISUAL_LAYOUT;\n  }\n\n  visualFuncs.push({\n    prio: priority,\n    func: layoutFunc,\n    isLayout: true\n  });\n}\n/**\n * @param {number} [priority=3000]\n * @param {Function} visualFunc\n */\n\n\nfunction registerVisual(priority, visualFunc) {\n  if (typeof priority === 'function') {\n    visualFunc = priority;\n    priority = PRIORITY_VISUAL_CHART;\n  }\n\n  visualFuncs.push({\n    prio: priority,\n    func: visualFunc\n  });\n}\n/**\n * @param {string} name\n */\n\n\nfunction registerLoading(name, loadingFx) {\n  loadingEffects[name] = loadingFx;\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentModel(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentModel;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentView(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentView;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentView.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendSeriesModel(opts\n/*, superClass*/\n) {\n  // var Clazz = SeriesModel;\n  // if (superClass) {\n  //     superClass = 'series.' + superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return SeriesModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendChartView(opts\n/*, superClass*/\n) {\n  // var Clazz = ChartView;\n  // if (superClass) {\n  //     superClass = superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ChartView.getClass(classType.main, true);\n  // }\n  return ChartView.extend(opts);\n}\n/**\n * ZRender need a canvas context to do measureText.\n * But in node environment canvas may be created by node-canvas.\n * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n *\n * Be careful of using it in the browser.\n *\n * @param {Function} creator\n * @example\n *     var Canvas = require('canvas');\n *     var echarts = require('echarts');\n *     echarts.setCanvasCreator(function () {\n *         // Small size is enough.\n *         return new Canvas(32, 32);\n *     });\n */\n\n\nfunction setCanvasCreator(creator) {\n  zrUtil.$override('createCanvas', creator);\n}\n/**\n * @param {string} mapName\n * @param {Object|string} geoJson\n * @param {Object} [specialAreas]\n *\n * @example\n *     $.get('USA.json', function (geoJson) {\n *         echarts.registerMap('USA', geoJson);\n *         // Or\n *         echarts.registerMap('USA', {\n *             geoJson: geoJson,\n *             specialAreas: {}\n *         })\n *     });\n */\n\n\nfunction registerMap(mapName, geoJson, specialAreas) {\n  if (geoJson.geoJson && !geoJson.features) {\n    specialAreas = geoJson.specialAreas;\n    geoJson = geoJson.geoJson;\n  }\n\n  if (typeof geoJson === 'string') {\n    geoJson = typeof JSON !== 'undefined' && JSON.parse ? JSON.parse(geoJson) : new Function('return (' + geoJson + ');')();\n  }\n\n  mapDataStores[mapName] = {\n    geoJson: geoJson,\n    specialAreas: specialAreas\n  };\n}\n/**\n * @param {string} mapName\n * @return {Object}\n */\n\n\nfunction getMap(mapName) {\n  return mapDataStores[mapName];\n}\n\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesColor);\nregisterPreprocessor(backwardCompat);\nregisterLoading('default', loadingDefault); // Default actions\n\nregisterAction({\n  type: 'highlight',\n  event: 'highlight',\n  update: 'highlight'\n}, zrUtil.noop);\nregisterAction({\n  type: 'downplay',\n  event: 'downplay',\n  update: 'downplay'\n}, zrUtil.noop); // For backward compatibility, where the namespace `dataTool` will\n// be mounted on `echarts` is the extension `dataTool` is imported.\n\nvar dataTool = {};\nexports.version = version;\nexports.dependencies = dependencies;\nexports.PRIORITY = PRIORITY;\nexports.init = init;\nexports.connect = connect;\nexports.disConnect = disConnect;\nexports.disconnect = disconnect;\nexports.dispose = dispose;\nexports.getInstanceByDom = getInstanceByDom;\nexports.getInstanceById = getInstanceById;\nexports.registerTheme = registerTheme;\nexports.registerPreprocessor = registerPreprocessor;\nexports.registerProcessor = registerProcessor;\nexports.registerPostUpdate = registerPostUpdate;\nexports.registerAction = registerAction;\nexports.registerCoordinateSystem = registerCoordinateSystem;\nexports.getCoordinateSystemDimensions = getCoordinateSystemDimensions;\nexports.registerLayout = registerLayout;\nexports.registerVisual = registerVisual;\nexports.registerLoading = registerLoading;\nexports.extendComponentModel = extendComponentModel;\nexports.extendComponentView = extendComponentView;\nexports.extendSeriesModel = extendSeriesModel;\nexports.extendChartView = extendChartView;\nexports.setCanvasCreator = setCanvasCreator;\nexports.registerMap = registerMap;\nexports.getMap = getMap;\nexports.dataTool = dataTool;\nvar ___ec_export = require(\"./export\");\n(function () {\n    for (var key in ___ec_export) {\n        if (___ec_export.hasOwnProperty(key)) {\n            exports[key] = ___ec_export[key];\n        }\n    }\n})();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/echarts.js\n// module id = 1028\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar pathTool = require(\"zrender/lib/tool/path\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\nvar Transformable = require(\"zrender/lib/mixin/Transformable\");\n\nvar Image = require(\"zrender/lib/graphic/Image\");\n\nexports.Image = Image;\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nexports.Group = Group;\n\nvar Text = require(\"zrender/lib/graphic/Text\");\n\nexports.Text = Text;\n\nvar Circle = require(\"zrender/lib/graphic/shape/Circle\");\n\nexports.Circle = Circle;\n\nvar Sector = require(\"zrender/lib/graphic/shape/Sector\");\n\nexports.Sector = Sector;\n\nvar Ring = require(\"zrender/lib/graphic/shape/Ring\");\n\nexports.Ring = Ring;\n\nvar Polygon = require(\"zrender/lib/graphic/shape/Polygon\");\n\nexports.Polygon = Polygon;\n\nvar Polyline = require(\"zrender/lib/graphic/shape/Polyline\");\n\nexports.Polyline = Polyline;\n\nvar Rect = require(\"zrender/lib/graphic/shape/Rect\");\n\nexports.Rect = Rect;\n\nvar Line = require(\"zrender/lib/graphic/shape/Line\");\n\nexports.Line = Line;\n\nvar BezierCurve = require(\"zrender/lib/graphic/shape/BezierCurve\");\n\nexports.BezierCurve = BezierCurve;\n\nvar Arc = require(\"zrender/lib/graphic/shape/Arc\");\n\nexports.Arc = Arc;\n\nvar CompoundPath = require(\"zrender/lib/graphic/CompoundPath\");\n\nexports.CompoundPath = CompoundPath;\n\nvar LinearGradient = require(\"zrender/lib/graphic/LinearGradient\");\n\nexports.LinearGradient = LinearGradient;\n\nvar RadialGradient = require(\"zrender/lib/graphic/RadialGradient\");\n\nexports.RadialGradient = RadialGradient;\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nexports.BoundingRect = BoundingRect;\nvar round = Math.round;\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar EMPTY_OBJ = {};\n/**\n * Extend shape with parameters\n */\n\nfunction extendShape(opts) {\n  return Path.extend(opts);\n}\n/**\n * Extend path\n */\n\n\nfunction extendPath(pathData, opts) {\n  return pathTool.extendFromString(pathData, opts);\n}\n/**\n * Create a path element from path data string\n * @param {string} pathData\n * @param {Object} opts\n * @param {module:zrender/core/BoundingRect} rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makePath(pathData, opts, rect, layout) {\n  var path = pathTool.createFromString(pathData, opts);\n  var boundingRect = path.getBoundingRect();\n\n  if (rect) {\n    if (layout === 'center') {\n      rect = centerGraphic(rect, boundingRect);\n    }\n\n    resizePath(path, rect);\n  }\n\n  return path;\n}\n/**\n * Create a image element from image url\n * @param {string} imageUrl image url\n * @param {Object} opts options\n * @param {module:zrender/core/BoundingRect} rect constrain rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makeImage(imageUrl, rect, layout) {\n  var path = new Image({\n    style: {\n      image: imageUrl,\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    onload: function (img) {\n      if (layout === 'center') {\n        var boundingRect = {\n          width: img.width,\n          height: img.height\n        };\n        path.setStyle(centerGraphic(rect, boundingRect));\n      }\n    }\n  });\n  return path;\n}\n/**\n * Get position of centered element in bounding box.\n *\n * @param  {Object} rect         element local bounding box\n * @param  {Object} boundingRect constraint bounding box\n * @return {Object} element position containing x, y, width, and height\n */\n\n\nfunction centerGraphic(rect, boundingRect) {\n  // Set rect to center, keep width / height ratio.\n  var aspect = boundingRect.width / boundingRect.height;\n  var width = rect.height * aspect;\n  var height;\n\n  if (width <= rect.width) {\n    height = rect.height;\n  } else {\n    width = rect.width;\n    height = width / aspect;\n  }\n\n  var cx = rect.x + rect.width / 2;\n  var cy = rect.y + rect.height / 2;\n  return {\n    x: cx - width / 2,\n    y: cy - height / 2,\n    width: width,\n    height: height\n  };\n}\n\nvar mergePath = pathTool.mergePath;\n/**\n * Resize a path to fit the rect\n * @param {module:zrender/graphic/Path} path\n * @param {Object} rect\n */\n\nfunction resizePath(path, rect) {\n  if (!path.applyTransform) {\n    return;\n  }\n\n  var pathRect = path.getBoundingRect();\n  var m = pathRect.calculateTransform(rect);\n  path.applyTransform(m);\n}\n/**\n * Sub pixel optimize line for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x1]\n * @param {number} [param.shape.y1]\n * @param {number} [param.shape.x2]\n * @param {number} [param.shape.y2]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeLine(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n\n  if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n    shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n  }\n\n  if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n    shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n  }\n\n  return param;\n}\n/**\n * Sub pixel optimize rect for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x]\n * @param {number} [param.shape.y]\n * @param {number} [param.shape.width]\n * @param {number} [param.shape.height]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeRect(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n  var originX = shape.x;\n  var originY = shape.y;\n  var originWidth = shape.width;\n  var originHeight = shape.height;\n  shape.x = subPixelOptimize(shape.x, lineWidth, true);\n  shape.y = subPixelOptimize(shape.y, lineWidth, true);\n  shape.width = Math.max(subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x, originWidth === 0 ? 0 : 1);\n  shape.height = Math.max(subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y, originHeight === 0 ? 0 : 1);\n  return param;\n}\n/**\n * Sub pixel optimize for canvas\n *\n * @param {number} position Coordinate, such as x, y\n * @param {number} lineWidth Should be nonnegative integer.\n * @param {boolean=} positiveOrNegative Default false (negative).\n * @return {number} Optimized position.\n */\n\n\nfunction subPixelOptimize(position, lineWidth, positiveOrNegative) {\n  // Assure that (position + lineWidth / 2) is near integer edge,\n  // otherwise line will be fuzzy in canvas.\n  var doubledPosition = round(position * 2);\n  return (doubledPosition + round(lineWidth)) % 2 === 0 ? doubledPosition / 2 : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n}\n\nfunction hasFillOrStroke(fillOrStroke) {\n  return fillOrStroke != null && fillOrStroke != 'none';\n}\n\nfunction liftColor(color) {\n  return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n}\n/**\n * @private\n */\n\n\nfunction cacheElementStl(el) {\n  if (el.__hoverStlDirty) {\n    var stroke = el.style.stroke;\n    var fill = el.style.fill; // Create hoverStyle on mouseover\n\n    var hoverStyle = el.__hoverStl;\n    hoverStyle.fill = hoverStyle.fill || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n    hoverStyle.stroke = hoverStyle.stroke || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n    var normalStyle = {};\n\n    for (var name in hoverStyle) {\n      // See comment in `doSingleEnterHover`.\n      if (hoverStyle[name] != null) {\n        normalStyle[name] = el.style[name];\n      }\n    }\n\n    el.__normalStl = normalStyle;\n    el.__hoverStlDirty = false;\n  }\n}\n/**\n * @private\n */\n\n\nfunction doSingleEnterHover(el) {\n  if (el.__isHover) {\n    return;\n  }\n\n  cacheElementStl(el);\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.addHover(el, el.__hoverStl);\n  } else {\n    var style = el.style;\n    var insideRollbackOpt = style.insideRollbackOpt; // Consider case: only `position: 'top'` is set on emphasis, then text\n    // color should be returned to `autoColor`, rather than remain '#fff'.\n    // So we should rollback then apply again after style merging.\n\n    insideRollbackOpt && rollbackInsideStyle(style); // styles can be:\n    // {\n    //     label: {\n    //         normal: {\n    //             show: false,\n    //             position: 'outside',\n    //             fontSize: 18\n    //         },\n    //         emphasis: {\n    //             show: true\n    //         }\n    //     }\n    // },\n    // where properties of `emphasis` may not appear in `normal`. We previously use\n    // module:echarts/util/model#defaultEmphasis to merge `normal` to `emphasis`.\n    // But consider rich text and setOption in merge mode, it is impossible to cover\n    // all properties in merge. So we use merge mode when setting style here, where\n    // only properties that is not `null/undefined` can be set. The disadventage:\n    // null/undefined can not be used to remove style any more in `emphasis`.\n\n    style.extendFrom(el.__hoverStl); // Do not save `insideRollback`.\n\n    if (insideRollbackOpt) {\n      applyInsideStyle(style, style.insideOriginalTextPosition, insideRollbackOpt); // textFill may be rollbacked to null.\n\n      if (style.textFill == null) {\n        style.textFill = insideRollbackOpt.autoColor;\n      }\n    }\n\n    el.dirty(false);\n    el.z2 += 1;\n  }\n\n  el.__isHover = true;\n}\n/**\n * @inner\n */\n\n\nfunction doSingleLeaveHover(el) {\n  if (!el.__isHover) {\n    return;\n  }\n\n  var normalStl = el.__normalStl;\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.removeHover(el);\n  } else {\n    // Consider null/undefined value, should use\n    // `setStyle` but not `extendFrom(stl, true)`.\n    normalStl && el.setStyle(normalStl);\n    el.z2 -= 1;\n  }\n\n  el.__isHover = false;\n}\n/**\n * @inner\n */\n\n\nfunction doEnterHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleEnterHover(child);\n    }\n  }) : doSingleEnterHover(el);\n}\n\nfunction doLeaveHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleLeaveHover(child);\n    }\n  }) : doSingleLeaveHover(el);\n}\n/**\n * @inner\n */\n\n\nfunction setElementHoverStl(el, hoverStl) {\n  // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n  // Often used when item group has a label element and it's hoverStyle is different\n  el.__hoverStl = el.hoverStyle || hoverStl || {};\n  el.__hoverStlDirty = true;\n\n  if (el.__isHover) {\n    cacheElementStl(el);\n  }\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOver(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOut(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doLeaveHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction enterEmphasis() {\n  this.__isEmphasis = true;\n  doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction leaveEmphasis() {\n  this.__isEmphasis = false;\n  doLeaveHover(this);\n}\n/**\n * Set hover style of element.\n * This method can be called repeatly without side-effects.\n * @param {module:zrender/Element} el\n * @param {Object} [hoverStyle]\n * @param {Object} [opt]\n * @param {boolean} [opt.hoverSilentOnTouch=false]\n *        In touch device, mouseover event will be trigger on touchstart event\n *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n *        conviniently use hoverStyle when tap on touch screen without additional\n *        code for compatibility.\n *        But if the chart/component has select feature, which usually also use\n *        hoverStyle, there might be conflict between 'select-highlight' and\n *        'hover-highlight' especially when roam is enabled (see geo for example).\n *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n *        on touch device.\n */\n\n\nfunction setHoverStyle(el, hoverStyle, opt) {\n  el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      setElementHoverStl(child, hoverStyle);\n    }\n  }) : setElementHoverStl(el, hoverStyle); // Duplicated function will be auto-ignored, see Eventful.js.\n\n  el.on('mouseover', onElementMouseOver).on('mouseout', onElementMouseOut); // Emphasis, normal can be triggered manually\n\n  el.on('emphasis', enterEmphasis).on('normal', leaveEmphasis);\n}\n/**\n * @param {Object|module:zrender/graphic/Style} normalStyle\n * @param {Object} emphasisStyle\n * @param {module:echarts/model/Model} normalModel\n * @param {module:echarts/model/Model} emphasisModel\n * @param {Object} opt Check `opt` of `setTextStyleCommon` to find other props.\n * @param {Object} [opt.defaultText]\n * @param {module:echarts/model/Model} [opt.labelFetcher] Fetch text by\n *      `opt.labelFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDataIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDimIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {Object} [normalSpecified]\n * @param {Object} [emphasisSpecified]\n */\n\n\nfunction setLabelStyle(normalStyle, emphasisStyle, normalModel, emphasisModel, opt, normalSpecified, emphasisSpecified) {\n  opt = opt || EMPTY_OBJ;\n  var labelFetcher = opt.labelFetcher;\n  var labelDataIndex = opt.labelDataIndex;\n  var labelDimIndex = opt.labelDimIndex; // This scenario, `label.normal.show = true; label.emphasis.show = false`,\n  // is not supported util someone requests.\n\n  var showNormal = normalModel.getShallow('show');\n  var showEmphasis = emphasisModel.getShallow('show'); // Consider performance, only fetch label when necessary.\n  // If `normal.show` is `false` and `emphasis.show` is `true` and `emphasis.formatter` is not set,\n  // label should be displayed, where text is fetched by `normal.formatter` or `opt.defaultText`.\n\n  var baseText = showNormal || showEmphasis ? zrUtil.retrieve2(labelFetcher ? labelFetcher.getFormattedLabel(labelDataIndex, 'normal', null, labelDimIndex) : null, opt.defaultText) : null;\n  var normalStyleText = showNormal ? baseText : null;\n  var emphasisStyleText = showEmphasis ? zrUtil.retrieve2(labelFetcher ? labelFetcher.getFormattedLabel(labelDataIndex, 'emphasis', null, labelDimIndex) : null, baseText) : null; // Optimize: If style.text is null, text will not be drawn.\n\n  if (normalStyleText != null || emphasisStyleText != null) {\n    // Always set `textStyle` even if `normalStyle.text` is null, because default\n    // values have to be set on `normalStyle`.\n    // If we set default values on `emphasisStyle`, consider case:\n    // Firstly, `setOption(... label: {normal: {text: null}, emphasis: {show: true}} ...);`\n    // Secondly, `setOption(... label: {noraml: {show: true, text: 'abc', color: 'red'} ...);`\n    // Then the 'red' will not work on emphasis.\n    setTextStyle(normalStyle, normalModel, normalSpecified, opt);\n    setTextStyle(emphasisStyle, emphasisModel, emphasisSpecified, opt, true);\n  }\n\n  normalStyle.text = normalStyleText;\n  emphasisStyle.text = emphasisStyleText;\n}\n/**\n * Set basic textStyle properties.\n * @param {Object|module:zrender/graphic/Style} textStyle\n * @param {module:echarts/model/Model} model\n * @param {Object} [specifiedTextStyle] Can be overrided by settings in model.\n * @param {Object} [opt] See `opt` of `setTextStyleCommon`.\n * @param {boolean} [isEmphasis]\n */\n\n\nfunction setTextStyle(textStyle, textStyleModel, specifiedTextStyle, opt, isEmphasis) {\n  setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis);\n  specifiedTextStyle && zrUtil.extend(textStyle, specifiedTextStyle);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n  return textStyle;\n}\n/**\n * Set text option in the style.\n * @deprecated\n * @param {Object} textStyle\n * @param {module:echarts/model/Model} labelModel\n * @param {string|boolean} defaultColor Default text color.\n *        If set as false, it will be processed as a emphasis style.\n */\n\n\nfunction setText(textStyle, labelModel, defaultColor) {\n  var opt = {\n    isRectText: true\n  };\n  var isEmphasis;\n\n  if (defaultColor === false) {\n    isEmphasis = true;\n  } else {\n    // Support setting color as 'auto' to get visual color.\n    opt.autoColor = defaultColor;\n  }\n\n  setTextStyleCommon(textStyle, labelModel, opt, isEmphasis);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n}\n/**\n * {\n *      disableBox: boolean, Whether diable drawing box of block (outer most).\n *      isRectText: boolean,\n *      autoColor: string, specify a color when color is 'auto',\n *              for textFill, textStroke, textBackgroundColor, and textBorderColor.\n *              If autoColor specified, it is used as default textFill.\n *      useInsideStyle:\n *              `true`: Use inside style (textFill, textStroke, textStrokeWidth)\n *                  if `textFill` is not specified.\n *              `false`: Do not use inside style.\n *              `null/undefined`: use inside style if `isRectText` is true and\n *                  `textFill` is not specified and textPosition contains `'inside'`.\n *      forceRich: boolean\n * }\n */\n\n\nfunction setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis) {\n  // Consider there will be abnormal when merge hover style to normal style if given default value.\n  opt = opt || EMPTY_OBJ;\n\n  if (opt.isRectText) {\n    var textPosition = textStyleModel.getShallow('position') || (isEmphasis ? null : 'inside'); // 'outside' is not a valid zr textPostion value, but used\n    // in bar series, and magric type should be considered.\n\n    textPosition === 'outside' && (textPosition = 'top');\n    textStyle.textPosition = textPosition;\n    textStyle.textOffset = textStyleModel.getShallow('offset');\n    var labelRotate = textStyleModel.getShallow('rotate');\n    labelRotate != null && (labelRotate *= Math.PI / 180);\n    textStyle.textRotation = labelRotate;\n    textStyle.textDistance = zrUtil.retrieve2(textStyleModel.getShallow('distance'), isEmphasis ? null : 5);\n  }\n\n  var ecModel = textStyleModel.ecModel;\n  var globalTextStyle = ecModel && ecModel.option.textStyle; // Consider case:\n  // {\n  //     data: [{\n  //         value: 12,\n  //         label: {\n  //             normal: {\n  //                 rich: {\n  //                     // no 'a' here but using parent 'a'.\n  //                 }\n  //             }\n  //         }\n  //     }],\n  //     rich: {\n  //         a: { ... }\n  //     }\n  // }\n\n  var richItemNames = getRichItemNames(textStyleModel);\n  var richResult;\n\n  if (richItemNames) {\n    richResult = {};\n\n    for (var name in richItemNames) {\n      if (richItemNames.hasOwnProperty(name)) {\n        // Cascade is supported in rich.\n        var richTextStyle = textStyleModel.getModel(['rich', name]); // In rich, never `disableBox`.\n\n        setTokenTextStyle(richResult[name] = {}, richTextStyle, globalTextStyle, opt, isEmphasis);\n      }\n    }\n  }\n\n  textStyle.rich = richResult;\n  setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, true);\n\n  if (opt.forceRich && !opt.textStyle) {\n    opt.textStyle = {};\n  }\n\n  return textStyle;\n} // Consider case:\n// {\n//     data: [{\n//         value: 12,\n//         label: {\n//             normal: {\n//                 rich: {\n//                     // no 'a' here but using parent 'a'.\n//                 }\n//             }\n//         }\n//     }],\n//     rich: {\n//         a: { ... }\n//     }\n// }\n\n\nfunction getRichItemNames(textStyleModel) {\n  // Use object to remove duplicated names.\n  var richItemNameMap;\n\n  while (textStyleModel && textStyleModel !== textStyleModel.ecModel) {\n    var rich = (textStyleModel.option || EMPTY_OBJ).rich;\n\n    if (rich) {\n      richItemNameMap = richItemNameMap || {};\n\n      for (var name in rich) {\n        if (rich.hasOwnProperty(name)) {\n          richItemNameMap[name] = 1;\n        }\n      }\n    }\n\n    textStyleModel = textStyleModel.parentModel;\n  }\n\n  return richItemNameMap;\n}\n\nfunction setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, isBlock) {\n  // In merge mode, default value should not be given.\n  globalTextStyle = !isEmphasis && globalTextStyle || EMPTY_OBJ;\n  textStyle.textFill = getAutoColor(textStyleModel.getShallow('color'), opt) || globalTextStyle.color;\n  textStyle.textStroke = getAutoColor(textStyleModel.getShallow('textBorderColor'), opt) || globalTextStyle.textBorderColor;\n  textStyle.textStrokeWidth = zrUtil.retrieve2(textStyleModel.getShallow('textBorderWidth'), globalTextStyle.textBorderWidth);\n\n  if (!isEmphasis) {\n    if (isBlock) {\n      // Always set `insideRollback`, for clearing previous.\n      var originalTextPosition = textStyle.textPosition;\n      textStyle.insideRollback = applyInsideStyle(textStyle, originalTextPosition, opt); // Save original textPosition, because style.textPosition will be repalced by\n      // real location (like [10, 30]) in zrender.\n\n      textStyle.insideOriginalTextPosition = originalTextPosition;\n      textStyle.insideRollbackOpt = opt;\n    } // Set default finally.\n\n\n    if (textStyle.textFill == null) {\n      textStyle.textFill = opt.autoColor;\n    }\n  } // Do not use `getFont` here, because merge should be supported, where\n  // part of these properties may be changed in emphasis style, and the\n  // others should remain their original value got from normal style.\n\n\n  textStyle.fontStyle = textStyleModel.getShallow('fontStyle') || globalTextStyle.fontStyle;\n  textStyle.fontWeight = textStyleModel.getShallow('fontWeight') || globalTextStyle.fontWeight;\n  textStyle.fontSize = textStyleModel.getShallow('fontSize') || globalTextStyle.fontSize;\n  textStyle.fontFamily = textStyleModel.getShallow('fontFamily') || globalTextStyle.fontFamily;\n  textStyle.textAlign = textStyleModel.getShallow('align');\n  textStyle.textVerticalAlign = textStyleModel.getShallow('verticalAlign') || textStyleModel.getShallow('baseline');\n  textStyle.textLineHeight = textStyleModel.getShallow('lineHeight');\n  textStyle.textWidth = textStyleModel.getShallow('width');\n  textStyle.textHeight = textStyleModel.getShallow('height');\n  textStyle.textTag = textStyleModel.getShallow('tag');\n\n  if (!isBlock || !opt.disableBox) {\n    textStyle.textBackgroundColor = getAutoColor(textStyleModel.getShallow('backgroundColor'), opt);\n    textStyle.textPadding = textStyleModel.getShallow('padding');\n    textStyle.textBorderColor = getAutoColor(textStyleModel.getShallow('borderColor'), opt);\n    textStyle.textBorderWidth = textStyleModel.getShallow('borderWidth');\n    textStyle.textBorderRadius = textStyleModel.getShallow('borderRadius');\n    textStyle.textBoxShadowColor = textStyleModel.getShallow('shadowColor');\n    textStyle.textBoxShadowBlur = textStyleModel.getShallow('shadowBlur');\n    textStyle.textBoxShadowOffsetX = textStyleModel.getShallow('shadowOffsetX');\n    textStyle.textBoxShadowOffsetY = textStyleModel.getShallow('shadowOffsetY');\n  }\n\n  textStyle.textShadowColor = textStyleModel.getShallow('textShadowColor') || globalTextStyle.textShadowColor;\n  textStyle.textShadowBlur = textStyleModel.getShallow('textShadowBlur') || globalTextStyle.textShadowBlur;\n  textStyle.textShadowOffsetX = textStyleModel.getShallow('textShadowOffsetX') || globalTextStyle.textShadowOffsetX;\n  textStyle.textShadowOffsetY = textStyleModel.getShallow('textShadowOffsetY') || globalTextStyle.textShadowOffsetY;\n}\n\nfunction getAutoColor(color, opt) {\n  return color !== 'auto' ? color : opt && opt.autoColor ? opt.autoColor : null;\n}\n\nfunction applyInsideStyle(textStyle, textPosition, opt) {\n  var useInsideStyle = opt.useInsideStyle;\n  var insideRollback;\n\n  if (textStyle.textFill == null && useInsideStyle !== false && (useInsideStyle === true || opt.isRectText && textPosition // textPosition can be [10, 30]\n  && typeof textPosition === 'string' && textPosition.indexOf('inside') >= 0)) {\n    insideRollback = {\n      textFill: null,\n      textStroke: textStyle.textStroke,\n      textStrokeWidth: textStyle.textStrokeWidth\n    };\n    textStyle.textFill = '#fff'; // Consider text with #fff overflow its container.\n\n    if (textStyle.textStroke == null) {\n      textStyle.textStroke = opt.autoColor;\n      textStyle.textStrokeWidth == null && (textStyle.textStrokeWidth = 2);\n    }\n  }\n\n  return insideRollback;\n}\n\nfunction rollbackInsideStyle(style) {\n  var insideRollback = style.insideRollback;\n\n  if (insideRollback) {\n    style.textFill = insideRollback.textFill;\n    style.textStroke = insideRollback.textStroke;\n    style.textStrokeWidth = insideRollback.textStrokeWidth;\n  }\n}\n\nfunction getFont(opt, ecModel) {\n  // ecModel or default text style model.\n  var gTextStyleModel = ecModel || ecModel.getModel('textStyle');\n  return [// FIXME in node-canvas fontWeight is before fontStyle\n  opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '', opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '', (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px', opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'].join(' ');\n}\n\nfunction animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n  if (typeof dataIndex === 'function') {\n    cb = dataIndex;\n    dataIndex = null;\n  } // Do not check 'animation' property directly here. Consider this case:\n  // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n  // but its parent model (`seriesModel`) does.\n\n\n  var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n  if (animationEnabled) {\n    var postfix = isUpdate ? 'Update' : '';\n    var duration = animatableModel.getShallow('animationDuration' + postfix);\n    var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n    var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n\n    if (typeof animationDelay === 'function') {\n      animationDelay = animationDelay(dataIndex, animatableModel.getAnimationDelayParams ? animatableModel.getAnimationDelayParams(el, dataIndex) : null);\n    }\n\n    if (typeof duration === 'function') {\n      duration = duration(dataIndex);\n    }\n\n    duration > 0 ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb, !!cb) : (el.stopAnimation(), el.attr(props), cb && cb());\n  } else {\n    el.stopAnimation();\n    el.attr(props);\n    cb && cb();\n  }\n}\n/**\n * Update graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} [cb]\n * @example\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n *     // Or\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, function () { console.log('Animation done!'); });\n */\n\n\nfunction updateProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Init graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} cb\n */\n\n\nfunction initProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Get transform matrix of target (param target),\n * in coordinate of its ancestor (param ancestor)\n *\n * @param {module:zrender/mixin/Transformable} target\n * @param {module:zrender/mixin/Transformable} [ancestor]\n */\n\n\nfunction getTransform(target, ancestor) {\n  var mat = matrix.identity([]);\n\n  while (target && target !== ancestor) {\n    matrix.mul(mat, target.getLocalTransform(), mat);\n    target = target.parent;\n  }\n\n  return mat;\n}\n/**\n * Apply transform to an vertex.\n * @param {Array.<number>} target [x, y]\n * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\n *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n * @param {boolean=} invert Whether use invert matrix.\n * @return {Array.<number>} [x, y]\n */\n\n\nfunction applyTransform(target, transform, invert) {\n  if (transform && !zrUtil.isArrayLike(transform)) {\n    transform = Transformable.getLocalTransform(transform);\n  }\n\n  if (invert) {\n    transform = matrix.invert([], transform);\n  }\n\n  return vector.applyTransform([], target, transform);\n}\n/**\n * @param {string} direction 'left' 'right' 'top' 'bottom'\n * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n * @param {boolean=} invert Whether use invert matrix.\n * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n */\n\n\nfunction transformDirection(direction, transform, invert) {\n  // Pick a base, ensure that transform result will not be (0, 0).\n  var hBase = transform[4] === 0 || transform[5] === 0 || transform[0] === 0 ? 1 : Math.abs(2 * transform[4] / transform[0]);\n  var vBase = transform[4] === 0 || transform[5] === 0 || transform[2] === 0 ? 1 : Math.abs(2 * transform[4] / transform[2]);\n  var vertex = [direction === 'left' ? -hBase : direction === 'right' ? hBase : 0, direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0];\n  vertex = applyTransform(vertex, transform, invert);\n  return Math.abs(vertex[0]) > Math.abs(vertex[1]) ? vertex[0] > 0 ? 'right' : 'left' : vertex[1] > 0 ? 'bottom' : 'top';\n}\n/**\n * Apply group transition animation from g1 to g2.\n * If no animatableModel, no animation.\n */\n\n\nfunction groupTransition(g1, g2, animatableModel, cb) {\n  if (!g1 || !g2) {\n    return;\n  }\n\n  function getElMap(g) {\n    var elMap = {};\n    g.traverse(function (el) {\n      if (!el.isGroup && el.anid) {\n        elMap[el.anid] = el;\n      }\n    });\n    return elMap;\n  }\n\n  function getAnimatableProps(el) {\n    var obj = {\n      position: vector.clone(el.position),\n      rotation: el.rotation\n    };\n\n    if (el.shape) {\n      obj.shape = zrUtil.extend({}, el.shape);\n    }\n\n    return obj;\n  }\n\n  var elMap1 = getElMap(g1);\n  g2.traverse(function (el) {\n    if (!el.isGroup && el.anid) {\n      var oldEl = elMap1[el.anid];\n\n      if (oldEl) {\n        var newProp = getAnimatableProps(el);\n        el.attr(getAnimatableProps(oldEl));\n        updateProps(el, newProp, animatableModel, el.dataIndex);\n      } // else {\n      //     if (el.previousProps) {\n      //         graphic.updateProps\n      //     }\n      // }\n\n    }\n  });\n}\n/**\n * @param {Array.<Array.<number>>} points Like: [[23, 44], [53, 66], ...]\n * @param {Object} rect {x, y, width, height}\n * @return {Array.<Array.<number>>} A new clipped points.\n */\n\n\nfunction clipPointsByRect(points, rect) {\n  return zrUtil.map(points, function (point) {\n    var x = point[0];\n    x = mathMax(x, rect.x);\n    x = mathMin(x, rect.x + rect.width);\n    var y = point[1];\n    y = mathMax(y, rect.y);\n    y = mathMin(y, rect.y + rect.height);\n    return [x, y];\n  });\n}\n/**\n * @param {Object} targetRect {x, y, width, height}\n * @param {Object} rect {x, y, width, height}\n * @return {Object} A new clipped rect. If rect size are negative, return undefined.\n */\n\n\nfunction clipRectByRect(targetRect, rect) {\n  var x = mathMax(targetRect.x, rect.x);\n  var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\n  var y = mathMax(targetRect.y, rect.y);\n  var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height);\n\n  if (x2 >= x && y2 >= y) {\n    return {\n      x: x,\n      y: y,\n      width: x2 - x,\n      height: y2 - y\n    };\n  }\n}\n/**\n * @param {string} iconStr Support 'image://' or 'path://' or direct svg path.\n * @param {Object} [opt] Properties of `module:zrender/Element`, except `style`.\n * @param {Object} [rect] {x, y, width, height}\n * @return {module:zrender/Element} Icon path or image element.\n */\n\n\nfunction createIcon(iconStr, opt, rect) {\n  opt = zrUtil.extend({\n    rectHover: true\n  }, opt);\n  var style = opt.style = {\n    strokeNoScale: true\n  };\n  rect = rect || {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  };\n\n  if (iconStr) {\n    return iconStr.indexOf('image://') === 0 ? (style.image = iconStr.slice(8), zrUtil.defaults(style, rect), new Image(opt)) : makePath(iconStr.replace('path://', ''), opt, rect, 'center');\n  }\n}\n\nexports.extendShape = extendShape;\nexports.extendPath = extendPath;\nexports.makePath = makePath;\nexports.makeImage = makeImage;\nexports.mergePath = mergePath;\nexports.resizePath = resizePath;\nexports.subPixelOptimizeLine = subPixelOptimizeLine;\nexports.subPixelOptimizeRect = subPixelOptimizeRect;\nexports.subPixelOptimize = subPixelOptimize;\nexports.setHoverStyle = setHoverStyle;\nexports.setLabelStyle = setLabelStyle;\nexports.setTextStyle = setTextStyle;\nexports.setText = setText;\nexports.getFont = getFont;\nexports.updateProps = updateProps;\nexports.initProps = initProps;\nexports.getTransform = getTransform;\nexports.applyTransform = applyTransform;\nexports.transformDirection = transformDirection;\nexports.groupTransition = groupTransition;\nexports.clipPointsByRect = clipPointsByRect;\nexports.clipRectByRect = clipRectByRect;\nexports.createIcon = createIcon;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/graphic.js\n// module id = 1029\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar RADIAN_EPSILON = 1e-4;\n\nfunction _trim(str) {\n  return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n}\n/**\n * Linear mapping a value from domain to range\n * @memberOf module:echarts/util/number\n * @param  {(number|Array.<number>)} val\n * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n * @param  {boolean} clamp\n * @return {(number|Array.<number>}\n */\n\n\nfunction linearMap(val, domain, range, clamp) {\n  var subDomain = domain[1] - domain[0];\n  var subRange = range[1] - range[0];\n\n  if (subDomain === 0) {\n    return subRange === 0 ? range[0] : (range[0] + range[1]) / 2;\n  } // Avoid accuracy problem in edge, such as\n  // 146.39 - 62.83 === 83.55999999999999.\n  // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n  // It is a little verbose for efficiency considering this method\n  // is a hotspot.\n\n\n  if (clamp) {\n    if (subDomain > 0) {\n      if (val <= domain[0]) {\n        return range[0];\n      } else if (val >= domain[1]) {\n        return range[1];\n      }\n    } else {\n      if (val >= domain[0]) {\n        return range[0];\n      } else if (val <= domain[1]) {\n        return range[1];\n      }\n    }\n  } else {\n    if (val === domain[0]) {\n      return range[0];\n    }\n\n    if (val === domain[1]) {\n      return range[1];\n    }\n  }\n\n  return (val - domain[0]) / subDomain * subRange + range[0];\n}\n/**\n * Convert a percent string to absolute number.\n * Returns NaN if percent is not a valid string or number\n * @memberOf module:echarts/util/number\n * @param {string|number} percent\n * @param {number} all\n * @return {number}\n */\n\n\nfunction parsePercent(percent, all) {\n  switch (percent) {\n    case 'center':\n    case 'middle':\n      percent = '50%';\n      break;\n\n    case 'left':\n    case 'top':\n      percent = '0%';\n      break;\n\n    case 'right':\n    case 'bottom':\n      percent = '100%';\n      break;\n  }\n\n  if (typeof percent === 'string') {\n    if (_trim(percent).match(/%$/)) {\n      return parseFloat(percent) / 100 * all;\n    }\n\n    return parseFloat(percent);\n  }\n\n  return percent == null ? NaN : +percent;\n}\n/**\n * (1) Fix rounding error of float numbers.\n * (2) Support return string to avoid scientific notation like '3.5e-7'.\n *\n * @param {number} x\n * @param {number} [precision]\n * @param {boolean} [returnStr]\n * @return {number|string}\n */\n\n\nfunction round(x, precision, returnStr) {\n  if (precision == null) {\n    precision = 10;\n  } // Avoid range error\n\n\n  precision = Math.min(Math.max(0, precision), 20);\n  x = (+x).toFixed(precision);\n  return returnStr ? x : +x;\n}\n\nfunction asc(arr) {\n  arr.sort(function (a, b) {\n    return a - b;\n  });\n  return arr;\n}\n/**\n * Get precision\n * @param {number} val\n */\n\n\nfunction getPrecision(val) {\n  val = +val;\n\n  if (isNaN(val)) {\n    return 0;\n  } // It is much faster than methods converting number to string as follows\n  //      var tmp = val.toString();\n  //      return tmp.length - 1 - tmp.indexOf('.');\n  // especially when precision is low\n\n\n  var e = 1;\n  var count = 0;\n\n  while (Math.round(val * e) / e !== val) {\n    e *= 10;\n    count++;\n  }\n\n  return count;\n}\n/**\n * @param {string|number} val\n * @return {number}\n */\n\n\nfunction getPrecisionSafe(val) {\n  var str = val.toString(); // Consider scientific notation: '3.4e-12' '3.4e+12'\n\n  var eIndex = str.indexOf('e');\n\n  if (eIndex > 0) {\n    var precision = +str.slice(eIndex + 1);\n    return precision < 0 ? -precision : 0;\n  } else {\n    var dotIndex = str.indexOf('.');\n    return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n  }\n}\n/**\n * Minimal dicernible data precisioin according to a single pixel.\n *\n * @param {Array.<number>} dataExtent\n * @param {Array.<number>} pixelExtent\n * @return {number} precision\n */\n\n\nfunction getPixelPrecision(dataExtent, pixelExtent) {\n  var log = Math.log;\n  var LN10 = Math.LN10;\n  var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n  var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10); // toFixed() digits argument must be between 0 and 20.\n\n  var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n  return !isFinite(precision) ? 20 : precision;\n}\n/**\n * Get a data of given precision, assuring the sum of percentages\n * in valueList is 1.\n * The largest remainer method is used.\n * https://en.wikipedia.org/wiki/Largest_remainder_method\n *\n * @param {Array.<number>} valueList a list of all data\n * @param {number} idx index of the data to be processed in valueList\n * @param {number} precision integer number showing digits of precision\n * @return {number} percent ranging from 0 to 100\n */\n\n\nfunction getPercentWithPrecision(valueList, idx, precision) {\n  if (!valueList[idx]) {\n    return 0;\n  }\n\n  var sum = zrUtil.reduce(valueList, function (acc, val) {\n    return acc + (isNaN(val) ? 0 : val);\n  }, 0);\n\n  if (sum === 0) {\n    return 0;\n  }\n\n  var digits = Math.pow(10, precision);\n  var votesPerQuota = zrUtil.map(valueList, function (val) {\n    return (isNaN(val) ? 0 : val) / sum * digits * 100;\n  });\n  var targetSeats = digits * 100;\n  var seats = zrUtil.map(votesPerQuota, function (votes) {\n    // Assign automatic seats.\n    return Math.floor(votes);\n  });\n  var currentSum = zrUtil.reduce(seats, function (acc, val) {\n    return acc + val;\n  }, 0);\n  var remainder = zrUtil.map(votesPerQuota, function (votes, idx) {\n    return votes - seats[idx];\n  }); // Has remainding votes.\n\n  while (currentSum < targetSeats) {\n    // Find next largest remainder.\n    var max = Number.NEGATIVE_INFINITY;\n    var maxId = null;\n\n    for (var i = 0, len = remainder.length; i < len; ++i) {\n      if (remainder[i] > max) {\n        max = remainder[i];\n        maxId = i;\n      }\n    } // Add a vote to max remainder.\n\n\n    ++seats[maxId];\n    remainder[maxId] = 0;\n    ++currentSum;\n  }\n\n  return seats[idx] / digits;\n} // Number.MAX_SAFE_INTEGER, ie do not support.\n\n\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * To 0 - 2 * PI, considering negative radian.\n * @param {number} radian\n * @return {number}\n */\n\nfunction remRadian(radian) {\n  var pi2 = Math.PI * 2;\n  return (radian % pi2 + pi2) % pi2;\n}\n/**\n * @param {type} radian\n * @return {boolean}\n */\n\n\nfunction isRadianAroundZero(val) {\n  return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n}\n\nvar TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n/**\n * @param {string|Date|number} value These values can be accepted:\n *   + An instance of Date, represent a time in its own time zone.\n *   + Or string in a subset of ISO 8601, only including:\n *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n *     all of which will be treated as local time if time zone is not specified\n *     (see <https://momentjs.com/>).\n *   + Or other string format, including (all of which will be treated as loacal time):\n *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n *   + a timestamp, which represent a time in UTC.\n * @return {Date} date\n */\n\nfunction parseDate(value) {\n  if (value instanceof Date) {\n    return value;\n  } else if (typeof value === 'string') {\n    // Different browsers parse date in different way, so we parse it manually.\n    // Some other issues:\n    // new Date('1970-01-01') is UTC,\n    // new Date('1970/01/01') and new Date('1970-1-01') is local.\n    // See issue #3623\n    var match = TIME_REG.exec(value);\n\n    if (!match) {\n      // return Invalid Date.\n      return new Date(NaN);\n    } // Use local time when no timezone offset specifed.\n\n\n    if (!match[8]) {\n      // match[n] can only be string or undefined.\n      // But take care of '12' + 1 => '121'.\n      return new Date(+match[1], +(match[2] || 1) - 1, +match[3] || 1, +match[4] || 0, +(match[5] || 0), +match[6] || 0, +match[7] || 0);\n    } // Timezoneoffset of Javascript Date has considered DST (Daylight Saving Time,\n    // https://tc39.github.io/ecma262/#sec-daylight-saving-time-adjustment).\n    // For example, system timezone is set as \"Time Zone: America/Toronto\",\n    // then these code will get different result:\n    // `new Date(1478411999999).getTimezoneOffset();  // get 240`\n    // `new Date(1478412000000).getTimezoneOffset();  // get 300`\n    // So we should not use `new Date`, but use `Date.UTC`.\n    else {\n        var hour = +match[4] || 0;\n\n        if (match[8].toUpperCase() !== 'Z') {\n          hour -= match[8].slice(0, 3);\n        }\n\n        return new Date(Date.UTC(+match[1], +(match[2] || 1) - 1, +match[3] || 1, hour, +(match[5] || 0), +match[6] || 0, +match[7] || 0));\n      }\n  } else if (value == null) {\n    return new Date(NaN);\n  }\n\n  return new Date(Math.round(value));\n}\n/**\n * Quantity of a number. e.g. 0.1, 1, 10, 100\n *\n * @param  {number} val\n * @return {number}\n */\n\n\nfunction quantity(val) {\n  return Math.pow(10, quantityExponent(val));\n}\n\nfunction quantityExponent(val) {\n  return Math.floor(Math.log(val) / Math.LN10);\n}\n/**\n * find a “nice” number approximately equal to x. Round the number if round = true,\n * take ceiling if round = false. The primary observation is that the “nicest”\n * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n *\n * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n *\n * @param  {number} val Non-negative value.\n * @param  {boolean} round\n * @return {number}\n */\n\n\nfunction nice(val, round) {\n  var exponent = quantityExponent(val);\n  var exp10 = Math.pow(10, exponent);\n  var f = val / exp10; // 1 <= f < 10\n\n  var nf;\n\n  if (round) {\n    if (f < 1.5) {\n      nf = 1;\n    } else if (f < 2.5) {\n      nf = 2;\n    } else if (f < 4) {\n      nf = 3;\n    } else if (f < 7) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  } else {\n    if (f < 1) {\n      nf = 1;\n    } else if (f < 2) {\n      nf = 2;\n    } else if (f < 3) {\n      nf = 3;\n    } else if (f < 5) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  }\n\n  val = nf * exp10; // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n  // 20 is the uppper bound of toFixed.\n\n  return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n}\n/**\n * Order intervals asc, and split them when overlap.\n * expect(numberUtil.reformIntervals([\n *     {interval: [18, 62], close: [1, 1]},\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [1, 1]},\n *     {interval: [62, 150], close: [1, 1]},\n *     {interval: [106, 150], close: [1, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ])).toEqual([\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [0, 1]},\n *     {interval: [18, 62], close: [0, 1]},\n *     {interval: [62, 150], close: [0, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ]);\n * @param {Array.<Object>} list, where `close` mean open or close\n *        of the interval, and Infinity can be used.\n * @return {Array.<Object>} The origin list, which has been reformed.\n */\n\n\nfunction reformIntervals(list) {\n  list.sort(function (a, b) {\n    return littleThan(a, b, 0) ? -1 : 1;\n  });\n  var curr = -Infinity;\n  var currClose = 1;\n\n  for (var i = 0; i < list.length;) {\n    var interval = list[i].interval;\n    var close = list[i].close;\n\n    for (var lg = 0; lg < 2; lg++) {\n      if (interval[lg] <= curr) {\n        interval[lg] = curr;\n        close[lg] = !lg ? 1 - currClose : 1;\n      }\n\n      curr = interval[lg];\n      currClose = close[lg];\n    }\n\n    if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n      list.splice(i, 1);\n    } else {\n      i++;\n    }\n  }\n\n  return list;\n\n  function littleThan(a, b, lg) {\n    return a.interval[lg] < b.interval[lg] || a.interval[lg] === b.interval[lg] && (a.close[lg] - b.close[lg] === (!lg ? 1 : -1) || !lg && littleThan(a, b, 1));\n  }\n}\n/**\n * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n * subtraction forces infinities to NaN\n *\n * @param {*} v\n * @return {boolean}\n */\n\n\nfunction isNumeric(v) {\n  return v - parseFloat(v) >= 0;\n}\n\nexports.linearMap = linearMap;\nexports.parsePercent = parsePercent;\nexports.round = round;\nexports.asc = asc;\nexports.getPrecision = getPrecision;\nexports.getPrecisionSafe = getPrecisionSafe;\nexports.getPixelPrecision = getPixelPrecision;\nexports.getPercentWithPrecision = getPercentWithPrecision;\nexports.MAX_SAFE_INTEGER = MAX_SAFE_INTEGER;\nexports.remRadian = remRadian;\nexports.isRadianAroundZero = isRadianAroundZero;\nexports.parseDate = parseDate;\nexports.quantity = quantity;\nexports.nice = nice;\nexports.reformIntervals = reformIntervals;\nexports.isNumeric = isNumeric;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/number.js\n// module id = 1030\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar formatUtil = require(\"./format\");\n\nvar nubmerUtil = require(\"./number\");\n\nvar Model = require(\"../model/Model\");\n\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\n/**\n * If value is not array, then translate it to array.\n * @param  {*} value\n * @return {Array} [value] or value\n */\n\nfunction normalizeToArray(value) {\n  return value instanceof Array ? value : value == null ? [] : [value];\n}\n/**\n * Sync default option between normal and emphasis like `position` and `show`\n * In case some one will write code like\n *     label: {\n *         normal: {\n *             show: false,\n *             position: 'outside',\n *             fontSize: 18\n *         },\n *         emphasis: {\n *             show: true\n *         }\n *     }\n * @param {Object} opt\n * @param {Array.<string>} subOpts\n */\n\n\nfunction defaultEmphasis(opt, subOpts) {\n  if (opt) {\n    var emphasisOpt = opt.emphasis = opt.emphasis || {};\n    var normalOpt = opt.normal = opt.normal || {}; // Default emphasis option from normal\n\n    for (var i = 0, len = subOpts.length; i < len; i++) {\n      var subOptName = subOpts[i];\n\n      if (!emphasisOpt.hasOwnProperty(subOptName) && normalOpt.hasOwnProperty(subOptName)) {\n        emphasisOpt[subOptName] = normalOpt[subOptName];\n      }\n    }\n  }\n}\n\nvar TEXT_STYLE_OPTIONS = ['fontStyle', 'fontWeight', 'fontSize', 'fontFamily', 'rich', 'tag', 'color', 'textBorderColor', 'textBorderWidth', 'width', 'height', 'lineHeight', 'align', 'verticalAlign', 'baseline', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY', 'textShadowColor', 'textShadowBlur', 'textShadowOffsetX', 'textShadowOffsetY', 'backgroundColor', 'borderColor', 'borderWidth', 'borderRadius', 'padding']; // modelUtil.LABEL_OPTIONS = modelUtil.TEXT_STYLE_OPTIONS.concat([\n//     'position', 'offset', 'rotate', 'origin', 'show', 'distance', 'formatter',\n//     'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\n//     // FIXME: deprecated, check and remove it.\n//     'textStyle'\n// ]);\n\n/**\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method retieves value from data.\n * @param {string|number|Date|Array|Object} dataItem\n * @return {number|string|Date|Array.<number|string|Date>}\n */\n\nfunction getDataItemValue(dataItem) {\n  // Performance sensitive.\n  return dataItem && (dataItem.value == null ? dataItem : dataItem.value);\n}\n/**\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method determine if dataItem has extra option besides value\n * @param {string|number|Date|Array|Object} dataItem\n */\n\n\nfunction isDataItemOption(dataItem) {\n  return isObject(dataItem) && !(dataItem instanceof Array); // // markLine data can be array\n  // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n}\n/**\n * This helper method convert value in data.\n * @param {string|number|Date} value\n * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n */\n\n\nfunction converDataValue(value, dimInfo) {\n  // Performance sensitive.\n  var dimType = dimInfo && dimInfo.type;\n\n  if (dimType === 'ordinal') {\n    return value;\n  }\n\n  if (dimType === 'time' // spead up when using timestamp\n  && typeof value !== 'number' && value != null && value !== '-') {\n    value = +nubmerUtil.parseDate(value);\n  } // dimType defaults 'number'.\n  // If dimType is not ordinal and value is null or undefined or NaN or '-',\n  // parse to NaN.\n\n\n  return value == null || value === '' ? NaN : +value; // If string (like '-'), using '+' parse to NaN\n}\n/**\n * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.\n * @param {module:echarts/data/List} data\n * @param {Object} opt\n * @param {string} [opt.seriesIndex]\n * @param {Object} [opt.name]\n * @param {Object} [opt.mainType]\n * @param {Object} [opt.subType]\n */\n\n\nfunction createDataFormatModel(data, opt) {\n  var model = new Model();\n  zrUtil.mixin(model, dataFormatMixin);\n  model.seriesIndex = opt.seriesIndex;\n  model.name = opt.name || '';\n  model.mainType = opt.mainType;\n  model.subType = opt.subType;\n\n  model.getData = function () {\n    return data;\n  };\n\n  return model;\n} // PENDING A little ugly\n\n\nvar dataFormatMixin = {\n  /**\n   * Get params for formatter\n   * @param {number} dataIndex\n   * @param {string} [dataType]\n   * @return {Object}\n   */\n  getDataParams: function (dataIndex, dataType) {\n    var data = this.getData(dataType);\n    var rawValue = this.getRawValue(dataIndex, dataType);\n    var rawDataIndex = data.getRawIndex(dataIndex);\n    var name = data.getName(dataIndex, true);\n    var itemOpt = data.getRawDataItem(dataIndex);\n    var color = data.getItemVisual(dataIndex, 'color');\n    return {\n      componentType: this.mainType,\n      componentSubType: this.subType,\n      seriesType: this.mainType === 'series' ? this.subType : null,\n      seriesIndex: this.seriesIndex,\n      seriesId: this.id,\n      seriesName: this.name,\n      name: name,\n      dataIndex: rawDataIndex,\n      data: itemOpt,\n      dataType: dataType,\n      value: rawValue,\n      color: color,\n      marker: formatUtil.getTooltipMarker(color),\n      // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n      $vars: ['seriesName', 'name', 'value']\n    };\n  },\n\n  /**\n   * Format label\n   * @param {number} dataIndex\n   * @param {string} [status='normal'] 'normal' or 'emphasis'\n   * @param {string} [dataType]\n   * @param {number} [dimIndex]\n   * @param {string} [labelProp='label']\n   * @return {string}\n   */\n  getFormattedLabel: function (dataIndex, status, dataType, dimIndex, labelProp) {\n    status = status || 'normal';\n    var data = this.getData(dataType);\n    var itemModel = data.getItemModel(dataIndex);\n    var params = this.getDataParams(dataIndex, dataType);\n\n    if (dimIndex != null && params.value instanceof Array) {\n      params.value = params.value[dimIndex];\n    }\n\n    var formatter = itemModel.get([labelProp || 'label', status, 'formatter']);\n\n    if (typeof formatter === 'function') {\n      params.status = status;\n      return formatter(params);\n    } else if (typeof formatter === 'string') {\n      return formatUtil.formatTpl(formatter, params);\n    }\n  },\n\n  /**\n   * Get raw value in option\n   * @param {number} idx\n   * @param {string} [dataType]\n   * @return {Object}\n   */\n  getRawValue: function (idx, dataType) {\n    var data = this.getData(dataType);\n    var dataItem = data.getRawDataItem(idx);\n\n    if (dataItem != null) {\n      return isObject(dataItem) && !(dataItem instanceof Array) ? dataItem.value : dataItem;\n    }\n  },\n\n  /**\n   * Should be implemented.\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   * @return {string} tooltip string\n   */\n  formatTooltip: zrUtil.noop\n};\n/**\n * Mapping to exists for merge.\n *\n * @public\n * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n * @param {Object|Array.<Object>} newCptOptions\n * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          index of which is the same as exists.\n */\n\nfunction mappingToExists(exists, newCptOptions) {\n  // Mapping by the order by original option (but not order of\n  // new option) in merge mode. Because we should ensure\n  // some specified index (like xAxisIndex) is consistent with\n  // original option, which is easy to understand, espatially in\n  // media query. And in most case, merge option is used to\n  // update partial option but not be expected to change order.\n  newCptOptions = (newCptOptions || []).slice();\n  var result = zrUtil.map(exists || [], function (obj, index) {\n    return {\n      exist: obj\n    };\n  }); // Mapping by id or name if specified.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    } // id has highest priority.\n\n\n    for (var i = 0; i < result.length; i++) {\n      if (!result[i].option // Consider name: two map to one.\n      && cptOption.id != null && result[i].exist.id === cptOption.id + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n\n    for (var i = 0; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Consider name: two map to one.\n      // Can not match when both ids exist but different.\n      && (exist.id == null || cptOption.id == null) && cptOption.name != null && !isIdInner(cptOption) && !isIdInner(exist) && exist.name === cptOption.name + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n  }); // Otherwise mapping by index.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    }\n\n    var i = 0;\n\n    for (; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Existing model that already has id should be able to\n      // mapped to (because after mapping performed model may\n      // be assigned with a id, whish should not affect next\n      // mapping), except those has inner id.\n      && !isIdInner(exist) // Caution:\n      // Do not overwrite id. But name can be overwritten,\n      // because axis use name as 'show label text'.\n      // 'exist' always has id and name and we dont\n      // need to check it.\n      && cptOption.id == null) {\n        result[i].option = cptOption;\n        break;\n      }\n    }\n\n    if (i >= result.length) {\n      result.push({\n        option: cptOption\n      });\n    }\n  });\n  return result;\n}\n/**\n * Make id and name for mapping result (result of mappingToExists)\n * into `keyInfo` field.\n *\n * @public\n * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          which order is the same as exists.\n * @return {Array.<Object>} The input.\n */\n\n\nfunction makeIdAndName(mapResult) {\n  // We use this id to hash component models and view instances\n  // in echarts. id can be specified by user, or auto generated.\n  // The id generation rule ensures new view instance are able\n  // to mapped to old instance when setOption are called in\n  // no-merge mode. So we generate model id by name and plus\n  // type in view id.\n  // name can be duplicated among components, which is convenient\n  // to specify multi components (like series) by one name.\n  // Ensure that each id is distinct.\n  var idMap = zrUtil.createHashMap();\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    existCpt && idMap.set(existCpt.id, item);\n  });\n  each(mapResult, function (item, index) {\n    var opt = item.option;\n    zrUtil.assert(!opt || opt.id == null || !idMap.get(opt.id) || idMap.get(opt.id) === item, 'id duplicates: ' + (opt && opt.id));\n    opt && opt.id != null && idMap.set(opt.id, item);\n    !item.keyInfo && (item.keyInfo = {});\n  }); // Make name and id.\n\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    var opt = item.option;\n    var keyInfo = item.keyInfo;\n\n    if (!isObject(opt)) {\n      return;\n    } // name can be overwitten. Consider case: axis.name = '20km'.\n    // But id generated by name will not be changed, which affect\n    // only in that case: setOption with 'not merge mode' and view\n    // instance will be recreated, which can be accepted.\n\n\n    keyInfo.name = opt.name != null ? opt.name + '' : existCpt ? existCpt.name : '\\0-'; // name may be displayed on screen, so use '-'.\n\n    if (existCpt) {\n      keyInfo.id = existCpt.id;\n    } else if (opt.id != null) {\n      keyInfo.id = opt.id + '';\n    } else {\n      // Consider this situatoin:\n      //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n      //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n      // Series with the same name between optionA and optionB\n      // should be mapped.\n      var idNum = 0;\n\n      do {\n        keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n      } while (idMap.get(keyInfo.id));\n    }\n\n    idMap.set(keyInfo.id, item);\n  });\n}\n/**\n * @public\n * @param {Object} cptOption\n * @return {boolean}\n */\n\n\nfunction isIdInner(cptOption) {\n  return isObject(cptOption) && cptOption.id && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n}\n/**\n * A helper for removing duplicate items between batchA and batchB,\n * and in themselves, and categorize by series.\n *\n * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n */\n\n\nfunction compressBatches(batchA, batchB) {\n  var mapA = {};\n  var mapB = {};\n  makeMap(batchA || [], mapA);\n  makeMap(batchB || [], mapB, mapA);\n  return [mapToArray(mapA), mapToArray(mapB)];\n\n  function makeMap(sourceBatch, map, otherMap) {\n    for (var i = 0, len = sourceBatch.length; i < len; i++) {\n      var seriesId = sourceBatch[i].seriesId;\n      var dataIndices = normalizeToArray(sourceBatch[i].dataIndex);\n      var otherDataIndices = otherMap && otherMap[seriesId];\n\n      for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n        var dataIndex = dataIndices[j];\n\n        if (otherDataIndices && otherDataIndices[dataIndex]) {\n          otherDataIndices[dataIndex] = null;\n        } else {\n          (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n        }\n      }\n    }\n  }\n\n  function mapToArray(map, isData) {\n    var result = [];\n\n    for (var i in map) {\n      if (map.hasOwnProperty(i) && map[i] != null) {\n        if (isData) {\n          result.push(+i);\n        } else {\n          var dataIndices = mapToArray(map[i], true);\n          dataIndices.length && result.push({\n            seriesId: i,\n            dataIndex: dataIndices\n          });\n        }\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n *                         each of which can be Array or primary type.\n * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n */\n\n\nfunction queryDataIndex(data, payload) {\n  if (payload.dataIndexInside != null) {\n    return payload.dataIndexInside;\n  } else if (payload.dataIndex != null) {\n    return zrUtil.isArray(payload.dataIndex) ? zrUtil.map(payload.dataIndex, function (value) {\n      return data.indexOfRawIndex(value);\n    }) : data.indexOfRawIndex(payload.dataIndex);\n  } else if (payload.name != null) {\n    return zrUtil.isArray(payload.name) ? zrUtil.map(payload.name, function (value) {\n      return data.indexOfName(value);\n    }) : data.indexOfName(payload.name);\n  }\n}\n/**\n * Enable property storage to any host object.\n * Notice: Serialization is not supported.\n *\n * For example:\n * var get = modelUitl.makeGetter();\n *\n * function some(hostObj) {\n *      get(hostObj)._someProperty = 1212;\n *      ...\n * }\n *\n * @return {Function}\n */\n\n\nvar makeGetter = function () {\n  var index = 0;\n  return function () {\n    var key = '\\0__ec_prop_getter_' + index++;\n    return function (hostObj) {\n      return hostObj[key] || (hostObj[key] = {});\n    };\n  };\n}();\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex, seriesId, seriesName,\n *            geoIndex, geoId, geoName,\n *            bmapIndex, bmapId, bmapName,\n *            xAxisIndex, xAxisId, xAxisName,\n *            yAxisIndex, yAxisId, yAxisName,\n *            gridIndex, gridId, gridName,\n *            ... (can be extended)\n *        }\n *        Each properties can be number|string|Array.<number>|Array.<string>\n *        For example, a finder could be\n *        {\n *            seriesIndex: 3,\n *            geoId: ['aa', 'cc'],\n *            gridName: ['xx', 'rr']\n *        }\n *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n *        If nothing or null/undefined specified, return nothing.\n * @param {Object} [opt]\n * @param {string} [opt.defaultMainType]\n * @param {Array.<string>} [opt.includeMainTypes]\n * @return {Object} result like:\n *        {\n *            seriesModels: [seriesModel1, seriesModel2],\n *            seriesModel: seriesModel1, // The first model\n *            geoModels: [geoModel1, geoModel2],\n *            geoModel: geoModel1, // The first model\n *            ...\n *        }\n */\n\n\nfunction parseFinder(ecModel, finder, opt) {\n  if (zrUtil.isString(finder)) {\n    var obj = {};\n    obj[finder + 'Index'] = 0;\n    finder = obj;\n  }\n\n  var defaultMainType = opt && opt.defaultMainType;\n\n  if (defaultMainType && !has(finder, defaultMainType + 'Index') && !has(finder, defaultMainType + 'Id') && !has(finder, defaultMainType + 'Name')) {\n    finder[defaultMainType + 'Index'] = 0;\n  }\n\n  var result = {};\n  each(finder, function (value, key) {\n    var value = finder[key]; // Exclude 'dataIndex' and other illgal keys.\n\n    if (key === 'dataIndex' || key === 'dataIndexInside') {\n      result[key] = value;\n      return;\n    }\n\n    var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n    var mainType = parsedKey[1];\n    var queryType = (parsedKey[2] || '').toLowerCase();\n\n    if (!mainType || !queryType || value == null || queryType === 'index' && value === 'none' || opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0) {\n      return;\n    }\n\n    var queryParam = {\n      mainType: mainType\n    };\n\n    if (queryType !== 'index' || value !== 'all') {\n      queryParam[queryType] = value;\n    }\n\n    var models = ecModel.queryComponents(queryParam);\n    result[mainType + 'Models'] = models;\n    result[mainType + 'Model'] = models[0];\n  });\n  return result;\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n * @param {module:echarts/data/List} data\n * @param {string|number} dataDim\n * @return {string}\n */\n\n\nfunction dataDimToCoordDim(data, dataDim) {\n  var dimensions = data.dimensions;\n  dataDim = data.getDimension(dataDim);\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimItem = data.getDimensionInfo(dimensions[i]);\n\n    if (dimItem.name === dataDim) {\n      return dimItem.coordDim;\n    }\n  }\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n * @param {module:echarts/data/List} data\n * @param {string} coordDim\n * @return {Array.<string>} data dimensions on the coordDim.\n */\n\n\nfunction coordDimToDataDim(data, coordDim) {\n  var dataDim = [];\n  each(data.dimensions, function (dimName) {\n    var dimItem = data.getDimensionInfo(dimName);\n\n    if (dimItem.coordDim === coordDim) {\n      dataDim[dimItem.coordDimIndex] = dimItem.name;\n    }\n  });\n  return dataDim;\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n * @param {module:echarts/data/List} data\n * @param {string} otherDim Can be `otherDims`\n *                        like 'label' or 'tooltip'.\n * @return {Array.<string>} data dimensions on the otherDim.\n */\n\n\nfunction otherDimToDataDim(data, otherDim) {\n  var dataDim = [];\n  each(data.dimensions, function (dimName) {\n    var dimItem = data.getDimensionInfo(dimName);\n    var otherDims = dimItem.otherDims;\n    var dimIndex = otherDims[otherDim];\n\n    if (dimIndex != null && dimIndex !== false) {\n      dataDim[dimIndex] = dimItem.name;\n    }\n  });\n  return dataDim;\n}\n\nfunction has(obj, prop) {\n  return obj && obj.hasOwnProperty(prop);\n}\n\nexports.normalizeToArray = normalizeToArray;\nexports.defaultEmphasis = defaultEmphasis;\nexports.TEXT_STYLE_OPTIONS = TEXT_STYLE_OPTIONS;\nexports.getDataItemValue = getDataItemValue;\nexports.isDataItemOption = isDataItemOption;\nexports.converDataValue = converDataValue;\nexports.createDataFormatModel = createDataFormatModel;\nexports.dataFormatMixin = dataFormatMixin;\nexports.mappingToExists = mappingToExists;\nexports.makeIdAndName = makeIdAndName;\nexports.isIdInner = isIdInner;\nexports.compressBatches = compressBatches;\nexports.queryDataIndex = queryDataIndex;\nexports.makeGetter = makeGetter;\nexports.parseFinder = parseFinder;\nexports.dataDimToCoordDim = dataDimToCoordDim;\nexports.coordDimToDataDim = coordDimToDataDim;\nexports.otherDimToDataDim = otherDimToDataDim;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/model.js\n// module id = 1031\n// module chunks = 0 1 2","// (1) The code `if (__DEV__) ...` can be removed by build tool.\n// (2) If intend to use `__DEV__`, this module should be imported. Use a global\n// variable `__DEV__` may cause that miss the declaration (see #6535), or the\n// declaration is behind of the using position (for example in `Model.extent`,\n// And tools like rollup can not analysis the dependency if not import).\nvar dev; // In browser\n\nif (typeof window !== 'undefined') {\n  dev = window.__DEV__;\n} // In node\nelse if (typeof global !== 'undefined') {\n    dev = global.__DEV__;\n  }\n\nif (typeof dev === 'undefined') {\n  dev = true;\n}\n\nvar __DEV__ = dev;\nexports.__DEV__ = __DEV__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/config.js\n// module id = 1032\n// module chunks = 0 1 2","var ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * 创建一个向量\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @return {Vector2}\n */\n\nfunction create(x, y) {\n  var out = new ArrayCtor(2);\n\n  if (x == null) {\n    x = 0;\n  }\n\n  if (y == null) {\n    y = 0;\n  }\n\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * 复制向量数据\n * @param {Vector2} out\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction copy(out, v) {\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 克隆一个向量\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction clone(v) {\n  var out = new ArrayCtor(2);\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 设置向量的两个项\n * @param {Vector2} out\n * @param {number} a\n * @param {number} b\n * @return {Vector2} 结果\n */\n\n\nfunction set(out, a, b) {\n  out[0] = a;\n  out[1] = b;\n  return out;\n}\n/**\n * 向量相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction add(out, v1, v2) {\n  out[0] = v1[0] + v2[0];\n  out[1] = v1[1] + v2[1];\n  return out;\n}\n/**\n * 向量缩放后相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} a\n */\n\n\nfunction scaleAndAdd(out, v1, v2, a) {\n  out[0] = v1[0] + v2[0] * a;\n  out[1] = v1[1] + v2[1] * a;\n  return out;\n}\n/**\n * 向量相减\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction sub(out, v1, v2) {\n  out[0] = v1[0] - v2[0];\n  out[1] = v1[1] - v2[1];\n  return out;\n}\n/**\n * 向量长度\n * @param {Vector2} v\n * @return {number}\n */\n\n\nfunction len(v) {\n  return Math.sqrt(lenSquare(v));\n}\n\nvar length = len; // jshint ignore:line\n\n/**\n * 向量长度平方\n * @param {Vector2} v\n * @return {number}\n */\n\nfunction lenSquare(v) {\n  return v[0] * v[0] + v[1] * v[1];\n}\n\nvar lengthSquare = lenSquare;\n/**\n * 向量乘法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\nfunction mul(out, v1, v2) {\n  out[0] = v1[0] * v2[0];\n  out[1] = v1[1] * v2[1];\n  return out;\n}\n/**\n * 向量除法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction div(out, v1, v2) {\n  out[0] = v1[0] / v2[0];\n  out[1] = v1[1] / v2[1];\n  return out;\n}\n/**\n * 向量点乘\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction dot(v1, v2) {\n  return v1[0] * v2[0] + v1[1] * v2[1];\n}\n/**\n * 向量缩放\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {number} s\n */\n\n\nfunction scale(out, v, s) {\n  out[0] = v[0] * s;\n  out[1] = v[1] * s;\n  return out;\n}\n/**\n * 向量归一化\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\n\nfunction normalize(out, v) {\n  var d = len(v);\n\n  if (d === 0) {\n    out[0] = 0;\n    out[1] = 0;\n  } else {\n    out[0] = v[0] / d;\n    out[1] = v[1] / d;\n  }\n\n  return out;\n}\n/**\n * 计算向量间距离\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction distance(v1, v2) {\n  return Math.sqrt((v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]));\n}\n\nvar dist = distance;\n/**\n * 向量距离平方\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\nfunction distanceSquare(v1, v2) {\n  return (v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n}\n\nvar distSquare = distanceSquare;\n/**\n * 求负向量\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\nfunction negate(out, v) {\n  out[0] = -v[0];\n  out[1] = -v[1];\n  return out;\n}\n/**\n * 插值两个点\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} t\n */\n\n\nfunction lerp(out, v1, v2, t) {\n  out[0] = v1[0] + t * (v2[0] - v1[0]);\n  out[1] = v1[1] + t * (v2[1] - v1[1]);\n  return out;\n}\n/**\n * 矩阵左乘向量\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {Vector2} m\n */\n\n\nfunction applyTransform(out, v, m) {\n  var x = v[0];\n  var y = v[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\n * 求两个向量最小值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction min(out, v1, v2) {\n  out[0] = Math.min(v1[0], v2[0]);\n  out[1] = Math.min(v1[1], v2[1]);\n  return out;\n}\n/**\n * 求两个向量最大值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction max(out, v1, v2) {\n  out[0] = Math.max(v1[0], v2[0]);\n  out[1] = Math.max(v1[1], v2[1]);\n  return out;\n}\n\nexports.create = create;\nexports.copy = copy;\nexports.clone = clone;\nexports.set = set;\nexports.add = add;\nexports.scaleAndAdd = scaleAndAdd;\nexports.sub = sub;\nexports.len = len;\nexports.length = length;\nexports.lenSquare = lenSquare;\nexports.lengthSquare = lengthSquare;\nexports.mul = mul;\nexports.div = div;\nexports.dot = dot;\nexports.scale = scale;\nexports.normalize = normalize;\nexports.distance = distance;\nexports.dist = dist;\nexports.distanceSquare = distanceSquare;\nexports.distSquare = distSquare;\nexports.negate = negate;\nexports.lerp = lerp;\nexports.applyTransform = applyTransform;\nexports.min = min;\nexports.max = max;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/vector.js\n// module id = 1033\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar numberUtil = require(\"./number\");\n\n/**\n * 每三位默认加,格式化\n * @param {string|number} x\n * @return {string}\n */\nfunction addCommas(x) {\n  if (isNaN(x)) {\n    return '-';\n  }\n\n  x = (x + '').split('.');\n  return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g, '$1,') + (x.length > 1 ? '.' + x[1] : '');\n}\n/**\n * @param {string} str\n * @param {boolean} [upperCaseFirst=false]\n * @return {string} str\n */\n\n\nfunction toCamelCase(str, upperCaseFirst) {\n  str = (str || '').toLowerCase().replace(/-(.)/g, function (match, group1) {\n    return group1.toUpperCase();\n  });\n\n  if (upperCaseFirst && str) {\n    str = str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  return str;\n}\n\nvar normalizeCssArray = zrUtil.normalizeCssArray;\n\nfunction encodeHTML(source) {\n  return String(source).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/'/g, '&#39;');\n}\n\nvar TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\nvar wrapVar = function (varName, seriesIdx) {\n  return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n};\n/**\n * Template formatter\n * @param {string} tpl\n * @param {Array.<Object>|Object} paramsList\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTpl(tpl, paramsList, encode) {\n  if (!zrUtil.isArray(paramsList)) {\n    paramsList = [paramsList];\n  }\n\n  var seriesLen = paramsList.length;\n\n  if (!seriesLen) {\n    return '';\n  }\n\n  var $vars = paramsList[0].$vars || [];\n\n  for (var i = 0; i < $vars.length; i++) {\n    var alias = TPL_VAR_ALIAS[i];\n    var val = wrapVar(alias, 0);\n    tpl = tpl.replace(wrapVar(alias), encode ? encodeHTML(val) : val);\n  }\n\n  for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n    for (var k = 0; k < $vars.length; k++) {\n      var val = paramsList[seriesIdx][$vars[k]];\n      tpl = tpl.replace(wrapVar(TPL_VAR_ALIAS[k], seriesIdx), encode ? encodeHTML(val) : val);\n    }\n  }\n\n  return tpl;\n}\n/**\n * simple Template formatter\n *\n * @param {string} tpl\n * @param {Object} param\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTplSimple(tpl, param, encode) {\n  zrUtil.each(param, function (value, key) {\n    tpl = tpl.replace('{' + key + '}', encode ? encodeHTML(value) : value);\n  });\n  return tpl;\n}\n/**\n * @param {string} color\n * @param {string} [extraCssText]\n * @return {string}\n */\n\n\nfunction getTooltipMarker(color, extraCssText) {\n  return color ? '<span style=\"display:inline-block;margin-right:5px;' + 'border-radius:10px;width:9px;height:9px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>' : '';\n}\n/**\n * @param {string} str\n * @return {string}\n * @inner\n */\n\n\nvar s2d = function (str) {\n  return str < 10 ? '0' + str : str;\n};\n/**\n * ISO Date format\n * @param {string} tpl\n * @param {number} value\n * @param {boolean} [isUTC=false] Default in local time.\n *           see `module:echarts/scale/Time`\n *           and `module:echarts/util/number#parseDate`.\n * @inner\n */\n\n\nfunction formatTime(tpl, value, isUTC) {\n  if (tpl === 'week' || tpl === 'month' || tpl === 'quarter' || tpl === 'half-year' || tpl === 'year') {\n    tpl = 'MM-dd\\nyyyy';\n  }\n\n  var date = numberUtil.parseDate(value);\n  var utc = isUTC ? 'UTC' : '';\n  var y = date['get' + utc + 'FullYear']();\n  var M = date['get' + utc + 'Month']() + 1;\n  var d = date['get' + utc + 'Date']();\n  var h = date['get' + utc + 'Hours']();\n  var m = date['get' + utc + 'Minutes']();\n  var s = date['get' + utc + 'Seconds']();\n  tpl = tpl.replace('MM', s2d(M)).replace('M', M).replace('yyyy', y).replace('yy', y % 100).replace('dd', s2d(d)).replace('d', d).replace('hh', s2d(h)).replace('h', h).replace('mm', s2d(m)).replace('m', m).replace('ss', s2d(s)).replace('s', s);\n  return tpl;\n}\n/**\n * Capital first\n * @param {string} str\n * @return {string}\n */\n\n\nfunction capitalFirst(str) {\n  return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n}\n\nvar truncateText = textContain.truncateText;\nvar getTextRect = textContain.getBoundingRect;\nexports.addCommas = addCommas;\nexports.toCamelCase = toCamelCase;\nexports.normalizeCssArray = normalizeCssArray;\nexports.encodeHTML = encodeHTML;\nexports.formatTpl = formatTpl;\nexports.formatTplSimple = formatTplSimple;\nexports.getTooltipMarker = getTooltipMarker;\nexports.formatTime = formatTime;\nexports.capitalFirst = capitalFirst;\nexports.truncateText = truncateText;\nexports.getTextRect = getTextRect;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/format.js\n// module id = 1034\n// module chunks = 0 1 2","/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\nvar env = {};\n\nif (typeof navigator === 'undefined') {\n  // In node\n  env = {\n    browser: {},\n    os: {},\n    node: true,\n    // Assume canvas is supported\n    canvasSupported: true,\n    svgSupported: true\n  };\n} else {\n  env = detect(navigator.userAgent);\n}\n\nvar _default = env; // Zepto.js\n// (c) 2010-2013 Thomas Fuchs\n// Zepto.js may be freely distributed under the MIT license.\n\nfunction detect(ua) {\n  var os = {};\n  var browser = {}; // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n  // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n  // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n  // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n  // var touchpad = webos && ua.match(/TouchPad/);\n  // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n  // var silk = ua.match(/Silk\\/([\\d._]+)/);\n  // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n  // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n  // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n  // var playbook = ua.match(/PlayBook/);\n  // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n\n  var firefox = ua.match(/Firefox\\/([\\d.]+)/); // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n  // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n\n  var ie = ua.match(/MSIE\\s([\\d.]+)/) // IE 11 Trident/7.0; rv:11.0\n  || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n  var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n  var weChat = /micromessenger/i.test(ua); // Todo: clean this up with a better OS/browser seperation:\n  // - discern (more) between multiple browsers on android\n  // - decide if kindle fire in silk mode is android or not\n  // - Firefox on Android doesn't specify the Android version\n  // - possibly devide in os, device and browser hashes\n  // if (browser.webkit = !!webkit) browser.version = webkit[1];\n  // if (android) os.android = true, os.version = android[2];\n  // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n  // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n  // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n  // if (webos) os.webos = true, os.version = webos[2];\n  // if (touchpad) os.touchpad = true;\n  // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n  // if (bb10) os.bb10 = true, os.version = bb10[2];\n  // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n  // if (playbook) browser.playbook = true;\n  // if (kindle) os.kindle = true, os.version = kindle[1];\n  // if (silk) browser.silk = true, browser.version = silk[1];\n  // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n  // if (chrome) browser.chrome = true, browser.version = chrome[1];\n\n  if (firefox) {\n    browser.firefox = true;\n    browser.version = firefox[1];\n  } // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n  // if (webview) browser.webview = true;\n\n\n  if (ie) {\n    browser.ie = true;\n    browser.version = ie[1];\n  }\n\n  if (edge) {\n    browser.edge = true;\n    browser.version = edge[1];\n  } // It is difficult to detect WeChat in Win Phone precisely, because ua can\n  // not be set on win phone. So we do not consider Win Phone.\n\n\n  if (weChat) {\n    browser.weChat = true;\n  } // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n  //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n  // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n  //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n  //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n\n  return {\n    browser: browser,\n    os: os,\n    node: false,\n    // 原生canvas支持，改极端点了\n    // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n    canvasSupported: !!document.createElement('canvas').getContext,\n    svgSupported: typeof SVGRect !== 'undefined',\n    // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\n    // works on most browsers\n    // IE10/11 does not support touch event, and MS Edge supports them but not by\n    // default, so we dont check navigator.maxTouchPoints for them here.\n    touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n    // <http://caniuse.com/#search=pointer%20event>.\n    pointerEventsSupported: 'onpointerdown' in window // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n    // events currently. So we dont use that on other browsers unless tested sufficiently.\n    // Although IE 10 supports pointer event, it use old style and is different from the\n    // standard. So we exclude that. (IE 10 is hardly used on touch device)\n    && (browser.edge || browser.ie && browser.version >= 11)\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/env.js\n// module id = 1035\n// module chunks = 0 1 2","var vec2 = require(\"./vector\");\n\nvar matrix = require(\"./matrix\");\n\n/**\n * @module echarts/core/BoundingRect\n */\nvar v2ApplyTransform = vec2.applyTransform;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\n/**\n * @alias module:echarts/core/BoundingRect\n */\n\nfunction BoundingRect(x, y, width, height) {\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n  /**\n   * @type {number}\n   */\n\n\n  this.x = x;\n  /**\n   * @type {number}\n   */\n\n  this.y = y;\n  /**\n   * @type {number}\n   */\n\n  this.width = width;\n  /**\n   * @type {number}\n   */\n\n  this.height = height;\n}\n\nBoundingRect.prototype = {\n  constructor: BoundingRect,\n\n  /**\n   * @param {module:echarts/core/BoundingRect} other\n   */\n  union: function (other) {\n    var x = mathMin(other.x, this.x);\n    var y = mathMin(other.y, this.y);\n    this.width = mathMax(other.x + other.width, this.x + this.width) - x;\n    this.height = mathMax(other.y + other.height, this.y + this.height) - y;\n    this.x = x;\n    this.y = y;\n  },\n\n  /**\n   * @param {Array.<number>} m\n   * @methods\n   */\n  applyTransform: function () {\n    var lt = [];\n    var rb = [];\n    var lb = [];\n    var rt = [];\n    return function (m) {\n      // In case usage like this\n      // el.getBoundingRect().applyTransform(el.transform)\n      // And element has no transform\n      if (!m) {\n        return;\n      }\n\n      lt[0] = lb[0] = this.x;\n      lt[1] = rt[1] = this.y;\n      rb[0] = rt[0] = this.x + this.width;\n      rb[1] = lb[1] = this.y + this.height;\n      v2ApplyTransform(lt, lt, m);\n      v2ApplyTransform(rb, rb, m);\n      v2ApplyTransform(lb, lb, m);\n      v2ApplyTransform(rt, rt, m);\n      this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n      this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n      var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n      var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n      this.width = maxX - this.x;\n      this.height = maxY - this.y;\n    };\n  }(),\n\n  /**\n   * Calculate matrix of transforming from self to target rect\n   * @param  {module:zrender/core/BoundingRect} b\n   * @return {Array.<number>}\n   */\n  calculateTransform: function (b) {\n    var a = this;\n    var sx = b.width / a.width;\n    var sy = b.height / a.height;\n    var m = matrix.create(); // 矩阵右乘\n\n    matrix.translate(m, m, [-a.x, -a.y]);\n    matrix.scale(m, m, [sx, sy]);\n    matrix.translate(m, m, [b.x, b.y]);\n    return m;\n  },\n\n  /**\n   * @param {(module:echarts/core/BoundingRect|Object)} b\n   * @return {boolean}\n   */\n  intersect: function (b) {\n    if (!b) {\n      return false;\n    }\n\n    if (!(b instanceof BoundingRect)) {\n      // Normalize negative width/height.\n      b = BoundingRect.create(b);\n    }\n\n    var a = this;\n    var ax0 = a.x;\n    var ax1 = a.x + a.width;\n    var ay0 = a.y;\n    var ay1 = a.y + a.height;\n    var bx0 = b.x;\n    var bx1 = b.x + b.width;\n    var by0 = b.y;\n    var by1 = b.y + b.height;\n    return !(ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n  },\n  contain: function (x, y) {\n    var rect = this;\n    return x >= rect.x && x <= rect.x + rect.width && y >= rect.y && y <= rect.y + rect.height;\n  },\n\n  /**\n   * @return {module:echarts/core/BoundingRect}\n   */\n  clone: function () {\n    return new BoundingRect(this.x, this.y, this.width, this.height);\n  },\n\n  /**\n   * Copy from another rect\n   */\n  copy: function (other) {\n    this.x = other.x;\n    this.y = other.y;\n    this.width = other.width;\n    this.height = other.height;\n  },\n  plain: function () {\n    return {\n      x: this.x,\n      y: this.y,\n      width: this.width,\n      height: this.height\n    };\n  }\n};\n/**\n * @param {Object|module:zrender/core/BoundingRect} rect\n * @param {number} rect.x\n * @param {number} rect.y\n * @param {number} rect.width\n * @param {number} rect.height\n * @return {module:zrender/core/BoundingRect}\n */\n\nBoundingRect.create = function (rect) {\n  return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n};\n\nvar _default = BoundingRect;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/BoundingRect.js\n// module id = 1036\n// module chunks = 0 1 2","var Displayable = require(\"./Displayable\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar pathContain = require(\"../contain/path\");\n\nvar Pattern = require(\"./Pattern\");\n\nvar getCanvasPattern = Pattern.prototype.getCanvasPattern;\nvar abs = Math.abs;\nvar pathProxyForDraw = new PathProxy(true);\n/**\n * @alias module:zrender/graphic/Path\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\n\nfunction Path(opts) {\n  Displayable.call(this, opts);\n  /**\n   * @type {module:zrender/core/PathProxy}\n   * @readOnly\n   */\n\n  this.path = null;\n}\n\nPath.prototype = {\n  constructor: Path,\n  type: 'path',\n  __dirtyPath: true,\n  strokeContainThreshold: 5,\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var path = this.path || pathProxyForDraw;\n    var hasStroke = style.hasStroke();\n    var hasFill = style.hasFill();\n    var fill = style.fill;\n    var stroke = style.stroke;\n    var hasFillGradient = hasFill && !!fill.colorStops;\n    var hasStrokeGradient = hasStroke && !!stroke.colorStops;\n    var hasFillPattern = hasFill && !!fill.image;\n    var hasStrokePattern = hasStroke && !!stroke.image;\n    style.bind(ctx, this, prevEl);\n    this.setTransform(ctx);\n\n    if (this.__dirty) {\n      var rect; // Update gradient because bounding rect may changed\n\n      if (hasFillGradient) {\n        rect = rect || this.getBoundingRect();\n        this._fillGradient = style.getGradient(ctx, fill, rect);\n      }\n\n      if (hasStrokeGradient) {\n        rect = rect || this.getBoundingRect();\n        this._strokeGradient = style.getGradient(ctx, stroke, rect);\n      }\n    } // Use the gradient or pattern\n\n\n    if (hasFillGradient) {\n      // PENDING If may have affect the state\n      ctx.fillStyle = this._fillGradient;\n    } else if (hasFillPattern) {\n      ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n    }\n\n    if (hasStrokeGradient) {\n      ctx.strokeStyle = this._strokeGradient;\n    } else if (hasStrokePattern) {\n      ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n    }\n\n    var lineDash = style.lineDash;\n    var lineDashOffset = style.lineDashOffset;\n    var ctxLineDash = !!ctx.setLineDash; // Update path sx, sy\n\n    var scale = this.getGlobalScale();\n    path.setScale(scale[0], scale[1]); // Proxy context\n    // Rebuild path in following 2 cases\n    // 1. Path is dirty\n    // 2. Path needs javascript implemented lineDash stroking.\n    //    In this case, lineDash information will not be saved in PathProxy\n\n    if (this.__dirtyPath || lineDash && !ctxLineDash && hasStroke) {\n      path.beginPath(ctx); // Setting line dash before build path\n\n      if (lineDash && !ctxLineDash) {\n        path.setLineDash(lineDash);\n        path.setLineDashOffset(lineDashOffset);\n      }\n\n      this.buildPath(path, this.shape, false); // Clear path dirty flag\n\n      if (this.path) {\n        this.__dirtyPath = false;\n      }\n    } else {\n      // Replay path building\n      ctx.beginPath();\n      this.path.rebuildPath(ctx);\n    }\n\n    hasFill && path.fill(ctx);\n\n    if (lineDash && ctxLineDash) {\n      ctx.setLineDash(lineDash);\n      ctx.lineDashOffset = lineDashOffset;\n    }\n\n    hasStroke && path.stroke(ctx);\n\n    if (lineDash && ctxLineDash) {\n      // PENDING\n      // Remove lineDash\n      ctx.setLineDash([]);\n    }\n\n    this.restoreTransform(ctx); // Draw rect text\n\n    if (style.text != null) {\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n  // Like in circle\n  buildPath: function (ctx, shapeCfg, inBundle) {},\n  createPathProxy: function () {\n    this.path = new PathProxy();\n  },\n  getBoundingRect: function () {\n    var rect = this._rect;\n    var style = this.style;\n    var needsUpdateRect = !rect;\n\n    if (needsUpdateRect) {\n      var path = this.path;\n\n      if (!path) {\n        // Create path on demand.\n        path = this.path = new PathProxy();\n      }\n\n      if (this.__dirtyPath) {\n        path.beginPath();\n        this.buildPath(path, this.shape, false);\n      }\n\n      rect = path.getBoundingRect();\n    }\n\n    this._rect = rect;\n\n    if (style.hasStroke()) {\n      // Needs update rect with stroke lineWidth when\n      // 1. Element changes scale or lineWidth\n      // 2. Shape is changed\n      var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n\n      if (this.__dirty || needsUpdateRect) {\n        rectWithStroke.copy(rect); // FIXME Must after updateTransform\n\n        var w = style.lineWidth; // PENDING, Min line width is needed when line is horizontal or vertical\n\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Only add extra hover lineWidth when there are no fill\n\n        if (!style.hasFill()) {\n          w = Math.max(w, this.strokeContainThreshold || 4);\n        } // Consider line width\n        // Line scale can't be 0;\n\n\n        if (lineScale > 1e-10) {\n          rectWithStroke.width += w / lineScale;\n          rectWithStroke.height += w / lineScale;\n          rectWithStroke.x -= w / lineScale / 2;\n          rectWithStroke.y -= w / lineScale / 2;\n        }\n      } // Return rect with stroke\n\n\n      return rectWithStroke;\n    }\n\n    return rect;\n  },\n  contain: function (x, y) {\n    var localPos = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    var style = this.style;\n    x = localPos[0];\n    y = localPos[1];\n\n    if (rect.contain(x, y)) {\n      var pathData = this.path.data;\n\n      if (style.hasStroke()) {\n        var lineWidth = style.lineWidth;\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Line scale can't be 0;\n\n        if (lineScale > 1e-10) {\n          // Only add extra hover lineWidth when there are no fill\n          if (!style.hasFill()) {\n            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n          }\n\n          if (pathContain.containStroke(pathData, lineWidth / lineScale, x, y)) {\n            return true;\n          }\n        }\n      }\n\n      if (style.hasFill()) {\n        return pathContain.contain(pathData, x, y);\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * @param  {boolean} dirtyPath\n   */\n  dirty: function (dirtyPath) {\n    if (dirtyPath == null) {\n      dirtyPath = true;\n    } // Only mark dirty, not mark clean\n\n\n    if (dirtyPath) {\n      this.__dirtyPath = dirtyPath;\n      this._rect = null;\n    }\n\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh(); // Used as a clipping path\n\n    if (this.__clipTarget) {\n      this.__clipTarget.dirty();\n    }\n  },\n\n  /**\n   * Alias for animate('shape')\n   * @param {boolean} loop\n   */\n  animateShape: function (loop) {\n    return this.animate('shape', loop);\n  },\n  // Overwrite attrKV\n  attrKV: function (key, value) {\n    // FIXME\n    if (key === 'shape') {\n      this.setShape(value);\n      this.__dirtyPath = true;\n      this._rect = null;\n    } else {\n      Displayable.prototype.attrKV.call(this, key, value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setShape: function (key, value) {\n    var shape = this.shape; // Path from string may not have shape\n\n    if (shape) {\n      if (zrUtil.isObject(key)) {\n        for (var name in key) {\n          if (key.hasOwnProperty(name)) {\n            shape[name] = key[name];\n          }\n        }\n      } else {\n        shape[key] = value;\n      }\n\n      this.dirty(true);\n    }\n\n    return this;\n  },\n  getLineScale: function () {\n    var m = this.transform; // Get the line scale.\n    // Determinant of `m` means how much the area is enlarged by the\n    // transformation. So its square root can be used as a scale factor\n    // for width.\n\n    return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10 ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1])) : 1;\n  }\n};\n/**\n * 扩展一个 Path element, 比如星形，圆等。\n * Extend a path element\n * @param {Object} props\n * @param {string} props.type Path type\n * @param {Function} props.init Initialize\n * @param {Function} props.buildPath Overwrite buildPath method\n * @param {Object} [props.style] Extended default style config\n * @param {Object} [props.shape] Extended default shape config\n */\n\nPath.extend = function (defaults) {\n  var Sub = function (opts) {\n    Path.call(this, opts);\n\n    if (defaults.style) {\n      // Extend default style\n      this.style.extendFrom(defaults.style, false);\n    } // Extend default shape\n\n\n    var defaultShape = defaults.shape;\n\n    if (defaultShape) {\n      this.shape = this.shape || {};\n      var thisShape = this.shape;\n\n      for (var name in defaultShape) {\n        if (!thisShape.hasOwnProperty(name) && defaultShape.hasOwnProperty(name)) {\n          thisShape[name] = defaultShape[name];\n        }\n      }\n    }\n\n    defaults.init && defaults.init.call(this, opts);\n  };\n\n  zrUtil.inherits(Sub, Path); // FIXME 不能 extend position, rotation 等引用对象\n\n  for (var name in defaults) {\n    // Extending prototype values and methods\n    if (name !== 'style' && name !== 'shape') {\n      Sub.prototype[name] = defaults[name];\n    }\n  }\n\n  return Sub;\n};\n\nzrUtil.inherits(Path, Displayable);\nvar _default = Path;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/Path.js\n// module id = 1037\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\nvar lineStyleMixin = require(\"./mixin/lineStyle\");\n\nvar areaStyleMixin = require(\"./mixin/areaStyle\");\n\nvar textStyleMixin = require(\"./mixin/textStyle\");\n\nvar itemStyleMixin = require(\"./mixin/itemStyle\");\n\n/**\n * @module echarts/model/Model\n */\nvar mixin = zrUtil.mixin;\n/**\n * @alias module:echarts/model/Model\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} [parentModel]\n * @param {module:echarts/model/Global} [ecModel]\n */\n\nfunction Model(option, parentModel, ecModel) {\n  /**\n   * @type {module:echarts/model/Model}\n   * @readOnly\n   */\n  this.parentModel = parentModel;\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n\n  this.ecModel = ecModel;\n  /**\n   * @type {Object}\n   * @protected\n   */\n\n  this.option = option; // Simple optimization\n  // if (this.init) {\n  //     if (arguments.length <= 4) {\n  //         this.init(option, parentModel, ecModel, extraOpt);\n  //     }\n  //     else {\n  //         this.init.apply(this, arguments);\n  //     }\n  // }\n}\n\nModel.prototype = {\n  constructor: Model,\n\n  /**\n   * Model 的初始化函数\n   * @param {Object} option\n   */\n  init: null,\n\n  /**\n   * 从新的 Option merge\n   */\n  mergeOption: function (option) {\n    zrUtil.merge(this.option, option, true);\n  },\n\n  /**\n   * @param {string|Array.<string>} path\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  get: function (path, ignoreParent) {\n    if (path == null) {\n      return this.option;\n    }\n\n    return doGet(this.option, this.parsePath(path), !ignoreParent && getParent(this, path));\n  },\n\n  /**\n   * @param {string} key\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  getShallow: function (key, ignoreParent) {\n    var option = this.option;\n    var val = option == null ? option : option[key];\n    var parentModel = !ignoreParent && getParent(this, key);\n\n    if (val == null && parentModel) {\n      val = parentModel.getShallow(key);\n    }\n\n    return val;\n  },\n\n  /**\n   * @param {string|Array.<string>} [path]\n   * @param {module:echarts/model/Model} [parentModel]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path, parentModel) {\n    var obj = path == null ? this.option : doGet(this.option, path = this.parsePath(path));\n    var thisParentModel;\n    parentModel = parentModel || (thisParentModel = getParent(this, path)) && thisParentModel.getModel(path);\n    return new Model(obj, parentModel, this.ecModel);\n  },\n\n  /**\n   * If model has option\n   */\n  isEmpty: function () {\n    return this.option == null;\n  },\n  restoreData: function () {},\n  // Pending\n  clone: function () {\n    var Ctor = this.constructor;\n    return new Ctor(zrUtil.clone(this.option));\n  },\n  setReadOnly: function (properties) {\n    clazzUtil.setReadOnly(this, properties);\n  },\n  // If path is null/undefined, return null/undefined.\n  parsePath: function (path) {\n    if (typeof path === 'string') {\n      path = path.split('.');\n    }\n\n    return path;\n  },\n\n  /**\n   * @param {Function} getParentMethod\n   *        param {Array.<string>|string} path\n   *        return {module:echarts/model/Model}\n   */\n  customizeGetParent: function (getParentMethod) {\n    clazzUtil.set(this, 'getParent', getParentMethod);\n  },\n  isAnimationEnabled: function () {\n    if (!env.node) {\n      if (this.option.animation != null) {\n        return !!this.option.animation;\n      } else if (this.parentModel) {\n        return this.parentModel.isAnimationEnabled();\n      }\n    }\n  }\n};\n\nfunction doGet(obj, pathArr, parentModel) {\n  for (var i = 0; i < pathArr.length; i++) {\n    // Ignore empty\n    if (!pathArr[i]) {\n      continue;\n    } // obj could be number/string/... (like 0)\n\n\n    obj = obj && typeof obj === 'object' ? obj[pathArr[i]] : null;\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  if (obj == null && parentModel) {\n    obj = parentModel.get(pathArr);\n  }\n\n  return obj;\n} // `path` can be null/undefined\n\n\nfunction getParent(model, path) {\n  var getParentMethod = clazzUtil.get(model, 'getParent');\n  return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n} // Enable Model.extend.\n\n\nclazzUtil.enableClassExtend(Model);\nmixin(Model, lineStyleMixin);\nmixin(Model, areaStyleMixin);\nmixin(Model, textStyleMixin);\nmixin(Model, itemStyleMixin);\nvar _default = Model;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/Model.js\n// module id = 1038\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _number = require(\"./number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar formatUtil = require(\"./format\");\n\n// Layout helpers for each component positioning\nvar each = zrUtil.each;\n/**\n * @public\n */\n\nvar LOCATION_PARAMS = ['left', 'right', 'top', 'bottom', 'width', 'height'];\n/**\n * @public\n */\n\nvar HV_NAMES = [['width', 'left', 'right'], ['height', 'top', 'bottom']];\n\nfunction boxLayout(orient, group, gap, maxWidth, maxHeight) {\n  var x = 0;\n  var y = 0;\n\n  if (maxWidth == null) {\n    maxWidth = Infinity;\n  }\n\n  if (maxHeight == null) {\n    maxHeight = Infinity;\n  }\n\n  var currentLineMaxSize = 0;\n  group.eachChild(function (child, idx) {\n    var position = child.position;\n    var rect = child.getBoundingRect();\n    var nextChild = group.childAt(idx + 1);\n    var nextChildRect = nextChild && nextChild.getBoundingRect();\n    var nextX;\n    var nextY;\n\n    if (orient === 'horizontal') {\n      var moveX = rect.width + (nextChildRect ? -nextChildRect.x + rect.x : 0);\n      nextX = x + moveX; // Wrap when width exceeds maxWidth or meet a `newline` group\n      // FIXME compare before adding gap?\n\n      if (nextX > maxWidth || child.newline) {\n        x = 0;\n        nextX = moveX;\n        y += currentLineMaxSize + gap;\n        currentLineMaxSize = rect.height;\n      } else {\n        // FIXME: consider rect.y is not `0`?\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n      }\n    } else {\n      var moveY = rect.height + (nextChildRect ? -nextChildRect.y + rect.y : 0);\n      nextY = y + moveY; // Wrap when width exceeds maxHeight or meet a `newline` group\n\n      if (nextY > maxHeight || child.newline) {\n        x += currentLineMaxSize + gap;\n        y = 0;\n        nextY = moveY;\n        currentLineMaxSize = rect.width;\n      } else {\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n      }\n    }\n\n    if (child.newline) {\n      return;\n    }\n\n    position[0] = x;\n    position[1] = y;\n    orient === 'horizontal' ? x = nextX + gap : y = nextY + gap;\n  });\n}\n/**\n * VBox or HBox layouting\n * @param {string} orient\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\n\nvar box = boxLayout;\n/**\n * VBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar vbox = zrUtil.curry(boxLayout, 'vertical');\n/**\n * HBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar hbox = zrUtil.curry(boxLayout, 'horizontal');\n/**\n * If x or x2 is not specified or 'center' 'left' 'right',\n * the width would be as long as possible.\n * If y or y2 is not specified or 'middle' 'top' 'bottom',\n * the height would be as long as possible.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.x]\n * @param {number|string} [positionInfo.y]\n * @param {number|string} [positionInfo.x2]\n * @param {number|string} [positionInfo.y2]\n * @param {Object} containerRect {width, height}\n * @param {string|number} margin\n * @return {Object} {width, height}\n */\n\nfunction getAvailableSize(positionInfo, containerRect, margin) {\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var x = parsePercent(positionInfo.x, containerWidth);\n  var y = parsePercent(positionInfo.y, containerHeight);\n  var x2 = parsePercent(positionInfo.x2, containerWidth);\n  var y2 = parsePercent(positionInfo.y2, containerHeight);\n  (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n  (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n  (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n  (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  return {\n    width: Math.max(x2 - x - margin[1] - margin[3], 0),\n    height: Math.max(y2 - y - margin[0] - margin[2], 0)\n  };\n}\n/**\n * Parse position info.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width]\n * @param {number|string} [positionInfo.height]\n * @param {number|string} [positionInfo.aspect] Aspect is width / height\n * @param {Object} containerRect\n * @param {string|number} [margin]\n *\n * @return {module:zrender/core/BoundingRect}\n */\n\n\nfunction getLayoutRect(positionInfo, containerRect, margin) {\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var left = parsePercent(positionInfo.left, containerWidth);\n  var top = parsePercent(positionInfo.top, containerHeight);\n  var right = parsePercent(positionInfo.right, containerWidth);\n  var bottom = parsePercent(positionInfo.bottom, containerHeight);\n  var width = parsePercent(positionInfo.width, containerWidth);\n  var height = parsePercent(positionInfo.height, containerHeight);\n  var verticalMargin = margin[2] + margin[0];\n  var horizontalMargin = margin[1] + margin[3];\n  var aspect = positionInfo.aspect; // If width is not specified, calculate width from left and right\n\n  if (isNaN(width)) {\n    width = containerWidth - right - horizontalMargin - left;\n  }\n\n  if (isNaN(height)) {\n    height = containerHeight - bottom - verticalMargin - top;\n  }\n\n  if (aspect != null) {\n    // If width and height are not given\n    // 1. Graph should not exceeds the container\n    // 2. Aspect must be keeped\n    // 3. Graph should take the space as more as possible\n    // FIXME\n    // Margin is not considered, because there is no case that both\n    // using margin and aspect so far.\n    if (isNaN(width) && isNaN(height)) {\n      if (aspect > containerWidth / containerHeight) {\n        width = containerWidth * 0.8;\n      } else {\n        height = containerHeight * 0.8;\n      }\n    } // Calculate width or height with given aspect\n\n\n    if (isNaN(width)) {\n      width = aspect * height;\n    }\n\n    if (isNaN(height)) {\n      height = width / aspect;\n    }\n  } // If left is not specified, calculate left from right and width\n\n\n  if (isNaN(left)) {\n    left = containerWidth - right - width - horizontalMargin;\n  }\n\n  if (isNaN(top)) {\n    top = containerHeight - bottom - height - verticalMargin;\n  } // Align left and top\n\n\n  switch (positionInfo.left || positionInfo.right) {\n    case 'center':\n      left = containerWidth / 2 - width / 2 - margin[3];\n      break;\n\n    case 'right':\n      left = containerWidth - width - horizontalMargin;\n      break;\n  }\n\n  switch (positionInfo.top || positionInfo.bottom) {\n    case 'middle':\n    case 'center':\n      top = containerHeight / 2 - height / 2 - margin[0];\n      break;\n\n    case 'bottom':\n      top = containerHeight - height - verticalMargin;\n      break;\n  } // If something is wrong and left, top, width, height are calculated as NaN\n\n\n  left = left || 0;\n  top = top || 0;\n\n  if (isNaN(width)) {\n    // Width may be NaN if only one value is given except width\n    width = containerWidth - horizontalMargin - left - (right || 0);\n  }\n\n  if (isNaN(height)) {\n    // Height may be NaN if only one value is given except height\n    height = containerHeight - verticalMargin - top - (bottom || 0);\n  }\n\n  var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n  rect.margin = margin;\n  return rect;\n}\n/**\n * Position a zr element in viewport\n *  Group position is specified by either\n *  {left, top}, {right, bottom}\n *  If all properties exists, right and bottom will be igonred.\n *\n * Logic:\n *     1. Scale (against origin point in parent coord)\n *     2. Rotate (against origin point in parent coord)\n *     3. Traslate (with el.position by this method)\n * So this method only fixes the last step 'Traslate', which does not affect\n * scaling and rotating.\n *\n * If be called repeatly with the same input el, the same result will be gotten.\n *\n * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width] Only for opt.boundingModel: 'raw'\n * @param {number|string} [positionInfo.height] Only for opt.boundingModel: 'raw'\n * @param {Object} containerRect\n * @param {string|number} margin\n * @param {Object} [opt]\n * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n * @param {Array.<number>} [opt.boundingMode='all']\n *        Specify how to calculate boundingRect when locating.\n *        'all': Position the boundingRect that is transformed and uioned\n *               both itself and its descendants.\n *               This mode simplies confine the elements in the bounding\n *               of their container (e.g., using 'right: 0').\n *        'raw': Position the boundingRect that is not transformed and only itself.\n *               This mode is useful when you want a element can overflow its\n *               container. (Consider a rotated circle needs to be located in a corner.)\n *               In this mode positionInfo.width/height can only be number.\n */\n\n\nfunction positionElement(el, positionInfo, containerRect, margin, opt) {\n  var h = !opt || !opt.hv || opt.hv[0];\n  var v = !opt || !opt.hv || opt.hv[1];\n  var boundingMode = opt && opt.boundingMode || 'all';\n\n  if (!h && !v) {\n    return;\n  }\n\n  var rect;\n\n  if (boundingMode === 'raw') {\n    rect = el.type === 'group' ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0) : el.getBoundingRect();\n  } else {\n    rect = el.getBoundingRect();\n\n    if (el.needLocalTransform()) {\n      var transform = el.getLocalTransform(); // Notice: raw rect may be inner object of el,\n      // which should not be modified.\n\n      rect = rect.clone();\n      rect.applyTransform(transform);\n    }\n  } // The real width and height can not be specified but calculated by the given el.\n\n\n  positionInfo = getLayoutRect(zrUtil.defaults({\n    width: rect.width,\n    height: rect.height\n  }, positionInfo), containerRect, margin); // Because 'tranlate' is the last step in transform\n  // (see zrender/core/Transformable#getLocalTransfrom),\n  // we can just only modify el.position to get final result.\n\n  var elPos = el.position;\n  var dx = h ? positionInfo.x - rect.x : 0;\n  var dy = v ? positionInfo.y - rect.y : 0;\n  el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n}\n/**\n * @param {Object} option Contains some of the properties in HV_NAMES.\n * @param {number} hvIdx 0: horizontal; 1: vertical.\n */\n\n\nfunction sizeCalculable(option, hvIdx) {\n  return option[HV_NAMES[hvIdx][0]] != null || option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null;\n}\n/**\n * Consider Case:\n * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n * through setOption or media query, using normal zrUtil.merge will cause\n * {right: 0} does not take effect.\n *\n * @example\n * ComponentModel.extend({\n *     init: function () {\n *         ...\n *         var inputPositionParams = layout.getLayoutParams(option);\n *         this.mergeOption(inputPositionParams);\n *     },\n *     mergeOption: function (newOption) {\n *         newOption && zrUtil.merge(thisOption, newOption, true);\n *         layout.mergeLayoutParam(thisOption, newOption);\n *     }\n * });\n *\n * @param {Object} targetOption\n * @param {Object} newOption\n * @param {Object|string} [opt]\n * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Used for the components\n *  that width (or height) should not be calculated by left and right (or top and bottom).\n */\n\n\nfunction mergeLayoutParam(targetOption, newOption, opt) {\n  !zrUtil.isObject(opt) && (opt = {});\n  var ignoreSize = opt.ignoreSize;\n  !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n  var hResult = merge(HV_NAMES[0], 0);\n  var vResult = merge(HV_NAMES[1], 1);\n  copy(HV_NAMES[0], targetOption, hResult);\n  copy(HV_NAMES[1], targetOption, vResult);\n\n  function merge(names, hvIdx) {\n    var newParams = {};\n    var newValueCount = 0;\n    var merged = {};\n    var mergedValueCount = 0;\n    var enoughParamNumber = 2;\n    each(names, function (name) {\n      merged[name] = targetOption[name];\n    });\n    each(names, function (name) {\n      // Consider case: newOption.width is null, which is\n      // set by user for removing width setting.\n      hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n      hasValue(newParams, name) && newValueCount++;\n      hasValue(merged, name) && mergedValueCount++;\n    });\n\n    if (ignoreSize[hvIdx]) {\n      // Only one of left/right is premitted to exist.\n      if (hasValue(newOption, names[1])) {\n        merged[names[2]] = null;\n      } else if (hasValue(newOption, names[2])) {\n        merged[names[1]] = null;\n      }\n\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // or targetOption: {right: ...} and newOption: {width: ...},\n    // There is no conflict when merged only has params count\n    // little than enoughParamNumber.\n\n\n    if (mergedValueCount === enoughParamNumber || !newValueCount) {\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // Than we can make sure user only want those two, and ignore\n    // all origin params in targetOption.\n    else if (newValueCount >= enoughParamNumber) {\n        return newParams;\n      } else {\n        // Chose another param from targetOption by priority.\n        for (var i = 0; i < names.length; i++) {\n          var name = names[i];\n\n          if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n            newParams[name] = targetOption[name];\n            break;\n          }\n        }\n\n        return newParams;\n      }\n  }\n\n  function hasProp(obj, name) {\n    return obj.hasOwnProperty(name);\n  }\n\n  function hasValue(obj, name) {\n    return obj[name] != null && obj[name] !== 'auto';\n  }\n\n  function copy(names, target, source) {\n    each(names, function (name) {\n      target[name] = source[name];\n    });\n  }\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction getLayoutParams(source) {\n  return copyLayoutParams({}, source);\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction copyLayoutParams(target, source) {\n  source && target && each(LOCATION_PARAMS, function (name) {\n    source.hasOwnProperty(name) && (target[name] = source[name]);\n  });\n  return target;\n}\n\nexports.LOCATION_PARAMS = LOCATION_PARAMS;\nexports.HV_NAMES = HV_NAMES;\nexports.box = box;\nexports.vbox = vbox;\nexports.hbox = hbox;\nexports.getAvailableSize = getAvailableSize;\nexports.getLayoutRect = getLayoutRect;\nexports.positionElement = positionElement;\nexports.sizeCalculable = sizeCalculable;\nexports.mergeLayoutParam = mergeLayoutParam;\nexports.getLayoutParams = getLayoutParams;\nexports.copyLayoutParams = copyLayoutParams;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/layout.js\n// module id = 1039\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"./Model\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\nvar layout = require(\"../util/layout\");\n\nvar boxLayoutMixin = require(\"./mixin/boxLayout\");\n\n/**\n * Component model\n *\n * @module echarts/model/Component\n */\nvar arrayPush = Array.prototype.push;\n/**\n * @alias module:echarts/model/Component\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {module:echarts/model/Model} ecModel\n */\n\nvar ComponentModel = Model.extend({\n  type: 'component',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  id: '',\n\n  /**\n   * @readOnly\n   */\n  name: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  mainType: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  subType: '',\n\n  /**\n   * @readOnly\n   * @type {number}\n   */\n  componentIndex: 0,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n  ecModel: null,\n\n  /**\n   * key: componentType\n   * value:  Component model list, can not be null.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @readOnly\n   */\n  dependentModels: [],\n\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  uid: null,\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  $constructor: function (option, parentModel, ecModel, extraOpt) {\n    Model.call(this, option, parentModel, ecModel, extraOpt);\n    this.uid = componentUtil.getUID('componentModel');\n  },\n  init: function (option, parentModel, ecModel, extraOpt) {\n    this.mergeDefaultAndTheme(option, ecModel);\n  },\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? layout.getLayoutParams(option) : {};\n    var themeModel = ecModel.getTheme();\n    zrUtil.merge(option, themeModel.get(this.mainType));\n    zrUtil.merge(option, this.getDefaultOption());\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (option, extraOpt) {\n    zrUtil.merge(this.option, option, true);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(this.option, option, layoutMode);\n    }\n  },\n  // Hooker after init or mergeOption\n  optionUpdated: function (newCptOption, isInit) {},\n  getDefaultOption: function () {\n    if (!clazzUtil.hasOwn(this, '__defaultOption')) {\n      var optList = [];\n      var Class = this.constructor;\n\n      while (Class) {\n        var opt = Class.prototype.defaultOption;\n        opt && optList.push(opt);\n        Class = Class.superClass;\n      }\n\n      var defaultOption = {};\n\n      for (var i = optList.length - 1; i >= 0; i--) {\n        defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n      }\n\n      clazzUtil.set(this, '__defaultOption', defaultOption);\n    }\n\n    return clazzUtil.get(this, '__defaultOption');\n  },\n  getReferringComponents: function (mainType) {\n    return this.ecModel.queryComponents({\n      mainType: mainType,\n      index: this.get(mainType + 'Index', true),\n      id: this.get(mainType + 'Id', true)\n    });\n  }\n}); // Reset ComponentModel.extend, add preConstruct.\n// clazzUtil.enableClassExtend(\n//     ComponentModel,\n//     function (option, parentModel, ecModel, extraOpt) {\n//         // Set dependentModels, componentIndex, name, id, mainType, subType.\n//         zrUtil.extend(this, extraOpt);\n//         this.uid = componentUtil.getUID('componentModel');\n//         // this.setReadOnly([\n//         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n//         //     'dependentModels', 'componentIndex'\n//         // ]);\n//     }\n// );\n// Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(ComponentModel, {\n  registerWhenExtend: true\n});\ncomponentUtil.enableSubTypeDefaulter(ComponentModel); // Add capability of ComponentModel.topologicalTravel.\n\ncomponentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\nfunction getDependencies(componentType) {\n  var deps = [];\n  zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n    arrayPush.apply(deps, Clazz.prototype.dependencies || []);\n  }); // Ensure main type\n\n  return zrUtil.map(deps, function (type) {\n    return clazzUtil.parseClassType(type).main;\n  });\n}\n\nzrUtil.mixin(ComponentModel, boxLayoutMixin);\nvar _default = ComponentModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/Component.js\n// module id = 1040\n// module chunks = 0 1 2","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar TYPE_DELIMITER = '.';\nvar IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\nvar MEMBER_PRIFIX = '\\0ec_\\0';\n/**\n * Hide private class member.\n * The same behavior as `host[name] = value;` (can be right-value)\n * @public\n */\n\nfunction set(host, name, value) {\n  return host[MEMBER_PRIFIX + name] = value;\n}\n/**\n * Hide private class member.\n * The same behavior as `host[name];`\n * @public\n */\n\n\nfunction get(host, name) {\n  return host[MEMBER_PRIFIX + name];\n}\n/**\n * For hidden private class member.\n * The same behavior as `host.hasOwnProperty(name);`\n * @public\n */\n\n\nfunction hasOwn(host, name) {\n  return host.hasOwnProperty(MEMBER_PRIFIX + name);\n}\n/**\n * Notice, parseClassType('') should returns {main: '', sub: ''}\n * @public\n */\n\n\nfunction parseClassType(componentType) {\n  var ret = {\n    main: '',\n    sub: ''\n  };\n\n  if (componentType) {\n    componentType = componentType.split(TYPE_DELIMITER);\n    ret.main = componentType[0] || '';\n    ret.sub = componentType[1] || '';\n  }\n\n  return ret;\n}\n/**\n * @public\n */\n\n\nfunction checkClassType(componentType) {\n  zrUtil.assert(/^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType), 'componentType \"' + componentType + '\" illegal');\n}\n/**\n * @public\n */\n\n\nfunction enableClassExtend(RootClass, mandatoryMethods) {\n  RootClass.$constructor = RootClass;\n\n  RootClass.extend = function (proto) {\n    var superClass = this;\n\n    var ExtendedClass = function () {\n      if (!proto.$constructor) {\n        superClass.apply(this, arguments);\n      } else {\n        proto.$constructor.apply(this, arguments);\n      }\n    };\n\n    zrUtil.extend(ExtendedClass.prototype, proto);\n    ExtendedClass.extend = this.extend;\n    ExtendedClass.superCall = superCall;\n    ExtendedClass.superApply = superApply;\n    zrUtil.inherits(ExtendedClass, this);\n    ExtendedClass.superClass = superClass;\n    return ExtendedClass;\n  };\n} // superCall should have class info, which can not be fetch from 'this'.\n// Consider this case:\n// class A has method f,\n// class B inherits class A, overrides method f, f call superApply('f'),\n// class C inherits class B, do not overrides method f,\n// then when method of class C is called, dead loop occured.\n\n\nfunction superCall(context, methodName) {\n  var args = zrUtil.slice(arguments, 2);\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n\nfunction superApply(context, methodName, args) {\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n/**\n * @param {Object} entity\n * @param {Object} options\n * @param {boolean} [options.registerWhenExtend]\n * @public\n */\n\n\nfunction enableClassManagement(entity, options) {\n  options = options || {};\n  /**\n   * Component model classes\n   * key: componentType,\n   * value:\n   *     componentClass, when componentType is 'xxx'\n   *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n   * @type {Object}\n   */\n\n  var storage = {};\n\n  entity.registerClass = function (Clazz, componentType) {\n    if (componentType) {\n      checkClassType(componentType);\n      componentType = parseClassType(componentType);\n\n      if (!componentType.sub) {\n        storage[componentType.main] = Clazz;\n      } else if (componentType.sub !== IS_CONTAINER) {\n        var container = makeContainer(componentType);\n        container[componentType.sub] = Clazz;\n      }\n    }\n\n    return Clazz;\n  };\n\n  entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n    var Clazz = storage[componentMainType];\n\n    if (Clazz && Clazz[IS_CONTAINER]) {\n      Clazz = subType ? Clazz[subType] : null;\n    }\n\n    if (throwWhenNotFound && !Clazz) {\n      throw new Error(!subType ? componentMainType + '.' + 'type should be specified.' : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.');\n    }\n\n    return Clazz;\n  };\n\n  entity.getClassesByMainType = function (componentType) {\n    componentType = parseClassType(componentType);\n    var result = [];\n    var obj = storage[componentType.main];\n\n    if (obj && obj[IS_CONTAINER]) {\n      zrUtil.each(obj, function (o, type) {\n        type !== IS_CONTAINER && result.push(o);\n      });\n    } else {\n      result.push(obj);\n    }\n\n    return result;\n  };\n\n  entity.hasClass = function (componentType) {\n    // Just consider componentType.main.\n    componentType = parseClassType(componentType);\n    return !!storage[componentType.main];\n  };\n  /**\n   * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n   */\n\n\n  entity.getAllClassMainTypes = function () {\n    var types = [];\n    zrUtil.each(storage, function (obj, type) {\n      types.push(type);\n    });\n    return types;\n  };\n  /**\n   * If a main type is container and has sub types\n   * @param  {string}  mainType\n   * @return {boolean}\n   */\n\n\n  entity.hasSubTypes = function (componentType) {\n    componentType = parseClassType(componentType);\n    var obj = storage[componentType.main];\n    return obj && obj[IS_CONTAINER];\n  };\n\n  entity.parseClassType = parseClassType;\n\n  function makeContainer(componentType) {\n    var container = storage[componentType.main];\n\n    if (!container || !container[IS_CONTAINER]) {\n      container = storage[componentType.main] = {};\n      container[IS_CONTAINER] = true;\n    }\n\n    return container;\n  }\n\n  if (options.registerWhenExtend) {\n    var originalExtend = entity.extend;\n\n    if (originalExtend) {\n      entity.extend = function (proto) {\n        var ExtendedClass = originalExtend.call(this, proto);\n        return entity.registerClass(ExtendedClass, proto.type);\n      };\n    }\n  }\n\n  return entity;\n}\n/**\n * @param {string|Array.<string>} properties\n */\n\n\nfunction setReadOnly(obj, properties) {// FIXME It seems broken in IE8 simulation of IE11\n  // if (!zrUtil.isArray(properties)) {\n  //     properties = properties != null ? [properties] : [];\n  // }\n  // zrUtil.each(properties, function (prop) {\n  //     var value = obj[prop];\n  //     Object.defineProperty\n  //         && Object.defineProperty(obj, prop, {\n  //             value: value, writable: false\n  //         });\n  //     zrUtil.isArray(obj[prop])\n  //         && Object.freeze\n  //         && Object.freeze(obj[prop]);\n  // });\n}\n\nexports.set = set;\nexports.get = get;\nexports.hasOwn = hasOwn;\nexports.parseClassType = parseClassType;\nexports.enableClassExtend = enableClassExtend;\nexports.enableClassManagement = enableClassManagement;\nexports.setReadOnly = setReadOnly;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/clazz.js\n// module id = 1041\n// module chunks = 0 1 2","var BoundingRect = require(\"../core/BoundingRect\");\n\nvar imageHelper = require(\"../graphic/helper/image\");\n\nvar _util = require(\"../core/util\");\n\nvar getContext = _util.getContext;\nvar extend = _util.extend;\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar textWidthCache = {};\nvar textWidthCacheCounter = 0;\nvar TEXT_CACHE_MAX = 5000;\nvar STYLE_REG = /\\{([a-zA-Z0-9_]+)\\|([^}]*)\\}/g;\nvar DEFAULT_FONT = '12px sans-serif'; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  methods[name] = fn;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {number} width\n */\n\n\nfunction getWidth(text, font) {\n  font = font || DEFAULT_FONT;\n  var key = text + ':' + font;\n\n  if (textWidthCache[key]) {\n    return textWidthCache[key];\n  }\n\n  var textLines = (text + '').split('\\n');\n  var width = 0;\n\n  for (var i = 0, l = textLines.length; i < l; i++) {\n    // textContain.measureText may be overrided in SVG or VML\n    width = Math.max(measureText(textLines[i], font).width, width);\n  }\n\n  if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n    textWidthCacheCounter = 0;\n    textWidthCache = {};\n  }\n\n  textWidthCacheCounter++;\n  textWidthCache[key] = width;\n  return width;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {string} [textAlign='left']\n * @param {string} [textVerticalAlign='top']\n * @param {Array.<number>} [textPadding]\n * @param {Object} [rich]\n * @param {Object} [truncate]\n * @return {Object} {x, y, width, height, lineHeight}\n */\n\n\nfunction getBoundingRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  return rich ? getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) : getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate);\n}\n\nfunction getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate) {\n  var contentBlock = parsePlainText(text, font, textPadding, truncate);\n  var outerWidth = getWidth(text, font);\n\n  if (textPadding) {\n    outerWidth += textPadding[1] + textPadding[3];\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  var rect = new BoundingRect(x, y, outerWidth, outerHeight);\n  rect.lineHeight = contentBlock.lineHeight;\n  return rect;\n}\n\nfunction getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  var contentBlock = parseRichText(text, {\n    rich: rich,\n    truncate: truncate,\n    font: font,\n    textAlign: textAlign,\n    textPadding: textPadding\n  });\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  return new BoundingRect(x, y, outerWidth, outerHeight);\n}\n/**\n * @public\n * @param {number} x\n * @param {number} width\n * @param {string} [textAlign='left']\n * @return {number} Adjusted x.\n */\n\n\nfunction adjustTextX(x, width, textAlign) {\n  // FIXME Right to left language\n  if (textAlign === 'right') {\n    x -= width;\n  } else if (textAlign === 'center') {\n    x -= width / 2;\n  }\n\n  return x;\n}\n/**\n * @public\n * @param {number} y\n * @param {number} height\n * @param {string} [textVerticalAlign='top']\n * @return {number} Adjusted y.\n */\n\n\nfunction adjustTextY(y, height, textVerticalAlign) {\n  if (textVerticalAlign === 'middle') {\n    y -= height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y -= height;\n  }\n\n  return y;\n}\n/**\n * @public\n * @param {stirng} textPosition\n * @param {Object} rect {x, y, width, height}\n * @param {number} distance\n * @return {Object} {x, y, textAlign, textVerticalAlign}\n */\n\n\nfunction adjustTextPositionOnRect(textPosition, rect, distance) {\n  var x = rect.x;\n  var y = rect.y;\n  var height = rect.height;\n  var width = rect.width;\n  var halfHeight = height / 2;\n  var textAlign = 'left';\n  var textVerticalAlign = 'top';\n\n  switch (textPosition) {\n    case 'left':\n      x -= distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'right':\n      x += distance + width;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'top':\n      x += width / 2;\n      y -= distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'bottom':\n      x += width / 2;\n      y += height + distance;\n      textAlign = 'center';\n      break;\n\n    case 'inside':\n      x += width / 2;\n      y += halfHeight;\n      textAlign = 'center';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideLeft':\n      x += distance;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideRight':\n      x += width - distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideTop':\n      x += width / 2;\n      y += distance;\n      textAlign = 'center';\n      break;\n\n    case 'insideBottom':\n      x += width / 2;\n      y += height - distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideTopLeft':\n      x += distance;\n      y += distance;\n      break;\n\n    case 'insideTopRight':\n      x += width - distance;\n      y += distance;\n      textAlign = 'right';\n      break;\n\n    case 'insideBottomLeft':\n      x += distance;\n      y += height - distance;\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideBottomRight':\n      x += width - distance;\n      y += height - distance;\n      textAlign = 'right';\n      textVerticalAlign = 'bottom';\n      break;\n  }\n\n  return {\n    x: x,\n    y: y,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n/**\n * Show ellipsis if overflow.\n *\n * @public\n * @param  {string} text\n * @param  {string} containerWidth\n * @param  {string} font\n * @param  {number} [ellipsis='...']\n * @param  {Object} [options]\n * @param  {number} [options.maxIterations=3]\n * @param  {number} [options.minChar=0] If truncate result are less\n *                  then minChar, ellipsis will not show, which is\n *                  better for user hint in some cases.\n * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n * @return {string}\n */\n\n\nfunction truncateText(text, containerWidth, font, ellipsis, options) {\n  if (!containerWidth) {\n    return '';\n  }\n\n  var textLines = (text + '').split('\\n');\n  options = prepareTruncateOptions(containerWidth, font, ellipsis, options); // FIXME\n  // It is not appropriate that every line has '...' when truncate multiple lines.\n\n  for (var i = 0, len = textLines.length; i < len; i++) {\n    textLines[i] = truncateSingleLine(textLines[i], options);\n  }\n\n  return textLines.join('\\n');\n}\n\nfunction prepareTruncateOptions(containerWidth, font, ellipsis, options) {\n  options = extend({}, options);\n  options.font = font;\n  var ellipsis = retrieve2(ellipsis, '...');\n  options.maxIterations = retrieve2(options.maxIterations, 2);\n  var minChar = options.minChar = retrieve2(options.minChar, 0); // FIXME\n  // Other languages?\n\n  options.cnCharWidth = getWidth('国', font); // FIXME\n  // Consider proportional font?\n\n  var ascCharWidth = options.ascCharWidth = getWidth('a', font);\n  options.placeholder = retrieve2(options.placeholder, ''); // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n  // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n\n  var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n\n  for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n    contentWidth -= ascCharWidth;\n  }\n\n  var ellipsisWidth = getWidth(ellipsis);\n\n  if (ellipsisWidth > contentWidth) {\n    ellipsis = '';\n    ellipsisWidth = 0;\n  }\n\n  contentWidth = containerWidth - ellipsisWidth;\n  options.ellipsis = ellipsis;\n  options.ellipsisWidth = ellipsisWidth;\n  options.contentWidth = contentWidth;\n  options.containerWidth = containerWidth;\n  return options;\n}\n\nfunction truncateSingleLine(textLine, options) {\n  var containerWidth = options.containerWidth;\n  var font = options.font;\n  var contentWidth = options.contentWidth;\n\n  if (!containerWidth) {\n    return '';\n  }\n\n  var lineWidth = getWidth(textLine, font);\n\n  if (lineWidth <= containerWidth) {\n    return textLine;\n  }\n\n  for (var j = 0;; j++) {\n    if (lineWidth <= contentWidth || j >= options.maxIterations) {\n      textLine += options.ellipsis;\n      break;\n    }\n\n    var subLength = j === 0 ? estimateLength(textLine, contentWidth, options.ascCharWidth, options.cnCharWidth) : lineWidth > 0 ? Math.floor(textLine.length * contentWidth / lineWidth) : 0;\n    textLine = textLine.substr(0, subLength);\n    lineWidth = getWidth(textLine, font);\n  }\n\n  if (textLine === '') {\n    textLine = options.placeholder;\n  }\n\n  return textLine;\n}\n\nfunction estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n  var width = 0;\n  var i = 0;\n\n  for (var len = text.length; i < len && width < contentWidth; i++) {\n    var charCode = text.charCodeAt(i);\n    width += 0 <= charCode && charCode <= 127 ? ascCharWidth : cnCharWidth;\n  }\n\n  return i;\n}\n/**\n * @public\n * @param {string} font\n * @return {number} line height\n */\n\n\nfunction getLineHeight(font) {\n  // FIXME A rough approach.\n  return getWidth('国', font);\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {Object} width\n */\n\n\nfunction measureText(text, font) {\n  return methods.measureText(text, font);\n} // Avoid assign to an exported variable, for transforming to cjs.\n\n\nmethods.measureText = function (text, font) {\n  var ctx = getContext();\n  ctx.font = font || DEFAULT_FONT;\n  return ctx.measureText(text);\n};\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {Object} [truncate]\n * @return {Object} block: {lineHeight, lines, height, outerHeight}\n *  Notice: for performance, do not calculate outerWidth util needed.\n */\n\n\nfunction parsePlainText(text, font, padding, truncate) {\n  text != null && (text += '');\n  var lineHeight = getLineHeight(font);\n  var lines = text ? text.split('\\n') : [];\n  var height = lines.length * lineHeight;\n  var outerHeight = height;\n\n  if (padding) {\n    outerHeight += padding[0] + padding[2];\n  }\n\n  if (text && truncate) {\n    var truncOuterHeight = truncate.outerHeight;\n    var truncOuterWidth = truncate.outerWidth;\n\n    if (truncOuterHeight != null && outerHeight > truncOuterHeight) {\n      text = '';\n      lines = [];\n    } else if (truncOuterWidth != null) {\n      var options = prepareTruncateOptions(truncOuterWidth - (padding ? padding[1] + padding[3] : 0), font, truncate.ellipsis, {\n        minChar: truncate.minChar,\n        placeholder: truncate.placeholder\n      }); // FIXME\n      // It is not appropriate that every line has '...' when truncate multiple lines.\n\n      for (var i = 0, len = lines.length; i < len; i++) {\n        lines[i] = truncateSingleLine(lines[i], options);\n      }\n    }\n  }\n\n  return {\n    lines: lines,\n    height: height,\n    outerHeight: outerHeight,\n    lineHeight: lineHeight\n  };\n}\n/**\n * For example: 'some text {a|some text}other text{b|some text}xxx{c|}xxx'\n * Also consider 'bbbb{a|xxx\\nzzz}xxxx\\naaaa'.\n *\n * @public\n * @param {string} text\n * @param {Object} style\n * @return {Object} block\n * {\n *      width,\n *      height,\n *      lines: [{\n *          lineHeight,\n *          width,\n *          tokens: [[{\n *              styleName,\n *              text,\n *              width,      // include textPadding\n *              height,     // include textPadding\n *              textWidth, // pure text width\n *              textHeight, // pure text height\n *              lineHeihgt,\n *              font,\n *              textAlign,\n *              textVerticalAlign\n *          }], [...], ...]\n *      }, ...]\n * }\n * If styleName is undefined, it is plain text.\n */\n\n\nfunction parseRichText(text, style) {\n  var contentBlock = {\n    lines: [],\n    width: 0,\n    height: 0\n  };\n  text != null && (text += '');\n\n  if (!text) {\n    return contentBlock;\n  }\n\n  var lastIndex = STYLE_REG.lastIndex = 0;\n  var result;\n\n  while ((result = STYLE_REG.exec(text)) != null) {\n    var matchedIndex = result.index;\n\n    if (matchedIndex > lastIndex) {\n      pushTokens(contentBlock, text.substring(lastIndex, matchedIndex));\n    }\n\n    pushTokens(contentBlock, result[2], result[1]);\n    lastIndex = STYLE_REG.lastIndex;\n  }\n\n  if (lastIndex < text.length) {\n    pushTokens(contentBlock, text.substring(lastIndex, text.length));\n  }\n\n  var lines = contentBlock.lines;\n  var contentHeight = 0;\n  var contentWidth = 0; // For `textWidth: 100%`\n\n  var pendingList = [];\n  var stlPadding = style.textPadding;\n  var truncate = style.truncate;\n  var truncateWidth = truncate && truncate.outerWidth;\n  var truncateHeight = truncate && truncate.outerHeight;\n\n  if (stlPadding) {\n    truncateWidth != null && (truncateWidth -= stlPadding[1] + stlPadding[3]);\n    truncateHeight != null && (truncateHeight -= stlPadding[0] + stlPadding[2]);\n  } // Calculate layout info of tokens.\n\n\n  for (var i = 0; i < lines.length; i++) {\n    var line = lines[i];\n    var lineHeight = 0;\n    var lineWidth = 0;\n\n    for (var j = 0; j < line.tokens.length; j++) {\n      var token = line.tokens[j];\n      var tokenStyle = token.styleName && style.rich[token.styleName] || {}; // textPadding should not inherit from style.\n\n      var textPadding = token.textPadding = tokenStyle.textPadding; // textFont has been asigned to font by `normalizeStyle`.\n\n      var font = token.font = tokenStyle.font || style.font; // textHeight can be used when textVerticalAlign is specified in token.\n\n      var tokenHeight = token.textHeight = retrieve2( // textHeight should not be inherited, consider it can be specified\n      // as box height of the block.\n      tokenStyle.textHeight, getLineHeight(font));\n      textPadding && (tokenHeight += textPadding[0] + textPadding[2]);\n      token.height = tokenHeight;\n      token.lineHeight = retrieve3(tokenStyle.textLineHeight, style.textLineHeight, tokenHeight);\n      token.textAlign = tokenStyle && tokenStyle.textAlign || style.textAlign;\n      token.textVerticalAlign = tokenStyle && tokenStyle.textVerticalAlign || 'middle';\n\n      if (truncateHeight != null && contentHeight + token.lineHeight > truncateHeight) {\n        return {\n          lines: [],\n          width: 0,\n          height: 0\n        };\n      }\n\n      token.textWidth = getWidth(token.text, font);\n      var tokenWidth = tokenStyle.textWidth;\n      var tokenWidthNotSpecified = tokenWidth == null || tokenWidth === 'auto'; // Percent width, can be `100%`, can be used in drawing separate\n      // line when box width is needed to be auto.\n\n      if (typeof tokenWidth === 'string' && tokenWidth.charAt(tokenWidth.length - 1) === '%') {\n        token.percentWidth = tokenWidth;\n        pendingList.push(token);\n        tokenWidth = 0; // Do not truncate in this case, because there is no user case\n        // and it is too complicated.\n      } else {\n        if (tokenWidthNotSpecified) {\n          tokenWidth = token.textWidth; // FIXME: If image is not loaded and textWidth is not specified, calling\n          // `getBoundingRect()` will not get correct result.\n\n          var textBackgroundColor = tokenStyle.textBackgroundColor;\n          var bgImg = textBackgroundColor && textBackgroundColor.image; // Use cases:\n          // (1) If image is not loaded, it will be loaded at render phase and call\n          // `dirty()` and `textBackgroundColor.image` will be replaced with the loaded\n          // image, and then the right size will be calculated here at the next tick.\n          // See `graphic/helper/text.js`.\n          // (2) If image loaded, and `textBackgroundColor.image` is image src string,\n          // use `imageHelper.findExistImage` to find cached image.\n          // `imageHelper.findExistImage` will always be called here before\n          // `imageHelper.createOrUpdateImage` in `graphic/helper/text.js#renderRichText`\n          // which ensures that image will not be rendered before correct size calcualted.\n\n          if (bgImg) {\n            bgImg = imageHelper.findExistImage(bgImg);\n\n            if (imageHelper.isImageReady(bgImg)) {\n              tokenWidth = Math.max(tokenWidth, bgImg.width * tokenHeight / bgImg.height);\n            }\n          }\n        }\n\n        var paddingW = textPadding ? textPadding[1] + textPadding[3] : 0;\n        tokenWidth += paddingW;\n        var remianTruncWidth = truncateWidth != null ? truncateWidth - lineWidth : null;\n\n        if (remianTruncWidth != null && remianTruncWidth < tokenWidth) {\n          if (!tokenWidthNotSpecified || remianTruncWidth < paddingW) {\n            token.text = '';\n            token.textWidth = tokenWidth = 0;\n          } else {\n            token.text = truncateText(token.text, remianTruncWidth - paddingW, font, truncate.ellipsis, {\n              minChar: truncate.minChar\n            });\n            token.textWidth = getWidth(token.text, font);\n            tokenWidth = token.textWidth + paddingW;\n          }\n        }\n      }\n\n      lineWidth += token.width = tokenWidth;\n      tokenStyle && (lineHeight = Math.max(lineHeight, token.lineHeight));\n    }\n\n    line.width = lineWidth;\n    line.lineHeight = lineHeight;\n    contentHeight += lineHeight;\n    contentWidth = Math.max(contentWidth, lineWidth);\n  }\n\n  contentBlock.outerWidth = contentBlock.width = retrieve2(style.textWidth, contentWidth);\n  contentBlock.outerHeight = contentBlock.height = retrieve2(style.textHeight, contentHeight);\n\n  if (stlPadding) {\n    contentBlock.outerWidth += stlPadding[1] + stlPadding[3];\n    contentBlock.outerHeight += stlPadding[0] + stlPadding[2];\n  }\n\n  for (var i = 0; i < pendingList.length; i++) {\n    var token = pendingList[i];\n    var percentWidth = token.percentWidth; // Should not base on outerWidth, because token can not be placed out of padding.\n\n    token.width = parseInt(percentWidth, 10) / 100 * contentWidth;\n  }\n\n  return contentBlock;\n}\n\nfunction pushTokens(block, str, styleName) {\n  var isEmptyStr = str === '';\n  var strs = str.split('\\n');\n  var lines = block.lines;\n\n  for (var i = 0; i < strs.length; i++) {\n    var text = strs[i];\n    var token = {\n      styleName: styleName,\n      text: text,\n      isLineHolder: !text && !isEmptyStr\n    }; // The first token should be appended to the last line.\n\n    if (!i) {\n      var tokens = (lines[lines.length - 1] || (lines[0] = {\n        tokens: []\n      })).tokens; // Consider cases:\n      // (1) ''.split('\\n') => ['', '\\n', ''], the '' at the first item\n      // (which is a placeholder) should be replaced by new token.\n      // (2) A image backage, where token likes {a|}.\n      // (3) A redundant '' will affect textAlign in line.\n      // (4) tokens with the same tplName should not be merged, because\n      // they should be displayed in different box (with border and padding).\n\n      var tokensLen = tokens.length;\n      tokensLen === 1 && tokens[0].isLineHolder ? tokens[0] = token : // Consider text is '', only insert when it is the \"lineHolder\" or\n      // \"emptyStr\". Otherwise a redundant '' will affect textAlign in line.\n      (text || !tokensLen || isEmptyStr) && tokens.push(token);\n    } // Other tokens always start a new line.\n    else {\n        // If there is '', insert it as a placeholder.\n        lines.push({\n          tokens: [token]\n        });\n      }\n  }\n}\n\nfunction makeFont(style) {\n  // FIXME in node-canvas fontWeight is before fontStyle\n  // Use `fontSize` `fontFamily` to check whether font properties are defined.\n  return (style.fontSize || style.fontFamily) && [style.fontStyle, style.fontWeight, (style.fontSize || 12) + 'px', // If font properties are defined, `fontFamily` should not be ignored.\n  style.fontFamily || 'sans-serif'].join(' ') || style.textFont || style.font;\n}\n\nexports.DEFAULT_FONT = DEFAULT_FONT;\nexports.$override = $override;\nexports.getWidth = getWidth;\nexports.getBoundingRect = getBoundingRect;\nexports.adjustTextX = adjustTextX;\nexports.adjustTextY = adjustTextY;\nexports.adjustTextPositionOnRect = adjustTextPositionOnRect;\nexports.truncateText = truncateText;\nexports.getLineHeight = getLineHeight;\nexports.measureText = measureText;\nexports.parsePlainText = parsePlainText;\nexports.parseRichText = parseRichText;\nexports.makeFont = makeFont;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/contain/text.js\n// module id = 1042\n// module chunks = 0 1 2","/**\n * 3x2矩阵操作类\n * @exports zrender/tool/matrix\n */\nvar ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * 创建一个单位矩阵\n * @return {Float32Array|Array.<number>}\n */\n\nfunction create() {\n  var out = new ArrayCtor(6);\n  identity(out);\n  return out;\n}\n/**\n * 设置矩阵为单位矩阵\n * @param {Float32Array|Array.<number>} out\n */\n\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * 复制矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m\n */\n\n\nfunction copy(out, m) {\n  out[0] = m[0];\n  out[1] = m[1];\n  out[2] = m[2];\n  out[3] = m[3];\n  out[4] = m[4];\n  out[5] = m[5];\n  return out;\n}\n/**\n * 矩阵相乘\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m1\n * @param {Float32Array|Array.<number>} m2\n */\n\n\nfunction mul(out, m1, m2) {\n  // Consider matrix.mul(m, m2, m);\n  // where out is the same as m2.\n  // So use temp variable to escape error.\n  var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n  var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n  var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n  var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n  var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n  var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = out3;\n  out[4] = out4;\n  out[5] = out5;\n  return out;\n}\n/**\n * 平移变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction translate(out, a, v) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4] + v[0];\n  out[5] = a[5] + v[1];\n  return out;\n}\n/**\n * 旋转变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {number} rad\n */\n\n\nfunction rotate(out, a, rad) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var st = Math.sin(rad);\n  var ct = Math.cos(rad);\n  out[0] = aa * ct + ab * st;\n  out[1] = -aa * st + ab * ct;\n  out[2] = ac * ct + ad * st;\n  out[3] = -ac * st + ct * ad;\n  out[4] = ct * atx + st * aty;\n  out[5] = ct * aty - st * atx;\n  return out;\n}\n/**\n * 缩放变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction scale(out, a, v) {\n  var vx = v[0];\n  var vy = v[1];\n  out[0] = a[0] * vx;\n  out[1] = a[1] * vy;\n  out[2] = a[2] * vx;\n  out[3] = a[3] * vy;\n  out[4] = a[4] * vx;\n  out[5] = a[5] * vy;\n  return out;\n}\n/**\n * 求逆矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n */\n\n\nfunction invert(out, a) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var det = aa * ad - ab * ac;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n\nexports.create = create;\nexports.identity = identity;\nexports.copy = copy;\nexports.mul = mul;\nexports.translate = translate;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.invert = invert;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/matrix.js\n// module id = 1043\n// module chunks = 0 1 2","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../model/Model\");\n\nvar DataDiffer = require(\"./DataDiffer\");\n\nvar modelUtil = require(\"../util/model\");\n\n/**\n * List for data storage\n * @module echarts/data/List\n */\nvar isObject = zrUtil.isObject;\nvar UNDEFINED = 'undefined';\nvar globalObj = typeof window === UNDEFINED ? global : window;\nvar dataCtors = {\n  'float': typeof globalObj.Float64Array === UNDEFINED ? Array : globalObj.Float64Array,\n  'int': typeof globalObj.Int32Array === UNDEFINED ? Array : globalObj.Int32Array,\n  // Ordinal data type can be string or int\n  'ordinal': Array,\n  'number': Array,\n  'time': Array\n};\nvar TRANSFERABLE_PROPERTIES = ['stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'];\n\nfunction transferProperties(a, b) {\n  zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n    if (b.hasOwnProperty(propName)) {\n      a[propName] = b[propName];\n    }\n  });\n  a.__wrappedMethods = b.__wrappedMethods;\n}\n\nfunction DefaultDataProvider(dataArray) {\n  this._array = dataArray || [];\n}\n\nDefaultDataProvider.prototype.pure = false;\n\nDefaultDataProvider.prototype.count = function () {\n  return this._array.length;\n};\n\nDefaultDataProvider.prototype.getItem = function (idx) {\n  return this._array[idx];\n};\n/**\n * @constructor\n * @alias module:echarts/data/List\n *\n * @param {Array.<string|Object>} dimensions\n *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n * @param {module:echarts/model/Model} hostModel\n */\n\n\nvar List = function (dimensions, hostModel) {\n  dimensions = dimensions || ['x', 'y'];\n  var dimensionInfos = {};\n  var dimensionNames = [];\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimensionName;\n    var dimensionInfo = {};\n\n    if (typeof dimensions[i] === 'string') {\n      dimensionName = dimensions[i];\n      dimensionInfo = {\n        name: dimensionName,\n        coordDim: dimensionName,\n        coordDimIndex: 0,\n        stackable: false,\n        // Type can be 'float', 'int', 'number'\n        // Default is number, Precision of float may not enough\n        type: 'number'\n      };\n    } else {\n      dimensionInfo = dimensions[i];\n      dimensionName = dimensionInfo.name;\n      dimensionInfo.type = dimensionInfo.type || 'number';\n\n      if (!dimensionInfo.coordDim) {\n        dimensionInfo.coordDim = dimensionName;\n        dimensionInfo.coordDimIndex = 0;\n      }\n    }\n\n    dimensionInfo.otherDims = dimensionInfo.otherDims || {};\n    dimensionNames.push(dimensionName);\n    dimensionInfos[dimensionName] = dimensionInfo;\n  }\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n\n\n  this.dimensions = dimensionNames;\n  /**\n   * Infomation of each data dimension, like data type.\n   * @type {Object}\n   */\n\n  this._dimensionInfos = dimensionInfos;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.hostModel = hostModel;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.dataType;\n  /**\n   * Indices stores the indices of data subset after filtered.\n   * This data subset will be used in chart.\n   * @type {Array.<number>}\n   * @readOnly\n   */\n\n  this.indices = [];\n  /**\n   * Data storage\n   * @type {Object.<key, TypedArray|Array>}\n   * @private\n   */\n\n  this._storage = {};\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._nameList = [];\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._idList = [];\n  /**\n   * Models of data option is stored sparse for optimizing memory cost\n   * @type {Array.<module:echarts/model/Model>}\n   * @private\n   */\n\n  this._optionModels = [];\n  /**\n   * @param {module:echarts/data/List}\n   */\n\n  this.stackedOn = null;\n  /**\n   * Global visual properties after visual coding\n   * @type {Object}\n   * @private\n   */\n\n  this._visual = {};\n  /**\n   * Globel layout properties.\n   * @type {Object}\n   * @private\n   */\n\n  this._layout = {};\n  /**\n   * Item visual properties after visual coding\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemVisuals = [];\n  /**\n   * Item layout properties after layout\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemLayouts = [];\n  /**\n   * Graphic elemnents\n   * @type {Array.<module:zrender/Element>}\n   * @private\n   */\n\n  this._graphicEls = [];\n  /**\n   * @type {Array.<Array|Object>}\n   * @private\n   */\n\n  this._rawData;\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._extent;\n};\n\nvar listProto = List.prototype;\nlistProto.type = 'list';\n/**\n * If each data item has it's own option\n * @type {boolean}\n */\n\nlistProto.hasItemOption = true;\n/**\n * Get dimension name\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n * @return {string} Concrete dim name.\n */\n\nlistProto.getDimension = function (dim) {\n  if (!isNaN(dim)) {\n    dim = this.dimensions[dim] || dim;\n  }\n\n  return dim;\n};\n/**\n * Get type and stackable info of particular dimension\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n */\n\n\nlistProto.getDimensionInfo = function (dim) {\n  return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);\n};\n/**\n * Initialize from data\n * @param {Array.<Object|number|Array>} data\n * @param {Array.<string>} [nameList]\n * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n */\n\n\nlistProto.initData = function (data, nameList, dimValueGetter) {\n  data = data || [];\n  var isDataArray = zrUtil.isArray(data);\n\n  if (isDataArray) {\n    data = new DefaultDataProvider(data);\n  }\n\n  this._rawData = data; // Clear\n\n  var storage = this._storage = {};\n  var indices = this.indices = [];\n  var dimensions = this.dimensions;\n  var dimensionInfoMap = this._dimensionInfos;\n  var size = data.count();\n  var idList = [];\n  var nameRepeatCount = {};\n  var nameDimIdx;\n  nameList = nameList || []; // Init storage\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimInfo = dimensionInfoMap[dimensions[i]];\n    dimInfo.otherDims.itemName === 0 && (nameDimIdx = i);\n    var DataCtor = dataCtors[dimInfo.type];\n    storage[dimensions[i]] = new DataCtor(size);\n  }\n\n  var self = this;\n\n  if (!dimValueGetter) {\n    self.hasItemOption = false;\n  } // Default dim value getter\n\n\n  dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {\n    var value = modelUtil.getDataItemValue(dataItem); // If any dataItem is like { value: 10 }\n\n    if (modelUtil.isDataItemOption(dataItem)) {\n      self.hasItemOption = true;\n    }\n\n    return modelUtil.converDataValue(value instanceof Array ? value[dimIndex] // If value is a single number or something else not array.\n    : value, dimensionInfoMap[dimName]);\n  };\n\n  for (var i = 0; i < size; i++) {\n    // NOTICE: Try not to write things into dataItem\n    var dataItem = data.getItem(i); // Each data item is value\n    // [1, 2]\n    // 2\n    // Bar chart, line chart which uses category axis\n    // only gives the 'y' value. 'x' value is the indices of cateogry\n    // Use a tempValue to normalize the value to be a (x, y) value\n    // Store the data by dimensions\n\n    for (var k = 0; k < dimensions.length; k++) {\n      var dim = dimensions[k];\n      var dimStorage = storage[dim]; // PENDING NULL is empty or zero\n\n      dimStorage[i] = dimValueGetter(dataItem, dim, i, k);\n    }\n\n    indices.push(i);\n  } // Use the name in option and create id\n\n\n  for (var i = 0; i < size; i++) {\n    var dataItem = data.getItem(i);\n\n    if (!nameList[i] && dataItem) {\n      if (dataItem.name != null) {\n        nameList[i] = dataItem.name;\n      } else if (nameDimIdx != null) {\n        nameList[i] = storage[dimensions[nameDimIdx]][i];\n      }\n    }\n\n    var name = nameList[i] || ''; // Try using the id in option\n\n    var id = dataItem && dataItem.id;\n\n    if (!id && name) {\n      // Use name as id and add counter to avoid same name\n      nameRepeatCount[name] = nameRepeatCount[name] || 0;\n      id = name;\n\n      if (nameRepeatCount[name] > 0) {\n        id += '__ec__' + nameRepeatCount[name];\n      }\n\n      nameRepeatCount[name]++;\n    }\n\n    id && (idList[i] = id);\n  }\n\n  this._nameList = nameList;\n  this._idList = idList;\n};\n/**\n * @return {number}\n */\n\n\nlistProto.count = function () {\n  return this.indices.length;\n};\n/**\n * Get value. Return NaN if idx is out of range.\n * @param {string} dim Dim must be concrete name.\n * @param {number} idx\n * @param {boolean} stack\n * @return {number}\n */\n\n\nlistProto.get = function (dim, idx, stack) {\n  var storage = this._storage;\n  var dataIndex = this.indices[idx]; // If value not exists\n\n  if (dataIndex == null || !storage[dim]) {\n    return NaN;\n  }\n\n  var value = storage[dim][dataIndex]; // FIXME ordinal data type is not stackable\n\n  if (stack) {\n    var dimensionInfo = this._dimensionInfos[dim];\n\n    if (dimensionInfo && dimensionInfo.stackable) {\n      var stackedOn = this.stackedOn;\n\n      while (stackedOn) {\n        // Get no stacked data of stacked on\n        var stackedValue = stackedOn.get(dim, idx); // Considering positive stack, negative stack and empty data\n\n        if (value >= 0 && stackedValue > 0 || // Positive stack\n        value <= 0 && stackedValue < 0 // Negative stack\n        ) {\n            value += stackedValue;\n          }\n\n        stackedOn = stackedOn.stackedOn;\n      }\n    }\n  }\n\n  return value;\n};\n/**\n * Get value for multi dimensions.\n * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n * @param {number} idx\n * @param {boolean} stack\n * @return {number}\n */\n\n\nlistProto.getValues = function (dimensions, idx, stack) {\n  var values = [];\n\n  if (!zrUtil.isArray(dimensions)) {\n    stack = idx;\n    idx = dimensions;\n    dimensions = this.dimensions;\n  }\n\n  for (var i = 0, len = dimensions.length; i < len; i++) {\n    values.push(this.get(dimensions[i], idx, stack));\n  }\n\n  return values;\n};\n/**\n * If value is NaN. Inlcuding '-'\n * @param {string} dim\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.hasValue = function (idx) {\n  var dimensions = this.dimensions;\n  var dimensionInfos = this._dimensionInfos;\n\n  for (var i = 0, len = dimensions.length; i < len; i++) {\n    if ( // Ordinal type can be string or number\n    dimensionInfos[dimensions[i]].type !== 'ordinal' && isNaN(this.get(dimensions[i], idx))) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Get extent of data in one dimension\n * @param {string} dim\n * @param {boolean} stack\n * @param {Function} filter\n */\n\n\nlistProto.getDataExtent = function (dim, stack, filter) {\n  dim = this.getDimension(dim);\n  var dimData = this._storage[dim];\n  var dimInfo = this.getDimensionInfo(dim);\n  stack = dimInfo && dimInfo.stackable && stack;\n  var dimExtent = (this._extent || (this._extent = {}))[dim + !!stack];\n  var value;\n\n  if (dimExtent) {\n    return dimExtent;\n  } // var dimInfo = this._dimensionInfos[dim];\n\n\n  if (dimData) {\n    var min = Infinity;\n    var max = -Infinity; // var isOrdinal = dimInfo.type === 'ordinal';\n\n    for (var i = 0, len = this.count(); i < len; i++) {\n      value = this.get(dim, i, stack); // FIXME\n      // if (isOrdinal && typeof value === 'string') {\n      //     value = zrUtil.indexOf(dimData, value);\n      // }\n\n      if (!filter || filter(value, dim, i)) {\n        value < min && (min = value);\n        value > max && (max = value);\n      }\n    }\n\n    return this._extent[dim + !!stack] = [min, max];\n  } else {\n    return [Infinity, -Infinity];\n  }\n};\n/**\n * Get sum of data in one dimension\n * @param {string} dim\n * @param {boolean} stack\n */\n\n\nlistProto.getSum = function (dim, stack) {\n  var dimData = this._storage[dim];\n  var sum = 0;\n\n  if (dimData) {\n    for (var i = 0, len = this.count(); i < len; i++) {\n      var value = this.get(dim, i, stack);\n\n      if (!isNaN(value)) {\n        sum += value;\n      }\n    }\n  }\n\n  return sum;\n};\n/**\n * Retreive the index with given value\n * @param {number} idx\n * @param {number} value\n * @return {number}\n */\n// FIXME Precision of float value\n\n\nlistProto.indexOf = function (dim, value) {\n  var storage = this._storage;\n  var dimData = storage[dim];\n  var indices = this.indices;\n\n  if (dimData) {\n    for (var i = 0, len = indices.length; i < len; i++) {\n      var rawIndex = indices[i];\n\n      if (dimData[rawIndex] === value) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index with given name\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfName = function (name) {\n  var indices = this.indices;\n  var nameList = this._nameList;\n\n  for (var i = 0, len = indices.length; i < len; i++) {\n    var rawIndex = indices[i];\n\n    if (nameList[rawIndex] === name) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index with given raw data index\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfRawIndex = function (rawIndex) {\n  // Indices are ascending\n  var indices = this.indices; // If rawIndex === dataIndex\n\n  var rawDataIndex = indices[rawIndex];\n\n  if (rawDataIndex != null && rawDataIndex === rawIndex) {\n    return rawIndex;\n  }\n\n  var left = 0;\n  var right = indices.length - 1;\n\n  while (left <= right) {\n    var mid = (left + right) / 2 | 0;\n\n    if (indices[mid] < rawIndex) {\n      left = mid + 1;\n    } else if (indices[mid] > rawIndex) {\n      right = mid - 1;\n    } else {\n      return mid;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index of nearest value\n * @param {string} dim\n * @param {number} value\n * @param {boolean} stack If given value is after stacked\n * @param {number} [maxDistance=Infinity]\n * @return {Array.<number>} Considere multiple points has the same value.\n */\n\n\nlistProto.indicesOfNearest = function (dim, value, stack, maxDistance) {\n  var storage = this._storage;\n  var dimData = storage[dim];\n  var nearestIndices = [];\n\n  if (!dimData) {\n    return nearestIndices;\n  }\n\n  if (maxDistance == null) {\n    maxDistance = Infinity;\n  }\n\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n\n  for (var i = 0, len = this.count(); i < len; i++) {\n    var diff = value - this.get(dim, i, stack);\n    var dist = Math.abs(diff);\n\n    if (diff <= maxDistance && dist <= minDist) {\n      // For the case of two data are same on xAxis, which has sequence data.\n      // Show the nearest index\n      // https://github.com/ecomfe/echarts/issues/2869\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        nearestIndices.length = 0;\n      }\n\n      nearestIndices.push(i);\n    }\n  }\n\n  return nearestIndices;\n};\n/**\n * Get raw data index\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawIndex = function (idx) {\n  var rawIdx = this.indices[idx];\n  return rawIdx == null ? -1 : rawIdx;\n};\n/**\n * Get raw data item\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawDataItem = function (idx) {\n  return this._rawData.getItem(this.getRawIndex(idx));\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getName = function (idx) {\n  return this._nameList[this.indices[idx]] || '';\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getId = function (idx) {\n  return this._idList[this.indices[idx]] || this.getRawIndex(idx) + '';\n};\n\nfunction normalizeDimensions(dimensions) {\n  if (!zrUtil.isArray(dimensions)) {\n    dimensions = [dimensions];\n  }\n\n  return dimensions;\n}\n/**\n * Data iteration\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n *\n * @example\n *  list.each('x', function (x, idx) {});\n *  list.each(['x', 'y'], function (x, y, idx) {});\n *  list.each(function (idx) {})\n */\n\n\nlistProto.each = function (dims, cb, stack, context) {\n  if (typeof dims === 'function') {\n    context = stack;\n    stack = cb;\n    cb = dims;\n    dims = [];\n  }\n\n  dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n  var value = [];\n  var dimSize = dims.length;\n  var indices = this.indices;\n  context = context || this;\n\n  for (var i = 0; i < indices.length; i++) {\n    // Simple optimization\n    switch (dimSize) {\n      case 0:\n        cb.call(context, i);\n        break;\n\n      case 1:\n        cb.call(context, this.get(dims[0], i, stack), i);\n        break;\n\n      case 2:\n        cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n        break;\n\n      default:\n        for (var k = 0; k < dimSize; k++) {\n          value[k] = this.get(dims[k], i, stack);\n        } // Index\n\n\n        value[k] = i;\n        cb.apply(context, value);\n    }\n  }\n};\n/**\n * Data filter\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n */\n\n\nlistProto.filterSelf = function (dimensions, cb, stack, context) {\n  if (typeof dimensions === 'function') {\n    context = stack;\n    stack = cb;\n    cb = dimensions;\n    dimensions = [];\n  }\n\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var newIndices = [];\n  var value = [];\n  var dimSize = dimensions.length;\n  var indices = this.indices;\n  context = context || this;\n\n  for (var i = 0; i < indices.length; i++) {\n    var keep; // Simple optimization\n\n    if (!dimSize) {\n      keep = cb.call(context, i);\n    } else if (dimSize === 1) {\n      keep = cb.call(context, this.get(dimensions[0], i, stack), i);\n    } else {\n      for (var k = 0; k < dimSize; k++) {\n        value[k] = this.get(dimensions[k], i, stack);\n      }\n\n      value[k] = i;\n      keep = cb.apply(context, value);\n    }\n\n    if (keep) {\n      newIndices.push(indices[i]);\n    }\n  }\n\n  this.indices = newIndices; // Reset data extent\n\n  this._extent = {};\n  return this;\n};\n/**\n * Data mapping to a plain array\n * @param {string|Array.<string>} [dimensions]\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.mapArray = function (dimensions, cb, stack, context) {\n  if (typeof dimensions === 'function') {\n    context = stack;\n    stack = cb;\n    cb = dimensions;\n    dimensions = [];\n  }\n\n  var result = [];\n  this.each(dimensions, function () {\n    result.push(cb && cb.apply(this, arguments));\n  }, stack, context);\n  return result;\n};\n\nfunction cloneListForMapAndSample(original, excludeDimensions) {\n  var allDimensions = original.dimensions;\n  var list = new List(zrUtil.map(allDimensions, original.getDimensionInfo, original), original.hostModel); // FIXME If needs stackedOn, value may already been stacked\n\n  transferProperties(list, original);\n  var storage = list._storage = {};\n  var originalStorage = original._storage; // Init storage\n\n  for (var i = 0; i < allDimensions.length; i++) {\n    var dim = allDimensions[i];\n    var dimStore = originalStorage[dim];\n\n    if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n      storage[dim] = new dimStore.constructor(originalStorage[dim].length);\n    } else {\n      // Direct reference for other dimensions\n      storage[dim] = originalStorage[dim];\n    }\n  }\n\n  return list;\n}\n/**\n * Data mapping to a new List with given dimensions\n * @param {string|Array.<string>} dimensions\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.map = function (dimensions, cb, stack, context) {\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var list = cloneListForMapAndSample(this, dimensions); // Following properties are all immutable.\n  // So we can reference to the same value\n\n  var indices = list.indices = this.indices;\n  var storage = list._storage;\n  var tmpRetValue = [];\n  this.each(dimensions, function () {\n    var idx = arguments[arguments.length - 1];\n    var retValue = cb && cb.apply(this, arguments);\n\n    if (retValue != null) {\n      // a number\n      if (typeof retValue === 'number') {\n        tmpRetValue[0] = retValue;\n        retValue = tmpRetValue;\n      }\n\n      for (var i = 0; i < retValue.length; i++) {\n        var dim = dimensions[i];\n        var dimStore = storage[dim];\n        var rawIdx = indices[idx];\n\n        if (dimStore) {\n          dimStore[rawIdx] = retValue[i];\n        }\n      }\n    }\n  }, stack, context);\n  return list;\n};\n/**\n * Large data down sampling on given dimension\n * @param {string} dimension\n * @param {number} rate\n * @param {Function} sampleValue\n * @param {Function} sampleIndex Sample index for name and id\n */\n\n\nlistProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n  var list = cloneListForMapAndSample(this, [dimension]);\n  var storage = this._storage;\n  var targetStorage = list._storage;\n  var originalIndices = this.indices;\n  var indices = list.indices = [];\n  var frameValues = [];\n  var frameIndices = [];\n  var frameSize = Math.floor(1 / rate);\n  var dimStore = targetStorage[dimension];\n  var len = this.count(); // Copy data from original data\n\n  for (var i = 0; i < storage[dimension].length; i++) {\n    targetStorage[dimension][i] = storage[dimension][i];\n  }\n\n  for (var i = 0; i < len; i += frameSize) {\n    // Last frame\n    if (frameSize > len - i) {\n      frameSize = len - i;\n      frameValues.length = frameSize;\n    }\n\n    for (var k = 0; k < frameSize; k++) {\n      var idx = originalIndices[i + k];\n      frameValues[k] = dimStore[idx];\n      frameIndices[k] = idx;\n    }\n\n    var value = sampleValue(frameValues);\n    var idx = frameIndices[sampleIndex(frameValues, value) || 0]; // Only write value on the filtered data\n\n    dimStore[idx] = value;\n    indices.push(idx);\n  }\n\n  return list;\n};\n/**\n * Get model of one data item.\n *\n * @param {number} idx\n */\n// FIXME Model proxy ?\n\n\nlistProto.getItemModel = function (idx) {\n  var hostModel = this.hostModel;\n  idx = this.indices[idx];\n  return new Model(this._rawData.getItem(idx), hostModel, hostModel && hostModel.ecModel);\n};\n/**\n * Create a data differ\n * @param {module:echarts/data/List} otherList\n * @return {module:echarts/data/DataDiffer}\n */\n\n\nlistProto.diff = function (otherList) {\n  var idList = this._idList;\n  var otherIdList = otherList && otherList._idList;\n  var val; // Use prefix to avoid index to be the same as otherIdList[idx],\n  // which will cause weird udpate animation.\n\n  var prefix = 'e\\0\\0';\n  return new DataDiffer(otherList ? otherList.indices : [], this.indices, function (idx) {\n    return (val = otherIdList[idx]) != null ? val : prefix + idx;\n  }, function (idx) {\n    return (val = idList[idx]) != null ? val : prefix + idx;\n  });\n};\n/**\n * Get visual property.\n * @param {string} key\n */\n\n\nlistProto.getVisual = function (key) {\n  var visual = this._visual;\n  return visual && visual[key];\n};\n/**\n * Set visual property\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setVisual('color', color);\n *  setVisual({\n *      'color': color\n *  });\n */\n\n\nlistProto.setVisual = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setVisual(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._visual = this._visual || {};\n  this._visual[key] = val;\n};\n/**\n * Set layout property.\n * @param {string|Object} key\n * @param {*} [val]\n */\n\n\nlistProto.setLayout = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setLayout(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._layout[key] = val;\n};\n/**\n * Get layout property.\n * @param  {string} key.\n * @return {*}\n */\n\n\nlistProto.getLayout = function (key) {\n  return this._layout[key];\n};\n/**\n * Get layout of single data item\n * @param {number} idx\n */\n\n\nlistProto.getItemLayout = function (idx) {\n  return this._itemLayouts[idx];\n};\n/**\n * Set layout of single data item\n * @param {number} idx\n * @param {Object} layout\n * @param {boolean=} [merge=false]\n */\n\n\nlistProto.setItemLayout = function (idx, layout, merge) {\n  this._itemLayouts[idx] = merge ? zrUtil.extend(this._itemLayouts[idx] || {}, layout) : layout;\n};\n/**\n * Clear all layout of single data item\n */\n\n\nlistProto.clearItemLayouts = function () {\n  this._itemLayouts.length = 0;\n};\n/**\n * Get visual property of single data item\n * @param {number} idx\n * @param {string} key\n * @param {boolean} [ignoreParent=false]\n */\n\n\nlistProto.getItemVisual = function (idx, key, ignoreParent) {\n  var itemVisual = this._itemVisuals[idx];\n  var val = itemVisual && itemVisual[key];\n\n  if (val == null && !ignoreParent) {\n    // Use global visual property\n    return this.getVisual(key);\n  }\n\n  return val;\n};\n/**\n * Set visual property of single data item\n *\n * @param {number} idx\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setItemVisual(0, 'color', color);\n *  setItemVisual(0, {\n *      'color': color\n *  });\n */\n\n\nlistProto.setItemVisual = function (idx, key, value) {\n  var itemVisual = this._itemVisuals[idx] || {};\n  this._itemVisuals[idx] = itemVisual;\n\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        itemVisual[name] = key[name];\n      }\n    }\n\n    return;\n  }\n\n  itemVisual[key] = value;\n};\n/**\n * Clear itemVisuals and list visual.\n */\n\n\nlistProto.clearAllVisual = function () {\n  this._visual = {};\n  this._itemVisuals = [];\n};\n\nvar setItemDataAndSeriesIndex = function (child) {\n  child.seriesIndex = this.seriesIndex;\n  child.dataIndex = this.dataIndex;\n  child.dataType = this.dataType;\n};\n/**\n * Set graphic element relative to data. It can be set as null\n * @param {number} idx\n * @param {module:zrender/Element} [el]\n */\n\n\nlistProto.setItemGraphicEl = function (idx, el) {\n  var hostModel = this.hostModel;\n\n  if (el) {\n    // Add data index and series index for indexing the data by element\n    // Useful in tooltip\n    el.dataIndex = idx;\n    el.dataType = this.dataType;\n    el.seriesIndex = hostModel && hostModel.seriesIndex;\n\n    if (el.type === 'group') {\n      el.traverse(setItemDataAndSeriesIndex, el);\n    }\n  }\n\n  this._graphicEls[idx] = el;\n};\n/**\n * @param {number} idx\n * @return {module:zrender/Element}\n */\n\n\nlistProto.getItemGraphicEl = function (idx) {\n  return this._graphicEls[idx];\n};\n/**\n * @param {Function} cb\n * @param {*} context\n */\n\n\nlistProto.eachItemGraphicEl = function (cb, context) {\n  zrUtil.each(this._graphicEls, function (el, idx) {\n    if (el) {\n      cb && cb.call(context, el, idx);\n    }\n  });\n};\n/**\n * Shallow clone a new list except visual and layout properties, and graph elements.\n * New list only change the indices.\n */\n\n\nlistProto.cloneShallow = function () {\n  var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n  var list = new List(dimensionInfoList, this.hostModel); // FIXME\n\n  list._storage = this._storage;\n  transferProperties(list, this); // Clone will not change the data extent and indices\n\n  list.indices = this.indices.slice();\n\n  if (this._extent) {\n    list._extent = zrUtil.extend({}, this._extent);\n  }\n\n  return list;\n};\n/**\n * Wrap some method to add more feature\n * @param {string} methodName\n * @param {Function} injectFunction\n */\n\n\nlistProto.wrapMethod = function (methodName, injectFunction) {\n  var originalMethod = this[methodName];\n\n  if (typeof originalMethod !== 'function') {\n    return;\n  }\n\n  this.__wrappedMethods = this.__wrappedMethods || [];\n\n  this.__wrappedMethods.push(methodName);\n\n  this[methodName] = function () {\n    var res = originalMethod.apply(this, arguments);\n    return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n  };\n}; // Methods that create a new list based on this list should be listed here.\n// Notice that those method should `RETURN` the new list.\n\n\nlistProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map']; // Methods that change indices of this list should be listed here.\n\nlistProto.CHANGABLE_METHODS = ['filterSelf'];\nvar _default = List;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/data/List.js\n// module id = 1044\n// module chunks = 0 1 2","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar OrdinalScale = require(\"../scale/Ordinal\");\n\nvar IntervalScale = require(\"../scale/Interval\");\n\nvar Scale = require(\"../scale/Scale\");\n\nvar numberUtil = require(\"../util/number\");\n\nrequire(\"../scale/Time\");\n\nrequire(\"../scale/Log\");\n\n/**\n * Get axis scale extent before niced.\n * Item of returned array can only be number (including Infinity and NaN).\n */\nfunction getScaleExtent(scale, model) {\n  var scaleType = scale.type;\n  var min = model.getMin();\n  var max = model.getMax();\n  var fixMin = min != null;\n  var fixMax = max != null;\n  var originalExtent = scale.getExtent();\n  var axisDataLen;\n  var boundaryGap;\n  var span;\n\n  if (scaleType === 'ordinal') {\n    axisDataLen = (model.get('data') || []).length;\n  } else {\n    boundaryGap = model.get('boundaryGap');\n\n    if (!zrUtil.isArray(boundaryGap)) {\n      boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n    }\n\n    if (typeof boundaryGap[0] === 'boolean') {\n      boundaryGap = [0, 0];\n    }\n\n    boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n    boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n    span = originalExtent[1] - originalExtent[0] || Math.abs(originalExtent[0]);\n  } // Notice: When min/max is not set (that is, when there are null/undefined,\n  // which is the most common case), these cases should be ensured:\n  // (1) For 'ordinal', show all axis.data.\n  // (2) For others:\n  //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n  //      disabled).\n  //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n  //      be the result that originalExtent enlarged by boundaryGap.\n  // (3) If no data, it should be ensured that `scale.setBlank` is set.\n  // FIXME\n  // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\n  // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\n  // that the results processed by boundaryGap are positive/negative?\n\n\n  if (min == null) {\n    min = scaleType === 'ordinal' ? axisDataLen ? 0 : NaN : originalExtent[0] - boundaryGap[0] * span;\n  }\n\n  if (max == null) {\n    max = scaleType === 'ordinal' ? axisDataLen ? axisDataLen - 1 : NaN : originalExtent[1] + boundaryGap[1] * span;\n  }\n\n  if (min === 'dataMin') {\n    min = originalExtent[0];\n  } else if (typeof min === 'function') {\n    min = min({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  if (max === 'dataMax') {\n    max = originalExtent[1];\n  } else if (typeof max === 'function') {\n    max = max({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  (min == null || !isFinite(min)) && (min = NaN);\n  (max == null || !isFinite(max)) && (max = NaN);\n  scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max)); // Evaluate if axis needs cross zero\n\n  if (model.getNeedCrossZero()) {\n    // Axis is over zero and min is not set\n    if (min > 0 && max > 0 && !fixMin) {\n      min = 0;\n    } // Axis is under zero and max is not set\n\n\n    if (min < 0 && max < 0 && !fixMax) {\n      max = 0;\n    }\n  }\n\n  return [min, max];\n}\n\nfunction niceScaleExtent(scale, model) {\n  var extent = getScaleExtent(scale, model);\n  var fixMin = model.getMin() != null;\n  var fixMax = model.getMax() != null;\n  var splitNumber = model.get('splitNumber');\n\n  if (scale.type === 'log') {\n    scale.base = model.get('logBase');\n  }\n\n  var scaleType = scale.type;\n  scale.setExtent(extent[0], extent[1]);\n  scale.niceExtent({\n    splitNumber: splitNumber,\n    fixMin: fixMin,\n    fixMax: fixMax,\n    minInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('minInterval') : null,\n    maxInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('maxInterval') : null\n  }); // If some one specified the min, max. And the default calculated interval\n  // is not good enough. He can specify the interval. It is often appeared\n  // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n  // to be 60.\n  // FIXME\n\n  var interval = model.get('interval');\n\n  if (interval != null) {\n    scale.setInterval && scale.setInterval(interval);\n  }\n}\n/**\n * @param {module:echarts/model/Model} model\n * @param {string} [axisType] Default retrieve from model.type\n * @return {module:echarts/scale/*}\n */\n\n\nfunction createScaleByModel(model, axisType) {\n  axisType = axisType || model.get('type');\n\n  if (axisType) {\n    switch (axisType) {\n      // Buildin scale\n      case 'category':\n        return new OrdinalScale(model.getCategories(), [Infinity, -Infinity]);\n\n      case 'value':\n        return new IntervalScale();\n      // Extended scale, like time and log\n\n      default:\n        return (Scale.getClass(axisType) || IntervalScale).create(model);\n    }\n  }\n}\n/**\n * Check if the axis corss 0\n */\n\n\nfunction ifAxisCrossZero(axis) {\n  var dataExtent = axis.scale.getExtent();\n  var min = dataExtent[0];\n  var max = dataExtent[1];\n  return !(min > 0 && max > 0 || min < 0 && max < 0);\n}\n/**\n * @param {Array.<number>} tickCoords In axis self coordinate.\n * @param {Array.<string>} labels\n * @param {string} font\n * @param {number} axisRotate 0: towards right horizontally, clock-wise is negative.\n * @param {number} [labelRotate=0] 0: towards right horizontally, clock-wise is negative.\n * @return {number}\n */\n\n\nfunction getAxisLabelInterval(tickCoords, labels, font, axisRotate, labelRotate) {\n  var textSpaceTakenRect;\n  var autoLabelInterval = 0;\n  var accumulatedLabelInterval = 0;\n  var rotation = (axisRotate - labelRotate) / 180 * Math.PI;\n  var step = 1;\n\n  if (labels.length > 40) {\n    // Simple optimization for large amount of labels\n    step = Math.floor(labels.length / 40);\n  }\n\n  for (var i = 0; i < tickCoords.length; i += step) {\n    var tickCoord = tickCoords[i]; // Not precise, do not consider align and vertical align\n    // and each distance from axis line yet.\n\n    var rect = textContain.getBoundingRect(labels[i], font, 'center', 'top');\n    rect.x += tickCoord * Math.cos(rotation);\n    rect.y += tickCoord * Math.sin(rotation); // Magic number\n\n    rect.width *= 1.3;\n    rect.height *= 1.3;\n\n    if (!textSpaceTakenRect) {\n      textSpaceTakenRect = rect.clone();\n    } // There is no space for current label;\n    else if (textSpaceTakenRect.intersect(rect)) {\n        accumulatedLabelInterval++;\n        autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n      } else {\n        textSpaceTakenRect.union(rect); // Reset\n\n        accumulatedLabelInterval = 0;\n      }\n  }\n\n  if (autoLabelInterval === 0 && step > 1) {\n    return step;\n  }\n\n  return (autoLabelInterval + 1) * step - 1;\n}\n/**\n * @param {Object} axis\n * @param {Function} labelFormatter\n * @return {Array.<string>}\n */\n\n\nfunction getFormattedLabels(axis, labelFormatter) {\n  var scale = axis.scale;\n  var labels = scale.getTicksLabels();\n  var ticks = scale.getTicks();\n\n  if (typeof labelFormatter === 'string') {\n    labelFormatter = function (tpl) {\n      return function (val) {\n        return tpl.replace('{value}', val != null ? val : '');\n      };\n    }(labelFormatter); // Consider empty array\n\n\n    return zrUtil.map(labels, labelFormatter);\n  } else if (typeof labelFormatter === 'function') {\n    return zrUtil.map(ticks, function (tick, idx) {\n      return labelFormatter(getAxisRawValue(axis, tick), idx);\n    }, this);\n  } else {\n    return labels;\n  }\n}\n\nfunction getAxisRawValue(axis, value) {\n  // In category axis with data zoom, tick is not the original\n  // index of axis.data. So tick should not be exposed to user\n  // in category axis.\n  return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n}\n\nexports.getScaleExtent = getScaleExtent;\nexports.niceScaleExtent = niceScaleExtent;\nexports.createScaleByModel = createScaleByModel;\nexports.ifAxisCrossZero = ifAxisCrossZero;\nexports.getAxisLabelInterval = getAxisLabelInterval;\nexports.getFormattedLabels = getFormattedLabels;\nexports.getAxisRawValue = getAxisRawValue;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/axisHelper.js\n// module id = 1045\n// module chunks = 0 1 2","var features = {};\n\nfunction register(name, ctor) {\n  features[name] = ctor;\n}\n\nfunction get(name) {\n  return features[name];\n}\n\nexports.register = register;\nexports.get = get;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox/featureManager.js\n// module id = 1046\n// module chunks = 0 1 2","var Eventful = require(\"../mixin/Eventful\");\n\nexports.Dispatcher = Eventful;\n\nvar env = require(\"./env\");\n\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\nvar isDomLevel2 = typeof window !== 'undefined' && !!window.addEventListener;\nvar MOUSE_EVENT_REG = /^(?:mouse|pointer|contextmenu|drag|drop)|click/;\n\nfunction getBoundingClientRect(el) {\n  // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n  return el.getBoundingClientRect ? el.getBoundingClientRect() : {\n    left: 0,\n    top: 0\n  };\n} // `calculate` is optional, default false\n\n\nfunction clientToLocal(el, e, out, calculate) {\n  out = out || {}; // According to the W3C Working Draft, offsetX and offsetY should be relative\n  // to the padding edge of the target element. The only browser using this convention\n  // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n  // not support the properties.\n  // (see http://www.jacklmoore.com/notes/mouse-position/)\n  // In zr painter.dom, padding edge equals to border edge.\n  // FIXME\n  // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n  // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n  // is too complex. So css-transfrom dont support in this case temporarily.\n\n  if (calculate || !env.canvasSupported) {\n    defaultGetZrXY(el, e, out);\n  } // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n  // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n  // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n  // zoom-factor, overflow / opacity layers, transforms ...)\n  // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n  // <https://bugs.jquery.com/ticket/8523#comment:14>\n  // BTW3, In ff, offsetX/offsetY is always 0.\n  else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n      out.zrX = e.layerX;\n      out.zrY = e.layerY;\n    } // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n    else if (e.offsetX != null) {\n        out.zrX = e.offsetX;\n        out.zrY = e.offsetY;\n      } // For some other device, e.g., IOS safari.\n      else {\n          defaultGetZrXY(el, e, out);\n        }\n\n  return out;\n}\n\nfunction defaultGetZrXY(el, e, out) {\n  // This well-known method below does not support css transform.\n  var box = getBoundingClientRect(el);\n  out.zrX = e.clientX - box.left;\n  out.zrY = e.clientY - box.top;\n}\n/**\n * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n * `calculate` is optional, default false.\n */\n\n\nfunction normalizeEvent(el, e, calculate) {\n  e = e || window.event;\n\n  if (e.zrX != null) {\n    return e;\n  }\n\n  var eventType = e.type;\n  var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n  if (!isTouch) {\n    clientToLocal(el, e, e, calculate);\n    e.zrDelta = e.wheelDelta ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n  } else {\n    var touch = eventType != 'touchend' ? e.targetTouches[0] : e.changedTouches[0];\n    touch && clientToLocal(el, touch, e, calculate);\n  } // Add which for click: 1 === left; 2 === middle; 3 === right; otherwise: 0;\n  // See jQuery: https://github.com/jquery/jquery/blob/master/src/event.js\n  // If e.which has been defined, if may be readonly,\n  // see: https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/which\n\n\n  var button = e.button;\n\n  if (e.which == null && button !== undefined && MOUSE_EVENT_REG.test(e.type)) {\n    e.which = button & 1 ? 1 : button & 2 ? 3 : button & 4 ? 2 : 0;\n  }\n\n  return e;\n}\n\nfunction addEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    el.addEventListener(name, handler);\n  } else {\n    el.attachEvent('on' + name, handler);\n  }\n}\n\nfunction removeEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    el.removeEventListener(name, handler);\n  } else {\n    el.detachEvent('on' + name, handler);\n  }\n}\n/**\n * preventDefault and stopPropagation.\n * Notice: do not do that in zrender. Upper application\n * do that if necessary.\n *\n * @memberOf module:zrender/core/event\n * @method\n * @param {Event} e : event对象\n */\n\n\nvar stop = isDomLevel2 ? function (e) {\n  e.preventDefault();\n  e.stopPropagation();\n  e.cancelBubble = true;\n} : function (e) {\n  e.returnValue = false;\n  e.cancelBubble = true;\n};\n\nfunction notLeftMouse(e) {\n  // If e.which is undefined, considered as left mouse event.\n  return e.which > 1;\n} // 做向上兼容\n\n\nexports.clientToLocal = clientToLocal;\nexports.normalizeEvent = normalizeEvent;\nexports.addEventListener = addEventListener;\nexports.removeEventListener = removeEventListener;\nexports.stop = stop;\nexports.notLeftMouse = notLeftMouse;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/event.js\n// module id = 1047\n// module chunks = 0 1 2","var _vector = require(\"./vector\");\n\nvar v2Create = _vector.create;\nvar v2DistSquare = _vector.distSquare;\n\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\nvar mathPow = Math.pow;\nvar mathSqrt = Math.sqrt;\nvar EPSILON = 1e-8;\nvar EPSILON_NUMERIC = 1e-4;\nvar THREE_SQRT = mathSqrt(3);\nvar ONE_THIRD = 1 / 3; // 临时变量\n\nvar _v0 = v2Create();\n\nvar _v1 = v2Create();\n\nvar _v2 = v2Create();\n\nfunction isAroundZero(val) {\n  return val > -EPSILON && val < EPSILON;\n}\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * 计算三次贝塞尔值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return onet * onet * (onet * p0 + 3 * t * p1) + t * t * (t * p3 + 3 * onet * p2);\n}\n/**\n * 计算三次贝塞尔导数值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicDerivativeAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return 3 * (((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet + (p3 - p2) * t * t);\n}\n/**\n * 计算三次贝塞尔方程根，使用盛金公式\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} val\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction cubicRootAt(p0, p1, p2, p3, val, roots) {\n  // Evaluate roots of cubic functions\n  var a = p3 + 3 * (p1 - p2) - p0;\n  var b = 3 * (p2 - p1 * 2 + p0);\n  var c = 3 * (p1 - p0);\n  var d = p0 - val;\n  var A = b * b - 3 * a * c;\n  var B = b * c - 9 * a * d;\n  var C = c * c - 3 * b * d;\n  var n = 0;\n\n  if (isAroundZero(A) && isAroundZero(B)) {\n    if (isAroundZero(b)) {\n      roots[0] = 0;\n    } else {\n      var t1 = -c / b; //t1, t2, t3, b is not zero\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = B * B - 4 * A * C;\n\n    if (isAroundZero(disc)) {\n      var K = B / A;\n      var t1 = -b / a + K; // t1, a is not zero\n\n      var t2 = -K / 2; // t2, t3\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n      var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n\n      if (Y1 < 0) {\n        Y1 = -mathPow(-Y1, ONE_THIRD);\n      } else {\n        Y1 = mathPow(Y1, ONE_THIRD);\n      }\n\n      if (Y2 < 0) {\n        Y2 = -mathPow(-Y2, ONE_THIRD);\n      } else {\n        Y2 = mathPow(Y2, ONE_THIRD);\n      }\n\n      var t1 = (-b - (Y1 + Y2)) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else {\n      var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n      var theta = Math.acos(T) / 3;\n      var ASqrt = mathSqrt(A);\n      var tmp = Math.cos(theta);\n      var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n      var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n      var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n\n      if (t3 >= 0 && t3 <= 1) {\n        roots[n++] = t3;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算三次贝塞尔方程极限值的位置\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {Array.<number>} extrema\n * @return {number} 有效数目\n */\n\n\nfunction cubicExtrema(p0, p1, p2, p3, extrema) {\n  var b = 6 * p2 - 12 * p1 + 6 * p0;\n  var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n  var c = 3 * p1 - 3 * p0;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      extrema[0] = -b / (2 * a);\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        extrema[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 细分三次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction cubicSubdivide(p0, p1, p2, p3, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p23 = (p3 - p2) * t + p2;\n  var p012 = (p12 - p01) * t + p01;\n  var p123 = (p23 - p12) * t + p12;\n  var p0123 = (p123 - p012) * t + p012; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012;\n  out[3] = p0123; // Seg1\n\n  out[4] = p0123;\n  out[5] = p123;\n  out[6] = p23;\n  out[7] = p3;\n}\n/**\n * 投射点到三次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} [out] 投射点\n * @return {number}\n */\n\n\nfunction cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  var prev;\n  var next;\n  var d1;\n  var d2;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n    _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n    d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    prev = t - interval;\n    next = t + interval; // t - interval\n\n    _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n    _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n    d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = cubicAt(x0, x1, x2, x3, next);\n      _v2[1] = cubicAt(y0, y1, y2, y3, next);\n      d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = cubicAt(x0, x1, x2, x3, t);\n    out[1] = cubicAt(y0, y1, y2, y3, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n/**\n * 计算二次方贝塞尔值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticAt(p0, p1, p2, t) {\n  var onet = 1 - t;\n  return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n}\n/**\n * 计算二次方贝塞尔导数值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticDerivativeAt(p0, p1, p2, t) {\n  return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n}\n/**\n * 计算二次方贝塞尔方程根\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction quadraticRootAt(p0, p1, p2, val, roots) {\n  var a = p0 - 2 * p1 + p2;\n  var b = 2 * (p1 - p0);\n  var c = p0 - val;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      var t1 = -b / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算二次贝塞尔方程极限值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @return {number}\n */\n\n\nfunction quadraticExtremum(p0, p1, p2) {\n  var divider = p0 + p2 - 2 * p1;\n\n  if (divider === 0) {\n    // p1 is center of p0 and p2\n    return 0.5;\n  } else {\n    return (p0 - p1) / divider;\n  }\n}\n/**\n * 细分二次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction quadraticSubdivide(p0, p1, p2, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p012 = (p12 - p01) * t + p01; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012; // Seg1\n\n  out[3] = p012;\n  out[4] = p12;\n  out[5] = p2;\n}\n/**\n * 投射点到二次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} out 投射点\n * @return {number}\n */\n\n\nfunction quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = quadraticAt(x0, x1, x2, _t);\n    _v1[1] = quadraticAt(y0, y1, y2, _t);\n    var d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    var prev = t - interval;\n    var next = t + interval; // t - interval\n\n    _v1[0] = quadraticAt(x0, x1, x2, prev);\n    _v1[1] = quadraticAt(y0, y1, y2, prev);\n    var d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = quadraticAt(x0, x1, x2, next);\n      _v2[1] = quadraticAt(y0, y1, y2, next);\n      var d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = quadraticAt(x0, x1, x2, t);\n    out[1] = quadraticAt(y0, y1, y2, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n\nexports.cubicAt = cubicAt;\nexports.cubicDerivativeAt = cubicDerivativeAt;\nexports.cubicRootAt = cubicRootAt;\nexports.cubicExtrema = cubicExtrema;\nexports.cubicSubdivide = cubicSubdivide;\nexports.cubicProjectPoint = cubicProjectPoint;\nexports.quadraticAt = quadraticAt;\nexports.quadraticDerivativeAt = quadraticDerivativeAt;\nexports.quadraticRootAt = quadraticRootAt;\nexports.quadraticExtremum = quadraticExtremum;\nexports.quadraticSubdivide = quadraticSubdivide;\nexports.quadraticProjectPoint = quadraticProjectPoint;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/curve.js\n// module id = 1048\n// module chunks = 0 1 2","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar _format = require(\"../util/format\");\n\nvar formatTime = _format.formatTime;\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\nvar getTooltipMarker = _format.getTooltipMarker;\n\nvar _clazz = require(\"../util/clazz\");\n\nvar set = _clazz.set;\nvar get = _clazz.get;\n\nvar modelUtil = require(\"../util/model\");\n\nvar ComponentModel = require(\"./Component\");\n\nvar colorPaletteMixin = require(\"./mixin/colorPalette\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\nvar SeriesModel = ComponentModel.extend({\n  type: 'series.__base__',\n\n  /**\n   * @readOnly\n   */\n  seriesIndex: 0,\n  // coodinateSystem will be injected in the echarts/CoordinateSystem\n  coordinateSystem: null,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * Data provided for legend\n   * @type {Function}\n   */\n  // PENDING\n  legendDataProvider: null,\n\n  /**\n   * Access path of color for visual\n   */\n  visualColorAccessPath: 'itemStyle.normal.color',\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  init: function (option, parentModel, ecModel, extraOpt) {\n    /**\n     * @type {number}\n     * @readOnly\n     */\n    this.seriesIndex = this.componentIndex;\n    this.mergeDefaultAndTheme(option, ecModel);\n    var data = this.getInitialData(option, ecModel);\n\n    /**\n     * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n     * @private\n     */\n    set(this, 'dataBeforeProcessed', data); // If we reverse the order (make data firstly, and then make\n    // dataBeforeProcessed by cloneShallow), cloneShallow will\n    // cause data.graph.data !== data when using\n    // module:echarts/data/Graph or module:echarts/data/Tree.\n    // See module:echarts/data/helper/linkList\n\n    this.restoreData();\n  },\n\n  /**\n   * Util for merge default and theme to option\n   * @param  {Object} option\n   * @param  {module:echarts/model/Global} ecModel\n   */\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? getLayoutParams(option) : {}; // Backward compat: using subType on theme.\n    // But if name duplicate between series subType\n    // (for example: parallel) add component mainType,\n    // add suffix 'Series'.\n\n    var themeSubType = this.subType;\n\n    if (ComponentModel.hasClass(themeSubType)) {\n      themeSubType += 'Series';\n    }\n\n    zrUtil.merge(option, ecModel.getTheme().get(this.subType));\n    zrUtil.merge(option, this.getDefaultOption()); // Default label emphasis `show`\n\n    modelUtil.defaultEmphasis(option.label, ['show']);\n    this.fillDataTextStyle(option.data);\n\n    if (layoutMode) {\n      mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (newSeriesOption, ecModel) {\n    newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n    this.fillDataTextStyle(newSeriesOption.data);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n    }\n\n    var data = this.getInitialData(newSeriesOption, ecModel); // TODO Merge data?\n\n    if (data) {\n      set(this, 'data', data);\n      set(this, 'dataBeforeProcessed', data.cloneShallow());\n    }\n  },\n  fillDataTextStyle: function (data) {\n    // Default data label emphasis `show`\n    // FIXME Tree structure data ?\n    // FIXME Performance ?\n    if (data) {\n      var props = ['show'];\n\n      for (var i = 0; i < data.length; i++) {\n        if (data[i] && data[i].label) {\n          modelUtil.defaultEmphasis(data[i].label, props);\n        }\n      }\n    }\n  },\n\n  /**\n   * Init a data structure from data related option in series\n   * Must be overwritten\n   */\n  getInitialData: function () {},\n\n  /**\n   * @param {string} [dataType]\n   * @return {module:echarts/data/List}\n   */\n  getData: function (dataType) {\n    var data = get(this, 'data');\n    return dataType == null ? data : data.getLinkedData(dataType);\n  },\n\n  /**\n   * @param {module:echarts/data/List} data\n   */\n  setData: function (data) {\n    set(this, 'data', data);\n  },\n\n  /**\n   * Get data before processed\n   * @return {module:echarts/data/List}\n   */\n  getRawData: function () {\n    return get(this, 'dataBeforeProcessed');\n  },\n\n  /**\n   * Coord dimension to data dimension.\n   *\n   * By default the result is the same as dimensions of series data.\n   * But in some series data dimensions are different from coord dimensions (i.e.\n   * candlestick and boxplot). Override this method to handle those cases.\n   *\n   * Coord dimension to data dimension can be one-to-many\n   *\n   * @param {string} coordDim\n   * @return {Array.<string>} dimensions on the axis.\n   */\n  coordDimToDataDim: function (coordDim) {\n    return modelUtil.coordDimToDataDim(this.getData(), coordDim);\n  },\n\n  /**\n   * Convert data dimension to coord dimension.\n   *\n   * @param {string|number} dataDim\n   * @return {string}\n   */\n  dataDimToCoordDim: function (dataDim) {\n    return modelUtil.dataDimToCoordDim(this.getData(), dataDim);\n  },\n\n  /**\n   * Get base axis if has coordinate system and has axis.\n   * By default use coordSys.getBaseAxis();\n   * Can be overrided for some chart.\n   * @return {type} description\n   */\n  getBaseAxis: function () {\n    var coordSys = this.coordinateSystem;\n    return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n  },\n  // FIXME\n\n  /**\n   * Default tooltip formatter\n   *\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    function formatArrayValue(value) {\n      var vertially = zrUtil.reduce(value, function (vertially, val, idx) {\n        var dimItem = data.getDimensionInfo(idx);\n        return vertially |= dimItem && dimItem.tooltip !== false && dimItem.tooltipName != null;\n      }, 0);\n      var result = [];\n      var tooltipDims = modelUtil.otherDimToDataDim(data, 'tooltip');\n      tooltipDims.length ? zrUtil.each(tooltipDims, function (dimIdx) {\n        setEachItem(data.get(dimIdx, dataIndex), dimIdx);\n      }) // By default, all dims is used on tooltip.\n      : zrUtil.each(value, setEachItem);\n\n      function setEachItem(val, dimIdx) {\n        var dimInfo = data.getDimensionInfo(dimIdx); // If `dimInfo.tooltip` is not set, show tooltip.\n\n        if (!dimInfo || dimInfo.otherDims.tooltip === false) {\n          return;\n        }\n\n        var dimType = dimInfo.type;\n        var valStr = (vertially ? '- ' + (dimInfo.tooltipName || dimInfo.name) + ': ' : '') + (dimType === 'ordinal' ? val + '' : dimType === 'time' ? multipleSeries ? '' : formatTime('yyyy/MM/dd hh:mm:ss', val) : addCommas(val));\n        valStr && result.push(encodeHTML(valStr));\n      }\n\n      return (vertially ? '<br/>' : '') + result.join(vertially ? '<br/>' : ', ');\n    }\n\n    var data = get(this, 'data');\n    var value = this.getRawValue(dataIndex);\n    var formattedValue = zrUtil.isArray(value) ? formatArrayValue(value) : encodeHTML(addCommas(value));\n    var name = data.getName(dataIndex);\n    var color = data.getItemVisual(dataIndex, 'color');\n\n    if (zrUtil.isObject(color) && color.colorStops) {\n      color = (color.colorStops[0] || {}).color;\n    }\n\n    color = color || 'transparent';\n    var colorEl = getTooltipMarker(color);\n    var seriesName = this.name; // FIXME\n\n    if (seriesName === '\\0-') {\n      // Not show '-'\n      seriesName = '';\n    }\n\n    seriesName = seriesName ? encodeHTML(seriesName) + (!multipleSeries ? '<br/>' : ': ') : '';\n    return !multipleSeries ? seriesName + colorEl + (name ? encodeHTML(name) + ': ' + formattedValue : formattedValue) : colorEl + seriesName + formattedValue;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isAnimationEnabled: function () {\n    if (env.node) {\n      return false;\n    }\n\n    var animationEnabled = this.getShallow('animation');\n\n    if (animationEnabled) {\n      if (this.getData().count() > this.getShallow('animationThreshold')) {\n        animationEnabled = false;\n      }\n    }\n\n    return animationEnabled;\n  },\n  restoreData: function () {\n    set(this, 'data', get(this, 'dataBeforeProcessed').cloneShallow());\n  },\n  getColorFromPalette: function (name, scope) {\n    var ecModel = this.ecModel; // PENDING\n\n    var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n\n    if (!color) {\n      color = ecModel.getColorFromPalette(name, scope);\n    }\n\n    return color;\n  },\n\n  /**\n   * Get data indices for show tooltip content. See tooltip.\n   * @abstract\n   * @param {Array.<string>|string} dim\n   * @param {Array.<number>} value\n   * @param {module:echarts/coord/single/SingleAxis} baseAxis\n   * @return {Object} {dataIndices, nestestValue}.\n   */\n  getAxisTooltipData: null,\n\n  /**\n   * See tooltip.\n   * @abstract\n   * @param {number} dataIndex\n   * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n   */\n  getTooltipPosition: null\n});\nzrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\nzrUtil.mixin(SeriesModel, colorPaletteMixin);\nvar _default = SeriesModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/Series.js\n// module id = 1049\n// module chunks = 0 1 2","/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\nvar arrySlice = Array.prototype.slice;\n/**\n * 事件分发器\n * @alias module:zrender/mixin/Eventful\n * @constructor\n */\n\nvar Eventful = function () {\n  this._$handlers = {};\n};\n\nEventful.prototype = {\n  constructor: Eventful,\n\n  /**\n   * 单次触发绑定，trigger后销毁\n   *\n   * @param {string} event 事件名\n   * @param {Function} handler 响应函数\n   * @param {Object} context\n   */\n  one: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: true,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 绑定事件\n   * @param {string} event 事件名\n   * @param {Function} handler 事件处理函数\n   * @param {Object} [context]\n   */\n  on: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: false,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 是否绑定了事件\n   * @param  {string}  event\n   * @return {boolean}\n   */\n  isSilent: function (event) {\n    var _h = this._$handlers;\n    return _h[event] && _h[event].length;\n  },\n\n  /**\n   * 解绑事件\n   * @param {string} event 事件名\n   * @param {Function} [handler] 事件处理函数\n   */\n  off: function (event, handler) {\n    var _h = this._$handlers;\n\n    if (!event) {\n      this._$handlers = {};\n      return this;\n    }\n\n    if (handler) {\n      if (_h[event]) {\n        var newList = [];\n\n        for (var i = 0, l = _h[event].length; i < l; i++) {\n          if (_h[event][i]['h'] != handler) {\n            newList.push(_h[event][i]);\n          }\n        }\n\n        _h[event] = newList;\n      }\n\n      if (_h[event] && _h[event].length === 0) {\n        delete _h[event];\n      }\n    } else {\n      delete _h[event];\n    }\n\n    return this;\n  },\n\n  /**\n   * 事件分发\n   *\n   * @param {string} type 事件类型\n   */\n  trigger: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 3) {\n        args = arrySlice.call(args, 1);\n      }\n\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(_h[i]['ctx']);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(_h[i]['ctx'], args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * 带有context的事件分发, 最后一个参数是事件回调的context\n   * @param {string} type 事件类型\n   */\n  triggerWithContext: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 4) {\n        args = arrySlice.call(args, 1, args.length - 1);\n      }\n\n      var ctx = args[args.length - 1];\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(ctx);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(ctx, args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(ctx, args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(ctx, args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  }\n}; // 对象可以通过 onxxxx 绑定事件\n\n/**\n * @event module:zrender/mixin/Eventful#onclick\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseout\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousemove\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousewheel\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousedown\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseup\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrag\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragstart\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragend\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragenter\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragleave\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrop\n * @type {Function}\n * @default null\n */\n\nvar _default = Eventful;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/mixin/Eventful.js\n// module id = 1050\n// module chunks = 0 1 2","var LRU = require(\"../core/LRU\");\n\nvar kCSSColorTable = {\n  'transparent': [0, 0, 0, 0],\n  'aliceblue': [240, 248, 255, 1],\n  'antiquewhite': [250, 235, 215, 1],\n  'aqua': [0, 255, 255, 1],\n  'aquamarine': [127, 255, 212, 1],\n  'azure': [240, 255, 255, 1],\n  'beige': [245, 245, 220, 1],\n  'bisque': [255, 228, 196, 1],\n  'black': [0, 0, 0, 1],\n  'blanchedalmond': [255, 235, 205, 1],\n  'blue': [0, 0, 255, 1],\n  'blueviolet': [138, 43, 226, 1],\n  'brown': [165, 42, 42, 1],\n  'burlywood': [222, 184, 135, 1],\n  'cadetblue': [95, 158, 160, 1],\n  'chartreuse': [127, 255, 0, 1],\n  'chocolate': [210, 105, 30, 1],\n  'coral': [255, 127, 80, 1],\n  'cornflowerblue': [100, 149, 237, 1],\n  'cornsilk': [255, 248, 220, 1],\n  'crimson': [220, 20, 60, 1],\n  'cyan': [0, 255, 255, 1],\n  'darkblue': [0, 0, 139, 1],\n  'darkcyan': [0, 139, 139, 1],\n  'darkgoldenrod': [184, 134, 11, 1],\n  'darkgray': [169, 169, 169, 1],\n  'darkgreen': [0, 100, 0, 1],\n  'darkgrey': [169, 169, 169, 1],\n  'darkkhaki': [189, 183, 107, 1],\n  'darkmagenta': [139, 0, 139, 1],\n  'darkolivegreen': [85, 107, 47, 1],\n  'darkorange': [255, 140, 0, 1],\n  'darkorchid': [153, 50, 204, 1],\n  'darkred': [139, 0, 0, 1],\n  'darksalmon': [233, 150, 122, 1],\n  'darkseagreen': [143, 188, 143, 1],\n  'darkslateblue': [72, 61, 139, 1],\n  'darkslategray': [47, 79, 79, 1],\n  'darkslategrey': [47, 79, 79, 1],\n  'darkturquoise': [0, 206, 209, 1],\n  'darkviolet': [148, 0, 211, 1],\n  'deeppink': [255, 20, 147, 1],\n  'deepskyblue': [0, 191, 255, 1],\n  'dimgray': [105, 105, 105, 1],\n  'dimgrey': [105, 105, 105, 1],\n  'dodgerblue': [30, 144, 255, 1],\n  'firebrick': [178, 34, 34, 1],\n  'floralwhite': [255, 250, 240, 1],\n  'forestgreen': [34, 139, 34, 1],\n  'fuchsia': [255, 0, 255, 1],\n  'gainsboro': [220, 220, 220, 1],\n  'ghostwhite': [248, 248, 255, 1],\n  'gold': [255, 215, 0, 1],\n  'goldenrod': [218, 165, 32, 1],\n  'gray': [128, 128, 128, 1],\n  'green': [0, 128, 0, 1],\n  'greenyellow': [173, 255, 47, 1],\n  'grey': [128, 128, 128, 1],\n  'honeydew': [240, 255, 240, 1],\n  'hotpink': [255, 105, 180, 1],\n  'indianred': [205, 92, 92, 1],\n  'indigo': [75, 0, 130, 1],\n  'ivory': [255, 255, 240, 1],\n  'khaki': [240, 230, 140, 1],\n  'lavender': [230, 230, 250, 1],\n  'lavenderblush': [255, 240, 245, 1],\n  'lawngreen': [124, 252, 0, 1],\n  'lemonchiffon': [255, 250, 205, 1],\n  'lightblue': [173, 216, 230, 1],\n  'lightcoral': [240, 128, 128, 1],\n  'lightcyan': [224, 255, 255, 1],\n  'lightgoldenrodyellow': [250, 250, 210, 1],\n  'lightgray': [211, 211, 211, 1],\n  'lightgreen': [144, 238, 144, 1],\n  'lightgrey': [211, 211, 211, 1],\n  'lightpink': [255, 182, 193, 1],\n  'lightsalmon': [255, 160, 122, 1],\n  'lightseagreen': [32, 178, 170, 1],\n  'lightskyblue': [135, 206, 250, 1],\n  'lightslategray': [119, 136, 153, 1],\n  'lightslategrey': [119, 136, 153, 1],\n  'lightsteelblue': [176, 196, 222, 1],\n  'lightyellow': [255, 255, 224, 1],\n  'lime': [0, 255, 0, 1],\n  'limegreen': [50, 205, 50, 1],\n  'linen': [250, 240, 230, 1],\n  'magenta': [255, 0, 255, 1],\n  'maroon': [128, 0, 0, 1],\n  'mediumaquamarine': [102, 205, 170, 1],\n  'mediumblue': [0, 0, 205, 1],\n  'mediumorchid': [186, 85, 211, 1],\n  'mediumpurple': [147, 112, 219, 1],\n  'mediumseagreen': [60, 179, 113, 1],\n  'mediumslateblue': [123, 104, 238, 1],\n  'mediumspringgreen': [0, 250, 154, 1],\n  'mediumturquoise': [72, 209, 204, 1],\n  'mediumvioletred': [199, 21, 133, 1],\n  'midnightblue': [25, 25, 112, 1],\n  'mintcream': [245, 255, 250, 1],\n  'mistyrose': [255, 228, 225, 1],\n  'moccasin': [255, 228, 181, 1],\n  'navajowhite': [255, 222, 173, 1],\n  'navy': [0, 0, 128, 1],\n  'oldlace': [253, 245, 230, 1],\n  'olive': [128, 128, 0, 1],\n  'olivedrab': [107, 142, 35, 1],\n  'orange': [255, 165, 0, 1],\n  'orangered': [255, 69, 0, 1],\n  'orchid': [218, 112, 214, 1],\n  'palegoldenrod': [238, 232, 170, 1],\n  'palegreen': [152, 251, 152, 1],\n  'paleturquoise': [175, 238, 238, 1],\n  'palevioletred': [219, 112, 147, 1],\n  'papayawhip': [255, 239, 213, 1],\n  'peachpuff': [255, 218, 185, 1],\n  'peru': [205, 133, 63, 1],\n  'pink': [255, 192, 203, 1],\n  'plum': [221, 160, 221, 1],\n  'powderblue': [176, 224, 230, 1],\n  'purple': [128, 0, 128, 1],\n  'red': [255, 0, 0, 1],\n  'rosybrown': [188, 143, 143, 1],\n  'royalblue': [65, 105, 225, 1],\n  'saddlebrown': [139, 69, 19, 1],\n  'salmon': [250, 128, 114, 1],\n  'sandybrown': [244, 164, 96, 1],\n  'seagreen': [46, 139, 87, 1],\n  'seashell': [255, 245, 238, 1],\n  'sienna': [160, 82, 45, 1],\n  'silver': [192, 192, 192, 1],\n  'skyblue': [135, 206, 235, 1],\n  'slateblue': [106, 90, 205, 1],\n  'slategray': [112, 128, 144, 1],\n  'slategrey': [112, 128, 144, 1],\n  'snow': [255, 250, 250, 1],\n  'springgreen': [0, 255, 127, 1],\n  'steelblue': [70, 130, 180, 1],\n  'tan': [210, 180, 140, 1],\n  'teal': [0, 128, 128, 1],\n  'thistle': [216, 191, 216, 1],\n  'tomato': [255, 99, 71, 1],\n  'turquoise': [64, 224, 208, 1],\n  'violet': [238, 130, 238, 1],\n  'wheat': [245, 222, 179, 1],\n  'white': [255, 255, 255, 1],\n  'whitesmoke': [245, 245, 245, 1],\n  'yellow': [255, 255, 0, 1],\n  'yellowgreen': [154, 205, 50, 1]\n};\n\nfunction clampCssByte(i) {\n  // Clamp to integer 0 .. 255.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 255 ? 255 : i;\n}\n\nfunction clampCssAngle(i) {\n  // Clamp to integer 0 .. 360.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 360 ? 360 : i;\n}\n\nfunction clampCssFloat(f) {\n  // Clamp to float 0.0 .. 1.0.\n  return f < 0 ? 0 : f > 1 ? 1 : f;\n}\n\nfunction parseCssInt(str) {\n  // int or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssByte(parseFloat(str) / 100 * 255);\n  }\n\n  return clampCssByte(parseInt(str, 10));\n}\n\nfunction parseCssFloat(str) {\n  // float or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssFloat(parseFloat(str) / 100);\n  }\n\n  return clampCssFloat(parseFloat(str));\n}\n\nfunction cssHueToRgb(m1, m2, h) {\n  if (h < 0) {\n    h += 1;\n  } else if (h > 1) {\n    h -= 1;\n  }\n\n  if (h * 6 < 1) {\n    return m1 + (m2 - m1) * h * 6;\n  }\n\n  if (h * 2 < 1) {\n    return m2;\n  }\n\n  if (h * 3 < 2) {\n    return m1 + (m2 - m1) * (2 / 3 - h) * 6;\n  }\n\n  return m1;\n}\n\nfunction lerpNumber(a, b, p) {\n  return a + (b - a) * p;\n}\n\nfunction setRgba(out, r, g, b, a) {\n  out[0] = r;\n  out[1] = g;\n  out[2] = b;\n  out[3] = a;\n  return out;\n}\n\nfunction copyRgba(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\nvar colorCache = new LRU(20);\nvar lastRemovedArr = null;\n\nfunction putToCache(colorStr, rgbaArr) {\n  // Reuse removed array\n  if (lastRemovedArr) {\n    copyRgba(lastRemovedArr, rgbaArr);\n  }\n\n  lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || rgbaArr.slice());\n}\n/**\n * @param {string} colorStr\n * @param {Array.<number>} out\n * @return {Array.<number>}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction parse(colorStr, rgbaArr) {\n  if (!colorStr) {\n    return;\n  }\n\n  rgbaArr = rgbaArr || [];\n  var cached = colorCache.get(colorStr);\n\n  if (cached) {\n    return copyRgba(rgbaArr, cached);\n  } // colorStr may be not string\n\n\n  colorStr = colorStr + ''; // Remove all whitespace, not compliant, but should just be more accepting.\n\n  var str = colorStr.replace(/ /g, '').toLowerCase(); // Color keywords (and transparent) lookup.\n\n  if (str in kCSSColorTable) {\n    copyRgba(rgbaArr, kCSSColorTable[str]);\n    putToCache(colorStr, rgbaArr);\n    return rgbaArr;\n  } // #abc and #abc123 syntax.\n\n\n  if (str.charAt(0) === '#') {\n    if (str.length === 4) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xfff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xf00) >> 4 | (iv & 0xf00) >> 8, iv & 0xf0 | (iv & 0xf0) >> 4, iv & 0xf | (iv & 0xf) << 4, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    } else if (str.length === 7) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xffffff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xff0000) >> 16, (iv & 0xff00) >> 8, iv & 0xff, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    }\n\n    return;\n  }\n\n  var op = str.indexOf('('),\n      ep = str.indexOf(')');\n\n  if (op !== -1 && ep + 1 === str.length) {\n    var fname = str.substr(0, op);\n    var params = str.substr(op + 1, ep - (op + 1)).split(',');\n    var alpha = 1; // To allow case fallthrough.\n\n    switch (fname) {\n      case 'rgba':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        alpha = parseCssFloat(params.pop());\n      // jshint ignore:line\n      // Fall through.\n\n      case 'rgb':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        setRgba(rgbaArr, parseCssInt(params[0]), parseCssInt(params[1]), parseCssInt(params[2]), alpha);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsla':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        params[3] = parseCssFloat(params[3]);\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsl':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      default:\n        return;\n    }\n  }\n\n  setRgba(rgbaArr, 0, 0, 0, 1);\n  return;\n}\n/**\n * @param {Array.<number>} hsla\n * @param {Array.<number>} rgba\n * @return {Array.<number>} rgba\n */\n\n\nfunction hsla2rgba(hsla, rgba) {\n  var h = (parseFloat(hsla[0]) % 360 + 360) % 360 / 360; // 0 .. 1\n  // NOTE(deanm): According to the CSS spec s/l should only be\n  // percentages, but we don't bother and let float or percentage.\n\n  var s = parseCssFloat(hsla[1]);\n  var l = parseCssFloat(hsla[2]);\n  var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n  var m1 = l * 2 - m2;\n  rgba = rgba || [];\n  setRgba(rgba, clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255), clampCssByte(cssHueToRgb(m1, m2, h) * 255), clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255), 1);\n\n  if (hsla.length === 4) {\n    rgba[3] = hsla[3];\n  }\n\n  return rgba;\n}\n/**\n * @param {Array.<number>} rgba\n * @return {Array.<number>} hsla\n */\n\n\nfunction rgba2hsla(rgba) {\n  if (!rgba) {\n    return;\n  } // RGB from 0 to 255\n\n\n  var R = rgba[0] / 255;\n  var G = rgba[1] / 255;\n  var B = rgba[2] / 255;\n  var vMin = Math.min(R, G, B); // Min. value of RGB\n\n  var vMax = Math.max(R, G, B); // Max. value of RGB\n\n  var delta = vMax - vMin; // Delta RGB value\n\n  var L = (vMax + vMin) / 2;\n  var H;\n  var S; // HSL results from 0 to 1\n\n  if (delta === 0) {\n    H = 0;\n    S = 0;\n  } else {\n    if (L < 0.5) {\n      S = delta / (vMax + vMin);\n    } else {\n      S = delta / (2 - vMax - vMin);\n    }\n\n    var deltaR = ((vMax - R) / 6 + delta / 2) / delta;\n    var deltaG = ((vMax - G) / 6 + delta / 2) / delta;\n    var deltaB = ((vMax - B) / 6 + delta / 2) / delta;\n\n    if (R === vMax) {\n      H = deltaB - deltaG;\n    } else if (G === vMax) {\n      H = 1 / 3 + deltaR - deltaB;\n    } else if (B === vMax) {\n      H = 2 / 3 + deltaG - deltaR;\n    }\n\n    if (H < 0) {\n      H += 1;\n    }\n\n    if (H > 1) {\n      H -= 1;\n    }\n  }\n\n  var hsla = [H * 360, S, L];\n\n  if (rgba[3] != null) {\n    hsla.push(rgba[3]);\n  }\n\n  return hsla;\n}\n/**\n * @param {string} color\n * @param {number} level\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction lift(color, level) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    for (var i = 0; i < 3; i++) {\n      if (level < 0) {\n        colorArr[i] = colorArr[i] * (1 - level) | 0;\n      } else {\n        colorArr[i] = (255 - colorArr[i]) * level + colorArr[i] | 0;\n      }\n    }\n\n    return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n  }\n}\n/**\n * @param {string} color\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction toHex(color) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + +colorArr[2]).toString(16).slice(1);\n  }\n}\n/**\n * Map value to color. Faster than lerp methods because color is represented by rgba array.\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<Array.<number>>} colors List of rgba color array\n * @param {Array.<number>} [out] Mapped gba color array\n * @return {Array.<number>} will be null/undefined if input illegal.\n */\n\n\nfunction fastLerp(normalizedValue, colors, out) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  out = out || [];\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = colors[leftIndex];\n  var rightColor = colors[rightIndex];\n  var dv = value - leftIndex;\n  out[0] = clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv));\n  out[1] = clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv));\n  out[2] = clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv));\n  out[3] = clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv));\n  return out;\n}\n/**\n * @deprecated\n */\n\n\nvar fastMapToColor = fastLerp;\n/**\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<string>} colors Color list.\n * @param {boolean=} fullOutput Default false.\n * @return {(string|Object)} Result color. If fullOutput,\n *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n * @memberOf module:zrender/util/color\n */\n\nfunction lerp(normalizedValue, colors, fullOutput) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = parse(colors[leftIndex]);\n  var rightColor = parse(colors[rightIndex]);\n  var dv = value - leftIndex;\n  var color = stringify([clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv)), clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv)), clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv)), clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv))], 'rgba');\n  return fullOutput ? {\n    color: color,\n    leftIndex: leftIndex,\n    rightIndex: rightIndex,\n    value: value\n  } : color;\n}\n/**\n * @deprecated\n */\n\n\nvar mapToColor = lerp;\n/**\n * @param {string} color\n * @param {number=} h 0 ~ 360, ignore when null.\n * @param {number=} s 0 ~ 1, ignore when null.\n * @param {number=} l 0 ~ 1, ignore when null.\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\nfunction modifyHSL(color, h, s, l) {\n  color = parse(color);\n\n  if (color) {\n    color = rgba2hsla(color);\n    h != null && (color[0] = clampCssAngle(h));\n    s != null && (color[1] = parseCssFloat(s));\n    l != null && (color[2] = parseCssFloat(l));\n    return stringify(hsla2rgba(color), 'rgba');\n  }\n}\n/**\n * @param {string} color\n * @param {number=} alpha 0 ~ 1\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\n\nfunction modifyAlpha(color, alpha) {\n  color = parse(color);\n\n  if (color && alpha != null) {\n    color[3] = clampCssFloat(alpha);\n    return stringify(color, 'rgba');\n  }\n}\n/**\n * @param {Array.<number>} arrColor like [12,33,44,0.4]\n * @param {string} type 'rgba', 'hsva', ...\n * @return {string} Result color. (If input illegal, return undefined).\n */\n\n\nfunction stringify(arrColor, type) {\n  if (!arrColor || !arrColor.length) {\n    return;\n  }\n\n  var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n\n  if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n    colorStr += ',' + arrColor[3];\n  }\n\n  return type + '(' + colorStr + ')';\n}\n\nexports.parse = parse;\nexports.lift = lift;\nexports.toHex = toHex;\nexports.fastLerp = fastLerp;\nexports.fastMapToColor = fastMapToColor;\nexports.lerp = lerp;\nexports.mapToColor = mapToColor;\nexports.modifyHSL = modifyHSL;\nexports.modifyAlpha = modifyAlpha;\nexports.stringify = stringify;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/tool/color.js\n// module id = 1051\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"./graphic\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\n// Symbol factory\n\n/**\n * Triangle shape\n * @inner\n */\nvar Triangle = graphic.extendShape({\n  type: 'triangle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy + height);\n    path.lineTo(cx - width, cy + height);\n    path.closePath();\n  }\n});\n/**\n * Diamond shape\n * @inner\n */\n\nvar Diamond = graphic.extendShape({\n  type: 'diamond',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy);\n    path.lineTo(cx, cy + height);\n    path.lineTo(cx - width, cy);\n    path.closePath();\n  }\n});\n/**\n * Pin shape\n * @inner\n */\n\nvar Pin = graphic.extendShape({\n  type: 'pin',\n  shape: {\n    // x, y on the cusp\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var w = shape.width / 5 * 3; // Height must be larger than width\n\n    var h = Math.max(w, shape.height);\n    var r = w / 2; // Dist on y with tangent point and circle center\n\n    var dy = r * r / (h - r);\n    var cy = y - h + r + dy;\n    var angle = Math.asin(dy / r); // Dist on x with tangent point and circle center\n\n    var dx = Math.cos(angle) * r;\n    var tanX = Math.sin(angle);\n    var tanY = Math.cos(angle);\n    var cpLen = r * 0.6;\n    var cpLen2 = r * 0.7;\n    path.moveTo(x - dx, cy + dy);\n    path.arc(x, cy, r, Math.PI - angle, Math.PI * 2 + angle);\n    path.bezierCurveTo(x + dx - tanX * cpLen, cy + dy + tanY * cpLen, x, y - cpLen2, x, y);\n    path.bezierCurveTo(x, y - cpLen2, x - dx + tanX * cpLen, cy + dy + tanY * cpLen, x - dx, cy + dy);\n    path.closePath();\n  }\n});\n/**\n * Arrow shape\n * @inner\n */\n\nvar Arrow = graphic.extendShape({\n  type: 'arrow',\n  shape: {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var height = shape.height;\n    var width = shape.width;\n    var x = shape.x;\n    var y = shape.y;\n    var dx = width / 3 * 2;\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + dx, y + height);\n    ctx.lineTo(x, y + height / 4 * 3);\n    ctx.lineTo(x - dx, y + height);\n    ctx.lineTo(x, y);\n    ctx.closePath();\n  }\n});\n/**\n * Map of path contructors\n * @type {Object.<string, module:zrender/graphic/Path>}\n */\n\nvar symbolCtors = {\n  line: graphic.Line,\n  rect: graphic.Rect,\n  roundRect: graphic.Rect,\n  square: graphic.Rect,\n  circle: graphic.Circle,\n  diamond: Diamond,\n  pin: Pin,\n  arrow: Arrow,\n  triangle: Triangle\n};\nvar symbolShapeMakers = {\n  line: function (x, y, w, h, shape) {\n    // FIXME\n    shape.x1 = x;\n    shape.y1 = y + h / 2;\n    shape.x2 = x + w;\n    shape.y2 = y + h / 2;\n  },\n  rect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n  },\n  roundRect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n    shape.r = Math.min(w, h) / 4;\n  },\n  square: function (x, y, w, h, shape) {\n    var size = Math.min(w, h);\n    shape.x = x;\n    shape.y = y;\n    shape.width = size;\n    shape.height = size;\n  },\n  circle: function (x, y, w, h, shape) {\n    // Put circle in the center of square\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.r = Math.min(w, h) / 2;\n  },\n  diamond: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  pin: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  arrow: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  triangle: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  }\n};\nvar symbolBuildProxies = {};\nzrUtil.each(symbolCtors, function (Ctor, name) {\n  symbolBuildProxies[name] = new Ctor();\n});\nvar SymbolClz = graphic.extendShape({\n  type: 'symbol',\n  shape: {\n    symbolType: '',\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  beforeBrush: function () {\n    var style = this.style;\n    var shape = this.shape; // FIXME\n\n    if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n      style.textPosition = ['50%', '40%'];\n      style.textAlign = 'center';\n      style.textVerticalAlign = 'middle';\n    }\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    var symbolType = shape.symbolType;\n    var proxySymbol = symbolBuildProxies[symbolType];\n\n    if (shape.symbolType !== 'none') {\n      if (!proxySymbol) {\n        // Default rect\n        symbolType = 'rect';\n        proxySymbol = symbolBuildProxies[symbolType];\n      }\n\n      symbolShapeMakers[symbolType](shape.x, shape.y, shape.width, shape.height, proxySymbol.shape);\n      proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n    }\n  }\n}); // Provide setColor helper method to avoid determine if set the fill or stroke outside\n\nfunction symbolPathSetColor(color, innerColor) {\n  if (this.type !== 'image') {\n    var symbolStyle = this.style;\n    var symbolShape = this.shape;\n\n    if (symbolShape && symbolShape.symbolType === 'line') {\n      symbolStyle.stroke = color;\n    } else if (this.__isEmptyBrush) {\n      symbolStyle.stroke = color;\n      symbolStyle.fill = innerColor || '#fff';\n    } else {\n      // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n      symbolStyle.fill && (symbolStyle.fill = color);\n      symbolStyle.stroke && (symbolStyle.stroke = color);\n    }\n\n    this.dirty(false);\n  }\n}\n/**\n * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n * @param {string} symbolType\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @param {string} color\n * @param {boolean} [keepAspect=false] whether to keep the ratio of w/h,\n *                            for path and image only.\n */\n\n\nfunction createSymbol(symbolType, x, y, w, h, color, keepAspect) {\n  // TODO Support image object, DynamicImage.\n  var isEmpty = symbolType.indexOf('empty') === 0;\n\n  if (isEmpty) {\n    symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n  }\n\n  var symbolPath;\n\n  if (symbolType.indexOf('image://') === 0) {\n    symbolPath = graphic.makeImage(symbolType.slice(8), new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else if (symbolType.indexOf('path://') === 0) {\n    symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else {\n    symbolPath = new SymbolClz({\n      shape: {\n        symbolType: symbolType,\n        x: x,\n        y: y,\n        width: w,\n        height: h\n      }\n    });\n  }\n\n  symbolPath.__isEmptyBrush = isEmpty;\n  symbolPath.setColor = symbolPathSetColor;\n  symbolPath.setColor(color);\n  return symbolPath;\n}\n\nexports.createSymbol = createSymbol;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/symbol.js\n// module id = 1052\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _model = require(\"../../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\n/**\n * Complete dimensions by data (guess dimension).\n */\nvar each = zrUtil.each;\nvar isString = zrUtil.isString;\nvar defaults = zrUtil.defaults;\nvar OTHER_DIMS = {\n  tooltip: 1,\n  label: 1,\n  itemName: 1\n};\n/**\n * Complete the dimensions array, by user defined `dimension` and `encode`,\n * and guessing from the data structure.\n * If no 'value' dimension specified, the first no-named dimension will be\n * named as 'value'.\n *\n * @param {Array.<string>} sysDims Necessary dimensions, like ['x', 'y'], which\n *      provides not only dim template, but also default order.\n *      `name` of each item provides default coord name.\n *      [{dimsDef: []}, ...] can be specified to give names.\n * @param {Array} data Data list. [[1, 2, 3], [2, 3, 4]].\n * @param {Object} [opt]\n * @param {Array.<Object|string>} [opt.dimsDef] option.series.dimensions User defined dimensions\n *      For example: ['asdf', {name, type}, ...].\n * @param {Object} [opt.encodeDef] option.series.encode {x: 2, y: [3, 1], tooltip: [1, 2], label: 3}\n * @param {string} [opt.extraPrefix] Prefix of name when filling the left dimensions.\n * @param {string} [opt.extraFromZero] If specified, extra dim names will be:\n *                      extraPrefix + 0, extraPrefix + extraBaseIndex + 1 ...\n *                      If not specified, extra dim names will be:\n *                      extraPrefix, extraPrefix + 0, extraPrefix + 1 ...\n * @param {number} [opt.dimCount] If not specified, guess by the first data item.\n * @return {Array.<Object>} [{\n *      name: string mandatory,\n *      coordDim: string mandatory,\n *      coordDimIndex: number mandatory,\n *      type: string optional,\n *      tooltipName: string optional,\n *      otherDims: {\n *          tooltip: number optional,\n *          label: number optional\n *      },\n *      isExtraCoord: boolean true or undefined.\n *      other props ...\n * }]\n */\n\nfunction completeDimensions(sysDims, data, opt) {\n  data = data || [];\n  opt = opt || {};\n  sysDims = (sysDims || []).slice();\n  var dimsDef = (opt.dimsDef || []).slice();\n  var encodeDef = zrUtil.createHashMap(opt.encodeDef);\n  var dataDimNameMap = zrUtil.createHashMap();\n  var coordDimNameMap = zrUtil.createHashMap(); // var valueCandidate;\n\n  var result = [];\n  var dimCount = opt.dimCount;\n\n  if (dimCount == null) {\n    var value0 = retrieveValue(data[0]);\n    dimCount = Math.max(zrUtil.isArray(value0) && value0.length || 1, sysDims.length, dimsDef.length);\n    each(sysDims, function (sysDimItem) {\n      var sysDimItemDimsDef = sysDimItem.dimsDef;\n      sysDimItemDimsDef && (dimCount = Math.max(dimCount, sysDimItemDimsDef.length));\n    });\n  } // Apply user defined dims (`name` and `type`) and init result.\n\n\n  for (var i = 0; i < dimCount; i++) {\n    var dimDefItem = isString(dimsDef[i]) ? {\n      name: dimsDef[i]\n    } : dimsDef[i] || {};\n    var userDimName = dimDefItem.name;\n    var resultItem = result[i] = {\n      otherDims: {}\n    }; // Name will be applied later for avoiding duplication.\n\n    if (userDimName != null && dataDimNameMap.get(userDimName) == null) {\n      // Only if `series.dimensions` is defined in option, tooltipName\n      // will be set, and dimension will be diplayed vertically in\n      // tooltip by default.\n      resultItem.name = resultItem.tooltipName = userDimName;\n      dataDimNameMap.set(userDimName, i);\n    }\n\n    dimDefItem.type != null && (resultItem.type = dimDefItem.type);\n  } // Set `coordDim` and `coordDimIndex` by `encodeDef` and normalize `encodeDef`.\n\n\n  encodeDef.each(function (dataDims, coordDim) {\n    dataDims = encodeDef.set(coordDim, normalizeToArray(dataDims).slice());\n    each(dataDims, function (resultDimIdx, coordDimIndex) {\n      // The input resultDimIdx can be dim name or index.\n      isString(resultDimIdx) && (resultDimIdx = dataDimNameMap.get(resultDimIdx));\n\n      if (resultDimIdx != null && resultDimIdx < dimCount) {\n        dataDims[coordDimIndex] = resultDimIdx;\n        applyDim(result[resultDimIdx], coordDim, coordDimIndex);\n      }\n    });\n  }); // Apply templetes and default order from `sysDims`.\n\n  var availDimIdx = 0;\n  each(sysDims, function (sysDimItem, sysDimIndex) {\n    var coordDim;\n    var sysDimItem;\n    var sysDimItemDimsDef;\n    var sysDimItemOtherDims;\n\n    if (isString(sysDimItem)) {\n      coordDim = sysDimItem;\n      sysDimItem = {};\n    } else {\n      coordDim = sysDimItem.name;\n      sysDimItem = zrUtil.clone(sysDimItem); // `coordDimIndex` should not be set directly.\n\n      sysDimItemDimsDef = sysDimItem.dimsDef;\n      sysDimItemOtherDims = sysDimItem.otherDims;\n      sysDimItem.name = sysDimItem.coordDim = sysDimItem.coordDimIndex = sysDimItem.dimsDef = sysDimItem.otherDims = null;\n    }\n\n    var dataDims = normalizeToArray(encodeDef.get(coordDim)); // dimensions provides default dim sequences.\n\n    if (!dataDims.length) {\n      for (var i = 0; i < (sysDimItemDimsDef && sysDimItemDimsDef.length || 1); i++) {\n        while (availDimIdx < result.length && result[availDimIdx].coordDim != null) {\n          availDimIdx++;\n        }\n\n        availDimIdx < result.length && dataDims.push(availDimIdx++);\n      }\n    } // Apply templates.\n\n\n    each(dataDims, function (resultDimIdx, coordDimIndex) {\n      var resultItem = result[resultDimIdx];\n      applyDim(defaults(resultItem, sysDimItem), coordDim, coordDimIndex);\n\n      if (resultItem.name == null && sysDimItemDimsDef) {\n        resultItem.name = resultItem.tooltipName = sysDimItemDimsDef[coordDimIndex];\n      }\n\n      sysDimItemOtherDims && defaults(resultItem.otherDims, sysDimItemOtherDims);\n    });\n  }); // Make sure the first extra dim is 'value'.\n\n  var extra = opt.extraPrefix || 'value'; // Set dim `name` and other `coordDim` and other props.\n\n  for (var resultDimIdx = 0; resultDimIdx < dimCount; resultDimIdx++) {\n    var resultItem = result[resultDimIdx] = result[resultDimIdx] || {};\n    var coordDim = resultItem.coordDim;\n    coordDim == null && (resultItem.coordDim = genName(extra, coordDimNameMap, opt.extraFromZero), resultItem.coordDimIndex = 0, resultItem.isExtraCoord = true);\n    resultItem.name == null && (resultItem.name = genName(resultItem.coordDim, dataDimNameMap));\n    resultItem.type == null && guessOrdinal(data, resultDimIdx) && (resultItem.type = 'ordinal');\n  }\n\n  return result;\n\n  function applyDim(resultItem, coordDim, coordDimIndex) {\n    if (OTHER_DIMS[coordDim]) {\n      resultItem.otherDims[coordDim] = coordDimIndex;\n    } else {\n      resultItem.coordDim = coordDim;\n      resultItem.coordDimIndex = coordDimIndex;\n      coordDimNameMap.set(coordDim, true);\n    }\n  }\n\n  function genName(name, map, fromZero) {\n    if (fromZero || map.get(name) != null) {\n      var i = 0;\n\n      while (map.get(name + i) != null) {\n        i++;\n      }\n\n      name += i;\n    }\n\n    map.set(name, true);\n    return name;\n  }\n} // The rule should not be complex, otherwise user might not\n// be able to known where the data is wrong.\n\n\nvar guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {\n  for (var i = 0, len = data.length; i < len; i++) {\n    var value = retrieveValue(data[i]);\n\n    if (!zrUtil.isArray(value)) {\n      return false;\n    }\n\n    var value = value[dimIndex]; // Consider usage convenience, '1', '2' will be treated as \"number\".\n    // `isFinit('')` get `true`.\n\n    if (value != null && isFinite(value) && value !== '') {\n      return false;\n    } else if (isString(value) && value !== '-') {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nfunction retrieveValue(o) {\n  return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value : o;\n}\n\nvar _default = completeDimensions;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/data/helper/completeDimensions.js\n// module id = 1053\n// module chunks = 0 1 2","var _default = {\n  toolbox: {\n    brush: {\n      title: {\n        rect: '矩形选择',\n        polygon: '圈选',\n        lineX: '横向选择',\n        lineY: '纵向选择',\n        keep: '保持选择',\n        clear: '清除选择'\n      }\n    },\n    dataView: {\n      title: '数据视图',\n      lang: ['数据视图', '关闭', '刷新']\n    },\n    dataZoom: {\n      title: {\n        zoom: '区域缩放',\n        back: '区域缩放还原'\n      }\n    },\n    magicType: {\n      title: {\n        line: '切换为折线图',\n        bar: '切换为柱状图',\n        stack: '切换为堆叠',\n        tiled: '切换为平铺'\n      }\n    },\n    restore: {\n      title: '还原'\n    },\n    saveAsImage: {\n      title: '保存为图片',\n      lang: ['右键另存为图片']\n    }\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/lang.js\n// module id = 1054\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar coordinateSystemCreators = {};\n\nfunction CoordinateSystemManager() {\n  this._coordinateSystems = [];\n}\n\nCoordinateSystemManager.prototype = {\n  constructor: CoordinateSystemManager,\n  create: function (ecModel, api) {\n    var coordinateSystems = [];\n    zrUtil.each(coordinateSystemCreators, function (creater, type) {\n      var list = creater.create(ecModel, api);\n      coordinateSystems = coordinateSystems.concat(list || []);\n    });\n    this._coordinateSystems = coordinateSystems;\n  },\n  update: function (ecModel, api) {\n    zrUtil.each(this._coordinateSystems, function (coordSys) {\n      // FIXME MUST have\n      coordSys.update && coordSys.update(ecModel, api);\n    });\n  },\n  getCoordinateSystems: function () {\n    return this._coordinateSystems.slice();\n  }\n};\n\nCoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n  coordinateSystemCreators[type] = coordinateSystemCreator;\n};\n\nCoordinateSystemManager.get = function (type) {\n  return coordinateSystemCreators[type];\n};\n\nvar _default = CoordinateSystemManager;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/CoordinateSystem.js\n// module id = 1055\n// module chunks = 0 1 2","var curve = require(\"./curve\");\n\nvar vec2 = require(\"./vector\");\n\nvar bbox = require(\"./bbox\");\n\nvar BoundingRect = require(\"./BoundingRect\");\n\nvar _config = require(\"../config\");\n\nvar dpr = _config.devicePixelRatio;\n\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n// TODO getTotalLength, getPointAtLength\nvar CMD = {\n  M: 1,\n  L: 2,\n  C: 3,\n  Q: 4,\n  A: 5,\n  Z: 6,\n  // Rect\n  R: 7\n}; // var CMD_MEM_SIZE = {\n//     M: 3,\n//     L: 3,\n//     C: 7,\n//     Q: 5,\n//     A: 9,\n//     R: 5,\n//     Z: 1\n// };\n\nvar min = [];\nvar max = [];\nvar min2 = [];\nvar max2 = [];\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathCos = Math.cos;\nvar mathSin = Math.sin;\nvar mathSqrt = Math.sqrt;\nvar mathAbs = Math.abs;\nvar hasTypedArray = typeof Float32Array != 'undefined';\n/**\n * @alias module:zrender/core/PathProxy\n * @constructor\n */\n\nvar PathProxy = function (notSaveData) {\n  this._saveData = !(notSaveData || false);\n\n  if (this._saveData) {\n    /**\n     * Path data. Stored as flat array\n     * @type {Array.<Object>}\n     */\n    this.data = [];\n  }\n\n  this._ctx = null;\n};\n/**\n * 快速计算Path包围盒（并不是最小包围盒）\n * @return {Object}\n */\n\n\nPathProxy.prototype = {\n  constructor: PathProxy,\n  _xi: 0,\n  _yi: 0,\n  _x0: 0,\n  _y0: 0,\n  // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n  _ux: 0,\n  _uy: 0,\n  _len: 0,\n  _lineDash: null,\n  _dashOffset: 0,\n  _dashIdx: 0,\n  _dashSum: 0,\n\n  /**\n   * @readOnly\n   */\n  setScale: function (sx, sy) {\n    this._ux = mathAbs(1 / dpr / sx) || 0;\n    this._uy = mathAbs(1 / dpr / sy) || 0;\n  },\n  getContext: function () {\n    return this._ctx;\n  },\n\n  /**\n   * @param  {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  beginPath: function (ctx) {\n    this._ctx = ctx;\n    ctx && ctx.beginPath();\n    ctx && (this.dpr = ctx.dpr); // Reset\n\n    if (this._saveData) {\n      this._len = 0;\n    }\n\n    if (this._lineDash) {\n      this._lineDash = null;\n      this._dashOffset = 0;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  moveTo: function (x, y) {\n    this.addData(CMD.M, x, y);\n    this._ctx && this._ctx.moveTo(x, y); // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n    // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n    // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n    // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n\n    this._x0 = x;\n    this._y0 = y;\n    this._xi = x;\n    this._yi = y;\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  lineTo: function (x, y) {\n    var exceedUnit = mathAbs(x - this._xi) > this._ux || mathAbs(y - this._yi) > this._uy // Force draw the first segment\n    || this._len < 5;\n    this.addData(CMD.L, x, y);\n\n    if (this._ctx && exceedUnit) {\n      this._needsDash() ? this._dashedLineTo(x, y) : this._ctx.lineTo(x, y);\n    }\n\n    if (exceedUnit) {\n      this._xi = x;\n      this._yi = y;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @param  {number} x3\n   * @param  {number} y3\n   * @return {module:zrender/core/PathProxy}\n   */\n  bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n    this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3) : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n    }\n\n    this._xi = x3;\n    this._yi = y3;\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @return {module:zrender/core/PathProxy}\n   */\n  quadraticCurveTo: function (x1, y1, x2, y2) {\n    this.addData(CMD.Q, x1, y1, x2, y2);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2) : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n    }\n\n    this._xi = x2;\n    this._yi = y2;\n    return this;\n  },\n\n  /**\n   * @param  {number} cx\n   * @param  {number} cy\n   * @param  {number} r\n   * @param  {number} startAngle\n   * @param  {number} endAngle\n   * @param  {boolean} anticlockwise\n   * @return {module:zrender/core/PathProxy}\n   */\n  arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n    this.addData(CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1);\n    this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n    this._xi = mathCos(endAngle) * r + cx;\n    this._yi = mathSin(endAngle) * r + cx;\n    return this;\n  },\n  // TODO\n  arcTo: function (x1, y1, x2, y2, radius) {\n    if (this._ctx) {\n      this._ctx.arcTo(x1, y1, x2, y2, radius);\n    }\n\n    return this;\n  },\n  // TODO\n  rect: function (x, y, w, h) {\n    this._ctx && this._ctx.rect(x, y, w, h);\n    this.addData(CMD.R, x, y, w, h);\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/PathProxy}\n   */\n  closePath: function () {\n    this.addData(CMD.Z);\n    var ctx = this._ctx;\n    var x0 = this._x0;\n    var y0 = this._y0;\n\n    if (ctx) {\n      this._needsDash() && this._dashedLineTo(x0, y0);\n      ctx.closePath();\n    }\n\n    this._xi = x0;\n    this._yi = y0;\n    return this;\n  },\n\n  /**\n   * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n   * stroke 同样\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  fill: function (ctx) {\n    ctx && ctx.fill();\n    this.toStatic();\n  },\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  stroke: function (ctx) {\n    ctx && ctx.stroke();\n    this.toStatic();\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDash: function (lineDash) {\n    if (lineDash instanceof Array) {\n      this._lineDash = lineDash;\n      this._dashIdx = 0;\n      var lineDashSum = 0;\n\n      for (var i = 0; i < lineDash.length; i++) {\n        lineDashSum += lineDash[i];\n      }\n\n      this._dashSum = lineDashSum;\n    }\n\n    return this;\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDashOffset: function (offset) {\n    this._dashOffset = offset;\n    return this;\n  },\n\n  /**\n   *\n   * @return {boolean}\n   */\n  len: function () {\n    return this._len;\n  },\n\n  /**\n   * 直接设置 Path 数据\n   */\n  setData: function (data) {\n    var len = data.length;\n\n    if (!(this.data && this.data.length == len) && hasTypedArray) {\n      this.data = new Float32Array(len);\n    }\n\n    for (var i = 0; i < len; i++) {\n      this.data[i] = data[i];\n    }\n\n    this._len = len;\n  },\n\n  /**\n   * 添加子路径\n   * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n   */\n  appendPath: function (path) {\n    if (!(path instanceof Array)) {\n      path = [path];\n    }\n\n    var len = path.length;\n    var appendSize = 0;\n    var offset = this._len;\n\n    for (var i = 0; i < len; i++) {\n      appendSize += path[i].len();\n    }\n\n    if (hasTypedArray && this.data instanceof Float32Array) {\n      this.data = new Float32Array(offset + appendSize);\n    }\n\n    for (var i = 0; i < len; i++) {\n      var appendPathData = path[i].data;\n\n      for (var k = 0; k < appendPathData.length; k++) {\n        this.data[offset++] = appendPathData[k];\n      }\n    }\n\n    this._len = offset;\n  },\n\n  /**\n   * 填充 Path 数据。\n   * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n   */\n  addData: function (cmd) {\n    if (!this._saveData) {\n      return;\n    }\n\n    var data = this.data;\n\n    if (this._len + arguments.length > data.length) {\n      // 因为之前的数组已经转换成静态的 Float32Array\n      // 所以不够用时需要扩展一个新的动态数组\n      this._expandData();\n\n      data = this.data;\n    }\n\n    for (var i = 0; i < arguments.length; i++) {\n      data[this._len++] = arguments[i];\n    }\n\n    this._prevCmd = cmd;\n  },\n  _expandData: function () {\n    // Only if data is Float32Array\n    if (!(this.data instanceof Array)) {\n      var newData = [];\n\n      for (var i = 0; i < this._len; i++) {\n        newData[i] = this.data[i];\n      }\n\n      this.data = newData;\n    }\n  },\n\n  /**\n   * If needs js implemented dashed line\n   * @return {boolean}\n   * @private\n   */\n  _needsDash: function () {\n    return this._lineDash;\n  },\n  _dashedLineTo: function (x1, y1) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    var dist = mathSqrt(dx * dx + dy * dy);\n    var x = x0;\n    var y = y0;\n    var dash;\n    var nDash = lineDash.length;\n    var idx;\n    dx /= dist;\n    dy /= dist;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum;\n    x -= offset * dx;\n    y -= offset * dy;\n\n    while (dx > 0 && x <= x1 || dx < 0 && x >= x1 || dx == 0 && (dy > 0 && y <= y1 || dy < 0 && y >= y1)) {\n      idx = this._dashIdx;\n      dash = lineDash[idx];\n      x += dx * dash;\n      y += dy * dash;\n      this._dashIdx = (idx + 1) % nDash; // Skip positive offset\n\n      if (dx > 0 && x < x0 || dx < 0 && x > x0 || dy > 0 && y < y0 || dy < 0 && y > y0) {\n        continue;\n      }\n\n      ctx[idx % 2 ? 'moveTo' : 'lineTo'](dx >= 0 ? mathMin(x, x1) : mathMax(x, x1), dy >= 0 ? mathMin(y, y1) : mathMax(y, y1));\n    } // Offset for next lineTo\n\n\n    dx = x - x1;\n    dy = y - y1;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  // Not accurate dashed line to\n  _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var t;\n    var dx;\n    var dy;\n    var cubicAt = curve.cubicAt;\n    var bezierLen = 0;\n    var idx = this._dashIdx;\n    var nDash = lineDash.length;\n    var x;\n    var y;\n    var tmpLen = 0;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum; // Bezier approx length\n\n    for (t = 0; t < 1; t += 0.1) {\n      dx = cubicAt(x0, x1, x2, x3, t + 0.1) - cubicAt(x0, x1, x2, x3, t);\n      dy = cubicAt(y0, y1, y2, y3, t + 0.1) - cubicAt(y0, y1, y2, y3, t);\n      bezierLen += mathSqrt(dx * dx + dy * dy);\n    } // Find idx after add offset\n\n\n    for (; idx < nDash; idx++) {\n      tmpLen += lineDash[idx];\n\n      if (tmpLen > offset) {\n        break;\n      }\n    }\n\n    t = (tmpLen - offset) / bezierLen;\n\n    while (t <= 1) {\n      x = cubicAt(x0, x1, x2, x3, t);\n      y = cubicAt(y0, y1, y2, y3, t); // Use line to approximate dashed bezier\n      // Bad result if dash is long\n\n      idx % 2 ? ctx.moveTo(x, y) : ctx.lineTo(x, y);\n      t += lineDash[idx] / bezierLen;\n      idx = (idx + 1) % nDash;\n    } // Finish the last segment and calculate the new offset\n\n\n    idx % 2 !== 0 && ctx.lineTo(x3, y3);\n    dx = x3 - x;\n    dy = y3 - y;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  _dashedQuadraticTo: function (x1, y1, x2, y2) {\n    // Convert quadratic to cubic using degree elevation\n    var x3 = x2;\n    var y3 = y2;\n    x2 = (x2 + 2 * x1) / 3;\n    y2 = (y2 + 2 * y1) / 3;\n    x1 = (this._xi + 2 * x1) / 3;\n    y1 = (this._yi + 2 * y1) / 3;\n\n    this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n  },\n\n  /**\n   * 转成静态的 Float32Array 减少堆内存占用\n   * Convert dynamic array to static Float32Array\n   */\n  toStatic: function () {\n    var data = this.data;\n\n    if (data instanceof Array) {\n      data.length = this._len;\n\n      if (hasTypedArray) {\n        this.data = new Float32Array(data);\n      }\n    }\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n    max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n    var data = this.data;\n    var xi = 0;\n    var yi = 0;\n    var x0 = 0;\n    var y0 = 0;\n\n    for (var i = 0; i < data.length;) {\n      var cmd = data[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = data[i];\n        yi = data[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n          // 在 closePath 的时候使用\n          x0 = data[i++];\n          y0 = data[i++];\n          xi = x0;\n          yi = y0;\n          min2[0] = x0;\n          min2[1] = y0;\n          max2[0] = x0;\n          max2[1] = y0;\n          break;\n\n        case CMD.L:\n          bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.C:\n          bbox.fromCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.Q:\n          bbox.fromQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.A:\n          // TODO Arc 判断的开销比较大\n          var cx = data[i++];\n          var cy = data[i++];\n          var rx = data[i++];\n          var ry = data[i++];\n          var startAngle = data[i++];\n          var endAngle = data[i++] + startAngle; // TODO Arc 旋转\n\n          var psi = data[i++];\n          var anticlockwise = 1 - data[i++];\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(startAngle) * rx + cx;\n            y0 = mathSin(startAngle) * ry + cy;\n          }\n\n          bbox.fromArc(cx, cy, rx, ry, startAngle, endAngle, anticlockwise, min2, max2);\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = data[i++];\n          y0 = yi = data[i++];\n          var width = data[i++];\n          var height = data[i++]; // Use fromLine\n\n          bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n          break;\n\n        case CMD.Z:\n          xi = x0;\n          yi = y0;\n          break;\n      } // Union\n\n\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * Rebuild path from current data\n   * Rebuild path will not consider javascript implemented line dash.\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  rebuildPath: function (ctx) {\n    var d = this.data;\n    var x0, y0;\n    var xi, yi;\n    var x, y;\n    var ux = this._ux;\n    var uy = this._uy;\n    var len = this._len;\n\n    for (var i = 0; i < len;) {\n      var cmd = d[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = d[i];\n        yi = d[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          x0 = xi = d[i++];\n          y0 = yi = d[i++];\n          ctx.moveTo(xi, yi);\n          break;\n\n        case CMD.L:\n          x = d[i++];\n          y = d[i++]; // Not draw too small seg between\n\n          if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n            ctx.lineTo(x, y);\n            xi = x;\n            yi = y;\n          }\n\n          break;\n\n        case CMD.C:\n          ctx.bezierCurveTo(d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.Q:\n          ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.A:\n          var cx = d[i++];\n          var cy = d[i++];\n          var rx = d[i++];\n          var ry = d[i++];\n          var theta = d[i++];\n          var dTheta = d[i++];\n          var psi = d[i++];\n          var fs = d[i++];\n          var r = rx > ry ? rx : ry;\n          var scaleX = rx > ry ? 1 : rx / ry;\n          var scaleY = rx > ry ? ry / rx : 1;\n          var isEllipse = Math.abs(rx - ry) > 1e-3;\n          var endAngle = theta + dTheta;\n\n          if (isEllipse) {\n            ctx.translate(cx, cy);\n            ctx.rotate(psi);\n            ctx.scale(scaleX, scaleY);\n            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n            ctx.scale(1 / scaleX, 1 / scaleY);\n            ctx.rotate(-psi);\n            ctx.translate(-cx, -cy);\n          } else {\n            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n          }\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(theta) * rx + cx;\n            y0 = mathSin(theta) * ry + cy;\n          }\n\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = d[i];\n          y0 = yi = d[i + 1];\n          ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n          break;\n\n        case CMD.Z:\n          ctx.closePath();\n          xi = x0;\n          yi = y0;\n      }\n    }\n  }\n};\nPathProxy.CMD = CMD;\nvar _default = PathProxy;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/PathProxy.js\n// module id = 1056\n// module chunks = 0 1 2","var ORIGIN_METHOD = '\\0__throttleOriginMethod';\nvar RATE = '\\0__throttleRate';\nvar THROTTLE_TYPE = '\\0__throttleType';\n/**\n * @public\n * @param {(Function)} fn\n * @param {number} [delay=0] Unit: ms.\n * @param {boolean} [debounce=false]\n *        true: If call interval less than `delay`, only the last call works.\n *        false: If call interval less than `delay, call works on fixed rate.\n * @return {(Function)} throttled fn.\n */\n\nfunction throttle(fn, delay, debounce) {\n  var currCall;\n  var lastCall = 0;\n  var lastExec = 0;\n  var timer = null;\n  var diff;\n  var scope;\n  var args;\n  var debounceNextCall;\n  delay = delay || 0;\n\n  function exec() {\n    lastExec = new Date().getTime();\n    timer = null;\n    fn.apply(scope, args || []);\n  }\n\n  var cb = function () {\n    currCall = new Date().getTime();\n    scope = this;\n    args = arguments;\n    var thisDelay = debounceNextCall || delay;\n    var thisDebounce = debounceNextCall || debounce;\n    debounceNextCall = null;\n    diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\n    clearTimeout(timer);\n\n    if (thisDebounce) {\n      timer = setTimeout(exec, thisDelay);\n    } else {\n      if (diff >= 0) {\n        exec();\n      } else {\n        timer = setTimeout(exec, -diff);\n      }\n    }\n\n    lastCall = currCall;\n  };\n  /**\n   * Clear throttle.\n   * @public\n   */\n\n\n  cb.clear = function () {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  };\n  /**\n   * Enable debounce once.\n   */\n\n\n  cb.debounceNextCall = function (debounceDelay) {\n    debounceNextCall = debounceDelay;\n  };\n\n  return cb;\n}\n/**\n * Create throttle method or update throttle rate.\n *\n * @example\n * ComponentView.prototype.render = function () {\n *     ...\n *     throttle.createOrUpdate(\n *         this,\n *         '_dispatchAction',\n *         this.model.get('throttle'),\n *         'fixRate'\n *     );\n * };\n * ComponentView.prototype.remove = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n * ComponentView.prototype.dispose = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n * @param {number} [rate]\n * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n * @return {Function} throttled function.\n */\n\n\nfunction createOrUpdate(obj, fnAttr, rate, throttleType) {\n  var fn = obj[fnAttr];\n\n  if (!fn) {\n    return;\n  }\n\n  var originFn = fn[ORIGIN_METHOD] || fn;\n  var lastThrottleType = fn[THROTTLE_TYPE];\n  var lastRate = fn[RATE];\n\n  if (lastRate !== rate || lastThrottleType !== throttleType) {\n    if (rate == null || !throttleType) {\n      return obj[fnAttr] = originFn;\n    }\n\n    fn = obj[fnAttr] = throttle(originFn, rate, throttleType === 'debounce');\n    fn[ORIGIN_METHOD] = originFn;\n    fn[THROTTLE_TYPE] = throttleType;\n    fn[RATE] = rate;\n  }\n\n  return fn;\n}\n/**\n * Clear throttle. Example see throttle.createOrUpdate.\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n */\n\n\nfunction clear(obj, fnAttr) {\n  var fn = obj[fnAttr];\n\n  if (fn && fn[ORIGIN_METHOD]) {\n    obj[fnAttr] = fn[ORIGIN_METHOD];\n  }\n}\n\nexports.throttle = throttle;\nexports.createOrUpdate = createOrUpdate;\nexports.clear = clear;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/throttle.js\n// module id = 1057\n// module chunks = 0 1 2","var zrUtil = require(\"../core/util\");\n\nvar Element = require(\"../Element\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\n/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/container/Group');\n *     var Circle = require('zrender/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n/**\n * @alias module:zrender/graphic/Group\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @extends module:zrender/mixin/Eventful\n */\nvar Group = function (opts) {\n  opts = opts || {};\n  Element.call(this, opts);\n\n  for (var key in opts) {\n    if (opts.hasOwnProperty(key)) {\n      this[key] = opts[key];\n    }\n  }\n\n  this._children = [];\n  this.__storage = null;\n  this.__dirty = true;\n};\n\nGroup.prototype = {\n  constructor: Group,\n  isGroup: true,\n\n  /**\n   * @type {string}\n   */\n  type: 'group',\n\n  /**\n   * 所有子孙元素是否响应鼠标事件\n   * @name module:/zrender/container/Group#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * @return {Array.<module:zrender/Element>}\n   */\n  children: function () {\n    return this._children.slice();\n  },\n\n  /**\n   * 获取指定 index 的儿子节点\n   * @param  {number} idx\n   * @return {module:zrender/Element}\n   */\n  childAt: function (idx) {\n    return this._children[idx];\n  },\n\n  /**\n   * 获取指定名字的儿子节点\n   * @param  {string} name\n   * @return {module:zrender/Element}\n   */\n  childOfName: function (name) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      if (children[i].name === name) {\n        return children[i];\n      }\n    }\n  },\n\n  /**\n   * @return {number}\n   */\n  childCount: function () {\n    return this._children.length;\n  },\n\n  /**\n   * 添加子节点到最后\n   * @param {module:zrender/Element} child\n   */\n  add: function (child) {\n    if (child && child !== this && child.parent !== this) {\n      this._children.push(child);\n\n      this._doAdd(child);\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加子节点在 nextSibling 之前\n   * @param {module:zrender/Element} child\n   * @param {module:zrender/Element} nextSibling\n   */\n  addBefore: function (child, nextSibling) {\n    if (child && child !== this && child.parent !== this && nextSibling && nextSibling.parent === this) {\n      var children = this._children;\n      var idx = children.indexOf(nextSibling);\n\n      if (idx >= 0) {\n        children.splice(idx, 0, child);\n\n        this._doAdd(child);\n      }\n    }\n\n    return this;\n  },\n  _doAdd: function (child) {\n    if (child.parent) {\n      child.parent.remove(child);\n    }\n\n    child.parent = this;\n    var storage = this.__storage;\n    var zr = this.__zr;\n\n    if (storage && storage !== child.__storage) {\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n  },\n\n  /**\n   * 移除子节点\n   * @param {module:zrender/Element} child\n   */\n  remove: function (child) {\n    var zr = this.__zr;\n    var storage = this.__storage;\n    var children = this._children;\n    var idx = zrUtil.indexOf(children, child);\n\n    if (idx < 0) {\n      return this;\n    }\n\n    children.splice(idx, 1);\n    child.parent = null;\n\n    if (storage) {\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n    return this;\n  },\n\n  /**\n   * 移除所有子节点\n   */\n  removeAll: function () {\n    var children = this._children;\n    var storage = this.__storage;\n    var child;\n    var i;\n\n    for (i = 0; i < children.length; i++) {\n      child = children[i];\n\n      if (storage) {\n        storage.delFromStorage(child);\n\n        if (child instanceof Group) {\n          child.delChildrenFromStorage(storage);\n        }\n      }\n\n      child.parent = null;\n    }\n\n    children.length = 0;\n    return this;\n  },\n\n  /**\n   * 遍历所有子节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  eachChild: function (cb, context) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n      cb.call(context, child, i);\n    }\n\n    return this;\n  },\n\n  /**\n   * 深度优先遍历所有子孙节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      cb.call(context, child);\n\n      if (child.type === 'group') {\n        child.traverse(cb, context);\n      }\n    }\n\n    return this;\n  },\n  addChildrenToStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n  },\n  delChildrenFromStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n  },\n  dirty: function () {\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh();\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function (includeChildren) {\n    // TODO Caching\n    var rect = null;\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var children = includeChildren || this._children;\n    var tmpMat = [];\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n\n      if (child.ignore || child.invisible) {\n        continue;\n      }\n\n      var childRect = child.getBoundingRect();\n      var transform = child.getLocalTransform(tmpMat); // TODO\n      // The boundingRect cacluated by transforming original\n      // rect may be bigger than the actual bundingRect when rotation\n      // is used. (Consider a circle rotated aginst its center, where\n      // the actual boundingRect should be the same as that not be\n      // rotated.) But we can not find better approach to calculate\n      // actual boundingRect yet, considering performance.\n\n      if (transform) {\n        tmpRect.copy(childRect);\n        tmpRect.applyTransform(transform);\n        rect = rect || tmpRect.clone();\n        rect.union(tmpRect);\n      } else {\n        rect = rect || childRect.clone();\n        rect.union(childRect);\n      }\n    }\n\n    return rect || tmpRect;\n  }\n};\nzrUtil.inherits(Group, Element);\nvar _default = Group;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/container/Group.js\n// module id = 1058\n// module chunks = 0 1 2","var dpr = 1; // If in browser environment\n\nif (typeof window !== 'undefined') {\n  dpr = Math.max(window.devicePixelRatio || 1, 1);\n}\n/**\n * config默认配置项\n * @exports zrender/config\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n/**\n * debug日志选项：catchBrushException为true下有效\n * 0 : 不生成debug数据，发布用\n * 1 : 异常抛出，调试用\n * 2 : 控制台输出，调试用\n */\n\n\nvar debugMode = 0; // retina 屏幕优化\n\nvar devicePixelRatio = dpr;\nexports.debugMode = debugMode;\nexports.devicePixelRatio = devicePixelRatio;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/config.js\n// module id = 1059\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\n// TODO Parse shadow style\n// TODO Only shallow path support\nfunction _default(properties) {\n  // Normalize\n  for (var i = 0; i < properties.length; i++) {\n    if (!properties[i][1]) {\n      properties[i][1] = properties[i][0];\n    }\n  }\n\n  return function (model, excludes, includes) {\n    var style = {};\n\n    for (var i = 0; i < properties.length; i++) {\n      var propName = properties[i][1];\n\n      if (excludes && zrUtil.indexOf(excludes, propName) >= 0 || includes && zrUtil.indexOf(includes, propName) < 0) {\n        continue;\n      }\n\n      var val = model.getShallow(propName);\n\n      if (val != null) {\n        style[properties[i][0]] = val;\n      }\n    }\n\n    return style;\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/mixin/makeStyleMapper.js\n// module id = 1060\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\nvar modelUtil = require(\"../util/model\");\n\nfunction Chart() {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewChart');\n}\n\nChart.prototype = {\n  type: 'chart',\n\n  /**\n   * Init the chart\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  init: function (ecModel, api) {},\n\n  /**\n   * Render the chart\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  render: function (seriesModel, ecModel, api, payload) {},\n\n  /**\n   * Highlight series or specified data item\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  highlight: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n  },\n\n  /**\n   * Downplay series or specified data item\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  downplay: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'normal');\n  },\n\n  /**\n   * Remove self\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  remove: function (ecModel, api) {\n    this.group.removeAll();\n  },\n\n  /**\n   * Dispose self\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  dispose: function () {}\n  /**\n   * The view contains the given point.\n   * @interface\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  // containPoint: function () {}\n\n};\nvar chartProto = Chart.prototype;\n\nchartProto.updateView = chartProto.updateLayout = chartProto.updateVisual = function (seriesModel, ecModel, api, payload) {\n  this.render(seriesModel, ecModel, api, payload);\n};\n/**\n * Set state of single element\n * @param  {module:zrender/Element} el\n * @param  {string} state\n */\n\n\nfunction elSetState(el, state) {\n  if (el) {\n    el.trigger(state);\n\n    if (el.type === 'group') {\n      for (var i = 0; i < el.childCount(); i++) {\n        elSetState(el.childAt(i), state);\n      }\n    }\n  }\n}\n/**\n * @param  {module:echarts/data/List} data\n * @param  {Object} payload\n * @param  {string} state 'normal'|'emphasis'\n * @inner\n */\n\n\nfunction toggleHighlight(data, payload, state) {\n  var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n  if (dataIndex != null) {\n    zrUtil.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n      elSetState(data.getItemGraphicEl(dataIdx), state);\n    });\n  } else {\n    data.eachItemGraphicEl(function (el) {\n      elSetState(el, state);\n    });\n  }\n} // Enable Chart.extend.\n\n\nclazzUtil.enableClassExtend(Chart, ['dispose']); // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Chart, {\n  registerWhenExtend: true\n});\nvar _default = Chart;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/view/Chart.js\n// module id = 1061\n// module chunks = 0 1 2","function defaultKeyGetter(item) {\n  return item;\n}\n/**\n * @param {Array} oldArr\n * @param {Array} newArr\n * @param {Function} oldKeyGetter\n * @param {Function} newKeyGetter\n * @param {Object} [context] Can be visited by this.context in callback.\n */\n\n\nfunction DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter, context) {\n  this._old = oldArr;\n  this._new = newArr;\n  this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n  this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n  this.context = context;\n}\n\nDataDiffer.prototype = {\n  constructor: DataDiffer,\n\n  /**\n   * Callback function when add a data\n   */\n  add: function (func) {\n    this._add = func;\n    return this;\n  },\n\n  /**\n   * Callback function when update a data\n   */\n  update: function (func) {\n    this._update = func;\n    return this;\n  },\n\n  /**\n   * Callback function when remove a data\n   */\n  remove: function (func) {\n    this._remove = func;\n    return this;\n  },\n  execute: function () {\n    var oldArr = this._old;\n    var newArr = this._new;\n    var oldDataIndexMap = {};\n    var newDataIndexMap = {};\n    var oldDataKeyArr = [];\n    var newDataKeyArr = [];\n    var i;\n    initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, '_oldKeyGetter', this);\n    initIndexMap(newArr, newDataIndexMap, newDataKeyArr, '_newKeyGetter', this); // Travel by inverted order to make sure order consistency\n    // when duplicate keys exists (consider newDataIndex.pop() below).\n    // For performance consideration, these code below do not look neat.\n\n    for (i = 0; i < oldArr.length; i++) {\n      var key = oldDataKeyArr[i];\n      var idx = newDataIndexMap[key]; // idx can never be empty array here. see 'set null' logic below.\n\n      if (idx != null) {\n        // Consider there is duplicate key (for example, use dataItem.name as key).\n        // We should make sure every item in newArr and oldArr can be visited.\n        var len = idx.length;\n\n        if (len) {\n          len === 1 && (newDataIndexMap[key] = null);\n          idx = idx.unshift();\n        } else {\n          newDataIndexMap[key] = null;\n        }\n\n        this._update && this._update(idx, i);\n      } else {\n        this._remove && this._remove(i);\n      }\n    }\n\n    for (var i = 0; i < newDataKeyArr.length; i++) {\n      var key = newDataKeyArr[i];\n\n      if (newDataIndexMap.hasOwnProperty(key)) {\n        var idx = newDataIndexMap[key];\n\n        if (idx == null) {\n          continue;\n        } // idx can never be empty array here. see 'set null' logic above.\n\n\n        if (!idx.length) {\n          this._add && this._add(idx);\n        } else {\n          for (var j = 0, len = idx.length; j < len; j++) {\n            this._add && this._add(idx[j]);\n          }\n        }\n      }\n    }\n  }\n};\n\nfunction initIndexMap(arr, map, keyArr, keyGetterName, dataDiffer) {\n  for (var i = 0; i < arr.length; i++) {\n    // Add prefix to avoid conflict with Object.prototype.\n    var key = '_ec_' + dataDiffer[keyGetterName](arr[i], i);\n    var existence = map[key];\n\n    if (existence == null) {\n      keyArr.push(key);\n      map[key] = i;\n    } else {\n      if (!existence.length) {\n        map[key] = existence = [existence];\n      }\n\n      existence.push(i);\n    }\n  }\n}\n\nvar _default = DataDiffer;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/data/DataDiffer.js\n// module id = 1062\n// module chunks = 0 1 2","var clazzUtil = require(\"../util/clazz\");\n\n/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n/**\n * @param {Object} [setting]\n */\nfunction Scale(setting) {\n  this._setting = setting || {};\n  /**\n   * Extent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._extent = [Infinity, -Infinity];\n  /**\n   * Step is calculated in adjustExtent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._interval = 0;\n  this.init && this.init.apply(this, arguments);\n}\n/**\n * Parse input val to valid inner number.\n * @param {*} val\n * @return {number}\n */\n\n\nScale.prototype.parse = function (val) {\n  // Notice: This would be a trap here, If the implementation\n  // of this method depends on extent, and this method is used\n  // before extent set (like in dataZoom), it would be wrong.\n  // Nevertheless, parse does not depend on extent generally.\n  return val;\n};\n\nScale.prototype.getSetting = function (name) {\n  return this._setting[name];\n};\n\nScale.prototype.contain = function (val) {\n  var extent = this._extent;\n  return val >= extent[0] && val <= extent[1];\n};\n/**\n * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.normalize = function (val) {\n  var extent = this._extent;\n\n  if (extent[1] === extent[0]) {\n    return 0.5;\n  }\n\n  return (val - extent[0]) / (extent[1] - extent[0]);\n};\n/**\n * Scale normalized value\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.scale = function (val) {\n  var extent = this._extent;\n  return val * (extent[1] - extent[0]) + extent[0];\n};\n/**\n * Set extent from data\n * @param {Array.<number>} other\n */\n\n\nScale.prototype.unionExtent = function (other) {\n  var extent = this._extent;\n  other[0] < extent[0] && (extent[0] = other[0]);\n  other[1] > extent[1] && (extent[1] = other[1]); // not setExtent because in log axis it may transformed to power\n  // this.setExtent(extent[0], extent[1]);\n};\n/**\n * Set extent from data\n * @param {module:echarts/data/List} data\n * @param {string} dim\n */\n\n\nScale.prototype.unionExtentFromData = function (data, dim) {\n  this.unionExtent(data.getDataExtent(dim, true));\n};\n/**\n * Get extent\n * @return {Array.<number>}\n */\n\n\nScale.prototype.getExtent = function () {\n  return this._extent.slice();\n};\n/**\n * Set extent\n * @param {number} start\n * @param {number} end\n */\n\n\nScale.prototype.setExtent = function (start, end) {\n  var thisExtent = this._extent;\n\n  if (!isNaN(start)) {\n    thisExtent[0] = start;\n  }\n\n  if (!isNaN(end)) {\n    thisExtent[1] = end;\n  }\n};\n/**\n * @return {Array.<string>}\n */\n\n\nScale.prototype.getTicksLabels = function () {\n  var labels = [];\n  var ticks = this.getTicks();\n\n  for (var i = 0; i < ticks.length; i++) {\n    labels.push(this.getLabel(ticks[i]));\n  }\n\n  return labels;\n};\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\n\n\nScale.prototype.isBlank = function () {\n  return this._isBlank;\n},\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\nScale.prototype.setBlank = function (isBlank) {\n  this._isBlank = isBlank;\n};\nclazzUtil.enableClassExtend(Scale);\nclazzUtil.enableClassManagement(Scale, {\n  registerWhenExtend: true\n});\nvar _default = Scale;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/scale/Scale.js\n// module id = 1063\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\nvar each = zrUtil.each;\nvar curry = zrUtil.curry; // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n// allAxesInfo should be updated when setOption performed.\n\nfunction collect(ecModel, api) {\n  var result = {\n    /**\n     * key: makeKey(axis.model)\n     * value: {\n     *      axis,\n     *      coordSys,\n     *      axisPointerModel,\n     *      triggerTooltip,\n     *      involveSeries,\n     *      snap,\n     *      seriesModels,\n     *      seriesDataCount\n     * }\n     */\n    axesInfo: {},\n    seriesInvolved: false,\n\n    /**\n     * key: makeKey(coordSys.model)\n     * value: Object: key makeKey(axis.model), value: axisInfo\n     */\n    coordSysAxesInfo: {},\n    coordSysMap: {}\n  };\n  collectAxesInfo(result, ecModel, api); // Check seriesInvolved for performance, in case too many series in some chart.\n\n  result.seriesInvolved && collectSeriesInfo(result, ecModel);\n  return result;\n}\n\nfunction collectAxesInfo(result, ecModel, api) {\n  var globalTooltipModel = ecModel.getComponent('tooltip');\n  var globalAxisPointerModel = ecModel.getComponent('axisPointer'); // links can only be set on global.\n\n  var linksOption = globalAxisPointerModel.get('link', true) || [];\n  var linkGroups = []; // Collect axes info.\n\n  each(api.getCoordinateSystems(), function (coordSys) {\n    // Some coordinate system do not support axes, like geo.\n    if (!coordSys.axisPointerEnabled) {\n      return;\n    }\n\n    var coordSysKey = makeKey(coordSys.model);\n    var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n    result.coordSysMap[coordSysKey] = coordSys; // Set tooltip (like 'cross') is a convienent way to show axisPointer\n    // for user. So we enable seting tooltip on coordSys model.\n\n    var coordSysModel = coordSys.model;\n    var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n    each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null)); // If axis tooltip used, choose tooltip axis for each coordSys.\n    // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n\n    if (coordSys.getTooltipAxes && globalTooltipModel // If tooltip.showContent is set as false, tooltip will not\n    // show but axisPointer will show as normal.\n    && baseTooltipModel.get('show')) {\n      // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n      // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n      var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n      var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n      var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n\n      if (triggerAxis || cross) {\n        each(tooltipAxes.baseAxes, curry(saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis));\n      }\n\n      if (cross) {\n        each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n      }\n    } // fromTooltip: true | false | 'cross'\n    // triggerTooltip: true | false | null\n\n\n    function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n      var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n      var axisPointerShow = axisPointerModel.get('show');\n\n      if (!axisPointerShow || axisPointerShow === 'auto' && !fromTooltip && !isHandleTrigger(axisPointerModel)) {\n        return;\n      }\n\n      if (triggerTooltip == null) {\n        triggerTooltip = axisPointerModel.get('triggerTooltip');\n      }\n\n      axisPointerModel = fromTooltip ? makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) : axisPointerModel;\n      var snap = axisPointerModel.get('snap');\n      var key = makeKey(axis.model);\n      var involveSeries = triggerTooltip || snap || axis.type === 'category'; // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n\n      var axisInfo = result.axesInfo[key] = {\n        key: key,\n        axis: axis,\n        coordSys: coordSys,\n        axisPointerModel: axisPointerModel,\n        triggerTooltip: triggerTooltip,\n        involveSeries: involveSeries,\n        snap: snap,\n        useHandle: isHandleTrigger(axisPointerModel),\n        seriesModels: []\n      };\n      axesInfoInCoordSys[key] = axisInfo;\n      result.seriesInvolved |= involveSeries;\n      var groupIndex = getLinkGroupIndex(linksOption, axis);\n\n      if (groupIndex != null) {\n        var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {\n          axesInfo: {}\n        });\n        linkGroup.axesInfo[key] = axisInfo;\n        linkGroup.mapper = linksOption[groupIndex].mapper;\n        axisInfo.linkGroup = linkGroup;\n      }\n    }\n  });\n}\n\nfunction makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) {\n  var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n  var volatileOption = {};\n  each(['type', 'snap', 'lineStyle', 'shadowStyle', 'label', 'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'], function (field) {\n    volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n  }); // category axis do not auto snap, otherwise some tick that do not\n  // has value can not be hovered. value/time/log axis default snap if\n  // triggered from tooltip and trigger tooltip.\n\n  volatileOption.snap = axis.type !== 'category' && !!triggerTooltip; // Compatibel with previous behavior, tooltip axis do not show label by default.\n  // Only these properties can be overrided from tooltip to axisPointer.\n\n  if (tooltipAxisPointerModel.get('type') === 'cross') {\n    volatileOption.type = 'line';\n  }\n\n  var labelOption = volatileOption.label || (volatileOption.label = {}); // Follow the convention, do not show label when triggered by tooltip by default.\n\n  labelOption.show == null && (labelOption.show = false);\n\n  if (fromTooltip === 'cross') {\n    // When 'cross', both axes show labels.\n    labelOption.show = true; // If triggerTooltip, this is a base axis, which should better not use cross style\n    // (cross style is dashed by default)\n\n    if (!triggerTooltip) {\n      var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n      crossStyle && zrUtil.defaults(labelOption, crossStyle.textStyle);\n    }\n  }\n\n  return axis.model.getModel('axisPointer', new Model(volatileOption, globalAxisPointerModel, ecModel));\n}\n\nfunction collectSeriesInfo(result, ecModel) {\n  // Prepare data for axis trigger\n  ecModel.eachSeries(function (seriesModel) {\n    // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n    var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n\n    if (!coordSys || seriesTooltipTrigger === 'none' || seriesTooltipTrigger === false || seriesTooltipTrigger === 'item' || seriesTooltipShow === false || seriesModel.get('axisPointer.show', true) === false) {\n      return;\n    }\n\n    each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n      var axis = axisInfo.axis;\n\n      if (coordSys.getAxis(axis.dim) === axis) {\n        axisInfo.seriesModels.push(seriesModel);\n        axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n        axisInfo.seriesDataCount += seriesModel.getData().count();\n      }\n    });\n  }, this);\n}\n/**\n * For example:\n * {\n *     axisPointer: {\n *         links: [{\n *             xAxisIndex: [2, 4],\n *             yAxisIndex: 'all'\n *         }, {\n *             xAxisId: ['a5', 'a7'],\n *             xAxisName: 'xxx'\n *         }]\n *     }\n * }\n */\n\n\nfunction getLinkGroupIndex(linksOption, axis) {\n  var axisModel = axis.model;\n  var dim = axis.dim;\n\n  for (var i = 0; i < linksOption.length; i++) {\n    var linkOption = linksOption[i] || {};\n\n    if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id) || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex) || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)) {\n      return i;\n    }\n  }\n}\n\nfunction checkPropInLink(linkPropValue, axisPropValue) {\n  return linkPropValue === 'all' || zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0 || linkPropValue === axisPropValue;\n}\n\nfunction fixValue(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n\n  if (!axisInfo) {\n    return;\n  }\n\n  var axisPointerModel = axisInfo.axisPointerModel;\n  var scale = axisInfo.axis.scale;\n  var option = axisPointerModel.option;\n  var status = axisPointerModel.get('status');\n  var value = axisPointerModel.get('value'); // Parse init value for category and time axis.\n\n  if (value != null) {\n    value = scale.parse(value);\n  }\n\n  var useHandle = isHandleTrigger(axisPointerModel); // If `handle` used, `axisPointer` will always be displayed, so value\n  // and status should be initialized.\n\n  if (status == null) {\n    option.status = useHandle ? 'show' : 'hide';\n  }\n\n  var extent = scale.getExtent().slice();\n  extent[0] > extent[1] && extent.reverse();\n\n  if ( // Pick a value on axis when initializing.\n  value == null // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n  // where we should re-pick a value to keep `handle` displaying normally.\n  || value > extent[1]) {\n    // Make handle displayed on the end of the axis when init, which looks better.\n    value = extent[1];\n  }\n\n  if (value < extent[0]) {\n    value = extent[0];\n  }\n\n  option.value = value;\n\n  if (useHandle) {\n    option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n  }\n}\n\nfunction getAxisInfo(axisModel) {\n  var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n  return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n}\n\nfunction getAxisPointerModel(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n  return axisInfo && axisInfo.axisPointerModel;\n}\n\nfunction isHandleTrigger(axisPointerModel) {\n  return !!axisPointerModel.get('handle.show');\n}\n/**\n * @param {module:echarts/model/Model} model\n * @return {string} unique key\n */\n\n\nfunction makeKey(model) {\n  return model.type + '||' + model.id;\n}\n\nexports.collect = collect;\nexports.fixValue = fixValue;\nexports.getAxisInfo = getAxisInfo;\nexports.getAxisPointerModel = getAxisPointerModel;\nexports.makeKey = makeKey;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/modelHelper.js\n// module id = 1064\n// module chunks = 0 1 2","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar List = require(\"../../data/List\");\n\nvar completeDimensions = require(\"../../data/helper/completeDimensions\");\n\nvar _model = require(\"../../util/model\");\n\nvar getDataItemValue = _model.getDataItemValue;\nvar converDataValue = _model.converDataValue;\nvar isDataItemOption = _model.isDataItemOption;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nfunction firstDataNotNull(data) {\n  var i = 0;\n\n  while (i < data.length && data[i] == null) {\n    i++;\n  }\n\n  return data[i];\n}\n\nfunction ifNeedCompleteOrdinalData(data) {\n  var sampleItem = firstDataNotNull(data);\n  return sampleItem != null && !zrUtil.isArray(getDataItemValue(sampleItem));\n}\n/**\n * Helper function to create a list from option data\n */\n\n\nfunction createListFromArray(data, seriesModel, ecModel) {\n  // If data is undefined\n  data = data || [];\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var creator = creators[coordSysName];\n  var registeredCoordSys = CoordinateSystem.get(coordSysName);\n  var completeDimOpt = {\n    encodeDef: seriesModel.get('encode'),\n    dimsDef: seriesModel.get('dimensions')\n  }; // FIXME\n\n  var axesInfo = creator && creator(data, seriesModel, ecModel, completeDimOpt);\n  var dimensions = axesInfo && axesInfo.dimensions;\n\n  if (!dimensions) {\n    // Get dimensions from registered coordinate system\n    dimensions = registeredCoordSys && (registeredCoordSys.getDimensionsInfo ? registeredCoordSys.getDimensionsInfo() : registeredCoordSys.dimensions.slice()) || ['x', 'y'];\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n  }\n\n  var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;\n  var list = new List(dimensions, seriesModel);\n  var nameList = createNameList(axesInfo, data);\n  var categories = {};\n  var dimValueGetter = categoryIndex >= 0 && ifNeedCompleteOrdinalData(data) ? function (itemOpt, dimName, dataIndex, dimIndex) {\n    // If any dataItem is like { value: 10 }\n    if (isDataItemOption(itemOpt)) {\n      list.hasItemOption = true;\n    } // Use dataIndex as ordinal value in categoryAxis\n\n\n    return dimIndex === categoryIndex ? dataIndex : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);\n  } : function (itemOpt, dimName, dataIndex, dimIndex) {\n    var value = getDataItemValue(itemOpt);\n    var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]); // If any dataItem is like { value: 10 }\n\n    if (isDataItemOption(itemOpt)) {\n      list.hasItemOption = true;\n    }\n\n    var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;\n\n    if (categoryAxesModels && categoryAxesModels[dimName]) {\n      // If given value is a category string\n      if (typeof val === 'string') {\n        // Lazy get categories\n        categories[dimName] = categories[dimName] || categoryAxesModels[dimName].getCategories();\n        val = zrUtil.indexOf(categories[dimName], val);\n\n        if (val < 0 && !isNaN(val)) {\n          // In case some one write '1', '2' istead of 1, 2\n          val = +val;\n        }\n      }\n    }\n\n    return val;\n  };\n  list.hasItemOption = false;\n  list.initData(data, nameList, dimValueGetter);\n  return list;\n}\n\nfunction isStackable(axisType) {\n  return axisType !== 'category' && axisType !== 'time';\n}\n\nfunction getDimTypeByAxis(axisType) {\n  return axisType === 'category' ? 'ordinal' : axisType === 'time' ? 'time' : 'float';\n}\n/**\n * Creaters for each coord system.\n */\n\n\nvar creators = {\n  cartesian2d: function (data, seriesModel, ecModel, completeDimOpt) {\n    var axesModels = zrUtil.map(['xAxis', 'yAxis'], function (name) {\n      return ecModel.queryComponents({\n        mainType: name,\n        index: seriesModel.get(name + 'Index'),\n        id: seriesModel.get(name + 'Id')\n      })[0];\n    });\n    var xAxisModel = axesModels[0];\n    var yAxisModel = axesModels[1];\n    var xAxisType = xAxisModel.get('type');\n    var yAxisType = yAxisModel.get('type');\n    var dimensions = [{\n      name: 'x',\n      type: getDimTypeByAxis(xAxisType),\n      stackable: isStackable(xAxisType)\n    }, {\n      name: 'y',\n      // If two category axes\n      type: getDimTypeByAxis(yAxisType),\n      stackable: isStackable(yAxisType)\n    }];\n    var isXAxisCateogry = xAxisType === 'category';\n    var isYAxisCategory = yAxisType === 'category';\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n    var categoryAxesModels = {};\n\n    if (isXAxisCateogry) {\n      categoryAxesModels.x = xAxisModel;\n    }\n\n    if (isYAxisCategory) {\n      categoryAxesModels.y = yAxisModel;\n    }\n\n    return {\n      dimensions: dimensions,\n      categoryIndex: isXAxisCateogry ? 0 : isYAxisCategory ? 1 : -1,\n      categoryAxesModels: categoryAxesModels\n    };\n  },\n  singleAxis: function (data, seriesModel, ecModel, completeDimOpt) {\n    var singleAxisModel = ecModel.queryComponents({\n      mainType: 'singleAxis',\n      index: seriesModel.get('singleAxisIndex'),\n      id: seriesModel.get('singleAxisId')\n    })[0];\n    var singleAxisType = singleAxisModel.get('type');\n    var isCategory = singleAxisType === 'category';\n    var dimensions = [{\n      name: 'single',\n      type: getDimTypeByAxis(singleAxisType),\n      stackable: isStackable(singleAxisType)\n    }];\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n    var categoryAxesModels = {};\n\n    if (isCategory) {\n      categoryAxesModels.single = singleAxisModel;\n    }\n\n    return {\n      dimensions: dimensions,\n      categoryIndex: isCategory ? 0 : -1,\n      categoryAxesModels: categoryAxesModels\n    };\n  },\n  polar: function (data, seriesModel, ecModel, completeDimOpt) {\n    var polarModel = ecModel.queryComponents({\n      mainType: 'polar',\n      index: seriesModel.get('polarIndex'),\n      id: seriesModel.get('polarId')\n    })[0];\n    var angleAxisModel = polarModel.findAxisModel('angleAxis');\n    var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n    var radiusAxisType = radiusAxisModel.get('type');\n    var angleAxisType = angleAxisModel.get('type');\n    var dimensions = [{\n      name: 'radius',\n      type: getDimTypeByAxis(radiusAxisType),\n      stackable: isStackable(radiusAxisType)\n    }, {\n      name: 'angle',\n      type: getDimTypeByAxis(angleAxisType),\n      stackable: isStackable(angleAxisType)\n    }];\n    var isAngleAxisCateogry = angleAxisType === 'category';\n    var isRadiusAxisCateogry = radiusAxisType === 'category';\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n    var categoryAxesModels = {};\n\n    if (isRadiusAxisCateogry) {\n      categoryAxesModels.radius = radiusAxisModel;\n    }\n\n    if (isAngleAxisCateogry) {\n      categoryAxesModels.angle = angleAxisModel;\n    }\n\n    return {\n      dimensions: dimensions,\n      categoryIndex: isAngleAxisCateogry ? 1 : isRadiusAxisCateogry ? 0 : -1,\n      categoryAxesModels: categoryAxesModels\n    };\n  },\n  geo: function (data, seriesModel, ecModel, completeDimOpt) {\n    // TODO Region\n    // 多个散点图系列在同一个地区的时候\n    return {\n      dimensions: completeDimensions([{\n        name: 'lng'\n      }, {\n        name: 'lat'\n      }], data, completeDimOpt)\n    };\n  }\n};\n\nfunction createNameList(result, data) {\n  var nameList = [];\n  var categoryDim = result && result.dimensions[result.categoryIndex];\n  var categoryAxisModel;\n\n  if (categoryDim) {\n    categoryAxisModel = result.categoryAxesModels[categoryDim.name];\n  }\n\n  if (categoryAxisModel) {\n    // FIXME Two category axis\n    var categories = categoryAxisModel.getCategories();\n\n    if (categories) {\n      var dataLen = data.length; // Ordered data is given explicitly like\n      // [[3, 0.2], [1, 0.3], [2, 0.15]]\n      // or given scatter data,\n      // pick the category\n\n      if (zrUtil.isArray(data[0]) && data[0].length > 1) {\n        nameList = [];\n\n        for (var i = 0; i < dataLen; i++) {\n          nameList[i] = categories[data[i][result.categoryIndex || 0]];\n        }\n      } else {\n        nameList = categories.slice(0);\n      }\n    }\n  }\n\n  return nameList;\n}\n\nvar _default = createListFromArray;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/createListFromArray.js\n// module id = 1065\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar axisHelper = require(\"./axisHelper\");\n\nvar linearMap = numberUtil.linearMap;\n\nfunction fixExtentWithBands(extent, nTick) {\n  var size = extent[1] - extent[0];\n  var len = nTick;\n  var margin = size / len / 2;\n  extent[0] += margin;\n  extent[1] -= margin;\n}\n\nvar normalizedExtent = [0, 1];\n/**\n * @name module:echarts/coord/CartesianAxis\n * @constructor\n */\n\nvar Axis = function (dim, scale, extent) {\n  /**\n   * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n   * @type {string}\n   */\n  this.dim = dim;\n  /**\n   * Axis scale\n   * @type {module:echarts/coord/scale/*}\n   */\n\n  this.scale = scale;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  this._extent = extent || [0, 0];\n  /**\n   * @type {boolean}\n   */\n\n  this.inverse = false;\n  /**\n   * Usually true when axis has a ordinal scale\n   * @type {boolean}\n   */\n\n  this.onBand = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._labelInterval;\n};\n\nAxis.prototype = {\n  constructor: Axis,\n\n  /**\n   * If axis extent contain given coord\n   * @param {number} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var extent = this._extent;\n    var min = Math.min(extent[0], extent[1]);\n    var max = Math.max(extent[0], extent[1]);\n    return coord >= min && coord <= max;\n  },\n\n  /**\n   * If axis extent contain given data\n   * @param {number} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.contain(this.dataToCoord(data));\n  },\n\n  /**\n   * Get coord extent.\n   * @return {Array.<number>}\n   */\n  getExtent: function () {\n    return this._extent.slice();\n  },\n\n  /**\n   * Get precision used for formatting\n   * @param {Array.<number>} [dataExtent]\n   * @return {number}\n   */\n  getPixelPrecision: function (dataExtent) {\n    return numberUtil.getPixelPrecision(dataExtent || this.scale.getExtent(), this._extent);\n  },\n\n  /**\n   * Set coord extent\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var extent = this._extent;\n    extent[0] = start;\n    extent[1] = end;\n  },\n\n  /**\n   * Convert data to coord. Data is the rank if it has a ordinal scale\n   * @param {number} data\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  dataToCoord: function (data, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n    data = scale.normalize(data);\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    return linearMap(data, normalizedExtent, extent, clamp);\n  },\n\n  /**\n   * Convert coord to data. Data is the rank if it has a ordinal scale\n   * @param {number} coord\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  coordToData: function (coord, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    var t = linearMap(coord, extent, normalizedExtent, clamp);\n    return this.scale.scale(t);\n  },\n\n  /**\n   * Convert pixel point to data in axis\n   * @param {Array.<number>} point\n   * @param  {boolean} clamp\n   * @return {number} data\n   */\n  pointToData: function (point, clamp) {// Should be implemented in derived class if necessary.\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicksCoords: function (alignWithLabel) {\n    if (this.onBand && !alignWithLabel) {\n      var bands = this.getBands();\n      var coords = [];\n\n      for (var i = 0; i < bands.length; i++) {\n        coords.push(bands[i][0]);\n      }\n\n      if (bands[i - 1]) {\n        coords.push(bands[i - 1][1]);\n      }\n\n      return coords;\n    } else {\n      return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n    }\n  },\n\n  /**\n   * Coords of labels are on the ticks or on the middle of bands\n   * @return {Array.<number>}\n   */\n  getLabelsCoords: function () {\n    return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n  },\n\n  /**\n   * Get bands.\n   *\n   * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n   * |---1---|---2---|---3---|---4---|.\n   *\n   * @return {Array}\n   */\n  // FIXME Situation when labels is on ticks\n  getBands: function () {\n    var extent = this.getExtent();\n    var bands = [];\n    var len = this.scale.count();\n    var start = extent[0];\n    var end = extent[1];\n    var span = end - start;\n\n    for (var i = 0; i < len; i++) {\n      bands.push([span * i / len + start, span * (i + 1) / len + start]);\n    }\n\n    return bands;\n  },\n\n  /**\n   * Get width of band\n   * @return {number}\n   */\n  getBandWidth: function () {\n    var axisExtent = this._extent;\n    var dataExtent = this.scale.getExtent();\n    var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0); // Fix #2728, avoid NaN when only one data.\n\n    len === 0 && (len = 1);\n    var size = Math.abs(axisExtent[1] - axisExtent[0]);\n    return Math.abs(size) / len;\n  },\n\n  /**\n   * @abstract\n   * @return {boolean} Is horizontal\n   */\n  isHorizontal: null,\n\n  /**\n   * @abstract\n   * @return {number} Get axis rotate, by degree.\n   */\n  getRotate: null,\n\n  /**\n   * Get interval of the axis label.\n   * To get precise result, at least one of `getRotate` and `isHorizontal`\n   * should be implemented.\n   * @return {number}\n   */\n  getLabelInterval: function () {\n    var labelInterval = this._labelInterval;\n\n    if (!labelInterval) {\n      var axisModel = this.model;\n      var labelModel = axisModel.getModel('axisLabel');\n      labelInterval = labelModel.get('interval');\n\n      if (this.type === 'category' && (labelInterval == null || labelInterval === 'auto')) {\n        labelInterval = axisHelper.getAxisLabelInterval(zrUtil.map(this.scale.getTicks(), this.dataToCoord, this), axisModel.getFormattedLabels(), labelModel.getFont(), this.getRotate ? this.getRotate() : this.isHorizontal && !this.isHorizontal() ? 90 : 0, labelModel.get('rotate'));\n      }\n\n      this._labelInterval = labelInterval;\n    }\n\n    return labelInterval;\n  }\n};\nvar _default = Axis;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/Axis.js\n// module id = 1066\n// module chunks = 0 1 2","var zrUtil = require(\"../core/util\");\n\nvar Style = require(\"./Style\");\n\nvar Element = require(\"../Element\");\n\nvar RectText = require(\"./mixin/RectText\");\n\n/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n/**\n * @alias module:zrender/graphic/Displayable\n * @extends module:zrender/Element\n * @extends module:zrender/graphic/mixin/RectText\n */\nfunction Displayable(opts) {\n  opts = opts || {};\n  Element.call(this, opts); // Extend properties\n\n  for (var name in opts) {\n    if (opts.hasOwnProperty(name) && name !== 'style') {\n      this[name] = opts[name];\n    }\n  }\n  /**\n   * @type {module:zrender/graphic/Style}\n   */\n\n\n  this.style = new Style(opts.style, this);\n  this._rect = null; // Shapes for cascade clipping.\n\n  this.__clipPaths = []; // FIXME Stateful must be mixined after style is setted\n  // Stateful.call(this, opts);\n}\n\nDisplayable.prototype = {\n  constructor: Displayable,\n  type: 'displayable',\n\n  /**\n   * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n   * Dirty flag. From which painter will determine if this displayable object needs brush\n   * @name module:zrender/graphic/Displayable#__dirty\n   * @type {boolean}\n   */\n  __dirty: true,\n\n  /**\n   * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n   * If ignore drawing of the displayable object. Mouse event will still be triggered\n   * @name module:/zrender/graphic/Displayable#invisible\n   * @type {boolean}\n   * @default false\n   */\n  invisible: false,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z: 0,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z2: 0,\n\n  /**\n   * z层level，决定绘画在哪层canvas中\n   * @name module:/zrender/graphic/Displayable#zlevel\n   * @type {number}\n   * @default 0\n   */\n  zlevel: 0,\n\n  /**\n   * 是否可拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  draggable: false,\n\n  /**\n   * 是否正在拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  dragging: false,\n\n  /**\n   * 是否相应鼠标事件\n   * @name module:/zrender/graphic/Displayable#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * If enable culling\n   * @type {boolean}\n   * @default false\n   */\n  culling: false,\n\n  /**\n   * Mouse cursor when hovered\n   * @name module:/zrender/graphic/Displayable#cursor\n   * @type {string}\n   */\n  cursor: 'pointer',\n\n  /**\n   * If hover area is bounding rect\n   * @name module:/zrender/graphic/Displayable#rectHover\n   * @type {string}\n   */\n  rectHover: false,\n\n  /**\n   * Render the element progressively when the value >= 0,\n   * usefull for large data.\n   * @type {number}\n   */\n  progressive: -1,\n  beforeBrush: function (ctx) {},\n  afterBrush: function (ctx) {},\n\n  /**\n   * 图形绘制方法\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  // Interface\n  brush: function (ctx, prevEl) {},\n\n  /**\n   * 获取最小包围盒\n   * @return {module:zrender/core/BoundingRect}\n   */\n  // Interface\n  getBoundingRect: function () {},\n\n  /**\n   * 判断坐标 x, y 是否在图形上\n   * If displayable element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  contain: function (x, y) {\n    return this.rectContain(x, y);\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    cb.call(context, this);\n  },\n\n  /**\n   * 判断坐标 x, y 是否在图形的包围盒上\n   * If bounding rect of element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  rectContain: function (x, y) {\n    var coord = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    return rect.contain(coord[0], coord[1]);\n  },\n\n  /**\n   * 标记图形元素为脏，并且在下一帧重绘\n   * Mark displayable element dirty and refresh next frame\n   */\n  dirty: function () {\n    this.__dirty = true;\n    this._rect = null;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * 图形是否会触发事件\n   * If displayable object binded any event\n   * @return {boolean}\n   */\n  // TODO, 通过 bind 绑定的事件\n  // isSilent: function () {\n  //     return !(\n  //         this.hoverable || this.draggable\n  //         || this.onmousemove || this.onmouseover || this.onmouseout\n  //         || this.onmousedown || this.onmouseup || this.onclick\n  //         || this.ondragenter || this.ondragover || this.ondragleave\n  //         || this.ondrop\n  //     );\n  // },\n\n  /**\n   * Alias for animate('style')\n   * @param {boolean} loop\n   */\n  animateStyle: function (loop) {\n    return this.animate('style', loop);\n  },\n  attrKV: function (key, value) {\n    if (key !== 'style') {\n      Element.prototype.attrKV.call(this, key, value);\n    } else {\n      this.style.set(value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setStyle: function (key, value) {\n    this.style.set(key, value);\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * Use given style object\n   * @param  {Object} obj\n   */\n  useStyle: function (obj) {\n    this.style = new Style(obj, this);\n    this.dirty(false);\n    return this;\n  }\n};\nzrUtil.inherits(Displayable, Element);\nzrUtil.mixin(Displayable, RectText); // zrUtil.mixin(Displayable, Stateful);\n\nvar _default = Displayable;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/Displayable.js\n// module id = 1067\n// module chunks = 0 1 2","/**\n * @param {Array.<Object>} colorStops\n */\nvar Gradient = function (colorStops) {\n  this.colorStops = colorStops || [];\n};\n\nGradient.prototype = {\n  constructor: Gradient,\n  addColorStop: function (offset, color) {\n    this.colorStops.push({\n      offset: offset,\n      color: color\n    });\n  }\n};\nvar _default = Gradient;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/Gradient.js\n// module id = 1068\n// module chunks = 0 1 2","var numberUtil = require(\"../util/number\");\n\nvar formatUtil = require(\"../util/format\");\n\nvar Scale = require(\"./Scale\");\n\nvar helper = require(\"./helper\");\n\n/**\n * Interval scale\n * @module echarts/scale/Interval\n */\nvar roundNumber = numberUtil.round;\n/**\n * @alias module:echarts/coord/scale/Interval\n * @constructor\n */\n\nvar IntervalScale = Scale.extend({\n  type: 'interval',\n  _interval: 0,\n  _intervalPrecision: 2,\n  setExtent: function (start, end) {\n    var thisExtent = this._extent; //start,end may be a Number like '25',so...\n\n    if (!isNaN(start)) {\n      thisExtent[0] = parseFloat(start);\n    }\n\n    if (!isNaN(end)) {\n      thisExtent[1] = parseFloat(end);\n    }\n  },\n  unionExtent: function (other) {\n    var extent = this._extent;\n    other[0] < extent[0] && (extent[0] = other[0]);\n    other[1] > extent[1] && (extent[1] = other[1]); // unionExtent may called by it's sub classes\n\n    IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n  },\n\n  /**\n   * Get interval\n   */\n  getInterval: function () {\n    return this._interval;\n  },\n\n  /**\n   * Set interval\n   */\n  setInterval: function (interval) {\n    this._interval = interval; // Dropped auto calculated niceExtent and use user setted extent\n    // We assume user wan't to set both interval, min, max to get a better result\n\n    this._niceExtent = this._extent.slice();\n    this._intervalPrecision = helper.getIntervalPrecision(interval);\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    return helper.intervalScaleGetTicks(this._interval, this._extent, this._niceExtent, this._intervalPrecision);\n  },\n\n  /**\n   * @return {Array.<string>}\n   */\n  getTicksLabels: function () {\n    var labels = [];\n    var ticks = this.getTicks();\n\n    for (var i = 0; i < ticks.length; i++) {\n      labels.push(this.getLabel(ticks[i]));\n    }\n\n    return labels;\n  },\n\n  /**\n   * @param {number} data\n   * @param {Object} [opt]\n   * @param {number|string} [opt.precision] If 'auto', use nice presision.\n   * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n   * @return {string}\n   */\n  getLabel: function (data, opt) {\n    if (data == null) {\n      return '';\n    }\n\n    var precision = opt && opt.precision;\n\n    if (precision == null) {\n      precision = numberUtil.getPrecisionSafe(data) || 0;\n    } else if (precision === 'auto') {\n      // Should be more precise then tick.\n      precision = this._intervalPrecision;\n    } // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n    // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n\n\n    data = roundNumber(data, precision, true);\n    return formatUtil.addCommas(data);\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   *\n   * @param {number} [splitNumber = 5] Desired number of ticks\n   * @param {number} [minInterval]\n   * @param {number} [maxInterval]\n   */\n  niceTicks: function (splitNumber, minInterval, maxInterval) {\n    splitNumber = splitNumber || 5;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (!isFinite(span)) {\n      return;\n    } // User may set axis min 0 and data are all negative\n    // FIXME If it needs to reverse ?\n\n\n    if (span < 0) {\n      span = -span;\n      extent.reverse();\n    }\n\n    var result = helper.intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval);\n    this._intervalPrecision = result.intervalPrecision;\n    this._interval = result.interval;\n    this._niceExtent = result.niceTickExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @param {Object} opt\n   * @param {number} [opt.splitNumber = 5] Given approx tick number\n   * @param {boolean} [opt.fixMin=false]\n   * @param {boolean} [opt.fixMax=false]\n   * @param {boolean} [opt.minInterval]\n   * @param {boolean} [opt.maxInterval]\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      if (extent[0] !== 0) {\n        // Expand extent\n        var expandSize = extent[0]; // In the fowllowing case\n        //      Axis has been fixed max 100\n        //      Plus data are all 100 and axis extent are [100, 100].\n        // Extend to the both side will cause expanded max is larger than fixed max.\n        // So only expand to the smaller side.\n\n        if (!opt.fixMax) {\n          extent[1] += expandSize / 2;\n          extent[0] -= expandSize / 2;\n        } else {\n          extent[0] -= expandSize / 2;\n        }\n      } else {\n        extent[1] = 1;\n      }\n    }\n\n    var span = extent[1] - extent[0]; // If there are no data and extent are [Infinity, -Infinity]\n\n    if (!isFinite(span)) {\n      extent[0] = 0;\n      extent[1] = 1;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n    }\n  }\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nIntervalScale.create = function () {\n  return new IntervalScale();\n};\n\nvar _default = IntervalScale;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/scale/Interval.js\n// module id = 1069\n// module chunks = 0 1 2","var _util = require(\"zrender/lib/core/util\");\n\nvar retrieve = _util.retrieve;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar each = _util.each;\n\nvar formatUtil = require(\"../../util/format\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _number = require(\"../../util/number\");\n\nvar isRadianAroundZero = _number.isRadianAroundZero;\nvar remRadian = _number.remRadian;\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar matrixUtil = require(\"zrender/lib/core/matrix\");\n\nvar _vector = require(\"zrender/lib/core/vector\");\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar PI = Math.PI;\n\nfunction makeAxisEventDataBase(axisModel) {\n  var eventData = {\n    componentType: axisModel.mainType\n  };\n  eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n  return eventData;\n}\n/**\n * A final axis is translated and rotated from a \"standard axis\".\n * So opt.position and opt.rotation is required.\n *\n * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n * for example: (0, 0) ------------> (0, 50)\n *\n * nameDirection or tickDirection or labelDirection is 1 means tick\n * or label is below the standard axis, whereas is -1 means above\n * the standard axis. labelOffset means offset between label and axis,\n * which is useful when 'onZero', where axisLabel is in the grid and\n * label in outside grid.\n *\n * Tips: like always,\n * positive rotation represents anticlockwise, and negative rotation\n * represents clockwise.\n * The direction of position coordinate is the same as the direction\n * of screen coordinate.\n *\n * Do not need to consider axis 'inverse', which is auto processed by\n * axis extent.\n *\n * @param {module:zrender/container/Group} group\n * @param {Object} axisModel\n * @param {Object} opt Standard axis parameters.\n * @param {Array.<number>} opt.position [x, y]\n * @param {number} opt.rotation by radian\n * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle' or 'center'.\n * @param {number} [opt.tickDirection=1] 1 or -1\n * @param {number} [opt.labelDirection=1] 1 or -1\n * @param {number} [opt.labelOffset=0] Usefull when onZero.\n * @param {string} [opt.axisLabelShow] default get from axisModel.\n * @param {string} [opt.axisName] default get from axisModel.\n * @param {number} [opt.axisNameAvailableWidth]\n * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n * @param {number} [opt.labelInterval] Default label interval when label\n *                                     interval from model is null or 'auto'.\n * @param {number} [opt.strokeContainThreshold] Default label interval when label\n * @param {number} [opt.nameTruncateMaxWidth]\n */\n\n\nvar AxisBuilder = function (axisModel, opt) {\n  /**\n   * @readOnly\n   */\n  this.opt = opt;\n  /**\n   * @readOnly\n   */\n\n  this.axisModel = axisModel; // Default value\n\n  defaults(opt, {\n    labelOffset: 0,\n    nameDirection: 1,\n    tickDirection: 1,\n    labelDirection: 1,\n    silent: true\n  });\n  /**\n   * @readOnly\n   */\n\n  this.group = new graphic.Group(); // FIXME Not use a seperate text group?\n\n  var dumbGroup = new graphic.Group({\n    position: opt.position.slice(),\n    rotation: opt.rotation\n  }); // this.group.add(dumbGroup);\n  // this._dumbGroup = dumbGroup;\n\n  dumbGroup.updateTransform();\n  this._transform = dumbGroup.transform;\n  this._dumbGroup = dumbGroup;\n};\n\nAxisBuilder.prototype = {\n  constructor: AxisBuilder,\n  hasBuilder: function (name) {\n    return !!builders[name];\n  },\n  add: function (name) {\n    builders[name].call(this);\n  },\n  getGroup: function () {\n    return this.group;\n  }\n};\nvar builders = {\n  /**\n   * @private\n   */\n  axisLine: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n\n    if (!axisModel.get('axisLine.show')) {\n      return;\n    }\n\n    var extent = this.axisModel.axis.getExtent();\n    var matrix = this._transform;\n    var pt1 = [extent[0], 0];\n    var pt2 = [extent[1], 0];\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    }\n\n    var lineStyle = extend({\n      lineCap: 'round'\n    }, axisModel.getModel('axisLine.lineStyle').getLineStyle());\n    this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'line',\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: lineStyle,\n      strokeContainThreshold: opt.strokeContainThreshold || 5,\n      silent: true,\n      z2: 1\n    })));\n    var arrows = axisModel.get('axisLine.symbol');\n    var arrowSize = axisModel.get('axisLine.symbolSize');\n\n    if (arrows != null) {\n      if (typeof arrows === 'string') {\n        // Use the same arrow for start and end point\n        arrows = [arrows, arrows];\n      }\n\n      if (typeof arrowSize === 'string' || typeof arrowSize === 'number') {\n        // Use the same size for width and height\n        arrowSize = [arrowSize, arrowSize];\n      }\n\n      var symbolWidth = arrowSize[0];\n      var symbolHeight = arrowSize[1];\n      each([[opt.rotation + Math.PI / 2, pt1], [opt.rotation - Math.PI / 2, pt2]], function (item, index) {\n        if (arrows[index] !== 'none' && arrows[index] != null) {\n          var symbol = createSymbol(arrows[index], -symbolWidth / 2, -symbolHeight / 2, symbolWidth, symbolHeight, lineStyle.stroke, true);\n          symbol.attr({\n            rotation: item[0],\n            position: item[1],\n            silent: true\n          });\n          this.group.add(symbol);\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  axisTickLabel: function () {\n    var axisModel = this.axisModel;\n    var opt = this.opt;\n    var tickEls = buildAxisTick(this, axisModel, opt);\n    var labelEls = buildAxisLabel(this, axisModel, opt);\n    fixMinMaxLabelShow(axisModel, labelEls, tickEls);\n  },\n\n  /**\n   * @private\n   */\n  axisName: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n    var name = retrieve(opt.axisName, axisModel.get('name'));\n\n    if (!name) {\n      return;\n    }\n\n    var nameLocation = axisModel.get('nameLocation');\n    var nameDirection = opt.nameDirection;\n    var textStyleModel = axisModel.getModel('nameTextStyle');\n    var gap = axisModel.get('nameGap') || 0;\n    var extent = this.axisModel.axis.getExtent();\n    var gapSignal = extent[0] > extent[1] ? -1 : 1;\n    var pos = [nameLocation === 'start' ? extent[0] - gapSignal * gap : nameLocation === 'end' ? extent[1] + gapSignal * gap : (extent[0] + extent[1]) / 2, // 'middle'\n    // Reuse labelOffset.\n    isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0];\n    var labelLayout;\n    var nameRotation = axisModel.get('nameRotate');\n\n    if (nameRotation != null) {\n      nameRotation = nameRotation * PI / 180; // To radian.\n    }\n\n    var axisNameAvailableWidth;\n\n    if (isNameLocationCenter(nameLocation)) {\n      labelLayout = innerTextLayout(opt.rotation, nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n      nameDirection);\n    } else {\n      labelLayout = endTextLayout(opt, nameLocation, nameRotation || 0, extent);\n      axisNameAvailableWidth = opt.axisNameAvailableWidth;\n\n      if (axisNameAvailableWidth != null) {\n        axisNameAvailableWidth = Math.abs(axisNameAvailableWidth / Math.sin(labelLayout.rotation));\n        !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n      }\n    }\n\n    var textFont = textStyleModel.getFont();\n    var truncateOpt = axisModel.get('nameTruncate', true) || {};\n    var ellipsis = truncateOpt.ellipsis;\n    var maxWidth = retrieve(opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth); // FIXME\n    // truncate rich text? (consider performance)\n\n    var truncatedText = ellipsis != null && maxWidth != null ? formatUtil.truncateText(name, maxWidth, textFont, ellipsis, {\n      minChar: 2,\n      placeholder: truncateOpt.placeholder\n    }) : name;\n    var tooltipOpt = axisModel.get('tooltip', true);\n    var mainType = axisModel.mainType;\n    var formatterParams = {\n      componentType: mainType,\n      name: name,\n      $vars: ['name']\n    };\n    formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'name',\n      __fullText: name,\n      __truncatedText: truncatedText,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: isSilent(axisModel),\n      z2: 1,\n      tooltip: tooltipOpt && tooltipOpt.show ? extend({\n        content: name,\n        formatter: function () {\n          return name;\n        },\n        formatterParams: formatterParams\n      }, tooltipOpt) : null\n    });\n    graphic.setTextStyle(textEl.style, textStyleModel, {\n      text: truncatedText,\n      textFont: textFont,\n      textFill: textStyleModel.getTextColor() || axisModel.get('axisLine.lineStyle.color'),\n      textAlign: labelLayout.textAlign,\n      textVerticalAlign: labelLayout.textVerticalAlign\n    });\n\n    if (axisModel.get('triggerEvent')) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisName';\n      textEl.eventData.name = name;\n    } // FIXME\n\n\n    this._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    this.group.add(textEl);\n    textEl.decomposeTransform();\n  }\n};\n/**\n * @public\n * @static\n * @param {Object} opt\n * @param {number} axisRotation in radian\n * @param {number} textRotation in radian\n * @param {number} direction\n * @return {Object} {\n *  rotation, // according to axis\n *  textAlign,\n *  textVerticalAlign\n * }\n */\n\nvar innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n  var rotationDiff = remRadian(textRotation - axisRotation);\n  var textAlign;\n  var textVerticalAlign;\n\n  if (isRadianAroundZero(rotationDiff)) {\n    // Label is parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI)) {\n    // Label is inverse parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff > 0 && rotationDiff < PI) {\n      textAlign = direction > 0 ? 'right' : 'left';\n    } else {\n      textAlign = direction > 0 ? 'left' : 'right';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n};\n\nfunction endTextLayout(opt, textPosition, textRotate, extent) {\n  var rotationDiff = remRadian(textRotate - opt.rotation);\n  var textAlign;\n  var textVerticalAlign;\n  var inverse = extent[0] > extent[1];\n  var onLeft = textPosition === 'start' && !inverse || textPosition !== 'start' && inverse;\n\n  if (isRadianAroundZero(rotationDiff - PI / 2)) {\n    textVerticalAlign = onLeft ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n    textVerticalAlign = onLeft ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n      textAlign = onLeft ? 'left' : 'right';\n    } else {\n      textAlign = onLeft ? 'right' : 'left';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction isSilent(axisModel) {\n  var tooltipOpt = axisModel.get('tooltip');\n  return axisModel.get('silent') // Consider mouse cursor, add these restrictions.\n  || !(axisModel.get('triggerEvent') || tooltipOpt && tooltipOpt.show);\n}\n\nfunction fixMinMaxLabelShow(axisModel, labelEls, tickEls) {\n  // If min or max are user set, we need to check\n  // If the tick on min(max) are overlap on their neighbour tick\n  // If they are overlapped, we need to hide the min(max) tick label\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel'); // FIXME\n  // Have not consider onBand yet, where tick els is more than label els.\n\n  labelEls = labelEls || [];\n  tickEls = tickEls || [];\n  var firstLabel = labelEls[0];\n  var nextLabel = labelEls[1];\n  var lastLabel = labelEls[labelEls.length - 1];\n  var prevLabel = labelEls[labelEls.length - 2];\n  var firstTick = tickEls[0];\n  var nextTick = tickEls[1];\n  var lastTick = tickEls[tickEls.length - 1];\n  var prevTick = tickEls[tickEls.length - 2];\n\n  if (showMinLabel === false) {\n    ignoreEl(firstLabel);\n    ignoreEl(firstTick);\n  } else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n    if (showMinLabel) {\n      ignoreEl(nextLabel);\n      ignoreEl(nextTick);\n    } else {\n      ignoreEl(firstLabel);\n      ignoreEl(firstTick);\n    }\n  }\n\n  if (showMaxLabel === false) {\n    ignoreEl(lastLabel);\n    ignoreEl(lastTick);\n  } else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n    if (showMaxLabel) {\n      ignoreEl(prevLabel);\n      ignoreEl(prevTick);\n    } else {\n      ignoreEl(lastLabel);\n      ignoreEl(lastTick);\n    }\n  }\n}\n\nfunction ignoreEl(el) {\n  el && (el.ignore = true);\n}\n\nfunction isTwoLabelOverlapped(current, next, labelLayout) {\n  // current and next has the same rotation.\n  var firstRect = current && current.getBoundingRect().clone();\n  var nextRect = next && next.getBoundingRect().clone();\n\n  if (!firstRect || !nextRect) {\n    return;\n  } // When checking intersect of two rotated labels, we use mRotationBack\n  // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n\n\n  var mRotationBack = matrixUtil.identity([]);\n  matrixUtil.rotate(mRotationBack, mRotationBack, -current.rotation);\n  firstRect.applyTransform(matrixUtil.mul([], mRotationBack, current.getLocalTransform()));\n  nextRect.applyTransform(matrixUtil.mul([], mRotationBack, next.getLocalTransform()));\n  return firstRect.intersect(nextRect);\n}\n\nfunction isNameLocationCenter(nameLocation) {\n  return nameLocation === 'middle' || nameLocation === 'center';\n}\n/**\n * @static\n */\n\n\nvar ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval, ticksCnt, showMinLabel, showMaxLabel) {\n  if (i === 0 && showMinLabel || i === ticksCnt - 1 && showMaxLabel) {\n    return false;\n  } // FIXME\n  // Have not consider label overlap (if label is too long) yet.\n\n\n  var rawTick;\n  var scale = axis.scale;\n  return scale.type === 'ordinal' && (typeof interval === 'function' ? (rawTick = scale.getTicks()[i], !interval(rawTick, scale.getLabel(rawTick))) : i % (interval + 1));\n};\n/**\n * @static\n */\n\n\nvar getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n  var interval = model.get('interval');\n\n  if (interval == null || interval == 'auto') {\n    interval = labelInterval;\n  }\n\n  return interval;\n};\n\nfunction buildAxisTick(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n\n  if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n    return;\n  }\n\n  var tickModel = axisModel.getModel('axisTick');\n  var lineStyleModel = tickModel.getModel('lineStyle');\n  var tickLen = tickModel.get('length');\n  var tickInterval = getInterval(tickModel, opt.labelInterval);\n  var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel')); // FIXME\n  // Corresponds to ticksCoords ?\n\n  var ticks = axis.scale.getTicks();\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n  var pt1 = [];\n  var pt2 = [];\n  var matrix = axisBuilder._transform;\n  var tickEls = [];\n  var ticksCnt = ticksCoords.length;\n\n  for (var i = 0; i < ticksCnt; i++) {\n    // Only ordinal scale support tick interval\n    if (ifIgnoreOnTick(axis, i, tickInterval, ticksCnt, showMinLabel, showMaxLabel)) {\n      continue;\n    }\n\n    var tickCoord = ticksCoords[i];\n    pt1[0] = tickCoord;\n    pt1[1] = 0;\n    pt2[0] = tickCoord;\n    pt2[1] = opt.tickDirection * tickLen;\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    } // Tick line, Not use group transform to have better line draw\n\n\n    var tickEl = new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'tick_' + ticks[i],\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: defaults(lineStyleModel.getLineStyle(), {\n        stroke: axisModel.get('axisLine.lineStyle.color')\n      }),\n      z2: 2,\n      silent: true\n    }));\n    axisBuilder.group.add(tickEl);\n    tickEls.push(tickEl);\n  }\n\n  return tickEls;\n}\n\nfunction buildAxisLabel(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n  var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n  if (!show || axis.scale.isBlank()) {\n    return;\n  }\n\n  var labelModel = axisModel.getModel('axisLabel');\n  var labelMargin = labelModel.get('margin');\n  var ticks = axis.scale.getTicks();\n  var labels = axisModel.getFormattedLabels(); // Special label rotate.\n\n  var labelRotation = (retrieve(opt.labelRotate, labelModel.get('rotate')) || 0) * PI / 180;\n  var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n  var categoryData = axisModel.get('data');\n  var labelEls = [];\n  var silent = isSilent(axisModel);\n  var triggerEvent = axisModel.get('triggerEvent');\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n  each(ticks, function (tickVal, index) {\n    if (ifIgnoreOnTick(axis, index, opt.labelInterval, ticks.length, showMinLabel, showMaxLabel)) {\n      return;\n    }\n\n    var itemLabelModel = labelModel;\n\n    if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n      itemLabelModel = new Model(categoryData[tickVal].textStyle, labelModel, axisModel.ecModel);\n    }\n\n    var textColor = itemLabelModel.getTextColor() || axisModel.get('axisLine.lineStyle.color');\n    var tickCoord = axis.dataToCoord(tickVal);\n    var pos = [tickCoord, opt.labelOffset + opt.labelDirection * labelMargin];\n    var labelStr = axis.scale.getLabel(tickVal);\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'label_' + tickVal,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: silent,\n      z2: 10\n    });\n    graphic.setTextStyle(textEl.style, itemLabelModel, {\n      text: labels[index],\n      textAlign: itemLabelModel.getShallow('align', true) || labelLayout.textAlign,\n      textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true) || itemLabelModel.getShallow('baseline', true) || labelLayout.textVerticalAlign,\n      textFill: typeof textColor === 'function' ? textColor( // (1) In category axis with data zoom, tick is not the original\n      // index of axis.data. So tick should not be exposed to user\n      // in category axis.\n      // (2) Compatible with previous version, which always returns labelStr.\n      // But in interval scale labelStr is like '223,445', which maked\n      // user repalce ','. So we modify it to return original val but remain\n      // it as 'string' to avoid error in replacing.\n      axis.type === 'category' ? labelStr : axis.type === 'value' ? tickVal + '' : tickVal, index) : textColor\n    }); // Pack data for mouse event\n\n    if (triggerEvent) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisLabel';\n      textEl.eventData.value = labelStr;\n    } // FIXME\n\n\n    axisBuilder._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    labelEls.push(textEl);\n    axisBuilder.group.add(textEl);\n    textEl.decomposeTransform();\n  });\n  return labelEls;\n}\n\nvar _default = AxisBuilder;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axis/AxisBuilder.js\n// module id = 1070\n// module chunks = 0 1 2","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar axisPointerModelHelper = require(\"../axisPointer/modelHelper\");\n\n/**\n * Base class of AxisView.\n */\nvar AxisView = echarts.extendComponentView({\n  type: 'axis',\n\n  /**\n   * @private\n   */\n  _axisPointer: null,\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  axisPointerClass: null,\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    // FIXME\n    // This process should proformed after coordinate systems updated\n    // (axis scale updated), and should be performed each time update.\n    // So put it here temporarily, although it is not appropriate to\n    // put a model-writing procedure in `view`.\n    this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n    AxisView.superApply(this, 'render', arguments);\n    updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n  },\n\n  /**\n   * Action handler.\n   * @public\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/model/Global} ecModel\n   * @param {module:echarts/ExtensionAPI} api\n   * @param {Object} payload\n   */\n  updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n    updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    var axisPointer = this._axisPointer;\n    axisPointer && axisPointer.remove(api);\n    AxisView.superApply(this, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    disposeAxisPointer(this, api);\n    AxisView.superApply(this, 'dispose', arguments);\n  }\n});\n\nfunction updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n  var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n\n  if (!Clazz) {\n    return;\n  }\n\n  var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n  axisPointerModel ? (axisView._axisPointer || (axisView._axisPointer = new Clazz())).render(axisModel, axisPointerModel, api, forceRender) : disposeAxisPointer(axisView, api);\n}\n\nfunction disposeAxisPointer(axisView, ecModel, api) {\n  var axisPointer = axisView._axisPointer;\n  axisPointer && axisPointer.dispose(ecModel, api);\n  axisView._axisPointer = null;\n}\n\nvar axisPointerClazz = [];\n\nAxisView.registerAxisPointerClass = function (type, clazz) {\n  axisPointerClazz[type] = clazz;\n};\n\nAxisView.getAxisPointerClass = function (type) {\n  return type && axisPointerClazz[type];\n};\n\nvar _default = AxisView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axis/AxisView.js\n// module id = 1071\n// module chunks = 0 1 2","var _config = require(\"../config\");\n\nvar debugMode = _config.debugMode;\n\nvar log = function () {};\n\nif (debugMode === 1) {\n  log = function () {\n    for (var k in arguments) {\n      throw new Error(arguments[k]);\n    }\n  };\n} else if (debugMode > 1) {\n  log = function () {\n    for (var k in arguments) {\n      console.log(arguments[k]);\n    }\n  };\n}\n\nvar _default = log;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/log.js\n// module id = 1072\n// module chunks = 0 1 2","// https://github.com/mziccard/node-timsort\nvar DEFAULT_MIN_MERGE = 32;\nvar DEFAULT_MIN_GALLOPING = 7;\nvar DEFAULT_TMP_STORAGE_LENGTH = 256;\n\nfunction minRunLength(n) {\n  var r = 0;\n\n  while (n >= DEFAULT_MIN_MERGE) {\n    r |= n & 1;\n    n >>= 1;\n  }\n\n  return n + r;\n}\n\nfunction makeAscendingRun(array, lo, hi, compare) {\n  var runHi = lo + 1;\n\n  if (runHi === hi) {\n    return 1;\n  }\n\n  if (compare(array[runHi++], array[lo]) < 0) {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n      runHi++;\n    }\n\n    reverseRun(array, lo, runHi);\n  } else {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n      runHi++;\n    }\n  }\n\n  return runHi - lo;\n}\n\nfunction reverseRun(array, lo, hi) {\n  hi--;\n\n  while (lo < hi) {\n    var t = array[lo];\n    array[lo++] = array[hi];\n    array[hi--] = t;\n  }\n}\n\nfunction binaryInsertionSort(array, lo, hi, start, compare) {\n  if (start === lo) {\n    start++;\n  }\n\n  for (; start < hi; start++) {\n    var pivot = array[start];\n    var left = lo;\n    var right = start;\n    var mid;\n\n    while (left < right) {\n      mid = left + right >>> 1;\n\n      if (compare(pivot, array[mid]) < 0) {\n        right = mid;\n      } else {\n        left = mid + 1;\n      }\n    }\n\n    var n = start - left;\n\n    switch (n) {\n      case 3:\n        array[left + 3] = array[left + 2];\n\n      case 2:\n        array[left + 2] = array[left + 1];\n\n      case 1:\n        array[left + 1] = array[left];\n        break;\n\n      default:\n        while (n > 0) {\n          array[left + n] = array[left + n - 1];\n          n--;\n        }\n\n    }\n\n    array[left] = pivot;\n  }\n}\n\nfunction gallopLeft(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) > 0) {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  } else {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) > 0) {\n      lastOffset = m + 1;\n    } else {\n      offset = m;\n    }\n  }\n\n  return offset;\n}\n\nfunction gallopRight(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) < 0) {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  } else {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) < 0) {\n      offset = m;\n    } else {\n      lastOffset = m + 1;\n    }\n  }\n\n  return offset;\n}\n\nfunction TimSort(array, compare) {\n  var minGallop = DEFAULT_MIN_GALLOPING;\n  var length = 0;\n  var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n  var stackLength = 0;\n  var runStart;\n  var runLength;\n  var stackSize = 0;\n  length = array.length;\n\n  if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n    tmpStorageLength = length >>> 1;\n  }\n\n  var tmp = [];\n  stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n  runStart = [];\n  runLength = [];\n\n  function pushRun(_runStart, _runLength) {\n    runStart[stackSize] = _runStart;\n    runLength[stackSize] = _runLength;\n    stackSize += 1;\n  }\n\n  function mergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n        if (runLength[n - 1] < runLength[n + 1]) {\n          n--;\n        }\n      } else if (runLength[n] > runLength[n + 1]) {\n        break;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function forceMergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n        n--;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function mergeAt(i) {\n    var start1 = runStart[i];\n    var length1 = runLength[i];\n    var start2 = runStart[i + 1];\n    var length2 = runLength[i + 1];\n    runLength[i] = length1 + length2;\n\n    if (i === stackSize - 3) {\n      runStart[i + 1] = runStart[i + 2];\n      runLength[i + 1] = runLength[i + 2];\n    }\n\n    stackSize--;\n    var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n    start1 += k;\n    length1 -= k;\n\n    if (length1 === 0) {\n      return;\n    }\n\n    length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n    if (length2 === 0) {\n      return;\n    }\n\n    if (length1 <= length2) {\n      mergeLow(start1, length1, start2, length2);\n    } else {\n      mergeHigh(start1, length1, start2, length2);\n    }\n  }\n\n  function mergeLow(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length1; i++) {\n      tmp[i] = array[start1 + i];\n    }\n\n    var cursor1 = 0;\n    var cursor2 = start2;\n    var dest = start1;\n    array[dest++] = array[cursor2++];\n\n    if (--length2 === 0) {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n\n      return;\n    }\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n      return;\n    }\n\n    var _minGallop = minGallop;\n    var count1, count2, exit;\n\n    while (1) {\n      count1 = 0;\n      count2 = 0;\n      exit = false;\n\n      do {\n        if (compare(array[cursor2], tmp[cursor1]) < 0) {\n          array[dest++] = array[cursor2++];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest++] = tmp[cursor1++];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n        if (count1 !== 0) {\n          for (i = 0; i < count1; i++) {\n            array[dest + i] = tmp[cursor1 + i];\n          }\n\n          dest += count1;\n          cursor1 += count1;\n          length1 -= count1;\n\n          if (length1 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = array[cursor2++];\n\n        if (--length2 === 0) {\n          exit = true;\n          break;\n        }\n\n        count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n        if (count2 !== 0) {\n          for (i = 0; i < count2; i++) {\n            array[dest + i] = array[cursor2 + i];\n          }\n\n          dest += count2;\n          cursor2 += count2;\n          length2 -= count2;\n\n          if (length2 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = tmp[cursor1++];\n\n        if (--length1 === 1) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n    minGallop < 1 && (minGallop = 1);\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n    } else if (length1 === 0) {\n      throw new Error(); // throw new Error('mergeLow preconditions were not respected');\n    } else {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n    }\n  }\n\n  function mergeHigh(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length2; i++) {\n      tmp[i] = array[start2 + i];\n    }\n\n    var cursor1 = start1 + length1 - 1;\n    var cursor2 = length2 - 1;\n    var dest = start2 + length2 - 1;\n    var customCursor = 0;\n    var customDest = 0;\n    array[dest--] = array[cursor1--];\n\n    if (--length1 === 0) {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n\n      return;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n      return;\n    }\n\n    var _minGallop = minGallop;\n\n    while (true) {\n      var count1 = 0;\n      var count2 = 0;\n      var exit = false;\n\n      do {\n        if (compare(tmp[cursor2], array[cursor1]) < 0) {\n          array[dest--] = array[cursor1--];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest--] = tmp[cursor2--];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n        if (count1 !== 0) {\n          dest -= count1;\n          cursor1 -= count1;\n          length1 -= count1;\n          customDest = dest + 1;\n          customCursor = cursor1 + 1;\n\n          for (i = count1 - 1; i >= 0; i--) {\n            array[customDest + i] = array[customCursor + i];\n          }\n\n          if (length1 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = tmp[cursor2--];\n\n        if (--length2 === 1) {\n          exit = true;\n          break;\n        }\n\n        count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n        if (count2 !== 0) {\n          dest -= count2;\n          cursor2 -= count2;\n          length2 -= count2;\n          customDest = dest + 1;\n          customCursor = cursor2 + 1;\n\n          for (i = 0; i < count2; i++) {\n            array[customDest + i] = tmp[customCursor + i];\n          }\n\n          if (length2 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = array[cursor1--];\n\n        if (--length1 === 0) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n\n    if (minGallop < 1) {\n      minGallop = 1;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n    } else if (length2 === 0) {\n      throw new Error(); // throw new Error('mergeHigh preconditions were not respected');\n    } else {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n    }\n  }\n\n  this.mergeRuns = mergeRuns;\n  this.forceMergeRuns = forceMergeRuns;\n  this.pushRun = pushRun;\n}\n\nfunction sort(array, compare, lo, hi) {\n  if (!lo) {\n    lo = 0;\n  }\n\n  if (!hi) {\n    hi = array.length;\n  }\n\n  var remaining = hi - lo;\n\n  if (remaining < 2) {\n    return;\n  }\n\n  var runLength = 0;\n\n  if (remaining < DEFAULT_MIN_MERGE) {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n    binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n    return;\n  }\n\n  var ts = new TimSort(array, compare);\n  var minRun = minRunLength(remaining);\n\n  do {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n\n    if (runLength < minRun) {\n      var force = remaining;\n\n      if (force > minRun) {\n        force = minRun;\n      }\n\n      binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n      runLength = force;\n    }\n\n    ts.pushRun(lo, runLength);\n    ts.mergeRuns();\n    remaining -= runLength;\n    lo += runLength;\n  } while (remaining !== 0);\n\n  ts.forceMergeRuns();\n}\n\nmodule.exports = sort;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/timsort.js\n// module id = 1073\n// module chunks = 0 1 2","var Displayable = require(\"./Displayable\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar imageHelper = require(\"./helper/image\");\n\n/**\n * @alias zrender/graphic/Image\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nfunction ZImage(opts) {\n  Displayable.call(this, opts);\n}\n\nZImage.prototype = {\n  constructor: ZImage,\n  type: 'image',\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var src = style.image; // Must bind each time\n\n    style.bind(ctx, this, prevEl);\n    var image = this._image = imageHelper.createOrUpdateImage(src, this._image, this, this.onload);\n\n    if (!image || !imageHelper.isImageReady(image)) {\n      return;\n    } // 图片已经加载完成\n    // if (image.nodeName.toUpperCase() == 'IMG') {\n    //     if (!image.complete) {\n    //         return;\n    //     }\n    // }\n    // Else is canvas\n\n\n    var x = style.x || 0;\n    var y = style.y || 0;\n    var width = style.width;\n    var height = style.height;\n    var aspect = image.width / image.height;\n\n    if (width == null && height != null) {\n      // Keep image/height ratio\n      width = height * aspect;\n    } else if (height == null && width != null) {\n      height = width / aspect;\n    } else if (width == null && height == null) {\n      width = image.width;\n      height = image.height;\n    } // 设置transform\n\n\n    this.setTransform(ctx);\n\n    if (style.sWidth && style.sHeight) {\n      var sx = style.sx || 0;\n      var sy = style.sy || 0;\n      ctx.drawImage(image, sx, sy, style.sWidth, style.sHeight, x, y, width, height);\n    } else if (style.sx && style.sy) {\n      var sx = style.sx;\n      var sy = style.sy;\n      var sWidth = width - sx;\n      var sHeight = height - sy;\n      ctx.drawImage(image, sx, sy, sWidth, sHeight, x, y, width, height);\n    } else {\n      ctx.drawImage(image, x, y, width, height);\n    }\n\n    this.restoreTransform(ctx); // Draw rect text\n\n    if (style.text != null) {\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  getBoundingRect: function () {\n    var style = this.style;\n\n    if (!this._rect) {\n      this._rect = new BoundingRect(style.x || 0, style.y || 0, style.width || 0, style.height || 0);\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(ZImage, Displayable);\nvar _default = ZImage;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/Image.js\n// module id = 1074\n// module chunks = 0 1 2","var LRU = require(\"../../core/LRU\");\n\nvar globalImageCache = new LRU(50);\n/**\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\nfunction findExistImage(newImageOrSrc) {\n  if (typeof newImageOrSrc === 'string') {\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    return cachedImgObj && cachedImgObj.image;\n  } else {\n    return newImageOrSrc;\n  }\n}\n/**\n * Caution: User should cache loaded images, but not just count on LRU.\n * Consider if required images more than LRU size, will dead loop occur?\n *\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @param {HTMLImageElement|HTMLCanvasElement|Canvas} image Existent image.\n * @param {module:zrender/Element} [hostEl] For calling `dirty`.\n * @param {Function} [cb] params: (image, cbPayload)\n * @param {Object} [cbPayload] Payload on cb calling.\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\n\nfunction createOrUpdateImage(newImageOrSrc, image, hostEl, cb, cbPayload) {\n  if (!newImageOrSrc) {\n    return image;\n  } else if (typeof newImageOrSrc === 'string') {\n    // Image should not be loaded repeatly.\n    if (image && image.__zrImageSrc === newImageOrSrc || !hostEl) {\n      return image;\n    } // Only when there is no existent image or existent image src\n    // is different, this method is responsible for load.\n\n\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    var pendingWrap = {\n      hostEl: hostEl,\n      cb: cb,\n      cbPayload: cbPayload\n    };\n\n    if (cachedImgObj) {\n      image = cachedImgObj.image;\n      !isImageReady(image) && cachedImgObj.pending.push(pendingWrap);\n    } else {\n      !image && (image = new Image());\n      image.onload = imageOnLoad;\n      globalImageCache.put(newImageOrSrc, image.__cachedImgObj = {\n        image: image,\n        pending: [pendingWrap]\n      });\n      image.src = image.__zrImageSrc = newImageOrSrc;\n    }\n\n    return image;\n  } // newImageOrSrc is an HTMLImageElement or HTMLCanvasElement or Canvas\n  else {\n      return newImageOrSrc;\n    }\n}\n\nfunction imageOnLoad() {\n  var cachedImgObj = this.__cachedImgObj;\n  this.onload = this.__cachedImgObj = null;\n\n  for (var i = 0; i < cachedImgObj.pending.length; i++) {\n    var pendingWrap = cachedImgObj.pending[i];\n    var cb = pendingWrap.cb;\n    cb && cb(this, pendingWrap.cbPayload);\n    pendingWrap.hostEl.dirty();\n  }\n\n  cachedImgObj.pending.length = 0;\n}\n\nfunction isImageReady(image) {\n  return image && image.width && image.height;\n}\n\nexports.findExistImage = findExistImage;\nexports.createOrUpdateImage = createOrUpdateImage;\nexports.isImageReady = isImageReady;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/helper/image.js\n// module id = 1075\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _clazz = require(\"./clazz\");\n\nvar parseClassType = _clazz.parseClassType;\nvar base = 0;\nvar DELIMITER = '_';\n/**\n * @public\n * @param {string} type\n * @return {string}\n */\n\nfunction getUID(type) {\n  // Considering the case of crossing js context,\n  // use Math.random to make id as unique as possible.\n  return [type || '', base++, Math.random()].join(DELIMITER);\n}\n/**\n * @inner\n */\n\n\nfunction enableSubTypeDefaulter(entity) {\n  var subTypeDefaulters = {};\n\n  entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n    componentType = parseClassType(componentType);\n    subTypeDefaulters[componentType.main] = defaulter;\n  };\n\n  entity.determineSubType = function (componentType, option) {\n    var type = option.type;\n\n    if (!type) {\n      var componentTypeMain = parseClassType(componentType).main;\n\n      if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n        type = subTypeDefaulters[componentTypeMain](option);\n      }\n    }\n\n    return type;\n  };\n\n  return entity;\n}\n/**\n * Topological travel on Activity Network (Activity On Vertices).\n * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n *\n * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n *\n * If there is circle dependencey, Error will be thrown.\n *\n */\n\n\nfunction enableTopologicalTravel(entity, dependencyGetter) {\n  /**\n   * @public\n   * @param {Array.<string>} targetNameList Target Component type list.\n   *                                           Can be ['aa', 'bb', 'aa.xx']\n   * @param {Array.<string>} fullNameList By which we can build dependency graph.\n   * @param {Function} callback Params: componentType, dependencies.\n   * @param {Object} context Scope of callback.\n   */\n  entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n    if (!targetNameList.length) {\n      return;\n    }\n\n    var result = makeDepndencyGraph(fullNameList);\n    var graph = result.graph;\n    var stack = result.noEntryList;\n    var targetNameSet = {};\n    zrUtil.each(targetNameList, function (name) {\n      targetNameSet[name] = true;\n    });\n\n    while (stack.length) {\n      var currComponentType = stack.pop();\n      var currVertex = graph[currComponentType];\n      var isInTargetNameSet = !!targetNameSet[currComponentType];\n\n      if (isInTargetNameSet) {\n        callback.call(context, currComponentType, currVertex.originalDeps.slice());\n        delete targetNameSet[currComponentType];\n      }\n\n      zrUtil.each(currVertex.successor, isInTargetNameSet ? removeEdgeAndAdd : removeEdge);\n    }\n\n    zrUtil.each(targetNameSet, function () {\n      throw new Error('Circle dependency may exists');\n    });\n\n    function removeEdge(succComponentType) {\n      graph[succComponentType].entryCount--;\n\n      if (graph[succComponentType].entryCount === 0) {\n        stack.push(succComponentType);\n      }\n    } // Consider this case: legend depends on series, and we call\n    // chart.setOption({series: [...]}), where only series is in option.\n    // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n    // not be called, but only sereis.mergeOption is called. Thus legend\n    // have no chance to update its local record about series (like which\n    // name of series is available in legend).\n\n\n    function removeEdgeAndAdd(succComponentType) {\n      targetNameSet[succComponentType] = true;\n      removeEdge(succComponentType);\n    }\n  };\n  /**\n   * DepndencyGraph: {Object}\n   * key: conponentType,\n   * value: {\n   *     successor: [conponentTypes...],\n   *     originalDeps: [conponentTypes...],\n   *     entryCount: {number}\n   * }\n   */\n\n\n  function makeDepndencyGraph(fullNameList) {\n    var graph = {};\n    var noEntryList = [];\n    zrUtil.each(fullNameList, function (name) {\n      var thisItem = createDependencyGraphItem(graph, name);\n      var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n      var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n      thisItem.entryCount = availableDeps.length;\n\n      if (thisItem.entryCount === 0) {\n        noEntryList.push(name);\n      }\n\n      zrUtil.each(availableDeps, function (dependentName) {\n        if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n          thisItem.predecessor.push(dependentName);\n        }\n\n        var thatItem = createDependencyGraphItem(graph, dependentName);\n\n        if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n          thatItem.successor.push(name);\n        }\n      });\n    });\n    return {\n      graph: graph,\n      noEntryList: noEntryList\n    };\n  }\n\n  function createDependencyGraphItem(graph, name) {\n    if (!graph[name]) {\n      graph[name] = {\n        predecessor: [],\n        successor: []\n      };\n    }\n\n    return graph[name];\n  }\n\n  function getAvailableDependencies(originalDeps, fullNameList) {\n    var availableDeps = [];\n    zrUtil.each(originalDeps, function (dep) {\n      zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n    });\n    return availableDeps;\n  }\n}\n\nexports.getUID = getUID;\nexports.enableSubTypeDefaulter = enableSubTypeDefaulter;\nexports.enableTopologicalTravel = enableTopologicalTravel;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/component.js\n// module id = 1076\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisHelper = require(\"./axisHelper\");\n\nfunction getName(obj) {\n  if (zrUtil.isObject(obj) && obj.value != null) {\n    return obj.value;\n  } else {\n    return obj + '';\n  }\n}\n\nvar _default = {\n  /**\n   * Format labels\n   * @return {Array.<string>}\n   */\n  getFormattedLabels: function () {\n    return axisHelper.getFormattedLabels(this.axis, this.get('axisLabel.formatter'));\n  },\n\n  /**\n   * Get categories\n   */\n  getCategories: function () {\n    return this.get('type') === 'category' && zrUtil.map(this.get('data'), getName);\n  },\n\n  /**\n   * @param {boolean} origin\n   * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n   */\n  getMin: function (origin) {\n    var option = this.option;\n    var min = !origin && option.rangeStart != null ? option.rangeStart : option.min;\n\n    if (this.axis && min != null && min !== 'dataMin' && typeof min !== 'function' && !zrUtil.eqNaN(min)) {\n      min = this.axis.scale.parse(min);\n    }\n\n    return min;\n  },\n\n  /**\n   * @param {boolean} origin\n   * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n   */\n  getMax: function (origin) {\n    var option = this.option;\n    var max = !origin && option.rangeEnd != null ? option.rangeEnd : option.max;\n\n    if (this.axis && max != null && max !== 'dataMax' && typeof max !== 'function' && !zrUtil.eqNaN(max)) {\n      max = this.axis.scale.parse(max);\n    }\n\n    return max;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  getNeedCrossZero: function () {\n    var option = this.option;\n    return option.rangeStart != null || option.rangeEnd != null ? false : !option.scale;\n  },\n\n  /**\n   * Should be implemented by each axis model if necessary.\n   * @return {module:echarts/model/Component} coordinate system model\n   */\n  getCoordSysModel: zrUtil.noop,\n\n  /**\n   * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n   * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n   */\n  setRange: function (rangeStart, rangeEnd) {\n    this.option.rangeStart = rangeStart;\n    this.option.rangeEnd = rangeEnd;\n  },\n\n  /**\n   * Reset range\n   */\n  resetRange: function () {\n    // rangeStart and rangeEnd is readonly.\n    this.option.rangeStart = this.option.rangeEnd = null;\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/axisModelCommonMixin.js\n// module id = 1077\n// module chunks = 0 1 2","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar helper = require(\"./helper\");\n\nvar AxisProxy = require(\"./AxisProxy\");\n\nvar each = zrUtil.each;\nvar eachAxisDim = helper.eachAxisDim;\nvar DataZoomModel = echarts.extendComponentModel({\n  type: 'dataZoom',\n  dependencies: ['xAxis', 'yAxis', 'zAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'series'],\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    zlevel: 0,\n    z: 4,\n    // Higher than normal component (z: 2).\n    orient: null,\n    // Default auto by axisIndex. Possible value: 'horizontal', 'vertical'.\n    xAxisIndex: null,\n    // Default the first horizontal category axis.\n    yAxisIndex: null,\n    // Default the first vertical category axis.\n    filterMode: 'filter',\n    // Possible values: 'filter' or 'empty' or 'weakFilter'.\n    // 'filter': data items which are out of window will be removed. This option is\n    //          applicable when filtering outliers. For each data item, it will be\n    //          filtered if one of the relevant dimensions is out of the window.\n    // 'weakFilter': data items which are out of window will be removed. This option\n    //          is applicable when filtering outliers. For each data item, it will be\n    //          filtered only if all  of the relevant dimensions are out of the same\n    //          side of the window.\n    // 'empty': data items which are out of window will be set to empty.\n    //          This option is applicable when user should not neglect\n    //          that there are some data items out of window.\n    // 'none': Do not filter.\n    // Taking line chart as an example, line will be broken in\n    // the filtered points when filterModel is set to 'empty', but\n    // be connected when set to 'filter'.\n    throttle: null,\n    // Dispatch action by the fixed rate, avoid frequency.\n    // default 100. Do not throttle when use null/undefined.\n    // If animation === true and animationDurationUpdate > 0,\n    // default value is 100, otherwise 20.\n    start: 0,\n    // Start percent. 0 ~ 100\n    end: 100,\n    // End percent. 0 ~ 100\n    startValue: null,\n    // Start value. If startValue specified, start is ignored.\n    endValue: null,\n    // End value. If endValue specified, end is ignored.\n    minSpan: null,\n    // 0 ~ 100\n    maxSpan: null,\n    // 0 ~ 100\n    minValueSpan: null,\n    // The range of dataZoom can not be smaller than that.\n    maxValueSpan: null,\n    // The range of dataZoom can not be larger than that.\n    rangeMode: null // Array, can be 'value' or 'percent'.\n\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel) {\n    /**\n     * key like x_0, y_1\n     * @private\n     * @type {Object}\n     */\n    this._dataIntervalByAxis = {};\n    /**\n     * @private\n     */\n\n    this._dataInfo = {};\n    /**\n     * key like x_0, y_1\n     * @private\n     */\n\n    this._axisProxies = {};\n    /**\n     * @readOnly\n     */\n\n    this.textStyleModel;\n    /**\n     * @private\n     */\n\n    this._autoThrottle = true;\n    /**\n     * 'percent' or 'value'\n     * @private\n     */\n\n    this._rangePropMode = ['percent', 'percent'];\n    var rawOption = retrieveRaw(option);\n    this.mergeDefaultAndTheme(option, ecModel);\n    this.doInit(rawOption);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (newOption) {\n    var rawOption = retrieveRaw(newOption); //FIX #2591\n\n    zrUtil.merge(this.option, newOption, true);\n    this.doInit(rawOption);\n  },\n\n  /**\n   * @protected\n   */\n  doInit: function (rawOption) {\n    var thisOption = this.option; // Disable realtime view update if canvas is not supported.\n\n    if (!env.canvasSupported) {\n      thisOption.realtime = false;\n    }\n\n    this._setDefaultThrottle(rawOption);\n\n    updateRangeUse(this, rawOption);\n    each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n      // start/end has higher priority over startValue/endValue if they\n      // both set, but we should make chart.setOption({endValue: 1000})\n      // effective, rather than chart.setOption({endValue: 1000, end: null}).\n      if (this._rangePropMode[index] === 'value') {\n        thisOption[names[0]] = null;\n      } // Otherwise do nothing and use the merge result.\n\n    }, this);\n    this.textStyleModel = this.getModel('textStyle');\n\n    this._resetTarget();\n\n    this._giveAxisProxies();\n  },\n\n  /**\n   * @private\n   */\n  _giveAxisProxies: function () {\n    var axisProxies = this._axisProxies;\n    this.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel, ecModel) {\n      var axisModel = this.dependentModels[dimNames.axis][axisIndex]; // If exists, share axisProxy with other dataZoomModels.\n\n      var axisProxy = axisModel.__dzAxisProxy || ( // Use the first dataZoomModel as the main model of axisProxy.\n      axisModel.__dzAxisProxy = new AxisProxy(dimNames.name, axisIndex, this, ecModel)); // FIXME\n      // dispose __dzAxisProxy\n\n      axisProxies[dimNames.name + '_' + axisIndex] = axisProxy;\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _resetTarget: function () {\n    var thisOption = this.option;\n\n    var autoMode = this._judgeAutoMode();\n\n    eachAxisDim(function (dimNames) {\n      var axisIndexName = dimNames.axisIndex;\n      thisOption[axisIndexName] = modelUtil.normalizeToArray(thisOption[axisIndexName]);\n    }, this);\n\n    if (autoMode === 'axisIndex') {\n      this._autoSetAxisIndex();\n    } else if (autoMode === 'orient') {\n      this._autoSetOrient();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _judgeAutoMode: function () {\n    // Auto set only works for setOption at the first time.\n    // The following is user's reponsibility. So using merged\n    // option is OK.\n    var thisOption = this.option;\n    var hasIndexSpecified = false;\n    eachAxisDim(function (dimNames) {\n      // When user set axisIndex as a empty array, we think that user specify axisIndex\n      // but do not want use auto mode. Because empty array may be encountered when\n      // some error occured.\n      if (thisOption[dimNames.axisIndex] != null) {\n        hasIndexSpecified = true;\n      }\n    }, this);\n    var orient = thisOption.orient;\n\n    if (orient == null && hasIndexSpecified) {\n      return 'orient';\n    } else if (!hasIndexSpecified) {\n      if (orient == null) {\n        thisOption.orient = 'horizontal';\n      }\n\n      return 'axisIndex';\n    }\n  },\n\n  /**\n   * @private\n   */\n  _autoSetAxisIndex: function () {\n    var autoAxisIndex = true;\n    var orient = this.get('orient', true);\n    var thisOption = this.option;\n    var dependentModels = this.dependentModels;\n\n    if (autoAxisIndex) {\n      // Find axis that parallel to dataZoom as default.\n      var dimName = orient === 'vertical' ? 'y' : 'x';\n\n      if (dependentModels[dimName + 'Axis'].length) {\n        thisOption[dimName + 'AxisIndex'] = [0];\n        autoAxisIndex = false;\n      } else {\n        each(dependentModels.singleAxis, function (singleAxisModel) {\n          if (autoAxisIndex && singleAxisModel.get('orient', true) === orient) {\n            thisOption.singleAxisIndex = [singleAxisModel.componentIndex];\n            autoAxisIndex = false;\n          }\n        });\n      }\n    }\n\n    if (autoAxisIndex) {\n      // Find the first category axis as default. (consider polar)\n      eachAxisDim(function (dimNames) {\n        if (!autoAxisIndex) {\n          return;\n        }\n\n        var axisIndices = [];\n        var axisModels = this.dependentModels[dimNames.axis];\n\n        if (axisModels.length && !axisIndices.length) {\n          for (var i = 0, len = axisModels.length; i < len; i++) {\n            if (axisModels[i].get('type') === 'category') {\n              axisIndices.push(i);\n            }\n          }\n        }\n\n        thisOption[dimNames.axisIndex] = axisIndices;\n\n        if (axisIndices.length) {\n          autoAxisIndex = false;\n        }\n      }, this);\n    }\n\n    if (autoAxisIndex) {\n      // FIXME\n      // 这里是兼容ec2的写法（没指定xAxisIndex和yAxisIndex时把scatter和双数值轴折柱纳入dataZoom控制），\n      // 但是实际是否需要Grid.js#getScaleByOption来判断（考虑time，log等axis type）？\n      // If both dataZoom.xAxisIndex and dataZoom.yAxisIndex is not specified,\n      // dataZoom component auto adopts series that reference to\n      // both xAxis and yAxis which type is 'value'.\n      this.ecModel.eachSeries(function (seriesModel) {\n        if (this._isSeriesHasAllAxesTypeOf(seriesModel, 'value')) {\n          eachAxisDim(function (dimNames) {\n            var axisIndices = thisOption[dimNames.axisIndex];\n            var axisIndex = seriesModel.get(dimNames.axisIndex);\n            var axisId = seriesModel.get(dimNames.axisId);\n            var axisModel = seriesModel.ecModel.queryComponents({\n              mainType: dimNames.axis,\n              index: axisIndex,\n              id: axisId\n            })[0];\n            axisIndex = axisModel.componentIndex;\n\n            if (zrUtil.indexOf(axisIndices, axisIndex) < 0) {\n              axisIndices.push(axisIndex);\n            }\n          });\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _autoSetOrient: function () {\n    var dim; // Find the first axis\n\n    this.eachTargetAxis(function (dimNames) {\n      !dim && (dim = dimNames.name);\n    }, this);\n    this.option.orient = dim === 'y' ? 'vertical' : 'horizontal';\n  },\n\n  /**\n   * @private\n   */\n  _isSeriesHasAllAxesTypeOf: function (seriesModel, axisType) {\n    // FIXME\n    // 需要series的xAxisIndex和yAxisIndex都首先自动设置上。\n    // 例如series.type === scatter时。\n    var is = true;\n    eachAxisDim(function (dimNames) {\n      var seriesAxisIndex = seriesModel.get(dimNames.axisIndex);\n      var axisModel = this.dependentModels[dimNames.axis][seriesAxisIndex];\n\n      if (!axisModel || axisModel.get('type') !== axisType) {\n        is = false;\n      }\n    }, this);\n    return is;\n  },\n\n  /**\n   * @private\n   */\n  _setDefaultThrottle: function (rawOption) {\n    // When first time user set throttle, auto throttle ends.\n    if (rawOption.hasOwnProperty('throttle')) {\n      this._autoThrottle = false;\n    }\n\n    if (this._autoThrottle) {\n      var globalOption = this.ecModel.option;\n      this.option.throttle = globalOption.animation && globalOption.animationDurationUpdate > 0 ? 100 : 20;\n    }\n  },\n\n  /**\n   * @public\n   */\n  getFirstTargetAxisModel: function () {\n    var firstAxisModel;\n    eachAxisDim(function (dimNames) {\n      if (firstAxisModel == null) {\n        var indices = this.get(dimNames.axisIndex);\n\n        if (indices.length) {\n          firstAxisModel = this.dependentModels[dimNames.axis][indices[0]];\n        }\n      }\n    }, this);\n    return firstAxisModel;\n  },\n\n  /**\n   * @public\n   * @param {Function} callback param: axisModel, dimNames, axisIndex, dataZoomModel, ecModel\n   */\n  eachTargetAxis: function (callback, context) {\n    var ecModel = this.ecModel;\n    eachAxisDim(function (dimNames) {\n      each(this.get(dimNames.axisIndex), function (axisIndex) {\n        callback.call(context, dimNames, axisIndex, this, ecModel);\n      }, this);\n    }, this);\n  },\n\n  /**\n   * @param {string} dimName\n   * @param {number} axisIndex\n   * @return {module:echarts/component/dataZoom/AxisProxy} If not found, return null/undefined.\n   */\n  getAxisProxy: function (dimName, axisIndex) {\n    return this._axisProxies[dimName + '_' + axisIndex];\n  },\n\n  /**\n   * @param {string} dimName\n   * @param {number} axisIndex\n   * @return {module:echarts/model/Model} If not found, return null/undefined.\n   */\n  getAxisModel: function (dimName, axisIndex) {\n    var axisProxy = this.getAxisProxy(dimName, axisIndex);\n    return axisProxy && axisProxy.getAxisModel();\n  },\n\n  /**\n   * If not specified, set to undefined.\n   *\n   * @public\n   * @param {Object} opt\n   * @param {number} [opt.start]\n   * @param {number} [opt.end]\n   * @param {number} [opt.startValue]\n   * @param {number} [opt.endValue]\n   * @param {boolean} [ignoreUpdateRangeUsg=false]\n   */\n  setRawRange: function (opt, ignoreUpdateRangeUsg) {\n    var option = this.option;\n    each([['start', 'startValue'], ['end', 'endValue']], function (names) {\n      // If only one of 'start' and 'startValue' is not null/undefined, the other\n      // should be cleared, which enable clear the option.\n      // If both of them are not set, keep option with the original value, which\n      // enable use only set start but not set end when calling `dispatchAction`.\n      // The same as 'end' and 'endValue'.\n      if (opt[names[0]] != null || opt[names[1]] != null) {\n        option[names[0]] = opt[names[0]];\n        option[names[1]] = opt[names[1]];\n      }\n    }, this);\n    !ignoreUpdateRangeUsg && updateRangeUse(this, opt);\n  },\n\n  /**\n   * @public\n   * @return {Array.<number>} [startPercent, endPercent]\n   */\n  getPercentRange: function () {\n    var axisProxy = this.findRepresentativeAxisProxy();\n\n    if (axisProxy) {\n      return axisProxy.getDataPercentWindow();\n    }\n  },\n\n  /**\n   * @public\n   * For example, chart.getModel().getComponent('dataZoom').getValueRange('y', 0);\n   *\n   * @param {string} [axisDimName]\n   * @param {number} [axisIndex]\n   * @return {Array.<number>} [startValue, endValue] value can only be '-' or finite number.\n   */\n  getValueRange: function (axisDimName, axisIndex) {\n    if (axisDimName == null && axisIndex == null) {\n      var axisProxy = this.findRepresentativeAxisProxy();\n\n      if (axisProxy) {\n        return axisProxy.getDataValueWindow();\n      }\n    } else {\n      return this.getAxisProxy(axisDimName, axisIndex).getDataValueWindow();\n    }\n  },\n\n  /**\n   * @public\n   * @param {module:echarts/model/Model} [axisModel] If axisModel given, find axisProxy\n   *      corresponding to the axisModel\n   * @return {module:echarts/component/dataZoom/AxisProxy}\n   */\n  findRepresentativeAxisProxy: function (axisModel) {\n    if (axisModel) {\n      return axisModel.__dzAxisProxy;\n    } // Find the first hosted axisProxy\n\n\n    var axisProxies = this._axisProxies;\n\n    for (var key in axisProxies) {\n      if (axisProxies.hasOwnProperty(key) && axisProxies[key].hostedBy(this)) {\n        return axisProxies[key];\n      }\n    } // If no hosted axis find not hosted axisProxy.\n    // Consider this case: dataZoomModel1 and dataZoomModel2 control the same axis,\n    // and the option.start or option.end settings are different. The percentRange\n    // should follow axisProxy.\n    // (We encounter this problem in toolbox data zoom.)\n\n\n    for (var key in axisProxies) {\n      if (axisProxies.hasOwnProperty(key) && !axisProxies[key].hostedBy(this)) {\n        return axisProxies[key];\n      }\n    }\n  },\n\n  /**\n   * @return {Array.<string>}\n   */\n  getRangePropMode: function () {\n    return this._rangePropMode.slice();\n  }\n});\n\nfunction retrieveRaw(option) {\n  var ret = {};\n  each(['start', 'end', 'startValue', 'endValue', 'throttle'], function (name) {\n    option.hasOwnProperty(name) && (ret[name] = option[name]);\n  });\n  return ret;\n}\n\nfunction updateRangeUse(dataZoomModel, rawOption) {\n  var rangePropMode = dataZoomModel._rangePropMode;\n  var rangeModeInOption = dataZoomModel.get('rangeMode');\n  each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n    var percentSpecified = rawOption[names[0]] != null;\n    var valueSpecified = rawOption[names[1]] != null;\n\n    if (percentSpecified && !valueSpecified) {\n      rangePropMode[index] = 'percent';\n    } else if (!percentSpecified && valueSpecified) {\n      rangePropMode[index] = 'value';\n    } else if (rangeModeInOption) {\n      rangePropMode[index] = rangeModeInOption[index];\n    } else if (percentSpecified) {\n      // percentSpecified && valueSpecified\n      rangePropMode[index] = 'percent';\n    } // else remain its original setting.\n\n  });\n}\n\nvar _default = DataZoomModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/DataZoomModel.js\n// module id = 1078\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar AXIS_DIMS = ['x', 'y', 'z', 'radius', 'angle', 'single']; // Supported coords.\n\nvar COORDS = ['cartesian2d', 'polar', 'singleAxis'];\n/**\n * @param {string} coordType\n * @return {boolean}\n */\n\nfunction isCoordSupported(coordType) {\n  return zrUtil.indexOf(COORDS, coordType) >= 0;\n}\n/**\n * Create \"each\" method to iterate names.\n *\n * @pubilc\n * @param  {Array.<string>} names\n * @param  {Array.<string>=} attrs\n * @return {Function}\n */\n\n\nfunction createNameEach(names, attrs) {\n  names = names.slice();\n  var capitalNames = zrUtil.map(names, formatUtil.capitalFirst);\n  attrs = (attrs || []).slice();\n  var capitalAttrs = zrUtil.map(attrs, formatUtil.capitalFirst);\n  return function (callback, context) {\n    zrUtil.each(names, function (name, index) {\n      var nameObj = {\n        name: name,\n        capital: capitalNames[index]\n      };\n\n      for (var j = 0; j < attrs.length; j++) {\n        nameObj[attrs[j]] = name + capitalAttrs[j];\n      }\n\n      callback.call(context, nameObj);\n    });\n  };\n}\n/**\n * Iterate each dimension name.\n *\n * @public\n * @param {Function} callback The parameter is like:\n *                            {\n *                                name: 'angle',\n *                                capital: 'Angle',\n *                                axis: 'angleAxis',\n *                                axisIndex: 'angleAixs',\n *                                index: 'angleIndex'\n *                            }\n * @param {Object} context\n */\n\n\nvar eachAxisDim = createNameEach(AXIS_DIMS, ['axisIndex', 'axis', 'index', 'id']);\n/**\n * If tow dataZoomModels has the same axis controlled, we say that they are 'linked'.\n * dataZoomModels and 'links' make up one or more graphics.\n * This function finds the graphic where the source dataZoomModel is in.\n *\n * @public\n * @param {Function} forEachNode Node iterator.\n * @param {Function} forEachEdgeType edgeType iterator\n * @param {Function} edgeIdGetter Giving node and edgeType, return an array of edge id.\n * @return {Function} Input: sourceNode, Output: Like {nodes: [], dims: {}}\n */\n\nfunction createLinkedNodesFinder(forEachNode, forEachEdgeType, edgeIdGetter) {\n  return function (sourceNode) {\n    var result = {\n      nodes: [],\n      records: {} // key: edgeType.name, value: Object (key: edge id, value: boolean).\n\n    };\n    forEachEdgeType(function (edgeType) {\n      result.records[edgeType.name] = {};\n    });\n\n    if (!sourceNode) {\n      return result;\n    }\n\n    absorb(sourceNode, result);\n    var existsLink;\n\n    do {\n      existsLink = false;\n      forEachNode(processSingleNode);\n    } while (existsLink);\n\n    function processSingleNode(node) {\n      if (!isNodeAbsorded(node, result) && isLinked(node, result)) {\n        absorb(node, result);\n        existsLink = true;\n      }\n    }\n\n    return result;\n  };\n\n  function isNodeAbsorded(node, result) {\n    return zrUtil.indexOf(result.nodes, node) >= 0;\n  }\n\n  function isLinked(node, result) {\n    var hasLink = false;\n    forEachEdgeType(function (edgeType) {\n      zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n        result.records[edgeType.name][edgeId] && (hasLink = true);\n      });\n    });\n    return hasLink;\n  }\n\n  function absorb(node, result) {\n    result.nodes.push(node);\n    forEachEdgeType(function (edgeType) {\n      zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n        result.records[edgeType.name][edgeId] = true;\n      });\n    });\n  }\n}\n\nexports.isCoordSupported = isCoordSupported;\nexports.createNameEach = createNameEach;\nexports.eachAxisDim = eachAxisDim;\nexports.createLinkedNodesFinder = createLinkedNodesFinder;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/helper.js\n// module id = 1079\n// module chunks = 0 1 2","var ComponentView = require(\"../../view/Component\");\n\nvar _default = ComponentView.extend({\n  type: 'dataZoom',\n  render: function (dataZoomModel, ecModel, api, payload) {\n    this.dataZoomModel = dataZoomModel;\n    this.ecModel = ecModel;\n    this.api = api;\n  },\n\n  /**\n   * Find the first target coordinate system.\n   *\n   * @protected\n   * @return {Object} {\n   *                   grid: [\n   *                       {model: coord0, axisModels: [axis1, axis3], coordIndex: 1},\n   *                       {model: coord1, axisModels: [axis0, axis2], coordIndex: 0},\n   *                       ...\n   *                   ],  // cartesians must not be null/undefined.\n   *                   polar: [\n   *                       {model: coord0, axisModels: [axis4], coordIndex: 0},\n   *                       ...\n   *                   ],  // polars must not be null/undefined.\n   *                   singleAxis: [\n   *                       {model: coord0, axisModels: [], coordIndex: 0}\n   *                   ]\n   */\n  getTargetCoordInfo: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var ecModel = this.ecModel;\n    var coordSysLists = {};\n    dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\n      var axisModel = ecModel.getComponent(dimNames.axis, axisIndex);\n\n      if (axisModel) {\n        var coordModel = axisModel.getCoordSysModel();\n        coordModel && save(coordModel, axisModel, coordSysLists[coordModel.mainType] || (coordSysLists[coordModel.mainType] = []), coordModel.componentIndex);\n      }\n    }, this);\n\n    function save(coordModel, axisModel, store, coordIndex) {\n      var item;\n\n      for (var i = 0; i < store.length; i++) {\n        if (store[i].model === coordModel) {\n          item = store[i];\n          break;\n        }\n      }\n\n      if (!item) {\n        store.push(item = {\n          model: coordModel,\n          axisModels: [],\n          coordIndex: coordIndex\n        });\n      }\n\n      item.axisModels.push(axisModel);\n    }\n\n    return coordSysLists;\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/DataZoomView.js\n// module id = 1080\n// module chunks = 0 1 2","var guid = require(\"./core/guid\");\n\nvar env = require(\"./core/env\");\n\nvar zrUtil = require(\"./core/util\");\n\nvar Handler = require(\"./Handler\");\n\nvar Storage = require(\"./Storage\");\n\nvar Painter = require(\"./Painter\");\n\nvar Animation = require(\"./animation/Animation\");\n\nvar HandlerProxy = require(\"./dom/HandlerProxy\");\n\n/*!\n* ZRender, a high performance 2d drawing library.\n*\n* Copyright (c) 2013, Baidu Inc.\n* All rights reserved.\n*\n* LICENSE\n* https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n*/\nvar useVML = !env.canvasSupported;\nvar painterCtors = {\n  canvas: Painter\n};\nvar instances = {}; // ZRender实例map索引\n\n/**\n * @type {string}\n */\n\nvar version = '3.7.4';\n/**\n * Initializing a zrender instance\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n * @return {module:zrender/ZRender}\n */\n\nfunction init(dom, opts) {\n  var zr = new ZRender(guid(), dom, opts);\n  instances[zr.id] = zr;\n  return zr;\n}\n/**\n * Dispose zrender instance\n * @param {module:zrender/ZRender} zr\n */\n\n\nfunction dispose(zr) {\n  if (zr) {\n    zr.dispose();\n  } else {\n    for (var key in instances) {\n      if (instances.hasOwnProperty(key)) {\n        instances[key].dispose();\n      }\n    }\n\n    instances = {};\n  }\n\n  return this;\n}\n/**\n * Get zrender instance by id\n * @param {string} id zrender instance id\n * @return {module:zrender/ZRender}\n */\n\n\nfunction getInstance(id) {\n  return instances[id];\n}\n\nfunction registerPainter(name, Ctor) {\n  painterCtors[name] = Ctor;\n}\n\nfunction delInstance(id) {\n  delete instances[id];\n}\n/**\n * @module zrender/ZRender\n */\n\n/**\n * @constructor\n * @alias module:zrender/ZRender\n * @param {string} id\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n */\n\n\nvar ZRender = function (id, dom, opts) {\n  opts = opts || {};\n  /**\n   * @type {HTMLDomElement}\n   */\n\n  this.dom = dom;\n  /**\n   * @type {string}\n   */\n\n  this.id = id;\n  var self = this;\n  var storage = new Storage();\n  var rendererType = opts.renderer; // TODO WebGL\n\n  if (useVML) {\n    if (!painterCtors.vml) {\n      throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n    }\n\n    rendererType = 'vml';\n  } else if (!rendererType || !painterCtors[rendererType]) {\n    rendererType = 'canvas';\n  }\n\n  var painter = new painterCtors[rendererType](dom, storage, opts);\n  this.storage = storage;\n  this.painter = painter;\n  var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;\n  this.handler = new Handler(storage, painter, handerProxy, painter.root);\n  /**\n   * @type {module:zrender/animation/Animation}\n   */\n\n  this.animation = new Animation({\n    stage: {\n      update: zrUtil.bind(this.flush, this)\n    }\n  });\n  this.animation.start();\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._needsRefresh; // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n  // FIXME 有点ugly\n\n  var oldDelFromStorage = storage.delFromStorage;\n  var oldAddToStorage = storage.addToStorage;\n\n  storage.delFromStorage = function (el) {\n    oldDelFromStorage.call(storage, el);\n    el && el.removeSelfFromZr(self);\n  };\n\n  storage.addToStorage = function (el) {\n    oldAddToStorage.call(storage, el);\n    el.addSelfToZr(self);\n  };\n};\n\nZRender.prototype = {\n  constructor: ZRender,\n\n  /**\n   * 获取实例唯一标识\n   * @return {string}\n   */\n  getId: function () {\n    return this.id;\n  },\n\n  /**\n   * 添加元素\n   * @param  {module:zrender/Element} el\n   */\n  add: function (el) {\n    this.storage.addRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * 删除元素\n   * @param  {module:zrender/Element} el\n   */\n  remove: function (el) {\n    this.storage.delRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Change configuration of layer\n   * @param {string} zLevel\n   * @param {Object} config\n   * @param {string} [config.clearColor=0] Clear color\n   * @param {string} [config.motionBlur=false] If enable motion blur\n   * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n  */\n  configLayer: function (zLevel, config) {\n    this.painter.configLayer(zLevel, config);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Repaint the canvas immediately\n   */\n  refreshImmediately: function () {\n    // var start = new Date();\n    // Clear needsRefresh ahead to avoid something wrong happens in refresh\n    // Or it will cause zrender refreshes again and again.\n    this._needsRefresh = false;\n    this.painter.refresh();\n    /**\n     * Avoid trigger zr.refresh in Element#beforeUpdate hook\n     */\n\n    this._needsRefresh = false; // var end = new Date();\n    // var log = document.getElementById('log');\n    // if (log) {\n    //     log.innerHTML = log.innerHTML + '<br>' + (end - start);\n    // }\n  },\n\n  /**\n   * Mark and repaint the canvas in the next frame of browser\n   */\n  refresh: function () {\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Perform all refresh\n   */\n  flush: function () {\n    if (this._needsRefresh) {\n      this.refreshImmediately();\n    }\n\n    if (this._needsRefreshHover) {\n      this.refreshHoverImmediately();\n    }\n  },\n\n  /**\n   * Add element to hover layer\n   * @param  {module:zrender/Element} el\n   * @param {Object} style\n   */\n  addHover: function (el, style) {\n    if (this.painter.addHover) {\n      this.painter.addHover(el, style);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Add element from hover layer\n   * @param  {module:zrender/Element} el\n   */\n  removeHover: function (el) {\n    if (this.painter.removeHover) {\n      this.painter.removeHover(el);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Clear all hover elements in hover layer\n   * @param  {module:zrender/Element} el\n   */\n  clearHover: function () {\n    if (this.painter.clearHover) {\n      this.painter.clearHover();\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Refresh hover in next frame\n   */\n  refreshHover: function () {\n    this._needsRefreshHover = true;\n  },\n\n  /**\n   * Refresh hover immediately\n   */\n  refreshHoverImmediately: function () {\n    this._needsRefreshHover = false;\n    this.painter.refreshHover && this.painter.refreshHover();\n  },\n\n  /**\n   * Resize the canvas.\n   * Should be invoked when container size is changed\n   * @param {Object} [opts]\n   * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n   * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n   */\n  resize: function (opts) {\n    opts = opts || {};\n    this.painter.resize(opts.width, opts.height);\n    this.handler.resize();\n  },\n\n  /**\n   * Stop and clear all animation immediately\n   */\n  clearAnimation: function () {\n    this.animation.clear();\n  },\n\n  /**\n   * Get container width\n   */\n  getWidth: function () {\n    return this.painter.getWidth();\n  },\n\n  /**\n   * Get container height\n   */\n  getHeight: function () {\n    return this.painter.getHeight();\n  },\n\n  /**\n   * Export the canvas as Base64 URL\n   * @param {string} type\n   * @param {string} [backgroundColor='#fff']\n   * @return {string} Base64 URL\n   */\n  // toDataURL: function(type, backgroundColor) {\n  //     return this.painter.getRenderedCanvas({\n  //         backgroundColor: backgroundColor\n  //     }).toDataURL(type);\n  // },\n\n  /**\n   * Converting a path to image.\n   * It has much better performance of drawing image rather than drawing a vector path.\n   * @param {module:zrender/graphic/Path} e\n   * @param {number} width\n   * @param {number} height\n   */\n  pathToImage: function (e, dpr) {\n    return this.painter.pathToImage(e, dpr);\n  },\n\n  /**\n   * Set default cursor\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    this.handler.setCursorStyle(cursorStyle);\n  },\n\n  /**\n   * Find hovered element\n   * @param {number} x\n   * @param {number} y\n   * @return {Object} {target, topTarget}\n   */\n  findHover: function (x, y) {\n    return this.handler.findHover(x, y);\n  },\n\n  /**\n   * Bind event\n   *\n   * @param {string} eventName Event name\n   * @param {Function} eventHandler Handler function\n   * @param {Object} [context] Context object\n   */\n  on: function (eventName, eventHandler, context) {\n    this.handler.on(eventName, eventHandler, context);\n  },\n\n  /**\n   * Unbind event\n   * @param {string} eventName Event name\n   * @param {Function} [eventHandler] Handler function\n   */\n  off: function (eventName, eventHandler) {\n    this.handler.off(eventName, eventHandler);\n  },\n\n  /**\n   * Trigger event manually\n   *\n   * @param {string} eventName Event name\n   * @param {event=} event Event object\n   */\n  trigger: function (eventName, event) {\n    this.handler.trigger(eventName, event);\n  },\n\n  /**\n   * Clear all objects and the canvas.\n   */\n  clear: function () {\n    this.storage.delRoot();\n    this.painter.clear();\n  },\n\n  /**\n   * Dispose self.\n   */\n  dispose: function () {\n    this.animation.stop();\n    this.clear();\n    this.storage.dispose();\n    this.painter.dispose();\n    this.handler.dispose();\n    this.animation = this.storage = this.painter = this.handler = null;\n    delInstance(this.id);\n  }\n};\nexports.version = version;\nexports.init = init;\nexports.dispose = dispose;\nexports.getInstance = getInstance;\nexports.registerPainter = registerPainter;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/zrender.js\n// module id = 1081\n// module chunks = 0 1 2","var _util = require(\"../../core/util\");\n\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar each = _util.each;\nvar normalizeCssArray = _util.normalizeCssArray;\nvar isString = _util.isString;\nvar isObject = _util.isObject;\n\nvar textContain = require(\"../../contain/text\");\n\nvar roundRectHelper = require(\"./roundRect\");\n\nvar imageHelper = require(\"./image\");\n\n// TODO: Have not support 'start', 'end' yet.\nvar VALID_TEXT_ALIGN = {\n  left: 1,\n  right: 1,\n  center: 1\n};\nvar VALID_TEXT_VERTICAL_ALIGN = {\n  top: 1,\n  bottom: 1,\n  middle: 1\n};\n/**\n * @param {module:zrender/graphic/Style} style\n * @return {module:zrender/graphic/Style} The input style.\n */\n\nfunction normalizeTextStyle(style) {\n  normalizeStyle(style);\n  each(style.rich, normalizeStyle);\n  return style;\n}\n\nfunction normalizeStyle(style) {\n  if (style) {\n    style.font = textContain.makeFont(style);\n    var textAlign = style.textAlign;\n    textAlign === 'middle' && (textAlign = 'center');\n    style.textAlign = textAlign == null || VALID_TEXT_ALIGN[textAlign] ? textAlign : 'left'; // Compatible with textBaseline.\n\n    var textVerticalAlign = style.textVerticalAlign || style.textBaseline;\n    textVerticalAlign === 'center' && (textVerticalAlign = 'middle');\n    style.textVerticalAlign = textVerticalAlign == null || VALID_TEXT_VERTICAL_ALIGN[textVerticalAlign] ? textVerticalAlign : 'top';\n    var textPadding = style.textPadding;\n\n    if (textPadding) {\n      style.textPadding = normalizeCssArray(style.textPadding);\n    }\n  }\n}\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {string} text\n * @param {module:zrender/graphic/Style} style\n * @param {Object|boolean} [rect] {x, y, width, height}\n *                  If set false, rect text is not used.\n */\n\n\nfunction renderText(hostEl, ctx, text, style, rect) {\n  style.rich ? renderRichText(hostEl, ctx, text, style, rect) : renderPlainText(hostEl, ctx, text, style, rect);\n}\n\nfunction renderPlainText(hostEl, ctx, text, style, rect) {\n  var font = setCtx(ctx, 'font', style.font || textContain.DEFAULT_FONT);\n  var textPadding = style.textPadding;\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parsePlainText(text, font, textPadding, style.truncate);\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var textLines = contentBlock.lines;\n  var lineHeight = contentBlock.lineHeight;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var textX = baseX;\n  var textY = boxY;\n  var needDrawBg = needDrawBackground(style);\n\n  if (needDrawBg || textPadding) {\n    // Consider performance, do not call getTextWidth util necessary.\n    var textWidth = textContain.getWidth(text, font);\n    var outerWidth = textWidth;\n    textPadding && (outerWidth += textPadding[1] + textPadding[3]);\n    var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n    needDrawBg && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n    if (textPadding) {\n      textX = getTextXForPadding(baseX, textAlign, textPadding);\n      textY += textPadding[0];\n    }\n  }\n\n  setCtx(ctx, 'textAlign', textAlign || 'left'); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle'); // Always set shadowBlur and shadowOffset to avoid leak from displayable.\n\n  setCtx(ctx, 'shadowBlur', style.textShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textShadowOffsetY || 0); // `textBaseline` is set as 'middle'.\n\n  textY += lineHeight / 2;\n  var textStrokeWidth = style.textStrokeWidth;\n  var textStroke = getStroke(style.textStroke, textStrokeWidth);\n  var textFill = getFill(style.textFill);\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n  }\n\n  for (var i = 0; i < textLines.length; i++) {\n    // Fill after stroke so the outline will not cover the main part.\n    textStroke && ctx.strokeText(textLines[i], textX, textY);\n    textFill && ctx.fillText(textLines[i], textX, textY);\n    textY += lineHeight;\n  }\n}\n\nfunction renderRichText(hostEl, ctx, text, style, rect) {\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parseRichText(text, style);\n  }\n\n  drawRichText(hostEl, ctx, contentBlock, style, rect);\n}\n\nfunction drawRichText(hostEl, ctx, contentBlock, style, rect) {\n  var contentWidth = contentBlock.width;\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var textPadding = style.textPadding;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var xLeft = boxX;\n  var lineTop = boxY;\n\n  if (textPadding) {\n    xLeft += textPadding[3];\n    lineTop += textPadding[0];\n  }\n\n  var xRight = xLeft + contentWidth;\n  needDrawBackground(style) && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n  for (var i = 0; i < contentBlock.lines.length; i++) {\n    var line = contentBlock.lines[i];\n    var tokens = line.tokens;\n    var tokenCount = tokens.length;\n    var lineHeight = line.lineHeight;\n    var usedWidth = line.width;\n    var leftIndex = 0;\n    var lineXLeft = xLeft;\n    var lineXRight = xRight;\n    var rightIndex = tokenCount - 1;\n    var token;\n\n    while (leftIndex < tokenCount && (token = tokens[leftIndex], !token.textAlign || token.textAlign === 'left')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft, 'left');\n      usedWidth -= token.width;\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    while (rightIndex >= 0 && (token = tokens[rightIndex], token.textAlign === 'right')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXRight, 'right');\n      usedWidth -= token.width;\n      lineXRight -= token.width;\n      rightIndex--;\n    } // The other tokens are placed as textAlign 'center' if there is enough space.\n\n\n    lineXLeft += (contentWidth - (lineXLeft - xLeft) - (xRight - lineXRight) - usedWidth) / 2;\n\n    while (leftIndex <= rightIndex) {\n      token = tokens[leftIndex]; // Consider width specified by user, use 'center' rather than 'left'.\n\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft + token.width / 2, 'center');\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    lineTop += lineHeight;\n  }\n}\n\nfunction applyTextRotation(ctx, style, rect, x, y) {\n  // textRotation only apply in RectText.\n  if (rect && style.textRotation) {\n    var origin = style.textOrigin;\n\n    if (origin === 'center') {\n      x = rect.width / 2 + rect.x;\n      y = rect.height / 2 + rect.y;\n    } else if (origin) {\n      x = origin[0] + rect.x;\n      y = origin[1] + rect.y;\n    }\n\n    ctx.translate(x, y); // Positive: anticlockwise\n\n    ctx.rotate(-style.textRotation);\n    ctx.translate(-x, -y);\n  }\n}\n\nfunction placeToken(hostEl, ctx, token, style, lineHeight, lineTop, x, textAlign) {\n  var tokenStyle = style.rich[token.styleName] || {}; // 'ctx.textBaseline' is always set as 'middle', for sake of\n  // the bias of \"Microsoft YaHei\".\n\n  var textVerticalAlign = token.textVerticalAlign;\n  var y = lineTop + lineHeight / 2;\n\n  if (textVerticalAlign === 'top') {\n    y = lineTop + token.height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y = lineTop + lineHeight - token.height / 2;\n  }\n\n  !token.isLineHolder && needDrawBackground(tokenStyle) && drawBackground(hostEl, ctx, tokenStyle, textAlign === 'right' ? x - token.width : textAlign === 'center' ? x - token.width / 2 : x, y - token.height / 2, token.width, token.height);\n  var textPadding = token.textPadding;\n\n  if (textPadding) {\n    x = getTextXForPadding(x, textAlign, textPadding);\n    y -= token.height / 2 - textPadding[2] - token.textHeight / 2;\n  }\n\n  setCtx(ctx, 'shadowBlur', retrieve3(tokenStyle.textShadowBlur, style.textShadowBlur, 0));\n  setCtx(ctx, 'shadowColor', tokenStyle.textShadowColor || style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', retrieve3(tokenStyle.textShadowOffsetX, style.textShadowOffsetX, 0));\n  setCtx(ctx, 'shadowOffsetY', retrieve3(tokenStyle.textShadowOffsetY, style.textShadowOffsetY, 0));\n  setCtx(ctx, 'textAlign', textAlign); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle');\n  setCtx(ctx, 'font', token.font || textContain.DEFAULT_FONT);\n  var textStroke = getStroke(tokenStyle.textStroke || style.textStroke, textStrokeWidth);\n  var textFill = getFill(tokenStyle.textFill || style.textFill);\n  var textStrokeWidth = retrieve2(tokenStyle.textStrokeWidth, style.textStrokeWidth); // Fill after stroke so the outline will not cover the main part.\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n    ctx.strokeText(token.text, x, y);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n    ctx.fillText(token.text, x, y);\n  }\n}\n\nfunction needDrawBackground(style) {\n  return style.textBackgroundColor || style.textBorderWidth && style.textBorderColor;\n} // style: {textBackgroundColor, textBorderWidth, textBorderColor, textBorderRadius}\n// shape: {x, y, width, height}\n\n\nfunction drawBackground(hostEl, ctx, style, x, y, width, height) {\n  var textBackgroundColor = style.textBackgroundColor;\n  var textBorderWidth = style.textBorderWidth;\n  var textBorderColor = style.textBorderColor;\n  var isPlainBg = isString(textBackgroundColor);\n  setCtx(ctx, 'shadowBlur', style.textBoxShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textBoxShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textBoxShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textBoxShadowOffsetY || 0);\n\n  if (isPlainBg || textBorderWidth && textBorderColor) {\n    ctx.beginPath();\n    var textBorderRadius = style.textBorderRadius;\n\n    if (!textBorderRadius) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height,\n        r: textBorderRadius\n      });\n    }\n\n    ctx.closePath();\n  }\n\n  if (isPlainBg) {\n    setCtx(ctx, 'fillStyle', textBackgroundColor);\n    ctx.fill();\n  } else if (isObject(textBackgroundColor)) {\n    var image = textBackgroundColor.image;\n    image = imageHelper.createOrUpdateImage(image, null, hostEl, onBgImageLoaded, textBackgroundColor);\n\n    if (image && imageHelper.isImageReady(image)) {\n      ctx.drawImage(image, x, y, width, height);\n    }\n  }\n\n  if (textBorderWidth && textBorderColor) {\n    setCtx(ctx, 'lineWidth', textBorderWidth);\n    setCtx(ctx, 'strokeStyle', textBorderColor);\n    ctx.stroke();\n  }\n}\n\nfunction onBgImageLoaded(image, textBackgroundColor) {\n  // Replace image, so that `contain/text.js#parseRichText`\n  // will get correct result in next tick.\n  textBackgroundColor.image = image;\n}\n\nfunction getBoxPosition(blockHeiht, style, rect) {\n  var baseX = style.x || 0;\n  var baseY = style.y || 0;\n  var textAlign = style.textAlign;\n  var textVerticalAlign = style.textVerticalAlign; // Text position represented by coord\n\n  if (rect) {\n    var textPosition = style.textPosition;\n\n    if (textPosition instanceof Array) {\n      // Percent\n      baseX = rect.x + parsePercent(textPosition[0], rect.width);\n      baseY = rect.y + parsePercent(textPosition[1], rect.height);\n    } else {\n      var res = textContain.adjustTextPositionOnRect(textPosition, rect, style.textDistance);\n      baseX = res.x;\n      baseY = res.y; // Default align and baseline when has textPosition\n\n      textAlign = textAlign || res.textAlign;\n      textVerticalAlign = textVerticalAlign || res.textVerticalAlign;\n    } // textOffset is only support in RectText, otherwise\n    // we have to adjust boundingRect for textOffset.\n\n\n    var textOffset = style.textOffset;\n\n    if (textOffset) {\n      baseX += textOffset[0];\n      baseY += textOffset[1];\n    }\n  }\n\n  return {\n    baseX: baseX,\n    baseY: baseY,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction setCtx(ctx, prop, value) {\n  // FIXME ??? performance try\n  // if (ctx.__currentValues[prop] !== value) {\n  // ctx[prop] = ctx.__currentValues[prop] = value;\n  ctx[prop] = value; // }\n\n  return ctx[prop];\n}\n/**\n * @param {string} [stroke] If specified, do not check style.textStroke.\n * @param {string} [lineWidth] If specified, do not check style.textStroke.\n * @param {number} style\n */\n\n\nfunction getStroke(stroke, lineWidth) {\n  return stroke == null || lineWidth <= 0 || stroke === 'transparent' || stroke === 'none' ? null // TODO pattern and gradient?\n  : stroke.image || stroke.colorStops ? '#000' : stroke;\n}\n\nfunction getFill(fill) {\n  return fill == null || fill === 'none' ? null // TODO pattern and gradient?\n  : fill.image || fill.colorStops ? '#000' : fill;\n}\n\nfunction parsePercent(value, maxValue) {\n  if (typeof value === 'string') {\n    if (value.lastIndexOf('%') >= 0) {\n      return parseFloat(value) / 100 * maxValue;\n    }\n\n    return parseFloat(value);\n  }\n\n  return value;\n}\n\nfunction getTextXForPadding(x, textAlign, textPadding) {\n  return textAlign === 'right' ? x - textPadding[1] : textAlign === 'center' ? x + textPadding[3] / 2 - textPadding[1] / 2 : x + textPadding[3];\n}\n/**\n * @param {string} text\n * @param {module:zrender/Style} style\n * @return {boolean}\n */\n\n\nfunction needDrawText(text, style) {\n  return text != null && (text || style.textBackgroundColor || style.textBorderWidth && style.textBorderColor || style.textPadding);\n}\n\nexports.normalizeTextStyle = normalizeTextStyle;\nexports.renderText = renderText;\nexports.getStroke = getStroke;\nexports.getFill = getFill;\nexports.needDrawText = needDrawText;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/helper/text.js\n// module id = 1082\n// module chunks = 0 1 2","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisPointerModelHelper = require(\"./axisPointer/modelHelper\");\n\nvar axisTrigger = require(\"./axisPointer/axisTrigger\");\n\nrequire(\"./axisPointer/AxisPointerModel\");\n\nrequire(\"./axisPointer/AxisPointerView\");\n\nrequire(\"./axisPointer/CartesianAxisPointer\");\n\n// CartesianAxisPointer is not supposed to be required here. But consider\n// echarts.simple.js and online build tooltip, which only require gridSimple,\n// CartesianAxisPointer should be able to required somewhere.\necharts.registerPreprocessor(function (option) {\n  // Always has a global axisPointerModel for default setting.\n  if (option) {\n    (!option.axisPointer || option.axisPointer.length === 0) && (option.axisPointer = {});\n    var link = option.axisPointer.link; // Normalize to array to avoid object mergin. But if link\n    // is not set, remain null/undefined, otherwise it will\n    // override existent link setting.\n\n    if (link && !zrUtil.isArray(link)) {\n      option.axisPointer.link = [link];\n    }\n  }\n}); // This process should proformed after coordinate systems created\n// and series data processed. So put it on statistic processing stage.\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n  // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n  // allAxesInfo should be updated when setOption performed.\n  ecModel.getComponent('axisPointer').coordSysAxesInfo = axisPointerModelHelper.collect(ecModel, api);\n}); // Broadcast to all views.\n\necharts.registerAction({\n  type: 'updateAxisPointer',\n  event: 'updateAxisPointer',\n  update: ':updateAxisPointer'\n}, axisTrigger);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer.js\n// module id = 1083\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar AxisBuilder = require(\"../axis/AxisBuilder\");\n\n/**\n * @param {module:echarts/model/Model} axisPointerModel\n */\nfunction buildElStyle(axisPointerModel) {\n  var axisPointerType = axisPointerModel.get('type');\n  var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n  var style;\n\n  if (axisPointerType === 'line') {\n    style = styleModel.getLineStyle();\n    style.fill = null;\n  } else if (axisPointerType === 'shadow') {\n    style = styleModel.getAreaStyle();\n    style.stroke = null;\n  }\n\n  return style;\n}\n/**\n * @param {Function} labelPos {align, verticalAlign, position}\n */\n\n\nfunction buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos) {\n  var value = axisPointerModel.get('value');\n  var text = getValueLabel(value, axisModel.axis, axisModel.ecModel, axisPointerModel.get('seriesDataIndices'), {\n    precision: axisPointerModel.get('label.precision'),\n    formatter: axisPointerModel.get('label.formatter')\n  });\n  var labelModel = axisPointerModel.getModel('label');\n  var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n  var font = labelModel.getFont();\n  var textRect = textContain.getBoundingRect(text, font);\n  var position = labelPos.position;\n  var width = textRect.width + paddings[1] + paddings[3];\n  var height = textRect.height + paddings[0] + paddings[2]; // Adjust by align.\n\n  var align = labelPos.align;\n  align === 'right' && (position[0] -= width);\n  align === 'center' && (position[0] -= width / 2);\n  var verticalAlign = labelPos.verticalAlign;\n  verticalAlign === 'bottom' && (position[1] -= height);\n  verticalAlign === 'middle' && (position[1] -= height / 2); // Not overflow ec container\n\n  confineInContainer(position, width, height, api);\n  var bgColor = labelModel.get('backgroundColor');\n\n  if (!bgColor || bgColor === 'auto') {\n    bgColor = axisModel.get('axisLine.lineStyle.color');\n  }\n\n  elOption.label = {\n    shape: {\n      x: 0,\n      y: 0,\n      width: width,\n      height: height,\n      r: labelModel.get('borderRadius')\n    },\n    position: position.slice(),\n    // TODO: rich\n    style: {\n      text: text,\n      textFont: font,\n      textFill: labelModel.getTextColor(),\n      textPosition: 'inside',\n      fill: bgColor,\n      stroke: labelModel.get('borderColor') || 'transparent',\n      lineWidth: labelModel.get('borderWidth') || 0,\n      shadowBlur: labelModel.get('shadowBlur'),\n      shadowColor: labelModel.get('shadowColor'),\n      shadowOffsetX: labelModel.get('shadowOffsetX'),\n      shadowOffsetY: labelModel.get('shadowOffsetY')\n    },\n    // Lable should be over axisPointer.\n    z2: 10\n  };\n} // Do not overflow ec container\n\n\nfunction confineInContainer(position, width, height, api) {\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  position[0] = Math.min(position[0] + width, viewWidth) - width;\n  position[1] = Math.min(position[1] + height, viewHeight) - height;\n  position[0] = Math.max(position[0], 0);\n  position[1] = Math.max(position[1], 0);\n}\n/**\n * @param {number} value\n * @param {module:echarts/coord/Axis} axis\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} opt\n * @param {Array.<Object>} seriesDataIndices\n * @param {number|string} opt.precision 'auto' or a number\n * @param {string|Function} opt.formatter label formatter\n */\n\n\nfunction getValueLabel(value, axis, ecModel, seriesDataIndices, opt) {\n  var text = axis.scale.getLabel( // If `precision` is set, width can be fixed (like '12.00500'), which\n  // helps to debounce when when moving label.\n  value, {\n    precision: opt.precision\n  });\n  var formatter = opt.formatter;\n\n  if (formatter) {\n    var params = {\n      value: axisHelper.getAxisRawValue(axis, value),\n      seriesData: []\n    };\n    zrUtil.each(seriesDataIndices, function (idxItem) {\n      var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n      var dataIndex = idxItem.dataIndexInside;\n      var dataParams = series && series.getDataParams(dataIndex);\n      dataParams && params.seriesData.push(dataParams);\n    });\n\n    if (zrUtil.isString(formatter)) {\n      text = formatter.replace('{value}', text);\n    } else if (zrUtil.isFunction(formatter)) {\n      text = formatter(params);\n    }\n  }\n\n  return text;\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @param {number} value\n * @param {Object} layoutInfo {\n *  rotation, position, labelOffset, labelDirection, labelMargin\n * }\n */\n\n\nfunction getTransformedPosition(axis, value, layoutInfo) {\n  var transform = matrix.create();\n  matrix.rotate(transform, transform, layoutInfo.rotation);\n  matrix.translate(transform, transform, layoutInfo.position);\n  return graphic.applyTransform([axis.dataToCoord(value), (layoutInfo.labelOffset || 0) + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)], transform);\n}\n\nfunction buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api) {\n  var textLayout = AxisBuilder.innerTextLayout(layoutInfo.rotation, 0, layoutInfo.labelDirection);\n  layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n  buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n    position: getTransformedPosition(axisModel.axis, value, layoutInfo),\n    align: textLayout.textAlign,\n    verticalAlign: textLayout.textVerticalAlign\n  });\n}\n/**\n * @param {Array.<number>} p1\n * @param {Array.<number>} p2\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeLineShape(p1, p2, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x1: p1[xDimIndex],\n    y1: p1[1 - xDimIndex],\n    x2: p2[xDimIndex],\n    y2: p2[1 - xDimIndex]\n  };\n}\n/**\n * @param {Array.<number>} xy\n * @param {Array.<number>} wh\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeRectShape(xy, wh, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x: xy[xDimIndex],\n    y: xy[1 - xDimIndex],\n    width: wh[xDimIndex],\n    height: wh[1 - xDimIndex]\n  };\n}\n\nfunction makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\n  return {\n    cx: cx,\n    cy: cy,\n    r0: r0,\n    r: r,\n    startAngle: startAngle,\n    endAngle: endAngle,\n    clockwise: true\n  };\n}\n\nexports.buildElStyle = buildElStyle;\nexports.buildLabelElOption = buildLabelElOption;\nexports.getValueLabel = getValueLabel;\nexports.getTransformedPosition = getTransformedPosition;\nexports.buildCartesianSingleLabelElOption = buildCartesianSingleLabelElOption;\nexports.makeLineShape = makeLineShape;\nexports.makeRectShape = makeRectShape;\nexports.makeSectorShape = makeSectorShape;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/viewHelper.js\n// module id = 1084\n// module chunks = 0 1 2","var matrix = require(\"../core/matrix\");\n\nvar vector = require(\"../core/vector\");\n\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\nvar mIdentity = matrix.identity;\nvar EPSILON = 5e-5;\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * @alias module:zrender/mixin/Transformable\n * @constructor\n */\n\n\nvar Transformable = function (opts) {\n  opts = opts || {}; // If there are no given position, rotation, scale\n\n  if (!opts.position) {\n    /**\n     * 平移\n     * @type {Array.<number>}\n     * @default [0, 0]\n     */\n    this.position = [0, 0];\n  }\n\n  if (opts.rotation == null) {\n    /**\n     * 旋转\n     * @type {Array.<number>}\n     * @default 0\n     */\n    this.rotation = 0;\n  }\n\n  if (!opts.scale) {\n    /**\n     * 缩放\n     * @type {Array.<number>}\n     * @default [1, 1]\n     */\n    this.scale = [1, 1];\n  }\n  /**\n   * 旋转和缩放的原点\n   * @type {Array.<number>}\n   * @default null\n   */\n\n\n  this.origin = this.origin || null;\n};\n\nvar transformableProto = Transformable.prototype;\ntransformableProto.transform = null;\n/**\n * 判断是否需要有坐标变换\n * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n */\n\ntransformableProto.needLocalTransform = function () {\n  return isNotAroundZero(this.rotation) || isNotAroundZero(this.position[0]) || isNotAroundZero(this.position[1]) || isNotAroundZero(this.scale[0] - 1) || isNotAroundZero(this.scale[1] - 1);\n};\n\ntransformableProto.updateTransform = function () {\n  var parent = this.parent;\n  var parentHasTransform = parent && parent.transform;\n  var needLocalTransform = this.needLocalTransform();\n  var m = this.transform;\n\n  if (!(needLocalTransform || parentHasTransform)) {\n    m && mIdentity(m);\n    return;\n  }\n\n  m = m || matrix.create();\n\n  if (needLocalTransform) {\n    this.getLocalTransform(m);\n  } else {\n    mIdentity(m);\n  } // 应用父节点变换\n\n\n  if (parentHasTransform) {\n    if (needLocalTransform) {\n      matrix.mul(m, parent.transform, m);\n    } else {\n      matrix.copy(m, parent.transform);\n    }\n  } // 保存这个变换矩阵\n\n\n  this.transform = m;\n  this.invTransform = this.invTransform || matrix.create();\n  matrix.invert(this.invTransform, m);\n};\n\ntransformableProto.getLocalTransform = function (m) {\n  return Transformable.getLocalTransform(this, m);\n};\n/**\n * 将自己的transform应用到context上\n * @param {CanvasRenderingContext2D} ctx\n */\n\n\ntransformableProto.setTransform = function (ctx) {\n  var m = this.transform;\n  var dpr = ctx.dpr || 1;\n\n  if (m) {\n    ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n  } else {\n    ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n  }\n};\n\ntransformableProto.restoreTransform = function (ctx) {\n  var dpr = ctx.dpr || 1;\n  ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n};\n\nvar tmpTransform = [];\n/**\n * 分解`transform`矩阵到`position`, `rotation`, `scale`\n */\n\ntransformableProto.decomposeTransform = function () {\n  if (!this.transform) {\n    return;\n  }\n\n  var parent = this.parent;\n  var m = this.transform;\n\n  if (parent && parent.transform) {\n    // Get local transform and decompose them to position, scale, rotation\n    matrix.mul(tmpTransform, parent.invTransform, m);\n    m = tmpTransform;\n  }\n\n  var sx = m[0] * m[0] + m[1] * m[1];\n  var sy = m[2] * m[2] + m[3] * m[3];\n  var position = this.position;\n  var scale = this.scale;\n\n  if (isNotAroundZero(sx - 1)) {\n    sx = Math.sqrt(sx);\n  }\n\n  if (isNotAroundZero(sy - 1)) {\n    sy = Math.sqrt(sy);\n  }\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  position[0] = m[4];\n  position[1] = m[5];\n  scale[0] = sx;\n  scale[1] = sy;\n  this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n};\n/**\n * Get global scale\n * @return {Array.<number>}\n */\n\n\ntransformableProto.getGlobalScale = function () {\n  var m = this.transform;\n\n  if (!m) {\n    return [1, 1];\n  }\n\n  var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n  var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  return [sx, sy];\n};\n/**\n * 变换坐标位置到 shape 的局部坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToLocal = function (x, y) {\n  var v2 = [x, y];\n  var invTransform = this.invTransform;\n\n  if (invTransform) {\n    vector.applyTransform(v2, v2, invTransform);\n  }\n\n  return v2;\n};\n/**\n * 变换局部坐标位置到全局坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToGlobal = function (x, y) {\n  var v2 = [x, y];\n  var transform = this.transform;\n\n  if (transform) {\n    vector.applyTransform(v2, v2, transform);\n  }\n\n  return v2;\n};\n/**\n * @static\n * @param {Object} target\n * @param {Array.<number>} target.origin\n * @param {number} target.rotation\n * @param {Array.<number>} target.position\n * @param {Array.<number>} [m]\n */\n\n\nTransformable.getLocalTransform = function (target, m) {\n  m = m || [];\n  mIdentity(m);\n  var origin = target.origin;\n  var scale = target.scale || [1, 1];\n  var rotation = target.rotation || 0;\n  var position = target.position || [0, 0];\n\n  if (origin) {\n    // Translate to origin\n    m[4] -= origin[0];\n    m[5] -= origin[1];\n  }\n\n  matrix.scale(m, m, scale);\n\n  if (rotation) {\n    matrix.rotate(m, m, rotation);\n  }\n\n  if (origin) {\n    // Translate back from origin\n    m[4] += origin[0];\n    m[5] += origin[1];\n  }\n\n  m[4] += position[0];\n  m[5] += position[1];\n  return m;\n};\n\nvar _default = Transformable;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/mixin/Transformable.js\n// module id = 1085\n// module chunks = 0 1 2","var vec2 = require(\"./vector\");\n\nvar curve = require(\"./curve\");\n\n/**\n * @author Yi Shen(https://github.com/pissang)\n */\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI2 = Math.PI * 2;\nvar start = vec2.create();\nvar end = vec2.create();\nvar extremity = vec2.create();\n/**\n * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n * @module zrender/core/bbox\n * @param {Array<Object>} points 顶点数组\n * @param {number} min\n * @param {number} max\n */\n\nfunction fromPoints(points, min, max) {\n  if (points.length === 0) {\n    return;\n  }\n\n  var p = points[0];\n  var left = p[0];\n  var right = p[0];\n  var top = p[1];\n  var bottom = p[1];\n  var i;\n\n  for (i = 1; i < points.length; i++) {\n    p = points[i];\n    left = mathMin(left, p[0]);\n    right = mathMax(right, p[0]);\n    top = mathMin(top, p[1]);\n    bottom = mathMax(bottom, p[1]);\n  }\n\n  min[0] = left;\n  min[1] = top;\n  max[0] = right;\n  max[1] = bottom;\n}\n/**\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromLine(x0, y0, x1, y1, min, max) {\n  min[0] = mathMin(x0, x1);\n  min[1] = mathMin(y0, y1);\n  max[0] = mathMax(x0, x1);\n  max[1] = mathMax(y0, y1);\n}\n\nvar xDim = [];\nvar yDim = [];\n/**\n * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\nfunction fromCubic(x0, y0, x1, y1, x2, y2, x3, y3, min, max) {\n  var cubicExtrema = curve.cubicExtrema;\n  var cubicAt = curve.cubicAt;\n  var i;\n  var n = cubicExtrema(x0, x1, x2, x3, xDim);\n  min[0] = Infinity;\n  min[1] = Infinity;\n  max[0] = -Infinity;\n  max[1] = -Infinity;\n\n  for (i = 0; i < n; i++) {\n    var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n    min[0] = mathMin(x, min[0]);\n    max[0] = mathMax(x, max[0]);\n  }\n\n  n = cubicExtrema(y0, y1, y2, y3, yDim);\n\n  for (i = 0; i < n; i++) {\n    var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n    min[1] = mathMin(y, min[1]);\n    max[1] = mathMax(y, max[1]);\n  }\n\n  min[0] = mathMin(x0, min[0]);\n  max[0] = mathMax(x0, max[0]);\n  min[0] = mathMin(x3, min[0]);\n  max[0] = mathMax(x3, max[0]);\n  min[1] = mathMin(y0, min[1]);\n  max[1] = mathMax(y0, max[1]);\n  min[1] = mathMin(y3, min[1]);\n  max[1] = mathMax(y3, max[1]);\n}\n/**\n * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromQuadratic(x0, y0, x1, y1, x2, y2, min, max) {\n  var quadraticExtremum = curve.quadraticExtremum;\n  var quadraticAt = curve.quadraticAt; // Find extremities, where derivative in x dim or y dim is zero\n\n  var tx = mathMax(mathMin(quadraticExtremum(x0, x1, x2), 1), 0);\n  var ty = mathMax(mathMin(quadraticExtremum(y0, y1, y2), 1), 0);\n  var x = quadraticAt(x0, x1, x2, tx);\n  var y = quadraticAt(y0, y1, y2, ty);\n  min[0] = mathMin(x0, x2, x);\n  min[1] = mathMin(y0, y2, y);\n  max[0] = mathMax(x0, x2, x);\n  max[1] = mathMax(y0, y2, y);\n}\n/**\n * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n * @method\n * @memberOf module:zrender/core/bbox\n * @param {number} x\n * @param {number} y\n * @param {number} rx\n * @param {number} ry\n * @param {number} startAngle\n * @param {number} endAngle\n * @param {number} anticlockwise\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromArc(x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max) {\n  var vec2Min = vec2.min;\n  var vec2Max = vec2.max;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff % PI2 < 1e-4 && diff > 1e-4) {\n    // Is a circle\n    min[0] = x - rx;\n    min[1] = y - ry;\n    max[0] = x + rx;\n    max[1] = y + ry;\n    return;\n  }\n\n  start[0] = mathCos(startAngle) * rx + x;\n  start[1] = mathSin(startAngle) * ry + y;\n  end[0] = mathCos(endAngle) * rx + x;\n  end[1] = mathSin(endAngle) * ry + y;\n  vec2Min(min, start, end);\n  vec2Max(max, start, end); // Thresh to [0, Math.PI * 2]\n\n  startAngle = startAngle % PI2;\n\n  if (startAngle < 0) {\n    startAngle = startAngle + PI2;\n  }\n\n  endAngle = endAngle % PI2;\n\n  if (endAngle < 0) {\n    endAngle = endAngle + PI2;\n  }\n\n  if (startAngle > endAngle && !anticlockwise) {\n    endAngle += PI2;\n  } else if (startAngle < endAngle && anticlockwise) {\n    startAngle += PI2;\n  }\n\n  if (anticlockwise) {\n    var tmp = endAngle;\n    endAngle = startAngle;\n    startAngle = tmp;\n  } // var number = 0;\n  // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n\n\n  for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n    if (angle > startAngle) {\n      extremity[0] = mathCos(angle) * rx + x;\n      extremity[1] = mathSin(angle) * ry + y;\n      vec2Min(min, extremity, min);\n      vec2Max(max, extremity, max);\n    }\n  }\n}\n\nexports.fromPoints = fromPoints;\nexports.fromLine = fromLine;\nexports.fromCubic = fromCubic;\nexports.fromQuadratic = fromQuadratic;\nexports.fromArc = fromArc;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/bbox.js\n// module id = 1086\n// module chunks = 0 1 2","var Displayable = require(\"./Displayable\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar textContain = require(\"../contain/text\");\n\nvar textHelper = require(\"./helper/text\");\n\n/**\n * @alias zrender/graphic/Text\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nvar Text = function (opts) {\n  // jshint ignore:line\n  Displayable.call(this, opts);\n};\n\nText.prototype = {\n  constructor: Text,\n  type: 'text',\n  brush: function (ctx, prevEl) {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true); // Use props with prefix 'text'.\n\n    style.fill = style.stroke = style.shadowBlur = style.shadowColor = style.shadowOffsetX = style.shadowOffsetY = null;\n    var text = style.text; // Convert to string\n\n    text != null && (text += ''); // Always bind style\n\n    style.bind(ctx, this, prevEl);\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    }\n\n    this.setTransform(ctx);\n    textHelper.renderText(this, ctx, text, style);\n    this.restoreTransform(ctx);\n  },\n  getBoundingRect: function () {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n    if (!this._rect) {\n      var text = style.text;\n      text != null ? text += '' : text = '';\n      var rect = textContain.getBoundingRect(style.text + '', style.font, style.textAlign, style.textVerticalAlign, style.textPadding, style.rich);\n      rect.x += style.x || 0;\n      rect.y += style.y || 0;\n\n      if (textHelper.getStroke(style.textStroke, style.textStrokeWidth)) {\n        var w = style.textStrokeWidth;\n        rect.x -= w / 2;\n        rect.y -= w / 2;\n        rect.width += w;\n        rect.height += w;\n      }\n\n      this._rect = rect;\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(Text, Displayable);\nvar _default = Text;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/Text.js\n// module id = 1087\n// module chunks = 0 1 2","var Group = require(\"zrender/lib/container/Group\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\nvar Component = function () {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewComponent');\n};\n\nComponent.prototype = {\n  constructor: Component,\n  init: function (ecModel, api) {},\n  render: function (componentModel, ecModel, api, payload) {},\n  dispose: function () {}\n};\nvar componentProto = Component.prototype;\n\ncomponentProto.updateView = componentProto.updateLayout = componentProto.updateVisual = function (seriesModel, ecModel, api, payload) {// Do nothing;\n}; // Enable Component.extend.\n\n\nclazzUtil.enableClassExtend(Component); // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Component, {\n  registerWhenExtend: true\n});\nvar _default = Component;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/view/Component.js\n// module id = 1088\n// module chunks = 0 1 2","/**\n * Calculate slider move result.\n * Usage:\n * (1) If both handle0 and handle1 are needed to be moved, set minSpan the same as\n * maxSpan and the same as `Math.abs(handleEnd[1] - handleEnds[0])`.\n * (2) If handle0 is forbidden to cross handle1, set minSpan as `0`.\n *\n * @param {number} delta Move length.\n * @param {Array.<number>} handleEnds handleEnds[0] can be bigger then handleEnds[1].\n *              handleEnds will be modified in this method.\n * @param {Array.<number>} extent handleEnds is restricted by extent.\n *              extent[0] should less or equals than extent[1].\n * @param {number|string} handleIndex Can be 'all', means that both move the two handleEnds,\n *              where the input minSpan and maxSpan will not work.\n * @param {number} [minSpan] The range of dataZoom can not be smaller than that.\n *              If not set, handle0 and cross handle1. If set as a non-negative\n *              number (including `0`), handles will push each other when reaching\n *              the minSpan.\n * @param {number} [maxSpan] The range of dataZoom can not be larger than that.\n * @return {Array.<number>} The input handleEnds.\n */\nfunction _default(delta, handleEnds, extent, handleIndex, minSpan, maxSpan) {\n  // Normalize firstly.\n  handleEnds[0] = restrict(handleEnds[0], extent);\n  handleEnds[1] = restrict(handleEnds[1], extent);\n  delta = delta || 0;\n  var extentSpan = extent[1] - extent[0]; // Notice maxSpan and minSpan can be null/undefined.\n\n  if (minSpan != null) {\n    minSpan = restrict(minSpan, [0, extentSpan]);\n  }\n\n  if (maxSpan != null) {\n    maxSpan = Math.max(maxSpan, minSpan != null ? minSpan : 0);\n  }\n\n  if (handleIndex === 'all') {\n    minSpan = maxSpan = Math.abs(handleEnds[1] - handleEnds[0]);\n    handleIndex = 0;\n  }\n\n  var originalDistSign = getSpanSign(handleEnds, handleIndex);\n  handleEnds[handleIndex] += delta; // Restrict in extent.\n\n  var extentMinSpan = minSpan || 0;\n  var realExtent = extent.slice();\n  originalDistSign.sign < 0 ? realExtent[0] += extentMinSpan : realExtent[1] -= extentMinSpan;\n  handleEnds[handleIndex] = restrict(handleEnds[handleIndex], realExtent); // Expand span.\n\n  var currDistSign = getSpanSign(handleEnds, handleIndex);\n\n  if (minSpan != null && (currDistSign.sign !== originalDistSign.sign || currDistSign.span < minSpan)) {\n    // If minSpan exists, 'cross' is forbinden.\n    handleEnds[1 - handleIndex] = handleEnds[handleIndex] + originalDistSign.sign * minSpan;\n  } // Shrink span.\n\n\n  var currDistSign = getSpanSign(handleEnds, handleIndex);\n\n  if (maxSpan != null && currDistSign.span > maxSpan) {\n    handleEnds[1 - handleIndex] = handleEnds[handleIndex] + currDistSign.sign * maxSpan;\n  }\n\n  return handleEnds;\n}\n\nfunction getSpanSign(handleEnds, handleIndex) {\n  var dist = handleEnds[handleIndex] - handleEnds[1 - handleIndex]; // If `handleEnds[0] === handleEnds[1]`, always believe that handleEnd[0]\n  // is at left of handleEnds[1] for non-cross case.\n\n  return {\n    span: Math.abs(dist),\n    sign: dist > 0 ? -1 : dist < 0 ? 1 : handleIndex ? -1 : 1\n  };\n}\n\nfunction restrict(value, extend) {\n  return Math.min(extend[1], Math.max(extend[0], value));\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/sliderMove.js\n// module id = 1089\n// module chunks = 0 1 2","/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\nvar idStart = 0x0907;\n\nfunction _default() {\n  return idStart++;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/guid.js\n// module id = 1091\n// module chunks = 0 1 2","var guid = require(\"./core/guid\");\n\nvar Eventful = require(\"./mixin/Eventful\");\n\nvar Transformable = require(\"./mixin/Transformable\");\n\nvar Animatable = require(\"./mixin/Animatable\");\n\nvar zrUtil = require(\"./core/util\");\n\n/**\n * @alias module:zrender/Element\n * @constructor\n * @extends {module:zrender/mixin/Animatable}\n * @extends {module:zrender/mixin/Transformable}\n * @extends {module:zrender/mixin/Eventful}\n */\nvar Element = function (opts) {\n  // jshint ignore:line\n  Transformable.call(this, opts);\n  Eventful.call(this, opts);\n  Animatable.call(this, opts);\n  /**\n   * 画布元素ID\n   * @type {string}\n   */\n\n  this.id = opts.id || guid();\n};\n\nElement.prototype = {\n  /**\n   * 元素类型\n   * Element type\n   * @type {string}\n   */\n  type: 'element',\n\n  /**\n   * 元素名字\n   * Element name\n   * @type {string}\n   */\n  name: '',\n\n  /**\n   * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n   * ZRender instance will be assigned when element is associated with zrender\n   * @name module:/zrender/Element#__zr\n   * @type {module:zrender/ZRender}\n   */\n  __zr: null,\n\n  /**\n   * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n   * If ignore drawing and events of the element object\n   * @name module:/zrender/Element#ignore\n   * @type {boolean}\n   * @default false\n   */\n  ignore: false,\n\n  /**\n   * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n   * 该路径会继承被裁减对象的变换\n   * @type {module:zrender/graphic/Path}\n   * @see http://www.w3.org/TR/2dcontext/#clipping-region\n   * @readOnly\n   */\n  clipPath: null,\n\n  /**\n   * Drift element\n   * @param  {number} dx dx on the global space\n   * @param  {number} dy dy on the global space\n   */\n  drift: function (dx, dy) {\n    switch (this.draggable) {\n      case 'horizontal':\n        dy = 0;\n        break;\n\n      case 'vertical':\n        dx = 0;\n        break;\n    }\n\n    var m = this.transform;\n\n    if (!m) {\n      m = this.transform = [1, 0, 0, 1, 0, 0];\n    }\n\n    m[4] += dx;\n    m[5] += dy;\n    this.decomposeTransform();\n    this.dirty(false);\n  },\n\n  /**\n   * Hook before update\n   */\n  beforeUpdate: function () {},\n\n  /**\n   * Hook after update\n   */\n  afterUpdate: function () {},\n\n  /**\n   * Update each frame\n   */\n  update: function () {\n    this.updateTransform();\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {},\n\n  /**\n   * @protected\n   */\n  attrKV: function (key, value) {\n    if (key === 'position' || key === 'scale' || key === 'origin') {\n      // Copy the array\n      if (value) {\n        var target = this[key];\n\n        if (!target) {\n          target = this[key] = [];\n        }\n\n        target[0] = value[0];\n        target[1] = value[1];\n      }\n    } else {\n      this[key] = value;\n    }\n  },\n\n  /**\n   * Hide the element\n   */\n  hide: function () {\n    this.ignore = true;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * Show the element\n   */\n  show: function () {\n    this.ignore = false;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * @param {string|Object} key\n   * @param {*} value\n   */\n  attr: function (key, value) {\n    if (typeof key === 'string') {\n      this.attrKV(key, value);\n    } else if (zrUtil.isObject(key)) {\n      for (var name in key) {\n        if (key.hasOwnProperty(name)) {\n          this.attrKV(name, key[name]);\n        }\n      }\n    }\n\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * @param {module:zrender/graphic/Path} clipPath\n   */\n  setClipPath: function (clipPath) {\n    var zr = this.__zr;\n\n    if (zr) {\n      clipPath.addSelfToZr(zr);\n    } // Remove previous clip path\n\n\n    if (this.clipPath && this.clipPath !== clipPath) {\n      this.removeClipPath();\n    }\n\n    this.clipPath = clipPath;\n    clipPath.__zr = zr;\n    clipPath.__clipTarget = this;\n    this.dirty(false);\n  },\n\n  /**\n   */\n  removeClipPath: function () {\n    var clipPath = this.clipPath;\n\n    if (clipPath) {\n      if (clipPath.__zr) {\n        clipPath.removeSelfFromZr(clipPath.__zr);\n      }\n\n      clipPath.__zr = null;\n      clipPath.__clipTarget = null;\n      this.clipPath = null;\n      this.dirty(false);\n    }\n  },\n\n  /**\n   * Add self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  addSelfToZr: function (zr) {\n    this.__zr = zr; // 添加动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.addAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.addSelfToZr(zr);\n    }\n  },\n\n  /**\n   * Remove self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  removeSelfFromZr: function (zr) {\n    this.__zr = null; // 移除动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.removeAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.removeSelfFromZr(zr);\n    }\n  }\n};\nzrUtil.mixin(Element, Animatable);\nzrUtil.mixin(Element, Transformable);\nzrUtil.mixin(Element, Eventful);\nvar _default = Element;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/Element.js\n// module id = 1092\n// module chunks = 0 1 2","var Clip = require(\"./Clip\");\n\nvar color = require(\"../tool/color\");\n\nvar _util = require(\"../core/util\");\n\nvar isArrayLike = _util.isArrayLike;\n\n/**\n * @module echarts/animation/Animator\n */\nvar arraySlice = Array.prototype.slice;\n\nfunction defaultGetter(target, key) {\n  return target[key];\n}\n\nfunction defaultSetter(target, key, value) {\n  target[key] = value;\n}\n/**\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} percent\n * @return {number}\n */\n\n\nfunction interpolateNumber(p0, p1, percent) {\n  return (p1 - p0) * percent + p0;\n}\n/**\n * @param  {string} p0\n * @param  {string} p1\n * @param  {number} percent\n * @return {string}\n */\n\n\nfunction interpolateString(p0, p1, percent) {\n  return percent > 0.5 ? p1 : p0;\n}\n/**\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {number} percent\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction interpolateArray(p0, p1, percent, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = interpolateNumber(p0[i], p1[i], percent);\n    }\n  } else {\n    var len2 = len && p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = interpolateNumber(p0[i][j], p1[i][j], percent);\n      }\n    }\n  }\n} // arr0 is source array, arr1 is target array.\n// Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n\n\nfunction fillArr(arr0, arr1, arrDim) {\n  var arr0Len = arr0.length;\n  var arr1Len = arr1.length;\n\n  if (arr0Len !== arr1Len) {\n    // FIXME Not work for TypedArray\n    var isPreviousLarger = arr0Len > arr1Len;\n\n    if (isPreviousLarger) {\n      // Cut the previous\n      arr0.length = arr1Len;\n    } else {\n      // Fill the previous\n      for (var i = arr0Len; i < arr1Len; i++) {\n        arr0.push(arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i]));\n      }\n    }\n  } // Handling NaN value\n\n\n  var len2 = arr0[0] && arr0[0].length;\n\n  for (var i = 0; i < arr0.length; i++) {\n    if (arrDim === 1) {\n      if (isNaN(arr0[i])) {\n        arr0[i] = arr1[i];\n      }\n    } else {\n      for (var j = 0; j < len2; j++) {\n        if (isNaN(arr0[i][j])) {\n          arr0[i][j] = arr1[i][j];\n        }\n      }\n    }\n  }\n}\n/**\n * @param  {Array} arr0\n * @param  {Array} arr1\n * @param  {number} arrDim\n * @return {boolean}\n */\n\n\nfunction isArraySame(arr0, arr1, arrDim) {\n  if (arr0 === arr1) {\n    return true;\n  }\n\n  var len = arr0.length;\n\n  if (len !== arr1.length) {\n    return false;\n  }\n\n  if (arrDim === 1) {\n    for (var i = 0; i < len; i++) {\n      if (arr0[i] !== arr1[i]) {\n        return false;\n      }\n    }\n  } else {\n    var len2 = arr0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        if (arr0[i][j] !== arr1[i][j]) {\n          return false;\n        }\n      }\n    }\n  }\n\n  return true;\n}\n/**\n * Catmull Rom interpolate array\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {Array} p2\n * @param  {Array} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction catmullRomInterpolateArray(p0, p1, p2, p3, t, t2, t3, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = catmullRomInterpolate(p0[i], p1[i], p2[i], p3[i], t, t2, t3);\n    }\n  } else {\n    var len2 = p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = catmullRomInterpolate(p0[i][j], p1[i][j], p2[i][j], p3[i][j], t, t2, t3);\n      }\n    }\n  }\n}\n/**\n * Catmull Rom interpolate number\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @return {number}\n */\n\n\nfunction catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n\nfunction cloneValue(value) {\n  if (isArrayLike(value)) {\n    var len = value.length;\n\n    if (isArrayLike(value[0])) {\n      var ret = [];\n\n      for (var i = 0; i < len; i++) {\n        ret.push(arraySlice.call(value[i]));\n      }\n\n      return ret;\n    }\n\n    return arraySlice.call(value);\n  }\n\n  return value;\n}\n\nfunction rgba2String(rgba) {\n  rgba[0] = Math.floor(rgba[0]);\n  rgba[1] = Math.floor(rgba[1]);\n  rgba[2] = Math.floor(rgba[2]);\n  return 'rgba(' + rgba.join(',') + ')';\n}\n\nfunction getArrayDim(keyframes) {\n  var lastValue = keyframes[keyframes.length - 1].value;\n  return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\n}\n\nfunction createTrackClip(animator, easing, oneTrackDone, keyframes, propName, forceAnimate) {\n  var getter = animator._getter;\n  var setter = animator._setter;\n  var useSpline = easing === 'spline';\n  var trackLen = keyframes.length;\n\n  if (!trackLen) {\n    return;\n  } // Guess data type\n\n\n  var firstVal = keyframes[0].value;\n  var isValueArray = isArrayLike(firstVal);\n  var isValueColor = false;\n  var isValueString = false; // For vertices morphing\n\n  var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\n  var trackMaxTime; // Sort keyframe as ascending\n\n  keyframes.sort(function (a, b) {\n    return a.time - b.time;\n  });\n  trackMaxTime = keyframes[trackLen - 1].time; // Percents of each keyframe\n\n  var kfPercents = []; // Value of each keyframe\n\n  var kfValues = [];\n  var prevValue = keyframes[0].value;\n  var isAllValueEqual = true;\n\n  for (var i = 0; i < trackLen; i++) {\n    kfPercents.push(keyframes[i].time / trackMaxTime); // Assume value is a color when it is a string\n\n    var value = keyframes[i].value; // Check if value is equal, deep check if value is array\n\n    if (!(isValueArray && isArraySame(value, prevValue, arrDim) || !isValueArray && value === prevValue)) {\n      isAllValueEqual = false;\n    }\n\n    prevValue = value; // Try converting a string to a color array\n\n    if (typeof value == 'string') {\n      var colorArray = color.parse(value);\n\n      if (colorArray) {\n        value = colorArray;\n        isValueColor = true;\n      } else {\n        isValueString = true;\n      }\n    }\n\n    kfValues.push(value);\n  }\n\n  if (!forceAnimate && isAllValueEqual) {\n    return;\n  }\n\n  var lastValue = kfValues[trackLen - 1]; // Polyfill array and NaN value\n\n  for (var i = 0; i < trackLen - 1; i++) {\n    if (isValueArray) {\n      fillArr(kfValues[i], lastValue, arrDim);\n    } else {\n      if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n        kfValues[i] = lastValue;\n      }\n    }\n  }\n\n  isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim); // Cache the key of last frame to speed up when\n  // animation playback is sequency\n\n  var lastFrame = 0;\n  var lastFramePercent = 0;\n  var start;\n  var w;\n  var p0;\n  var p1;\n  var p2;\n  var p3;\n\n  if (isValueColor) {\n    var rgba = [0, 0, 0, 0];\n  }\n\n  var onframe = function (target, percent) {\n    // Find the range keyframes\n    // kf1-----kf2---------current--------kf3\n    // find kf2 and kf3 and do interpolation\n    var frame; // In the easing function like elasticOut, percent may less than 0\n\n    if (percent < 0) {\n      frame = 0;\n    } else if (percent < lastFramePercent) {\n      // Start from next key\n      // PENDING start from lastFrame ?\n      start = Math.min(lastFrame + 1, trackLen - 1);\n\n      for (frame = start; frame >= 0; frame--) {\n        if (kfPercents[frame] <= percent) {\n          break;\n        }\n      } // PENDING really need to do this ?\n\n\n      frame = Math.min(frame, trackLen - 2);\n    } else {\n      for (frame = lastFrame; frame < trackLen; frame++) {\n        if (kfPercents[frame] > percent) {\n          break;\n        }\n      }\n\n      frame = Math.min(frame - 1, trackLen - 2);\n    }\n\n    lastFrame = frame;\n    lastFramePercent = percent;\n    var range = kfPercents[frame + 1] - kfPercents[frame];\n\n    if (range === 0) {\n      return;\n    } else {\n      w = (percent - kfPercents[frame]) / range;\n    }\n\n    if (useSpline) {\n      p1 = kfValues[frame];\n      p0 = kfValues[frame === 0 ? frame : frame - 1];\n      p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n      p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n\n      if (isValueArray) {\n        catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          value = catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(p1, p2, w);\n        } else {\n          value = catmullRomInterpolate(p0, p1, p2, p3, w, w * w, w * w * w);\n        }\n\n        setter(target, propName, value);\n      }\n    } else {\n      if (isValueArray) {\n        interpolateArray(kfValues[frame], kfValues[frame + 1], w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          interpolateArray(kfValues[frame], kfValues[frame + 1], w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n        } else {\n          value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n        }\n\n        setter(target, propName, value);\n      }\n    }\n  };\n\n  var clip = new Clip({\n    target: animator._target,\n    life: trackMaxTime,\n    loop: animator._loop,\n    delay: animator._delay,\n    onframe: onframe,\n    ondestroy: oneTrackDone\n  });\n\n  if (easing && easing !== 'spline') {\n    clip.easing = easing;\n  }\n\n  return clip;\n}\n/**\n * @alias module:zrender/animation/Animator\n * @constructor\n * @param {Object} target\n * @param {boolean} loop\n * @param {Function} getter\n * @param {Function} setter\n */\n\n\nvar Animator = function (target, loop, getter, setter) {\n  this._tracks = {};\n  this._target = target;\n  this._loop = loop || false;\n  this._getter = getter || defaultGetter;\n  this._setter = setter || defaultSetter;\n  this._clipCount = 0;\n  this._delay = 0;\n  this._doneList = [];\n  this._onframeList = [];\n  this._clipList = [];\n};\n\nAnimator.prototype = {\n  /**\n   * 设置动画关键帧\n   * @param  {number} time 关键帧时间，单位是ms\n   * @param  {Object} props 关键帧的属性值，key-value表示\n   * @return {module:zrender/animation/Animator}\n   */\n  when: function (time\n  /* ms */\n  , props) {\n    var tracks = this._tracks;\n\n    for (var propName in props) {\n      if (!props.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      if (!tracks[propName]) {\n        tracks[propName] = []; // Invalid value\n\n        var value = this._getter(this._target, propName);\n\n        if (value == null) {\n          // zrLog('Invalid property ' + propName);\n          continue;\n        } // If time is 0\n        //  Then props is given initialize value\n        // Else\n        //  Initialize value from current prop value\n\n\n        if (time !== 0) {\n          tracks[propName].push({\n            time: 0,\n            value: cloneValue(value)\n          });\n        }\n      }\n\n      tracks[propName].push({\n        time: time,\n        value: props[propName]\n      });\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加动画每一帧的回调函数\n   * @param  {Function} callback\n   * @return {module:zrender/animation/Animator}\n   */\n  during: function (callback) {\n    this._onframeList.push(callback);\n\n    return this;\n  },\n  pause: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].pause();\n    }\n\n    this._paused = true;\n  },\n  resume: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].resume();\n    }\n\n    this._paused = false;\n  },\n  isPaused: function () {\n    return !!this._paused;\n  },\n  _doneCallback: function () {\n    // Clear all tracks\n    this._tracks = {}; // Clear all clips\n\n    this._clipList.length = 0;\n    var doneList = this._doneList;\n    var len = doneList.length;\n\n    for (var i = 0; i < len; i++) {\n      doneList[i].call(this);\n    }\n  },\n\n  /**\n   * 开始执行动画\n   * @param  {string|Function} [easing]\n   *         动画缓动函数，详见{@link module:zrender/animation/easing}\n   * @param  {boolean} forceAnimate\n   * @return {module:zrender/animation/Animator}\n   */\n  start: function (easing, forceAnimate) {\n    var self = this;\n    var clipCount = 0;\n\n    var oneTrackDone = function () {\n      clipCount--;\n\n      if (!clipCount) {\n        self._doneCallback();\n      }\n    };\n\n    var lastClip;\n\n    for (var propName in this._tracks) {\n      if (!this._tracks.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      var clip = createTrackClip(this, easing, oneTrackDone, this._tracks[propName], propName, forceAnimate);\n\n      if (clip) {\n        this._clipList.push(clip);\n\n        clipCount++; // If start after added to animation\n\n        if (this.animation) {\n          this.animation.addClip(clip);\n        }\n\n        lastClip = clip;\n      }\n    } // Add during callback on the last clip\n\n\n    if (lastClip) {\n      var oldOnFrame = lastClip.onframe;\n\n      lastClip.onframe = function (target, percent) {\n        oldOnFrame(target, percent);\n\n        for (var i = 0; i < self._onframeList.length; i++) {\n          self._onframeList[i](target, percent);\n        }\n      };\n    } // This optimization will help the case that in the upper application\n    // the view may be refreshed frequently, where animation will be\n    // called repeatly but nothing changed.\n\n\n    if (!clipCount) {\n      this._doneCallback();\n    }\n\n    return this;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stop: function (forwardToLast) {\n    var clipList = this._clipList;\n    var animation = this.animation;\n\n    for (var i = 0; i < clipList.length; i++) {\n      var clip = clipList[i];\n\n      if (forwardToLast) {\n        // Move to last frame before stop\n        clip.onframe(this._target, 1);\n      }\n\n      animation && animation.removeClip(clip);\n    }\n\n    clipList.length = 0;\n  },\n\n  /**\n   * 设置动画延迟开始的时间\n   * @param  {number} time 单位ms\n   * @return {module:zrender/animation/Animator}\n   */\n  delay: function (time) {\n    this._delay = time;\n    return this;\n  },\n\n  /**\n   * 添加动画结束的回调\n   * @param  {Function} cb\n   * @return {module:zrender/animation/Animator}\n   */\n  done: function (cb) {\n    if (cb) {\n      this._doneList.push(cb);\n    }\n\n    return this;\n  },\n\n  /**\n   * @return {Array.<module:zrender/animation/Clip>}\n   */\n  getClips: function () {\n    return this._clipList;\n  }\n};\nvar _default = Animator;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/animation/Animator.js\n// module id = 1093\n// module chunks = 0 1 2","// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n/**\n * Simple double linked list. Compared with array, it has O(1) remove operation.\n * @constructor\n */\nvar LinkedList = function () {\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n  this.head = null;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.tail = null;\n  this._len = 0;\n};\n\nvar linkedListProto = LinkedList.prototype;\n/**\n * Insert a new value at the tail\n * @param  {} val\n * @return {module:zrender/core/LRU~Entry}\n */\n\nlinkedListProto.insert = function (val) {\n  var entry = new Entry(val);\n  this.insertEntry(entry);\n  return entry;\n};\n/**\n * Insert an entry at the tail\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.insertEntry = function (entry) {\n  if (!this.head) {\n    this.head = this.tail = entry;\n  } else {\n    this.tail.next = entry;\n    entry.prev = this.tail;\n    entry.next = null;\n    this.tail = entry;\n  }\n\n  this._len++;\n};\n/**\n * Remove entry.\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.remove = function (entry) {\n  var prev = entry.prev;\n  var next = entry.next;\n\n  if (prev) {\n    prev.next = next;\n  } else {\n    // Is head\n    this.head = next;\n  }\n\n  if (next) {\n    next.prev = prev;\n  } else {\n    // Is tail\n    this.tail = prev;\n  }\n\n  entry.next = entry.prev = null;\n  this._len--;\n};\n/**\n * @return {number}\n */\n\n\nlinkedListProto.len = function () {\n  return this._len;\n};\n/**\n * Clear list\n */\n\n\nlinkedListProto.clear = function () {\n  this.head = this.tail = null;\n  this._len = 0;\n};\n/**\n * @constructor\n * @param {} val\n */\n\n\nvar Entry = function (val) {\n  /**\n   * @type {}\n   */\n  this.value = val;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.next;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.prev;\n};\n/**\n * LRU Cache\n * @constructor\n * @alias module:zrender/core/LRU\n */\n\n\nvar LRU = function (maxSize) {\n  this._list = new LinkedList();\n  this._map = {};\n  this._maxSize = maxSize || 10;\n  this._lastRemovedEntry = null;\n};\n\nvar LRUProto = LRU.prototype;\n/**\n * @param  {string} key\n * @param  {} value\n * @return {} Removed value\n */\n\nLRUProto.put = function (key, value) {\n  var list = this._list;\n  var map = this._map;\n  var removed = null;\n\n  if (map[key] == null) {\n    var len = list.len(); // Reuse last removed entry\n\n    var entry = this._lastRemovedEntry;\n\n    if (len >= this._maxSize && len > 0) {\n      // Remove the least recently used\n      var leastUsedEntry = list.head;\n      list.remove(leastUsedEntry);\n      delete map[leastUsedEntry.key];\n      removed = leastUsedEntry.value;\n      this._lastRemovedEntry = leastUsedEntry;\n    }\n\n    if (entry) {\n      entry.value = value;\n    } else {\n      entry = new Entry(value);\n    }\n\n    entry.key = key;\n    list.insertEntry(entry);\n    map[key] = entry;\n  }\n\n  return removed;\n};\n/**\n * @param  {string} key\n * @return {}\n */\n\n\nLRUProto.get = function (key) {\n  var entry = this._map[key];\n  var list = this._list;\n\n  if (entry != null) {\n    // Put the latest used entry in the tail\n    if (entry !== list.tail) {\n      list.remove(entry);\n      list.insertEntry(entry);\n    }\n\n    return entry.value;\n  }\n};\n/**\n * Clear the cache\n */\n\n\nLRUProto.clear = function () {\n  this._list.clear();\n\n  this._map = {};\n};\n\nvar _default = LRU;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/LRU.js\n// module id = 1094\n// module chunks = 0 1 2","var STYLE_COMMON_PROPS = [['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'], ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]]; // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n// var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\nvar Style = function (opts, host) {\n  this.extendFrom(opts, false);\n  this.host = host;\n};\n\nfunction createLinearGradient(ctx, obj, rect) {\n  var x = obj.x == null ? 0 : obj.x;\n  var x2 = obj.x2 == null ? 1 : obj.x2;\n  var y = obj.y == null ? 0 : obj.y;\n  var y2 = obj.y2 == null ? 0 : obj.y2;\n\n  if (!obj.global) {\n    x = x * rect.width + rect.x;\n    x2 = x2 * rect.width + rect.x;\n    y = y * rect.height + rect.y;\n    y2 = y2 * rect.height + rect.y;\n  }\n\n  var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n  return canvasGradient;\n}\n\nfunction createRadialGradient(ctx, obj, rect) {\n  var width = rect.width;\n  var height = rect.height;\n  var min = Math.min(width, height);\n  var x = obj.x == null ? 0.5 : obj.x;\n  var y = obj.y == null ? 0.5 : obj.y;\n  var r = obj.r == null ? 0.5 : obj.r;\n\n  if (!obj.global) {\n    x = x * width + rect.x;\n    y = y * height + rect.y;\n    r = r * min;\n  }\n\n  var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n  return canvasGradient;\n}\n\nStyle.prototype = {\n  constructor: Style,\n\n  /**\n   * @type {module:zrender/graphic/Displayable}\n   */\n  host: null,\n\n  /**\n   * @type {string}\n   */\n  fill: '#000',\n\n  /**\n   * @type {string}\n   */\n  stroke: null,\n\n  /**\n   * @type {number}\n   */\n  opacity: 1,\n\n  /**\n   * @type {Array.<number>}\n   */\n  lineDash: null,\n\n  /**\n   * @type {number}\n   */\n  lineDashOffset: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetY: 0,\n\n  /**\n   * @type {number}\n   */\n  lineWidth: 1,\n\n  /**\n   * If stroke ignore scale\n   * @type {Boolean}\n   */\n  strokeNoScale: false,\n  // Bounding rect text configuration\n  // Not affected by element transform\n\n  /**\n   * @type {string}\n   */\n  text: null,\n\n  /**\n   * If `fontSize` or `fontFamily` exists, `font` will be reset by\n   * `fontSize`, `fontStyle`, `fontWeight`, `fontFamily`.\n   * So do not visit it directly in upper application (like echarts),\n   * but use `contain/text#makeFont` instead.\n   * @type {string}\n   */\n  font: null,\n\n  /**\n   * The same as font. Use font please.\n   * @deprecated\n   * @type {string}\n   */\n  textFont: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontStyle: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontWeight: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * Should be 12 but not '12px'.\n   * @type {number}\n   */\n  fontSize: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontFamily: null,\n\n  /**\n   * Reserved for special functinality, like 'hr'.\n   * @type {string}\n   */\n  textTag: null,\n\n  /**\n   * @type {string}\n   */\n  textFill: '#000',\n\n  /**\n   * @type {string}\n   */\n  textStroke: null,\n\n  /**\n   * @type {number}\n   */\n  textWidth: null,\n\n  /**\n   * Only for textBackground.\n   * @type {number}\n   */\n  textHeight: null,\n\n  /**\n   * textStroke may be set as some color as a default\n   * value in upper applicaion, where the default value\n   * of textStrokeWidth should be 0 to make sure that\n   * user can choose to do not use text stroke.\n   * @type {number}\n   */\n  textStrokeWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textLineHeight: null,\n\n  /**\n   * 'inside', 'left', 'right', 'top', 'bottom'\n   * [x, y]\n   * Based on x, y of rect.\n   * @type {string|Array.<number>}\n   * @default 'inside'\n   */\n  textPosition: 'inside',\n\n  /**\n   * If not specified, use the boundingRect of a `displayable`.\n   * @type {Object}\n   */\n  textRect: null,\n\n  /**\n   * [x, y]\n   * @type {Array.<number>}\n   */\n  textOffset: null,\n\n  /**\n   * @type {string}\n   */\n  textAlign: null,\n\n  /**\n   * @type {string}\n   */\n  textVerticalAlign: null,\n\n  /**\n   * @type {number}\n   */\n  textDistance: 5,\n\n  /**\n   * @type {string}\n   */\n  textShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetY: 0,\n\n  /**\n   * @type {string}\n   */\n  textBoxShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetY: 0,\n\n  /**\n   * Whether transform text.\n   * Only useful in Path and Image element\n   * @type {boolean}\n   */\n  transformText: false,\n\n  /**\n   * Text rotate around position of Path or Image\n   * Only useful in Path and Image element and transformText is false.\n   */\n  textRotation: 0,\n\n  /**\n   * Text origin of text rotation, like [10, 40].\n   * Based on x, y of rect.\n   * Useful in label rotation of circular symbol.\n   * By default, this origin is textPosition.\n   * Can be 'center'.\n   * @type {string|Array.<number>}\n   */\n  textOrigin: null,\n\n  /**\n   * @type {string}\n   */\n  textBackgroundColor: null,\n\n  /**\n   * @type {string}\n   */\n  textBorderColor: null,\n\n  /**\n   * @type {number}\n   */\n  textBorderWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textBorderRadius: 0,\n\n  /**\n   * Can be `2` or `[2, 4]` or `[2, 3, 4, 5]`\n   * @type {number|Array.<number>}\n   */\n  textPadding: null,\n\n  /**\n   * Text styles for rich text.\n   * @type {Object}\n   */\n  rich: null,\n\n  /**\n   * {outerWidth, outerHeight, ellipsis, placeholder}\n   * @type {Object}\n   */\n  truncate: null,\n\n  /**\n   * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n   * @type {string}\n   */\n  blend: null,\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  bind: function (ctx, el, prevEl) {\n    var style = this;\n    var prevStyle = prevEl && prevEl.style;\n    var firstDraw = !prevStyle;\n\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n      var prop = STYLE_COMMON_PROPS[i];\n      var styleName = prop[0];\n\n      if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n        // FIXME Invalid property value will cause style leak from previous element.\n        ctx[styleName] = style[styleName] || prop[1];\n      }\n    }\n\n    if (firstDraw || style.fill !== prevStyle.fill) {\n      ctx.fillStyle = style.fill;\n    }\n\n    if (firstDraw || style.stroke !== prevStyle.stroke) {\n      ctx.strokeStyle = style.stroke;\n    }\n\n    if (firstDraw || style.opacity !== prevStyle.opacity) {\n      ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n    }\n\n    if (firstDraw || style.blend !== prevStyle.blend) {\n      ctx.globalCompositeOperation = style.blend || 'source-over';\n    }\n\n    if (this.hasStroke()) {\n      var lineWidth = style.lineWidth;\n      ctx.lineWidth = lineWidth / (this.strokeNoScale && el && el.getLineScale ? el.getLineScale() : 1);\n    }\n  },\n  hasFill: function () {\n    var fill = this.fill;\n    return fill != null && fill !== 'none';\n  },\n  hasStroke: function () {\n    var stroke = this.stroke;\n    return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n  },\n\n  /**\n   * Extend from other style\n   * @param {zrender/graphic/Style} otherStyle\n   * @param {boolean} overwrite true: overwrirte any way.\n   *                            false: overwrite only when !target.hasOwnProperty\n   *                            others: overwrite when property is not null/undefined.\n   */\n  extendFrom: function (otherStyle, overwrite) {\n    if (otherStyle) {\n      for (var name in otherStyle) {\n        if (otherStyle.hasOwnProperty(name) && (overwrite === true || (overwrite === false ? !this.hasOwnProperty(name) : otherStyle[name] != null))) {\n          this[name] = otherStyle[name];\n        }\n      }\n    }\n  },\n\n  /**\n   * Batch setting style with a given object\n   * @param {Object|string} obj\n   * @param {*} [obj]\n   */\n  set: function (obj, value) {\n    if (typeof obj === 'string') {\n      this[obj] = value;\n    } else {\n      this.extendFrom(obj, true);\n    }\n  },\n\n  /**\n   * Clone\n   * @return {zrender/graphic/Style} [description]\n   */\n  clone: function () {\n    var newStyle = new this.constructor();\n    newStyle.extendFrom(this, true);\n    return newStyle;\n  },\n  getGradient: function (ctx, obj, rect) {\n    var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n    var canvasGradient = method(ctx, obj, rect);\n    var colorStops = obj.colorStops;\n\n    for (var i = 0; i < colorStops.length; i++) {\n      canvasGradient.addColorStop(colorStops[i].offset, colorStops[i].color);\n    }\n\n    return canvasGradient;\n  }\n};\nvar styleProto = Style.prototype;\n\nfor (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n  var prop = STYLE_COMMON_PROPS[i];\n\n  if (!(prop[0] in styleProto)) {\n    styleProto[prop[0]] = prop[1];\n  }\n} // Provide for others\n\n\nStyle.getGradient = styleProto.getGradient;\nvar _default = Style;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/Style.js\n// module id = 1095\n// module chunks = 0 1 2","var Pattern = function (image, repeat) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {image: ...}`, where this constructor will not be called.\n  this.image = image;\n  this.repeat = repeat; // Can be cloned\n\n  this.type = 'pattern';\n};\n\nPattern.prototype.getCanvasPattern = function (ctx) {\n  return ctx.createPattern(this.image, this.repeat || 'repeat');\n};\n\nvar _default = Pattern;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/Pattern.js\n// module id = 1096\n// module chunks = 0 1 2","var _default = typeof window !== 'undefined' && (window.requestAnimationFrame && window.requestAnimationFrame.bind(window) || // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\nwindow.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window) || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame) || function (func) {\n  setTimeout(func, 16);\n};\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/animation/requestAnimationFrame.js\n// module id = 1097\n// module chunks = 0 1 2","function buildPath(ctx, shape) {\n  var x = shape.x;\n  var y = shape.y;\n  var width = shape.width;\n  var height = shape.height;\n  var r = shape.r;\n  var r1;\n  var r2;\n  var r3;\n  var r4; // Convert width and height to positive for better borderRadius\n\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n\n  if (typeof r === 'number') {\n    r1 = r2 = r3 = r4 = r;\n  } else if (r instanceof Array) {\n    if (r.length === 1) {\n      r1 = r2 = r3 = r4 = r[0];\n    } else if (r.length === 2) {\n      r1 = r3 = r[0];\n      r2 = r4 = r[1];\n    } else if (r.length === 3) {\n      r1 = r[0];\n      r2 = r4 = r[1];\n      r3 = r[2];\n    } else {\n      r1 = r[0];\n      r2 = r[1];\n      r3 = r[2];\n      r4 = r[3];\n    }\n  } else {\n    r1 = r2 = r3 = r4 = 0;\n  }\n\n  var total;\n\n  if (r1 + r2 > width) {\n    total = r1 + r2;\n    r1 *= width / total;\n    r2 *= width / total;\n  }\n\n  if (r3 + r4 > width) {\n    total = r3 + r4;\n    r3 *= width / total;\n    r4 *= width / total;\n  }\n\n  if (r2 + r3 > height) {\n    total = r2 + r3;\n    r2 *= height / total;\n    r3 *= height / total;\n  }\n\n  if (r1 + r4 > height) {\n    total = r1 + r4;\n    r1 *= height / total;\n    r4 *= height / total;\n  }\n\n  ctx.moveTo(x + r1, y);\n  ctx.lineTo(x + width - r2, y);\n  r2 !== 0 && ctx.quadraticCurveTo(x + width, y, x + width, y + r2);\n  ctx.lineTo(x + width, y + height - r3);\n  r3 !== 0 && ctx.quadraticCurveTo(x + width, y + height, x + width - r3, y + height);\n  ctx.lineTo(x + r4, y + height);\n  r4 !== 0 && ctx.quadraticCurveTo(x, y + height, x, y + height - r4);\n  ctx.lineTo(x, y + r1);\n  r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n}\n\nexports.buildPath = buildPath;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/helper/roundRect.js\n// module id = 1098\n// module chunks = 0 1 2","var PI2 = Math.PI * 2;\n\nfunction normalizeRadian(angle) {\n  angle %= PI2;\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle;\n}\n\nexports.normalizeRadian = normalizeRadian;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/contain/util.js\n// module id = 1099\n// module chunks = 0 1 2","function windingLine(x0, y0, x1, y1, x, y) {\n  if (y > y0 && y > y1 || y < y0 && y < y1) {\n    return 0;\n  } // Ignore horizontal line\n\n\n  if (y1 === y0) {\n    return 0;\n  }\n\n  var dir = y1 < y0 ? 1 : -1;\n  var t = (y - y0) / (y1 - y0); // Avoid winding error when intersection point is the connect point of two line of polygon\n\n  if (t === 1 || t === 0) {\n    dir = y1 < y0 ? 0.5 : -0.5;\n  }\n\n  var x_ = t * (x1 - x0) + x0;\n  return x_ > x ? dir : 0;\n}\n\nmodule.exports = windingLine;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/contain/windingLine.js\n// module id = 1100\n// module chunks = 0 1 2","var smoothSpline = require(\"./smoothSpline\");\n\nvar smoothBezier = require(\"./smoothBezier\");\n\nfunction buildPath(ctx, shape, closePath) {\n  var points = shape.points;\n  var smooth = shape.smooth;\n\n  if (points && points.length >= 2) {\n    if (smooth && smooth !== 'spline') {\n      var controlPoints = smoothBezier(points, smooth, closePath, shape.smoothConstraint);\n      ctx.moveTo(points[0][0], points[0][1]);\n      var len = points.length;\n\n      for (var i = 0; i < (closePath ? len : len - 1); i++) {\n        var cp1 = controlPoints[i * 2];\n        var cp2 = controlPoints[i * 2 + 1];\n        var p = points[(i + 1) % len];\n        ctx.bezierCurveTo(cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]);\n      }\n    } else {\n      if (smooth === 'spline') {\n        points = smoothSpline(points, closePath);\n      }\n\n      ctx.moveTo(points[0][0], points[0][1]);\n\n      for (var i = 1, l = points.length; i < l; i++) {\n        ctx.lineTo(points[i][0], points[i][1]);\n      }\n    }\n\n    closePath && ctx.closePath();\n  }\n}\n\nexports.buildPath = buildPath;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/helper/poly.js\n// module id = 1101\n// module chunks = 0 1 2","var _clazz = require(\"../../util/clazz\");\n\nvar set = _clazz.set;\nvar get = _clazz.get;\nvar _default = {\n  clearColorPalette: function () {\n    set(this, 'colorIdx', 0);\n    set(this, 'colorNameMap', {});\n  },\n  getColorFromPalette: function (name, scope) {\n    scope = scope || this;\n    var colorIdx = get(scope, 'colorIdx') || 0;\n    var colorNameMap = get(scope, 'colorNameMap') || set(scope, 'colorNameMap', {}); // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n\n    if (colorNameMap.hasOwnProperty(name)) {\n      return colorNameMap[name];\n    }\n\n    var colorPalette = this.get('color', true) || [];\n\n    if (!colorPalette.length) {\n      return;\n    }\n\n    var color = colorPalette[colorIdx];\n\n    if (name) {\n      colorNameMap[name] = color;\n    }\n\n    set(scope, 'colorIdx', (colorIdx + 1) % colorPalette.length);\n    return color;\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/mixin/colorPalette.js\n// module id = 1102\n// module chunks = 0 1 2","var numberUtil = require(\"../util/number\");\n\n/**\n * For testable.\n */\nvar roundNumber = numberUtil.round;\n/**\n * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n *                                Should be extent[0] < extent[1].\n * @param {number} splitNumber splitNumber should be >= 1.\n * @param {number} [minInterval]\n * @param {number} [maxInterval]\n * @return {Object} {interval, intervalPrecision, niceTickExtent}\n */\n\nfunction intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval) {\n  var result = {};\n  var span = extent[1] - extent[0];\n  var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n\n  if (minInterval != null && interval < minInterval) {\n    interval = result.interval = minInterval;\n  }\n\n  if (maxInterval != null && interval > maxInterval) {\n    interval = result.interval = maxInterval;\n  } // Tow more digital for tick.\n\n\n  var precision = result.intervalPrecision = getIntervalPrecision(interval); // Niced extent inside original extent\n\n  var niceTickExtent = result.niceTickExtent = [roundNumber(Math.ceil(extent[0] / interval) * interval, precision), roundNumber(Math.floor(extent[1] / interval) * interval, precision)];\n  fixExtent(niceTickExtent, extent);\n  return result;\n}\n/**\n * @param {number} interval\n * @return {number} interval precision\n */\n\n\nfunction getIntervalPrecision(interval) {\n  // Tow more digital for tick.\n  return numberUtil.getPrecisionSafe(interval) + 2;\n}\n\nfunction clamp(niceTickExtent, idx, extent) {\n  niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n} // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n\n\nfunction fixExtent(niceTickExtent, extent) {\n  !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n  !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n  clamp(niceTickExtent, 0, extent);\n  clamp(niceTickExtent, 1, extent);\n\n  if (niceTickExtent[0] > niceTickExtent[1]) {\n    niceTickExtent[0] = niceTickExtent[1];\n  }\n}\n\nfunction intervalScaleGetTicks(interval, extent, niceTickExtent, intervalPrecision) {\n  var ticks = []; // If interval is 0, return [];\n\n  if (!interval) {\n    return ticks;\n  } // Consider this case: using dataZoom toolbox, zoom and zoom.\n\n\n  var safeLimit = 10000;\n\n  if (extent[0] < niceTickExtent[0]) {\n    ticks.push(extent[0]);\n  }\n\n  var tick = niceTickExtent[0];\n\n  while (tick <= niceTickExtent[1]) {\n    ticks.push(tick); // Avoid rounding error\n\n    tick = roundNumber(tick + interval, intervalPrecision);\n\n    if (tick === ticks[ticks.length - 1]) {\n      // Consider out of safe float point, e.g.,\n      // -3711126.9907707 + 2e-10 === -3711126.9907707\n      break;\n    }\n\n    if (ticks.length > safeLimit) {\n      return [];\n    }\n  } // Consider this case: the last item of ticks is smaller\n  // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n\n\n  if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n    ticks.push(extent[1]);\n  }\n\n  return ticks;\n}\n\nexports.intervalScaleNiceTicks = intervalScaleNiceTicks;\nexports.getIntervalPrecision = getIntervalPrecision;\nexports.fixExtent = fixExtent;\nexports.intervalScaleGetTicks = intervalScaleGetTicks;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/scale/helper.js\n// module id = 1103\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\n/**\n * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} {point: [x, y], el: ...} point Will not be null.\n */\nfunction _default(finder, ecModel) {\n  var point = [];\n  var seriesIndex = finder.seriesIndex;\n  var seriesModel;\n\n  if (seriesIndex == null || !(seriesModel = ecModel.getSeriesByIndex(seriesIndex))) {\n    return {\n      point: []\n    };\n  }\n\n  var data = seriesModel.getData();\n  var dataIndex = modelUtil.queryDataIndex(data, finder);\n\n  if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n    return {\n      point: []\n    };\n  }\n\n  var el = data.getItemGraphicEl(dataIndex);\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (seriesModel.getTooltipPosition) {\n    point = seriesModel.getTooltipPosition(dataIndex) || [];\n  } else if (coordSys && coordSys.dataToPoint) {\n    point = coordSys.dataToPoint(data.getValues(zrUtil.map(coordSys.dimensions, function (dim) {\n      return seriesModel.coordDimToDataDim(dim)[0];\n    }), dataIndex, true)) || [];\n  } else if (el) {\n    // Use graphic bounding rect\n    var rect = el.getBoundingRect().clone();\n    rect.applyTransform(el.transform);\n    point = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n\n  return {\n    point: point,\n    el: el\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/findPointFromSeries.js\n// module id = 1104\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar get = modelUtil.makeGetter();\nvar each = zrUtil.each;\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n * @param {Function} handler\n *      param: {string} currTrigger\n *      param: {Array.<number>} point\n */\n\nfunction register(key, api, handler) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  get(zr).records || (get(zr).records = {});\n  initGlobalListeners(zr, api);\n  var record = get(zr).records[key] || (get(zr).records[key] = {});\n  record.handler = handler;\n}\n\nfunction initGlobalListeners(zr, api) {\n  if (get(zr).initialized) {\n    return;\n  }\n\n  get(zr).initialized = true;\n  useHandler('click', zrUtil.curry(doEnter, 'click'));\n  useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove')); // useHandler('mouseout', onLeave);\n\n  useHandler('globalout', onLeave);\n\n  function useHandler(eventType, cb) {\n    zr.on(eventType, function (e) {\n      var dis = makeDispatchAction(api);\n      each(get(zr).records, function (record) {\n        record && cb(record, e, dis.dispatchAction);\n      });\n      dispatchTooltipFinally(dis.pendings, api);\n    });\n  }\n}\n\nfunction dispatchTooltipFinally(pendings, api) {\n  var showLen = pendings.showTip.length;\n  var hideLen = pendings.hideTip.length;\n  var actuallyPayload;\n\n  if (showLen) {\n    actuallyPayload = pendings.showTip[showLen - 1];\n  } else if (hideLen) {\n    actuallyPayload = pendings.hideTip[hideLen - 1];\n  }\n\n  if (actuallyPayload) {\n    actuallyPayload.dispatchAction = null;\n    api.dispatchAction(actuallyPayload);\n  }\n}\n\nfunction onLeave(record, e, dispatchAction) {\n  record.handler('leave', null, dispatchAction);\n}\n\nfunction doEnter(currTrigger, record, e, dispatchAction) {\n  record.handler(currTrigger, e, dispatchAction);\n}\n\nfunction makeDispatchAction(api) {\n  var pendings = {\n    showTip: [],\n    hideTip: []\n  }; // FIXME\n  // better approach?\n  // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n  // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n  // So we have to add \"final stage\" to merge those dispatched actions.\n\n  var dispatchAction = function (payload) {\n    var pendingList = pendings[payload.type];\n\n    if (pendingList) {\n      pendingList.push(payload);\n    } else {\n      payload.dispatchAction = dispatchAction;\n      api.dispatchAction(payload);\n    }\n  };\n\n  return {\n    dispatchAction: dispatchAction,\n    pendings: pendings\n  };\n}\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction unregister(key, api) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  var record = (get(zr).records || {})[key];\n\n  if (record) {\n    get(zr).records[key] = null;\n  }\n}\n\nexports.register = register;\nexports.unregister = unregister;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/globalListener.js\n// module id = 1105\n// module chunks = 0 1 2","var _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\nvar layoutBox = _layout.box;\nvar positionElement = _layout.positionElement;\n\nvar formatUtil = require(\"../../util/format\");\n\nvar graphic = require(\"../../util/graphic\");\n\n/**\n * Layout list like component.\n * It will box layout each items in group of component and then position the whole group in the viewport\n * @param {module:zrender/group/Group} group\n * @param {module:echarts/model/Component} componentModel\n * @param {module:echarts/ExtensionAPI}\n */\nfunction layout(group, componentModel, api) {\n  var boxLayoutParams = componentModel.getBoxLayoutParams();\n  var padding = componentModel.get('padding');\n  var viewportSize = {\n    width: api.getWidth(),\n    height: api.getHeight()\n  };\n  var rect = getLayoutRect(boxLayoutParams, viewportSize, padding);\n  layoutBox(componentModel.get('orient'), group, componentModel.get('itemGap'), rect.width, rect.height);\n  positionElement(group, boxLayoutParams, viewportSize, padding);\n}\n\nfunction makeBackground(rect, componentModel) {\n  var padding = formatUtil.normalizeCssArray(componentModel.get('padding'));\n  var style = componentModel.getItemStyle(['color', 'opacity']);\n  style.fill = componentModel.get('backgroundColor');\n  var rect = new graphic.Rect({\n    shape: {\n      x: rect.x - padding[3],\n      y: rect.y - padding[0],\n      width: rect.width + padding[1] + padding[3],\n      height: rect.height + padding[0] + padding[2],\n      r: componentModel.get('borderRadius')\n    },\n    style: style,\n    silent: true,\n    z2: -1\n  }); // FIXME\n  // `subPixelOptimizeRect` may bring some gap between edge of viewpart\n  // and background rect when setting like `left: 0`, `top: 0`.\n  // graphic.subPixelOptimizeRect(rect);\n\n  return rect;\n}\n\nexports.layout = layout;\nexports.makeBackground = makeBackground;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/listComponent.js\n// module id = 1106\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar each = zrUtil.each;\nvar ATTR = '\\0_ec_hist_store';\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} newSnapshot {dataZoomId, batch: [payloadInfo, ...]}\n */\n\nfunction push(ecModel, newSnapshot) {\n  var store = giveStore(ecModel); // If previous dataZoom can not be found,\n  // complete an range with current range.\n\n  each(newSnapshot, function (batchItem, dataZoomId) {\n    var i = store.length - 1;\n\n    for (; i >= 0; i--) {\n      var snapshot = store[i];\n\n      if (snapshot[dataZoomId]) {\n        break;\n      }\n    }\n\n    if (i < 0) {\n      // No origin range set, create one by current range.\n      var dataZoomModel = ecModel.queryComponents({\n        mainType: 'dataZoom',\n        subType: 'select',\n        id: dataZoomId\n      })[0];\n\n      if (dataZoomModel) {\n        var percentRange = dataZoomModel.getPercentRange();\n        store[0][dataZoomId] = {\n          dataZoomId: dataZoomId,\n          start: percentRange[0],\n          end: percentRange[1]\n        };\n      }\n    }\n  });\n  store.push(newSnapshot);\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} snapshot\n */\n\n\nfunction pop(ecModel) {\n  var store = giveStore(ecModel);\n  var head = store[store.length - 1];\n  store.length > 1 && store.pop(); // Find top for all dataZoom.\n\n  var snapshot = {};\n  each(head, function (batchItem, dataZoomId) {\n    for (var i = store.length - 1; i >= 0; i--) {\n      var batchItem = store[i][dataZoomId];\n\n      if (batchItem) {\n        snapshot[dataZoomId] = batchItem;\n        break;\n      }\n    }\n  });\n  return snapshot;\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n */\n\n\nfunction clear(ecModel) {\n  ecModel[ATTR] = null;\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n * @return {number} records. always >= 1.\n */\n\n\nfunction count(ecModel) {\n  return giveStore(ecModel).length;\n}\n/**\n * [{key: dataZoomId, value: {dataZoomId, range}}, ...]\n * History length of each dataZoom may be different.\n * this._history[0] is used to store origin range.\n * @type {Array.<Object>}\n */\n\n\nfunction giveStore(ecModel) {\n  var store = ecModel[ATTR];\n\n  if (!store) {\n    store = ecModel[ATTR] = [{}];\n  }\n\n  return store;\n}\n\nexports.push = push;\nexports.pop = pop;\nexports.clear = clear;\nexports.count = count;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/history.js\n// module id = 1107\n// module chunks = 0 1 2","var env = require(\"../../core/env\");\n\n// Fix weird bug in some version of IE11 (like 11.0.9600.178**),\n// where exception \"unexpected call to method or property access\"\n// might be thrown when calling ctx.fill or ctx.stroke after a path\n// whose area size is zero is drawn and ctx.clip() is called and\n// shadowBlur is set. See #4572, #3112, #5777.\n// (e.g.,\n//  ctx.moveTo(10, 10);\n//  ctx.lineTo(20, 10);\n//  ctx.closePath();\n//  ctx.clip();\n//  ctx.shadowBlur = 10;\n//  ...\n//  ctx.fill();\n// )\nvar shadowTemp = [['shadowBlur', 0], ['shadowColor', '#000'], ['shadowOffsetX', 0], ['shadowOffsetY', 0]];\n\nfunction _default(orignalBrush) {\n  // version string can be: '11.0'\n  return env.browser.ie && env.browser.version >= 11 ? function () {\n    var clipPaths = this.__clipPaths;\n    var style = this.style;\n    var modified;\n\n    if (clipPaths) {\n      for (var i = 0; i < clipPaths.length; i++) {\n        var clipPath = clipPaths[i];\n        var shape = clipPath && clipPath.shape;\n        var type = clipPath && clipPath.type;\n\n        if (shape && (type === 'sector' && shape.startAngle === shape.endAngle || type === 'rect' && (!shape.width || !shape.height))) {\n          for (var j = 0; j < shadowTemp.length; j++) {\n            // It is save to put shadowTemp static, because shadowTemp\n            // will be all modified each item brush called.\n            shadowTemp[j][2] = style[shadowTemp[j][0]];\n            style[shadowTemp[j][0]] = shadowTemp[j][1];\n          }\n\n          modified = true;\n          break;\n        }\n      }\n    }\n\n    orignalBrush.apply(this, arguments);\n\n    if (modified) {\n      for (var j = 0; j < shadowTemp.length; j++) {\n        style[shadowTemp[j][0]] = shadowTemp[j][2];\n      }\n    }\n  } : orignalBrush;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/helper/fixClipWithShadow.js\n// module id = 1109\n// module chunks = 0 1 2","var graphic = require(\"../../util/graphic\");\n\nvar BaseAxisPointer = require(\"./BaseAxisPointer\");\n\nvar viewHelper = require(\"./viewHelper\");\n\nvar cartesianAxisHelper = require(\"../axis/cartesianAxisHelper\");\n\nvar AxisView = require(\"../axis/AxisView\");\n\nvar CartesianAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisPointerType = axisPointerModel.get('type');\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  },\n\n  /**\n   * @override\n   */\n  getHandleTransform: function (value, axisModel, axisPointerModel) {\n    var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n      labelInside: false\n    });\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n    return {\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  },\n\n  /**\n   * @override\n   */\n  updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisExtent = axis.getGlobalExtent(true);\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var dimIndex = axis.dim === 'x' ? 0 : 1;\n    var currPosition = transform.position;\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex]; // Make tooltip do not overlap axisPointer and in the middle of the grid.\n\n    var tooltipOptions = [{\n      verticalAlign: 'middle'\n    }, {\n      align: 'center'\n    }];\n    return {\n      position: currPosition,\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: tooltipOptions[dimIndex]\n    };\n  }\n});\n\nfunction getCartesian(grid, axis) {\n  var opt = {};\n  opt[axis.dim + 'AxisIndex'] = axis.index;\n  return grid.getCartesian(opt);\n}\n\nvar pointerShapeBuilder = {\n  line: function (axis, pixelValue, otherExtent, elStyle) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getAxisDimIndex(axis));\n    graphic.subPixelOptimizeLine({\n      shape: targetShape,\n      style: elStyle\n    });\n    return {\n      type: 'Line',\n      shape: targetShape\n    };\n  },\n  shadow: function (axis, pixelValue, otherExtent, elStyle) {\n    var bandWidth = axis.getBandWidth();\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getAxisDimIndex(axis))\n    };\n  }\n};\n\nfunction getAxisDimIndex(axis) {\n  return axis.dim === 'x' ? 0 : 1;\n}\n\nAxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\nvar _default = CartesianAxisPointer;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/CartesianAxisPointer.js\n// module id = 1110\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar clazzUtil = require(\"../../util/clazz\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar axisPointerModelHelper = require(\"./modelHelper\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar throttleUtil = require(\"../../util/throttle\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar get = modelUtil.makeGetter();\nvar clone = zrUtil.clone;\nvar bind = zrUtil.bind;\n/**\n * Base axis pointer class in 2D.\n * Implemenents {module:echarts/component/axis/IAxisPointer}.\n */\n\nfunction BaseAxisPointer() {}\n\nBaseAxisPointer.prototype = {\n  /**\n   * @private\n   */\n  _group: null,\n\n  /**\n   * @private\n   */\n  _lastGraphicKey: null,\n\n  /**\n   * @private\n   */\n  _handle: null,\n\n  /**\n   * @private\n   */\n  _dragging: false,\n\n  /**\n   * @private\n   */\n  _lastValue: null,\n\n  /**\n   * @private\n   */\n  _lastStatus: null,\n\n  /**\n   * @private\n   */\n  _payloadInfo: null,\n\n  /**\n   * In px, arbitrary value. Do not set too small,\n   * no animation is ok for most cases.\n   * @protected\n   */\n  animationThreshold: 15,\n\n  /**\n   * @implement\n   */\n  render: function (axisModel, axisPointerModel, api, forceRender) {\n    var value = axisPointerModel.get('value');\n    var status = axisPointerModel.get('status'); // Bind them to `this`, not in closure, otherwise they will not\n    // be replaced when user calling setOption in not merge mode.\n\n    this._axisModel = axisModel;\n    this._axisPointerModel = axisPointerModel;\n    this._api = api; // Optimize: `render` will be called repeatly during mouse move.\n    // So it is power consuming if performing `render` each time,\n    // especially on mobile device.\n\n    if (!forceRender && this._lastValue === value && this._lastStatus === status) {\n      return;\n    }\n\n    this._lastValue = value;\n    this._lastStatus = status;\n    var group = this._group;\n    var handle = this._handle;\n\n    if (!status || status === 'hide') {\n      // Do not clear here, for animation better.\n      group && group.hide();\n      handle && handle.hide();\n      return;\n    }\n\n    group && group.show();\n    handle && handle.show(); // Otherwise status is 'show'\n\n    var elOption = {};\n    this.makeElOption(elOption, value, axisModel, axisPointerModel, api); // Enable change axis pointer type.\n\n    var graphicKey = elOption.graphicKey;\n\n    if (graphicKey !== this._lastGraphicKey) {\n      this.clear(api);\n    }\n\n    this._lastGraphicKey = graphicKey;\n    var moveAnimation = this._moveAnimation = this.determineAnimation(axisModel, axisPointerModel);\n\n    if (!group) {\n      group = this._group = new graphic.Group();\n      this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n      this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n      api.getZr().add(group);\n    } else {\n      var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n      this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n      this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n    }\n\n    updateMandatoryProps(group, axisPointerModel, true);\n\n    this._renderHandle(value);\n  },\n\n  /**\n   * @implement\n   */\n  remove: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @implement\n   */\n  dispose: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @protected\n   */\n  determineAnimation: function (axisModel, axisPointerModel) {\n    var animation = axisPointerModel.get('animation');\n    var axis = axisModel.axis;\n    var isCategoryAxis = axis.type === 'category';\n    var useSnap = axisPointerModel.get('snap'); // Value axis without snap always do not snap.\n\n    if (!useSnap && !isCategoryAxis) {\n      return false;\n    }\n\n    if (animation === 'auto' || animation == null) {\n      var animationThreshold = this.animationThreshold;\n\n      if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n        return true;\n      } // It is important to auto animation when snap used. Consider if there is\n      // a dataZoom, animation will be disabled when too many points exist, while\n      // it will be enabled for better visual effect when little points exist.\n\n\n      if (useSnap) {\n        var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n        var axisExtent = axis.getExtent(); // Approximate band width\n\n        return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n      }\n\n      return false;\n    }\n\n    return animation === true;\n  },\n\n  /**\n   * add {pointer, label, graphicKey} to elOption\n   * @protected\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {// Shoule be implemenented by sub-class.\n  },\n\n  /**\n   * @protected\n   */\n  createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n    var pointerOption = elOption.pointer;\n\n    if (pointerOption) {\n      var pointerEl = get(group).pointerEl = new graphic[pointerOption.type](clone(elOption.pointer));\n      group.add(pointerEl);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n    if (elOption.label) {\n      var labelEl = get(group).labelEl = new graphic.Rect(clone(elOption.label));\n      group.add(labelEl);\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updatePointerEl: function (group, elOption, updateProps) {\n    var pointerEl = get(group).pointerEl;\n\n    if (pointerEl) {\n      pointerEl.setStyle(elOption.pointer.style);\n      updateProps(pointerEl, {\n        shape: elOption.pointer.shape\n      });\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n    var labelEl = get(group).labelEl;\n\n    if (labelEl) {\n      labelEl.setStyle(elOption.label.style);\n      updateProps(labelEl, {\n        // Consider text length change in vertical axis, animation should\n        // be used on shape, otherwise the effect will be weird.\n        shape: elOption.label.shape,\n        position: elOption.label.position\n      });\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderHandle: function (value) {\n    if (this._dragging || !this.updateHandleTransform) {\n      return;\n    }\n\n    var axisPointerModel = this._axisPointerModel;\n\n    var zr = this._api.getZr();\n\n    var handle = this._handle;\n    var handleModel = axisPointerModel.getModel('handle');\n    var status = axisPointerModel.get('status');\n\n    if (!handleModel.get('show') || !status || status === 'hide') {\n      handle && zr.remove(handle);\n      this._handle = null;\n      return;\n    }\n\n    var isInit;\n\n    if (!this._handle) {\n      isInit = true;\n      handle = this._handle = graphic.createIcon(handleModel.get('icon'), {\n        cursor: 'move',\n        draggable: true,\n        onmousemove: function (e) {\n          // Fot mobile devicem, prevent screen slider on the button.\n          eventTool.stop(e.event);\n        },\n        onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n        drift: bind(this._onHandleDragMove, this),\n        ondragend: bind(this._onHandleDragEnd, this)\n      });\n      zr.add(handle);\n    }\n\n    updateMandatoryProps(handle, axisPointerModel, false); // update style\n\n    var includeStyles = ['color', 'borderColor', 'borderWidth', 'opacity', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'];\n    handle.setStyle(handleModel.getItemStyle(null, includeStyles)); // update position\n\n    var handleSize = handleModel.get('size');\n\n    if (!zrUtil.isArray(handleSize)) {\n      handleSize = [handleSize, handleSize];\n    }\n\n    handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n    throttleUtil.createOrUpdate(this, '_doDispatchAxisPointer', handleModel.get('throttle') || 0, 'fixRate');\n\n    this._moveHandleToValue(value, isInit);\n  },\n\n  /**\n   * @private\n   */\n  _moveHandleToValue: function (value, isInit) {\n    updateProps(this._axisPointerModel, !isInit && this._moveAnimation, this._handle, getHandleTransProps(this.getHandleTransform(value, this._axisModel, this._axisPointerModel)));\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragMove: function (dx, dy) {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    this._dragging = true; // Persistent for throttle.\n\n    var trans = this.updateHandleTransform(getHandleTransProps(handle), [dx, dy], this._axisModel, this._axisPointerModel);\n    this._payloadInfo = trans;\n    handle.stopAnimation();\n    handle.attr(getHandleTransProps(trans));\n    get(handle).lastProp = null;\n\n    this._doDispatchAxisPointer();\n  },\n\n  /**\n   * Throttled method.\n   * @private\n   */\n  _doDispatchAxisPointer: function () {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var payloadInfo = this._payloadInfo;\n    var axisModel = this._axisModel;\n\n    this._api.dispatchAction({\n      type: 'updateAxisPointer',\n      x: payloadInfo.cursorPoint[0],\n      y: payloadInfo.cursorPoint[1],\n      tooltipOption: payloadInfo.tooltipOption,\n      axesInfo: [{\n        axisDim: axisModel.axis.dim,\n        axisIndex: axisModel.componentIndex\n      }]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragEnd: function (moveAnimation) {\n    this._dragging = false;\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var value = this._axisPointerModel.get('value'); // Consider snap or categroy axis, handle may be not consistent with\n    // axisPointer. So move handle to align the exact value position when\n    // drag ended.\n\n\n    this._moveHandleToValue(value); // For the effect: tooltip will be shown when finger holding on handle\n    // button, and will be hidden after finger left handle button.\n\n\n    this._api.dispatchAction({\n      type: 'hideTip'\n    });\n  },\n\n  /**\n   * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {number} value\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0}\n   */\n  getHandleTransform: null,\n\n  /**\n   * * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {Object} transform {position, rotation}\n   * @param {Array.<number>} delta [dx, dy]\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n   */\n  updateHandleTransform: null,\n\n  /**\n   * @private\n   */\n  clear: function (api) {\n    this._lastValue = null;\n    this._lastStatus = null;\n    var zr = api.getZr();\n    var group = this._group;\n    var handle = this._handle;\n\n    if (zr && group) {\n      this._lastGraphicKey = null;\n      group && zr.remove(group);\n      handle && zr.remove(handle);\n      this._group = null;\n      this._handle = null;\n      this._payloadInfo = null;\n    }\n  },\n\n  /**\n   * @protected\n   */\n  doClear: function () {// Implemented by sub-class if necessary.\n  },\n\n  /**\n   * @protected\n   * @param {Array.<number>} xy\n   * @param {Array.<number>} wh\n   * @param {number} [xDimIndex=0] or 1\n   */\n  buildLabel: function (xy, wh, xDimIndex) {\n    xDimIndex = xDimIndex || 0;\n    return {\n      x: xy[xDimIndex],\n      y: xy[1 - xDimIndex],\n      width: wh[xDimIndex],\n      height: wh[1 - xDimIndex]\n    };\n  }\n};\nBaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\nfunction updateProps(animationModel, moveAnimation, el, props) {\n  // Animation optimize.\n  if (!propsEqual(get(el).lastProp, props)) {\n    get(el).lastProp = props;\n    moveAnimation ? graphic.updateProps(el, props, animationModel) : (el.stopAnimation(), el.attr(props));\n  }\n}\n\nfunction propsEqual(lastProps, newProps) {\n  if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n    var equals = true;\n    zrUtil.each(newProps, function (item, key) {\n      equals = equals && propsEqual(lastProps[key], item);\n    });\n    return !!equals;\n  } else {\n    return lastProps === newProps;\n  }\n}\n\nfunction updateLabelShowHide(labelEl, axisPointerModel) {\n  labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n}\n\nfunction getHandleTransProps(trans) {\n  return {\n    position: trans.position.slice(),\n    rotation: trans.rotation || 0\n  };\n}\n\nfunction updateMandatoryProps(group, axisPointerModel, silent) {\n  var z = axisPointerModel.get('z');\n  var zlevel = axisPointerModel.get('zlevel');\n  group && group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n      el.silent = silent;\n    }\n  });\n}\n\nclazzUtil.enableClassExtend(BaseAxisPointer);\nvar _default = BaseAxisPointer;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/BaseAxisPointer.js\n// module id = 1111\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * @param {Object} opt {labelInside}\n * @return {Object} {\n *  position, rotation, labelDirection, labelOffset,\n *  tickDirection, labelRotate, labelInterval, z2\n * }\n */\nfunction layout(gridModel, axisModel, opt) {\n  opt = opt || {};\n  var grid = gridModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var rawAxisPosition = axis.position;\n  var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n  var axisDim = axis.dim;\n  var rect = grid.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var idx = {\n    left: 0,\n    right: 1,\n    top: 0,\n    bottom: 1,\n    onZero: 2\n  };\n  var axisOffset = axisModel.get('offset') || 0;\n  var posBound = axisDim === 'x' ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset] : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\n\n  if (axis.onZero) {\n    var otherAxis = grid.getAxis(axisDim === 'x' ? 'y' : 'x', axis.onZeroAxisIndex);\n    var onZeroCoord = otherAxis.toGlobalCoord(otherAxis.dataToCoord(0));\n    posBound[idx['onZero']] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\n  } // Axis position\n\n\n  layout.position = [axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0], axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]]; // Axis rotation\n\n  layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1); // Tick and label direction, x y is axisDim\n\n  var dirMap = {\n    top: -1,\n    bottom: 1,\n    left: -1,\n    right: 1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n  layout.labelOffset = axis.onZero ? posBound[idx[rawAxisPosition]] - posBound[idx['onZero']] : 0;\n\n  if (axisModel.get('axisTick.inside')) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n    layout.labelDirection = -layout.labelDirection;\n  } // Special label rotation\n\n\n  var labelRotate = axisModel.get('axisLabel.rotate');\n  layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate; // label interval when auto mode.\n\n  layout.labelInterval = axis.getLabelInterval(); // Over splitLine and splitArea\n\n  layout.z2 = 1;\n  return layout;\n}\n\nexports.layout = layout;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axis/cartesianAxisHelper.js\n// module id = 1112\n// module chunks = 0 1 2","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\nvar LegendModel = echarts.extendComponentModel({\n  type: 'legend.plain',\n  dependencies: ['series'],\n  layoutMode: {\n    type: 'box',\n    // legend.width/height are maxWidth/maxHeight actually,\n    // whereas realy width/height is calculated by its content.\n    // (Setting {left: 10, right: 10} does not make sense).\n    // So consider the case:\n    // `setOption({legend: {left: 10});`\n    // then `setOption({legend: {right: 10});`\n    // The previous `left` should be cleared by setting `ignoreSize`.\n    ignoreSize: true\n  },\n  init: function (option, parentModel, ecModel) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    option.selected = option.selected || {};\n  },\n  mergeOption: function (option) {\n    LegendModel.superCall(this, 'mergeOption', option);\n  },\n  optionUpdated: function () {\n    this._updateData(this.ecModel);\n\n    var legendData = this._data; // If selectedMode is single, try to select one\n\n    if (legendData[0] && this.get('selectedMode') === 'single') {\n      var hasSelected = false; // If has any selected in option.selected\n\n      for (var i = 0; i < legendData.length; i++) {\n        var name = legendData[i].get('name');\n\n        if (this.isSelected(name)) {\n          // Force to unselect others\n          this.select(name);\n          hasSelected = true;\n          break;\n        }\n      } // Try select the first if selectedMode is single\n\n\n      !hasSelected && this.select(legendData[0].get('name'));\n    }\n  },\n  _updateData: function (ecModel) {\n    var legendData = zrUtil.map(this.get('data') || [], function (dataItem) {\n      // Can be string or number\n      if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n        dataItem = {\n          name: dataItem\n        };\n      }\n\n      return new Model(dataItem, this, this.ecModel);\n    }, this);\n    this._data = legendData;\n    var availableNames = zrUtil.map(ecModel.getSeries(), function (series) {\n      return series.name;\n    });\n    ecModel.eachSeries(function (seriesModel) {\n      if (seriesModel.legendDataProvider) {\n        var data = seriesModel.legendDataProvider();\n        availableNames = availableNames.concat(data.mapArray(data.getName));\n      }\n    });\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n\n    this._availableNames = availableNames;\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Model>}\n   */\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @param {string} name\n   */\n  select: function (name) {\n    var selected = this.option.selected;\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      var data = this._data;\n      zrUtil.each(data, function (dataItem) {\n        selected[dataItem.get('name')] = false;\n      });\n    }\n\n    selected[name] = true;\n  },\n\n  /**\n   * @param {string} name\n   */\n  unSelect: function (name) {\n    if (this.get('selectedMode') !== 'single') {\n      this.option.selected[name] = false;\n    }\n  },\n\n  /**\n   * @param {string} name\n   */\n  toggleSelected: function (name) {\n    var selected = this.option.selected; // Default is true\n\n    if (!selected.hasOwnProperty(name)) {\n      selected[name] = true;\n    }\n\n    this[selected[name] ? 'unSelect' : 'select'](name);\n  },\n\n  /**\n   * @param {string} name\n   */\n  isSelected: function (name) {\n    var selected = this.option.selected;\n    return !(selected.hasOwnProperty(name) && !selected[name]) && zrUtil.indexOf(this._availableNames, name) >= 0;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 4,\n    show: true,\n    // 布局方式，默认为水平布局，可选为：\n    // 'horizontal' | 'vertical'\n    orient: 'horizontal',\n    left: 'center',\n    // right: 'center',\n    top: 0,\n    // bottom: null,\n    // 水平对齐\n    // 'auto' | 'left' | 'right'\n    // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n    align: 'auto',\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 图例边框颜色\n    borderColor: '#ccc',\n    borderRadius: 0,\n    // 图例边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 图例内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 各个item之间的间隔，单位px，默认为10，\n    // 横向布局时为水平间隔，纵向布局时为纵向间隔\n    itemGap: 10,\n    // 图例图形宽度\n    itemWidth: 25,\n    // 图例图形高度\n    itemHeight: 14,\n    // 图例关闭时候的颜色\n    inactiveColor: '#ccc',\n    textStyle: {\n      // 图例文字颜色\n      color: '#333'\n    },\n    // formatter: '',\n    // 选择模式，默认开启图例开关\n    selectedMode: true,\n    // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n    // selected: null,\n    // 图例内容（详见legend.data，数组中每一项代表一个item\n    // data: [],\n    // Tooltip 相关配置\n    tooltip: {\n      show: false\n    }\n  }\n});\nvar _default = LegendModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/LegendModel.js\n// module id = 1113\n// module chunks = 0 1 2","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _listComponent = require(\"../helper/listComponent\");\n\nvar makeBackground = _listComponent.makeBackground;\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar Group = graphic.Group;\n\nvar _default = echarts.extendComponentView({\n  type: 'legend.plain',\n  newlineDisabled: false,\n\n  /**\n   * @override\n   */\n  init: function () {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this.group.add(this._contentGroup = new Group());\n    /**\n     * @private\n     * @type {module:zrender/Element}\n     */\n\n    this._backgroundEl;\n  },\n\n  /**\n   * @protected\n   */\n  getContentGroup: function () {\n    return this._contentGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (legendModel, ecModel, api) {\n    this.resetInner();\n\n    if (!legendModel.get('show', true)) {\n      return;\n    }\n\n    var itemAlign = legendModel.get('align');\n\n    if (!itemAlign || itemAlign === 'auto') {\n      itemAlign = legendModel.get('left') === 'right' && legendModel.get('orient') === 'vertical' ? 'right' : 'left';\n    }\n\n    this.renderInner(itemAlign, legendModel, ecModel, api); // Perform layout.\n\n    var positionInfo = legendModel.getBoxLayoutParams();\n    var viewportSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var padding = legendModel.get('padding');\n    var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize); // Place mainGroup, based on the calculated `mainRect`.\n\n    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({\n      width: mainRect.width,\n      height: mainRect.height\n    }, positionInfo), viewportSize, padding);\n    this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]); // Render background after group is layout.\n\n    this.group.add(this._backgroundEl = makeBackground(mainRect, legendModel));\n  },\n\n  /**\n   * @protected\n   */\n  resetInner: function () {\n    this.getContentGroup().removeAll();\n    this._backgroundEl && this.group.remove(this._backgroundEl);\n  },\n\n  /**\n   * @protected\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var contentGroup = this.getContentGroup();\n    var legendDrawnMap = zrUtil.createHashMap();\n    var selectMode = legendModel.get('selectedMode');\n    each(legendModel.getData(), function (itemModel, dataIndex) {\n      var name = itemModel.get('name'); // Use empty string or \\n as a newline string\n\n      if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n        contentGroup.add(new Group({\n          newline: true\n        }));\n        return;\n      }\n\n      var seriesModel = ecModel.getSeriesByName(name)[0];\n\n      if (legendDrawnMap.get(name)) {\n        // Have been drawed\n        return;\n      } // Series legend\n\n\n      if (seriesModel) {\n        var data = seriesModel.getData();\n        var color = data.getVisual('color'); // If color is a callback function\n\n        if (typeof color === 'function') {\n          // Use the first data\n          color = color(seriesModel.getDataParams(0));\n        } // Using rect symbol defaultly\n\n\n        var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n        var symbolType = data.getVisual('symbol');\n\n        var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode);\n\n        itemGroup.on('click', curry(dispatchSelectAction, name, api)).on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api));\n        legendDrawnMap.set(name, true);\n      } else {\n        // Data legend of pie, funnel\n        ecModel.eachRawSeries(function (seriesModel) {\n          // In case multiple series has same data name\n          if (legendDrawnMap.get(name)) {\n            return;\n          }\n\n          if (seriesModel.legendDataProvider) {\n            var data = seriesModel.legendDataProvider();\n            var idx = data.indexOfName(name);\n\n            if (idx < 0) {\n              return;\n            }\n\n            var color = data.getItemVisual(idx, 'color');\n            var legendSymbolType = 'roundRect';\n\n            var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, null, itemAlign, color, selectMode);\n\n            itemGroup.on('click', curry(dispatchSelectAction, name, api)) // FIXME Should not specify the series name\n            .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));\n            legendDrawnMap.set(name, true);\n          }\n        }, this);\n      }\n    }, this);\n  },\n  _createItem: function (name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode) {\n    var itemWidth = legendModel.get('itemWidth');\n    var itemHeight = legendModel.get('itemHeight');\n    var inactiveColor = legendModel.get('inactiveColor');\n    var isSelected = legendModel.isSelected(name);\n    var itemGroup = new Group();\n    var textStyleModel = itemModel.getModel('textStyle');\n    var itemIcon = itemModel.get('icon');\n    var tooltipModel = itemModel.getModel('tooltip');\n    var legendGlobalTooltipModel = tooltipModel.parentModel; // Use user given icon first\n\n    legendSymbolType = itemIcon || legendSymbolType;\n    itemGroup.add(createSymbol(legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor, true)); // Compose symbols\n    // PENDING\n\n    if (!itemIcon && symbolType // At least show one symbol, can't be all none\n    && (symbolType !== legendSymbolType || symbolType == 'none')) {\n      var size = itemHeight * 0.8;\n\n      if (symbolType === 'none') {\n        symbolType = 'circle';\n      } // Put symbol in the center\n\n\n      itemGroup.add(createSymbol(symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size, isSelected ? color : inactiveColor));\n    }\n\n    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n    var textAlign = itemAlign;\n    var formatter = legendModel.get('formatter');\n    var content = name;\n\n    if (typeof formatter === 'string' && formatter) {\n      content = formatter.replace('{name}', name != null ? name : '');\n    } else if (typeof formatter === 'function') {\n      content = formatter(name);\n    }\n\n    itemGroup.add(new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: content,\n        x: textX,\n        y: itemHeight / 2,\n        textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n        textAlign: textAlign,\n        textVerticalAlign: 'middle'\n      })\n    })); // Add a invisible rect to increase the area of mouse hover\n\n    var hitRect = new graphic.Rect({\n      shape: itemGroup.getBoundingRect(),\n      invisible: true,\n      tooltip: tooltipModel.get('show') ? zrUtil.extend({\n        content: name,\n        // Defaul formatter\n        formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n          return name;\n        },\n        formatterParams: {\n          componentType: 'legend',\n          legendIndex: legendModel.componentIndex,\n          name: name,\n          $vars: ['name']\n        }\n      }, tooltipModel.option) : null\n    });\n    itemGroup.add(hitRect);\n    itemGroup.eachChild(function (child) {\n      child.silent = true;\n    });\n    hitRect.silent = !selectMode;\n    this.getContentGroup().add(itemGroup);\n    graphic.setHoverStyle(itemGroup);\n    itemGroup.__legendDataIndex = dataIndex;\n    return itemGroup;\n  },\n\n  /**\n   * @protected\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup(); // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\n    var contentRect = contentGroup.getBoundingRect();\n    contentGroup.attr('position', [-contentRect.x, -contentRect.y]);\n    return this.group.getBoundingRect();\n  }\n});\n\nfunction dispatchSelectAction(name, api) {\n  api.dispatchAction({\n    type: 'legendToggleSelect',\n    name: name\n  });\n}\n\nfunction dispatchHighlightAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'highlight',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nfunction dispatchDownplayAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'downplay',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/LegendView.js\n// module id = 1114\n// module chunks = 0 1 2","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar interactionMutex = require(\"./interactionMutex\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar map = zrUtil.map;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathPow = Math.pow;\nvar COVER_Z = 10000;\nvar UNSELECT_THRESHOLD = 6;\nvar MIN_RESIZE_LINE_WIDTH = 6;\nvar MUTEX_RESOURCE_KEY = 'globalPan';\nvar DIRECTION_MAP = {\n  w: [0, 0],\n  e: [0, 1],\n  n: [1, 0],\n  s: [1, 1]\n};\nvar CURSOR_MAP = {\n  w: 'ew',\n  e: 'ew',\n  n: 'ns',\n  s: 'ns',\n  ne: 'nesw',\n  sw: 'nesw',\n  nw: 'nwse',\n  se: 'nwse'\n};\nvar DEFAULT_BRUSH_OPT = {\n  brushStyle: {\n    lineWidth: 2,\n    stroke: 'rgba(0,0,0,0.3)',\n    fill: 'rgba(0,0,0,0.1)'\n  },\n  transformable: true,\n  brushMode: 'single',\n  removeOnClick: false\n};\nvar baseUID = 0;\n/**\n * @alias module:echarts/component/helper/BrushController\n * @constructor\n * @mixin {module:zrender/mixin/Eventful}\n * @event module:echarts/component/helper/BrushController#brush\n *        params:\n *            areas: Array.<Array>, coord relates to container group,\n *                                    If no container specified, to global.\n *            opt {\n *                isEnd: boolean,\n *                removeOnClick: boolean\n *            }\n *\n * @param {module:zrender/zrender~ZRender} zr\n */\n\nfunction BrushController(zr) {\n  Eventful.call(this);\n  /**\n   * @type {module:zrender/zrender~ZRender}\n   * @private\n   */\n\n  this._zr = zr;\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n\n  this.group = new graphic.Group();\n  /**\n   * Only for drawing (after enabledBrush).\n   *     'line', 'rect', 'polygon' or false\n   *     If passing false/null/undefined, disable brush.\n   *     If passing 'auto', determined by panel.defaultBrushType\n   * @private\n   * @type {string}\n   */\n\n  this._brushType;\n  /**\n   * Only for drawing (after enabledBrush).\n   *\n   * @private\n   * @type {Object}\n   */\n\n  this._brushOption;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._panels;\n  /**\n   * @private\n   * @type {Array.<nubmer>}\n   */\n\n  this._track = [];\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._dragging;\n  /**\n   * @private\n   * @type {Array}\n   */\n\n  this._covers = [];\n  /**\n   * @private\n   * @type {moudule:zrender/container/Group}\n   */\n\n  this._creatingCover;\n  /**\n   * `true` means global panel\n   * @private\n   * @type {module:zrender/container/Group|boolean}\n   */\n\n  this._creatingPanel;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._enableGlobalPan;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this._uid = 'brushController_' + baseUID++;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._handlers = {};\n  each(mouseHandlers, function (handler, eventName) {\n    this._handlers[eventName] = zrUtil.bind(handler, this);\n  }, this);\n}\n\nBrushController.prototype = {\n  constructor: BrushController,\n\n  /**\n   * If set to null/undefined/false, select disabled.\n   * @param {Object} brushOption\n   * @param {string|boolean} brushOption.brushType 'line', 'rect', 'polygon' or false\n   *                          If passing false/null/undefined, disable brush.\n   *                          If passing 'auto', determined by panel.defaultBrushType.\n   *                              ('auto' can not be used in global panel)\n   * @param {number} [brushOption.brushMode='single'] 'single' or 'multiple'\n   * @param {boolean} [brushOption.transformable=true]\n   * @param {boolean} [brushOption.removeOnClick=false]\n   * @param {Object} [brushOption.brushStyle]\n   * @param {number} [brushOption.brushStyle.width]\n   * @param {number} [brushOption.brushStyle.lineWidth]\n   * @param {string} [brushOption.brushStyle.stroke]\n   * @param {string} [brushOption.brushStyle.fill]\n   * @param {number} [brushOption.z]\n   */\n  enableBrush: function (brushOption) {\n    this._brushType && doDisableBrush(this);\n    brushOption.brushType && doEnableBrush(this, brushOption);\n    return this;\n  },\n\n  /**\n   * @param {Array.<Object>} panelOpts If not pass, it is global brush.\n   *        Each items: {\n   *            panelId, // mandatory.\n   *            clipPath, // mandatory. function.\n   *            isTargetByCursor, // mandatory. function.\n   *            defaultBrushType, // optional, only used when brushType is 'auto'.\n   *            getLinearBrushOtherExtent, // optional. function.\n   *        }\n   */\n  setPanels: function (panelOpts) {\n    if (panelOpts && panelOpts.length) {\n      var panels = this._panels = {};\n      zrUtil.each(panelOpts, function (panelOpts) {\n        panels[panelOpts.panelId] = zrUtil.clone(panelOpts);\n      });\n    } else {\n      this._panels = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param {Object} [opt]\n   * @return {boolean} [opt.enableGlobalPan=false]\n   */\n  mount: function (opt) {\n    opt = opt || {};\n    this._enableGlobalPan = opt.enableGlobalPan;\n    var thisGroup = this.group;\n\n    this._zr.add(thisGroup);\n\n    thisGroup.attr({\n      position: opt.position || [0, 0],\n      rotation: opt.rotation || 0,\n      scale: opt.scale || [1, 1]\n    });\n    this._transform = thisGroup.getLocalTransform();\n    return this;\n  },\n  eachCover: function (cb, context) {\n    each(this._covers, cb, context);\n  },\n\n  /**\n   * Update covers.\n   * @param {Array.<Object>} brushOptionList Like:\n   *        [\n   *            {id: 'xx', brushType: 'line', range: [23, 44], brushStyle, transformable},\n   *            {id: 'yy', brushType: 'rect', range: [[23, 44], [23, 54]]},\n   *            ...\n   *        ]\n   *        `brushType` is required in each cover info. (can not be 'auto')\n   *        `id` is not mandatory.\n   *        `brushStyle`, `transformable` is not mandatory, use DEFAULT_BRUSH_OPT by default.\n   *        If brushOptionList is null/undefined, all covers removed.\n   */\n  updateCovers: function (brushOptionList) {\n    brushOptionList = zrUtil.map(brushOptionList, function (brushOption) {\n      return zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n    });\n    var tmpIdPrefix = '\\0-brush-index-';\n    var oldCovers = this._covers;\n    var newCovers = this._covers = [];\n    var controller = this;\n    var creatingCover = this._creatingCover;\n    new DataDiffer(oldCovers, brushOptionList, oldGetKey, getKey).add(addOrUpdate).update(addOrUpdate).remove(remove).execute();\n    return this;\n\n    function getKey(brushOption, index) {\n      return (brushOption.id != null ? brushOption.id : tmpIdPrefix + index) + '-' + brushOption.brushType;\n    }\n\n    function oldGetKey(cover, index) {\n      return getKey(cover.__brushOption, index);\n    }\n\n    function addOrUpdate(newIndex, oldIndex) {\n      var newBrushOption = brushOptionList[newIndex]; // Consider setOption in event listener of brushSelect,\n      // where updating cover when creating should be forbiden.\n\n      if (oldIndex != null && oldCovers[oldIndex] === creatingCover) {\n        newCovers[newIndex] = oldCovers[oldIndex];\n      } else {\n        var cover = newCovers[newIndex] = oldIndex != null ? (oldCovers[oldIndex].__brushOption = newBrushOption, oldCovers[oldIndex]) : endCreating(controller, createCover(controller, newBrushOption));\n        updateCoverAfterCreation(controller, cover);\n      }\n    }\n\n    function remove(oldIndex) {\n      if (oldCovers[oldIndex] !== creatingCover) {\n        controller.group.remove(oldCovers[oldIndex]);\n      }\n    }\n  },\n  unmount: function () {\n    this.enableBrush(false); // container may 'removeAll' outside.\n\n    clearCovers(this);\n\n    this._zr.remove(this.group);\n\n    return this;\n  },\n  dispose: function () {\n    this.unmount();\n    this.off();\n  }\n};\nzrUtil.mixin(BrushController, Eventful);\n\nfunction doEnableBrush(controller, brushOption) {\n  var zr = controller._zr; // Consider roam, which takes globalPan too.\n\n  if (!controller._enableGlobalPan) {\n    interactionMutex.take(zr, MUTEX_RESOURCE_KEY, controller._uid);\n  }\n\n  each(controller._handlers, function (handler, eventName) {\n    zr.on(eventName, handler);\n  });\n  controller._brushType = brushOption.brushType;\n  controller._brushOption = zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n}\n\nfunction doDisableBrush(controller) {\n  var zr = controller._zr;\n  interactionMutex.release(zr, MUTEX_RESOURCE_KEY, controller._uid);\n  each(controller._handlers, function (handler, eventName) {\n    zr.off(eventName, handler);\n  });\n  controller._brushType = controller._brushOption = null;\n}\n\nfunction createCover(controller, brushOption) {\n  var cover = coverRenderers[brushOption.brushType].createCover(controller, brushOption);\n  cover.__brushOption = brushOption;\n  updateZ(cover, brushOption);\n  controller.group.add(cover);\n  return cover;\n}\n\nfunction endCreating(controller, creatingCover) {\n  var coverRenderer = getCoverRenderer(creatingCover);\n\n  if (coverRenderer.endCreating) {\n    coverRenderer.endCreating(controller, creatingCover);\n    updateZ(creatingCover, creatingCover.__brushOption);\n  }\n\n  return creatingCover;\n}\n\nfunction updateCoverShape(controller, cover) {\n  var brushOption = cover.__brushOption;\n  getCoverRenderer(cover).updateCoverShape(controller, cover, brushOption.range, brushOption);\n}\n\nfunction updateZ(cover, brushOption) {\n  var z = brushOption.z;\n  z == null && (z = COVER_Z);\n  cover.traverse(function (el) {\n    el.z = z;\n    el.z2 = z; // Consider in given container.\n  });\n}\n\nfunction updateCoverAfterCreation(controller, cover) {\n  getCoverRenderer(cover).updateCommon(controller, cover);\n  updateCoverShape(controller, cover);\n}\n\nfunction getCoverRenderer(cover) {\n  return coverRenderers[cover.__brushOption.brushType];\n} // return target panel or `true` (means global panel)\n\n\nfunction getPanelByPoint(controller, e, localCursorPoint) {\n  var panels = controller._panels;\n\n  if (!panels) {\n    return true; // Global panel\n  }\n\n  var panel;\n  var transform = controller._transform;\n  each(panels, function (pn) {\n    pn.isTargetByCursor(e, localCursorPoint, transform) && (panel = pn);\n  });\n  return panel;\n} // Return a panel or true\n\n\nfunction getPanelByCover(controller, cover) {\n  var panels = controller._panels;\n\n  if (!panels) {\n    return true; // Global panel\n  }\n\n  var panelId = cover.__brushOption.panelId; // User may give cover without coord sys info,\n  // which is then treated as global panel.\n\n  return panelId != null ? panels[panelId] : true;\n}\n\nfunction clearCovers(controller) {\n  var covers = controller._covers;\n  var originalLength = covers.length;\n  each(covers, function (cover) {\n    controller.group.remove(cover);\n  }, controller);\n  covers.length = 0;\n  return !!originalLength;\n}\n\nfunction trigger(controller, opt) {\n  var areas = map(controller._covers, function (cover) {\n    var brushOption = cover.__brushOption;\n    var range = zrUtil.clone(brushOption.range);\n    return {\n      brushType: brushOption.brushType,\n      panelId: brushOption.panelId,\n      range: range\n    };\n  });\n  controller.trigger('brush', areas, {\n    isEnd: !!opt.isEnd,\n    removeOnClick: !!opt.removeOnClick\n  });\n}\n\nfunction shouldShowCover(controller) {\n  var track = controller._track;\n\n  if (!track.length) {\n    return false;\n  }\n\n  var p2 = track[track.length - 1];\n  var p1 = track[0];\n  var dx = p2[0] - p1[0];\n  var dy = p2[1] - p1[1];\n  var dist = mathPow(dx * dx + dy * dy, 0.5);\n  return dist > UNSELECT_THRESHOLD;\n}\n\nfunction getTrackEnds(track) {\n  var tail = track.length - 1;\n  tail < 0 && (tail = 0);\n  return [track[0], track[tail]];\n}\n\nfunction createBaseRectCover(doDrift, controller, brushOption, edgeNames) {\n  var cover = new graphic.Group();\n  cover.add(new graphic.Rect({\n    name: 'main',\n    style: makeStyle(brushOption),\n    silent: true,\n    draggable: true,\n    cursor: 'move',\n    drift: curry(doDrift, controller, cover, 'nswe'),\n    ondragend: curry(trigger, controller, {\n      isEnd: true\n    })\n  }));\n  each(edgeNames, function (name) {\n    cover.add(new graphic.Rect({\n      name: name,\n      style: {\n        opacity: 0\n      },\n      draggable: true,\n      silent: true,\n      invisible: true,\n      drift: curry(doDrift, controller, cover, name),\n      ondragend: curry(trigger, controller, {\n        isEnd: true\n      })\n    }));\n  });\n  return cover;\n}\n\nfunction updateBaseRect(controller, cover, localRange, brushOption) {\n  var lineWidth = brushOption.brushStyle.lineWidth || 0;\n  var handleSize = mathMax(lineWidth, MIN_RESIZE_LINE_WIDTH);\n  var x = localRange[0][0];\n  var y = localRange[1][0];\n  var xa = x - lineWidth / 2;\n  var ya = y - lineWidth / 2;\n  var x2 = localRange[0][1];\n  var y2 = localRange[1][1];\n  var x2a = x2 - handleSize + lineWidth / 2;\n  var y2a = y2 - handleSize + lineWidth / 2;\n  var width = x2 - x;\n  var height = y2 - y;\n  var widtha = width + lineWidth;\n  var heighta = height + lineWidth;\n  updateRectShape(controller, cover, 'main', x, y, width, height);\n\n  if (brushOption.transformable) {\n    updateRectShape(controller, cover, 'w', xa, ya, handleSize, heighta);\n    updateRectShape(controller, cover, 'e', x2a, ya, handleSize, heighta);\n    updateRectShape(controller, cover, 'n', xa, ya, widtha, handleSize);\n    updateRectShape(controller, cover, 's', xa, y2a, widtha, handleSize);\n    updateRectShape(controller, cover, 'nw', xa, ya, handleSize, handleSize);\n    updateRectShape(controller, cover, 'ne', x2a, ya, handleSize, handleSize);\n    updateRectShape(controller, cover, 'sw', xa, y2a, handleSize, handleSize);\n    updateRectShape(controller, cover, 'se', x2a, y2a, handleSize, handleSize);\n  }\n}\n\nfunction updateCommon(controller, cover) {\n  var brushOption = cover.__brushOption;\n  var transformable = brushOption.transformable;\n  var mainEl = cover.childAt(0);\n  mainEl.useStyle(makeStyle(brushOption));\n  mainEl.attr({\n    silent: !transformable,\n    cursor: transformable ? 'move' : 'default'\n  });\n  each(['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw'], function (name) {\n    var el = cover.childOfName(name);\n    var globalDir = getGlobalDirection(controller, name);\n    el && el.attr({\n      silent: !transformable,\n      invisible: !transformable,\n      cursor: transformable ? CURSOR_MAP[globalDir] + '-resize' : null\n    });\n  });\n}\n\nfunction updateRectShape(controller, cover, name, x, y, w, h) {\n  var el = cover.childOfName(name);\n  el && el.setShape(pointsToRect(clipByPanel(controller, cover, [[x, y], [x + w, y + h]])));\n}\n\nfunction makeStyle(brushOption) {\n  return zrUtil.defaults({\n    strokeNoScale: true\n  }, brushOption.brushStyle);\n}\n\nfunction formatRectRange(x, y, x2, y2) {\n  var min = [mathMin(x, x2), mathMin(y, y2)];\n  var max = [mathMax(x, x2), mathMax(y, y2)];\n  return [[min[0], max[0]], // x range\n  [min[1], max[1]] // y range\n  ];\n}\n\nfunction getTransform(controller) {\n  return graphic.getTransform(controller.group);\n}\n\nfunction getGlobalDirection(controller, localDirection) {\n  if (localDirection.length > 1) {\n    localDirection = localDirection.split('');\n    var globalDir = [getGlobalDirection(controller, localDirection[0]), getGlobalDirection(controller, localDirection[1])];\n    (globalDir[0] === 'e' || globalDir[0] === 'w') && globalDir.reverse();\n    return globalDir.join('');\n  } else {\n    var map = {\n      w: 'left',\n      e: 'right',\n      n: 'top',\n      s: 'bottom'\n    };\n    var inverseMap = {\n      left: 'w',\n      right: 'e',\n      top: 'n',\n      bottom: 's'\n    };\n    var globalDir = graphic.transformDirection(map[localDirection], getTransform(controller));\n    return inverseMap[globalDir];\n  }\n}\n\nfunction driftRect(toRectRange, fromRectRange, controller, cover, name, dx, dy, e) {\n  var brushOption = cover.__brushOption;\n  var rectRange = toRectRange(brushOption.range);\n  var localDelta = toLocalDelta(controller, dx, dy);\n  each(name.split(''), function (namePart) {\n    var ind = DIRECTION_MAP[namePart];\n    rectRange[ind[0]][ind[1]] += localDelta[ind[0]];\n  });\n  brushOption.range = fromRectRange(formatRectRange(rectRange[0][0], rectRange[1][0], rectRange[0][1], rectRange[1][1]));\n  updateCoverAfterCreation(controller, cover);\n  trigger(controller, {\n    isEnd: false\n  });\n}\n\nfunction driftPolygon(controller, cover, dx, dy, e) {\n  var range = cover.__brushOption.range;\n  var localDelta = toLocalDelta(controller, dx, dy);\n  each(range, function (point) {\n    point[0] += localDelta[0];\n    point[1] += localDelta[1];\n  });\n  updateCoverAfterCreation(controller, cover);\n  trigger(controller, {\n    isEnd: false\n  });\n}\n\nfunction toLocalDelta(controller, dx, dy) {\n  var thisGroup = controller.group;\n  var localD = thisGroup.transformCoordToLocal(dx, dy);\n  var localZero = thisGroup.transformCoordToLocal(0, 0);\n  return [localD[0] - localZero[0], localD[1] - localZero[1]];\n}\n\nfunction clipByPanel(controller, cover, data) {\n  var panel = getPanelByCover(controller, cover);\n  return panel && panel !== true ? panel.clipPath(data, controller._transform) : zrUtil.clone(data);\n}\n\nfunction pointsToRect(points) {\n  var xmin = mathMin(points[0][0], points[1][0]);\n  var ymin = mathMin(points[0][1], points[1][1]);\n  var xmax = mathMax(points[0][0], points[1][0]);\n  var ymax = mathMax(points[0][1], points[1][1]);\n  return {\n    x: xmin,\n    y: ymin,\n    width: xmax - xmin,\n    height: ymax - ymin\n  };\n}\n\nfunction resetCursor(controller, e, localCursorPoint) {\n  // Check active\n  if (!controller._brushType) {\n    return;\n  }\n\n  var zr = controller._zr;\n  var covers = controller._covers;\n  var currPanel = getPanelByPoint(controller, e, localCursorPoint); // Check whether in covers.\n\n  if (!controller._dragging) {\n    for (var i = 0; i < covers.length; i++) {\n      var brushOption = covers[i].__brushOption;\n\n      if (currPanel && (currPanel === true || brushOption.panelId === currPanel.panelId) && coverRenderers[brushOption.brushType].contain(covers[i], localCursorPoint[0], localCursorPoint[1])) {\n        // Use cursor style set on cover.\n        return;\n      }\n    }\n  }\n\n  currPanel && zr.setCursorStyle('crosshair');\n}\n\nfunction preventDefault(e) {\n  var rawE = e.event;\n  rawE.preventDefault && rawE.preventDefault();\n}\n\nfunction mainShapeContain(cover, x, y) {\n  return cover.childOfName('main').contain(x, y);\n}\n\nfunction updateCoverByMouse(controller, e, localCursorPoint, isEnd) {\n  var creatingCover = controller._creatingCover;\n  var panel = controller._creatingPanel;\n  var thisBrushOption = controller._brushOption;\n  var eventParams;\n\n  controller._track.push(localCursorPoint.slice());\n\n  if (shouldShowCover(controller) || creatingCover) {\n    if (panel && !creatingCover) {\n      thisBrushOption.brushMode === 'single' && clearCovers(controller);\n      var brushOption = zrUtil.clone(thisBrushOption);\n      brushOption.brushType = determineBrushType(brushOption.brushType, panel);\n      brushOption.panelId = panel === true ? null : panel.panelId;\n      creatingCover = controller._creatingCover = createCover(controller, brushOption);\n\n      controller._covers.push(creatingCover);\n    }\n\n    if (creatingCover) {\n      var coverRenderer = coverRenderers[determineBrushType(controller._brushType, panel)];\n      var coverBrushOption = creatingCover.__brushOption;\n      coverBrushOption.range = coverRenderer.getCreatingRange(clipByPanel(controller, creatingCover, controller._track));\n\n      if (isEnd) {\n        endCreating(controller, creatingCover);\n        coverRenderer.updateCommon(controller, creatingCover);\n      }\n\n      updateCoverShape(controller, creatingCover);\n      eventParams = {\n        isEnd: isEnd\n      };\n    }\n  } else if (isEnd && thisBrushOption.brushMode === 'single' && thisBrushOption.removeOnClick) {\n    // Help user to remove covers easily, only by a tiny drag, in 'single' mode.\n    // But a single click do not clear covers, because user may have casual\n    // clicks (for example, click on other component and do not expect covers\n    // disappear).\n    // Only some cover removed, trigger action, but not every click trigger action.\n    if (getPanelByPoint(controller, e, localCursorPoint) && clearCovers(controller)) {\n      eventParams = {\n        isEnd: isEnd,\n        removeOnClick: true\n      };\n    }\n  }\n\n  return eventParams;\n}\n\nfunction determineBrushType(brushType, panel) {\n  if (brushType === 'auto') {\n    return panel.defaultBrushType;\n  }\n\n  return brushType;\n}\n\nvar mouseHandlers = {\n  mousedown: function (e) {\n    if (this._dragging) {\n      // In case some browser do not support globalOut,\n      // and release mose out side the browser.\n      handleDragEnd.call(this, e);\n    } else if (!e.target || !e.target.draggable) {\n      preventDefault(e);\n      var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n      this._creatingCover = null;\n      var panel = this._creatingPanel = getPanelByPoint(this, e, localCursorPoint);\n\n      if (panel) {\n        this._dragging = true;\n        this._track = [localCursorPoint.slice()];\n      }\n    }\n  },\n  mousemove: function (e) {\n    var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n    resetCursor(this, e, localCursorPoint);\n\n    if (this._dragging) {\n      preventDefault(e);\n      var eventParams = updateCoverByMouse(this, e, localCursorPoint, false);\n      eventParams && trigger(this, eventParams);\n    }\n  },\n  mouseup: handleDragEnd //,\n  // FIXME\n  // in tooltip, globalout should not be triggered.\n  // globalout: handleDragEnd\n\n};\n\nfunction handleDragEnd(e) {\n  if (this._dragging) {\n    preventDefault(e);\n    var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n    var eventParams = updateCoverByMouse(this, e, localCursorPoint, true);\n    this._dragging = false;\n    this._track = [];\n    this._creatingCover = null; // trigger event shoule be at final, after procedure will be nested.\n\n    eventParams && trigger(this, eventParams);\n  }\n}\n/**\n * key: brushType\n * @type {Object}\n */\n\n\nvar coverRenderers = {\n  lineX: getLineRenderer(0),\n  lineY: getLineRenderer(1),\n  rect: {\n    createCover: function (controller, brushOption) {\n      return createBaseRectCover(curry(driftRect, function (range) {\n        return range;\n      }, function (range) {\n        return range;\n      }), controller, brushOption, ['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw']);\n    },\n    getCreatingRange: function (localTrack) {\n      var ends = getTrackEnds(localTrack);\n      return formatRectRange(ends[1][0], ends[1][1], ends[0][0], ends[0][1]);\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      updateBaseRect(controller, cover, localRange, brushOption);\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  },\n  polygon: {\n    createCover: function (controller, brushOption) {\n      var cover = new graphic.Group(); // Do not use graphic.Polygon because graphic.Polyline do not close the\n      // border of the shape when drawing, which is a better experience for user.\n\n      cover.add(new graphic.Polyline({\n        name: 'main',\n        style: makeStyle(brushOption),\n        silent: true\n      }));\n      return cover;\n    },\n    getCreatingRange: function (localTrack) {\n      return localTrack;\n    },\n    endCreating: function (controller, cover) {\n      cover.remove(cover.childAt(0)); // Use graphic.Polygon close the shape.\n\n      cover.add(new graphic.Polygon({\n        name: 'main',\n        draggable: true,\n        drift: curry(driftPolygon, controller, cover),\n        ondragend: curry(trigger, controller, {\n          isEnd: true\n        })\n      }));\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      cover.childAt(0).setShape({\n        points: clipByPanel(controller, cover, localRange)\n      });\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  }\n};\n\nfunction getLineRenderer(xyIndex) {\n  return {\n    createCover: function (controller, brushOption) {\n      return createBaseRectCover(curry(driftRect, function (range) {\n        var rectRange = [range, [0, 100]];\n        xyIndex && rectRange.reverse();\n        return rectRange;\n      }, function (rectRange) {\n        return rectRange[xyIndex];\n      }), controller, brushOption, [['w', 'e'], ['n', 's']][xyIndex]);\n    },\n    getCreatingRange: function (localTrack) {\n      var ends = getTrackEnds(localTrack);\n      var min = mathMin(ends[0][xyIndex], ends[1][xyIndex]);\n      var max = mathMax(ends[0][xyIndex], ends[1][xyIndex]);\n      return [min, max];\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      var otherExtent; // If brushWidth not specified, fit the panel.\n\n      var panel = getPanelByCover(controller, cover);\n\n      if (panel !== true && panel.getLinearBrushOtherExtent) {\n        otherExtent = panel.getLinearBrushOtherExtent(xyIndex, controller._transform);\n      } else {\n        var zr = controller._zr;\n        otherExtent = [0, [zr.getWidth(), zr.getHeight()][1 - xyIndex]];\n      }\n\n      var rectRange = [localRange, otherExtent];\n      xyIndex && rectRange.reverse();\n      updateBaseRect(controller, cover, rectRange, brushOption);\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  };\n}\n\nvar _default = BrushController;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/BrushController.js\n// module id = 1115\n// module chunks = 0 1 2","var IRRELEVANT_EXCLUDES = {\n  'axisPointer': 1,\n  'tooltip': 1,\n  'brush': 1\n};\n/**\n * Avoid that: mouse click on a elements that is over geo or graph,\n * but roam is triggered.\n */\n\nfunction onIrrelevantElement(e, api, targetCoordSysModel) {\n  var model = api.getComponentByElement(e.topTarget); // If model is axisModel, it works only if it is injected with coordinateSystem.\n\n  var coordSys = model && model.coordinateSystem;\n  return model && model !== targetCoordSysModel && !IRRELEVANT_EXCLUDES[model.mainType] && coordSys && coordSys.model !== targetCoordSysModel;\n}\n\nexports.onIrrelevantElement = onIrrelevantElement;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/cursorHelper.js\n// module id = 1116\n// module chunks = 0 1 2","var textHelper = require(\"../helper/text\");\n\nvar BoundingRect = require(\"../../core/BoundingRect\");\n\n/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\nvar tmpRect = new BoundingRect();\n\nvar RectText = function () {};\n\nRectText.prototype = {\n  constructor: RectText,\n\n  /**\n   * Draw text in a rect with specified position.\n   * @param  {CanvasRenderingContext2D} ctx\n   * @param  {Object} rect Displayable rect\n   */\n  drawRectText: function (ctx, rect) {\n    var style = this.style;\n    rect = style.textRect || rect; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n    var text = style.text; // Convert to string\n\n    text != null && (text += '');\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    } // FIXME\n\n\n    ctx.save(); // Transform rect to view space\n\n    var transform = this.transform;\n\n    if (!style.transformText) {\n      if (transform) {\n        tmpRect.copy(rect);\n        tmpRect.applyTransform(transform);\n        rect = tmpRect;\n      }\n    } else {\n      this.setTransform(ctx);\n    } // transformText and textRotation can not be used at the same time.\n\n\n    textHelper.renderText(this, ctx, text, style, rect);\n    ctx.restore();\n  }\n};\nvar _default = RectText;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/mixin/RectText.js\n// module id = 1120\n// module chunks = 0 1 2","/**\n * 线段包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  var _a = 0;\n  var _b = x0; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l || y < y0 - _l && y < y1 - _l || x > x0 + _l && x > x1 + _l || x < x0 - _l && x < x1 - _l) {\n    return false;\n  }\n\n  if (x0 !== x1) {\n    _a = (y0 - y1) / (x0 - x1);\n    _b = (x0 * y1 - x1 * y0) / (x0 - x1);\n  } else {\n    return Math.abs(x - x0) <= _l / 2;\n  }\n\n  var tmp = _a * x - y + _b;\n\n  var _s = tmp * tmp / (_a * _a + 1);\n\n  return _s <= _l / 2 * _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/contain/line.js\n// module id = 1121\n// module chunks = 0 1 2","var _curve = require(\"../core/curve\");\n\nvar quadraticProjectPoint = _curve.quadraticProjectPoint;\n\n/**\n * 二次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l) {\n    return false;\n  }\n\n  var d = quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/contain/quadratic.js\n// module id = 1122\n// module chunks = 0 1 2","var zrUtil = require(\"../core/util\");\n\nvar Gradient = require(\"./Gradient\");\n\n/**\n * x, y, x2, y2 are all percent from 0 to 1\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @param {number} [x2=1]\n * @param {number} [y2=0]\n * @param {Array.<Object>} colorStops\n * @param {boolean} [globalCoord=false]\n */\nvar LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'linear', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0 : x;\n  this.y = y == null ? 0 : y;\n  this.x2 = x2 == null ? 1 : x2;\n  this.y2 = y2 == null ? 0 : y2; // Can be cloned\n\n  this.type = 'linear'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nLinearGradient.prototype = {\n  constructor: LinearGradient\n};\nzrUtil.inherits(LinearGradient, Gradient);\nvar _default = LinearGradient;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/LinearGradient.js\n// module id = 1123\n// module chunks = 0 1 2","var zrender = require(\"zrender/lib/zrender\");\n\nexports.zrender = zrender;\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nexports.matrix = matrix;\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nexports.vector = vector;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nexports.color = colorTool;\n\nvar graphic = require(\"./util/graphic\");\n\nexports.graphic = graphic;\n\nvar numberUtil = require(\"./util/number\");\n\nexports.number = numberUtil;\n\nvar formatUtil = require(\"./util/format\");\n\nexports.format = formatUtil;\n\nvar _throttle = require(\"./util/throttle\");\n\nvar throttle = _throttle.throttle;\nexports.throttle = _throttle.throttle;\n\nvar ecHelper = require(\"./helper\");\n\nexports.helper = ecHelper;\n\nvar _List = require(\"./data/List\");\n\nexports.List = _List;\n\nvar _Model = require(\"./model/Model\");\n\nexports.Model = _Model;\n\nvar _Axis = require(\"./coord/Axis\");\n\nexports.Axis = _Axis;\n\nvar _env = require(\"zrender/lib/core/env\");\n\nexports.env = _env;\n\nvar _parseGeoJson = require(\"./coord/geo/parseGeoJson\");\n\nexports.parseGeoJson = _parseGeoJson;\n\n/**\n * Do not mount those modules on 'src/echarts' for better tree shaking.\n */\nvar ecUtil = {};\nzrUtil.each(['map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter', 'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction', 'extend', 'defaults', 'clone', 'merge'], function (name) {\n  ecUtil[name] = zrUtil[name];\n});\nexports.util = ecUtil;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/export.js\n// module id = 1124\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Region = require(\"./Region\");\n\n/**\n * Parse and decode geo json\n * @module echarts/coord/geo/parseGeoJson\n */\nfunction decode(json) {\n  if (!json.UTF8Encoding) {\n    return json;\n  }\n\n  var encodeScale = json.UTF8Scale;\n\n  if (encodeScale == null) {\n    encodeScale = 1024;\n  }\n\n  var features = json.features;\n\n  for (var f = 0; f < features.length; f++) {\n    var feature = features[f];\n    var geometry = feature.geometry;\n    var coordinates = geometry.coordinates;\n    var encodeOffsets = geometry.encodeOffsets;\n\n    for (var c = 0; c < coordinates.length; c++) {\n      var coordinate = coordinates[c];\n\n      if (geometry.type === 'Polygon') {\n        coordinates[c] = decodePolygon(coordinate, encodeOffsets[c], encodeScale);\n      } else if (geometry.type === 'MultiPolygon') {\n        for (var c2 = 0; c2 < coordinate.length; c2++) {\n          var polygon = coordinate[c2];\n          coordinate[c2] = decodePolygon(polygon, encodeOffsets[c][c2], encodeScale);\n        }\n      }\n    }\n  } // Has been decoded\n\n\n  json.UTF8Encoding = false;\n  return json;\n}\n\nfunction decodePolygon(coordinate, encodeOffsets, encodeScale) {\n  var result = [];\n  var prevX = encodeOffsets[0];\n  var prevY = encodeOffsets[1];\n\n  for (var i = 0; i < coordinate.length; i += 2) {\n    var x = coordinate.charCodeAt(i) - 64;\n    var y = coordinate.charCodeAt(i + 1) - 64; // ZigZag decoding\n\n    x = x >> 1 ^ -(x & 1);\n    y = y >> 1 ^ -(y & 1); // Delta deocding\n\n    x += prevX;\n    y += prevY;\n    prevX = x;\n    prevY = y; // Dequantize\n\n    result.push([x / encodeScale, y / encodeScale]);\n  }\n\n  return result;\n}\n/**\n * @alias module:echarts/coord/geo/parseGeoJson\n * @param {Object} geoJson\n * @return {module:zrender/container/Group}\n */\n\n\nfunction _default(geoJson) {\n  decode(geoJson);\n  return zrUtil.map(zrUtil.filter(geoJson.features, function (featureObj) {\n    // Output of mapshaper may have geometry null\n    return featureObj.geometry && featureObj.properties && featureObj.geometry.coordinates.length > 0;\n  }), function (featureObj) {\n    var properties = featureObj.properties;\n    var geo = featureObj.geometry;\n    var coordinates = geo.coordinates;\n    var geometries = [];\n\n    if (geo.type === 'Polygon') {\n      geometries.push({\n        type: 'polygon',\n        // According to the GeoJSON specification.\n        // First must be exterior, and the rest are all interior(holes).\n        exterior: coordinates[0],\n        interiors: coordinates.slice(1)\n      });\n    }\n\n    if (geo.type === 'MultiPolygon') {\n      zrUtil.each(coordinates, function (item) {\n        if (item[0]) {\n          geometries.push({\n            type: 'polygon',\n            exterior: item[0],\n            interiors: item.slice(1)\n          });\n        }\n      });\n    }\n\n    var region = new Region(properties.name, geometries, properties.cp);\n    region.properties = properties;\n    return region;\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/geo/parseGeoJson.js\n// module id = 1125\n// module chunks = 0 1 2","var BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar bbox = require(\"zrender/lib/core/bbox\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar polygonContain = require(\"zrender/lib/contain/polygon\");\n\n/**\n * @module echarts/coord/geo/Region\n */\n\n/**\n * @param {string} name\n * @param {Array} geometries\n * @param {Array.<number>} cp\n */\nfunction Region(name, geometries, cp) {\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  this.name = name;\n  /**\n   * @type {Array.<Array>}\n   * @readOnly\n   */\n\n  this.geometries = geometries;\n\n  if (!cp) {\n    var rect = this.getBoundingRect();\n    cp = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  } else {\n    cp = [cp[0], cp[1]];\n  }\n  /**\n   * @type {Array.<number>}\n   */\n\n\n  this.center = cp;\n}\n\nRegion.prototype = {\n  constructor: Region,\n  properties: null,\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    var rect = this._rect;\n\n    if (rect) {\n      return rect;\n    }\n\n    var MAX_NUMBER = Number.MAX_VALUE;\n    var min = [MAX_NUMBER, MAX_NUMBER];\n    var max = [-MAX_NUMBER, -MAX_NUMBER];\n    var min2 = [];\n    var max2 = [];\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      } // Doesn't consider hole\n\n\n      var exterior = geometries[i].exterior;\n      bbox.fromPoints(exterior, min2, max2);\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return this._rect = new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * @param {<Array.<number>} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var rect = this.getBoundingRect();\n    var geometries = this.geometries;\n\n    if (!rect.contain(coord[0], coord[1])) {\n      return false;\n    }\n\n    loopGeo: for (var i = 0, len = geometries.length; i < len; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      if (polygonContain.contain(exterior, coord[0], coord[1])) {\n        // Not in the region if point is in the hole.\n        for (var k = 0; k < (interiors ? interiors.length : 0); k++) {\n          if (polygonContain.contain(interiors[k])) {\n            continue loopGeo;\n          }\n        }\n\n        return true;\n      }\n    }\n\n    return false;\n  },\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var aspect = rect.width / rect.height;\n\n    if (!width) {\n      width = aspect * height;\n    } else if (!height) {\n      height = width / aspect;\n    }\n\n    var target = new BoundingRect(x, y, width, height);\n    var transform = rect.calculateTransform(target);\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      for (var p = 0; p < exterior.length; p++) {\n        vec2.applyTransform(exterior[p], exterior[p], transform);\n      }\n\n      for (var h = 0; h < (interiors ? interiors.length : 0); h++) {\n        for (var p = 0; p < interiors[h].length; p++) {\n          vec2.applyTransform(interiors[h][p], interiors[h][p], transform);\n        }\n      }\n    }\n\n    rect = this._rect;\n    rect.copy(target); // Update center\n\n    this.center = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n};\nvar _default = Region;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/geo/Region.js\n// module id = 1126\n// module chunks = 0 1 2","var windingLine = require(\"./windingLine\");\n\nvar EPSILON = 1e-8;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n}\n\nfunction contain(points, x, y) {\n  var w = 0;\n  var p = points[0];\n\n  if (!p) {\n    return false;\n  }\n\n  for (var i = 1; i < points.length; i++) {\n    var p2 = points[i];\n    w += windingLine(p[0], p[1], p2[0], p2[1], x, y);\n    p = p2;\n  } // Close polygon\n\n\n  var p0 = points[0];\n\n  if (!isAroundEqual(p[0], p0[0]) || !isAroundEqual(p[1], p0[1])) {\n    w += windingLine(p[0], p[1], p0[0], p0[1], x, y);\n  }\n\n  return w !== 0;\n}\n\nexports.contain = contain;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/contain/polygon.js\n// module id = 1127\n// module chunks = 0 1 2","var echarts = require(\"../echarts\");\n\nrequire(\"./axisPointer\");\n\nrequire(\"./tooltip/TooltipModel\");\n\nrequire(\"./tooltip/TooltipView\");\n\n// FIXME Better way to pack data in graphic element\n\n/**\n * @action\n * @property {string} type\n * @property {number} seriesIndex\n * @property {number} dataIndex\n * @property {number} [x]\n * @property {number} [y]\n */\necharts.registerAction({\n  type: 'showTip',\n  event: 'showTip',\n  update: 'tooltip:manuallyShowTip'\n}, // noop\nfunction () {});\necharts.registerAction({\n  type: 'hideTip',\n  event: 'hideTip',\n  update: 'tooltip:manuallyHideTip'\n}, // noop\nfunction () {});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/tooltip.js\n// module id = 1128\n// module chunks = 0 1 2","var echarts = require(\"../echarts\");\n\nrequire(\"./legend/LegendModel\");\n\nrequire(\"./legend/legendAction\");\n\nrequire(\"./legend/LegendView\");\n\nvar legendFilter = require(\"./legend/legendFilter\");\n\nvar Component = require(\"../model/Component\");\n\n// Do not contain scrollable legend, for sake of file size.\n// Series Filter\necharts.registerProcessor(legendFilter);\nComponent.registerSubTypeDefaulter('legend', function () {\n  // Default 'plain' when no type specified.\n  return 'plain';\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend.js\n// module id = 1129\n// module chunks = 0 1 2","function _default(seriesType, ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (!legendModels || !legendModels.length) {\n    return;\n  }\n\n  ecModel.eachSeriesByType(seriesType, function (series) {\n    var data = series.getData();\n    data.filterSelf(function (idx) {\n      var name = data.getName(idx); // If in any legend component the status is not selected.\n\n      for (var i = 0; i < legendModels.length; i++) {\n        if (!legendModels[i].isSelected(name)) {\n          return false;\n        }\n      }\n\n      return true;\n    }, this);\n  }, this);\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/processor/dataFilter.js\n// module id = 1130\n// module chunks = 0 2","require(\"./toolbox/ToolboxModel\");\n\nrequire(\"./toolbox/ToolboxView\");\n\nrequire(\"./toolbox/feature/SaveAsImage\");\n\nrequire(\"./toolbox/feature/MagicType\");\n\nrequire(\"./toolbox/feature/DataView\");\n\nrequire(\"./toolbox/feature/DataZoom\");\n\nrequire(\"./toolbox/feature/Restore\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox.js\n// module id = 1131\n// module chunks = 0 1 2","var echarts = require(\"../../echarts\");\n\nvar ATTR = '\\0_ec_interaction_mutex';\n\nfunction take(zr, resourceKey, userKey) {\n  var store = getStore(zr);\n  store[resourceKey] = userKey;\n}\n\nfunction release(zr, resourceKey, userKey) {\n  var store = getStore(zr);\n  var uKey = store[resourceKey];\n\n  if (uKey === userKey) {\n    store[resourceKey] = null;\n  }\n}\n\nfunction isTaken(zr, resourceKey) {\n  return !!getStore(zr)[resourceKey];\n}\n\nfunction getStore(zr) {\n  return zr[ATTR] || (zr[ATTR] = {});\n}\n/**\n * payload: {\n *     type: 'takeGlobalCursor',\n *     key: 'dataZoomSelect', or 'brush', or ...,\n *         If no userKey, release global cursor.\n * }\n */\n\n\necharts.registerAction({\n  type: 'takeGlobalCursor',\n  event: 'globalCursorTaken',\n  update: 'update'\n}, function () {});\nexports.take = take;\nexports.release = release;\nexports.isTaken = isTaken;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/interactionMutex.js\n// module id = 1132\n// module chunks = 0 1 2","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar brushHelper = require(\"./brushHelper\");\n\nvar each = zrUtil.each;\nvar indexOf = zrUtil.indexOf;\nvar curry = zrUtil.curry;\nvar COORD_CONVERTS = ['dataToPoint', 'pointToData']; // FIXME\n// how to genarialize to more coordinate systems.\n\nvar INCLUDE_FINDER_MAIN_TYPES = ['grid', 'xAxis', 'yAxis', 'geo', 'graph', 'polar', 'radiusAxis', 'angleAxis', 'bmap'];\n/**\n * [option in constructor]:\n * {\n *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n * }\n *\n *\n * [targetInfo]:\n *\n * There can be multiple axes in a single targetInfo. Consider the case\n * of `grid` component, a targetInfo represents a grid which contains one or more\n * cartesian and one or more axes. And consider the case of parallel system,\n * which has multiple axes in a coordinate system.\n * Can be {\n *     panelId: ...,\n *     coordSys: <a representitive cartesian in grid (first cartesian by default)>,\n *     coordSyses: all cartesians.\n *     gridModel: <grid component>\n *     xAxes: correspond to coordSyses on index\n *     yAxes: correspond to coordSyses on index\n * }\n * or {\n *     panelId: ...,\n *     coordSys: <geo coord sys>\n *     coordSyses: [<geo coord sys>]\n *     geoModel: <geo component>\n * }\n *\n *\n * [panelOpt]:\n *\n * Make from targetInfo. Input to BrushController.\n * {\n *     panelId: ...,\n *     rect: ...\n * }\n *\n *\n * [area]:\n *\n * Generated by BrushController or user input.\n * {\n *     panelId: Used to locate coordInfo directly. If user inpput, no panelId.\n *     brushType: determine how to convert to/from coord('rect' or 'polygon' or 'lineX/Y').\n *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n *     range: pixel range.\n *     coordRange: representitive coord range (the first one of coordRanges).\n *     coordRanges: <Array> coord ranges, used in multiple cartesian in one grid.\n * }\n */\n\n/**\n * @param {Object} option contains Index/Id/Name of xAxis/yAxis/geo/grid\n *        Each can be {number|Array.<number>}. like: {xAxisIndex: [3, 4]}\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} [opt]\n * @param {Array.<string>} [opt.include] include coordinate system types.\n */\n\nfunction BrushTargetManager(option, ecModel, opt) {\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n  var targetInfoList = this._targetInfoList = [];\n  var info = {};\n  var foundCpts = parseFinder(ecModel, option);\n  each(targetInfoBuilders, function (builder, type) {\n    if (!opt || !opt.include || indexOf(opt.include, type) >= 0) {\n      builder(foundCpts, targetInfoList, info);\n    }\n  });\n}\n\nvar proto = BrushTargetManager.prototype;\n\nproto.setOutputRanges = function (areas, ecModel) {\n  this.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n    (area.coordRanges || (area.coordRanges = [])).push(coordRange); // area.coordRange is the first of area.coordRanges\n\n    if (!area.coordRange) {\n      area.coordRange = coordRange; // In 'category' axis, coord to pixel is not reversible, so we can not\n      // rebuild range by coordRange accrately, which may bring trouble when\n      // brushing only one item. So we use __rangeOffset to rebuilding range\n      // by coordRange. And this it only used in brush component so it is no\n      // need to be adapted to coordRanges.\n\n      var result = coordConvert[area.brushType](0, coordSys, coordRange);\n      area.__rangeOffset = {\n        offset: diffProcessor[area.brushType](result.values, area.range, [1, 1]),\n        xyMinMax: result.xyMinMax\n      };\n    }\n  });\n};\n\nproto.matchOutputRanges = function (areas, ecModel, cb) {\n  each(areas, function (area) {\n    var targetInfo = this.findTargetInfo(area, ecModel);\n\n    if (targetInfo && targetInfo !== true) {\n      zrUtil.each(targetInfo.coordSyses, function (coordSys) {\n        var result = coordConvert[area.brushType](1, coordSys, area.range);\n        cb(area, result.values, coordSys, ecModel);\n      });\n    }\n  }, this);\n};\n\nproto.setInputRanges = function (areas, ecModel) {\n  each(areas, function (area) {\n    var targetInfo = this.findTargetInfo(area, ecModel);\n    area.range = area.range || []; // convert coordRange to global range and set panelId.\n\n    if (targetInfo && targetInfo !== true) {\n      area.panelId = targetInfo.panelId; // (1) area.range shoule always be calculate from coordRange but does\n      // not keep its original value, for the sake of the dataZoom scenario,\n      // where area.coordRange remains unchanged but area.range may be changed.\n      // (2) Only support converting one coordRange to pixel range in brush\n      // component. So do not consider `coordRanges`.\n      // (3) About __rangeOffset, see comment above.\n\n      var result = coordConvert[area.brushType](0, targetInfo.coordSys, area.coordRange);\n      var rangeOffset = area.__rangeOffset;\n      area.range = rangeOffset ? diffProcessor[area.brushType](result.values, rangeOffset.offset, getScales(result.xyMinMax, rangeOffset.xyMinMax)) : result.values;\n    }\n  }, this);\n};\n\nproto.makePanelOpts = function (api, getDefaultBrushType) {\n  return zrUtil.map(this._targetInfoList, function (targetInfo) {\n    var rect = targetInfo.getPanelRect();\n    return {\n      panelId: targetInfo.panelId,\n      defaultBrushType: getDefaultBrushType && getDefaultBrushType(targetInfo),\n      clipPath: brushHelper.makeRectPanelClipPath(rect),\n      isTargetByCursor: brushHelper.makeRectIsTargetByCursor(rect, api, targetInfo.coordSysModel),\n      getLinearBrushOtherExtent: brushHelper.makeLinearBrushOtherExtent(rect)\n    };\n  });\n};\n\nproto.controlSeries = function (area, seriesModel, ecModel) {\n  // Check whether area is bound in coord, and series do not belong to that coord.\n  // If do not do this check, some brush (like lineX) will controll all axes.\n  var targetInfo = this.findTargetInfo(area, ecModel);\n  return targetInfo === true || targetInfo && indexOf(targetInfo.coordSyses, seriesModel.coordinateSystem) >= 0;\n};\n/**\n * If return Object, a coord found.\n * If reutrn true, global found.\n * Otherwise nothing found.\n *\n * @param {Object} area\n * @param {Array} targetInfoList\n * @return {Object|boolean}\n */\n\n\nproto.findTargetInfo = function (area, ecModel) {\n  var targetInfoList = this._targetInfoList;\n  var foundCpts = parseFinder(ecModel, area);\n\n  for (var i = 0; i < targetInfoList.length; i++) {\n    var targetInfo = targetInfoList[i];\n    var areaPanelId = area.panelId;\n\n    if (areaPanelId) {\n      if (targetInfo.panelId === areaPanelId) {\n        return targetInfo;\n      }\n    } else {\n      for (var i = 0; i < targetInfoMatchers.length; i++) {\n        if (targetInfoMatchers[i](foundCpts, targetInfo)) {\n          return targetInfo;\n        }\n      }\n    }\n  }\n\n  return true;\n};\n\nfunction formatMinMax(minMax) {\n  minMax[0] > minMax[1] && minMax.reverse();\n  return minMax;\n}\n\nfunction parseFinder(ecModel, option) {\n  return modelUtil.parseFinder(ecModel, option, {\n    includeMainTypes: INCLUDE_FINDER_MAIN_TYPES\n  });\n}\n\nvar targetInfoBuilders = {\n  grid: function (foundCpts, targetInfoList) {\n    var xAxisModels = foundCpts.xAxisModels;\n    var yAxisModels = foundCpts.yAxisModels;\n    var gridModels = foundCpts.gridModels; // Remove duplicated.\n\n    var gridModelMap = zrUtil.createHashMap();\n    var xAxesHas = {};\n    var yAxesHas = {};\n\n    if (!xAxisModels && !yAxisModels && !gridModels) {\n      return;\n    }\n\n    each(xAxisModels, function (axisModel) {\n      var gridModel = axisModel.axis.grid.model;\n      gridModelMap.set(gridModel.id, gridModel);\n      xAxesHas[gridModel.id] = true;\n    });\n    each(yAxisModels, function (axisModel) {\n      var gridModel = axisModel.axis.grid.model;\n      gridModelMap.set(gridModel.id, gridModel);\n      yAxesHas[gridModel.id] = true;\n    });\n    each(gridModels, function (gridModel) {\n      gridModelMap.set(gridModel.id, gridModel);\n      xAxesHas[gridModel.id] = true;\n      yAxesHas[gridModel.id] = true;\n    });\n    gridModelMap.each(function (gridModel) {\n      var grid = gridModel.coordinateSystem;\n      var cartesians = [];\n      each(grid.getCartesians(), function (cartesian, index) {\n        if (indexOf(xAxisModels, cartesian.getAxis('x').model) >= 0 || indexOf(yAxisModels, cartesian.getAxis('y').model) >= 0) {\n          cartesians.push(cartesian);\n        }\n      });\n      targetInfoList.push({\n        panelId: 'grid--' + gridModel.id,\n        gridModel: gridModel,\n        coordSysModel: gridModel,\n        // Use the first one as the representitive coordSys.\n        coordSys: cartesians[0],\n        coordSyses: cartesians,\n        getPanelRect: panelRectBuilder.grid,\n        xAxisDeclared: xAxesHas[gridModel.id],\n        yAxisDeclared: yAxesHas[gridModel.id]\n      });\n    });\n  },\n  geo: function (foundCpts, targetInfoList) {\n    each(foundCpts.geoModels, function (geoModel) {\n      var coordSys = geoModel.coordinateSystem;\n      targetInfoList.push({\n        panelId: 'geo--' + geoModel.id,\n        geoModel: geoModel,\n        coordSysModel: geoModel,\n        coordSys: coordSys,\n        coordSyses: [coordSys],\n        getPanelRect: panelRectBuilder.geo\n      });\n    });\n  }\n};\nvar targetInfoMatchers = [// grid\nfunction (foundCpts, targetInfo) {\n  var xAxisModel = foundCpts.xAxisModel;\n  var yAxisModel = foundCpts.yAxisModel;\n  var gridModel = foundCpts.gridModel;\n  !gridModel && xAxisModel && (gridModel = xAxisModel.axis.grid.model);\n  !gridModel && yAxisModel && (gridModel = yAxisModel.axis.grid.model);\n  return gridModel && gridModel === targetInfo.gridModel;\n}, // geo\nfunction (foundCpts, targetInfo) {\n  var geoModel = foundCpts.geoModel;\n  return geoModel && geoModel === targetInfo.geoModel;\n}];\nvar panelRectBuilder = {\n  grid: function () {\n    // grid is not Transformable.\n    return this.coordSys.grid.getRect().clone();\n  },\n  geo: function () {\n    var coordSys = this.coordSys;\n    var rect = coordSys.getBoundingRect().clone(); // geo roam and zoom transform\n\n    rect.applyTransform(graphic.getTransform(coordSys));\n    return rect;\n  }\n};\nvar coordConvert = {\n  lineX: curry(axisConvert, 0),\n  lineY: curry(axisConvert, 1),\n  rect: function (to, coordSys, rangeOrCoordRange) {\n    var xminymin = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][0], rangeOrCoordRange[1][0]]);\n    var xmaxymax = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][1], rangeOrCoordRange[1][1]]);\n    var values = [formatMinMax([xminymin[0], xmaxymax[0]]), formatMinMax([xminymin[1], xmaxymax[1]])];\n    return {\n      values: values,\n      xyMinMax: values\n    };\n  },\n  polygon: function (to, coordSys, rangeOrCoordRange) {\n    var xyMinMax = [[Infinity, -Infinity], [Infinity, -Infinity]];\n    var values = zrUtil.map(rangeOrCoordRange, function (item) {\n      var p = coordSys[COORD_CONVERTS[to]](item);\n      xyMinMax[0][0] = Math.min(xyMinMax[0][0], p[0]);\n      xyMinMax[1][0] = Math.min(xyMinMax[1][0], p[1]);\n      xyMinMax[0][1] = Math.max(xyMinMax[0][1], p[0]);\n      xyMinMax[1][1] = Math.max(xyMinMax[1][1], p[1]);\n      return p;\n    });\n    return {\n      values: values,\n      xyMinMax: xyMinMax\n    };\n  }\n};\n\nfunction axisConvert(axisNameIndex, to, coordSys, rangeOrCoordRange) {\n  var axis = coordSys.getAxis(['x', 'y'][axisNameIndex]);\n  var values = formatMinMax(zrUtil.map([0, 1], function (i) {\n    return to ? axis.coordToData(axis.toLocalCoord(rangeOrCoordRange[i])) : axis.toGlobalCoord(axis.dataToCoord(rangeOrCoordRange[i]));\n  }));\n  var xyMinMax = [];\n  xyMinMax[axisNameIndex] = values;\n  xyMinMax[1 - axisNameIndex] = [NaN, NaN];\n  return {\n    values: values,\n    xyMinMax: xyMinMax\n  };\n}\n\nvar diffProcessor = {\n  lineX: curry(axisDiffProcessor, 0),\n  lineY: curry(axisDiffProcessor, 1),\n  rect: function (values, refer, scales) {\n    return [[values[0][0] - scales[0] * refer[0][0], values[0][1] - scales[0] * refer[0][1]], [values[1][0] - scales[1] * refer[1][0], values[1][1] - scales[1] * refer[1][1]]];\n  },\n  polygon: function (values, refer, scales) {\n    return zrUtil.map(values, function (item, idx) {\n      return [item[0] - scales[0] * refer[idx][0], item[1] - scales[1] * refer[idx][1]];\n    });\n  }\n};\n\nfunction axisDiffProcessor(axisNameIndex, values, refer, scales) {\n  return [values[0] - scales[axisNameIndex] * refer[0], values[1] - scales[axisNameIndex] * refer[1]];\n} // We have to process scale caused by dataZoom manually,\n// although it might be not accurate.\n\n\nfunction getScales(xyMinMaxCurr, xyMinMaxOrigin) {\n  var sizeCurr = getSize(xyMinMaxCurr);\n  var sizeOrigin = getSize(xyMinMaxOrigin);\n  var scales = [sizeCurr[0] / sizeOrigin[0], sizeCurr[1] / sizeOrigin[1]];\n  isNaN(scales[0]) && (scales[0] = 1);\n  isNaN(scales[1]) && (scales[1] = 1);\n  return scales;\n}\n\nfunction getSize(xyMinMax) {\n  return xyMinMax ? [xyMinMax[0][1] - xyMinMax[0][0], xyMinMax[1][1] - xyMinMax[1][0]] : [NaN, NaN];\n}\n\nvar _default = BrushTargetManager;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/BrushTargetManager.js\n// module id = 1133\n// module chunks = 0 1 2","var BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _cursorHelper = require(\"./cursorHelper\");\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar graphicUtil = require(\"../../util/graphic\");\n\nfunction makeRectPanelClipPath(rect) {\n  rect = normalizeRect(rect);\n  return function (localPoints, transform) {\n    return graphicUtil.clipPointsByRect(localPoints, rect);\n  };\n}\n\nfunction makeLinearBrushOtherExtent(rect, specifiedXYIndex) {\n  rect = normalizeRect(rect);\n  return function (xyIndex) {\n    var idx = specifiedXYIndex != null ? specifiedXYIndex : xyIndex;\n    var brushWidth = idx ? rect.width : rect.height;\n    var base = idx ? rect.x : rect.y;\n    return [base, base + (brushWidth || 0)];\n  };\n}\n\nfunction makeRectIsTargetByCursor(rect, api, targetModel) {\n  rect = normalizeRect(rect);\n  return function (e, localCursorPoint, transform) {\n    return rect.contain(localCursorPoint[0], localCursorPoint[1]) && !onIrrelevantElement(e, api, targetModel);\n  };\n} // Consider width/height is negative.\n\n\nfunction normalizeRect(rect) {\n  return BoundingRect.create(rect);\n}\n\nexports.makeRectPanelClipPath = makeRectPanelClipPath;\nexports.makeLinearBrushOtherExtent = makeLinearBrushOtherExtent;\nexports.makeRectIsTargetByCursor = makeRectIsTargetByCursor;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/brushHelper.js\n// module id = 1134\n// module chunks = 0 1 2","var Component = require(\"../../model/Component\");\n\nComponent.registerSubTypeDefaulter('dataZoom', function () {\n  // Default 'slider' when no type specified.\n  return 'slider';\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/typeDefaulter.js\n// module id = 1135\n// module chunks = 0 1 2","var echarts = require(\"../../echarts\");\n\necharts.registerProcessor(function (ecModel, api) {\n  ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n    // We calculate window and reset axis here but not in model\n    // init stage and not after action dispatch handler, because\n    // reset should be called after seriesData.restoreData.\n    dataZoomModel.eachTargetAxis(resetSingleAxis); // Caution: data zoom filtering is order sensitive when using\n    // percent range and no min/max/scale set on axis.\n    // For example, we have dataZoom definition:\n    // [\n    //      {xAxisIndex: 0, start: 30, end: 70},\n    //      {yAxisIndex: 0, start: 20, end: 80}\n    // ]\n    // In this case, [20, 80] of y-dataZoom should be based on data\n    // that have filtered by x-dataZoom using range of [30, 70],\n    // but should not be based on full raw data. Thus sliding\n    // x-dataZoom will change both ranges of xAxis and yAxis,\n    // while sliding y-dataZoom will only change the range of yAxis.\n    // So we should filter x-axis after reset x-axis immediately,\n    // and then reset y-axis and filter y-axis.\n\n    dataZoomModel.eachTargetAxis(filterSingleAxis);\n  });\n  ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n    // Fullfill all of the range props so that user\n    // is able to get them from chart.getOption().\n    var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n    var percentRange = axisProxy.getDataPercentWindow();\n    var valueRange = axisProxy.getDataValueWindow();\n    dataZoomModel.setRawRange({\n      start: percentRange[0],\n      end: percentRange[1],\n      startValue: valueRange[0],\n      endValue: valueRange[1]\n    }, true);\n  });\n});\n\nfunction resetSingleAxis(dimNames, axisIndex, dataZoomModel) {\n  dataZoomModel.getAxisProxy(dimNames.name, axisIndex).reset(dataZoomModel);\n}\n\nfunction filterSingleAxis(dimNames, axisIndex, dataZoomModel) {\n  dataZoomModel.getAxisProxy(dimNames.name, axisIndex).filterData(dataZoomModel);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/dataZoomProcessor.js\n// module id = 1136\n// module chunks = 0 1 2","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar helper = require(\"./helper\");\n\necharts.registerAction('dataZoom', function (payload, ecModel) {\n  var linkedNodesFinder = helper.createLinkedNodesFinder(zrUtil.bind(ecModel.eachComponent, ecModel, 'dataZoom'), helper.eachAxisDim, function (model, dimNames) {\n    return model.get(dimNames.axisIndex);\n  });\n  var effectedModels = [];\n  ecModel.eachComponent({\n    mainType: 'dataZoom',\n    query: payload\n  }, function (model, index) {\n    effectedModels.push.apply(effectedModels, linkedNodesFinder(model).nodes);\n  });\n  zrUtil.each(effectedModels, function (dataZoomModel, index) {\n    dataZoomModel.setRawRange({\n      start: payload.start,\n      end: payload.end,\n      startValue: payload.startValue,\n      endValue: payload.endValue\n    });\n  });\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/dataZoomAction.js\n// module id = 1137\n// module chunks = 0 1 2","var util = require(\"./core/util\");\n\nvar vec2 = require(\"./core/vector\");\n\nvar Draggable = require(\"./mixin/Draggable\");\n\nvar Eventful = require(\"./mixin/Eventful\");\n\n/**\n * Handler\n * @module zrender/Handler\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (shenyi.914@gmail.com)\n */\nvar SILENT = 'silent';\n\nfunction makeEventPacket(eveType, targetInfo, event) {\n  return {\n    type: eveType,\n    event: event,\n    // target can only be an element that is not silent.\n    target: targetInfo.target,\n    // topTarget can be a silent element.\n    topTarget: targetInfo.topTarget,\n    cancelBubble: false,\n    offsetX: event.zrX,\n    offsetY: event.zrY,\n    gestureEvent: event.gestureEvent,\n    pinchX: event.pinchX,\n    pinchY: event.pinchY,\n    pinchScale: event.pinchScale,\n    wheelDelta: event.zrDelta,\n    zrByTouch: event.zrByTouch,\n    which: event.which\n  };\n}\n\nfunction EmptyProxy() {}\n\nEmptyProxy.prototype.dispose = function () {};\n\nvar handlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\n/**\n * @alias module:zrender/Handler\n * @constructor\n * @extends module:zrender/mixin/Eventful\n * @param {module:zrender/Storage} storage Storage instance.\n * @param {module:zrender/Painter} painter Painter instance.\n * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n */\n\nvar Handler = function (storage, painter, proxy, painterRoot) {\n  Eventful.call(this);\n  this.storage = storage;\n  this.painter = painter;\n  this.painterRoot = painterRoot;\n  proxy = proxy || new EmptyProxy();\n  /**\n   * Proxy of event. can be Dom, WebGLSurface, etc.\n   */\n\n  this.proxy = proxy; // Attach handler\n\n  proxy.handler = this;\n  /**\n   * {target, topTarget, x, y}\n   * @private\n   * @type {Object}\n   */\n\n  this._hovered = {};\n  /**\n   * @private\n   * @type {Date}\n   */\n\n  this._lastTouchMoment;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastX;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastY;\n  Draggable.call(this);\n  util.each(handlerNames, function (name) {\n    proxy.on && proxy.on(name, this[name], this);\n  }, this);\n};\n\nHandler.prototype = {\n  constructor: Handler,\n  mousemove: function (event) {\n    var x = event.zrX;\n    var y = event.zrY;\n    var lastHovered = this._hovered;\n    var lastHoveredTarget = lastHovered.target; // If lastHoveredTarget is removed from zr (detected by '__zr') by some API call\n    // (like 'setOption' or 'dispatchAction') in event handlers, we should find\n    // lastHovered again here. Otherwise 'mouseout' can not be triggered normally.\n    // See #6198.\n\n    if (lastHoveredTarget && !lastHoveredTarget.__zr) {\n      lastHovered = this.findHover(lastHovered.x, lastHovered.y);\n      lastHoveredTarget = lastHovered.target;\n    }\n\n    var hovered = this._hovered = this.findHover(x, y);\n    var hoveredTarget = hovered.target;\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default'); // Mouse out on previous hovered element\n\n    if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(lastHovered, 'mouseout', event);\n    } // Mouse moving on one element\n\n\n    this.dispatchToElement(hovered, 'mousemove', event); // Mouse over on a new element\n\n    if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(hovered, 'mouseover', event);\n    }\n  },\n  mouseout: function (event) {\n    this.dispatchToElement(this._hovered, 'mouseout', event); // There might be some doms created by upper layer application\n    // at the same level of painter.getViewportRoot() (e.g., tooltip\n    // dom created by echarts), where 'globalout' event should not\n    // be triggered when mouse enters these doms. (But 'mouseout'\n    // should be triggered at the original hovered element as usual).\n\n    var element = event.toElement || event.relatedTarget;\n    var innerDom;\n\n    do {\n      element = element && element.parentNode;\n    } while (element && element.nodeType != 9 && !(innerDom = element === this.painterRoot));\n\n    !innerDom && this.trigger('globalout', {\n      event: event\n    });\n  },\n\n  /**\n   * Resize\n   */\n  resize: function (event) {\n    this._hovered = {};\n  },\n\n  /**\n   * Dispatch event\n   * @param {string} eventName\n   * @param {event=} eventArgs\n   */\n  dispatch: function (eventName, eventArgs) {\n    var handler = this[eventName];\n    handler && handler.call(this, eventArgs);\n  },\n\n  /**\n   * Dispose\n   */\n  dispose: function () {\n    this.proxy.dispose();\n    this.storage = this.proxy = this.painter = null;\n  },\n\n  /**\n   * 设置默认的cursor style\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(cursorStyle);\n  },\n\n  /**\n   * 事件分发代理\n   *\n   * @private\n   * @param {Object} targetInfo {target, topTarget} 目标图形元素\n   * @param {string} eventName 事件名称\n   * @param {Object} event 事件对象\n   */\n  dispatchToElement: function (targetInfo, eventName, event) {\n    targetInfo = targetInfo || {};\n    var el = targetInfo.target;\n\n    if (el && el.silent) {\n      return;\n    }\n\n    var eventHandler = 'on' + eventName;\n    var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n    while (el) {\n      el[eventHandler] && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n      el.trigger(eventName, eventPacket);\n      el = el.parent;\n\n      if (eventPacket.cancelBubble) {\n        break;\n      }\n    }\n\n    if (!eventPacket.cancelBubble) {\n      // 冒泡到顶级 zrender 对象\n      this.trigger(eventName, eventPacket); // 分发事件到用户自定义层\n      // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n\n      this.painter && this.painter.eachOtherLayer(function (layer) {\n        if (typeof layer[eventHandler] == 'function') {\n          layer[eventHandler].call(layer, eventPacket);\n        }\n\n        if (layer.trigger) {\n          layer.trigger(eventName, eventPacket);\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   * @param {number} x\n   * @param {number} y\n   * @param {module:zrender/graphic/Displayable} exclude\n   * @return {model:zrender/Element}\n   * @method\n   */\n  findHover: function (x, y, exclude) {\n    var list = this.storage.getDisplayList();\n    var out = {\n      x: x,\n      y: y\n    };\n\n    for (var i = list.length - 1; i >= 0; i--) {\n      var hoverCheckResult;\n\n      if (list[i] !== exclude // getDisplayList may include ignored item in VML mode\n      && !list[i].ignore && (hoverCheckResult = isHover(list[i], x, y))) {\n        !out.topTarget && (out.topTarget = list[i]);\n\n        if (hoverCheckResult !== SILENT) {\n          out.target = list[i];\n          break;\n        }\n      }\n    }\n\n    return out;\n  }\n}; // Common handlers\n\nutil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  Handler.prototype[name] = function (event) {\n    // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n    var hovered = this.findHover(event.zrX, event.zrY);\n    var hoveredTarget = hovered.target;\n\n    if (name === 'mousedown') {\n      this._downEl = hoveredTarget;\n      this._downPoint = [event.zrX, event.zrY]; // In case click triggered before mouseup\n\n      this._upEl = hoveredTarget;\n    } else if (name === 'mosueup') {\n      this._upEl = hoveredTarget;\n    } else if (name === 'click') {\n      if (this._downEl !== this._upEl // Original click event is triggered on the whole canvas element,\n      // including the case that `mousedown` - `mousemove` - `mouseup`,\n      // which should be filtered, otherwise it will bring trouble to\n      // pan and zoom.\n      || !this._downPoint // Arbitrary value\n      || vec2.dist(this._downPoint, [event.zrX, event.zrY]) > 4) {\n        return;\n      }\n\n      this._downPoint = null;\n    }\n\n    this.dispatchToElement(hovered, name, event);\n  };\n});\n\nfunction isHover(displayable, x, y) {\n  if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n    var el = displayable;\n    var isSilent;\n\n    while (el) {\n      // If clipped by ancestor.\n      // FIXME: If clipPath has neither stroke nor fill,\n      // el.clipPath.contain(x, y) will always return false.\n      if (el.clipPath && !el.clipPath.contain(x, y)) {\n        return false;\n      }\n\n      if (el.silent) {\n        isSilent = true;\n      }\n\n      el = el.parent;\n    }\n\n    return isSilent ? SILENT : true;\n  }\n\n  return false;\n}\n\nutil.mixin(Handler, Eventful);\nutil.mixin(Handler, Draggable);\nvar _default = Handler;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/Handler.js\n// module id = 1139\n// module chunks = 0 1 2","// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\nfunction Draggable() {\n  this.on('mousedown', this._dragStart, this);\n  this.on('mousemove', this._drag, this);\n  this.on('mouseup', this._dragEnd, this);\n  this.on('globalout', this._dragEnd, this); // this._dropTarget = null;\n  // this._draggingTarget = null;\n  // this._x = 0;\n  // this._y = 0;\n}\n\nDraggable.prototype = {\n  constructor: Draggable,\n  _dragStart: function (e) {\n    var draggingTarget = e.target;\n\n    if (draggingTarget && draggingTarget.draggable) {\n      this._draggingTarget = draggingTarget;\n      draggingTarget.dragging = true;\n      this._x = e.offsetX;\n      this._y = e.offsetY;\n      this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n    }\n  },\n  _drag: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      var x = e.offsetX;\n      var y = e.offsetY;\n      var dx = x - this._x;\n      var dy = y - this._y;\n      this._x = x;\n      this._y = y;\n      draggingTarget.drift(dx, dy, e);\n      this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n      var dropTarget = this.findHover(x, y, draggingTarget).target;\n      var lastDropTarget = this._dropTarget;\n      this._dropTarget = dropTarget;\n\n      if (draggingTarget !== dropTarget) {\n        if (lastDropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n        }\n\n        if (dropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n        }\n      }\n    }\n  },\n  _dragEnd: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      draggingTarget.dragging = false;\n    }\n\n    this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n    if (this._dropTarget) {\n      this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n    }\n\n    this._draggingTarget = null;\n    this._dropTarget = null;\n  }\n};\n\nfunction param(target, e) {\n  return {\n    target: target,\n    topTarget: e && e.topTarget\n  };\n}\n\nvar _default = Draggable;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/mixin/Draggable.js\n// module id = 1140\n// module chunks = 0 1 2","var util = require(\"./core/util\");\n\nvar env = require(\"./core/env\");\n\nvar Group = require(\"./container/Group\");\n\nvar timsort = require(\"./core/timsort\");\n\n/**\n * Storage内容仓库模块\n * @module zrender/Storage\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @author errorrik (errorrik@gmail.com)\n * @author pissang (https://github.com/pissang/)\n */\n// Use timsort because in most case elements are partially sorted\n// https://jsfiddle.net/pissang/jr4x7mdm/8/\nfunction shapeCompareFunc(a, b) {\n  if (a.zlevel === b.zlevel) {\n    if (a.z === b.z) {\n      // if (a.z2 === b.z2) {\n      //     // FIXME Slow has renderidx compare\n      //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n      //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n      //     return a.__renderidx - b.__renderidx;\n      // }\n      return a.z2 - b.z2;\n    }\n\n    return a.z - b.z;\n  }\n\n  return a.zlevel - b.zlevel;\n}\n/**\n * 内容仓库 (M)\n * @alias module:zrender/Storage\n * @constructor\n */\n\n\nvar Storage = function () {\n  // jshint ignore:line\n  this._roots = [];\n  this._displayList = [];\n  this._displayListLen = 0;\n};\n\nStorage.prototype = {\n  constructor: Storage,\n\n  /**\n   * @param  {Function} cb\n   *\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._roots.length; i++) {\n      this._roots[i].traverse(cb, context);\n    }\n  },\n\n  /**\n   * 返回所有图形的绘制队列\n   * @param {boolean} [update=false] 是否在返回前更新该数组\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n   *\n   * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n   * @return {Array.<module:zrender/graphic/Displayable>}\n   */\n  getDisplayList: function (update, includeIgnore) {\n    includeIgnore = includeIgnore || false;\n\n    if (update) {\n      this.updateDisplayList(includeIgnore);\n    }\n\n    return this._displayList;\n  },\n\n  /**\n   * 更新图形的绘制队列。\n   * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n   * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n   */\n  updateDisplayList: function (includeIgnore) {\n    this._displayListLen = 0;\n    var roots = this._roots;\n    var displayList = this._displayList;\n\n    for (var i = 0, len = roots.length; i < len; i++) {\n      this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n    }\n\n    displayList.length = this._displayListLen; // for (var i = 0, len = displayList.length; i < len; i++) {\n    //     displayList[i].__renderidx = i;\n    // }\n    // displayList.sort(shapeCompareFunc);\n\n    env.canvasSupported && timsort(displayList, shapeCompareFunc);\n  },\n  _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n    if (el.ignore && !includeIgnore) {\n      return;\n    }\n\n    el.beforeUpdate();\n\n    if (el.__dirty) {\n      el.update();\n    }\n\n    el.afterUpdate();\n    var userSetClipPath = el.clipPath;\n\n    if (userSetClipPath) {\n      // FIXME 效率影响\n      if (clipPaths) {\n        clipPaths = clipPaths.slice();\n      } else {\n        clipPaths = [];\n      }\n\n      var currentClipPath = userSetClipPath;\n      var parentClipPath = el; // Recursively add clip path\n\n      while (currentClipPath) {\n        // clipPath 的变换是基于使用这个 clipPath 的元素\n        currentClipPath.parent = parentClipPath;\n        currentClipPath.updateTransform();\n        clipPaths.push(currentClipPath);\n        parentClipPath = currentClipPath;\n        currentClipPath = currentClipPath.clipPath;\n      }\n    }\n\n    if (el.isGroup) {\n      var children = el._children;\n\n      for (var i = 0; i < children.length; i++) {\n        var child = children[i]; // Force to mark as dirty if group is dirty\n        // FIXME __dirtyPath ?\n\n        if (el.__dirty) {\n          child.__dirty = true;\n        }\n\n        this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n      } // Mark group clean here\n\n\n      el.__dirty = false;\n    } else {\n      el.__clipPaths = clipPaths;\n      this._displayList[this._displayListLen++] = el;\n    }\n  },\n\n  /**\n   * 添加图形(Shape)或者组(Group)到根节点\n   * @param {module:zrender/Element} el\n   */\n  addRoot: function (el) {\n    if (el.__storage === this) {\n      return;\n    }\n\n    if (el instanceof Group) {\n      el.addChildrenToStorage(this);\n    }\n\n    this.addToStorage(el);\n\n    this._roots.push(el);\n  },\n\n  /**\n   * 删除指定的图形(Shape)或者组(Group)\n   * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n   */\n  delRoot: function (el) {\n    if (el == null) {\n      // 不指定el清空\n      for (var i = 0; i < this._roots.length; i++) {\n        var root = this._roots[i];\n\n        if (root instanceof Group) {\n          root.delChildrenFromStorage(this);\n        }\n      }\n\n      this._roots = [];\n      this._displayList = [];\n      this._displayListLen = 0;\n      return;\n    }\n\n    if (el instanceof Array) {\n      for (var i = 0, l = el.length; i < l; i++) {\n        this.delRoot(el[i]);\n      }\n\n      return;\n    }\n\n    var idx = util.indexOf(this._roots, el);\n\n    if (idx >= 0) {\n      this.delFromStorage(el);\n\n      this._roots.splice(idx, 1);\n\n      if (el instanceof Group) {\n        el.delChildrenFromStorage(this);\n      }\n    }\n  },\n  addToStorage: function (el) {\n    el.__storage = this;\n    el.dirty(false);\n    return this;\n  },\n  delFromStorage: function (el) {\n    if (el) {\n      el.__storage = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * 清空并且释放Storage\n   */\n  dispose: function () {\n    this._renderList = this._roots = null;\n  },\n  displayableSortFunc: shapeCompareFunc\n};\nvar _default = Storage;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/Storage.js\n// module id = 1141\n// module chunks = 0 1 2","var Animator = require(\"../animation/Animator\");\n\nvar log = require(\"../core/log\");\n\nvar _util = require(\"../core/util\");\n\nvar isString = _util.isString;\nvar isFunction = _util.isFunction;\nvar isObject = _util.isObject;\nvar isArrayLike = _util.isArrayLike;\nvar indexOf = _util.indexOf;\n\n/**\n * @alias modue:zrender/mixin/Animatable\n * @constructor\n */\nvar Animatable = function () {\n  /**\n   * @type {Array.<module:zrender/animation/Animator>}\n   * @readOnly\n   */\n  this.animators = [];\n};\n\nAnimatable.prototype = {\n  constructor: Animatable,\n\n  /**\n   * 动画\n   *\n   * @param {string} path The path to fetch value from object, like 'a.b.c'.\n   * @param {boolean} [loop] Whether to loop animation.\n   * @return {module:zrender/animation/Animator}\n   * @example:\n   *     el.animate('style', false)\n   *         .when(1000, {x: 10} )\n   *         .done(function(){ // Animation done })\n   *         .start()\n   */\n  animate: function (path, loop) {\n    var target;\n    var animatingShape = false;\n    var el = this;\n    var zr = this.__zr;\n\n    if (path) {\n      var pathSplitted = path.split('.');\n      var prop = el; // If animating shape\n\n      animatingShape = pathSplitted[0] === 'shape';\n\n      for (var i = 0, l = pathSplitted.length; i < l; i++) {\n        if (!prop) {\n          continue;\n        }\n\n        prop = prop[pathSplitted[i]];\n      }\n\n      if (prop) {\n        target = prop;\n      }\n    } else {\n      target = el;\n    }\n\n    if (!target) {\n      log('Property \"' + path + '\" is not existed in element ' + el.id);\n      return;\n    }\n\n    var animators = el.animators;\n    var animator = new Animator(target, loop);\n    animator.during(function (target) {\n      el.dirty(animatingShape);\n    }).done(function () {\n      // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n      animators.splice(indexOf(animators, animator), 1);\n    });\n    animators.push(animator); // If animate after added to the zrender\n\n    if (zr) {\n      zr.animation.addAnimator(animator);\n    }\n\n    return animator;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stopAnimation: function (forwardToLast) {\n    var animators = this.animators;\n    var len = animators.length;\n\n    for (var i = 0; i < len; i++) {\n      animators[i].stop(forwardToLast);\n    }\n\n    animators.length = 0;\n    return this;\n  },\n\n  /**\n   * Caution: this method will stop previous animation.\n   * So do not use this method to one element twice before\n   * animation starts, unless you know what you are doing.\n   * @param {Object} target\n   * @param {number} [time=500] Time in ms\n   * @param {string} [easing='linear']\n   * @param {number} [delay=0]\n   * @param {Function} [callback]\n   * @param {Function} [forceAnimate] Prevent stop animation and callback\n   *        immediently when target values are the same as current values.\n   *\n   * @example\n   *  // Animate position\n   *  el.animateTo({\n   *      position: [10, 10]\n   *  }, function () { // done })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n   *  el.animateTo({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100, 'cubicOut', function () { // done })\n   */\n  // TODO Return animation key\n  animateTo: function (target, time, delay, easing, callback, forceAnimate) {\n    // animateTo(target, time, easing, callback);\n    if (isString(delay)) {\n      callback = easing;\n      easing = delay;\n      delay = 0;\n    } // animateTo(target, time, delay, callback);\n    else if (isFunction(easing)) {\n        callback = easing;\n        easing = 'linear';\n        delay = 0;\n      } // animateTo(target, time, callback);\n      else if (isFunction(delay)) {\n          callback = delay;\n          delay = 0;\n        } // animateTo(target, callback)\n        else if (isFunction(time)) {\n            callback = time;\n            time = 500;\n          } // animateTo(target)\n          else if (!time) {\n              time = 500;\n            } // Stop all previous animations\n\n\n    this.stopAnimation();\n\n    this._animateToShallow('', this, target, time, delay); // Animators may be removed immediately after start\n    // if there is nothing to animate\n\n\n    var animators = this.animators.slice();\n    var count = animators.length;\n\n    function done() {\n      count--;\n\n      if (!count) {\n        callback && callback();\n      }\n    } // No animators. This should be checked before animators[i].start(),\n    // because 'done' may be executed immediately if no need to animate.\n\n\n    if (!count) {\n      callback && callback();\n    } // Start after all animators created\n    // Incase any animator is done immediately when all animation properties are not changed\n\n\n    for (var i = 0; i < animators.length; i++) {\n      animators[i].done(done).start(easing, forceAnimate);\n    }\n  },\n\n  /**\n   * @private\n   * @param {string} path=''\n   * @param {Object} source=this\n   * @param {Object} target\n   * @param {number} [time=500]\n   * @param {number} [delay=0]\n   *\n   * @example\n   *  // Animate position\n   *  el._animateToShallow({\n   *      position: [10, 10]\n   *  })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms\n   *  el._animateToShallow({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100)\n   */\n  _animateToShallow: function (path, source, target, time, delay) {\n    var objShallow = {};\n    var propertyCount = 0;\n\n    for (var name in target) {\n      if (!target.hasOwnProperty(name)) {\n        continue;\n      }\n\n      if (source[name] != null) {\n        if (isObject(target[name]) && !isArrayLike(target[name])) {\n          this._animateToShallow(path ? path + '.' + name : name, source[name], target[name], time, delay);\n        } else {\n          objShallow[name] = target[name];\n          propertyCount++;\n        }\n      } else if (target[name] != null) {\n        // Attr directly if not has property\n        // FIXME, if some property not needed for element ?\n        if (!path) {\n          this.attr(name, target[name]);\n        } else {\n          // Shape or style\n          var props = {};\n          props[path] = {};\n          props[path][name] = target[name];\n          this.attr(props);\n        }\n      }\n    }\n\n    if (propertyCount > 0) {\n      this.animate(path, false).when(time == null ? 500 : time, objShallow).delay(delay || 0);\n    }\n\n    return this;\n  }\n};\nvar _default = Animatable;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/mixin/Animatable.js\n// module id = 1142\n// module chunks = 0 1 2","var easingFuncs = require(\"./easing\");\n\n/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\nfunction Clip(options) {\n  this._target = options.target; // 生命周期\n\n  this._life = options.life || 1000; // 延时\n\n  this._delay = options.delay || 0; // 开始时间\n  // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n\n  this._initialized = false; // 是否循环\n\n  this.loop = options.loop == null ? false : options.loop;\n  this.gap = options.gap || 0;\n  this.easing = options.easing || 'Linear';\n  this.onframe = options.onframe;\n  this.ondestroy = options.ondestroy;\n  this.onrestart = options.onrestart;\n  this._pausedTime = 0;\n  this._paused = false;\n}\n\nClip.prototype = {\n  constructor: Clip,\n  step: function (globalTime, deltaTime) {\n    // Set startTime on first step, or _startTime may has milleseconds different between clips\n    // PENDING\n    if (!this._initialized) {\n      this._startTime = globalTime + this._delay;\n      this._initialized = true;\n    }\n\n    if (this._paused) {\n      this._pausedTime += deltaTime;\n      return;\n    }\n\n    var percent = (globalTime - this._startTime - this._pausedTime) / this._life; // 还没开始\n\n    if (percent < 0) {\n      return;\n    }\n\n    percent = Math.min(percent, 1);\n    var easing = this.easing;\n    var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n    var schedule = typeof easingFunc === 'function' ? easingFunc(percent) : percent;\n    this.fire('frame', schedule); // 结束\n\n    if (percent == 1) {\n      if (this.loop) {\n        this.restart(globalTime); // 重新开始周期\n        // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n\n        return 'restart';\n      } // 动画完成将这个控制器标识为待删除\n      // 在Animation.update中进行批量删除\n\n\n      this._needsRemove = true;\n      return 'destroy';\n    }\n\n    return null;\n  },\n  restart: function (globalTime) {\n    var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n    this._startTime = globalTime - remainder + this.gap;\n    this._pausedTime = 0;\n    this._needsRemove = false;\n  },\n  fire: function (eventType, arg) {\n    eventType = 'on' + eventType;\n\n    if (this[eventType]) {\n      this[eventType](this._target, arg);\n    }\n  },\n  pause: function () {\n    this._paused = true;\n  },\n  resume: function () {\n    this._paused = false;\n  }\n};\nvar _default = Clip;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/animation/Clip.js\n// module id = 1143\n// module chunks = 0 1 2","/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\nvar easing = {\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  linear: function (k) {\n    return k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticIn: function (k) {\n    return k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticOut: function (k) {\n    return k * (2 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k;\n    }\n\n    return -0.5 * (--k * (k - 2) - 1);\n  },\n  // 三次方的缓动（t^3）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicIn: function (k) {\n    return k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicOut: function (k) {\n    return --k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k + 2);\n  },\n  // 四次方的缓动（t^4）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticIn: function (k) {\n    return k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticOut: function (k) {\n    return 1 - --k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k;\n    }\n\n    return -0.5 * ((k -= 2) * k * k * k - 2);\n  },\n  // 五次方的缓动（t^5）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticIn: function (k) {\n    return k * k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticOut: function (k) {\n    return --k * k * k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k * k * k + 2);\n  },\n  // 正弦曲线的缓动（sin(t)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalIn: function (k) {\n    return 1 - Math.cos(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalOut: function (k) {\n    return Math.sin(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalInOut: function (k) {\n    return 0.5 * (1 - Math.cos(Math.PI * k));\n  },\n  // 指数曲线的缓动（2^t）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialIn: function (k) {\n    return k === 0 ? 0 : Math.pow(1024, k - 1);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialOut: function (k) {\n    return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialInOut: function (k) {\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if ((k *= 2) < 1) {\n      return 0.5 * Math.pow(1024, k - 1);\n    }\n\n    return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n  },\n  // 圆形曲线的缓动（sqrt(1-t^2)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularIn: function (k) {\n    return 1 - Math.sqrt(1 - k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularOut: function (k) {\n    return Math.sqrt(1 - --k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return -0.5 * (Math.sqrt(1 - k * k) - 1);\n    }\n\n    return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n  },\n  // 创建类似于弹簧在停止前来回振荡的动画\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticIn: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return -(a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return a * Math.pow(2, -10 * k) * Math.sin((k - s) * (2 * Math.PI) / p) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticInOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    if ((k *= 2) < 1) {\n      return -0.5 * (a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n    }\n\n    return a * Math.pow(2, -10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n  },\n  // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backIn: function (k) {\n    var s = 1.70158;\n    return k * k * ((s + 1) * k - s);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backOut: function (k) {\n    var s = 1.70158;\n    return --k * k * ((s + 1) * k + s) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backInOut: function (k) {\n    var s = 1.70158 * 1.525;\n\n    if ((k *= 2) < 1) {\n      return 0.5 * (k * k * ((s + 1) * k - s));\n    }\n\n    return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n  },\n  // 创建弹跳效果\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceIn: function (k) {\n    return 1 - easing.bounceOut(1 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceOut: function (k) {\n    if (k < 1 / 2.75) {\n      return 7.5625 * k * k;\n    } else if (k < 2 / 2.75) {\n      return 7.5625 * (k -= 1.5 / 2.75) * k + 0.75;\n    } else if (k < 2.5 / 2.75) {\n      return 7.5625 * (k -= 2.25 / 2.75) * k + 0.9375;\n    } else {\n      return 7.5625 * (k -= 2.625 / 2.75) * k + 0.984375;\n    }\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceInOut: function (k) {\n    if (k < 0.5) {\n      return easing.bounceIn(k * 2) * 0.5;\n    }\n\n    return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n  }\n};\nvar _default = easing;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/animation/easing.js\n// module id = 1144\n// module chunks = 0 1 2","var _config = require(\"./config\");\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar util = require(\"./core/util\");\n\nvar log = require(\"./core/log\");\n\nvar BoundingRect = require(\"./core/BoundingRect\");\n\nvar timsort = require(\"./core/timsort\");\n\nvar Layer = require(\"./Layer\");\n\nvar requestAnimationFrame = require(\"./animation/requestAnimationFrame\");\n\nvar Image = require(\"./graphic/Image\");\n\n/**\n * Default canvas painter\n * @module zrender/Painter\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n// PENDIGN\n// Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.\n//\n// Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.\nvar MAX_PROGRESSIVE_LAYER_NUMBER = 5;\n\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n\nfunction isLayerValid(layer) {\n  if (!layer) {\n    return false;\n  }\n\n  if (layer.__builtin__) {\n    return true;\n  }\n\n  if (typeof layer.resize !== 'function' || typeof layer.refresh !== 'function') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction preProcessLayer(layer) {\n  layer.__unusedCount++;\n}\n\nfunction postProcessLayer(layer) {\n  if (layer.__unusedCount == 1) {\n    layer.clear();\n  }\n}\n\nvar tmpRect = new BoundingRect(0, 0, 0, 0);\nvar viewRect = new BoundingRect(0, 0, 0, 0);\n\nfunction isDisplayableCulled(el, width, height) {\n  tmpRect.copy(el.getBoundingRect());\n\n  if (el.transform) {\n    tmpRect.applyTransform(el.transform);\n  }\n\n  viewRect.width = width;\n  viewRect.height = height;\n  return !tmpRect.intersect(viewRect);\n}\n\nfunction isClipPathChanged(clipPaths, prevClipPaths) {\n  if (clipPaths == prevClipPaths) {\n    // Can both be null or undefined\n    return false;\n  }\n\n  if (!clipPaths || !prevClipPaths || clipPaths.length !== prevClipPaths.length) {\n    return true;\n  }\n\n  for (var i = 0; i < clipPaths.length; i++) {\n    if (clipPaths[i] !== prevClipPaths[i]) {\n      return true;\n    }\n  }\n}\n\nfunction doClip(clipPaths, ctx) {\n  for (var i = 0; i < clipPaths.length; i++) {\n    var clipPath = clipPaths[i];\n    clipPath.setTransform(ctx);\n    ctx.beginPath();\n    clipPath.buildPath(ctx, clipPath.shape);\n    ctx.clip(); // Transform back\n\n    clipPath.restoreTransform(ctx);\n  }\n}\n\nfunction createRoot(width, height) {\n  var domRoot = document.createElement('div'); // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n  domRoot.style.cssText = ['position:relative', 'overflow:hidden', 'width:' + width + 'px', 'height:' + height + 'px', 'padding:0', 'margin:0', 'border-width:0'].join(';') + ';';\n  return domRoot;\n}\n/**\n * @alias module:zrender/Painter\n * @constructor\n * @param {HTMLElement} root 绘图容器\n * @param {module:zrender/Storage} storage\n * @param {Object} opts\n */\n\n\nvar Painter = function (root, storage, opts) {\n  this.type = 'canvas'; // In node environment using node-canvas\n\n  var singleCanvas = !root.nodeName // In node ?\n  || root.nodeName.toUpperCase() === 'CANVAS';\n  this._opts = opts = util.extend({}, opts || {});\n  /**\n   * @type {number}\n   */\n\n  this.dpr = opts.devicePixelRatio || devicePixelRatio;\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._singleCanvas = singleCanvas;\n  /**\n   * 绘图容器\n   * @type {HTMLElement}\n   */\n\n  this.root = root;\n  var rootStyle = root.style;\n\n  if (rootStyle) {\n    rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n    rootStyle['-webkit-user-select'] = rootStyle['user-select'] = rootStyle['-webkit-touch-callout'] = 'none';\n    root.innerHTML = '';\n  }\n  /**\n   * @type {module:zrender/Storage}\n   */\n\n\n  this.storage = storage;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  var zlevelList = this._zlevelList = [];\n  /**\n   * @type {Object.<string, module:zrender/Layer>}\n   * @private\n   */\n\n  var layers = this._layers = {};\n  /**\n   * @type {Object.<string, Object>}\n   * @type {private}\n   */\n\n  this._layerConfig = {};\n\n  if (!singleCanvas) {\n    this._width = this._getSize(0);\n    this._height = this._getSize(1);\n    var domRoot = this._domRoot = createRoot(this._width, this._height);\n    root.appendChild(domRoot);\n  } else {\n    if (opts.width != null) {\n      root.width = opts.width;\n    }\n\n    if (opts.height != null) {\n      root.height = opts.height;\n    } // Use canvas width and height directly\n\n\n    var width = root.width;\n    var height = root.height;\n    this._width = width;\n    this._height = height; // Create layer if only one given canvas\n    // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n\n    var mainLayer = new Layer(root, this, 1);\n    mainLayer.initContext(); // FIXME Use canvas width and height\n    // mainLayer.resize(width, height);\n\n    layers[0] = mainLayer;\n    zlevelList.push(0);\n    this._domRoot = root;\n  } // Layers for progressive rendering\n\n\n  this._progressiveLayers = [];\n  /**\n   * @type {module:zrender/Layer}\n   * @private\n   */\n\n  this._hoverlayer;\n  this._hoverElements = [];\n};\n\nPainter.prototype = {\n  constructor: Painter,\n  getType: function () {\n    return 'canvas';\n  },\n\n  /**\n   * If painter use a single canvas\n   * @return {boolean}\n   */\n  isSingleCanvas: function () {\n    return this._singleCanvas;\n  },\n\n  /**\n   * @return {HTMLDivElement}\n   */\n  getViewportRoot: function () {\n    return this._domRoot;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n\n  /**\n   * 刷新\n   * @param {boolean} [paintAll=false] 强制绘制所有displayable\n   */\n  refresh: function (paintAll) {\n    var list = this.storage.getDisplayList(true);\n    var zlevelList = this._zlevelList;\n\n    this._paintList(list, paintAll); // Paint custum layers\n\n\n    for (var i = 0; i < zlevelList.length; i++) {\n      var z = zlevelList[i];\n      var layer = this._layers[z];\n\n      if (!layer.__builtin__ && layer.refresh) {\n        layer.refresh();\n      }\n    }\n\n    this.refreshHover();\n\n    if (this._progressiveLayers.length) {\n      this._startProgessive();\n    }\n\n    return this;\n  },\n  addHover: function (el, hoverStyle) {\n    if (el.__hoverMir) {\n      return;\n    }\n\n    var elMirror = new el.constructor({\n      style: el.style,\n      shape: el.shape\n    });\n    elMirror.__from = el;\n    el.__hoverMir = elMirror;\n    elMirror.setStyle(hoverStyle);\n\n    this._hoverElements.push(elMirror);\n  },\n  removeHover: function (el) {\n    var elMirror = el.__hoverMir;\n    var hoverElements = this._hoverElements;\n    var idx = util.indexOf(hoverElements, elMirror);\n\n    if (idx >= 0) {\n      hoverElements.splice(idx, 1);\n    }\n\n    el.__hoverMir = null;\n  },\n  clearHover: function (el) {\n    var hoverElements = this._hoverElements;\n\n    for (var i = 0; i < hoverElements.length; i++) {\n      var from = hoverElements[i].__from;\n\n      if (from) {\n        from.__hoverMir = null;\n      }\n    }\n\n    hoverElements.length = 0;\n  },\n  refreshHover: function () {\n    var hoverElements = this._hoverElements;\n    var len = hoverElements.length;\n    var hoverLayer = this._hoverlayer;\n    hoverLayer && hoverLayer.clear();\n\n    if (!len) {\n      return;\n    }\n\n    timsort(hoverElements, this.storage.displayableSortFunc); // Use a extream large zlevel\n    // FIXME?\n\n    if (!hoverLayer) {\n      hoverLayer = this._hoverlayer = this.getLayer(1e5);\n    }\n\n    var scope = {};\n    hoverLayer.ctx.save();\n\n    for (var i = 0; i < len;) {\n      var el = hoverElements[i];\n      var originalEl = el.__from; // Original el is removed\n      // PENDING\n\n      if (!(originalEl && originalEl.__zr)) {\n        hoverElements.splice(i, 1);\n        originalEl.__hoverMir = null;\n        len--;\n        continue;\n      }\n\n      i++; // Use transform\n      // FIXME style and shape ?\n\n      if (!originalEl.invisible) {\n        el.transform = originalEl.transform;\n        el.invTransform = originalEl.invTransform;\n        el.__clipPaths = originalEl.__clipPaths; // el.\n\n        this._doPaintEl(el, hoverLayer, true, scope);\n      }\n    }\n\n    hoverLayer.ctx.restore();\n  },\n  _startProgessive: function () {\n    var self = this;\n\n    if (!self._furtherProgressive) {\n      return;\n    } // Use a token to stop progress steps triggered by\n    // previous zr.refresh calling.\n\n\n    var token = self._progressiveToken = +new Date();\n    self._progress++;\n    requestAnimationFrame(step);\n\n    function step() {\n      // In case refreshed or disposed\n      if (token === self._progressiveToken && self.storage) {\n        self._doPaintList(self.storage.getDisplayList());\n\n        if (self._furtherProgressive) {\n          self._progress++;\n          requestAnimationFrame(step);\n        } else {\n          self._progressiveToken = -1;\n        }\n      }\n    }\n  },\n  _clearProgressive: function () {\n    this._progressiveToken = -1;\n    this._progress = 0;\n    util.each(this._progressiveLayers, function (layer) {\n      layer.__dirty && layer.clear();\n    });\n  },\n  _paintList: function (list, paintAll) {\n    if (paintAll == null) {\n      paintAll = false;\n    }\n\n    this._updateLayerStatus(list);\n\n    this._clearProgressive();\n\n    this.eachBuiltinLayer(preProcessLayer);\n\n    this._doPaintList(list, paintAll);\n\n    this.eachBuiltinLayer(postProcessLayer);\n  },\n  _doPaintList: function (list, paintAll) {\n    var currentLayer;\n    var currentZLevel;\n    var ctx; // var invTransform = [];\n\n    var scope;\n    var progressiveLayerIdx = 0;\n    var currentProgressiveLayer;\n    var width = this._width;\n    var height = this._height;\n    var layerProgress;\n    var frame = this._progress;\n\n    function flushProgressiveLayer(layer) {\n      var dpr = ctx.dpr || 1;\n      ctx.save();\n      ctx.globalAlpha = 1;\n      ctx.shadowBlur = 0; // Avoid layer don't clear in next progressive frame\n\n      currentLayer.__dirty = true;\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\n      ctx.drawImage(layer.dom, 0, 0, width * dpr, height * dpr);\n      ctx.restore();\n    }\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      var el = list[i];\n      var elZLevel = this._singleCanvas ? 0 : el.zlevel;\n      var elFrame = el.__frame; // Flush at current context\n      // PENDING\n\n      if (elFrame < 0 && currentProgressiveLayer) {\n        flushProgressiveLayer(currentProgressiveLayer);\n        currentProgressiveLayer = null;\n      } // Change draw layer\n\n\n      if (currentZLevel !== elZLevel) {\n        if (ctx) {\n          ctx.restore();\n        } // Reset scope\n\n\n        scope = {}; // Only 0 zlevel if only has one canvas\n\n        currentZLevel = elZLevel;\n        currentLayer = this.getLayer(currentZLevel);\n\n        if (!currentLayer.__builtin__) {\n          log('ZLevel ' + currentZLevel + ' has been used by unkown layer ' + currentLayer.id);\n        }\n\n        ctx = currentLayer.ctx;\n        ctx.save(); // Reset the count\n\n        currentLayer.__unusedCount = 0;\n\n        if (currentLayer.__dirty || paintAll) {\n          currentLayer.clear();\n        }\n      }\n\n      if (!(currentLayer.__dirty || paintAll)) {\n        continue;\n      }\n\n      if (elFrame >= 0) {\n        // Progressive layer changed\n        if (!currentProgressiveLayer) {\n          currentProgressiveLayer = this._progressiveLayers[Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)];\n          currentProgressiveLayer.ctx.save();\n          currentProgressiveLayer.renderScope = {};\n\n          if (currentProgressiveLayer && currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress) {\n            // flushProgressiveLayer(currentProgressiveLayer);\n            // Quick jump all progressive elements\n            // All progressive element are not dirty, jump over and flush directly\n            i = currentProgressiveLayer.__nextIdxNotProg - 1; // currentProgressiveLayer = null;\n\n            continue;\n          }\n\n          layerProgress = currentProgressiveLayer.__progress;\n\n          if (!currentProgressiveLayer.__dirty) {\n            // Keep rendering\n            frame = layerProgress;\n          }\n\n          currentProgressiveLayer.__progress = frame + 1;\n        }\n\n        if (elFrame === frame) {\n          this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);\n        }\n      } else {\n        this._doPaintEl(el, currentLayer, paintAll, scope);\n      }\n\n      el.__dirty = false;\n    }\n\n    if (currentProgressiveLayer) {\n      flushProgressiveLayer(currentProgressiveLayer);\n    } // Restore the lastLayer ctx\n\n\n    ctx && ctx.restore(); // If still has clipping state\n    // if (scope.prevElClipPaths) {\n    //     ctx.restore();\n    // }\n\n    this._furtherProgressive = false;\n    util.each(this._progressiveLayers, function (layer) {\n      if (layer.__maxProgress >= layer.__progress) {\n        this._furtherProgressive = true;\n      }\n    }, this);\n  },\n  _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n    var ctx = currentLayer.ctx;\n    var m = el.transform;\n\n    if ((currentLayer.__dirty || forcePaint) && // Ignore invisible element\n    !el.invisible // Ignore transparent element\n    && el.style.opacity !== 0 // Ignore scale 0 element, in some environment like node-canvas\n    // Draw a scale 0 element can cause all following draw wrong\n    // And setTransform with scale 0 will cause set back transform failed.\n    && !(m && !m[0] && !m[3]) // Ignore culled element\n    && !(el.culling && isDisplayableCulled(el, this._width, this._height))) {\n      var clipPaths = el.__clipPaths; // Optimize when clipping on group with several elements\n\n      if (scope.prevClipLayer !== currentLayer || isClipPathChanged(clipPaths, scope.prevElClipPaths)) {\n        // If has previous clipping state, restore from it\n        if (scope.prevElClipPaths) {\n          scope.prevClipLayer.ctx.restore();\n          scope.prevClipLayer = scope.prevElClipPaths = null; // Reset prevEl since context has been restored\n\n          scope.prevEl = null;\n        } // New clipping state\n\n\n        if (clipPaths) {\n          ctx.save();\n          doClip(clipPaths, ctx);\n          scope.prevClipLayer = currentLayer;\n          scope.prevElClipPaths = clipPaths;\n        }\n      }\n\n      el.beforeBrush && el.beforeBrush(ctx);\n      el.brush(ctx, scope.prevEl || null);\n      scope.prevEl = el;\n      el.afterBrush && el.afterBrush(ctx);\n    }\n  },\n\n  /**\n   * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n   * @param {number} zlevel\n   * @return {module:zrender/Layer}\n   */\n  getLayer: function (zlevel) {\n    if (this._singleCanvas) {\n      return this._layers[0];\n    }\n\n    var layer = this._layers[zlevel];\n\n    if (!layer) {\n      // Create a new layer\n      layer = new Layer('zr_' + zlevel, this, this.dpr);\n      layer.__builtin__ = true;\n\n      if (this._layerConfig[zlevel]) {\n        util.merge(layer, this._layerConfig[zlevel], true);\n      }\n\n      this.insertLayer(zlevel, layer); // Context is created after dom inserted to document\n      // Or excanvas will get 0px clientWidth and clientHeight\n\n      layer.initContext();\n    }\n\n    return layer;\n  },\n  insertLayer: function (zlevel, layer) {\n    var layersMap = this._layers;\n    var zlevelList = this._zlevelList;\n    var len = zlevelList.length;\n    var prevLayer = null;\n    var i = -1;\n    var domRoot = this._domRoot;\n\n    if (layersMap[zlevel]) {\n      log('ZLevel ' + zlevel + ' has been used already');\n      return;\n    } // Check if is a valid layer\n\n\n    if (!isLayerValid(layer)) {\n      log('Layer of zlevel ' + zlevel + ' is not valid');\n      return;\n    }\n\n    if (len > 0 && zlevel > zlevelList[0]) {\n      for (i = 0; i < len - 1; i++) {\n        if (zlevelList[i] < zlevel && zlevelList[i + 1] > zlevel) {\n          break;\n        }\n      }\n\n      prevLayer = layersMap[zlevelList[i]];\n    }\n\n    zlevelList.splice(i + 1, 0, zlevel);\n    layersMap[zlevel] = layer; // Vitual layer will not directly show on the screen.\n    // (It can be a WebGL layer and assigned to a ZImage element)\n    // But it still under management of zrender.\n\n    if (!layer.virtual) {\n      if (prevLayer) {\n        var prevDom = prevLayer.dom;\n\n        if (prevDom.nextSibling) {\n          domRoot.insertBefore(layer.dom, prevDom.nextSibling);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      } else {\n        if (domRoot.firstChild) {\n          domRoot.insertBefore(layer.dom, domRoot.firstChild);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      }\n    }\n  },\n  // Iterate each layer\n  eachLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      cb.call(context, this._layers[z], z);\n    }\n  },\n  // Iterate each buildin layer\n  eachBuiltinLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n  // Iterate each other layer except buildin layer\n  eachOtherLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (!layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n\n  /**\n   * 获取所有已创建的层\n   * @param {Array.<module:zrender/Layer>} [prevLayer]\n   */\n  getLayers: function () {\n    return this._layers;\n  },\n  _updateLayerStatus: function (list) {\n    var layers = this._layers;\n    var progressiveLayers = this._progressiveLayers;\n    var elCountsLastFrame = {};\n    var progressiveElCountsLastFrame = {};\n    this.eachBuiltinLayer(function (layer, z) {\n      elCountsLastFrame[z] = layer.elCount;\n      layer.elCount = 0;\n      layer.__dirty = false;\n    });\n    util.each(progressiveLayers, function (layer, idx) {\n      progressiveElCountsLastFrame[idx] = layer.elCount;\n      layer.elCount = 0;\n      layer.__dirty = false;\n    });\n    var progressiveLayerCount = 0;\n    var currentProgressiveLayer;\n    var lastProgressiveKey;\n    var frameCount = 0;\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      var el = list[i];\n      var zlevel = this._singleCanvas ? 0 : el.zlevel;\n      var layer = layers[zlevel];\n      var elProgress = el.progressive;\n\n      if (layer) {\n        layer.elCount++;\n        layer.__dirty = layer.__dirty || el.__dirty;\n      } /////// Update progressive\n\n\n      if (elProgress >= 0) {\n        // Fix wrong progressive sequence problem.\n        if (lastProgressiveKey !== elProgress) {\n          lastProgressiveKey = elProgress;\n          frameCount++;\n        }\n\n        var elFrame = el.__frame = frameCount - 1;\n\n        if (!currentProgressiveLayer) {\n          var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);\n          currentProgressiveLayer = progressiveLayers[idx];\n\n          if (!currentProgressiveLayer) {\n            currentProgressiveLayer = progressiveLayers[idx] = new Layer('progressive', this, this.dpr);\n            currentProgressiveLayer.initContext();\n          }\n\n          currentProgressiveLayer.__maxProgress = 0;\n        }\n\n        currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;\n        currentProgressiveLayer.elCount++;\n        currentProgressiveLayer.__maxProgress = Math.max(currentProgressiveLayer.__maxProgress, elFrame);\n\n        if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {\n          // Should keep rendering this  layer because progressive rendering is not finished yet\n          layer.__dirty = true;\n        }\n      } else {\n        el.__frame = -1;\n\n        if (currentProgressiveLayer) {\n          currentProgressiveLayer.__nextIdxNotProg = i;\n          progressiveLayerCount++;\n          currentProgressiveLayer = null;\n        }\n      }\n    }\n\n    if (currentProgressiveLayer) {\n      progressiveLayerCount++;\n      currentProgressiveLayer.__nextIdxNotProg = i;\n    } // 层中的元素数量有发生变化\n\n\n    this.eachBuiltinLayer(function (layer, z) {\n      if (elCountsLastFrame[z] !== layer.elCount) {\n        layer.__dirty = true;\n      }\n    });\n    progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);\n    util.each(progressiveLayers, function (layer, idx) {\n      if (progressiveElCountsLastFrame[idx] !== layer.elCount) {\n        el.__dirty = true;\n      }\n\n      if (layer.__dirty) {\n        layer.__progress = 0;\n      }\n    });\n  },\n\n  /**\n   * 清除hover层外所有内容\n   */\n  clear: function () {\n    this.eachBuiltinLayer(this._clearLayer);\n    return this;\n  },\n  _clearLayer: function (layer) {\n    layer.clear();\n  },\n\n  /**\n   * 修改指定zlevel的绘制参数\n   *\n   * @param {string} zlevel\n   * @param {Object} config 配置对象\n   * @param {string} [config.clearColor=0] 每次清空画布的颜色\n   * @param {string} [config.motionBlur=false] 是否开启动态模糊\n   * @param {number} [config.lastFrameAlpha=0.7]\n   *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   */\n  configLayer: function (zlevel, config) {\n    if (config) {\n      var layerConfig = this._layerConfig;\n\n      if (!layerConfig[zlevel]) {\n        layerConfig[zlevel] = config;\n      } else {\n        util.merge(layerConfig[zlevel], config, true);\n      }\n\n      var layer = this._layers[zlevel];\n\n      if (layer) {\n        util.merge(layer, layerConfig[zlevel], true);\n      }\n    }\n  },\n\n  /**\n   * 删除指定层\n   * @param {number} zlevel 层所在的zlevel\n   */\n  delLayer: function (zlevel) {\n    var layers = this._layers;\n    var zlevelList = this._zlevelList;\n    var layer = layers[zlevel];\n\n    if (!layer) {\n      return;\n    }\n\n    layer.dom.parentNode.removeChild(layer.dom);\n    delete layers[zlevel];\n    zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n  },\n\n  /**\n   * 区域大小变化后重绘\n   */\n  resize: function (width, height) {\n    var domRoot = this._domRoot; // FIXME Why ?\n\n    domRoot.style.display = 'none'; // Save input w/h\n\n    var opts = this._opts;\n    width != null && (opts.width = width);\n    height != null && (opts.height = height);\n    width = this._getSize(0);\n    height = this._getSize(1);\n    domRoot.style.display = ''; // 优化没有实际改变的resize\n\n    if (this._width != width || height != this._height) {\n      domRoot.style.width = width + 'px';\n      domRoot.style.height = height + 'px';\n\n      for (var id in this._layers) {\n        if (this._layers.hasOwnProperty(id)) {\n          this._layers[id].resize(width, height);\n        }\n      }\n\n      util.each(this._progressiveLayers, function (layer) {\n        layer.resize(width, height);\n      });\n      this.refresh(true);\n    }\n\n    this._width = width;\n    this._height = height;\n    return this;\n  },\n\n  /**\n   * 清除单独的一个层\n   * @param {number} zlevel\n   */\n  clearLayer: function (zlevel) {\n    var layer = this._layers[zlevel];\n\n    if (layer) {\n      layer.clear();\n    }\n  },\n\n  /**\n   * 释放\n   */\n  dispose: function () {\n    this.root.innerHTML = '';\n    this.root = this.storage = this._domRoot = this._layers = null;\n  },\n\n  /**\n   * Get canvas which has all thing rendered\n   * @param {Object} opts\n   * @param {string} [opts.backgroundColor]\n   * @param {number} [opts.pixelRatio]\n   */\n  getRenderedCanvas: function (opts) {\n    opts = opts || {};\n\n    if (this._singleCanvas) {\n      return this._layers[0].dom;\n    }\n\n    var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n    imageLayer.initContext();\n    imageLayer.clearColor = opts.backgroundColor;\n    imageLayer.clear();\n    var displayList = this.storage.getDisplayList(true);\n    var scope = {};\n    var zlevel;\n    var self = this;\n\n    function findAndDrawOtherLayer(smaller, larger) {\n      var zlevelList = self._zlevelList;\n\n      if (smaller == null) {\n        smaller = -Infinity;\n      }\n\n      var intermediateLayer;\n\n      for (var i = 0; i < zlevelList.length; i++) {\n        var z = zlevelList[i];\n        var layer = self._layers[z];\n\n        if (!layer.__builtin__ && z > smaller && z < larger) {\n          intermediateLayer = layer;\n          break;\n        }\n      }\n\n      if (intermediateLayer && intermediateLayer.renderToCanvas) {\n        imageLayer.ctx.save();\n        intermediateLayer.renderToCanvas(imageLayer.ctx);\n        imageLayer.ctx.restore();\n      }\n    }\n\n    for (var i = 0; i < displayList.length; i++) {\n      var el = displayList[i];\n\n      if (el.zlevel !== zlevel) {\n        findAndDrawOtherLayer(zlevel, el.zlevel);\n        zlevel = el.zlevel;\n      }\n\n      this._doPaintEl(el, imageLayer, true, scope);\n    }\n\n    findAndDrawOtherLayer(zlevel, Infinity);\n    return imageLayer.dom;\n  },\n\n  /**\n   * 获取绘图区域宽度\n   */\n  getWidth: function () {\n    return this._width;\n  },\n\n  /**\n   * 获取绘图区域高度\n   */\n  getHeight: function () {\n    return this._height;\n  },\n  _getSize: function (whIdx) {\n    var opts = this._opts;\n    var wh = ['width', 'height'][whIdx];\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n    if (opts[wh] != null && opts[wh] !== 'auto') {\n      return parseFloat(opts[wh]);\n    }\n\n    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.\n\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n  },\n  pathToImage: function (path, dpr) {\n    dpr = dpr || this.dpr;\n    var canvas = document.createElement('canvas');\n    var ctx = canvas.getContext('2d');\n    var rect = path.getBoundingRect();\n    var style = path.style;\n    var shadowBlurSize = style.shadowBlur;\n    var shadowOffsetX = style.shadowOffsetX;\n    var shadowOffsetY = style.shadowOffsetY;\n    var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n    var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n    var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n    var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n    var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n    var width = rect.width + leftMargin + rightMargin;\n    var height = rect.height + topMargin + bottomMargin;\n    canvas.width = width * dpr;\n    canvas.height = height * dpr;\n    ctx.scale(dpr, dpr);\n    ctx.clearRect(0, 0, width, height);\n    ctx.dpr = dpr;\n    var pathTransform = {\n      position: path.position,\n      rotation: path.rotation,\n      scale: path.scale\n    };\n    path.position = [leftMargin - rect.x, topMargin - rect.y];\n    path.rotation = 0;\n    path.scale = [1, 1];\n    path.updateTransform();\n\n    if (path) {\n      path.brush(ctx);\n    }\n\n    var ImageShape = Image;\n    var imgShape = new ImageShape({\n      style: {\n        x: 0,\n        y: 0,\n        image: canvas\n      }\n    });\n\n    if (pathTransform.position != null) {\n      imgShape.position = path.position = pathTransform.position;\n    }\n\n    if (pathTransform.rotation != null) {\n      imgShape.rotation = path.rotation = pathTransform.rotation;\n    }\n\n    if (pathTransform.scale != null) {\n      imgShape.scale = path.scale = pathTransform.scale;\n    }\n\n    return imgShape;\n  }\n};\nvar _default = Painter;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/Painter.js\n// module id = 1145\n// module chunks = 0 1 2","var util = require(\"./core/util\");\n\nvar _config = require(\"./config\");\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar Style = require(\"./graphic/Style\");\n\nvar Pattern = require(\"./graphic/Pattern\");\n\n/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\nfunction returnFalse() {\n  return false;\n}\n/**\n * 创建dom\n *\n * @inner\n * @param {string} id dom id 待用\n * @param {Painter} painter painter instance\n * @param {number} number\n */\n\n\nfunction createDom(id, painter, dpr) {\n  var newDom = util.createCanvas();\n  var width = painter.getWidth();\n  var height = painter.getHeight();\n  var newDomStyle = newDom.style; // 没append呢，请原谅我这样写，清晰~\n\n  newDomStyle.position = 'absolute';\n  newDomStyle.left = 0;\n  newDomStyle.top = 0;\n  newDomStyle.width = width + 'px';\n  newDomStyle.height = height + 'px';\n  newDom.width = width * dpr;\n  newDom.height = height * dpr; // id不作为索引用，避免可能造成的重名，定义为私有属性\n\n  newDom.setAttribute('data-zr-dom-id', id);\n  return newDom;\n}\n/**\n * @alias module:zrender/Layer\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @param {string} id\n * @param {module:zrender/Painter} painter\n * @param {number} [dpr]\n */\n\n\nvar Layer = function (id, painter, dpr) {\n  var dom;\n  dpr = dpr || devicePixelRatio;\n\n  if (typeof id === 'string') {\n    dom = createDom(id, painter, dpr);\n  } // Not using isDom because in node it will return false\n  else if (util.isObject(id)) {\n      dom = id;\n      id = dom.id;\n    }\n\n  this.id = id;\n  this.dom = dom;\n  var domStyle = dom.style;\n\n  if (domStyle) {\n    // Not in node\n    dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n    domStyle['-webkit-user-select'] = 'none';\n    domStyle['user-select'] = 'none';\n    domStyle['-webkit-touch-callout'] = 'none';\n    domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n    domStyle['padding'] = 0;\n    domStyle['margin'] = 0;\n    domStyle['border-width'] = 0;\n  }\n\n  this.domBack = null;\n  this.ctxBack = null;\n  this.painter = painter;\n  this.config = null; // Configs\n\n  /**\n   * 每次清空画布的颜色\n   * @type {string}\n   * @default 0\n   */\n\n  this.clearColor = 0;\n  /**\n   * 是否开启动态模糊\n   * @type {boolean}\n   * @default false\n   */\n\n  this.motionBlur = false;\n  /**\n   * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   * @type {number}\n   * @default 0.7\n   */\n\n  this.lastFrameAlpha = 0.7;\n  /**\n   * Layer dpr\n   * @type {number}\n   */\n\n  this.dpr = dpr;\n};\n\nLayer.prototype = {\n  constructor: Layer,\n  elCount: 0,\n  __dirty: true,\n  initContext: function () {\n    this.ctx = this.dom.getContext('2d');\n    this.ctx.__currentValues = {};\n    this.ctx.dpr = this.dpr;\n  },\n  createBackBuffer: function () {\n    var dpr = this.dpr;\n    this.domBack = createDom('back-' + this.id, this.painter, dpr);\n    this.ctxBack = this.domBack.getContext('2d');\n    this.ctxBack.__currentValues = {};\n\n    if (dpr != 1) {\n      this.ctxBack.scale(dpr, dpr);\n    }\n  },\n\n  /**\n   * @param  {number} width\n   * @param  {number} height\n   */\n  resize: function (width, height) {\n    var dpr = this.dpr;\n    var dom = this.dom;\n    var domStyle = dom.style;\n    var domBack = this.domBack;\n    domStyle.width = width + 'px';\n    domStyle.height = height + 'px';\n    dom.width = width * dpr;\n    dom.height = height * dpr;\n\n    if (domBack) {\n      domBack.width = width * dpr;\n      domBack.height = height * dpr;\n\n      if (dpr != 1) {\n        this.ctxBack.scale(dpr, dpr);\n      }\n    }\n  },\n\n  /**\n   * 清空该层画布\n   * @param {boolean} clearAll Clear all with out motion blur\n   */\n  clear: function (clearAll) {\n    var dom = this.dom;\n    var ctx = this.ctx;\n    var width = dom.width;\n    var height = dom.height;\n    var clearColor = this.clearColor;\n    var haveMotionBLur = this.motionBlur && !clearAll;\n    var lastFrameAlpha = this.lastFrameAlpha;\n    var dpr = this.dpr;\n\n    if (haveMotionBLur) {\n      if (!this.domBack) {\n        this.createBackBuffer();\n      }\n\n      this.ctxBack.globalCompositeOperation = 'copy';\n      this.ctxBack.drawImage(dom, 0, 0, width / dpr, height / dpr);\n    }\n\n    ctx.clearRect(0, 0, width, height);\n\n    if (clearColor) {\n      var clearColorGradientOrPattern; // Gradient\n\n      if (clearColor.colorStops) {\n        // Cache canvas gradient\n        clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n          x: 0,\n          y: 0,\n          width: width,\n          height: height\n        });\n        clearColor.__canvasGradient = clearColorGradientOrPattern;\n      } // Pattern\n      else if (clearColor.image) {\n          clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n        }\n\n      ctx.save();\n      ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    if (haveMotionBLur) {\n      var domBack = this.domBack;\n      ctx.save();\n      ctx.globalAlpha = lastFrameAlpha;\n      ctx.drawImage(domBack, 0, 0, width, height);\n      ctx.restore();\n    }\n  }\n};\nvar _default = Layer;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/Layer.js\n// module id = 1146\n// module chunks = 0 1 2","var util = require(\"../core/util\");\n\nvar _event = require(\"../core/event\");\n\nvar Dispatcher = _event.Dispatcher;\n\nvar requestAnimationFrame = require(\"./requestAnimationFrame\");\n\nvar Animator = require(\"./Animator\");\n\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n/**\n * @typedef {Object} IZRenderStage\n * @property {Function} update\n */\n\n/**\n * @alias module:zrender/animation/Animation\n * @constructor\n * @param {Object} [options]\n * @param {Function} [options.onframe]\n * @param {IZRenderStage} [options.stage]\n * @example\n *     var animation = new Animation();\n *     var obj = {\n *         x: 100,\n *         y: 100\n *     };\n *     animation.animate(node.position)\n *         .when(1000, {\n *             x: 500,\n *             y: 500\n *         })\n *         .when(2000, {\n *             x: 100,\n *             y: 100\n *         })\n *         .start('spline');\n */\nvar Animation = function (options) {\n  options = options || {};\n  this.stage = options.stage || {};\n\n  this.onframe = options.onframe || function () {}; // private properties\n\n\n  this._clips = [];\n  this._running = false;\n  this._time;\n  this._pausedTime;\n  this._pauseStart;\n  this._paused = false;\n  Dispatcher.call(this);\n};\n\nAnimation.prototype = {\n  constructor: Animation,\n\n  /**\n   * 添加 clip\n   * @param {module:zrender/animation/Clip} clip\n   */\n  addClip: function (clip) {\n    this._clips.push(clip);\n  },\n\n  /**\n   * 添加 animator\n   * @param {module:zrender/animation/Animator} animator\n   */\n  addAnimator: function (animator) {\n    animator.animation = this;\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.addClip(clips[i]);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Clip} clip\n   */\n  removeClip: function (clip) {\n    var idx = util.indexOf(this._clips, clip);\n\n    if (idx >= 0) {\n      this._clips.splice(idx, 1);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Animator} animator\n   */\n  removeAnimator: function (animator) {\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.removeClip(clips[i]);\n    }\n\n    animator.animation = null;\n  },\n  _update: function () {\n    var time = new Date().getTime() - this._pausedTime;\n\n    var delta = time - this._time;\n    var clips = this._clips;\n    var len = clips.length;\n    var deferredEvents = [];\n    var deferredClips = [];\n\n    for (var i = 0; i < len; i++) {\n      var clip = clips[i];\n      var e = clip.step(time, delta); // Throw out the events need to be called after\n      // stage.update, like destroy\n\n      if (e) {\n        deferredEvents.push(e);\n        deferredClips.push(clip);\n      }\n    } // Remove the finished clip\n\n\n    for (var i = 0; i < len;) {\n      if (clips[i]._needsRemove) {\n        clips[i] = clips[len - 1];\n        clips.pop();\n        len--;\n      } else {\n        i++;\n      }\n    }\n\n    len = deferredEvents.length;\n\n    for (var i = 0; i < len; i++) {\n      deferredClips[i].fire(deferredEvents[i]);\n    }\n\n    this._time = time;\n    this.onframe(delta);\n    this.trigger('frame', delta);\n\n    if (this.stage.update) {\n      this.stage.update();\n    }\n  },\n  _startLoop: function () {\n    var self = this;\n    this._running = true;\n\n    function step() {\n      if (self._running) {\n        requestAnimationFrame(step);\n        !self._paused && self._update();\n      }\n    }\n\n    requestAnimationFrame(step);\n  },\n\n  /**\n   * 开始运行动画\n   */\n  start: function () {\n    this._time = new Date().getTime();\n    this._pausedTime = 0;\n\n    this._startLoop();\n  },\n\n  /**\n   * 停止运行动画\n   */\n  stop: function () {\n    this._running = false;\n  },\n\n  /**\n   * Pause\n   */\n  pause: function () {\n    if (!this._paused) {\n      this._pauseStart = new Date().getTime();\n      this._paused = true;\n    }\n  },\n\n  /**\n   * Resume\n   */\n  resume: function () {\n    if (this._paused) {\n      this._pausedTime += new Date().getTime() - this._pauseStart;\n      this._paused = false;\n    }\n  },\n\n  /**\n   * 清除所有动画片段\n   */\n  clear: function () {\n    this._clips = [];\n  },\n\n  /**\n   * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n   * @param  {Object} target\n   * @param  {Object} options\n   * @param  {boolean} [options.loop=false] 是否循环播放动画\n   * @param  {Function} [options.getter=null]\n   *         如果指定getter函数，会通过getter函数取属性值\n   * @param  {Function} [options.setter=null]\n   *         如果指定setter函数，会通过setter函数设置属性值\n   * @return {module:zrender/animation/Animation~Animator}\n   */\n  // TODO Gap\n  animate: function (target, options) {\n    options = options || {};\n    var animator = new Animator(target, options.loop, options.getter, options.setter);\n    this.addAnimator(animator);\n    return animator;\n  }\n};\nutil.mixin(Animation, Dispatcher);\nvar _default = Animation;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/animation/Animation.js\n// module id = 1147\n// module chunks = 0 1 2","var _event = require(\"../core/event\");\n\nvar addEventListener = _event.addEventListener;\nvar removeEventListener = _event.removeEventListener;\nvar normalizeEvent = _event.normalizeEvent;\n\nvar zrUtil = require(\"../core/util\");\n\nvar Eventful = require(\"../mixin/Eventful\");\n\nvar env = require(\"../core/env\");\n\nvar GestureMgr = require(\"../core/GestureMgr\");\n\nvar TOUCH_CLICK_DELAY = 300;\nvar mouseHandlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\nvar touchHandlerNames = ['touchstart', 'touchend', 'touchmove'];\nvar pointerEventNames = {\n  pointerdown: 1,\n  pointerup: 1,\n  pointermove: 1,\n  pointerout: 1\n};\nvar pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n  var nm = name.replace('mouse', 'pointer');\n  return pointerEventNames[nm] ? nm : name;\n});\n\nfunction eventNameFix(name) {\n  return name === 'mousewheel' && env.browser.firefox ? 'DOMMouseScroll' : name;\n}\n\nfunction processGesture(proxy, event, stage) {\n  var gestureMgr = proxy._gestureMgr;\n  stage === 'start' && gestureMgr.clear();\n  var gestureInfo = gestureMgr.recognize(event, proxy.handler.findHover(event.zrX, event.zrY, null).target, proxy.dom);\n  stage === 'end' && gestureMgr.clear(); // Do not do any preventDefault here. Upper application do that if necessary.\n\n  if (gestureInfo) {\n    var type = gestureInfo.type;\n    event.gestureEvent = type;\n    proxy.handler.dispatchToElement({\n      target: gestureInfo.target\n    }, type, gestureInfo.event);\n  }\n} // function onMSGestureChange(proxy, event) {\n//     if (event.translationX || event.translationY) {\n//         // mousemove is carried by MSGesture to reduce the sensitivity.\n//         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n//     }\n//     if (event.scale !== 1) {\n//         event.pinchX = event.offsetX;\n//         event.pinchY = event.offsetY;\n//         event.pinchScale = event.scale;\n//         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n//     }\n// }\n\n/**\n * Prevent mouse event from being dispatched after Touch Events action\n * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n * Result: Blocking Mouse Events for 700ms.\n */\n\n\nfunction setTouchTimer(instance) {\n  instance._touching = true;\n  clearTimeout(instance._touchTimer);\n  instance._touchTimer = setTimeout(function () {\n    instance._touching = false;\n  }, 700);\n}\n\nvar domHandlers = {\n  /**\n   * Mouse move handler\n   * @inner\n   * @param {Event} event\n   */\n  mousemove: function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger('mousemove', event);\n  },\n\n  /**\n   * Mouse out handler\n   * @inner\n   * @param {Event} event\n   */\n  mouseout: function (event) {\n    event = normalizeEvent(this.dom, event);\n    var element = event.toElement || event.relatedTarget;\n\n    if (element != this.dom) {\n      while (element && element.nodeType != 9) {\n        // 忽略包含在root中的dom引起的mouseOut\n        if (element === this.dom) {\n          return;\n        }\n\n        element = element.parentNode;\n      }\n    }\n\n    this.trigger('mouseout', event);\n  },\n\n  /**\n   * Touch开始响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchstart: function (event) {\n    // Default mouse behaviour should not be disabled here.\n    // For example, page may needs to be slided.\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    this._lastTouchMoment = new Date();\n    processGesture(this, event, 'start'); // In touch device, trigger `mousemove`(`mouseover`) should\n    // be triggered, and must before `mousedown` triggered.\n\n    domHandlers.mousemove.call(this, event);\n    domHandlers.mousedown.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch移动响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchmove: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'change'); // Mouse move should always be triggered no matter whether\n    // there is gestrue event, because mouse move and pinch may\n    // be used at the same time.\n\n    domHandlers.mousemove.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch结束响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchend: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'end');\n    domHandlers.mouseup.call(this, event); // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n    // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n    // we can conveniently implement \"hover style\" in both PC and touch device just\n    // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n    // to remove \"hover style\" on an element, without any additional code for\n    // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n    // style\" will remain for user view)\n    // click event should always be triggered no matter whether\n    // there is gestrue event. System click can not be prevented.\n\n    if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n      domHandlers.click.call(this, event);\n    }\n\n    setTouchTimer(this);\n  },\n  pointerdown: function (event) {\n    domHandlers.mousedown.call(this, event); // if (useMSGuesture(this, event)) {\n    //     this._msGesture.addPointer(event.pointerId);\n    // }\n  },\n  pointermove: function (event) {\n    // FIXME\n    // pointermove is so sensitive that it always triggered when\n    // tap(click) on touch screen, which affect some judgement in\n    // upper application. So, we dont support mousemove on MS touch\n    // device yet.\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mousemove.call(this, event);\n    }\n  },\n  pointerup: function (event) {\n    domHandlers.mouseup.call(this, event);\n  },\n  pointerout: function (event) {\n    // pointerout will be triggered when tap on touch screen\n    // (IE11+/Edge on MS Surface) after click event triggered,\n    // which is inconsistent with the mousout behavior we defined\n    // in touchend. So we unify them.\n    // (check domHandlers.touchend for detailed explanation)\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mouseout.call(this, event);\n    }\n  }\n};\n\nfunction isPointerFromTouch(event) {\n  var pointerType = event.pointerType;\n  return pointerType === 'pen' || pointerType === 'touch';\n} // function useMSGuesture(handlerProxy, event) {\n//     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n// }\n// Common handlers\n\n\nzrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  domHandlers[name] = function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger(name, event);\n  };\n});\n/**\n * 为控制类实例初始化dom 事件处理函数\n *\n * @inner\n * @param {module:zrender/Handler} instance 控制类实例\n */\n\nfunction initDomHandler(instance) {\n  zrUtil.each(touchHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(pointerHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(mouseHandlerNames, function (name) {\n    instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n  });\n\n  function makeMouseHandler(fn, instance) {\n    return function () {\n      if (instance._touching) {\n        return;\n      }\n\n      return fn.apply(instance, arguments);\n    };\n  }\n}\n\nfunction HandlerDomProxy(dom) {\n  Eventful.call(this);\n  this.dom = dom;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._touching = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._touchTimer;\n  /**\n   * @private\n   * @type {module:zrender/core/GestureMgr}\n   */\n\n  this._gestureMgr = new GestureMgr();\n  this._handlers = {};\n  initDomHandler(this);\n\n  if (env.pointerEventsSupported) {\n    // Only IE11+/Edge\n    // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n    // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n    // at the same time.\n    // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n    // screen, which do not occurs in pointer event.\n    // So we use pointer event to both detect touch gesture and mouse behavior.\n    mountHandlers(pointerHandlerNames, this); // FIXME\n    // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n    // which does not prevent defuault behavior occasionally (which may cause view port\n    // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n    // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n    // touch screen. And we only support click behavior on MS touch screen now.\n    // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n    // We dont support touch on IE on win7.\n    // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n    // if (typeof MSGesture === 'function') {\n    //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n    //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n    // }\n  } else {\n    if (env.touchEventsSupported) {\n      mountHandlers(touchHandlerNames, this); // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n      // addEventListener(root, 'mouseout', this._mouseoutHandler);\n    } // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n    // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n    // mouse event can not be handle in those devices.\n    // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n    // mouseevent after touch event triggered, see `setTouchTimer`.\n\n\n    mountHandlers(mouseHandlerNames, this);\n  }\n\n  function mountHandlers(handlerNames, instance) {\n    zrUtil.each(handlerNames, function (name) {\n      addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n    }, instance);\n  }\n}\n\nvar handlerDomProxyProto = HandlerDomProxy.prototype;\n\nhandlerDomProxyProto.dispose = function () {\n  var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n  for (var i = 0; i < handlerNames.length; i++) {\n    var name = handlerNames[i];\n    removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n  }\n};\n\nhandlerDomProxyProto.setCursor = function (cursorStyle) {\n  this.dom.style.cursor = cursorStyle || 'default';\n};\n\nzrUtil.mixin(HandlerDomProxy, Eventful);\nvar _default = HandlerDomProxy;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/dom/HandlerProxy.js\n// module id = 1148\n// module chunks = 0 1 2","var eventUtil = require(\"./event\");\n\n/**\n * Only implements needed gestures for mobile.\n */\nvar GestureMgr = function () {\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n  this._track = [];\n};\n\nGestureMgr.prototype = {\n  constructor: GestureMgr,\n  recognize: function (event, target, root) {\n    this._doTrack(event, target, root);\n\n    return this._recognize(event);\n  },\n  clear: function () {\n    this._track.length = 0;\n    return this;\n  },\n  _doTrack: function (event, target, root) {\n    var touches = event.touches;\n\n    if (!touches) {\n      return;\n    }\n\n    var trackItem = {\n      points: [],\n      touches: [],\n      target: target,\n      event: event\n    };\n\n    for (var i = 0, len = touches.length; i < len; i++) {\n      var touch = touches[i];\n      var pos = eventUtil.clientToLocal(root, touch, {});\n      trackItem.points.push([pos.zrX, pos.zrY]);\n      trackItem.touches.push(touch);\n    }\n\n    this._track.push(trackItem);\n  },\n  _recognize: function (event) {\n    for (var eventName in recognizers) {\n      if (recognizers.hasOwnProperty(eventName)) {\n        var gestureInfo = recognizers[eventName](this._track, event);\n\n        if (gestureInfo) {\n          return gestureInfo;\n        }\n      }\n    }\n  }\n};\n\nfunction dist(pointPair) {\n  var dx = pointPair[1][0] - pointPair[0][0];\n  var dy = pointPair[1][1] - pointPair[0][1];\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\nfunction center(pointPair) {\n  return [(pointPair[0][0] + pointPair[1][0]) / 2, (pointPair[0][1] + pointPair[1][1]) / 2];\n}\n\nvar recognizers = {\n  pinch: function (track, event) {\n    var trackLen = track.length;\n\n    if (!trackLen) {\n      return;\n    }\n\n    var pinchEnd = (track[trackLen - 1] || {}).points;\n    var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n    if (pinchPre && pinchPre.length > 1 && pinchEnd && pinchEnd.length > 1) {\n      var pinchScale = dist(pinchEnd) / dist(pinchPre);\n      !isFinite(pinchScale) && (pinchScale = 1);\n      event.pinchScale = pinchScale;\n      var pinchCenter = center(pinchEnd);\n      event.pinchX = pinchCenter[0];\n      event.pinchY = pinchCenter[1];\n      return {\n        type: 'pinch',\n        target: track[0].target,\n        event: event\n      };\n    }\n  } // Only pinch currently.\n\n};\nvar _default = GestureMgr;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/GestureMgr.js\n// module id = 1149\n// module chunks = 0 1 2","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar Model = require(\"./Model\");\n\nvar ComponentModel = require(\"./Component\");\n\nvar globalDefault = require(\"./globalDefault\");\n\nvar colorPaletteMinin = require(\"./mixin/colorPalette\");\n\n/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n/**\n * Caution: If the mechanism should be changed some day, these cases\n * should be considered:\n *\n * (1) In `merge option` mode, if using the same option to call `setOption`\n * many times, the result should be the same (try our best to ensure that).\n * (2) In `merge option` mode, if a component has no id/name specified, it\n * will be merged by index, and the result sequence of the components is\n * consistent to the original sequence.\n * (3) `reset` feature (in toolbox). Find detailed info in comments about\n * `mergeOption` in module:echarts/model/OptionManager.\n */\nvar each = zrUtil.each;\nvar filter = zrUtil.filter;\nvar map = zrUtil.map;\nvar isArray = zrUtil.isArray;\nvar indexOf = zrUtil.indexOf;\nvar isObject = zrUtil.isObject;\nvar OPTION_INNER_KEY = '\\0_ec_inner';\n/**\n * @alias module:echarts/model/Global\n *\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {Object} theme\n */\n\nvar GlobalModel = Model.extend({\n  constructor: GlobalModel,\n  init: function (option, parentModel, theme, optionManager) {\n    theme = theme || {};\n    this.option = null; // Mark as not initialized.\n\n    /**\n     * @type {module:echarts/model/Model}\n     * @private\n     */\n\n    this._theme = new Model(theme);\n    /**\n     * @type {module:echarts/model/OptionManager}\n     */\n\n    this._optionManager = optionManager;\n  },\n  setOption: function (option, optionPreprocessorFuncs) {\n    zrUtil.assert(!(OPTION_INNER_KEY in option), 'please use chart.getOption()');\n\n    this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n    this.resetOption(null);\n  },\n\n  /**\n   * @param {string} type null/undefined: reset all.\n   *                      'recreate': force recreate all.\n   *                      'timeline': only reset timeline option\n   *                      'media': only reset media query option\n   * @return {boolean} Whether option changed.\n   */\n  resetOption: function (type) {\n    var optionChanged = false;\n    var optionManager = this._optionManager;\n\n    if (!type || type === 'recreate') {\n      var baseOption = optionManager.mountOption(type === 'recreate');\n\n      if (!this.option || type === 'recreate') {\n        initBase.call(this, baseOption);\n      } else {\n        this.restoreData();\n        this.mergeOption(baseOption);\n      }\n\n      optionChanged = true;\n    }\n\n    if (type === 'timeline' || type === 'media') {\n      this.restoreData();\n    }\n\n    if (!type || type === 'recreate' || type === 'timeline') {\n      var timelineOption = optionManager.getTimelineOption(this);\n      timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n    }\n\n    if (!type || type === 'recreate' || type === 'media') {\n      var mediaOptions = optionManager.getMediaOption(this, this._api);\n\n      if (mediaOptions.length) {\n        each(mediaOptions, function (mediaOption) {\n          this.mergeOption(mediaOption, optionChanged = true);\n        }, this);\n      }\n    }\n\n    return optionChanged;\n  },\n\n  /**\n   * @protected\n   */\n  mergeOption: function (newOption) {\n    var option = this.option;\n    var componentsMap = this._componentsMap;\n    var newCptTypes = []; // 如果不存在对应的 component model 则直接 merge\n\n    each(newOption, function (componentOption, mainType) {\n      if (componentOption == null) {\n        return;\n      }\n\n      if (!ComponentModel.hasClass(mainType)) {\n        option[mainType] = option[mainType] == null ? zrUtil.clone(componentOption) : zrUtil.merge(option[mainType], componentOption, true);\n      } else {\n        newCptTypes.push(mainType);\n      }\n    }); // FIXME OPTION 同步是否要改回原来的\n\n    ComponentModel.topologicalTravel(newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this);\n    this._seriesIndices = this._seriesIndices || [];\n\n    function visitComponent(mainType, dependencies) {\n      var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n      var mapResult = modelUtil.mappingToExists(componentsMap.get(mainType), newCptOptionList);\n      modelUtil.makeIdAndName(mapResult); // Set mainType and complete subType.\n\n      each(mapResult, function (item, index) {\n        var opt = item.option;\n\n        if (isObject(opt)) {\n          item.keyInfo.mainType = mainType;\n          item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n        }\n      });\n      var dependentModels = getComponentsByTypes(componentsMap, dependencies);\n      option[mainType] = [];\n      componentsMap.set(mainType, []);\n      each(mapResult, function (resultItem, index) {\n        var componentModel = resultItem.exist;\n        var newCptOption = resultItem.option;\n        zrUtil.assert(isObject(newCptOption) || componentModel, 'Empty component definition'); // Consider where is no new option and should be merged using {},\n        // see removeEdgeAndAdd in topologicalTravel and\n        // ComponentModel.getAllClassMainTypes.\n\n        if (!newCptOption) {\n          componentModel.mergeOption({}, this);\n          componentModel.optionUpdated({}, false);\n        } else {\n          var ComponentModelClass = ComponentModel.getClass(mainType, resultItem.keyInfo.subType, true);\n\n          if (componentModel && componentModel instanceof ComponentModelClass) {\n            componentModel.name = resultItem.keyInfo.name;\n            componentModel.mergeOption(newCptOption, this);\n            componentModel.optionUpdated(newCptOption, false);\n          } else {\n            // PENDING Global as parent ?\n            var extraOpt = zrUtil.extend({\n              dependentModels: dependentModels,\n              componentIndex: index\n            }, resultItem.keyInfo);\n            componentModel = new ComponentModelClass(newCptOption, this, this, extraOpt);\n            zrUtil.extend(componentModel, extraOpt);\n            componentModel.init(newCptOption, this, this, extraOpt); // Call optionUpdated after init.\n            // newCptOption has been used as componentModel.option\n            // and may be merged with theme and default, so pass null\n            // to avoid confusion.\n\n            componentModel.optionUpdated(null, true);\n          }\n        }\n\n        componentsMap.get(mainType)[index] = componentModel;\n        option[mainType][index] = componentModel.option;\n      }, this); // Backup series for filtering.\n\n      if (mainType === 'series') {\n        this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n      }\n    }\n  },\n\n  /**\n   * Get option for output (cloned option and inner info removed)\n   * @public\n   * @return {Object}\n   */\n  getOption: function () {\n    var option = zrUtil.clone(this.option);\n    each(option, function (opts, mainType) {\n      if (ComponentModel.hasClass(mainType)) {\n        var opts = modelUtil.normalizeToArray(opts);\n\n        for (var i = opts.length - 1; i >= 0; i--) {\n          // Remove options with inner id.\n          if (modelUtil.isIdInner(opts[i])) {\n            opts.splice(i, 1);\n          }\n        }\n\n        option[mainType] = opts;\n      }\n    });\n    delete option[OPTION_INNER_KEY];\n    return option;\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getTheme: function () {\n    return this._theme;\n  },\n\n  /**\n   * @param {string} mainType\n   * @param {number} [idx=0]\n   * @return {module:echarts/model/Component}\n   */\n  getComponent: function (mainType, idx) {\n    var list = this._componentsMap.get(mainType);\n\n    if (list) {\n      return list[idx || 0];\n    }\n  },\n\n  /**\n   * If none of index and id and name used, return all components with mainType.\n   * @param {Object} condition\n   * @param {string} condition.mainType\n   * @param {string} [condition.subType] If ignore, only query by mainType\n   * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  queryComponents: function (condition) {\n    var mainType = condition.mainType;\n\n    if (!mainType) {\n      return [];\n    }\n\n    var index = condition.index;\n    var id = condition.id;\n    var name = condition.name;\n\n    var cpts = this._componentsMap.get(mainType);\n\n    if (!cpts || !cpts.length) {\n      return [];\n    }\n\n    var result;\n\n    if (index != null) {\n      if (!isArray(index)) {\n        index = [index];\n      }\n\n      result = filter(map(index, function (idx) {\n        return cpts[idx];\n      }), function (val) {\n        return !!val;\n      });\n    } else if (id != null) {\n      var isIdArray = isArray(id);\n      result = filter(cpts, function (cpt) {\n        return isIdArray && indexOf(id, cpt.id) >= 0 || !isIdArray && cpt.id === id;\n      });\n    } else if (name != null) {\n      var isNameArray = isArray(name);\n      result = filter(cpts, function (cpt) {\n        return isNameArray && indexOf(name, cpt.name) >= 0 || !isNameArray && cpt.name === name;\n      });\n    } else {\n      // Return all components with mainType\n      result = cpts.slice();\n    }\n\n    return filterBySubType(result, condition);\n  },\n\n  /**\n   * The interface is different from queryComponents,\n   * which is convenient for inner usage.\n   *\n   * @usage\n   * var result = findComponents(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series'},\n   *     function (model, index) {...}\n   * );\n   * // result like [component0, componnet1, ...]\n   *\n   * @param {Object} condition\n   * @param {string} condition.mainType Mandatory.\n   * @param {string} [condition.subType] Optional.\n   * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n   *        where xxx is mainType.\n   *        If query attribute is null/undefined or has no index/id/name,\n   *        do not filtering by query conditions, which is convenient for\n   *        no-payload situations or when target of action is global.\n   * @param {Function} [condition.filter] parameter: component, return boolean.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  findComponents: function (condition) {\n    var query = condition.query;\n    var mainType = condition.mainType;\n    var queryCond = getQueryCond(query);\n    var result = queryCond ? this.queryComponents(queryCond) : this._componentsMap.get(mainType);\n    return doFilter(filterBySubType(result, condition));\n\n    function getQueryCond(q) {\n      var indexAttr = mainType + 'Index';\n      var idAttr = mainType + 'Id';\n      var nameAttr = mainType + 'Name';\n      return q && (q[indexAttr] != null || q[idAttr] != null || q[nameAttr] != null) ? {\n        mainType: mainType,\n        // subType will be filtered finally.\n        index: q[indexAttr],\n        id: q[idAttr],\n        name: q[nameAttr]\n      } : null;\n    }\n\n    function doFilter(res) {\n      return condition.filter ? filter(res, condition.filter) : res;\n    }\n  },\n\n  /**\n   * @usage\n   * eachComponent('legend', function (legendModel, index) {\n   *     ...\n   * });\n   * eachComponent(function (componentType, model, index) {\n   *     // componentType does not include subType\n   *     // (componentType is 'xxx' but not 'xxx.aa')\n   * });\n   * eachComponent(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n   *     function (model, index) {...}\n   * );\n   * eachComponent(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n   *     function (model, index) {...}\n   * );\n   *\n   * @param {string|Object=} mainType When mainType is object, the definition\n   *                                  is the same as the method 'findComponents'.\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachComponent: function (mainType, cb, context) {\n    var componentsMap = this._componentsMap;\n\n    if (typeof mainType === 'function') {\n      context = cb;\n      cb = mainType;\n      componentsMap.each(function (components, componentType) {\n        each(components, function (component, index) {\n          cb.call(context, componentType, component, index);\n        });\n      });\n    } else if (zrUtil.isString(mainType)) {\n      each(componentsMap.get(mainType), cb, context);\n    } else if (isObject(mainType)) {\n      var queryResult = this.findComponents(mainType);\n      each(queryResult, cb, context);\n    }\n  },\n\n  /**\n   * @param {string} name\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByName: function (name) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.name === name;\n    });\n  },\n\n  /**\n   * @param {number} seriesIndex\n   * @return {module:echarts/model/Series}\n   */\n  getSeriesByIndex: function (seriesIndex) {\n    return this._componentsMap.get('series')[seriesIndex];\n  },\n\n  /**\n   * @param {string} subType\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByType: function (subType) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.subType === subType;\n    });\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeries: function () {\n    return this._componentsMap.get('series').slice();\n  },\n\n  /**\n   * After filtering, series may be different\n   * frome raw series.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      cb.call(context, series, rawSeriesIndex);\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeries: function (cb, context) {\n    each(this._componentsMap.get('series'), cb, context);\n  },\n\n  /**\n   * After filtering, series may be different.\n   * frome raw series.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeriesByType: function (subType, cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      if (series.subType === subType) {\n        cb.call(context, series, rawSeriesIndex);\n      }\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered of given type.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeriesByType: function (subType, cb, context) {\n    return each(this.getSeriesByType(subType), cb, context);\n  },\n\n  /**\n   * @param {module:echarts/model/Series} seriesModel\n   */\n  isSeriesFiltered: function (seriesModel) {\n    assertSeriesInitialized(this);\n    return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getCurrentSeriesIndices: function () {\n    return (this._seriesIndices || []).slice();\n  },\n\n  /**\n   * @param {Function} cb\n   * @param {*} context\n   */\n  filterSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    var filteredSeries = filter(this._componentsMap.get('series'), cb, context);\n    this._seriesIndices = createSeriesIndices(filteredSeries);\n  },\n  restoreData: function () {\n    var componentsMap = this._componentsMap;\n    this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n    var componentTypes = [];\n    componentsMap.each(function (components, componentType) {\n      componentTypes.push(componentType);\n    });\n    ComponentModel.topologicalTravel(componentTypes, ComponentModel.getAllClassMainTypes(), function (componentType, dependencies) {\n      each(componentsMap.get(componentType), function (component) {\n        component.restoreData();\n      });\n    });\n  }\n});\n/**\n * @inner\n */\n\nfunction mergeTheme(option, theme) {\n  zrUtil.each(theme, function (themeItem, name) {\n    // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n    if (!ComponentModel.hasClass(name)) {\n      if (typeof themeItem === 'object') {\n        option[name] = !option[name] ? zrUtil.clone(themeItem) : zrUtil.merge(option[name], themeItem, false);\n      } else {\n        if (option[name] == null) {\n          option[name] = themeItem;\n        }\n      }\n    }\n  });\n}\n\nfunction initBase(baseOption) {\n  baseOption = baseOption; // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n  // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n\n  this.option = {};\n  this.option[OPTION_INNER_KEY] = 1;\n  /**\n   * Init with series: [], in case of calling findSeries method\n   * before series initialized.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @private\n   */\n\n  this._componentsMap = zrUtil.createHashMap({\n    series: []\n  });\n  /**\n   * Mapping between filtered series list and raw series list.\n   * key: filtered series indices, value: raw series indices.\n   * @type {Array.<nubmer>}\n   * @private\n   */\n\n  this._seriesIndices = null;\n  mergeTheme(baseOption, this._theme.option); // TODO Needs clone when merging to the unexisted property\n\n  zrUtil.merge(baseOption, globalDefault, false);\n  this.mergeOption(baseOption);\n}\n/**\n * @inner\n * @param {Array.<string>|string} types model types\n * @return {Object} key: {string} type, value: {Array.<Object>} models\n */\n\n\nfunction getComponentsByTypes(componentsMap, types) {\n  if (!zrUtil.isArray(types)) {\n    types = types ? [types] : [];\n  }\n\n  var ret = {};\n  each(types, function (type) {\n    ret[type] = (componentsMap.get(type) || []).slice();\n  });\n  return ret;\n}\n/**\n * @inner\n */\n\n\nfunction determineSubType(mainType, newCptOption, existComponent) {\n  var subType = newCptOption.type ? newCptOption.type : existComponent ? existComponent.subType // Use determineSubType only when there is no existComponent.\n  : ComponentModel.determineSubType(mainType, newCptOption); // tooltip, markline, markpoint may always has no subType\n\n  return subType;\n}\n/**\n * @inner\n */\n\n\nfunction createSeriesIndices(seriesModels) {\n  return map(seriesModels, function (series) {\n    return series.componentIndex;\n  }) || [];\n}\n/**\n * @inner\n */\n\n\nfunction filterBySubType(components, condition) {\n  // Using hasOwnProperty for restrict. Consider\n  // subType is undefined in user payload.\n  return condition.hasOwnProperty('subType') ? filter(components, function (cpt) {\n    return cpt.subType === condition.subType;\n  }) : components;\n}\n/**\n * @inner\n */\n\n\nfunction assertSeriesInitialized(ecModel) {}\n\nzrUtil.mixin(GlobalModel, colorPaletteMinin);\nvar _default = GlobalModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/Global.js\n// module id = 1150\n// module chunks = 0 1 2","var makeStyleMapper = require(\"./makeStyleMapper\");\n\nvar getLineStyle = makeStyleMapper([['lineWidth', 'width'], ['stroke', 'color'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\nvar _default = {\n  getLineStyle: function (excludes) {\n    var style = getLineStyle(this, excludes);\n    var lineDash = this.getLineDash(style.lineWidth);\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getLineDash: function (lineWidth) {\n    if (lineWidth == null) {\n      lineWidth = 1;\n    }\n\n    var lineType = this.get('type');\n    var dotSize = Math.max(lineWidth, 2);\n    var dashSize = lineWidth * 4;\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize];\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/mixin/lineStyle.js\n// module id = 1151\n// module chunks = 0 1 2","var makeStyleMapper = require(\"./makeStyleMapper\");\n\nvar getAreaStyle = makeStyleMapper([['fill', 'color'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['opacity'], ['shadowColor']]);\nvar _default = {\n  getAreaStyle: function (excludes, includes) {\n    return getAreaStyle(this, excludes, includes);\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/mixin/areaStyle.js\n// module id = 1152\n// module chunks = 0 1 2","var textContain = require(\"zrender/lib/contain/text\");\n\nvar graphicUtil = require(\"../../util/graphic\");\n\nvar PATH_COLOR = ['textStyle', 'color'];\nvar _default = {\n  /**\n   * Get color property or get color from option.textStyle.color\n   * @param {boolean} [isEmphasis]\n   * @return {string}\n   */\n  getTextColor: function (isEmphasis) {\n    var ecModel = this.ecModel;\n    return this.getShallow('color') || (!isEmphasis && ecModel ? ecModel.get(PATH_COLOR) : null);\n  },\n\n  /**\n   * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n   * @return {string}\n   */\n  getFont: function () {\n    return graphicUtil.getFont({\n      fontStyle: this.getShallow('fontStyle'),\n      fontWeight: this.getShallow('fontWeight'),\n      fontSize: this.getShallow('fontSize'),\n      fontFamily: this.getShallow('fontFamily')\n    }, this.ecModel);\n  },\n  getTextRect: function (text) {\n    return textContain.getBoundingRect(text, this.getFont(), this.getShallow('align'), this.getShallow('verticalAlign') || this.getShallow('baseline'), this.getShallow('padding'), this.getShallow('rich'), this.getShallow('truncateText'));\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/mixin/textStyle.js\n// module id = 1153\n// module chunks = 0 1 2","var Path = require(\"../graphic/Path\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar transformPath = require(\"./transformPath\");\n\n// command chars\nvar cc = ['m', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z', 'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'];\nvar mathSqrt = Math.sqrt;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI = Math.PI;\n\nvar vMag = function (v) {\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n};\n\nvar vRatio = function (u, v) {\n  return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n};\n\nvar vAngle = function (u, v) {\n  return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n};\n\nfunction processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n  var psi = psiDeg * (PI / 180.0);\n  var xp = mathCos(psi) * (x1 - x2) / 2.0 + mathSin(psi) * (y1 - y2) / 2.0;\n  var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0 + mathCos(psi) * (y1 - y2) / 2.0;\n  var lambda = xp * xp / (rx * rx) + yp * yp / (ry * ry);\n\n  if (lambda > 1) {\n    rx *= mathSqrt(lambda);\n    ry *= mathSqrt(lambda);\n  }\n\n  var f = (fa === fs ? -1 : 1) * mathSqrt((rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) / (rx * rx * (yp * yp) + ry * ry * (xp * xp))) || 0;\n  var cxp = f * rx * yp / ry;\n  var cyp = f * -ry * xp / rx;\n  var cx = (x1 + x2) / 2.0 + mathCos(psi) * cxp - mathSin(psi) * cyp;\n  var cy = (y1 + y2) / 2.0 + mathSin(psi) * cxp + mathCos(psi) * cyp;\n  var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n  var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n  var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n  var dTheta = vAngle(u, v);\n\n  if (vRatio(u, v) <= -1) {\n    dTheta = PI;\n  }\n\n  if (vRatio(u, v) >= 1) {\n    dTheta = 0;\n  }\n\n  if (fs === 0 && dTheta > 0) {\n    dTheta = dTheta - 2 * PI;\n  }\n\n  if (fs === 1 && dTheta < 0) {\n    dTheta = dTheta + 2 * PI;\n  }\n\n  path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n}\n\nfunction createPathProxyFromString(data) {\n  if (!data) {\n    return [];\n  } // command string\n\n\n  var cs = data.replace(/-/g, ' -').replace(/  /g, ' ').replace(/ /g, ',').replace(/,,/g, ',');\n  var n; // create pipes so that we can split the data\n\n  for (n = 0; n < cc.length; n++) {\n    cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n  } // create array\n\n\n  var arr = cs.split('|'); // init context point\n\n  var cpx = 0;\n  var cpy = 0;\n  var path = new PathProxy();\n  var CMD = PathProxy.CMD;\n  var prevCmd;\n\n  for (n = 1; n < arr.length; n++) {\n    var str = arr[n];\n    var c = str.charAt(0);\n    var off = 0;\n    var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n    var cmd;\n\n    if (p.length > 0 && p[0] === '') {\n      p.shift();\n    }\n\n    for (var i = 0; i < p.length; i++) {\n      p[i] = parseFloat(p[i]);\n    }\n\n    while (off < p.length && !isNaN(p[off])) {\n      if (isNaN(p[0])) {\n        break;\n      }\n\n      var ctlPtx;\n      var ctlPty;\n      var rx;\n      var ry;\n      var psi;\n      var fa;\n      var fs;\n      var x1 = cpx;\n      var y1 = cpy; // convert l, H, h, V, and v to L\n\n      switch (c) {\n        case 'l':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'L':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'm':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'l';\n          break;\n\n        case 'M':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'L';\n          break;\n\n        case 'h':\n          cpx += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'H':\n          cpx = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'v':\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'V':\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'C':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]);\n          cpx = p[off - 2];\n          cpy = p[off - 1];\n          break;\n\n        case 'c':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy);\n          cpx += p[off - 2];\n          cpy += p[off - 1];\n          break;\n\n        case 'S':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 's':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = cpx + p[off++];\n          y1 = cpy + p[off++];\n          cpx += p[off++];\n          cpy += p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 'Q':\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'q':\n          x1 = p[off++] + cpx;\n          y1 = p[off++] + cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'T':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 't':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 'A':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n\n        case 'a':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n      }\n    }\n\n    if (c === 'z' || c === 'Z') {\n      cmd = CMD.Z;\n      path.addData(cmd);\n    }\n\n    prevCmd = cmd;\n  }\n\n  path.toStatic();\n  return path;\n} // TODO Optimize double memory cost problem\n\n\nfunction createPathOptions(str, opts) {\n  var pathProxy = createPathProxyFromString(str);\n  opts = opts || {};\n\n  opts.buildPath = function (path) {\n    if (path.setData) {\n      path.setData(pathProxy.data); // Svg and vml renderer don't have context\n\n      var ctx = path.getContext();\n\n      if (ctx) {\n        path.rebuildPath(ctx);\n      }\n    } else {\n      var ctx = path;\n      pathProxy.rebuildPath(ctx);\n    }\n  };\n\n  opts.applyTransform = function (m) {\n    transformPath(pathProxy, m);\n    this.dirty(true);\n  };\n\n  return opts;\n}\n/**\n * Create a Path object from path string data\n * http://www.w3.org/TR/SVG/paths.html#PathData\n * @param  {Object} opts Other options\n */\n\n\nfunction createFromString(str, opts) {\n  return new Path(createPathOptions(str, opts));\n}\n/**\n * Create a Path class from path string data\n * @param  {string} str\n * @param  {Object} opts Other options\n */\n\n\nfunction extendFromString(str, opts) {\n  return Path.extend(createPathOptions(str, opts));\n}\n/**\n * Merge multiple paths\n */\n// TODO Apply transform\n// TODO stroke dash\n// TODO Optimize double memory cost problem\n\n\nfunction mergePath(pathEls, opts) {\n  var pathList = [];\n  var len = pathEls.length;\n\n  for (var i = 0; i < len; i++) {\n    var pathEl = pathEls[i];\n\n    if (!pathEl.path) {\n      pathEl.createPathProxy();\n    }\n\n    if (pathEl.__dirtyPath) {\n      pathEl.buildPath(pathEl.path, pathEl.shape, true);\n    }\n\n    pathList.push(pathEl.path);\n  }\n\n  var pathBundle = new Path(opts); // Need path proxy.\n\n  pathBundle.createPathProxy();\n\n  pathBundle.buildPath = function (path) {\n    path.appendPath(pathList); // Svg and vml renderer don't have context\n\n    var ctx = path.getContext();\n\n    if (ctx) {\n      path.rebuildPath(ctx);\n    }\n  };\n\n  return pathBundle;\n}\n\nexports.createFromString = createFromString;\nexports.extendFromString = extendFromString;\nexports.mergePath = mergePath;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/tool/path.js\n// module id = 1154\n// module chunks = 0 1 2","var PathProxy = require(\"../core/PathProxy\");\n\nvar line = require(\"./line\");\n\nvar cubic = require(\"./cubic\");\n\nvar quadratic = require(\"./quadratic\");\n\nvar arc = require(\"./arc\");\n\nvar _util = require(\"./util\");\n\nvar normalizeRadian = _util.normalizeRadian;\n\nvar curve = require(\"../core/curve\");\n\nvar windingLine = require(\"./windingLine\");\n\nvar CMD = PathProxy.CMD;\nvar PI2 = Math.PI * 2;\nvar EPSILON = 1e-4;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n} // 临时数组\n\n\nvar roots = [-1, -1, -1];\nvar extrema = [-1, -1];\n\nfunction swapExtrema() {\n  var tmp = extrema[0];\n  extrema[0] = extrema[1];\n  extrema[1] = tmp;\n}\n\nfunction windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 && y > y3 || y < y0 && y < y1 && y < y2 && y < y3) {\n    return 0;\n  }\n\n  var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var w = 0;\n    var nExtrema = -1;\n    var y0_, y1_;\n\n    for (var i = 0; i < nRoots; i++) {\n      var t = roots[i]; // Avoid winding error when intersection point is the connect point of two line of polygon\n\n      var unit = t === 0 || t === 1 ? 0.5 : 1;\n      var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n\n      if (x_ < x) {\n        // Quick reject\n        continue;\n      }\n\n      if (nExtrema < 0) {\n        nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n\n        if (extrema[1] < extrema[0] && nExtrema > 1) {\n          swapExtrema();\n        }\n\n        y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n\n        if (nExtrema > 1) {\n          y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n        }\n      }\n\n      if (nExtrema == 2) {\n        // 分成三段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else if (t < extrema[1]) {\n          w += y1_ < y0_ ? unit : -unit;\n        } else {\n          w += y3 < y1_ ? unit : -unit;\n        }\n      } else {\n        // 分成两段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else {\n          w += y3 < y0_ ? unit : -unit;\n        }\n      }\n    }\n\n    return w;\n  }\n}\n\nfunction windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 || y < y0 && y < y1 && y < y2) {\n    return 0;\n  }\n\n  var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var t = curve.quadraticExtremum(y0, y1, y2);\n\n    if (t >= 0 && t <= 1) {\n      var w = 0;\n      var y_ = curve.quadraticAt(y0, y1, y2, t);\n\n      for (var i = 0; i < nRoots; i++) {\n        // Remove one endpoint.\n        var unit = roots[i] === 0 || roots[i] === 1 ? 0.5 : 1;\n        var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n\n        if (x_ < x) {\n          // Quick reject\n          continue;\n        }\n\n        if (roots[i] < t) {\n          w += y_ < y0 ? unit : -unit;\n        } else {\n          w += y2 < y_ ? unit : -unit;\n        }\n      }\n\n      return w;\n    } else {\n      // Remove one endpoint.\n      var unit = roots[0] === 0 || roots[0] === 1 ? 0.5 : 1;\n      var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n\n      if (x_ < x) {\n        // Quick reject\n        return 0;\n      }\n\n      return y2 < y0 ? unit : -unit;\n    }\n  }\n} // TODO\n// Arc 旋转\n\n\nfunction windingArc(cx, cy, r, startAngle, endAngle, anticlockwise, x, y) {\n  y -= cy;\n\n  if (y > r || y < -r) {\n    return 0;\n  }\n\n  var tmp = Math.sqrt(r * r - y * y);\n  roots[0] = -tmp;\n  roots[1] = tmp;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff < 1e-4) {\n    return 0;\n  }\n\n  if (diff % PI2 < 1e-4) {\n    // Is a circle\n    startAngle = 0;\n    endAngle = PI2;\n    var dir = anticlockwise ? 1 : -1;\n\n    if (x >= roots[0] + cx && x <= roots[1] + cx) {\n      return dir;\n    } else {\n      return 0;\n    }\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var w = 0;\n\n  for (var i = 0; i < 2; i++) {\n    var x_ = roots[i];\n\n    if (x_ + cx > x) {\n      var angle = Math.atan2(y, x_);\n      var dir = anticlockwise ? 1 : -1;\n\n      if (angle < 0) {\n        angle = PI2 + angle;\n      }\n\n      if (angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle) {\n        if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n          dir = -dir;\n        }\n\n        w += dir;\n      }\n    }\n  }\n\n  return w;\n}\n\nfunction containPath(data, lineWidth, isStroke, x, y) {\n  var w = 0;\n  var xi = 0;\n  var yi = 0;\n  var x0 = 0;\n  var y0 = 0;\n\n  for (var i = 0; i < data.length;) {\n    var cmd = data[i++]; // Begin a new subpath\n\n    if (cmd === CMD.M && i > 1) {\n      // Close previous subpath\n      if (!isStroke) {\n        w += windingLine(xi, yi, x0, y0, x, y);\n      } // 如果被任何一个 subpath 包含\n      // if (w !== 0) {\n      //     return true;\n      // }\n\n    }\n\n    if (i == 1) {\n      // 如果第一个命令是 L, C, Q\n      // 则 previous point 同绘制命令的第一个 point\n      //\n      // 第一个命令为 Arc 的情况下会在后面特殊处理\n      xi = data[i];\n      yi = data[i + 1];\n      x0 = xi;\n      y0 = yi;\n    }\n\n    switch (cmd) {\n      case CMD.M:\n        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n        // 在 closePath 的时候使用\n        x0 = data[i++];\n        y0 = data[i++];\n        xi = x0;\n        yi = y0;\n        break;\n\n      case CMD.L:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n          w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.C:\n        if (isStroke) {\n          if (cubic.containStroke(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.Q:\n        if (isStroke) {\n          if (quadratic.containStroke(xi, yi, data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.A:\n        // TODO Arc 判断的开销比较大\n        var cx = data[i++];\n        var cy = data[i++];\n        var rx = data[i++];\n        var ry = data[i++];\n        var theta = data[i++];\n        var dTheta = data[i++]; // TODO Arc 旋转\n\n        var psi = data[i++];\n        var anticlockwise = 1 - data[i++];\n        var x1 = Math.cos(theta) * rx + cx;\n        var y1 = Math.sin(theta) * ry + cy; // 不是直接使用 arc 命令\n\n        if (i > 1) {\n          w += windingLine(xi, yi, x1, y1, x, y);\n        } else {\n          // 第一个命令起点还未定义\n          x0 = x1;\n          y0 = y1;\n        } // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n\n\n        var _x = (x - cx) * ry / rx + cx;\n\n        if (isStroke) {\n          if (arc.containStroke(cx, cy, ry, theta, theta + dTheta, anticlockwise, lineWidth, _x, y)) {\n            return true;\n          }\n        } else {\n          w += windingArc(cx, cy, ry, theta, theta + dTheta, anticlockwise, _x, y);\n        }\n\n        xi = Math.cos(theta + dTheta) * rx + cx;\n        yi = Math.sin(theta + dTheta) * ry + cy;\n        break;\n\n      case CMD.R:\n        x0 = xi = data[i++];\n        y0 = yi = data[i++];\n        var width = data[i++];\n        var height = data[i++];\n        var x1 = x0 + width;\n        var y1 = y0 + height;\n\n        if (isStroke) {\n          if (line.containStroke(x0, y0, x1, y0, lineWidth, x, y) || line.containStroke(x1, y0, x1, y1, lineWidth, x, y) || line.containStroke(x1, y1, x0, y1, lineWidth, x, y) || line.containStroke(x0, y1, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // FIXME Clockwise ?\n          w += windingLine(x1, y0, x1, y1, x, y);\n          w += windingLine(x0, y1, x0, y0, x, y);\n        }\n\n        break;\n\n      case CMD.Z:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // Close a subpath\n          w += windingLine(xi, yi, x0, y0, x, y); // 如果被任何一个 subpath 包含\n          // FIXME subpaths may overlap\n          // if (w !== 0) {\n          //     return true;\n          // }\n        }\n\n        xi = x0;\n        yi = y0;\n        break;\n    }\n  }\n\n  if (!isStroke && !isAroundEqual(yi, y0)) {\n    w += windingLine(xi, yi, x0, y0, x, y) || 0;\n  }\n\n  return w !== 0;\n}\n\nfunction contain(pathData, x, y) {\n  return containPath(pathData, 0, false, x, y);\n}\n\nfunction containStroke(pathData, lineWidth, x, y) {\n  return containPath(pathData, lineWidth, true, x, y);\n}\n\nexports.contain = contain;\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/contain/path.js\n// module id = 1155\n// module chunks = 0 1 2","var curve = require(\"../core/curve\");\n\n/**\n * 三次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  x3\n * @param  {number}  y3\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l) {\n    return false;\n  }\n\n  var d = curve.cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/contain/cubic.js\n// module id = 1156\n// module chunks = 0 1 2","var _util = require(\"./util\");\n\nvar normalizeRadian = _util.normalizeRadian;\nvar PI2 = Math.PI * 2;\n/**\n * 圆弧描边包含判断\n * @param  {number}  cx\n * @param  {number}  cy\n * @param  {number}  r\n * @param  {number}  startAngle\n * @param  {number}  endAngle\n * @param  {boolean}  anticlockwise\n * @param  {number} lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {Boolean}\n */\n\nfunction containStroke(cx, cy, r, startAngle, endAngle, anticlockwise, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  x -= cx;\n  y -= cy;\n  var d = Math.sqrt(x * x + y * y);\n\n  if (d - _l > r || d + _l < r) {\n    return false;\n  }\n\n  if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n    // Is a circle\n    return true;\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var angle = Math.atan2(y, x);\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle;\n}\n\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/contain/arc.js\n// module id = 1157\n// module chunks = 0 1 2","var PathProxy = require(\"../core/PathProxy\");\n\nvar _vector = require(\"../core/vector\");\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar CMD = PathProxy.CMD;\nvar points = [[], [], []];\nvar mathSqrt = Math.sqrt;\nvar mathAtan2 = Math.atan2;\n\nfunction _default(path, m) {\n  var data = path.data;\n  var cmd;\n  var nPoint;\n  var i;\n  var j;\n  var k;\n  var p;\n  var M = CMD.M;\n  var C = CMD.C;\n  var L = CMD.L;\n  var R = CMD.R;\n  var A = CMD.A;\n  var Q = CMD.Q;\n\n  for (i = 0, j = 0; i < data.length;) {\n    cmd = data[i++];\n    j = i;\n    nPoint = 0;\n\n    switch (cmd) {\n      case M:\n        nPoint = 1;\n        break;\n\n      case L:\n        nPoint = 1;\n        break;\n\n      case C:\n        nPoint = 3;\n        break;\n\n      case Q:\n        nPoint = 2;\n        break;\n\n      case A:\n        var x = m[4];\n        var y = m[5];\n        var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n        var angle = mathAtan2(-m[1] / sy, m[0] / sx); // cx\n\n        data[i] *= sx;\n        data[i++] += x; // cy\n\n        data[i] *= sy;\n        data[i++] += y; // Scale rx and ry\n        // FIXME Assume psi is 0 here\n\n        data[i++] *= sx;\n        data[i++] *= sy; // Start angle\n\n        data[i++] += angle; // end angle\n\n        data[i++] += angle; // FIXME psi\n\n        i += 2;\n        j = i;\n        break;\n\n      case R:\n        // x0, y0\n        p[0] = data[i++];\n        p[1] = data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1]; // x1, y1\n\n        p[0] += data[i++];\n        p[1] += data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1];\n    }\n\n    for (k = 0; k < nPoint; k++) {\n      var p = points[k];\n      p[0] = data[i++];\n      p[1] = data[i++];\n      v2ApplyTransform(p, p, m); // Write back\n\n      data[j++] = p[0];\n      data[j++] = p[1];\n    }\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/tool/transformPath.js\n// module id = 1158\n// module chunks = 0 1 2","var Path = require(\"../Path\");\n\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\nvar _default = Path.extend({\n  type: 'circle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    // Better stroking in ShapeBundle\n    // Always do it may have performence issue ( fill may be 2x more cost)\n    if (inBundle) {\n      ctx.moveTo(shape.cx + shape.r, shape.cy);\n    } // else {\n    //     if (ctx.allocate && !ctx.data.length) {\n    //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n    //     }\n    // }\n    // Better stroking in ShapeBundle\n    // ctx.moveTo(shape.cx + shape.r, shape.cy);\n\n\n    ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/shape/Circle.js\n// module id = 1159\n// module chunks = 0 1 2","var Path = require(\"../Path\");\n\nvar fixClipWithShadow = require(\"../helper/fixClipWithShadow\");\n\n/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\nvar _default = Path.extend({\n  type: 'sector',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r0: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r0 = Math.max(shape.r0 || 0, 0);\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n    ctx.lineTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n    ctx.lineTo(Math.cos(endAngle) * r0 + x, Math.sin(endAngle) * r0 + y);\n\n    if (r0 !== 0) {\n      ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n    }\n\n    ctx.closePath();\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/shape/Sector.js\n// module id = 1160\n// module chunks = 0 1 2","var Path = require(\"../Path\");\n\n/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\nvar _default = Path.extend({\n  type: 'ring',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    r0: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var PI2 = Math.PI * 2;\n    ctx.moveTo(x + shape.r, y);\n    ctx.arc(x, y, shape.r, 0, PI2, false);\n    ctx.moveTo(x + shape.r0, y);\n    ctx.arc(x, y, shape.r0, 0, PI2, true);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/shape/Ring.js\n// module id = 1161\n// module chunks = 0 1 2","var Path = require(\"../Path\");\n\nvar polyHelper = require(\"../helper/poly\");\n\n/**\n * 多边形\n * @module zrender/shape/Polygon\n */\nvar _default = Path.extend({\n  type: 'polygon',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, true);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/shape/Polygon.js\n// module id = 1162\n// module chunks = 0 1 2","var _vector = require(\"../../core/vector\");\n\nvar v2Distance = _vector.distance;\n\n/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * @inner\n */\nfunction interpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n/**\n * @alias module:zrender/shape/util/smoothSpline\n * @param {Array} points 线段顶点数组\n * @param {boolean} isLoop\n * @return {Array}\n */\n\n\nfunction _default(points, isLoop) {\n  var len = points.length;\n  var ret = [];\n  var distance = 0;\n\n  for (var i = 1; i < len; i++) {\n    distance += v2Distance(points[i - 1], points[i]);\n  }\n\n  var segs = distance / 2;\n  segs = segs < len ? len : segs;\n\n  for (var i = 0; i < segs; i++) {\n    var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n    var idx = Math.floor(pos);\n    var w = pos - idx;\n    var p0;\n    var p1 = points[idx % len];\n    var p2;\n    var p3;\n\n    if (!isLoop) {\n      p0 = points[idx === 0 ? idx : idx - 1];\n      p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n      p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n    } else {\n      p0 = points[(idx - 1 + len) % len];\n      p2 = points[(idx + 1) % len];\n      p3 = points[(idx + 2) % len];\n    }\n\n    var w2 = w * w;\n    var w3 = w * w2;\n    ret.push([interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3), interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)]);\n  }\n\n  return ret;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/helper/smoothSpline.js\n// module id = 1163\n// module chunks = 0 1 2","var _vector = require(\"../../core/vector\");\n\nvar v2Min = _vector.min;\nvar v2Max = _vector.max;\nvar v2Scale = _vector.scale;\nvar v2Distance = _vector.distance;\nvar v2Add = _vector.add;\nvar v2Clone = _vector.clone;\nvar v2Sub = _vector.sub;\n\n/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * 贝塞尔平滑曲线\n * @alias module:zrender/shape/util/smoothBezier\n * @param {Array} points 线段顶点数组\n * @param {number} smooth 平滑等级, 0-1\n * @param {boolean} isLoop\n * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n *                           整个折线的包围盒做一个并集用来约束控制点。\n * @param {Array} 计算出来的控制点数组\n */\nfunction _default(points, smooth, isLoop, constraint) {\n  var cps = [];\n  var v = [];\n  var v1 = [];\n  var v2 = [];\n  var prevPoint;\n  var nextPoint;\n  var min, max;\n\n  if (constraint) {\n    min = [Infinity, Infinity];\n    max = [-Infinity, -Infinity];\n\n    for (var i = 0, len = points.length; i < len; i++) {\n      v2Min(min, min, points[i]);\n      v2Max(max, max, points[i]);\n    } // 与指定的包围盒做并集\n\n\n    v2Min(min, min, constraint[0]);\n    v2Max(max, max, constraint[1]);\n  }\n\n  for (var i = 0, len = points.length; i < len; i++) {\n    var point = points[i];\n\n    if (isLoop) {\n      prevPoint = points[i ? i - 1 : len - 1];\n      nextPoint = points[(i + 1) % len];\n    } else {\n      if (i === 0 || i === len - 1) {\n        cps.push(v2Clone(points[i]));\n        continue;\n      } else {\n        prevPoint = points[i - 1];\n        nextPoint = points[i + 1];\n      }\n    }\n\n    v2Sub(v, nextPoint, prevPoint); // use degree to scale the handle length\n\n    v2Scale(v, v, smooth);\n    var d0 = v2Distance(point, prevPoint);\n    var d1 = v2Distance(point, nextPoint);\n    var sum = d0 + d1;\n\n    if (sum !== 0) {\n      d0 /= sum;\n      d1 /= sum;\n    }\n\n    v2Scale(v1, v, -d0);\n    v2Scale(v2, v, d1);\n    var cp0 = v2Add([], point, v1);\n    var cp1 = v2Add([], point, v2);\n\n    if (constraint) {\n      v2Max(cp0, cp0, min);\n      v2Min(cp0, cp0, max);\n      v2Max(cp1, cp1, min);\n      v2Min(cp1, cp1, max);\n    }\n\n    cps.push(cp0);\n    cps.push(cp1);\n  }\n\n  if (isLoop) {\n    cps.push(cps.shift());\n  }\n\n  return cps;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/helper/smoothBezier.js\n// module id = 1164\n// module chunks = 0 1 2","var Path = require(\"../Path\");\n\nvar polyHelper = require(\"../helper/poly\");\n\n/**\n * @module zrender/graphic/shape/Polyline\n */\nvar _default = Path.extend({\n  type: 'polyline',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, false);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/shape/Polyline.js\n// module id = 1165\n// module chunks = 0 1 2","var Path = require(\"../Path\");\n\nvar roundRectHelper = require(\"../helper/roundRect\");\n\n/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\nvar _default = Path.extend({\n  type: 'rect',\n  shape: {\n    // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n    // r缩写为1         相当于 [1, 1, 1, 1]\n    // r缩写为[1]       相当于 [1, 1, 1, 1]\n    // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n    // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n    r: 0,\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var width = shape.width;\n    var height = shape.height;\n\n    if (!shape.r) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, shape);\n    }\n\n    ctx.closePath();\n    return;\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/shape/Rect.js\n// module id = 1166\n// module chunks = 0 1 2","var Path = require(\"../Path\");\n\n/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\nvar _default = Path.extend({\n  type: 'line',\n  shape: {\n    // Start point\n    x1: 0,\n    y1: 0,\n    // End point\n    x2: 0,\n    y2: 0,\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (percent < 1) {\n      x2 = x1 * (1 - percent) + x2 * percent;\n      y2 = y1 * (1 - percent) + y2 * percent;\n    }\n\n    ctx.lineTo(x2, y2);\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} percent\n   * @return {Array.<number>}\n   */\n  pointAt: function (p) {\n    var shape = this.shape;\n    return [shape.x1 * (1 - p) + shape.x2 * p, shape.y1 * (1 - p) + shape.y2 * p];\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/shape/Line.js\n// module id = 1167\n// module chunks = 0 1 2","var Path = require(\"../Path\");\n\nvar vec2 = require(\"../../core/vector\");\n\nvar _curve = require(\"../../core/curve\");\n\nvar quadraticSubdivide = _curve.quadraticSubdivide;\nvar cubicSubdivide = _curve.cubicSubdivide;\nvar quadraticAt = _curve.quadraticAt;\nvar cubicAt = _curve.cubicAt;\nvar quadraticDerivativeAt = _curve.quadraticDerivativeAt;\nvar cubicDerivativeAt = _curve.cubicDerivativeAt;\n\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\nvar out = [];\n\nfunction someVectorAt(shape, t, isTangent) {\n  var cpx2 = shape.cpx2;\n  var cpy2 = shape.cpy2;\n\n  if (cpx2 === null || cpy2 === null) {\n    return [(isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t), (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)];\n  } else {\n    return [(isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t), (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)];\n  }\n}\n\nvar _default = Path.extend({\n  type: 'bezier-curve',\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    cpx1: 0,\n    cpy1: 0,\n    // cpx2: 0,\n    // cpy2: 0\n    // Curve show percent, for animating\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var cpx1 = shape.cpx1;\n    var cpy1 = shape.cpy1;\n    var cpx2 = shape.cpx2;\n    var cpy2 = shape.cpy2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (cpx2 == null || cpy2 == null) {\n      if (percent < 1) {\n        quadraticSubdivide(x1, cpx1, x2, percent, out);\n        cpx1 = out[1];\n        x2 = out[2];\n        quadraticSubdivide(y1, cpy1, y2, percent, out);\n        cpy1 = out[1];\n        y2 = out[2];\n      }\n\n      ctx.quadraticCurveTo(cpx1, cpy1, x2, y2);\n    } else {\n      if (percent < 1) {\n        cubicSubdivide(x1, cpx1, cpx2, x2, percent, out);\n        cpx1 = out[1];\n        cpx2 = out[2];\n        x2 = out[3];\n        cubicSubdivide(y1, cpy1, cpy2, y2, percent, out);\n        cpy1 = out[1];\n        cpy2 = out[2];\n        y2 = out[3];\n      }\n\n      ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\n    }\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  pointAt: function (t) {\n    return someVectorAt(this.shape, t, false);\n  },\n\n  /**\n   * Get tangent at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  tangentAt: function (t) {\n    var p = someVectorAt(this.shape, t, true);\n    return vec2.normalize(p, p);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/shape/BezierCurve.js\n// module id = 1168\n// module chunks = 0 1 2","var Path = require(\"../Path\");\n\n/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\nvar _default = Path.extend({\n  type: 'arc',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/shape/Arc.js\n// module id = 1169\n// module chunks = 0 1 2","var Path = require(\"./Path\");\n\n// CompoundPath to improve performance\nvar _default = Path.extend({\n  type: 'compound',\n  shape: {\n    paths: null\n  },\n  _updatePathDirty: function () {\n    var dirtyPath = this.__dirtyPath;\n    var paths = this.shape.paths;\n\n    for (var i = 0; i < paths.length; i++) {\n      // Mark as dirty if any subpath is dirty\n      dirtyPath = dirtyPath || paths[i].__dirtyPath;\n    }\n\n    this.__dirtyPath = dirtyPath;\n    this.__dirty = this.__dirty || dirtyPath;\n  },\n  beforeBrush: function () {\n    this._updatePathDirty();\n\n    var paths = this.shape.paths || [];\n    var scale = this.getGlobalScale(); // Update path scale\n\n    for (var i = 0; i < paths.length; i++) {\n      if (!paths[i].path) {\n        paths[i].createPathProxy();\n      }\n\n      paths[i].path.setScale(scale[0], scale[1]);\n    }\n  },\n  buildPath: function (ctx, shape) {\n    var paths = shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].buildPath(ctx, paths[i].shape, true);\n    }\n  },\n  afterBrush: function () {\n    var paths = this.shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].__dirtyPath = false;\n    }\n  },\n  getBoundingRect: function () {\n    this._updatePathDirty();\n\n    return Path.prototype.getBoundingRect.call(this);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/CompoundPath.js\n// module id = 1170\n// module chunks = 0 1 2","var zrUtil = require(\"../core/util\");\n\nvar Gradient = require(\"./Gradient\");\n\n/**\n * x, y, r are all percent from 0 to 1\n * @param {number} [x=0.5]\n * @param {number} [y=0.5]\n * @param {number} [r=0.5]\n * @param {Array.<Object>} [colorStops]\n * @param {boolean} [globalCoord=false]\n */\nvar RadialGradient = function (x, y, r, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'radial', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0.5 : x;\n  this.y = y == null ? 0.5 : y;\n  this.r = r == null ? 0.5 : r; // Can be cloned\n\n  this.type = 'radial'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nRadialGradient.prototype = {\n  constructor: RadialGradient\n};\nzrUtil.inherits(RadialGradient, Gradient);\nvar _default = RadialGradient;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/RadialGradient.js\n// module id = 1171\n// module chunks = 0 1 2","var makeStyleMapper = require(\"./makeStyleMapper\");\n\nvar getItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor'], ['textPosition'], ['textAlign']]);\nvar _default = {\n  getItemStyle: function (excludes, includes) {\n    var style = getItemStyle(this, excludes, includes);\n    var lineDash = this.getBorderLineDash();\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getBorderLineDash: function () {\n    var lineType = this.get('borderType');\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [5, 5] : [1, 1];\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/mixin/itemStyle.js\n// module id = 1172\n// module chunks = 0 1 2","var _default = {\n  getBoxLayoutParams: function () {\n    return {\n      left: this.get('left'),\n      top: this.get('top'),\n      right: this.get('right'),\n      bottom: this.get('bottom'),\n      width: this.get('width'),\n      height: this.get('height')\n    };\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/mixin/boxLayout.js\n// module id = 1173\n// module chunks = 0 1 2","var platform = ''; // Navigator not exists in node\n\nif (typeof navigator !== 'undefined') {\n  platform = navigator.platform || '';\n}\n\nvar _default = {\n  // 全图默认背景\n  // backgroundColor: 'rgba(0,0,0,0)',\n  // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n  // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n  // 浅色\n  // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n  // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n  // 深色\n  color: ['#c23531', '#2f4554', '#61a0a8', '#d48265', '#91c7ae', '#749f83', '#ca8622', '#bda29a', '#6e7074', '#546570', '#c4ccd3'],\n  // 默认需要 Grid 配置项\n  // grid: {},\n  // 主题，主题\n  textStyle: {\n    // color: '#000',\n    // decoration: 'none',\n    // PENDING\n    fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n    // fontFamily: 'Arial, Verdana, sans-serif',\n    fontSize: 12,\n    fontStyle: 'normal',\n    fontWeight: 'normal'\n  },\n  // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n  // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n  // Default is source-over\n  blendMode: null,\n  animation: 'auto',\n  animationDuration: 1000,\n  animationDurationUpdate: 300,\n  animationEasing: 'exponentialOut',\n  animationEasingUpdate: 'cubicOut',\n  animationThreshold: 2000,\n  // Configuration for progressive/incremental rendering\n  progressiveThreshold: 3000,\n  progressive: 400,\n  // Threshold of if use single hover layer to optimize.\n  // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n  // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n  // which is unexpected.\n  // see example <echarts/test/heatmap-large.html>.\n  hoverLayerThreshold: 3000,\n  // See: module:echarts/scale/Time\n  useUTC: false\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/globalDefault.js\n// module id = 1174\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar echartsAPIList = ['getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed', 'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption', 'getViewOfComponentModel', 'getViewOfSeriesModel']; // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\n\nfunction ExtensionAPI(chartInstance) {\n  zrUtil.each(echartsAPIList, function (name) {\n    this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n  }, this);\n}\n\nvar _default = ExtensionAPI;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/ExtensionAPI.js\n// module id = 1175\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar ComponentModel = require(\"./Component\");\n\n/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\nvar each = zrUtil.each;\nvar clone = zrUtil.clone;\nvar map = zrUtil.map;\nvar merge = zrUtil.merge;\nvar QUERY_REG = /^(min|max)?(.+)$/;\n/**\n * TERM EXPLANATIONS:\n *\n * [option]:\n *\n *     An object that contains definitions of components. For example:\n *     var option = {\n *         title: {...},\n *         legend: {...},\n *         visualMap: {...},\n *         series: [\n *             {data: [...]},\n *             {data: [...]},\n *             ...\n *         ]\n *     };\n *\n * [rawOption]:\n *\n *     An object input to echarts.setOption. 'rawOption' may be an\n *     'option', or may be an object contains multi-options. For example:\n *     var option = {\n *         baseOption: {\n *             title: {...},\n *             legend: {...},\n *             series: [\n *                 {data: [...]},\n *                 {data: [...]},\n *                 ...\n *             ]\n *         },\n *         timeline: {...},\n *         options: [\n *             {title: {...}, series: {data: [...]}},\n *             {title: {...}, series: {data: [...]}},\n *             ...\n *         ],\n *         media: [\n *             {\n *                 query: {maxWidth: 320},\n *                 option: {series: {x: 20}, visualMap: {show: false}}\n *             },\n *             {\n *                 query: {minWidth: 320, maxWidth: 720},\n *                 option: {series: {x: 500}, visualMap: {show: true}}\n *             },\n *             {\n *                 option: {series: {x: 1200}, visualMap: {show: true}}\n *             }\n *         ]\n *     };\n *\n * @alias module:echarts/model/OptionManager\n * @param {module:echarts/ExtensionAPI} api\n */\n\nfunction OptionManager(api) {\n  /**\n   * @private\n   * @type {module:echarts/ExtensionAPI}\n   */\n  this._api = api;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._timelineOptions = [];\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n\n  this._mediaList = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._mediaDefault;\n  /**\n   * -1, means default.\n   * empty means no media.\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._currentMediaIndices = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._optionBackup;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._newBaseOption;\n} // timeline.notMerge is not supported in ec3. Firstly there is rearly\n// case that notMerge is needed. Secondly supporting 'notMerge' requires\n// rawOption cloned and backuped when timeline changed, which does no\n// good to performance. What's more, that both timeline and setOption\n// method supply 'notMerge' brings complex and some problems.\n// Consider this case:\n// (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n// (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n\nOptionManager.prototype = {\n  constructor: OptionManager,\n\n  /**\n   * @public\n   * @param {Object} rawOption Raw option.\n   * @param {module:echarts/model/Global} ecModel\n   * @param {Array.<Function>} optionPreprocessorFuncs\n   * @return {Object} Init option\n   */\n  setOption: function (rawOption, optionPreprocessorFuncs) {\n    rawOption = clone(rawOption, true); // FIXME\n    // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n    var oldOptionBackup = this._optionBackup;\n    var newParsedOption = parseRawOption.call(this, rawOption, optionPreprocessorFuncs, !oldOptionBackup);\n    this._newBaseOption = newParsedOption.baseOption; // For setOption at second time (using merge mode);\n\n    if (oldOptionBackup) {\n      // Only baseOption can be merged.\n      mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption); // For simplicity, timeline options and media options do not support merge,\n      // that is, if you `setOption` twice and both has timeline options, the latter\n      // timeline opitons will not be merged to the formers, but just substitude them.\n\n      if (newParsedOption.timelineOptions.length) {\n        oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n      }\n\n      if (newParsedOption.mediaList.length) {\n        oldOptionBackup.mediaList = newParsedOption.mediaList;\n      }\n\n      if (newParsedOption.mediaDefault) {\n        oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n      }\n    } else {\n      this._optionBackup = newParsedOption;\n    }\n  },\n\n  /**\n   * @param {boolean} isRecreate\n   * @return {Object}\n   */\n  mountOption: function (isRecreate) {\n    var optionBackup = this._optionBackup; // TODO\n    // 如果没有reset功能则不clone。\n\n    this._timelineOptions = map(optionBackup.timelineOptions, clone);\n    this._mediaList = map(optionBackup.mediaList, clone);\n    this._mediaDefault = clone(optionBackup.mediaDefault);\n    this._currentMediaIndices = [];\n    return clone(isRecreate // this._optionBackup.baseOption, which is created at the first `setOption`\n    // called, and is merged into every new option by inner method `mergeOption`\n    // each time `setOption` called, can be only used in `isRecreate`, because\n    // its reliability is under suspicion. In other cases option merge is\n    // performed by `model.mergeOption`.\n    ? optionBackup.baseOption : this._newBaseOption);\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Object}\n   */\n  getTimelineOption: function (ecModel) {\n    var option;\n    var timelineOptions = this._timelineOptions;\n\n    if (timelineOptions.length) {\n      // getTimelineOption can only be called after ecModel inited,\n      // so we can get currentIndex from timelineModel.\n      var timelineModel = ecModel.getComponent('timeline');\n\n      if (timelineModel) {\n        option = clone(timelineOptions[timelineModel.getCurrentIndex()], true);\n      }\n    }\n\n    return option;\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Array.<Object>}\n   */\n  getMediaOption: function (ecModel) {\n    var ecWidth = this._api.getWidth();\n\n    var ecHeight = this._api.getHeight();\n\n    var mediaList = this._mediaList;\n    var mediaDefault = this._mediaDefault;\n    var indices = [];\n    var result = []; // No media defined.\n\n    if (!mediaList.length && !mediaDefault) {\n      return result;\n    } // Multi media may be applied, the latter defined media has higher priority.\n\n\n    for (var i = 0, len = mediaList.length; i < len; i++) {\n      if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n        indices.push(i);\n      }\n    } // FIXME\n    // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n\n\n    if (!indices.length && mediaDefault) {\n      indices = [-1];\n    }\n\n    if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n      result = map(indices, function (index) {\n        return clone(index === -1 ? mediaDefault.option : mediaList[index].option);\n      });\n    } // Otherwise return nothing.\n\n\n    this._currentMediaIndices = indices;\n    return result;\n  }\n};\n\nfunction parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n  var timelineOptions = [];\n  var mediaList = [];\n  var mediaDefault;\n  var baseOption; // Compatible with ec2.\n\n  var timelineOpt = rawOption.timeline;\n\n  if (rawOption.baseOption) {\n    baseOption = rawOption.baseOption;\n  } // For timeline\n\n\n  if (timelineOpt || rawOption.options) {\n    baseOption = baseOption || {};\n    timelineOptions = (rawOption.options || []).slice();\n  } // For media query\n\n\n  if (rawOption.media) {\n    baseOption = baseOption || {};\n    var media = rawOption.media;\n    each(media, function (singleMedia) {\n      if (singleMedia && singleMedia.option) {\n        if (singleMedia.query) {\n          mediaList.push(singleMedia);\n        } else if (!mediaDefault) {\n          // Use the first media default.\n          mediaDefault = singleMedia;\n        }\n      }\n    });\n  } // For normal option\n\n\n  if (!baseOption) {\n    baseOption = rawOption;\n  } // Set timelineOpt to baseOption in ec3,\n  // which is convenient for merge option.\n\n\n  if (!baseOption.timeline) {\n    baseOption.timeline = timelineOpt;\n  } // Preprocess.\n\n\n  each([baseOption].concat(timelineOptions).concat(zrUtil.map(mediaList, function (media) {\n    return media.option;\n  })), function (option) {\n    each(optionPreprocessorFuncs, function (preProcess) {\n      preProcess(option, isNew);\n    });\n  });\n  return {\n    baseOption: baseOption,\n    timelineOptions: timelineOptions,\n    mediaDefault: mediaDefault,\n    mediaList: mediaList\n  };\n}\n/**\n * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n * Support: width, height, aspectRatio\n * Can use max or min as prefix.\n */\n\n\nfunction applyMediaQuery(query, ecWidth, ecHeight) {\n  var realMap = {\n    width: ecWidth,\n    height: ecHeight,\n    aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n\n  };\n  var applicatable = true;\n  zrUtil.each(query, function (value, attr) {\n    var matched = attr.match(QUERY_REG);\n\n    if (!matched || !matched[1] || !matched[2]) {\n      return;\n    }\n\n    var operator = matched[1];\n    var realAttr = matched[2].toLowerCase();\n\n    if (!compare(realMap[realAttr], value, operator)) {\n      applicatable = false;\n    }\n  });\n  return applicatable;\n}\n\nfunction compare(real, expect, operator) {\n  if (operator === 'min') {\n    return real >= expect;\n  } else if (operator === 'max') {\n    return real <= expect;\n  } else {\n    // Equals\n    return real === expect;\n  }\n}\n\nfunction indicesEquals(indices1, indices2) {\n  // indices is always order by asc and has only finite number.\n  return indices1.join(',') === indices2.join(',');\n}\n/**\n * Consider case:\n * `chart.setOption(opt1);`\n * Then user do some interaction like dataZoom, dataView changing.\n * `chart.setOption(opt2);`\n * Then user press 'reset button' in toolbox.\n *\n * After doing that all of the interaction effects should be reset, the\n * chart should be the same as the result of invoke\n * `chart.setOption(opt1); chart.setOption(opt2);`.\n *\n * Although it is not able ensure that\n * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n * `chart.setOption(merge(opt1, opt2));` exactly,\n * this might be the only simple way to implement that feature.\n *\n * MEMO: We've considered some other approaches:\n * 1. Each model handle its self restoration but not uniform treatment.\n *     (Too complex in logic and error-prone)\n * 2. Use a shadow ecModel. (Performace expensive)\n */\n\n\nfunction mergeOption(oldOption, newOption) {\n  newOption = newOption || {};\n  each(newOption, function (newCptOpt, mainType) {\n    if (newCptOpt == null) {\n      return;\n    }\n\n    var oldCptOpt = oldOption[mainType];\n\n    if (!ComponentModel.hasClass(mainType)) {\n      oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n    } else {\n      newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n      oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n      var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n      oldOption[mainType] = map(mapResult, function (item) {\n        return item.option && item.exist ? merge(item.exist, item.option, true) : item.exist || item.option;\n      });\n    }\n  });\n}\n\nvar _default = OptionManager;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/OptionManager.js\n// module id = 1176\n// module chunks = 0 1 2","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar isArray = _util.isArray;\nvar isObject = _util.isObject;\n\nvar compatStyle = require(\"./helper/compatStyle\");\n\nvar _model = require(\"../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\n// Compatitable with 2.0\nfunction get(opt, path) {\n  path = path.split(',');\n  var obj = opt;\n\n  for (var i = 0; i < path.length; i++) {\n    obj = obj && obj[path[i]];\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  return obj;\n}\n\nfunction set(opt, path, val, overwrite) {\n  path = path.split(',');\n  var obj = opt;\n  var key;\n\n  for (var i = 0; i < path.length - 1; i++) {\n    key = path[i];\n\n    if (obj[key] == null) {\n      obj[key] = {};\n    }\n\n    obj = obj[key];\n  }\n\n  if (overwrite || obj[path[i]] == null) {\n    obj[path[i]] = val;\n  }\n}\n\nfunction compatLayoutProperties(option) {\n  each(LAYOUT_PROPERTIES, function (prop) {\n    if (prop[0] in option && !(prop[1] in option)) {\n      option[prop[1]] = option[prop[0]];\n    }\n  });\n}\n\nvar LAYOUT_PROPERTIES = [['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']];\nvar COMPATITABLE_COMPONENTS = ['grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'];\nvar COMPATITABLE_SERIES = ['bar', 'boxplot', 'candlestick', 'chord', 'effectScatter', 'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel', 'pie', 'radar', 'sankey', 'scatter', 'treemap'];\n\nfunction _default(option, isTheme) {\n  compatStyle(option, isTheme); // Make sure series array for model initialization.\n\n  option.series = normalizeToArray(option.series);\n  each(option.series, function (seriesOpt) {\n    if (!isObject(seriesOpt)) {\n      return;\n    }\n\n    var seriesType = seriesOpt.type;\n\n    if (seriesType === 'pie' || seriesType === 'gauge') {\n      if (seriesOpt.clockWise != null) {\n        seriesOpt.clockwise = seriesOpt.clockWise;\n      }\n    }\n\n    if (seriesType === 'gauge') {\n      var pointerColor = get(seriesOpt, 'pointer.color');\n      pointerColor != null && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n    }\n\n    for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\n      if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\n        compatLayoutProperties(seriesOpt);\n        break;\n      }\n    }\n  }); // dataRange has changed to visualMap\n\n  if (option.dataRange) {\n    option.visualMap = option.dataRange;\n  }\n\n  each(COMPATITABLE_COMPONENTS, function (componentName) {\n    var options = option[componentName];\n\n    if (options) {\n      if (!isArray(options)) {\n        options = [options];\n      }\n\n      each(options, function (option) {\n        compatLayoutProperties(option);\n      });\n    }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/preprocessor/backwardCompat.js\n// module id = 1177\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar POSSIBLE_STYLES = ['areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle', 'chordStyle', 'label', 'labelLine'];\n\nfunction compatItemStyle(opt) {\n  var itemStyleOpt = opt && opt.itemStyle;\n\n  if (!itemStyleOpt) {\n    return;\n  }\n\n  for (var i = 0, len = POSSIBLE_STYLES.length; i < len; i++) {\n    var styleName = POSSIBLE_STYLES[i];\n    var normalItemStyleOpt = itemStyleOpt.normal;\n    var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n\n    if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].normal) {\n        opt[styleName].normal = normalItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n      }\n\n      normalItemStyleOpt[styleName] = null;\n    }\n\n    if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].emphasis) {\n        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n      }\n\n      emphasisItemStyleOpt[styleName] = null;\n    }\n  }\n}\n\nfunction compatTextStyle(opt, propName) {\n  var labelOptSingle = isObject(opt) && opt[propName];\n  var textStyle = isObject(labelOptSingle) && labelOptSingle.textStyle;\n\n  if (textStyle) {\n    for (var i = 0, len = modelUtil.TEXT_STYLE_OPTIONS.length; i < len; i++) {\n      var propName = modelUtil.TEXT_STYLE_OPTIONS[i];\n\n      if (textStyle.hasOwnProperty(propName)) {\n        labelOptSingle[propName] = textStyle[propName];\n      }\n    }\n  }\n}\n\nfunction compatLabelTextStyle(labelOpt) {\n  if (isObject(labelOpt)) {\n    compatTextStyle(labelOpt, 'normal');\n    compatTextStyle(labelOpt, 'emphasis');\n  }\n}\n\nfunction processSeries(seriesOpt) {\n  if (!isObject(seriesOpt)) {\n    return;\n  }\n\n  compatItemStyle(seriesOpt);\n  compatLabelTextStyle(seriesOpt.label); // treemap\n\n  compatLabelTextStyle(seriesOpt.upperLabel); // graph\n\n  compatLabelTextStyle(seriesOpt.edgeLabel);\n  var markPoint = seriesOpt.markPoint;\n  compatItemStyle(markPoint);\n  compatLabelTextStyle(markPoint && markPoint.label);\n  var markLine = seriesOpt.markLine;\n  compatItemStyle(seriesOpt.markLine);\n  compatLabelTextStyle(markLine && markLine.label);\n  var markArea = seriesOpt.markArea;\n  compatLabelTextStyle(markArea && markArea.label); // For gauge\n\n  compatTextStyle(seriesOpt, 'axisLabel');\n  compatTextStyle(seriesOpt, 'title');\n  compatTextStyle(seriesOpt, 'detail');\n  var data = seriesOpt.data;\n\n  if (data) {\n    for (var i = 0; i < data.length; i++) {\n      compatItemStyle(data[i]);\n      compatLabelTextStyle(data[i] && data[i].label);\n    }\n  } // mark point data\n\n\n  var markPoint = seriesOpt.markPoint;\n\n  if (markPoint && markPoint.data) {\n    var mpData = markPoint.data;\n\n    for (var i = 0; i < mpData.length; i++) {\n      compatItemStyle(mpData[i]);\n      compatLabelTextStyle(mpData[i] && mpData[i].label);\n    }\n  } // mark line data\n\n\n  var markLine = seriesOpt.markLine;\n\n  if (markLine && markLine.data) {\n    var mlData = markLine.data;\n\n    for (var i = 0; i < mlData.length; i++) {\n      if (zrUtil.isArray(mlData[i])) {\n        compatItemStyle(mlData[i][0]);\n        compatLabelTextStyle(mlData[i][0] && mlData[i][0].label);\n        compatItemStyle(mlData[i][1]);\n        compatLabelTextStyle(mlData[i][1] && mlData[i][1].label);\n      } else {\n        compatItemStyle(mlData[i]);\n        compatLabelTextStyle(mlData[i] && mlData[i].label);\n      }\n    }\n  }\n}\n\nfunction toArr(o) {\n  return zrUtil.isArray(o) ? o : o ? [o] : [];\n}\n\nfunction toObj(o) {\n  return (zrUtil.isArray(o) ? o[0] : o) || {};\n}\n\nfunction _default(option, isTheme) {\n  each(toArr(option.series), function (seriesOpt) {\n    isObject(seriesOpt) && processSeries(seriesOpt);\n  });\n  var axes = ['xAxis', 'yAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'parallelAxis', 'radar'];\n  isTheme && axes.push('valueAxis', 'categoryAxis', 'logAxis', 'timeAxis');\n  each(axes, function (axisName) {\n    each(toArr(option[axisName]), function (axisOpt) {\n      if (axisOpt) {\n        compatTextStyle(axisOpt, 'axisLabel');\n        compatTextStyle(axisOpt.axisPointer, 'label');\n      }\n    });\n  });\n  each(toArr(option.parallel), function (parallelOpt) {\n    var parallelAxisDefault = parallelOpt && parallelOpt.parallelAxisDefault;\n    compatTextStyle(parallelAxisDefault, 'axisLabel');\n    compatTextStyle(parallelAxisDefault && parallelAxisDefault.axisPointer, 'label');\n  });\n  each(toArr(option.calendar), function (calendarOpt) {\n    compatTextStyle(calendarOpt, 'dayLabel');\n    compatTextStyle(calendarOpt, 'monthLabel');\n    compatTextStyle(calendarOpt, 'yearLabel');\n  }); // radar.name.textStyle\n\n  each(toArr(option.radar), function (radarOpt) {\n    compatTextStyle(radarOpt, 'name');\n  });\n  each(toArr(option.geo), function (geoOpt) {\n    if (isObject(geoOpt)) {\n      compatLabelTextStyle(geoOpt.label);\n      each(toArr(geoOpt.regions), function (regionObj) {\n        compatLabelTextStyle(regionObj.label);\n      });\n    }\n  });\n  compatLabelTextStyle(toObj(option.timeline).label);\n  compatTextStyle(toObj(option.axisPointer), 'label');\n  compatTextStyle(toObj(option.tooltip).axisPointer, 'label');\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/preprocessor/helper/compatStyle.js\n// module id = 1178\n// module chunks = 0 1 2","var Gradient = require(\"zrender/lib/graphic/Gradient\");\n\nfunction _default(ecModel) {\n  function encodeColor(seriesModel) {\n    var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\n    var data = seriesModel.getData();\n    var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n    || seriesModel.getColorFromPalette(seriesModel.get('name')); // Default color\n    // FIXME Set color function or use the platte color\n\n    data.setVisual('color', color); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      if (typeof color === 'function' && !(color instanceof Gradient)) {\n        data.each(function (idx) {\n          data.setItemVisual(idx, 'color', color(seriesModel.getDataParams(idx)));\n        });\n      } // itemStyle in each data item\n\n\n      data.each(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        var color = itemModel.get(colorAccessPath, true);\n\n        if (color != null) {\n          data.setItemVisual(idx, 'color', color);\n        }\n      });\n    }\n  }\n\n  ecModel.eachRawSeries(encodeColor);\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/visual/seriesColor.js\n// module id = 1179\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../util/graphic\");\n\nvar PI = Math.PI;\n/**\n * @param {module:echarts/ExtensionAPI} api\n * @param {Object} [opts]\n * @param {string} [opts.text]\n * @param {string} [opts.color]\n * @param {string} [opts.textColor]\n * @return {module:zrender/Element}\n */\n\nfunction _default(api, opts) {\n  opts = opts || {};\n  zrUtil.defaults(opts, {\n    text: 'loading',\n    color: '#c23531',\n    textColor: '#000',\n    maskColor: 'rgba(255, 255, 255, 0.8)',\n    zlevel: 0\n  });\n  var mask = new graphic.Rect({\n    style: {\n      fill: opts.maskColor\n    },\n    zlevel: opts.zlevel,\n    z: 10000\n  });\n  var arc = new graphic.Arc({\n    shape: {\n      startAngle: -PI / 2,\n      endAngle: -PI / 2 + 0.1,\n      r: 10\n    },\n    style: {\n      stroke: opts.color,\n      lineCap: 'round',\n      lineWidth: 5\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  var labelRect = new graphic.Rect({\n    style: {\n      fill: 'none',\n      text: opts.text,\n      textPosition: 'right',\n      textDistance: 10,\n      textFill: opts.textColor\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  arc.animateShape(true).when(1000, {\n    endAngle: PI * 3 / 2\n  }).start('circularInOut');\n  arc.animateShape(true).when(1000, {\n    startAngle: PI * 3 / 2\n  }).delay(300).start('circularInOut');\n  var group = new graphic.Group();\n  group.add(arc);\n  group.add(labelRect);\n  group.add(mask); // Inject resize\n\n  group.resize = function () {\n    var cx = api.getWidth() / 2;\n    var cy = api.getHeight() / 2;\n    arc.setShape({\n      cx: cx,\n      cy: cy\n    });\n    var r = arc.shape.r;\n    labelRect.setShape({\n      x: cx - r,\n      y: cy - r,\n      width: r * 2,\n      height: r * 2\n    });\n    mask.setShape({\n      x: 0,\n      y: 0,\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n  };\n\n  group.resize();\n  return group;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/loading/default.js\n// module id = 1180\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar createListFromArray = require(\"./chart/helper/createListFromArray\");\n\nvar axisHelper = require(\"./coord/axisHelper\");\n\nvar axisModelCommonMixin = require(\"./coord/axisModelCommonMixin\");\n\nvar Model = require(\"./model/Model\");\n\nvar _completeDimensions = require(\"./data/helper/completeDimensions\");\n\nexports.completeDimensions = _completeDimensions;\n\nvar _symbol = require(\"./util/symbol\");\n\nexports.createSymbol = _symbol.createSymbol;\n\n/**\n * Create a muti dimension List structure from seriesModel.\n * @param  {module:echarts/model/Model} seriesModel\n * @return {module:echarts/data/List} list\n */\nfunction createList(seriesModel) {\n  var data = seriesModel.get('data');\n  return createListFromArray(data, seriesModel, seriesModel.ecModel);\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n */\n\n\n/**\n * Create scale\n * @param {Array.<number>} dataExtent\n * @param {Object|module:echarts/Model} option\n */\nfunction createScale(dataExtent, option) {\n  var axisModel = option;\n\n  if (!(option instanceof Model)) {\n    axisModel = new Model(option);\n    zrUtil.mixin(axisModel, axisModelCommonMixin);\n  }\n\n  var scale = axisHelper.createScaleByModel(axisModel);\n  scale.setExtent(dataExtent[0], dataExtent[1]);\n  axisHelper.niceScaleExtent(scale, axisModel);\n  return scale;\n}\n/**\n * Mixin common methods to axis model,\n *\n * Inlcude methods\n * `getFormattedLabels() => Array.<string>`\n * `getCategories() => Array.<string>`\n * `getMin(origin: boolean) => number`\n * `getMax(origin: boolean) => number`\n * `getNeedCrossZero() => boolean`\n * `setRange(start: number, end: number)`\n * `resetRange()`\n */\n\n\nfunction mixinAxisModelCommonMethods(Model) {\n  zrUtil.mixin(Model, axisModelCommonMixin);\n}\n\nexports.createList = createList;\nexports.createScale = createScale;\nexports.mixinAxisModelCommonMethods = mixinAxisModelCommonMethods;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/helper.js\n// module id = 1181\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Scale = require(\"./Scale\");\n\n/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n// FIXME only one data\nvar scaleProto = Scale.prototype;\nvar OrdinalScale = Scale.extend({\n  type: 'ordinal',\n  init: function (data, extent) {\n    this._data = data;\n    this._extent = extent || [0, data.length - 1];\n  },\n  parse: function (val) {\n    return typeof val === 'string' ? zrUtil.indexOf(this._data, val) // val might be float.\n    : Math.round(val);\n  },\n  contain: function (rank) {\n    rank = this.parse(rank);\n    return scaleProto.contain.call(this, rank) && this._data[rank] != null;\n  },\n\n  /**\n   * Normalize given rank or name to linear [0, 1]\n   * @param {number|string} [val]\n   * @return {number}\n   */\n  normalize: function (val) {\n    return scaleProto.normalize.call(this, this.parse(val));\n  },\n  scale: function (val) {\n    return Math.round(scaleProto.scale.call(this, val));\n  },\n\n  /**\n   * @return {Array}\n   */\n  getTicks: function () {\n    var ticks = [];\n    var extent = this._extent;\n    var rank = extent[0];\n\n    while (rank <= extent[1]) {\n      ticks.push(rank);\n      rank++;\n    }\n\n    return ticks;\n  },\n\n  /**\n   * Get item on rank n\n   * @param {number} n\n   * @return {string}\n   */\n  getLabel: function (n) {\n    return this._data[n];\n  },\n\n  /**\n   * @return {number}\n   */\n  count: function () {\n    return this._extent[1] - this._extent[0] + 1;\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    this.unionExtent(data.getDataExtent(dim, false));\n  },\n  niceTicks: zrUtil.noop,\n  niceExtent: zrUtil.noop\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nOrdinalScale.create = function () {\n  return new OrdinalScale();\n};\n\nvar _default = OrdinalScale;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/scale/Ordinal.js\n// module id = 1182\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar formatUtil = require(\"../util/format\");\n\nvar scaleHelper = require(\"./helper\");\n\nvar IntervalScale = require(\"./Interval\");\n\n// [About UTC and local time zone]:\n// In most cases, `number.parseDate` will treat input data string as local time\n// (except time zone is specified in time string). And `format.formateTime` returns\n// local time by default. option.useUTC is false by default. This design have\n// concidered these common case:\n// (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n// in local time by default.\n// (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n// as its original time, without any time difference.\nvar intervalScaleProto = IntervalScale.prototype;\nvar mathCeil = Math.ceil;\nvar mathFloor = Math.floor;\nvar ONE_SECOND = 1000;\nvar ONE_MINUTE = ONE_SECOND * 60;\nvar ONE_HOUR = ONE_MINUTE * 60;\nvar ONE_DAY = ONE_HOUR * 24; // FIXME 公用？\n\nvar bisect = function (a, x, lo, hi) {\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n\n    if (a[mid][1] < x) {\n      lo = mid + 1;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return lo;\n};\n/**\n * @alias module:echarts/coord/scale/Time\n * @constructor\n */\n\n\nvar TimeScale = IntervalScale.extend({\n  type: 'time',\n\n  /**\n   * @override\n   */\n  getLabel: function (val) {\n    var stepLvl = this._stepLvl;\n    var date = new Date(val);\n    return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n  },\n\n  /**\n   * @override\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      // Expand extent\n      extent[0] -= ONE_DAY;\n      extent[1] += ONE_DAY;\n    } // If there are no data and extent are [Infinity, -Infinity]\n\n\n    if (extent[1] === -Infinity && extent[0] === Infinity) {\n      var d = new Date();\n      extent[1] = +new Date(d.getFullYear(), d.getMonth(), d.getDate());\n      extent[0] = extent[1] - ONE_DAY;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n    }\n  },\n\n  /**\n   * @override\n   */\n  niceTicks: function (approxTickNum, minInterval, maxInterval) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n    var approxInterval = span / approxTickNum;\n\n    if (minInterval != null && approxInterval < minInterval) {\n      approxInterval = minInterval;\n    }\n\n    if (maxInterval != null && approxInterval > maxInterval) {\n      approxInterval = maxInterval;\n    }\n\n    var scaleLevelsLen = scaleLevels.length;\n    var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n    var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n    var interval = level[1]; // Same with interval scale if span is much larger than 1 year\n\n    if (level[0] === 'year') {\n      var yearSpan = span / interval; // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n      // var niceYearSpan = numberUtil.nice(yearSpan, false);\n\n      var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n      interval *= yearStep;\n    }\n\n    var timezoneOffset = this.getSetting('useUTC') ? 0 : new Date(+extent[0] || +extent[1]).getTimezoneOffset() * 60 * 1000;\n    var niceExtent = [Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset), Math.round(mathFloor((extent[1] - timezoneOffset) / interval) * interval + timezoneOffset)];\n    scaleHelper.fixExtent(niceExtent, extent);\n    this._stepLvl = level; // Interval will be used in getTicks\n\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n  parse: function (val) {\n    // val might be float.\n    return +numberUtil.parseDate(val);\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  TimeScale.prototype[methodName] = function (val) {\n    return intervalScaleProto[methodName].call(this, this.parse(val));\n  };\n}); // Steps from d3\n\nvar scaleLevels = [// Format              interval\n['hh:mm:ss', ONE_SECOND], // 1s\n['hh:mm:ss', ONE_SECOND * 5], // 5s\n['hh:mm:ss', ONE_SECOND * 10], // 10s\n['hh:mm:ss', ONE_SECOND * 15], // 15s\n['hh:mm:ss', ONE_SECOND * 30], // 30s\n['hh:mm\\nMM-dd', ONE_MINUTE], // 1m\n['hh:mm\\nMM-dd', ONE_MINUTE * 5], // 5m\n['hh:mm\\nMM-dd', ONE_MINUTE * 10], // 10m\n['hh:mm\\nMM-dd', ONE_MINUTE * 15], // 15m\n['hh:mm\\nMM-dd', ONE_MINUTE * 30], // 30m\n['hh:mm\\nMM-dd', ONE_HOUR], // 1h\n['hh:mm\\nMM-dd', ONE_HOUR * 2], // 2h\n['hh:mm\\nMM-dd', ONE_HOUR * 6], // 6h\n['hh:mm\\nMM-dd', ONE_HOUR * 12], // 12h\n['MM-dd\\nyyyy', ONE_DAY], // 1d\n['MM-dd\\nyyyy', ONE_DAY * 2], // 2d\n['MM-dd\\nyyyy', ONE_DAY * 3], // 3d\n['MM-dd\\nyyyy', ONE_DAY * 4], // 4d\n['MM-dd\\nyyyy', ONE_DAY * 5], // 5d\n['MM-dd\\nyyyy', ONE_DAY * 6], // 6d\n['week', ONE_DAY * 7], // 7d\n['MM-dd\\nyyyy', ONE_DAY * 10], // 10d\n['week', ONE_DAY * 14], // 2w\n['week', ONE_DAY * 21], // 3w\n['month', ONE_DAY * 31], // 1M\n['week', ONE_DAY * 42], // 6w\n['month', ONE_DAY * 62], // 2M\n['week', ONE_DAY * 42], // 10w\n['quarter', ONE_DAY * 380 / 4], // 3M\n['month', ONE_DAY * 31 * 4], // 4M\n['month', ONE_DAY * 31 * 5], // 5M\n['half-year', ONE_DAY * 380 / 2], // 6M\n['month', ONE_DAY * 31 * 8], // 8M\n['month', ONE_DAY * 31 * 10], // 10M\n['year', ONE_DAY * 380] // 1Y\n];\n/**\n * @param {module:echarts/model/Model}\n * @return {module:echarts/scale/Time}\n */\n\nTimeScale.create = function (model) {\n  return new TimeScale({\n    useUTC: model.ecModel.get('useUTC')\n  });\n};\n\nvar _default = TimeScale;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/scale/Time.js\n// module id = 1183\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Scale = require(\"./Scale\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar IntervalScale = require(\"./Interval\");\n\n/**\n * Log scale\n * @module echarts/scale/Log\n */\n// Use some method of IntervalScale\nvar scaleProto = Scale.prototype;\nvar intervalScaleProto = IntervalScale.prototype;\nvar getPrecisionSafe = numberUtil.getPrecisionSafe;\nvar roundingErrorFix = numberUtil.round;\nvar mathFloor = Math.floor;\nvar mathCeil = Math.ceil;\nvar mathPow = Math.pow;\nvar mathLog = Math.log;\nvar LogScale = Scale.extend({\n  type: 'log',\n  base: 10,\n  $constructor: function () {\n    Scale.apply(this, arguments);\n    this._originalScale = new IntervalScale();\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    var originalScale = this._originalScale;\n    var extent = this._extent;\n    var originalExtent = originalScale.getExtent();\n    return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n      var powVal = numberUtil.round(mathPow(this.base, val)); // Fix #4158\n\n      powVal = val === extent[0] && originalScale.__fixMin ? fixRoundingError(powVal, originalExtent[0]) : powVal;\n      powVal = val === extent[1] && originalScale.__fixMax ? fixRoundingError(powVal, originalExtent[1]) : powVal;\n      return powVal;\n    }, this);\n  },\n\n  /**\n   * @param {number} val\n   * @return {string}\n   */\n  getLabel: intervalScaleProto.getLabel,\n\n  /**\n   * @param  {number} val\n   * @return {number}\n   */\n  scale: function (val) {\n    val = scaleProto.scale.call(this, val);\n    return mathPow(this.base, val);\n  },\n\n  /**\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var base = this.base;\n    start = mathLog(start) / mathLog(base);\n    end = mathLog(end) / mathLog(base);\n    intervalScaleProto.setExtent.call(this, start, end);\n  },\n\n  /**\n   * @return {number} end\n   */\n  getExtent: function () {\n    var base = this.base;\n    var extent = scaleProto.getExtent.call(this);\n    extent[0] = mathPow(base, extent[0]);\n    extent[1] = mathPow(base, extent[1]); // Fix #4158\n\n    var originalScale = this._originalScale;\n    var originalExtent = originalScale.getExtent();\n    originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n    originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n    return extent;\n  },\n\n  /**\n   * @param  {Array.<number>} extent\n   */\n  unionExtent: function (extent) {\n    this._originalScale.unionExtent(extent);\n\n    var base = this.base;\n    extent[0] = mathLog(extent[0]) / mathLog(base);\n    extent[1] = mathLog(extent[1]) / mathLog(base);\n    scaleProto.unionExtent.call(this, extent);\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    this.unionExtent(data.getDataExtent(dim, true, function (val) {\n      return val > 0;\n    }));\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   * @param  {number} [approxTickNum = 10] Given approx tick number\n   */\n  niceTicks: function (approxTickNum) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (span === Infinity || span <= 0) {\n      return;\n    }\n\n    var interval = numberUtil.quantity(span);\n    var err = approxTickNum / span * interval; // Filter ticks to get closer to the desired count.\n\n    if (err <= 0.5) {\n      interval *= 10;\n    } // Interval should be integer\n\n\n    while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n      interval *= 10;\n    }\n\n    var niceExtent = [numberUtil.round(mathCeil(extent[0] / interval) * interval), numberUtil.round(mathFloor(extent[1] / interval) * interval)];\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @override\n   */\n  niceExtent: function (opt) {\n    intervalScaleProto.niceExtent.call(this, opt);\n    var originalScale = this._originalScale;\n    originalScale.__fixMin = opt.fixMin;\n    originalScale.__fixMax = opt.fixMax;\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  LogScale.prototype[methodName] = function (val) {\n    val = mathLog(val) / mathLog(this.base);\n    return scaleProto[methodName].call(this, val);\n  };\n});\n\nLogScale.create = function () {\n  return new LogScale();\n};\n\nfunction fixRoundingError(val, originalVal) {\n  return roundingErrorFix(val, getPrecisionSafe(originalVal));\n}\n\nvar _default = LogScale;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/scale/Log.js\n// module id = 1184\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar modelHelper = require(\"./modelHelper\");\n\nvar findPointFromSeries = require(\"./findPointFromSeries\");\n\nvar each = zrUtil.each;\nvar curry = zrUtil.curry;\nvar get = modelUtil.makeGetter();\n/**\n * Basic logic: check all axis, if they do not demand show/highlight,\n * then hide/downplay them.\n *\n * @param {Object} coordSysAxesInfo\n * @param {Object} payload\n * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n * @param {Object} [payload.dataIndex] finder, restrict target axes.\n * @param {Object} [payload.axesInfo] finder, restrict target axes.\n *        [{\n *          axisDim: 'x'|'y'|'angle'|...,\n *          axisIndex: ...,\n *          value: ...\n *        }, ...]\n * @param {Function} [payload.dispatchAction]\n * @param {Object} [payload.tooltipOption]\n * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n *        which can be specified in dispatchAction\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n * @return {Object} content of event obj for echarts.connect.\n */\n\nfunction _default(payload, ecModel, api) {\n  var currTrigger = payload.currTrigger;\n  var point = [payload.x, payload.y];\n  var finder = payload;\n  var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n  var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo; // Pending\n  // See #6121. But we are not able to reproduce it yet.\n\n  if (!coordSysAxesInfo) {\n    return;\n  }\n\n  if (illegalPoint(point)) {\n    // Used in the default behavior of `connection`: use the sample seriesIndex\n    // and dataIndex. And also used in the tooltipView trigger.\n    point = findPointFromSeries({\n      seriesIndex: finder.seriesIndex,\n      // Do not use dataIndexInside from other ec instance.\n      // FIXME: auto detect it?\n      dataIndex: finder.dataIndex\n    }, ecModel).point;\n  }\n\n  var isIllegalPoint = illegalPoint(point); // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n  // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n  // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n  // and dataIndex.\n\n  var inputAxesInfo = finder.axesInfo;\n  var axesInfo = coordSysAxesInfo.axesInfo;\n  var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n  var outputFinder = {};\n  var showValueMap = {};\n  var dataByCoordSys = {\n    list: [],\n    map: {}\n  };\n  var updaters = {\n    showPointer: curry(showPointer, showValueMap),\n    showTooltip: curry(showTooltip, dataByCoordSys)\n  }; // Process for triggered axes.\n\n  each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n    // If a point given, it must be contained by the coordinate system.\n    var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n    each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n      var axis = axisInfo.axis;\n      var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo); // If no inputAxesInfo, no axis is restricted.\n\n      if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n        var val = inputAxisInfo && inputAxisInfo.value;\n\n        if (val == null && !isIllegalPoint) {\n          val = axis.pointToData(point);\n        }\n\n        val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n      }\n    });\n  }); // Process for linked axes.\n\n  var linkTriggers = {};\n  each(axesInfo, function (tarAxisInfo, tarKey) {\n    var linkGroup = tarAxisInfo.linkGroup; // If axis has been triggered in the previous stage, it should not be triggered by link.\n\n    if (linkGroup && !showValueMap[tarKey]) {\n      each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n        var srcValItem = showValueMap[srcKey]; // If srcValItem exist, source axis is triggered, so link to target axis.\n\n        if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n          var val = srcValItem.value;\n          linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo))));\n          linkTriggers[tarAxisInfo.key] = val;\n        }\n      });\n    }\n  });\n  each(linkTriggers, function (val, tarKey) {\n    processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n  });\n  updateModelActually(showValueMap, axesInfo, outputFinder);\n  dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n  dispatchHighDownActually(axesInfo, dispatchAction, api);\n  return outputFinder;\n}\n\nfunction processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n  var axis = axisInfo.axis;\n\n  if (axis.scale.isBlank() || !axis.containData(newValue)) {\n    return;\n  }\n\n  if (!axisInfo.involveSeries) {\n    updaters.showPointer(axisInfo, newValue);\n    return;\n  } // Heavy calculation. So put it after axis.containData checking.\n\n\n  var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n  var payloadBatch = payloadInfo.payloadBatch;\n  var snapToValue = payloadInfo.snapToValue; // Fill content of event obj for echarts.connect.\n  // By defualt use the first involved series data as a sample to connect.\n\n  if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n    zrUtil.extend(outputFinder, payloadBatch[0]);\n  } // If no linkSource input, this process is for collecting link\n  // target, where snap should not be accepted.\n\n\n  if (!dontSnap && axisInfo.snap) {\n    if (axis.containData(snapToValue) && snapToValue != null) {\n      newValue = snapToValue;\n    }\n  }\n\n  updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder); // Tooltip should always be snapToValue, otherwise there will be\n  // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n\n  updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n}\n\nfunction buildPayloadsBySeries(value, axisInfo) {\n  var axis = axisInfo.axis;\n  var dim = axis.dim;\n  var snapToValue = value;\n  var payloadBatch = [];\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n  each(axisInfo.seriesModels, function (series, idx) {\n    var dataDim = series.coordDimToDataDim(dim);\n    var seriesNestestValue;\n    var dataIndices;\n\n    if (series.getAxisTooltipData) {\n      var result = series.getAxisTooltipData(dataDim, value, axis);\n      dataIndices = result.dataIndices;\n      seriesNestestValue = result.nestestValue;\n    } else {\n      dataIndices = series.getData().indicesOfNearest(dataDim[0], value, // Add a threshold to avoid find the wrong dataIndex\n      // when data length is not same.\n      false, axis.type === 'category' ? 0.5 : null);\n\n      if (!dataIndices.length) {\n        return;\n      }\n\n      seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n    }\n\n    if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n      return;\n    }\n\n    var diff = value - seriesNestestValue;\n    var dist = Math.abs(diff); // Consider category case\n\n    if (dist <= minDist) {\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        snapToValue = seriesNestestValue;\n        payloadBatch.length = 0;\n      }\n\n      each(dataIndices, function (dataIndex) {\n        payloadBatch.push({\n          seriesIndex: series.seriesIndex,\n          dataIndexInside: dataIndex,\n          dataIndex: series.getData().getRawIndex(dataIndex)\n        });\n      });\n    }\n  });\n  return {\n    payloadBatch: payloadBatch,\n    snapToValue: snapToValue\n  };\n}\n\nfunction showPointer(showValueMap, axisInfo, value, payloadBatch) {\n  showValueMap[axisInfo.key] = {\n    value: value,\n    payloadBatch: payloadBatch\n  };\n}\n\nfunction showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n  var payloadBatch = payloadInfo.payloadBatch;\n  var axis = axisInfo.axis;\n  var axisModel = axis.model;\n  var axisPointerModel = axisInfo.axisPointerModel; // If no data, do not create anything in dataByCoordSys,\n  // whose length will be used to judge whether dispatch action.\n\n  if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n    return;\n  }\n\n  var coordSysModel = axisInfo.coordSys.model;\n  var coordSysKey = modelHelper.makeKey(coordSysModel);\n  var coordSysItem = dataByCoordSys.map[coordSysKey];\n\n  if (!coordSysItem) {\n    coordSysItem = dataByCoordSys.map[coordSysKey] = {\n      coordSysId: coordSysModel.id,\n      coordSysIndex: coordSysModel.componentIndex,\n      coordSysType: coordSysModel.type,\n      coordSysMainType: coordSysModel.mainType,\n      dataByAxis: []\n    };\n    dataByCoordSys.list.push(coordSysItem);\n  }\n\n  coordSysItem.dataByAxis.push({\n    axisDim: axis.dim,\n    axisIndex: axisModel.componentIndex,\n    axisType: axisModel.type,\n    axisId: axisModel.id,\n    value: value,\n    // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n    // depends that all models have been updated. So it should not be performed\n    // here. Considering axisPointerModel used here is volatile, which is hard\n    // to be retrieve in TooltipView, we prepare parameters here.\n    valueLabelOpt: {\n      precision: axisPointerModel.get('label.precision'),\n      formatter: axisPointerModel.get('label.formatter')\n    },\n    seriesDataIndices: payloadBatch.slice()\n  });\n}\n\nfunction updateModelActually(showValueMap, axesInfo, outputFinder) {\n  var outputAxesInfo = outputFinder.axesInfo = []; // Basic logic: If no 'show' required, 'hide' this axisPointer.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    var valItem = showValueMap[key];\n\n    if (valItem) {\n      !axisInfo.useHandle && (option.status = 'show');\n      option.value = valItem.value; // For label formatter param and highlight.\n\n      option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n    } // When always show (e.g., handle used), remain\n    // original value and status.\n    else {\n        // If hide, value still need to be set, consider\n        // click legend to toggle axis blank.\n        !axisInfo.useHandle && (option.status = 'hide');\n      } // If status is 'hide', should be no info in payload.\n\n\n    option.status === 'show' && outputAxesInfo.push({\n      axisDim: axisInfo.axis.dim,\n      axisIndex: axisInfo.axis.model.componentIndex,\n      value: option.value\n    });\n  });\n}\n\nfunction dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n  // Basic logic: If no showTip required, hideTip will be dispatched.\n  if (illegalPoint(point) || !dataByCoordSys.list.length) {\n    dispatchAction({\n      type: 'hideTip'\n    });\n    return;\n  } // In most case only one axis (or event one series is used). It is\n  // convinient to fetch payload.seriesIndex and payload.dataIndex\n  // dirtectly. So put the first seriesIndex and dataIndex of the first\n  // axis on the payload.\n\n\n  var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n  dispatchAction({\n    type: 'showTip',\n    escapeConnect: true,\n    x: point[0],\n    y: point[1],\n    tooltipOption: payload.tooltipOption,\n    position: payload.position,\n    dataIndexInside: sampleItem.dataIndexInside,\n    dataIndex: sampleItem.dataIndex,\n    seriesIndex: sampleItem.seriesIndex,\n    dataByCoordSys: dataByCoordSys.list\n  });\n}\n\nfunction dispatchHighDownActually(axesInfo, dispatchAction, api) {\n  // FIXME\n  // highlight status modification shoule be a stage of main process?\n  // (Consider confilct (e.g., legend and axisPointer) and setOption)\n  var zr = api.getZr();\n  var highDownKey = 'axisPointerLastHighlights';\n  var lastHighlights = get(zr)[highDownKey] || {};\n  var newHighlights = get(zr)[highDownKey] = {}; // Update highlight/downplay status according to axisPointer model.\n  // Build hash map and remove duplicate incidentally.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n      var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n      newHighlights[key] = batchItem;\n    });\n  }); // Diff.\n\n  var toHighlight = [];\n  var toDownplay = [];\n  zrUtil.each(lastHighlights, function (batchItem, key) {\n    !newHighlights[key] && toDownplay.push(batchItem);\n  });\n  zrUtil.each(newHighlights, function (batchItem, key) {\n    !lastHighlights[key] && toHighlight.push(batchItem);\n  });\n  toDownplay.length && api.dispatchAction({\n    type: 'downplay',\n    escapeConnect: true,\n    batch: toDownplay\n  });\n  toHighlight.length && api.dispatchAction({\n    type: 'highlight',\n    escapeConnect: true,\n    batch: toHighlight\n  });\n}\n\nfunction findInputAxisInfo(inputAxesInfo, axisInfo) {\n  for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n    var inputAxisInfo = inputAxesInfo[i];\n\n    if (axisInfo.axis.dim === inputAxisInfo.axisDim && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex) {\n      return inputAxisInfo;\n    }\n  }\n}\n\nfunction makeMapperParam(axisInfo) {\n  var axisModel = axisInfo.axis.model;\n  var item = {};\n  var dim = item.axisDim = axisInfo.axis.dim;\n  item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n  item.axisName = item[dim + 'AxisName'] = axisModel.name;\n  item.axisId = item[dim + 'AxisId'] = axisModel.id;\n  return item;\n}\n\nfunction illegalPoint(point) {\n  return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/axisTrigger.js\n// module id = 1185\n// module chunks = 0 1 2","var echarts = require(\"../../echarts\");\n\nvar AxisPointerModel = echarts.extendComponentModel({\n  type: 'axisPointer',\n  coordSysAxesInfo: null,\n  defaultOption: {\n    // 'auto' means that show when triggered by tooltip or handle.\n    show: 'auto',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: null,\n    // set default in AxisPonterView.js\n    zlevel: 0,\n    z: 50,\n    type: 'line',\n    // axispointer triggered by tootip determine snap automatically,\n    // see `modelHelper`.\n    snap: false,\n    triggerTooltip: true,\n    value: null,\n    status: null,\n    // Init value depends on whether handle is used.\n    // [group0, group1, ...]\n    // Each group can be: {\n    //      mapper: function () {},\n    //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n    //      xAxisId: ...,\n    //      yAxisName: ...,\n    //      angleAxisIndex: ...\n    // }\n    // mapper: can be ignored.\n    //      input: {axisInfo, value}\n    //      output: {axisInfo, value}\n    link: [],\n    // Do not set 'auto' here, otherwise global animation: false\n    // will not effect at this axispointer.\n    animation: null,\n    animationDurationUpdate: 200,\n    lineStyle: {\n      color: '#aaa',\n      width: 1,\n      type: 'solid'\n    },\n    shadowStyle: {\n      color: 'rgba(150,150,150,0.3)'\n    },\n    label: {\n      show: true,\n      formatter: null,\n      // string | Function\n      precision: 'auto',\n      // Or a number like 0, 1, 2 ...\n      margin: 3,\n      color: '#fff',\n      padding: [5, 7, 5, 7],\n      backgroundColor: 'auto',\n      // default: axis line color\n      borderColor: null,\n      borderWidth: 0,\n      shadowBlur: 3,\n      shadowColor: '#aaa' // Considering applicability, common style should\n      // better not have shadowOffset.\n      // shadowOffsetX: 0,\n      // shadowOffsetY: 2\n\n    },\n    handle: {\n      show: false,\n      icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z',\n      // jshint ignore:line\n      size: 45,\n      // handle margin is from symbol center to axis, which is stable when circular move.\n      margin: 50,\n      // color: '#1b8bbd'\n      // color: '#2f4554'\n      color: '#333',\n      shadowBlur: 3,\n      shadowColor: '#aaa',\n      shadowOffsetX: 0,\n      shadowOffsetY: 2,\n      // For mobile performance\n      throttle: 40\n    }\n  }\n});\nvar _default = AxisPointerModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/AxisPointerModel.js\n// module id = 1186\n// module chunks = 0 1 2","var echarts = require(\"../../echarts\");\n\nvar globalListener = require(\"./globalListener\");\n\nvar AxisPointerView = echarts.extendComponentView({\n  type: 'axisPointer',\n  render: function (globalAxisPointerModel, ecModel, api) {\n    var globalTooltipModel = ecModel.getComponent('tooltip');\n    var triggerOn = globalAxisPointerModel.get('triggerOn') || globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click'; // Register global listener in AxisPointerView to enable\n    // AxisPointerView to be independent to Tooltip.\n\n    globalListener.register('axisPointer', api, function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none' && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)) {\n        dispatchAction({\n          type: 'updateAxisPointer',\n          currTrigger: currTrigger,\n          x: e && e.offsetX,\n          y: e && e.offsetY\n        });\n      }\n    });\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    globalListener.unregister(api.getZr(), 'axisPointer');\n    AxisPointerView.superApply(this._model, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    globalListener.unregister('axisPointer', api);\n    AxisPointerView.superApply(this._model, 'dispose', arguments);\n  }\n});\nvar _default = AxisPointerView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/AxisPointerView.js\n// module id = 1187\n// module chunks = 0 1 2","var echarts = require(\"../../echarts\");\n\nvar _default = echarts.extendComponentModel({\n  type: 'tooltip',\n  dependencies: ['axisPointer'],\n  defaultOption: {\n    zlevel: 0,\n    z: 8,\n    show: true,\n    // tooltip主体内容\n    showContent: true,\n    // 'trigger' only works on coordinate system.\n    // 'item' | 'axis' | 'none'\n    trigger: 'item',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: 'mousemove|click',\n    alwaysShowContent: false,\n    displayMode: 'single',\n    // 'single' | 'multipleByCoordSys'\n    // 位置 {Array} | {Function}\n    // position: null\n    // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n    // align: null,\n    // verticalAlign: null,\n    // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n    confine: false,\n    // 内容格式器：{string}（Template） ¦ {Function}\n    // formatter: null\n    showDelay: 0,\n    // 隐藏延迟，单位ms\n    hideDelay: 100,\n    // 动画变换时间，单位s\n    transitionDuration: 0.4,\n    enterable: false,\n    // 提示背景颜色，默认为透明度为0.7的黑色\n    backgroundColor: 'rgba(50,50,50,0.7)',\n    // 提示边框颜色\n    borderColor: '#333',\n    // 提示边框圆角，单位px，默认为4\n    borderRadius: 4,\n    // 提示边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 提示内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // Extra css text\n    extraCssText: '',\n    // 坐标轴指示器，坐标轴触发有效\n    axisPointer: {\n      // 默认为直线\n      // 可选为：'line' | 'shadow' | 'cross'\n      type: 'line',\n      // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n      // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n      // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n      // 极坐标系会默认选择 angle 轴\n      axis: 'auto',\n      animation: 'auto',\n      animationDurationUpdate: 200,\n      animationEasingUpdate: 'exponentialOut',\n      crossStyle: {\n        color: '#999',\n        width: 1,\n        type: 'dashed',\n        // TODO formatter\n        textStyle: {} // lineStyle and shadowStyle should not be specified here,\n        // otherwise it will always override those styles on option.axisPointer.\n\n      }\n    },\n    textStyle: {\n      color: '#fff',\n      fontSize: 14\n    }\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/tooltip/TooltipModel.js\n// module id = 1188\n// module chunks = 0 1 2","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar TooltipContent = require(\"./TooltipContent\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar findPointFromSeries = require(\"../axisPointer/findPointFromSeries\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar Model = require(\"../../model/Model\");\n\nvar globalListener = require(\"../axisPointer/globalListener\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar axisPointerViewHelper = require(\"../axisPointer/viewHelper\");\n\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar parsePercent = numberUtil.parsePercent;\nvar proxyRect = new graphic.Rect({\n  shape: {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  }\n});\n\nvar _default = echarts.extendComponentView({\n  type: 'tooltip',\n  init: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    var tooltipContent = new TooltipContent(api.getDom(), api);\n    this._tooltipContent = tooltipContent;\n  },\n  render: function (tooltipModel, ecModel, api) {\n    if (env.node) {\n      return;\n    } // Reset\n\n\n    this.group.removeAll();\n    /**\n     * @private\n     * @type {module:echarts/component/tooltip/TooltipModel}\n     */\n\n    this._tooltipModel = tooltipModel;\n    /**\n     * @private\n     * @type {module:echarts/model/Global}\n     */\n\n    this._ecModel = ecModel;\n    /**\n     * @private\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this._api = api;\n    /**\n     * Should be cleaned when render.\n     * @private\n     * @type {Array.<Array.<Object>>}\n     */\n\n    this._lastDataByCoordSys = null;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.update();\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n    this._initGlobalListener();\n\n    this._keepShow();\n  },\n  _initGlobalListener: function () {\n    var tooltipModel = this._tooltipModel;\n    var triggerOn = tooltipModel.get('triggerOn');\n    globalListener.register('itemTooltip', this._api, bind(function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none') {\n        if (triggerOn.indexOf(currTrigger) >= 0) {\n          this._tryShow(e, dispatchAction);\n        } else if (currTrigger === 'leave') {\n          this._hide(dispatchAction);\n        }\n      }\n    }, this));\n  },\n  _keepShow: function () {\n    var tooltipModel = this._tooltipModel;\n    var ecModel = this._ecModel;\n    var api = this._api; // Try to keep the tooltip show when refreshing\n\n    if (this._lastX != null && this._lastY != null // When user is willing to control tooltip totally using API,\n    // self.manuallyShowTip({x, y}) might cause tooltip hide,\n    // which is not expected.\n    && tooltipModel.get('triggerOn') !== 'none') {\n      var self = this;\n      clearTimeout(this._refreshUpdateTimeout);\n      this._refreshUpdateTimeout = setTimeout(function () {\n        // Show tip next tick after other charts are rendered\n        // In case highlight action has wrong result\n        // FIXME\n        self.manuallyShowTip(tooltipModel, ecModel, api, {\n          x: self._lastX,\n          y: self._lastY\n        });\n      });\n    }\n  },\n\n  /**\n   * Show tip manually by\n   * dispatchAction({\n   *     type: 'showTip',\n   *     x: 10,\n   *     y: 10\n   * });\n   * Or\n   * dispatchAction({\n   *      type: 'showTip',\n   *      seriesIndex: 0,\n   *      dataIndex or dataIndexInside or name\n   * });\n   *\n   *  TODO Batch\n   */\n  manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n    if (payload.from === this.uid || env.node) {\n      return;\n    }\n\n    var dispatchAction = makeDispatchAction(payload, api); // Reset ticket\n\n    this._ticket = ''; // When triggered from axisPointer.\n\n    var dataByCoordSys = payload.dataByCoordSys;\n\n    if (payload.tooltip && payload.x != null && payload.y != null) {\n      var el = proxyRect;\n      el.position = [payload.x, payload.y];\n      el.update();\n      el.tooltip = payload.tooltip; // Manually show tooltip while view is not using zrender elements.\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        target: el\n      }, dispatchAction);\n    } else if (dataByCoordSys) {\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        event: {},\n        dataByCoordSys: payload.dataByCoordSys,\n        tooltipOption: payload.tooltipOption\n      }, dispatchAction);\n    } else if (payload.seriesIndex != null) {\n      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n        return;\n      }\n\n      var pointInfo = findPointFromSeries(payload, ecModel);\n      var cx = pointInfo.point[0];\n      var cy = pointInfo.point[1];\n\n      if (cx != null && cy != null) {\n        this._tryShow({\n          offsetX: cx,\n          offsetY: cy,\n          position: payload.position,\n          target: pointInfo.el,\n          event: {}\n        }, dispatchAction);\n      }\n    } else if (payload.x != null && payload.y != null) {\n      // FIXME\n      // should wrap dispatchAction like `axisPointer/globalListener` ?\n      api.dispatchAction({\n        type: 'updateAxisPointer',\n        x: payload.x,\n        y: payload.y\n      });\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        target: api.getZr().findHover(payload.x, payload.y).target,\n        event: {}\n      }, dispatchAction);\n    }\n  },\n  manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n    var tooltipContent = this._tooltipContent;\n\n    if (!this._alwaysShowContent) {\n      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n    }\n\n    this._lastX = this._lastY = null;\n\n    if (payload.from !== this.uid) {\n      this._hide(makeDispatchAction(payload, api));\n    }\n  },\n  // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n  // and tooltip.\n  _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n    var seriesIndex = payload.seriesIndex;\n    var dataIndex = payload.dataIndex;\n    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n      return;\n    }\n\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (!seriesModel) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model, tooltipModel]);\n\n    if (tooltipModel.get('trigger') !== 'axis') {\n      return;\n    }\n\n    api.dispatchAction({\n      type: 'updateAxisPointer',\n      seriesIndex: seriesIndex,\n      dataIndex: dataIndex,\n      position: payload.position\n    });\n    return true;\n  },\n  _tryShow: function (e, dispatchAction) {\n    var el = e.target;\n    var tooltipModel = this._tooltipModel;\n\n    if (!tooltipModel) {\n      return;\n    } // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n\n\n    this._lastX = e.offsetX;\n    this._lastY = e.offsetY;\n    var dataByCoordSys = e.dataByCoordSys;\n\n    if (dataByCoordSys && dataByCoordSys.length) {\n      this._showAxisTooltip(dataByCoordSys, e);\n    } // Always show item tooltip if mouse is on the element with dataIndex\n    else if (el && el.dataIndex != null) {\n        this._lastDataByCoordSys = null;\n\n        this._showSeriesItemTooltip(e, el, dispatchAction);\n      } // Tooltip provided directly. Like legend.\n      else if (el && el.tooltip) {\n          this._lastDataByCoordSys = null;\n\n          this._showComponentItemTooltip(e, el, dispatchAction);\n        } else {\n          this._lastDataByCoordSys = null;\n\n          this._hide(dispatchAction);\n        }\n  },\n  _showOrMove: function (tooltipModel, cb) {\n    // showDelay is used in this case: tooltip.enterable is set\n    // as true. User intent to move mouse into tooltip and click\n    // something. `showDelay` makes it easyer to enter the content\n    // but tooltip do not move immediately.\n    var delay = tooltipModel.get('showDelay');\n    cb = zrUtil.bind(cb, this);\n    clearTimeout(this._showTimout);\n    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\n  },\n  _showAxisTooltip: function (dataByCoordSys, e) {\n    var ecModel = this._ecModel;\n    var globalTooltipModel = this._tooltipModel;\n    var point = [e.offsetX, e.offsetY];\n    var singleDefaultHTML = [];\n    var singleParamsList = [];\n    var singleTooltipModel = buildTooltipModel([e.tooltipOption, globalTooltipModel]);\n    each(dataByCoordSys, function (itemCoordSys) {\n      // var coordParamList = [];\n      // var coordDefaultHTML = [];\n      // var coordTooltipModel = buildTooltipModel([\n      //     e.tooltipOption,\n      //     itemCoordSys.tooltipOption,\n      //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n      //     globalTooltipModel\n      // ]);\n      // var displayMode = coordTooltipModel.get('displayMode');\n      // var paramsList = displayMode === 'single' ? singleParamsList : [];\n      each(itemCoordSys.dataByAxis, function (item) {\n        var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n        var axisValue = item.value;\n        var seriesDefaultHTML = [];\n\n        if (!axisModel || axisValue == null) {\n          return;\n        }\n\n        var valueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, item.seriesDataIndices, item.valueLabelOpt);\n        zrUtil.each(item.seriesDataIndices, function (idxItem) {\n          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n          var dataIndex = idxItem.dataIndexInside;\n          var dataParams = series && series.getDataParams(dataIndex);\n          dataParams.axisDim = item.axisDim;\n          dataParams.axisIndex = item.axisIndex;\n          dataParams.axisType = item.axisType;\n          dataParams.axisId = item.axisId;\n          dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n          dataParams.axisValueLabel = valueLabel;\n\n          if (dataParams) {\n            singleParamsList.push(dataParams);\n            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n          }\n        }); // Default tooltip content\n        // FIXME\n        // (1) shold be the first data which has name?\n        // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n\n        var firstLine = valueLabel;\n        singleDefaultHTML.push((firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '') + seriesDefaultHTML.join('<br />'));\n      });\n    }, this); // In most case, the second axis is shown upper than the first one.\n\n    singleDefaultHTML.reverse();\n    singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n    var positionExpr = e.position;\n\n    this._showOrMove(singleTooltipModel, function () {\n      if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, singleParamsList);\n      } else {\n        this._showTooltipContent(singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(), point[0], point[1], positionExpr);\n      }\n    }); // Do not trigger events here, because this branch only be entered\n    // from dispatchAction.\n\n  },\n  _showSeriesItemTooltip: function (e, el, dispatchAction) {\n    var ecModel = this._ecModel; // Use dataModel in element if possible\n    // Used when mouseover on a element like markPoint or edge\n    // In which case, the data is not main data in series.\n\n    var seriesIndex = el.seriesIndex;\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex); // For example, graph link.\n\n    var dataModel = el.dataModel || seriesModel;\n    var dataIndex = el.dataIndex;\n    var dataType = el.dataType;\n    var data = dataModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model, this._tooltipModel]);\n    var tooltipTrigger = tooltipModel.get('trigger');\n\n    if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n      return;\n    }\n\n    var params = dataModel.getDataParams(dataIndex, dataType);\n    var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n    this._showOrMove(tooltipModel, function () {\n      this._showTooltipContent(tooltipModel, defaultHtml, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target);\n    }); // FIXME\n    // duplicated showtip if manuallyShowTip is called from dispatchAction.\n\n\n    dispatchAction({\n      type: 'showTip',\n      dataIndexInside: dataIndex,\n      dataIndex: data.getRawIndex(dataIndex),\n      seriesIndex: seriesIndex,\n      from: this.uid\n    });\n  },\n  _showComponentItemTooltip: function (e, el, dispatchAction) {\n    var tooltipOpt = el.tooltip;\n\n    if (typeof tooltipOpt === 'string') {\n      var content = tooltipOpt;\n      tooltipOpt = {\n        content: content,\n        // Fixed formatter\n        formatter: content\n      };\n    }\n\n    var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n    var defaultHtml = subTooltipModel.get('content');\n    var asyncTicket = Math.random(); // Do not check whether `trigger` is 'none' here, because `trigger`\n    // only works on cooridinate system. In fact, we have not found case\n    // that requires setting `trigger` nothing on component yet.\n\n    this._showOrMove(subTooltipModel, function () {\n      this._showTooltipContent(subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {}, asyncTicket, e.offsetX, e.offsetY, e.position, el);\n    }); // If not dispatch showTip, tip may be hide triggered by axis.\n\n\n    dispatchAction({\n      type: 'showTip',\n      from: this.uid\n    });\n  },\n  _showTooltipContent: function (tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el) {\n    // Reset ticket\n    this._ticket = '';\n\n    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n      return;\n    }\n\n    var tooltipContent = this._tooltipContent;\n    var formatter = tooltipModel.get('formatter');\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var html = defaultHtml;\n\n    if (formatter && typeof formatter === 'string') {\n      html = formatUtil.formatTpl(formatter, params, true);\n    } else if (typeof formatter === 'function') {\n      var callback = bind(function (cbTicket, html) {\n        if (cbTicket === this._ticket) {\n          tooltipContent.setContent(html);\n\n          this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n        }\n      }, this);\n      this._ticket = asyncTicket;\n      html = formatter(params, asyncTicket, callback);\n    }\n\n    tooltipContent.setContent(html);\n    tooltipContent.show(tooltipModel);\n\n    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n  },\n\n  /**\n   * @param  {string|Function|Array.<number>|Object} positionExpr\n   * @param  {number} x Mouse x\n   * @param  {number} y Mouse y\n   * @param  {boolean} confine Whether confine tooltip content in view rect.\n   * @param  {Object|<Array.<Object>} params\n   * @param  {module:zrender/Element} el target element\n   * @param  {module:echarts/ExtensionAPI} api\n   * @return {Array.<number>}\n   */\n  _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n    var viewWidth = this._api.getWidth();\n\n    var viewHeight = this._api.getHeight();\n\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var contentSize = content.getSize();\n    var align = tooltipModel.get('align');\n    var vAlign = tooltipModel.get('verticalAlign');\n    var rect = el && el.getBoundingRect().clone();\n    el && rect.applyTransform(el.transform);\n\n    if (typeof positionExpr === 'function') {\n      // Callback of position can be an array or a string specify the position\n      positionExpr = positionExpr([x, y], params, content.el, rect, {\n        viewSize: [viewWidth, viewHeight],\n        contentSize: contentSize.slice()\n      });\n    }\n\n    if (zrUtil.isArray(positionExpr)) {\n      x = parsePercent(positionExpr[0], viewWidth);\n      y = parsePercent(positionExpr[1], viewHeight);\n    } else if (zrUtil.isObject(positionExpr)) {\n      positionExpr.width = contentSize[0];\n      positionExpr.height = contentSize[1];\n      var layoutRect = layoutUtil.getLayoutRect(positionExpr, {\n        width: viewWidth,\n        height: viewHeight\n      });\n      x = layoutRect.x;\n      y = layoutRect.y;\n      align = null; // When positionExpr is left/top/right/bottom,\n      // align and verticalAlign will not work.\n\n      vAlign = null;\n    } // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n    else if (typeof positionExpr === 'string' && el) {\n        var pos = calcTooltipPosition(positionExpr, rect, contentSize);\n        x = pos[0];\n        y = pos[1];\n      } else {\n        var pos = refixTooltipPosition(x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\n        x = pos[0];\n        y = pos[1];\n      }\n\n    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n    if (tooltipModel.get('confine')) {\n      var pos = confineTooltipPosition(x, y, content.el, viewWidth, viewHeight);\n      x = pos[0];\n      y = pos[1];\n    }\n\n    content.moveTo(x, y);\n  },\n  // FIXME\n  // Should we remove this but leave this to user?\n  _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n    var lastCoordSys = this._lastDataByCoordSys;\n    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\n    contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n      var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n      contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n      contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n        var thisItem = thisDataByAxis[indexAxis] || {};\n        var lastIndices = lastItem.seriesDataIndices || [];\n        var newIndices = thisItem.seriesDataIndices || [];\n        contentNotChanged &= lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\n        contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n          var newIdxItem = newIndices[j];\n          contentNotChanged &= lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n        });\n      });\n    });\n    this._lastDataByCoordSys = dataByCoordSys;\n    return !!contentNotChanged;\n  },\n  _hide: function (dispatchAction) {\n    // Do not directly hideLater here, because this behavior may be prevented\n    // in dispatchAction when showTip is dispatched.\n    // FIXME\n    // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n    this._lastDataByCoordSys = null;\n    dispatchAction({\n      type: 'hideTip',\n      from: this.uid\n    });\n  },\n  dispose: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    this._tooltipContent.hide();\n\n    globalListener.unregister('itemTooltip', api);\n  }\n});\n/**\n * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n * From top to bottom. (the last one should be globalTooltipModel);\n */\n\n\nfunction buildTooltipModel(modelCascade) {\n  var resultModel = modelCascade.pop();\n\n  while (modelCascade.length) {\n    var tooltipOpt = modelCascade.pop();\n\n    if (tooltipOpt) {\n      if (tooltipOpt instanceof Model) {\n        tooltipOpt = tooltipOpt.get('tooltip', true);\n      } // In each data item tooltip can be simply write:\n      // {\n      //  value: 10,\n      //  tooltip: 'Something you need to know'\n      // }\n\n\n      if (typeof tooltipOpt === 'string') {\n        tooltipOpt = {\n          formatter: tooltipOpt\n        };\n      }\n\n      resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n    }\n  }\n\n  return resultModel;\n}\n\nfunction makeDispatchAction(payload, api) {\n  return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n}\n\nfunction refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n\n  if (gapH != null) {\n    if (x + width + gapH > viewWidth) {\n      x -= width + gapH;\n    } else {\n      x += gapH;\n    }\n  }\n\n  if (gapV != null) {\n    if (y + height + gapV > viewHeight) {\n      y -= height + gapV;\n    } else {\n      y += gapV;\n    }\n  }\n\n  return [x, y];\n}\n\nfunction confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n  x = Math.min(x + width, viewWidth) - width;\n  y = Math.min(y + height, viewHeight) - height;\n  x = Math.max(x, 0);\n  y = Math.max(y, 0);\n  return [x, y];\n}\n\nfunction getOuterSize(el) {\n  var width = el.clientWidth;\n  var height = el.clientHeight; // Consider browser compatibility.\n  // IE8 does not support getComputedStyle.\n\n  if (document.defaultView && document.defaultView.getComputedStyle) {\n    var stl = document.defaultView.getComputedStyle(el);\n\n    if (stl) {\n      width += parseInt(stl.paddingLeft, 10) + parseInt(stl.paddingRight, 10) + parseInt(stl.borderLeftWidth, 10) + parseInt(stl.borderRightWidth, 10);\n      height += parseInt(stl.paddingTop, 10) + parseInt(stl.paddingBottom, 10) + parseInt(stl.borderTopWidth, 10) + parseInt(stl.borderBottomWidth, 10);\n    }\n  }\n\n  return {\n    width: width,\n    height: height\n  };\n}\n\nfunction calcTooltipPosition(position, rect, contentSize) {\n  var domWidth = contentSize[0];\n  var domHeight = contentSize[1];\n  var gap = 5;\n  var x = 0;\n  var y = 0;\n  var rectWidth = rect.width;\n  var rectHeight = rect.height;\n\n  switch (position) {\n    case 'inside':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'top':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y - domHeight - gap;\n      break;\n\n    case 'bottom':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight + gap;\n      break;\n\n    case 'left':\n      x = rect.x - domWidth - gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'right':\n      x = rect.x + rectWidth + gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n  }\n\n  return [x, y];\n}\n\nfunction isCenterAlign(align) {\n  return align === 'center' || align === 'middle';\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/tooltip/TooltipView.js\n// module id = 1189\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar zrColor = require(\"zrender/lib/tool/color\");\n\nvar eventUtil = require(\"zrender/lib/core/event\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar each = zrUtil.each;\nvar toCamelCase = formatUtil.toCamelCase;\nvar vendors = ['', '-webkit-', '-moz-', '-o-'];\nvar gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n/**\n * @param {number} duration\n * @return {string}\n * @inner\n */\n\nfunction assembleTransition(duration) {\n  var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n  var transitionText = 'left ' + duration + 's ' + transitionCurve + ',' + 'top ' + duration + 's ' + transitionCurve;\n  return zrUtil.map(vendors, function (vendorPrefix) {\n    return vendorPrefix + 'transition:' + transitionText;\n  }).join(';');\n}\n/**\n * @param {Object} textStyle\n * @return {string}\n * @inner\n */\n\n\nfunction assembleFont(textStyleModel) {\n  var cssText = [];\n  var fontSize = textStyleModel.get('fontSize');\n  var color = textStyleModel.getTextColor();\n  color && cssText.push('color:' + color);\n  cssText.push('font:' + textStyleModel.getFont());\n  fontSize && cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n  each(['decoration', 'align'], function (name) {\n    var val = textStyleModel.get(name);\n    val && cssText.push('text-' + name + ':' + val);\n  });\n  return cssText.join(';');\n}\n/**\n * @param {Object} tooltipModel\n * @return {string}\n * @inner\n */\n\n\nfunction assembleCssText(tooltipModel) {\n  var cssText = [];\n  var transitionDuration = tooltipModel.get('transitionDuration');\n  var backgroundColor = tooltipModel.get('backgroundColor');\n  var textStyleModel = tooltipModel.getModel('textStyle');\n  var padding = tooltipModel.get('padding'); // Animation transition. Do not animate when transitionDuration is 0.\n\n  transitionDuration && cssText.push(assembleTransition(transitionDuration));\n\n  if (backgroundColor) {\n    if (env.canvasSupported) {\n      cssText.push('background-Color:' + backgroundColor);\n    } else {\n      // for ie\n      cssText.push('background-Color:#' + zrColor.toHex(backgroundColor));\n      cssText.push('filter:alpha(opacity=70)');\n    }\n  } // Border style\n\n\n  each(['width', 'color', 'radius'], function (name) {\n    var borderName = 'border-' + name;\n    var camelCase = toCamelCase(borderName);\n    var val = tooltipModel.get(camelCase);\n    val != null && cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n  }); // Text style\n\n  cssText.push(assembleFont(textStyleModel)); // Padding\n\n  if (padding != null) {\n    cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n  }\n\n  return cssText.join(';') + ';';\n}\n/**\n * @alias module:echarts/component/tooltip/TooltipContent\n * @constructor\n */\n\n\nfunction TooltipContent(container, api) {\n  var el = document.createElement('div');\n  var zr = this._zr = api.getZr();\n  this.el = el;\n  this._x = api.getWidth() / 2;\n  this._y = api.getHeight() / 2;\n  container.appendChild(el);\n  this._container = container;\n  this._show = false;\n  /**\n   * @private\n   */\n\n  this._hideTimeout;\n  var self = this;\n\n  el.onmouseenter = function () {\n    // clear the timeout in hideLater and keep showing tooltip\n    if (self._enterable) {\n      clearTimeout(self._hideTimeout);\n      self._show = true;\n    }\n\n    self._inContent = true;\n  };\n\n  el.onmousemove = function (e) {\n    e = e || window.event;\n\n    if (!self._enterable) {\n      // Try trigger zrender event to avoid mouse\n      // in and out shape too frequently\n      var handler = zr.handler;\n      eventUtil.normalizeEvent(container, e, true);\n      handler.dispatch('mousemove', e);\n    }\n  };\n\n  el.onmouseleave = function () {\n    if (self._enterable) {\n      if (self._show) {\n        self.hideLater(self._hideDelay);\n      }\n    }\n\n    self._inContent = false;\n  };\n}\n\nTooltipContent.prototype = {\n  constructor: TooltipContent,\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  _enterable: true,\n\n  /**\n   * Update when tooltip is rendered\n   */\n  update: function () {\n    // FIXME\n    // Move this logic to ec main?\n    var container = this._container;\n    var stl = container.currentStyle || document.defaultView.getComputedStyle(container);\n    var domStyle = container.style;\n\n    if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n      domStyle.position = 'relative';\n    } // Hide the tooltip\n    // PENDING\n    // this.hide();\n\n  },\n  show: function (tooltipModel) {\n    clearTimeout(this._hideTimeout);\n    var el = this.el;\n    el.style.cssText = gCssText + assembleCssText(tooltipModel) // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n    + ';left:' + this._x + 'px;top:' + this._y + 'px;' + (tooltipModel.get('extraCssText') || '');\n    el.style.display = el.innerHTML ? 'block' : 'none';\n    this._show = true;\n  },\n  setContent: function (content) {\n    this.el.innerHTML = content == null ? '' : content;\n  },\n  setEnterable: function (enterable) {\n    this._enterable = enterable;\n  },\n  getSize: function () {\n    var el = this.el;\n    return [el.clientWidth, el.clientHeight];\n  },\n  moveTo: function (x, y) {\n    // xy should be based on canvas root. But tooltipContent is\n    // the sibling of canvas root. So padding of ec container\n    // should be considered here.\n    var zr = this._zr;\n    var viewportRootOffset;\n\n    if (zr && zr.painter && (viewportRootOffset = zr.painter.getViewportRootOffset())) {\n      x += viewportRootOffset.offsetLeft;\n      y += viewportRootOffset.offsetTop;\n    }\n\n    var style = this.el.style;\n    style.left = x + 'px';\n    style.top = y + 'px';\n    this._x = x;\n    this._y = y;\n  },\n  hide: function () {\n    this.el.style.display = 'none';\n    this._show = false;\n  },\n  hideLater: function (time) {\n    if (this._show && !(this._inContent && this._enterable)) {\n      if (time) {\n        this._hideDelay = time; // Set show false to avoid invoke hideLater mutiple times\n\n        this._show = false;\n        this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n      } else {\n        this.hide();\n      }\n    }\n  },\n  isShow: function () {\n    return this._show;\n  }\n};\nvar _default = TooltipContent;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/tooltip/TooltipContent.js\n// module id = 1190\n// module chunks = 0 1 2","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nfunction legendSelectActionHandler(methodName, payload, ecModel) {\n  var selectedMap = {};\n  var isToggleSelect = methodName === 'toggleSelected';\n  var isSelected; // Update all legend components\n\n  ecModel.eachComponent('legend', function (legendModel) {\n    if (isToggleSelect && isSelected != null) {\n      // Force other legend has same selected status\n      // Or the first is toggled to true and other are toggled to false\n      // In the case one legend has some item unSelected in option. And if other legend\n      // doesn't has the item, they will assume it is selected.\n      legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n    } else {\n      legendModel[methodName](payload.name);\n      isSelected = legendModel.isSelected(payload.name);\n    }\n\n    var legendData = legendModel.getData();\n    zrUtil.each(legendData, function (model) {\n      var name = model.get('name'); // Wrap element\n\n      if (name === '\\n' || name === '') {\n        return;\n      }\n\n      var isItemSelected = legendModel.isSelected(name);\n\n      if (selectedMap.hasOwnProperty(name)) {\n        // Unselected if any legend is unselected\n        selectedMap[name] = selectedMap[name] && isItemSelected;\n      } else {\n        selectedMap[name] = isItemSelected;\n      }\n    });\n  }); // Return the event explicitly\n\n  return {\n    name: payload.name,\n    selected: selectedMap\n  };\n}\n/**\n * @event legendToggleSelect\n * @type {Object}\n * @property {string} type 'legendToggleSelect'\n * @property {string} [from]\n * @property {string} name Series name or data item name\n */\n\n\necharts.registerAction('legendToggleSelect', 'legendselectchanged', zrUtil.curry(legendSelectActionHandler, 'toggleSelected'));\n/**\n * @event legendSelect\n * @type {Object}\n * @property {string} type 'legendSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendSelect', 'legendselected', zrUtil.curry(legendSelectActionHandler, 'select'));\n/**\n * @event legendUnSelect\n * @type {Object}\n * @property {string} type 'legendUnSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendUnSelect', 'legendunselected', zrUtil.curry(legendSelectActionHandler, 'unSelect'));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/legendAction.js\n// module id = 1191\n// module chunks = 0 1 2","function _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (legendModels && legendModels.length) {\n    ecModel.filterSeries(function (series) {\n      // If in any legend component the status is not selected.\n      // Because in legend series is assumed selected when it is not in the legend data.\n      for (var i = 0; i < legendModels.length; i++) {\n        if (!legendModels[i].isSelected(series.name)) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/legendFilter.js\n// module id = 1192\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * Data selectable mixin for chart series.\n * To eanble data select, option of series must have `selectedMode`.\n * And each data item will use `selected` to toggle itself selected status\n */\nvar _default = {\n  updateSelectedMap: function (targetList) {\n    this._targetList = targetList.slice();\n    this._selectTargetMap = zrUtil.reduce(targetList || [], function (targetMap, target) {\n      targetMap.set(target.name, target);\n      return targetMap;\n    }, zrUtil.createHashMap());\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  // PENGING If selectedMode is null ?\n  select: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      this._selectTargetMap.each(function (target) {\n        target.selected = false;\n      });\n    }\n\n    target && (target.selected = true);\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  unSelect: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name); // var selectedMode = this.get('selectedMode');\n    // selectedMode !== 'single' && target && (target.selected = false);\n\n    target && (target.selected = false);\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  toggleSelected: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n\n    if (target != null) {\n      this[target.selected ? 'unSelect' : 'select'](name, id);\n      return target.selected;\n    }\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  isSelected: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n    return target && target.selected;\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/selectableMixin.js\n// module id = 1193\n// module chunks = 0 2","// Pick color from palette for each data item.\n// Applicable for charts that require applying color palette\n// in data level (like pie, funnel, chord).\nfunction _default(seriesType, ecModel) {\n  // Pie and funnel may use diferrent scope\n  var paletteScope = {};\n  ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n    var dataAll = seriesModel.getRawData();\n    var idxMap = {};\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      var data = seriesModel.getData();\n      data.each(function (idx) {\n        var rawIdx = data.getRawIndex(idx);\n        idxMap[rawIdx] = idx;\n      });\n      dataAll.each(function (rawIdx) {\n        var filteredIdx = idxMap[rawIdx]; // If series.itemStyle.normal.color is a function. itemVisual may be encoded\n\n        var singleDataColor = filteredIdx != null && data.getItemVisual(filteredIdx, 'color', true);\n\n        if (!singleDataColor) {\n          // FIXME Performance\n          var itemModel = dataAll.getItemModel(rawIdx);\n          var color = itemModel.get('itemStyle.normal.color') || seriesModel.getColorFromPalette(dataAll.getName(rawIdx), paletteScope); // Legend may use the visual info in data before processed\n\n          dataAll.setItemVisual(rawIdx, 'color', color); // Data is not filtered\n\n          if (filteredIdx != null) {\n            data.setItemVisual(filteredIdx, 'color', color);\n          }\n        } else {\n          // Set data all color for legend\n          dataAll.setItemVisual(rawIdx, 'color', singleDataColor);\n        }\n      });\n    }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/visual/dataColor.js\n// module id = 1194\n// module chunks = 0 2","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar featureManager = require(\"./featureManager\");\n\nvar ToolboxModel = echarts.extendComponentModel({\n  type: 'toolbox',\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n  mergeDefaultAndTheme: function (option) {\n    ToolboxModel.superApply(this, 'mergeDefaultAndTheme', arguments);\n    zrUtil.each(this.option.feature, function (featureOpt, featureName) {\n      var Feature = featureManager.get(featureName);\n      Feature && zrUtil.merge(featureOpt, Feature.defaultOption);\n    });\n  },\n  defaultOption: {\n    show: true,\n    z: 6,\n    zlevel: 0,\n    orient: 'horizontal',\n    left: 'right',\n    top: 'top',\n    // right\n    // bottom\n    backgroundColor: 'transparent',\n    borderColor: '#ccc',\n    borderRadius: 0,\n    borderWidth: 0,\n    padding: 5,\n    itemSize: 15,\n    itemGap: 8,\n    showTitle: true,\n    iconStyle: {\n      normal: {\n        borderColor: '#666',\n        color: 'none'\n      },\n      emphasis: {\n        borderColor: '#3E98C5'\n      } // textStyle: {},\n      // feature\n\n    }\n  }\n});\nvar _default = ToolboxModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox/ToolboxModel.js\n// module id = 1195\n// module chunks = 0 1 2","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar featureManager = require(\"./featureManager\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\nvar listComponentHelper = require(\"../helper/listComponent\");\n\nvar _default = echarts.extendComponentView({\n  type: 'toolbox',\n  render: function (toolboxModel, ecModel, api, payload) {\n    var group = this.group;\n    group.removeAll();\n\n    if (!toolboxModel.get('show')) {\n      return;\n    }\n\n    var itemSize = +toolboxModel.get('itemSize');\n    var featureOpts = toolboxModel.get('feature') || {};\n    var features = this._features || (this._features = {});\n    var featureNames = [];\n    zrUtil.each(featureOpts, function (opt, name) {\n      featureNames.push(name);\n    });\n    new DataDiffer(this._featureNames || [], featureNames).add(processFeature).update(processFeature).remove(zrUtil.curry(processFeature, null)).execute(); // Keep for diff.\n\n    this._featureNames = featureNames;\n\n    function processFeature(newIndex, oldIndex) {\n      var featureName = featureNames[newIndex];\n      var oldName = featureNames[oldIndex];\n      var featureOpt = featureOpts[featureName];\n      var featureModel = new Model(featureOpt, toolboxModel, toolboxModel.ecModel);\n      var feature;\n\n      if (featureName && !oldName) {\n        // Create\n        if (isUserFeatureName(featureName)) {\n          feature = {\n            model: featureModel,\n            onclick: featureModel.option.onclick,\n            featureName: featureName\n          };\n        } else {\n          var Feature = featureManager.get(featureName);\n\n          if (!Feature) {\n            return;\n          }\n\n          feature = new Feature(featureModel, ecModel, api);\n        }\n\n        features[featureName] = feature;\n      } else {\n        feature = features[oldName]; // If feature does not exsit.\n\n        if (!feature) {\n          return;\n        }\n\n        feature.model = featureModel;\n        feature.ecModel = ecModel;\n        feature.api = api;\n      }\n\n      if (!featureName && oldName) {\n        feature.dispose && feature.dispose(ecModel, api);\n        return;\n      }\n\n      if (!featureModel.get('show') || feature.unusable) {\n        feature.remove && feature.remove(ecModel, api);\n        return;\n      }\n\n      createIconPaths(featureModel, feature, featureName);\n\n      featureModel.setIconStatus = function (iconName, status) {\n        var option = this.option;\n        var iconPaths = this.iconPaths;\n        option.iconStatus = option.iconStatus || {};\n        option.iconStatus[iconName] = status; // FIXME\n\n        iconPaths[iconName] && iconPaths[iconName].trigger(status);\n      };\n\n      if (feature.render) {\n        feature.render(featureModel, ecModel, api, payload);\n      }\n    }\n\n    function createIconPaths(featureModel, feature, featureName) {\n      var iconStyleModel = featureModel.getModel('iconStyle'); // If one feature has mutiple icon. they are orginaized as\n      // {\n      //     icon: {\n      //         foo: '',\n      //         bar: ''\n      //     },\n      //     title: {\n      //         foo: '',\n      //         bar: ''\n      //     }\n      // }\n\n      var icons = feature.getIcons ? feature.getIcons() : featureModel.get('icon');\n      var titles = featureModel.get('title') || {};\n\n      if (typeof icons === 'string') {\n        var icon = icons;\n        var title = titles;\n        icons = {};\n        titles = {};\n        icons[featureName] = icon;\n        titles[featureName] = title;\n      }\n\n      var iconPaths = featureModel.iconPaths = {};\n      zrUtil.each(icons, function (iconStr, iconName) {\n        var path = graphic.createIcon(iconStr, {}, {\n          x: -itemSize / 2,\n          y: -itemSize / 2,\n          width: itemSize,\n          height: itemSize\n        });\n        path.setStyle(iconStyleModel.getModel('normal').getItemStyle());\n        path.hoverStyle = iconStyleModel.getModel('emphasis').getItemStyle();\n        graphic.setHoverStyle(path);\n\n        if (toolboxModel.get('showTitle')) {\n          path.__title = titles[iconName];\n          path.on('mouseover', function () {\n            // Should not reuse above hoverStyle, which might be modified.\n            var hoverStyle = iconStyleModel.getModel('emphasis').getItemStyle();\n            path.setStyle({\n              text: titles[iconName],\n              textPosition: hoverStyle.textPosition || 'bottom',\n              textFill: hoverStyle.fill || hoverStyle.stroke || '#000',\n              textAlign: hoverStyle.textAlign || 'center'\n            });\n          }).on('mouseout', function () {\n            path.setStyle({\n              textFill: null\n            });\n          });\n        }\n\n        path.trigger(featureModel.get('iconStatus.' + iconName) || 'normal');\n        group.add(path);\n        path.on('click', zrUtil.bind(feature.onclick, feature, ecModel, api, iconName));\n        iconPaths[iconName] = path;\n      });\n    }\n\n    listComponentHelper.layout(group, toolboxModel, api); // Render background after group is layout\n    // FIXME\n\n    group.add(listComponentHelper.makeBackground(group.getBoundingRect(), toolboxModel)); // Adjust icon title positions to avoid them out of screen\n\n    group.eachChild(function (icon) {\n      var titleText = icon.__title;\n      var hoverStyle = icon.hoverStyle; // May be background element\n\n      if (hoverStyle && titleText) {\n        var rect = textContain.getBoundingRect(titleText, textContain.makeFont(hoverStyle));\n        var offsetX = icon.position[0] + group.position[0];\n        var offsetY = icon.position[1] + group.position[1] + itemSize;\n        var needPutOnTop = false;\n\n        if (offsetY + rect.height > api.getHeight()) {\n          hoverStyle.textPosition = 'top';\n          needPutOnTop = true;\n        }\n\n        var topOffset = needPutOnTop ? -5 - rect.height : itemSize + 8;\n\n        if (offsetX + rect.width / 2 > api.getWidth()) {\n          hoverStyle.textPosition = ['100%', topOffset];\n          hoverStyle.textAlign = 'right';\n        } else if (offsetX - rect.width / 2 < 0) {\n          hoverStyle.textPosition = [0, topOffset];\n          hoverStyle.textAlign = 'left';\n        }\n      }\n    });\n  },\n  updateView: function (toolboxModel, ecModel, api, payload) {\n    zrUtil.each(this._features, function (feature) {\n      feature.updateView && feature.updateView(feature.model, ecModel, api, payload);\n    });\n  },\n  updateLayout: function (toolboxModel, ecModel, api, payload) {\n    zrUtil.each(this._features, function (feature) {\n      feature.updateLayout && feature.updateLayout(feature.model, ecModel, api, payload);\n    });\n  },\n  remove: function (ecModel, api) {\n    zrUtil.each(this._features, function (feature) {\n      feature.remove && feature.remove(ecModel, api);\n    });\n    this.group.removeAll();\n  },\n  dispose: function (ecModel, api) {\n    zrUtil.each(this._features, function (feature) {\n      feature.dispose && feature.dispose(ecModel, api);\n    });\n  }\n});\n\nfunction isUserFeatureName(featureName) {\n  return featureName.indexOf('my') === 0;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox/ToolboxView.js\n// module id = 1196\n// module chunks = 0 1 2","var env = require(\"zrender/lib/core/env\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\nvar saveAsImageLang = lang.toolbox.saveAsImage;\n\nfunction SaveAsImage(model) {\n  this.model = model;\n}\n\nSaveAsImage.defaultOption = {\n  show: true,\n  icon: 'M4.7,22.9L29.3,45.5L54.7,23.4M4.6,43.6L4.6,58L53.8,58L53.8,43.6M29.2,45.1L29.2,0',\n  title: saveAsImageLang.title,\n  type: 'png',\n  // Default use option.backgroundColor\n  // backgroundColor: '#fff',\n  name: '',\n  excludeComponents: ['toolbox'],\n  pixelRatio: 1,\n  lang: saveAsImageLang.lang.slice()\n};\nSaveAsImage.prototype.unusable = !env.canvasSupported;\nvar proto = SaveAsImage.prototype;\n\nproto.onclick = function (ecModel, api) {\n  var model = this.model;\n  var title = model.get('name') || ecModel.get('title.0.text') || 'echarts';\n  var $a = document.createElement('a');\n  var type = model.get('type', true) || 'png';\n  $a.download = title + '.' + type;\n  $a.target = '_blank';\n  var url = api.getConnectedDataURL({\n    type: type,\n    backgroundColor: model.get('backgroundColor', true) || ecModel.get('backgroundColor') || '#fff',\n    excludeComponents: model.get('excludeComponents'),\n    pixelRatio: model.get('pixelRatio')\n  });\n  $a.href = url; // Chrome and Firefox\n\n  if (typeof MouseEvent === 'function' && !env.browser.ie && !env.browser.edge) {\n    var evt = new MouseEvent('click', {\n      view: window,\n      bubbles: true,\n      cancelable: false\n    });\n    $a.dispatchEvent(evt);\n  } // IE\n  else {\n      if (window.navigator.msSaveOrOpenBlob) {\n        var bstr = atob(url.split(',')[1]);\n        var n = bstr.length;\n        var u8arr = new Uint8Array(n);\n\n        while (n--) {\n          u8arr[n] = bstr.charCodeAt(n);\n        }\n\n        var blob = new Blob([u8arr]);\n        window.navigator.msSaveOrOpenBlob(blob, title + '.' + type);\n      } else {\n        var lang = model.get('lang');\n        var html = '' + '<body style=\"margin:0;\">' + '<img src=\"' + url + '\" style=\"max-width:100%;\" title=\"' + (lang && lang[0] || '') + '\" />' + '</body>';\n        var tab = window.open();\n        tab.document.write(html);\n      }\n    }\n};\n\nfeatureManager.register('saveAsImage', SaveAsImage);\nvar _default = SaveAsImage;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox/feature/SaveAsImage.js\n// module id = 1197\n// module chunks = 0 1 2","var echarts = require(\"../../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\nvar magicTypeLang = lang.toolbox.magicType;\n\nfunction MagicType(model) {\n  this.model = model;\n}\n\nMagicType.defaultOption = {\n  show: true,\n  type: [],\n  // Icon group\n  icon: {\n    line: 'M4.1,28.9h7.1l9.3-22l7.4,38l9.7-19.7l3,12.8h14.9M4.1,58h51.4',\n    bar: 'M6.7,22.9h10V48h-10V22.9zM24.9,13h10v35h-10V13zM43.2,2h10v46h-10V2zM3.1,58h53.7',\n    stack: 'M8.2,38.4l-8.4,4.1l30.6,15.3L60,42.5l-8.1-4.1l-21.5,11L8.2,38.4z M51.9,30l-8.1,4.2l-13.4,6.9l-13.9-6.9L8.2,30l-8.4,4.2l8.4,4.2l22.2,11l21.5-11l8.1-4.2L51.9,30z M51.9,21.7l-8.1,4.2L35.7,30l-5.3,2.8L24.9,30l-8.4-4.1l-8.3-4.2l-8.4,4.2L8.2,30l8.3,4.2l13.9,6.9l13.4-6.9l8.1-4.2l8.1-4.1L51.9,21.7zM30.4,2.2L-0.2,17.5l8.4,4.1l8.3,4.2l8.4,4.2l5.5,2.7l5.3-2.7l8.1-4.2l8.1-4.2l8.1-4.1L30.4,2.2z',\n    // jshint ignore:line\n    tiled: 'M2.3,2.2h22.8V25H2.3V2.2z M35,2.2h22.8V25H35V2.2zM2.3,35h22.8v22.8H2.3V35z M35,35h22.8v22.8H35V35z'\n  },\n  // `line`, `bar`, `stack`, `tiled`\n  title: zrUtil.clone(magicTypeLang.title),\n  option: {},\n  seriesIndex: {}\n};\nvar proto = MagicType.prototype;\n\nproto.getIcons = function () {\n  var model = this.model;\n  var availableIcons = model.get('icon');\n  var icons = {};\n  zrUtil.each(model.get('type'), function (type) {\n    if (availableIcons[type]) {\n      icons[type] = availableIcons[type];\n    }\n  });\n  return icons;\n};\n\nvar seriesOptGenreator = {\n  'line': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        type: 'line',\n        // Preserve data related option\n        data: seriesModel.get('data'),\n        stack: seriesModel.get('stack'),\n        markPoint: seriesModel.get('markPoint'),\n        markLine: seriesModel.get('markLine')\n      }, model.get('option.line') || {}, true);\n    }\n  },\n  'bar': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line') {\n      return zrUtil.merge({\n        id: seriesId,\n        type: 'bar',\n        // Preserve data related option\n        data: seriesModel.get('data'),\n        stack: seriesModel.get('stack'),\n        markPoint: seriesModel.get('markPoint'),\n        markLine: seriesModel.get('markLine')\n      }, model.get('option.bar') || {}, true);\n    }\n  },\n  'stack': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line' || seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        stack: '__ec_magicType_stack__'\n      }, model.get('option.stack') || {}, true);\n    }\n  },\n  'tiled': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line' || seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        stack: ''\n      }, model.get('option.tiled') || {}, true);\n    }\n  }\n};\nvar radioTypes = [['line', 'bar'], ['stack', 'tiled']];\n\nproto.onclick = function (ecModel, api, type) {\n  var model = this.model;\n  var seriesIndex = model.get('seriesIndex.' + type); // Not supported magicType\n\n  if (!seriesOptGenreator[type]) {\n    return;\n  }\n\n  var newOption = {\n    series: []\n  };\n\n  var generateNewSeriesTypes = function (seriesModel) {\n    var seriesType = seriesModel.subType;\n    var seriesId = seriesModel.id;\n    var newSeriesOpt = seriesOptGenreator[type](seriesType, seriesId, seriesModel, model);\n\n    if (newSeriesOpt) {\n      // PENDING If merge original option?\n      zrUtil.defaults(newSeriesOpt, seriesModel.option);\n      newOption.series.push(newSeriesOpt);\n    } // Modify boundaryGap\n\n\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.type === 'cartesian2d' && (type === 'line' || type === 'bar')) {\n      var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n\n      if (categoryAxis) {\n        var axisDim = categoryAxis.dim;\n        var axisType = axisDim + 'Axis';\n        var axisModel = ecModel.queryComponents({\n          mainType: axisType,\n          index: seriesModel.get(name + 'Index'),\n          id: seriesModel.get(name + 'Id')\n        })[0];\n        var axisIndex = axisModel.componentIndex;\n        newOption[axisType] = newOption[axisType] || [];\n\n        for (var i = 0; i <= axisIndex; i++) {\n          newOption[axisType][axisIndex] = newOption[axisType][axisIndex] || {};\n        }\n\n        newOption[axisType][axisIndex].boundaryGap = type === 'bar' ? true : false;\n      }\n    }\n  };\n\n  zrUtil.each(radioTypes, function (radio) {\n    if (zrUtil.indexOf(radio, type) >= 0) {\n      zrUtil.each(radio, function (item) {\n        model.setIconStatus(item, 'normal');\n      });\n    }\n  });\n  model.setIconStatus(type, 'emphasis');\n  ecModel.eachComponent({\n    mainType: 'series',\n    query: seriesIndex == null ? null : {\n      seriesIndex: seriesIndex\n    }\n  }, generateNewSeriesTypes);\n  api.dispatchAction({\n    type: 'changeMagicType',\n    currentType: type,\n    newOption: newOption\n  });\n};\n\necharts.registerAction({\n  type: 'changeMagicType',\n  event: 'magicTypeChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  ecModel.mergeOption(payload.newOption);\n});\nfeatureManager.register('magicType', MagicType);\nvar _default = MagicType;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox/feature/MagicType.js\n// module id = 1198\n// module chunks = 0 1 2","var echarts = require(\"../../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\nvar dataViewLang = lang.toolbox.dataView;\nvar BLOCK_SPLITER = new Array(60).join('-');\nvar ITEM_SPLITER = '\\t';\n/**\n * Group series into two types\n *  1. on category axis, like line, bar\n *  2. others, like scatter, pie\n * @param {module:echarts/model/Global} ecModel\n * @return {Object}\n * @inner\n */\n\nfunction groupSeries(ecModel) {\n  var seriesGroupByCategoryAxis = {};\n  var otherSeries = [];\n  var meta = [];\n  ecModel.eachRawSeries(function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && (coordSys.type === 'cartesian2d' || coordSys.type === 'polar')) {\n      var baseAxis = coordSys.getBaseAxis();\n\n      if (baseAxis.type === 'category') {\n        var key = baseAxis.dim + '_' + baseAxis.index;\n\n        if (!seriesGroupByCategoryAxis[key]) {\n          seriesGroupByCategoryAxis[key] = {\n            categoryAxis: baseAxis,\n            valueAxis: coordSys.getOtherAxis(baseAxis),\n            series: []\n          };\n          meta.push({\n            axisDim: baseAxis.dim,\n            axisIndex: baseAxis.index\n          });\n        }\n\n        seriesGroupByCategoryAxis[key].series.push(seriesModel);\n      } else {\n        otherSeries.push(seriesModel);\n      }\n    } else {\n      otherSeries.push(seriesModel);\n    }\n  });\n  return {\n    seriesGroupByCategoryAxis: seriesGroupByCategoryAxis,\n    other: otherSeries,\n    meta: meta\n  };\n}\n/**\n * Assemble content of series on cateogory axis\n * @param {Array.<module:echarts/model/Series>} series\n * @return {string}\n * @inner\n */\n\n\nfunction assembleSeriesWithCategoryAxis(series) {\n  var tables = [];\n  zrUtil.each(series, function (group, key) {\n    var categoryAxis = group.categoryAxis;\n    var valueAxis = group.valueAxis;\n    var valueAxisDim = valueAxis.dim;\n    var headers = [' '].concat(zrUtil.map(group.series, function (series) {\n      return series.name;\n    }));\n    var columns = [categoryAxis.model.getCategories()];\n    zrUtil.each(group.series, function (series) {\n      columns.push(series.getRawData().mapArray(valueAxisDim, function (val) {\n        return val;\n      }));\n    }); // Assemble table content\n\n    var lines = [headers.join(ITEM_SPLITER)];\n\n    for (var i = 0; i < columns[0].length; i++) {\n      var items = [];\n\n      for (var j = 0; j < columns.length; j++) {\n        items.push(columns[j][i]);\n      }\n\n      lines.push(items.join(ITEM_SPLITER));\n    }\n\n    tables.push(lines.join('\\n'));\n  });\n  return tables.join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n}\n/**\n * Assemble content of other series\n * @param {Array.<module:echarts/model/Series>} series\n * @return {string}\n * @inner\n */\n\n\nfunction assembleOtherSeries(series) {\n  return zrUtil.map(series, function (series) {\n    var data = series.getRawData();\n    var lines = [series.name];\n    var vals = [];\n    data.each(data.dimensions, function () {\n      var argLen = arguments.length;\n      var dataIndex = arguments[argLen - 1];\n      var name = data.getName(dataIndex);\n\n      for (var i = 0; i < argLen - 1; i++) {\n        vals[i] = arguments[i];\n      }\n\n      lines.push((name ? name + ITEM_SPLITER : '') + vals.join(ITEM_SPLITER));\n    });\n    return lines.join('\\n');\n  }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n}\n/**\n * @param {module:echarts/model/Global}\n * @return {Object}\n * @inner\n */\n\n\nfunction getContentFromModel(ecModel) {\n  var result = groupSeries(ecModel);\n  return {\n    value: zrUtil.filter([assembleSeriesWithCategoryAxis(result.seriesGroupByCategoryAxis), assembleOtherSeries(result.other)], function (str) {\n      return str.replace(/[\\n\\t\\s]/g, '');\n    }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n'),\n    meta: result.meta\n  };\n}\n\nfunction trim(str) {\n  return str.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n}\n/**\n * If a block is tsv format\n */\n\n\nfunction isTSVFormat(block) {\n  // Simple method to find out if a block is tsv format\n  var firstLine = block.slice(0, block.indexOf('\\n'));\n\n  if (firstLine.indexOf(ITEM_SPLITER) >= 0) {\n    return true;\n  }\n}\n\nvar itemSplitRegex = new RegExp('[' + ITEM_SPLITER + ']+', 'g');\n/**\n * @param {string} tsv\n * @return {Object}\n */\n\nfunction parseTSVContents(tsv) {\n  var tsvLines = tsv.split(/\\n+/g);\n  var headers = trim(tsvLines.shift()).split(itemSplitRegex);\n  var categories = [];\n  var series = zrUtil.map(headers, function (header) {\n    return {\n      name: header,\n      data: []\n    };\n  });\n\n  for (var i = 0; i < tsvLines.length; i++) {\n    var items = trim(tsvLines[i]).split(itemSplitRegex);\n    categories.push(items.shift());\n\n    for (var j = 0; j < items.length; j++) {\n      series[j] && (series[j].data[i] = items[j]);\n    }\n  }\n\n  return {\n    series: series,\n    categories: categories\n  };\n}\n/**\n * @param {string} str\n * @return {Array.<Object>}\n * @inner\n */\n\n\nfunction parseListContents(str) {\n  var lines = str.split(/\\n+/g);\n  var seriesName = trim(lines.shift());\n  var data = [];\n\n  for (var i = 0; i < lines.length; i++) {\n    var items = trim(lines[i]).split(itemSplitRegex);\n    var name = '';\n    var value;\n    var hasName = false;\n\n    if (isNaN(items[0])) {\n      // First item is name\n      hasName = true;\n      name = items[0];\n      items = items.slice(1);\n      data[i] = {\n        name: name,\n        value: []\n      };\n      value = data[i].value;\n    } else {\n      value = data[i] = [];\n    }\n\n    for (var j = 0; j < items.length; j++) {\n      value.push(+items[j]);\n    }\n\n    if (value.length === 1) {\n      hasName ? data[i].value = value[0] : data[i] = value[0];\n    }\n  }\n\n  return {\n    name: seriesName,\n    data: data\n  };\n}\n/**\n * @param {string} str\n * @param {Array.<Object>} blockMetaList\n * @return {Object}\n * @inner\n */\n\n\nfunction parseContents(str, blockMetaList) {\n  var blocks = str.split(new RegExp('\\n*' + BLOCK_SPLITER + '\\n*', 'g'));\n  var newOption = {\n    series: []\n  };\n  zrUtil.each(blocks, function (block, idx) {\n    if (isTSVFormat(block)) {\n      var result = parseTSVContents(block);\n      var blockMeta = blockMetaList[idx];\n      var axisKey = blockMeta.axisDim + 'Axis';\n\n      if (blockMeta) {\n        newOption[axisKey] = newOption[axisKey] || [];\n        newOption[axisKey][blockMeta.axisIndex] = {\n          data: result.categories\n        };\n        newOption.series = newOption.series.concat(result.series);\n      }\n    } else {\n      var result = parseListContents(block);\n      newOption.series.push(result);\n    }\n  });\n  return newOption;\n}\n/**\n * @alias {module:echarts/component/toolbox/feature/DataView}\n * @constructor\n * @param {module:echarts/model/Model} model\n */\n\n\nfunction DataView(model) {\n  this._dom = null;\n  this.model = model;\n}\n\nDataView.defaultOption = {\n  show: true,\n  readOnly: false,\n  optionToContent: null,\n  contentToOption: null,\n  icon: 'M17.5,17.3H33 M17.5,17.3H33 M45.4,29.5h-28 M11.5,2v56H51V14.8L38.4,2H11.5z M38.4,2.2v12.7H51 M45.4,41.7h-28',\n  title: zrUtil.clone(dataViewLang.title),\n  lang: zrUtil.clone(dataViewLang.lang),\n  backgroundColor: '#fff',\n  textColor: '#000',\n  textareaColor: '#fff',\n  textareaBorderColor: '#333',\n  buttonColor: '#c23531',\n  buttonTextColor: '#fff'\n};\n\nDataView.prototype.onclick = function (ecModel, api) {\n  var container = api.getDom();\n  var model = this.model;\n\n  if (this._dom) {\n    container.removeChild(this._dom);\n  }\n\n  var root = document.createElement('div');\n  root.style.cssText = 'position:absolute;left:5px;top:5px;bottom:5px;right:5px;';\n  root.style.backgroundColor = model.get('backgroundColor') || '#fff'; // Create elements\n\n  var header = document.createElement('h4');\n  var lang = model.get('lang') || [];\n  header.innerHTML = lang[0] || model.get('title');\n  header.style.cssText = 'margin: 10px 20px;';\n  header.style.color = model.get('textColor');\n  var viewMain = document.createElement('div');\n  var textarea = document.createElement('textarea');\n  viewMain.style.cssText = 'display:block;width:100%;overflow:auto;';\n  var optionToContent = model.get('optionToContent');\n  var contentToOption = model.get('contentToOption');\n  var result = getContentFromModel(ecModel);\n\n  if (typeof optionToContent === 'function') {\n    var htmlOrDom = optionToContent(api.getOption());\n\n    if (typeof htmlOrDom === 'string') {\n      viewMain.innerHTML = htmlOrDom;\n    } else if (zrUtil.isDom(htmlOrDom)) {\n      viewMain.appendChild(htmlOrDom);\n    }\n  } else {\n    // Use default textarea\n    viewMain.appendChild(textarea);\n    textarea.readOnly = model.get('readOnly');\n    textarea.style.cssText = 'width:100%;height:100%;font-family:monospace;font-size:14px;line-height:1.6rem;';\n    textarea.style.color = model.get('textColor');\n    textarea.style.borderColor = model.get('textareaBorderColor');\n    textarea.style.backgroundColor = model.get('textareaColor');\n    textarea.value = result.value;\n  }\n\n  var blockMetaList = result.meta;\n  var buttonContainer = document.createElement('div');\n  buttonContainer.style.cssText = 'position:absolute;bottom:0;left:0;right:0;';\n  var buttonStyle = 'float:right;margin-right:20px;border:none;' + 'cursor:pointer;padding:2px 5px;font-size:12px;border-radius:3px';\n  var closeButton = document.createElement('div');\n  var refreshButton = document.createElement('div');\n  buttonStyle += ';background-color:' + model.get('buttonColor');\n  buttonStyle += ';color:' + model.get('buttonTextColor');\n  var self = this;\n\n  function close() {\n    container.removeChild(root);\n    self._dom = null;\n  }\n\n  eventTool.addEventListener(closeButton, 'click', close);\n  eventTool.addEventListener(refreshButton, 'click', function () {\n    var newOption;\n\n    try {\n      if (typeof contentToOption === 'function') {\n        newOption = contentToOption(viewMain, api.getOption());\n      } else {\n        newOption = parseContents(textarea.value, blockMetaList);\n      }\n    } catch (e) {\n      close();\n      throw new Error('Data view format error ' + e);\n    }\n\n    if (newOption) {\n      api.dispatchAction({\n        type: 'changeDataView',\n        newOption: newOption\n      });\n    }\n\n    close();\n  });\n  closeButton.innerHTML = lang[1];\n  refreshButton.innerHTML = lang[2];\n  refreshButton.style.cssText = buttonStyle;\n  closeButton.style.cssText = buttonStyle;\n  !model.get('readOnly') && buttonContainer.appendChild(refreshButton);\n  buttonContainer.appendChild(closeButton); // http://stackoverflow.com/questions/6637341/use-tab-to-indent-in-textarea\n\n  eventTool.addEventListener(textarea, 'keydown', function (e) {\n    if ((e.keyCode || e.which) === 9) {\n      // get caret position/selection\n      var val = this.value;\n      var start = this.selectionStart;\n      var end = this.selectionEnd; // set textarea value to: text before caret + tab + text after caret\n\n      this.value = val.substring(0, start) + ITEM_SPLITER + val.substring(end); // put caret at right position again\n\n      this.selectionStart = this.selectionEnd = start + 1; // prevent the focus lose\n\n      eventTool.stop(e);\n    }\n  });\n  root.appendChild(header);\n  root.appendChild(viewMain);\n  root.appendChild(buttonContainer);\n  viewMain.style.height = container.clientHeight - 80 + 'px';\n  container.appendChild(root);\n  this._dom = root;\n};\n\nDataView.prototype.remove = function (ecModel, api) {\n  this._dom && api.getDom().removeChild(this._dom);\n};\n\nDataView.prototype.dispose = function (ecModel, api) {\n  this.remove(ecModel, api);\n};\n/**\n * @inner\n */\n\n\nfunction tryMergeDataOption(newData, originalData) {\n  return zrUtil.map(newData, function (newVal, idx) {\n    var original = originalData && originalData[idx];\n\n    if (zrUtil.isObject(original) && !zrUtil.isArray(original)) {\n      if (zrUtil.isObject(newVal) && !zrUtil.isArray(newVal)) {\n        newVal = newVal.value;\n      } // Original data has option\n\n\n      return zrUtil.defaults({\n        value: newVal\n      }, original);\n    } else {\n      return newVal;\n    }\n  });\n}\n\nfeatureManager.register('dataView', DataView);\necharts.registerAction({\n  type: 'changeDataView',\n  event: 'dataViewChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  var newSeriesOptList = [];\n  zrUtil.each(payload.newOption.series, function (seriesOpt) {\n    var seriesModel = ecModel.getSeriesByName(seriesOpt.name)[0];\n\n    if (!seriesModel) {\n      // New created series\n      // Geuss the series type\n      newSeriesOptList.push(zrUtil.extend({\n        // Default is scatter\n        type: 'scatter'\n      }, seriesOpt));\n    } else {\n      var originalData = seriesModel.get('data');\n      newSeriesOptList.push({\n        name: seriesOpt.name,\n        data: tryMergeDataOption(seriesOpt.data, originalData)\n      });\n    }\n  });\n  ecModel.mergeOption(zrUtil.defaults({\n    series: newSeriesOptList\n  }, payload.newOption));\n});\nvar _default = DataView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox/feature/DataView.js\n// module id = 1199\n// module chunks = 0 1 2","var echarts = require(\"../../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BrushController = require(\"../../helper/BrushController\");\n\nvar BrushTargetManager = require(\"../../helper/BrushTargetManager\");\n\nvar history = require(\"../../dataZoom/history\");\n\nvar sliderMove = require(\"../../helper/sliderMove\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\nrequire(\"../../dataZoomSelect\");\n\n// Use dataZoomSelect\nvar dataZoomLang = lang.toolbox.dataZoom;\nvar each = zrUtil.each; // Spectial component id start with \\0ec\\0, see echarts/model/Global.js~hasInnerId\n\nvar DATA_ZOOM_ID_BASE = '\\0_ec_\\0toolbox-dataZoom_';\n\nfunction DataZoom(model, ecModel, api) {\n  /**\n   * @private\n   * @type {module:echarts/component/helper/BrushController}\n   */\n  (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this)).mount();\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._isZoomActive;\n}\n\nDataZoom.defaultOption = {\n  show: true,\n  // Icon group\n  icon: {\n    zoom: 'M0,13.5h26.9 M13.5,26.9V0 M32.1,13.5H58V58H13.5 V32.1',\n    back: 'M22,1.4L9.9,13.5l12.3,12.3 M10.3,13.5H54.9v44.6 H10.3v-26'\n  },\n  // `zoom`, `back`\n  title: zrUtil.clone(dataZoomLang.title)\n};\nvar proto = DataZoom.prototype;\n\nproto.render = function (featureModel, ecModel, api, payload) {\n  this.model = featureModel;\n  this.ecModel = ecModel;\n  this.api = api;\n  updateZoomBtnStatus(featureModel, ecModel, this, payload, api);\n  updateBackBtnStatus(featureModel, ecModel);\n};\n\nproto.onclick = function (ecModel, api, type) {\n  handlers[type].call(this);\n};\n\nproto.remove = function (ecModel, api) {\n  this._brushController.unmount();\n};\n\nproto.dispose = function (ecModel, api) {\n  this._brushController.dispose();\n};\n/**\n * @private\n */\n\n\nvar handlers = {\n  zoom: function () {\n    var nextActive = !this._isZoomActive;\n    this.api.dispatchAction({\n      type: 'takeGlobalCursor',\n      key: 'dataZoomSelect',\n      dataZoomSelectActive: nextActive\n    });\n  },\n  back: function () {\n    this._dispatchZoomAction(history.pop(this.ecModel));\n  }\n};\n/**\n * @private\n */\n\nproto._onBrush = function (areas, opt) {\n  if (!opt.isEnd || !areas.length) {\n    return;\n  }\n\n  var snapshot = {};\n  var ecModel = this.ecModel;\n\n  this._brushController.updateCovers([]); // remove cover\n\n\n  var brushTargetManager = new BrushTargetManager(retrieveAxisSetting(this.model.option), ecModel, {\n    include: ['grid']\n  });\n  brushTargetManager.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n    if (coordSys.type !== 'cartesian2d') {\n      return;\n    }\n\n    var brushType = area.brushType;\n\n    if (brushType === 'rect') {\n      setBatch('x', coordSys, coordRange[0]);\n      setBatch('y', coordSys, coordRange[1]);\n    } else {\n      setBatch({\n        lineX: 'x',\n        lineY: 'y'\n      }[brushType], coordSys, coordRange);\n    }\n  });\n  history.push(ecModel, snapshot);\n\n  this._dispatchZoomAction(snapshot);\n\n  function setBatch(dimName, coordSys, minMax) {\n    var axis = coordSys.getAxis(dimName);\n    var axisModel = axis.model;\n    var dataZoomModel = findDataZoom(dimName, axisModel, ecModel); // Restrict range.\n\n    var minMaxSpan = dataZoomModel.findRepresentativeAxisProxy(axisModel).getMinMaxSpan();\n\n    if (minMaxSpan.minValueSpan != null || minMaxSpan.maxValueSpan != null) {\n      minMax = sliderMove(0, minMax.slice(), axis.scale.getExtent(), 0, minMaxSpan.minValueSpan, minMaxSpan.maxValueSpan);\n    }\n\n    dataZoomModel && (snapshot[dataZoomModel.id] = {\n      dataZoomId: dataZoomModel.id,\n      startValue: minMax[0],\n      endValue: minMax[1]\n    });\n  }\n\n  function findDataZoom(dimName, axisModel, ecModel) {\n    var found;\n    ecModel.eachComponent({\n      mainType: 'dataZoom',\n      subType: 'select'\n    }, function (dzModel) {\n      var has = dzModel.getAxisModel(dimName, axisModel.componentIndex);\n      has && (found = dzModel);\n    });\n    return found;\n  }\n};\n/**\n * @private\n */\n\n\nproto._dispatchZoomAction = function (snapshot) {\n  var batch = []; // Convert from hash map to array.\n\n  each(snapshot, function (batchItem, dataZoomId) {\n    batch.push(zrUtil.clone(batchItem));\n  });\n  batch.length && this.api.dispatchAction({\n    type: 'dataZoom',\n    from: this.uid,\n    batch: batch\n  });\n};\n\nfunction retrieveAxisSetting(option) {\n  var setting = {}; // Compatible with previous setting: null => all axis, false => no axis.\n\n  zrUtil.each(['xAxisIndex', 'yAxisIndex'], function (name) {\n    setting[name] = option[name];\n    setting[name] == null && (setting[name] = 'all');\n    (setting[name] === false || setting[name] === 'none') && (setting[name] = []);\n  });\n  return setting;\n}\n\nfunction updateBackBtnStatus(featureModel, ecModel) {\n  featureModel.setIconStatus('back', history.count(ecModel) > 1 ? 'emphasis' : 'normal');\n}\n\nfunction updateZoomBtnStatus(featureModel, ecModel, view, payload, api) {\n  var zoomActive = view._isZoomActive;\n\n  if (payload && payload.type === 'takeGlobalCursor') {\n    zoomActive = payload.key === 'dataZoomSelect' ? payload.dataZoomSelectActive : false;\n  }\n\n  view._isZoomActive = zoomActive;\n  featureModel.setIconStatus('zoom', zoomActive ? 'emphasis' : 'normal');\n  var brushTargetManager = new BrushTargetManager(retrieveAxisSetting(featureModel.option), ecModel, {\n    include: ['grid']\n  });\n\n  view._brushController.setPanels(brushTargetManager.makePanelOpts(api, function (targetInfo) {\n    return targetInfo.xAxisDeclared && !targetInfo.yAxisDeclared ? 'lineX' : !targetInfo.xAxisDeclared && targetInfo.yAxisDeclared ? 'lineY' : 'rect';\n  })).enableBrush(zoomActive ? {\n    brushType: 'auto',\n    brushStyle: {\n      // FIXME user customized?\n      lineWidth: 0,\n      fill: 'rgba(0,0,0,0.2)'\n    }\n  } : false);\n}\n\nfeatureManager.register('dataZoom', DataZoom); // Create special dataZoom option for select\n\necharts.registerPreprocessor(function (option) {\n  if (!option) {\n    return;\n  }\n\n  var dataZoomOpts = option.dataZoom || (option.dataZoom = []);\n\n  if (!zrUtil.isArray(dataZoomOpts)) {\n    option.dataZoom = dataZoomOpts = [dataZoomOpts];\n  }\n\n  var toolboxOpt = option.toolbox;\n\n  if (toolboxOpt) {\n    // Assume there is only one toolbox\n    if (zrUtil.isArray(toolboxOpt)) {\n      toolboxOpt = toolboxOpt[0];\n    }\n\n    if (toolboxOpt && toolboxOpt.feature) {\n      var dataZoomOpt = toolboxOpt.feature.dataZoom;\n      addForAxis('xAxis', dataZoomOpt);\n      addForAxis('yAxis', dataZoomOpt);\n    }\n  }\n\n  function addForAxis(axisName, dataZoomOpt) {\n    if (!dataZoomOpt) {\n      return;\n    } // Try not to modify model, because it is not merged yet.\n\n\n    var axisIndicesName = axisName + 'Index';\n    var givenAxisIndices = dataZoomOpt[axisIndicesName];\n\n    if (givenAxisIndices != null && givenAxisIndices != 'all' && !zrUtil.isArray(givenAxisIndices)) {\n      givenAxisIndices = givenAxisIndices === false || givenAxisIndices === 'none' ? [] : [givenAxisIndices];\n    }\n\n    forEachComponent(axisName, function (axisOpt, axisIndex) {\n      if (givenAxisIndices != null && givenAxisIndices != 'all' && zrUtil.indexOf(givenAxisIndices, axisIndex) === -1) {\n        return;\n      }\n\n      var newOpt = {\n        type: 'select',\n        $fromToolbox: true,\n        // Id for merge mapping.\n        id: DATA_ZOOM_ID_BASE + axisName + axisIndex\n      }; // FIXME\n      // Only support one axis now.\n\n      newOpt[axisIndicesName] = axisIndex;\n      dataZoomOpts.push(newOpt);\n    });\n  }\n\n  function forEachComponent(mainType, cb) {\n    var opts = option[mainType];\n\n    if (!zrUtil.isArray(opts)) {\n      opts = opts ? [opts] : [];\n    }\n\n    each(opts, cb);\n  }\n});\nvar _default = DataZoom;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox/feature/DataZoom.js\n// module id = 1200\n// module chunks = 0 1 2","require(\"./dataZoom/typeDefaulter\");\n\nrequire(\"./dataZoom/DataZoomModel\");\n\nrequire(\"./dataZoom/DataZoomView\");\n\nrequire(\"./dataZoom/SelectZoomModel\");\n\nrequire(\"./dataZoom/SelectZoomView\");\n\nrequire(\"./dataZoom/dataZoomProcessor\");\n\nrequire(\"./dataZoom/dataZoomAction\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoomSelect.js\n// module id = 1201\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar helper = require(\"./helper\");\n\nvar each = zrUtil.each;\nvar asc = numberUtil.asc;\n/**\n * Operate single axis.\n * One axis can only operated by one axis operator.\n * Different dataZoomModels may be defined to operate the same axis.\n * (i.e. 'inside' data zoom and 'slider' data zoom components)\n * So dataZoomModels share one axisProxy in that case.\n *\n * @class\n */\n\nvar AxisProxy = function (dimName, axisIndex, dataZoomModel, ecModel) {\n  /**\n   * @private\n   * @type {string}\n   */\n  this._dimName = dimName;\n  /**\n   * @private\n   */\n\n  this._axisIndex = axisIndex;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._valueWindow;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._percentWindow;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._dataExtent;\n  /**\n   * {minSpan, maxSpan, minValueSpan, maxValueSpan}\n   * @private\n   * @type {Object}\n   */\n\n  this._minMaxSpan;\n  /**\n   * @readOnly\n   * @type {module: echarts/model/Global}\n   */\n\n  this.ecModel = ecModel;\n  /**\n   * @private\n   * @type {module: echarts/component/dataZoom/DataZoomModel}\n   */\n\n  this._dataZoomModel = dataZoomModel;\n};\n\nAxisProxy.prototype = {\n  constructor: AxisProxy,\n\n  /**\n   * Whether the axisProxy is hosted by dataZoomModel.\n   *\n   * @public\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   * @return {boolean}\n   */\n  hostedBy: function (dataZoomModel) {\n    return this._dataZoomModel === dataZoomModel;\n  },\n\n  /**\n   * @return {Array.<number>} Value can only be NaN or finite value.\n   */\n  getDataValueWindow: function () {\n    return this._valueWindow.slice();\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getDataPercentWindow: function () {\n    return this._percentWindow.slice();\n  },\n\n  /**\n   * @public\n   * @param {number} axisIndex\n   * @return {Array} seriesModels\n   */\n  getTargetSeriesModels: function () {\n    var seriesModels = [];\n    var ecModel = this.ecModel;\n    ecModel.eachSeries(function (seriesModel) {\n      if (helper.isCoordSupported(seriesModel.get('coordinateSystem'))) {\n        var dimName = this._dimName;\n        var axisModel = ecModel.queryComponents({\n          mainType: dimName + 'Axis',\n          index: seriesModel.get(dimName + 'AxisIndex'),\n          id: seriesModel.get(dimName + 'AxisId')\n        })[0];\n\n        if (this._axisIndex === (axisModel && axisModel.componentIndex)) {\n          seriesModels.push(seriesModel);\n        }\n      }\n    }, this);\n    return seriesModels;\n  },\n  getAxisModel: function () {\n    return this.ecModel.getComponent(this._dimName + 'Axis', this._axisIndex);\n  },\n  getOtherAxisModel: function () {\n    var axisDim = this._dimName;\n    var ecModel = this.ecModel;\n    var axisModel = this.getAxisModel();\n    var isCartesian = axisDim === 'x' || axisDim === 'y';\n    var otherAxisDim;\n    var coordSysIndexName;\n\n    if (isCartesian) {\n      coordSysIndexName = 'gridIndex';\n      otherAxisDim = axisDim === 'x' ? 'y' : 'x';\n    } else {\n      coordSysIndexName = 'polarIndex';\n      otherAxisDim = axisDim === 'angle' ? 'radius' : 'angle';\n    }\n\n    var foundOtherAxisModel;\n    ecModel.eachComponent(otherAxisDim + 'Axis', function (otherAxisModel) {\n      if ((otherAxisModel.get(coordSysIndexName) || 0) === (axisModel.get(coordSysIndexName) || 0)) {\n        foundOtherAxisModel = otherAxisModel;\n      }\n    });\n    return foundOtherAxisModel;\n  },\n  getMinMaxSpan: function () {\n    return zrUtil.clone(this._minMaxSpan);\n  },\n\n  /**\n   * Only calculate by given range and this._dataExtent, do not change anything.\n   *\n   * @param {Object} opt\n   * @param {number} [opt.start]\n   * @param {number} [opt.end]\n   * @param {number} [opt.startValue]\n   * @param {number} [opt.endValue]\n   */\n  calculateDataWindow: function (opt) {\n    var dataExtent = this._dataExtent;\n    var axisModel = this.getAxisModel();\n    var scale = axisModel.axis.scale;\n\n    var rangePropMode = this._dataZoomModel.getRangePropMode();\n\n    var percentExtent = [0, 100];\n    var percentWindow = [opt.start, opt.end];\n    var valueWindow = [];\n    each(['startValue', 'endValue'], function (prop) {\n      valueWindow.push(opt[prop] != null ? scale.parse(opt[prop]) : null);\n    }); // Normalize bound.\n\n    each([0, 1], function (idx) {\n      var boundValue = valueWindow[idx];\n      var boundPercent = percentWindow[idx]; // Notice: dataZoom is based either on `percentProp` ('start', 'end') or\n      // on `valueProp` ('startValue', 'endValue'). The former one is suitable\n      // for cases that a dataZoom component controls multiple axes with different\n      // unit or extent, and the latter one is suitable for accurate zoom by pixel\n      // (e.g., in dataZoomSelect). `valueProp` can be calculated from `percentProp`,\n      // but it is awkward that `percentProp` can not be obtained from `valueProp`\n      // accurately (because all of values that are overflow the `dataExtent` will\n      // be calculated to percent '100%'). So we have to use\n      // `dataZoom.getRangePropMode()` to mark which prop is used.\n      // `rangePropMode` is updated only when setOption or dispatchAction, otherwise\n      // it remains its original value.\n\n      if (rangePropMode[idx] === 'percent') {\n        if (boundPercent == null) {\n          boundPercent = percentExtent[idx];\n        } // Use scale.parse to math round for category or time axis.\n\n\n        boundValue = scale.parse(numberUtil.linearMap(boundPercent, percentExtent, dataExtent, true));\n      } else {\n        // Calculating `percent` from `value` may be not accurate, because\n        // This calculation can not be inversed, because all of values that\n        // are overflow the `dataExtent` will be calculated to percent '100%'\n        boundPercent = numberUtil.linearMap(boundValue, dataExtent, percentExtent, true);\n      } // valueWindow[idx] = round(boundValue);\n      // percentWindow[idx] = round(boundPercent);\n\n\n      valueWindow[idx] = boundValue;\n      percentWindow[idx] = boundPercent;\n    });\n    return {\n      valueWindow: asc(valueWindow),\n      percentWindow: asc(percentWindow)\n    };\n  },\n\n  /**\n   * Notice: reset should not be called before series.restoreData() called,\n   * so it is recommanded to be called in \"process stage\" but not \"model init\n   * stage\".\n   *\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  reset: function (dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    } // Culculate data window and data extent, and record them.\n\n\n    this._dataExtent = calculateDataExtent(this, this._dimName, this.getTargetSeriesModels());\n    var dataWindow = this.calculateDataWindow(dataZoomModel.option);\n    this._valueWindow = dataWindow.valueWindow;\n    this._percentWindow = dataWindow.percentWindow;\n    setMinMaxSpan(this); // Update axis setting then.\n\n    setAxisModel(this);\n  },\n\n  /**\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  restore: function (dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    this._valueWindow = this._percentWindow = null;\n    setAxisModel(this, true);\n  },\n\n  /**\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  filterData: function (dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    var axisDim = this._dimName;\n    var seriesModels = this.getTargetSeriesModels();\n    var filterMode = dataZoomModel.get('filterMode');\n    var valueWindow = this._valueWindow;\n\n    if (filterMode === 'none') {\n      return;\n    } // FIXME\n    // Toolbox may has dataZoom injected. And if there are stacked bar chart\n    // with NaN data, NaN will be filtered and stack will be wrong.\n    // So we need to force the mode to be set empty.\n    // In fect, it is not a big deal that do not support filterMode-'filter'\n    // when using toolbox#dataZoom, utill tooltip#dataZoom support \"single axis\n    // selection\" some day, which might need \"adapt to data extent on the\n    // otherAxis\", which is disabled by filterMode-'empty'.\n\n\n    var otherAxisModel = this.getOtherAxisModel();\n\n    if (dataZoomModel.get('$fromToolbox') && otherAxisModel && otherAxisModel.get('type') === 'category') {\n      filterMode = 'empty';\n    } // Process series data\n\n\n    each(seriesModels, function (seriesModel) {\n      var seriesData = seriesModel.getData();\n      var dataDims = seriesModel.coordDimToDataDim(axisDim);\n\n      if (filterMode === 'weakFilter') {\n        seriesData && seriesData.filterSelf(function (dataIndex) {\n          var leftOut;\n          var rightOut;\n          var hasValue;\n\n          for (var i = 0; i < dataDims.length; i++) {\n            var value = seriesData.get(dataDims[i], dataIndex);\n            var thisHasValue = !isNaN(value);\n            var thisLeftOut = value < valueWindow[0];\n            var thisRightOut = value > valueWindow[1];\n\n            if (thisHasValue && !thisLeftOut && !thisRightOut) {\n              return true;\n            }\n\n            thisHasValue && (hasValue = true);\n            thisLeftOut && (leftOut = true);\n            thisRightOut && (rightOut = true);\n          } // If both left out and right out, do not filter.\n\n\n          return hasValue && leftOut && rightOut;\n        });\n      } else {\n        seriesData && each(dataDims, function (dim) {\n          if (filterMode === 'empty') {\n            seriesModel.setData(seriesData.map(dim, function (value) {\n              return !isInWindow(value) ? NaN : value;\n            }));\n          } else {\n            seriesData.filterSelf(dim, isInWindow);\n          }\n        });\n      }\n    });\n\n    function isInWindow(value) {\n      return value >= valueWindow[0] && value <= valueWindow[1];\n    }\n  }\n};\n\nfunction calculateDataExtent(axisProxy, axisDim, seriesModels) {\n  var dataExtent = [Infinity, -Infinity];\n  each(seriesModels, function (seriesModel) {\n    var seriesData = seriesModel.getData();\n\n    if (seriesData) {\n      each(seriesModel.coordDimToDataDim(axisDim), function (dim) {\n        var seriesExtent = seriesData.getDataExtent(dim);\n        seriesExtent[0] < dataExtent[0] && (dataExtent[0] = seriesExtent[0]);\n        seriesExtent[1] > dataExtent[1] && (dataExtent[1] = seriesExtent[1]);\n      });\n    }\n  });\n\n  if (dataExtent[1] < dataExtent[0]) {\n    dataExtent = [NaN, NaN];\n  } // It is important to get \"consistent\" extent when more then one axes is\n  // controlled by a `dataZoom`, otherwise those axes will not be synchronized\n  // when zooming. But it is difficult to know what is \"consistent\", considering\n  // axes have different type or even different meanings (For example, two\n  // time axes are used to compare data of the same date in different years).\n  // So basically dataZoom just obtains extent by series.data (in category axis\n  // extent can be obtained from axis.data).\n  // Nevertheless, user can set min/max/scale on axes to make extent of axes\n  // consistent.\n\n\n  fixExtentByAxis(axisProxy, dataExtent);\n  return dataExtent;\n}\n\nfunction fixExtentByAxis(axisProxy, dataExtent) {\n  var axisModel = axisProxy.getAxisModel();\n  var min = axisModel.getMin(true); // For category axis, if min/max/scale are not set, extent is determined\n  // by axis.data by default.\n\n  var isCategoryAxis = axisModel.get('type') === 'category';\n  var axisDataLen = isCategoryAxis && (axisModel.get('data') || []).length;\n\n  if (min != null && min !== 'dataMin' && typeof min !== 'function') {\n    dataExtent[0] = min;\n  } else if (isCategoryAxis) {\n    dataExtent[0] = axisDataLen > 0 ? 0 : NaN;\n  }\n\n  var max = axisModel.getMax(true);\n\n  if (max != null && max !== 'dataMax' && typeof max !== 'function') {\n    dataExtent[1] = max;\n  } else if (isCategoryAxis) {\n    dataExtent[1] = axisDataLen > 0 ? axisDataLen - 1 : NaN;\n  }\n\n  if (!axisModel.get('scale', true)) {\n    dataExtent[0] > 0 && (dataExtent[0] = 0);\n    dataExtent[1] < 0 && (dataExtent[1] = 0);\n  } // For value axis, if min/max/scale are not set, we just use the extent obtained\n  // by series data, which may be a little different from the extent calculated by\n  // `axisHelper.getScaleExtent`. But the different just affects the experience a\n  // little when zooming. So it will not be fixed until some users require it strongly.\n\n\n  return dataExtent;\n}\n\nfunction setAxisModel(axisProxy, isRestore) {\n  var axisModel = axisProxy.getAxisModel();\n  var percentWindow = axisProxy._percentWindow;\n  var valueWindow = axisProxy._valueWindow;\n\n  if (!percentWindow) {\n    return;\n  } // [0, 500]: arbitrary value, guess axis extent.\n\n\n  var precision = numberUtil.getPixelPrecision(valueWindow, [0, 500]);\n  precision = Math.min(precision, 20); // isRestore or isFull\n\n  var useOrigin = isRestore || percentWindow[0] === 0 && percentWindow[1] === 100;\n  axisModel.setRange(useOrigin ? null : +valueWindow[0].toFixed(precision), useOrigin ? null : +valueWindow[1].toFixed(precision));\n}\n\nfunction setMinMaxSpan(axisProxy) {\n  var minMaxSpan = axisProxy._minMaxSpan = {};\n  var dataZoomModel = axisProxy._dataZoomModel;\n  each(['min', 'max'], function (minMax) {\n    minMaxSpan[minMax + 'Span'] = dataZoomModel.get(minMax + 'Span'); // minValueSpan and maxValueSpan has higher priority than minSpan and maxSpan\n\n    var valueSpan = dataZoomModel.get(minMax + 'ValueSpan');\n\n    if (valueSpan != null) {\n      minMaxSpan[minMax + 'ValueSpan'] = valueSpan;\n      valueSpan = axisProxy.getAxisModel().axis.scale.parse(valueSpan);\n\n      if (valueSpan != null) {\n        var dataExtent = axisProxy._dataExtent;\n        minMaxSpan[minMax + 'Span'] = numberUtil.linearMap(dataExtent[0] + valueSpan, dataExtent, [0, 100], true);\n      }\n    }\n  });\n}\n\nvar _default = AxisProxy;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/AxisProxy.js\n// module id = 1202\n// module chunks = 0 1 2","var DataZoomModel = require(\"./DataZoomModel\");\n\nvar _default = DataZoomModel.extend({\n  type: 'dataZoom.select'\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/SelectZoomModel.js\n// module id = 1203\n// module chunks = 0 1 2","var DataZoomView = require(\"./DataZoomView\");\n\nvar _default = DataZoomView.extend({\n  type: 'dataZoom.select'\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/SelectZoomView.js\n// module id = 1204\n// module chunks = 0 1 2","var echarts = require(\"../../../echarts\");\n\nvar history = require(\"../../dataZoom/history\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\nvar restoreLang = lang.toolbox.restore;\n\nfunction Restore(model) {\n  this.model = model;\n}\n\nRestore.defaultOption = {\n  show: true,\n  icon: 'M3.8,33.4 M47,18.9h9.8V8.7 M56.3,20.1 C52.1,9,40.5,0.6,26.8,2.1C12.6,3.7,1.6,16.2,2.1,30.6 M13,41.1H3.1v10.2 M3.7,39.9c4.2,11.1,15.8,19.5,29.5,18 c14.2-1.6,25.2-14.1,24.7-28.5',\n  title: restoreLang.title\n};\nvar proto = Restore.prototype;\n\nproto.onclick = function (ecModel, api, type) {\n  history.clear(ecModel);\n  api.dispatchAction({\n    type: 'restore',\n    from: this.uid\n  });\n};\n\nfeatureManager.register('restore', Restore);\necharts.registerAction({\n  type: 'restore',\n  event: 'restore',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  ecModel.resetOption('recreate');\n});\nvar _default = Restore;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox/feature/Restore.js\n// module id = 1205\n// module chunks = 0 1 2","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nfunction _default(seriesType, actionInfos) {\n  zrUtil.each(actionInfos, function (actionInfo) {\n    actionInfo.update = 'updateView';\n    /**\n     * @payload\n     * @property {string} seriesName\n     * @property {string} name\n     */\n\n    echarts.registerAction(actionInfo, function (payload, ecModel) {\n      var selected = {};\n      ecModel.eachComponent({\n        mainType: 'series',\n        subType: seriesType,\n        query: payload\n      }, function (seriesModel) {\n        if (seriesModel[actionInfo.method]) {\n          seriesModel[actionInfo.method](payload.name, payload.dataIndex);\n        }\n\n        var data = seriesModel.getData(); // Create selected map\n\n        data.each(function (idx) {\n          var name = data.getName(idx);\n          selected[name] = seriesModel.isSelected(name) || false;\n        });\n      });\n      return {\n        name: payload.name,\n        selected: selected\n      };\n    });\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/action/createDataSelectAction.js\n// module id = 1210\n// module chunks = 0 2","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"./pie/PieSeries\");\n\nrequire(\"./pie/PieView\");\n\nvar createDataSelectAction = require(\"../action/createDataSelectAction\");\n\nvar dataColor = require(\"../visual/dataColor\");\n\nvar pieLayout = require(\"./pie/pieLayout\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\ncreateDataSelectAction('pie', [{\n  type: 'pieToggleSelect',\n  event: 'pieselectchanged',\n  method: 'toggleSelected'\n}, {\n  type: 'pieSelect',\n  event: 'pieselected',\n  method: 'select'\n}, {\n  type: 'pieUnSelect',\n  event: 'pieunselected',\n  method: 'unSelect'\n}]);\necharts.registerVisual(zrUtil.curry(dataColor, 'pie'));\necharts.registerLayout(zrUtil.curry(pieLayout, 'pie'));\necharts.registerProcessor(zrUtil.curry(dataFilter, 'pie'));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/pie.js\n// module id = 1218\n// module chunks = 0 2","var echarts = require(\"../../echarts\");\n\nvar List = require(\"../../data/List\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar _number = require(\"../../util/number\");\n\nvar getPercentWithPrecision = _number.getPercentWithPrecision;\n\nvar completeDimensions = require(\"../../data/helper/completeDimensions\");\n\nvar dataSelectableMixin = require(\"../../component/helper/selectableMixin\");\n\nvar PieSeries = echarts.extendSeriesModel({\n  type: 'series.pie',\n  // Overwrite\n  init: function (option) {\n    PieSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    };\n\n    this.updateSelectedMap(option.data);\n\n    this._defaultLabelLine(option);\n  },\n  // Overwrite\n  mergeOption: function (newOption) {\n    PieSeries.superCall(this, 'mergeOption', newOption);\n    this.updateSelectedMap(this.option.data);\n  },\n  getInitialData: function (option, ecModel) {\n    var dimensions = completeDimensions(['value'], option.data);\n    var list = new List(dimensions, this);\n    list.initData(option.data);\n    return list;\n  },\n  // Overwrite\n  getDataParams: function (dataIndex) {\n    var data = this.getData();\n    var params = PieSeries.superCall(this, 'getDataParams', dataIndex); // FIXME toFixed?\n\n    var valueList = [];\n    data.each('value', function (value) {\n      valueList.push(value);\n    });\n    params.percent = getPercentWithPrecision(valueList, dataIndex, data.hostModel.get('percentPrecision'));\n    params.$vars.push('percent');\n    return params;\n  },\n  _defaultLabelLine: function (option) {\n    // Extend labelLine emphasis\n    modelUtil.defaultEmphasis(option.labelLine, ['show']);\n    var labelLineNormalOpt = option.labelLine.normal;\n    var labelLineEmphasisOpt = option.labelLine.emphasis; // Not show label line if `label.normal.show = false`\n\n    labelLineNormalOpt.show = labelLineNormalOpt.show && option.label.normal.show;\n    labelLineEmphasisOpt.show = labelLineEmphasisOpt.show && option.label.emphasis.show;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // 默认全局居中\n    center: ['50%', '50%'],\n    radius: [0, '75%'],\n    // 默认顺时针\n    clockwise: true,\n    startAngle: 90,\n    // 最小角度改为0\n    minAngle: 0,\n    // 选中时扇区偏移量\n    selectedOffset: 10,\n    // 高亮扇区偏移量\n    hoverOffset: 10,\n    // If use strategy to avoid label overlapping\n    avoidLabelOverlap: true,\n    // 选择模式，默认关闭，可选single，multiple\n    // selectedMode: false,\n    // 南丁格尔玫瑰图模式，'radius'（半径） | 'area'（面积）\n    // roseType: null,\n    percentPrecision: 2,\n    // If still show when all data zero.\n    stillShowZeroSum: true,\n    // cursor: null,\n    label: {\n      normal: {\n        // If rotate around circle\n        rotate: false,\n        show: true,\n        // 'outer', 'inside', 'center'\n        position: 'outer' // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n        // 默认使用全局文本样式，详见TEXTSTYLE\n        // distance: 当position为inner时有效，为label位置到圆心的距离与圆半径(环状图为内外半径和)的比例系数\n\n      },\n      emphasis: {}\n    },\n    // Enabled when label.normal.position is 'outer'\n    labelLine: {\n      normal: {\n        show: true,\n        // 引导线两段中的第一段长度\n        length: 15,\n        // 引导线两段中的第二段长度\n        length2: 15,\n        smooth: false,\n        lineStyle: {\n          // color: 各异,\n          width: 1,\n          type: 'solid'\n        }\n      }\n    },\n    itemStyle: {\n      normal: {\n        borderWidth: 1\n      },\n      emphasis: {}\n    },\n    // Animation type canbe expansion, scale\n    animationType: 'expansion',\n    animationEasing: 'cubicOut',\n    data: []\n  }\n});\nzrUtil.mixin(PieSeries, dataSelectableMixin);\nvar _default = PieSeries;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/pie/PieSeries.js\n// module id = 1219\n// module chunks = 0 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar ChartView = require(\"../../view/Chart\");\n\n/**\n * @param {module:echarts/model/Series} seriesModel\n * @param {boolean} hasAnimation\n * @inner\n */\nfunction updateDataSelected(uid, seriesModel, hasAnimation, api) {\n  var data = seriesModel.getData();\n  var dataIndex = this.dataIndex;\n  var name = data.getName(dataIndex);\n  var selectedOffset = seriesModel.get('selectedOffset');\n  api.dispatchAction({\n    type: 'pieToggleSelect',\n    from: uid,\n    name: name,\n    seriesId: seriesModel.id\n  });\n  data.each(function (idx) {\n    toggleItemSelected(data.getItemGraphicEl(idx), data.getItemLayout(idx), seriesModel.isSelected(data.getName(idx)), selectedOffset, hasAnimation);\n  });\n}\n/**\n * @param {module:zrender/graphic/Sector} el\n * @param {Object} layout\n * @param {boolean} isSelected\n * @param {number} selectedOffset\n * @param {boolean} hasAnimation\n * @inner\n */\n\n\nfunction toggleItemSelected(el, layout, isSelected, selectedOffset, hasAnimation) {\n  var midAngle = (layout.startAngle + layout.endAngle) / 2;\n  var dx = Math.cos(midAngle);\n  var dy = Math.sin(midAngle);\n  var offset = isSelected ? selectedOffset : 0;\n  var position = [dx * offset, dy * offset];\n  hasAnimation // animateTo will stop revious animation like update transition\n  ? el.animate().when(200, {\n    position: position\n  }).start('bounceOut') : el.attr('position', position);\n}\n/**\n * Piece of pie including Sector, Label, LabelLine\n * @constructor\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction PiePiece(data, idx) {\n  graphic.Group.call(this);\n  var sector = new graphic.Sector({\n    z2: 2\n  });\n  var polyline = new graphic.Polyline();\n  var text = new graphic.Text();\n  this.add(sector);\n  this.add(polyline);\n  this.add(text);\n  this.updateData(data, idx, true); // Hover to change label and labelLine\n\n  function onEmphasis() {\n    polyline.ignore = polyline.hoverIgnore;\n    text.ignore = text.hoverIgnore;\n  }\n\n  function onNormal() {\n    polyline.ignore = polyline.normalIgnore;\n    text.ignore = text.normalIgnore;\n  }\n\n  this.on('emphasis', onEmphasis).on('normal', onNormal).on('mouseover', onEmphasis).on('mouseout', onNormal);\n}\n\nvar piePieceProto = PiePiece.prototype;\n\npiePieceProto.updateData = function (data, idx, firstCreate) {\n  var sector = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var sectorShape = zrUtil.extend({}, layout);\n  sectorShape.label = null;\n\n  if (firstCreate) {\n    sector.setShape(sectorShape);\n    var animationType = seriesModel.getShallow('animationType');\n\n    if (animationType === 'scale') {\n      sector.shape.r = layout.r0;\n      graphic.initProps(sector, {\n        shape: {\n          r: layout.r\n        }\n      }, seriesModel, idx);\n    } // Expansion\n    else {\n        sector.shape.endAngle = layout.startAngle;\n        graphic.updateProps(sector, {\n          shape: {\n            endAngle: layout.endAngle\n          }\n        }, seriesModel, idx);\n      }\n  } else {\n    graphic.updateProps(sector, {\n      shape: sectorShape\n    }, seriesModel, idx);\n  } // Update common style\n\n\n  var itemStyleModel = itemModel.getModel('itemStyle');\n  var visualColor = data.getItemVisual(idx, 'color');\n  sector.useStyle(zrUtil.defaults({\n    lineJoin: 'bevel',\n    fill: visualColor\n  }, itemStyleModel.getModel('normal').getItemStyle()));\n  sector.hoverStyle = itemStyleModel.getModel('emphasis').getItemStyle();\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && sector.attr('cursor', cursorStyle); // Toggle selected\n\n  toggleItemSelected(this, data.getItemLayout(idx), itemModel.get('selected'), seriesModel.get('selectedOffset'), seriesModel.get('animation'));\n\n  function onEmphasis() {\n    // Sector may has animation of updating data. Force to move to the last frame\n    // Or it may stopped on the wrong shape\n    sector.stopAnimation(true);\n    sector.animateTo({\n      shape: {\n        r: layout.r + seriesModel.get('hoverOffset')\n      }\n    }, 300, 'elasticOut');\n  }\n\n  function onNormal() {\n    sector.stopAnimation(true);\n    sector.animateTo({\n      shape: {\n        r: layout.r\n      }\n    }, 300, 'elasticOut');\n  }\n\n  sector.off('mouseover').off('mouseout').off('emphasis').off('normal');\n\n  if (itemModel.get('hoverAnimation') && seriesModel.isAnimationEnabled()) {\n    sector.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n  }\n\n  this._updateLabel(data, idx);\n\n  graphic.setHoverStyle(this);\n};\n\npiePieceProto._updateLabel = function (data, idx) {\n  var labelLine = this.childAt(1);\n  var labelText = this.childAt(2);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var labelLayout = layout.label;\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.updateProps(labelLine, {\n    shape: {\n      points: labelLayout.linePoints || [[labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y]]\n    }\n  }, seriesModel, idx);\n  graphic.updateProps(labelText, {\n    style: {\n      x: labelLayout.x,\n      y: labelLayout.y\n    }\n  }, seriesModel, idx);\n  labelText.attr({\n    rotation: labelLayout.rotation,\n    origin: [labelLayout.x, labelLayout.y],\n    z2: 10\n  });\n  var labelModel = itemModel.getModel('label.normal');\n  var labelHoverModel = itemModel.getModel('label.emphasis');\n  var labelLineModel = itemModel.getModel('labelLine.normal');\n  var labelLineHoverModel = itemModel.getModel('labelLine.emphasis');\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.setLabelStyle(labelText.style, labelText.hoverStyle = {}, labelModel, labelHoverModel, {\n    labelFetcher: data.hostModel,\n    labelDataIndex: idx,\n    defaultText: data.getName(idx),\n    autoColor: visualColor,\n    useInsideStyle: !!labelLayout.inside\n  }, {\n    textAlign: labelLayout.textAlign,\n    textVerticalAlign: labelLayout.verticalAlign,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n  labelText.hoverIgnore = !labelHoverModel.get('show');\n  labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n  labelLine.hoverIgnore = !labelLineHoverModel.get('show'); // Default use item visual color\n\n  labelLine.setStyle({\n    stroke: visualColor,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n  labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n  var smooth = labelLineModel.get('smooth');\n\n  if (smooth && smooth === true) {\n    smooth = 0.4;\n  }\n\n  labelLine.setShape({\n    smooth: smooth\n  });\n};\n\nzrUtil.inherits(PiePiece, graphic.Group); // Pie view\n\nvar PieView = ChartView.extend({\n  type: 'pie',\n  init: function () {\n    var sectorGroup = new graphic.Group();\n    this._sectorGroup = sectorGroup;\n  },\n  render: function (seriesModel, ecModel, api, payload) {\n    if (payload && payload.from === this.uid) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    var hasAnimation = ecModel.get('animation');\n    var isFirstRender = !oldData;\n    var animationType = seriesModel.get('animationType');\n    var onSectorClick = zrUtil.curry(updateDataSelected, this.uid, seriesModel, hasAnimation, api);\n    var selectedMode = seriesModel.get('selectedMode');\n    data.diff(oldData).add(function (idx) {\n      var piePiece = new PiePiece(data, idx); // Default expansion animation\n\n      if (isFirstRender && animationType !== 'scale') {\n        piePiece.eachChild(function (child) {\n          child.stopAnimation(true);\n        });\n      }\n\n      selectedMode && piePiece.on('click', onSectorClick);\n      data.setItemGraphicEl(idx, piePiece);\n      group.add(piePiece);\n    }).update(function (newIdx, oldIdx) {\n      var piePiece = oldData.getItemGraphicEl(oldIdx);\n      piePiece.updateData(data, newIdx);\n      piePiece.off('click');\n      selectedMode && piePiece.on('click', onSectorClick);\n      group.add(piePiece);\n      data.setItemGraphicEl(newIdx, piePiece);\n    }).remove(function (idx) {\n      var piePiece = oldData.getItemGraphicEl(idx);\n      group.remove(piePiece);\n    }).execute();\n\n    if (hasAnimation && isFirstRender && data.count() > 0 // Default expansion animation\n    && animationType !== 'scale') {\n      var shape = data.getItemLayout(0);\n      var r = Math.max(api.getWidth(), api.getHeight()) / 2;\n      var removeClipPath = zrUtil.bind(group.removeClipPath, group);\n      group.setClipPath(this._createClipPath(shape.cx, shape.cy, r, shape.startAngle, shape.clockwise, removeClipPath, seriesModel));\n    }\n\n    this._data = data;\n  },\n  dispose: function () {},\n  _createClipPath: function (cx, cy, r, startAngle, clockwise, cb, seriesModel) {\n    var clipPath = new graphic.Sector({\n      shape: {\n        cx: cx,\n        cy: cy,\n        r0: 0,\n        r: r,\n        startAngle: startAngle,\n        endAngle: startAngle,\n        clockwise: clockwise\n      }\n    });\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: startAngle + (clockwise ? 1 : -1) * Math.PI * 2\n      }\n    }, seriesModel, cb);\n    return clipPath;\n  },\n\n  /**\n   * @implement\n   */\n  containPoint: function (point, seriesModel) {\n    var data = seriesModel.getData();\n    var itemLayout = data.getItemLayout(0);\n\n    if (itemLayout) {\n      var dx = point[0] - itemLayout.cx;\n      var dy = point[1] - itemLayout.cy;\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      return radius <= itemLayout.r && radius >= itemLayout.r0;\n    }\n  }\n});\nvar _default = PieView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/pie/PieView.js\n// module id = 1220\n// module chunks = 0 2","var _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar linearMap = _number.linearMap;\n\nvar labelLayout = require(\"./labelLayout\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar PI2 = Math.PI * 2;\nvar RADIAN = Math.PI / 180;\n\nfunction _default(seriesType, ecModel, api, payload) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var center = seriesModel.get('center');\n    var radius = seriesModel.get('radius');\n\n    if (!zrUtil.isArray(radius)) {\n      radius = [0, radius];\n    }\n\n    if (!zrUtil.isArray(center)) {\n      center = [center, center];\n    }\n\n    var width = api.getWidth();\n    var height = api.getHeight();\n    var size = Math.min(width, height);\n    var cx = parsePercent(center[0], width);\n    var cy = parsePercent(center[1], height);\n    var r0 = parsePercent(radius[0], size / 2);\n    var r = parsePercent(radius[1], size / 2);\n    var data = seriesModel.getData();\n    var startAngle = -seriesModel.get('startAngle') * RADIAN;\n    var minAngle = seriesModel.get('minAngle') * RADIAN;\n    var validDataCount = 0;\n    data.each('value', function (value) {\n      !isNaN(value) && validDataCount++;\n    });\n    var sum = data.getSum('value'); // Sum may be 0\n\n    var unitRadian = Math.PI / (sum || validDataCount) * 2;\n    var clockwise = seriesModel.get('clockwise');\n    var roseType = seriesModel.get('roseType');\n    var stillShowZeroSum = seriesModel.get('stillShowZeroSum'); // [0...max]\n\n    var extent = data.getDataExtent('value');\n    extent[0] = 0; // In the case some sector angle is smaller than minAngle\n\n    var restAngle = PI2;\n    var valueSumLargerThanMinAngle = 0;\n    var currentAngle = startAngle;\n    var dir = clockwise ? 1 : -1;\n    data.each('value', function (value, idx) {\n      var angle;\n\n      if (isNaN(value)) {\n        data.setItemLayout(idx, {\n          angle: NaN,\n          startAngle: NaN,\n          endAngle: NaN,\n          clockwise: clockwise,\n          cx: cx,\n          cy: cy,\n          r0: r0,\n          r: roseType ? NaN : r\n        });\n        return;\n      } // FIXME 兼容 2.0 但是 roseType 是 area 的时候才是这样？\n\n\n      if (roseType !== 'area') {\n        angle = sum === 0 && stillShowZeroSum ? unitRadian : value * unitRadian;\n      } else {\n        angle = PI2 / validDataCount;\n      }\n\n      if (angle < minAngle) {\n        angle = minAngle;\n        restAngle -= minAngle;\n      } else {\n        valueSumLargerThanMinAngle += value;\n      }\n\n      var endAngle = currentAngle + dir * angle;\n      data.setItemLayout(idx, {\n        angle: angle,\n        startAngle: currentAngle,\n        endAngle: endAngle,\n        clockwise: clockwise,\n        cx: cx,\n        cy: cy,\n        r0: r0,\n        r: roseType ? linearMap(value, extent, [r0, r]) : r\n      });\n      currentAngle = endAngle;\n    }, true); // Some sector is constrained by minAngle\n    // Rest sectors needs recalculate angle\n\n    if (restAngle < PI2 && validDataCount) {\n      // Average the angle if rest angle is not enough after all angles is\n      // Constrained by minAngle\n      if (restAngle <= 1e-3) {\n        var angle = PI2 / validDataCount;\n        data.each('value', function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            layout.angle = angle;\n            layout.startAngle = startAngle + dir * idx * angle;\n            layout.endAngle = startAngle + dir * (idx + 1) * angle;\n          }\n        });\n      } else {\n        unitRadian = restAngle / valueSumLargerThanMinAngle;\n        currentAngle = startAngle;\n        data.each('value', function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            var angle = layout.angle === minAngle ? minAngle : value * unitRadian;\n            layout.startAngle = currentAngle;\n            layout.endAngle = currentAngle + dir * angle;\n            currentAngle += dir * angle;\n          }\n        });\n      }\n    }\n\n    labelLayout(seriesModel, r, width, height);\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/pie/pieLayout.js\n// module id = 1221\n// module chunks = 0 2","var textContain = require(\"zrender/lib/contain/text\");\n\n// FIXME emphasis label position is not same with normal label position\nfunction adjustSingleSide(list, cx, cy, r, dir, viewWidth, viewHeight) {\n  list.sort(function (a, b) {\n    return a.y - b.y;\n  }); // 压\n\n  function shiftDown(start, end, delta, dir) {\n    for (var j = start; j < end; j++) {\n      list[j].y += delta;\n\n      if (j > start && j + 1 < end && list[j + 1].y > list[j].y + list[j].height) {\n        shiftUp(j, delta / 2);\n        return;\n      }\n    }\n\n    shiftUp(end - 1, delta / 2);\n  } // 弹\n\n\n  function shiftUp(end, delta) {\n    for (var j = end; j >= 0; j--) {\n      list[j].y -= delta;\n\n      if (j > 0 && list[j].y > list[j - 1].y + list[j - 1].height) {\n        break;\n      }\n    }\n  }\n\n  function changeX(list, isDownList, cx, cy, r, dir) {\n    var lastDeltaX = dir > 0 ? isDownList // 右侧\n    ? Number.MAX_VALUE // 下\n    : 0 // 上\n    : isDownList // 左侧\n    ? Number.MAX_VALUE // 下\n    : 0; // 上\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      // Not change x for center label\n      if (list[i].position === 'center') {\n        continue;\n      }\n\n      var deltaY = Math.abs(list[i].y - cy);\n      var length = list[i].len;\n      var length2 = list[i].len2;\n      var deltaX = deltaY < r + length ? Math.sqrt((r + length + length2) * (r + length + length2) - deltaY * deltaY) : Math.abs(list[i].x - cx);\n\n      if (isDownList && deltaX >= lastDeltaX) {\n        // 右下，左下\n        deltaX = lastDeltaX - 10;\n      }\n\n      if (!isDownList && deltaX <= lastDeltaX) {\n        // 右上，左上\n        deltaX = lastDeltaX + 10;\n      }\n\n      list[i].x = cx + deltaX * dir;\n      lastDeltaX = deltaX;\n    }\n  }\n\n  var lastY = 0;\n  var delta;\n  var len = list.length;\n  var upList = [];\n  var downList = [];\n\n  for (var i = 0; i < len; i++) {\n    delta = list[i].y - lastY;\n\n    if (delta < 0) {\n      shiftDown(i, len, -delta, dir);\n    }\n\n    lastY = list[i].y + list[i].height;\n  }\n\n  if (viewHeight - lastY < 0) {\n    shiftUp(len - 1, lastY - viewHeight);\n  }\n\n  for (var i = 0; i < len; i++) {\n    if (list[i].y >= cy) {\n      downList.push(list[i]);\n    } else {\n      upList.push(list[i]);\n    }\n  }\n\n  changeX(upList, false, cx, cy, r, dir);\n  changeX(downList, true, cx, cy, r, dir);\n}\n\nfunction avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight) {\n  var leftList = [];\n  var rightList = [];\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    if (labelLayoutList[i].x < cx) {\n      leftList.push(labelLayoutList[i]);\n    } else {\n      rightList.push(labelLayoutList[i]);\n    }\n  }\n\n  adjustSingleSide(rightList, cx, cy, r, 1, viewWidth, viewHeight);\n  adjustSingleSide(leftList, cx, cy, r, -1, viewWidth, viewHeight);\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    var linePoints = labelLayoutList[i].linePoints;\n\n    if (linePoints) {\n      var dist = linePoints[1][0] - linePoints[2][0];\n\n      if (labelLayoutList[i].x < cx) {\n        linePoints[2][0] = labelLayoutList[i].x + 3;\n      } else {\n        linePoints[2][0] = labelLayoutList[i].x - 3;\n      }\n\n      linePoints[1][1] = linePoints[2][1] = labelLayoutList[i].y;\n      linePoints[1][0] = linePoints[2][0] + dist;\n    }\n  }\n}\n\nfunction _default(seriesModel, r, viewWidth, viewHeight) {\n  var data = seriesModel.getData();\n  var labelLayoutList = [];\n  var cx;\n  var cy;\n  var hasLabelRotate = false;\n  data.each(function (idx) {\n    var layout = data.getItemLayout(idx);\n    var itemModel = data.getItemModel(idx);\n    var labelModel = itemModel.getModel('label.normal'); // Use position in normal or emphasis\n\n    var labelPosition = labelModel.get('position') || itemModel.get('label.emphasis.position');\n    var labelLineModel = itemModel.getModel('labelLine.normal');\n    var labelLineLen = labelLineModel.get('length');\n    var labelLineLen2 = labelLineModel.get('length2');\n    var midAngle = (layout.startAngle + layout.endAngle) / 2;\n    var dx = Math.cos(midAngle);\n    var dy = Math.sin(midAngle);\n    var textX;\n    var textY;\n    var linePoints;\n    var textAlign;\n    cx = layout.cx;\n    cy = layout.cy;\n    var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\n\n    if (labelPosition === 'center') {\n      textX = layout.cx;\n      textY = layout.cy;\n      textAlign = 'center';\n    } else {\n      var x1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dx : layout.r * dx) + cx;\n      var y1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dy : layout.r * dy) + cy;\n      textX = x1 + dx * 3;\n      textY = y1 + dy * 3;\n\n      if (!isLabelInside) {\n        // For roseType\n        var x2 = x1 + dx * (labelLineLen + r - layout.r);\n        var y2 = y1 + dy * (labelLineLen + r - layout.r);\n        var x3 = x2 + (dx < 0 ? -1 : 1) * labelLineLen2;\n        var y3 = y2;\n        textX = x3 + (dx < 0 ? -5 : 5);\n        textY = y3;\n        linePoints = [[x1, y1], [x2, y2], [x3, y3]];\n      }\n\n      textAlign = isLabelInside ? 'center' : dx > 0 ? 'left' : 'right';\n    }\n\n    var font = labelModel.getFont();\n    var labelRotate = labelModel.get('rotate') ? dx < 0 ? -midAngle + Math.PI : -midAngle : 0;\n    var text = seriesModel.getFormattedLabel(idx, 'normal') || data.getName(idx);\n    var textRect = textContain.getBoundingRect(text, font, textAlign, 'top');\n    hasLabelRotate = !!labelRotate;\n    layout.label = {\n      x: textX,\n      y: textY,\n      position: labelPosition,\n      height: textRect.height,\n      len: labelLineLen,\n      len2: labelLineLen2,\n      linePoints: linePoints,\n      textAlign: textAlign,\n      verticalAlign: 'middle',\n      rotation: labelRotate,\n      inside: isLabelInside\n    }; // Not layout the inside label\n\n    if (!isLabelInside) {\n      labelLayoutList.push(layout.label);\n    }\n  });\n\n  if (!hasLabelRotate && seriesModel.get('avoidLabelOverlap')) {\n    avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight);\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/pie/labelLayout.js\n// module id = 1222\n// module chunks = 0 2"],"sourceRoot":""}