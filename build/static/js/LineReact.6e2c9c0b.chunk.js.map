{"version":3,"sources":["../static/js/LineReact.6e2c9c0b.chunk.js","../node_modules/echarts/lib/model/Series.js","../node_modules/zrender/lib/mixin/Eventful.js","../node_modules/zrender/lib/tool/color.js","../node_modules/echarts/lib/util/symbol.js","../node_modules/echarts/lib/data/helper/completeDimensions.js","../node_modules/echarts/lib/lang.js","../node_modules/echarts/lib/CoordinateSystem.js","../node_modules/zrender/lib/core/PathProxy.js","../node_modules/echarts/lib/util/throttle.js","../node_modules/zrender/lib/container/Group.js","../node_modules/zrender/lib/config.js","../node_modules/echarts/lib/model/mixin/makeStyleMapper.js","../node_modules/echarts/lib/view/Chart.js","../node_modules/echarts/lib/data/DataDiffer.js","../node_modules/echarts/lib/scale/Scale.js","../node_modules/echarts/lib/component/axisPointer/modelHelper.js","../node_modules/echarts/lib/chart/helper/createListFromArray.js","../node_modules/echarts/lib/coord/Axis.js","../node_modules/zrender/lib/graphic/Displayable.js","../node_modules/zrender/lib/graphic/Gradient.js","../node_modules/echarts/lib/scale/Interval.js","../node_modules/echarts/lib/component/axis/AxisBuilder.js","../node_modules/echarts/lib/component/axis/AxisView.js","../node_modules/zrender/lib/core/log.js","../node_modules/zrender/lib/core/timsort.js","../node_modules/zrender/lib/graphic/Image.js","../node_modules/zrender/lib/graphic/helper/image.js","../node_modules/echarts/lib/util/component.js","../node_modules/echarts/lib/coord/axisModelCommonMixin.js","../node_modules/echarts/lib/component/dataZoom/DataZoomModel.js","../node_modules/echarts/lib/component/dataZoom/helper.js","../node_modules/echarts/lib/component/dataZoom/DataZoomView.js","../node_modules/zrender/lib/zrender.js","../node_modules/zrender/lib/graphic/helper/text.js","../node_modules/echarts/lib/component/axisPointer.js","../node_modules/echarts/lib/component/axisPointer/viewHelper.js","../node_modules/zrender/lib/mixin/Transformable.js","../node_modules/zrender/lib/core/bbox.js","../node_modules/zrender/lib/graphic/Text.js","../node_modules/echarts/lib/view/Component.js","../node_modules/echarts/lib/component/helper/sliderMove.js","../node_modules/echarts/lib/visual/symbol.js","../node_modules/zrender/lib/core/guid.js","../node_modules/zrender/lib/Element.js","../node_modules/zrender/lib/animation/Animator.js","../node_modules/zrender/lib/core/LRU.js","../node_modules/zrender/lib/graphic/Style.js","../node_modules/zrender/lib/graphic/Pattern.js","../node_modules/zrender/lib/animation/requestAnimationFrame.js","../node_modules/zrender/lib/graphic/helper/roundRect.js","../node_modules/zrender/lib/contain/util.js","../node_modules/zrender/lib/contain/windingLine.js","../node_modules/zrender/lib/graphic/helper/poly.js","../node_modules/echarts/lib/model/mixin/colorPalette.js","../node_modules/echarts/lib/scale/helper.js","../node_modules/echarts/lib/component/axisPointer/findPointFromSeries.js","../node_modules/echarts/lib/component/axisPointer/globalListener.js","../node_modules/echarts/lib/component/helper/listComponent.js","../node_modules/echarts/lib/component/dataZoom/history.js","../node_modules/echarts/lib/component/gridSimple.js","../node_modules/zrender/lib/graphic/helper/fixClipWithShadow.js","../node_modules/echarts/lib/component/axisPointer/CartesianAxisPointer.js","../node_modules/echarts/lib/component/axisPointer/BaseAxisPointer.js","../node_modules/echarts/lib/component/axis/cartesianAxisHelper.js","../node_modules/echarts/lib/component/legend/LegendModel.js","../node_modules/echarts/lib/component/legend/LegendView.js","../node_modules/echarts/lib/component/helper/BrushController.js","../node_modules/echarts/lib/component/helper/cursorHelper.js","../node_modules/echarts/lib/chart/helper/SymbolDraw.js","../node_modules/echarts/lib/chart/helper/Symbol.js","../node_modules/zrender/lib/graphic/mixin/RectText.js","../node_modules/zrender/lib/contain/line.js","../node_modules/zrender/lib/contain/quadratic.js","../node_modules/zrender/lib/graphic/LinearGradient.js","../node_modules/echarts/lib/export.js","../node_modules/echarts/lib/coord/geo/parseGeoJson.js","../node_modules/echarts/lib/coord/geo/Region.js","../node_modules/zrender/lib/contain/polygon.js","../node_modules/echarts/lib/component/tooltip.js","../node_modules/echarts/lib/component/legend.js","../node_modules/echarts/lib/component/toolbox.js","../node_modules/echarts/lib/component/helper/interactionMutex.js","../node_modules/echarts/lib/component/helper/BrushTargetManager.js","../node_modules/echarts/lib/component/helper/brushHelper.js","../node_modules/echarts/lib/component/dataZoom/typeDefaulter.js","../node_modules/echarts/lib/component/dataZoom/dataZoomProcessor.js","../node_modules/echarts/lib/component/dataZoom/dataZoomAction.js","../node_modules/echarts/lib/coord/axisModelCreator.js","../node_modules/zrender/lib/Handler.js","../node_modules/zrender/lib/mixin/Draggable.js","../node_modules/zrender/lib/Storage.js","../node_modules/zrender/lib/mixin/Animatable.js","../node_modules/zrender/lib/animation/Clip.js","../node_modules/zrender/lib/animation/easing.js","../node_modules/zrender/lib/Painter.js","../node_modules/zrender/lib/Layer.js","../node_modules/zrender/lib/animation/Animation.js","../node_modules/zrender/lib/dom/HandlerProxy.js","../node_modules/zrender/lib/core/GestureMgr.js","../node_modules/echarts/lib/model/Global.js","../node_modules/echarts/lib/model/mixin/lineStyle.js","../node_modules/echarts/lib/model/mixin/areaStyle.js","../node_modules/echarts/lib/model/mixin/textStyle.js","../node_modules/zrender/lib/tool/path.js","../node_modules/zrender/lib/contain/path.js","../node_modules/zrender/lib/contain/cubic.js","../node_modules/zrender/lib/contain/arc.js","../node_modules/zrender/lib/tool/transformPath.js","../node_modules/zrender/lib/graphic/shape/Circle.js","../node_modules/zrender/lib/graphic/shape/Sector.js","../node_modules/zrender/lib/graphic/shape/Ring.js","../node_modules/zrender/lib/graphic/shape/Polygon.js","../node_modules/zrender/lib/graphic/helper/smoothSpline.js","../node_modules/zrender/lib/graphic/helper/smoothBezier.js","../node_modules/zrender/lib/graphic/shape/Polyline.js","../node_modules/zrender/lib/graphic/shape/Rect.js","../node_modules/zrender/lib/graphic/shape/Line.js","../node_modules/zrender/lib/graphic/shape/BezierCurve.js","../node_modules/zrender/lib/graphic/shape/Arc.js","../node_modules/zrender/lib/graphic/CompoundPath.js","../node_modules/zrender/lib/graphic/RadialGradient.js","../node_modules/echarts/lib/model/mixin/itemStyle.js","../node_modules/echarts/lib/model/mixin/boxLayout.js","../node_modules/echarts/lib/model/globalDefault.js","../node_modules/echarts/lib/ExtensionAPI.js","../node_modules/echarts/lib/model/OptionManager.js","../node_modules/echarts/lib/preprocessor/backwardCompat.js","../node_modules/echarts/lib/preprocessor/helper/compatStyle.js","../node_modules/echarts/lib/visual/seriesColor.js","../node_modules/echarts/lib/loading/default.js","../node_modules/echarts/lib/helper.js","../node_modules/echarts/lib/scale/Ordinal.js","../node_modules/echarts/lib/scale/Time.js","../node_modules/echarts/lib/scale/Log.js","../node_modules/echarts/lib/component/axisPointer/axisTrigger.js","../node_modules/echarts/lib/component/axisPointer/AxisPointerModel.js","../node_modules/echarts/lib/component/axisPointer/AxisPointerView.js","../node_modules/echarts/lib/component/tooltip/TooltipModel.js","../node_modules/echarts/lib/component/tooltip/TooltipView.js","../node_modules/echarts/lib/component/tooltip/TooltipContent.js","../node_modules/echarts/lib/component/legend/legendAction.js","../node_modules/echarts/lib/component/legend/legendFilter.js","../node_modules/echarts/lib/component/toolbox/ToolboxModel.js","../node_modules/echarts/lib/component/toolbox/ToolboxView.js","../node_modules/echarts/lib/component/toolbox/feature/SaveAsImage.js","../node_modules/echarts/lib/component/toolbox/feature/MagicType.js","../node_modules/echarts/lib/component/toolbox/feature/DataView.js","../node_modules/echarts/lib/component/toolbox/feature/DataZoom.js","../node_modules/echarts/lib/component/dataZoomSelect.js","../node_modules/echarts/lib/component/dataZoom/AxisProxy.js","../node_modules/echarts/lib/component/dataZoom/SelectZoomModel.js","../node_modules/echarts/lib/component/dataZoom/SelectZoomView.js","../node_modules/echarts/lib/component/toolbox/feature/Restore.js","../node_modules/echarts/lib/layout/points.js","../node_modules/echarts/lib/coord/cartesian/Grid.js","../node_modules/echarts/lib/coord/cartesian/AxisModel.js","../node_modules/echarts/lib/chart/helper/labelHelper.js","../node_modules/echarts/lib/chart/line/poly.js","../node_modules/echarts/lib/coord/axisDefault.js","../node_modules/echarts/lib/chart/line.js","../node_modules/echarts/lib/chart/line/LineSeries.js","../node_modules/echarts/lib/chart/line/LineView.js","../node_modules/echarts/lib/chart/line/lineAnimationDiff.js","../node_modules/echarts/lib/processor/dataSample.js","../node_modules/echarts/lib/coord/cartesian/Cartesian2D.js","../node_modules/echarts/lib/coord/cartesian/Cartesian.js","../node_modules/echarts/lib/coord/cartesian/Axis2D.js","../node_modules/echarts/lib/coord/cartesian/GridModel.js","../node_modules/echarts/lib/component/axis.js","../node_modules/echarts/lib/component/axis/CartesianAxisView.js","../node_modules/echarts/lib/component/grid.js","../node_modules/echarts/lib/component/legendScroll.js","../node_modules/echarts/lib/component/legend/ScrollableLegendModel.js","../node_modules/echarts/lib/component/legend/ScrollableLegendView.js","../node_modules/echarts/lib/component/legend/scrollableLegendAction.js","Echarts/LineReact.js","../node_modules/zrender/lib/core/util.js","../node_modules/echarts/lib/echarts.js","../node_modules/echarts/lib/util/graphic.js","../node_modules/echarts/lib/util/number.js","../node_modules/echarts/lib/util/model.js","../node_modules/echarts/lib/config.js","../node_modules/zrender/lib/core/vector.js","../node_modules/echarts/lib/util/format.js","../node_modules/zrender/lib/core/env.js","../node_modules/zrender/lib/core/BoundingRect.js","../node_modules/zrender/lib/graphic/Path.js","../node_modules/echarts/lib/model/Model.js","../node_modules/echarts/lib/util/layout.js","../node_modules/echarts/lib/model/Component.js","../node_modules/echarts/lib/util/clazz.js","../node_modules/zrender/lib/contain/text.js","../node_modules/zrender/lib/core/matrix.js","../node_modules/echarts/lib/data/List.js","../node_modules/echarts/lib/coord/axisHelper.js","../node_modules/echarts/lib/component/toolbox/featureManager.js","../node_modules/zrender/lib/core/event.js","../node_modules/zrender/lib/core/curve.js"],"names":["webpackJsonp","1000","module","exports","__webpack_require__","_config","zrUtil","__DEV__","env","_format","formatTime","encodeHTML","addCommas","getTooltipMarker","_clazz","set","get","modelUtil","ComponentModel","colorPaletteMixin","_layout","getLayoutParams","mergeLayoutParam","SeriesModel","extend","type","seriesIndex","coordinateSystem","defaultOption","legendDataProvider","visualColorAccessPath","layoutMode","init","option","parentModel","ecModel","extraOpt","this","componentIndex","mergeDefaultAndTheme","data","getInitialData","restoreData","inputPositionParams","themeSubType","subType","hasClass","merge","getTheme","getDefaultOption","defaultEmphasis","label","fillDataTextStyle","mergeOption","newSeriesOption","cloneShallow","props","i","length","getData","dataType","getLinkedData","setData","getRawData","coordDimToDataDim","coordDim","dataDimToCoordDim","dataDim","getBaseAxis","coordSys","formatTooltip","dataIndex","multipleSeries","value","getRawValue","formattedValue","isArray","setEachItem","val","dimIdx","dimInfo","getDimensionInfo","otherDims","tooltip","dimType","valStr","vertially","tooltipName","name","result","push","reduce","idx","dimItem","tooltipDims","otherDimToDataDim","each","join","getName","color","getItemVisual","isObject","colorStops","colorEl","seriesName","isAnimationEnabled","node","animationEnabled","getShallow","count","getColorFromPalette","scope","call","getAxisTooltipData","getTooltipPosition","mixin","dataFormatMixin","_default","1001","arrySlice","Array","prototype","slice","Eventful","_$handlers","constructor","one","event","handler","context","_h","h","ctx","on","isSilent","off","newList","l","trigger","args","arguments","argLen","len","apply","splice","triggerWithContext","1002","clampCssByte","Math","round","clampCssAngle","clampCssFloat","f","parseCssInt","str","charAt","parseFloat","parseInt","parseCssFloat","cssHueToRgb","m1","m2","lerpNumber","a","b","p","setRgba","out","r","g","copyRgba","putToCache","colorStr","rgbaArr","lastRemovedArr","colorCache","put","parse","cached","replace","toLowerCase","kCSSColorTable","op","indexOf","ep","fname","substr","params","split","alpha","pop","hsla2rgba","iv","hsla","rgba","s","rgba2hsla","H","S","R","G","B","vMin","min","vMax","max","delta","L","deltaR","deltaG","deltaB","lift","level","colorArr","stringify","toHex","toString","fastLerp","normalizedValue","colors","leftIndex","floor","rightIndex","ceil","leftColor","rightColor","dv","lerp","fullOutput","modifyHSL","modifyAlpha","arrColor","LRU","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","fastMapToColor","mapToColor","1003","symbolPathSetColor","innerColor","symbolStyle","style","symbolShape","shape","symbolType","stroke","__isEmptyBrush","fill","dirty","createSymbol","x","y","w","keepAspect","isEmpty","symbolPath","graphic","makeImage","BoundingRect","makePath","SymbolClz","width","height","setColor","Triangle","extendShape","cx","cy","buildPath","path","moveTo","lineTo","closePath","Diamond","Pin","dy","angle","asin","dx","cos","tanX","sin","tanY","cpLen","cpLen2","arc","PI","bezierCurveTo","Arrow","symbolCtors","line","Line","rect","Rect","roundRect","square","circle","Circle","diamond","pin","arrow","triangle","symbolShapeMakers","x1","y1","x2","y2","size","symbolBuildProxies","Ctor","beforeBrush","textPosition","textAlign","textVerticalAlign","inBundle","proxySymbol","1004","completeDimensions","sysDims","opt","applyDim","resultItem","coordDimIndex","OTHER_DIMS","coordDimNameMap","genName","map","fromZero","dimsDef","encodeDef","createHashMap","dataDimNameMap","dimCount","value0","retrieveValue","sysDimItem","sysDimItemDimsDef","dimDefItem","isString","userDimName","dataDims","normalizeToArray","resultDimIdx","availDimIdx","sysDimIndex","sysDimItemOtherDims","clone","defaults","extra","extraPrefix","extraFromZero","isExtraCoord","guessOrdinal","o","_model","itemName","dimIndex","isFinite","1005","toolbox","brush","title","polygon","lineX","lineY","keep","clear","dataView","lang","dataZoom","zoom","back","magicType","bar","stack","tiled","restore","saveAsImage","1006","CoordinateSystemManager","_coordinateSystems","coordinateSystemCreators","create","api","coordinateSystems","creater","list","concat","update","getCoordinateSystems","register","coordinateSystemCreator","1007","curve","vec2","bbox","dpr","devicePixelRatio","CMD","M","C","Q","A","Z","min2","max2","mathMin","mathMax","mathCos","mathSin","mathSqrt","sqrt","mathAbs","abs","hasTypedArray","Float32Array","PathProxy","notSaveData","_saveData","_ctx","_xi","_yi","_x0","_y0","_ux","_uy","_len","_lineDash","_dashOffset","_dashIdx","_dashSum","setScale","sx","sy","getContext","beginPath","addData","exceedUnit","_needsDash","_dashedLineTo","x3","y3","_dashedBezierTo","quadraticCurveTo","_dashedQuadraticTo","startAngle","endAngle","anticlockwise","arcTo","radius","x0","y0","toStatic","setLineDash","lineDash","lineDashSum","setLineDashOffset","offset","appendPath","appendSize","appendPathData","k","cmd","_expandData","_prevCmd","newData","dash","dashSum","dist","nDash","t","cubicAt","bezierLen","tmpLen","getBoundingRect","Number","MAX_VALUE","xi","yi","fromLine","fromCubic","fromQuadratic","rx","ry","fromArc","rebuildPath","d","ux","uy","theta","dTheta","psi","fs","scaleX","scaleY","isEllipse","translate","rotate","scale","1008","throttle","fn","delay","debounce","exec","lastExec","Date","getTime","timer","currCall","diff","debounceNextCall","lastCall","cb","thisDelay","thisDebounce","clearTimeout","setTimeout","debounceDelay","createOrUpdate","obj","fnAttr","rate","throttleType","originFn","ORIGIN_METHOD","lastThrottleType","THROTTLE_TYPE","RATE","1009","Element","Group","opts","key","hasOwnProperty","_children","__storage","__dirty","isGroup","silent","children","childAt","childOfName","childCount","add","child","parent","_doAdd","addBefore","nextSibling","remove","storage","zr","__zr","addToStorage","addChildrenToStorage","refresh","delFromStorage","delChildrenFromStorage","removeAll","eachChild","traverse","includeChildren","tmpRect","tmpMat","ignore","invisible","childRect","transform","getLocalTransform","copy","applyTransform","union","inherits","1010","window","debugMode","1011","properties","model","excludes","includes","propName","1012","Chart","group","uid","componentUtil","getUID","elSetState","el","state","toggleHighlight","payload","queryDataIndex","dataIdx","getItemGraphicEl","eachItemGraphicEl","clazzUtil","render","seriesModel","highlight","downplay","dispose","chartProto","updateView","updateLayout","updateVisual","enableClassExtend","enableClassManagement","registerWhenExtend","1013","defaultKeyGetter","item","DataDiffer","oldArr","newArr","oldKeyGetter","newKeyGetter","_old","_new","_oldKeyGetter","_newKeyGetter","initIndexMap","arr","keyArr","keyGetterName","dataDiffer","existence","func","_add","_update","_remove","execute","oldDataIndexMap","newDataIndexMap","oldDataKeyArr","newDataKeyArr","unshift","j","1014","Scale","setting","_setting","_extent","Infinity","_interval","getSetting","contain","extent","normalize","unionExtent","other","unionExtentFromData","dim","getDataExtent","getExtent","setExtent","start","end","thisExtent","isNaN","getTicksLabels","labels","ticks","getTicks","getLabel","isBlank","_isBlank","setBlank","1015","collect","axesInfo","seriesInvolved","coordSysAxesInfo","coordSysMap","collectAxesInfo","collectSeriesInfo","globalTooltipModel","getComponent","globalAxisPointerModel","linksOption","linkGroups","saveTooltipAxisInfo","fromTooltip","triggerTooltip","axis","axisPointerModel","getModel","axisPointerShow","isHandleTrigger","makeAxisPointerModel","baseTooltipModel","snap","makeKey","involveSeries","axisInfo","useHandle","seriesModels","axesInfoInCoordSys","groupIndex","getLinkGroupIndex","linkGroup","mapper","axisPointerEnabled","coordSysKey","coordSysModel","getAxes","curry","getTooltipAxes","triggerAxis","cross","tooltipAxes","baseAxes","otherAxes","tooltipAxisPointerModel","volatileOption","field","labelOption","show","crossStyle","lineStyle","textStyle","Model","eachSeries","seriesTooltipTrigger","seriesTooltipShow","getAxis","seriesDataCount","axisModel","linkOption","checkPropInLink","id","linkPropValue","axisPropValue","fixValue","getAxisInfo","status","reverse","getAxisPointerModel","1016","firstDataNotNull","ifNeedCompleteOrdinalData","sampleItem","getDataItemValue","createListFromArray","coordSysName","creator","creators","registeredCoordSys","CoordinateSystem","completeDimOpt","dimensions","getDimensionsInfo","categoryIndex","List","nameList","createNameList","categories","dimValueGetter","itemOpt","dimName","isDataItemOption","hasItemOption","converDataValue","categoryAxesModels","getCategories","initData","isStackable","axisType","getDimTypeByAxis","categoryAxisModel","categoryDim","dataLen","cartesian2d","axesModels","queryComponents","mainType","index","xAxisModel","yAxisModel","xAxisType","yAxisType","stackable","isXAxisCateogry","isYAxisCategory","singleAxis","singleAxisModel","singleAxisType","isCategory","single","polar","polarModel","angleAxisModel","findAxisModel","radiusAxisModel","radiusAxisType","angleAxisType","isAngleAxisCateogry","isRadiusAxisCateogry","geo","1017","fixExtentWithBands","nTick","margin","numberUtil","axisHelper","linearMap","normalizedExtent","Axis","inverse","onBand","_labelInterval","coord","containData","dataToCoord","getPixelPrecision","dataExtent","clamp","coordToData","pointToData","point","getTicksCoords","alignWithLabel","bands","getBands","coords","getLabelsCoords","span","getBandWidth","axisExtent","isHorizontal","getRotate","getLabelInterval","labelInterval","labelModel","getAxisLabelInterval","getFormattedLabels","getFont","1018","Displayable","Style","_rect","__clipPaths","RectText","z","z2","zlevel","draggable","dragging","culling","cursor","rectHover","progressive","afterBrush","prevEl","rectContain","transformCoordToLocal","animateStyle","loop","animate","attrKV","setStyle","useStyle","1019","Gradient","addColorStop","1020","formatUtil","helper","roundNumber","IntervalScale","_intervalPrecision","getInterval","setInterval","interval","_niceExtent","getIntervalPrecision","intervalScaleGetTicks","precision","getPrecisionSafe","niceTicks","splitNumber","minInterval","maxInterval","intervalScaleNiceTicks","intervalPrecision","niceTickExtent","niceExtent","expandSize","fixMax","fixMin","1021","makeAxisEventDataBase","eventData","componentType","endTextLayout","textRotate","rotationDiff","remRadian","rotation","onLeft","isRadianAroundZero","tooltipOpt","fixMinMaxLabelShow","labelEls","tickEls","showMinLabel","showMaxLabel","firstLabel","nextLabel","lastLabel","prevLabel","firstTick","nextTick","lastTick","prevTick","ignoreEl","isTwoLabelOverlapped","current","next","labelLayout","firstRect","nextRect","mRotationBack","matrixUtil","identity","mul","intersect","isNameLocationCenter","nameLocation","buildAxisTick","axisBuilder","tickModel","lineStyleModel","tickLen","tickInterval","ticksCoords","pt1","pt2","matrix","_transform","ticksCnt","ifIgnoreOnTick","tickCoord","tickDirection","v2ApplyTransform","tickEl","subPixelOptimizeLine","anid","getLineStyle","buildAxisLabel","retrieve","axisLabelShow","labelMargin","labelRotation","labelRotate","innerTextLayout","labelDirection","categoryData","triggerEvent","tickVal","itemLabelModel","textColor","getTextColor","pos","labelOffset","labelStr","textEl","Text","position","setTextStyle","text","textFill","targetType","_dumbGroup","updateTransform","decomposeTransform","_util","_number","_symbol","_vector","AxisBuilder","nameDirection","dumbGroup","hasBuilder","builders","getGroup","axisLine","lineCap","strokeContainThreshold","arrows","arrowSize","symbolWidth","symbolHeight","symbol","attr","axisTickLabel","axisName","textStyleModel","gap","gapSignal","nameRotation","axisNameAvailableWidth","textFont","truncateOpt","ellipsis","maxWidth","nameTruncateMaxWidth","truncatedText","truncateText","minChar","placeholder","formatterParams","$vars","__fullText","__truncatedText","content","formatter","axisRotation","textRotation","direction","rawTick","1022","updateAxisPointer","axisView","forceRender","Clazz","AxisView","getAxisPointerClass","axisPointerClass","axisPointerModelHelper","_axisPointer","disposeAxisPointer","axisPointer","echarts","extendComponentView","superApply","force","axisPointerClazz","registerAxisPointerClass","clazz","1023","log","Error","console","1024","minRunLength","n","DEFAULT_MIN_MERGE","makeAscendingRun","array","lo","hi","compare","runHi","reverseRun","binaryInsertionSort","mid","pivot","left","right","gallopLeft","hint","lastOffset","maxOffset","tmp","m","gallopRight","TimSort","pushRun","_runStart","_runLength","runStart","stackSize","runLength","mergeRuns","mergeAt","forceMergeRuns","start1","length1","start2","length2","mergeLow","mergeHigh","cursor1","cursor2","dest","count1","count2","exit","_minGallop","minGallop","DEFAULT_MIN_GALLOPING","customCursor","customDest","sort","remaining","ts","minRun","1025","ZImage","imageHelper","src","image","bind","_image","createOrUpdateImage","onload","isImageReady","aspect","setTransform","sWidth","sHeight","drawImage","restoreTransform","drawRectText","1026","findExistImage","newImageOrSrc","cachedImgObj","globalImageCache","hostEl","cbPayload","__zrImageSrc","pendingWrap","pending","Image","imageOnLoad","__cachedImgObj","1027","base","random","DELIMITER","enableSubTypeDefaulter","entity","subTypeDefaulters","registerSubTypeDefaulter","defaulter","parseClassType","main","determineSubType","componentTypeMain","hasSubTypes","enableTopologicalTravel","dependencyGetter","makeDepndencyGraph","fullNameList","graph","noEntryList","thisItem","createDependencyGraphItem","originalDeps","availableDeps","getAvailableDependencies","entryCount","dependentName","predecessor","thatItem","successor","dep","topologicalTravel","targetNameList","callback","removeEdge","succComponentType","removeEdgeAndAdd","targetNameSet","currComponentType","currVertex","isInTargetNameSet","1028","getMin","origin","rangeStart","eqNaN","getMax","rangeEnd","getNeedCrossZero","getCoordSysModel","noop","setRange","resetRange","1029","retrieveRaw","ret","updateRangeUse","dataZoomModel","rawOption","rangePropMode","_rangePropMode","rangeModeInOption","names","percentSpecified","valueSpecified","AxisProxy","eachAxisDim","DataZoomModel","extendComponentModel","dependencies","orient","xAxisIndex","yAxisIndex","filterMode","startValue","endValue","minSpan","maxSpan","minValueSpan","maxValueSpan","rangeMode","_dataIntervalByAxis","_dataInfo","_axisProxies","_autoThrottle","doInit","newOption","thisOption","canvasSupported","realtime","_setDefaultThrottle","_resetTarget","_giveAxisProxies","axisProxies","eachTargetAxis","dimNames","axisIndex","dependentModels","axisProxy","__dzAxisProxy","autoMode","_judgeAutoMode","axisIndexName","_autoSetAxisIndex","_autoSetOrient","hasIndexSpecified","autoAxisIndex","singleAxisIndex","axisIndices","axisModels","_isSeriesHasAllAxesTypeOf","axisId","is","seriesAxisIndex","globalOption","animation","animationDurationUpdate","getFirstTargetAxisModel","firstAxisModel","indices","getAxisProxy","getAxisModel","setRawRange","ignoreUpdateRangeUsg","getPercentRange","findRepresentativeAxisProxy","getDataPercentWindow","getValueRange","axisDimName","getDataValueWindow","hostedBy","getRangePropMode","1030","isCoordSupported","coordType","COORDS","createNameEach","attrs","capitalNames","capitalFirst","capitalAttrs","nameObj","capital","createLinkedNodesFinder","forEachNode","forEachEdgeType","edgeIdGetter","isNodeAbsorded","nodes","isLinked","hasLink","edgeType","edgeId","records","absorb","sourceNode","processSingleNode","existsLink","AXIS_DIMS","1031","ComponentView","getTargetCoordInfo","save","coordModel","store","coordIndex","coordSysLists","1032","dom","ZRender","guid","instances","getInstance","registerPainter","painterCtors","delInstance","Handler","Storage","Painter","Animation","HandlerProxy","useVML","canvas","self","rendererType","renderer","vml","painter","handerProxy","getViewportRoot","root","stage","flush","_needsRefresh","oldDelFromStorage","oldAddToStorage","removeSelfFromZr","addSelfToZr","getId","addRoot","delRoot","configLayer","zLevel","config","refreshImmediately","_needsRefreshHover","refreshHoverImmediately","addHover","refreshHover","removeHover","clearHover","resize","clearAnimation","getWidth","getHeight","pathToImage","e","setCursorStyle","cursorStyle","findHover","eventName","eventHandler","stop","version","1033","normalizeTextStyle","normalizeStyle","rich","font","textContain","makeFont","VALID_TEXT_ALIGN","textBaseline","VALID_TEXT_VERTICAL_ALIGN","textPadding","normalizeCssArray","renderText","renderRichText","renderPlainText","setCtx","DEFAULT_FONT","contentBlock","__textCotentBlock","parsePlainText","truncate","outerHeight","textLines","lines","lineHeight","boxPos","getBoxPosition","baseX","baseY","applyTextRotation","boxY","adjustTextY","textX","textY","needDrawBg","needDrawBackground","textWidth","outerWidth","boxX","adjustTextX","drawBackground","getTextXForPadding","textShadowBlur","textShadowColor","textShadowOffsetX","textShadowOffsetY","textStrokeWidth","textStroke","getStroke","getFill","strokeText","fillText","parseRichText","drawRichText","contentWidth","xLeft","lineTop","xRight","token","tokens","tokenCount","usedWidth","lineXLeft","lineXRight","placeToken","textOrigin","tokenStyle","styleName","isLineHolder","textHeight","retrieve3","retrieve2","textBackgroundColor","textBorderWidth","textBorderColor","isPlainBg","textBoxShadowBlur","textBoxShadowColor","textBoxShadowOffsetX","textBoxShadowOffsetY","textBorderRadius","roundRectHelper","onBgImageLoaded","blockHeiht","parsePercent","res","adjustTextPositionOnRect","textDistance","textOffset","prop","lineWidth","maxValue","lastIndexOf","needDrawText","center","top","bottom","middle","1034","axisTrigger","registerPreprocessor","link","registerProcessor","PRIORITY","PROCESSOR","STATISTIC","registerAction","1035","buildElStyle","axisPointerType","styleModel","getAreaStyle","buildLabelElOption","elOption","labelPos","getValueLabel","paddings","textRect","align","verticalAlign","confineInContainer","bgColor","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","viewWidth","viewHeight","seriesDataIndices","getAxisRawValue","seriesData","idxItem","series","getSeriesByIndex","dataIndexInside","dataParams","getDataParams","isFunction","getTransformedPosition","layoutInfo","buildCartesianSingleLabelElOption","textLayout","makeLineShape","p1","p2","xDimIndex","makeRectShape","xy","wh","makeSectorShape","r0","clockwise","1036","isNotAroundZero","EPSILON","vector","mIdentity","Transformable","transformableProto","needLocalTransform","parentHasTransform","invTransform","invert","tmpTransform","atan2","getGlobalScale","v2","transformCoordToGlobal","target","1037","fromPoints","points","cubicExtrema","xDim","yDim","quadraticExtremum","quadraticAt","tx","ty","vec2Min","vec2Max","PI2","extremity","1038","textHelper","1039","Component","componentModel","componentProto","1040","handleEnds","handleIndex","restrict","extentSpan","originalDistSign","getSpanSign","extentMinSpan","realExtent","sign","currDistSign","1041","seriesType","defaultSymbolType","legendSymbol","eachRawSeriesByType","symbolSize","setVisual","isSeriesFiltered","rawValue","setItemVisual","itemModel","getItemModel","itemSymbolType","itemSymbolSize","1042","idStart","1043","Animatable","clipPath","drift","beforeUpdate","afterUpdate","hide","setClipPath","removeClipPath","__clipTarget","animators","addAnimator","removeAnimator","1044","defaultGetter","defaultSetter","interpolateNumber","p0","percent","interpolateString","interpolateArray","arrDim","len2","fillArr","arr0","arr1","arr0Len","arr1Len","arraySlice","isArraySame","catmullRomInterpolateArray","p3","t2","t3","catmullRomInterpolate","v0","v1","cloneValue","isArrayLike","rgba2String","getArrayDim","keyframes","lastValue","createTrackClip","animator","easing","oneTrackDone","forceAnimate","getter","_getter","setter","_setter","useSpline","trackLen","trackMaxTime","firstVal","isValueArray","isValueColor","isValueString","time","kfPercents","kfValues","prevValue","isAllValueEqual","colorArray","_target","lastFrame","lastFramePercent","onframe","frame","range","clip","Clip","life","_loop","_delay","ondestroy","Animator","_tracks","_clipCount","_doneList","_onframeList","_clipList","when","tracks","during","pause","_paused","resume","isPaused","_doneCallback","doneList","lastClip","clipCount","addClip","oldOnFrame","forwardToLast","clipList","removeClip","done","getClips","1045","LinkedList","head","tail","linkedListProto","insert","entry","Entry","insertEntry","prev","maxSize","_list","_map","_maxSize","_lastRemovedEntry","LRUProto","removed","leastUsedEntry","1046","createLinearGradient","global","createRadialGradient","STYLE_COMMON_PROPS","host","extendFrom","opacity","lineDashOffset","strokeNoScale","fontStyle","fontWeight","fontSize","fontFamily","textTag","textLineHeight","transformText","blend","prevStyle","firstDraw","fillStyle","strokeStyle","globalAlpha","globalCompositeOperation","hasStroke","getLineScale","hasFill","otherStyle","overwrite","newStyle","getGradient","method","canvasGradient","styleProto","1047","Pattern","repeat","getCanvasPattern","createPattern","1048","requestAnimationFrame","msRequestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","1049","r1","r2","r3","r4","total","1050","normalizeRadian","1051","windingLine","dir","1052","smooth","controlPoints","smoothBezier","smoothConstraint","cp1","cp2","smoothSpline","1053","clearColorPalette","colorIdx","colorNameMap","colorPalette","1054","nice","fixExtent","tick","1055","finder","dataToPoint","getValues","1056","getZr","initGlobalListeners","useHandler","eventType","dis","makeDispatchAction","record","dispatchAction","dispatchTooltipFinally","pendings","initialized","doEnter","onLeave","actuallyPayload","showLen","showTip","hideLen","hideTip","currTrigger","pendingList","unregister","makeGetter","1057","layout","boxLayoutParams","getBoxLayoutParams","padding","viewportSize","getLayoutRect","layoutBox","positionElement","makeBackground","getItemStyle","box","1058","newSnapshot","giveStore","batchItem","dataZoomId","percentRange","snapshot","ATTR","1059","gridModel","getRect","xAxis","yAxis","grid","1060","orignalBrush","browser","ie","modified","clipPaths","shadowTemp","1061","getCartesian","getAxisDimIndex","BaseAxisPointer","viewHelper","cartesianAxisHelper","CartesianAxisPointer","makeElOption","otherExtent","getOtherAxis","getGlobalExtent","pixelValue","toGlobalCoord","elStyle","pointerOption","pointerShapeBuilder","graphicKey","pointer","getHandleTransform","labelInside","updateHandleTransform","currPosition","cursorOtherValue","cursorPoint","tooltipOptions","tooltipOption","targetShape","shadow","bandWidth","1062","updateProps","animationModel","moveAnimation","propsEqual","lastProp","stopAnimation","lastProps","newProps","equals","updateLabelShowHide","labelEl","getHandleTransProps","trans","updateMandatoryProps","eventTool","throttleUtil","_group","_lastGraphicKey","_handle","_dragging","_lastValue","_lastStatus","_payloadInfo","animationThreshold","_axisModel","_axisPointerModel","_api","handle","_moveAnimation","determineAnimation","doUpdateProps","updatePointerEl","updateLabelEl","createPointerEl","createLabelEl","_renderHandle","isCategoryAxis","useSnap","pointerEl","handleModel","isInit","createIcon","onmousemove","onmousedown","_onHandleDragMove","ondragend","_onHandleDragEnd","includeStyles","handleSize","_moveHandleToValue","_doDispatchAxisPointer","payloadInfo","axisDim","doClear","buildLabel","1063","rawAxisPosition","axisPosition","onZero","rectBound","axisOffset","posBound","otherAxis","onZeroAxisIndex","onZeroCoord","dirMap","1064","LegendModel","ignoreSize","selected","superCall","optionUpdated","_updateData","legendData","_data","hasSelected","isSelected","select","dataItem","availableNames","getSeries","mapArray","_availableNames","unSelect","toggleSelected","backgroundColor","borderColor","borderRadius","borderWidth","itemGap","itemWidth","itemHeight","inactiveColor","selectedMode","1065","dispatchSelectAction","dispatchHighlightAction","dataName","getDisplayList","useHoverLayer","dispatchDownplayAction","_listComponent","layoutUtil","newlineDisabled","_contentGroup","_backgroundEl","getContentGroup","legendModel","resetInner","itemAlign","renderInner","positionInfo","mainRect","layoutInner","layoutRect","contentGroup","legendDrawnMap","selectMode","newline","getSeriesByName","getVisual","legendSymbolType","itemGroup","_createItem","eachRawSeries","indexOfName","itemIcon","tooltipModel","legendGlobalTooltipModel","hitRect","legendIndex","setHoverStyle","__legendDataIndex","contentRect","1066","BrushController","_zr","_brushType","_brushOption","_panels","_track","_covers","_creatingCover","_creatingPanel","_enableGlobalPan","_uid","baseUID","_handlers","mouseHandlers","doEnableBrush","controller","brushOption","interactionMutex","take","MUTEX_RESOURCE_KEY","brushType","DEFAULT_BRUSH_OPT","doDisableBrush","release","createCover","cover","coverRenderers","__brushOption","updateZ","endCreating","creatingCover","coverRenderer","getCoverRenderer","updateCoverShape","COVER_Z","updateCoverAfterCreation","updateCommon","getPanelByPoint","localCursorPoint","panels","panel","pn","isTargetByCursor","getPanelByCover","panelId","clearCovers","covers","originalLength","areas","isEnd","removeOnClick","shouldShowCover","track","mathPow","UNSELECT_THRESHOLD","getTrackEnds","createBaseRectCover","doDrift","edgeNames","makeStyle","updateBaseRect","localRange","brushStyle","MIN_RESIZE_LINE_WIDTH","xa","ya","x2a","y2a","widtha","heighta","updateRectShape","transformable","mainEl","globalDir","getGlobalDirection","CURSOR_MAP","setShape","pointsToRect","clipByPanel","formatRectRange","getTransform","localDirection","inverseMap","transformDirection","driftRect","toRectRange","fromRectRange","rectRange","localDelta","toLocalDelta","namePart","ind","DIRECTION_MAP","driftPolygon","thisGroup","localD","localZero","xmin","ymin","resetCursor","currPanel","preventDefault","rawE","mainShapeContain","updateCoverByMouse","eventParams","thisBrushOption","brushMode","determineBrushType","getCreatingRange","defaultBrushType","handleDragEnd","offsetX","offsetY","getLineRenderer","xyIndex","localTrack","ends","getLinearBrushOtherExtent","pow","ne","sw","nw","se","enableBrush","setPanels","panelOpts","mount","enableGlobalPan","eachCover","updateCovers","brushOptionList","getKey","tmpIdPrefix","oldGetKey","addOrUpdate","newIndex","oldIndex","newBrushOption","oldCovers","newCovers","unmount","mousedown","mousemove","mouseup","Polyline","Polygon","1067","onIrrelevantElement","targetCoordSysModel","getComponentByElement","topTarget","IRRELEVANT_EXCLUDES","1068","SymbolDraw","symbolCtor","_symbolCtor","symbolNeedsDraw","isIgnore","getItemLayout","symbolDrawProto","updateData","hostModel","oldData","SymbolCtor","seriesScope","itemStyle","hoverItemStyle","symbolRotate","symbolOffset","hoverAnimation","hoverLabelModel","newIdx","symbolEl","setItemGraphicEl","oldIdx","fadeOut","enableAnimation","1069","getSymbolSize","getScale","driftSymbol","_labelHelper","findLabelValueDim","symbolProto","_createSymbol","_symbolType","stopSymbolAnimation","toLastFrame","getSymbolPath","setZ","setDraggable","_updateCommon","fadeIn","initProps","_seriesModel","normalStyleAccessPath","emphasisStyleAccessPath","normalLabelAccessPath","emphasisLabelAccessPath","symbolInnerColor","useNameLabel","valueDim","setLabelStyle","labelFetcher","labelDataIndex","defaultText","isRectText","autoColor","hoverStyle","onEmphasis","ratio","animateTo","onNormal","keepLabel","1071","1072","containStroke","_l","_a","_b","1073","quadraticProjectPoint","_curve","1074","LinearGradient","globalCoord","1075","zrender","colorTool","number","format","_throttle","ecHelper","_List","_Model","_Axis","_env","_parseGeoJson","parseGeoJson","ecUtil","util","1076","decode","json","UTF8Encoding","encodeScale","UTF8Scale","features","feature","geometry","coordinates","encodeOffsets","c","coordinate","decodePolygon","c2","prevX","prevY","charCodeAt","geoJson","filter","featureObj","geometries","exterior","interiors","region","Region","cp","1077","polygonContain","MAX_NUMBER","loopGeo","transformTo","calculateTransform","1078","isAroundEqual","1079","1080","legendFilter","1082","1083","resourceKey","userKey","getStore","isTaken","1084","BrushTargetManager","targetInfoList","_targetInfoList","info","foundCpts","parseFinder","targetInfoBuilders","builder","include","formatMinMax","minMax","includeMainTypes","INCLUDE_FINDER_MAIN_TYPES","axisConvert","axisNameIndex","to","rangeOrCoordRange","values","toLocalCoord","xyMinMax","NaN","axisDiffProcessor","refer","scales","getScales","xyMinMaxCurr","xyMinMaxOrigin","sizeCurr","getSize","sizeOrigin","brushHelper","COORD_CONVERTS","proto","setOutputRanges","matchOutputRanges","area","coordRange","coordRanges","coordConvert","__rangeOffset","diffProcessor","targetInfo","findTargetInfo","coordSyses","setInputRanges","rangeOffset","makePanelOpts","getDefaultBrushType","getPanelRect","makeRectPanelClipPath","makeRectIsTargetByCursor","makeLinearBrushOtherExtent","controlSeries","areaPanelId","targetInfoMatchers","xAxisModels","yAxisModels","gridModels","gridModelMap","xAxesHas","yAxesHas","cartesians","getCartesians","cartesian","panelRectBuilder","xAxisDeclared","yAxisDeclared","geoModels","geoModel","xminymin","xmaxymax","1085","normalizeRect","localPoints","graphicUtil","clipPointsByRect","specifiedXYIndex","brushWidth","targetModel","_cursorHelper","1086","1087","resetSingleAxis","reset","filterSingleAxis","filterData","eachComponent","valueRange","1088","linkedNodesFinder","effectedModels","query","1089","BaseAxisModelClass","axisTypeDefaulter","extraDefaultOption","AXIS_TYPES","themeModel","mergeAll","axisDefault","1090","makeEventPacket","eveType","cancelBubble","zrX","zrY","gestureEvent","pinchX","pinchY","pinchScale","wheelDelta","zrDelta","zrByTouch","which","EmptyProxy","isHover","displayable","SILENT","Draggable","handlerNames","proxy","painterRoot","_hovered","_lastTouchMoment","_lastX","_lastY","lastHovered","lastHoveredTarget","hovered","hoveredTarget","setCursor","dispatchToElement","mouseout","innerDom","element","toElement","relatedTarget","parentNode","nodeType","dispatch","eventArgs","eventPacket","eachOtherLayer","layer","exclude","hoverCheckResult","_downEl","_downPoint","_upEl","1091","_dragStart","_drag","_dragEnd","param","draggingTarget","_draggingTarget","_x","_y","dropTarget","lastDropTarget","_dropTarget","1092","shapeCompareFunc","timsort","_roots","_displayList","_displayListLen","includeIgnore","updateDisplayList","roots","displayList","_updateAndAddDisplayable","userSetClipPath","currentClipPath","parentClipPath","_renderList","displayableSortFunc","1093","animatingShape","pathSplitted","_animateToShallow","source","objShallow","propertyCount","1094","options","_life","_initialized","onrestart","_pausedTime","easingFuncs","step","globalTime","deltaTime","_startTime","easingFunc","schedule","fire","restart","_needsRemove","remainder","arg","1095","linear","quadraticIn","quadraticOut","quadraticInOut","cubicIn","cubicOut","cubicInOut","quarticIn","quarticOut","quarticInOut","quinticIn","quinticOut","quinticInOut","sinusoidalIn","sinusoidalOut","sinusoidalInOut","exponentialIn","exponentialOut","exponentialInOut","circularIn","circularOut","circularInOut","elasticIn","elasticOut","elasticInOut","backIn","backOut","backInOut","bounceIn","bounceOut","bounceInOut","1096","parseInt10","isLayerValid","__builtin__","preProcessLayer","__unusedCount","postProcessLayer","isDisplayableCulled","viewRect","isClipPathChanged","prevClipPaths","doClip","createRoot","domRoot","document","createElement","cssText","Layer","singleCanvas","nodeName","toUpperCase","_opts","_singleCanvas","rootStyle","innerHTML","zlevelList","_zlevelList","layers","_layers","_layerConfig","_width","_height","mainLayer","initContext","_domRoot","_getSize","appendChild","_progressiveLayers","_hoverlayer","_hoverElements","getType","isSingleCanvas","getViewportRootOffset","viewportRoot","offsetLeft","offsetTop","paintAll","_paintList","_startProgessive","__hoverMir","elMirror","__from","hoverElements","from","hoverLayer","getLayer","originalEl","_doPaintEl","_progressiveToken","_doPaintList","_furtherProgressive","_progress","_clearProgressive","_updateLayerStatus","eachBuiltinLayer","flushProgressiveLayer","currentLayer","currentZLevel","currentProgressiveLayer","layerProgress","progressiveLayerIdx","elZLevel","elFrame","__frame","MAX_PROGRESSIVE_LAYER_NUMBER","renderScope","__progress","__maxProgress","__nextIdxNotProg","forcePaint","prevClipLayer","prevElClipPaths","insertLayer","layersMap","prevLayer","virtual","prevDom","insertBefore","firstChild","eachLayer","getLayers","progressiveLayers","elCountsLastFrame","progressiveElCountsLastFrame","elCount","lastProgressiveKey","progressiveLayerCount","frameCount","elProgress","_clearLayer","layerConfig","delLayer","removeChild","display","clearLayer","getRenderedCanvas","findAndDrawOtherLayer","smaller","larger","intermediateLayer","renderToCanvas","imageLayer","pixelRatio","clearColor","whIdx","cwh","plt","prb","stl","defaultView","getComputedStyle","shadowBlurSize","leftMargin","rightMargin","topMargin","bottomMargin","clearRect","pathTransform","ImageShape","imgShape","1097","returnFalse","createDom","newDom","createCanvas","newDomStyle","setAttribute","domStyle","onselectstart","domBack","ctxBack","motionBlur","lastFrameAlpha","__currentValues","createBackBuffer","clearAll","haveMotionBLur","clearColorGradientOrPattern","__canvasGradient","fillRect","1098","_event","Dispatcher","_clips","_running","_time","_pauseStart","clips","deferredEvents","deferredClips","_startLoop","1099","eventNameFix","firefox","processGesture","gestureMgr","_gestureMgr","gestureInfo","recognize","setTouchTimer","instance","_touching","_touchTimer","isPointerFromTouch","pointerType","initDomHandler","makeMouseHandler","touchHandlerNames","domHandlers","pointerHandlerNames","mouseHandlerNames","HandlerDomProxy","mountHandlers","addEventListener","GestureMgr","pointerEventsSupported","touchEventsSupported","removeEventListener","normalizeEvent","pointerEventNames","pointerdown","pointerup","pointermove","pointerout","nm","touchstart","touchmove","touchend","click","handlerDomProxyProto","1100","pointPair","eventUtil","_doTrack","_recognize","touches","trackItem","touch","clientToLocal","recognizers","pinch","pinchEnd","pinchPre","pinchCenter","1101","mergeTheme","theme","themeItem","initBase","baseOption","OPTION_INNER_KEY","_componentsMap","_seriesIndices","_theme","globalDefault","getComponentsByTypes","componentsMap","types","newCptOption","existComponent","createSeriesIndices","filterBySubType","components","condition","cpt","colorPaletteMinin","GlobalModel","optionManager","_optionManager","setOption","optionPreprocessorFuncs","assert","resetOption","optionChanged","mountOption","timelineOption","getTimelineOption","mediaOptions","getMediaOption","mediaOption","visitComponent","newCptOptionList","mapResult","mappingToExists","makeIdAndName","keyInfo","exist","ComponentModelClass","getClass","newCptTypes","componentOption","getAllClassMainTypes","getOption","isIdInner","cpts","isIdArray","isNameArray","findComponents","queryCond","q","indexAttr","idAttr","nameAttr","component","queryResult","oneSeries","getSeriesByType","rawSeriesIndex","eachSeriesByType","getCurrentSeriesIndices","filterSeries","filteredSeries","componentTypes","1102","makeStyleMapper","getLineDash","lineType","dotSize","dashSize","1103","1104","PATH_COLOR","isEmphasis","getTextRect","1105","processArc","fa","psiDeg","xp","yp","lambda","cxp","cyp","vAngle","u","v","vRatio","createPathProxyFromString","cs","cc","RegExp","prevCmd","cpx","cpy","shift","ctlPtx","ctlPty","pathData","createPathOptions","pathProxy","transformPath","createFromString","Path","extendFromString","mergePath","pathEls","pathList","pathEl","createPathProxy","__dirtyPath","pathBundle","vMag","acos","1106","swapExtrema","extrema","windingCubic","nRoots","cubicRootAt","y0_","y1_","nExtrema","unit","windingQuadratic","quadraticRootAt","y_","x_","windingArc","containPath","isStroke","cubic","quadratic","1107","cubicProjectPoint","1108","1109","nPoint","mathAtan2","1110","1111","fixClipWithShadow","unitX","unitY","1112","1113","polyHelper","1114","interpolate","isLoop","distance","v2Distance","segs","w2","w3","1115","constraint","prevPoint","nextPoint","cps","v2Min","v2Max","v2Clone","v2Sub","v2Scale","d0","d1","sum","cp0","v2Add","sub","1116","1117","1118","pointAt","1119","someVectorAt","isTangent","cpx2","cpy2","cubicDerivativeAt","cpx1","cpy1","quadraticDerivativeAt","quadraticSubdivide","cubicSubdivide","tangentAt","1120","1121","paths","_updatePathDirty","dirtyPath","1122","RadialGradient","1123","getBorderLineDash","1124","1125","platform","navigator","match","blendMode","animationDuration","animationEasing","animationEasingUpdate","progressiveThreshold","hoverLayerThreshold","useUTC","1126","ExtensionAPI","chartInstance","echartsAPIList","1127","OptionManager","_timelineOptions","_mediaList","_mediaDefault","_currentMediaIndices","_optionBackup","_newBaseOption","parseRawOption","isNew","mediaDefault","timelineOptions","mediaList","timelineOpt","timeline","media","singleMedia","preProcess","applyMediaQuery","ecWidth","ecHeight","realMap","aspectratio","applicatable","matched","QUERY_REG","operator","realAttr","real","expect","indicesEquals","indices1","indices2","oldOption","newCptOpt","oldCptOpt","oldOptionBackup","newParsedOption","isRecreate","optionBackup","timelineModel","getCurrentIndex","1128","compatLayoutProperties","LAYOUT_PROPERTIES","isTheme","compatStyle","seriesOpt","clockWise","pointerColor","COMPATITABLE_SERIES","dataRange","visualMap","COMPATITABLE_COMPONENTS","componentName","1129","compatItemStyle","itemStyleOpt","POSSIBLE_STYLES","normalItemStyleOpt","normal","emphasisItemStyleOpt","emphasis","compatTextStyle","labelOptSingle","TEXT_STYLE_OPTIONS","compatLabelTextStyle","labelOpt","processSeries","upperLabel","edgeLabel","markPoint","markLine","markArea","mpData","mlData","toArr","toObj","axes","axisOpt","parallel","parallelOpt","parallelAxisDefault","calendar","calendarOpt","radar","radarOpt","geoOpt","regions","regionObj","1130","encodeColor","colorAccessPath","1131","maskColor","mask","Arc","labelRect","animateShape","1132","createList","createScale","axisModelCommonMixin","createScaleByModel","niceScaleExtent","mixinAxisModelCommonMethods","_completeDimensions","1133","scaleProto","OrdinalScale","rank","1134","scaleHelper","intervalScaleProto","mathCeil","mathFloor","bisect","TimeScale","stepLvl","_stepLvl","date","ONE_HOUR","getFullYear","getMonth","getDate","approxTickNum","approxInterval","scaleLevelsLen","scaleLevels","yearSpan","timezoneOffset","getTimezoneOffset","parseDate","methodName","ONE_SECOND","ONE_MINUTE","ONE_DAY","1135","fixRoundingError","originalVal","roundingErrorFix","mathLog","LogScale","$constructor","_originalScale","originalScale","originalExtent","powVal","__fixMin","__fixMax","quantity","err","1136","illegalPoint","findPointFromSeries","isIllegalPoint","inputAxesInfo","shouldHide","outputFinder","showValueMap","dataByCoordSys","updaters","showPointer","showTooltip","coordSysContainsPoint","containPoint","inputAxisInfo","findInputAxisInfo","processOnAxis","linkTriggers","tarAxisInfo","tarKey","srcAxisInfo","srcKey","srcValItem","makeMapperParam","updateModelActually","dispatchTooltipActually","dispatchHighDownActually","newValue","dontSnap","buildPayloadsBySeries","payloadBatch","snapToValue","minDist","minDiff","seriesNestestValue","dataIndices","nestestValue","indicesOfNearest","getRawIndex","modelHelper","coordSysItem","coordSysId","coordSysIndex","coordSysType","coordSysMainType","dataByAxis","valueLabelOpt","outputAxesInfo","valItem","escapeConnect","lastHighlights","newHighlights","toHighlight","toDownplay","batch","1137","AxisPointerModel","triggerOn","shadowStyle","icon","1138","globalListener","AxisPointerView","1139","showContent","alwaysShowContent","displayMode","confine","showDelay","hideDelay","transitionDuration","enterable","extraCssText","1140","buildTooltipModel","modelCascade","resultModel","refixTooltipPosition","gapH","gapV","getOuterSize","confineTooltipPosition","clientWidth","clientHeight","paddingLeft","paddingRight","borderLeftWidth","borderRightWidth","paddingTop","paddingBottom","borderTopWidth","borderBottomWidth","calcTooltipPosition","contentSize","domWidth","domHeight","rectWidth","rectHeight","isCenterAlign","TooltipContent","axisPointerViewHelper","proxyRect","tooltipContent","getDom","_tooltipContent","_tooltipModel","_ecModel","_lastDataByCoordSys","_alwaysShowContent","setEnterable","_initGlobalListener","_keepShow","_tryShow","_hide","_refreshUpdateTimeout","manuallyShowTip","_ticket","_manuallyAxisShowTip","pointInfo","manuallyHideTip","hideLater","_showAxisTooltip","_showSeriesItemTooltip","_showComponentItemTooltip","_showOrMove","_showTimout","singleDefaultHTML","singleParamsList","singleTooltipModel","itemCoordSys","axisValue","seriesDefaultHTML","valueLabel","axisValueLabel","firstLine","positionExpr","_updateContentNotChangedOnAxis","_updatePosition","_showTooltipContent","dataModel","tooltipTrigger","defaultHtml","asyncTicket","subTooltipModel","html","formatTpl","cbTicket","setContent","vAlign","viewSize","lastCoordSys","contentNotChanged","lastItemCoordSys","indexCoordSys","lastDataByAxis","thisItemCoordSys","thisDataByAxis","lastItem","indexAxis","lastIndices","newIndices","lastIdxItem","newIdxItem","1141","assembleTransition","duration","transitionText","vendors","vendorPrefix","assembleFont","assembleCssText","zrColor","borderName","camelCase","toCamelCase","container","_container","_show","_hideTimeout","onmouseenter","_enterable","_inContent","onmouseleave","_hideDelay","currentStyle","viewportRootOffset","isShow","1142","legendSelectActionHandler","selectedMap","isToggleSelect","isItemSelected","1143","legendModels","1146","featureManager","ToolboxModel","featureOpt","featureName","Feature","itemSize","showTitle","iconStyle","1147","isUserFeatureName","listComponentHelper","toolboxModel","processFeature","featureNames","oldName","featureOpts","featureModel","onclick","unusable","createIconPaths","setIconStatus","iconName","iconPaths","iconStatus","iconStyleModel","icons","getIcons","titles","iconStr","__title","_features","_featureNames","titleText","needPutOnTop","topOffset","1148","SaveAsImage","saveAsImageLang","excludeComponents","$a","download","url","getConnectedDataURL","href","MouseEvent","edge","msSaveOrOpenBlob","bstr","atob","u8arr","Uint8Array","blob","Blob","tab","open","write","evt","view","bubbles","cancelable","dispatchEvent","1149","MagicType","magicTypeLang","availableIcons","seriesOptGenreator","seriesId","radioTypes","generateNewSeriesTypes","newSeriesOpt","categoryAxis","getAxesByScale","boundaryGap","radio","currentType","1150","groupSeries","seriesGroupByCategoryAxis","otherSeries","meta","baseAxis","valueAxis","assembleSeriesWithCategoryAxis","tables","valueAxisDim","headers","columns","ITEM_SPLITER","items","BLOCK_SPLITER","assembleOtherSeries","vals","getContentFromModel","trim","isTSVFormat","block","parseTSVContents","tsv","tsvLines","itemSplitRegex","header","parseListContents","hasName","parseContents","blockMetaList","blocks","blockMeta","axisKey","DataView","_dom","tryMergeDataOption","originalData","newVal","original","dataViewLang","readOnly","optionToContent","contentToOption","textareaColor","textareaBorderColor","buttonColor","buttonTextColor","close","viewMain","textarea","htmlOrDom","isDom","buttonContainer","buttonStyle","closeButton","refreshButton","keyCode","selectionStart","selectionEnd","substring","newSeriesOptList","1151","DataZoom","_brushController","_onBrush","_isZoomActive","retrieveAxisSetting","updateBackBtnStatus","history","updateZoomBtnStatus","zoomActive","dataZoomSelectActive","brushTargetManager","sliderMove","dataZoomLang","DATA_ZOOM_ID_BASE","handlers","nextActive","_dispatchZoomAction","setBatch","findDataZoom","minMaxSpan","getMinMaxSpan","found","dzModel","addForAxis","dataZoomOpt","axisIndicesName","givenAxisIndices","forEachComponent","newOpt","$fromToolbox","dataZoomOpts","toolboxOpt","1152","1153","calculateDataExtent","seriesExtent","fixExtentByAxis","axisDataLen","setAxisModel","isRestore","percentWindow","_percentWindow","valueWindow","_valueWindow","useOrigin","toFixed","setMinMaxSpan","_minMaxSpan","_dataZoomModel","valueSpan","_dataExtent","asc","_dimName","_axisIndex","getTargetSeriesModels","getOtherAxisModel","otherAxisDim","coordSysIndexName","isCartesian","foundOtherAxisModel","otherAxisModel","calculateDataWindow","percentExtent","boundValue","boundPercent","dataWindow","isInWindow","filterSelf","leftOut","rightOut","hasValue","thisHasValue","thisLeftOut","thisRightOut","1154","1155","DataZoomView","1156","Restore","restoreLang","1157","dims","coordDims","setItemLayout","1158","isAxisUsedInTheGrid","rotateTextRect","rotateRadians","boundingBox","plain","beforeWidth","beforeHeight","afterWidth","afterHeight","getLabelUnionRect","axisLabelModel","labelCount","isLabelIgnored","unrotatedSingleRect","singleRect","Grid","_coordsMap","_coordsList","_axesMap","_axesList","_initCartesian","fixAxisOnZero","axesMap","canNotOnZeroToAxis","ifAxisCrossZero","updateAxisTransfrom","coordBase","axisExtentSum","findAxesModels","axesTypes","getReferringComponents","isCartesian2D","Cartesian2D","Axis2D","gridProto","_updateScale","ignoreContainLabel","adjustAxes","axesList","gridRect","labelUnionRect","axesMapOnDim","coordList","convertToPixel","_findConvertTarget","convertFromPixel","coordsList","createAxisCreator","axisPositionUsed","axesCount","addAxis","grids","1159","getAxisType","axisModelCreator","AxisModel","gridIndex","gridId","extraOption","1164","labelDims","1165","isPointNull","drawSegment","segLen","allLen","smoothMin","smoothMax","smoothMonotone","connectNulls","prevIdx","v2Copy","nextIdx","nextP","ratioNextSeg","prevP","lenPrevSeg","lenNextSeg","scaleAndAdd","getBoundingBox","ptMin","ptMax","pt","stackedOnPoints","stackedOnSmooth","stackedOnBBox","1166","nameRotate","nameTruncate","nameTextStyle","nameGap","axisTick","inside","axisLabel","splitLine","splitArea","areaStyle","timeAxis","logAxis","logBase","1176","visualSymbol","layoutPoints","dataSample","registerVisual","registerLayout","1177","legendHoverLink","clipOverflow","showSymbol","showAllSymbol","sampling","1178","isPointsSame","points1","points2","getSmooth","getAxisExtentWithGap","halfBandWidth","getStackedOnPoints","valueStart","baseDataOffset","stackedOnSameSign","stackedOn","stackedData","createGridClipShape","hasAnimation","xExtent","yExtent","createPolarClipShape","angleAxis","getAngleAxis","radiusAxis","getRadiusAxis","radiusExtent","angleExtent","RADIAN","Sector","createClipShape","turnPointsIntoStep","stepTurnAt","baseIndex","stepPoints","nextPt","stepPt","stepPt2","getVisualGradient","visualMetaList","visualMeta","dimension","stops","stopLen","outerColors","minCoord","maxCoord","coordSpan","gradient","lineAnimationDiff","_poly","ChartView","lineGroup","symbolDraw","_symbolDraw","_lineGroup","areaStyleModel","isCoordSysPolar","prevCoordSys","_coordSys","polyline","_polyline","_polygon","isAreaChart","isSymbolIgnore","_getSymbolIgnoreFunc","__temp","_step","_newPolygon","_stackedOnPoints","_points","_updateAnimation","_newPolyline","visualColor","lineJoin","stackedOnCurrent","stackedOnNext","__points","updatedDataInfo","diffStatus","idx1","ptIdx","1179","getStackedOnPoint","diffData","diffResult","oldStackedOnPoints","newStackedOnPoints","oldCoordSys","newCoordSys","currPoints","nextPoints","currStackedPoints","nextStackedPoints","sortedIndices","rawIndices","diffItem","pointAdded","currentPt","rawIndex","sortedCurrPoints","sortedNextPoints","sortedCurrStackedPoints","sortedNextStackedPoints","sortedStatus","1180","sampler","samplers","downSample","indexSampler","average","nearest","1181","Cartesian","axisX","axisY","1182","dimAxisMapper","_axes","_dimList","scaleType","_dataCoordConvert","input","dimList","output","1183","coordExtent","1184","containLabel","1185","1186","axisBuilderAttrs","selfBuilderAttrs","CartesianAxisView","oldAxisGroup","_axisGroup","groupTransition","_splitLine","splitLineModel","lineColors","lineInterval","lineCount","colorIndex","_splitArea","splitAreaModel","areaColors","areaInterval","1188","1189","1190","mergeAndNormalizeLayoutParams","raw","getOrient","ScrollableLegendModel","setScrollDataIndex","scrollDataIndex","pageButtonItemGap","pageButtonGap","pageButtonPosition","pageFormatter","pageIcons","horizontal","vertical","pageIconColor","pageIconInactiveColor","pageIconSize","pageTextStyle","1191","LegendView","WH","XY","ScrollableLegendView","_currentIndex","_containerGroup","_controllerGroup","_showController","__rectSize","createPageButton","iconIdx","pageDataIndexName","me","_pageGo","controllerGroup","pageTextStyleModel","containerGroup","orientIdx","hw","yx","controllerRect","showController","contentPos","containerPos","controllerPos","clipShape","pageInfo","_getPageInfo","pageIndex","contentPosition","_updatePageInfoView","legendId","canJump","pageText","pageCount","getItemRect","itemRect","pagePrevDataIndex","pageNextDataIndex","targetItemGroup","currDataIndex","containerRectSize","itemLoc","winRect","startIdx","startItem","startRect","1192","977","__webpack_exports__","_classCallCheck","Constructor","TypeError","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","Object","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","__WEBPACK_IMPORTED_MODULE_0_react__","__WEBPACK_IMPORTED_MODULE_0_react___default","__WEBPACK_IMPORTED_MODULE_1_echarts_lib_echarts__","__WEBPACK_IMPORTED_MODULE_1_echarts_lib_echarts___default","__WEBPACK_IMPORTED_MODULE_2_echarts_lib_component_tooltip__","__WEBPACK_IMPORTED_MODULE_3_echarts_lib_component_grid__","__WEBPACK_IMPORTED_MODULE_4_echarts_lib_chart_line__","__WEBPACK_IMPORTED_MODULE_5_echarts_lib_component_legendScroll__","__WEBPACK_IMPORTED_MODULE_6_echarts_lib_component_toolbox__","_createClass","defineProperties","descriptor","protoProps","staticProps","LineReact","_React$Component","_this","getPrototypeOf","initPie","_this$props$option","undefined","myChart","ID","onresize","_this2","_props","_props$width","_props$height","ref","978","$override","methods","typeStr","objToString","TYPED_ARRAY","BUILTIN_OBJECT","isPrimitive","targetProp","sourceProp","isBuiltInObject","targetAndSources","overlay","baseClazz","F","clazzPrototype","forEach","nativeForEach","nativeMap","memo","nativeReduce","nativeFilter","find","nativeSlice","ownerDocument","value1","value2","Function","message","setAsPrimitive","primitiveKey","HashMap","[object Function]","[object RegExp]","[object Date]","[object Error]","[object CanvasGradient]","[object CanvasPattern]","[object Image]","[object Canvas]","[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]","arrayProto","prefixedKey","removeKey","979","createRegisterEventWithLowercaseName","MessageCenter","ECharts","prioritySortFunc","prio","themeStorage","_throttledZrFlush","backwardCompat","_chartsViews","_chartsMap","_componentsViews","_coordSysMgr","createExtensionAPI","_messageCenter","_initEvents","_pendingActions","visualFuncs","dataProcessorFuncs","_onframe","doConvertPixel","coordSysList","updateDirectly","ecIns","callView","__alive","__model","__viewId","doDispatchAction","payloadType","actionWrap","actions","actionInfo","cptType","updateMethod","IN_MAIN_PROCESS","payloads","batched","eventObj","eventObjBatch","isHighDown","action","OPTION_UPDATED","updateMethods","prepareAndUpdate","flushPendingActions","pendingActions","triggerUpdatedEvent","invokeUpdateMethod","chart","updateProgressiveAndBlend","updateHoverLayerStatus","postUpdateFuncs","prepareView","isComponent","viewList","viewMap","viewId","classType","__id","__ecComponentInfo","processData","process","stackSeriesData","stackedDataMap","previousStack","doLayout","visual","isLayout","doVisualEncoding","excludesLayout","doRender","componentView","chartView","frameDrawNum","needProgressive","ecInstance","coordSysMgr","modelInfo","enableConnect","updateConnectedChartsStatus","charts","STATUS_KEY","eventActionMap","actionType","connectedGroups","makeActionFromEvent","otherCharts","otherChart","existInstance","getInstanceByDom","idBase","DOM_ATTRIBUTE_KEY","connect","groupId","groupIdBase","disConnect","isDisposed","getAttribute","getInstanceById","registerTheme","preprocessorFunc","priority","processorFunc","PRIORITY_PROCESSOR_FILTER","registerPostUpdate","postUpdateFunc","ACTION_REG","test","registerCoordinateSystem","getCoordinateSystemDimensions","coordSysCreator","layoutFunc","PRIORITY_VISUAL_LAYOUT","visualFunc","PRIORITY_VISUAL_CHART","registerLoading","loadingFx","loadingEffects","extendSeriesModel","extendChartView","setCanvasCreator","registerMap","mapName","specialAreas","JSON","mapDataStores","getMap","seriesColor","loadingDefault","FILTER","VISUAL","LAYOUT","GLOBAL","CHART","COMPONENT","BRUSH","echartsProto","notMerge","lazyUpdate","setTheme","getDevicePixelRatio","getSvgDataUrl","svgSupported","pathToSvg","getDataURL","excludesComponentViews","toDataURL","canvasList","boundingRect","getBoundingClientRect","targetCanvas","img","containPixel","models","visualType","defaultMainType","indexOfRawIndex","getViewOfComponentModel","getViewOfSeriesModel","background","clearAllVisual","_loadingFX","showLoading","cfg","hideLoading","weChat","MOUSE_EVENT_NAMES","eveName","_disposed","disconnect","dataTool","___ec_export","980","extendPath","pathTool","centerGraphic","resizePath","imageUrl","pathRect","subPixelOptimize","subPixelOptimizeRect","originX","originY","originWidth","originHeight","positiveOrNegative","doubledPosition","hasFillOrStroke","fillOrStroke","liftColor","cacheElementStl","__hoverStlDirty","__hoverStl","normalStyle","__normalStl","doSingleEnterHover","__isHover","insideRollbackOpt","rollbackInsideStyle","applyInsideStyle","insideOriginalTextPosition","doSingleLeaveHover","normalStl","doEnterHover","doLeaveHover","setElementHoverStl","hoverStl","onElementMouseOver","__hoverSilentOnTouch","__isEmphasis","onElementMouseOut","enterEmphasis","leaveEmphasis","hoverSilentOnTouch","emphasisStyle","normalModel","emphasisModel","normalSpecified","emphasisSpecified","EMPTY_OBJ","labelDimIndex","showNormal","showEmphasis","baseText","getFormattedLabel","normalStyleText","emphasisStyleText","specifiedTextStyle","setTextStyleCommon","setText","defaultColor","richResult","globalTextStyle","richItemNames","getRichItemNames","richTextStyle","setTokenTextStyle","forceRich","richItemNameMap","isBlock","getAutoColor","originalTextPosition","insideRollback","disableBox","useInsideStyle","gTextStyleModel","animateOrSetProps","isUpdate","animatableModel","postfix","animationDelay","getAnimationDelayParams","ancestor","mat","hBase","vBase","vertex","g1","g2","getAnimatableProps","elMap1","elMap","oldEl","newProp","clipRectByRect","targetRect","Ring","BezierCurve","CompoundPath","981","_trim","domain","subDomain","subRange","all","returnStr","getPrecision","eIndex","dotIndex","pixelExtent","LN10","dataQuantity","sizeQuantity","getPercentWithPrecision","valueList","acc","digits","votesPerQuota","targetSeats","seats","votes","currentSum","NEGATIVE_INFINITY","maxId","radian","pi2","RADIAN_EPSILON","TIME_REG","hour","UTC","quantityExponent","nf","exponent","exp10","reformIntervals","littleThan","lg","curr","currClose","isNumeric","MAX_SAFE_INTEGER","982","subOpts","emphasisOpt","normalOpt","subOptName","nubmerUtil","createDataFormatModel","exists","newCptOptions","cptOption","idMap","existCpt","idNum","compressBatches","batchA","batchB","makeMap","sourceBatch","otherMap","otherDataIndices","lenj","mapToArray","isData","mapA","mapB","has","parsedKey","queryType","queryParam","getDimension","otherDim","rawDataIndex","getRawDataItem","componentSubType","marker","labelProp","hostObj","983","dev","984","ArrayCtor","lenSquare","div","dot","distanceSquare","negate","lengthSquare","distSquare","985","upperCaseFirst","group1","String","tpl","paramsList","encode","seriesLen","alias","TPL_VAR_ALIAS","wrapVar","seriesIdx","formatTplSimple","isUTC","utc","s2d","varName","986","os","ua","SVGRect","userAgent","987","lt","rb","lb","rt","maxX","maxY","ax0","ax1","ay0","ay1","bx0","bx1","by0","by1","988","pathContain","pathProxyForDraw","hasFillGradient","hasStrokeGradient","hasFillPattern","hasStrokePattern","_fillGradient","_strokeGradient","ctxLineDash","shapeCfg","needsUpdateRect","rectWithStroke","_rectWithStroke","lineScale","localPos","Sub","defaultShape","thisShape","989","doGet","pathArr","getParent","getParentMethod","lineStyleMixin","areaStyleMixin","textStyleMixin","itemStyleMixin","ignoreParent","parsePath","thisParentModel","setReadOnly","customizeGetParent","990","boxLayout","maxHeight","currentLineMaxSize","nextX","nextY","nextChild","nextChildRect","moveX","moveY","getAvailableSize","containerRect","containerWidth","containerHeight","verticalMargin","horizontalMargin","hv","boundingMode","elPos","sizeCalculable","hvIdx","HV_NAMES","targetOption","newParams","newValueCount","merged","mergedValueCount","hasProp","hResult","vResult","copyLayoutParams","LOCATION_PARAMS","vbox","hbox","991","getDependencies","deps","getClassesByMainType","arrayPush","boxLayoutMixin","hasOwn","optList","Class","992","MEMBER_PRIFIX","TYPE_DELIMITER","checkClassType","RootClass","mandatoryMethods","ExtendedClass","makeContainer","IS_CONTAINER","registerClass","componentMainType","throwWhenNotFound","originalExtend","993","textWidthCache","measureText","textWidthCacheCounter","TEXT_CACHE_MAX","getRichTextRect","getPlainTextRect","halfHeight","prepareTruncateOptions","truncateSingleLine","maxIterations","cnCharWidth","ascCharWidth","ellipsisWidth","textLine","subLength","estimateLength","charCode","getLineHeight","truncOuterHeight","truncOuterWidth","lastIndex","STYLE_REG","matchedIndex","pushTokens","contentHeight","stlPadding","truncateWidth","truncateHeight","tokenHeight","tokenWidth","tokenWidthNotSpecified","percentWidth","bgImg","paddingW","remianTruncWidth","isEmptyStr","strs","tokensLen","994","out0","out1","out2","out3","out4","out5","rad","aa","ac","atx","ab","ad","aty","st","ct","vx","vy","det","995","transferProperties","TRANSFERABLE_PROPERTIES","__wrappedMethods","DefaultDataProvider","dataArray","_array","normalizeDimensions","cloneListForMapAndSample","excludeDimensions","allDimensions","_storage","originalStorage","dimStore","globalObj","dataCtors","float","Float64Array","int","Int32Array","ordinal","pure","getItem","dimensionInfos","dimensionNames","dimensionName","dimensionInfo","_dimensionInfos","_nameList","_idList","_optionModels","_visual","_itemVisuals","_itemLayouts","_graphicEls","_rawData","listProto","nameDimIdx","dimensionInfoMap","idList","nameRepeatCount","DataCtor","stackedValue","dimData","dimExtent","getSum","maxDistance","nearestIndices","rawIdx","dimSize","tmpRetValue","retValue","sampleValue","sampleIndex","targetStorage","originalIndices","frameValues","frameIndices","frameSize","otherList","otherIdList","setLayout","getLayout","clearItemLayouts","itemVisual","setItemDataAndSeriesIndex","dimensionInfoList","wrapMethod","injectFunction","originalMethod","TRANSFERABLE_METHODS","CHANGABLE_METHODS","996","getScaleExtent","tickCoords","axisRotate","textSpaceTakenRect","autoLabelInterval","accumulatedLabelInterval","labelFormatter","997","ctor","998","calculate","defaultGetZrXY","layerX","layerY","clientX","clientY","targetTouches","changedTouches","detail","button","MOUSE_EVENT_REG","isDomLevel2","attachEvent","detachEvent","notLeftMouse","stopPropagation","returnValue","999","isAroundZero","onet","t1","disc","K","discSqrt","Y1","Y2","ONE_THIRD","T","ASqrt","THREE_SQRT","p01","p12","p23","p012","p123","p0123","d2","_v0","_t","_v1","v2DistSquare","EPSILON_NUMERIC","_v2","divider","v2Create"],"mappings":"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","file":"static/js/LineReact.6e2c9c0b.chunk.js","sourcesContent":["webpackJsonp([1],{\n\n/***/ 1000:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(983);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(978);\n\nvar env = __webpack_require__(986);\n\nvar _format = __webpack_require__(985);\n\nvar formatTime = _format.formatTime;\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\nvar getTooltipMarker = _format.getTooltipMarker;\n\nvar _clazz = __webpack_require__(992);\n\nvar set = _clazz.set;\nvar get = _clazz.get;\n\nvar modelUtil = __webpack_require__(982);\n\nvar ComponentModel = __webpack_require__(991);\n\nvar colorPaletteMixin = __webpack_require__(1053);\n\nvar _layout = __webpack_require__(990);\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\nvar SeriesModel = ComponentModel.extend({\n  type: 'series.__base__',\n\n  /**\n   * @readOnly\n   */\n  seriesIndex: 0,\n  // coodinateSystem will be injected in the echarts/CoordinateSystem\n  coordinateSystem: null,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * Data provided for legend\n   * @type {Function}\n   */\n  // PENDING\n  legendDataProvider: null,\n\n  /**\n   * Access path of color for visual\n   */\n  visualColorAccessPath: 'itemStyle.normal.color',\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  init: function (option, parentModel, ecModel, extraOpt) {\n    /**\n     * @type {number}\n     * @readOnly\n     */\n    this.seriesIndex = this.componentIndex;\n    this.mergeDefaultAndTheme(option, ecModel);\n    var data = this.getInitialData(option, ecModel);\n\n    /**\n     * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n     * @private\n     */\n    set(this, 'dataBeforeProcessed', data); // If we reverse the order (make data firstly, and then make\n    // dataBeforeProcessed by cloneShallow), cloneShallow will\n    // cause data.graph.data !== data when using\n    // module:echarts/data/Graph or module:echarts/data/Tree.\n    // See module:echarts/data/helper/linkList\n\n    this.restoreData();\n  },\n\n  /**\n   * Util for merge default and theme to option\n   * @param  {Object} option\n   * @param  {module:echarts/model/Global} ecModel\n   */\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? getLayoutParams(option) : {}; // Backward compat: using subType on theme.\n    // But if name duplicate between series subType\n    // (for example: parallel) add component mainType,\n    // add suffix 'Series'.\n\n    var themeSubType = this.subType;\n\n    if (ComponentModel.hasClass(themeSubType)) {\n      themeSubType += 'Series';\n    }\n\n    zrUtil.merge(option, ecModel.getTheme().get(this.subType));\n    zrUtil.merge(option, this.getDefaultOption()); // Default label emphasis `show`\n\n    modelUtil.defaultEmphasis(option.label, ['show']);\n    this.fillDataTextStyle(option.data);\n\n    if (layoutMode) {\n      mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (newSeriesOption, ecModel) {\n    newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n    this.fillDataTextStyle(newSeriesOption.data);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n    }\n\n    var data = this.getInitialData(newSeriesOption, ecModel); // TODO Merge data?\n\n    if (data) {\n      set(this, 'data', data);\n      set(this, 'dataBeforeProcessed', data.cloneShallow());\n    }\n  },\n  fillDataTextStyle: function (data) {\n    // Default data label emphasis `show`\n    // FIXME Tree structure data ?\n    // FIXME Performance ?\n    if (data) {\n      var props = ['show'];\n\n      for (var i = 0; i < data.length; i++) {\n        if (data[i] && data[i].label) {\n          modelUtil.defaultEmphasis(data[i].label, props);\n        }\n      }\n    }\n  },\n\n  /**\n   * Init a data structure from data related option in series\n   * Must be overwritten\n   */\n  getInitialData: function () {},\n\n  /**\n   * @param {string} [dataType]\n   * @return {module:echarts/data/List}\n   */\n  getData: function (dataType) {\n    var data = get(this, 'data');\n    return dataType == null ? data : data.getLinkedData(dataType);\n  },\n\n  /**\n   * @param {module:echarts/data/List} data\n   */\n  setData: function (data) {\n    set(this, 'data', data);\n  },\n\n  /**\n   * Get data before processed\n   * @return {module:echarts/data/List}\n   */\n  getRawData: function () {\n    return get(this, 'dataBeforeProcessed');\n  },\n\n  /**\n   * Coord dimension to data dimension.\n   *\n   * By default the result is the same as dimensions of series data.\n   * But in some series data dimensions are different from coord dimensions (i.e.\n   * candlestick and boxplot). Override this method to handle those cases.\n   *\n   * Coord dimension to data dimension can be one-to-many\n   *\n   * @param {string} coordDim\n   * @return {Array.<string>} dimensions on the axis.\n   */\n  coordDimToDataDim: function (coordDim) {\n    return modelUtil.coordDimToDataDim(this.getData(), coordDim);\n  },\n\n  /**\n   * Convert data dimension to coord dimension.\n   *\n   * @param {string|number} dataDim\n   * @return {string}\n   */\n  dataDimToCoordDim: function (dataDim) {\n    return modelUtil.dataDimToCoordDim(this.getData(), dataDim);\n  },\n\n  /**\n   * Get base axis if has coordinate system and has axis.\n   * By default use coordSys.getBaseAxis();\n   * Can be overrided for some chart.\n   * @return {type} description\n   */\n  getBaseAxis: function () {\n    var coordSys = this.coordinateSystem;\n    return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n  },\n  // FIXME\n\n  /**\n   * Default tooltip formatter\n   *\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    function formatArrayValue(value) {\n      var vertially = zrUtil.reduce(value, function (vertially, val, idx) {\n        var dimItem = data.getDimensionInfo(idx);\n        return vertially |= dimItem && dimItem.tooltip !== false && dimItem.tooltipName != null;\n      }, 0);\n      var result = [];\n      var tooltipDims = modelUtil.otherDimToDataDim(data, 'tooltip');\n      tooltipDims.length ? zrUtil.each(tooltipDims, function (dimIdx) {\n        setEachItem(data.get(dimIdx, dataIndex), dimIdx);\n      }) // By default, all dims is used on tooltip.\n      : zrUtil.each(value, setEachItem);\n\n      function setEachItem(val, dimIdx) {\n        var dimInfo = data.getDimensionInfo(dimIdx); // If `dimInfo.tooltip` is not set, show tooltip.\n\n        if (!dimInfo || dimInfo.otherDims.tooltip === false) {\n          return;\n        }\n\n        var dimType = dimInfo.type;\n        var valStr = (vertially ? '- ' + (dimInfo.tooltipName || dimInfo.name) + ': ' : '') + (dimType === 'ordinal' ? val + '' : dimType === 'time' ? multipleSeries ? '' : formatTime('yyyy/MM/dd hh:mm:ss', val) : addCommas(val));\n        valStr && result.push(encodeHTML(valStr));\n      }\n\n      return (vertially ? '<br/>' : '') + result.join(vertially ? '<br/>' : ', ');\n    }\n\n    var data = get(this, 'data');\n    var value = this.getRawValue(dataIndex);\n    var formattedValue = zrUtil.isArray(value) ? formatArrayValue(value) : encodeHTML(addCommas(value));\n    var name = data.getName(dataIndex);\n    var color = data.getItemVisual(dataIndex, 'color');\n\n    if (zrUtil.isObject(color) && color.colorStops) {\n      color = (color.colorStops[0] || {}).color;\n    }\n\n    color = color || 'transparent';\n    var colorEl = getTooltipMarker(color);\n    var seriesName = this.name; // FIXME\n\n    if (seriesName === '\\0-') {\n      // Not show '-'\n      seriesName = '';\n    }\n\n    seriesName = seriesName ? encodeHTML(seriesName) + (!multipleSeries ? '<br/>' : ': ') : '';\n    return !multipleSeries ? seriesName + colorEl + (name ? encodeHTML(name) + ': ' + formattedValue : formattedValue) : colorEl + seriesName + formattedValue;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isAnimationEnabled: function () {\n    if (env.node) {\n      return false;\n    }\n\n    var animationEnabled = this.getShallow('animation');\n\n    if (animationEnabled) {\n      if (this.getData().count() > this.getShallow('animationThreshold')) {\n        animationEnabled = false;\n      }\n    }\n\n    return animationEnabled;\n  },\n  restoreData: function () {\n    set(this, 'data', get(this, 'dataBeforeProcessed').cloneShallow());\n  },\n  getColorFromPalette: function (name, scope) {\n    var ecModel = this.ecModel; // PENDING\n\n    var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n\n    if (!color) {\n      color = ecModel.getColorFromPalette(name, scope);\n    }\n\n    return color;\n  },\n\n  /**\n   * Get data indices for show tooltip content. See tooltip.\n   * @abstract\n   * @param {Array.<string>|string} dim\n   * @param {Array.<number>} value\n   * @param {module:echarts/coord/single/SingleAxis} baseAxis\n   * @return {Object} {dataIndices, nestestValue}.\n   */\n  getAxisTooltipData: null,\n\n  /**\n   * See tooltip.\n   * @abstract\n   * @param {number} dataIndex\n   * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n   */\n  getTooltipPosition: null\n});\nzrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\nzrUtil.mixin(SeriesModel, colorPaletteMixin);\nvar _default = SeriesModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1001:\n/***/ (function(module, exports) {\n\n/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\nvar arrySlice = Array.prototype.slice;\n/**\n * 事件分发器\n * @alias module:zrender/mixin/Eventful\n * @constructor\n */\n\nvar Eventful = function () {\n  this._$handlers = {};\n};\n\nEventful.prototype = {\n  constructor: Eventful,\n\n  /**\n   * 单次触发绑定，trigger后销毁\n   *\n   * @param {string} event 事件名\n   * @param {Function} handler 响应函数\n   * @param {Object} context\n   */\n  one: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: true,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 绑定事件\n   * @param {string} event 事件名\n   * @param {Function} handler 事件处理函数\n   * @param {Object} [context]\n   */\n  on: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: false,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 是否绑定了事件\n   * @param  {string}  event\n   * @return {boolean}\n   */\n  isSilent: function (event) {\n    var _h = this._$handlers;\n    return _h[event] && _h[event].length;\n  },\n\n  /**\n   * 解绑事件\n   * @param {string} event 事件名\n   * @param {Function} [handler] 事件处理函数\n   */\n  off: function (event, handler) {\n    var _h = this._$handlers;\n\n    if (!event) {\n      this._$handlers = {};\n      return this;\n    }\n\n    if (handler) {\n      if (_h[event]) {\n        var newList = [];\n\n        for (var i = 0, l = _h[event].length; i < l; i++) {\n          if (_h[event][i]['h'] != handler) {\n            newList.push(_h[event][i]);\n          }\n        }\n\n        _h[event] = newList;\n      }\n\n      if (_h[event] && _h[event].length === 0) {\n        delete _h[event];\n      }\n    } else {\n      delete _h[event];\n    }\n\n    return this;\n  },\n\n  /**\n   * 事件分发\n   *\n   * @param {string} type 事件类型\n   */\n  trigger: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 3) {\n        args = arrySlice.call(args, 1);\n      }\n\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(_h[i]['ctx']);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(_h[i]['ctx'], args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * 带有context的事件分发, 最后一个参数是事件回调的context\n   * @param {string} type 事件类型\n   */\n  triggerWithContext: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 4) {\n        args = arrySlice.call(args, 1, args.length - 1);\n      }\n\n      var ctx = args[args.length - 1];\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(ctx);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(ctx, args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(ctx, args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(ctx, args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  }\n}; // 对象可以通过 onxxxx 绑定事件\n\n/**\n * @event module:zrender/mixin/Eventful#onclick\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseout\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousemove\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousewheel\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousedown\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseup\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrag\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragstart\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragend\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragenter\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragleave\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrop\n * @type {Function}\n * @default null\n */\n\nvar _default = Eventful;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1002:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar LRU = __webpack_require__(1045);\n\nvar kCSSColorTable = {\n  'transparent': [0, 0, 0, 0],\n  'aliceblue': [240, 248, 255, 1],\n  'antiquewhite': [250, 235, 215, 1],\n  'aqua': [0, 255, 255, 1],\n  'aquamarine': [127, 255, 212, 1],\n  'azure': [240, 255, 255, 1],\n  'beige': [245, 245, 220, 1],\n  'bisque': [255, 228, 196, 1],\n  'black': [0, 0, 0, 1],\n  'blanchedalmond': [255, 235, 205, 1],\n  'blue': [0, 0, 255, 1],\n  'blueviolet': [138, 43, 226, 1],\n  'brown': [165, 42, 42, 1],\n  'burlywood': [222, 184, 135, 1],\n  'cadetblue': [95, 158, 160, 1],\n  'chartreuse': [127, 255, 0, 1],\n  'chocolate': [210, 105, 30, 1],\n  'coral': [255, 127, 80, 1],\n  'cornflowerblue': [100, 149, 237, 1],\n  'cornsilk': [255, 248, 220, 1],\n  'crimson': [220, 20, 60, 1],\n  'cyan': [0, 255, 255, 1],\n  'darkblue': [0, 0, 139, 1],\n  'darkcyan': [0, 139, 139, 1],\n  'darkgoldenrod': [184, 134, 11, 1],\n  'darkgray': [169, 169, 169, 1],\n  'darkgreen': [0, 100, 0, 1],\n  'darkgrey': [169, 169, 169, 1],\n  'darkkhaki': [189, 183, 107, 1],\n  'darkmagenta': [139, 0, 139, 1],\n  'darkolivegreen': [85, 107, 47, 1],\n  'darkorange': [255, 140, 0, 1],\n  'darkorchid': [153, 50, 204, 1],\n  'darkred': [139, 0, 0, 1],\n  'darksalmon': [233, 150, 122, 1],\n  'darkseagreen': [143, 188, 143, 1],\n  'darkslateblue': [72, 61, 139, 1],\n  'darkslategray': [47, 79, 79, 1],\n  'darkslategrey': [47, 79, 79, 1],\n  'darkturquoise': [0, 206, 209, 1],\n  'darkviolet': [148, 0, 211, 1],\n  'deeppink': [255, 20, 147, 1],\n  'deepskyblue': [0, 191, 255, 1],\n  'dimgray': [105, 105, 105, 1],\n  'dimgrey': [105, 105, 105, 1],\n  'dodgerblue': [30, 144, 255, 1],\n  'firebrick': [178, 34, 34, 1],\n  'floralwhite': [255, 250, 240, 1],\n  'forestgreen': [34, 139, 34, 1],\n  'fuchsia': [255, 0, 255, 1],\n  'gainsboro': [220, 220, 220, 1],\n  'ghostwhite': [248, 248, 255, 1],\n  'gold': [255, 215, 0, 1],\n  'goldenrod': [218, 165, 32, 1],\n  'gray': [128, 128, 128, 1],\n  'green': [0, 128, 0, 1],\n  'greenyellow': [173, 255, 47, 1],\n  'grey': [128, 128, 128, 1],\n  'honeydew': [240, 255, 240, 1],\n  'hotpink': [255, 105, 180, 1],\n  'indianred': [205, 92, 92, 1],\n  'indigo': [75, 0, 130, 1],\n  'ivory': [255, 255, 240, 1],\n  'khaki': [240, 230, 140, 1],\n  'lavender': [230, 230, 250, 1],\n  'lavenderblush': [255, 240, 245, 1],\n  'lawngreen': [124, 252, 0, 1],\n  'lemonchiffon': [255, 250, 205, 1],\n  'lightblue': [173, 216, 230, 1],\n  'lightcoral': [240, 128, 128, 1],\n  'lightcyan': [224, 255, 255, 1],\n  'lightgoldenrodyellow': [250, 250, 210, 1],\n  'lightgray': [211, 211, 211, 1],\n  'lightgreen': [144, 238, 144, 1],\n  'lightgrey': [211, 211, 211, 1],\n  'lightpink': [255, 182, 193, 1],\n  'lightsalmon': [255, 160, 122, 1],\n  'lightseagreen': [32, 178, 170, 1],\n  'lightskyblue': [135, 206, 250, 1],\n  'lightslategray': [119, 136, 153, 1],\n  'lightslategrey': [119, 136, 153, 1],\n  'lightsteelblue': [176, 196, 222, 1],\n  'lightyellow': [255, 255, 224, 1],\n  'lime': [0, 255, 0, 1],\n  'limegreen': [50, 205, 50, 1],\n  'linen': [250, 240, 230, 1],\n  'magenta': [255, 0, 255, 1],\n  'maroon': [128, 0, 0, 1],\n  'mediumaquamarine': [102, 205, 170, 1],\n  'mediumblue': [0, 0, 205, 1],\n  'mediumorchid': [186, 85, 211, 1],\n  'mediumpurple': [147, 112, 219, 1],\n  'mediumseagreen': [60, 179, 113, 1],\n  'mediumslateblue': [123, 104, 238, 1],\n  'mediumspringgreen': [0, 250, 154, 1],\n  'mediumturquoise': [72, 209, 204, 1],\n  'mediumvioletred': [199, 21, 133, 1],\n  'midnightblue': [25, 25, 112, 1],\n  'mintcream': [245, 255, 250, 1],\n  'mistyrose': [255, 228, 225, 1],\n  'moccasin': [255, 228, 181, 1],\n  'navajowhite': [255, 222, 173, 1],\n  'navy': [0, 0, 128, 1],\n  'oldlace': [253, 245, 230, 1],\n  'olive': [128, 128, 0, 1],\n  'olivedrab': [107, 142, 35, 1],\n  'orange': [255, 165, 0, 1],\n  'orangered': [255, 69, 0, 1],\n  'orchid': [218, 112, 214, 1],\n  'palegoldenrod': [238, 232, 170, 1],\n  'palegreen': [152, 251, 152, 1],\n  'paleturquoise': [175, 238, 238, 1],\n  'palevioletred': [219, 112, 147, 1],\n  'papayawhip': [255, 239, 213, 1],\n  'peachpuff': [255, 218, 185, 1],\n  'peru': [205, 133, 63, 1],\n  'pink': [255, 192, 203, 1],\n  'plum': [221, 160, 221, 1],\n  'powderblue': [176, 224, 230, 1],\n  'purple': [128, 0, 128, 1],\n  'red': [255, 0, 0, 1],\n  'rosybrown': [188, 143, 143, 1],\n  'royalblue': [65, 105, 225, 1],\n  'saddlebrown': [139, 69, 19, 1],\n  'salmon': [250, 128, 114, 1],\n  'sandybrown': [244, 164, 96, 1],\n  'seagreen': [46, 139, 87, 1],\n  'seashell': [255, 245, 238, 1],\n  'sienna': [160, 82, 45, 1],\n  'silver': [192, 192, 192, 1],\n  'skyblue': [135, 206, 235, 1],\n  'slateblue': [106, 90, 205, 1],\n  'slategray': [112, 128, 144, 1],\n  'slategrey': [112, 128, 144, 1],\n  'snow': [255, 250, 250, 1],\n  'springgreen': [0, 255, 127, 1],\n  'steelblue': [70, 130, 180, 1],\n  'tan': [210, 180, 140, 1],\n  'teal': [0, 128, 128, 1],\n  'thistle': [216, 191, 216, 1],\n  'tomato': [255, 99, 71, 1],\n  'turquoise': [64, 224, 208, 1],\n  'violet': [238, 130, 238, 1],\n  'wheat': [245, 222, 179, 1],\n  'white': [255, 255, 255, 1],\n  'whitesmoke': [245, 245, 245, 1],\n  'yellow': [255, 255, 0, 1],\n  'yellowgreen': [154, 205, 50, 1]\n};\n\nfunction clampCssByte(i) {\n  // Clamp to integer 0 .. 255.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 255 ? 255 : i;\n}\n\nfunction clampCssAngle(i) {\n  // Clamp to integer 0 .. 360.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 360 ? 360 : i;\n}\n\nfunction clampCssFloat(f) {\n  // Clamp to float 0.0 .. 1.0.\n  return f < 0 ? 0 : f > 1 ? 1 : f;\n}\n\nfunction parseCssInt(str) {\n  // int or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssByte(parseFloat(str) / 100 * 255);\n  }\n\n  return clampCssByte(parseInt(str, 10));\n}\n\nfunction parseCssFloat(str) {\n  // float or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssFloat(parseFloat(str) / 100);\n  }\n\n  return clampCssFloat(parseFloat(str));\n}\n\nfunction cssHueToRgb(m1, m2, h) {\n  if (h < 0) {\n    h += 1;\n  } else if (h > 1) {\n    h -= 1;\n  }\n\n  if (h * 6 < 1) {\n    return m1 + (m2 - m1) * h * 6;\n  }\n\n  if (h * 2 < 1) {\n    return m2;\n  }\n\n  if (h * 3 < 2) {\n    return m1 + (m2 - m1) * (2 / 3 - h) * 6;\n  }\n\n  return m1;\n}\n\nfunction lerpNumber(a, b, p) {\n  return a + (b - a) * p;\n}\n\nfunction setRgba(out, r, g, b, a) {\n  out[0] = r;\n  out[1] = g;\n  out[2] = b;\n  out[3] = a;\n  return out;\n}\n\nfunction copyRgba(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\nvar colorCache = new LRU(20);\nvar lastRemovedArr = null;\n\nfunction putToCache(colorStr, rgbaArr) {\n  // Reuse removed array\n  if (lastRemovedArr) {\n    copyRgba(lastRemovedArr, rgbaArr);\n  }\n\n  lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || rgbaArr.slice());\n}\n/**\n * @param {string} colorStr\n * @param {Array.<number>} out\n * @return {Array.<number>}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction parse(colorStr, rgbaArr) {\n  if (!colorStr) {\n    return;\n  }\n\n  rgbaArr = rgbaArr || [];\n  var cached = colorCache.get(colorStr);\n\n  if (cached) {\n    return copyRgba(rgbaArr, cached);\n  } // colorStr may be not string\n\n\n  colorStr = colorStr + ''; // Remove all whitespace, not compliant, but should just be more accepting.\n\n  var str = colorStr.replace(/ /g, '').toLowerCase(); // Color keywords (and transparent) lookup.\n\n  if (str in kCSSColorTable) {\n    copyRgba(rgbaArr, kCSSColorTable[str]);\n    putToCache(colorStr, rgbaArr);\n    return rgbaArr;\n  } // #abc and #abc123 syntax.\n\n\n  if (str.charAt(0) === '#') {\n    if (str.length === 4) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xfff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xf00) >> 4 | (iv & 0xf00) >> 8, iv & 0xf0 | (iv & 0xf0) >> 4, iv & 0xf | (iv & 0xf) << 4, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    } else if (str.length === 7) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xffffff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xff0000) >> 16, (iv & 0xff00) >> 8, iv & 0xff, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    }\n\n    return;\n  }\n\n  var op = str.indexOf('('),\n      ep = str.indexOf(')');\n\n  if (op !== -1 && ep + 1 === str.length) {\n    var fname = str.substr(0, op);\n    var params = str.substr(op + 1, ep - (op + 1)).split(',');\n    var alpha = 1; // To allow case fallthrough.\n\n    switch (fname) {\n      case 'rgba':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        alpha = parseCssFloat(params.pop());\n      // jshint ignore:line\n      // Fall through.\n\n      case 'rgb':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        setRgba(rgbaArr, parseCssInt(params[0]), parseCssInt(params[1]), parseCssInt(params[2]), alpha);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsla':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        params[3] = parseCssFloat(params[3]);\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsl':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      default:\n        return;\n    }\n  }\n\n  setRgba(rgbaArr, 0, 0, 0, 1);\n  return;\n}\n/**\n * @param {Array.<number>} hsla\n * @param {Array.<number>} rgba\n * @return {Array.<number>} rgba\n */\n\n\nfunction hsla2rgba(hsla, rgba) {\n  var h = (parseFloat(hsla[0]) % 360 + 360) % 360 / 360; // 0 .. 1\n  // NOTE(deanm): According to the CSS spec s/l should only be\n  // percentages, but we don't bother and let float or percentage.\n\n  var s = parseCssFloat(hsla[1]);\n  var l = parseCssFloat(hsla[2]);\n  var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n  var m1 = l * 2 - m2;\n  rgba = rgba || [];\n  setRgba(rgba, clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255), clampCssByte(cssHueToRgb(m1, m2, h) * 255), clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255), 1);\n\n  if (hsla.length === 4) {\n    rgba[3] = hsla[3];\n  }\n\n  return rgba;\n}\n/**\n * @param {Array.<number>} rgba\n * @return {Array.<number>} hsla\n */\n\n\nfunction rgba2hsla(rgba) {\n  if (!rgba) {\n    return;\n  } // RGB from 0 to 255\n\n\n  var R = rgba[0] / 255;\n  var G = rgba[1] / 255;\n  var B = rgba[2] / 255;\n  var vMin = Math.min(R, G, B); // Min. value of RGB\n\n  var vMax = Math.max(R, G, B); // Max. value of RGB\n\n  var delta = vMax - vMin; // Delta RGB value\n\n  var L = (vMax + vMin) / 2;\n  var H;\n  var S; // HSL results from 0 to 1\n\n  if (delta === 0) {\n    H = 0;\n    S = 0;\n  } else {\n    if (L < 0.5) {\n      S = delta / (vMax + vMin);\n    } else {\n      S = delta / (2 - vMax - vMin);\n    }\n\n    var deltaR = ((vMax - R) / 6 + delta / 2) / delta;\n    var deltaG = ((vMax - G) / 6 + delta / 2) / delta;\n    var deltaB = ((vMax - B) / 6 + delta / 2) / delta;\n\n    if (R === vMax) {\n      H = deltaB - deltaG;\n    } else if (G === vMax) {\n      H = 1 / 3 + deltaR - deltaB;\n    } else if (B === vMax) {\n      H = 2 / 3 + deltaG - deltaR;\n    }\n\n    if (H < 0) {\n      H += 1;\n    }\n\n    if (H > 1) {\n      H -= 1;\n    }\n  }\n\n  var hsla = [H * 360, S, L];\n\n  if (rgba[3] != null) {\n    hsla.push(rgba[3]);\n  }\n\n  return hsla;\n}\n/**\n * @param {string} color\n * @param {number} level\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction lift(color, level) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    for (var i = 0; i < 3; i++) {\n      if (level < 0) {\n        colorArr[i] = colorArr[i] * (1 - level) | 0;\n      } else {\n        colorArr[i] = (255 - colorArr[i]) * level + colorArr[i] | 0;\n      }\n    }\n\n    return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n  }\n}\n/**\n * @param {string} color\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction toHex(color) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + +colorArr[2]).toString(16).slice(1);\n  }\n}\n/**\n * Map value to color. Faster than lerp methods because color is represented by rgba array.\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<Array.<number>>} colors List of rgba color array\n * @param {Array.<number>} [out] Mapped gba color array\n * @return {Array.<number>} will be null/undefined if input illegal.\n */\n\n\nfunction fastLerp(normalizedValue, colors, out) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  out = out || [];\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = colors[leftIndex];\n  var rightColor = colors[rightIndex];\n  var dv = value - leftIndex;\n  out[0] = clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv));\n  out[1] = clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv));\n  out[2] = clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv));\n  out[3] = clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv));\n  return out;\n}\n/**\n * @deprecated\n */\n\n\nvar fastMapToColor = fastLerp;\n/**\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<string>} colors Color list.\n * @param {boolean=} fullOutput Default false.\n * @return {(string|Object)} Result color. If fullOutput,\n *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n * @memberOf module:zrender/util/color\n */\n\nfunction lerp(normalizedValue, colors, fullOutput) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = parse(colors[leftIndex]);\n  var rightColor = parse(colors[rightIndex]);\n  var dv = value - leftIndex;\n  var color = stringify([clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv)), clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv)), clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv)), clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv))], 'rgba');\n  return fullOutput ? {\n    color: color,\n    leftIndex: leftIndex,\n    rightIndex: rightIndex,\n    value: value\n  } : color;\n}\n/**\n * @deprecated\n */\n\n\nvar mapToColor = lerp;\n/**\n * @param {string} color\n * @param {number=} h 0 ~ 360, ignore when null.\n * @param {number=} s 0 ~ 1, ignore when null.\n * @param {number=} l 0 ~ 1, ignore when null.\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\nfunction modifyHSL(color, h, s, l) {\n  color = parse(color);\n\n  if (color) {\n    color = rgba2hsla(color);\n    h != null && (color[0] = clampCssAngle(h));\n    s != null && (color[1] = parseCssFloat(s));\n    l != null && (color[2] = parseCssFloat(l));\n    return stringify(hsla2rgba(color), 'rgba');\n  }\n}\n/**\n * @param {string} color\n * @param {number=} alpha 0 ~ 1\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\n\nfunction modifyAlpha(color, alpha) {\n  color = parse(color);\n\n  if (color && alpha != null) {\n    color[3] = clampCssFloat(alpha);\n    return stringify(color, 'rgba');\n  }\n}\n/**\n * @param {Array.<number>} arrColor like [12,33,44,0.4]\n * @param {string} type 'rgba', 'hsva', ...\n * @return {string} Result color. (If input illegal, return undefined).\n */\n\n\nfunction stringify(arrColor, type) {\n  if (!arrColor || !arrColor.length) {\n    return;\n  }\n\n  var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n\n  if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n    colorStr += ',' + arrColor[3];\n  }\n\n  return type + '(' + colorStr + ')';\n}\n\nexports.parse = parse;\nexports.lift = lift;\nexports.toHex = toHex;\nexports.fastLerp = fastLerp;\nexports.fastMapToColor = fastMapToColor;\nexports.lerp = lerp;\nexports.mapToColor = mapToColor;\nexports.modifyHSL = modifyHSL;\nexports.modifyAlpha = modifyAlpha;\nexports.stringify = stringify;\n\n/***/ }),\n\n/***/ 1003:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar graphic = __webpack_require__(980);\n\nvar BoundingRect = __webpack_require__(987);\n\n// Symbol factory\n\n/**\n * Triangle shape\n * @inner\n */\nvar Triangle = graphic.extendShape({\n  type: 'triangle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy + height);\n    path.lineTo(cx - width, cy + height);\n    path.closePath();\n  }\n});\n/**\n * Diamond shape\n * @inner\n */\n\nvar Diamond = graphic.extendShape({\n  type: 'diamond',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy);\n    path.lineTo(cx, cy + height);\n    path.lineTo(cx - width, cy);\n    path.closePath();\n  }\n});\n/**\n * Pin shape\n * @inner\n */\n\nvar Pin = graphic.extendShape({\n  type: 'pin',\n  shape: {\n    // x, y on the cusp\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var w = shape.width / 5 * 3; // Height must be larger than width\n\n    var h = Math.max(w, shape.height);\n    var r = w / 2; // Dist on y with tangent point and circle center\n\n    var dy = r * r / (h - r);\n    var cy = y - h + r + dy;\n    var angle = Math.asin(dy / r); // Dist on x with tangent point and circle center\n\n    var dx = Math.cos(angle) * r;\n    var tanX = Math.sin(angle);\n    var tanY = Math.cos(angle);\n    var cpLen = r * 0.6;\n    var cpLen2 = r * 0.7;\n    path.moveTo(x - dx, cy + dy);\n    path.arc(x, cy, r, Math.PI - angle, Math.PI * 2 + angle);\n    path.bezierCurveTo(x + dx - tanX * cpLen, cy + dy + tanY * cpLen, x, y - cpLen2, x, y);\n    path.bezierCurveTo(x, y - cpLen2, x - dx + tanX * cpLen, cy + dy + tanY * cpLen, x - dx, cy + dy);\n    path.closePath();\n  }\n});\n/**\n * Arrow shape\n * @inner\n */\n\nvar Arrow = graphic.extendShape({\n  type: 'arrow',\n  shape: {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var height = shape.height;\n    var width = shape.width;\n    var x = shape.x;\n    var y = shape.y;\n    var dx = width / 3 * 2;\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + dx, y + height);\n    ctx.lineTo(x, y + height / 4 * 3);\n    ctx.lineTo(x - dx, y + height);\n    ctx.lineTo(x, y);\n    ctx.closePath();\n  }\n});\n/**\n * Map of path contructors\n * @type {Object.<string, module:zrender/graphic/Path>}\n */\n\nvar symbolCtors = {\n  line: graphic.Line,\n  rect: graphic.Rect,\n  roundRect: graphic.Rect,\n  square: graphic.Rect,\n  circle: graphic.Circle,\n  diamond: Diamond,\n  pin: Pin,\n  arrow: Arrow,\n  triangle: Triangle\n};\nvar symbolShapeMakers = {\n  line: function (x, y, w, h, shape) {\n    // FIXME\n    shape.x1 = x;\n    shape.y1 = y + h / 2;\n    shape.x2 = x + w;\n    shape.y2 = y + h / 2;\n  },\n  rect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n  },\n  roundRect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n    shape.r = Math.min(w, h) / 4;\n  },\n  square: function (x, y, w, h, shape) {\n    var size = Math.min(w, h);\n    shape.x = x;\n    shape.y = y;\n    shape.width = size;\n    shape.height = size;\n  },\n  circle: function (x, y, w, h, shape) {\n    // Put circle in the center of square\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.r = Math.min(w, h) / 2;\n  },\n  diamond: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  pin: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  arrow: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  triangle: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  }\n};\nvar symbolBuildProxies = {};\nzrUtil.each(symbolCtors, function (Ctor, name) {\n  symbolBuildProxies[name] = new Ctor();\n});\nvar SymbolClz = graphic.extendShape({\n  type: 'symbol',\n  shape: {\n    symbolType: '',\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  beforeBrush: function () {\n    var style = this.style;\n    var shape = this.shape; // FIXME\n\n    if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n      style.textPosition = ['50%', '40%'];\n      style.textAlign = 'center';\n      style.textVerticalAlign = 'middle';\n    }\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    var symbolType = shape.symbolType;\n    var proxySymbol = symbolBuildProxies[symbolType];\n\n    if (shape.symbolType !== 'none') {\n      if (!proxySymbol) {\n        // Default rect\n        symbolType = 'rect';\n        proxySymbol = symbolBuildProxies[symbolType];\n      }\n\n      symbolShapeMakers[symbolType](shape.x, shape.y, shape.width, shape.height, proxySymbol.shape);\n      proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n    }\n  }\n}); // Provide setColor helper method to avoid determine if set the fill or stroke outside\n\nfunction symbolPathSetColor(color, innerColor) {\n  if (this.type !== 'image') {\n    var symbolStyle = this.style;\n    var symbolShape = this.shape;\n\n    if (symbolShape && symbolShape.symbolType === 'line') {\n      symbolStyle.stroke = color;\n    } else if (this.__isEmptyBrush) {\n      symbolStyle.stroke = color;\n      symbolStyle.fill = innerColor || '#fff';\n    } else {\n      // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n      symbolStyle.fill && (symbolStyle.fill = color);\n      symbolStyle.stroke && (symbolStyle.stroke = color);\n    }\n\n    this.dirty(false);\n  }\n}\n/**\n * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n * @param {string} symbolType\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @param {string} color\n * @param {boolean} [keepAspect=false] whether to keep the ratio of w/h,\n *                            for path and image only.\n */\n\n\nfunction createSymbol(symbolType, x, y, w, h, color, keepAspect) {\n  // TODO Support image object, DynamicImage.\n  var isEmpty = symbolType.indexOf('empty') === 0;\n\n  if (isEmpty) {\n    symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n  }\n\n  var symbolPath;\n\n  if (symbolType.indexOf('image://') === 0) {\n    symbolPath = graphic.makeImage(symbolType.slice(8), new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else if (symbolType.indexOf('path://') === 0) {\n    symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else {\n    symbolPath = new SymbolClz({\n      shape: {\n        symbolType: symbolType,\n        x: x,\n        y: y,\n        width: w,\n        height: h\n      }\n    });\n  }\n\n  symbolPath.__isEmptyBrush = isEmpty;\n  symbolPath.setColor = symbolPathSetColor;\n  symbolPath.setColor(color);\n  return symbolPath;\n}\n\nexports.createSymbol = createSymbol;\n\n/***/ }),\n\n/***/ 1004:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar _model = __webpack_require__(982);\n\nvar normalizeToArray = _model.normalizeToArray;\n\n/**\n * Complete dimensions by data (guess dimension).\n */\nvar each = zrUtil.each;\nvar isString = zrUtil.isString;\nvar defaults = zrUtil.defaults;\nvar OTHER_DIMS = {\n  tooltip: 1,\n  label: 1,\n  itemName: 1\n};\n/**\n * Complete the dimensions array, by user defined `dimension` and `encode`,\n * and guessing from the data structure.\n * If no 'value' dimension specified, the first no-named dimension will be\n * named as 'value'.\n *\n * @param {Array.<string>} sysDims Necessary dimensions, like ['x', 'y'], which\n *      provides not only dim template, but also default order.\n *      `name` of each item provides default coord name.\n *      [{dimsDef: []}, ...] can be specified to give names.\n * @param {Array} data Data list. [[1, 2, 3], [2, 3, 4]].\n * @param {Object} [opt]\n * @param {Array.<Object|string>} [opt.dimsDef] option.series.dimensions User defined dimensions\n *      For example: ['asdf', {name, type}, ...].\n * @param {Object} [opt.encodeDef] option.series.encode {x: 2, y: [3, 1], tooltip: [1, 2], label: 3}\n * @param {string} [opt.extraPrefix] Prefix of name when filling the left dimensions.\n * @param {string} [opt.extraFromZero] If specified, extra dim names will be:\n *                      extraPrefix + 0, extraPrefix + extraBaseIndex + 1 ...\n *                      If not specified, extra dim names will be:\n *                      extraPrefix, extraPrefix + 0, extraPrefix + 1 ...\n * @param {number} [opt.dimCount] If not specified, guess by the first data item.\n * @return {Array.<Object>} [{\n *      name: string mandatory,\n *      coordDim: string mandatory,\n *      coordDimIndex: number mandatory,\n *      type: string optional,\n *      tooltipName: string optional,\n *      otherDims: {\n *          tooltip: number optional,\n *          label: number optional\n *      },\n *      isExtraCoord: boolean true or undefined.\n *      other props ...\n * }]\n */\n\nfunction completeDimensions(sysDims, data, opt) {\n  data = data || [];\n  opt = opt || {};\n  sysDims = (sysDims || []).slice();\n  var dimsDef = (opt.dimsDef || []).slice();\n  var encodeDef = zrUtil.createHashMap(opt.encodeDef);\n  var dataDimNameMap = zrUtil.createHashMap();\n  var coordDimNameMap = zrUtil.createHashMap(); // var valueCandidate;\n\n  var result = [];\n  var dimCount = opt.dimCount;\n\n  if (dimCount == null) {\n    var value0 = retrieveValue(data[0]);\n    dimCount = Math.max(zrUtil.isArray(value0) && value0.length || 1, sysDims.length, dimsDef.length);\n    each(sysDims, function (sysDimItem) {\n      var sysDimItemDimsDef = sysDimItem.dimsDef;\n      sysDimItemDimsDef && (dimCount = Math.max(dimCount, sysDimItemDimsDef.length));\n    });\n  } // Apply user defined dims (`name` and `type`) and init result.\n\n\n  for (var i = 0; i < dimCount; i++) {\n    var dimDefItem = isString(dimsDef[i]) ? {\n      name: dimsDef[i]\n    } : dimsDef[i] || {};\n    var userDimName = dimDefItem.name;\n    var resultItem = result[i] = {\n      otherDims: {}\n    }; // Name will be applied later for avoiding duplication.\n\n    if (userDimName != null && dataDimNameMap.get(userDimName) == null) {\n      // Only if `series.dimensions` is defined in option, tooltipName\n      // will be set, and dimension will be diplayed vertically in\n      // tooltip by default.\n      resultItem.name = resultItem.tooltipName = userDimName;\n      dataDimNameMap.set(userDimName, i);\n    }\n\n    dimDefItem.type != null && (resultItem.type = dimDefItem.type);\n  } // Set `coordDim` and `coordDimIndex` by `encodeDef` and normalize `encodeDef`.\n\n\n  encodeDef.each(function (dataDims, coordDim) {\n    dataDims = encodeDef.set(coordDim, normalizeToArray(dataDims).slice());\n    each(dataDims, function (resultDimIdx, coordDimIndex) {\n      // The input resultDimIdx can be dim name or index.\n      isString(resultDimIdx) && (resultDimIdx = dataDimNameMap.get(resultDimIdx));\n\n      if (resultDimIdx != null && resultDimIdx < dimCount) {\n        dataDims[coordDimIndex] = resultDimIdx;\n        applyDim(result[resultDimIdx], coordDim, coordDimIndex);\n      }\n    });\n  }); // Apply templetes and default order from `sysDims`.\n\n  var availDimIdx = 0;\n  each(sysDims, function (sysDimItem, sysDimIndex) {\n    var coordDim;\n    var sysDimItem;\n    var sysDimItemDimsDef;\n    var sysDimItemOtherDims;\n\n    if (isString(sysDimItem)) {\n      coordDim = sysDimItem;\n      sysDimItem = {};\n    } else {\n      coordDim = sysDimItem.name;\n      sysDimItem = zrUtil.clone(sysDimItem); // `coordDimIndex` should not be set directly.\n\n      sysDimItemDimsDef = sysDimItem.dimsDef;\n      sysDimItemOtherDims = sysDimItem.otherDims;\n      sysDimItem.name = sysDimItem.coordDim = sysDimItem.coordDimIndex = sysDimItem.dimsDef = sysDimItem.otherDims = null;\n    }\n\n    var dataDims = normalizeToArray(encodeDef.get(coordDim)); // dimensions provides default dim sequences.\n\n    if (!dataDims.length) {\n      for (var i = 0; i < (sysDimItemDimsDef && sysDimItemDimsDef.length || 1); i++) {\n        while (availDimIdx < result.length && result[availDimIdx].coordDim != null) {\n          availDimIdx++;\n        }\n\n        availDimIdx < result.length && dataDims.push(availDimIdx++);\n      }\n    } // Apply templates.\n\n\n    each(dataDims, function (resultDimIdx, coordDimIndex) {\n      var resultItem = result[resultDimIdx];\n      applyDim(defaults(resultItem, sysDimItem), coordDim, coordDimIndex);\n\n      if (resultItem.name == null && sysDimItemDimsDef) {\n        resultItem.name = resultItem.tooltipName = sysDimItemDimsDef[coordDimIndex];\n      }\n\n      sysDimItemOtherDims && defaults(resultItem.otherDims, sysDimItemOtherDims);\n    });\n  }); // Make sure the first extra dim is 'value'.\n\n  var extra = opt.extraPrefix || 'value'; // Set dim `name` and other `coordDim` and other props.\n\n  for (var resultDimIdx = 0; resultDimIdx < dimCount; resultDimIdx++) {\n    var resultItem = result[resultDimIdx] = result[resultDimIdx] || {};\n    var coordDim = resultItem.coordDim;\n    coordDim == null && (resultItem.coordDim = genName(extra, coordDimNameMap, opt.extraFromZero), resultItem.coordDimIndex = 0, resultItem.isExtraCoord = true);\n    resultItem.name == null && (resultItem.name = genName(resultItem.coordDim, dataDimNameMap));\n    resultItem.type == null && guessOrdinal(data, resultDimIdx) && (resultItem.type = 'ordinal');\n  }\n\n  return result;\n\n  function applyDim(resultItem, coordDim, coordDimIndex) {\n    if (OTHER_DIMS[coordDim]) {\n      resultItem.otherDims[coordDim] = coordDimIndex;\n    } else {\n      resultItem.coordDim = coordDim;\n      resultItem.coordDimIndex = coordDimIndex;\n      coordDimNameMap.set(coordDim, true);\n    }\n  }\n\n  function genName(name, map, fromZero) {\n    if (fromZero || map.get(name) != null) {\n      var i = 0;\n\n      while (map.get(name + i) != null) {\n        i++;\n      }\n\n      name += i;\n    }\n\n    map.set(name, true);\n    return name;\n  }\n} // The rule should not be complex, otherwise user might not\n// be able to known where the data is wrong.\n\n\nvar guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {\n  for (var i = 0, len = data.length; i < len; i++) {\n    var value = retrieveValue(data[i]);\n\n    if (!zrUtil.isArray(value)) {\n      return false;\n    }\n\n    var value = value[dimIndex]; // Consider usage convenience, '1', '2' will be treated as \"number\".\n    // `isFinit('')` get `true`.\n\n    if (value != null && isFinite(value) && value !== '') {\n      return false;\n    } else if (isString(value) && value !== '-') {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nfunction retrieveValue(o) {\n  return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value : o;\n}\n\nvar _default = completeDimensions;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1005:\n/***/ (function(module, exports) {\n\nvar _default = {\n  toolbox: {\n    brush: {\n      title: {\n        rect: '矩形选择',\n        polygon: '圈选',\n        lineX: '横向选择',\n        lineY: '纵向选择',\n        keep: '保持选择',\n        clear: '清除选择'\n      }\n    },\n    dataView: {\n      title: '数据视图',\n      lang: ['数据视图', '关闭', '刷新']\n    },\n    dataZoom: {\n      title: {\n        zoom: '区域缩放',\n        back: '区域缩放还原'\n      }\n    },\n    magicType: {\n      title: {\n        line: '切换为折线图',\n        bar: '切换为柱状图',\n        stack: '切换为堆叠',\n        tiled: '切换为平铺'\n      }\n    },\n    restore: {\n      title: '还原'\n    },\n    saveAsImage: {\n      title: '保存为图片',\n      lang: ['右键另存为图片']\n    }\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1006:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar coordinateSystemCreators = {};\n\nfunction CoordinateSystemManager() {\n  this._coordinateSystems = [];\n}\n\nCoordinateSystemManager.prototype = {\n  constructor: CoordinateSystemManager,\n  create: function (ecModel, api) {\n    var coordinateSystems = [];\n    zrUtil.each(coordinateSystemCreators, function (creater, type) {\n      var list = creater.create(ecModel, api);\n      coordinateSystems = coordinateSystems.concat(list || []);\n    });\n    this._coordinateSystems = coordinateSystems;\n  },\n  update: function (ecModel, api) {\n    zrUtil.each(this._coordinateSystems, function (coordSys) {\n      // FIXME MUST have\n      coordSys.update && coordSys.update(ecModel, api);\n    });\n  },\n  getCoordinateSystems: function () {\n    return this._coordinateSystems.slice();\n  }\n};\n\nCoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n  coordinateSystemCreators[type] = coordinateSystemCreator;\n};\n\nCoordinateSystemManager.get = function (type) {\n  return coordinateSystemCreators[type];\n};\n\nvar _default = CoordinateSystemManager;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1007:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar curve = __webpack_require__(999);\n\nvar vec2 = __webpack_require__(984);\n\nvar bbox = __webpack_require__(1037);\n\nvar BoundingRect = __webpack_require__(987);\n\nvar _config = __webpack_require__(1010);\n\nvar dpr = _config.devicePixelRatio;\n\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n// TODO getTotalLength, getPointAtLength\nvar CMD = {\n  M: 1,\n  L: 2,\n  C: 3,\n  Q: 4,\n  A: 5,\n  Z: 6,\n  // Rect\n  R: 7\n}; // var CMD_MEM_SIZE = {\n//     M: 3,\n//     L: 3,\n//     C: 7,\n//     Q: 5,\n//     A: 9,\n//     R: 5,\n//     Z: 1\n// };\n\nvar min = [];\nvar max = [];\nvar min2 = [];\nvar max2 = [];\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathCos = Math.cos;\nvar mathSin = Math.sin;\nvar mathSqrt = Math.sqrt;\nvar mathAbs = Math.abs;\nvar hasTypedArray = typeof Float32Array != 'undefined';\n/**\n * @alias module:zrender/core/PathProxy\n * @constructor\n */\n\nvar PathProxy = function (notSaveData) {\n  this._saveData = !(notSaveData || false);\n\n  if (this._saveData) {\n    /**\n     * Path data. Stored as flat array\n     * @type {Array.<Object>}\n     */\n    this.data = [];\n  }\n\n  this._ctx = null;\n};\n/**\n * 快速计算Path包围盒（并不是最小包围盒）\n * @return {Object}\n */\n\n\nPathProxy.prototype = {\n  constructor: PathProxy,\n  _xi: 0,\n  _yi: 0,\n  _x0: 0,\n  _y0: 0,\n  // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n  _ux: 0,\n  _uy: 0,\n  _len: 0,\n  _lineDash: null,\n  _dashOffset: 0,\n  _dashIdx: 0,\n  _dashSum: 0,\n\n  /**\n   * @readOnly\n   */\n  setScale: function (sx, sy) {\n    this._ux = mathAbs(1 / dpr / sx) || 0;\n    this._uy = mathAbs(1 / dpr / sy) || 0;\n  },\n  getContext: function () {\n    return this._ctx;\n  },\n\n  /**\n   * @param  {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  beginPath: function (ctx) {\n    this._ctx = ctx;\n    ctx && ctx.beginPath();\n    ctx && (this.dpr = ctx.dpr); // Reset\n\n    if (this._saveData) {\n      this._len = 0;\n    }\n\n    if (this._lineDash) {\n      this._lineDash = null;\n      this._dashOffset = 0;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  moveTo: function (x, y) {\n    this.addData(CMD.M, x, y);\n    this._ctx && this._ctx.moveTo(x, y); // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n    // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n    // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n    // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n\n    this._x0 = x;\n    this._y0 = y;\n    this._xi = x;\n    this._yi = y;\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  lineTo: function (x, y) {\n    var exceedUnit = mathAbs(x - this._xi) > this._ux || mathAbs(y - this._yi) > this._uy // Force draw the first segment\n    || this._len < 5;\n    this.addData(CMD.L, x, y);\n\n    if (this._ctx && exceedUnit) {\n      this._needsDash() ? this._dashedLineTo(x, y) : this._ctx.lineTo(x, y);\n    }\n\n    if (exceedUnit) {\n      this._xi = x;\n      this._yi = y;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @param  {number} x3\n   * @param  {number} y3\n   * @return {module:zrender/core/PathProxy}\n   */\n  bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n    this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3) : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n    }\n\n    this._xi = x3;\n    this._yi = y3;\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @return {module:zrender/core/PathProxy}\n   */\n  quadraticCurveTo: function (x1, y1, x2, y2) {\n    this.addData(CMD.Q, x1, y1, x2, y2);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2) : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n    }\n\n    this._xi = x2;\n    this._yi = y2;\n    return this;\n  },\n\n  /**\n   * @param  {number} cx\n   * @param  {number} cy\n   * @param  {number} r\n   * @param  {number} startAngle\n   * @param  {number} endAngle\n   * @param  {boolean} anticlockwise\n   * @return {module:zrender/core/PathProxy}\n   */\n  arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n    this.addData(CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1);\n    this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n    this._xi = mathCos(endAngle) * r + cx;\n    this._yi = mathSin(endAngle) * r + cx;\n    return this;\n  },\n  // TODO\n  arcTo: function (x1, y1, x2, y2, radius) {\n    if (this._ctx) {\n      this._ctx.arcTo(x1, y1, x2, y2, radius);\n    }\n\n    return this;\n  },\n  // TODO\n  rect: function (x, y, w, h) {\n    this._ctx && this._ctx.rect(x, y, w, h);\n    this.addData(CMD.R, x, y, w, h);\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/PathProxy}\n   */\n  closePath: function () {\n    this.addData(CMD.Z);\n    var ctx = this._ctx;\n    var x0 = this._x0;\n    var y0 = this._y0;\n\n    if (ctx) {\n      this._needsDash() && this._dashedLineTo(x0, y0);\n      ctx.closePath();\n    }\n\n    this._xi = x0;\n    this._yi = y0;\n    return this;\n  },\n\n  /**\n   * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n   * stroke 同样\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  fill: function (ctx) {\n    ctx && ctx.fill();\n    this.toStatic();\n  },\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  stroke: function (ctx) {\n    ctx && ctx.stroke();\n    this.toStatic();\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDash: function (lineDash) {\n    if (lineDash instanceof Array) {\n      this._lineDash = lineDash;\n      this._dashIdx = 0;\n      var lineDashSum = 0;\n\n      for (var i = 0; i < lineDash.length; i++) {\n        lineDashSum += lineDash[i];\n      }\n\n      this._dashSum = lineDashSum;\n    }\n\n    return this;\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDashOffset: function (offset) {\n    this._dashOffset = offset;\n    return this;\n  },\n\n  /**\n   *\n   * @return {boolean}\n   */\n  len: function () {\n    return this._len;\n  },\n\n  /**\n   * 直接设置 Path 数据\n   */\n  setData: function (data) {\n    var len = data.length;\n\n    if (!(this.data && this.data.length == len) && hasTypedArray) {\n      this.data = new Float32Array(len);\n    }\n\n    for (var i = 0; i < len; i++) {\n      this.data[i] = data[i];\n    }\n\n    this._len = len;\n  },\n\n  /**\n   * 添加子路径\n   * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n   */\n  appendPath: function (path) {\n    if (!(path instanceof Array)) {\n      path = [path];\n    }\n\n    var len = path.length;\n    var appendSize = 0;\n    var offset = this._len;\n\n    for (var i = 0; i < len; i++) {\n      appendSize += path[i].len();\n    }\n\n    if (hasTypedArray && this.data instanceof Float32Array) {\n      this.data = new Float32Array(offset + appendSize);\n    }\n\n    for (var i = 0; i < len; i++) {\n      var appendPathData = path[i].data;\n\n      for (var k = 0; k < appendPathData.length; k++) {\n        this.data[offset++] = appendPathData[k];\n      }\n    }\n\n    this._len = offset;\n  },\n\n  /**\n   * 填充 Path 数据。\n   * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n   */\n  addData: function (cmd) {\n    if (!this._saveData) {\n      return;\n    }\n\n    var data = this.data;\n\n    if (this._len + arguments.length > data.length) {\n      // 因为之前的数组已经转换成静态的 Float32Array\n      // 所以不够用时需要扩展一个新的动态数组\n      this._expandData();\n\n      data = this.data;\n    }\n\n    for (var i = 0; i < arguments.length; i++) {\n      data[this._len++] = arguments[i];\n    }\n\n    this._prevCmd = cmd;\n  },\n  _expandData: function () {\n    // Only if data is Float32Array\n    if (!(this.data instanceof Array)) {\n      var newData = [];\n\n      for (var i = 0; i < this._len; i++) {\n        newData[i] = this.data[i];\n      }\n\n      this.data = newData;\n    }\n  },\n\n  /**\n   * If needs js implemented dashed line\n   * @return {boolean}\n   * @private\n   */\n  _needsDash: function () {\n    return this._lineDash;\n  },\n  _dashedLineTo: function (x1, y1) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    var dist = mathSqrt(dx * dx + dy * dy);\n    var x = x0;\n    var y = y0;\n    var dash;\n    var nDash = lineDash.length;\n    var idx;\n    dx /= dist;\n    dy /= dist;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum;\n    x -= offset * dx;\n    y -= offset * dy;\n\n    while (dx > 0 && x <= x1 || dx < 0 && x >= x1 || dx == 0 && (dy > 0 && y <= y1 || dy < 0 && y >= y1)) {\n      idx = this._dashIdx;\n      dash = lineDash[idx];\n      x += dx * dash;\n      y += dy * dash;\n      this._dashIdx = (idx + 1) % nDash; // Skip positive offset\n\n      if (dx > 0 && x < x0 || dx < 0 && x > x0 || dy > 0 && y < y0 || dy < 0 && y > y0) {\n        continue;\n      }\n\n      ctx[idx % 2 ? 'moveTo' : 'lineTo'](dx >= 0 ? mathMin(x, x1) : mathMax(x, x1), dy >= 0 ? mathMin(y, y1) : mathMax(y, y1));\n    } // Offset for next lineTo\n\n\n    dx = x - x1;\n    dy = y - y1;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  // Not accurate dashed line to\n  _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var t;\n    var dx;\n    var dy;\n    var cubicAt = curve.cubicAt;\n    var bezierLen = 0;\n    var idx = this._dashIdx;\n    var nDash = lineDash.length;\n    var x;\n    var y;\n    var tmpLen = 0;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum; // Bezier approx length\n\n    for (t = 0; t < 1; t += 0.1) {\n      dx = cubicAt(x0, x1, x2, x3, t + 0.1) - cubicAt(x0, x1, x2, x3, t);\n      dy = cubicAt(y0, y1, y2, y3, t + 0.1) - cubicAt(y0, y1, y2, y3, t);\n      bezierLen += mathSqrt(dx * dx + dy * dy);\n    } // Find idx after add offset\n\n\n    for (; idx < nDash; idx++) {\n      tmpLen += lineDash[idx];\n\n      if (tmpLen > offset) {\n        break;\n      }\n    }\n\n    t = (tmpLen - offset) / bezierLen;\n\n    while (t <= 1) {\n      x = cubicAt(x0, x1, x2, x3, t);\n      y = cubicAt(y0, y1, y2, y3, t); // Use line to approximate dashed bezier\n      // Bad result if dash is long\n\n      idx % 2 ? ctx.moveTo(x, y) : ctx.lineTo(x, y);\n      t += lineDash[idx] / bezierLen;\n      idx = (idx + 1) % nDash;\n    } // Finish the last segment and calculate the new offset\n\n\n    idx % 2 !== 0 && ctx.lineTo(x3, y3);\n    dx = x3 - x;\n    dy = y3 - y;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  _dashedQuadraticTo: function (x1, y1, x2, y2) {\n    // Convert quadratic to cubic using degree elevation\n    var x3 = x2;\n    var y3 = y2;\n    x2 = (x2 + 2 * x1) / 3;\n    y2 = (y2 + 2 * y1) / 3;\n    x1 = (this._xi + 2 * x1) / 3;\n    y1 = (this._yi + 2 * y1) / 3;\n\n    this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n  },\n\n  /**\n   * 转成静态的 Float32Array 减少堆内存占用\n   * Convert dynamic array to static Float32Array\n   */\n  toStatic: function () {\n    var data = this.data;\n\n    if (data instanceof Array) {\n      data.length = this._len;\n\n      if (hasTypedArray) {\n        this.data = new Float32Array(data);\n      }\n    }\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n    max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n    var data = this.data;\n    var xi = 0;\n    var yi = 0;\n    var x0 = 0;\n    var y0 = 0;\n\n    for (var i = 0; i < data.length;) {\n      var cmd = data[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = data[i];\n        yi = data[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n          // 在 closePath 的时候使用\n          x0 = data[i++];\n          y0 = data[i++];\n          xi = x0;\n          yi = y0;\n          min2[0] = x0;\n          min2[1] = y0;\n          max2[0] = x0;\n          max2[1] = y0;\n          break;\n\n        case CMD.L:\n          bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.C:\n          bbox.fromCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.Q:\n          bbox.fromQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.A:\n          // TODO Arc 判断的开销比较大\n          var cx = data[i++];\n          var cy = data[i++];\n          var rx = data[i++];\n          var ry = data[i++];\n          var startAngle = data[i++];\n          var endAngle = data[i++] + startAngle; // TODO Arc 旋转\n\n          var psi = data[i++];\n          var anticlockwise = 1 - data[i++];\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(startAngle) * rx + cx;\n            y0 = mathSin(startAngle) * ry + cy;\n          }\n\n          bbox.fromArc(cx, cy, rx, ry, startAngle, endAngle, anticlockwise, min2, max2);\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = data[i++];\n          y0 = yi = data[i++];\n          var width = data[i++];\n          var height = data[i++]; // Use fromLine\n\n          bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n          break;\n\n        case CMD.Z:\n          xi = x0;\n          yi = y0;\n          break;\n      } // Union\n\n\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * Rebuild path from current data\n   * Rebuild path will not consider javascript implemented line dash.\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  rebuildPath: function (ctx) {\n    var d = this.data;\n    var x0, y0;\n    var xi, yi;\n    var x, y;\n    var ux = this._ux;\n    var uy = this._uy;\n    var len = this._len;\n\n    for (var i = 0; i < len;) {\n      var cmd = d[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = d[i];\n        yi = d[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          x0 = xi = d[i++];\n          y0 = yi = d[i++];\n          ctx.moveTo(xi, yi);\n          break;\n\n        case CMD.L:\n          x = d[i++];\n          y = d[i++]; // Not draw too small seg between\n\n          if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n            ctx.lineTo(x, y);\n            xi = x;\n            yi = y;\n          }\n\n          break;\n\n        case CMD.C:\n          ctx.bezierCurveTo(d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.Q:\n          ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.A:\n          var cx = d[i++];\n          var cy = d[i++];\n          var rx = d[i++];\n          var ry = d[i++];\n          var theta = d[i++];\n          var dTheta = d[i++];\n          var psi = d[i++];\n          var fs = d[i++];\n          var r = rx > ry ? rx : ry;\n          var scaleX = rx > ry ? 1 : rx / ry;\n          var scaleY = rx > ry ? ry / rx : 1;\n          var isEllipse = Math.abs(rx - ry) > 1e-3;\n          var endAngle = theta + dTheta;\n\n          if (isEllipse) {\n            ctx.translate(cx, cy);\n            ctx.rotate(psi);\n            ctx.scale(scaleX, scaleY);\n            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n            ctx.scale(1 / scaleX, 1 / scaleY);\n            ctx.rotate(-psi);\n            ctx.translate(-cx, -cy);\n          } else {\n            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n          }\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(theta) * rx + cx;\n            y0 = mathSin(theta) * ry + cy;\n          }\n\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = d[i];\n          y0 = yi = d[i + 1];\n          ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n          break;\n\n        case CMD.Z:\n          ctx.closePath();\n          xi = x0;\n          yi = y0;\n      }\n    }\n  }\n};\nPathProxy.CMD = CMD;\nvar _default = PathProxy;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1008:\n/***/ (function(module, exports) {\n\nvar ORIGIN_METHOD = '\\0__throttleOriginMethod';\nvar RATE = '\\0__throttleRate';\nvar THROTTLE_TYPE = '\\0__throttleType';\n/**\n * @public\n * @param {(Function)} fn\n * @param {number} [delay=0] Unit: ms.\n * @param {boolean} [debounce=false]\n *        true: If call interval less than `delay`, only the last call works.\n *        false: If call interval less than `delay, call works on fixed rate.\n * @return {(Function)} throttled fn.\n */\n\nfunction throttle(fn, delay, debounce) {\n  var currCall;\n  var lastCall = 0;\n  var lastExec = 0;\n  var timer = null;\n  var diff;\n  var scope;\n  var args;\n  var debounceNextCall;\n  delay = delay || 0;\n\n  function exec() {\n    lastExec = new Date().getTime();\n    timer = null;\n    fn.apply(scope, args || []);\n  }\n\n  var cb = function () {\n    currCall = new Date().getTime();\n    scope = this;\n    args = arguments;\n    var thisDelay = debounceNextCall || delay;\n    var thisDebounce = debounceNextCall || debounce;\n    debounceNextCall = null;\n    diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\n    clearTimeout(timer);\n\n    if (thisDebounce) {\n      timer = setTimeout(exec, thisDelay);\n    } else {\n      if (diff >= 0) {\n        exec();\n      } else {\n        timer = setTimeout(exec, -diff);\n      }\n    }\n\n    lastCall = currCall;\n  };\n  /**\n   * Clear throttle.\n   * @public\n   */\n\n\n  cb.clear = function () {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  };\n  /**\n   * Enable debounce once.\n   */\n\n\n  cb.debounceNextCall = function (debounceDelay) {\n    debounceNextCall = debounceDelay;\n  };\n\n  return cb;\n}\n/**\n * Create throttle method or update throttle rate.\n *\n * @example\n * ComponentView.prototype.render = function () {\n *     ...\n *     throttle.createOrUpdate(\n *         this,\n *         '_dispatchAction',\n *         this.model.get('throttle'),\n *         'fixRate'\n *     );\n * };\n * ComponentView.prototype.remove = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n * ComponentView.prototype.dispose = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n * @param {number} [rate]\n * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n * @return {Function} throttled function.\n */\n\n\nfunction createOrUpdate(obj, fnAttr, rate, throttleType) {\n  var fn = obj[fnAttr];\n\n  if (!fn) {\n    return;\n  }\n\n  var originFn = fn[ORIGIN_METHOD] || fn;\n  var lastThrottleType = fn[THROTTLE_TYPE];\n  var lastRate = fn[RATE];\n\n  if (lastRate !== rate || lastThrottleType !== throttleType) {\n    if (rate == null || !throttleType) {\n      return obj[fnAttr] = originFn;\n    }\n\n    fn = obj[fnAttr] = throttle(originFn, rate, throttleType === 'debounce');\n    fn[ORIGIN_METHOD] = originFn;\n    fn[THROTTLE_TYPE] = throttleType;\n    fn[RATE] = rate;\n  }\n\n  return fn;\n}\n/**\n * Clear throttle. Example see throttle.createOrUpdate.\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n */\n\n\nfunction clear(obj, fnAttr) {\n  var fn = obj[fnAttr];\n\n  if (fn && fn[ORIGIN_METHOD]) {\n    obj[fnAttr] = fn[ORIGIN_METHOD];\n  }\n}\n\nexports.throttle = throttle;\nexports.createOrUpdate = createOrUpdate;\nexports.clear = clear;\n\n/***/ }),\n\n/***/ 1009:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar Element = __webpack_require__(1043);\n\nvar BoundingRect = __webpack_require__(987);\n\n/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/container/Group');\n *     var Circle = require('zrender/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n/**\n * @alias module:zrender/graphic/Group\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @extends module:zrender/mixin/Eventful\n */\nvar Group = function (opts) {\n  opts = opts || {};\n  Element.call(this, opts);\n\n  for (var key in opts) {\n    if (opts.hasOwnProperty(key)) {\n      this[key] = opts[key];\n    }\n  }\n\n  this._children = [];\n  this.__storage = null;\n  this.__dirty = true;\n};\n\nGroup.prototype = {\n  constructor: Group,\n  isGroup: true,\n\n  /**\n   * @type {string}\n   */\n  type: 'group',\n\n  /**\n   * 所有子孙元素是否响应鼠标事件\n   * @name module:/zrender/container/Group#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * @return {Array.<module:zrender/Element>}\n   */\n  children: function () {\n    return this._children.slice();\n  },\n\n  /**\n   * 获取指定 index 的儿子节点\n   * @param  {number} idx\n   * @return {module:zrender/Element}\n   */\n  childAt: function (idx) {\n    return this._children[idx];\n  },\n\n  /**\n   * 获取指定名字的儿子节点\n   * @param  {string} name\n   * @return {module:zrender/Element}\n   */\n  childOfName: function (name) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      if (children[i].name === name) {\n        return children[i];\n      }\n    }\n  },\n\n  /**\n   * @return {number}\n   */\n  childCount: function () {\n    return this._children.length;\n  },\n\n  /**\n   * 添加子节点到最后\n   * @param {module:zrender/Element} child\n   */\n  add: function (child) {\n    if (child && child !== this && child.parent !== this) {\n      this._children.push(child);\n\n      this._doAdd(child);\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加子节点在 nextSibling 之前\n   * @param {module:zrender/Element} child\n   * @param {module:zrender/Element} nextSibling\n   */\n  addBefore: function (child, nextSibling) {\n    if (child && child !== this && child.parent !== this && nextSibling && nextSibling.parent === this) {\n      var children = this._children;\n      var idx = children.indexOf(nextSibling);\n\n      if (idx >= 0) {\n        children.splice(idx, 0, child);\n\n        this._doAdd(child);\n      }\n    }\n\n    return this;\n  },\n  _doAdd: function (child) {\n    if (child.parent) {\n      child.parent.remove(child);\n    }\n\n    child.parent = this;\n    var storage = this.__storage;\n    var zr = this.__zr;\n\n    if (storage && storage !== child.__storage) {\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n  },\n\n  /**\n   * 移除子节点\n   * @param {module:zrender/Element} child\n   */\n  remove: function (child) {\n    var zr = this.__zr;\n    var storage = this.__storage;\n    var children = this._children;\n    var idx = zrUtil.indexOf(children, child);\n\n    if (idx < 0) {\n      return this;\n    }\n\n    children.splice(idx, 1);\n    child.parent = null;\n\n    if (storage) {\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n    return this;\n  },\n\n  /**\n   * 移除所有子节点\n   */\n  removeAll: function () {\n    var children = this._children;\n    var storage = this.__storage;\n    var child;\n    var i;\n\n    for (i = 0; i < children.length; i++) {\n      child = children[i];\n\n      if (storage) {\n        storage.delFromStorage(child);\n\n        if (child instanceof Group) {\n          child.delChildrenFromStorage(storage);\n        }\n      }\n\n      child.parent = null;\n    }\n\n    children.length = 0;\n    return this;\n  },\n\n  /**\n   * 遍历所有子节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  eachChild: function (cb, context) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n      cb.call(context, child, i);\n    }\n\n    return this;\n  },\n\n  /**\n   * 深度优先遍历所有子孙节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      cb.call(context, child);\n\n      if (child.type === 'group') {\n        child.traverse(cb, context);\n      }\n    }\n\n    return this;\n  },\n  addChildrenToStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n  },\n  delChildrenFromStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n  },\n  dirty: function () {\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh();\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function (includeChildren) {\n    // TODO Caching\n    var rect = null;\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var children = includeChildren || this._children;\n    var tmpMat = [];\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n\n      if (child.ignore || child.invisible) {\n        continue;\n      }\n\n      var childRect = child.getBoundingRect();\n      var transform = child.getLocalTransform(tmpMat); // TODO\n      // The boundingRect cacluated by transforming original\n      // rect may be bigger than the actual bundingRect when rotation\n      // is used. (Consider a circle rotated aginst its center, where\n      // the actual boundingRect should be the same as that not be\n      // rotated.) But we can not find better approach to calculate\n      // actual boundingRect yet, considering performance.\n\n      if (transform) {\n        tmpRect.copy(childRect);\n        tmpRect.applyTransform(transform);\n        rect = rect || tmpRect.clone();\n        rect.union(tmpRect);\n      } else {\n        rect = rect || childRect.clone();\n        rect.union(childRect);\n      }\n    }\n\n    return rect || tmpRect;\n  }\n};\nzrUtil.inherits(Group, Element);\nvar _default = Group;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1010:\n/***/ (function(module, exports) {\n\nvar dpr = 1; // If in browser environment\n\nif (typeof window !== 'undefined') {\n  dpr = Math.max(window.devicePixelRatio || 1, 1);\n}\n/**\n * config默认配置项\n * @exports zrender/config\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n/**\n * debug日志选项：catchBrushException为true下有效\n * 0 : 不生成debug数据，发布用\n * 1 : 异常抛出，调试用\n * 2 : 控制台输出，调试用\n */\n\n\nvar debugMode = 0; // retina 屏幕优化\n\nvar devicePixelRatio = dpr;\nexports.debugMode = debugMode;\nexports.devicePixelRatio = devicePixelRatio;\n\n/***/ }),\n\n/***/ 1011:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\n// TODO Parse shadow style\n// TODO Only shallow path support\nfunction _default(properties) {\n  // Normalize\n  for (var i = 0; i < properties.length; i++) {\n    if (!properties[i][1]) {\n      properties[i][1] = properties[i][0];\n    }\n  }\n\n  return function (model, excludes, includes) {\n    var style = {};\n\n    for (var i = 0; i < properties.length; i++) {\n      var propName = properties[i][1];\n\n      if (excludes && zrUtil.indexOf(excludes, propName) >= 0 || includes && zrUtil.indexOf(includes, propName) < 0) {\n        continue;\n      }\n\n      var val = model.getShallow(propName);\n\n      if (val != null) {\n        style[properties[i][0]] = val;\n      }\n    }\n\n    return style;\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1012:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar Group = __webpack_require__(1009);\n\nvar componentUtil = __webpack_require__(1027);\n\nvar clazzUtil = __webpack_require__(992);\n\nvar modelUtil = __webpack_require__(982);\n\nfunction Chart() {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewChart');\n}\n\nChart.prototype = {\n  type: 'chart',\n\n  /**\n   * Init the chart\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  init: function (ecModel, api) {},\n\n  /**\n   * Render the chart\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  render: function (seriesModel, ecModel, api, payload) {},\n\n  /**\n   * Highlight series or specified data item\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  highlight: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n  },\n\n  /**\n   * Downplay series or specified data item\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  downplay: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'normal');\n  },\n\n  /**\n   * Remove self\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  remove: function (ecModel, api) {\n    this.group.removeAll();\n  },\n\n  /**\n   * Dispose self\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  dispose: function () {}\n  /**\n   * The view contains the given point.\n   * @interface\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  // containPoint: function () {}\n\n};\nvar chartProto = Chart.prototype;\n\nchartProto.updateView = chartProto.updateLayout = chartProto.updateVisual = function (seriesModel, ecModel, api, payload) {\n  this.render(seriesModel, ecModel, api, payload);\n};\n/**\n * Set state of single element\n * @param  {module:zrender/Element} el\n * @param  {string} state\n */\n\n\nfunction elSetState(el, state) {\n  if (el) {\n    el.trigger(state);\n\n    if (el.type === 'group') {\n      for (var i = 0; i < el.childCount(); i++) {\n        elSetState(el.childAt(i), state);\n      }\n    }\n  }\n}\n/**\n * @param  {module:echarts/data/List} data\n * @param  {Object} payload\n * @param  {string} state 'normal'|'emphasis'\n * @inner\n */\n\n\nfunction toggleHighlight(data, payload, state) {\n  var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n  if (dataIndex != null) {\n    zrUtil.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n      elSetState(data.getItemGraphicEl(dataIdx), state);\n    });\n  } else {\n    data.eachItemGraphicEl(function (el) {\n      elSetState(el, state);\n    });\n  }\n} // Enable Chart.extend.\n\n\nclazzUtil.enableClassExtend(Chart, ['dispose']); // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Chart, {\n  registerWhenExtend: true\n});\nvar _default = Chart;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1013:\n/***/ (function(module, exports) {\n\nfunction defaultKeyGetter(item) {\n  return item;\n}\n/**\n * @param {Array} oldArr\n * @param {Array} newArr\n * @param {Function} oldKeyGetter\n * @param {Function} newKeyGetter\n * @param {Object} [context] Can be visited by this.context in callback.\n */\n\n\nfunction DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter, context) {\n  this._old = oldArr;\n  this._new = newArr;\n  this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n  this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n  this.context = context;\n}\n\nDataDiffer.prototype = {\n  constructor: DataDiffer,\n\n  /**\n   * Callback function when add a data\n   */\n  add: function (func) {\n    this._add = func;\n    return this;\n  },\n\n  /**\n   * Callback function when update a data\n   */\n  update: function (func) {\n    this._update = func;\n    return this;\n  },\n\n  /**\n   * Callback function when remove a data\n   */\n  remove: function (func) {\n    this._remove = func;\n    return this;\n  },\n  execute: function () {\n    var oldArr = this._old;\n    var newArr = this._new;\n    var oldDataIndexMap = {};\n    var newDataIndexMap = {};\n    var oldDataKeyArr = [];\n    var newDataKeyArr = [];\n    var i;\n    initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, '_oldKeyGetter', this);\n    initIndexMap(newArr, newDataIndexMap, newDataKeyArr, '_newKeyGetter', this); // Travel by inverted order to make sure order consistency\n    // when duplicate keys exists (consider newDataIndex.pop() below).\n    // For performance consideration, these code below do not look neat.\n\n    for (i = 0; i < oldArr.length; i++) {\n      var key = oldDataKeyArr[i];\n      var idx = newDataIndexMap[key]; // idx can never be empty array here. see 'set null' logic below.\n\n      if (idx != null) {\n        // Consider there is duplicate key (for example, use dataItem.name as key).\n        // We should make sure every item in newArr and oldArr can be visited.\n        var len = idx.length;\n\n        if (len) {\n          len === 1 && (newDataIndexMap[key] = null);\n          idx = idx.unshift();\n        } else {\n          newDataIndexMap[key] = null;\n        }\n\n        this._update && this._update(idx, i);\n      } else {\n        this._remove && this._remove(i);\n      }\n    }\n\n    for (var i = 0; i < newDataKeyArr.length; i++) {\n      var key = newDataKeyArr[i];\n\n      if (newDataIndexMap.hasOwnProperty(key)) {\n        var idx = newDataIndexMap[key];\n\n        if (idx == null) {\n          continue;\n        } // idx can never be empty array here. see 'set null' logic above.\n\n\n        if (!idx.length) {\n          this._add && this._add(idx);\n        } else {\n          for (var j = 0, len = idx.length; j < len; j++) {\n            this._add && this._add(idx[j]);\n          }\n        }\n      }\n    }\n  }\n};\n\nfunction initIndexMap(arr, map, keyArr, keyGetterName, dataDiffer) {\n  for (var i = 0; i < arr.length; i++) {\n    // Add prefix to avoid conflict with Object.prototype.\n    var key = '_ec_' + dataDiffer[keyGetterName](arr[i], i);\n    var existence = map[key];\n\n    if (existence == null) {\n      keyArr.push(key);\n      map[key] = i;\n    } else {\n      if (!existence.length) {\n        map[key] = existence = [existence];\n      }\n\n      existence.push(i);\n    }\n  }\n}\n\nvar _default = DataDiffer;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1014:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar clazzUtil = __webpack_require__(992);\n\n/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n/**\n * @param {Object} [setting]\n */\nfunction Scale(setting) {\n  this._setting = setting || {};\n  /**\n   * Extent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._extent = [Infinity, -Infinity];\n  /**\n   * Step is calculated in adjustExtent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._interval = 0;\n  this.init && this.init.apply(this, arguments);\n}\n/**\n * Parse input val to valid inner number.\n * @param {*} val\n * @return {number}\n */\n\n\nScale.prototype.parse = function (val) {\n  // Notice: This would be a trap here, If the implementation\n  // of this method depends on extent, and this method is used\n  // before extent set (like in dataZoom), it would be wrong.\n  // Nevertheless, parse does not depend on extent generally.\n  return val;\n};\n\nScale.prototype.getSetting = function (name) {\n  return this._setting[name];\n};\n\nScale.prototype.contain = function (val) {\n  var extent = this._extent;\n  return val >= extent[0] && val <= extent[1];\n};\n/**\n * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.normalize = function (val) {\n  var extent = this._extent;\n\n  if (extent[1] === extent[0]) {\n    return 0.5;\n  }\n\n  return (val - extent[0]) / (extent[1] - extent[0]);\n};\n/**\n * Scale normalized value\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.scale = function (val) {\n  var extent = this._extent;\n  return val * (extent[1] - extent[0]) + extent[0];\n};\n/**\n * Set extent from data\n * @param {Array.<number>} other\n */\n\n\nScale.prototype.unionExtent = function (other) {\n  var extent = this._extent;\n  other[0] < extent[0] && (extent[0] = other[0]);\n  other[1] > extent[1] && (extent[1] = other[1]); // not setExtent because in log axis it may transformed to power\n  // this.setExtent(extent[0], extent[1]);\n};\n/**\n * Set extent from data\n * @param {module:echarts/data/List} data\n * @param {string} dim\n */\n\n\nScale.prototype.unionExtentFromData = function (data, dim) {\n  this.unionExtent(data.getDataExtent(dim, true));\n};\n/**\n * Get extent\n * @return {Array.<number>}\n */\n\n\nScale.prototype.getExtent = function () {\n  return this._extent.slice();\n};\n/**\n * Set extent\n * @param {number} start\n * @param {number} end\n */\n\n\nScale.prototype.setExtent = function (start, end) {\n  var thisExtent = this._extent;\n\n  if (!isNaN(start)) {\n    thisExtent[0] = start;\n  }\n\n  if (!isNaN(end)) {\n    thisExtent[1] = end;\n  }\n};\n/**\n * @return {Array.<string>}\n */\n\n\nScale.prototype.getTicksLabels = function () {\n  var labels = [];\n  var ticks = this.getTicks();\n\n  for (var i = 0; i < ticks.length; i++) {\n    labels.push(this.getLabel(ticks[i]));\n  }\n\n  return labels;\n};\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\n\n\nScale.prototype.isBlank = function () {\n  return this._isBlank;\n},\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\nScale.prototype.setBlank = function (isBlank) {\n  this._isBlank = isBlank;\n};\nclazzUtil.enableClassExtend(Scale);\nclazzUtil.enableClassManagement(Scale, {\n  registerWhenExtend: true\n});\nvar _default = Scale;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1015:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar Model = __webpack_require__(989);\n\nvar each = zrUtil.each;\nvar curry = zrUtil.curry; // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n// allAxesInfo should be updated when setOption performed.\n\nfunction collect(ecModel, api) {\n  var result = {\n    /**\n     * key: makeKey(axis.model)\n     * value: {\n     *      axis,\n     *      coordSys,\n     *      axisPointerModel,\n     *      triggerTooltip,\n     *      involveSeries,\n     *      snap,\n     *      seriesModels,\n     *      seriesDataCount\n     * }\n     */\n    axesInfo: {},\n    seriesInvolved: false,\n\n    /**\n     * key: makeKey(coordSys.model)\n     * value: Object: key makeKey(axis.model), value: axisInfo\n     */\n    coordSysAxesInfo: {},\n    coordSysMap: {}\n  };\n  collectAxesInfo(result, ecModel, api); // Check seriesInvolved for performance, in case too many series in some chart.\n\n  result.seriesInvolved && collectSeriesInfo(result, ecModel);\n  return result;\n}\n\nfunction collectAxesInfo(result, ecModel, api) {\n  var globalTooltipModel = ecModel.getComponent('tooltip');\n  var globalAxisPointerModel = ecModel.getComponent('axisPointer'); // links can only be set on global.\n\n  var linksOption = globalAxisPointerModel.get('link', true) || [];\n  var linkGroups = []; // Collect axes info.\n\n  each(api.getCoordinateSystems(), function (coordSys) {\n    // Some coordinate system do not support axes, like geo.\n    if (!coordSys.axisPointerEnabled) {\n      return;\n    }\n\n    var coordSysKey = makeKey(coordSys.model);\n    var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n    result.coordSysMap[coordSysKey] = coordSys; // Set tooltip (like 'cross') is a convienent way to show axisPointer\n    // for user. So we enable seting tooltip on coordSys model.\n\n    var coordSysModel = coordSys.model;\n    var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n    each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null)); // If axis tooltip used, choose tooltip axis for each coordSys.\n    // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n\n    if (coordSys.getTooltipAxes && globalTooltipModel // If tooltip.showContent is set as false, tooltip will not\n    // show but axisPointer will show as normal.\n    && baseTooltipModel.get('show')) {\n      // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n      // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n      var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n      var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n      var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n\n      if (triggerAxis || cross) {\n        each(tooltipAxes.baseAxes, curry(saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis));\n      }\n\n      if (cross) {\n        each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n      }\n    } // fromTooltip: true | false | 'cross'\n    // triggerTooltip: true | false | null\n\n\n    function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n      var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n      var axisPointerShow = axisPointerModel.get('show');\n\n      if (!axisPointerShow || axisPointerShow === 'auto' && !fromTooltip && !isHandleTrigger(axisPointerModel)) {\n        return;\n      }\n\n      if (triggerTooltip == null) {\n        triggerTooltip = axisPointerModel.get('triggerTooltip');\n      }\n\n      axisPointerModel = fromTooltip ? makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) : axisPointerModel;\n      var snap = axisPointerModel.get('snap');\n      var key = makeKey(axis.model);\n      var involveSeries = triggerTooltip || snap || axis.type === 'category'; // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n\n      var axisInfo = result.axesInfo[key] = {\n        key: key,\n        axis: axis,\n        coordSys: coordSys,\n        axisPointerModel: axisPointerModel,\n        triggerTooltip: triggerTooltip,\n        involveSeries: involveSeries,\n        snap: snap,\n        useHandle: isHandleTrigger(axisPointerModel),\n        seriesModels: []\n      };\n      axesInfoInCoordSys[key] = axisInfo;\n      result.seriesInvolved |= involveSeries;\n      var groupIndex = getLinkGroupIndex(linksOption, axis);\n\n      if (groupIndex != null) {\n        var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {\n          axesInfo: {}\n        });\n        linkGroup.axesInfo[key] = axisInfo;\n        linkGroup.mapper = linksOption[groupIndex].mapper;\n        axisInfo.linkGroup = linkGroup;\n      }\n    }\n  });\n}\n\nfunction makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) {\n  var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n  var volatileOption = {};\n  each(['type', 'snap', 'lineStyle', 'shadowStyle', 'label', 'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'], function (field) {\n    volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n  }); // category axis do not auto snap, otherwise some tick that do not\n  // has value can not be hovered. value/time/log axis default snap if\n  // triggered from tooltip and trigger tooltip.\n\n  volatileOption.snap = axis.type !== 'category' && !!triggerTooltip; // Compatibel with previous behavior, tooltip axis do not show label by default.\n  // Only these properties can be overrided from tooltip to axisPointer.\n\n  if (tooltipAxisPointerModel.get('type') === 'cross') {\n    volatileOption.type = 'line';\n  }\n\n  var labelOption = volatileOption.label || (volatileOption.label = {}); // Follow the convention, do not show label when triggered by tooltip by default.\n\n  labelOption.show == null && (labelOption.show = false);\n\n  if (fromTooltip === 'cross') {\n    // When 'cross', both axes show labels.\n    labelOption.show = true; // If triggerTooltip, this is a base axis, which should better not use cross style\n    // (cross style is dashed by default)\n\n    if (!triggerTooltip) {\n      var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n      crossStyle && zrUtil.defaults(labelOption, crossStyle.textStyle);\n    }\n  }\n\n  return axis.model.getModel('axisPointer', new Model(volatileOption, globalAxisPointerModel, ecModel));\n}\n\nfunction collectSeriesInfo(result, ecModel) {\n  // Prepare data for axis trigger\n  ecModel.eachSeries(function (seriesModel) {\n    // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n    var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n\n    if (!coordSys || seriesTooltipTrigger === 'none' || seriesTooltipTrigger === false || seriesTooltipTrigger === 'item' || seriesTooltipShow === false || seriesModel.get('axisPointer.show', true) === false) {\n      return;\n    }\n\n    each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n      var axis = axisInfo.axis;\n\n      if (coordSys.getAxis(axis.dim) === axis) {\n        axisInfo.seriesModels.push(seriesModel);\n        axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n        axisInfo.seriesDataCount += seriesModel.getData().count();\n      }\n    });\n  }, this);\n}\n/**\n * For example:\n * {\n *     axisPointer: {\n *         links: [{\n *             xAxisIndex: [2, 4],\n *             yAxisIndex: 'all'\n *         }, {\n *             xAxisId: ['a5', 'a7'],\n *             xAxisName: 'xxx'\n *         }]\n *     }\n * }\n */\n\n\nfunction getLinkGroupIndex(linksOption, axis) {\n  var axisModel = axis.model;\n  var dim = axis.dim;\n\n  for (var i = 0; i < linksOption.length; i++) {\n    var linkOption = linksOption[i] || {};\n\n    if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id) || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex) || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)) {\n      return i;\n    }\n  }\n}\n\nfunction checkPropInLink(linkPropValue, axisPropValue) {\n  return linkPropValue === 'all' || zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0 || linkPropValue === axisPropValue;\n}\n\nfunction fixValue(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n\n  if (!axisInfo) {\n    return;\n  }\n\n  var axisPointerModel = axisInfo.axisPointerModel;\n  var scale = axisInfo.axis.scale;\n  var option = axisPointerModel.option;\n  var status = axisPointerModel.get('status');\n  var value = axisPointerModel.get('value'); // Parse init value for category and time axis.\n\n  if (value != null) {\n    value = scale.parse(value);\n  }\n\n  var useHandle = isHandleTrigger(axisPointerModel); // If `handle` used, `axisPointer` will always be displayed, so value\n  // and status should be initialized.\n\n  if (status == null) {\n    option.status = useHandle ? 'show' : 'hide';\n  }\n\n  var extent = scale.getExtent().slice();\n  extent[0] > extent[1] && extent.reverse();\n\n  if ( // Pick a value on axis when initializing.\n  value == null // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n  // where we should re-pick a value to keep `handle` displaying normally.\n  || value > extent[1]) {\n    // Make handle displayed on the end of the axis when init, which looks better.\n    value = extent[1];\n  }\n\n  if (value < extent[0]) {\n    value = extent[0];\n  }\n\n  option.value = value;\n\n  if (useHandle) {\n    option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n  }\n}\n\nfunction getAxisInfo(axisModel) {\n  var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n  return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n}\n\nfunction getAxisPointerModel(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n  return axisInfo && axisInfo.axisPointerModel;\n}\n\nfunction isHandleTrigger(axisPointerModel) {\n  return !!axisPointerModel.get('handle.show');\n}\n/**\n * @param {module:echarts/model/Model} model\n * @return {string} unique key\n */\n\n\nfunction makeKey(model) {\n  return model.type + '||' + model.id;\n}\n\nexports.collect = collect;\nexports.fixValue = fixValue;\nexports.getAxisInfo = getAxisInfo;\nexports.getAxisPointerModel = getAxisPointerModel;\nexports.makeKey = makeKey;\n\n/***/ }),\n\n/***/ 1016:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(983);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(978);\n\nvar List = __webpack_require__(995);\n\nvar completeDimensions = __webpack_require__(1004);\n\nvar _model = __webpack_require__(982);\n\nvar getDataItemValue = _model.getDataItemValue;\nvar converDataValue = _model.converDataValue;\nvar isDataItemOption = _model.isDataItemOption;\n\nvar CoordinateSystem = __webpack_require__(1006);\n\nfunction firstDataNotNull(data) {\n  var i = 0;\n\n  while (i < data.length && data[i] == null) {\n    i++;\n  }\n\n  return data[i];\n}\n\nfunction ifNeedCompleteOrdinalData(data) {\n  var sampleItem = firstDataNotNull(data);\n  return sampleItem != null && !zrUtil.isArray(getDataItemValue(sampleItem));\n}\n/**\n * Helper function to create a list from option data\n */\n\n\nfunction createListFromArray(data, seriesModel, ecModel) {\n  // If data is undefined\n  data = data || [];\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var creator = creators[coordSysName];\n  var registeredCoordSys = CoordinateSystem.get(coordSysName);\n  var completeDimOpt = {\n    encodeDef: seriesModel.get('encode'),\n    dimsDef: seriesModel.get('dimensions')\n  }; // FIXME\n\n  var axesInfo = creator && creator(data, seriesModel, ecModel, completeDimOpt);\n  var dimensions = axesInfo && axesInfo.dimensions;\n\n  if (!dimensions) {\n    // Get dimensions from registered coordinate system\n    dimensions = registeredCoordSys && (registeredCoordSys.getDimensionsInfo ? registeredCoordSys.getDimensionsInfo() : registeredCoordSys.dimensions.slice()) || ['x', 'y'];\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n  }\n\n  var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;\n  var list = new List(dimensions, seriesModel);\n  var nameList = createNameList(axesInfo, data);\n  var categories = {};\n  var dimValueGetter = categoryIndex >= 0 && ifNeedCompleteOrdinalData(data) ? function (itemOpt, dimName, dataIndex, dimIndex) {\n    // If any dataItem is like { value: 10 }\n    if (isDataItemOption(itemOpt)) {\n      list.hasItemOption = true;\n    } // Use dataIndex as ordinal value in categoryAxis\n\n\n    return dimIndex === categoryIndex ? dataIndex : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);\n  } : function (itemOpt, dimName, dataIndex, dimIndex) {\n    var value = getDataItemValue(itemOpt);\n    var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]); // If any dataItem is like { value: 10 }\n\n    if (isDataItemOption(itemOpt)) {\n      list.hasItemOption = true;\n    }\n\n    var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;\n\n    if (categoryAxesModels && categoryAxesModels[dimName]) {\n      // If given value is a category string\n      if (typeof val === 'string') {\n        // Lazy get categories\n        categories[dimName] = categories[dimName] || categoryAxesModels[dimName].getCategories();\n        val = zrUtil.indexOf(categories[dimName], val);\n\n        if (val < 0 && !isNaN(val)) {\n          // In case some one write '1', '2' istead of 1, 2\n          val = +val;\n        }\n      }\n    }\n\n    return val;\n  };\n  list.hasItemOption = false;\n  list.initData(data, nameList, dimValueGetter);\n  return list;\n}\n\nfunction isStackable(axisType) {\n  return axisType !== 'category' && axisType !== 'time';\n}\n\nfunction getDimTypeByAxis(axisType) {\n  return axisType === 'category' ? 'ordinal' : axisType === 'time' ? 'time' : 'float';\n}\n/**\n * Creaters for each coord system.\n */\n\n\nvar creators = {\n  cartesian2d: function (data, seriesModel, ecModel, completeDimOpt) {\n    var axesModels = zrUtil.map(['xAxis', 'yAxis'], function (name) {\n      return ecModel.queryComponents({\n        mainType: name,\n        index: seriesModel.get(name + 'Index'),\n        id: seriesModel.get(name + 'Id')\n      })[0];\n    });\n    var xAxisModel = axesModels[0];\n    var yAxisModel = axesModels[1];\n    var xAxisType = xAxisModel.get('type');\n    var yAxisType = yAxisModel.get('type');\n    var dimensions = [{\n      name: 'x',\n      type: getDimTypeByAxis(xAxisType),\n      stackable: isStackable(xAxisType)\n    }, {\n      name: 'y',\n      // If two category axes\n      type: getDimTypeByAxis(yAxisType),\n      stackable: isStackable(yAxisType)\n    }];\n    var isXAxisCateogry = xAxisType === 'category';\n    var isYAxisCategory = yAxisType === 'category';\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n    var categoryAxesModels = {};\n\n    if (isXAxisCateogry) {\n      categoryAxesModels.x = xAxisModel;\n    }\n\n    if (isYAxisCategory) {\n      categoryAxesModels.y = yAxisModel;\n    }\n\n    return {\n      dimensions: dimensions,\n      categoryIndex: isXAxisCateogry ? 0 : isYAxisCategory ? 1 : -1,\n      categoryAxesModels: categoryAxesModels\n    };\n  },\n  singleAxis: function (data, seriesModel, ecModel, completeDimOpt) {\n    var singleAxisModel = ecModel.queryComponents({\n      mainType: 'singleAxis',\n      index: seriesModel.get('singleAxisIndex'),\n      id: seriesModel.get('singleAxisId')\n    })[0];\n    var singleAxisType = singleAxisModel.get('type');\n    var isCategory = singleAxisType === 'category';\n    var dimensions = [{\n      name: 'single',\n      type: getDimTypeByAxis(singleAxisType),\n      stackable: isStackable(singleAxisType)\n    }];\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n    var categoryAxesModels = {};\n\n    if (isCategory) {\n      categoryAxesModels.single = singleAxisModel;\n    }\n\n    return {\n      dimensions: dimensions,\n      categoryIndex: isCategory ? 0 : -1,\n      categoryAxesModels: categoryAxesModels\n    };\n  },\n  polar: function (data, seriesModel, ecModel, completeDimOpt) {\n    var polarModel = ecModel.queryComponents({\n      mainType: 'polar',\n      index: seriesModel.get('polarIndex'),\n      id: seriesModel.get('polarId')\n    })[0];\n    var angleAxisModel = polarModel.findAxisModel('angleAxis');\n    var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n    var radiusAxisType = radiusAxisModel.get('type');\n    var angleAxisType = angleAxisModel.get('type');\n    var dimensions = [{\n      name: 'radius',\n      type: getDimTypeByAxis(radiusAxisType),\n      stackable: isStackable(radiusAxisType)\n    }, {\n      name: 'angle',\n      type: getDimTypeByAxis(angleAxisType),\n      stackable: isStackable(angleAxisType)\n    }];\n    var isAngleAxisCateogry = angleAxisType === 'category';\n    var isRadiusAxisCateogry = radiusAxisType === 'category';\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n    var categoryAxesModels = {};\n\n    if (isRadiusAxisCateogry) {\n      categoryAxesModels.radius = radiusAxisModel;\n    }\n\n    if (isAngleAxisCateogry) {\n      categoryAxesModels.angle = angleAxisModel;\n    }\n\n    return {\n      dimensions: dimensions,\n      categoryIndex: isAngleAxisCateogry ? 1 : isRadiusAxisCateogry ? 0 : -1,\n      categoryAxesModels: categoryAxesModels\n    };\n  },\n  geo: function (data, seriesModel, ecModel, completeDimOpt) {\n    // TODO Region\n    // 多个散点图系列在同一个地区的时候\n    return {\n      dimensions: completeDimensions([{\n        name: 'lng'\n      }, {\n        name: 'lat'\n      }], data, completeDimOpt)\n    };\n  }\n};\n\nfunction createNameList(result, data) {\n  var nameList = [];\n  var categoryDim = result && result.dimensions[result.categoryIndex];\n  var categoryAxisModel;\n\n  if (categoryDim) {\n    categoryAxisModel = result.categoryAxesModels[categoryDim.name];\n  }\n\n  if (categoryAxisModel) {\n    // FIXME Two category axis\n    var categories = categoryAxisModel.getCategories();\n\n    if (categories) {\n      var dataLen = data.length; // Ordered data is given explicitly like\n      // [[3, 0.2], [1, 0.3], [2, 0.15]]\n      // or given scatter data,\n      // pick the category\n\n      if (zrUtil.isArray(data[0]) && data[0].length > 1) {\n        nameList = [];\n\n        for (var i = 0; i < dataLen; i++) {\n          nameList[i] = categories[data[i][result.categoryIndex || 0]];\n        }\n      } else {\n        nameList = categories.slice(0);\n      }\n    }\n  }\n\n  return nameList;\n}\n\nvar _default = createListFromArray;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1017:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar numberUtil = __webpack_require__(981);\n\nvar axisHelper = __webpack_require__(996);\n\nvar linearMap = numberUtil.linearMap;\n\nfunction fixExtentWithBands(extent, nTick) {\n  var size = extent[1] - extent[0];\n  var len = nTick;\n  var margin = size / len / 2;\n  extent[0] += margin;\n  extent[1] -= margin;\n}\n\nvar normalizedExtent = [0, 1];\n/**\n * @name module:echarts/coord/CartesianAxis\n * @constructor\n */\n\nvar Axis = function (dim, scale, extent) {\n  /**\n   * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n   * @type {string}\n   */\n  this.dim = dim;\n  /**\n   * Axis scale\n   * @type {module:echarts/coord/scale/*}\n   */\n\n  this.scale = scale;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  this._extent = extent || [0, 0];\n  /**\n   * @type {boolean}\n   */\n\n  this.inverse = false;\n  /**\n   * Usually true when axis has a ordinal scale\n   * @type {boolean}\n   */\n\n  this.onBand = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._labelInterval;\n};\n\nAxis.prototype = {\n  constructor: Axis,\n\n  /**\n   * If axis extent contain given coord\n   * @param {number} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var extent = this._extent;\n    var min = Math.min(extent[0], extent[1]);\n    var max = Math.max(extent[0], extent[1]);\n    return coord >= min && coord <= max;\n  },\n\n  /**\n   * If axis extent contain given data\n   * @param {number} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.contain(this.dataToCoord(data));\n  },\n\n  /**\n   * Get coord extent.\n   * @return {Array.<number>}\n   */\n  getExtent: function () {\n    return this._extent.slice();\n  },\n\n  /**\n   * Get precision used for formatting\n   * @param {Array.<number>} [dataExtent]\n   * @return {number}\n   */\n  getPixelPrecision: function (dataExtent) {\n    return numberUtil.getPixelPrecision(dataExtent || this.scale.getExtent(), this._extent);\n  },\n\n  /**\n   * Set coord extent\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var extent = this._extent;\n    extent[0] = start;\n    extent[1] = end;\n  },\n\n  /**\n   * Convert data to coord. Data is the rank if it has a ordinal scale\n   * @param {number} data\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  dataToCoord: function (data, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n    data = scale.normalize(data);\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    return linearMap(data, normalizedExtent, extent, clamp);\n  },\n\n  /**\n   * Convert coord to data. Data is the rank if it has a ordinal scale\n   * @param {number} coord\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  coordToData: function (coord, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    var t = linearMap(coord, extent, normalizedExtent, clamp);\n    return this.scale.scale(t);\n  },\n\n  /**\n   * Convert pixel point to data in axis\n   * @param {Array.<number>} point\n   * @param  {boolean} clamp\n   * @return {number} data\n   */\n  pointToData: function (point, clamp) {// Should be implemented in derived class if necessary.\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicksCoords: function (alignWithLabel) {\n    if (this.onBand && !alignWithLabel) {\n      var bands = this.getBands();\n      var coords = [];\n\n      for (var i = 0; i < bands.length; i++) {\n        coords.push(bands[i][0]);\n      }\n\n      if (bands[i - 1]) {\n        coords.push(bands[i - 1][1]);\n      }\n\n      return coords;\n    } else {\n      return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n    }\n  },\n\n  /**\n   * Coords of labels are on the ticks or on the middle of bands\n   * @return {Array.<number>}\n   */\n  getLabelsCoords: function () {\n    return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n  },\n\n  /**\n   * Get bands.\n   *\n   * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n   * |---1---|---2---|---3---|---4---|.\n   *\n   * @return {Array}\n   */\n  // FIXME Situation when labels is on ticks\n  getBands: function () {\n    var extent = this.getExtent();\n    var bands = [];\n    var len = this.scale.count();\n    var start = extent[0];\n    var end = extent[1];\n    var span = end - start;\n\n    for (var i = 0; i < len; i++) {\n      bands.push([span * i / len + start, span * (i + 1) / len + start]);\n    }\n\n    return bands;\n  },\n\n  /**\n   * Get width of band\n   * @return {number}\n   */\n  getBandWidth: function () {\n    var axisExtent = this._extent;\n    var dataExtent = this.scale.getExtent();\n    var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0); // Fix #2728, avoid NaN when only one data.\n\n    len === 0 && (len = 1);\n    var size = Math.abs(axisExtent[1] - axisExtent[0]);\n    return Math.abs(size) / len;\n  },\n\n  /**\n   * @abstract\n   * @return {boolean} Is horizontal\n   */\n  isHorizontal: null,\n\n  /**\n   * @abstract\n   * @return {number} Get axis rotate, by degree.\n   */\n  getRotate: null,\n\n  /**\n   * Get interval of the axis label.\n   * To get precise result, at least one of `getRotate` and `isHorizontal`\n   * should be implemented.\n   * @return {number}\n   */\n  getLabelInterval: function () {\n    var labelInterval = this._labelInterval;\n\n    if (!labelInterval) {\n      var axisModel = this.model;\n      var labelModel = axisModel.getModel('axisLabel');\n      labelInterval = labelModel.get('interval');\n\n      if (this.type === 'category' && (labelInterval == null || labelInterval === 'auto')) {\n        labelInterval = axisHelper.getAxisLabelInterval(zrUtil.map(this.scale.getTicks(), this.dataToCoord, this), axisModel.getFormattedLabels(), labelModel.getFont(), this.getRotate ? this.getRotate() : this.isHorizontal && !this.isHorizontal() ? 90 : 0, labelModel.get('rotate'));\n      }\n\n      this._labelInterval = labelInterval;\n    }\n\n    return labelInterval;\n  }\n};\nvar _default = Axis;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1018:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar Style = __webpack_require__(1046);\n\nvar Element = __webpack_require__(1043);\n\nvar RectText = __webpack_require__(1071);\n\n/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n/**\n * @alias module:zrender/graphic/Displayable\n * @extends module:zrender/Element\n * @extends module:zrender/graphic/mixin/RectText\n */\nfunction Displayable(opts) {\n  opts = opts || {};\n  Element.call(this, opts); // Extend properties\n\n  for (var name in opts) {\n    if (opts.hasOwnProperty(name) && name !== 'style') {\n      this[name] = opts[name];\n    }\n  }\n  /**\n   * @type {module:zrender/graphic/Style}\n   */\n\n\n  this.style = new Style(opts.style, this);\n  this._rect = null; // Shapes for cascade clipping.\n\n  this.__clipPaths = []; // FIXME Stateful must be mixined after style is setted\n  // Stateful.call(this, opts);\n}\n\nDisplayable.prototype = {\n  constructor: Displayable,\n  type: 'displayable',\n\n  /**\n   * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n   * Dirty flag. From which painter will determine if this displayable object needs brush\n   * @name module:zrender/graphic/Displayable#__dirty\n   * @type {boolean}\n   */\n  __dirty: true,\n\n  /**\n   * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n   * If ignore drawing of the displayable object. Mouse event will still be triggered\n   * @name module:/zrender/graphic/Displayable#invisible\n   * @type {boolean}\n   * @default false\n   */\n  invisible: false,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z: 0,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z2: 0,\n\n  /**\n   * z层level，决定绘画在哪层canvas中\n   * @name module:/zrender/graphic/Displayable#zlevel\n   * @type {number}\n   * @default 0\n   */\n  zlevel: 0,\n\n  /**\n   * 是否可拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  draggable: false,\n\n  /**\n   * 是否正在拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  dragging: false,\n\n  /**\n   * 是否相应鼠标事件\n   * @name module:/zrender/graphic/Displayable#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * If enable culling\n   * @type {boolean}\n   * @default false\n   */\n  culling: false,\n\n  /**\n   * Mouse cursor when hovered\n   * @name module:/zrender/graphic/Displayable#cursor\n   * @type {string}\n   */\n  cursor: 'pointer',\n\n  /**\n   * If hover area is bounding rect\n   * @name module:/zrender/graphic/Displayable#rectHover\n   * @type {string}\n   */\n  rectHover: false,\n\n  /**\n   * Render the element progressively when the value >= 0,\n   * usefull for large data.\n   * @type {number}\n   */\n  progressive: -1,\n  beforeBrush: function (ctx) {},\n  afterBrush: function (ctx) {},\n\n  /**\n   * 图形绘制方法\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  // Interface\n  brush: function (ctx, prevEl) {},\n\n  /**\n   * 获取最小包围盒\n   * @return {module:zrender/core/BoundingRect}\n   */\n  // Interface\n  getBoundingRect: function () {},\n\n  /**\n   * 判断坐标 x, y 是否在图形上\n   * If displayable element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  contain: function (x, y) {\n    return this.rectContain(x, y);\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    cb.call(context, this);\n  },\n\n  /**\n   * 判断坐标 x, y 是否在图形的包围盒上\n   * If bounding rect of element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  rectContain: function (x, y) {\n    var coord = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    return rect.contain(coord[0], coord[1]);\n  },\n\n  /**\n   * 标记图形元素为脏，并且在下一帧重绘\n   * Mark displayable element dirty and refresh next frame\n   */\n  dirty: function () {\n    this.__dirty = true;\n    this._rect = null;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * 图形是否会触发事件\n   * If displayable object binded any event\n   * @return {boolean}\n   */\n  // TODO, 通过 bind 绑定的事件\n  // isSilent: function () {\n  //     return !(\n  //         this.hoverable || this.draggable\n  //         || this.onmousemove || this.onmouseover || this.onmouseout\n  //         || this.onmousedown || this.onmouseup || this.onclick\n  //         || this.ondragenter || this.ondragover || this.ondragleave\n  //         || this.ondrop\n  //     );\n  // },\n\n  /**\n   * Alias for animate('style')\n   * @param {boolean} loop\n   */\n  animateStyle: function (loop) {\n    return this.animate('style', loop);\n  },\n  attrKV: function (key, value) {\n    if (key !== 'style') {\n      Element.prototype.attrKV.call(this, key, value);\n    } else {\n      this.style.set(value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setStyle: function (key, value) {\n    this.style.set(key, value);\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * Use given style object\n   * @param  {Object} obj\n   */\n  useStyle: function (obj) {\n    this.style = new Style(obj, this);\n    this.dirty(false);\n    return this;\n  }\n};\nzrUtil.inherits(Displayable, Element);\nzrUtil.mixin(Displayable, RectText); // zrUtil.mixin(Displayable, Stateful);\n\nvar _default = Displayable;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1019:\n/***/ (function(module, exports) {\n\n/**\n * @param {Array.<Object>} colorStops\n */\nvar Gradient = function (colorStops) {\n  this.colorStops = colorStops || [];\n};\n\nGradient.prototype = {\n  constructor: Gradient,\n  addColorStop: function (offset, color) {\n    this.colorStops.push({\n      offset: offset,\n      color: color\n    });\n  }\n};\nvar _default = Gradient;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1020:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar numberUtil = __webpack_require__(981);\n\nvar formatUtil = __webpack_require__(985);\n\nvar Scale = __webpack_require__(1014);\n\nvar helper = __webpack_require__(1054);\n\n/**\n * Interval scale\n * @module echarts/scale/Interval\n */\nvar roundNumber = numberUtil.round;\n/**\n * @alias module:echarts/coord/scale/Interval\n * @constructor\n */\n\nvar IntervalScale = Scale.extend({\n  type: 'interval',\n  _interval: 0,\n  _intervalPrecision: 2,\n  setExtent: function (start, end) {\n    var thisExtent = this._extent; //start,end may be a Number like '25',so...\n\n    if (!isNaN(start)) {\n      thisExtent[0] = parseFloat(start);\n    }\n\n    if (!isNaN(end)) {\n      thisExtent[1] = parseFloat(end);\n    }\n  },\n  unionExtent: function (other) {\n    var extent = this._extent;\n    other[0] < extent[0] && (extent[0] = other[0]);\n    other[1] > extent[1] && (extent[1] = other[1]); // unionExtent may called by it's sub classes\n\n    IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n  },\n\n  /**\n   * Get interval\n   */\n  getInterval: function () {\n    return this._interval;\n  },\n\n  /**\n   * Set interval\n   */\n  setInterval: function (interval) {\n    this._interval = interval; // Dropped auto calculated niceExtent and use user setted extent\n    // We assume user wan't to set both interval, min, max to get a better result\n\n    this._niceExtent = this._extent.slice();\n    this._intervalPrecision = helper.getIntervalPrecision(interval);\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    return helper.intervalScaleGetTicks(this._interval, this._extent, this._niceExtent, this._intervalPrecision);\n  },\n\n  /**\n   * @return {Array.<string>}\n   */\n  getTicksLabels: function () {\n    var labels = [];\n    var ticks = this.getTicks();\n\n    for (var i = 0; i < ticks.length; i++) {\n      labels.push(this.getLabel(ticks[i]));\n    }\n\n    return labels;\n  },\n\n  /**\n   * @param {number} data\n   * @param {Object} [opt]\n   * @param {number|string} [opt.precision] If 'auto', use nice presision.\n   * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n   * @return {string}\n   */\n  getLabel: function (data, opt) {\n    if (data == null) {\n      return '';\n    }\n\n    var precision = opt && opt.precision;\n\n    if (precision == null) {\n      precision = numberUtil.getPrecisionSafe(data) || 0;\n    } else if (precision === 'auto') {\n      // Should be more precise then tick.\n      precision = this._intervalPrecision;\n    } // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n    // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n\n\n    data = roundNumber(data, precision, true);\n    return formatUtil.addCommas(data);\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   *\n   * @param {number} [splitNumber = 5] Desired number of ticks\n   * @param {number} [minInterval]\n   * @param {number} [maxInterval]\n   */\n  niceTicks: function (splitNumber, minInterval, maxInterval) {\n    splitNumber = splitNumber || 5;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (!isFinite(span)) {\n      return;\n    } // User may set axis min 0 and data are all negative\n    // FIXME If it needs to reverse ?\n\n\n    if (span < 0) {\n      span = -span;\n      extent.reverse();\n    }\n\n    var result = helper.intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval);\n    this._intervalPrecision = result.intervalPrecision;\n    this._interval = result.interval;\n    this._niceExtent = result.niceTickExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @param {Object} opt\n   * @param {number} [opt.splitNumber = 5] Given approx tick number\n   * @param {boolean} [opt.fixMin=false]\n   * @param {boolean} [opt.fixMax=false]\n   * @param {boolean} [opt.minInterval]\n   * @param {boolean} [opt.maxInterval]\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      if (extent[0] !== 0) {\n        // Expand extent\n        var expandSize = extent[0]; // In the fowllowing case\n        //      Axis has been fixed max 100\n        //      Plus data are all 100 and axis extent are [100, 100].\n        // Extend to the both side will cause expanded max is larger than fixed max.\n        // So only expand to the smaller side.\n\n        if (!opt.fixMax) {\n          extent[1] += expandSize / 2;\n          extent[0] -= expandSize / 2;\n        } else {\n          extent[0] -= expandSize / 2;\n        }\n      } else {\n        extent[1] = 1;\n      }\n    }\n\n    var span = extent[1] - extent[0]; // If there are no data and extent are [Infinity, -Infinity]\n\n    if (!isFinite(span)) {\n      extent[0] = 0;\n      extent[1] = 1;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n    }\n  }\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nIntervalScale.create = function () {\n  return new IntervalScale();\n};\n\nvar _default = IntervalScale;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1021:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(978);\n\nvar retrieve = _util.retrieve;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar each = _util.each;\n\nvar formatUtil = __webpack_require__(985);\n\nvar graphic = __webpack_require__(980);\n\nvar Model = __webpack_require__(989);\n\nvar _number = __webpack_require__(981);\n\nvar isRadianAroundZero = _number.isRadianAroundZero;\nvar remRadian = _number.remRadian;\n\nvar _symbol = __webpack_require__(1003);\n\nvar createSymbol = _symbol.createSymbol;\n\nvar matrixUtil = __webpack_require__(994);\n\nvar _vector = __webpack_require__(984);\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar PI = Math.PI;\n\nfunction makeAxisEventDataBase(axisModel) {\n  var eventData = {\n    componentType: axisModel.mainType\n  };\n  eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n  return eventData;\n}\n/**\n * A final axis is translated and rotated from a \"standard axis\".\n * So opt.position and opt.rotation is required.\n *\n * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n * for example: (0, 0) ------------> (0, 50)\n *\n * nameDirection or tickDirection or labelDirection is 1 means tick\n * or label is below the standard axis, whereas is -1 means above\n * the standard axis. labelOffset means offset between label and axis,\n * which is useful when 'onZero', where axisLabel is in the grid and\n * label in outside grid.\n *\n * Tips: like always,\n * positive rotation represents anticlockwise, and negative rotation\n * represents clockwise.\n * The direction of position coordinate is the same as the direction\n * of screen coordinate.\n *\n * Do not need to consider axis 'inverse', which is auto processed by\n * axis extent.\n *\n * @param {module:zrender/container/Group} group\n * @param {Object} axisModel\n * @param {Object} opt Standard axis parameters.\n * @param {Array.<number>} opt.position [x, y]\n * @param {number} opt.rotation by radian\n * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle' or 'center'.\n * @param {number} [opt.tickDirection=1] 1 or -1\n * @param {number} [opt.labelDirection=1] 1 or -1\n * @param {number} [opt.labelOffset=0] Usefull when onZero.\n * @param {string} [opt.axisLabelShow] default get from axisModel.\n * @param {string} [opt.axisName] default get from axisModel.\n * @param {number} [opt.axisNameAvailableWidth]\n * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n * @param {number} [opt.labelInterval] Default label interval when label\n *                                     interval from model is null or 'auto'.\n * @param {number} [opt.strokeContainThreshold] Default label interval when label\n * @param {number} [opt.nameTruncateMaxWidth]\n */\n\n\nvar AxisBuilder = function (axisModel, opt) {\n  /**\n   * @readOnly\n   */\n  this.opt = opt;\n  /**\n   * @readOnly\n   */\n\n  this.axisModel = axisModel; // Default value\n\n  defaults(opt, {\n    labelOffset: 0,\n    nameDirection: 1,\n    tickDirection: 1,\n    labelDirection: 1,\n    silent: true\n  });\n  /**\n   * @readOnly\n   */\n\n  this.group = new graphic.Group(); // FIXME Not use a seperate text group?\n\n  var dumbGroup = new graphic.Group({\n    position: opt.position.slice(),\n    rotation: opt.rotation\n  }); // this.group.add(dumbGroup);\n  // this._dumbGroup = dumbGroup;\n\n  dumbGroup.updateTransform();\n  this._transform = dumbGroup.transform;\n  this._dumbGroup = dumbGroup;\n};\n\nAxisBuilder.prototype = {\n  constructor: AxisBuilder,\n  hasBuilder: function (name) {\n    return !!builders[name];\n  },\n  add: function (name) {\n    builders[name].call(this);\n  },\n  getGroup: function () {\n    return this.group;\n  }\n};\nvar builders = {\n  /**\n   * @private\n   */\n  axisLine: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n\n    if (!axisModel.get('axisLine.show')) {\n      return;\n    }\n\n    var extent = this.axisModel.axis.getExtent();\n    var matrix = this._transform;\n    var pt1 = [extent[0], 0];\n    var pt2 = [extent[1], 0];\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    }\n\n    var lineStyle = extend({\n      lineCap: 'round'\n    }, axisModel.getModel('axisLine.lineStyle').getLineStyle());\n    this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'line',\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: lineStyle,\n      strokeContainThreshold: opt.strokeContainThreshold || 5,\n      silent: true,\n      z2: 1\n    })));\n    var arrows = axisModel.get('axisLine.symbol');\n    var arrowSize = axisModel.get('axisLine.symbolSize');\n\n    if (arrows != null) {\n      if (typeof arrows === 'string') {\n        // Use the same arrow for start and end point\n        arrows = [arrows, arrows];\n      }\n\n      if (typeof arrowSize === 'string' || typeof arrowSize === 'number') {\n        // Use the same size for width and height\n        arrowSize = [arrowSize, arrowSize];\n      }\n\n      var symbolWidth = arrowSize[0];\n      var symbolHeight = arrowSize[1];\n      each([[opt.rotation + Math.PI / 2, pt1], [opt.rotation - Math.PI / 2, pt2]], function (item, index) {\n        if (arrows[index] !== 'none' && arrows[index] != null) {\n          var symbol = createSymbol(arrows[index], -symbolWidth / 2, -symbolHeight / 2, symbolWidth, symbolHeight, lineStyle.stroke, true);\n          symbol.attr({\n            rotation: item[0],\n            position: item[1],\n            silent: true\n          });\n          this.group.add(symbol);\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  axisTickLabel: function () {\n    var axisModel = this.axisModel;\n    var opt = this.opt;\n    var tickEls = buildAxisTick(this, axisModel, opt);\n    var labelEls = buildAxisLabel(this, axisModel, opt);\n    fixMinMaxLabelShow(axisModel, labelEls, tickEls);\n  },\n\n  /**\n   * @private\n   */\n  axisName: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n    var name = retrieve(opt.axisName, axisModel.get('name'));\n\n    if (!name) {\n      return;\n    }\n\n    var nameLocation = axisModel.get('nameLocation');\n    var nameDirection = opt.nameDirection;\n    var textStyleModel = axisModel.getModel('nameTextStyle');\n    var gap = axisModel.get('nameGap') || 0;\n    var extent = this.axisModel.axis.getExtent();\n    var gapSignal = extent[0] > extent[1] ? -1 : 1;\n    var pos = [nameLocation === 'start' ? extent[0] - gapSignal * gap : nameLocation === 'end' ? extent[1] + gapSignal * gap : (extent[0] + extent[1]) / 2, // 'middle'\n    // Reuse labelOffset.\n    isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0];\n    var labelLayout;\n    var nameRotation = axisModel.get('nameRotate');\n\n    if (nameRotation != null) {\n      nameRotation = nameRotation * PI / 180; // To radian.\n    }\n\n    var axisNameAvailableWidth;\n\n    if (isNameLocationCenter(nameLocation)) {\n      labelLayout = innerTextLayout(opt.rotation, nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n      nameDirection);\n    } else {\n      labelLayout = endTextLayout(opt, nameLocation, nameRotation || 0, extent);\n      axisNameAvailableWidth = opt.axisNameAvailableWidth;\n\n      if (axisNameAvailableWidth != null) {\n        axisNameAvailableWidth = Math.abs(axisNameAvailableWidth / Math.sin(labelLayout.rotation));\n        !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n      }\n    }\n\n    var textFont = textStyleModel.getFont();\n    var truncateOpt = axisModel.get('nameTruncate', true) || {};\n    var ellipsis = truncateOpt.ellipsis;\n    var maxWidth = retrieve(opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth); // FIXME\n    // truncate rich text? (consider performance)\n\n    var truncatedText = ellipsis != null && maxWidth != null ? formatUtil.truncateText(name, maxWidth, textFont, ellipsis, {\n      minChar: 2,\n      placeholder: truncateOpt.placeholder\n    }) : name;\n    var tooltipOpt = axisModel.get('tooltip', true);\n    var mainType = axisModel.mainType;\n    var formatterParams = {\n      componentType: mainType,\n      name: name,\n      $vars: ['name']\n    };\n    formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'name',\n      __fullText: name,\n      __truncatedText: truncatedText,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: isSilent(axisModel),\n      z2: 1,\n      tooltip: tooltipOpt && tooltipOpt.show ? extend({\n        content: name,\n        formatter: function () {\n          return name;\n        },\n        formatterParams: formatterParams\n      }, tooltipOpt) : null\n    });\n    graphic.setTextStyle(textEl.style, textStyleModel, {\n      text: truncatedText,\n      textFont: textFont,\n      textFill: textStyleModel.getTextColor() || axisModel.get('axisLine.lineStyle.color'),\n      textAlign: labelLayout.textAlign,\n      textVerticalAlign: labelLayout.textVerticalAlign\n    });\n\n    if (axisModel.get('triggerEvent')) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisName';\n      textEl.eventData.name = name;\n    } // FIXME\n\n\n    this._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    this.group.add(textEl);\n    textEl.decomposeTransform();\n  }\n};\n/**\n * @public\n * @static\n * @param {Object} opt\n * @param {number} axisRotation in radian\n * @param {number} textRotation in radian\n * @param {number} direction\n * @return {Object} {\n *  rotation, // according to axis\n *  textAlign,\n *  textVerticalAlign\n * }\n */\n\nvar innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n  var rotationDiff = remRadian(textRotation - axisRotation);\n  var textAlign;\n  var textVerticalAlign;\n\n  if (isRadianAroundZero(rotationDiff)) {\n    // Label is parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI)) {\n    // Label is inverse parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff > 0 && rotationDiff < PI) {\n      textAlign = direction > 0 ? 'right' : 'left';\n    } else {\n      textAlign = direction > 0 ? 'left' : 'right';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n};\n\nfunction endTextLayout(opt, textPosition, textRotate, extent) {\n  var rotationDiff = remRadian(textRotate - opt.rotation);\n  var textAlign;\n  var textVerticalAlign;\n  var inverse = extent[0] > extent[1];\n  var onLeft = textPosition === 'start' && !inverse || textPosition !== 'start' && inverse;\n\n  if (isRadianAroundZero(rotationDiff - PI / 2)) {\n    textVerticalAlign = onLeft ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n    textVerticalAlign = onLeft ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n      textAlign = onLeft ? 'left' : 'right';\n    } else {\n      textAlign = onLeft ? 'right' : 'left';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction isSilent(axisModel) {\n  var tooltipOpt = axisModel.get('tooltip');\n  return axisModel.get('silent') // Consider mouse cursor, add these restrictions.\n  || !(axisModel.get('triggerEvent') || tooltipOpt && tooltipOpt.show);\n}\n\nfunction fixMinMaxLabelShow(axisModel, labelEls, tickEls) {\n  // If min or max are user set, we need to check\n  // If the tick on min(max) are overlap on their neighbour tick\n  // If they are overlapped, we need to hide the min(max) tick label\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel'); // FIXME\n  // Have not consider onBand yet, where tick els is more than label els.\n\n  labelEls = labelEls || [];\n  tickEls = tickEls || [];\n  var firstLabel = labelEls[0];\n  var nextLabel = labelEls[1];\n  var lastLabel = labelEls[labelEls.length - 1];\n  var prevLabel = labelEls[labelEls.length - 2];\n  var firstTick = tickEls[0];\n  var nextTick = tickEls[1];\n  var lastTick = tickEls[tickEls.length - 1];\n  var prevTick = tickEls[tickEls.length - 2];\n\n  if (showMinLabel === false) {\n    ignoreEl(firstLabel);\n    ignoreEl(firstTick);\n  } else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n    if (showMinLabel) {\n      ignoreEl(nextLabel);\n      ignoreEl(nextTick);\n    } else {\n      ignoreEl(firstLabel);\n      ignoreEl(firstTick);\n    }\n  }\n\n  if (showMaxLabel === false) {\n    ignoreEl(lastLabel);\n    ignoreEl(lastTick);\n  } else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n    if (showMaxLabel) {\n      ignoreEl(prevLabel);\n      ignoreEl(prevTick);\n    } else {\n      ignoreEl(lastLabel);\n      ignoreEl(lastTick);\n    }\n  }\n}\n\nfunction ignoreEl(el) {\n  el && (el.ignore = true);\n}\n\nfunction isTwoLabelOverlapped(current, next, labelLayout) {\n  // current and next has the same rotation.\n  var firstRect = current && current.getBoundingRect().clone();\n  var nextRect = next && next.getBoundingRect().clone();\n\n  if (!firstRect || !nextRect) {\n    return;\n  } // When checking intersect of two rotated labels, we use mRotationBack\n  // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n\n\n  var mRotationBack = matrixUtil.identity([]);\n  matrixUtil.rotate(mRotationBack, mRotationBack, -current.rotation);\n  firstRect.applyTransform(matrixUtil.mul([], mRotationBack, current.getLocalTransform()));\n  nextRect.applyTransform(matrixUtil.mul([], mRotationBack, next.getLocalTransform()));\n  return firstRect.intersect(nextRect);\n}\n\nfunction isNameLocationCenter(nameLocation) {\n  return nameLocation === 'middle' || nameLocation === 'center';\n}\n/**\n * @static\n */\n\n\nvar ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval, ticksCnt, showMinLabel, showMaxLabel) {\n  if (i === 0 && showMinLabel || i === ticksCnt - 1 && showMaxLabel) {\n    return false;\n  } // FIXME\n  // Have not consider label overlap (if label is too long) yet.\n\n\n  var rawTick;\n  var scale = axis.scale;\n  return scale.type === 'ordinal' && (typeof interval === 'function' ? (rawTick = scale.getTicks()[i], !interval(rawTick, scale.getLabel(rawTick))) : i % (interval + 1));\n};\n/**\n * @static\n */\n\n\nvar getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n  var interval = model.get('interval');\n\n  if (interval == null || interval == 'auto') {\n    interval = labelInterval;\n  }\n\n  return interval;\n};\n\nfunction buildAxisTick(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n\n  if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n    return;\n  }\n\n  var tickModel = axisModel.getModel('axisTick');\n  var lineStyleModel = tickModel.getModel('lineStyle');\n  var tickLen = tickModel.get('length');\n  var tickInterval = getInterval(tickModel, opt.labelInterval);\n  var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel')); // FIXME\n  // Corresponds to ticksCoords ?\n\n  var ticks = axis.scale.getTicks();\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n  var pt1 = [];\n  var pt2 = [];\n  var matrix = axisBuilder._transform;\n  var tickEls = [];\n  var ticksCnt = ticksCoords.length;\n\n  for (var i = 0; i < ticksCnt; i++) {\n    // Only ordinal scale support tick interval\n    if (ifIgnoreOnTick(axis, i, tickInterval, ticksCnt, showMinLabel, showMaxLabel)) {\n      continue;\n    }\n\n    var tickCoord = ticksCoords[i];\n    pt1[0] = tickCoord;\n    pt1[1] = 0;\n    pt2[0] = tickCoord;\n    pt2[1] = opt.tickDirection * tickLen;\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    } // Tick line, Not use group transform to have better line draw\n\n\n    var tickEl = new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'tick_' + ticks[i],\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: defaults(lineStyleModel.getLineStyle(), {\n        stroke: axisModel.get('axisLine.lineStyle.color')\n      }),\n      z2: 2,\n      silent: true\n    }));\n    axisBuilder.group.add(tickEl);\n    tickEls.push(tickEl);\n  }\n\n  return tickEls;\n}\n\nfunction buildAxisLabel(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n  var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n  if (!show || axis.scale.isBlank()) {\n    return;\n  }\n\n  var labelModel = axisModel.getModel('axisLabel');\n  var labelMargin = labelModel.get('margin');\n  var ticks = axis.scale.getTicks();\n  var labels = axisModel.getFormattedLabels(); // Special label rotate.\n\n  var labelRotation = (retrieve(opt.labelRotate, labelModel.get('rotate')) || 0) * PI / 180;\n  var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n  var categoryData = axisModel.get('data');\n  var labelEls = [];\n  var silent = isSilent(axisModel);\n  var triggerEvent = axisModel.get('triggerEvent');\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n  each(ticks, function (tickVal, index) {\n    if (ifIgnoreOnTick(axis, index, opt.labelInterval, ticks.length, showMinLabel, showMaxLabel)) {\n      return;\n    }\n\n    var itemLabelModel = labelModel;\n\n    if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n      itemLabelModel = new Model(categoryData[tickVal].textStyle, labelModel, axisModel.ecModel);\n    }\n\n    var textColor = itemLabelModel.getTextColor() || axisModel.get('axisLine.lineStyle.color');\n    var tickCoord = axis.dataToCoord(tickVal);\n    var pos = [tickCoord, opt.labelOffset + opt.labelDirection * labelMargin];\n    var labelStr = axis.scale.getLabel(tickVal);\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'label_' + tickVal,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: silent,\n      z2: 10\n    });\n    graphic.setTextStyle(textEl.style, itemLabelModel, {\n      text: labels[index],\n      textAlign: itemLabelModel.getShallow('align', true) || labelLayout.textAlign,\n      textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true) || itemLabelModel.getShallow('baseline', true) || labelLayout.textVerticalAlign,\n      textFill: typeof textColor === 'function' ? textColor( // (1) In category axis with data zoom, tick is not the original\n      // index of axis.data. So tick should not be exposed to user\n      // in category axis.\n      // (2) Compatible with previous version, which always returns labelStr.\n      // But in interval scale labelStr is like '223,445', which maked\n      // user repalce ','. So we modify it to return original val but remain\n      // it as 'string' to avoid error in replacing.\n      axis.type === 'category' ? labelStr : axis.type === 'value' ? tickVal + '' : tickVal, index) : textColor\n    }); // Pack data for mouse event\n\n    if (triggerEvent) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisLabel';\n      textEl.eventData.value = labelStr;\n    } // FIXME\n\n\n    axisBuilder._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    labelEls.push(textEl);\n    axisBuilder.group.add(textEl);\n    textEl.decomposeTransform();\n  });\n  return labelEls;\n}\n\nvar _default = AxisBuilder;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1022:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(983);\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = __webpack_require__(979);\n\nvar axisPointerModelHelper = __webpack_require__(1015);\n\n/**\n * Base class of AxisView.\n */\nvar AxisView = echarts.extendComponentView({\n  type: 'axis',\n\n  /**\n   * @private\n   */\n  _axisPointer: null,\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  axisPointerClass: null,\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    // FIXME\n    // This process should proformed after coordinate systems updated\n    // (axis scale updated), and should be performed each time update.\n    // So put it here temporarily, although it is not appropriate to\n    // put a model-writing procedure in `view`.\n    this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n    AxisView.superApply(this, 'render', arguments);\n    updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n  },\n\n  /**\n   * Action handler.\n   * @public\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/model/Global} ecModel\n   * @param {module:echarts/ExtensionAPI} api\n   * @param {Object} payload\n   */\n  updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n    updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    var axisPointer = this._axisPointer;\n    axisPointer && axisPointer.remove(api);\n    AxisView.superApply(this, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    disposeAxisPointer(this, api);\n    AxisView.superApply(this, 'dispose', arguments);\n  }\n});\n\nfunction updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n  var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n\n  if (!Clazz) {\n    return;\n  }\n\n  var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n  axisPointerModel ? (axisView._axisPointer || (axisView._axisPointer = new Clazz())).render(axisModel, axisPointerModel, api, forceRender) : disposeAxisPointer(axisView, api);\n}\n\nfunction disposeAxisPointer(axisView, ecModel, api) {\n  var axisPointer = axisView._axisPointer;\n  axisPointer && axisPointer.dispose(ecModel, api);\n  axisView._axisPointer = null;\n}\n\nvar axisPointerClazz = [];\n\nAxisView.registerAxisPointerClass = function (type, clazz) {\n  axisPointerClazz[type] = clazz;\n};\n\nAxisView.getAxisPointerClass = function (type) {\n  return type && axisPointerClazz[type];\n};\n\nvar _default = AxisView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1023:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(1010);\n\nvar debugMode = _config.debugMode;\n\nvar log = function () {};\n\nif (debugMode === 1) {\n  log = function () {\n    for (var k in arguments) {\n      throw new Error(arguments[k]);\n    }\n  };\n} else if (debugMode > 1) {\n  log = function () {\n    for (var k in arguments) {\n      console.log(arguments[k]);\n    }\n  };\n}\n\nvar _default = log;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1024:\n/***/ (function(module, exports) {\n\n// https://github.com/mziccard/node-timsort\nvar DEFAULT_MIN_MERGE = 32;\nvar DEFAULT_MIN_GALLOPING = 7;\nvar DEFAULT_TMP_STORAGE_LENGTH = 256;\n\nfunction minRunLength(n) {\n  var r = 0;\n\n  while (n >= DEFAULT_MIN_MERGE) {\n    r |= n & 1;\n    n >>= 1;\n  }\n\n  return n + r;\n}\n\nfunction makeAscendingRun(array, lo, hi, compare) {\n  var runHi = lo + 1;\n\n  if (runHi === hi) {\n    return 1;\n  }\n\n  if (compare(array[runHi++], array[lo]) < 0) {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n      runHi++;\n    }\n\n    reverseRun(array, lo, runHi);\n  } else {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n      runHi++;\n    }\n  }\n\n  return runHi - lo;\n}\n\nfunction reverseRun(array, lo, hi) {\n  hi--;\n\n  while (lo < hi) {\n    var t = array[lo];\n    array[lo++] = array[hi];\n    array[hi--] = t;\n  }\n}\n\nfunction binaryInsertionSort(array, lo, hi, start, compare) {\n  if (start === lo) {\n    start++;\n  }\n\n  for (; start < hi; start++) {\n    var pivot = array[start];\n    var left = lo;\n    var right = start;\n    var mid;\n\n    while (left < right) {\n      mid = left + right >>> 1;\n\n      if (compare(pivot, array[mid]) < 0) {\n        right = mid;\n      } else {\n        left = mid + 1;\n      }\n    }\n\n    var n = start - left;\n\n    switch (n) {\n      case 3:\n        array[left + 3] = array[left + 2];\n\n      case 2:\n        array[left + 2] = array[left + 1];\n\n      case 1:\n        array[left + 1] = array[left];\n        break;\n\n      default:\n        while (n > 0) {\n          array[left + n] = array[left + n - 1];\n          n--;\n        }\n\n    }\n\n    array[left] = pivot;\n  }\n}\n\nfunction gallopLeft(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) > 0) {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  } else {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) > 0) {\n      lastOffset = m + 1;\n    } else {\n      offset = m;\n    }\n  }\n\n  return offset;\n}\n\nfunction gallopRight(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) < 0) {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  } else {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) < 0) {\n      offset = m;\n    } else {\n      lastOffset = m + 1;\n    }\n  }\n\n  return offset;\n}\n\nfunction TimSort(array, compare) {\n  var minGallop = DEFAULT_MIN_GALLOPING;\n  var length = 0;\n  var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n  var stackLength = 0;\n  var runStart;\n  var runLength;\n  var stackSize = 0;\n  length = array.length;\n\n  if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n    tmpStorageLength = length >>> 1;\n  }\n\n  var tmp = [];\n  stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n  runStart = [];\n  runLength = [];\n\n  function pushRun(_runStart, _runLength) {\n    runStart[stackSize] = _runStart;\n    runLength[stackSize] = _runLength;\n    stackSize += 1;\n  }\n\n  function mergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n        if (runLength[n - 1] < runLength[n + 1]) {\n          n--;\n        }\n      } else if (runLength[n] > runLength[n + 1]) {\n        break;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function forceMergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n        n--;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function mergeAt(i) {\n    var start1 = runStart[i];\n    var length1 = runLength[i];\n    var start2 = runStart[i + 1];\n    var length2 = runLength[i + 1];\n    runLength[i] = length1 + length2;\n\n    if (i === stackSize - 3) {\n      runStart[i + 1] = runStart[i + 2];\n      runLength[i + 1] = runLength[i + 2];\n    }\n\n    stackSize--;\n    var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n    start1 += k;\n    length1 -= k;\n\n    if (length1 === 0) {\n      return;\n    }\n\n    length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n    if (length2 === 0) {\n      return;\n    }\n\n    if (length1 <= length2) {\n      mergeLow(start1, length1, start2, length2);\n    } else {\n      mergeHigh(start1, length1, start2, length2);\n    }\n  }\n\n  function mergeLow(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length1; i++) {\n      tmp[i] = array[start1 + i];\n    }\n\n    var cursor1 = 0;\n    var cursor2 = start2;\n    var dest = start1;\n    array[dest++] = array[cursor2++];\n\n    if (--length2 === 0) {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n\n      return;\n    }\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n      return;\n    }\n\n    var _minGallop = minGallop;\n    var count1, count2, exit;\n\n    while (1) {\n      count1 = 0;\n      count2 = 0;\n      exit = false;\n\n      do {\n        if (compare(array[cursor2], tmp[cursor1]) < 0) {\n          array[dest++] = array[cursor2++];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest++] = tmp[cursor1++];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n        if (count1 !== 0) {\n          for (i = 0; i < count1; i++) {\n            array[dest + i] = tmp[cursor1 + i];\n          }\n\n          dest += count1;\n          cursor1 += count1;\n          length1 -= count1;\n\n          if (length1 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = array[cursor2++];\n\n        if (--length2 === 0) {\n          exit = true;\n          break;\n        }\n\n        count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n        if (count2 !== 0) {\n          for (i = 0; i < count2; i++) {\n            array[dest + i] = array[cursor2 + i];\n          }\n\n          dest += count2;\n          cursor2 += count2;\n          length2 -= count2;\n\n          if (length2 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = tmp[cursor1++];\n\n        if (--length1 === 1) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n    minGallop < 1 && (minGallop = 1);\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n    } else if (length1 === 0) {\n      throw new Error(); // throw new Error('mergeLow preconditions were not respected');\n    } else {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n    }\n  }\n\n  function mergeHigh(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length2; i++) {\n      tmp[i] = array[start2 + i];\n    }\n\n    var cursor1 = start1 + length1 - 1;\n    var cursor2 = length2 - 1;\n    var dest = start2 + length2 - 1;\n    var customCursor = 0;\n    var customDest = 0;\n    array[dest--] = array[cursor1--];\n\n    if (--length1 === 0) {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n\n      return;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n      return;\n    }\n\n    var _minGallop = minGallop;\n\n    while (true) {\n      var count1 = 0;\n      var count2 = 0;\n      var exit = false;\n\n      do {\n        if (compare(tmp[cursor2], array[cursor1]) < 0) {\n          array[dest--] = array[cursor1--];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest--] = tmp[cursor2--];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n        if (count1 !== 0) {\n          dest -= count1;\n          cursor1 -= count1;\n          length1 -= count1;\n          customDest = dest + 1;\n          customCursor = cursor1 + 1;\n\n          for (i = count1 - 1; i >= 0; i--) {\n            array[customDest + i] = array[customCursor + i];\n          }\n\n          if (length1 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = tmp[cursor2--];\n\n        if (--length2 === 1) {\n          exit = true;\n          break;\n        }\n\n        count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n        if (count2 !== 0) {\n          dest -= count2;\n          cursor2 -= count2;\n          length2 -= count2;\n          customDest = dest + 1;\n          customCursor = cursor2 + 1;\n\n          for (i = 0; i < count2; i++) {\n            array[customDest + i] = tmp[customCursor + i];\n          }\n\n          if (length2 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = array[cursor1--];\n\n        if (--length1 === 0) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n\n    if (minGallop < 1) {\n      minGallop = 1;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n    } else if (length2 === 0) {\n      throw new Error(); // throw new Error('mergeHigh preconditions were not respected');\n    } else {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n    }\n  }\n\n  this.mergeRuns = mergeRuns;\n  this.forceMergeRuns = forceMergeRuns;\n  this.pushRun = pushRun;\n}\n\nfunction sort(array, compare, lo, hi) {\n  if (!lo) {\n    lo = 0;\n  }\n\n  if (!hi) {\n    hi = array.length;\n  }\n\n  var remaining = hi - lo;\n\n  if (remaining < 2) {\n    return;\n  }\n\n  var runLength = 0;\n\n  if (remaining < DEFAULT_MIN_MERGE) {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n    binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n    return;\n  }\n\n  var ts = new TimSort(array, compare);\n  var minRun = minRunLength(remaining);\n\n  do {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n\n    if (runLength < minRun) {\n      var force = remaining;\n\n      if (force > minRun) {\n        force = minRun;\n      }\n\n      binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n      runLength = force;\n    }\n\n    ts.pushRun(lo, runLength);\n    ts.mergeRuns();\n    remaining -= runLength;\n    lo += runLength;\n  } while (remaining !== 0);\n\n  ts.forceMergeRuns();\n}\n\nmodule.exports = sort;\n\n/***/ }),\n\n/***/ 1025:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Displayable = __webpack_require__(1018);\n\nvar BoundingRect = __webpack_require__(987);\n\nvar zrUtil = __webpack_require__(978);\n\nvar imageHelper = __webpack_require__(1026);\n\n/**\n * @alias zrender/graphic/Image\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nfunction ZImage(opts) {\n  Displayable.call(this, opts);\n}\n\nZImage.prototype = {\n  constructor: ZImage,\n  type: 'image',\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var src = style.image; // Must bind each time\n\n    style.bind(ctx, this, prevEl);\n    var image = this._image = imageHelper.createOrUpdateImage(src, this._image, this, this.onload);\n\n    if (!image || !imageHelper.isImageReady(image)) {\n      return;\n    } // 图片已经加载完成\n    // if (image.nodeName.toUpperCase() == 'IMG') {\n    //     if (!image.complete) {\n    //         return;\n    //     }\n    // }\n    // Else is canvas\n\n\n    var x = style.x || 0;\n    var y = style.y || 0;\n    var width = style.width;\n    var height = style.height;\n    var aspect = image.width / image.height;\n\n    if (width == null && height != null) {\n      // Keep image/height ratio\n      width = height * aspect;\n    } else if (height == null && width != null) {\n      height = width / aspect;\n    } else if (width == null && height == null) {\n      width = image.width;\n      height = image.height;\n    } // 设置transform\n\n\n    this.setTransform(ctx);\n\n    if (style.sWidth && style.sHeight) {\n      var sx = style.sx || 0;\n      var sy = style.sy || 0;\n      ctx.drawImage(image, sx, sy, style.sWidth, style.sHeight, x, y, width, height);\n    } else if (style.sx && style.sy) {\n      var sx = style.sx;\n      var sy = style.sy;\n      var sWidth = width - sx;\n      var sHeight = height - sy;\n      ctx.drawImage(image, sx, sy, sWidth, sHeight, x, y, width, height);\n    } else {\n      ctx.drawImage(image, x, y, width, height);\n    }\n\n    this.restoreTransform(ctx); // Draw rect text\n\n    if (style.text != null) {\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  getBoundingRect: function () {\n    var style = this.style;\n\n    if (!this._rect) {\n      this._rect = new BoundingRect(style.x || 0, style.y || 0, style.width || 0, style.height || 0);\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(ZImage, Displayable);\nvar _default = ZImage;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1026:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar LRU = __webpack_require__(1045);\n\nvar globalImageCache = new LRU(50);\n/**\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\nfunction findExistImage(newImageOrSrc) {\n  if (typeof newImageOrSrc === 'string') {\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    return cachedImgObj && cachedImgObj.image;\n  } else {\n    return newImageOrSrc;\n  }\n}\n/**\n * Caution: User should cache loaded images, but not just count on LRU.\n * Consider if required images more than LRU size, will dead loop occur?\n *\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @param {HTMLImageElement|HTMLCanvasElement|Canvas} image Existent image.\n * @param {module:zrender/Element} [hostEl] For calling `dirty`.\n * @param {Function} [cb] params: (image, cbPayload)\n * @param {Object} [cbPayload] Payload on cb calling.\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\n\nfunction createOrUpdateImage(newImageOrSrc, image, hostEl, cb, cbPayload) {\n  if (!newImageOrSrc) {\n    return image;\n  } else if (typeof newImageOrSrc === 'string') {\n    // Image should not be loaded repeatly.\n    if (image && image.__zrImageSrc === newImageOrSrc || !hostEl) {\n      return image;\n    } // Only when there is no existent image or existent image src\n    // is different, this method is responsible for load.\n\n\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    var pendingWrap = {\n      hostEl: hostEl,\n      cb: cb,\n      cbPayload: cbPayload\n    };\n\n    if (cachedImgObj) {\n      image = cachedImgObj.image;\n      !isImageReady(image) && cachedImgObj.pending.push(pendingWrap);\n    } else {\n      !image && (image = new Image());\n      image.onload = imageOnLoad;\n      globalImageCache.put(newImageOrSrc, image.__cachedImgObj = {\n        image: image,\n        pending: [pendingWrap]\n      });\n      image.src = image.__zrImageSrc = newImageOrSrc;\n    }\n\n    return image;\n  } // newImageOrSrc is an HTMLImageElement or HTMLCanvasElement or Canvas\n  else {\n      return newImageOrSrc;\n    }\n}\n\nfunction imageOnLoad() {\n  var cachedImgObj = this.__cachedImgObj;\n  this.onload = this.__cachedImgObj = null;\n\n  for (var i = 0; i < cachedImgObj.pending.length; i++) {\n    var pendingWrap = cachedImgObj.pending[i];\n    var cb = pendingWrap.cb;\n    cb && cb(this, pendingWrap.cbPayload);\n    pendingWrap.hostEl.dirty();\n  }\n\n  cachedImgObj.pending.length = 0;\n}\n\nfunction isImageReady(image) {\n  return image && image.width && image.height;\n}\n\nexports.findExistImage = findExistImage;\nexports.createOrUpdateImage = createOrUpdateImage;\nexports.isImageReady = isImageReady;\n\n/***/ }),\n\n/***/ 1027:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar _clazz = __webpack_require__(992);\n\nvar parseClassType = _clazz.parseClassType;\nvar base = 0;\nvar DELIMITER = '_';\n/**\n * @public\n * @param {string} type\n * @return {string}\n */\n\nfunction getUID(type) {\n  // Considering the case of crossing js context,\n  // use Math.random to make id as unique as possible.\n  return [type || '', base++, Math.random()].join(DELIMITER);\n}\n/**\n * @inner\n */\n\n\nfunction enableSubTypeDefaulter(entity) {\n  var subTypeDefaulters = {};\n\n  entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n    componentType = parseClassType(componentType);\n    subTypeDefaulters[componentType.main] = defaulter;\n  };\n\n  entity.determineSubType = function (componentType, option) {\n    var type = option.type;\n\n    if (!type) {\n      var componentTypeMain = parseClassType(componentType).main;\n\n      if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n        type = subTypeDefaulters[componentTypeMain](option);\n      }\n    }\n\n    return type;\n  };\n\n  return entity;\n}\n/**\n * Topological travel on Activity Network (Activity On Vertices).\n * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n *\n * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n *\n * If there is circle dependencey, Error will be thrown.\n *\n */\n\n\nfunction enableTopologicalTravel(entity, dependencyGetter) {\n  /**\n   * @public\n   * @param {Array.<string>} targetNameList Target Component type list.\n   *                                           Can be ['aa', 'bb', 'aa.xx']\n   * @param {Array.<string>} fullNameList By which we can build dependency graph.\n   * @param {Function} callback Params: componentType, dependencies.\n   * @param {Object} context Scope of callback.\n   */\n  entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n    if (!targetNameList.length) {\n      return;\n    }\n\n    var result = makeDepndencyGraph(fullNameList);\n    var graph = result.graph;\n    var stack = result.noEntryList;\n    var targetNameSet = {};\n    zrUtil.each(targetNameList, function (name) {\n      targetNameSet[name] = true;\n    });\n\n    while (stack.length) {\n      var currComponentType = stack.pop();\n      var currVertex = graph[currComponentType];\n      var isInTargetNameSet = !!targetNameSet[currComponentType];\n\n      if (isInTargetNameSet) {\n        callback.call(context, currComponentType, currVertex.originalDeps.slice());\n        delete targetNameSet[currComponentType];\n      }\n\n      zrUtil.each(currVertex.successor, isInTargetNameSet ? removeEdgeAndAdd : removeEdge);\n    }\n\n    zrUtil.each(targetNameSet, function () {\n      throw new Error('Circle dependency may exists');\n    });\n\n    function removeEdge(succComponentType) {\n      graph[succComponentType].entryCount--;\n\n      if (graph[succComponentType].entryCount === 0) {\n        stack.push(succComponentType);\n      }\n    } // Consider this case: legend depends on series, and we call\n    // chart.setOption({series: [...]}), where only series is in option.\n    // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n    // not be called, but only sereis.mergeOption is called. Thus legend\n    // have no chance to update its local record about series (like which\n    // name of series is available in legend).\n\n\n    function removeEdgeAndAdd(succComponentType) {\n      targetNameSet[succComponentType] = true;\n      removeEdge(succComponentType);\n    }\n  };\n  /**\n   * DepndencyGraph: {Object}\n   * key: conponentType,\n   * value: {\n   *     successor: [conponentTypes...],\n   *     originalDeps: [conponentTypes...],\n   *     entryCount: {number}\n   * }\n   */\n\n\n  function makeDepndencyGraph(fullNameList) {\n    var graph = {};\n    var noEntryList = [];\n    zrUtil.each(fullNameList, function (name) {\n      var thisItem = createDependencyGraphItem(graph, name);\n      var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n      var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n      thisItem.entryCount = availableDeps.length;\n\n      if (thisItem.entryCount === 0) {\n        noEntryList.push(name);\n      }\n\n      zrUtil.each(availableDeps, function (dependentName) {\n        if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n          thisItem.predecessor.push(dependentName);\n        }\n\n        var thatItem = createDependencyGraphItem(graph, dependentName);\n\n        if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n          thatItem.successor.push(name);\n        }\n      });\n    });\n    return {\n      graph: graph,\n      noEntryList: noEntryList\n    };\n  }\n\n  function createDependencyGraphItem(graph, name) {\n    if (!graph[name]) {\n      graph[name] = {\n        predecessor: [],\n        successor: []\n      };\n    }\n\n    return graph[name];\n  }\n\n  function getAvailableDependencies(originalDeps, fullNameList) {\n    var availableDeps = [];\n    zrUtil.each(originalDeps, function (dep) {\n      zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n    });\n    return availableDeps;\n  }\n}\n\nexports.getUID = getUID;\nexports.enableSubTypeDefaulter = enableSubTypeDefaulter;\nexports.enableTopologicalTravel = enableTopologicalTravel;\n\n/***/ }),\n\n/***/ 1028:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar axisHelper = __webpack_require__(996);\n\nfunction getName(obj) {\n  if (zrUtil.isObject(obj) && obj.value != null) {\n    return obj.value;\n  } else {\n    return obj + '';\n  }\n}\n\nvar _default = {\n  /**\n   * Format labels\n   * @return {Array.<string>}\n   */\n  getFormattedLabels: function () {\n    return axisHelper.getFormattedLabels(this.axis, this.get('axisLabel.formatter'));\n  },\n\n  /**\n   * Get categories\n   */\n  getCategories: function () {\n    return this.get('type') === 'category' && zrUtil.map(this.get('data'), getName);\n  },\n\n  /**\n   * @param {boolean} origin\n   * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n   */\n  getMin: function (origin) {\n    var option = this.option;\n    var min = !origin && option.rangeStart != null ? option.rangeStart : option.min;\n\n    if (this.axis && min != null && min !== 'dataMin' && typeof min !== 'function' && !zrUtil.eqNaN(min)) {\n      min = this.axis.scale.parse(min);\n    }\n\n    return min;\n  },\n\n  /**\n   * @param {boolean} origin\n   * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n   */\n  getMax: function (origin) {\n    var option = this.option;\n    var max = !origin && option.rangeEnd != null ? option.rangeEnd : option.max;\n\n    if (this.axis && max != null && max !== 'dataMax' && typeof max !== 'function' && !zrUtil.eqNaN(max)) {\n      max = this.axis.scale.parse(max);\n    }\n\n    return max;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  getNeedCrossZero: function () {\n    var option = this.option;\n    return option.rangeStart != null || option.rangeEnd != null ? false : !option.scale;\n  },\n\n  /**\n   * Should be implemented by each axis model if necessary.\n   * @return {module:echarts/model/Component} coordinate system model\n   */\n  getCoordSysModel: zrUtil.noop,\n\n  /**\n   * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n   * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n   */\n  setRange: function (rangeStart, rangeEnd) {\n    this.option.rangeStart = rangeStart;\n    this.option.rangeEnd = rangeEnd;\n  },\n\n  /**\n   * Reset range\n   */\n  resetRange: function () {\n    // rangeStart and rangeEnd is readonly.\n    this.option.rangeStart = this.option.rangeEnd = null;\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1029:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(983);\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = __webpack_require__(979);\n\nvar zrUtil = __webpack_require__(978);\n\nvar env = __webpack_require__(986);\n\nvar modelUtil = __webpack_require__(982);\n\nvar helper = __webpack_require__(1030);\n\nvar AxisProxy = __webpack_require__(1153);\n\nvar each = zrUtil.each;\nvar eachAxisDim = helper.eachAxisDim;\nvar DataZoomModel = echarts.extendComponentModel({\n  type: 'dataZoom',\n  dependencies: ['xAxis', 'yAxis', 'zAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'series'],\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    zlevel: 0,\n    z: 4,\n    // Higher than normal component (z: 2).\n    orient: null,\n    // Default auto by axisIndex. Possible value: 'horizontal', 'vertical'.\n    xAxisIndex: null,\n    // Default the first horizontal category axis.\n    yAxisIndex: null,\n    // Default the first vertical category axis.\n    filterMode: 'filter',\n    // Possible values: 'filter' or 'empty' or 'weakFilter'.\n    // 'filter': data items which are out of window will be removed. This option is\n    //          applicable when filtering outliers. For each data item, it will be\n    //          filtered if one of the relevant dimensions is out of the window.\n    // 'weakFilter': data items which are out of window will be removed. This option\n    //          is applicable when filtering outliers. For each data item, it will be\n    //          filtered only if all  of the relevant dimensions are out of the same\n    //          side of the window.\n    // 'empty': data items which are out of window will be set to empty.\n    //          This option is applicable when user should not neglect\n    //          that there are some data items out of window.\n    // 'none': Do not filter.\n    // Taking line chart as an example, line will be broken in\n    // the filtered points when filterModel is set to 'empty', but\n    // be connected when set to 'filter'.\n    throttle: null,\n    // Dispatch action by the fixed rate, avoid frequency.\n    // default 100. Do not throttle when use null/undefined.\n    // If animation === true and animationDurationUpdate > 0,\n    // default value is 100, otherwise 20.\n    start: 0,\n    // Start percent. 0 ~ 100\n    end: 100,\n    // End percent. 0 ~ 100\n    startValue: null,\n    // Start value. If startValue specified, start is ignored.\n    endValue: null,\n    // End value. If endValue specified, end is ignored.\n    minSpan: null,\n    // 0 ~ 100\n    maxSpan: null,\n    // 0 ~ 100\n    minValueSpan: null,\n    // The range of dataZoom can not be smaller than that.\n    maxValueSpan: null,\n    // The range of dataZoom can not be larger than that.\n    rangeMode: null // Array, can be 'value' or 'percent'.\n\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel) {\n    /**\n     * key like x_0, y_1\n     * @private\n     * @type {Object}\n     */\n    this._dataIntervalByAxis = {};\n    /**\n     * @private\n     */\n\n    this._dataInfo = {};\n    /**\n     * key like x_0, y_1\n     * @private\n     */\n\n    this._axisProxies = {};\n    /**\n     * @readOnly\n     */\n\n    this.textStyleModel;\n    /**\n     * @private\n     */\n\n    this._autoThrottle = true;\n    /**\n     * 'percent' or 'value'\n     * @private\n     */\n\n    this._rangePropMode = ['percent', 'percent'];\n    var rawOption = retrieveRaw(option);\n    this.mergeDefaultAndTheme(option, ecModel);\n    this.doInit(rawOption);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (newOption) {\n    var rawOption = retrieveRaw(newOption); //FIX #2591\n\n    zrUtil.merge(this.option, newOption, true);\n    this.doInit(rawOption);\n  },\n\n  /**\n   * @protected\n   */\n  doInit: function (rawOption) {\n    var thisOption = this.option; // Disable realtime view update if canvas is not supported.\n\n    if (!env.canvasSupported) {\n      thisOption.realtime = false;\n    }\n\n    this._setDefaultThrottle(rawOption);\n\n    updateRangeUse(this, rawOption);\n    each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n      // start/end has higher priority over startValue/endValue if they\n      // both set, but we should make chart.setOption({endValue: 1000})\n      // effective, rather than chart.setOption({endValue: 1000, end: null}).\n      if (this._rangePropMode[index] === 'value') {\n        thisOption[names[0]] = null;\n      } // Otherwise do nothing and use the merge result.\n\n    }, this);\n    this.textStyleModel = this.getModel('textStyle');\n\n    this._resetTarget();\n\n    this._giveAxisProxies();\n  },\n\n  /**\n   * @private\n   */\n  _giveAxisProxies: function () {\n    var axisProxies = this._axisProxies;\n    this.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel, ecModel) {\n      var axisModel = this.dependentModels[dimNames.axis][axisIndex]; // If exists, share axisProxy with other dataZoomModels.\n\n      var axisProxy = axisModel.__dzAxisProxy || ( // Use the first dataZoomModel as the main model of axisProxy.\n      axisModel.__dzAxisProxy = new AxisProxy(dimNames.name, axisIndex, this, ecModel)); // FIXME\n      // dispose __dzAxisProxy\n\n      axisProxies[dimNames.name + '_' + axisIndex] = axisProxy;\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _resetTarget: function () {\n    var thisOption = this.option;\n\n    var autoMode = this._judgeAutoMode();\n\n    eachAxisDim(function (dimNames) {\n      var axisIndexName = dimNames.axisIndex;\n      thisOption[axisIndexName] = modelUtil.normalizeToArray(thisOption[axisIndexName]);\n    }, this);\n\n    if (autoMode === 'axisIndex') {\n      this._autoSetAxisIndex();\n    } else if (autoMode === 'orient') {\n      this._autoSetOrient();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _judgeAutoMode: function () {\n    // Auto set only works for setOption at the first time.\n    // The following is user's reponsibility. So using merged\n    // option is OK.\n    var thisOption = this.option;\n    var hasIndexSpecified = false;\n    eachAxisDim(function (dimNames) {\n      // When user set axisIndex as a empty array, we think that user specify axisIndex\n      // but do not want use auto mode. Because empty array may be encountered when\n      // some error occured.\n      if (thisOption[dimNames.axisIndex] != null) {\n        hasIndexSpecified = true;\n      }\n    }, this);\n    var orient = thisOption.orient;\n\n    if (orient == null && hasIndexSpecified) {\n      return 'orient';\n    } else if (!hasIndexSpecified) {\n      if (orient == null) {\n        thisOption.orient = 'horizontal';\n      }\n\n      return 'axisIndex';\n    }\n  },\n\n  /**\n   * @private\n   */\n  _autoSetAxisIndex: function () {\n    var autoAxisIndex = true;\n    var orient = this.get('orient', true);\n    var thisOption = this.option;\n    var dependentModels = this.dependentModels;\n\n    if (autoAxisIndex) {\n      // Find axis that parallel to dataZoom as default.\n      var dimName = orient === 'vertical' ? 'y' : 'x';\n\n      if (dependentModels[dimName + 'Axis'].length) {\n        thisOption[dimName + 'AxisIndex'] = [0];\n        autoAxisIndex = false;\n      } else {\n        each(dependentModels.singleAxis, function (singleAxisModel) {\n          if (autoAxisIndex && singleAxisModel.get('orient', true) === orient) {\n            thisOption.singleAxisIndex = [singleAxisModel.componentIndex];\n            autoAxisIndex = false;\n          }\n        });\n      }\n    }\n\n    if (autoAxisIndex) {\n      // Find the first category axis as default. (consider polar)\n      eachAxisDim(function (dimNames) {\n        if (!autoAxisIndex) {\n          return;\n        }\n\n        var axisIndices = [];\n        var axisModels = this.dependentModels[dimNames.axis];\n\n        if (axisModels.length && !axisIndices.length) {\n          for (var i = 0, len = axisModels.length; i < len; i++) {\n            if (axisModels[i].get('type') === 'category') {\n              axisIndices.push(i);\n            }\n          }\n        }\n\n        thisOption[dimNames.axisIndex] = axisIndices;\n\n        if (axisIndices.length) {\n          autoAxisIndex = false;\n        }\n      }, this);\n    }\n\n    if (autoAxisIndex) {\n      // FIXME\n      // 这里是兼容ec2的写法（没指定xAxisIndex和yAxisIndex时把scatter和双数值轴折柱纳入dataZoom控制），\n      // 但是实际是否需要Grid.js#getScaleByOption来判断（考虑time，log等axis type）？\n      // If both dataZoom.xAxisIndex and dataZoom.yAxisIndex is not specified,\n      // dataZoom component auto adopts series that reference to\n      // both xAxis and yAxis which type is 'value'.\n      this.ecModel.eachSeries(function (seriesModel) {\n        if (this._isSeriesHasAllAxesTypeOf(seriesModel, 'value')) {\n          eachAxisDim(function (dimNames) {\n            var axisIndices = thisOption[dimNames.axisIndex];\n            var axisIndex = seriesModel.get(dimNames.axisIndex);\n            var axisId = seriesModel.get(dimNames.axisId);\n            var axisModel = seriesModel.ecModel.queryComponents({\n              mainType: dimNames.axis,\n              index: axisIndex,\n              id: axisId\n            })[0];\n            axisIndex = axisModel.componentIndex;\n\n            if (zrUtil.indexOf(axisIndices, axisIndex) < 0) {\n              axisIndices.push(axisIndex);\n            }\n          });\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _autoSetOrient: function () {\n    var dim; // Find the first axis\n\n    this.eachTargetAxis(function (dimNames) {\n      !dim && (dim = dimNames.name);\n    }, this);\n    this.option.orient = dim === 'y' ? 'vertical' : 'horizontal';\n  },\n\n  /**\n   * @private\n   */\n  _isSeriesHasAllAxesTypeOf: function (seriesModel, axisType) {\n    // FIXME\n    // 需要series的xAxisIndex和yAxisIndex都首先自动设置上。\n    // 例如series.type === scatter时。\n    var is = true;\n    eachAxisDim(function (dimNames) {\n      var seriesAxisIndex = seriesModel.get(dimNames.axisIndex);\n      var axisModel = this.dependentModels[dimNames.axis][seriesAxisIndex];\n\n      if (!axisModel || axisModel.get('type') !== axisType) {\n        is = false;\n      }\n    }, this);\n    return is;\n  },\n\n  /**\n   * @private\n   */\n  _setDefaultThrottle: function (rawOption) {\n    // When first time user set throttle, auto throttle ends.\n    if (rawOption.hasOwnProperty('throttle')) {\n      this._autoThrottle = false;\n    }\n\n    if (this._autoThrottle) {\n      var globalOption = this.ecModel.option;\n      this.option.throttle = globalOption.animation && globalOption.animationDurationUpdate > 0 ? 100 : 20;\n    }\n  },\n\n  /**\n   * @public\n   */\n  getFirstTargetAxisModel: function () {\n    var firstAxisModel;\n    eachAxisDim(function (dimNames) {\n      if (firstAxisModel == null) {\n        var indices = this.get(dimNames.axisIndex);\n\n        if (indices.length) {\n          firstAxisModel = this.dependentModels[dimNames.axis][indices[0]];\n        }\n      }\n    }, this);\n    return firstAxisModel;\n  },\n\n  /**\n   * @public\n   * @param {Function} callback param: axisModel, dimNames, axisIndex, dataZoomModel, ecModel\n   */\n  eachTargetAxis: function (callback, context) {\n    var ecModel = this.ecModel;\n    eachAxisDim(function (dimNames) {\n      each(this.get(dimNames.axisIndex), function (axisIndex) {\n        callback.call(context, dimNames, axisIndex, this, ecModel);\n      }, this);\n    }, this);\n  },\n\n  /**\n   * @param {string} dimName\n   * @param {number} axisIndex\n   * @return {module:echarts/component/dataZoom/AxisProxy} If not found, return null/undefined.\n   */\n  getAxisProxy: function (dimName, axisIndex) {\n    return this._axisProxies[dimName + '_' + axisIndex];\n  },\n\n  /**\n   * @param {string} dimName\n   * @param {number} axisIndex\n   * @return {module:echarts/model/Model} If not found, return null/undefined.\n   */\n  getAxisModel: function (dimName, axisIndex) {\n    var axisProxy = this.getAxisProxy(dimName, axisIndex);\n    return axisProxy && axisProxy.getAxisModel();\n  },\n\n  /**\n   * If not specified, set to undefined.\n   *\n   * @public\n   * @param {Object} opt\n   * @param {number} [opt.start]\n   * @param {number} [opt.end]\n   * @param {number} [opt.startValue]\n   * @param {number} [opt.endValue]\n   * @param {boolean} [ignoreUpdateRangeUsg=false]\n   */\n  setRawRange: function (opt, ignoreUpdateRangeUsg) {\n    var option = this.option;\n    each([['start', 'startValue'], ['end', 'endValue']], function (names) {\n      // If only one of 'start' and 'startValue' is not null/undefined, the other\n      // should be cleared, which enable clear the option.\n      // If both of them are not set, keep option with the original value, which\n      // enable use only set start but not set end when calling `dispatchAction`.\n      // The same as 'end' and 'endValue'.\n      if (opt[names[0]] != null || opt[names[1]] != null) {\n        option[names[0]] = opt[names[0]];\n        option[names[1]] = opt[names[1]];\n      }\n    }, this);\n    !ignoreUpdateRangeUsg && updateRangeUse(this, opt);\n  },\n\n  /**\n   * @public\n   * @return {Array.<number>} [startPercent, endPercent]\n   */\n  getPercentRange: function () {\n    var axisProxy = this.findRepresentativeAxisProxy();\n\n    if (axisProxy) {\n      return axisProxy.getDataPercentWindow();\n    }\n  },\n\n  /**\n   * @public\n   * For example, chart.getModel().getComponent('dataZoom').getValueRange('y', 0);\n   *\n   * @param {string} [axisDimName]\n   * @param {number} [axisIndex]\n   * @return {Array.<number>} [startValue, endValue] value can only be '-' or finite number.\n   */\n  getValueRange: function (axisDimName, axisIndex) {\n    if (axisDimName == null && axisIndex == null) {\n      var axisProxy = this.findRepresentativeAxisProxy();\n\n      if (axisProxy) {\n        return axisProxy.getDataValueWindow();\n      }\n    } else {\n      return this.getAxisProxy(axisDimName, axisIndex).getDataValueWindow();\n    }\n  },\n\n  /**\n   * @public\n   * @param {module:echarts/model/Model} [axisModel] If axisModel given, find axisProxy\n   *      corresponding to the axisModel\n   * @return {module:echarts/component/dataZoom/AxisProxy}\n   */\n  findRepresentativeAxisProxy: function (axisModel) {\n    if (axisModel) {\n      return axisModel.__dzAxisProxy;\n    } // Find the first hosted axisProxy\n\n\n    var axisProxies = this._axisProxies;\n\n    for (var key in axisProxies) {\n      if (axisProxies.hasOwnProperty(key) && axisProxies[key].hostedBy(this)) {\n        return axisProxies[key];\n      }\n    } // If no hosted axis find not hosted axisProxy.\n    // Consider this case: dataZoomModel1 and dataZoomModel2 control the same axis,\n    // and the option.start or option.end settings are different. The percentRange\n    // should follow axisProxy.\n    // (We encounter this problem in toolbox data zoom.)\n\n\n    for (var key in axisProxies) {\n      if (axisProxies.hasOwnProperty(key) && !axisProxies[key].hostedBy(this)) {\n        return axisProxies[key];\n      }\n    }\n  },\n\n  /**\n   * @return {Array.<string>}\n   */\n  getRangePropMode: function () {\n    return this._rangePropMode.slice();\n  }\n});\n\nfunction retrieveRaw(option) {\n  var ret = {};\n  each(['start', 'end', 'startValue', 'endValue', 'throttle'], function (name) {\n    option.hasOwnProperty(name) && (ret[name] = option[name]);\n  });\n  return ret;\n}\n\nfunction updateRangeUse(dataZoomModel, rawOption) {\n  var rangePropMode = dataZoomModel._rangePropMode;\n  var rangeModeInOption = dataZoomModel.get('rangeMode');\n  each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n    var percentSpecified = rawOption[names[0]] != null;\n    var valueSpecified = rawOption[names[1]] != null;\n\n    if (percentSpecified && !valueSpecified) {\n      rangePropMode[index] = 'percent';\n    } else if (!percentSpecified && valueSpecified) {\n      rangePropMode[index] = 'value';\n    } else if (rangeModeInOption) {\n      rangePropMode[index] = rangeModeInOption[index];\n    } else if (percentSpecified) {\n      // percentSpecified && valueSpecified\n      rangePropMode[index] = 'percent';\n    } // else remain its original setting.\n\n  });\n}\n\nvar _default = DataZoomModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1030:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar formatUtil = __webpack_require__(985);\n\nvar AXIS_DIMS = ['x', 'y', 'z', 'radius', 'angle', 'single']; // Supported coords.\n\nvar COORDS = ['cartesian2d', 'polar', 'singleAxis'];\n/**\n * @param {string} coordType\n * @return {boolean}\n */\n\nfunction isCoordSupported(coordType) {\n  return zrUtil.indexOf(COORDS, coordType) >= 0;\n}\n/**\n * Create \"each\" method to iterate names.\n *\n * @pubilc\n * @param  {Array.<string>} names\n * @param  {Array.<string>=} attrs\n * @return {Function}\n */\n\n\nfunction createNameEach(names, attrs) {\n  names = names.slice();\n  var capitalNames = zrUtil.map(names, formatUtil.capitalFirst);\n  attrs = (attrs || []).slice();\n  var capitalAttrs = zrUtil.map(attrs, formatUtil.capitalFirst);\n  return function (callback, context) {\n    zrUtil.each(names, function (name, index) {\n      var nameObj = {\n        name: name,\n        capital: capitalNames[index]\n      };\n\n      for (var j = 0; j < attrs.length; j++) {\n        nameObj[attrs[j]] = name + capitalAttrs[j];\n      }\n\n      callback.call(context, nameObj);\n    });\n  };\n}\n/**\n * Iterate each dimension name.\n *\n * @public\n * @param {Function} callback The parameter is like:\n *                            {\n *                                name: 'angle',\n *                                capital: 'Angle',\n *                                axis: 'angleAxis',\n *                                axisIndex: 'angleAixs',\n *                                index: 'angleIndex'\n *                            }\n * @param {Object} context\n */\n\n\nvar eachAxisDim = createNameEach(AXIS_DIMS, ['axisIndex', 'axis', 'index', 'id']);\n/**\n * If tow dataZoomModels has the same axis controlled, we say that they are 'linked'.\n * dataZoomModels and 'links' make up one or more graphics.\n * This function finds the graphic where the source dataZoomModel is in.\n *\n * @public\n * @param {Function} forEachNode Node iterator.\n * @param {Function} forEachEdgeType edgeType iterator\n * @param {Function} edgeIdGetter Giving node and edgeType, return an array of edge id.\n * @return {Function} Input: sourceNode, Output: Like {nodes: [], dims: {}}\n */\n\nfunction createLinkedNodesFinder(forEachNode, forEachEdgeType, edgeIdGetter) {\n  return function (sourceNode) {\n    var result = {\n      nodes: [],\n      records: {} // key: edgeType.name, value: Object (key: edge id, value: boolean).\n\n    };\n    forEachEdgeType(function (edgeType) {\n      result.records[edgeType.name] = {};\n    });\n\n    if (!sourceNode) {\n      return result;\n    }\n\n    absorb(sourceNode, result);\n    var existsLink;\n\n    do {\n      existsLink = false;\n      forEachNode(processSingleNode);\n    } while (existsLink);\n\n    function processSingleNode(node) {\n      if (!isNodeAbsorded(node, result) && isLinked(node, result)) {\n        absorb(node, result);\n        existsLink = true;\n      }\n    }\n\n    return result;\n  };\n\n  function isNodeAbsorded(node, result) {\n    return zrUtil.indexOf(result.nodes, node) >= 0;\n  }\n\n  function isLinked(node, result) {\n    var hasLink = false;\n    forEachEdgeType(function (edgeType) {\n      zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n        result.records[edgeType.name][edgeId] && (hasLink = true);\n      });\n    });\n    return hasLink;\n  }\n\n  function absorb(node, result) {\n    result.nodes.push(node);\n    forEachEdgeType(function (edgeType) {\n      zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n        result.records[edgeType.name][edgeId] = true;\n      });\n    });\n  }\n}\n\nexports.isCoordSupported = isCoordSupported;\nexports.createNameEach = createNameEach;\nexports.eachAxisDim = eachAxisDim;\nexports.createLinkedNodesFinder = createLinkedNodesFinder;\n\n/***/ }),\n\n/***/ 1031:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar ComponentView = __webpack_require__(1039);\n\nvar _default = ComponentView.extend({\n  type: 'dataZoom',\n  render: function (dataZoomModel, ecModel, api, payload) {\n    this.dataZoomModel = dataZoomModel;\n    this.ecModel = ecModel;\n    this.api = api;\n  },\n\n  /**\n   * Find the first target coordinate system.\n   *\n   * @protected\n   * @return {Object} {\n   *                   grid: [\n   *                       {model: coord0, axisModels: [axis1, axis3], coordIndex: 1},\n   *                       {model: coord1, axisModels: [axis0, axis2], coordIndex: 0},\n   *                       ...\n   *                   ],  // cartesians must not be null/undefined.\n   *                   polar: [\n   *                       {model: coord0, axisModels: [axis4], coordIndex: 0},\n   *                       ...\n   *                   ],  // polars must not be null/undefined.\n   *                   singleAxis: [\n   *                       {model: coord0, axisModels: [], coordIndex: 0}\n   *                   ]\n   */\n  getTargetCoordInfo: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var ecModel = this.ecModel;\n    var coordSysLists = {};\n    dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\n      var axisModel = ecModel.getComponent(dimNames.axis, axisIndex);\n\n      if (axisModel) {\n        var coordModel = axisModel.getCoordSysModel();\n        coordModel && save(coordModel, axisModel, coordSysLists[coordModel.mainType] || (coordSysLists[coordModel.mainType] = []), coordModel.componentIndex);\n      }\n    }, this);\n\n    function save(coordModel, axisModel, store, coordIndex) {\n      var item;\n\n      for (var i = 0; i < store.length; i++) {\n        if (store[i].model === coordModel) {\n          item = store[i];\n          break;\n        }\n      }\n\n      if (!item) {\n        store.push(item = {\n          model: coordModel,\n          axisModels: [],\n          coordIndex: coordIndex\n        });\n      }\n\n      item.axisModels.push(axisModel);\n    }\n\n    return coordSysLists;\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1032:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar guid = __webpack_require__(1042);\n\nvar env = __webpack_require__(986);\n\nvar zrUtil = __webpack_require__(978);\n\nvar Handler = __webpack_require__(1090);\n\nvar Storage = __webpack_require__(1092);\n\nvar Painter = __webpack_require__(1096);\n\nvar Animation = __webpack_require__(1098);\n\nvar HandlerProxy = __webpack_require__(1099);\n\n/*!\n* ZRender, a high performance 2d drawing library.\n*\n* Copyright (c) 2013, Baidu Inc.\n* All rights reserved.\n*\n* LICENSE\n* https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n*/\nvar useVML = !env.canvasSupported;\nvar painterCtors = {\n  canvas: Painter\n};\nvar instances = {}; // ZRender实例map索引\n\n/**\n * @type {string}\n */\n\nvar version = '3.7.4';\n/**\n * Initializing a zrender instance\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n * @return {module:zrender/ZRender}\n */\n\nfunction init(dom, opts) {\n  var zr = new ZRender(guid(), dom, opts);\n  instances[zr.id] = zr;\n  return zr;\n}\n/**\n * Dispose zrender instance\n * @param {module:zrender/ZRender} zr\n */\n\n\nfunction dispose(zr) {\n  if (zr) {\n    zr.dispose();\n  } else {\n    for (var key in instances) {\n      if (instances.hasOwnProperty(key)) {\n        instances[key].dispose();\n      }\n    }\n\n    instances = {};\n  }\n\n  return this;\n}\n/**\n * Get zrender instance by id\n * @param {string} id zrender instance id\n * @return {module:zrender/ZRender}\n */\n\n\nfunction getInstance(id) {\n  return instances[id];\n}\n\nfunction registerPainter(name, Ctor) {\n  painterCtors[name] = Ctor;\n}\n\nfunction delInstance(id) {\n  delete instances[id];\n}\n/**\n * @module zrender/ZRender\n */\n\n/**\n * @constructor\n * @alias module:zrender/ZRender\n * @param {string} id\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n */\n\n\nvar ZRender = function (id, dom, opts) {\n  opts = opts || {};\n  /**\n   * @type {HTMLDomElement}\n   */\n\n  this.dom = dom;\n  /**\n   * @type {string}\n   */\n\n  this.id = id;\n  var self = this;\n  var storage = new Storage();\n  var rendererType = opts.renderer; // TODO WebGL\n\n  if (useVML) {\n    if (!painterCtors.vml) {\n      throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n    }\n\n    rendererType = 'vml';\n  } else if (!rendererType || !painterCtors[rendererType]) {\n    rendererType = 'canvas';\n  }\n\n  var painter = new painterCtors[rendererType](dom, storage, opts);\n  this.storage = storage;\n  this.painter = painter;\n  var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;\n  this.handler = new Handler(storage, painter, handerProxy, painter.root);\n  /**\n   * @type {module:zrender/animation/Animation}\n   */\n\n  this.animation = new Animation({\n    stage: {\n      update: zrUtil.bind(this.flush, this)\n    }\n  });\n  this.animation.start();\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._needsRefresh; // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n  // FIXME 有点ugly\n\n  var oldDelFromStorage = storage.delFromStorage;\n  var oldAddToStorage = storage.addToStorage;\n\n  storage.delFromStorage = function (el) {\n    oldDelFromStorage.call(storage, el);\n    el && el.removeSelfFromZr(self);\n  };\n\n  storage.addToStorage = function (el) {\n    oldAddToStorage.call(storage, el);\n    el.addSelfToZr(self);\n  };\n};\n\nZRender.prototype = {\n  constructor: ZRender,\n\n  /**\n   * 获取实例唯一标识\n   * @return {string}\n   */\n  getId: function () {\n    return this.id;\n  },\n\n  /**\n   * 添加元素\n   * @param  {module:zrender/Element} el\n   */\n  add: function (el) {\n    this.storage.addRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * 删除元素\n   * @param  {module:zrender/Element} el\n   */\n  remove: function (el) {\n    this.storage.delRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Change configuration of layer\n   * @param {string} zLevel\n   * @param {Object} config\n   * @param {string} [config.clearColor=0] Clear color\n   * @param {string} [config.motionBlur=false] If enable motion blur\n   * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n  */\n  configLayer: function (zLevel, config) {\n    this.painter.configLayer(zLevel, config);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Repaint the canvas immediately\n   */\n  refreshImmediately: function () {\n    // var start = new Date();\n    // Clear needsRefresh ahead to avoid something wrong happens in refresh\n    // Or it will cause zrender refreshes again and again.\n    this._needsRefresh = false;\n    this.painter.refresh();\n    /**\n     * Avoid trigger zr.refresh in Element#beforeUpdate hook\n     */\n\n    this._needsRefresh = false; // var end = new Date();\n    // var log = document.getElementById('log');\n    // if (log) {\n    //     log.innerHTML = log.innerHTML + '<br>' + (end - start);\n    // }\n  },\n\n  /**\n   * Mark and repaint the canvas in the next frame of browser\n   */\n  refresh: function () {\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Perform all refresh\n   */\n  flush: function () {\n    if (this._needsRefresh) {\n      this.refreshImmediately();\n    }\n\n    if (this._needsRefreshHover) {\n      this.refreshHoverImmediately();\n    }\n  },\n\n  /**\n   * Add element to hover layer\n   * @param  {module:zrender/Element} el\n   * @param {Object} style\n   */\n  addHover: function (el, style) {\n    if (this.painter.addHover) {\n      this.painter.addHover(el, style);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Add element from hover layer\n   * @param  {module:zrender/Element} el\n   */\n  removeHover: function (el) {\n    if (this.painter.removeHover) {\n      this.painter.removeHover(el);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Clear all hover elements in hover layer\n   * @param  {module:zrender/Element} el\n   */\n  clearHover: function () {\n    if (this.painter.clearHover) {\n      this.painter.clearHover();\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Refresh hover in next frame\n   */\n  refreshHover: function () {\n    this._needsRefreshHover = true;\n  },\n\n  /**\n   * Refresh hover immediately\n   */\n  refreshHoverImmediately: function () {\n    this._needsRefreshHover = false;\n    this.painter.refreshHover && this.painter.refreshHover();\n  },\n\n  /**\n   * Resize the canvas.\n   * Should be invoked when container size is changed\n   * @param {Object} [opts]\n   * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n   * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n   */\n  resize: function (opts) {\n    opts = opts || {};\n    this.painter.resize(opts.width, opts.height);\n    this.handler.resize();\n  },\n\n  /**\n   * Stop and clear all animation immediately\n   */\n  clearAnimation: function () {\n    this.animation.clear();\n  },\n\n  /**\n   * Get container width\n   */\n  getWidth: function () {\n    return this.painter.getWidth();\n  },\n\n  /**\n   * Get container height\n   */\n  getHeight: function () {\n    return this.painter.getHeight();\n  },\n\n  /**\n   * Export the canvas as Base64 URL\n   * @param {string} type\n   * @param {string} [backgroundColor='#fff']\n   * @return {string} Base64 URL\n   */\n  // toDataURL: function(type, backgroundColor) {\n  //     return this.painter.getRenderedCanvas({\n  //         backgroundColor: backgroundColor\n  //     }).toDataURL(type);\n  // },\n\n  /**\n   * Converting a path to image.\n   * It has much better performance of drawing image rather than drawing a vector path.\n   * @param {module:zrender/graphic/Path} e\n   * @param {number} width\n   * @param {number} height\n   */\n  pathToImage: function (e, dpr) {\n    return this.painter.pathToImage(e, dpr);\n  },\n\n  /**\n   * Set default cursor\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    this.handler.setCursorStyle(cursorStyle);\n  },\n\n  /**\n   * Find hovered element\n   * @param {number} x\n   * @param {number} y\n   * @return {Object} {target, topTarget}\n   */\n  findHover: function (x, y) {\n    return this.handler.findHover(x, y);\n  },\n\n  /**\n   * Bind event\n   *\n   * @param {string} eventName Event name\n   * @param {Function} eventHandler Handler function\n   * @param {Object} [context] Context object\n   */\n  on: function (eventName, eventHandler, context) {\n    this.handler.on(eventName, eventHandler, context);\n  },\n\n  /**\n   * Unbind event\n   * @param {string} eventName Event name\n   * @param {Function} [eventHandler] Handler function\n   */\n  off: function (eventName, eventHandler) {\n    this.handler.off(eventName, eventHandler);\n  },\n\n  /**\n   * Trigger event manually\n   *\n   * @param {string} eventName Event name\n   * @param {event=} event Event object\n   */\n  trigger: function (eventName, event) {\n    this.handler.trigger(eventName, event);\n  },\n\n  /**\n   * Clear all objects and the canvas.\n   */\n  clear: function () {\n    this.storage.delRoot();\n    this.painter.clear();\n  },\n\n  /**\n   * Dispose self.\n   */\n  dispose: function () {\n    this.animation.stop();\n    this.clear();\n    this.storage.dispose();\n    this.painter.dispose();\n    this.handler.dispose();\n    this.animation = this.storage = this.painter = this.handler = null;\n    delInstance(this.id);\n  }\n};\nexports.version = version;\nexports.init = init;\nexports.dispose = dispose;\nexports.getInstance = getInstance;\nexports.registerPainter = registerPainter;\n\n/***/ }),\n\n/***/ 1033:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(978);\n\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar each = _util.each;\nvar normalizeCssArray = _util.normalizeCssArray;\nvar isString = _util.isString;\nvar isObject = _util.isObject;\n\nvar textContain = __webpack_require__(993);\n\nvar roundRectHelper = __webpack_require__(1049);\n\nvar imageHelper = __webpack_require__(1026);\n\n// TODO: Have not support 'start', 'end' yet.\nvar VALID_TEXT_ALIGN = {\n  left: 1,\n  right: 1,\n  center: 1\n};\nvar VALID_TEXT_VERTICAL_ALIGN = {\n  top: 1,\n  bottom: 1,\n  middle: 1\n};\n/**\n * @param {module:zrender/graphic/Style} style\n * @return {module:zrender/graphic/Style} The input style.\n */\n\nfunction normalizeTextStyle(style) {\n  normalizeStyle(style);\n  each(style.rich, normalizeStyle);\n  return style;\n}\n\nfunction normalizeStyle(style) {\n  if (style) {\n    style.font = textContain.makeFont(style);\n    var textAlign = style.textAlign;\n    textAlign === 'middle' && (textAlign = 'center');\n    style.textAlign = textAlign == null || VALID_TEXT_ALIGN[textAlign] ? textAlign : 'left'; // Compatible with textBaseline.\n\n    var textVerticalAlign = style.textVerticalAlign || style.textBaseline;\n    textVerticalAlign === 'center' && (textVerticalAlign = 'middle');\n    style.textVerticalAlign = textVerticalAlign == null || VALID_TEXT_VERTICAL_ALIGN[textVerticalAlign] ? textVerticalAlign : 'top';\n    var textPadding = style.textPadding;\n\n    if (textPadding) {\n      style.textPadding = normalizeCssArray(style.textPadding);\n    }\n  }\n}\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {string} text\n * @param {module:zrender/graphic/Style} style\n * @param {Object|boolean} [rect] {x, y, width, height}\n *                  If set false, rect text is not used.\n */\n\n\nfunction renderText(hostEl, ctx, text, style, rect) {\n  style.rich ? renderRichText(hostEl, ctx, text, style, rect) : renderPlainText(hostEl, ctx, text, style, rect);\n}\n\nfunction renderPlainText(hostEl, ctx, text, style, rect) {\n  var font = setCtx(ctx, 'font', style.font || textContain.DEFAULT_FONT);\n  var textPadding = style.textPadding;\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parsePlainText(text, font, textPadding, style.truncate);\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var textLines = contentBlock.lines;\n  var lineHeight = contentBlock.lineHeight;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var textX = baseX;\n  var textY = boxY;\n  var needDrawBg = needDrawBackground(style);\n\n  if (needDrawBg || textPadding) {\n    // Consider performance, do not call getTextWidth util necessary.\n    var textWidth = textContain.getWidth(text, font);\n    var outerWidth = textWidth;\n    textPadding && (outerWidth += textPadding[1] + textPadding[3]);\n    var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n    needDrawBg && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n    if (textPadding) {\n      textX = getTextXForPadding(baseX, textAlign, textPadding);\n      textY += textPadding[0];\n    }\n  }\n\n  setCtx(ctx, 'textAlign', textAlign || 'left'); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle'); // Always set shadowBlur and shadowOffset to avoid leak from displayable.\n\n  setCtx(ctx, 'shadowBlur', style.textShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textShadowOffsetY || 0); // `textBaseline` is set as 'middle'.\n\n  textY += lineHeight / 2;\n  var textStrokeWidth = style.textStrokeWidth;\n  var textStroke = getStroke(style.textStroke, textStrokeWidth);\n  var textFill = getFill(style.textFill);\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n  }\n\n  for (var i = 0; i < textLines.length; i++) {\n    // Fill after stroke so the outline will not cover the main part.\n    textStroke && ctx.strokeText(textLines[i], textX, textY);\n    textFill && ctx.fillText(textLines[i], textX, textY);\n    textY += lineHeight;\n  }\n}\n\nfunction renderRichText(hostEl, ctx, text, style, rect) {\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parseRichText(text, style);\n  }\n\n  drawRichText(hostEl, ctx, contentBlock, style, rect);\n}\n\nfunction drawRichText(hostEl, ctx, contentBlock, style, rect) {\n  var contentWidth = contentBlock.width;\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var textPadding = style.textPadding;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var xLeft = boxX;\n  var lineTop = boxY;\n\n  if (textPadding) {\n    xLeft += textPadding[3];\n    lineTop += textPadding[0];\n  }\n\n  var xRight = xLeft + contentWidth;\n  needDrawBackground(style) && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n  for (var i = 0; i < contentBlock.lines.length; i++) {\n    var line = contentBlock.lines[i];\n    var tokens = line.tokens;\n    var tokenCount = tokens.length;\n    var lineHeight = line.lineHeight;\n    var usedWidth = line.width;\n    var leftIndex = 0;\n    var lineXLeft = xLeft;\n    var lineXRight = xRight;\n    var rightIndex = tokenCount - 1;\n    var token;\n\n    while (leftIndex < tokenCount && (token = tokens[leftIndex], !token.textAlign || token.textAlign === 'left')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft, 'left');\n      usedWidth -= token.width;\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    while (rightIndex >= 0 && (token = tokens[rightIndex], token.textAlign === 'right')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXRight, 'right');\n      usedWidth -= token.width;\n      lineXRight -= token.width;\n      rightIndex--;\n    } // The other tokens are placed as textAlign 'center' if there is enough space.\n\n\n    lineXLeft += (contentWidth - (lineXLeft - xLeft) - (xRight - lineXRight) - usedWidth) / 2;\n\n    while (leftIndex <= rightIndex) {\n      token = tokens[leftIndex]; // Consider width specified by user, use 'center' rather than 'left'.\n\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft + token.width / 2, 'center');\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    lineTop += lineHeight;\n  }\n}\n\nfunction applyTextRotation(ctx, style, rect, x, y) {\n  // textRotation only apply in RectText.\n  if (rect && style.textRotation) {\n    var origin = style.textOrigin;\n\n    if (origin === 'center') {\n      x = rect.width / 2 + rect.x;\n      y = rect.height / 2 + rect.y;\n    } else if (origin) {\n      x = origin[0] + rect.x;\n      y = origin[1] + rect.y;\n    }\n\n    ctx.translate(x, y); // Positive: anticlockwise\n\n    ctx.rotate(-style.textRotation);\n    ctx.translate(-x, -y);\n  }\n}\n\nfunction placeToken(hostEl, ctx, token, style, lineHeight, lineTop, x, textAlign) {\n  var tokenStyle = style.rich[token.styleName] || {}; // 'ctx.textBaseline' is always set as 'middle', for sake of\n  // the bias of \"Microsoft YaHei\".\n\n  var textVerticalAlign = token.textVerticalAlign;\n  var y = lineTop + lineHeight / 2;\n\n  if (textVerticalAlign === 'top') {\n    y = lineTop + token.height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y = lineTop + lineHeight - token.height / 2;\n  }\n\n  !token.isLineHolder && needDrawBackground(tokenStyle) && drawBackground(hostEl, ctx, tokenStyle, textAlign === 'right' ? x - token.width : textAlign === 'center' ? x - token.width / 2 : x, y - token.height / 2, token.width, token.height);\n  var textPadding = token.textPadding;\n\n  if (textPadding) {\n    x = getTextXForPadding(x, textAlign, textPadding);\n    y -= token.height / 2 - textPadding[2] - token.textHeight / 2;\n  }\n\n  setCtx(ctx, 'shadowBlur', retrieve3(tokenStyle.textShadowBlur, style.textShadowBlur, 0));\n  setCtx(ctx, 'shadowColor', tokenStyle.textShadowColor || style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', retrieve3(tokenStyle.textShadowOffsetX, style.textShadowOffsetX, 0));\n  setCtx(ctx, 'shadowOffsetY', retrieve3(tokenStyle.textShadowOffsetY, style.textShadowOffsetY, 0));\n  setCtx(ctx, 'textAlign', textAlign); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle');\n  setCtx(ctx, 'font', token.font || textContain.DEFAULT_FONT);\n  var textStroke = getStroke(tokenStyle.textStroke || style.textStroke, textStrokeWidth);\n  var textFill = getFill(tokenStyle.textFill || style.textFill);\n  var textStrokeWidth = retrieve2(tokenStyle.textStrokeWidth, style.textStrokeWidth); // Fill after stroke so the outline will not cover the main part.\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n    ctx.strokeText(token.text, x, y);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n    ctx.fillText(token.text, x, y);\n  }\n}\n\nfunction needDrawBackground(style) {\n  return style.textBackgroundColor || style.textBorderWidth && style.textBorderColor;\n} // style: {textBackgroundColor, textBorderWidth, textBorderColor, textBorderRadius}\n// shape: {x, y, width, height}\n\n\nfunction drawBackground(hostEl, ctx, style, x, y, width, height) {\n  var textBackgroundColor = style.textBackgroundColor;\n  var textBorderWidth = style.textBorderWidth;\n  var textBorderColor = style.textBorderColor;\n  var isPlainBg = isString(textBackgroundColor);\n  setCtx(ctx, 'shadowBlur', style.textBoxShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textBoxShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textBoxShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textBoxShadowOffsetY || 0);\n\n  if (isPlainBg || textBorderWidth && textBorderColor) {\n    ctx.beginPath();\n    var textBorderRadius = style.textBorderRadius;\n\n    if (!textBorderRadius) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height,\n        r: textBorderRadius\n      });\n    }\n\n    ctx.closePath();\n  }\n\n  if (isPlainBg) {\n    setCtx(ctx, 'fillStyle', textBackgroundColor);\n    ctx.fill();\n  } else if (isObject(textBackgroundColor)) {\n    var image = textBackgroundColor.image;\n    image = imageHelper.createOrUpdateImage(image, null, hostEl, onBgImageLoaded, textBackgroundColor);\n\n    if (image && imageHelper.isImageReady(image)) {\n      ctx.drawImage(image, x, y, width, height);\n    }\n  }\n\n  if (textBorderWidth && textBorderColor) {\n    setCtx(ctx, 'lineWidth', textBorderWidth);\n    setCtx(ctx, 'strokeStyle', textBorderColor);\n    ctx.stroke();\n  }\n}\n\nfunction onBgImageLoaded(image, textBackgroundColor) {\n  // Replace image, so that `contain/text.js#parseRichText`\n  // will get correct result in next tick.\n  textBackgroundColor.image = image;\n}\n\nfunction getBoxPosition(blockHeiht, style, rect) {\n  var baseX = style.x || 0;\n  var baseY = style.y || 0;\n  var textAlign = style.textAlign;\n  var textVerticalAlign = style.textVerticalAlign; // Text position represented by coord\n\n  if (rect) {\n    var textPosition = style.textPosition;\n\n    if (textPosition instanceof Array) {\n      // Percent\n      baseX = rect.x + parsePercent(textPosition[0], rect.width);\n      baseY = rect.y + parsePercent(textPosition[1], rect.height);\n    } else {\n      var res = textContain.adjustTextPositionOnRect(textPosition, rect, style.textDistance);\n      baseX = res.x;\n      baseY = res.y; // Default align and baseline when has textPosition\n\n      textAlign = textAlign || res.textAlign;\n      textVerticalAlign = textVerticalAlign || res.textVerticalAlign;\n    } // textOffset is only support in RectText, otherwise\n    // we have to adjust boundingRect for textOffset.\n\n\n    var textOffset = style.textOffset;\n\n    if (textOffset) {\n      baseX += textOffset[0];\n      baseY += textOffset[1];\n    }\n  }\n\n  return {\n    baseX: baseX,\n    baseY: baseY,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction setCtx(ctx, prop, value) {\n  // FIXME ??? performance try\n  // if (ctx.__currentValues[prop] !== value) {\n  // ctx[prop] = ctx.__currentValues[prop] = value;\n  ctx[prop] = value; // }\n\n  return ctx[prop];\n}\n/**\n * @param {string} [stroke] If specified, do not check style.textStroke.\n * @param {string} [lineWidth] If specified, do not check style.textStroke.\n * @param {number} style\n */\n\n\nfunction getStroke(stroke, lineWidth) {\n  return stroke == null || lineWidth <= 0 || stroke === 'transparent' || stroke === 'none' ? null // TODO pattern and gradient?\n  : stroke.image || stroke.colorStops ? '#000' : stroke;\n}\n\nfunction getFill(fill) {\n  return fill == null || fill === 'none' ? null // TODO pattern and gradient?\n  : fill.image || fill.colorStops ? '#000' : fill;\n}\n\nfunction parsePercent(value, maxValue) {\n  if (typeof value === 'string') {\n    if (value.lastIndexOf('%') >= 0) {\n      return parseFloat(value) / 100 * maxValue;\n    }\n\n    return parseFloat(value);\n  }\n\n  return value;\n}\n\nfunction getTextXForPadding(x, textAlign, textPadding) {\n  return textAlign === 'right' ? x - textPadding[1] : textAlign === 'center' ? x + textPadding[3] / 2 - textPadding[1] / 2 : x + textPadding[3];\n}\n/**\n * @param {string} text\n * @param {module:zrender/Style} style\n * @return {boolean}\n */\n\n\nfunction needDrawText(text, style) {\n  return text != null && (text || style.textBackgroundColor || style.textBorderWidth && style.textBorderColor || style.textPadding);\n}\n\nexports.normalizeTextStyle = normalizeTextStyle;\nexports.renderText = renderText;\nexports.getStroke = getStroke;\nexports.getFill = getFill;\nexports.needDrawText = needDrawText;\n\n/***/ }),\n\n/***/ 1034:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(979);\n\nvar zrUtil = __webpack_require__(978);\n\nvar axisPointerModelHelper = __webpack_require__(1015);\n\nvar axisTrigger = __webpack_require__(1136);\n\n__webpack_require__(1137);\n\n__webpack_require__(1138);\n\n__webpack_require__(1061);\n\n// CartesianAxisPointer is not supposed to be required here. But consider\n// echarts.simple.js and online build tooltip, which only require gridSimple,\n// CartesianAxisPointer should be able to required somewhere.\necharts.registerPreprocessor(function (option) {\n  // Always has a global axisPointerModel for default setting.\n  if (option) {\n    (!option.axisPointer || option.axisPointer.length === 0) && (option.axisPointer = {});\n    var link = option.axisPointer.link; // Normalize to array to avoid object mergin. But if link\n    // is not set, remain null/undefined, otherwise it will\n    // override existent link setting.\n\n    if (link && !zrUtil.isArray(link)) {\n      option.axisPointer.link = [link];\n    }\n  }\n}); // This process should proformed after coordinate systems created\n// and series data processed. So put it on statistic processing stage.\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n  // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n  // allAxesInfo should be updated when setOption performed.\n  ecModel.getComponent('axisPointer').coordSysAxesInfo = axisPointerModelHelper.collect(ecModel, api);\n}); // Broadcast to all views.\n\necharts.registerAction({\n  type: 'updateAxisPointer',\n  event: 'updateAxisPointer',\n  update: ':updateAxisPointer'\n}, axisTrigger);\n\n/***/ }),\n\n/***/ 1035:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar graphic = __webpack_require__(980);\n\nvar textContain = __webpack_require__(993);\n\nvar formatUtil = __webpack_require__(985);\n\nvar matrix = __webpack_require__(994);\n\nvar axisHelper = __webpack_require__(996);\n\nvar AxisBuilder = __webpack_require__(1021);\n\n/**\n * @param {module:echarts/model/Model} axisPointerModel\n */\nfunction buildElStyle(axisPointerModel) {\n  var axisPointerType = axisPointerModel.get('type');\n  var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n  var style;\n\n  if (axisPointerType === 'line') {\n    style = styleModel.getLineStyle();\n    style.fill = null;\n  } else if (axisPointerType === 'shadow') {\n    style = styleModel.getAreaStyle();\n    style.stroke = null;\n  }\n\n  return style;\n}\n/**\n * @param {Function} labelPos {align, verticalAlign, position}\n */\n\n\nfunction buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos) {\n  var value = axisPointerModel.get('value');\n  var text = getValueLabel(value, axisModel.axis, axisModel.ecModel, axisPointerModel.get('seriesDataIndices'), {\n    precision: axisPointerModel.get('label.precision'),\n    formatter: axisPointerModel.get('label.formatter')\n  });\n  var labelModel = axisPointerModel.getModel('label');\n  var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n  var font = labelModel.getFont();\n  var textRect = textContain.getBoundingRect(text, font);\n  var position = labelPos.position;\n  var width = textRect.width + paddings[1] + paddings[3];\n  var height = textRect.height + paddings[0] + paddings[2]; // Adjust by align.\n\n  var align = labelPos.align;\n  align === 'right' && (position[0] -= width);\n  align === 'center' && (position[0] -= width / 2);\n  var verticalAlign = labelPos.verticalAlign;\n  verticalAlign === 'bottom' && (position[1] -= height);\n  verticalAlign === 'middle' && (position[1] -= height / 2); // Not overflow ec container\n\n  confineInContainer(position, width, height, api);\n  var bgColor = labelModel.get('backgroundColor');\n\n  if (!bgColor || bgColor === 'auto') {\n    bgColor = axisModel.get('axisLine.lineStyle.color');\n  }\n\n  elOption.label = {\n    shape: {\n      x: 0,\n      y: 0,\n      width: width,\n      height: height,\n      r: labelModel.get('borderRadius')\n    },\n    position: position.slice(),\n    // TODO: rich\n    style: {\n      text: text,\n      textFont: font,\n      textFill: labelModel.getTextColor(),\n      textPosition: 'inside',\n      fill: bgColor,\n      stroke: labelModel.get('borderColor') || 'transparent',\n      lineWidth: labelModel.get('borderWidth') || 0,\n      shadowBlur: labelModel.get('shadowBlur'),\n      shadowColor: labelModel.get('shadowColor'),\n      shadowOffsetX: labelModel.get('shadowOffsetX'),\n      shadowOffsetY: labelModel.get('shadowOffsetY')\n    },\n    // Lable should be over axisPointer.\n    z2: 10\n  };\n} // Do not overflow ec container\n\n\nfunction confineInContainer(position, width, height, api) {\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  position[0] = Math.min(position[0] + width, viewWidth) - width;\n  position[1] = Math.min(position[1] + height, viewHeight) - height;\n  position[0] = Math.max(position[0], 0);\n  position[1] = Math.max(position[1], 0);\n}\n/**\n * @param {number} value\n * @param {module:echarts/coord/Axis} axis\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} opt\n * @param {Array.<Object>} seriesDataIndices\n * @param {number|string} opt.precision 'auto' or a number\n * @param {string|Function} opt.formatter label formatter\n */\n\n\nfunction getValueLabel(value, axis, ecModel, seriesDataIndices, opt) {\n  var text = axis.scale.getLabel( // If `precision` is set, width can be fixed (like '12.00500'), which\n  // helps to debounce when when moving label.\n  value, {\n    precision: opt.precision\n  });\n  var formatter = opt.formatter;\n\n  if (formatter) {\n    var params = {\n      value: axisHelper.getAxisRawValue(axis, value),\n      seriesData: []\n    };\n    zrUtil.each(seriesDataIndices, function (idxItem) {\n      var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n      var dataIndex = idxItem.dataIndexInside;\n      var dataParams = series && series.getDataParams(dataIndex);\n      dataParams && params.seriesData.push(dataParams);\n    });\n\n    if (zrUtil.isString(formatter)) {\n      text = formatter.replace('{value}', text);\n    } else if (zrUtil.isFunction(formatter)) {\n      text = formatter(params);\n    }\n  }\n\n  return text;\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @param {number} value\n * @param {Object} layoutInfo {\n *  rotation, position, labelOffset, labelDirection, labelMargin\n * }\n */\n\n\nfunction getTransformedPosition(axis, value, layoutInfo) {\n  var transform = matrix.create();\n  matrix.rotate(transform, transform, layoutInfo.rotation);\n  matrix.translate(transform, transform, layoutInfo.position);\n  return graphic.applyTransform([axis.dataToCoord(value), (layoutInfo.labelOffset || 0) + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)], transform);\n}\n\nfunction buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api) {\n  var textLayout = AxisBuilder.innerTextLayout(layoutInfo.rotation, 0, layoutInfo.labelDirection);\n  layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n  buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n    position: getTransformedPosition(axisModel.axis, value, layoutInfo),\n    align: textLayout.textAlign,\n    verticalAlign: textLayout.textVerticalAlign\n  });\n}\n/**\n * @param {Array.<number>} p1\n * @param {Array.<number>} p2\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeLineShape(p1, p2, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x1: p1[xDimIndex],\n    y1: p1[1 - xDimIndex],\n    x2: p2[xDimIndex],\n    y2: p2[1 - xDimIndex]\n  };\n}\n/**\n * @param {Array.<number>} xy\n * @param {Array.<number>} wh\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeRectShape(xy, wh, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x: xy[xDimIndex],\n    y: xy[1 - xDimIndex],\n    width: wh[xDimIndex],\n    height: wh[1 - xDimIndex]\n  };\n}\n\nfunction makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\n  return {\n    cx: cx,\n    cy: cy,\n    r0: r0,\n    r: r,\n    startAngle: startAngle,\n    endAngle: endAngle,\n    clockwise: true\n  };\n}\n\nexports.buildElStyle = buildElStyle;\nexports.buildLabelElOption = buildLabelElOption;\nexports.getValueLabel = getValueLabel;\nexports.getTransformedPosition = getTransformedPosition;\nexports.buildCartesianSingleLabelElOption = buildCartesianSingleLabelElOption;\nexports.makeLineShape = makeLineShape;\nexports.makeRectShape = makeRectShape;\nexports.makeSectorShape = makeSectorShape;\n\n/***/ }),\n\n/***/ 1036:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar matrix = __webpack_require__(994);\n\nvar vector = __webpack_require__(984);\n\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\nvar mIdentity = matrix.identity;\nvar EPSILON = 5e-5;\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * @alias module:zrender/mixin/Transformable\n * @constructor\n */\n\n\nvar Transformable = function (opts) {\n  opts = opts || {}; // If there are no given position, rotation, scale\n\n  if (!opts.position) {\n    /**\n     * 平移\n     * @type {Array.<number>}\n     * @default [0, 0]\n     */\n    this.position = [0, 0];\n  }\n\n  if (opts.rotation == null) {\n    /**\n     * 旋转\n     * @type {Array.<number>}\n     * @default 0\n     */\n    this.rotation = 0;\n  }\n\n  if (!opts.scale) {\n    /**\n     * 缩放\n     * @type {Array.<number>}\n     * @default [1, 1]\n     */\n    this.scale = [1, 1];\n  }\n  /**\n   * 旋转和缩放的原点\n   * @type {Array.<number>}\n   * @default null\n   */\n\n\n  this.origin = this.origin || null;\n};\n\nvar transformableProto = Transformable.prototype;\ntransformableProto.transform = null;\n/**\n * 判断是否需要有坐标变换\n * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n */\n\ntransformableProto.needLocalTransform = function () {\n  return isNotAroundZero(this.rotation) || isNotAroundZero(this.position[0]) || isNotAroundZero(this.position[1]) || isNotAroundZero(this.scale[0] - 1) || isNotAroundZero(this.scale[1] - 1);\n};\n\ntransformableProto.updateTransform = function () {\n  var parent = this.parent;\n  var parentHasTransform = parent && parent.transform;\n  var needLocalTransform = this.needLocalTransform();\n  var m = this.transform;\n\n  if (!(needLocalTransform || parentHasTransform)) {\n    m && mIdentity(m);\n    return;\n  }\n\n  m = m || matrix.create();\n\n  if (needLocalTransform) {\n    this.getLocalTransform(m);\n  } else {\n    mIdentity(m);\n  } // 应用父节点变换\n\n\n  if (parentHasTransform) {\n    if (needLocalTransform) {\n      matrix.mul(m, parent.transform, m);\n    } else {\n      matrix.copy(m, parent.transform);\n    }\n  } // 保存这个变换矩阵\n\n\n  this.transform = m;\n  this.invTransform = this.invTransform || matrix.create();\n  matrix.invert(this.invTransform, m);\n};\n\ntransformableProto.getLocalTransform = function (m) {\n  return Transformable.getLocalTransform(this, m);\n};\n/**\n * 将自己的transform应用到context上\n * @param {CanvasRenderingContext2D} ctx\n */\n\n\ntransformableProto.setTransform = function (ctx) {\n  var m = this.transform;\n  var dpr = ctx.dpr || 1;\n\n  if (m) {\n    ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n  } else {\n    ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n  }\n};\n\ntransformableProto.restoreTransform = function (ctx) {\n  var dpr = ctx.dpr || 1;\n  ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n};\n\nvar tmpTransform = [];\n/**\n * 分解`transform`矩阵到`position`, `rotation`, `scale`\n */\n\ntransformableProto.decomposeTransform = function () {\n  if (!this.transform) {\n    return;\n  }\n\n  var parent = this.parent;\n  var m = this.transform;\n\n  if (parent && parent.transform) {\n    // Get local transform and decompose them to position, scale, rotation\n    matrix.mul(tmpTransform, parent.invTransform, m);\n    m = tmpTransform;\n  }\n\n  var sx = m[0] * m[0] + m[1] * m[1];\n  var sy = m[2] * m[2] + m[3] * m[3];\n  var position = this.position;\n  var scale = this.scale;\n\n  if (isNotAroundZero(sx - 1)) {\n    sx = Math.sqrt(sx);\n  }\n\n  if (isNotAroundZero(sy - 1)) {\n    sy = Math.sqrt(sy);\n  }\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  position[0] = m[4];\n  position[1] = m[5];\n  scale[0] = sx;\n  scale[1] = sy;\n  this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n};\n/**\n * Get global scale\n * @return {Array.<number>}\n */\n\n\ntransformableProto.getGlobalScale = function () {\n  var m = this.transform;\n\n  if (!m) {\n    return [1, 1];\n  }\n\n  var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n  var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  return [sx, sy];\n};\n/**\n * 变换坐标位置到 shape 的局部坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToLocal = function (x, y) {\n  var v2 = [x, y];\n  var invTransform = this.invTransform;\n\n  if (invTransform) {\n    vector.applyTransform(v2, v2, invTransform);\n  }\n\n  return v2;\n};\n/**\n * 变换局部坐标位置到全局坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToGlobal = function (x, y) {\n  var v2 = [x, y];\n  var transform = this.transform;\n\n  if (transform) {\n    vector.applyTransform(v2, v2, transform);\n  }\n\n  return v2;\n};\n/**\n * @static\n * @param {Object} target\n * @param {Array.<number>} target.origin\n * @param {number} target.rotation\n * @param {Array.<number>} target.position\n * @param {Array.<number>} [m]\n */\n\n\nTransformable.getLocalTransform = function (target, m) {\n  m = m || [];\n  mIdentity(m);\n  var origin = target.origin;\n  var scale = target.scale || [1, 1];\n  var rotation = target.rotation || 0;\n  var position = target.position || [0, 0];\n\n  if (origin) {\n    // Translate to origin\n    m[4] -= origin[0];\n    m[5] -= origin[1];\n  }\n\n  matrix.scale(m, m, scale);\n\n  if (rotation) {\n    matrix.rotate(m, m, rotation);\n  }\n\n  if (origin) {\n    // Translate back from origin\n    m[4] += origin[0];\n    m[5] += origin[1];\n  }\n\n  m[4] += position[0];\n  m[5] += position[1];\n  return m;\n};\n\nvar _default = Transformable;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1037:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar vec2 = __webpack_require__(984);\n\nvar curve = __webpack_require__(999);\n\n/**\n * @author Yi Shen(https://github.com/pissang)\n */\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI2 = Math.PI * 2;\nvar start = vec2.create();\nvar end = vec2.create();\nvar extremity = vec2.create();\n/**\n * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n * @module zrender/core/bbox\n * @param {Array<Object>} points 顶点数组\n * @param {number} min\n * @param {number} max\n */\n\nfunction fromPoints(points, min, max) {\n  if (points.length === 0) {\n    return;\n  }\n\n  var p = points[0];\n  var left = p[0];\n  var right = p[0];\n  var top = p[1];\n  var bottom = p[1];\n  var i;\n\n  for (i = 1; i < points.length; i++) {\n    p = points[i];\n    left = mathMin(left, p[0]);\n    right = mathMax(right, p[0]);\n    top = mathMin(top, p[1]);\n    bottom = mathMax(bottom, p[1]);\n  }\n\n  min[0] = left;\n  min[1] = top;\n  max[0] = right;\n  max[1] = bottom;\n}\n/**\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromLine(x0, y0, x1, y1, min, max) {\n  min[0] = mathMin(x0, x1);\n  min[1] = mathMin(y0, y1);\n  max[0] = mathMax(x0, x1);\n  max[1] = mathMax(y0, y1);\n}\n\nvar xDim = [];\nvar yDim = [];\n/**\n * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\nfunction fromCubic(x0, y0, x1, y1, x2, y2, x3, y3, min, max) {\n  var cubicExtrema = curve.cubicExtrema;\n  var cubicAt = curve.cubicAt;\n  var i;\n  var n = cubicExtrema(x0, x1, x2, x3, xDim);\n  min[0] = Infinity;\n  min[1] = Infinity;\n  max[0] = -Infinity;\n  max[1] = -Infinity;\n\n  for (i = 0; i < n; i++) {\n    var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n    min[0] = mathMin(x, min[0]);\n    max[0] = mathMax(x, max[0]);\n  }\n\n  n = cubicExtrema(y0, y1, y2, y3, yDim);\n\n  for (i = 0; i < n; i++) {\n    var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n    min[1] = mathMin(y, min[1]);\n    max[1] = mathMax(y, max[1]);\n  }\n\n  min[0] = mathMin(x0, min[0]);\n  max[0] = mathMax(x0, max[0]);\n  min[0] = mathMin(x3, min[0]);\n  max[0] = mathMax(x3, max[0]);\n  min[1] = mathMin(y0, min[1]);\n  max[1] = mathMax(y0, max[1]);\n  min[1] = mathMin(y3, min[1]);\n  max[1] = mathMax(y3, max[1]);\n}\n/**\n * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromQuadratic(x0, y0, x1, y1, x2, y2, min, max) {\n  var quadraticExtremum = curve.quadraticExtremum;\n  var quadraticAt = curve.quadraticAt; // Find extremities, where derivative in x dim or y dim is zero\n\n  var tx = mathMax(mathMin(quadraticExtremum(x0, x1, x2), 1), 0);\n  var ty = mathMax(mathMin(quadraticExtremum(y0, y1, y2), 1), 0);\n  var x = quadraticAt(x0, x1, x2, tx);\n  var y = quadraticAt(y0, y1, y2, ty);\n  min[0] = mathMin(x0, x2, x);\n  min[1] = mathMin(y0, y2, y);\n  max[0] = mathMax(x0, x2, x);\n  max[1] = mathMax(y0, y2, y);\n}\n/**\n * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n * @method\n * @memberOf module:zrender/core/bbox\n * @param {number} x\n * @param {number} y\n * @param {number} rx\n * @param {number} ry\n * @param {number} startAngle\n * @param {number} endAngle\n * @param {number} anticlockwise\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromArc(x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max) {\n  var vec2Min = vec2.min;\n  var vec2Max = vec2.max;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff % PI2 < 1e-4 && diff > 1e-4) {\n    // Is a circle\n    min[0] = x - rx;\n    min[1] = y - ry;\n    max[0] = x + rx;\n    max[1] = y + ry;\n    return;\n  }\n\n  start[0] = mathCos(startAngle) * rx + x;\n  start[1] = mathSin(startAngle) * ry + y;\n  end[0] = mathCos(endAngle) * rx + x;\n  end[1] = mathSin(endAngle) * ry + y;\n  vec2Min(min, start, end);\n  vec2Max(max, start, end); // Thresh to [0, Math.PI * 2]\n\n  startAngle = startAngle % PI2;\n\n  if (startAngle < 0) {\n    startAngle = startAngle + PI2;\n  }\n\n  endAngle = endAngle % PI2;\n\n  if (endAngle < 0) {\n    endAngle = endAngle + PI2;\n  }\n\n  if (startAngle > endAngle && !anticlockwise) {\n    endAngle += PI2;\n  } else if (startAngle < endAngle && anticlockwise) {\n    startAngle += PI2;\n  }\n\n  if (anticlockwise) {\n    var tmp = endAngle;\n    endAngle = startAngle;\n    startAngle = tmp;\n  } // var number = 0;\n  // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n\n\n  for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n    if (angle > startAngle) {\n      extremity[0] = mathCos(angle) * rx + x;\n      extremity[1] = mathSin(angle) * ry + y;\n      vec2Min(min, extremity, min);\n      vec2Max(max, extremity, max);\n    }\n  }\n}\n\nexports.fromPoints = fromPoints;\nexports.fromLine = fromLine;\nexports.fromCubic = fromCubic;\nexports.fromQuadratic = fromQuadratic;\nexports.fromArc = fromArc;\n\n/***/ }),\n\n/***/ 1038:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Displayable = __webpack_require__(1018);\n\nvar zrUtil = __webpack_require__(978);\n\nvar textContain = __webpack_require__(993);\n\nvar textHelper = __webpack_require__(1033);\n\n/**\n * @alias zrender/graphic/Text\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nvar Text = function (opts) {\n  // jshint ignore:line\n  Displayable.call(this, opts);\n};\n\nText.prototype = {\n  constructor: Text,\n  type: 'text',\n  brush: function (ctx, prevEl) {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true); // Use props with prefix 'text'.\n\n    style.fill = style.stroke = style.shadowBlur = style.shadowColor = style.shadowOffsetX = style.shadowOffsetY = null;\n    var text = style.text; // Convert to string\n\n    text != null && (text += ''); // Always bind style\n\n    style.bind(ctx, this, prevEl);\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    }\n\n    this.setTransform(ctx);\n    textHelper.renderText(this, ctx, text, style);\n    this.restoreTransform(ctx);\n  },\n  getBoundingRect: function () {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n    if (!this._rect) {\n      var text = style.text;\n      text != null ? text += '' : text = '';\n      var rect = textContain.getBoundingRect(style.text + '', style.font, style.textAlign, style.textVerticalAlign, style.textPadding, style.rich);\n      rect.x += style.x || 0;\n      rect.y += style.y || 0;\n\n      if (textHelper.getStroke(style.textStroke, style.textStrokeWidth)) {\n        var w = style.textStrokeWidth;\n        rect.x -= w / 2;\n        rect.y -= w / 2;\n        rect.width += w;\n        rect.height += w;\n      }\n\n      this._rect = rect;\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(Text, Displayable);\nvar _default = Text;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1039:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Group = __webpack_require__(1009);\n\nvar componentUtil = __webpack_require__(1027);\n\nvar clazzUtil = __webpack_require__(992);\n\nvar Component = function () {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewComponent');\n};\n\nComponent.prototype = {\n  constructor: Component,\n  init: function (ecModel, api) {},\n  render: function (componentModel, ecModel, api, payload) {},\n  dispose: function () {}\n};\nvar componentProto = Component.prototype;\n\ncomponentProto.updateView = componentProto.updateLayout = componentProto.updateVisual = function (seriesModel, ecModel, api, payload) {// Do nothing;\n}; // Enable Component.extend.\n\n\nclazzUtil.enableClassExtend(Component); // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Component, {\n  registerWhenExtend: true\n});\nvar _default = Component;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1040:\n/***/ (function(module, exports) {\n\n/**\n * Calculate slider move result.\n * Usage:\n * (1) If both handle0 and handle1 are needed to be moved, set minSpan the same as\n * maxSpan and the same as `Math.abs(handleEnd[1] - handleEnds[0])`.\n * (2) If handle0 is forbidden to cross handle1, set minSpan as `0`.\n *\n * @param {number} delta Move length.\n * @param {Array.<number>} handleEnds handleEnds[0] can be bigger then handleEnds[1].\n *              handleEnds will be modified in this method.\n * @param {Array.<number>} extent handleEnds is restricted by extent.\n *              extent[0] should less or equals than extent[1].\n * @param {number|string} handleIndex Can be 'all', means that both move the two handleEnds,\n *              where the input minSpan and maxSpan will not work.\n * @param {number} [minSpan] The range of dataZoom can not be smaller than that.\n *              If not set, handle0 and cross handle1. If set as a non-negative\n *              number (including `0`), handles will push each other when reaching\n *              the minSpan.\n * @param {number} [maxSpan] The range of dataZoom can not be larger than that.\n * @return {Array.<number>} The input handleEnds.\n */\nfunction _default(delta, handleEnds, extent, handleIndex, minSpan, maxSpan) {\n  // Normalize firstly.\n  handleEnds[0] = restrict(handleEnds[0], extent);\n  handleEnds[1] = restrict(handleEnds[1], extent);\n  delta = delta || 0;\n  var extentSpan = extent[1] - extent[0]; // Notice maxSpan and minSpan can be null/undefined.\n\n  if (minSpan != null) {\n    minSpan = restrict(minSpan, [0, extentSpan]);\n  }\n\n  if (maxSpan != null) {\n    maxSpan = Math.max(maxSpan, minSpan != null ? minSpan : 0);\n  }\n\n  if (handleIndex === 'all') {\n    minSpan = maxSpan = Math.abs(handleEnds[1] - handleEnds[0]);\n    handleIndex = 0;\n  }\n\n  var originalDistSign = getSpanSign(handleEnds, handleIndex);\n  handleEnds[handleIndex] += delta; // Restrict in extent.\n\n  var extentMinSpan = minSpan || 0;\n  var realExtent = extent.slice();\n  originalDistSign.sign < 0 ? realExtent[0] += extentMinSpan : realExtent[1] -= extentMinSpan;\n  handleEnds[handleIndex] = restrict(handleEnds[handleIndex], realExtent); // Expand span.\n\n  var currDistSign = getSpanSign(handleEnds, handleIndex);\n\n  if (minSpan != null && (currDistSign.sign !== originalDistSign.sign || currDistSign.span < minSpan)) {\n    // If minSpan exists, 'cross' is forbinden.\n    handleEnds[1 - handleIndex] = handleEnds[handleIndex] + originalDistSign.sign * minSpan;\n  } // Shrink span.\n\n\n  var currDistSign = getSpanSign(handleEnds, handleIndex);\n\n  if (maxSpan != null && currDistSign.span > maxSpan) {\n    handleEnds[1 - handleIndex] = handleEnds[handleIndex] + currDistSign.sign * maxSpan;\n  }\n\n  return handleEnds;\n}\n\nfunction getSpanSign(handleEnds, handleIndex) {\n  var dist = handleEnds[handleIndex] - handleEnds[1 - handleIndex]; // If `handleEnds[0] === handleEnds[1]`, always believe that handleEnd[0]\n  // is at left of handleEnds[1] for non-cross case.\n\n  return {\n    span: Math.abs(dist),\n    sign: dist > 0 ? -1 : dist < 0 ? 1 : handleIndex ? -1 : 1\n  };\n}\n\nfunction restrict(value, extend) {\n  return Math.min(extend[1], Math.max(extend[0], value));\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1041:\n/***/ (function(module, exports) {\n\nfunction _default(seriesType, defaultSymbolType, legendSymbol, ecModel, api) {\n  // Encoding visual for all series include which is filtered for legend drawing\n  ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n    var data = seriesModel.getData();\n    var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n    var symbolSize = seriesModel.get('symbolSize');\n    data.setVisual({\n      legendSymbol: legendSymbol || symbolType,\n      symbol: symbolType,\n      symbolSize: symbolSize\n    }); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      if (typeof symbolSize === 'function') {\n        data.each(function (idx) {\n          var rawValue = seriesModel.getRawValue(idx); // FIXME\n\n          var params = seriesModel.getDataParams(idx);\n          data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n        });\n      }\n\n      data.each(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        var itemSymbolType = itemModel.getShallow('symbol', true);\n        var itemSymbolSize = itemModel.getShallow('symbolSize', true); // If has item symbol\n\n        if (itemSymbolType != null) {\n          data.setItemVisual(idx, 'symbol', itemSymbolType);\n        }\n\n        if (itemSymbolSize != null) {\n          // PENDING Transform symbolSize ?\n          data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n        }\n      });\n    }\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1042:\n/***/ (function(module, exports) {\n\n/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\nvar idStart = 0x0907;\n\nfunction _default() {\n  return idStart++;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1043:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar guid = __webpack_require__(1042);\n\nvar Eventful = __webpack_require__(1001);\n\nvar Transformable = __webpack_require__(1036);\n\nvar Animatable = __webpack_require__(1093);\n\nvar zrUtil = __webpack_require__(978);\n\n/**\n * @alias module:zrender/Element\n * @constructor\n * @extends {module:zrender/mixin/Animatable}\n * @extends {module:zrender/mixin/Transformable}\n * @extends {module:zrender/mixin/Eventful}\n */\nvar Element = function (opts) {\n  // jshint ignore:line\n  Transformable.call(this, opts);\n  Eventful.call(this, opts);\n  Animatable.call(this, opts);\n  /**\n   * 画布元素ID\n   * @type {string}\n   */\n\n  this.id = opts.id || guid();\n};\n\nElement.prototype = {\n  /**\n   * 元素类型\n   * Element type\n   * @type {string}\n   */\n  type: 'element',\n\n  /**\n   * 元素名字\n   * Element name\n   * @type {string}\n   */\n  name: '',\n\n  /**\n   * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n   * ZRender instance will be assigned when element is associated with zrender\n   * @name module:/zrender/Element#__zr\n   * @type {module:zrender/ZRender}\n   */\n  __zr: null,\n\n  /**\n   * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n   * If ignore drawing and events of the element object\n   * @name module:/zrender/Element#ignore\n   * @type {boolean}\n   * @default false\n   */\n  ignore: false,\n\n  /**\n   * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n   * 该路径会继承被裁减对象的变换\n   * @type {module:zrender/graphic/Path}\n   * @see http://www.w3.org/TR/2dcontext/#clipping-region\n   * @readOnly\n   */\n  clipPath: null,\n\n  /**\n   * Drift element\n   * @param  {number} dx dx on the global space\n   * @param  {number} dy dy on the global space\n   */\n  drift: function (dx, dy) {\n    switch (this.draggable) {\n      case 'horizontal':\n        dy = 0;\n        break;\n\n      case 'vertical':\n        dx = 0;\n        break;\n    }\n\n    var m = this.transform;\n\n    if (!m) {\n      m = this.transform = [1, 0, 0, 1, 0, 0];\n    }\n\n    m[4] += dx;\n    m[5] += dy;\n    this.decomposeTransform();\n    this.dirty(false);\n  },\n\n  /**\n   * Hook before update\n   */\n  beforeUpdate: function () {},\n\n  /**\n   * Hook after update\n   */\n  afterUpdate: function () {},\n\n  /**\n   * Update each frame\n   */\n  update: function () {\n    this.updateTransform();\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {},\n\n  /**\n   * @protected\n   */\n  attrKV: function (key, value) {\n    if (key === 'position' || key === 'scale' || key === 'origin') {\n      // Copy the array\n      if (value) {\n        var target = this[key];\n\n        if (!target) {\n          target = this[key] = [];\n        }\n\n        target[0] = value[0];\n        target[1] = value[1];\n      }\n    } else {\n      this[key] = value;\n    }\n  },\n\n  /**\n   * Hide the element\n   */\n  hide: function () {\n    this.ignore = true;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * Show the element\n   */\n  show: function () {\n    this.ignore = false;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * @param {string|Object} key\n   * @param {*} value\n   */\n  attr: function (key, value) {\n    if (typeof key === 'string') {\n      this.attrKV(key, value);\n    } else if (zrUtil.isObject(key)) {\n      for (var name in key) {\n        if (key.hasOwnProperty(name)) {\n          this.attrKV(name, key[name]);\n        }\n      }\n    }\n\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * @param {module:zrender/graphic/Path} clipPath\n   */\n  setClipPath: function (clipPath) {\n    var zr = this.__zr;\n\n    if (zr) {\n      clipPath.addSelfToZr(zr);\n    } // Remove previous clip path\n\n\n    if (this.clipPath && this.clipPath !== clipPath) {\n      this.removeClipPath();\n    }\n\n    this.clipPath = clipPath;\n    clipPath.__zr = zr;\n    clipPath.__clipTarget = this;\n    this.dirty(false);\n  },\n\n  /**\n   */\n  removeClipPath: function () {\n    var clipPath = this.clipPath;\n\n    if (clipPath) {\n      if (clipPath.__zr) {\n        clipPath.removeSelfFromZr(clipPath.__zr);\n      }\n\n      clipPath.__zr = null;\n      clipPath.__clipTarget = null;\n      this.clipPath = null;\n      this.dirty(false);\n    }\n  },\n\n  /**\n   * Add self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  addSelfToZr: function (zr) {\n    this.__zr = zr; // 添加动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.addAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.addSelfToZr(zr);\n    }\n  },\n\n  /**\n   * Remove self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  removeSelfFromZr: function (zr) {\n    this.__zr = null; // 移除动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.removeAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.removeSelfFromZr(zr);\n    }\n  }\n};\nzrUtil.mixin(Element, Animatable);\nzrUtil.mixin(Element, Transformable);\nzrUtil.mixin(Element, Eventful);\nvar _default = Element;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1044:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Clip = __webpack_require__(1094);\n\nvar color = __webpack_require__(1002);\n\nvar _util = __webpack_require__(978);\n\nvar isArrayLike = _util.isArrayLike;\n\n/**\n * @module echarts/animation/Animator\n */\nvar arraySlice = Array.prototype.slice;\n\nfunction defaultGetter(target, key) {\n  return target[key];\n}\n\nfunction defaultSetter(target, key, value) {\n  target[key] = value;\n}\n/**\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} percent\n * @return {number}\n */\n\n\nfunction interpolateNumber(p0, p1, percent) {\n  return (p1 - p0) * percent + p0;\n}\n/**\n * @param  {string} p0\n * @param  {string} p1\n * @param  {number} percent\n * @return {string}\n */\n\n\nfunction interpolateString(p0, p1, percent) {\n  return percent > 0.5 ? p1 : p0;\n}\n/**\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {number} percent\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction interpolateArray(p0, p1, percent, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = interpolateNumber(p0[i], p1[i], percent);\n    }\n  } else {\n    var len2 = len && p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = interpolateNumber(p0[i][j], p1[i][j], percent);\n      }\n    }\n  }\n} // arr0 is source array, arr1 is target array.\n// Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n\n\nfunction fillArr(arr0, arr1, arrDim) {\n  var arr0Len = arr0.length;\n  var arr1Len = arr1.length;\n\n  if (arr0Len !== arr1Len) {\n    // FIXME Not work for TypedArray\n    var isPreviousLarger = arr0Len > arr1Len;\n\n    if (isPreviousLarger) {\n      // Cut the previous\n      arr0.length = arr1Len;\n    } else {\n      // Fill the previous\n      for (var i = arr0Len; i < arr1Len; i++) {\n        arr0.push(arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i]));\n      }\n    }\n  } // Handling NaN value\n\n\n  var len2 = arr0[0] && arr0[0].length;\n\n  for (var i = 0; i < arr0.length; i++) {\n    if (arrDim === 1) {\n      if (isNaN(arr0[i])) {\n        arr0[i] = arr1[i];\n      }\n    } else {\n      for (var j = 0; j < len2; j++) {\n        if (isNaN(arr0[i][j])) {\n          arr0[i][j] = arr1[i][j];\n        }\n      }\n    }\n  }\n}\n/**\n * @param  {Array} arr0\n * @param  {Array} arr1\n * @param  {number} arrDim\n * @return {boolean}\n */\n\n\nfunction isArraySame(arr0, arr1, arrDim) {\n  if (arr0 === arr1) {\n    return true;\n  }\n\n  var len = arr0.length;\n\n  if (len !== arr1.length) {\n    return false;\n  }\n\n  if (arrDim === 1) {\n    for (var i = 0; i < len; i++) {\n      if (arr0[i] !== arr1[i]) {\n        return false;\n      }\n    }\n  } else {\n    var len2 = arr0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        if (arr0[i][j] !== arr1[i][j]) {\n          return false;\n        }\n      }\n    }\n  }\n\n  return true;\n}\n/**\n * Catmull Rom interpolate array\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {Array} p2\n * @param  {Array} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction catmullRomInterpolateArray(p0, p1, p2, p3, t, t2, t3, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = catmullRomInterpolate(p0[i], p1[i], p2[i], p3[i], t, t2, t3);\n    }\n  } else {\n    var len2 = p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = catmullRomInterpolate(p0[i][j], p1[i][j], p2[i][j], p3[i][j], t, t2, t3);\n      }\n    }\n  }\n}\n/**\n * Catmull Rom interpolate number\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @return {number}\n */\n\n\nfunction catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n\nfunction cloneValue(value) {\n  if (isArrayLike(value)) {\n    var len = value.length;\n\n    if (isArrayLike(value[0])) {\n      var ret = [];\n\n      for (var i = 0; i < len; i++) {\n        ret.push(arraySlice.call(value[i]));\n      }\n\n      return ret;\n    }\n\n    return arraySlice.call(value);\n  }\n\n  return value;\n}\n\nfunction rgba2String(rgba) {\n  rgba[0] = Math.floor(rgba[0]);\n  rgba[1] = Math.floor(rgba[1]);\n  rgba[2] = Math.floor(rgba[2]);\n  return 'rgba(' + rgba.join(',') + ')';\n}\n\nfunction getArrayDim(keyframes) {\n  var lastValue = keyframes[keyframes.length - 1].value;\n  return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\n}\n\nfunction createTrackClip(animator, easing, oneTrackDone, keyframes, propName, forceAnimate) {\n  var getter = animator._getter;\n  var setter = animator._setter;\n  var useSpline = easing === 'spline';\n  var trackLen = keyframes.length;\n\n  if (!trackLen) {\n    return;\n  } // Guess data type\n\n\n  var firstVal = keyframes[0].value;\n  var isValueArray = isArrayLike(firstVal);\n  var isValueColor = false;\n  var isValueString = false; // For vertices morphing\n\n  var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\n  var trackMaxTime; // Sort keyframe as ascending\n\n  keyframes.sort(function (a, b) {\n    return a.time - b.time;\n  });\n  trackMaxTime = keyframes[trackLen - 1].time; // Percents of each keyframe\n\n  var kfPercents = []; // Value of each keyframe\n\n  var kfValues = [];\n  var prevValue = keyframes[0].value;\n  var isAllValueEqual = true;\n\n  for (var i = 0; i < trackLen; i++) {\n    kfPercents.push(keyframes[i].time / trackMaxTime); // Assume value is a color when it is a string\n\n    var value = keyframes[i].value; // Check if value is equal, deep check if value is array\n\n    if (!(isValueArray && isArraySame(value, prevValue, arrDim) || !isValueArray && value === prevValue)) {\n      isAllValueEqual = false;\n    }\n\n    prevValue = value; // Try converting a string to a color array\n\n    if (typeof value == 'string') {\n      var colorArray = color.parse(value);\n\n      if (colorArray) {\n        value = colorArray;\n        isValueColor = true;\n      } else {\n        isValueString = true;\n      }\n    }\n\n    kfValues.push(value);\n  }\n\n  if (!forceAnimate && isAllValueEqual) {\n    return;\n  }\n\n  var lastValue = kfValues[trackLen - 1]; // Polyfill array and NaN value\n\n  for (var i = 0; i < trackLen - 1; i++) {\n    if (isValueArray) {\n      fillArr(kfValues[i], lastValue, arrDim);\n    } else {\n      if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n        kfValues[i] = lastValue;\n      }\n    }\n  }\n\n  isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim); // Cache the key of last frame to speed up when\n  // animation playback is sequency\n\n  var lastFrame = 0;\n  var lastFramePercent = 0;\n  var start;\n  var w;\n  var p0;\n  var p1;\n  var p2;\n  var p3;\n\n  if (isValueColor) {\n    var rgba = [0, 0, 0, 0];\n  }\n\n  var onframe = function (target, percent) {\n    // Find the range keyframes\n    // kf1-----kf2---------current--------kf3\n    // find kf2 and kf3 and do interpolation\n    var frame; // In the easing function like elasticOut, percent may less than 0\n\n    if (percent < 0) {\n      frame = 0;\n    } else if (percent < lastFramePercent) {\n      // Start from next key\n      // PENDING start from lastFrame ?\n      start = Math.min(lastFrame + 1, trackLen - 1);\n\n      for (frame = start; frame >= 0; frame--) {\n        if (kfPercents[frame] <= percent) {\n          break;\n        }\n      } // PENDING really need to do this ?\n\n\n      frame = Math.min(frame, trackLen - 2);\n    } else {\n      for (frame = lastFrame; frame < trackLen; frame++) {\n        if (kfPercents[frame] > percent) {\n          break;\n        }\n      }\n\n      frame = Math.min(frame - 1, trackLen - 2);\n    }\n\n    lastFrame = frame;\n    lastFramePercent = percent;\n    var range = kfPercents[frame + 1] - kfPercents[frame];\n\n    if (range === 0) {\n      return;\n    } else {\n      w = (percent - kfPercents[frame]) / range;\n    }\n\n    if (useSpline) {\n      p1 = kfValues[frame];\n      p0 = kfValues[frame === 0 ? frame : frame - 1];\n      p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n      p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n\n      if (isValueArray) {\n        catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          value = catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(p1, p2, w);\n        } else {\n          value = catmullRomInterpolate(p0, p1, p2, p3, w, w * w, w * w * w);\n        }\n\n        setter(target, propName, value);\n      }\n    } else {\n      if (isValueArray) {\n        interpolateArray(kfValues[frame], kfValues[frame + 1], w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          interpolateArray(kfValues[frame], kfValues[frame + 1], w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n        } else {\n          value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n        }\n\n        setter(target, propName, value);\n      }\n    }\n  };\n\n  var clip = new Clip({\n    target: animator._target,\n    life: trackMaxTime,\n    loop: animator._loop,\n    delay: animator._delay,\n    onframe: onframe,\n    ondestroy: oneTrackDone\n  });\n\n  if (easing && easing !== 'spline') {\n    clip.easing = easing;\n  }\n\n  return clip;\n}\n/**\n * @alias module:zrender/animation/Animator\n * @constructor\n * @param {Object} target\n * @param {boolean} loop\n * @param {Function} getter\n * @param {Function} setter\n */\n\n\nvar Animator = function (target, loop, getter, setter) {\n  this._tracks = {};\n  this._target = target;\n  this._loop = loop || false;\n  this._getter = getter || defaultGetter;\n  this._setter = setter || defaultSetter;\n  this._clipCount = 0;\n  this._delay = 0;\n  this._doneList = [];\n  this._onframeList = [];\n  this._clipList = [];\n};\n\nAnimator.prototype = {\n  /**\n   * 设置动画关键帧\n   * @param  {number} time 关键帧时间，单位是ms\n   * @param  {Object} props 关键帧的属性值，key-value表示\n   * @return {module:zrender/animation/Animator}\n   */\n  when: function (time\n  /* ms */\n  , props) {\n    var tracks = this._tracks;\n\n    for (var propName in props) {\n      if (!props.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      if (!tracks[propName]) {\n        tracks[propName] = []; // Invalid value\n\n        var value = this._getter(this._target, propName);\n\n        if (value == null) {\n          // zrLog('Invalid property ' + propName);\n          continue;\n        } // If time is 0\n        //  Then props is given initialize value\n        // Else\n        //  Initialize value from current prop value\n\n\n        if (time !== 0) {\n          tracks[propName].push({\n            time: 0,\n            value: cloneValue(value)\n          });\n        }\n      }\n\n      tracks[propName].push({\n        time: time,\n        value: props[propName]\n      });\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加动画每一帧的回调函数\n   * @param  {Function} callback\n   * @return {module:zrender/animation/Animator}\n   */\n  during: function (callback) {\n    this._onframeList.push(callback);\n\n    return this;\n  },\n  pause: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].pause();\n    }\n\n    this._paused = true;\n  },\n  resume: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].resume();\n    }\n\n    this._paused = false;\n  },\n  isPaused: function () {\n    return !!this._paused;\n  },\n  _doneCallback: function () {\n    // Clear all tracks\n    this._tracks = {}; // Clear all clips\n\n    this._clipList.length = 0;\n    var doneList = this._doneList;\n    var len = doneList.length;\n\n    for (var i = 0; i < len; i++) {\n      doneList[i].call(this);\n    }\n  },\n\n  /**\n   * 开始执行动画\n   * @param  {string|Function} [easing]\n   *         动画缓动函数，详见{@link module:zrender/animation/easing}\n   * @param  {boolean} forceAnimate\n   * @return {module:zrender/animation/Animator}\n   */\n  start: function (easing, forceAnimate) {\n    var self = this;\n    var clipCount = 0;\n\n    var oneTrackDone = function () {\n      clipCount--;\n\n      if (!clipCount) {\n        self._doneCallback();\n      }\n    };\n\n    var lastClip;\n\n    for (var propName in this._tracks) {\n      if (!this._tracks.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      var clip = createTrackClip(this, easing, oneTrackDone, this._tracks[propName], propName, forceAnimate);\n\n      if (clip) {\n        this._clipList.push(clip);\n\n        clipCount++; // If start after added to animation\n\n        if (this.animation) {\n          this.animation.addClip(clip);\n        }\n\n        lastClip = clip;\n      }\n    } // Add during callback on the last clip\n\n\n    if (lastClip) {\n      var oldOnFrame = lastClip.onframe;\n\n      lastClip.onframe = function (target, percent) {\n        oldOnFrame(target, percent);\n\n        for (var i = 0; i < self._onframeList.length; i++) {\n          self._onframeList[i](target, percent);\n        }\n      };\n    } // This optimization will help the case that in the upper application\n    // the view may be refreshed frequently, where animation will be\n    // called repeatly but nothing changed.\n\n\n    if (!clipCount) {\n      this._doneCallback();\n    }\n\n    return this;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stop: function (forwardToLast) {\n    var clipList = this._clipList;\n    var animation = this.animation;\n\n    for (var i = 0; i < clipList.length; i++) {\n      var clip = clipList[i];\n\n      if (forwardToLast) {\n        // Move to last frame before stop\n        clip.onframe(this._target, 1);\n      }\n\n      animation && animation.removeClip(clip);\n    }\n\n    clipList.length = 0;\n  },\n\n  /**\n   * 设置动画延迟开始的时间\n   * @param  {number} time 单位ms\n   * @return {module:zrender/animation/Animator}\n   */\n  delay: function (time) {\n    this._delay = time;\n    return this;\n  },\n\n  /**\n   * 添加动画结束的回调\n   * @param  {Function} cb\n   * @return {module:zrender/animation/Animator}\n   */\n  done: function (cb) {\n    if (cb) {\n      this._doneList.push(cb);\n    }\n\n    return this;\n  },\n\n  /**\n   * @return {Array.<module:zrender/animation/Clip>}\n   */\n  getClips: function () {\n    return this._clipList;\n  }\n};\nvar _default = Animator;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1045:\n/***/ (function(module, exports) {\n\n// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n/**\n * Simple double linked list. Compared with array, it has O(1) remove operation.\n * @constructor\n */\nvar LinkedList = function () {\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n  this.head = null;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.tail = null;\n  this._len = 0;\n};\n\nvar linkedListProto = LinkedList.prototype;\n/**\n * Insert a new value at the tail\n * @param  {} val\n * @return {module:zrender/core/LRU~Entry}\n */\n\nlinkedListProto.insert = function (val) {\n  var entry = new Entry(val);\n  this.insertEntry(entry);\n  return entry;\n};\n/**\n * Insert an entry at the tail\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.insertEntry = function (entry) {\n  if (!this.head) {\n    this.head = this.tail = entry;\n  } else {\n    this.tail.next = entry;\n    entry.prev = this.tail;\n    entry.next = null;\n    this.tail = entry;\n  }\n\n  this._len++;\n};\n/**\n * Remove entry.\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.remove = function (entry) {\n  var prev = entry.prev;\n  var next = entry.next;\n\n  if (prev) {\n    prev.next = next;\n  } else {\n    // Is head\n    this.head = next;\n  }\n\n  if (next) {\n    next.prev = prev;\n  } else {\n    // Is tail\n    this.tail = prev;\n  }\n\n  entry.next = entry.prev = null;\n  this._len--;\n};\n/**\n * @return {number}\n */\n\n\nlinkedListProto.len = function () {\n  return this._len;\n};\n/**\n * Clear list\n */\n\n\nlinkedListProto.clear = function () {\n  this.head = this.tail = null;\n  this._len = 0;\n};\n/**\n * @constructor\n * @param {} val\n */\n\n\nvar Entry = function (val) {\n  /**\n   * @type {}\n   */\n  this.value = val;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.next;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.prev;\n};\n/**\n * LRU Cache\n * @constructor\n * @alias module:zrender/core/LRU\n */\n\n\nvar LRU = function (maxSize) {\n  this._list = new LinkedList();\n  this._map = {};\n  this._maxSize = maxSize || 10;\n  this._lastRemovedEntry = null;\n};\n\nvar LRUProto = LRU.prototype;\n/**\n * @param  {string} key\n * @param  {} value\n * @return {} Removed value\n */\n\nLRUProto.put = function (key, value) {\n  var list = this._list;\n  var map = this._map;\n  var removed = null;\n\n  if (map[key] == null) {\n    var len = list.len(); // Reuse last removed entry\n\n    var entry = this._lastRemovedEntry;\n\n    if (len >= this._maxSize && len > 0) {\n      // Remove the least recently used\n      var leastUsedEntry = list.head;\n      list.remove(leastUsedEntry);\n      delete map[leastUsedEntry.key];\n      removed = leastUsedEntry.value;\n      this._lastRemovedEntry = leastUsedEntry;\n    }\n\n    if (entry) {\n      entry.value = value;\n    } else {\n      entry = new Entry(value);\n    }\n\n    entry.key = key;\n    list.insertEntry(entry);\n    map[key] = entry;\n  }\n\n  return removed;\n};\n/**\n * @param  {string} key\n * @return {}\n */\n\n\nLRUProto.get = function (key) {\n  var entry = this._map[key];\n  var list = this._list;\n\n  if (entry != null) {\n    // Put the latest used entry in the tail\n    if (entry !== list.tail) {\n      list.remove(entry);\n      list.insertEntry(entry);\n    }\n\n    return entry.value;\n  }\n};\n/**\n * Clear the cache\n */\n\n\nLRUProto.clear = function () {\n  this._list.clear();\n\n  this._map = {};\n};\n\nvar _default = LRU;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1046:\n/***/ (function(module, exports) {\n\nvar STYLE_COMMON_PROPS = [['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'], ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]]; // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n// var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\nvar Style = function (opts, host) {\n  this.extendFrom(opts, false);\n  this.host = host;\n};\n\nfunction createLinearGradient(ctx, obj, rect) {\n  var x = obj.x == null ? 0 : obj.x;\n  var x2 = obj.x2 == null ? 1 : obj.x2;\n  var y = obj.y == null ? 0 : obj.y;\n  var y2 = obj.y2 == null ? 0 : obj.y2;\n\n  if (!obj.global) {\n    x = x * rect.width + rect.x;\n    x2 = x2 * rect.width + rect.x;\n    y = y * rect.height + rect.y;\n    y2 = y2 * rect.height + rect.y;\n  }\n\n  var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n  return canvasGradient;\n}\n\nfunction createRadialGradient(ctx, obj, rect) {\n  var width = rect.width;\n  var height = rect.height;\n  var min = Math.min(width, height);\n  var x = obj.x == null ? 0.5 : obj.x;\n  var y = obj.y == null ? 0.5 : obj.y;\n  var r = obj.r == null ? 0.5 : obj.r;\n\n  if (!obj.global) {\n    x = x * width + rect.x;\n    y = y * height + rect.y;\n    r = r * min;\n  }\n\n  var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n  return canvasGradient;\n}\n\nStyle.prototype = {\n  constructor: Style,\n\n  /**\n   * @type {module:zrender/graphic/Displayable}\n   */\n  host: null,\n\n  /**\n   * @type {string}\n   */\n  fill: '#000',\n\n  /**\n   * @type {string}\n   */\n  stroke: null,\n\n  /**\n   * @type {number}\n   */\n  opacity: 1,\n\n  /**\n   * @type {Array.<number>}\n   */\n  lineDash: null,\n\n  /**\n   * @type {number}\n   */\n  lineDashOffset: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetY: 0,\n\n  /**\n   * @type {number}\n   */\n  lineWidth: 1,\n\n  /**\n   * If stroke ignore scale\n   * @type {Boolean}\n   */\n  strokeNoScale: false,\n  // Bounding rect text configuration\n  // Not affected by element transform\n\n  /**\n   * @type {string}\n   */\n  text: null,\n\n  /**\n   * If `fontSize` or `fontFamily` exists, `font` will be reset by\n   * `fontSize`, `fontStyle`, `fontWeight`, `fontFamily`.\n   * So do not visit it directly in upper application (like echarts),\n   * but use `contain/text#makeFont` instead.\n   * @type {string}\n   */\n  font: null,\n\n  /**\n   * The same as font. Use font please.\n   * @deprecated\n   * @type {string}\n   */\n  textFont: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontStyle: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontWeight: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * Should be 12 but not '12px'.\n   * @type {number}\n   */\n  fontSize: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontFamily: null,\n\n  /**\n   * Reserved for special functinality, like 'hr'.\n   * @type {string}\n   */\n  textTag: null,\n\n  /**\n   * @type {string}\n   */\n  textFill: '#000',\n\n  /**\n   * @type {string}\n   */\n  textStroke: null,\n\n  /**\n   * @type {number}\n   */\n  textWidth: null,\n\n  /**\n   * Only for textBackground.\n   * @type {number}\n   */\n  textHeight: null,\n\n  /**\n   * textStroke may be set as some color as a default\n   * value in upper applicaion, where the default value\n   * of textStrokeWidth should be 0 to make sure that\n   * user can choose to do not use text stroke.\n   * @type {number}\n   */\n  textStrokeWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textLineHeight: null,\n\n  /**\n   * 'inside', 'left', 'right', 'top', 'bottom'\n   * [x, y]\n   * Based on x, y of rect.\n   * @type {string|Array.<number>}\n   * @default 'inside'\n   */\n  textPosition: 'inside',\n\n  /**\n   * If not specified, use the boundingRect of a `displayable`.\n   * @type {Object}\n   */\n  textRect: null,\n\n  /**\n   * [x, y]\n   * @type {Array.<number>}\n   */\n  textOffset: null,\n\n  /**\n   * @type {string}\n   */\n  textAlign: null,\n\n  /**\n   * @type {string}\n   */\n  textVerticalAlign: null,\n\n  /**\n   * @type {number}\n   */\n  textDistance: 5,\n\n  /**\n   * @type {string}\n   */\n  textShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetY: 0,\n\n  /**\n   * @type {string}\n   */\n  textBoxShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetY: 0,\n\n  /**\n   * Whether transform text.\n   * Only useful in Path and Image element\n   * @type {boolean}\n   */\n  transformText: false,\n\n  /**\n   * Text rotate around position of Path or Image\n   * Only useful in Path and Image element and transformText is false.\n   */\n  textRotation: 0,\n\n  /**\n   * Text origin of text rotation, like [10, 40].\n   * Based on x, y of rect.\n   * Useful in label rotation of circular symbol.\n   * By default, this origin is textPosition.\n   * Can be 'center'.\n   * @type {string|Array.<number>}\n   */\n  textOrigin: null,\n\n  /**\n   * @type {string}\n   */\n  textBackgroundColor: null,\n\n  /**\n   * @type {string}\n   */\n  textBorderColor: null,\n\n  /**\n   * @type {number}\n   */\n  textBorderWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textBorderRadius: 0,\n\n  /**\n   * Can be `2` or `[2, 4]` or `[2, 3, 4, 5]`\n   * @type {number|Array.<number>}\n   */\n  textPadding: null,\n\n  /**\n   * Text styles for rich text.\n   * @type {Object}\n   */\n  rich: null,\n\n  /**\n   * {outerWidth, outerHeight, ellipsis, placeholder}\n   * @type {Object}\n   */\n  truncate: null,\n\n  /**\n   * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n   * @type {string}\n   */\n  blend: null,\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  bind: function (ctx, el, prevEl) {\n    var style = this;\n    var prevStyle = prevEl && prevEl.style;\n    var firstDraw = !prevStyle;\n\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n      var prop = STYLE_COMMON_PROPS[i];\n      var styleName = prop[0];\n\n      if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n        // FIXME Invalid property value will cause style leak from previous element.\n        ctx[styleName] = style[styleName] || prop[1];\n      }\n    }\n\n    if (firstDraw || style.fill !== prevStyle.fill) {\n      ctx.fillStyle = style.fill;\n    }\n\n    if (firstDraw || style.stroke !== prevStyle.stroke) {\n      ctx.strokeStyle = style.stroke;\n    }\n\n    if (firstDraw || style.opacity !== prevStyle.opacity) {\n      ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n    }\n\n    if (firstDraw || style.blend !== prevStyle.blend) {\n      ctx.globalCompositeOperation = style.blend || 'source-over';\n    }\n\n    if (this.hasStroke()) {\n      var lineWidth = style.lineWidth;\n      ctx.lineWidth = lineWidth / (this.strokeNoScale && el && el.getLineScale ? el.getLineScale() : 1);\n    }\n  },\n  hasFill: function () {\n    var fill = this.fill;\n    return fill != null && fill !== 'none';\n  },\n  hasStroke: function () {\n    var stroke = this.stroke;\n    return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n  },\n\n  /**\n   * Extend from other style\n   * @param {zrender/graphic/Style} otherStyle\n   * @param {boolean} overwrite true: overwrirte any way.\n   *                            false: overwrite only when !target.hasOwnProperty\n   *                            others: overwrite when property is not null/undefined.\n   */\n  extendFrom: function (otherStyle, overwrite) {\n    if (otherStyle) {\n      for (var name in otherStyle) {\n        if (otherStyle.hasOwnProperty(name) && (overwrite === true || (overwrite === false ? !this.hasOwnProperty(name) : otherStyle[name] != null))) {\n          this[name] = otherStyle[name];\n        }\n      }\n    }\n  },\n\n  /**\n   * Batch setting style with a given object\n   * @param {Object|string} obj\n   * @param {*} [obj]\n   */\n  set: function (obj, value) {\n    if (typeof obj === 'string') {\n      this[obj] = value;\n    } else {\n      this.extendFrom(obj, true);\n    }\n  },\n\n  /**\n   * Clone\n   * @return {zrender/graphic/Style} [description]\n   */\n  clone: function () {\n    var newStyle = new this.constructor();\n    newStyle.extendFrom(this, true);\n    return newStyle;\n  },\n  getGradient: function (ctx, obj, rect) {\n    var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n    var canvasGradient = method(ctx, obj, rect);\n    var colorStops = obj.colorStops;\n\n    for (var i = 0; i < colorStops.length; i++) {\n      canvasGradient.addColorStop(colorStops[i].offset, colorStops[i].color);\n    }\n\n    return canvasGradient;\n  }\n};\nvar styleProto = Style.prototype;\n\nfor (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n  var prop = STYLE_COMMON_PROPS[i];\n\n  if (!(prop[0] in styleProto)) {\n    styleProto[prop[0]] = prop[1];\n  }\n} // Provide for others\n\n\nStyle.getGradient = styleProto.getGradient;\nvar _default = Style;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1047:\n/***/ (function(module, exports) {\n\nvar Pattern = function (image, repeat) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {image: ...}`, where this constructor will not be called.\n  this.image = image;\n  this.repeat = repeat; // Can be cloned\n\n  this.type = 'pattern';\n};\n\nPattern.prototype.getCanvasPattern = function (ctx) {\n  return ctx.createPattern(this.image, this.repeat || 'repeat');\n};\n\nvar _default = Pattern;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1048:\n/***/ (function(module, exports) {\n\nvar _default = typeof window !== 'undefined' && (window.requestAnimationFrame && window.requestAnimationFrame.bind(window) || // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\nwindow.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window) || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame) || function (func) {\n  setTimeout(func, 16);\n};\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1049:\n/***/ (function(module, exports) {\n\nfunction buildPath(ctx, shape) {\n  var x = shape.x;\n  var y = shape.y;\n  var width = shape.width;\n  var height = shape.height;\n  var r = shape.r;\n  var r1;\n  var r2;\n  var r3;\n  var r4; // Convert width and height to positive for better borderRadius\n\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n\n  if (typeof r === 'number') {\n    r1 = r2 = r3 = r4 = r;\n  } else if (r instanceof Array) {\n    if (r.length === 1) {\n      r1 = r2 = r3 = r4 = r[0];\n    } else if (r.length === 2) {\n      r1 = r3 = r[0];\n      r2 = r4 = r[1];\n    } else if (r.length === 3) {\n      r1 = r[0];\n      r2 = r4 = r[1];\n      r3 = r[2];\n    } else {\n      r1 = r[0];\n      r2 = r[1];\n      r3 = r[2];\n      r4 = r[3];\n    }\n  } else {\n    r1 = r2 = r3 = r4 = 0;\n  }\n\n  var total;\n\n  if (r1 + r2 > width) {\n    total = r1 + r2;\n    r1 *= width / total;\n    r2 *= width / total;\n  }\n\n  if (r3 + r4 > width) {\n    total = r3 + r4;\n    r3 *= width / total;\n    r4 *= width / total;\n  }\n\n  if (r2 + r3 > height) {\n    total = r2 + r3;\n    r2 *= height / total;\n    r3 *= height / total;\n  }\n\n  if (r1 + r4 > height) {\n    total = r1 + r4;\n    r1 *= height / total;\n    r4 *= height / total;\n  }\n\n  ctx.moveTo(x + r1, y);\n  ctx.lineTo(x + width - r2, y);\n  r2 !== 0 && ctx.quadraticCurveTo(x + width, y, x + width, y + r2);\n  ctx.lineTo(x + width, y + height - r3);\n  r3 !== 0 && ctx.quadraticCurveTo(x + width, y + height, x + width - r3, y + height);\n  ctx.lineTo(x + r4, y + height);\n  r4 !== 0 && ctx.quadraticCurveTo(x, y + height, x, y + height - r4);\n  ctx.lineTo(x, y + r1);\n  r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n}\n\nexports.buildPath = buildPath;\n\n/***/ }),\n\n/***/ 1050:\n/***/ (function(module, exports) {\n\nvar PI2 = Math.PI * 2;\n\nfunction normalizeRadian(angle) {\n  angle %= PI2;\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle;\n}\n\nexports.normalizeRadian = normalizeRadian;\n\n/***/ }),\n\n/***/ 1051:\n/***/ (function(module, exports) {\n\nfunction windingLine(x0, y0, x1, y1, x, y) {\n  if (y > y0 && y > y1 || y < y0 && y < y1) {\n    return 0;\n  } // Ignore horizontal line\n\n\n  if (y1 === y0) {\n    return 0;\n  }\n\n  var dir = y1 < y0 ? 1 : -1;\n  var t = (y - y0) / (y1 - y0); // Avoid winding error when intersection point is the connect point of two line of polygon\n\n  if (t === 1 || t === 0) {\n    dir = y1 < y0 ? 0.5 : -0.5;\n  }\n\n  var x_ = t * (x1 - x0) + x0;\n  return x_ > x ? dir : 0;\n}\n\nmodule.exports = windingLine;\n\n/***/ }),\n\n/***/ 1052:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar smoothSpline = __webpack_require__(1114);\n\nvar smoothBezier = __webpack_require__(1115);\n\nfunction buildPath(ctx, shape, closePath) {\n  var points = shape.points;\n  var smooth = shape.smooth;\n\n  if (points && points.length >= 2) {\n    if (smooth && smooth !== 'spline') {\n      var controlPoints = smoothBezier(points, smooth, closePath, shape.smoothConstraint);\n      ctx.moveTo(points[0][0], points[0][1]);\n      var len = points.length;\n\n      for (var i = 0; i < (closePath ? len : len - 1); i++) {\n        var cp1 = controlPoints[i * 2];\n        var cp2 = controlPoints[i * 2 + 1];\n        var p = points[(i + 1) % len];\n        ctx.bezierCurveTo(cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]);\n      }\n    } else {\n      if (smooth === 'spline') {\n        points = smoothSpline(points, closePath);\n      }\n\n      ctx.moveTo(points[0][0], points[0][1]);\n\n      for (var i = 1, l = points.length; i < l; i++) {\n        ctx.lineTo(points[i][0], points[i][1]);\n      }\n    }\n\n    closePath && ctx.closePath();\n  }\n}\n\nexports.buildPath = buildPath;\n\n/***/ }),\n\n/***/ 1053:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _clazz = __webpack_require__(992);\n\nvar set = _clazz.set;\nvar get = _clazz.get;\nvar _default = {\n  clearColorPalette: function () {\n    set(this, 'colorIdx', 0);\n    set(this, 'colorNameMap', {});\n  },\n  getColorFromPalette: function (name, scope) {\n    scope = scope || this;\n    var colorIdx = get(scope, 'colorIdx') || 0;\n    var colorNameMap = get(scope, 'colorNameMap') || set(scope, 'colorNameMap', {}); // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n\n    if (colorNameMap.hasOwnProperty(name)) {\n      return colorNameMap[name];\n    }\n\n    var colorPalette = this.get('color', true) || [];\n\n    if (!colorPalette.length) {\n      return;\n    }\n\n    var color = colorPalette[colorIdx];\n\n    if (name) {\n      colorNameMap[name] = color;\n    }\n\n    set(scope, 'colorIdx', (colorIdx + 1) % colorPalette.length);\n    return color;\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1054:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar numberUtil = __webpack_require__(981);\n\n/**\n * For testable.\n */\nvar roundNumber = numberUtil.round;\n/**\n * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n *                                Should be extent[0] < extent[1].\n * @param {number} splitNumber splitNumber should be >= 1.\n * @param {number} [minInterval]\n * @param {number} [maxInterval]\n * @return {Object} {interval, intervalPrecision, niceTickExtent}\n */\n\nfunction intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval) {\n  var result = {};\n  var span = extent[1] - extent[0];\n  var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n\n  if (minInterval != null && interval < minInterval) {\n    interval = result.interval = minInterval;\n  }\n\n  if (maxInterval != null && interval > maxInterval) {\n    interval = result.interval = maxInterval;\n  } // Tow more digital for tick.\n\n\n  var precision = result.intervalPrecision = getIntervalPrecision(interval); // Niced extent inside original extent\n\n  var niceTickExtent = result.niceTickExtent = [roundNumber(Math.ceil(extent[0] / interval) * interval, precision), roundNumber(Math.floor(extent[1] / interval) * interval, precision)];\n  fixExtent(niceTickExtent, extent);\n  return result;\n}\n/**\n * @param {number} interval\n * @return {number} interval precision\n */\n\n\nfunction getIntervalPrecision(interval) {\n  // Tow more digital for tick.\n  return numberUtil.getPrecisionSafe(interval) + 2;\n}\n\nfunction clamp(niceTickExtent, idx, extent) {\n  niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n} // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n\n\nfunction fixExtent(niceTickExtent, extent) {\n  !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n  !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n  clamp(niceTickExtent, 0, extent);\n  clamp(niceTickExtent, 1, extent);\n\n  if (niceTickExtent[0] > niceTickExtent[1]) {\n    niceTickExtent[0] = niceTickExtent[1];\n  }\n}\n\nfunction intervalScaleGetTicks(interval, extent, niceTickExtent, intervalPrecision) {\n  var ticks = []; // If interval is 0, return [];\n\n  if (!interval) {\n    return ticks;\n  } // Consider this case: using dataZoom toolbox, zoom and zoom.\n\n\n  var safeLimit = 10000;\n\n  if (extent[0] < niceTickExtent[0]) {\n    ticks.push(extent[0]);\n  }\n\n  var tick = niceTickExtent[0];\n\n  while (tick <= niceTickExtent[1]) {\n    ticks.push(tick); // Avoid rounding error\n\n    tick = roundNumber(tick + interval, intervalPrecision);\n\n    if (tick === ticks[ticks.length - 1]) {\n      // Consider out of safe float point, e.g.,\n      // -3711126.9907707 + 2e-10 === -3711126.9907707\n      break;\n    }\n\n    if (ticks.length > safeLimit) {\n      return [];\n    }\n  } // Consider this case: the last item of ticks is smaller\n  // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n\n\n  if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n    ticks.push(extent[1]);\n  }\n\n  return ticks;\n}\n\nexports.intervalScaleNiceTicks = intervalScaleNiceTicks;\nexports.getIntervalPrecision = getIntervalPrecision;\nexports.fixExtent = fixExtent;\nexports.intervalScaleGetTicks = intervalScaleGetTicks;\n\n/***/ }),\n\n/***/ 1055:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar modelUtil = __webpack_require__(982);\n\n/**\n * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} {point: [x, y], el: ...} point Will not be null.\n */\nfunction _default(finder, ecModel) {\n  var point = [];\n  var seriesIndex = finder.seriesIndex;\n  var seriesModel;\n\n  if (seriesIndex == null || !(seriesModel = ecModel.getSeriesByIndex(seriesIndex))) {\n    return {\n      point: []\n    };\n  }\n\n  var data = seriesModel.getData();\n  var dataIndex = modelUtil.queryDataIndex(data, finder);\n\n  if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n    return {\n      point: []\n    };\n  }\n\n  var el = data.getItemGraphicEl(dataIndex);\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (seriesModel.getTooltipPosition) {\n    point = seriesModel.getTooltipPosition(dataIndex) || [];\n  } else if (coordSys && coordSys.dataToPoint) {\n    point = coordSys.dataToPoint(data.getValues(zrUtil.map(coordSys.dimensions, function (dim) {\n      return seriesModel.coordDimToDataDim(dim)[0];\n    }), dataIndex, true)) || [];\n  } else if (el) {\n    // Use graphic bounding rect\n    var rect = el.getBoundingRect().clone();\n    rect.applyTransform(el.transform);\n    point = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n\n  return {\n    point: point,\n    el: el\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1056:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar env = __webpack_require__(986);\n\nvar modelUtil = __webpack_require__(982);\n\nvar get = modelUtil.makeGetter();\nvar each = zrUtil.each;\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n * @param {Function} handler\n *      param: {string} currTrigger\n *      param: {Array.<number>} point\n */\n\nfunction register(key, api, handler) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  get(zr).records || (get(zr).records = {});\n  initGlobalListeners(zr, api);\n  var record = get(zr).records[key] || (get(zr).records[key] = {});\n  record.handler = handler;\n}\n\nfunction initGlobalListeners(zr, api) {\n  if (get(zr).initialized) {\n    return;\n  }\n\n  get(zr).initialized = true;\n  useHandler('click', zrUtil.curry(doEnter, 'click'));\n  useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove')); // useHandler('mouseout', onLeave);\n\n  useHandler('globalout', onLeave);\n\n  function useHandler(eventType, cb) {\n    zr.on(eventType, function (e) {\n      var dis = makeDispatchAction(api);\n      each(get(zr).records, function (record) {\n        record && cb(record, e, dis.dispatchAction);\n      });\n      dispatchTooltipFinally(dis.pendings, api);\n    });\n  }\n}\n\nfunction dispatchTooltipFinally(pendings, api) {\n  var showLen = pendings.showTip.length;\n  var hideLen = pendings.hideTip.length;\n  var actuallyPayload;\n\n  if (showLen) {\n    actuallyPayload = pendings.showTip[showLen - 1];\n  } else if (hideLen) {\n    actuallyPayload = pendings.hideTip[hideLen - 1];\n  }\n\n  if (actuallyPayload) {\n    actuallyPayload.dispatchAction = null;\n    api.dispatchAction(actuallyPayload);\n  }\n}\n\nfunction onLeave(record, e, dispatchAction) {\n  record.handler('leave', null, dispatchAction);\n}\n\nfunction doEnter(currTrigger, record, e, dispatchAction) {\n  record.handler(currTrigger, e, dispatchAction);\n}\n\nfunction makeDispatchAction(api) {\n  var pendings = {\n    showTip: [],\n    hideTip: []\n  }; // FIXME\n  // better approach?\n  // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n  // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n  // So we have to add \"final stage\" to merge those dispatched actions.\n\n  var dispatchAction = function (payload) {\n    var pendingList = pendings[payload.type];\n\n    if (pendingList) {\n      pendingList.push(payload);\n    } else {\n      payload.dispatchAction = dispatchAction;\n      api.dispatchAction(payload);\n    }\n  };\n\n  return {\n    dispatchAction: dispatchAction,\n    pendings: pendings\n  };\n}\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction unregister(key, api) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  var record = (get(zr).records || {})[key];\n\n  if (record) {\n    get(zr).records[key] = null;\n  }\n}\n\nexports.register = register;\nexports.unregister = unregister;\n\n/***/ }),\n\n/***/ 1057:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _layout = __webpack_require__(990);\n\nvar getLayoutRect = _layout.getLayoutRect;\nvar layoutBox = _layout.box;\nvar positionElement = _layout.positionElement;\n\nvar formatUtil = __webpack_require__(985);\n\nvar graphic = __webpack_require__(980);\n\n/**\n * Layout list like component.\n * It will box layout each items in group of component and then position the whole group in the viewport\n * @param {module:zrender/group/Group} group\n * @param {module:echarts/model/Component} componentModel\n * @param {module:echarts/ExtensionAPI}\n */\nfunction layout(group, componentModel, api) {\n  var boxLayoutParams = componentModel.getBoxLayoutParams();\n  var padding = componentModel.get('padding');\n  var viewportSize = {\n    width: api.getWidth(),\n    height: api.getHeight()\n  };\n  var rect = getLayoutRect(boxLayoutParams, viewportSize, padding);\n  layoutBox(componentModel.get('orient'), group, componentModel.get('itemGap'), rect.width, rect.height);\n  positionElement(group, boxLayoutParams, viewportSize, padding);\n}\n\nfunction makeBackground(rect, componentModel) {\n  var padding = formatUtil.normalizeCssArray(componentModel.get('padding'));\n  var style = componentModel.getItemStyle(['color', 'opacity']);\n  style.fill = componentModel.get('backgroundColor');\n  var rect = new graphic.Rect({\n    shape: {\n      x: rect.x - padding[3],\n      y: rect.y - padding[0],\n      width: rect.width + padding[1] + padding[3],\n      height: rect.height + padding[0] + padding[2],\n      r: componentModel.get('borderRadius')\n    },\n    style: style,\n    silent: true,\n    z2: -1\n  }); // FIXME\n  // `subPixelOptimizeRect` may bring some gap between edge of viewpart\n  // and background rect when setting like `left: 0`, `top: 0`.\n  // graphic.subPixelOptimizeRect(rect);\n\n  return rect;\n}\n\nexports.layout = layout;\nexports.makeBackground = makeBackground;\n\n/***/ }),\n\n/***/ 1058:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar each = zrUtil.each;\nvar ATTR = '\\0_ec_hist_store';\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} newSnapshot {dataZoomId, batch: [payloadInfo, ...]}\n */\n\nfunction push(ecModel, newSnapshot) {\n  var store = giveStore(ecModel); // If previous dataZoom can not be found,\n  // complete an range with current range.\n\n  each(newSnapshot, function (batchItem, dataZoomId) {\n    var i = store.length - 1;\n\n    for (; i >= 0; i--) {\n      var snapshot = store[i];\n\n      if (snapshot[dataZoomId]) {\n        break;\n      }\n    }\n\n    if (i < 0) {\n      // No origin range set, create one by current range.\n      var dataZoomModel = ecModel.queryComponents({\n        mainType: 'dataZoom',\n        subType: 'select',\n        id: dataZoomId\n      })[0];\n\n      if (dataZoomModel) {\n        var percentRange = dataZoomModel.getPercentRange();\n        store[0][dataZoomId] = {\n          dataZoomId: dataZoomId,\n          start: percentRange[0],\n          end: percentRange[1]\n        };\n      }\n    }\n  });\n  store.push(newSnapshot);\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} snapshot\n */\n\n\nfunction pop(ecModel) {\n  var store = giveStore(ecModel);\n  var head = store[store.length - 1];\n  store.length > 1 && store.pop(); // Find top for all dataZoom.\n\n  var snapshot = {};\n  each(head, function (batchItem, dataZoomId) {\n    for (var i = store.length - 1; i >= 0; i--) {\n      var batchItem = store[i][dataZoomId];\n\n      if (batchItem) {\n        snapshot[dataZoomId] = batchItem;\n        break;\n      }\n    }\n  });\n  return snapshot;\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n */\n\n\nfunction clear(ecModel) {\n  ecModel[ATTR] = null;\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n * @return {number} records. always >= 1.\n */\n\n\nfunction count(ecModel) {\n  return giveStore(ecModel).length;\n}\n/**\n * [{key: dataZoomId, value: {dataZoomId, range}}, ...]\n * History length of each dataZoom may be different.\n * this._history[0] is used to store origin range.\n * @type {Array.<Object>}\n */\n\n\nfunction giveStore(ecModel) {\n  var store = ecModel[ATTR];\n\n  if (!store) {\n    store = ecModel[ATTR] = [{}];\n  }\n\n  return store;\n}\n\nexports.push = push;\nexports.pop = pop;\nexports.clear = clear;\nexports.count = count;\n\n/***/ }),\n\n/***/ 1059:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(979);\n\nvar zrUtil = __webpack_require__(978);\n\nvar graphic = __webpack_require__(980);\n\n__webpack_require__(1158);\n\n__webpack_require__(1185);\n\n// Grid view\necharts.extendComponentView({\n  type: 'grid',\n  render: function (gridModel, ecModel) {\n    this.group.removeAll();\n\n    if (gridModel.get('show')) {\n      this.group.add(new graphic.Rect({\n        shape: gridModel.coordinateSystem.getRect(),\n        style: zrUtil.defaults({\n          fill: gridModel.get('backgroundColor')\n        }, gridModel.getItemStyle()),\n        silent: true,\n        z2: -1\n      }));\n    }\n  }\n});\necharts.registerPreprocessor(function (option) {\n  // Only create grid when need\n  if (option.xAxis && option.yAxis && !option.grid) {\n    option.grid = {};\n  }\n});\n\n/***/ }),\n\n/***/ 1060:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar env = __webpack_require__(986);\n\n// Fix weird bug in some version of IE11 (like 11.0.9600.178**),\n// where exception \"unexpected call to method or property access\"\n// might be thrown when calling ctx.fill or ctx.stroke after a path\n// whose area size is zero is drawn and ctx.clip() is called and\n// shadowBlur is set. See #4572, #3112, #5777.\n// (e.g.,\n//  ctx.moveTo(10, 10);\n//  ctx.lineTo(20, 10);\n//  ctx.closePath();\n//  ctx.clip();\n//  ctx.shadowBlur = 10;\n//  ...\n//  ctx.fill();\n// )\nvar shadowTemp = [['shadowBlur', 0], ['shadowColor', '#000'], ['shadowOffsetX', 0], ['shadowOffsetY', 0]];\n\nfunction _default(orignalBrush) {\n  // version string can be: '11.0'\n  return env.browser.ie && env.browser.version >= 11 ? function () {\n    var clipPaths = this.__clipPaths;\n    var style = this.style;\n    var modified;\n\n    if (clipPaths) {\n      for (var i = 0; i < clipPaths.length; i++) {\n        var clipPath = clipPaths[i];\n        var shape = clipPath && clipPath.shape;\n        var type = clipPath && clipPath.type;\n\n        if (shape && (type === 'sector' && shape.startAngle === shape.endAngle || type === 'rect' && (!shape.width || !shape.height))) {\n          for (var j = 0; j < shadowTemp.length; j++) {\n            // It is save to put shadowTemp static, because shadowTemp\n            // will be all modified each item brush called.\n            shadowTemp[j][2] = style[shadowTemp[j][0]];\n            style[shadowTemp[j][0]] = shadowTemp[j][1];\n          }\n\n          modified = true;\n          break;\n        }\n      }\n    }\n\n    orignalBrush.apply(this, arguments);\n\n    if (modified) {\n      for (var j = 0; j < shadowTemp.length; j++) {\n        style[shadowTemp[j][0]] = shadowTemp[j][2];\n      }\n    }\n  } : orignalBrush;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1061:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar graphic = __webpack_require__(980);\n\nvar BaseAxisPointer = __webpack_require__(1062);\n\nvar viewHelper = __webpack_require__(1035);\n\nvar cartesianAxisHelper = __webpack_require__(1063);\n\nvar AxisView = __webpack_require__(1022);\n\nvar CartesianAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisPointerType = axisPointerModel.get('type');\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  },\n\n  /**\n   * @override\n   */\n  getHandleTransform: function (value, axisModel, axisPointerModel) {\n    var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n      labelInside: false\n    });\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n    return {\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  },\n\n  /**\n   * @override\n   */\n  updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisExtent = axis.getGlobalExtent(true);\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var dimIndex = axis.dim === 'x' ? 0 : 1;\n    var currPosition = transform.position;\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex]; // Make tooltip do not overlap axisPointer and in the middle of the grid.\n\n    var tooltipOptions = [{\n      verticalAlign: 'middle'\n    }, {\n      align: 'center'\n    }];\n    return {\n      position: currPosition,\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: tooltipOptions[dimIndex]\n    };\n  }\n});\n\nfunction getCartesian(grid, axis) {\n  var opt = {};\n  opt[axis.dim + 'AxisIndex'] = axis.index;\n  return grid.getCartesian(opt);\n}\n\nvar pointerShapeBuilder = {\n  line: function (axis, pixelValue, otherExtent, elStyle) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getAxisDimIndex(axis));\n    graphic.subPixelOptimizeLine({\n      shape: targetShape,\n      style: elStyle\n    });\n    return {\n      type: 'Line',\n      shape: targetShape\n    };\n  },\n  shadow: function (axis, pixelValue, otherExtent, elStyle) {\n    var bandWidth = axis.getBandWidth();\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getAxisDimIndex(axis))\n    };\n  }\n};\n\nfunction getAxisDimIndex(axis) {\n  return axis.dim === 'x' ? 0 : 1;\n}\n\nAxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\nvar _default = CartesianAxisPointer;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1062:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar clazzUtil = __webpack_require__(992);\n\nvar graphic = __webpack_require__(980);\n\nvar axisPointerModelHelper = __webpack_require__(1015);\n\nvar eventTool = __webpack_require__(998);\n\nvar throttleUtil = __webpack_require__(1008);\n\nvar modelUtil = __webpack_require__(982);\n\nvar get = modelUtil.makeGetter();\nvar clone = zrUtil.clone;\nvar bind = zrUtil.bind;\n/**\n * Base axis pointer class in 2D.\n * Implemenents {module:echarts/component/axis/IAxisPointer}.\n */\n\nfunction BaseAxisPointer() {}\n\nBaseAxisPointer.prototype = {\n  /**\n   * @private\n   */\n  _group: null,\n\n  /**\n   * @private\n   */\n  _lastGraphicKey: null,\n\n  /**\n   * @private\n   */\n  _handle: null,\n\n  /**\n   * @private\n   */\n  _dragging: false,\n\n  /**\n   * @private\n   */\n  _lastValue: null,\n\n  /**\n   * @private\n   */\n  _lastStatus: null,\n\n  /**\n   * @private\n   */\n  _payloadInfo: null,\n\n  /**\n   * In px, arbitrary value. Do not set too small,\n   * no animation is ok for most cases.\n   * @protected\n   */\n  animationThreshold: 15,\n\n  /**\n   * @implement\n   */\n  render: function (axisModel, axisPointerModel, api, forceRender) {\n    var value = axisPointerModel.get('value');\n    var status = axisPointerModel.get('status'); // Bind them to `this`, not in closure, otherwise they will not\n    // be replaced when user calling setOption in not merge mode.\n\n    this._axisModel = axisModel;\n    this._axisPointerModel = axisPointerModel;\n    this._api = api; // Optimize: `render` will be called repeatly during mouse move.\n    // So it is power consuming if performing `render` each time,\n    // especially on mobile device.\n\n    if (!forceRender && this._lastValue === value && this._lastStatus === status) {\n      return;\n    }\n\n    this._lastValue = value;\n    this._lastStatus = status;\n    var group = this._group;\n    var handle = this._handle;\n\n    if (!status || status === 'hide') {\n      // Do not clear here, for animation better.\n      group && group.hide();\n      handle && handle.hide();\n      return;\n    }\n\n    group && group.show();\n    handle && handle.show(); // Otherwise status is 'show'\n\n    var elOption = {};\n    this.makeElOption(elOption, value, axisModel, axisPointerModel, api); // Enable change axis pointer type.\n\n    var graphicKey = elOption.graphicKey;\n\n    if (graphicKey !== this._lastGraphicKey) {\n      this.clear(api);\n    }\n\n    this._lastGraphicKey = graphicKey;\n    var moveAnimation = this._moveAnimation = this.determineAnimation(axisModel, axisPointerModel);\n\n    if (!group) {\n      group = this._group = new graphic.Group();\n      this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n      this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n      api.getZr().add(group);\n    } else {\n      var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n      this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n      this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n    }\n\n    updateMandatoryProps(group, axisPointerModel, true);\n\n    this._renderHandle(value);\n  },\n\n  /**\n   * @implement\n   */\n  remove: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @implement\n   */\n  dispose: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @protected\n   */\n  determineAnimation: function (axisModel, axisPointerModel) {\n    var animation = axisPointerModel.get('animation');\n    var axis = axisModel.axis;\n    var isCategoryAxis = axis.type === 'category';\n    var useSnap = axisPointerModel.get('snap'); // Value axis without snap always do not snap.\n\n    if (!useSnap && !isCategoryAxis) {\n      return false;\n    }\n\n    if (animation === 'auto' || animation == null) {\n      var animationThreshold = this.animationThreshold;\n\n      if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n        return true;\n      } // It is important to auto animation when snap used. Consider if there is\n      // a dataZoom, animation will be disabled when too many points exist, while\n      // it will be enabled for better visual effect when little points exist.\n\n\n      if (useSnap) {\n        var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n        var axisExtent = axis.getExtent(); // Approximate band width\n\n        return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n      }\n\n      return false;\n    }\n\n    return animation === true;\n  },\n\n  /**\n   * add {pointer, label, graphicKey} to elOption\n   * @protected\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {// Shoule be implemenented by sub-class.\n  },\n\n  /**\n   * @protected\n   */\n  createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n    var pointerOption = elOption.pointer;\n\n    if (pointerOption) {\n      var pointerEl = get(group).pointerEl = new graphic[pointerOption.type](clone(elOption.pointer));\n      group.add(pointerEl);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n    if (elOption.label) {\n      var labelEl = get(group).labelEl = new graphic.Rect(clone(elOption.label));\n      group.add(labelEl);\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updatePointerEl: function (group, elOption, updateProps) {\n    var pointerEl = get(group).pointerEl;\n\n    if (pointerEl) {\n      pointerEl.setStyle(elOption.pointer.style);\n      updateProps(pointerEl, {\n        shape: elOption.pointer.shape\n      });\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n    var labelEl = get(group).labelEl;\n\n    if (labelEl) {\n      labelEl.setStyle(elOption.label.style);\n      updateProps(labelEl, {\n        // Consider text length change in vertical axis, animation should\n        // be used on shape, otherwise the effect will be weird.\n        shape: elOption.label.shape,\n        position: elOption.label.position\n      });\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderHandle: function (value) {\n    if (this._dragging || !this.updateHandleTransform) {\n      return;\n    }\n\n    var axisPointerModel = this._axisPointerModel;\n\n    var zr = this._api.getZr();\n\n    var handle = this._handle;\n    var handleModel = axisPointerModel.getModel('handle');\n    var status = axisPointerModel.get('status');\n\n    if (!handleModel.get('show') || !status || status === 'hide') {\n      handle && zr.remove(handle);\n      this._handle = null;\n      return;\n    }\n\n    var isInit;\n\n    if (!this._handle) {\n      isInit = true;\n      handle = this._handle = graphic.createIcon(handleModel.get('icon'), {\n        cursor: 'move',\n        draggable: true,\n        onmousemove: function (e) {\n          // Fot mobile devicem, prevent screen slider on the button.\n          eventTool.stop(e.event);\n        },\n        onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n        drift: bind(this._onHandleDragMove, this),\n        ondragend: bind(this._onHandleDragEnd, this)\n      });\n      zr.add(handle);\n    }\n\n    updateMandatoryProps(handle, axisPointerModel, false); // update style\n\n    var includeStyles = ['color', 'borderColor', 'borderWidth', 'opacity', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'];\n    handle.setStyle(handleModel.getItemStyle(null, includeStyles)); // update position\n\n    var handleSize = handleModel.get('size');\n\n    if (!zrUtil.isArray(handleSize)) {\n      handleSize = [handleSize, handleSize];\n    }\n\n    handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n    throttleUtil.createOrUpdate(this, '_doDispatchAxisPointer', handleModel.get('throttle') || 0, 'fixRate');\n\n    this._moveHandleToValue(value, isInit);\n  },\n\n  /**\n   * @private\n   */\n  _moveHandleToValue: function (value, isInit) {\n    updateProps(this._axisPointerModel, !isInit && this._moveAnimation, this._handle, getHandleTransProps(this.getHandleTransform(value, this._axisModel, this._axisPointerModel)));\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragMove: function (dx, dy) {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    this._dragging = true; // Persistent for throttle.\n\n    var trans = this.updateHandleTransform(getHandleTransProps(handle), [dx, dy], this._axisModel, this._axisPointerModel);\n    this._payloadInfo = trans;\n    handle.stopAnimation();\n    handle.attr(getHandleTransProps(trans));\n    get(handle).lastProp = null;\n\n    this._doDispatchAxisPointer();\n  },\n\n  /**\n   * Throttled method.\n   * @private\n   */\n  _doDispatchAxisPointer: function () {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var payloadInfo = this._payloadInfo;\n    var axisModel = this._axisModel;\n\n    this._api.dispatchAction({\n      type: 'updateAxisPointer',\n      x: payloadInfo.cursorPoint[0],\n      y: payloadInfo.cursorPoint[1],\n      tooltipOption: payloadInfo.tooltipOption,\n      axesInfo: [{\n        axisDim: axisModel.axis.dim,\n        axisIndex: axisModel.componentIndex\n      }]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragEnd: function (moveAnimation) {\n    this._dragging = false;\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var value = this._axisPointerModel.get('value'); // Consider snap or categroy axis, handle may be not consistent with\n    // axisPointer. So move handle to align the exact value position when\n    // drag ended.\n\n\n    this._moveHandleToValue(value); // For the effect: tooltip will be shown when finger holding on handle\n    // button, and will be hidden after finger left handle button.\n\n\n    this._api.dispatchAction({\n      type: 'hideTip'\n    });\n  },\n\n  /**\n   * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {number} value\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0}\n   */\n  getHandleTransform: null,\n\n  /**\n   * * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {Object} transform {position, rotation}\n   * @param {Array.<number>} delta [dx, dy]\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n   */\n  updateHandleTransform: null,\n\n  /**\n   * @private\n   */\n  clear: function (api) {\n    this._lastValue = null;\n    this._lastStatus = null;\n    var zr = api.getZr();\n    var group = this._group;\n    var handle = this._handle;\n\n    if (zr && group) {\n      this._lastGraphicKey = null;\n      group && zr.remove(group);\n      handle && zr.remove(handle);\n      this._group = null;\n      this._handle = null;\n      this._payloadInfo = null;\n    }\n  },\n\n  /**\n   * @protected\n   */\n  doClear: function () {// Implemented by sub-class if necessary.\n  },\n\n  /**\n   * @protected\n   * @param {Array.<number>} xy\n   * @param {Array.<number>} wh\n   * @param {number} [xDimIndex=0] or 1\n   */\n  buildLabel: function (xy, wh, xDimIndex) {\n    xDimIndex = xDimIndex || 0;\n    return {\n      x: xy[xDimIndex],\n      y: xy[1 - xDimIndex],\n      width: wh[xDimIndex],\n      height: wh[1 - xDimIndex]\n    };\n  }\n};\nBaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\nfunction updateProps(animationModel, moveAnimation, el, props) {\n  // Animation optimize.\n  if (!propsEqual(get(el).lastProp, props)) {\n    get(el).lastProp = props;\n    moveAnimation ? graphic.updateProps(el, props, animationModel) : (el.stopAnimation(), el.attr(props));\n  }\n}\n\nfunction propsEqual(lastProps, newProps) {\n  if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n    var equals = true;\n    zrUtil.each(newProps, function (item, key) {\n      equals = equals && propsEqual(lastProps[key], item);\n    });\n    return !!equals;\n  } else {\n    return lastProps === newProps;\n  }\n}\n\nfunction updateLabelShowHide(labelEl, axisPointerModel) {\n  labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n}\n\nfunction getHandleTransProps(trans) {\n  return {\n    position: trans.position.slice(),\n    rotation: trans.rotation || 0\n  };\n}\n\nfunction updateMandatoryProps(group, axisPointerModel, silent) {\n  var z = axisPointerModel.get('z');\n  var zlevel = axisPointerModel.get('zlevel');\n  group && group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n      el.silent = silent;\n    }\n  });\n}\n\nclazzUtil.enableClassExtend(BaseAxisPointer);\nvar _default = BaseAxisPointer;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1063:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\n/**\n * @param {Object} opt {labelInside}\n * @return {Object} {\n *  position, rotation, labelDirection, labelOffset,\n *  tickDirection, labelRotate, labelInterval, z2\n * }\n */\nfunction layout(gridModel, axisModel, opt) {\n  opt = opt || {};\n  var grid = gridModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var rawAxisPosition = axis.position;\n  var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n  var axisDim = axis.dim;\n  var rect = grid.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var idx = {\n    left: 0,\n    right: 1,\n    top: 0,\n    bottom: 1,\n    onZero: 2\n  };\n  var axisOffset = axisModel.get('offset') || 0;\n  var posBound = axisDim === 'x' ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset] : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\n\n  if (axis.onZero) {\n    var otherAxis = grid.getAxis(axisDim === 'x' ? 'y' : 'x', axis.onZeroAxisIndex);\n    var onZeroCoord = otherAxis.toGlobalCoord(otherAxis.dataToCoord(0));\n    posBound[idx['onZero']] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\n  } // Axis position\n\n\n  layout.position = [axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0], axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]]; // Axis rotation\n\n  layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1); // Tick and label direction, x y is axisDim\n\n  var dirMap = {\n    top: -1,\n    bottom: 1,\n    left: -1,\n    right: 1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n  layout.labelOffset = axis.onZero ? posBound[idx[rawAxisPosition]] - posBound[idx['onZero']] : 0;\n\n  if (axisModel.get('axisTick.inside')) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n    layout.labelDirection = -layout.labelDirection;\n  } // Special label rotation\n\n\n  var labelRotate = axisModel.get('axisLabel.rotate');\n  layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate; // label interval when auto mode.\n\n  layout.labelInterval = axis.getLabelInterval(); // Over splitLine and splitArea\n\n  layout.z2 = 1;\n  return layout;\n}\n\nexports.layout = layout;\n\n/***/ }),\n\n/***/ 1064:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(979);\n\nvar zrUtil = __webpack_require__(978);\n\nvar Model = __webpack_require__(989);\n\nvar LegendModel = echarts.extendComponentModel({\n  type: 'legend.plain',\n  dependencies: ['series'],\n  layoutMode: {\n    type: 'box',\n    // legend.width/height are maxWidth/maxHeight actually,\n    // whereas realy width/height is calculated by its content.\n    // (Setting {left: 10, right: 10} does not make sense).\n    // So consider the case:\n    // `setOption({legend: {left: 10});`\n    // then `setOption({legend: {right: 10});`\n    // The previous `left` should be cleared by setting `ignoreSize`.\n    ignoreSize: true\n  },\n  init: function (option, parentModel, ecModel) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    option.selected = option.selected || {};\n  },\n  mergeOption: function (option) {\n    LegendModel.superCall(this, 'mergeOption', option);\n  },\n  optionUpdated: function () {\n    this._updateData(this.ecModel);\n\n    var legendData = this._data; // If selectedMode is single, try to select one\n\n    if (legendData[0] && this.get('selectedMode') === 'single') {\n      var hasSelected = false; // If has any selected in option.selected\n\n      for (var i = 0; i < legendData.length; i++) {\n        var name = legendData[i].get('name');\n\n        if (this.isSelected(name)) {\n          // Force to unselect others\n          this.select(name);\n          hasSelected = true;\n          break;\n        }\n      } // Try select the first if selectedMode is single\n\n\n      !hasSelected && this.select(legendData[0].get('name'));\n    }\n  },\n  _updateData: function (ecModel) {\n    var legendData = zrUtil.map(this.get('data') || [], function (dataItem) {\n      // Can be string or number\n      if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n        dataItem = {\n          name: dataItem\n        };\n      }\n\n      return new Model(dataItem, this, this.ecModel);\n    }, this);\n    this._data = legendData;\n    var availableNames = zrUtil.map(ecModel.getSeries(), function (series) {\n      return series.name;\n    });\n    ecModel.eachSeries(function (seriesModel) {\n      if (seriesModel.legendDataProvider) {\n        var data = seriesModel.legendDataProvider();\n        availableNames = availableNames.concat(data.mapArray(data.getName));\n      }\n    });\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n\n    this._availableNames = availableNames;\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Model>}\n   */\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @param {string} name\n   */\n  select: function (name) {\n    var selected = this.option.selected;\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      var data = this._data;\n      zrUtil.each(data, function (dataItem) {\n        selected[dataItem.get('name')] = false;\n      });\n    }\n\n    selected[name] = true;\n  },\n\n  /**\n   * @param {string} name\n   */\n  unSelect: function (name) {\n    if (this.get('selectedMode') !== 'single') {\n      this.option.selected[name] = false;\n    }\n  },\n\n  /**\n   * @param {string} name\n   */\n  toggleSelected: function (name) {\n    var selected = this.option.selected; // Default is true\n\n    if (!selected.hasOwnProperty(name)) {\n      selected[name] = true;\n    }\n\n    this[selected[name] ? 'unSelect' : 'select'](name);\n  },\n\n  /**\n   * @param {string} name\n   */\n  isSelected: function (name) {\n    var selected = this.option.selected;\n    return !(selected.hasOwnProperty(name) && !selected[name]) && zrUtil.indexOf(this._availableNames, name) >= 0;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 4,\n    show: true,\n    // 布局方式，默认为水平布局，可选为：\n    // 'horizontal' | 'vertical'\n    orient: 'horizontal',\n    left: 'center',\n    // right: 'center',\n    top: 0,\n    // bottom: null,\n    // 水平对齐\n    // 'auto' | 'left' | 'right'\n    // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n    align: 'auto',\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 图例边框颜色\n    borderColor: '#ccc',\n    borderRadius: 0,\n    // 图例边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 图例内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 各个item之间的间隔，单位px，默认为10，\n    // 横向布局时为水平间隔，纵向布局时为纵向间隔\n    itemGap: 10,\n    // 图例图形宽度\n    itemWidth: 25,\n    // 图例图形高度\n    itemHeight: 14,\n    // 图例关闭时候的颜色\n    inactiveColor: '#ccc',\n    textStyle: {\n      // 图例文字颜色\n      color: '#333'\n    },\n    // formatter: '',\n    // 选择模式，默认开启图例开关\n    selectedMode: true,\n    // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n    // selected: null,\n    // 图例内容（详见legend.data，数组中每一项代表一个item\n    // data: [],\n    // Tooltip 相关配置\n    tooltip: {\n      show: false\n    }\n  }\n});\nvar _default = LegendModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1065:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(983);\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = __webpack_require__(979);\n\nvar zrUtil = __webpack_require__(978);\n\nvar _symbol = __webpack_require__(1003);\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = __webpack_require__(980);\n\nvar _listComponent = __webpack_require__(1057);\n\nvar makeBackground = _listComponent.makeBackground;\n\nvar layoutUtil = __webpack_require__(990);\n\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar Group = graphic.Group;\n\nvar _default = echarts.extendComponentView({\n  type: 'legend.plain',\n  newlineDisabled: false,\n\n  /**\n   * @override\n   */\n  init: function () {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this.group.add(this._contentGroup = new Group());\n    /**\n     * @private\n     * @type {module:zrender/Element}\n     */\n\n    this._backgroundEl;\n  },\n\n  /**\n   * @protected\n   */\n  getContentGroup: function () {\n    return this._contentGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (legendModel, ecModel, api) {\n    this.resetInner();\n\n    if (!legendModel.get('show', true)) {\n      return;\n    }\n\n    var itemAlign = legendModel.get('align');\n\n    if (!itemAlign || itemAlign === 'auto') {\n      itemAlign = legendModel.get('left') === 'right' && legendModel.get('orient') === 'vertical' ? 'right' : 'left';\n    }\n\n    this.renderInner(itemAlign, legendModel, ecModel, api); // Perform layout.\n\n    var positionInfo = legendModel.getBoxLayoutParams();\n    var viewportSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var padding = legendModel.get('padding');\n    var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize); // Place mainGroup, based on the calculated `mainRect`.\n\n    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({\n      width: mainRect.width,\n      height: mainRect.height\n    }, positionInfo), viewportSize, padding);\n    this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]); // Render background after group is layout.\n\n    this.group.add(this._backgroundEl = makeBackground(mainRect, legendModel));\n  },\n\n  /**\n   * @protected\n   */\n  resetInner: function () {\n    this.getContentGroup().removeAll();\n    this._backgroundEl && this.group.remove(this._backgroundEl);\n  },\n\n  /**\n   * @protected\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var contentGroup = this.getContentGroup();\n    var legendDrawnMap = zrUtil.createHashMap();\n    var selectMode = legendModel.get('selectedMode');\n    each(legendModel.getData(), function (itemModel, dataIndex) {\n      var name = itemModel.get('name'); // Use empty string or \\n as a newline string\n\n      if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n        contentGroup.add(new Group({\n          newline: true\n        }));\n        return;\n      }\n\n      var seriesModel = ecModel.getSeriesByName(name)[0];\n\n      if (legendDrawnMap.get(name)) {\n        // Have been drawed\n        return;\n      } // Series legend\n\n\n      if (seriesModel) {\n        var data = seriesModel.getData();\n        var color = data.getVisual('color'); // If color is a callback function\n\n        if (typeof color === 'function') {\n          // Use the first data\n          color = color(seriesModel.getDataParams(0));\n        } // Using rect symbol defaultly\n\n\n        var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n        var symbolType = data.getVisual('symbol');\n\n        var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode);\n\n        itemGroup.on('click', curry(dispatchSelectAction, name, api)).on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api));\n        legendDrawnMap.set(name, true);\n      } else {\n        // Data legend of pie, funnel\n        ecModel.eachRawSeries(function (seriesModel) {\n          // In case multiple series has same data name\n          if (legendDrawnMap.get(name)) {\n            return;\n          }\n\n          if (seriesModel.legendDataProvider) {\n            var data = seriesModel.legendDataProvider();\n            var idx = data.indexOfName(name);\n\n            if (idx < 0) {\n              return;\n            }\n\n            var color = data.getItemVisual(idx, 'color');\n            var legendSymbolType = 'roundRect';\n\n            var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, null, itemAlign, color, selectMode);\n\n            itemGroup.on('click', curry(dispatchSelectAction, name, api)) // FIXME Should not specify the series name\n            .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));\n            legendDrawnMap.set(name, true);\n          }\n        }, this);\n      }\n    }, this);\n  },\n  _createItem: function (name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode) {\n    var itemWidth = legendModel.get('itemWidth');\n    var itemHeight = legendModel.get('itemHeight');\n    var inactiveColor = legendModel.get('inactiveColor');\n    var isSelected = legendModel.isSelected(name);\n    var itemGroup = new Group();\n    var textStyleModel = itemModel.getModel('textStyle');\n    var itemIcon = itemModel.get('icon');\n    var tooltipModel = itemModel.getModel('tooltip');\n    var legendGlobalTooltipModel = tooltipModel.parentModel; // Use user given icon first\n\n    legendSymbolType = itemIcon || legendSymbolType;\n    itemGroup.add(createSymbol(legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor, true)); // Compose symbols\n    // PENDING\n\n    if (!itemIcon && symbolType // At least show one symbol, can't be all none\n    && (symbolType !== legendSymbolType || symbolType == 'none')) {\n      var size = itemHeight * 0.8;\n\n      if (symbolType === 'none') {\n        symbolType = 'circle';\n      } // Put symbol in the center\n\n\n      itemGroup.add(createSymbol(symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size, isSelected ? color : inactiveColor));\n    }\n\n    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n    var textAlign = itemAlign;\n    var formatter = legendModel.get('formatter');\n    var content = name;\n\n    if (typeof formatter === 'string' && formatter) {\n      content = formatter.replace('{name}', name != null ? name : '');\n    } else if (typeof formatter === 'function') {\n      content = formatter(name);\n    }\n\n    itemGroup.add(new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: content,\n        x: textX,\n        y: itemHeight / 2,\n        textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n        textAlign: textAlign,\n        textVerticalAlign: 'middle'\n      })\n    })); // Add a invisible rect to increase the area of mouse hover\n\n    var hitRect = new graphic.Rect({\n      shape: itemGroup.getBoundingRect(),\n      invisible: true,\n      tooltip: tooltipModel.get('show') ? zrUtil.extend({\n        content: name,\n        // Defaul formatter\n        formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n          return name;\n        },\n        formatterParams: {\n          componentType: 'legend',\n          legendIndex: legendModel.componentIndex,\n          name: name,\n          $vars: ['name']\n        }\n      }, tooltipModel.option) : null\n    });\n    itemGroup.add(hitRect);\n    itemGroup.eachChild(function (child) {\n      child.silent = true;\n    });\n    hitRect.silent = !selectMode;\n    this.getContentGroup().add(itemGroup);\n    graphic.setHoverStyle(itemGroup);\n    itemGroup.__legendDataIndex = dataIndex;\n    return itemGroup;\n  },\n\n  /**\n   * @protected\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup(); // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\n    var contentRect = contentGroup.getBoundingRect();\n    contentGroup.attr('position', [-contentRect.x, -contentRect.y]);\n    return this.group.getBoundingRect();\n  }\n});\n\nfunction dispatchSelectAction(name, api) {\n  api.dispatchAction({\n    type: 'legendToggleSelect',\n    name: name\n  });\n}\n\nfunction dispatchHighlightAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'highlight',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nfunction dispatchDownplayAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'downplay',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1066:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(983);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(978);\n\nvar Eventful = __webpack_require__(1001);\n\nvar graphic = __webpack_require__(980);\n\nvar interactionMutex = __webpack_require__(1083);\n\nvar DataDiffer = __webpack_require__(1013);\n\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar map = zrUtil.map;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathPow = Math.pow;\nvar COVER_Z = 10000;\nvar UNSELECT_THRESHOLD = 6;\nvar MIN_RESIZE_LINE_WIDTH = 6;\nvar MUTEX_RESOURCE_KEY = 'globalPan';\nvar DIRECTION_MAP = {\n  w: [0, 0],\n  e: [0, 1],\n  n: [1, 0],\n  s: [1, 1]\n};\nvar CURSOR_MAP = {\n  w: 'ew',\n  e: 'ew',\n  n: 'ns',\n  s: 'ns',\n  ne: 'nesw',\n  sw: 'nesw',\n  nw: 'nwse',\n  se: 'nwse'\n};\nvar DEFAULT_BRUSH_OPT = {\n  brushStyle: {\n    lineWidth: 2,\n    stroke: 'rgba(0,0,0,0.3)',\n    fill: 'rgba(0,0,0,0.1)'\n  },\n  transformable: true,\n  brushMode: 'single',\n  removeOnClick: false\n};\nvar baseUID = 0;\n/**\n * @alias module:echarts/component/helper/BrushController\n * @constructor\n * @mixin {module:zrender/mixin/Eventful}\n * @event module:echarts/component/helper/BrushController#brush\n *        params:\n *            areas: Array.<Array>, coord relates to container group,\n *                                    If no container specified, to global.\n *            opt {\n *                isEnd: boolean,\n *                removeOnClick: boolean\n *            }\n *\n * @param {module:zrender/zrender~ZRender} zr\n */\n\nfunction BrushController(zr) {\n  Eventful.call(this);\n  /**\n   * @type {module:zrender/zrender~ZRender}\n   * @private\n   */\n\n  this._zr = zr;\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n\n  this.group = new graphic.Group();\n  /**\n   * Only for drawing (after enabledBrush).\n   *     'line', 'rect', 'polygon' or false\n   *     If passing false/null/undefined, disable brush.\n   *     If passing 'auto', determined by panel.defaultBrushType\n   * @private\n   * @type {string}\n   */\n\n  this._brushType;\n  /**\n   * Only for drawing (after enabledBrush).\n   *\n   * @private\n   * @type {Object}\n   */\n\n  this._brushOption;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._panels;\n  /**\n   * @private\n   * @type {Array.<nubmer>}\n   */\n\n  this._track = [];\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._dragging;\n  /**\n   * @private\n   * @type {Array}\n   */\n\n  this._covers = [];\n  /**\n   * @private\n   * @type {moudule:zrender/container/Group}\n   */\n\n  this._creatingCover;\n  /**\n   * `true` means global panel\n   * @private\n   * @type {module:zrender/container/Group|boolean}\n   */\n\n  this._creatingPanel;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._enableGlobalPan;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this._uid = 'brushController_' + baseUID++;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._handlers = {};\n  each(mouseHandlers, function (handler, eventName) {\n    this._handlers[eventName] = zrUtil.bind(handler, this);\n  }, this);\n}\n\nBrushController.prototype = {\n  constructor: BrushController,\n\n  /**\n   * If set to null/undefined/false, select disabled.\n   * @param {Object} brushOption\n   * @param {string|boolean} brushOption.brushType 'line', 'rect', 'polygon' or false\n   *                          If passing false/null/undefined, disable brush.\n   *                          If passing 'auto', determined by panel.defaultBrushType.\n   *                              ('auto' can not be used in global panel)\n   * @param {number} [brushOption.brushMode='single'] 'single' or 'multiple'\n   * @param {boolean} [brushOption.transformable=true]\n   * @param {boolean} [brushOption.removeOnClick=false]\n   * @param {Object} [brushOption.brushStyle]\n   * @param {number} [brushOption.brushStyle.width]\n   * @param {number} [brushOption.brushStyle.lineWidth]\n   * @param {string} [brushOption.brushStyle.stroke]\n   * @param {string} [brushOption.brushStyle.fill]\n   * @param {number} [brushOption.z]\n   */\n  enableBrush: function (brushOption) {\n    this._brushType && doDisableBrush(this);\n    brushOption.brushType && doEnableBrush(this, brushOption);\n    return this;\n  },\n\n  /**\n   * @param {Array.<Object>} panelOpts If not pass, it is global brush.\n   *        Each items: {\n   *            panelId, // mandatory.\n   *            clipPath, // mandatory. function.\n   *            isTargetByCursor, // mandatory. function.\n   *            defaultBrushType, // optional, only used when brushType is 'auto'.\n   *            getLinearBrushOtherExtent, // optional. function.\n   *        }\n   */\n  setPanels: function (panelOpts) {\n    if (panelOpts && panelOpts.length) {\n      var panels = this._panels = {};\n      zrUtil.each(panelOpts, function (panelOpts) {\n        panels[panelOpts.panelId] = zrUtil.clone(panelOpts);\n      });\n    } else {\n      this._panels = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param {Object} [opt]\n   * @return {boolean} [opt.enableGlobalPan=false]\n   */\n  mount: function (opt) {\n    opt = opt || {};\n    this._enableGlobalPan = opt.enableGlobalPan;\n    var thisGroup = this.group;\n\n    this._zr.add(thisGroup);\n\n    thisGroup.attr({\n      position: opt.position || [0, 0],\n      rotation: opt.rotation || 0,\n      scale: opt.scale || [1, 1]\n    });\n    this._transform = thisGroup.getLocalTransform();\n    return this;\n  },\n  eachCover: function (cb, context) {\n    each(this._covers, cb, context);\n  },\n\n  /**\n   * Update covers.\n   * @param {Array.<Object>} brushOptionList Like:\n   *        [\n   *            {id: 'xx', brushType: 'line', range: [23, 44], brushStyle, transformable},\n   *            {id: 'yy', brushType: 'rect', range: [[23, 44], [23, 54]]},\n   *            ...\n   *        ]\n   *        `brushType` is required in each cover info. (can not be 'auto')\n   *        `id` is not mandatory.\n   *        `brushStyle`, `transformable` is not mandatory, use DEFAULT_BRUSH_OPT by default.\n   *        If brushOptionList is null/undefined, all covers removed.\n   */\n  updateCovers: function (brushOptionList) {\n    brushOptionList = zrUtil.map(brushOptionList, function (brushOption) {\n      return zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n    });\n    var tmpIdPrefix = '\\0-brush-index-';\n    var oldCovers = this._covers;\n    var newCovers = this._covers = [];\n    var controller = this;\n    var creatingCover = this._creatingCover;\n    new DataDiffer(oldCovers, brushOptionList, oldGetKey, getKey).add(addOrUpdate).update(addOrUpdate).remove(remove).execute();\n    return this;\n\n    function getKey(brushOption, index) {\n      return (brushOption.id != null ? brushOption.id : tmpIdPrefix + index) + '-' + brushOption.brushType;\n    }\n\n    function oldGetKey(cover, index) {\n      return getKey(cover.__brushOption, index);\n    }\n\n    function addOrUpdate(newIndex, oldIndex) {\n      var newBrushOption = brushOptionList[newIndex]; // Consider setOption in event listener of brushSelect,\n      // where updating cover when creating should be forbiden.\n\n      if (oldIndex != null && oldCovers[oldIndex] === creatingCover) {\n        newCovers[newIndex] = oldCovers[oldIndex];\n      } else {\n        var cover = newCovers[newIndex] = oldIndex != null ? (oldCovers[oldIndex].__brushOption = newBrushOption, oldCovers[oldIndex]) : endCreating(controller, createCover(controller, newBrushOption));\n        updateCoverAfterCreation(controller, cover);\n      }\n    }\n\n    function remove(oldIndex) {\n      if (oldCovers[oldIndex] !== creatingCover) {\n        controller.group.remove(oldCovers[oldIndex]);\n      }\n    }\n  },\n  unmount: function () {\n    this.enableBrush(false); // container may 'removeAll' outside.\n\n    clearCovers(this);\n\n    this._zr.remove(this.group);\n\n    return this;\n  },\n  dispose: function () {\n    this.unmount();\n    this.off();\n  }\n};\nzrUtil.mixin(BrushController, Eventful);\n\nfunction doEnableBrush(controller, brushOption) {\n  var zr = controller._zr; // Consider roam, which takes globalPan too.\n\n  if (!controller._enableGlobalPan) {\n    interactionMutex.take(zr, MUTEX_RESOURCE_KEY, controller._uid);\n  }\n\n  each(controller._handlers, function (handler, eventName) {\n    zr.on(eventName, handler);\n  });\n  controller._brushType = brushOption.brushType;\n  controller._brushOption = zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n}\n\nfunction doDisableBrush(controller) {\n  var zr = controller._zr;\n  interactionMutex.release(zr, MUTEX_RESOURCE_KEY, controller._uid);\n  each(controller._handlers, function (handler, eventName) {\n    zr.off(eventName, handler);\n  });\n  controller._brushType = controller._brushOption = null;\n}\n\nfunction createCover(controller, brushOption) {\n  var cover = coverRenderers[brushOption.brushType].createCover(controller, brushOption);\n  cover.__brushOption = brushOption;\n  updateZ(cover, brushOption);\n  controller.group.add(cover);\n  return cover;\n}\n\nfunction endCreating(controller, creatingCover) {\n  var coverRenderer = getCoverRenderer(creatingCover);\n\n  if (coverRenderer.endCreating) {\n    coverRenderer.endCreating(controller, creatingCover);\n    updateZ(creatingCover, creatingCover.__brushOption);\n  }\n\n  return creatingCover;\n}\n\nfunction updateCoverShape(controller, cover) {\n  var brushOption = cover.__brushOption;\n  getCoverRenderer(cover).updateCoverShape(controller, cover, brushOption.range, brushOption);\n}\n\nfunction updateZ(cover, brushOption) {\n  var z = brushOption.z;\n  z == null && (z = COVER_Z);\n  cover.traverse(function (el) {\n    el.z = z;\n    el.z2 = z; // Consider in given container.\n  });\n}\n\nfunction updateCoverAfterCreation(controller, cover) {\n  getCoverRenderer(cover).updateCommon(controller, cover);\n  updateCoverShape(controller, cover);\n}\n\nfunction getCoverRenderer(cover) {\n  return coverRenderers[cover.__brushOption.brushType];\n} // return target panel or `true` (means global panel)\n\n\nfunction getPanelByPoint(controller, e, localCursorPoint) {\n  var panels = controller._panels;\n\n  if (!panels) {\n    return true; // Global panel\n  }\n\n  var panel;\n  var transform = controller._transform;\n  each(panels, function (pn) {\n    pn.isTargetByCursor(e, localCursorPoint, transform) && (panel = pn);\n  });\n  return panel;\n} // Return a panel or true\n\n\nfunction getPanelByCover(controller, cover) {\n  var panels = controller._panels;\n\n  if (!panels) {\n    return true; // Global panel\n  }\n\n  var panelId = cover.__brushOption.panelId; // User may give cover without coord sys info,\n  // which is then treated as global panel.\n\n  return panelId != null ? panels[panelId] : true;\n}\n\nfunction clearCovers(controller) {\n  var covers = controller._covers;\n  var originalLength = covers.length;\n  each(covers, function (cover) {\n    controller.group.remove(cover);\n  }, controller);\n  covers.length = 0;\n  return !!originalLength;\n}\n\nfunction trigger(controller, opt) {\n  var areas = map(controller._covers, function (cover) {\n    var brushOption = cover.__brushOption;\n    var range = zrUtil.clone(brushOption.range);\n    return {\n      brushType: brushOption.brushType,\n      panelId: brushOption.panelId,\n      range: range\n    };\n  });\n  controller.trigger('brush', areas, {\n    isEnd: !!opt.isEnd,\n    removeOnClick: !!opt.removeOnClick\n  });\n}\n\nfunction shouldShowCover(controller) {\n  var track = controller._track;\n\n  if (!track.length) {\n    return false;\n  }\n\n  var p2 = track[track.length - 1];\n  var p1 = track[0];\n  var dx = p2[0] - p1[0];\n  var dy = p2[1] - p1[1];\n  var dist = mathPow(dx * dx + dy * dy, 0.5);\n  return dist > UNSELECT_THRESHOLD;\n}\n\nfunction getTrackEnds(track) {\n  var tail = track.length - 1;\n  tail < 0 && (tail = 0);\n  return [track[0], track[tail]];\n}\n\nfunction createBaseRectCover(doDrift, controller, brushOption, edgeNames) {\n  var cover = new graphic.Group();\n  cover.add(new graphic.Rect({\n    name: 'main',\n    style: makeStyle(brushOption),\n    silent: true,\n    draggable: true,\n    cursor: 'move',\n    drift: curry(doDrift, controller, cover, 'nswe'),\n    ondragend: curry(trigger, controller, {\n      isEnd: true\n    })\n  }));\n  each(edgeNames, function (name) {\n    cover.add(new graphic.Rect({\n      name: name,\n      style: {\n        opacity: 0\n      },\n      draggable: true,\n      silent: true,\n      invisible: true,\n      drift: curry(doDrift, controller, cover, name),\n      ondragend: curry(trigger, controller, {\n        isEnd: true\n      })\n    }));\n  });\n  return cover;\n}\n\nfunction updateBaseRect(controller, cover, localRange, brushOption) {\n  var lineWidth = brushOption.brushStyle.lineWidth || 0;\n  var handleSize = mathMax(lineWidth, MIN_RESIZE_LINE_WIDTH);\n  var x = localRange[0][0];\n  var y = localRange[1][0];\n  var xa = x - lineWidth / 2;\n  var ya = y - lineWidth / 2;\n  var x2 = localRange[0][1];\n  var y2 = localRange[1][1];\n  var x2a = x2 - handleSize + lineWidth / 2;\n  var y2a = y2 - handleSize + lineWidth / 2;\n  var width = x2 - x;\n  var height = y2 - y;\n  var widtha = width + lineWidth;\n  var heighta = height + lineWidth;\n  updateRectShape(controller, cover, 'main', x, y, width, height);\n\n  if (brushOption.transformable) {\n    updateRectShape(controller, cover, 'w', xa, ya, handleSize, heighta);\n    updateRectShape(controller, cover, 'e', x2a, ya, handleSize, heighta);\n    updateRectShape(controller, cover, 'n', xa, ya, widtha, handleSize);\n    updateRectShape(controller, cover, 's', xa, y2a, widtha, handleSize);\n    updateRectShape(controller, cover, 'nw', xa, ya, handleSize, handleSize);\n    updateRectShape(controller, cover, 'ne', x2a, ya, handleSize, handleSize);\n    updateRectShape(controller, cover, 'sw', xa, y2a, handleSize, handleSize);\n    updateRectShape(controller, cover, 'se', x2a, y2a, handleSize, handleSize);\n  }\n}\n\nfunction updateCommon(controller, cover) {\n  var brushOption = cover.__brushOption;\n  var transformable = brushOption.transformable;\n  var mainEl = cover.childAt(0);\n  mainEl.useStyle(makeStyle(brushOption));\n  mainEl.attr({\n    silent: !transformable,\n    cursor: transformable ? 'move' : 'default'\n  });\n  each(['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw'], function (name) {\n    var el = cover.childOfName(name);\n    var globalDir = getGlobalDirection(controller, name);\n    el && el.attr({\n      silent: !transformable,\n      invisible: !transformable,\n      cursor: transformable ? CURSOR_MAP[globalDir] + '-resize' : null\n    });\n  });\n}\n\nfunction updateRectShape(controller, cover, name, x, y, w, h) {\n  var el = cover.childOfName(name);\n  el && el.setShape(pointsToRect(clipByPanel(controller, cover, [[x, y], [x + w, y + h]])));\n}\n\nfunction makeStyle(brushOption) {\n  return zrUtil.defaults({\n    strokeNoScale: true\n  }, brushOption.brushStyle);\n}\n\nfunction formatRectRange(x, y, x2, y2) {\n  var min = [mathMin(x, x2), mathMin(y, y2)];\n  var max = [mathMax(x, x2), mathMax(y, y2)];\n  return [[min[0], max[0]], // x range\n  [min[1], max[1]] // y range\n  ];\n}\n\nfunction getTransform(controller) {\n  return graphic.getTransform(controller.group);\n}\n\nfunction getGlobalDirection(controller, localDirection) {\n  if (localDirection.length > 1) {\n    localDirection = localDirection.split('');\n    var globalDir = [getGlobalDirection(controller, localDirection[0]), getGlobalDirection(controller, localDirection[1])];\n    (globalDir[0] === 'e' || globalDir[0] === 'w') && globalDir.reverse();\n    return globalDir.join('');\n  } else {\n    var map = {\n      w: 'left',\n      e: 'right',\n      n: 'top',\n      s: 'bottom'\n    };\n    var inverseMap = {\n      left: 'w',\n      right: 'e',\n      top: 'n',\n      bottom: 's'\n    };\n    var globalDir = graphic.transformDirection(map[localDirection], getTransform(controller));\n    return inverseMap[globalDir];\n  }\n}\n\nfunction driftRect(toRectRange, fromRectRange, controller, cover, name, dx, dy, e) {\n  var brushOption = cover.__brushOption;\n  var rectRange = toRectRange(brushOption.range);\n  var localDelta = toLocalDelta(controller, dx, dy);\n  each(name.split(''), function (namePart) {\n    var ind = DIRECTION_MAP[namePart];\n    rectRange[ind[0]][ind[1]] += localDelta[ind[0]];\n  });\n  brushOption.range = fromRectRange(formatRectRange(rectRange[0][0], rectRange[1][0], rectRange[0][1], rectRange[1][1]));\n  updateCoverAfterCreation(controller, cover);\n  trigger(controller, {\n    isEnd: false\n  });\n}\n\nfunction driftPolygon(controller, cover, dx, dy, e) {\n  var range = cover.__brushOption.range;\n  var localDelta = toLocalDelta(controller, dx, dy);\n  each(range, function (point) {\n    point[0] += localDelta[0];\n    point[1] += localDelta[1];\n  });\n  updateCoverAfterCreation(controller, cover);\n  trigger(controller, {\n    isEnd: false\n  });\n}\n\nfunction toLocalDelta(controller, dx, dy) {\n  var thisGroup = controller.group;\n  var localD = thisGroup.transformCoordToLocal(dx, dy);\n  var localZero = thisGroup.transformCoordToLocal(0, 0);\n  return [localD[0] - localZero[0], localD[1] - localZero[1]];\n}\n\nfunction clipByPanel(controller, cover, data) {\n  var panel = getPanelByCover(controller, cover);\n  return panel && panel !== true ? panel.clipPath(data, controller._transform) : zrUtil.clone(data);\n}\n\nfunction pointsToRect(points) {\n  var xmin = mathMin(points[0][0], points[1][0]);\n  var ymin = mathMin(points[0][1], points[1][1]);\n  var xmax = mathMax(points[0][0], points[1][0]);\n  var ymax = mathMax(points[0][1], points[1][1]);\n  return {\n    x: xmin,\n    y: ymin,\n    width: xmax - xmin,\n    height: ymax - ymin\n  };\n}\n\nfunction resetCursor(controller, e, localCursorPoint) {\n  // Check active\n  if (!controller._brushType) {\n    return;\n  }\n\n  var zr = controller._zr;\n  var covers = controller._covers;\n  var currPanel = getPanelByPoint(controller, e, localCursorPoint); // Check whether in covers.\n\n  if (!controller._dragging) {\n    for (var i = 0; i < covers.length; i++) {\n      var brushOption = covers[i].__brushOption;\n\n      if (currPanel && (currPanel === true || brushOption.panelId === currPanel.panelId) && coverRenderers[brushOption.brushType].contain(covers[i], localCursorPoint[0], localCursorPoint[1])) {\n        // Use cursor style set on cover.\n        return;\n      }\n    }\n  }\n\n  currPanel && zr.setCursorStyle('crosshair');\n}\n\nfunction preventDefault(e) {\n  var rawE = e.event;\n  rawE.preventDefault && rawE.preventDefault();\n}\n\nfunction mainShapeContain(cover, x, y) {\n  return cover.childOfName('main').contain(x, y);\n}\n\nfunction updateCoverByMouse(controller, e, localCursorPoint, isEnd) {\n  var creatingCover = controller._creatingCover;\n  var panel = controller._creatingPanel;\n  var thisBrushOption = controller._brushOption;\n  var eventParams;\n\n  controller._track.push(localCursorPoint.slice());\n\n  if (shouldShowCover(controller) || creatingCover) {\n    if (panel && !creatingCover) {\n      thisBrushOption.brushMode === 'single' && clearCovers(controller);\n      var brushOption = zrUtil.clone(thisBrushOption);\n      brushOption.brushType = determineBrushType(brushOption.brushType, panel);\n      brushOption.panelId = panel === true ? null : panel.panelId;\n      creatingCover = controller._creatingCover = createCover(controller, brushOption);\n\n      controller._covers.push(creatingCover);\n    }\n\n    if (creatingCover) {\n      var coverRenderer = coverRenderers[determineBrushType(controller._brushType, panel)];\n      var coverBrushOption = creatingCover.__brushOption;\n      coverBrushOption.range = coverRenderer.getCreatingRange(clipByPanel(controller, creatingCover, controller._track));\n\n      if (isEnd) {\n        endCreating(controller, creatingCover);\n        coverRenderer.updateCommon(controller, creatingCover);\n      }\n\n      updateCoverShape(controller, creatingCover);\n      eventParams = {\n        isEnd: isEnd\n      };\n    }\n  } else if (isEnd && thisBrushOption.brushMode === 'single' && thisBrushOption.removeOnClick) {\n    // Help user to remove covers easily, only by a tiny drag, in 'single' mode.\n    // But a single click do not clear covers, because user may have casual\n    // clicks (for example, click on other component and do not expect covers\n    // disappear).\n    // Only some cover removed, trigger action, but not every click trigger action.\n    if (getPanelByPoint(controller, e, localCursorPoint) && clearCovers(controller)) {\n      eventParams = {\n        isEnd: isEnd,\n        removeOnClick: true\n      };\n    }\n  }\n\n  return eventParams;\n}\n\nfunction determineBrushType(brushType, panel) {\n  if (brushType === 'auto') {\n    return panel.defaultBrushType;\n  }\n\n  return brushType;\n}\n\nvar mouseHandlers = {\n  mousedown: function (e) {\n    if (this._dragging) {\n      // In case some browser do not support globalOut,\n      // and release mose out side the browser.\n      handleDragEnd.call(this, e);\n    } else if (!e.target || !e.target.draggable) {\n      preventDefault(e);\n      var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n      this._creatingCover = null;\n      var panel = this._creatingPanel = getPanelByPoint(this, e, localCursorPoint);\n\n      if (panel) {\n        this._dragging = true;\n        this._track = [localCursorPoint.slice()];\n      }\n    }\n  },\n  mousemove: function (e) {\n    var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n    resetCursor(this, e, localCursorPoint);\n\n    if (this._dragging) {\n      preventDefault(e);\n      var eventParams = updateCoverByMouse(this, e, localCursorPoint, false);\n      eventParams && trigger(this, eventParams);\n    }\n  },\n  mouseup: handleDragEnd //,\n  // FIXME\n  // in tooltip, globalout should not be triggered.\n  // globalout: handleDragEnd\n\n};\n\nfunction handleDragEnd(e) {\n  if (this._dragging) {\n    preventDefault(e);\n    var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n    var eventParams = updateCoverByMouse(this, e, localCursorPoint, true);\n    this._dragging = false;\n    this._track = [];\n    this._creatingCover = null; // trigger event shoule be at final, after procedure will be nested.\n\n    eventParams && trigger(this, eventParams);\n  }\n}\n/**\n * key: brushType\n * @type {Object}\n */\n\n\nvar coverRenderers = {\n  lineX: getLineRenderer(0),\n  lineY: getLineRenderer(1),\n  rect: {\n    createCover: function (controller, brushOption) {\n      return createBaseRectCover(curry(driftRect, function (range) {\n        return range;\n      }, function (range) {\n        return range;\n      }), controller, brushOption, ['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw']);\n    },\n    getCreatingRange: function (localTrack) {\n      var ends = getTrackEnds(localTrack);\n      return formatRectRange(ends[1][0], ends[1][1], ends[0][0], ends[0][1]);\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      updateBaseRect(controller, cover, localRange, brushOption);\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  },\n  polygon: {\n    createCover: function (controller, brushOption) {\n      var cover = new graphic.Group(); // Do not use graphic.Polygon because graphic.Polyline do not close the\n      // border of the shape when drawing, which is a better experience for user.\n\n      cover.add(new graphic.Polyline({\n        name: 'main',\n        style: makeStyle(brushOption),\n        silent: true\n      }));\n      return cover;\n    },\n    getCreatingRange: function (localTrack) {\n      return localTrack;\n    },\n    endCreating: function (controller, cover) {\n      cover.remove(cover.childAt(0)); // Use graphic.Polygon close the shape.\n\n      cover.add(new graphic.Polygon({\n        name: 'main',\n        draggable: true,\n        drift: curry(driftPolygon, controller, cover),\n        ondragend: curry(trigger, controller, {\n          isEnd: true\n        })\n      }));\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      cover.childAt(0).setShape({\n        points: clipByPanel(controller, cover, localRange)\n      });\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  }\n};\n\nfunction getLineRenderer(xyIndex) {\n  return {\n    createCover: function (controller, brushOption) {\n      return createBaseRectCover(curry(driftRect, function (range) {\n        var rectRange = [range, [0, 100]];\n        xyIndex && rectRange.reverse();\n        return rectRange;\n      }, function (rectRange) {\n        return rectRange[xyIndex];\n      }), controller, brushOption, [['w', 'e'], ['n', 's']][xyIndex]);\n    },\n    getCreatingRange: function (localTrack) {\n      var ends = getTrackEnds(localTrack);\n      var min = mathMin(ends[0][xyIndex], ends[1][xyIndex]);\n      var max = mathMax(ends[0][xyIndex], ends[1][xyIndex]);\n      return [min, max];\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      var otherExtent; // If brushWidth not specified, fit the panel.\n\n      var panel = getPanelByCover(controller, cover);\n\n      if (panel !== true && panel.getLinearBrushOtherExtent) {\n        otherExtent = panel.getLinearBrushOtherExtent(xyIndex, controller._transform);\n      } else {\n        var zr = controller._zr;\n        otherExtent = [0, [zr.getWidth(), zr.getHeight()][1 - xyIndex]];\n      }\n\n      var rectRange = [localRange, otherExtent];\n      xyIndex && rectRange.reverse();\n      updateBaseRect(controller, cover, rectRange, brushOption);\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  };\n}\n\nvar _default = BrushController;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1067:\n/***/ (function(module, exports) {\n\nvar IRRELEVANT_EXCLUDES = {\n  'axisPointer': 1,\n  'tooltip': 1,\n  'brush': 1\n};\n/**\n * Avoid that: mouse click on a elements that is over geo or graph,\n * but roam is triggered.\n */\n\nfunction onIrrelevantElement(e, api, targetCoordSysModel) {\n  var model = api.getComponentByElement(e.topTarget); // If model is axisModel, it works only if it is injected with coordinateSystem.\n\n  var coordSys = model && model.coordinateSystem;\n  return model && model !== targetCoordSysModel && !IRRELEVANT_EXCLUDES[model.mainType] && coordSys && coordSys.model !== targetCoordSysModel;\n}\n\nexports.onIrrelevantElement = onIrrelevantElement;\n\n/***/ }),\n\n/***/ 1068:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar graphic = __webpack_require__(980);\n\nvar SymbolClz = __webpack_require__(1069);\n\n/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n/**\n * @constructor\n * @alias module:echarts/chart/helper/SymbolDraw\n * @param {module:zrender/graphic/Group} [symbolCtor]\n */\nfunction SymbolDraw(symbolCtor) {\n  this.group = new graphic.Group();\n  this._symbolCtor = symbolCtor || SymbolClz;\n}\n\nvar symbolDrawProto = SymbolDraw.prototype;\n\nfunction symbolNeedsDraw(data, idx, isIgnore) {\n  var point = data.getItemLayout(idx); // Is an object\n  // if (point && point.hasOwnProperty('point')) {\n  //     point = point.point;\n  // }\n\n  return point && !isNaN(point[0]) && !isNaN(point[1]) && !(isIgnore && isIgnore(idx)) && data.getItemVisual(idx, 'symbol') !== 'none';\n}\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n * @param {Array.<boolean>} [isIgnore]\n */\n\n\nsymbolDrawProto.updateData = function (data, isIgnore) {\n  var group = this.group;\n  var seriesModel = data.hostModel;\n  var oldData = this._data;\n  var SymbolCtor = this._symbolCtor;\n  var seriesScope = {\n    itemStyle: seriesModel.getModel('itemStyle.normal').getItemStyle(['color']),\n    hoverItemStyle: seriesModel.getModel('itemStyle.emphasis').getItemStyle(),\n    symbolRotate: seriesModel.get('symbolRotate'),\n    symbolOffset: seriesModel.get('symbolOffset'),\n    hoverAnimation: seriesModel.get('hoverAnimation'),\n    labelModel: seriesModel.getModel('label.normal'),\n    hoverLabelModel: seriesModel.getModel('label.emphasis'),\n    cursorStyle: seriesModel.get('cursor')\n  };\n  data.diff(oldData).add(function (newIdx) {\n    var point = data.getItemLayout(newIdx);\n\n    if (symbolNeedsDraw(data, newIdx, isIgnore)) {\n      var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n      symbolEl.attr('position', point);\n      data.setItemGraphicEl(newIdx, symbolEl);\n      group.add(symbolEl);\n    }\n  }).update(function (newIdx, oldIdx) {\n    var symbolEl = oldData.getItemGraphicEl(oldIdx);\n    var point = data.getItemLayout(newIdx);\n\n    if (!symbolNeedsDraw(data, newIdx, isIgnore)) {\n      group.remove(symbolEl);\n      return;\n    }\n\n    if (!symbolEl) {\n      symbolEl = new SymbolCtor(data, newIdx);\n      symbolEl.attr('position', point);\n    } else {\n      symbolEl.updateData(data, newIdx, seriesScope);\n      graphic.updateProps(symbolEl, {\n        position: point\n      }, seriesModel);\n    } // Add back\n\n\n    group.add(symbolEl);\n    data.setItemGraphicEl(newIdx, symbolEl);\n  }).remove(function (oldIdx) {\n    var el = oldData.getItemGraphicEl(oldIdx);\n    el && el.fadeOut(function () {\n      group.remove(el);\n    });\n  }).execute();\n  this._data = data;\n};\n\nsymbolDrawProto.updateLayout = function () {\n  var data = this._data;\n\n  if (data) {\n    // Not use animation\n    data.eachItemGraphicEl(function (el, idx) {\n      var point = data.getItemLayout(idx);\n      el.attr('position', point);\n    });\n  }\n};\n\nsymbolDrawProto.remove = function (enableAnimation) {\n  var group = this.group;\n  var data = this._data;\n\n  if (data) {\n    if (enableAnimation) {\n      data.eachItemGraphicEl(function (el) {\n        el.fadeOut(function () {\n          group.remove(el);\n        });\n      });\n    } else {\n      group.removeAll();\n    }\n  }\n};\n\nvar _default = SymbolDraw;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1069:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar _symbol = __webpack_require__(1003);\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = __webpack_require__(980);\n\nvar _number = __webpack_require__(981);\n\nvar parsePercent = _number.parsePercent;\n\nvar _labelHelper = __webpack_require__(1164);\n\nvar findLabelValueDim = _labelHelper.findLabelValueDim;\n\n/**\n * @module echarts/chart/helper/Symbol\n */\nfunction getSymbolSize(data, idx) {\n  var symbolSize = data.getItemVisual(idx, 'symbolSize');\n  return symbolSize instanceof Array ? symbolSize.slice() : [+symbolSize, +symbolSize];\n}\n\nfunction getScale(symbolSize) {\n  return [symbolSize[0] / 2, symbolSize[1] / 2];\n}\n/**\n * @constructor\n * @alias {module:echarts/chart/helper/Symbol}\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction SymbolClz(data, idx, seriesScope) {\n  graphic.Group.call(this);\n  this.updateData(data, idx, seriesScope);\n}\n\nvar symbolProto = SymbolClz.prototype;\n\nfunction driftSymbol(dx, dy) {\n  this.parent.drift(dx, dy);\n}\n\nsymbolProto._createSymbol = function (symbolType, data, idx, symbolSize) {\n  // Remove paths created before\n  this.removeAll();\n  var color = data.getItemVisual(idx, 'color'); // var symbolPath = createSymbol(\n  //     symbolType, -0.5, -0.5, 1, 1, color\n  // );\n  // If width/height are set too small (e.g., set to 1) on ios10\n  // and macOS Sierra, a circle stroke become a rect, no matter what\n  // the scale is set. So we set width/height as 2. See #4150.\n\n  var symbolPath = createSymbol(symbolType, -1, -1, 2, 2, color);\n  symbolPath.attr({\n    z2: 100,\n    culling: true,\n    scale: getScale(symbolSize)\n  }); // Rewrite drift method\n\n  symbolPath.drift = driftSymbol;\n  this._symbolType = symbolType;\n  this.add(symbolPath);\n};\n/**\n * Stop animation\n * @param {boolean} toLastFrame\n */\n\n\nsymbolProto.stopSymbolAnimation = function (toLastFrame) {\n  this.childAt(0).stopAnimation(toLastFrame);\n};\n/**\n * FIXME:\n * Caution: This method breaks the encapsulation of this module,\n * but it indeed brings convenience. So do not use the method\n * unless you detailedly know all the implements of `Symbol`,\n * especially animation.\n *\n * Get symbol path element.\n */\n\n\nsymbolProto.getSymbolPath = function () {\n  return this.childAt(0);\n};\n/**\n * Get scale(aka, current symbol size).\n * Including the change caused by animation\n */\n\n\nsymbolProto.getScale = function () {\n  return this.childAt(0).scale;\n};\n/**\n * Highlight symbol\n */\n\n\nsymbolProto.highlight = function () {\n  this.childAt(0).trigger('emphasis');\n};\n/**\n * Downplay symbol\n */\n\n\nsymbolProto.downplay = function () {\n  this.childAt(0).trigger('normal');\n};\n/**\n * @param {number} zlevel\n * @param {number} z\n */\n\n\nsymbolProto.setZ = function (zlevel, z) {\n  var symbolPath = this.childAt(0);\n  symbolPath.zlevel = zlevel;\n  symbolPath.z = z;\n};\n\nsymbolProto.setDraggable = function (draggable) {\n  var symbolPath = this.childAt(0);\n  symbolPath.draggable = draggable;\n  symbolPath.cursor = draggable ? 'move' : 'pointer';\n};\n/**\n * Update symbol properties\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Object} [seriesScope]\n * @param {Object} [seriesScope.itemStyle]\n * @param {Object} [seriesScope.hoverItemStyle]\n * @param {Object} [seriesScope.symbolRotate]\n * @param {Object} [seriesScope.symbolOffset]\n * @param {module:echarts/model/Model} [seriesScope.labelModel]\n * @param {module:echarts/model/Model} [seriesScope.hoverLabelModel]\n * @param {boolean} [seriesScope.hoverAnimation]\n * @param {Object} [seriesScope.cursorStyle]\n * @param {module:echarts/model/Model} [seriesScope.itemModel]\n * @param {string} [seriesScope.symbolInnerColor]\n * @param {Object} [seriesScope.fadeIn=false]\n */\n\n\nsymbolProto.updateData = function (data, idx, seriesScope) {\n  this.silent = false;\n  var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n  var seriesModel = data.hostModel;\n  var symbolSize = getSymbolSize(data, idx);\n  var isInit = symbolType !== this._symbolType;\n\n  if (isInit) {\n    this._createSymbol(symbolType, data, idx, symbolSize);\n  } else {\n    var symbolPath = this.childAt(0);\n    symbolPath.silent = false;\n    graphic.updateProps(symbolPath, {\n      scale: getScale(symbolSize)\n    }, seriesModel, idx);\n  }\n\n  this._updateCommon(data, idx, symbolSize, seriesScope);\n\n  if (isInit) {\n    var symbolPath = this.childAt(0);\n    var fadeIn = seriesScope && seriesScope.fadeIn;\n    var target = {\n      scale: symbolPath.scale.slice()\n    };\n    fadeIn && (target.style = {\n      opacity: symbolPath.style.opacity\n    });\n    symbolPath.scale = [0, 0];\n    fadeIn && (symbolPath.style.opacity = 0);\n    graphic.initProps(symbolPath, target, seriesModel, idx);\n  }\n\n  this._seriesModel = seriesModel;\n}; // Update common properties\n\n\nvar normalStyleAccessPath = ['itemStyle', 'normal'];\nvar emphasisStyleAccessPath = ['itemStyle', 'emphasis'];\nvar normalLabelAccessPath = ['label', 'normal'];\nvar emphasisLabelAccessPath = ['label', 'emphasis'];\n/**\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Array.<number>} symbolSize\n * @param {Object} [seriesScope]\n */\n\nsymbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n  var symbolPath = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var color = data.getItemVisual(idx, 'color'); // Reset style\n\n  if (symbolPath.type !== 'image') {\n    symbolPath.useStyle({\n      strokeNoScale: true\n    });\n  }\n\n  var itemStyle = seriesScope && seriesScope.itemStyle;\n  var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n  var symbolRotate = seriesScope && seriesScope.symbolRotate;\n  var symbolOffset = seriesScope && seriesScope.symbolOffset;\n  var labelModel = seriesScope && seriesScope.labelModel;\n  var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n  var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n  var cursorStyle = seriesScope && seriesScope.cursorStyle;\n\n  if (!seriesScope || data.hasItemOption) {\n    var itemModel = seriesScope && seriesScope.itemModel ? seriesScope.itemModel : data.getItemModel(idx); // Color must be excluded.\n    // Because symbol provide setColor individually to set fill and stroke\n\n    itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n    hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n    symbolRotate = itemModel.getShallow('symbolRotate');\n    symbolOffset = itemModel.getShallow('symbolOffset');\n    labelModel = itemModel.getModel(normalLabelAccessPath);\n    hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n    hoverAnimation = itemModel.getShallow('hoverAnimation');\n    cursorStyle = itemModel.getShallow('cursor');\n  } else {\n    hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n  }\n\n  var elStyle = symbolPath.style;\n  symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n  if (symbolOffset) {\n    symbolPath.attr('position', [parsePercent(symbolOffset[0], symbolSize[0]), parsePercent(symbolOffset[1], symbolSize[1])]);\n  }\n\n  cursorStyle && symbolPath.attr('cursor', cursorStyle); // PENDING setColor before setStyle!!!\n\n  symbolPath.setColor(color, seriesScope && seriesScope.symbolInnerColor);\n  symbolPath.setStyle(itemStyle);\n  var opacity = data.getItemVisual(idx, 'opacity');\n\n  if (opacity != null) {\n    elStyle.opacity = opacity;\n  }\n\n  var useNameLabel = seriesScope && seriesScope.useNameLabel;\n  var valueDim = !useNameLabel && findLabelValueDim(data);\n\n  if (useNameLabel || valueDim != null) {\n    graphic.setLabelStyle(elStyle, hoverItemStyle, labelModel, hoverLabelModel, {\n      labelFetcher: seriesModel,\n      labelDataIndex: idx,\n      defaultText: useNameLabel ? data.getName(idx) : data.get(valueDim, idx),\n      isRectText: true,\n      autoColor: color\n    });\n  }\n\n  symbolPath.off('mouseover').off('mouseout').off('emphasis').off('normal');\n  symbolPath.hoverStyle = hoverItemStyle; // FIXME\n  // Do not use symbol.trigger('emphasis'), but use symbol.highlight() instead.\n\n  graphic.setHoverStyle(symbolPath);\n  var scale = getScale(symbolSize);\n\n  if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n    var onEmphasis = function () {\n      var ratio = scale[1] / scale[0];\n      this.animateTo({\n        scale: [Math.max(scale[0] * 1.1, scale[0] + 3), Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)]\n      }, 400, 'elasticOut');\n    };\n\n    var onNormal = function () {\n      this.animateTo({\n        scale: scale\n      }, 400, 'elasticOut');\n    };\n\n    symbolPath.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n  }\n};\n/**\n * @param {Function} cb\n * @param {Object} [opt]\n * @param {Object} [opt.keepLabel=true]\n */\n\n\nsymbolProto.fadeOut = function (cb, opt) {\n  var symbolPath = this.childAt(0); // Avoid mistaken hover when fading out\n\n  this.silent = symbolPath.silent = true; // Not show text when animating\n\n  !(opt && opt.keepLabel) && (symbolPath.style.text = null);\n  graphic.updateProps(symbolPath, {\n    style: {\n      opacity: 0\n    },\n    scale: [0, 0]\n  }, this._seriesModel, this.dataIndex, cb);\n};\n\nzrUtil.inherits(SymbolClz, graphic.Group);\nvar _default = SymbolClz;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1071:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar textHelper = __webpack_require__(1033);\n\nvar BoundingRect = __webpack_require__(987);\n\n/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\nvar tmpRect = new BoundingRect();\n\nvar RectText = function () {};\n\nRectText.prototype = {\n  constructor: RectText,\n\n  /**\n   * Draw text in a rect with specified position.\n   * @param  {CanvasRenderingContext2D} ctx\n   * @param  {Object} rect Displayable rect\n   */\n  drawRectText: function (ctx, rect) {\n    var style = this.style;\n    rect = style.textRect || rect; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n    var text = style.text; // Convert to string\n\n    text != null && (text += '');\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    } // FIXME\n\n\n    ctx.save(); // Transform rect to view space\n\n    var transform = this.transform;\n\n    if (!style.transformText) {\n      if (transform) {\n        tmpRect.copy(rect);\n        tmpRect.applyTransform(transform);\n        rect = tmpRect;\n      }\n    } else {\n      this.setTransform(ctx);\n    } // transformText and textRotation can not be used at the same time.\n\n\n    textHelper.renderText(this, ctx, text, style, rect);\n    ctx.restore();\n  }\n};\nvar _default = RectText;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1072:\n/***/ (function(module, exports) {\n\n/**\n * 线段包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  var _a = 0;\n  var _b = x0; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l || y < y0 - _l && y < y1 - _l || x > x0 + _l && x > x1 + _l || x < x0 - _l && x < x1 - _l) {\n    return false;\n  }\n\n  if (x0 !== x1) {\n    _a = (y0 - y1) / (x0 - x1);\n    _b = (x0 * y1 - x1 * y0) / (x0 - x1);\n  } else {\n    return Math.abs(x - x0) <= _l / 2;\n  }\n\n  var tmp = _a * x - y + _b;\n\n  var _s = tmp * tmp / (_a * _a + 1);\n\n  return _s <= _l / 2 * _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n/***/ }),\n\n/***/ 1073:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curve = __webpack_require__(999);\n\nvar quadraticProjectPoint = _curve.quadraticProjectPoint;\n\n/**\n * 二次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l) {\n    return false;\n  }\n\n  var d = quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n/***/ }),\n\n/***/ 1074:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar Gradient = __webpack_require__(1019);\n\n/**\n * x, y, x2, y2 are all percent from 0 to 1\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @param {number} [x2=1]\n * @param {number} [y2=0]\n * @param {Array.<Object>} colorStops\n * @param {boolean} [globalCoord=false]\n */\nvar LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'linear', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0 : x;\n  this.y = y == null ? 0 : y;\n  this.x2 = x2 == null ? 1 : x2;\n  this.y2 = y2 == null ? 0 : y2; // Can be cloned\n\n  this.type = 'linear'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nLinearGradient.prototype = {\n  constructor: LinearGradient\n};\nzrUtil.inherits(LinearGradient, Gradient);\nvar _default = LinearGradient;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1075:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrender = __webpack_require__(1032);\n\nexports.zrender = zrender;\n\nvar matrix = __webpack_require__(994);\n\nexports.matrix = matrix;\n\nvar vector = __webpack_require__(984);\n\nexports.vector = vector;\n\nvar zrUtil = __webpack_require__(978);\n\nvar colorTool = __webpack_require__(1002);\n\nexports.color = colorTool;\n\nvar graphic = __webpack_require__(980);\n\nexports.graphic = graphic;\n\nvar numberUtil = __webpack_require__(981);\n\nexports.number = numberUtil;\n\nvar formatUtil = __webpack_require__(985);\n\nexports.format = formatUtil;\n\nvar _throttle = __webpack_require__(1008);\n\nvar throttle = _throttle.throttle;\nexports.throttle = _throttle.throttle;\n\nvar ecHelper = __webpack_require__(1132);\n\nexports.helper = ecHelper;\n\nvar _List = __webpack_require__(995);\n\nexports.List = _List;\n\nvar _Model = __webpack_require__(989);\n\nexports.Model = _Model;\n\nvar _Axis = __webpack_require__(1017);\n\nexports.Axis = _Axis;\n\nvar _env = __webpack_require__(986);\n\nexports.env = _env;\n\nvar _parseGeoJson = __webpack_require__(1076);\n\nexports.parseGeoJson = _parseGeoJson;\n\n/**\n * Do not mount those modules on 'src/echarts' for better tree shaking.\n */\nvar ecUtil = {};\nzrUtil.each(['map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter', 'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction', 'extend', 'defaults', 'clone', 'merge'], function (name) {\n  ecUtil[name] = zrUtil[name];\n});\nexports.util = ecUtil;\n\n/***/ }),\n\n/***/ 1076:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar Region = __webpack_require__(1077);\n\n/**\n * Parse and decode geo json\n * @module echarts/coord/geo/parseGeoJson\n */\nfunction decode(json) {\n  if (!json.UTF8Encoding) {\n    return json;\n  }\n\n  var encodeScale = json.UTF8Scale;\n\n  if (encodeScale == null) {\n    encodeScale = 1024;\n  }\n\n  var features = json.features;\n\n  for (var f = 0; f < features.length; f++) {\n    var feature = features[f];\n    var geometry = feature.geometry;\n    var coordinates = geometry.coordinates;\n    var encodeOffsets = geometry.encodeOffsets;\n\n    for (var c = 0; c < coordinates.length; c++) {\n      var coordinate = coordinates[c];\n\n      if (geometry.type === 'Polygon') {\n        coordinates[c] = decodePolygon(coordinate, encodeOffsets[c], encodeScale);\n      } else if (geometry.type === 'MultiPolygon') {\n        for (var c2 = 0; c2 < coordinate.length; c2++) {\n          var polygon = coordinate[c2];\n          coordinate[c2] = decodePolygon(polygon, encodeOffsets[c][c2], encodeScale);\n        }\n      }\n    }\n  } // Has been decoded\n\n\n  json.UTF8Encoding = false;\n  return json;\n}\n\nfunction decodePolygon(coordinate, encodeOffsets, encodeScale) {\n  var result = [];\n  var prevX = encodeOffsets[0];\n  var prevY = encodeOffsets[1];\n\n  for (var i = 0; i < coordinate.length; i += 2) {\n    var x = coordinate.charCodeAt(i) - 64;\n    var y = coordinate.charCodeAt(i + 1) - 64; // ZigZag decoding\n\n    x = x >> 1 ^ -(x & 1);\n    y = y >> 1 ^ -(y & 1); // Delta deocding\n\n    x += prevX;\n    y += prevY;\n    prevX = x;\n    prevY = y; // Dequantize\n\n    result.push([x / encodeScale, y / encodeScale]);\n  }\n\n  return result;\n}\n/**\n * @alias module:echarts/coord/geo/parseGeoJson\n * @param {Object} geoJson\n * @return {module:zrender/container/Group}\n */\n\n\nfunction _default(geoJson) {\n  decode(geoJson);\n  return zrUtil.map(zrUtil.filter(geoJson.features, function (featureObj) {\n    // Output of mapshaper may have geometry null\n    return featureObj.geometry && featureObj.properties && featureObj.geometry.coordinates.length > 0;\n  }), function (featureObj) {\n    var properties = featureObj.properties;\n    var geo = featureObj.geometry;\n    var coordinates = geo.coordinates;\n    var geometries = [];\n\n    if (geo.type === 'Polygon') {\n      geometries.push({\n        type: 'polygon',\n        // According to the GeoJSON specification.\n        // First must be exterior, and the rest are all interior(holes).\n        exterior: coordinates[0],\n        interiors: coordinates.slice(1)\n      });\n    }\n\n    if (geo.type === 'MultiPolygon') {\n      zrUtil.each(coordinates, function (item) {\n        if (item[0]) {\n          geometries.push({\n            type: 'polygon',\n            exterior: item[0],\n            interiors: item.slice(1)\n          });\n        }\n      });\n    }\n\n    var region = new Region(properties.name, geometries, properties.cp);\n    region.properties = properties;\n    return region;\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1077:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar BoundingRect = __webpack_require__(987);\n\nvar bbox = __webpack_require__(1037);\n\nvar vec2 = __webpack_require__(984);\n\nvar polygonContain = __webpack_require__(1078);\n\n/**\n * @module echarts/coord/geo/Region\n */\n\n/**\n * @param {string} name\n * @param {Array} geometries\n * @param {Array.<number>} cp\n */\nfunction Region(name, geometries, cp) {\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  this.name = name;\n  /**\n   * @type {Array.<Array>}\n   * @readOnly\n   */\n\n  this.geometries = geometries;\n\n  if (!cp) {\n    var rect = this.getBoundingRect();\n    cp = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  } else {\n    cp = [cp[0], cp[1]];\n  }\n  /**\n   * @type {Array.<number>}\n   */\n\n\n  this.center = cp;\n}\n\nRegion.prototype = {\n  constructor: Region,\n  properties: null,\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    var rect = this._rect;\n\n    if (rect) {\n      return rect;\n    }\n\n    var MAX_NUMBER = Number.MAX_VALUE;\n    var min = [MAX_NUMBER, MAX_NUMBER];\n    var max = [-MAX_NUMBER, -MAX_NUMBER];\n    var min2 = [];\n    var max2 = [];\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      } // Doesn't consider hole\n\n\n      var exterior = geometries[i].exterior;\n      bbox.fromPoints(exterior, min2, max2);\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return this._rect = new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * @param {<Array.<number>} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var rect = this.getBoundingRect();\n    var geometries = this.geometries;\n\n    if (!rect.contain(coord[0], coord[1])) {\n      return false;\n    }\n\n    loopGeo: for (var i = 0, len = geometries.length; i < len; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      if (polygonContain.contain(exterior, coord[0], coord[1])) {\n        // Not in the region if point is in the hole.\n        for (var k = 0; k < (interiors ? interiors.length : 0); k++) {\n          if (polygonContain.contain(interiors[k])) {\n            continue loopGeo;\n          }\n        }\n\n        return true;\n      }\n    }\n\n    return false;\n  },\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var aspect = rect.width / rect.height;\n\n    if (!width) {\n      width = aspect * height;\n    } else if (!height) {\n      height = width / aspect;\n    }\n\n    var target = new BoundingRect(x, y, width, height);\n    var transform = rect.calculateTransform(target);\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      for (var p = 0; p < exterior.length; p++) {\n        vec2.applyTransform(exterior[p], exterior[p], transform);\n      }\n\n      for (var h = 0; h < (interiors ? interiors.length : 0); h++) {\n        for (var p = 0; p < interiors[h].length; p++) {\n          vec2.applyTransform(interiors[h][p], interiors[h][p], transform);\n        }\n      }\n    }\n\n    rect = this._rect;\n    rect.copy(target); // Update center\n\n    this.center = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n};\nvar _default = Region;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1078:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar windingLine = __webpack_require__(1051);\n\nvar EPSILON = 1e-8;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n}\n\nfunction contain(points, x, y) {\n  var w = 0;\n  var p = points[0];\n\n  if (!p) {\n    return false;\n  }\n\n  for (var i = 1; i < points.length; i++) {\n    var p2 = points[i];\n    w += windingLine(p[0], p[1], p2[0], p2[1], x, y);\n    p = p2;\n  } // Close polygon\n\n\n  var p0 = points[0];\n\n  if (!isAroundEqual(p[0], p0[0]) || !isAroundEqual(p[1], p0[1])) {\n    w += windingLine(p[0], p[1], p0[0], p0[1], x, y);\n  }\n\n  return w !== 0;\n}\n\nexports.contain = contain;\n\n/***/ }),\n\n/***/ 1079:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(979);\n\n__webpack_require__(1034);\n\n__webpack_require__(1139);\n\n__webpack_require__(1140);\n\n// FIXME Better way to pack data in graphic element\n\n/**\n * @action\n * @property {string} type\n * @property {number} seriesIndex\n * @property {number} dataIndex\n * @property {number} [x]\n * @property {number} [y]\n */\necharts.registerAction({\n  type: 'showTip',\n  event: 'showTip',\n  update: 'tooltip:manuallyShowTip'\n}, // noop\nfunction () {});\necharts.registerAction({\n  type: 'hideTip',\n  event: 'hideTip',\n  update: 'tooltip:manuallyHideTip'\n}, // noop\nfunction () {});\n\n/***/ }),\n\n/***/ 1080:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(979);\n\n__webpack_require__(1064);\n\n__webpack_require__(1142);\n\n__webpack_require__(1065);\n\nvar legendFilter = __webpack_require__(1143);\n\nvar Component = __webpack_require__(991);\n\n// Do not contain scrollable legend, for sake of file size.\n// Series Filter\necharts.registerProcessor(legendFilter);\nComponent.registerSubTypeDefaulter('legend', function () {\n  // Default 'plain' when no type specified.\n  return 'plain';\n});\n\n/***/ }),\n\n/***/ 1082:\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(1146);\n\n__webpack_require__(1147);\n\n__webpack_require__(1148);\n\n__webpack_require__(1149);\n\n__webpack_require__(1150);\n\n__webpack_require__(1151);\n\n__webpack_require__(1156);\n\n/***/ }),\n\n/***/ 1083:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(979);\n\nvar ATTR = '\\0_ec_interaction_mutex';\n\nfunction take(zr, resourceKey, userKey) {\n  var store = getStore(zr);\n  store[resourceKey] = userKey;\n}\n\nfunction release(zr, resourceKey, userKey) {\n  var store = getStore(zr);\n  var uKey = store[resourceKey];\n\n  if (uKey === userKey) {\n    store[resourceKey] = null;\n  }\n}\n\nfunction isTaken(zr, resourceKey) {\n  return !!getStore(zr)[resourceKey];\n}\n\nfunction getStore(zr) {\n  return zr[ATTR] || (zr[ATTR] = {});\n}\n/**\n * payload: {\n *     type: 'takeGlobalCursor',\n *     key: 'dataZoomSelect', or 'brush', or ...,\n *         If no userKey, release global cursor.\n * }\n */\n\n\necharts.registerAction({\n  type: 'takeGlobalCursor',\n  event: 'globalCursorTaken',\n  update: 'update'\n}, function () {});\nexports.take = take;\nexports.release = release;\nexports.isTaken = isTaken;\n\n/***/ }),\n\n/***/ 1084:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(983);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(978);\n\nvar graphic = __webpack_require__(980);\n\nvar modelUtil = __webpack_require__(982);\n\nvar brushHelper = __webpack_require__(1085);\n\nvar each = zrUtil.each;\nvar indexOf = zrUtil.indexOf;\nvar curry = zrUtil.curry;\nvar COORD_CONVERTS = ['dataToPoint', 'pointToData']; // FIXME\n// how to genarialize to more coordinate systems.\n\nvar INCLUDE_FINDER_MAIN_TYPES = ['grid', 'xAxis', 'yAxis', 'geo', 'graph', 'polar', 'radiusAxis', 'angleAxis', 'bmap'];\n/**\n * [option in constructor]:\n * {\n *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n * }\n *\n *\n * [targetInfo]:\n *\n * There can be multiple axes in a single targetInfo. Consider the case\n * of `grid` component, a targetInfo represents a grid which contains one or more\n * cartesian and one or more axes. And consider the case of parallel system,\n * which has multiple axes in a coordinate system.\n * Can be {\n *     panelId: ...,\n *     coordSys: <a representitive cartesian in grid (first cartesian by default)>,\n *     coordSyses: all cartesians.\n *     gridModel: <grid component>\n *     xAxes: correspond to coordSyses on index\n *     yAxes: correspond to coordSyses on index\n * }\n * or {\n *     panelId: ...,\n *     coordSys: <geo coord sys>\n *     coordSyses: [<geo coord sys>]\n *     geoModel: <geo component>\n * }\n *\n *\n * [panelOpt]:\n *\n * Make from targetInfo. Input to BrushController.\n * {\n *     panelId: ...,\n *     rect: ...\n * }\n *\n *\n * [area]:\n *\n * Generated by BrushController or user input.\n * {\n *     panelId: Used to locate coordInfo directly. If user inpput, no panelId.\n *     brushType: determine how to convert to/from coord('rect' or 'polygon' or 'lineX/Y').\n *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n *     range: pixel range.\n *     coordRange: representitive coord range (the first one of coordRanges).\n *     coordRanges: <Array> coord ranges, used in multiple cartesian in one grid.\n * }\n */\n\n/**\n * @param {Object} option contains Index/Id/Name of xAxis/yAxis/geo/grid\n *        Each can be {number|Array.<number>}. like: {xAxisIndex: [3, 4]}\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} [opt]\n * @param {Array.<string>} [opt.include] include coordinate system types.\n */\n\nfunction BrushTargetManager(option, ecModel, opt) {\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n  var targetInfoList = this._targetInfoList = [];\n  var info = {};\n  var foundCpts = parseFinder(ecModel, option);\n  each(targetInfoBuilders, function (builder, type) {\n    if (!opt || !opt.include || indexOf(opt.include, type) >= 0) {\n      builder(foundCpts, targetInfoList, info);\n    }\n  });\n}\n\nvar proto = BrushTargetManager.prototype;\n\nproto.setOutputRanges = function (areas, ecModel) {\n  this.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n    (area.coordRanges || (area.coordRanges = [])).push(coordRange); // area.coordRange is the first of area.coordRanges\n\n    if (!area.coordRange) {\n      area.coordRange = coordRange; // In 'category' axis, coord to pixel is not reversible, so we can not\n      // rebuild range by coordRange accrately, which may bring trouble when\n      // brushing only one item. So we use __rangeOffset to rebuilding range\n      // by coordRange. And this it only used in brush component so it is no\n      // need to be adapted to coordRanges.\n\n      var result = coordConvert[area.brushType](0, coordSys, coordRange);\n      area.__rangeOffset = {\n        offset: diffProcessor[area.brushType](result.values, area.range, [1, 1]),\n        xyMinMax: result.xyMinMax\n      };\n    }\n  });\n};\n\nproto.matchOutputRanges = function (areas, ecModel, cb) {\n  each(areas, function (area) {\n    var targetInfo = this.findTargetInfo(area, ecModel);\n\n    if (targetInfo && targetInfo !== true) {\n      zrUtil.each(targetInfo.coordSyses, function (coordSys) {\n        var result = coordConvert[area.brushType](1, coordSys, area.range);\n        cb(area, result.values, coordSys, ecModel);\n      });\n    }\n  }, this);\n};\n\nproto.setInputRanges = function (areas, ecModel) {\n  each(areas, function (area) {\n    var targetInfo = this.findTargetInfo(area, ecModel);\n    area.range = area.range || []; // convert coordRange to global range and set panelId.\n\n    if (targetInfo && targetInfo !== true) {\n      area.panelId = targetInfo.panelId; // (1) area.range shoule always be calculate from coordRange but does\n      // not keep its original value, for the sake of the dataZoom scenario,\n      // where area.coordRange remains unchanged but area.range may be changed.\n      // (2) Only support converting one coordRange to pixel range in brush\n      // component. So do not consider `coordRanges`.\n      // (3) About __rangeOffset, see comment above.\n\n      var result = coordConvert[area.brushType](0, targetInfo.coordSys, area.coordRange);\n      var rangeOffset = area.__rangeOffset;\n      area.range = rangeOffset ? diffProcessor[area.brushType](result.values, rangeOffset.offset, getScales(result.xyMinMax, rangeOffset.xyMinMax)) : result.values;\n    }\n  }, this);\n};\n\nproto.makePanelOpts = function (api, getDefaultBrushType) {\n  return zrUtil.map(this._targetInfoList, function (targetInfo) {\n    var rect = targetInfo.getPanelRect();\n    return {\n      panelId: targetInfo.panelId,\n      defaultBrushType: getDefaultBrushType && getDefaultBrushType(targetInfo),\n      clipPath: brushHelper.makeRectPanelClipPath(rect),\n      isTargetByCursor: brushHelper.makeRectIsTargetByCursor(rect, api, targetInfo.coordSysModel),\n      getLinearBrushOtherExtent: brushHelper.makeLinearBrushOtherExtent(rect)\n    };\n  });\n};\n\nproto.controlSeries = function (area, seriesModel, ecModel) {\n  // Check whether area is bound in coord, and series do not belong to that coord.\n  // If do not do this check, some brush (like lineX) will controll all axes.\n  var targetInfo = this.findTargetInfo(area, ecModel);\n  return targetInfo === true || targetInfo && indexOf(targetInfo.coordSyses, seriesModel.coordinateSystem) >= 0;\n};\n/**\n * If return Object, a coord found.\n * If reutrn true, global found.\n * Otherwise nothing found.\n *\n * @param {Object} area\n * @param {Array} targetInfoList\n * @return {Object|boolean}\n */\n\n\nproto.findTargetInfo = function (area, ecModel) {\n  var targetInfoList = this._targetInfoList;\n  var foundCpts = parseFinder(ecModel, area);\n\n  for (var i = 0; i < targetInfoList.length; i++) {\n    var targetInfo = targetInfoList[i];\n    var areaPanelId = area.panelId;\n\n    if (areaPanelId) {\n      if (targetInfo.panelId === areaPanelId) {\n        return targetInfo;\n      }\n    } else {\n      for (var i = 0; i < targetInfoMatchers.length; i++) {\n        if (targetInfoMatchers[i](foundCpts, targetInfo)) {\n          return targetInfo;\n        }\n      }\n    }\n  }\n\n  return true;\n};\n\nfunction formatMinMax(minMax) {\n  minMax[0] > minMax[1] && minMax.reverse();\n  return minMax;\n}\n\nfunction parseFinder(ecModel, option) {\n  return modelUtil.parseFinder(ecModel, option, {\n    includeMainTypes: INCLUDE_FINDER_MAIN_TYPES\n  });\n}\n\nvar targetInfoBuilders = {\n  grid: function (foundCpts, targetInfoList) {\n    var xAxisModels = foundCpts.xAxisModels;\n    var yAxisModels = foundCpts.yAxisModels;\n    var gridModels = foundCpts.gridModels; // Remove duplicated.\n\n    var gridModelMap = zrUtil.createHashMap();\n    var xAxesHas = {};\n    var yAxesHas = {};\n\n    if (!xAxisModels && !yAxisModels && !gridModels) {\n      return;\n    }\n\n    each(xAxisModels, function (axisModel) {\n      var gridModel = axisModel.axis.grid.model;\n      gridModelMap.set(gridModel.id, gridModel);\n      xAxesHas[gridModel.id] = true;\n    });\n    each(yAxisModels, function (axisModel) {\n      var gridModel = axisModel.axis.grid.model;\n      gridModelMap.set(gridModel.id, gridModel);\n      yAxesHas[gridModel.id] = true;\n    });\n    each(gridModels, function (gridModel) {\n      gridModelMap.set(gridModel.id, gridModel);\n      xAxesHas[gridModel.id] = true;\n      yAxesHas[gridModel.id] = true;\n    });\n    gridModelMap.each(function (gridModel) {\n      var grid = gridModel.coordinateSystem;\n      var cartesians = [];\n      each(grid.getCartesians(), function (cartesian, index) {\n        if (indexOf(xAxisModels, cartesian.getAxis('x').model) >= 0 || indexOf(yAxisModels, cartesian.getAxis('y').model) >= 0) {\n          cartesians.push(cartesian);\n        }\n      });\n      targetInfoList.push({\n        panelId: 'grid--' + gridModel.id,\n        gridModel: gridModel,\n        coordSysModel: gridModel,\n        // Use the first one as the representitive coordSys.\n        coordSys: cartesians[0],\n        coordSyses: cartesians,\n        getPanelRect: panelRectBuilder.grid,\n        xAxisDeclared: xAxesHas[gridModel.id],\n        yAxisDeclared: yAxesHas[gridModel.id]\n      });\n    });\n  },\n  geo: function (foundCpts, targetInfoList) {\n    each(foundCpts.geoModels, function (geoModel) {\n      var coordSys = geoModel.coordinateSystem;\n      targetInfoList.push({\n        panelId: 'geo--' + geoModel.id,\n        geoModel: geoModel,\n        coordSysModel: geoModel,\n        coordSys: coordSys,\n        coordSyses: [coordSys],\n        getPanelRect: panelRectBuilder.geo\n      });\n    });\n  }\n};\nvar targetInfoMatchers = [// grid\nfunction (foundCpts, targetInfo) {\n  var xAxisModel = foundCpts.xAxisModel;\n  var yAxisModel = foundCpts.yAxisModel;\n  var gridModel = foundCpts.gridModel;\n  !gridModel && xAxisModel && (gridModel = xAxisModel.axis.grid.model);\n  !gridModel && yAxisModel && (gridModel = yAxisModel.axis.grid.model);\n  return gridModel && gridModel === targetInfo.gridModel;\n}, // geo\nfunction (foundCpts, targetInfo) {\n  var geoModel = foundCpts.geoModel;\n  return geoModel && geoModel === targetInfo.geoModel;\n}];\nvar panelRectBuilder = {\n  grid: function () {\n    // grid is not Transformable.\n    return this.coordSys.grid.getRect().clone();\n  },\n  geo: function () {\n    var coordSys = this.coordSys;\n    var rect = coordSys.getBoundingRect().clone(); // geo roam and zoom transform\n\n    rect.applyTransform(graphic.getTransform(coordSys));\n    return rect;\n  }\n};\nvar coordConvert = {\n  lineX: curry(axisConvert, 0),\n  lineY: curry(axisConvert, 1),\n  rect: function (to, coordSys, rangeOrCoordRange) {\n    var xminymin = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][0], rangeOrCoordRange[1][0]]);\n    var xmaxymax = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][1], rangeOrCoordRange[1][1]]);\n    var values = [formatMinMax([xminymin[0], xmaxymax[0]]), formatMinMax([xminymin[1], xmaxymax[1]])];\n    return {\n      values: values,\n      xyMinMax: values\n    };\n  },\n  polygon: function (to, coordSys, rangeOrCoordRange) {\n    var xyMinMax = [[Infinity, -Infinity], [Infinity, -Infinity]];\n    var values = zrUtil.map(rangeOrCoordRange, function (item) {\n      var p = coordSys[COORD_CONVERTS[to]](item);\n      xyMinMax[0][0] = Math.min(xyMinMax[0][0], p[0]);\n      xyMinMax[1][0] = Math.min(xyMinMax[1][0], p[1]);\n      xyMinMax[0][1] = Math.max(xyMinMax[0][1], p[0]);\n      xyMinMax[1][1] = Math.max(xyMinMax[1][1], p[1]);\n      return p;\n    });\n    return {\n      values: values,\n      xyMinMax: xyMinMax\n    };\n  }\n};\n\nfunction axisConvert(axisNameIndex, to, coordSys, rangeOrCoordRange) {\n  var axis = coordSys.getAxis(['x', 'y'][axisNameIndex]);\n  var values = formatMinMax(zrUtil.map([0, 1], function (i) {\n    return to ? axis.coordToData(axis.toLocalCoord(rangeOrCoordRange[i])) : axis.toGlobalCoord(axis.dataToCoord(rangeOrCoordRange[i]));\n  }));\n  var xyMinMax = [];\n  xyMinMax[axisNameIndex] = values;\n  xyMinMax[1 - axisNameIndex] = [NaN, NaN];\n  return {\n    values: values,\n    xyMinMax: xyMinMax\n  };\n}\n\nvar diffProcessor = {\n  lineX: curry(axisDiffProcessor, 0),\n  lineY: curry(axisDiffProcessor, 1),\n  rect: function (values, refer, scales) {\n    return [[values[0][0] - scales[0] * refer[0][0], values[0][1] - scales[0] * refer[0][1]], [values[1][0] - scales[1] * refer[1][0], values[1][1] - scales[1] * refer[1][1]]];\n  },\n  polygon: function (values, refer, scales) {\n    return zrUtil.map(values, function (item, idx) {\n      return [item[0] - scales[0] * refer[idx][0], item[1] - scales[1] * refer[idx][1]];\n    });\n  }\n};\n\nfunction axisDiffProcessor(axisNameIndex, values, refer, scales) {\n  return [values[0] - scales[axisNameIndex] * refer[0], values[1] - scales[axisNameIndex] * refer[1]];\n} // We have to process scale caused by dataZoom manually,\n// although it might be not accurate.\n\n\nfunction getScales(xyMinMaxCurr, xyMinMaxOrigin) {\n  var sizeCurr = getSize(xyMinMaxCurr);\n  var sizeOrigin = getSize(xyMinMaxOrigin);\n  var scales = [sizeCurr[0] / sizeOrigin[0], sizeCurr[1] / sizeOrigin[1]];\n  isNaN(scales[0]) && (scales[0] = 1);\n  isNaN(scales[1]) && (scales[1] = 1);\n  return scales;\n}\n\nfunction getSize(xyMinMax) {\n  return xyMinMax ? [xyMinMax[0][1] - xyMinMax[0][0], xyMinMax[1][1] - xyMinMax[1][0]] : [NaN, NaN];\n}\n\nvar _default = BrushTargetManager;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1085:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar BoundingRect = __webpack_require__(987);\n\nvar _cursorHelper = __webpack_require__(1067);\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar graphicUtil = __webpack_require__(980);\n\nfunction makeRectPanelClipPath(rect) {\n  rect = normalizeRect(rect);\n  return function (localPoints, transform) {\n    return graphicUtil.clipPointsByRect(localPoints, rect);\n  };\n}\n\nfunction makeLinearBrushOtherExtent(rect, specifiedXYIndex) {\n  rect = normalizeRect(rect);\n  return function (xyIndex) {\n    var idx = specifiedXYIndex != null ? specifiedXYIndex : xyIndex;\n    var brushWidth = idx ? rect.width : rect.height;\n    var base = idx ? rect.x : rect.y;\n    return [base, base + (brushWidth || 0)];\n  };\n}\n\nfunction makeRectIsTargetByCursor(rect, api, targetModel) {\n  rect = normalizeRect(rect);\n  return function (e, localCursorPoint, transform) {\n    return rect.contain(localCursorPoint[0], localCursorPoint[1]) && !onIrrelevantElement(e, api, targetModel);\n  };\n} // Consider width/height is negative.\n\n\nfunction normalizeRect(rect) {\n  return BoundingRect.create(rect);\n}\n\nexports.makeRectPanelClipPath = makeRectPanelClipPath;\nexports.makeLinearBrushOtherExtent = makeLinearBrushOtherExtent;\nexports.makeRectIsTargetByCursor = makeRectIsTargetByCursor;\n\n/***/ }),\n\n/***/ 1086:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(991);\n\nComponent.registerSubTypeDefaulter('dataZoom', function () {\n  // Default 'slider' when no type specified.\n  return 'slider';\n});\n\n/***/ }),\n\n/***/ 1087:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(979);\n\necharts.registerProcessor(function (ecModel, api) {\n  ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n    // We calculate window and reset axis here but not in model\n    // init stage and not after action dispatch handler, because\n    // reset should be called after seriesData.restoreData.\n    dataZoomModel.eachTargetAxis(resetSingleAxis); // Caution: data zoom filtering is order sensitive when using\n    // percent range and no min/max/scale set on axis.\n    // For example, we have dataZoom definition:\n    // [\n    //      {xAxisIndex: 0, start: 30, end: 70},\n    //      {yAxisIndex: 0, start: 20, end: 80}\n    // ]\n    // In this case, [20, 80] of y-dataZoom should be based on data\n    // that have filtered by x-dataZoom using range of [30, 70],\n    // but should not be based on full raw data. Thus sliding\n    // x-dataZoom will change both ranges of xAxis and yAxis,\n    // while sliding y-dataZoom will only change the range of yAxis.\n    // So we should filter x-axis after reset x-axis immediately,\n    // and then reset y-axis and filter y-axis.\n\n    dataZoomModel.eachTargetAxis(filterSingleAxis);\n  });\n  ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n    // Fullfill all of the range props so that user\n    // is able to get them from chart.getOption().\n    var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n    var percentRange = axisProxy.getDataPercentWindow();\n    var valueRange = axisProxy.getDataValueWindow();\n    dataZoomModel.setRawRange({\n      start: percentRange[0],\n      end: percentRange[1],\n      startValue: valueRange[0],\n      endValue: valueRange[1]\n    }, true);\n  });\n});\n\nfunction resetSingleAxis(dimNames, axisIndex, dataZoomModel) {\n  dataZoomModel.getAxisProxy(dimNames.name, axisIndex).reset(dataZoomModel);\n}\n\nfunction filterSingleAxis(dimNames, axisIndex, dataZoomModel) {\n  dataZoomModel.getAxisProxy(dimNames.name, axisIndex).filterData(dataZoomModel);\n}\n\n/***/ }),\n\n/***/ 1088:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(979);\n\nvar zrUtil = __webpack_require__(978);\n\nvar helper = __webpack_require__(1030);\n\necharts.registerAction('dataZoom', function (payload, ecModel) {\n  var linkedNodesFinder = helper.createLinkedNodesFinder(zrUtil.bind(ecModel.eachComponent, ecModel, 'dataZoom'), helper.eachAxisDim, function (model, dimNames) {\n    return model.get(dimNames.axisIndex);\n  });\n  var effectedModels = [];\n  ecModel.eachComponent({\n    mainType: 'dataZoom',\n    query: payload\n  }, function (model, index) {\n    effectedModels.push.apply(effectedModels, linkedNodesFinder(model).nodes);\n  });\n  zrUtil.each(effectedModels, function (dataZoomModel, index) {\n    dataZoomModel.setRawRange({\n      start: payload.start,\n      end: payload.end,\n      startValue: payload.startValue,\n      endValue: payload.endValue\n    });\n  });\n});\n\n/***/ }),\n\n/***/ 1089:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar axisDefault = __webpack_require__(1166);\n\nvar ComponentModel = __webpack_require__(991);\n\nvar _layout = __webpack_require__(990);\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n// FIXME axisType is fixed ?\nvar AXIS_TYPES = ['value', 'category', 'time', 'log'];\n/**\n * Generate sub axis model class\n * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n * @param {module:echarts/model/Component} BaseAxisModelClass\n * @param {Function} axisTypeDefaulter\n * @param {Object} [extraDefaultOption]\n */\n\nfunction _default(axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n  zrUtil.each(AXIS_TYPES, function (axisType) {\n    BaseAxisModelClass.extend({\n      type: axisName + 'Axis.' + axisType,\n      mergeDefaultAndTheme: function (option, ecModel) {\n        var layoutMode = this.layoutMode;\n        var inputPositionParams = layoutMode ? getLayoutParams(option) : {};\n        var themeModel = ecModel.getTheme();\n        zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n        zrUtil.merge(option, this.getDefaultOption());\n        option.type = axisTypeDefaulter(axisName, option);\n\n        if (layoutMode) {\n          mergeLayoutParam(option, inputPositionParams, layoutMode);\n        }\n      },\n      defaultOption: zrUtil.mergeAll([{}, axisDefault[axisType + 'Axis'], extraDefaultOption], true)\n    });\n  });\n  ComponentModel.registerSubTypeDefaulter(axisName + 'Axis', zrUtil.curry(axisTypeDefaulter, axisName));\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1090:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar util = __webpack_require__(978);\n\nvar vec2 = __webpack_require__(984);\n\nvar Draggable = __webpack_require__(1091);\n\nvar Eventful = __webpack_require__(1001);\n\n/**\n * Handler\n * @module zrender/Handler\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (shenyi.914@gmail.com)\n */\nvar SILENT = 'silent';\n\nfunction makeEventPacket(eveType, targetInfo, event) {\n  return {\n    type: eveType,\n    event: event,\n    // target can only be an element that is not silent.\n    target: targetInfo.target,\n    // topTarget can be a silent element.\n    topTarget: targetInfo.topTarget,\n    cancelBubble: false,\n    offsetX: event.zrX,\n    offsetY: event.zrY,\n    gestureEvent: event.gestureEvent,\n    pinchX: event.pinchX,\n    pinchY: event.pinchY,\n    pinchScale: event.pinchScale,\n    wheelDelta: event.zrDelta,\n    zrByTouch: event.zrByTouch,\n    which: event.which\n  };\n}\n\nfunction EmptyProxy() {}\n\nEmptyProxy.prototype.dispose = function () {};\n\nvar handlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\n/**\n * @alias module:zrender/Handler\n * @constructor\n * @extends module:zrender/mixin/Eventful\n * @param {module:zrender/Storage} storage Storage instance.\n * @param {module:zrender/Painter} painter Painter instance.\n * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n */\n\nvar Handler = function (storage, painter, proxy, painterRoot) {\n  Eventful.call(this);\n  this.storage = storage;\n  this.painter = painter;\n  this.painterRoot = painterRoot;\n  proxy = proxy || new EmptyProxy();\n  /**\n   * Proxy of event. can be Dom, WebGLSurface, etc.\n   */\n\n  this.proxy = proxy; // Attach handler\n\n  proxy.handler = this;\n  /**\n   * {target, topTarget, x, y}\n   * @private\n   * @type {Object}\n   */\n\n  this._hovered = {};\n  /**\n   * @private\n   * @type {Date}\n   */\n\n  this._lastTouchMoment;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastX;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastY;\n  Draggable.call(this);\n  util.each(handlerNames, function (name) {\n    proxy.on && proxy.on(name, this[name], this);\n  }, this);\n};\n\nHandler.prototype = {\n  constructor: Handler,\n  mousemove: function (event) {\n    var x = event.zrX;\n    var y = event.zrY;\n    var lastHovered = this._hovered;\n    var lastHoveredTarget = lastHovered.target; // If lastHoveredTarget is removed from zr (detected by '__zr') by some API call\n    // (like 'setOption' or 'dispatchAction') in event handlers, we should find\n    // lastHovered again here. Otherwise 'mouseout' can not be triggered normally.\n    // See #6198.\n\n    if (lastHoveredTarget && !lastHoveredTarget.__zr) {\n      lastHovered = this.findHover(lastHovered.x, lastHovered.y);\n      lastHoveredTarget = lastHovered.target;\n    }\n\n    var hovered = this._hovered = this.findHover(x, y);\n    var hoveredTarget = hovered.target;\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default'); // Mouse out on previous hovered element\n\n    if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(lastHovered, 'mouseout', event);\n    } // Mouse moving on one element\n\n\n    this.dispatchToElement(hovered, 'mousemove', event); // Mouse over on a new element\n\n    if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(hovered, 'mouseover', event);\n    }\n  },\n  mouseout: function (event) {\n    this.dispatchToElement(this._hovered, 'mouseout', event); // There might be some doms created by upper layer application\n    // at the same level of painter.getViewportRoot() (e.g., tooltip\n    // dom created by echarts), where 'globalout' event should not\n    // be triggered when mouse enters these doms. (But 'mouseout'\n    // should be triggered at the original hovered element as usual).\n\n    var element = event.toElement || event.relatedTarget;\n    var innerDom;\n\n    do {\n      element = element && element.parentNode;\n    } while (element && element.nodeType != 9 && !(innerDom = element === this.painterRoot));\n\n    !innerDom && this.trigger('globalout', {\n      event: event\n    });\n  },\n\n  /**\n   * Resize\n   */\n  resize: function (event) {\n    this._hovered = {};\n  },\n\n  /**\n   * Dispatch event\n   * @param {string} eventName\n   * @param {event=} eventArgs\n   */\n  dispatch: function (eventName, eventArgs) {\n    var handler = this[eventName];\n    handler && handler.call(this, eventArgs);\n  },\n\n  /**\n   * Dispose\n   */\n  dispose: function () {\n    this.proxy.dispose();\n    this.storage = this.proxy = this.painter = null;\n  },\n\n  /**\n   * 设置默认的cursor style\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(cursorStyle);\n  },\n\n  /**\n   * 事件分发代理\n   *\n   * @private\n   * @param {Object} targetInfo {target, topTarget} 目标图形元素\n   * @param {string} eventName 事件名称\n   * @param {Object} event 事件对象\n   */\n  dispatchToElement: function (targetInfo, eventName, event) {\n    targetInfo = targetInfo || {};\n    var el = targetInfo.target;\n\n    if (el && el.silent) {\n      return;\n    }\n\n    var eventHandler = 'on' + eventName;\n    var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n    while (el) {\n      el[eventHandler] && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n      el.trigger(eventName, eventPacket);\n      el = el.parent;\n\n      if (eventPacket.cancelBubble) {\n        break;\n      }\n    }\n\n    if (!eventPacket.cancelBubble) {\n      // 冒泡到顶级 zrender 对象\n      this.trigger(eventName, eventPacket); // 分发事件到用户自定义层\n      // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n\n      this.painter && this.painter.eachOtherLayer(function (layer) {\n        if (typeof layer[eventHandler] == 'function') {\n          layer[eventHandler].call(layer, eventPacket);\n        }\n\n        if (layer.trigger) {\n          layer.trigger(eventName, eventPacket);\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   * @param {number} x\n   * @param {number} y\n   * @param {module:zrender/graphic/Displayable} exclude\n   * @return {model:zrender/Element}\n   * @method\n   */\n  findHover: function (x, y, exclude) {\n    var list = this.storage.getDisplayList();\n    var out = {\n      x: x,\n      y: y\n    };\n\n    for (var i = list.length - 1; i >= 0; i--) {\n      var hoverCheckResult;\n\n      if (list[i] !== exclude // getDisplayList may include ignored item in VML mode\n      && !list[i].ignore && (hoverCheckResult = isHover(list[i], x, y))) {\n        !out.topTarget && (out.topTarget = list[i]);\n\n        if (hoverCheckResult !== SILENT) {\n          out.target = list[i];\n          break;\n        }\n      }\n    }\n\n    return out;\n  }\n}; // Common handlers\n\nutil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  Handler.prototype[name] = function (event) {\n    // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n    var hovered = this.findHover(event.zrX, event.zrY);\n    var hoveredTarget = hovered.target;\n\n    if (name === 'mousedown') {\n      this._downEl = hoveredTarget;\n      this._downPoint = [event.zrX, event.zrY]; // In case click triggered before mouseup\n\n      this._upEl = hoveredTarget;\n    } else if (name === 'mosueup') {\n      this._upEl = hoveredTarget;\n    } else if (name === 'click') {\n      if (this._downEl !== this._upEl // Original click event is triggered on the whole canvas element,\n      // including the case that `mousedown` - `mousemove` - `mouseup`,\n      // which should be filtered, otherwise it will bring trouble to\n      // pan and zoom.\n      || !this._downPoint // Arbitrary value\n      || vec2.dist(this._downPoint, [event.zrX, event.zrY]) > 4) {\n        return;\n      }\n\n      this._downPoint = null;\n    }\n\n    this.dispatchToElement(hovered, name, event);\n  };\n});\n\nfunction isHover(displayable, x, y) {\n  if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n    var el = displayable;\n    var isSilent;\n\n    while (el) {\n      // If clipped by ancestor.\n      // FIXME: If clipPath has neither stroke nor fill,\n      // el.clipPath.contain(x, y) will always return false.\n      if (el.clipPath && !el.clipPath.contain(x, y)) {\n        return false;\n      }\n\n      if (el.silent) {\n        isSilent = true;\n      }\n\n      el = el.parent;\n    }\n\n    return isSilent ? SILENT : true;\n  }\n\n  return false;\n}\n\nutil.mixin(Handler, Eventful);\nutil.mixin(Handler, Draggable);\nvar _default = Handler;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1091:\n/***/ (function(module, exports) {\n\n// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\nfunction Draggable() {\n  this.on('mousedown', this._dragStart, this);\n  this.on('mousemove', this._drag, this);\n  this.on('mouseup', this._dragEnd, this);\n  this.on('globalout', this._dragEnd, this); // this._dropTarget = null;\n  // this._draggingTarget = null;\n  // this._x = 0;\n  // this._y = 0;\n}\n\nDraggable.prototype = {\n  constructor: Draggable,\n  _dragStart: function (e) {\n    var draggingTarget = e.target;\n\n    if (draggingTarget && draggingTarget.draggable) {\n      this._draggingTarget = draggingTarget;\n      draggingTarget.dragging = true;\n      this._x = e.offsetX;\n      this._y = e.offsetY;\n      this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n    }\n  },\n  _drag: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      var x = e.offsetX;\n      var y = e.offsetY;\n      var dx = x - this._x;\n      var dy = y - this._y;\n      this._x = x;\n      this._y = y;\n      draggingTarget.drift(dx, dy, e);\n      this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n      var dropTarget = this.findHover(x, y, draggingTarget).target;\n      var lastDropTarget = this._dropTarget;\n      this._dropTarget = dropTarget;\n\n      if (draggingTarget !== dropTarget) {\n        if (lastDropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n        }\n\n        if (dropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n        }\n      }\n    }\n  },\n  _dragEnd: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      draggingTarget.dragging = false;\n    }\n\n    this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n    if (this._dropTarget) {\n      this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n    }\n\n    this._draggingTarget = null;\n    this._dropTarget = null;\n  }\n};\n\nfunction param(target, e) {\n  return {\n    target: target,\n    topTarget: e && e.topTarget\n  };\n}\n\nvar _default = Draggable;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1092:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar util = __webpack_require__(978);\n\nvar env = __webpack_require__(986);\n\nvar Group = __webpack_require__(1009);\n\nvar timsort = __webpack_require__(1024);\n\n/**\n * Storage内容仓库模块\n * @module zrender/Storage\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @author errorrik (errorrik@gmail.com)\n * @author pissang (https://github.com/pissang/)\n */\n// Use timsort because in most case elements are partially sorted\n// https://jsfiddle.net/pissang/jr4x7mdm/8/\nfunction shapeCompareFunc(a, b) {\n  if (a.zlevel === b.zlevel) {\n    if (a.z === b.z) {\n      // if (a.z2 === b.z2) {\n      //     // FIXME Slow has renderidx compare\n      //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n      //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n      //     return a.__renderidx - b.__renderidx;\n      // }\n      return a.z2 - b.z2;\n    }\n\n    return a.z - b.z;\n  }\n\n  return a.zlevel - b.zlevel;\n}\n/**\n * 内容仓库 (M)\n * @alias module:zrender/Storage\n * @constructor\n */\n\n\nvar Storage = function () {\n  // jshint ignore:line\n  this._roots = [];\n  this._displayList = [];\n  this._displayListLen = 0;\n};\n\nStorage.prototype = {\n  constructor: Storage,\n\n  /**\n   * @param  {Function} cb\n   *\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._roots.length; i++) {\n      this._roots[i].traverse(cb, context);\n    }\n  },\n\n  /**\n   * 返回所有图形的绘制队列\n   * @param {boolean} [update=false] 是否在返回前更新该数组\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n   *\n   * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n   * @return {Array.<module:zrender/graphic/Displayable>}\n   */\n  getDisplayList: function (update, includeIgnore) {\n    includeIgnore = includeIgnore || false;\n\n    if (update) {\n      this.updateDisplayList(includeIgnore);\n    }\n\n    return this._displayList;\n  },\n\n  /**\n   * 更新图形的绘制队列。\n   * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n   * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n   */\n  updateDisplayList: function (includeIgnore) {\n    this._displayListLen = 0;\n    var roots = this._roots;\n    var displayList = this._displayList;\n\n    for (var i = 0, len = roots.length; i < len; i++) {\n      this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n    }\n\n    displayList.length = this._displayListLen; // for (var i = 0, len = displayList.length; i < len; i++) {\n    //     displayList[i].__renderidx = i;\n    // }\n    // displayList.sort(shapeCompareFunc);\n\n    env.canvasSupported && timsort(displayList, shapeCompareFunc);\n  },\n  _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n    if (el.ignore && !includeIgnore) {\n      return;\n    }\n\n    el.beforeUpdate();\n\n    if (el.__dirty) {\n      el.update();\n    }\n\n    el.afterUpdate();\n    var userSetClipPath = el.clipPath;\n\n    if (userSetClipPath) {\n      // FIXME 效率影响\n      if (clipPaths) {\n        clipPaths = clipPaths.slice();\n      } else {\n        clipPaths = [];\n      }\n\n      var currentClipPath = userSetClipPath;\n      var parentClipPath = el; // Recursively add clip path\n\n      while (currentClipPath) {\n        // clipPath 的变换是基于使用这个 clipPath 的元素\n        currentClipPath.parent = parentClipPath;\n        currentClipPath.updateTransform();\n        clipPaths.push(currentClipPath);\n        parentClipPath = currentClipPath;\n        currentClipPath = currentClipPath.clipPath;\n      }\n    }\n\n    if (el.isGroup) {\n      var children = el._children;\n\n      for (var i = 0; i < children.length; i++) {\n        var child = children[i]; // Force to mark as dirty if group is dirty\n        // FIXME __dirtyPath ?\n\n        if (el.__dirty) {\n          child.__dirty = true;\n        }\n\n        this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n      } // Mark group clean here\n\n\n      el.__dirty = false;\n    } else {\n      el.__clipPaths = clipPaths;\n      this._displayList[this._displayListLen++] = el;\n    }\n  },\n\n  /**\n   * 添加图形(Shape)或者组(Group)到根节点\n   * @param {module:zrender/Element} el\n   */\n  addRoot: function (el) {\n    if (el.__storage === this) {\n      return;\n    }\n\n    if (el instanceof Group) {\n      el.addChildrenToStorage(this);\n    }\n\n    this.addToStorage(el);\n\n    this._roots.push(el);\n  },\n\n  /**\n   * 删除指定的图形(Shape)或者组(Group)\n   * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n   */\n  delRoot: function (el) {\n    if (el == null) {\n      // 不指定el清空\n      for (var i = 0; i < this._roots.length; i++) {\n        var root = this._roots[i];\n\n        if (root instanceof Group) {\n          root.delChildrenFromStorage(this);\n        }\n      }\n\n      this._roots = [];\n      this._displayList = [];\n      this._displayListLen = 0;\n      return;\n    }\n\n    if (el instanceof Array) {\n      for (var i = 0, l = el.length; i < l; i++) {\n        this.delRoot(el[i]);\n      }\n\n      return;\n    }\n\n    var idx = util.indexOf(this._roots, el);\n\n    if (idx >= 0) {\n      this.delFromStorage(el);\n\n      this._roots.splice(idx, 1);\n\n      if (el instanceof Group) {\n        el.delChildrenFromStorage(this);\n      }\n    }\n  },\n  addToStorage: function (el) {\n    el.__storage = this;\n    el.dirty(false);\n    return this;\n  },\n  delFromStorage: function (el) {\n    if (el) {\n      el.__storage = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * 清空并且释放Storage\n   */\n  dispose: function () {\n    this._renderList = this._roots = null;\n  },\n  displayableSortFunc: shapeCompareFunc\n};\nvar _default = Storage;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1093:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Animator = __webpack_require__(1044);\n\nvar log = __webpack_require__(1023);\n\nvar _util = __webpack_require__(978);\n\nvar isString = _util.isString;\nvar isFunction = _util.isFunction;\nvar isObject = _util.isObject;\nvar isArrayLike = _util.isArrayLike;\nvar indexOf = _util.indexOf;\n\n/**\n * @alias modue:zrender/mixin/Animatable\n * @constructor\n */\nvar Animatable = function () {\n  /**\n   * @type {Array.<module:zrender/animation/Animator>}\n   * @readOnly\n   */\n  this.animators = [];\n};\n\nAnimatable.prototype = {\n  constructor: Animatable,\n\n  /**\n   * 动画\n   *\n   * @param {string} path The path to fetch value from object, like 'a.b.c'.\n   * @param {boolean} [loop] Whether to loop animation.\n   * @return {module:zrender/animation/Animator}\n   * @example:\n   *     el.animate('style', false)\n   *         .when(1000, {x: 10} )\n   *         .done(function(){ // Animation done })\n   *         .start()\n   */\n  animate: function (path, loop) {\n    var target;\n    var animatingShape = false;\n    var el = this;\n    var zr = this.__zr;\n\n    if (path) {\n      var pathSplitted = path.split('.');\n      var prop = el; // If animating shape\n\n      animatingShape = pathSplitted[0] === 'shape';\n\n      for (var i = 0, l = pathSplitted.length; i < l; i++) {\n        if (!prop) {\n          continue;\n        }\n\n        prop = prop[pathSplitted[i]];\n      }\n\n      if (prop) {\n        target = prop;\n      }\n    } else {\n      target = el;\n    }\n\n    if (!target) {\n      log('Property \"' + path + '\" is not existed in element ' + el.id);\n      return;\n    }\n\n    var animators = el.animators;\n    var animator = new Animator(target, loop);\n    animator.during(function (target) {\n      el.dirty(animatingShape);\n    }).done(function () {\n      // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n      animators.splice(indexOf(animators, animator), 1);\n    });\n    animators.push(animator); // If animate after added to the zrender\n\n    if (zr) {\n      zr.animation.addAnimator(animator);\n    }\n\n    return animator;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stopAnimation: function (forwardToLast) {\n    var animators = this.animators;\n    var len = animators.length;\n\n    for (var i = 0; i < len; i++) {\n      animators[i].stop(forwardToLast);\n    }\n\n    animators.length = 0;\n    return this;\n  },\n\n  /**\n   * Caution: this method will stop previous animation.\n   * So do not use this method to one element twice before\n   * animation starts, unless you know what you are doing.\n   * @param {Object} target\n   * @param {number} [time=500] Time in ms\n   * @param {string} [easing='linear']\n   * @param {number} [delay=0]\n   * @param {Function} [callback]\n   * @param {Function} [forceAnimate] Prevent stop animation and callback\n   *        immediently when target values are the same as current values.\n   *\n   * @example\n   *  // Animate position\n   *  el.animateTo({\n   *      position: [10, 10]\n   *  }, function () { // done })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n   *  el.animateTo({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100, 'cubicOut', function () { // done })\n   */\n  // TODO Return animation key\n  animateTo: function (target, time, delay, easing, callback, forceAnimate) {\n    // animateTo(target, time, easing, callback);\n    if (isString(delay)) {\n      callback = easing;\n      easing = delay;\n      delay = 0;\n    } // animateTo(target, time, delay, callback);\n    else if (isFunction(easing)) {\n        callback = easing;\n        easing = 'linear';\n        delay = 0;\n      } // animateTo(target, time, callback);\n      else if (isFunction(delay)) {\n          callback = delay;\n          delay = 0;\n        } // animateTo(target, callback)\n        else if (isFunction(time)) {\n            callback = time;\n            time = 500;\n          } // animateTo(target)\n          else if (!time) {\n              time = 500;\n            } // Stop all previous animations\n\n\n    this.stopAnimation();\n\n    this._animateToShallow('', this, target, time, delay); // Animators may be removed immediately after start\n    // if there is nothing to animate\n\n\n    var animators = this.animators.slice();\n    var count = animators.length;\n\n    function done() {\n      count--;\n\n      if (!count) {\n        callback && callback();\n      }\n    } // No animators. This should be checked before animators[i].start(),\n    // because 'done' may be executed immediately if no need to animate.\n\n\n    if (!count) {\n      callback && callback();\n    } // Start after all animators created\n    // Incase any animator is done immediately when all animation properties are not changed\n\n\n    for (var i = 0; i < animators.length; i++) {\n      animators[i].done(done).start(easing, forceAnimate);\n    }\n  },\n\n  /**\n   * @private\n   * @param {string} path=''\n   * @param {Object} source=this\n   * @param {Object} target\n   * @param {number} [time=500]\n   * @param {number} [delay=0]\n   *\n   * @example\n   *  // Animate position\n   *  el._animateToShallow({\n   *      position: [10, 10]\n   *  })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms\n   *  el._animateToShallow({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100)\n   */\n  _animateToShallow: function (path, source, target, time, delay) {\n    var objShallow = {};\n    var propertyCount = 0;\n\n    for (var name in target) {\n      if (!target.hasOwnProperty(name)) {\n        continue;\n      }\n\n      if (source[name] != null) {\n        if (isObject(target[name]) && !isArrayLike(target[name])) {\n          this._animateToShallow(path ? path + '.' + name : name, source[name], target[name], time, delay);\n        } else {\n          objShallow[name] = target[name];\n          propertyCount++;\n        }\n      } else if (target[name] != null) {\n        // Attr directly if not has property\n        // FIXME, if some property not needed for element ?\n        if (!path) {\n          this.attr(name, target[name]);\n        } else {\n          // Shape or style\n          var props = {};\n          props[path] = {};\n          props[path][name] = target[name];\n          this.attr(props);\n        }\n      }\n    }\n\n    if (propertyCount > 0) {\n      this.animate(path, false).when(time == null ? 500 : time, objShallow).delay(delay || 0);\n    }\n\n    return this;\n  }\n};\nvar _default = Animatable;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1094:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar easingFuncs = __webpack_require__(1095);\n\n/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\nfunction Clip(options) {\n  this._target = options.target; // 生命周期\n\n  this._life = options.life || 1000; // 延时\n\n  this._delay = options.delay || 0; // 开始时间\n  // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n\n  this._initialized = false; // 是否循环\n\n  this.loop = options.loop == null ? false : options.loop;\n  this.gap = options.gap || 0;\n  this.easing = options.easing || 'Linear';\n  this.onframe = options.onframe;\n  this.ondestroy = options.ondestroy;\n  this.onrestart = options.onrestart;\n  this._pausedTime = 0;\n  this._paused = false;\n}\n\nClip.prototype = {\n  constructor: Clip,\n  step: function (globalTime, deltaTime) {\n    // Set startTime on first step, or _startTime may has milleseconds different between clips\n    // PENDING\n    if (!this._initialized) {\n      this._startTime = globalTime + this._delay;\n      this._initialized = true;\n    }\n\n    if (this._paused) {\n      this._pausedTime += deltaTime;\n      return;\n    }\n\n    var percent = (globalTime - this._startTime - this._pausedTime) / this._life; // 还没开始\n\n    if (percent < 0) {\n      return;\n    }\n\n    percent = Math.min(percent, 1);\n    var easing = this.easing;\n    var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n    var schedule = typeof easingFunc === 'function' ? easingFunc(percent) : percent;\n    this.fire('frame', schedule); // 结束\n\n    if (percent == 1) {\n      if (this.loop) {\n        this.restart(globalTime); // 重新开始周期\n        // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n\n        return 'restart';\n      } // 动画完成将这个控制器标识为待删除\n      // 在Animation.update中进行批量删除\n\n\n      this._needsRemove = true;\n      return 'destroy';\n    }\n\n    return null;\n  },\n  restart: function (globalTime) {\n    var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n    this._startTime = globalTime - remainder + this.gap;\n    this._pausedTime = 0;\n    this._needsRemove = false;\n  },\n  fire: function (eventType, arg) {\n    eventType = 'on' + eventType;\n\n    if (this[eventType]) {\n      this[eventType](this._target, arg);\n    }\n  },\n  pause: function () {\n    this._paused = true;\n  },\n  resume: function () {\n    this._paused = false;\n  }\n};\nvar _default = Clip;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1095:\n/***/ (function(module, exports) {\n\n/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\nvar easing = {\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  linear: function (k) {\n    return k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticIn: function (k) {\n    return k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticOut: function (k) {\n    return k * (2 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k;\n    }\n\n    return -0.5 * (--k * (k - 2) - 1);\n  },\n  // 三次方的缓动（t^3）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicIn: function (k) {\n    return k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicOut: function (k) {\n    return --k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k + 2);\n  },\n  // 四次方的缓动（t^4）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticIn: function (k) {\n    return k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticOut: function (k) {\n    return 1 - --k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k;\n    }\n\n    return -0.5 * ((k -= 2) * k * k * k - 2);\n  },\n  // 五次方的缓动（t^5）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticIn: function (k) {\n    return k * k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticOut: function (k) {\n    return --k * k * k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k * k * k + 2);\n  },\n  // 正弦曲线的缓动（sin(t)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalIn: function (k) {\n    return 1 - Math.cos(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalOut: function (k) {\n    return Math.sin(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalInOut: function (k) {\n    return 0.5 * (1 - Math.cos(Math.PI * k));\n  },\n  // 指数曲线的缓动（2^t）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialIn: function (k) {\n    return k === 0 ? 0 : Math.pow(1024, k - 1);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialOut: function (k) {\n    return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialInOut: function (k) {\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if ((k *= 2) < 1) {\n      return 0.5 * Math.pow(1024, k - 1);\n    }\n\n    return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n  },\n  // 圆形曲线的缓动（sqrt(1-t^2)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularIn: function (k) {\n    return 1 - Math.sqrt(1 - k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularOut: function (k) {\n    return Math.sqrt(1 - --k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return -0.5 * (Math.sqrt(1 - k * k) - 1);\n    }\n\n    return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n  },\n  // 创建类似于弹簧在停止前来回振荡的动画\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticIn: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return -(a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return a * Math.pow(2, -10 * k) * Math.sin((k - s) * (2 * Math.PI) / p) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticInOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    if ((k *= 2) < 1) {\n      return -0.5 * (a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n    }\n\n    return a * Math.pow(2, -10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n  },\n  // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backIn: function (k) {\n    var s = 1.70158;\n    return k * k * ((s + 1) * k - s);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backOut: function (k) {\n    var s = 1.70158;\n    return --k * k * ((s + 1) * k + s) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backInOut: function (k) {\n    var s = 1.70158 * 1.525;\n\n    if ((k *= 2) < 1) {\n      return 0.5 * (k * k * ((s + 1) * k - s));\n    }\n\n    return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n  },\n  // 创建弹跳效果\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceIn: function (k) {\n    return 1 - easing.bounceOut(1 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceOut: function (k) {\n    if (k < 1 / 2.75) {\n      return 7.5625 * k * k;\n    } else if (k < 2 / 2.75) {\n      return 7.5625 * (k -= 1.5 / 2.75) * k + 0.75;\n    } else if (k < 2.5 / 2.75) {\n      return 7.5625 * (k -= 2.25 / 2.75) * k + 0.9375;\n    } else {\n      return 7.5625 * (k -= 2.625 / 2.75) * k + 0.984375;\n    }\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceInOut: function (k) {\n    if (k < 0.5) {\n      return easing.bounceIn(k * 2) * 0.5;\n    }\n\n    return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n  }\n};\nvar _default = easing;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1096:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(1010);\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar util = __webpack_require__(978);\n\nvar log = __webpack_require__(1023);\n\nvar BoundingRect = __webpack_require__(987);\n\nvar timsort = __webpack_require__(1024);\n\nvar Layer = __webpack_require__(1097);\n\nvar requestAnimationFrame = __webpack_require__(1048);\n\nvar Image = __webpack_require__(1025);\n\n/**\n * Default canvas painter\n * @module zrender/Painter\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n// PENDIGN\n// Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.\n//\n// Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.\nvar MAX_PROGRESSIVE_LAYER_NUMBER = 5;\n\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n\nfunction isLayerValid(layer) {\n  if (!layer) {\n    return false;\n  }\n\n  if (layer.__builtin__) {\n    return true;\n  }\n\n  if (typeof layer.resize !== 'function' || typeof layer.refresh !== 'function') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction preProcessLayer(layer) {\n  layer.__unusedCount++;\n}\n\nfunction postProcessLayer(layer) {\n  if (layer.__unusedCount == 1) {\n    layer.clear();\n  }\n}\n\nvar tmpRect = new BoundingRect(0, 0, 0, 0);\nvar viewRect = new BoundingRect(0, 0, 0, 0);\n\nfunction isDisplayableCulled(el, width, height) {\n  tmpRect.copy(el.getBoundingRect());\n\n  if (el.transform) {\n    tmpRect.applyTransform(el.transform);\n  }\n\n  viewRect.width = width;\n  viewRect.height = height;\n  return !tmpRect.intersect(viewRect);\n}\n\nfunction isClipPathChanged(clipPaths, prevClipPaths) {\n  if (clipPaths == prevClipPaths) {\n    // Can both be null or undefined\n    return false;\n  }\n\n  if (!clipPaths || !prevClipPaths || clipPaths.length !== prevClipPaths.length) {\n    return true;\n  }\n\n  for (var i = 0; i < clipPaths.length; i++) {\n    if (clipPaths[i] !== prevClipPaths[i]) {\n      return true;\n    }\n  }\n}\n\nfunction doClip(clipPaths, ctx) {\n  for (var i = 0; i < clipPaths.length; i++) {\n    var clipPath = clipPaths[i];\n    clipPath.setTransform(ctx);\n    ctx.beginPath();\n    clipPath.buildPath(ctx, clipPath.shape);\n    ctx.clip(); // Transform back\n\n    clipPath.restoreTransform(ctx);\n  }\n}\n\nfunction createRoot(width, height) {\n  var domRoot = document.createElement('div'); // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n  domRoot.style.cssText = ['position:relative', 'overflow:hidden', 'width:' + width + 'px', 'height:' + height + 'px', 'padding:0', 'margin:0', 'border-width:0'].join(';') + ';';\n  return domRoot;\n}\n/**\n * @alias module:zrender/Painter\n * @constructor\n * @param {HTMLElement} root 绘图容器\n * @param {module:zrender/Storage} storage\n * @param {Object} opts\n */\n\n\nvar Painter = function (root, storage, opts) {\n  this.type = 'canvas'; // In node environment using node-canvas\n\n  var singleCanvas = !root.nodeName // In node ?\n  || root.nodeName.toUpperCase() === 'CANVAS';\n  this._opts = opts = util.extend({}, opts || {});\n  /**\n   * @type {number}\n   */\n\n  this.dpr = opts.devicePixelRatio || devicePixelRatio;\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._singleCanvas = singleCanvas;\n  /**\n   * 绘图容器\n   * @type {HTMLElement}\n   */\n\n  this.root = root;\n  var rootStyle = root.style;\n\n  if (rootStyle) {\n    rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n    rootStyle['-webkit-user-select'] = rootStyle['user-select'] = rootStyle['-webkit-touch-callout'] = 'none';\n    root.innerHTML = '';\n  }\n  /**\n   * @type {module:zrender/Storage}\n   */\n\n\n  this.storage = storage;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  var zlevelList = this._zlevelList = [];\n  /**\n   * @type {Object.<string, module:zrender/Layer>}\n   * @private\n   */\n\n  var layers = this._layers = {};\n  /**\n   * @type {Object.<string, Object>}\n   * @type {private}\n   */\n\n  this._layerConfig = {};\n\n  if (!singleCanvas) {\n    this._width = this._getSize(0);\n    this._height = this._getSize(1);\n    var domRoot = this._domRoot = createRoot(this._width, this._height);\n    root.appendChild(domRoot);\n  } else {\n    if (opts.width != null) {\n      root.width = opts.width;\n    }\n\n    if (opts.height != null) {\n      root.height = opts.height;\n    } // Use canvas width and height directly\n\n\n    var width = root.width;\n    var height = root.height;\n    this._width = width;\n    this._height = height; // Create layer if only one given canvas\n    // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n\n    var mainLayer = new Layer(root, this, 1);\n    mainLayer.initContext(); // FIXME Use canvas width and height\n    // mainLayer.resize(width, height);\n\n    layers[0] = mainLayer;\n    zlevelList.push(0);\n    this._domRoot = root;\n  } // Layers for progressive rendering\n\n\n  this._progressiveLayers = [];\n  /**\n   * @type {module:zrender/Layer}\n   * @private\n   */\n\n  this._hoverlayer;\n  this._hoverElements = [];\n};\n\nPainter.prototype = {\n  constructor: Painter,\n  getType: function () {\n    return 'canvas';\n  },\n\n  /**\n   * If painter use a single canvas\n   * @return {boolean}\n   */\n  isSingleCanvas: function () {\n    return this._singleCanvas;\n  },\n\n  /**\n   * @return {HTMLDivElement}\n   */\n  getViewportRoot: function () {\n    return this._domRoot;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n\n  /**\n   * 刷新\n   * @param {boolean} [paintAll=false] 强制绘制所有displayable\n   */\n  refresh: function (paintAll) {\n    var list = this.storage.getDisplayList(true);\n    var zlevelList = this._zlevelList;\n\n    this._paintList(list, paintAll); // Paint custum layers\n\n\n    for (var i = 0; i < zlevelList.length; i++) {\n      var z = zlevelList[i];\n      var layer = this._layers[z];\n\n      if (!layer.__builtin__ && layer.refresh) {\n        layer.refresh();\n      }\n    }\n\n    this.refreshHover();\n\n    if (this._progressiveLayers.length) {\n      this._startProgessive();\n    }\n\n    return this;\n  },\n  addHover: function (el, hoverStyle) {\n    if (el.__hoverMir) {\n      return;\n    }\n\n    var elMirror = new el.constructor({\n      style: el.style,\n      shape: el.shape\n    });\n    elMirror.__from = el;\n    el.__hoverMir = elMirror;\n    elMirror.setStyle(hoverStyle);\n\n    this._hoverElements.push(elMirror);\n  },\n  removeHover: function (el) {\n    var elMirror = el.__hoverMir;\n    var hoverElements = this._hoverElements;\n    var idx = util.indexOf(hoverElements, elMirror);\n\n    if (idx >= 0) {\n      hoverElements.splice(idx, 1);\n    }\n\n    el.__hoverMir = null;\n  },\n  clearHover: function (el) {\n    var hoverElements = this._hoverElements;\n\n    for (var i = 0; i < hoverElements.length; i++) {\n      var from = hoverElements[i].__from;\n\n      if (from) {\n        from.__hoverMir = null;\n      }\n    }\n\n    hoverElements.length = 0;\n  },\n  refreshHover: function () {\n    var hoverElements = this._hoverElements;\n    var len = hoverElements.length;\n    var hoverLayer = this._hoverlayer;\n    hoverLayer && hoverLayer.clear();\n\n    if (!len) {\n      return;\n    }\n\n    timsort(hoverElements, this.storage.displayableSortFunc); // Use a extream large zlevel\n    // FIXME?\n\n    if (!hoverLayer) {\n      hoverLayer = this._hoverlayer = this.getLayer(1e5);\n    }\n\n    var scope = {};\n    hoverLayer.ctx.save();\n\n    for (var i = 0; i < len;) {\n      var el = hoverElements[i];\n      var originalEl = el.__from; // Original el is removed\n      // PENDING\n\n      if (!(originalEl && originalEl.__zr)) {\n        hoverElements.splice(i, 1);\n        originalEl.__hoverMir = null;\n        len--;\n        continue;\n      }\n\n      i++; // Use transform\n      // FIXME style and shape ?\n\n      if (!originalEl.invisible) {\n        el.transform = originalEl.transform;\n        el.invTransform = originalEl.invTransform;\n        el.__clipPaths = originalEl.__clipPaths; // el.\n\n        this._doPaintEl(el, hoverLayer, true, scope);\n      }\n    }\n\n    hoverLayer.ctx.restore();\n  },\n  _startProgessive: function () {\n    var self = this;\n\n    if (!self._furtherProgressive) {\n      return;\n    } // Use a token to stop progress steps triggered by\n    // previous zr.refresh calling.\n\n\n    var token = self._progressiveToken = +new Date();\n    self._progress++;\n    requestAnimationFrame(step);\n\n    function step() {\n      // In case refreshed or disposed\n      if (token === self._progressiveToken && self.storage) {\n        self._doPaintList(self.storage.getDisplayList());\n\n        if (self._furtherProgressive) {\n          self._progress++;\n          requestAnimationFrame(step);\n        } else {\n          self._progressiveToken = -1;\n        }\n      }\n    }\n  },\n  _clearProgressive: function () {\n    this._progressiveToken = -1;\n    this._progress = 0;\n    util.each(this._progressiveLayers, function (layer) {\n      layer.__dirty && layer.clear();\n    });\n  },\n  _paintList: function (list, paintAll) {\n    if (paintAll == null) {\n      paintAll = false;\n    }\n\n    this._updateLayerStatus(list);\n\n    this._clearProgressive();\n\n    this.eachBuiltinLayer(preProcessLayer);\n\n    this._doPaintList(list, paintAll);\n\n    this.eachBuiltinLayer(postProcessLayer);\n  },\n  _doPaintList: function (list, paintAll) {\n    var currentLayer;\n    var currentZLevel;\n    var ctx; // var invTransform = [];\n\n    var scope;\n    var progressiveLayerIdx = 0;\n    var currentProgressiveLayer;\n    var width = this._width;\n    var height = this._height;\n    var layerProgress;\n    var frame = this._progress;\n\n    function flushProgressiveLayer(layer) {\n      var dpr = ctx.dpr || 1;\n      ctx.save();\n      ctx.globalAlpha = 1;\n      ctx.shadowBlur = 0; // Avoid layer don't clear in next progressive frame\n\n      currentLayer.__dirty = true;\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\n      ctx.drawImage(layer.dom, 0, 0, width * dpr, height * dpr);\n      ctx.restore();\n    }\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      var el = list[i];\n      var elZLevel = this._singleCanvas ? 0 : el.zlevel;\n      var elFrame = el.__frame; // Flush at current context\n      // PENDING\n\n      if (elFrame < 0 && currentProgressiveLayer) {\n        flushProgressiveLayer(currentProgressiveLayer);\n        currentProgressiveLayer = null;\n      } // Change draw layer\n\n\n      if (currentZLevel !== elZLevel) {\n        if (ctx) {\n          ctx.restore();\n        } // Reset scope\n\n\n        scope = {}; // Only 0 zlevel if only has one canvas\n\n        currentZLevel = elZLevel;\n        currentLayer = this.getLayer(currentZLevel);\n\n        if (!currentLayer.__builtin__) {\n          log('ZLevel ' + currentZLevel + ' has been used by unkown layer ' + currentLayer.id);\n        }\n\n        ctx = currentLayer.ctx;\n        ctx.save(); // Reset the count\n\n        currentLayer.__unusedCount = 0;\n\n        if (currentLayer.__dirty || paintAll) {\n          currentLayer.clear();\n        }\n      }\n\n      if (!(currentLayer.__dirty || paintAll)) {\n        continue;\n      }\n\n      if (elFrame >= 0) {\n        // Progressive layer changed\n        if (!currentProgressiveLayer) {\n          currentProgressiveLayer = this._progressiveLayers[Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)];\n          currentProgressiveLayer.ctx.save();\n          currentProgressiveLayer.renderScope = {};\n\n          if (currentProgressiveLayer && currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress) {\n            // flushProgressiveLayer(currentProgressiveLayer);\n            // Quick jump all progressive elements\n            // All progressive element are not dirty, jump over and flush directly\n            i = currentProgressiveLayer.__nextIdxNotProg - 1; // currentProgressiveLayer = null;\n\n            continue;\n          }\n\n          layerProgress = currentProgressiveLayer.__progress;\n\n          if (!currentProgressiveLayer.__dirty) {\n            // Keep rendering\n            frame = layerProgress;\n          }\n\n          currentProgressiveLayer.__progress = frame + 1;\n        }\n\n        if (elFrame === frame) {\n          this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);\n        }\n      } else {\n        this._doPaintEl(el, currentLayer, paintAll, scope);\n      }\n\n      el.__dirty = false;\n    }\n\n    if (currentProgressiveLayer) {\n      flushProgressiveLayer(currentProgressiveLayer);\n    } // Restore the lastLayer ctx\n\n\n    ctx && ctx.restore(); // If still has clipping state\n    // if (scope.prevElClipPaths) {\n    //     ctx.restore();\n    // }\n\n    this._furtherProgressive = false;\n    util.each(this._progressiveLayers, function (layer) {\n      if (layer.__maxProgress >= layer.__progress) {\n        this._furtherProgressive = true;\n      }\n    }, this);\n  },\n  _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n    var ctx = currentLayer.ctx;\n    var m = el.transform;\n\n    if ((currentLayer.__dirty || forcePaint) && // Ignore invisible element\n    !el.invisible // Ignore transparent element\n    && el.style.opacity !== 0 // Ignore scale 0 element, in some environment like node-canvas\n    // Draw a scale 0 element can cause all following draw wrong\n    // And setTransform with scale 0 will cause set back transform failed.\n    && !(m && !m[0] && !m[3]) // Ignore culled element\n    && !(el.culling && isDisplayableCulled(el, this._width, this._height))) {\n      var clipPaths = el.__clipPaths; // Optimize when clipping on group with several elements\n\n      if (scope.prevClipLayer !== currentLayer || isClipPathChanged(clipPaths, scope.prevElClipPaths)) {\n        // If has previous clipping state, restore from it\n        if (scope.prevElClipPaths) {\n          scope.prevClipLayer.ctx.restore();\n          scope.prevClipLayer = scope.prevElClipPaths = null; // Reset prevEl since context has been restored\n\n          scope.prevEl = null;\n        } // New clipping state\n\n\n        if (clipPaths) {\n          ctx.save();\n          doClip(clipPaths, ctx);\n          scope.prevClipLayer = currentLayer;\n          scope.prevElClipPaths = clipPaths;\n        }\n      }\n\n      el.beforeBrush && el.beforeBrush(ctx);\n      el.brush(ctx, scope.prevEl || null);\n      scope.prevEl = el;\n      el.afterBrush && el.afterBrush(ctx);\n    }\n  },\n\n  /**\n   * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n   * @param {number} zlevel\n   * @return {module:zrender/Layer}\n   */\n  getLayer: function (zlevel) {\n    if (this._singleCanvas) {\n      return this._layers[0];\n    }\n\n    var layer = this._layers[zlevel];\n\n    if (!layer) {\n      // Create a new layer\n      layer = new Layer('zr_' + zlevel, this, this.dpr);\n      layer.__builtin__ = true;\n\n      if (this._layerConfig[zlevel]) {\n        util.merge(layer, this._layerConfig[zlevel], true);\n      }\n\n      this.insertLayer(zlevel, layer); // Context is created after dom inserted to document\n      // Or excanvas will get 0px clientWidth and clientHeight\n\n      layer.initContext();\n    }\n\n    return layer;\n  },\n  insertLayer: function (zlevel, layer) {\n    var layersMap = this._layers;\n    var zlevelList = this._zlevelList;\n    var len = zlevelList.length;\n    var prevLayer = null;\n    var i = -1;\n    var domRoot = this._domRoot;\n\n    if (layersMap[zlevel]) {\n      log('ZLevel ' + zlevel + ' has been used already');\n      return;\n    } // Check if is a valid layer\n\n\n    if (!isLayerValid(layer)) {\n      log('Layer of zlevel ' + zlevel + ' is not valid');\n      return;\n    }\n\n    if (len > 0 && zlevel > zlevelList[0]) {\n      for (i = 0; i < len - 1; i++) {\n        if (zlevelList[i] < zlevel && zlevelList[i + 1] > zlevel) {\n          break;\n        }\n      }\n\n      prevLayer = layersMap[zlevelList[i]];\n    }\n\n    zlevelList.splice(i + 1, 0, zlevel);\n    layersMap[zlevel] = layer; // Vitual layer will not directly show on the screen.\n    // (It can be a WebGL layer and assigned to a ZImage element)\n    // But it still under management of zrender.\n\n    if (!layer.virtual) {\n      if (prevLayer) {\n        var prevDom = prevLayer.dom;\n\n        if (prevDom.nextSibling) {\n          domRoot.insertBefore(layer.dom, prevDom.nextSibling);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      } else {\n        if (domRoot.firstChild) {\n          domRoot.insertBefore(layer.dom, domRoot.firstChild);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      }\n    }\n  },\n  // Iterate each layer\n  eachLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      cb.call(context, this._layers[z], z);\n    }\n  },\n  // Iterate each buildin layer\n  eachBuiltinLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n  // Iterate each other layer except buildin layer\n  eachOtherLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (!layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n\n  /**\n   * 获取所有已创建的层\n   * @param {Array.<module:zrender/Layer>} [prevLayer]\n   */\n  getLayers: function () {\n    return this._layers;\n  },\n  _updateLayerStatus: function (list) {\n    var layers = this._layers;\n    var progressiveLayers = this._progressiveLayers;\n    var elCountsLastFrame = {};\n    var progressiveElCountsLastFrame = {};\n    this.eachBuiltinLayer(function (layer, z) {\n      elCountsLastFrame[z] = layer.elCount;\n      layer.elCount = 0;\n      layer.__dirty = false;\n    });\n    util.each(progressiveLayers, function (layer, idx) {\n      progressiveElCountsLastFrame[idx] = layer.elCount;\n      layer.elCount = 0;\n      layer.__dirty = false;\n    });\n    var progressiveLayerCount = 0;\n    var currentProgressiveLayer;\n    var lastProgressiveKey;\n    var frameCount = 0;\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      var el = list[i];\n      var zlevel = this._singleCanvas ? 0 : el.zlevel;\n      var layer = layers[zlevel];\n      var elProgress = el.progressive;\n\n      if (layer) {\n        layer.elCount++;\n        layer.__dirty = layer.__dirty || el.__dirty;\n      } /////// Update progressive\n\n\n      if (elProgress >= 0) {\n        // Fix wrong progressive sequence problem.\n        if (lastProgressiveKey !== elProgress) {\n          lastProgressiveKey = elProgress;\n          frameCount++;\n        }\n\n        var elFrame = el.__frame = frameCount - 1;\n\n        if (!currentProgressiveLayer) {\n          var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);\n          currentProgressiveLayer = progressiveLayers[idx];\n\n          if (!currentProgressiveLayer) {\n            currentProgressiveLayer = progressiveLayers[idx] = new Layer('progressive', this, this.dpr);\n            currentProgressiveLayer.initContext();\n          }\n\n          currentProgressiveLayer.__maxProgress = 0;\n        }\n\n        currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;\n        currentProgressiveLayer.elCount++;\n        currentProgressiveLayer.__maxProgress = Math.max(currentProgressiveLayer.__maxProgress, elFrame);\n\n        if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {\n          // Should keep rendering this  layer because progressive rendering is not finished yet\n          layer.__dirty = true;\n        }\n      } else {\n        el.__frame = -1;\n\n        if (currentProgressiveLayer) {\n          currentProgressiveLayer.__nextIdxNotProg = i;\n          progressiveLayerCount++;\n          currentProgressiveLayer = null;\n        }\n      }\n    }\n\n    if (currentProgressiveLayer) {\n      progressiveLayerCount++;\n      currentProgressiveLayer.__nextIdxNotProg = i;\n    } // 层中的元素数量有发生变化\n\n\n    this.eachBuiltinLayer(function (layer, z) {\n      if (elCountsLastFrame[z] !== layer.elCount) {\n        layer.__dirty = true;\n      }\n    });\n    progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);\n    util.each(progressiveLayers, function (layer, idx) {\n      if (progressiveElCountsLastFrame[idx] !== layer.elCount) {\n        el.__dirty = true;\n      }\n\n      if (layer.__dirty) {\n        layer.__progress = 0;\n      }\n    });\n  },\n\n  /**\n   * 清除hover层外所有内容\n   */\n  clear: function () {\n    this.eachBuiltinLayer(this._clearLayer);\n    return this;\n  },\n  _clearLayer: function (layer) {\n    layer.clear();\n  },\n\n  /**\n   * 修改指定zlevel的绘制参数\n   *\n   * @param {string} zlevel\n   * @param {Object} config 配置对象\n   * @param {string} [config.clearColor=0] 每次清空画布的颜色\n   * @param {string} [config.motionBlur=false] 是否开启动态模糊\n   * @param {number} [config.lastFrameAlpha=0.7]\n   *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   */\n  configLayer: function (zlevel, config) {\n    if (config) {\n      var layerConfig = this._layerConfig;\n\n      if (!layerConfig[zlevel]) {\n        layerConfig[zlevel] = config;\n      } else {\n        util.merge(layerConfig[zlevel], config, true);\n      }\n\n      var layer = this._layers[zlevel];\n\n      if (layer) {\n        util.merge(layer, layerConfig[zlevel], true);\n      }\n    }\n  },\n\n  /**\n   * 删除指定层\n   * @param {number} zlevel 层所在的zlevel\n   */\n  delLayer: function (zlevel) {\n    var layers = this._layers;\n    var zlevelList = this._zlevelList;\n    var layer = layers[zlevel];\n\n    if (!layer) {\n      return;\n    }\n\n    layer.dom.parentNode.removeChild(layer.dom);\n    delete layers[zlevel];\n    zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n  },\n\n  /**\n   * 区域大小变化后重绘\n   */\n  resize: function (width, height) {\n    var domRoot = this._domRoot; // FIXME Why ?\n\n    domRoot.style.display = 'none'; // Save input w/h\n\n    var opts = this._opts;\n    width != null && (opts.width = width);\n    height != null && (opts.height = height);\n    width = this._getSize(0);\n    height = this._getSize(1);\n    domRoot.style.display = ''; // 优化没有实际改变的resize\n\n    if (this._width != width || height != this._height) {\n      domRoot.style.width = width + 'px';\n      domRoot.style.height = height + 'px';\n\n      for (var id in this._layers) {\n        if (this._layers.hasOwnProperty(id)) {\n          this._layers[id].resize(width, height);\n        }\n      }\n\n      util.each(this._progressiveLayers, function (layer) {\n        layer.resize(width, height);\n      });\n      this.refresh(true);\n    }\n\n    this._width = width;\n    this._height = height;\n    return this;\n  },\n\n  /**\n   * 清除单独的一个层\n   * @param {number} zlevel\n   */\n  clearLayer: function (zlevel) {\n    var layer = this._layers[zlevel];\n\n    if (layer) {\n      layer.clear();\n    }\n  },\n\n  /**\n   * 释放\n   */\n  dispose: function () {\n    this.root.innerHTML = '';\n    this.root = this.storage = this._domRoot = this._layers = null;\n  },\n\n  /**\n   * Get canvas which has all thing rendered\n   * @param {Object} opts\n   * @param {string} [opts.backgroundColor]\n   * @param {number} [opts.pixelRatio]\n   */\n  getRenderedCanvas: function (opts) {\n    opts = opts || {};\n\n    if (this._singleCanvas) {\n      return this._layers[0].dom;\n    }\n\n    var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n    imageLayer.initContext();\n    imageLayer.clearColor = opts.backgroundColor;\n    imageLayer.clear();\n    var displayList = this.storage.getDisplayList(true);\n    var scope = {};\n    var zlevel;\n    var self = this;\n\n    function findAndDrawOtherLayer(smaller, larger) {\n      var zlevelList = self._zlevelList;\n\n      if (smaller == null) {\n        smaller = -Infinity;\n      }\n\n      var intermediateLayer;\n\n      for (var i = 0; i < zlevelList.length; i++) {\n        var z = zlevelList[i];\n        var layer = self._layers[z];\n\n        if (!layer.__builtin__ && z > smaller && z < larger) {\n          intermediateLayer = layer;\n          break;\n        }\n      }\n\n      if (intermediateLayer && intermediateLayer.renderToCanvas) {\n        imageLayer.ctx.save();\n        intermediateLayer.renderToCanvas(imageLayer.ctx);\n        imageLayer.ctx.restore();\n      }\n    }\n\n    for (var i = 0; i < displayList.length; i++) {\n      var el = displayList[i];\n\n      if (el.zlevel !== zlevel) {\n        findAndDrawOtherLayer(zlevel, el.zlevel);\n        zlevel = el.zlevel;\n      }\n\n      this._doPaintEl(el, imageLayer, true, scope);\n    }\n\n    findAndDrawOtherLayer(zlevel, Infinity);\n    return imageLayer.dom;\n  },\n\n  /**\n   * 获取绘图区域宽度\n   */\n  getWidth: function () {\n    return this._width;\n  },\n\n  /**\n   * 获取绘图区域高度\n   */\n  getHeight: function () {\n    return this._height;\n  },\n  _getSize: function (whIdx) {\n    var opts = this._opts;\n    var wh = ['width', 'height'][whIdx];\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n    if (opts[wh] != null && opts[wh] !== 'auto') {\n      return parseFloat(opts[wh]);\n    }\n\n    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.\n\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n  },\n  pathToImage: function (path, dpr) {\n    dpr = dpr || this.dpr;\n    var canvas = document.createElement('canvas');\n    var ctx = canvas.getContext('2d');\n    var rect = path.getBoundingRect();\n    var style = path.style;\n    var shadowBlurSize = style.shadowBlur;\n    var shadowOffsetX = style.shadowOffsetX;\n    var shadowOffsetY = style.shadowOffsetY;\n    var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n    var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n    var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n    var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n    var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n    var width = rect.width + leftMargin + rightMargin;\n    var height = rect.height + topMargin + bottomMargin;\n    canvas.width = width * dpr;\n    canvas.height = height * dpr;\n    ctx.scale(dpr, dpr);\n    ctx.clearRect(0, 0, width, height);\n    ctx.dpr = dpr;\n    var pathTransform = {\n      position: path.position,\n      rotation: path.rotation,\n      scale: path.scale\n    };\n    path.position = [leftMargin - rect.x, topMargin - rect.y];\n    path.rotation = 0;\n    path.scale = [1, 1];\n    path.updateTransform();\n\n    if (path) {\n      path.brush(ctx);\n    }\n\n    var ImageShape = Image;\n    var imgShape = new ImageShape({\n      style: {\n        x: 0,\n        y: 0,\n        image: canvas\n      }\n    });\n\n    if (pathTransform.position != null) {\n      imgShape.position = path.position = pathTransform.position;\n    }\n\n    if (pathTransform.rotation != null) {\n      imgShape.rotation = path.rotation = pathTransform.rotation;\n    }\n\n    if (pathTransform.scale != null) {\n      imgShape.scale = path.scale = pathTransform.scale;\n    }\n\n    return imgShape;\n  }\n};\nvar _default = Painter;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1097:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar util = __webpack_require__(978);\n\nvar _config = __webpack_require__(1010);\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar Style = __webpack_require__(1046);\n\nvar Pattern = __webpack_require__(1047);\n\n/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\nfunction returnFalse() {\n  return false;\n}\n/**\n * 创建dom\n *\n * @inner\n * @param {string} id dom id 待用\n * @param {Painter} painter painter instance\n * @param {number} number\n */\n\n\nfunction createDom(id, painter, dpr) {\n  var newDom = util.createCanvas();\n  var width = painter.getWidth();\n  var height = painter.getHeight();\n  var newDomStyle = newDom.style; // 没append呢，请原谅我这样写，清晰~\n\n  newDomStyle.position = 'absolute';\n  newDomStyle.left = 0;\n  newDomStyle.top = 0;\n  newDomStyle.width = width + 'px';\n  newDomStyle.height = height + 'px';\n  newDom.width = width * dpr;\n  newDom.height = height * dpr; // id不作为索引用，避免可能造成的重名，定义为私有属性\n\n  newDom.setAttribute('data-zr-dom-id', id);\n  return newDom;\n}\n/**\n * @alias module:zrender/Layer\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @param {string} id\n * @param {module:zrender/Painter} painter\n * @param {number} [dpr]\n */\n\n\nvar Layer = function (id, painter, dpr) {\n  var dom;\n  dpr = dpr || devicePixelRatio;\n\n  if (typeof id === 'string') {\n    dom = createDom(id, painter, dpr);\n  } // Not using isDom because in node it will return false\n  else if (util.isObject(id)) {\n      dom = id;\n      id = dom.id;\n    }\n\n  this.id = id;\n  this.dom = dom;\n  var domStyle = dom.style;\n\n  if (domStyle) {\n    // Not in node\n    dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n    domStyle['-webkit-user-select'] = 'none';\n    domStyle['user-select'] = 'none';\n    domStyle['-webkit-touch-callout'] = 'none';\n    domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n    domStyle['padding'] = 0;\n    domStyle['margin'] = 0;\n    domStyle['border-width'] = 0;\n  }\n\n  this.domBack = null;\n  this.ctxBack = null;\n  this.painter = painter;\n  this.config = null; // Configs\n\n  /**\n   * 每次清空画布的颜色\n   * @type {string}\n   * @default 0\n   */\n\n  this.clearColor = 0;\n  /**\n   * 是否开启动态模糊\n   * @type {boolean}\n   * @default false\n   */\n\n  this.motionBlur = false;\n  /**\n   * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   * @type {number}\n   * @default 0.7\n   */\n\n  this.lastFrameAlpha = 0.7;\n  /**\n   * Layer dpr\n   * @type {number}\n   */\n\n  this.dpr = dpr;\n};\n\nLayer.prototype = {\n  constructor: Layer,\n  elCount: 0,\n  __dirty: true,\n  initContext: function () {\n    this.ctx = this.dom.getContext('2d');\n    this.ctx.__currentValues = {};\n    this.ctx.dpr = this.dpr;\n  },\n  createBackBuffer: function () {\n    var dpr = this.dpr;\n    this.domBack = createDom('back-' + this.id, this.painter, dpr);\n    this.ctxBack = this.domBack.getContext('2d');\n    this.ctxBack.__currentValues = {};\n\n    if (dpr != 1) {\n      this.ctxBack.scale(dpr, dpr);\n    }\n  },\n\n  /**\n   * @param  {number} width\n   * @param  {number} height\n   */\n  resize: function (width, height) {\n    var dpr = this.dpr;\n    var dom = this.dom;\n    var domStyle = dom.style;\n    var domBack = this.domBack;\n    domStyle.width = width + 'px';\n    domStyle.height = height + 'px';\n    dom.width = width * dpr;\n    dom.height = height * dpr;\n\n    if (domBack) {\n      domBack.width = width * dpr;\n      domBack.height = height * dpr;\n\n      if (dpr != 1) {\n        this.ctxBack.scale(dpr, dpr);\n      }\n    }\n  },\n\n  /**\n   * 清空该层画布\n   * @param {boolean} clearAll Clear all with out motion blur\n   */\n  clear: function (clearAll) {\n    var dom = this.dom;\n    var ctx = this.ctx;\n    var width = dom.width;\n    var height = dom.height;\n    var clearColor = this.clearColor;\n    var haveMotionBLur = this.motionBlur && !clearAll;\n    var lastFrameAlpha = this.lastFrameAlpha;\n    var dpr = this.dpr;\n\n    if (haveMotionBLur) {\n      if (!this.domBack) {\n        this.createBackBuffer();\n      }\n\n      this.ctxBack.globalCompositeOperation = 'copy';\n      this.ctxBack.drawImage(dom, 0, 0, width / dpr, height / dpr);\n    }\n\n    ctx.clearRect(0, 0, width, height);\n\n    if (clearColor) {\n      var clearColorGradientOrPattern; // Gradient\n\n      if (clearColor.colorStops) {\n        // Cache canvas gradient\n        clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n          x: 0,\n          y: 0,\n          width: width,\n          height: height\n        });\n        clearColor.__canvasGradient = clearColorGradientOrPattern;\n      } // Pattern\n      else if (clearColor.image) {\n          clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n        }\n\n      ctx.save();\n      ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    if (haveMotionBLur) {\n      var domBack = this.domBack;\n      ctx.save();\n      ctx.globalAlpha = lastFrameAlpha;\n      ctx.drawImage(domBack, 0, 0, width, height);\n      ctx.restore();\n    }\n  }\n};\nvar _default = Layer;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1098:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar util = __webpack_require__(978);\n\nvar _event = __webpack_require__(998);\n\nvar Dispatcher = _event.Dispatcher;\n\nvar requestAnimationFrame = __webpack_require__(1048);\n\nvar Animator = __webpack_require__(1044);\n\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n/**\n * @typedef {Object} IZRenderStage\n * @property {Function} update\n */\n\n/**\n * @alias module:zrender/animation/Animation\n * @constructor\n * @param {Object} [options]\n * @param {Function} [options.onframe]\n * @param {IZRenderStage} [options.stage]\n * @example\n *     var animation = new Animation();\n *     var obj = {\n *         x: 100,\n *         y: 100\n *     };\n *     animation.animate(node.position)\n *         .when(1000, {\n *             x: 500,\n *             y: 500\n *         })\n *         .when(2000, {\n *             x: 100,\n *             y: 100\n *         })\n *         .start('spline');\n */\nvar Animation = function (options) {\n  options = options || {};\n  this.stage = options.stage || {};\n\n  this.onframe = options.onframe || function () {}; // private properties\n\n\n  this._clips = [];\n  this._running = false;\n  this._time;\n  this._pausedTime;\n  this._pauseStart;\n  this._paused = false;\n  Dispatcher.call(this);\n};\n\nAnimation.prototype = {\n  constructor: Animation,\n\n  /**\n   * 添加 clip\n   * @param {module:zrender/animation/Clip} clip\n   */\n  addClip: function (clip) {\n    this._clips.push(clip);\n  },\n\n  /**\n   * 添加 animator\n   * @param {module:zrender/animation/Animator} animator\n   */\n  addAnimator: function (animator) {\n    animator.animation = this;\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.addClip(clips[i]);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Clip} clip\n   */\n  removeClip: function (clip) {\n    var idx = util.indexOf(this._clips, clip);\n\n    if (idx >= 0) {\n      this._clips.splice(idx, 1);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Animator} animator\n   */\n  removeAnimator: function (animator) {\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.removeClip(clips[i]);\n    }\n\n    animator.animation = null;\n  },\n  _update: function () {\n    var time = new Date().getTime() - this._pausedTime;\n\n    var delta = time - this._time;\n    var clips = this._clips;\n    var len = clips.length;\n    var deferredEvents = [];\n    var deferredClips = [];\n\n    for (var i = 0; i < len; i++) {\n      var clip = clips[i];\n      var e = clip.step(time, delta); // Throw out the events need to be called after\n      // stage.update, like destroy\n\n      if (e) {\n        deferredEvents.push(e);\n        deferredClips.push(clip);\n      }\n    } // Remove the finished clip\n\n\n    for (var i = 0; i < len;) {\n      if (clips[i]._needsRemove) {\n        clips[i] = clips[len - 1];\n        clips.pop();\n        len--;\n      } else {\n        i++;\n      }\n    }\n\n    len = deferredEvents.length;\n\n    for (var i = 0; i < len; i++) {\n      deferredClips[i].fire(deferredEvents[i]);\n    }\n\n    this._time = time;\n    this.onframe(delta);\n    this.trigger('frame', delta);\n\n    if (this.stage.update) {\n      this.stage.update();\n    }\n  },\n  _startLoop: function () {\n    var self = this;\n    this._running = true;\n\n    function step() {\n      if (self._running) {\n        requestAnimationFrame(step);\n        !self._paused && self._update();\n      }\n    }\n\n    requestAnimationFrame(step);\n  },\n\n  /**\n   * 开始运行动画\n   */\n  start: function () {\n    this._time = new Date().getTime();\n    this._pausedTime = 0;\n\n    this._startLoop();\n  },\n\n  /**\n   * 停止运行动画\n   */\n  stop: function () {\n    this._running = false;\n  },\n\n  /**\n   * Pause\n   */\n  pause: function () {\n    if (!this._paused) {\n      this._pauseStart = new Date().getTime();\n      this._paused = true;\n    }\n  },\n\n  /**\n   * Resume\n   */\n  resume: function () {\n    if (this._paused) {\n      this._pausedTime += new Date().getTime() - this._pauseStart;\n      this._paused = false;\n    }\n  },\n\n  /**\n   * 清除所有动画片段\n   */\n  clear: function () {\n    this._clips = [];\n  },\n\n  /**\n   * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n   * @param  {Object} target\n   * @param  {Object} options\n   * @param  {boolean} [options.loop=false] 是否循环播放动画\n   * @param  {Function} [options.getter=null]\n   *         如果指定getter函数，会通过getter函数取属性值\n   * @param  {Function} [options.setter=null]\n   *         如果指定setter函数，会通过setter函数设置属性值\n   * @return {module:zrender/animation/Animation~Animator}\n   */\n  // TODO Gap\n  animate: function (target, options) {\n    options = options || {};\n    var animator = new Animator(target, options.loop, options.getter, options.setter);\n    this.addAnimator(animator);\n    return animator;\n  }\n};\nutil.mixin(Animation, Dispatcher);\nvar _default = Animation;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1099:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _event = __webpack_require__(998);\n\nvar addEventListener = _event.addEventListener;\nvar removeEventListener = _event.removeEventListener;\nvar normalizeEvent = _event.normalizeEvent;\n\nvar zrUtil = __webpack_require__(978);\n\nvar Eventful = __webpack_require__(1001);\n\nvar env = __webpack_require__(986);\n\nvar GestureMgr = __webpack_require__(1100);\n\nvar TOUCH_CLICK_DELAY = 300;\nvar mouseHandlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\nvar touchHandlerNames = ['touchstart', 'touchend', 'touchmove'];\nvar pointerEventNames = {\n  pointerdown: 1,\n  pointerup: 1,\n  pointermove: 1,\n  pointerout: 1\n};\nvar pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n  var nm = name.replace('mouse', 'pointer');\n  return pointerEventNames[nm] ? nm : name;\n});\n\nfunction eventNameFix(name) {\n  return name === 'mousewheel' && env.browser.firefox ? 'DOMMouseScroll' : name;\n}\n\nfunction processGesture(proxy, event, stage) {\n  var gestureMgr = proxy._gestureMgr;\n  stage === 'start' && gestureMgr.clear();\n  var gestureInfo = gestureMgr.recognize(event, proxy.handler.findHover(event.zrX, event.zrY, null).target, proxy.dom);\n  stage === 'end' && gestureMgr.clear(); // Do not do any preventDefault here. Upper application do that if necessary.\n\n  if (gestureInfo) {\n    var type = gestureInfo.type;\n    event.gestureEvent = type;\n    proxy.handler.dispatchToElement({\n      target: gestureInfo.target\n    }, type, gestureInfo.event);\n  }\n} // function onMSGestureChange(proxy, event) {\n//     if (event.translationX || event.translationY) {\n//         // mousemove is carried by MSGesture to reduce the sensitivity.\n//         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n//     }\n//     if (event.scale !== 1) {\n//         event.pinchX = event.offsetX;\n//         event.pinchY = event.offsetY;\n//         event.pinchScale = event.scale;\n//         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n//     }\n// }\n\n/**\n * Prevent mouse event from being dispatched after Touch Events action\n * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n * Result: Blocking Mouse Events for 700ms.\n */\n\n\nfunction setTouchTimer(instance) {\n  instance._touching = true;\n  clearTimeout(instance._touchTimer);\n  instance._touchTimer = setTimeout(function () {\n    instance._touching = false;\n  }, 700);\n}\n\nvar domHandlers = {\n  /**\n   * Mouse move handler\n   * @inner\n   * @param {Event} event\n   */\n  mousemove: function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger('mousemove', event);\n  },\n\n  /**\n   * Mouse out handler\n   * @inner\n   * @param {Event} event\n   */\n  mouseout: function (event) {\n    event = normalizeEvent(this.dom, event);\n    var element = event.toElement || event.relatedTarget;\n\n    if (element != this.dom) {\n      while (element && element.nodeType != 9) {\n        // 忽略包含在root中的dom引起的mouseOut\n        if (element === this.dom) {\n          return;\n        }\n\n        element = element.parentNode;\n      }\n    }\n\n    this.trigger('mouseout', event);\n  },\n\n  /**\n   * Touch开始响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchstart: function (event) {\n    // Default mouse behaviour should not be disabled here.\n    // For example, page may needs to be slided.\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    this._lastTouchMoment = new Date();\n    processGesture(this, event, 'start'); // In touch device, trigger `mousemove`(`mouseover`) should\n    // be triggered, and must before `mousedown` triggered.\n\n    domHandlers.mousemove.call(this, event);\n    domHandlers.mousedown.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch移动响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchmove: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'change'); // Mouse move should always be triggered no matter whether\n    // there is gestrue event, because mouse move and pinch may\n    // be used at the same time.\n\n    domHandlers.mousemove.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch结束响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchend: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'end');\n    domHandlers.mouseup.call(this, event); // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n    // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n    // we can conveniently implement \"hover style\" in both PC and touch device just\n    // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n    // to remove \"hover style\" on an element, without any additional code for\n    // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n    // style\" will remain for user view)\n    // click event should always be triggered no matter whether\n    // there is gestrue event. System click can not be prevented.\n\n    if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n      domHandlers.click.call(this, event);\n    }\n\n    setTouchTimer(this);\n  },\n  pointerdown: function (event) {\n    domHandlers.mousedown.call(this, event); // if (useMSGuesture(this, event)) {\n    //     this._msGesture.addPointer(event.pointerId);\n    // }\n  },\n  pointermove: function (event) {\n    // FIXME\n    // pointermove is so sensitive that it always triggered when\n    // tap(click) on touch screen, which affect some judgement in\n    // upper application. So, we dont support mousemove on MS touch\n    // device yet.\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mousemove.call(this, event);\n    }\n  },\n  pointerup: function (event) {\n    domHandlers.mouseup.call(this, event);\n  },\n  pointerout: function (event) {\n    // pointerout will be triggered when tap on touch screen\n    // (IE11+/Edge on MS Surface) after click event triggered,\n    // which is inconsistent with the mousout behavior we defined\n    // in touchend. So we unify them.\n    // (check domHandlers.touchend for detailed explanation)\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mouseout.call(this, event);\n    }\n  }\n};\n\nfunction isPointerFromTouch(event) {\n  var pointerType = event.pointerType;\n  return pointerType === 'pen' || pointerType === 'touch';\n} // function useMSGuesture(handlerProxy, event) {\n//     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n// }\n// Common handlers\n\n\nzrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  domHandlers[name] = function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger(name, event);\n  };\n});\n/**\n * 为控制类实例初始化dom 事件处理函数\n *\n * @inner\n * @param {module:zrender/Handler} instance 控制类实例\n */\n\nfunction initDomHandler(instance) {\n  zrUtil.each(touchHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(pointerHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(mouseHandlerNames, function (name) {\n    instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n  });\n\n  function makeMouseHandler(fn, instance) {\n    return function () {\n      if (instance._touching) {\n        return;\n      }\n\n      return fn.apply(instance, arguments);\n    };\n  }\n}\n\nfunction HandlerDomProxy(dom) {\n  Eventful.call(this);\n  this.dom = dom;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._touching = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._touchTimer;\n  /**\n   * @private\n   * @type {module:zrender/core/GestureMgr}\n   */\n\n  this._gestureMgr = new GestureMgr();\n  this._handlers = {};\n  initDomHandler(this);\n\n  if (env.pointerEventsSupported) {\n    // Only IE11+/Edge\n    // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n    // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n    // at the same time.\n    // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n    // screen, which do not occurs in pointer event.\n    // So we use pointer event to both detect touch gesture and mouse behavior.\n    mountHandlers(pointerHandlerNames, this); // FIXME\n    // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n    // which does not prevent defuault behavior occasionally (which may cause view port\n    // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n    // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n    // touch screen. And we only support click behavior on MS touch screen now.\n    // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n    // We dont support touch on IE on win7.\n    // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n    // if (typeof MSGesture === 'function') {\n    //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n    //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n    // }\n  } else {\n    if (env.touchEventsSupported) {\n      mountHandlers(touchHandlerNames, this); // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n      // addEventListener(root, 'mouseout', this._mouseoutHandler);\n    } // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n    // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n    // mouse event can not be handle in those devices.\n    // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n    // mouseevent after touch event triggered, see `setTouchTimer`.\n\n\n    mountHandlers(mouseHandlerNames, this);\n  }\n\n  function mountHandlers(handlerNames, instance) {\n    zrUtil.each(handlerNames, function (name) {\n      addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n    }, instance);\n  }\n}\n\nvar handlerDomProxyProto = HandlerDomProxy.prototype;\n\nhandlerDomProxyProto.dispose = function () {\n  var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n  for (var i = 0; i < handlerNames.length; i++) {\n    var name = handlerNames[i];\n    removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n  }\n};\n\nhandlerDomProxyProto.setCursor = function (cursorStyle) {\n  this.dom.style.cursor = cursorStyle || 'default';\n};\n\nzrUtil.mixin(HandlerDomProxy, Eventful);\nvar _default = HandlerDomProxy;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1100:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar eventUtil = __webpack_require__(998);\n\n/**\n * Only implements needed gestures for mobile.\n */\nvar GestureMgr = function () {\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n  this._track = [];\n};\n\nGestureMgr.prototype = {\n  constructor: GestureMgr,\n  recognize: function (event, target, root) {\n    this._doTrack(event, target, root);\n\n    return this._recognize(event);\n  },\n  clear: function () {\n    this._track.length = 0;\n    return this;\n  },\n  _doTrack: function (event, target, root) {\n    var touches = event.touches;\n\n    if (!touches) {\n      return;\n    }\n\n    var trackItem = {\n      points: [],\n      touches: [],\n      target: target,\n      event: event\n    };\n\n    for (var i = 0, len = touches.length; i < len; i++) {\n      var touch = touches[i];\n      var pos = eventUtil.clientToLocal(root, touch, {});\n      trackItem.points.push([pos.zrX, pos.zrY]);\n      trackItem.touches.push(touch);\n    }\n\n    this._track.push(trackItem);\n  },\n  _recognize: function (event) {\n    for (var eventName in recognizers) {\n      if (recognizers.hasOwnProperty(eventName)) {\n        var gestureInfo = recognizers[eventName](this._track, event);\n\n        if (gestureInfo) {\n          return gestureInfo;\n        }\n      }\n    }\n  }\n};\n\nfunction dist(pointPair) {\n  var dx = pointPair[1][0] - pointPair[0][0];\n  var dy = pointPair[1][1] - pointPair[0][1];\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\nfunction center(pointPair) {\n  return [(pointPair[0][0] + pointPair[1][0]) / 2, (pointPair[0][1] + pointPair[1][1]) / 2];\n}\n\nvar recognizers = {\n  pinch: function (track, event) {\n    var trackLen = track.length;\n\n    if (!trackLen) {\n      return;\n    }\n\n    var pinchEnd = (track[trackLen - 1] || {}).points;\n    var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n    if (pinchPre && pinchPre.length > 1 && pinchEnd && pinchEnd.length > 1) {\n      var pinchScale = dist(pinchEnd) / dist(pinchPre);\n      !isFinite(pinchScale) && (pinchScale = 1);\n      event.pinchScale = pinchScale;\n      var pinchCenter = center(pinchEnd);\n      event.pinchX = pinchCenter[0];\n      event.pinchY = pinchCenter[1];\n      return {\n        type: 'pinch',\n        target: track[0].target,\n        event: event\n      };\n    }\n  } // Only pinch currently.\n\n};\nvar _default = GestureMgr;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1101:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(983);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(978);\n\nvar modelUtil = __webpack_require__(982);\n\nvar Model = __webpack_require__(989);\n\nvar ComponentModel = __webpack_require__(991);\n\nvar globalDefault = __webpack_require__(1125);\n\nvar colorPaletteMinin = __webpack_require__(1053);\n\n/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n/**\n * Caution: If the mechanism should be changed some day, these cases\n * should be considered:\n *\n * (1) In `merge option` mode, if using the same option to call `setOption`\n * many times, the result should be the same (try our best to ensure that).\n * (2) In `merge option` mode, if a component has no id/name specified, it\n * will be merged by index, and the result sequence of the components is\n * consistent to the original sequence.\n * (3) `reset` feature (in toolbox). Find detailed info in comments about\n * `mergeOption` in module:echarts/model/OptionManager.\n */\nvar each = zrUtil.each;\nvar filter = zrUtil.filter;\nvar map = zrUtil.map;\nvar isArray = zrUtil.isArray;\nvar indexOf = zrUtil.indexOf;\nvar isObject = zrUtil.isObject;\nvar OPTION_INNER_KEY = '\\0_ec_inner';\n/**\n * @alias module:echarts/model/Global\n *\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {Object} theme\n */\n\nvar GlobalModel = Model.extend({\n  constructor: GlobalModel,\n  init: function (option, parentModel, theme, optionManager) {\n    theme = theme || {};\n    this.option = null; // Mark as not initialized.\n\n    /**\n     * @type {module:echarts/model/Model}\n     * @private\n     */\n\n    this._theme = new Model(theme);\n    /**\n     * @type {module:echarts/model/OptionManager}\n     */\n\n    this._optionManager = optionManager;\n  },\n  setOption: function (option, optionPreprocessorFuncs) {\n    zrUtil.assert(!(OPTION_INNER_KEY in option), 'please use chart.getOption()');\n\n    this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n    this.resetOption(null);\n  },\n\n  /**\n   * @param {string} type null/undefined: reset all.\n   *                      'recreate': force recreate all.\n   *                      'timeline': only reset timeline option\n   *                      'media': only reset media query option\n   * @return {boolean} Whether option changed.\n   */\n  resetOption: function (type) {\n    var optionChanged = false;\n    var optionManager = this._optionManager;\n\n    if (!type || type === 'recreate') {\n      var baseOption = optionManager.mountOption(type === 'recreate');\n\n      if (!this.option || type === 'recreate') {\n        initBase.call(this, baseOption);\n      } else {\n        this.restoreData();\n        this.mergeOption(baseOption);\n      }\n\n      optionChanged = true;\n    }\n\n    if (type === 'timeline' || type === 'media') {\n      this.restoreData();\n    }\n\n    if (!type || type === 'recreate' || type === 'timeline') {\n      var timelineOption = optionManager.getTimelineOption(this);\n      timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n    }\n\n    if (!type || type === 'recreate' || type === 'media') {\n      var mediaOptions = optionManager.getMediaOption(this, this._api);\n\n      if (mediaOptions.length) {\n        each(mediaOptions, function (mediaOption) {\n          this.mergeOption(mediaOption, optionChanged = true);\n        }, this);\n      }\n    }\n\n    return optionChanged;\n  },\n\n  /**\n   * @protected\n   */\n  mergeOption: function (newOption) {\n    var option = this.option;\n    var componentsMap = this._componentsMap;\n    var newCptTypes = []; // 如果不存在对应的 component model 则直接 merge\n\n    each(newOption, function (componentOption, mainType) {\n      if (componentOption == null) {\n        return;\n      }\n\n      if (!ComponentModel.hasClass(mainType)) {\n        option[mainType] = option[mainType] == null ? zrUtil.clone(componentOption) : zrUtil.merge(option[mainType], componentOption, true);\n      } else {\n        newCptTypes.push(mainType);\n      }\n    }); // FIXME OPTION 同步是否要改回原来的\n\n    ComponentModel.topologicalTravel(newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this);\n    this._seriesIndices = this._seriesIndices || [];\n\n    function visitComponent(mainType, dependencies) {\n      var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n      var mapResult = modelUtil.mappingToExists(componentsMap.get(mainType), newCptOptionList);\n      modelUtil.makeIdAndName(mapResult); // Set mainType and complete subType.\n\n      each(mapResult, function (item, index) {\n        var opt = item.option;\n\n        if (isObject(opt)) {\n          item.keyInfo.mainType = mainType;\n          item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n        }\n      });\n      var dependentModels = getComponentsByTypes(componentsMap, dependencies);\n      option[mainType] = [];\n      componentsMap.set(mainType, []);\n      each(mapResult, function (resultItem, index) {\n        var componentModel = resultItem.exist;\n        var newCptOption = resultItem.option;\n        zrUtil.assert(isObject(newCptOption) || componentModel, 'Empty component definition'); // Consider where is no new option and should be merged using {},\n        // see removeEdgeAndAdd in topologicalTravel and\n        // ComponentModel.getAllClassMainTypes.\n\n        if (!newCptOption) {\n          componentModel.mergeOption({}, this);\n          componentModel.optionUpdated({}, false);\n        } else {\n          var ComponentModelClass = ComponentModel.getClass(mainType, resultItem.keyInfo.subType, true);\n\n          if (componentModel && componentModel instanceof ComponentModelClass) {\n            componentModel.name = resultItem.keyInfo.name;\n            componentModel.mergeOption(newCptOption, this);\n            componentModel.optionUpdated(newCptOption, false);\n          } else {\n            // PENDING Global as parent ?\n            var extraOpt = zrUtil.extend({\n              dependentModels: dependentModels,\n              componentIndex: index\n            }, resultItem.keyInfo);\n            componentModel = new ComponentModelClass(newCptOption, this, this, extraOpt);\n            zrUtil.extend(componentModel, extraOpt);\n            componentModel.init(newCptOption, this, this, extraOpt); // Call optionUpdated after init.\n            // newCptOption has been used as componentModel.option\n            // and may be merged with theme and default, so pass null\n            // to avoid confusion.\n\n            componentModel.optionUpdated(null, true);\n          }\n        }\n\n        componentsMap.get(mainType)[index] = componentModel;\n        option[mainType][index] = componentModel.option;\n      }, this); // Backup series for filtering.\n\n      if (mainType === 'series') {\n        this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n      }\n    }\n  },\n\n  /**\n   * Get option for output (cloned option and inner info removed)\n   * @public\n   * @return {Object}\n   */\n  getOption: function () {\n    var option = zrUtil.clone(this.option);\n    each(option, function (opts, mainType) {\n      if (ComponentModel.hasClass(mainType)) {\n        var opts = modelUtil.normalizeToArray(opts);\n\n        for (var i = opts.length - 1; i >= 0; i--) {\n          // Remove options with inner id.\n          if (modelUtil.isIdInner(opts[i])) {\n            opts.splice(i, 1);\n          }\n        }\n\n        option[mainType] = opts;\n      }\n    });\n    delete option[OPTION_INNER_KEY];\n    return option;\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getTheme: function () {\n    return this._theme;\n  },\n\n  /**\n   * @param {string} mainType\n   * @param {number} [idx=0]\n   * @return {module:echarts/model/Component}\n   */\n  getComponent: function (mainType, idx) {\n    var list = this._componentsMap.get(mainType);\n\n    if (list) {\n      return list[idx || 0];\n    }\n  },\n\n  /**\n   * If none of index and id and name used, return all components with mainType.\n   * @param {Object} condition\n   * @param {string} condition.mainType\n   * @param {string} [condition.subType] If ignore, only query by mainType\n   * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  queryComponents: function (condition) {\n    var mainType = condition.mainType;\n\n    if (!mainType) {\n      return [];\n    }\n\n    var index = condition.index;\n    var id = condition.id;\n    var name = condition.name;\n\n    var cpts = this._componentsMap.get(mainType);\n\n    if (!cpts || !cpts.length) {\n      return [];\n    }\n\n    var result;\n\n    if (index != null) {\n      if (!isArray(index)) {\n        index = [index];\n      }\n\n      result = filter(map(index, function (idx) {\n        return cpts[idx];\n      }), function (val) {\n        return !!val;\n      });\n    } else if (id != null) {\n      var isIdArray = isArray(id);\n      result = filter(cpts, function (cpt) {\n        return isIdArray && indexOf(id, cpt.id) >= 0 || !isIdArray && cpt.id === id;\n      });\n    } else if (name != null) {\n      var isNameArray = isArray(name);\n      result = filter(cpts, function (cpt) {\n        return isNameArray && indexOf(name, cpt.name) >= 0 || !isNameArray && cpt.name === name;\n      });\n    } else {\n      // Return all components with mainType\n      result = cpts.slice();\n    }\n\n    return filterBySubType(result, condition);\n  },\n\n  /**\n   * The interface is different from queryComponents,\n   * which is convenient for inner usage.\n   *\n   * @usage\n   * var result = findComponents(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series'},\n   *     function (model, index) {...}\n   * );\n   * // result like [component0, componnet1, ...]\n   *\n   * @param {Object} condition\n   * @param {string} condition.mainType Mandatory.\n   * @param {string} [condition.subType] Optional.\n   * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n   *        where xxx is mainType.\n   *        If query attribute is null/undefined or has no index/id/name,\n   *        do not filtering by query conditions, which is convenient for\n   *        no-payload situations or when target of action is global.\n   * @param {Function} [condition.filter] parameter: component, return boolean.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  findComponents: function (condition) {\n    var query = condition.query;\n    var mainType = condition.mainType;\n    var queryCond = getQueryCond(query);\n    var result = queryCond ? this.queryComponents(queryCond) : this._componentsMap.get(mainType);\n    return doFilter(filterBySubType(result, condition));\n\n    function getQueryCond(q) {\n      var indexAttr = mainType + 'Index';\n      var idAttr = mainType + 'Id';\n      var nameAttr = mainType + 'Name';\n      return q && (q[indexAttr] != null || q[idAttr] != null || q[nameAttr] != null) ? {\n        mainType: mainType,\n        // subType will be filtered finally.\n        index: q[indexAttr],\n        id: q[idAttr],\n        name: q[nameAttr]\n      } : null;\n    }\n\n    function doFilter(res) {\n      return condition.filter ? filter(res, condition.filter) : res;\n    }\n  },\n\n  /**\n   * @usage\n   * eachComponent('legend', function (legendModel, index) {\n   *     ...\n   * });\n   * eachComponent(function (componentType, model, index) {\n   *     // componentType does not include subType\n   *     // (componentType is 'xxx' but not 'xxx.aa')\n   * });\n   * eachComponent(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n   *     function (model, index) {...}\n   * );\n   * eachComponent(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n   *     function (model, index) {...}\n   * );\n   *\n   * @param {string|Object=} mainType When mainType is object, the definition\n   *                                  is the same as the method 'findComponents'.\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachComponent: function (mainType, cb, context) {\n    var componentsMap = this._componentsMap;\n\n    if (typeof mainType === 'function') {\n      context = cb;\n      cb = mainType;\n      componentsMap.each(function (components, componentType) {\n        each(components, function (component, index) {\n          cb.call(context, componentType, component, index);\n        });\n      });\n    } else if (zrUtil.isString(mainType)) {\n      each(componentsMap.get(mainType), cb, context);\n    } else if (isObject(mainType)) {\n      var queryResult = this.findComponents(mainType);\n      each(queryResult, cb, context);\n    }\n  },\n\n  /**\n   * @param {string} name\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByName: function (name) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.name === name;\n    });\n  },\n\n  /**\n   * @param {number} seriesIndex\n   * @return {module:echarts/model/Series}\n   */\n  getSeriesByIndex: function (seriesIndex) {\n    return this._componentsMap.get('series')[seriesIndex];\n  },\n\n  /**\n   * @param {string} subType\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByType: function (subType) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.subType === subType;\n    });\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeries: function () {\n    return this._componentsMap.get('series').slice();\n  },\n\n  /**\n   * After filtering, series may be different\n   * frome raw series.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      cb.call(context, series, rawSeriesIndex);\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeries: function (cb, context) {\n    each(this._componentsMap.get('series'), cb, context);\n  },\n\n  /**\n   * After filtering, series may be different.\n   * frome raw series.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeriesByType: function (subType, cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      if (series.subType === subType) {\n        cb.call(context, series, rawSeriesIndex);\n      }\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered of given type.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeriesByType: function (subType, cb, context) {\n    return each(this.getSeriesByType(subType), cb, context);\n  },\n\n  /**\n   * @param {module:echarts/model/Series} seriesModel\n   */\n  isSeriesFiltered: function (seriesModel) {\n    assertSeriesInitialized(this);\n    return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getCurrentSeriesIndices: function () {\n    return (this._seriesIndices || []).slice();\n  },\n\n  /**\n   * @param {Function} cb\n   * @param {*} context\n   */\n  filterSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    var filteredSeries = filter(this._componentsMap.get('series'), cb, context);\n    this._seriesIndices = createSeriesIndices(filteredSeries);\n  },\n  restoreData: function () {\n    var componentsMap = this._componentsMap;\n    this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n    var componentTypes = [];\n    componentsMap.each(function (components, componentType) {\n      componentTypes.push(componentType);\n    });\n    ComponentModel.topologicalTravel(componentTypes, ComponentModel.getAllClassMainTypes(), function (componentType, dependencies) {\n      each(componentsMap.get(componentType), function (component) {\n        component.restoreData();\n      });\n    });\n  }\n});\n/**\n * @inner\n */\n\nfunction mergeTheme(option, theme) {\n  zrUtil.each(theme, function (themeItem, name) {\n    // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n    if (!ComponentModel.hasClass(name)) {\n      if (typeof themeItem === 'object') {\n        option[name] = !option[name] ? zrUtil.clone(themeItem) : zrUtil.merge(option[name], themeItem, false);\n      } else {\n        if (option[name] == null) {\n          option[name] = themeItem;\n        }\n      }\n    }\n  });\n}\n\nfunction initBase(baseOption) {\n  baseOption = baseOption; // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n  // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n\n  this.option = {};\n  this.option[OPTION_INNER_KEY] = 1;\n  /**\n   * Init with series: [], in case of calling findSeries method\n   * before series initialized.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @private\n   */\n\n  this._componentsMap = zrUtil.createHashMap({\n    series: []\n  });\n  /**\n   * Mapping between filtered series list and raw series list.\n   * key: filtered series indices, value: raw series indices.\n   * @type {Array.<nubmer>}\n   * @private\n   */\n\n  this._seriesIndices = null;\n  mergeTheme(baseOption, this._theme.option); // TODO Needs clone when merging to the unexisted property\n\n  zrUtil.merge(baseOption, globalDefault, false);\n  this.mergeOption(baseOption);\n}\n/**\n * @inner\n * @param {Array.<string>|string} types model types\n * @return {Object} key: {string} type, value: {Array.<Object>} models\n */\n\n\nfunction getComponentsByTypes(componentsMap, types) {\n  if (!zrUtil.isArray(types)) {\n    types = types ? [types] : [];\n  }\n\n  var ret = {};\n  each(types, function (type) {\n    ret[type] = (componentsMap.get(type) || []).slice();\n  });\n  return ret;\n}\n/**\n * @inner\n */\n\n\nfunction determineSubType(mainType, newCptOption, existComponent) {\n  var subType = newCptOption.type ? newCptOption.type : existComponent ? existComponent.subType // Use determineSubType only when there is no existComponent.\n  : ComponentModel.determineSubType(mainType, newCptOption); // tooltip, markline, markpoint may always has no subType\n\n  return subType;\n}\n/**\n * @inner\n */\n\n\nfunction createSeriesIndices(seriesModels) {\n  return map(seriesModels, function (series) {\n    return series.componentIndex;\n  }) || [];\n}\n/**\n * @inner\n */\n\n\nfunction filterBySubType(components, condition) {\n  // Using hasOwnProperty for restrict. Consider\n  // subType is undefined in user payload.\n  return condition.hasOwnProperty('subType') ? filter(components, function (cpt) {\n    return cpt.subType === condition.subType;\n  }) : components;\n}\n/**\n * @inner\n */\n\n\nfunction assertSeriesInitialized(ecModel) {}\n\nzrUtil.mixin(GlobalModel, colorPaletteMinin);\nvar _default = GlobalModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1102:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar makeStyleMapper = __webpack_require__(1011);\n\nvar getLineStyle = makeStyleMapper([['lineWidth', 'width'], ['stroke', 'color'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\nvar _default = {\n  getLineStyle: function (excludes) {\n    var style = getLineStyle(this, excludes);\n    var lineDash = this.getLineDash(style.lineWidth);\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getLineDash: function (lineWidth) {\n    if (lineWidth == null) {\n      lineWidth = 1;\n    }\n\n    var lineType = this.get('type');\n    var dotSize = Math.max(lineWidth, 2);\n    var dashSize = lineWidth * 4;\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize];\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1103:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar makeStyleMapper = __webpack_require__(1011);\n\nvar getAreaStyle = makeStyleMapper([['fill', 'color'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['opacity'], ['shadowColor']]);\nvar _default = {\n  getAreaStyle: function (excludes, includes) {\n    return getAreaStyle(this, excludes, includes);\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1104:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar textContain = __webpack_require__(993);\n\nvar graphicUtil = __webpack_require__(980);\n\nvar PATH_COLOR = ['textStyle', 'color'];\nvar _default = {\n  /**\n   * Get color property or get color from option.textStyle.color\n   * @param {boolean} [isEmphasis]\n   * @return {string}\n   */\n  getTextColor: function (isEmphasis) {\n    var ecModel = this.ecModel;\n    return this.getShallow('color') || (!isEmphasis && ecModel ? ecModel.get(PATH_COLOR) : null);\n  },\n\n  /**\n   * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n   * @return {string}\n   */\n  getFont: function () {\n    return graphicUtil.getFont({\n      fontStyle: this.getShallow('fontStyle'),\n      fontWeight: this.getShallow('fontWeight'),\n      fontSize: this.getShallow('fontSize'),\n      fontFamily: this.getShallow('fontFamily')\n    }, this.ecModel);\n  },\n  getTextRect: function (text) {\n    return textContain.getBoundingRect(text, this.getFont(), this.getShallow('align'), this.getShallow('verticalAlign') || this.getShallow('baseline'), this.getShallow('padding'), this.getShallow('rich'), this.getShallow('truncateText'));\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1105:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(988);\n\nvar PathProxy = __webpack_require__(1007);\n\nvar transformPath = __webpack_require__(1109);\n\n// command chars\nvar cc = ['m', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z', 'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'];\nvar mathSqrt = Math.sqrt;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI = Math.PI;\n\nvar vMag = function (v) {\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n};\n\nvar vRatio = function (u, v) {\n  return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n};\n\nvar vAngle = function (u, v) {\n  return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n};\n\nfunction processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n  var psi = psiDeg * (PI / 180.0);\n  var xp = mathCos(psi) * (x1 - x2) / 2.0 + mathSin(psi) * (y1 - y2) / 2.0;\n  var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0 + mathCos(psi) * (y1 - y2) / 2.0;\n  var lambda = xp * xp / (rx * rx) + yp * yp / (ry * ry);\n\n  if (lambda > 1) {\n    rx *= mathSqrt(lambda);\n    ry *= mathSqrt(lambda);\n  }\n\n  var f = (fa === fs ? -1 : 1) * mathSqrt((rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) / (rx * rx * (yp * yp) + ry * ry * (xp * xp))) || 0;\n  var cxp = f * rx * yp / ry;\n  var cyp = f * -ry * xp / rx;\n  var cx = (x1 + x2) / 2.0 + mathCos(psi) * cxp - mathSin(psi) * cyp;\n  var cy = (y1 + y2) / 2.0 + mathSin(psi) * cxp + mathCos(psi) * cyp;\n  var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n  var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n  var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n  var dTheta = vAngle(u, v);\n\n  if (vRatio(u, v) <= -1) {\n    dTheta = PI;\n  }\n\n  if (vRatio(u, v) >= 1) {\n    dTheta = 0;\n  }\n\n  if (fs === 0 && dTheta > 0) {\n    dTheta = dTheta - 2 * PI;\n  }\n\n  if (fs === 1 && dTheta < 0) {\n    dTheta = dTheta + 2 * PI;\n  }\n\n  path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n}\n\nfunction createPathProxyFromString(data) {\n  if (!data) {\n    return [];\n  } // command string\n\n\n  var cs = data.replace(/-/g, ' -').replace(/  /g, ' ').replace(/ /g, ',').replace(/,,/g, ',');\n  var n; // create pipes so that we can split the data\n\n  for (n = 0; n < cc.length; n++) {\n    cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n  } // create array\n\n\n  var arr = cs.split('|'); // init context point\n\n  var cpx = 0;\n  var cpy = 0;\n  var path = new PathProxy();\n  var CMD = PathProxy.CMD;\n  var prevCmd;\n\n  for (n = 1; n < arr.length; n++) {\n    var str = arr[n];\n    var c = str.charAt(0);\n    var off = 0;\n    var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n    var cmd;\n\n    if (p.length > 0 && p[0] === '') {\n      p.shift();\n    }\n\n    for (var i = 0; i < p.length; i++) {\n      p[i] = parseFloat(p[i]);\n    }\n\n    while (off < p.length && !isNaN(p[off])) {\n      if (isNaN(p[0])) {\n        break;\n      }\n\n      var ctlPtx;\n      var ctlPty;\n      var rx;\n      var ry;\n      var psi;\n      var fa;\n      var fs;\n      var x1 = cpx;\n      var y1 = cpy; // convert l, H, h, V, and v to L\n\n      switch (c) {\n        case 'l':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'L':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'm':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'l';\n          break;\n\n        case 'M':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'L';\n          break;\n\n        case 'h':\n          cpx += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'H':\n          cpx = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'v':\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'V':\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'C':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]);\n          cpx = p[off - 2];\n          cpy = p[off - 1];\n          break;\n\n        case 'c':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy);\n          cpx += p[off - 2];\n          cpy += p[off - 1];\n          break;\n\n        case 'S':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 's':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = cpx + p[off++];\n          y1 = cpy + p[off++];\n          cpx += p[off++];\n          cpy += p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 'Q':\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'q':\n          x1 = p[off++] + cpx;\n          y1 = p[off++] + cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'T':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 't':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 'A':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n\n        case 'a':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n      }\n    }\n\n    if (c === 'z' || c === 'Z') {\n      cmd = CMD.Z;\n      path.addData(cmd);\n    }\n\n    prevCmd = cmd;\n  }\n\n  path.toStatic();\n  return path;\n} // TODO Optimize double memory cost problem\n\n\nfunction createPathOptions(str, opts) {\n  var pathProxy = createPathProxyFromString(str);\n  opts = opts || {};\n\n  opts.buildPath = function (path) {\n    if (path.setData) {\n      path.setData(pathProxy.data); // Svg and vml renderer don't have context\n\n      var ctx = path.getContext();\n\n      if (ctx) {\n        path.rebuildPath(ctx);\n      }\n    } else {\n      var ctx = path;\n      pathProxy.rebuildPath(ctx);\n    }\n  };\n\n  opts.applyTransform = function (m) {\n    transformPath(pathProxy, m);\n    this.dirty(true);\n  };\n\n  return opts;\n}\n/**\n * Create a Path object from path string data\n * http://www.w3.org/TR/SVG/paths.html#PathData\n * @param  {Object} opts Other options\n */\n\n\nfunction createFromString(str, opts) {\n  return new Path(createPathOptions(str, opts));\n}\n/**\n * Create a Path class from path string data\n * @param  {string} str\n * @param  {Object} opts Other options\n */\n\n\nfunction extendFromString(str, opts) {\n  return Path.extend(createPathOptions(str, opts));\n}\n/**\n * Merge multiple paths\n */\n// TODO Apply transform\n// TODO stroke dash\n// TODO Optimize double memory cost problem\n\n\nfunction mergePath(pathEls, opts) {\n  var pathList = [];\n  var len = pathEls.length;\n\n  for (var i = 0; i < len; i++) {\n    var pathEl = pathEls[i];\n\n    if (!pathEl.path) {\n      pathEl.createPathProxy();\n    }\n\n    if (pathEl.__dirtyPath) {\n      pathEl.buildPath(pathEl.path, pathEl.shape, true);\n    }\n\n    pathList.push(pathEl.path);\n  }\n\n  var pathBundle = new Path(opts); // Need path proxy.\n\n  pathBundle.createPathProxy();\n\n  pathBundle.buildPath = function (path) {\n    path.appendPath(pathList); // Svg and vml renderer don't have context\n\n    var ctx = path.getContext();\n\n    if (ctx) {\n      path.rebuildPath(ctx);\n    }\n  };\n\n  return pathBundle;\n}\n\nexports.createFromString = createFromString;\nexports.extendFromString = extendFromString;\nexports.mergePath = mergePath;\n\n/***/ }),\n\n/***/ 1106:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar PathProxy = __webpack_require__(1007);\n\nvar line = __webpack_require__(1072);\n\nvar cubic = __webpack_require__(1107);\n\nvar quadratic = __webpack_require__(1073);\n\nvar arc = __webpack_require__(1108);\n\nvar _util = __webpack_require__(1050);\n\nvar normalizeRadian = _util.normalizeRadian;\n\nvar curve = __webpack_require__(999);\n\nvar windingLine = __webpack_require__(1051);\n\nvar CMD = PathProxy.CMD;\nvar PI2 = Math.PI * 2;\nvar EPSILON = 1e-4;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n} // 临时数组\n\n\nvar roots = [-1, -1, -1];\nvar extrema = [-1, -1];\n\nfunction swapExtrema() {\n  var tmp = extrema[0];\n  extrema[0] = extrema[1];\n  extrema[1] = tmp;\n}\n\nfunction windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 && y > y3 || y < y0 && y < y1 && y < y2 && y < y3) {\n    return 0;\n  }\n\n  var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var w = 0;\n    var nExtrema = -1;\n    var y0_, y1_;\n\n    for (var i = 0; i < nRoots; i++) {\n      var t = roots[i]; // Avoid winding error when intersection point is the connect point of two line of polygon\n\n      var unit = t === 0 || t === 1 ? 0.5 : 1;\n      var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n\n      if (x_ < x) {\n        // Quick reject\n        continue;\n      }\n\n      if (nExtrema < 0) {\n        nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n\n        if (extrema[1] < extrema[0] && nExtrema > 1) {\n          swapExtrema();\n        }\n\n        y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n\n        if (nExtrema > 1) {\n          y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n        }\n      }\n\n      if (nExtrema == 2) {\n        // 分成三段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else if (t < extrema[1]) {\n          w += y1_ < y0_ ? unit : -unit;\n        } else {\n          w += y3 < y1_ ? unit : -unit;\n        }\n      } else {\n        // 分成两段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else {\n          w += y3 < y0_ ? unit : -unit;\n        }\n      }\n    }\n\n    return w;\n  }\n}\n\nfunction windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 || y < y0 && y < y1 && y < y2) {\n    return 0;\n  }\n\n  var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var t = curve.quadraticExtremum(y0, y1, y2);\n\n    if (t >= 0 && t <= 1) {\n      var w = 0;\n      var y_ = curve.quadraticAt(y0, y1, y2, t);\n\n      for (var i = 0; i < nRoots; i++) {\n        // Remove one endpoint.\n        var unit = roots[i] === 0 || roots[i] === 1 ? 0.5 : 1;\n        var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n\n        if (x_ < x) {\n          // Quick reject\n          continue;\n        }\n\n        if (roots[i] < t) {\n          w += y_ < y0 ? unit : -unit;\n        } else {\n          w += y2 < y_ ? unit : -unit;\n        }\n      }\n\n      return w;\n    } else {\n      // Remove one endpoint.\n      var unit = roots[0] === 0 || roots[0] === 1 ? 0.5 : 1;\n      var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n\n      if (x_ < x) {\n        // Quick reject\n        return 0;\n      }\n\n      return y2 < y0 ? unit : -unit;\n    }\n  }\n} // TODO\n// Arc 旋转\n\n\nfunction windingArc(cx, cy, r, startAngle, endAngle, anticlockwise, x, y) {\n  y -= cy;\n\n  if (y > r || y < -r) {\n    return 0;\n  }\n\n  var tmp = Math.sqrt(r * r - y * y);\n  roots[0] = -tmp;\n  roots[1] = tmp;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff < 1e-4) {\n    return 0;\n  }\n\n  if (diff % PI2 < 1e-4) {\n    // Is a circle\n    startAngle = 0;\n    endAngle = PI2;\n    var dir = anticlockwise ? 1 : -1;\n\n    if (x >= roots[0] + cx && x <= roots[1] + cx) {\n      return dir;\n    } else {\n      return 0;\n    }\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var w = 0;\n\n  for (var i = 0; i < 2; i++) {\n    var x_ = roots[i];\n\n    if (x_ + cx > x) {\n      var angle = Math.atan2(y, x_);\n      var dir = anticlockwise ? 1 : -1;\n\n      if (angle < 0) {\n        angle = PI2 + angle;\n      }\n\n      if (angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle) {\n        if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n          dir = -dir;\n        }\n\n        w += dir;\n      }\n    }\n  }\n\n  return w;\n}\n\nfunction containPath(data, lineWidth, isStroke, x, y) {\n  var w = 0;\n  var xi = 0;\n  var yi = 0;\n  var x0 = 0;\n  var y0 = 0;\n\n  for (var i = 0; i < data.length;) {\n    var cmd = data[i++]; // Begin a new subpath\n\n    if (cmd === CMD.M && i > 1) {\n      // Close previous subpath\n      if (!isStroke) {\n        w += windingLine(xi, yi, x0, y0, x, y);\n      } // 如果被任何一个 subpath 包含\n      // if (w !== 0) {\n      //     return true;\n      // }\n\n    }\n\n    if (i == 1) {\n      // 如果第一个命令是 L, C, Q\n      // 则 previous point 同绘制命令的第一个 point\n      //\n      // 第一个命令为 Arc 的情况下会在后面特殊处理\n      xi = data[i];\n      yi = data[i + 1];\n      x0 = xi;\n      y0 = yi;\n    }\n\n    switch (cmd) {\n      case CMD.M:\n        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n        // 在 closePath 的时候使用\n        x0 = data[i++];\n        y0 = data[i++];\n        xi = x0;\n        yi = y0;\n        break;\n\n      case CMD.L:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n          w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.C:\n        if (isStroke) {\n          if (cubic.containStroke(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.Q:\n        if (isStroke) {\n          if (quadratic.containStroke(xi, yi, data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.A:\n        // TODO Arc 判断的开销比较大\n        var cx = data[i++];\n        var cy = data[i++];\n        var rx = data[i++];\n        var ry = data[i++];\n        var theta = data[i++];\n        var dTheta = data[i++]; // TODO Arc 旋转\n\n        var psi = data[i++];\n        var anticlockwise = 1 - data[i++];\n        var x1 = Math.cos(theta) * rx + cx;\n        var y1 = Math.sin(theta) * ry + cy; // 不是直接使用 arc 命令\n\n        if (i > 1) {\n          w += windingLine(xi, yi, x1, y1, x, y);\n        } else {\n          // 第一个命令起点还未定义\n          x0 = x1;\n          y0 = y1;\n        } // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n\n\n        var _x = (x - cx) * ry / rx + cx;\n\n        if (isStroke) {\n          if (arc.containStroke(cx, cy, ry, theta, theta + dTheta, anticlockwise, lineWidth, _x, y)) {\n            return true;\n          }\n        } else {\n          w += windingArc(cx, cy, ry, theta, theta + dTheta, anticlockwise, _x, y);\n        }\n\n        xi = Math.cos(theta + dTheta) * rx + cx;\n        yi = Math.sin(theta + dTheta) * ry + cy;\n        break;\n\n      case CMD.R:\n        x0 = xi = data[i++];\n        y0 = yi = data[i++];\n        var width = data[i++];\n        var height = data[i++];\n        var x1 = x0 + width;\n        var y1 = y0 + height;\n\n        if (isStroke) {\n          if (line.containStroke(x0, y0, x1, y0, lineWidth, x, y) || line.containStroke(x1, y0, x1, y1, lineWidth, x, y) || line.containStroke(x1, y1, x0, y1, lineWidth, x, y) || line.containStroke(x0, y1, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // FIXME Clockwise ?\n          w += windingLine(x1, y0, x1, y1, x, y);\n          w += windingLine(x0, y1, x0, y0, x, y);\n        }\n\n        break;\n\n      case CMD.Z:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // Close a subpath\n          w += windingLine(xi, yi, x0, y0, x, y); // 如果被任何一个 subpath 包含\n          // FIXME subpaths may overlap\n          // if (w !== 0) {\n          //     return true;\n          // }\n        }\n\n        xi = x0;\n        yi = y0;\n        break;\n    }\n  }\n\n  if (!isStroke && !isAroundEqual(yi, y0)) {\n    w += windingLine(xi, yi, x0, y0, x, y) || 0;\n  }\n\n  return w !== 0;\n}\n\nfunction contain(pathData, x, y) {\n  return containPath(pathData, 0, false, x, y);\n}\n\nfunction containStroke(pathData, lineWidth, x, y) {\n  return containPath(pathData, lineWidth, true, x, y);\n}\n\nexports.contain = contain;\nexports.containStroke = containStroke;\n\n/***/ }),\n\n/***/ 1107:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar curve = __webpack_require__(999);\n\n/**\n * 三次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  x3\n * @param  {number}  y3\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l) {\n    return false;\n  }\n\n  var d = curve.cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n/***/ }),\n\n/***/ 1108:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(1050);\n\nvar normalizeRadian = _util.normalizeRadian;\nvar PI2 = Math.PI * 2;\n/**\n * 圆弧描边包含判断\n * @param  {number}  cx\n * @param  {number}  cy\n * @param  {number}  r\n * @param  {number}  startAngle\n * @param  {number}  endAngle\n * @param  {boolean}  anticlockwise\n * @param  {number} lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {Boolean}\n */\n\nfunction containStroke(cx, cy, r, startAngle, endAngle, anticlockwise, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  x -= cx;\n  y -= cy;\n  var d = Math.sqrt(x * x + y * y);\n\n  if (d - _l > r || d + _l < r) {\n    return false;\n  }\n\n  if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n    // Is a circle\n    return true;\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var angle = Math.atan2(y, x);\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle;\n}\n\nexports.containStroke = containStroke;\n\n/***/ }),\n\n/***/ 1109:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar PathProxy = __webpack_require__(1007);\n\nvar _vector = __webpack_require__(984);\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar CMD = PathProxy.CMD;\nvar points = [[], [], []];\nvar mathSqrt = Math.sqrt;\nvar mathAtan2 = Math.atan2;\n\nfunction _default(path, m) {\n  var data = path.data;\n  var cmd;\n  var nPoint;\n  var i;\n  var j;\n  var k;\n  var p;\n  var M = CMD.M;\n  var C = CMD.C;\n  var L = CMD.L;\n  var R = CMD.R;\n  var A = CMD.A;\n  var Q = CMD.Q;\n\n  for (i = 0, j = 0; i < data.length;) {\n    cmd = data[i++];\n    j = i;\n    nPoint = 0;\n\n    switch (cmd) {\n      case M:\n        nPoint = 1;\n        break;\n\n      case L:\n        nPoint = 1;\n        break;\n\n      case C:\n        nPoint = 3;\n        break;\n\n      case Q:\n        nPoint = 2;\n        break;\n\n      case A:\n        var x = m[4];\n        var y = m[5];\n        var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n        var angle = mathAtan2(-m[1] / sy, m[0] / sx); // cx\n\n        data[i] *= sx;\n        data[i++] += x; // cy\n\n        data[i] *= sy;\n        data[i++] += y; // Scale rx and ry\n        // FIXME Assume psi is 0 here\n\n        data[i++] *= sx;\n        data[i++] *= sy; // Start angle\n\n        data[i++] += angle; // end angle\n\n        data[i++] += angle; // FIXME psi\n\n        i += 2;\n        j = i;\n        break;\n\n      case R:\n        // x0, y0\n        p[0] = data[i++];\n        p[1] = data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1]; // x1, y1\n\n        p[0] += data[i++];\n        p[1] += data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1];\n    }\n\n    for (k = 0; k < nPoint; k++) {\n      var p = points[k];\n      p[0] = data[i++];\n      p[1] = data[i++];\n      v2ApplyTransform(p, p, m); // Write back\n\n      data[j++] = p[0];\n      data[j++] = p[1];\n    }\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1110:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(988);\n\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\nvar _default = Path.extend({\n  type: 'circle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    // Better stroking in ShapeBundle\n    // Always do it may have performence issue ( fill may be 2x more cost)\n    if (inBundle) {\n      ctx.moveTo(shape.cx + shape.r, shape.cy);\n    } // else {\n    //     if (ctx.allocate && !ctx.data.length) {\n    //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n    //     }\n    // }\n    // Better stroking in ShapeBundle\n    // ctx.moveTo(shape.cx + shape.r, shape.cy);\n\n\n    ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1111:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(988);\n\nvar fixClipWithShadow = __webpack_require__(1060);\n\n/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\nvar _default = Path.extend({\n  type: 'sector',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r0: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r0 = Math.max(shape.r0 || 0, 0);\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n    ctx.lineTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n    ctx.lineTo(Math.cos(endAngle) * r0 + x, Math.sin(endAngle) * r0 + y);\n\n    if (r0 !== 0) {\n      ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n    }\n\n    ctx.closePath();\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1112:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(988);\n\n/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\nvar _default = Path.extend({\n  type: 'ring',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    r0: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var PI2 = Math.PI * 2;\n    ctx.moveTo(x + shape.r, y);\n    ctx.arc(x, y, shape.r, 0, PI2, false);\n    ctx.moveTo(x + shape.r0, y);\n    ctx.arc(x, y, shape.r0, 0, PI2, true);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1113:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(988);\n\nvar polyHelper = __webpack_require__(1052);\n\n/**\n * 多边形\n * @module zrender/shape/Polygon\n */\nvar _default = Path.extend({\n  type: 'polygon',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, true);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1114:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _vector = __webpack_require__(984);\n\nvar v2Distance = _vector.distance;\n\n/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * @inner\n */\nfunction interpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n/**\n * @alias module:zrender/shape/util/smoothSpline\n * @param {Array} points 线段顶点数组\n * @param {boolean} isLoop\n * @return {Array}\n */\n\n\nfunction _default(points, isLoop) {\n  var len = points.length;\n  var ret = [];\n  var distance = 0;\n\n  for (var i = 1; i < len; i++) {\n    distance += v2Distance(points[i - 1], points[i]);\n  }\n\n  var segs = distance / 2;\n  segs = segs < len ? len : segs;\n\n  for (var i = 0; i < segs; i++) {\n    var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n    var idx = Math.floor(pos);\n    var w = pos - idx;\n    var p0;\n    var p1 = points[idx % len];\n    var p2;\n    var p3;\n\n    if (!isLoop) {\n      p0 = points[idx === 0 ? idx : idx - 1];\n      p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n      p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n    } else {\n      p0 = points[(idx - 1 + len) % len];\n      p2 = points[(idx + 1) % len];\n      p3 = points[(idx + 2) % len];\n    }\n\n    var w2 = w * w;\n    var w3 = w * w2;\n    ret.push([interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3), interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)]);\n  }\n\n  return ret;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1115:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _vector = __webpack_require__(984);\n\nvar v2Min = _vector.min;\nvar v2Max = _vector.max;\nvar v2Scale = _vector.scale;\nvar v2Distance = _vector.distance;\nvar v2Add = _vector.add;\nvar v2Clone = _vector.clone;\nvar v2Sub = _vector.sub;\n\n/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * 贝塞尔平滑曲线\n * @alias module:zrender/shape/util/smoothBezier\n * @param {Array} points 线段顶点数组\n * @param {number} smooth 平滑等级, 0-1\n * @param {boolean} isLoop\n * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n *                           整个折线的包围盒做一个并集用来约束控制点。\n * @param {Array} 计算出来的控制点数组\n */\nfunction _default(points, smooth, isLoop, constraint) {\n  var cps = [];\n  var v = [];\n  var v1 = [];\n  var v2 = [];\n  var prevPoint;\n  var nextPoint;\n  var min, max;\n\n  if (constraint) {\n    min = [Infinity, Infinity];\n    max = [-Infinity, -Infinity];\n\n    for (var i = 0, len = points.length; i < len; i++) {\n      v2Min(min, min, points[i]);\n      v2Max(max, max, points[i]);\n    } // 与指定的包围盒做并集\n\n\n    v2Min(min, min, constraint[0]);\n    v2Max(max, max, constraint[1]);\n  }\n\n  for (var i = 0, len = points.length; i < len; i++) {\n    var point = points[i];\n\n    if (isLoop) {\n      prevPoint = points[i ? i - 1 : len - 1];\n      nextPoint = points[(i + 1) % len];\n    } else {\n      if (i === 0 || i === len - 1) {\n        cps.push(v2Clone(points[i]));\n        continue;\n      } else {\n        prevPoint = points[i - 1];\n        nextPoint = points[i + 1];\n      }\n    }\n\n    v2Sub(v, nextPoint, prevPoint); // use degree to scale the handle length\n\n    v2Scale(v, v, smooth);\n    var d0 = v2Distance(point, prevPoint);\n    var d1 = v2Distance(point, nextPoint);\n    var sum = d0 + d1;\n\n    if (sum !== 0) {\n      d0 /= sum;\n      d1 /= sum;\n    }\n\n    v2Scale(v1, v, -d0);\n    v2Scale(v2, v, d1);\n    var cp0 = v2Add([], point, v1);\n    var cp1 = v2Add([], point, v2);\n\n    if (constraint) {\n      v2Max(cp0, cp0, min);\n      v2Min(cp0, cp0, max);\n      v2Max(cp1, cp1, min);\n      v2Min(cp1, cp1, max);\n    }\n\n    cps.push(cp0);\n    cps.push(cp1);\n  }\n\n  if (isLoop) {\n    cps.push(cps.shift());\n  }\n\n  return cps;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1116:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(988);\n\nvar polyHelper = __webpack_require__(1052);\n\n/**\n * @module zrender/graphic/shape/Polyline\n */\nvar _default = Path.extend({\n  type: 'polyline',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, false);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1117:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(988);\n\nvar roundRectHelper = __webpack_require__(1049);\n\n/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\nvar _default = Path.extend({\n  type: 'rect',\n  shape: {\n    // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n    // r缩写为1         相当于 [1, 1, 1, 1]\n    // r缩写为[1]       相当于 [1, 1, 1, 1]\n    // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n    // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n    r: 0,\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var width = shape.width;\n    var height = shape.height;\n\n    if (!shape.r) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, shape);\n    }\n\n    ctx.closePath();\n    return;\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1118:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(988);\n\n/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\nvar _default = Path.extend({\n  type: 'line',\n  shape: {\n    // Start point\n    x1: 0,\n    y1: 0,\n    // End point\n    x2: 0,\n    y2: 0,\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (percent < 1) {\n      x2 = x1 * (1 - percent) + x2 * percent;\n      y2 = y1 * (1 - percent) + y2 * percent;\n    }\n\n    ctx.lineTo(x2, y2);\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} percent\n   * @return {Array.<number>}\n   */\n  pointAt: function (p) {\n    var shape = this.shape;\n    return [shape.x1 * (1 - p) + shape.x2 * p, shape.y1 * (1 - p) + shape.y2 * p];\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1119:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(988);\n\nvar vec2 = __webpack_require__(984);\n\nvar _curve = __webpack_require__(999);\n\nvar quadraticSubdivide = _curve.quadraticSubdivide;\nvar cubicSubdivide = _curve.cubicSubdivide;\nvar quadraticAt = _curve.quadraticAt;\nvar cubicAt = _curve.cubicAt;\nvar quadraticDerivativeAt = _curve.quadraticDerivativeAt;\nvar cubicDerivativeAt = _curve.cubicDerivativeAt;\n\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\nvar out = [];\n\nfunction someVectorAt(shape, t, isTangent) {\n  var cpx2 = shape.cpx2;\n  var cpy2 = shape.cpy2;\n\n  if (cpx2 === null || cpy2 === null) {\n    return [(isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t), (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)];\n  } else {\n    return [(isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t), (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)];\n  }\n}\n\nvar _default = Path.extend({\n  type: 'bezier-curve',\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    cpx1: 0,\n    cpy1: 0,\n    // cpx2: 0,\n    // cpy2: 0\n    // Curve show percent, for animating\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var cpx1 = shape.cpx1;\n    var cpy1 = shape.cpy1;\n    var cpx2 = shape.cpx2;\n    var cpy2 = shape.cpy2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (cpx2 == null || cpy2 == null) {\n      if (percent < 1) {\n        quadraticSubdivide(x1, cpx1, x2, percent, out);\n        cpx1 = out[1];\n        x2 = out[2];\n        quadraticSubdivide(y1, cpy1, y2, percent, out);\n        cpy1 = out[1];\n        y2 = out[2];\n      }\n\n      ctx.quadraticCurveTo(cpx1, cpy1, x2, y2);\n    } else {\n      if (percent < 1) {\n        cubicSubdivide(x1, cpx1, cpx2, x2, percent, out);\n        cpx1 = out[1];\n        cpx2 = out[2];\n        x2 = out[3];\n        cubicSubdivide(y1, cpy1, cpy2, y2, percent, out);\n        cpy1 = out[1];\n        cpy2 = out[2];\n        y2 = out[3];\n      }\n\n      ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\n    }\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  pointAt: function (t) {\n    return someVectorAt(this.shape, t, false);\n  },\n\n  /**\n   * Get tangent at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  tangentAt: function (t) {\n    var p = someVectorAt(this.shape, t, true);\n    return vec2.normalize(p, p);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1120:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(988);\n\n/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\nvar _default = Path.extend({\n  type: 'arc',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1121:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(988);\n\n// CompoundPath to improve performance\nvar _default = Path.extend({\n  type: 'compound',\n  shape: {\n    paths: null\n  },\n  _updatePathDirty: function () {\n    var dirtyPath = this.__dirtyPath;\n    var paths = this.shape.paths;\n\n    for (var i = 0; i < paths.length; i++) {\n      // Mark as dirty if any subpath is dirty\n      dirtyPath = dirtyPath || paths[i].__dirtyPath;\n    }\n\n    this.__dirtyPath = dirtyPath;\n    this.__dirty = this.__dirty || dirtyPath;\n  },\n  beforeBrush: function () {\n    this._updatePathDirty();\n\n    var paths = this.shape.paths || [];\n    var scale = this.getGlobalScale(); // Update path scale\n\n    for (var i = 0; i < paths.length; i++) {\n      if (!paths[i].path) {\n        paths[i].createPathProxy();\n      }\n\n      paths[i].path.setScale(scale[0], scale[1]);\n    }\n  },\n  buildPath: function (ctx, shape) {\n    var paths = shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].buildPath(ctx, paths[i].shape, true);\n    }\n  },\n  afterBrush: function () {\n    var paths = this.shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].__dirtyPath = false;\n    }\n  },\n  getBoundingRect: function () {\n    this._updatePathDirty();\n\n    return Path.prototype.getBoundingRect.call(this);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1122:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar Gradient = __webpack_require__(1019);\n\n/**\n * x, y, r are all percent from 0 to 1\n * @param {number} [x=0.5]\n * @param {number} [y=0.5]\n * @param {number} [r=0.5]\n * @param {Array.<Object>} [colorStops]\n * @param {boolean} [globalCoord=false]\n */\nvar RadialGradient = function (x, y, r, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'radial', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0.5 : x;\n  this.y = y == null ? 0.5 : y;\n  this.r = r == null ? 0.5 : r; // Can be cloned\n\n  this.type = 'radial'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nRadialGradient.prototype = {\n  constructor: RadialGradient\n};\nzrUtil.inherits(RadialGradient, Gradient);\nvar _default = RadialGradient;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1123:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar makeStyleMapper = __webpack_require__(1011);\n\nvar getItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor'], ['textPosition'], ['textAlign']]);\nvar _default = {\n  getItemStyle: function (excludes, includes) {\n    var style = getItemStyle(this, excludes, includes);\n    var lineDash = this.getBorderLineDash();\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getBorderLineDash: function () {\n    var lineType = this.get('borderType');\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [5, 5] : [1, 1];\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1124:\n/***/ (function(module, exports) {\n\nvar _default = {\n  getBoxLayoutParams: function () {\n    return {\n      left: this.get('left'),\n      top: this.get('top'),\n      right: this.get('right'),\n      bottom: this.get('bottom'),\n      width: this.get('width'),\n      height: this.get('height')\n    };\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1125:\n/***/ (function(module, exports) {\n\nvar platform = ''; // Navigator not exists in node\n\nif (typeof navigator !== 'undefined') {\n  platform = navigator.platform || '';\n}\n\nvar _default = {\n  // 全图默认背景\n  // backgroundColor: 'rgba(0,0,0,0)',\n  // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n  // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n  // 浅色\n  // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n  // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n  // 深色\n  color: ['#c23531', '#2f4554', '#61a0a8', '#d48265', '#91c7ae', '#749f83', '#ca8622', '#bda29a', '#6e7074', '#546570', '#c4ccd3'],\n  // 默认需要 Grid 配置项\n  // grid: {},\n  // 主题，主题\n  textStyle: {\n    // color: '#000',\n    // decoration: 'none',\n    // PENDING\n    fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n    // fontFamily: 'Arial, Verdana, sans-serif',\n    fontSize: 12,\n    fontStyle: 'normal',\n    fontWeight: 'normal'\n  },\n  // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n  // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n  // Default is source-over\n  blendMode: null,\n  animation: 'auto',\n  animationDuration: 1000,\n  animationDurationUpdate: 300,\n  animationEasing: 'exponentialOut',\n  animationEasingUpdate: 'cubicOut',\n  animationThreshold: 2000,\n  // Configuration for progressive/incremental rendering\n  progressiveThreshold: 3000,\n  progressive: 400,\n  // Threshold of if use single hover layer to optimize.\n  // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n  // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n  // which is unexpected.\n  // see example <echarts/test/heatmap-large.html>.\n  hoverLayerThreshold: 3000,\n  // See: module:echarts/scale/Time\n  useUTC: false\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1126:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar echartsAPIList = ['getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed', 'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption', 'getViewOfComponentModel', 'getViewOfSeriesModel']; // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\n\nfunction ExtensionAPI(chartInstance) {\n  zrUtil.each(echartsAPIList, function (name) {\n    this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n  }, this);\n}\n\nvar _default = ExtensionAPI;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1127:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar modelUtil = __webpack_require__(982);\n\nvar ComponentModel = __webpack_require__(991);\n\n/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\nvar each = zrUtil.each;\nvar clone = zrUtil.clone;\nvar map = zrUtil.map;\nvar merge = zrUtil.merge;\nvar QUERY_REG = /^(min|max)?(.+)$/;\n/**\n * TERM EXPLANATIONS:\n *\n * [option]:\n *\n *     An object that contains definitions of components. For example:\n *     var option = {\n *         title: {...},\n *         legend: {...},\n *         visualMap: {...},\n *         series: [\n *             {data: [...]},\n *             {data: [...]},\n *             ...\n *         ]\n *     };\n *\n * [rawOption]:\n *\n *     An object input to echarts.setOption. 'rawOption' may be an\n *     'option', or may be an object contains multi-options. For example:\n *     var option = {\n *         baseOption: {\n *             title: {...},\n *             legend: {...},\n *             series: [\n *                 {data: [...]},\n *                 {data: [...]},\n *                 ...\n *             ]\n *         },\n *         timeline: {...},\n *         options: [\n *             {title: {...}, series: {data: [...]}},\n *             {title: {...}, series: {data: [...]}},\n *             ...\n *         ],\n *         media: [\n *             {\n *                 query: {maxWidth: 320},\n *                 option: {series: {x: 20}, visualMap: {show: false}}\n *             },\n *             {\n *                 query: {minWidth: 320, maxWidth: 720},\n *                 option: {series: {x: 500}, visualMap: {show: true}}\n *             },\n *             {\n *                 option: {series: {x: 1200}, visualMap: {show: true}}\n *             }\n *         ]\n *     };\n *\n * @alias module:echarts/model/OptionManager\n * @param {module:echarts/ExtensionAPI} api\n */\n\nfunction OptionManager(api) {\n  /**\n   * @private\n   * @type {module:echarts/ExtensionAPI}\n   */\n  this._api = api;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._timelineOptions = [];\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n\n  this._mediaList = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._mediaDefault;\n  /**\n   * -1, means default.\n   * empty means no media.\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._currentMediaIndices = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._optionBackup;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._newBaseOption;\n} // timeline.notMerge is not supported in ec3. Firstly there is rearly\n// case that notMerge is needed. Secondly supporting 'notMerge' requires\n// rawOption cloned and backuped when timeline changed, which does no\n// good to performance. What's more, that both timeline and setOption\n// method supply 'notMerge' brings complex and some problems.\n// Consider this case:\n// (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n// (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n\nOptionManager.prototype = {\n  constructor: OptionManager,\n\n  /**\n   * @public\n   * @param {Object} rawOption Raw option.\n   * @param {module:echarts/model/Global} ecModel\n   * @param {Array.<Function>} optionPreprocessorFuncs\n   * @return {Object} Init option\n   */\n  setOption: function (rawOption, optionPreprocessorFuncs) {\n    rawOption = clone(rawOption, true); // FIXME\n    // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n    var oldOptionBackup = this._optionBackup;\n    var newParsedOption = parseRawOption.call(this, rawOption, optionPreprocessorFuncs, !oldOptionBackup);\n    this._newBaseOption = newParsedOption.baseOption; // For setOption at second time (using merge mode);\n\n    if (oldOptionBackup) {\n      // Only baseOption can be merged.\n      mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption); // For simplicity, timeline options and media options do not support merge,\n      // that is, if you `setOption` twice and both has timeline options, the latter\n      // timeline opitons will not be merged to the formers, but just substitude them.\n\n      if (newParsedOption.timelineOptions.length) {\n        oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n      }\n\n      if (newParsedOption.mediaList.length) {\n        oldOptionBackup.mediaList = newParsedOption.mediaList;\n      }\n\n      if (newParsedOption.mediaDefault) {\n        oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n      }\n    } else {\n      this._optionBackup = newParsedOption;\n    }\n  },\n\n  /**\n   * @param {boolean} isRecreate\n   * @return {Object}\n   */\n  mountOption: function (isRecreate) {\n    var optionBackup = this._optionBackup; // TODO\n    // 如果没有reset功能则不clone。\n\n    this._timelineOptions = map(optionBackup.timelineOptions, clone);\n    this._mediaList = map(optionBackup.mediaList, clone);\n    this._mediaDefault = clone(optionBackup.mediaDefault);\n    this._currentMediaIndices = [];\n    return clone(isRecreate // this._optionBackup.baseOption, which is created at the first `setOption`\n    // called, and is merged into every new option by inner method `mergeOption`\n    // each time `setOption` called, can be only used in `isRecreate`, because\n    // its reliability is under suspicion. In other cases option merge is\n    // performed by `model.mergeOption`.\n    ? optionBackup.baseOption : this._newBaseOption);\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Object}\n   */\n  getTimelineOption: function (ecModel) {\n    var option;\n    var timelineOptions = this._timelineOptions;\n\n    if (timelineOptions.length) {\n      // getTimelineOption can only be called after ecModel inited,\n      // so we can get currentIndex from timelineModel.\n      var timelineModel = ecModel.getComponent('timeline');\n\n      if (timelineModel) {\n        option = clone(timelineOptions[timelineModel.getCurrentIndex()], true);\n      }\n    }\n\n    return option;\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Array.<Object>}\n   */\n  getMediaOption: function (ecModel) {\n    var ecWidth = this._api.getWidth();\n\n    var ecHeight = this._api.getHeight();\n\n    var mediaList = this._mediaList;\n    var mediaDefault = this._mediaDefault;\n    var indices = [];\n    var result = []; // No media defined.\n\n    if (!mediaList.length && !mediaDefault) {\n      return result;\n    } // Multi media may be applied, the latter defined media has higher priority.\n\n\n    for (var i = 0, len = mediaList.length; i < len; i++) {\n      if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n        indices.push(i);\n      }\n    } // FIXME\n    // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n\n\n    if (!indices.length && mediaDefault) {\n      indices = [-1];\n    }\n\n    if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n      result = map(indices, function (index) {\n        return clone(index === -1 ? mediaDefault.option : mediaList[index].option);\n      });\n    } // Otherwise return nothing.\n\n\n    this._currentMediaIndices = indices;\n    return result;\n  }\n};\n\nfunction parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n  var timelineOptions = [];\n  var mediaList = [];\n  var mediaDefault;\n  var baseOption; // Compatible with ec2.\n\n  var timelineOpt = rawOption.timeline;\n\n  if (rawOption.baseOption) {\n    baseOption = rawOption.baseOption;\n  } // For timeline\n\n\n  if (timelineOpt || rawOption.options) {\n    baseOption = baseOption || {};\n    timelineOptions = (rawOption.options || []).slice();\n  } // For media query\n\n\n  if (rawOption.media) {\n    baseOption = baseOption || {};\n    var media = rawOption.media;\n    each(media, function (singleMedia) {\n      if (singleMedia && singleMedia.option) {\n        if (singleMedia.query) {\n          mediaList.push(singleMedia);\n        } else if (!mediaDefault) {\n          // Use the first media default.\n          mediaDefault = singleMedia;\n        }\n      }\n    });\n  } // For normal option\n\n\n  if (!baseOption) {\n    baseOption = rawOption;\n  } // Set timelineOpt to baseOption in ec3,\n  // which is convenient for merge option.\n\n\n  if (!baseOption.timeline) {\n    baseOption.timeline = timelineOpt;\n  } // Preprocess.\n\n\n  each([baseOption].concat(timelineOptions).concat(zrUtil.map(mediaList, function (media) {\n    return media.option;\n  })), function (option) {\n    each(optionPreprocessorFuncs, function (preProcess) {\n      preProcess(option, isNew);\n    });\n  });\n  return {\n    baseOption: baseOption,\n    timelineOptions: timelineOptions,\n    mediaDefault: mediaDefault,\n    mediaList: mediaList\n  };\n}\n/**\n * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n * Support: width, height, aspectRatio\n * Can use max or min as prefix.\n */\n\n\nfunction applyMediaQuery(query, ecWidth, ecHeight) {\n  var realMap = {\n    width: ecWidth,\n    height: ecHeight,\n    aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n\n  };\n  var applicatable = true;\n  zrUtil.each(query, function (value, attr) {\n    var matched = attr.match(QUERY_REG);\n\n    if (!matched || !matched[1] || !matched[2]) {\n      return;\n    }\n\n    var operator = matched[1];\n    var realAttr = matched[2].toLowerCase();\n\n    if (!compare(realMap[realAttr], value, operator)) {\n      applicatable = false;\n    }\n  });\n  return applicatable;\n}\n\nfunction compare(real, expect, operator) {\n  if (operator === 'min') {\n    return real >= expect;\n  } else if (operator === 'max') {\n    return real <= expect;\n  } else {\n    // Equals\n    return real === expect;\n  }\n}\n\nfunction indicesEquals(indices1, indices2) {\n  // indices is always order by asc and has only finite number.\n  return indices1.join(',') === indices2.join(',');\n}\n/**\n * Consider case:\n * `chart.setOption(opt1);`\n * Then user do some interaction like dataZoom, dataView changing.\n * `chart.setOption(opt2);`\n * Then user press 'reset button' in toolbox.\n *\n * After doing that all of the interaction effects should be reset, the\n * chart should be the same as the result of invoke\n * `chart.setOption(opt1); chart.setOption(opt2);`.\n *\n * Although it is not able ensure that\n * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n * `chart.setOption(merge(opt1, opt2));` exactly,\n * this might be the only simple way to implement that feature.\n *\n * MEMO: We've considered some other approaches:\n * 1. Each model handle its self restoration but not uniform treatment.\n *     (Too complex in logic and error-prone)\n * 2. Use a shadow ecModel. (Performace expensive)\n */\n\n\nfunction mergeOption(oldOption, newOption) {\n  newOption = newOption || {};\n  each(newOption, function (newCptOpt, mainType) {\n    if (newCptOpt == null) {\n      return;\n    }\n\n    var oldCptOpt = oldOption[mainType];\n\n    if (!ComponentModel.hasClass(mainType)) {\n      oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n    } else {\n      newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n      oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n      var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n      oldOption[mainType] = map(mapResult, function (item) {\n        return item.option && item.exist ? merge(item.exist, item.option, true) : item.exist || item.option;\n      });\n    }\n  });\n}\n\nvar _default = OptionManager;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1128:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(978);\n\nvar each = _util.each;\nvar isArray = _util.isArray;\nvar isObject = _util.isObject;\n\nvar compatStyle = __webpack_require__(1129);\n\nvar _model = __webpack_require__(982);\n\nvar normalizeToArray = _model.normalizeToArray;\n\n// Compatitable with 2.0\nfunction get(opt, path) {\n  path = path.split(',');\n  var obj = opt;\n\n  for (var i = 0; i < path.length; i++) {\n    obj = obj && obj[path[i]];\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  return obj;\n}\n\nfunction set(opt, path, val, overwrite) {\n  path = path.split(',');\n  var obj = opt;\n  var key;\n\n  for (var i = 0; i < path.length - 1; i++) {\n    key = path[i];\n\n    if (obj[key] == null) {\n      obj[key] = {};\n    }\n\n    obj = obj[key];\n  }\n\n  if (overwrite || obj[path[i]] == null) {\n    obj[path[i]] = val;\n  }\n}\n\nfunction compatLayoutProperties(option) {\n  each(LAYOUT_PROPERTIES, function (prop) {\n    if (prop[0] in option && !(prop[1] in option)) {\n      option[prop[1]] = option[prop[0]];\n    }\n  });\n}\n\nvar LAYOUT_PROPERTIES = [['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']];\nvar COMPATITABLE_COMPONENTS = ['grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'];\nvar COMPATITABLE_SERIES = ['bar', 'boxplot', 'candlestick', 'chord', 'effectScatter', 'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel', 'pie', 'radar', 'sankey', 'scatter', 'treemap'];\n\nfunction _default(option, isTheme) {\n  compatStyle(option, isTheme); // Make sure series array for model initialization.\n\n  option.series = normalizeToArray(option.series);\n  each(option.series, function (seriesOpt) {\n    if (!isObject(seriesOpt)) {\n      return;\n    }\n\n    var seriesType = seriesOpt.type;\n\n    if (seriesType === 'pie' || seriesType === 'gauge') {\n      if (seriesOpt.clockWise != null) {\n        seriesOpt.clockwise = seriesOpt.clockWise;\n      }\n    }\n\n    if (seriesType === 'gauge') {\n      var pointerColor = get(seriesOpt, 'pointer.color');\n      pointerColor != null && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n    }\n\n    for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\n      if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\n        compatLayoutProperties(seriesOpt);\n        break;\n      }\n    }\n  }); // dataRange has changed to visualMap\n\n  if (option.dataRange) {\n    option.visualMap = option.dataRange;\n  }\n\n  each(COMPATITABLE_COMPONENTS, function (componentName) {\n    var options = option[componentName];\n\n    if (options) {\n      if (!isArray(options)) {\n        options = [options];\n      }\n\n      each(options, function (option) {\n        compatLayoutProperties(option);\n      });\n    }\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1129:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar modelUtil = __webpack_require__(982);\n\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar POSSIBLE_STYLES = ['areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle', 'chordStyle', 'label', 'labelLine'];\n\nfunction compatItemStyle(opt) {\n  var itemStyleOpt = opt && opt.itemStyle;\n\n  if (!itemStyleOpt) {\n    return;\n  }\n\n  for (var i = 0, len = POSSIBLE_STYLES.length; i < len; i++) {\n    var styleName = POSSIBLE_STYLES[i];\n    var normalItemStyleOpt = itemStyleOpt.normal;\n    var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n\n    if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].normal) {\n        opt[styleName].normal = normalItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n      }\n\n      normalItemStyleOpt[styleName] = null;\n    }\n\n    if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].emphasis) {\n        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n      }\n\n      emphasisItemStyleOpt[styleName] = null;\n    }\n  }\n}\n\nfunction compatTextStyle(opt, propName) {\n  var labelOptSingle = isObject(opt) && opt[propName];\n  var textStyle = isObject(labelOptSingle) && labelOptSingle.textStyle;\n\n  if (textStyle) {\n    for (var i = 0, len = modelUtil.TEXT_STYLE_OPTIONS.length; i < len; i++) {\n      var propName = modelUtil.TEXT_STYLE_OPTIONS[i];\n\n      if (textStyle.hasOwnProperty(propName)) {\n        labelOptSingle[propName] = textStyle[propName];\n      }\n    }\n  }\n}\n\nfunction compatLabelTextStyle(labelOpt) {\n  if (isObject(labelOpt)) {\n    compatTextStyle(labelOpt, 'normal');\n    compatTextStyle(labelOpt, 'emphasis');\n  }\n}\n\nfunction processSeries(seriesOpt) {\n  if (!isObject(seriesOpt)) {\n    return;\n  }\n\n  compatItemStyle(seriesOpt);\n  compatLabelTextStyle(seriesOpt.label); // treemap\n\n  compatLabelTextStyle(seriesOpt.upperLabel); // graph\n\n  compatLabelTextStyle(seriesOpt.edgeLabel);\n  var markPoint = seriesOpt.markPoint;\n  compatItemStyle(markPoint);\n  compatLabelTextStyle(markPoint && markPoint.label);\n  var markLine = seriesOpt.markLine;\n  compatItemStyle(seriesOpt.markLine);\n  compatLabelTextStyle(markLine && markLine.label);\n  var markArea = seriesOpt.markArea;\n  compatLabelTextStyle(markArea && markArea.label); // For gauge\n\n  compatTextStyle(seriesOpt, 'axisLabel');\n  compatTextStyle(seriesOpt, 'title');\n  compatTextStyle(seriesOpt, 'detail');\n  var data = seriesOpt.data;\n\n  if (data) {\n    for (var i = 0; i < data.length; i++) {\n      compatItemStyle(data[i]);\n      compatLabelTextStyle(data[i] && data[i].label);\n    }\n  } // mark point data\n\n\n  var markPoint = seriesOpt.markPoint;\n\n  if (markPoint && markPoint.data) {\n    var mpData = markPoint.data;\n\n    for (var i = 0; i < mpData.length; i++) {\n      compatItemStyle(mpData[i]);\n      compatLabelTextStyle(mpData[i] && mpData[i].label);\n    }\n  } // mark line data\n\n\n  var markLine = seriesOpt.markLine;\n\n  if (markLine && markLine.data) {\n    var mlData = markLine.data;\n\n    for (var i = 0; i < mlData.length; i++) {\n      if (zrUtil.isArray(mlData[i])) {\n        compatItemStyle(mlData[i][0]);\n        compatLabelTextStyle(mlData[i][0] && mlData[i][0].label);\n        compatItemStyle(mlData[i][1]);\n        compatLabelTextStyle(mlData[i][1] && mlData[i][1].label);\n      } else {\n        compatItemStyle(mlData[i]);\n        compatLabelTextStyle(mlData[i] && mlData[i].label);\n      }\n    }\n  }\n}\n\nfunction toArr(o) {\n  return zrUtil.isArray(o) ? o : o ? [o] : [];\n}\n\nfunction toObj(o) {\n  return (zrUtil.isArray(o) ? o[0] : o) || {};\n}\n\nfunction _default(option, isTheme) {\n  each(toArr(option.series), function (seriesOpt) {\n    isObject(seriesOpt) && processSeries(seriesOpt);\n  });\n  var axes = ['xAxis', 'yAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'parallelAxis', 'radar'];\n  isTheme && axes.push('valueAxis', 'categoryAxis', 'logAxis', 'timeAxis');\n  each(axes, function (axisName) {\n    each(toArr(option[axisName]), function (axisOpt) {\n      if (axisOpt) {\n        compatTextStyle(axisOpt, 'axisLabel');\n        compatTextStyle(axisOpt.axisPointer, 'label');\n      }\n    });\n  });\n  each(toArr(option.parallel), function (parallelOpt) {\n    var parallelAxisDefault = parallelOpt && parallelOpt.parallelAxisDefault;\n    compatTextStyle(parallelAxisDefault, 'axisLabel');\n    compatTextStyle(parallelAxisDefault && parallelAxisDefault.axisPointer, 'label');\n  });\n  each(toArr(option.calendar), function (calendarOpt) {\n    compatTextStyle(calendarOpt, 'dayLabel');\n    compatTextStyle(calendarOpt, 'monthLabel');\n    compatTextStyle(calendarOpt, 'yearLabel');\n  }); // radar.name.textStyle\n\n  each(toArr(option.radar), function (radarOpt) {\n    compatTextStyle(radarOpt, 'name');\n  });\n  each(toArr(option.geo), function (geoOpt) {\n    if (isObject(geoOpt)) {\n      compatLabelTextStyle(geoOpt.label);\n      each(toArr(geoOpt.regions), function (regionObj) {\n        compatLabelTextStyle(regionObj.label);\n      });\n    }\n  });\n  compatLabelTextStyle(toObj(option.timeline).label);\n  compatTextStyle(toObj(option.axisPointer), 'label');\n  compatTextStyle(toObj(option.tooltip).axisPointer, 'label');\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1130:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Gradient = __webpack_require__(1019);\n\nfunction _default(ecModel) {\n  function encodeColor(seriesModel) {\n    var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\n    var data = seriesModel.getData();\n    var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n    || seriesModel.getColorFromPalette(seriesModel.get('name')); // Default color\n    // FIXME Set color function or use the platte color\n\n    data.setVisual('color', color); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      if (typeof color === 'function' && !(color instanceof Gradient)) {\n        data.each(function (idx) {\n          data.setItemVisual(idx, 'color', color(seriesModel.getDataParams(idx)));\n        });\n      } // itemStyle in each data item\n\n\n      data.each(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        var color = itemModel.get(colorAccessPath, true);\n\n        if (color != null) {\n          data.setItemVisual(idx, 'color', color);\n        }\n      });\n    }\n  }\n\n  ecModel.eachRawSeries(encodeColor);\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1131:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar graphic = __webpack_require__(980);\n\nvar PI = Math.PI;\n/**\n * @param {module:echarts/ExtensionAPI} api\n * @param {Object} [opts]\n * @param {string} [opts.text]\n * @param {string} [opts.color]\n * @param {string} [opts.textColor]\n * @return {module:zrender/Element}\n */\n\nfunction _default(api, opts) {\n  opts = opts || {};\n  zrUtil.defaults(opts, {\n    text: 'loading',\n    color: '#c23531',\n    textColor: '#000',\n    maskColor: 'rgba(255, 255, 255, 0.8)',\n    zlevel: 0\n  });\n  var mask = new graphic.Rect({\n    style: {\n      fill: opts.maskColor\n    },\n    zlevel: opts.zlevel,\n    z: 10000\n  });\n  var arc = new graphic.Arc({\n    shape: {\n      startAngle: -PI / 2,\n      endAngle: -PI / 2 + 0.1,\n      r: 10\n    },\n    style: {\n      stroke: opts.color,\n      lineCap: 'round',\n      lineWidth: 5\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  var labelRect = new graphic.Rect({\n    style: {\n      fill: 'none',\n      text: opts.text,\n      textPosition: 'right',\n      textDistance: 10,\n      textFill: opts.textColor\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  arc.animateShape(true).when(1000, {\n    endAngle: PI * 3 / 2\n  }).start('circularInOut');\n  arc.animateShape(true).when(1000, {\n    startAngle: PI * 3 / 2\n  }).delay(300).start('circularInOut');\n  var group = new graphic.Group();\n  group.add(arc);\n  group.add(labelRect);\n  group.add(mask); // Inject resize\n\n  group.resize = function () {\n    var cx = api.getWidth() / 2;\n    var cy = api.getHeight() / 2;\n    arc.setShape({\n      cx: cx,\n      cy: cy\n    });\n    var r = arc.shape.r;\n    labelRect.setShape({\n      x: cx - r,\n      y: cy - r,\n      width: r * 2,\n      height: r * 2\n    });\n    mask.setShape({\n      x: 0,\n      y: 0,\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n  };\n\n  group.resize();\n  return group;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1132:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar createListFromArray = __webpack_require__(1016);\n\nvar axisHelper = __webpack_require__(996);\n\nvar axisModelCommonMixin = __webpack_require__(1028);\n\nvar Model = __webpack_require__(989);\n\nvar _completeDimensions = __webpack_require__(1004);\n\nexports.completeDimensions = _completeDimensions;\n\nvar _symbol = __webpack_require__(1003);\n\nexports.createSymbol = _symbol.createSymbol;\n\n/**\n * Create a muti dimension List structure from seriesModel.\n * @param  {module:echarts/model/Model} seriesModel\n * @return {module:echarts/data/List} list\n */\nfunction createList(seriesModel) {\n  var data = seriesModel.get('data');\n  return createListFromArray(data, seriesModel, seriesModel.ecModel);\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n */\n\n\n/**\n * Create scale\n * @param {Array.<number>} dataExtent\n * @param {Object|module:echarts/Model} option\n */\nfunction createScale(dataExtent, option) {\n  var axisModel = option;\n\n  if (!(option instanceof Model)) {\n    axisModel = new Model(option);\n    zrUtil.mixin(axisModel, axisModelCommonMixin);\n  }\n\n  var scale = axisHelper.createScaleByModel(axisModel);\n  scale.setExtent(dataExtent[0], dataExtent[1]);\n  axisHelper.niceScaleExtent(scale, axisModel);\n  return scale;\n}\n/**\n * Mixin common methods to axis model,\n *\n * Inlcude methods\n * `getFormattedLabels() => Array.<string>`\n * `getCategories() => Array.<string>`\n * `getMin(origin: boolean) => number`\n * `getMax(origin: boolean) => number`\n * `getNeedCrossZero() => boolean`\n * `setRange(start: number, end: number)`\n * `resetRange()`\n */\n\n\nfunction mixinAxisModelCommonMethods(Model) {\n  zrUtil.mixin(Model, axisModelCommonMixin);\n}\n\nexports.createList = createList;\nexports.createScale = createScale;\nexports.mixinAxisModelCommonMethods = mixinAxisModelCommonMethods;\n\n/***/ }),\n\n/***/ 1133:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar Scale = __webpack_require__(1014);\n\n/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n// FIXME only one data\nvar scaleProto = Scale.prototype;\nvar OrdinalScale = Scale.extend({\n  type: 'ordinal',\n  init: function (data, extent) {\n    this._data = data;\n    this._extent = extent || [0, data.length - 1];\n  },\n  parse: function (val) {\n    return typeof val === 'string' ? zrUtil.indexOf(this._data, val) // val might be float.\n    : Math.round(val);\n  },\n  contain: function (rank) {\n    rank = this.parse(rank);\n    return scaleProto.contain.call(this, rank) && this._data[rank] != null;\n  },\n\n  /**\n   * Normalize given rank or name to linear [0, 1]\n   * @param {number|string} [val]\n   * @return {number}\n   */\n  normalize: function (val) {\n    return scaleProto.normalize.call(this, this.parse(val));\n  },\n  scale: function (val) {\n    return Math.round(scaleProto.scale.call(this, val));\n  },\n\n  /**\n   * @return {Array}\n   */\n  getTicks: function () {\n    var ticks = [];\n    var extent = this._extent;\n    var rank = extent[0];\n\n    while (rank <= extent[1]) {\n      ticks.push(rank);\n      rank++;\n    }\n\n    return ticks;\n  },\n\n  /**\n   * Get item on rank n\n   * @param {number} n\n   * @return {string}\n   */\n  getLabel: function (n) {\n    return this._data[n];\n  },\n\n  /**\n   * @return {number}\n   */\n  count: function () {\n    return this._extent[1] - this._extent[0] + 1;\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    this.unionExtent(data.getDataExtent(dim, false));\n  },\n  niceTicks: zrUtil.noop,\n  niceExtent: zrUtil.noop\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nOrdinalScale.create = function () {\n  return new OrdinalScale();\n};\n\nvar _default = OrdinalScale;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1134:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar numberUtil = __webpack_require__(981);\n\nvar formatUtil = __webpack_require__(985);\n\nvar scaleHelper = __webpack_require__(1054);\n\nvar IntervalScale = __webpack_require__(1020);\n\n// [About UTC and local time zone]:\n// In most cases, `number.parseDate` will treat input data string as local time\n// (except time zone is specified in time string). And `format.formateTime` returns\n// local time by default. option.useUTC is false by default. This design have\n// concidered these common case:\n// (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n// in local time by default.\n// (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n// as its original time, without any time difference.\nvar intervalScaleProto = IntervalScale.prototype;\nvar mathCeil = Math.ceil;\nvar mathFloor = Math.floor;\nvar ONE_SECOND = 1000;\nvar ONE_MINUTE = ONE_SECOND * 60;\nvar ONE_HOUR = ONE_MINUTE * 60;\nvar ONE_DAY = ONE_HOUR * 24; // FIXME 公用？\n\nvar bisect = function (a, x, lo, hi) {\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n\n    if (a[mid][1] < x) {\n      lo = mid + 1;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return lo;\n};\n/**\n * @alias module:echarts/coord/scale/Time\n * @constructor\n */\n\n\nvar TimeScale = IntervalScale.extend({\n  type: 'time',\n\n  /**\n   * @override\n   */\n  getLabel: function (val) {\n    var stepLvl = this._stepLvl;\n    var date = new Date(val);\n    return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n  },\n\n  /**\n   * @override\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      // Expand extent\n      extent[0] -= ONE_DAY;\n      extent[1] += ONE_DAY;\n    } // If there are no data and extent are [Infinity, -Infinity]\n\n\n    if (extent[1] === -Infinity && extent[0] === Infinity) {\n      var d = new Date();\n      extent[1] = +new Date(d.getFullYear(), d.getMonth(), d.getDate());\n      extent[0] = extent[1] - ONE_DAY;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n    }\n  },\n\n  /**\n   * @override\n   */\n  niceTicks: function (approxTickNum, minInterval, maxInterval) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n    var approxInterval = span / approxTickNum;\n\n    if (minInterval != null && approxInterval < minInterval) {\n      approxInterval = minInterval;\n    }\n\n    if (maxInterval != null && approxInterval > maxInterval) {\n      approxInterval = maxInterval;\n    }\n\n    var scaleLevelsLen = scaleLevels.length;\n    var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n    var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n    var interval = level[1]; // Same with interval scale if span is much larger than 1 year\n\n    if (level[0] === 'year') {\n      var yearSpan = span / interval; // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n      // var niceYearSpan = numberUtil.nice(yearSpan, false);\n\n      var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n      interval *= yearStep;\n    }\n\n    var timezoneOffset = this.getSetting('useUTC') ? 0 : new Date(+extent[0] || +extent[1]).getTimezoneOffset() * 60 * 1000;\n    var niceExtent = [Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset), Math.round(mathFloor((extent[1] - timezoneOffset) / interval) * interval + timezoneOffset)];\n    scaleHelper.fixExtent(niceExtent, extent);\n    this._stepLvl = level; // Interval will be used in getTicks\n\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n  parse: function (val) {\n    // val might be float.\n    return +numberUtil.parseDate(val);\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  TimeScale.prototype[methodName] = function (val) {\n    return intervalScaleProto[methodName].call(this, this.parse(val));\n  };\n}); // Steps from d3\n\nvar scaleLevels = [// Format              interval\n['hh:mm:ss', ONE_SECOND], // 1s\n['hh:mm:ss', ONE_SECOND * 5], // 5s\n['hh:mm:ss', ONE_SECOND * 10], // 10s\n['hh:mm:ss', ONE_SECOND * 15], // 15s\n['hh:mm:ss', ONE_SECOND * 30], // 30s\n['hh:mm\\nMM-dd', ONE_MINUTE], // 1m\n['hh:mm\\nMM-dd', ONE_MINUTE * 5], // 5m\n['hh:mm\\nMM-dd', ONE_MINUTE * 10], // 10m\n['hh:mm\\nMM-dd', ONE_MINUTE * 15], // 15m\n['hh:mm\\nMM-dd', ONE_MINUTE * 30], // 30m\n['hh:mm\\nMM-dd', ONE_HOUR], // 1h\n['hh:mm\\nMM-dd', ONE_HOUR * 2], // 2h\n['hh:mm\\nMM-dd', ONE_HOUR * 6], // 6h\n['hh:mm\\nMM-dd', ONE_HOUR * 12], // 12h\n['MM-dd\\nyyyy', ONE_DAY], // 1d\n['MM-dd\\nyyyy', ONE_DAY * 2], // 2d\n['MM-dd\\nyyyy', ONE_DAY * 3], // 3d\n['MM-dd\\nyyyy', ONE_DAY * 4], // 4d\n['MM-dd\\nyyyy', ONE_DAY * 5], // 5d\n['MM-dd\\nyyyy', ONE_DAY * 6], // 6d\n['week', ONE_DAY * 7], // 7d\n['MM-dd\\nyyyy', ONE_DAY * 10], // 10d\n['week', ONE_DAY * 14], // 2w\n['week', ONE_DAY * 21], // 3w\n['month', ONE_DAY * 31], // 1M\n['week', ONE_DAY * 42], // 6w\n['month', ONE_DAY * 62], // 2M\n['week', ONE_DAY * 42], // 10w\n['quarter', ONE_DAY * 380 / 4], // 3M\n['month', ONE_DAY * 31 * 4], // 4M\n['month', ONE_DAY * 31 * 5], // 5M\n['half-year', ONE_DAY * 380 / 2], // 6M\n['month', ONE_DAY * 31 * 8], // 8M\n['month', ONE_DAY * 31 * 10], // 10M\n['year', ONE_DAY * 380] // 1Y\n];\n/**\n * @param {module:echarts/model/Model}\n * @return {module:echarts/scale/Time}\n */\n\nTimeScale.create = function (model) {\n  return new TimeScale({\n    useUTC: model.ecModel.get('useUTC')\n  });\n};\n\nvar _default = TimeScale;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1135:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar Scale = __webpack_require__(1014);\n\nvar numberUtil = __webpack_require__(981);\n\nvar IntervalScale = __webpack_require__(1020);\n\n/**\n * Log scale\n * @module echarts/scale/Log\n */\n// Use some method of IntervalScale\nvar scaleProto = Scale.prototype;\nvar intervalScaleProto = IntervalScale.prototype;\nvar getPrecisionSafe = numberUtil.getPrecisionSafe;\nvar roundingErrorFix = numberUtil.round;\nvar mathFloor = Math.floor;\nvar mathCeil = Math.ceil;\nvar mathPow = Math.pow;\nvar mathLog = Math.log;\nvar LogScale = Scale.extend({\n  type: 'log',\n  base: 10,\n  $constructor: function () {\n    Scale.apply(this, arguments);\n    this._originalScale = new IntervalScale();\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    var originalScale = this._originalScale;\n    var extent = this._extent;\n    var originalExtent = originalScale.getExtent();\n    return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n      var powVal = numberUtil.round(mathPow(this.base, val)); // Fix #4158\n\n      powVal = val === extent[0] && originalScale.__fixMin ? fixRoundingError(powVal, originalExtent[0]) : powVal;\n      powVal = val === extent[1] && originalScale.__fixMax ? fixRoundingError(powVal, originalExtent[1]) : powVal;\n      return powVal;\n    }, this);\n  },\n\n  /**\n   * @param {number} val\n   * @return {string}\n   */\n  getLabel: intervalScaleProto.getLabel,\n\n  /**\n   * @param  {number} val\n   * @return {number}\n   */\n  scale: function (val) {\n    val = scaleProto.scale.call(this, val);\n    return mathPow(this.base, val);\n  },\n\n  /**\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var base = this.base;\n    start = mathLog(start) / mathLog(base);\n    end = mathLog(end) / mathLog(base);\n    intervalScaleProto.setExtent.call(this, start, end);\n  },\n\n  /**\n   * @return {number} end\n   */\n  getExtent: function () {\n    var base = this.base;\n    var extent = scaleProto.getExtent.call(this);\n    extent[0] = mathPow(base, extent[0]);\n    extent[1] = mathPow(base, extent[1]); // Fix #4158\n\n    var originalScale = this._originalScale;\n    var originalExtent = originalScale.getExtent();\n    originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n    originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n    return extent;\n  },\n\n  /**\n   * @param  {Array.<number>} extent\n   */\n  unionExtent: function (extent) {\n    this._originalScale.unionExtent(extent);\n\n    var base = this.base;\n    extent[0] = mathLog(extent[0]) / mathLog(base);\n    extent[1] = mathLog(extent[1]) / mathLog(base);\n    scaleProto.unionExtent.call(this, extent);\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    this.unionExtent(data.getDataExtent(dim, true, function (val) {\n      return val > 0;\n    }));\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   * @param  {number} [approxTickNum = 10] Given approx tick number\n   */\n  niceTicks: function (approxTickNum) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (span === Infinity || span <= 0) {\n      return;\n    }\n\n    var interval = numberUtil.quantity(span);\n    var err = approxTickNum / span * interval; // Filter ticks to get closer to the desired count.\n\n    if (err <= 0.5) {\n      interval *= 10;\n    } // Interval should be integer\n\n\n    while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n      interval *= 10;\n    }\n\n    var niceExtent = [numberUtil.round(mathCeil(extent[0] / interval) * interval), numberUtil.round(mathFloor(extent[1] / interval) * interval)];\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @override\n   */\n  niceExtent: function (opt) {\n    intervalScaleProto.niceExtent.call(this, opt);\n    var originalScale = this._originalScale;\n    originalScale.__fixMin = opt.fixMin;\n    originalScale.__fixMax = opt.fixMax;\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  LogScale.prototype[methodName] = function (val) {\n    val = mathLog(val) / mathLog(this.base);\n    return scaleProto[methodName].call(this, val);\n  };\n});\n\nLogScale.create = function () {\n  return new LogScale();\n};\n\nfunction fixRoundingError(val, originalVal) {\n  return roundingErrorFix(val, getPrecisionSafe(originalVal));\n}\n\nvar _default = LogScale;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1136:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar modelUtil = __webpack_require__(982);\n\nvar modelHelper = __webpack_require__(1015);\n\nvar findPointFromSeries = __webpack_require__(1055);\n\nvar each = zrUtil.each;\nvar curry = zrUtil.curry;\nvar get = modelUtil.makeGetter();\n/**\n * Basic logic: check all axis, if they do not demand show/highlight,\n * then hide/downplay them.\n *\n * @param {Object} coordSysAxesInfo\n * @param {Object} payload\n * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n * @param {Object} [payload.dataIndex] finder, restrict target axes.\n * @param {Object} [payload.axesInfo] finder, restrict target axes.\n *        [{\n *          axisDim: 'x'|'y'|'angle'|...,\n *          axisIndex: ...,\n *          value: ...\n *        }, ...]\n * @param {Function} [payload.dispatchAction]\n * @param {Object} [payload.tooltipOption]\n * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n *        which can be specified in dispatchAction\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n * @return {Object} content of event obj for echarts.connect.\n */\n\nfunction _default(payload, ecModel, api) {\n  var currTrigger = payload.currTrigger;\n  var point = [payload.x, payload.y];\n  var finder = payload;\n  var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n  var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo; // Pending\n  // See #6121. But we are not able to reproduce it yet.\n\n  if (!coordSysAxesInfo) {\n    return;\n  }\n\n  if (illegalPoint(point)) {\n    // Used in the default behavior of `connection`: use the sample seriesIndex\n    // and dataIndex. And also used in the tooltipView trigger.\n    point = findPointFromSeries({\n      seriesIndex: finder.seriesIndex,\n      // Do not use dataIndexInside from other ec instance.\n      // FIXME: auto detect it?\n      dataIndex: finder.dataIndex\n    }, ecModel).point;\n  }\n\n  var isIllegalPoint = illegalPoint(point); // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n  // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n  // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n  // and dataIndex.\n\n  var inputAxesInfo = finder.axesInfo;\n  var axesInfo = coordSysAxesInfo.axesInfo;\n  var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n  var outputFinder = {};\n  var showValueMap = {};\n  var dataByCoordSys = {\n    list: [],\n    map: {}\n  };\n  var updaters = {\n    showPointer: curry(showPointer, showValueMap),\n    showTooltip: curry(showTooltip, dataByCoordSys)\n  }; // Process for triggered axes.\n\n  each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n    // If a point given, it must be contained by the coordinate system.\n    var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n    each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n      var axis = axisInfo.axis;\n      var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo); // If no inputAxesInfo, no axis is restricted.\n\n      if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n        var val = inputAxisInfo && inputAxisInfo.value;\n\n        if (val == null && !isIllegalPoint) {\n          val = axis.pointToData(point);\n        }\n\n        val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n      }\n    });\n  }); // Process for linked axes.\n\n  var linkTriggers = {};\n  each(axesInfo, function (tarAxisInfo, tarKey) {\n    var linkGroup = tarAxisInfo.linkGroup; // If axis has been triggered in the previous stage, it should not be triggered by link.\n\n    if (linkGroup && !showValueMap[tarKey]) {\n      each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n        var srcValItem = showValueMap[srcKey]; // If srcValItem exist, source axis is triggered, so link to target axis.\n\n        if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n          var val = srcValItem.value;\n          linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo))));\n          linkTriggers[tarAxisInfo.key] = val;\n        }\n      });\n    }\n  });\n  each(linkTriggers, function (val, tarKey) {\n    processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n  });\n  updateModelActually(showValueMap, axesInfo, outputFinder);\n  dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n  dispatchHighDownActually(axesInfo, dispatchAction, api);\n  return outputFinder;\n}\n\nfunction processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n  var axis = axisInfo.axis;\n\n  if (axis.scale.isBlank() || !axis.containData(newValue)) {\n    return;\n  }\n\n  if (!axisInfo.involveSeries) {\n    updaters.showPointer(axisInfo, newValue);\n    return;\n  } // Heavy calculation. So put it after axis.containData checking.\n\n\n  var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n  var payloadBatch = payloadInfo.payloadBatch;\n  var snapToValue = payloadInfo.snapToValue; // Fill content of event obj for echarts.connect.\n  // By defualt use the first involved series data as a sample to connect.\n\n  if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n    zrUtil.extend(outputFinder, payloadBatch[0]);\n  } // If no linkSource input, this process is for collecting link\n  // target, where snap should not be accepted.\n\n\n  if (!dontSnap && axisInfo.snap) {\n    if (axis.containData(snapToValue) && snapToValue != null) {\n      newValue = snapToValue;\n    }\n  }\n\n  updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder); // Tooltip should always be snapToValue, otherwise there will be\n  // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n\n  updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n}\n\nfunction buildPayloadsBySeries(value, axisInfo) {\n  var axis = axisInfo.axis;\n  var dim = axis.dim;\n  var snapToValue = value;\n  var payloadBatch = [];\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n  each(axisInfo.seriesModels, function (series, idx) {\n    var dataDim = series.coordDimToDataDim(dim);\n    var seriesNestestValue;\n    var dataIndices;\n\n    if (series.getAxisTooltipData) {\n      var result = series.getAxisTooltipData(dataDim, value, axis);\n      dataIndices = result.dataIndices;\n      seriesNestestValue = result.nestestValue;\n    } else {\n      dataIndices = series.getData().indicesOfNearest(dataDim[0], value, // Add a threshold to avoid find the wrong dataIndex\n      // when data length is not same.\n      false, axis.type === 'category' ? 0.5 : null);\n\n      if (!dataIndices.length) {\n        return;\n      }\n\n      seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n    }\n\n    if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n      return;\n    }\n\n    var diff = value - seriesNestestValue;\n    var dist = Math.abs(diff); // Consider category case\n\n    if (dist <= minDist) {\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        snapToValue = seriesNestestValue;\n        payloadBatch.length = 0;\n      }\n\n      each(dataIndices, function (dataIndex) {\n        payloadBatch.push({\n          seriesIndex: series.seriesIndex,\n          dataIndexInside: dataIndex,\n          dataIndex: series.getData().getRawIndex(dataIndex)\n        });\n      });\n    }\n  });\n  return {\n    payloadBatch: payloadBatch,\n    snapToValue: snapToValue\n  };\n}\n\nfunction showPointer(showValueMap, axisInfo, value, payloadBatch) {\n  showValueMap[axisInfo.key] = {\n    value: value,\n    payloadBatch: payloadBatch\n  };\n}\n\nfunction showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n  var payloadBatch = payloadInfo.payloadBatch;\n  var axis = axisInfo.axis;\n  var axisModel = axis.model;\n  var axisPointerModel = axisInfo.axisPointerModel; // If no data, do not create anything in dataByCoordSys,\n  // whose length will be used to judge whether dispatch action.\n\n  if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n    return;\n  }\n\n  var coordSysModel = axisInfo.coordSys.model;\n  var coordSysKey = modelHelper.makeKey(coordSysModel);\n  var coordSysItem = dataByCoordSys.map[coordSysKey];\n\n  if (!coordSysItem) {\n    coordSysItem = dataByCoordSys.map[coordSysKey] = {\n      coordSysId: coordSysModel.id,\n      coordSysIndex: coordSysModel.componentIndex,\n      coordSysType: coordSysModel.type,\n      coordSysMainType: coordSysModel.mainType,\n      dataByAxis: []\n    };\n    dataByCoordSys.list.push(coordSysItem);\n  }\n\n  coordSysItem.dataByAxis.push({\n    axisDim: axis.dim,\n    axisIndex: axisModel.componentIndex,\n    axisType: axisModel.type,\n    axisId: axisModel.id,\n    value: value,\n    // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n    // depends that all models have been updated. So it should not be performed\n    // here. Considering axisPointerModel used here is volatile, which is hard\n    // to be retrieve in TooltipView, we prepare parameters here.\n    valueLabelOpt: {\n      precision: axisPointerModel.get('label.precision'),\n      formatter: axisPointerModel.get('label.formatter')\n    },\n    seriesDataIndices: payloadBatch.slice()\n  });\n}\n\nfunction updateModelActually(showValueMap, axesInfo, outputFinder) {\n  var outputAxesInfo = outputFinder.axesInfo = []; // Basic logic: If no 'show' required, 'hide' this axisPointer.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    var valItem = showValueMap[key];\n\n    if (valItem) {\n      !axisInfo.useHandle && (option.status = 'show');\n      option.value = valItem.value; // For label formatter param and highlight.\n\n      option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n    } // When always show (e.g., handle used), remain\n    // original value and status.\n    else {\n        // If hide, value still need to be set, consider\n        // click legend to toggle axis blank.\n        !axisInfo.useHandle && (option.status = 'hide');\n      } // If status is 'hide', should be no info in payload.\n\n\n    option.status === 'show' && outputAxesInfo.push({\n      axisDim: axisInfo.axis.dim,\n      axisIndex: axisInfo.axis.model.componentIndex,\n      value: option.value\n    });\n  });\n}\n\nfunction dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n  // Basic logic: If no showTip required, hideTip will be dispatched.\n  if (illegalPoint(point) || !dataByCoordSys.list.length) {\n    dispatchAction({\n      type: 'hideTip'\n    });\n    return;\n  } // In most case only one axis (or event one series is used). It is\n  // convinient to fetch payload.seriesIndex and payload.dataIndex\n  // dirtectly. So put the first seriesIndex and dataIndex of the first\n  // axis on the payload.\n\n\n  var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n  dispatchAction({\n    type: 'showTip',\n    escapeConnect: true,\n    x: point[0],\n    y: point[1],\n    tooltipOption: payload.tooltipOption,\n    position: payload.position,\n    dataIndexInside: sampleItem.dataIndexInside,\n    dataIndex: sampleItem.dataIndex,\n    seriesIndex: sampleItem.seriesIndex,\n    dataByCoordSys: dataByCoordSys.list\n  });\n}\n\nfunction dispatchHighDownActually(axesInfo, dispatchAction, api) {\n  // FIXME\n  // highlight status modification shoule be a stage of main process?\n  // (Consider confilct (e.g., legend and axisPointer) and setOption)\n  var zr = api.getZr();\n  var highDownKey = 'axisPointerLastHighlights';\n  var lastHighlights = get(zr)[highDownKey] || {};\n  var newHighlights = get(zr)[highDownKey] = {}; // Update highlight/downplay status according to axisPointer model.\n  // Build hash map and remove duplicate incidentally.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n      var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n      newHighlights[key] = batchItem;\n    });\n  }); // Diff.\n\n  var toHighlight = [];\n  var toDownplay = [];\n  zrUtil.each(lastHighlights, function (batchItem, key) {\n    !newHighlights[key] && toDownplay.push(batchItem);\n  });\n  zrUtil.each(newHighlights, function (batchItem, key) {\n    !lastHighlights[key] && toHighlight.push(batchItem);\n  });\n  toDownplay.length && api.dispatchAction({\n    type: 'downplay',\n    escapeConnect: true,\n    batch: toDownplay\n  });\n  toHighlight.length && api.dispatchAction({\n    type: 'highlight',\n    escapeConnect: true,\n    batch: toHighlight\n  });\n}\n\nfunction findInputAxisInfo(inputAxesInfo, axisInfo) {\n  for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n    var inputAxisInfo = inputAxesInfo[i];\n\n    if (axisInfo.axis.dim === inputAxisInfo.axisDim && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex) {\n      return inputAxisInfo;\n    }\n  }\n}\n\nfunction makeMapperParam(axisInfo) {\n  var axisModel = axisInfo.axis.model;\n  var item = {};\n  var dim = item.axisDim = axisInfo.axis.dim;\n  item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n  item.axisName = item[dim + 'AxisName'] = axisModel.name;\n  item.axisId = item[dim + 'AxisId'] = axisModel.id;\n  return item;\n}\n\nfunction illegalPoint(point) {\n  return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1137:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(979);\n\nvar AxisPointerModel = echarts.extendComponentModel({\n  type: 'axisPointer',\n  coordSysAxesInfo: null,\n  defaultOption: {\n    // 'auto' means that show when triggered by tooltip or handle.\n    show: 'auto',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: null,\n    // set default in AxisPonterView.js\n    zlevel: 0,\n    z: 50,\n    type: 'line',\n    // axispointer triggered by tootip determine snap automatically,\n    // see `modelHelper`.\n    snap: false,\n    triggerTooltip: true,\n    value: null,\n    status: null,\n    // Init value depends on whether handle is used.\n    // [group0, group1, ...]\n    // Each group can be: {\n    //      mapper: function () {},\n    //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n    //      xAxisId: ...,\n    //      yAxisName: ...,\n    //      angleAxisIndex: ...\n    // }\n    // mapper: can be ignored.\n    //      input: {axisInfo, value}\n    //      output: {axisInfo, value}\n    link: [],\n    // Do not set 'auto' here, otherwise global animation: false\n    // will not effect at this axispointer.\n    animation: null,\n    animationDurationUpdate: 200,\n    lineStyle: {\n      color: '#aaa',\n      width: 1,\n      type: 'solid'\n    },\n    shadowStyle: {\n      color: 'rgba(150,150,150,0.3)'\n    },\n    label: {\n      show: true,\n      formatter: null,\n      // string | Function\n      precision: 'auto',\n      // Or a number like 0, 1, 2 ...\n      margin: 3,\n      color: '#fff',\n      padding: [5, 7, 5, 7],\n      backgroundColor: 'auto',\n      // default: axis line color\n      borderColor: null,\n      borderWidth: 0,\n      shadowBlur: 3,\n      shadowColor: '#aaa' // Considering applicability, common style should\n      // better not have shadowOffset.\n      // shadowOffsetX: 0,\n      // shadowOffsetY: 2\n\n    },\n    handle: {\n      show: false,\n      icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z',\n      // jshint ignore:line\n      size: 45,\n      // handle margin is from symbol center to axis, which is stable when circular move.\n      margin: 50,\n      // color: '#1b8bbd'\n      // color: '#2f4554'\n      color: '#333',\n      shadowBlur: 3,\n      shadowColor: '#aaa',\n      shadowOffsetX: 0,\n      shadowOffsetY: 2,\n      // For mobile performance\n      throttle: 40\n    }\n  }\n});\nvar _default = AxisPointerModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1138:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(979);\n\nvar globalListener = __webpack_require__(1056);\n\nvar AxisPointerView = echarts.extendComponentView({\n  type: 'axisPointer',\n  render: function (globalAxisPointerModel, ecModel, api) {\n    var globalTooltipModel = ecModel.getComponent('tooltip');\n    var triggerOn = globalAxisPointerModel.get('triggerOn') || globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click'; // Register global listener in AxisPointerView to enable\n    // AxisPointerView to be independent to Tooltip.\n\n    globalListener.register('axisPointer', api, function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none' && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)) {\n        dispatchAction({\n          type: 'updateAxisPointer',\n          currTrigger: currTrigger,\n          x: e && e.offsetX,\n          y: e && e.offsetY\n        });\n      }\n    });\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    globalListener.unregister(api.getZr(), 'axisPointer');\n    AxisPointerView.superApply(this._model, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    globalListener.unregister('axisPointer', api);\n    AxisPointerView.superApply(this._model, 'dispose', arguments);\n  }\n});\nvar _default = AxisPointerView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1139:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(979);\n\nvar _default = echarts.extendComponentModel({\n  type: 'tooltip',\n  dependencies: ['axisPointer'],\n  defaultOption: {\n    zlevel: 0,\n    z: 8,\n    show: true,\n    // tooltip主体内容\n    showContent: true,\n    // 'trigger' only works on coordinate system.\n    // 'item' | 'axis' | 'none'\n    trigger: 'item',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: 'mousemove|click',\n    alwaysShowContent: false,\n    displayMode: 'single',\n    // 'single' | 'multipleByCoordSys'\n    // 位置 {Array} | {Function}\n    // position: null\n    // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n    // align: null,\n    // verticalAlign: null,\n    // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n    confine: false,\n    // 内容格式器：{string}（Template） ¦ {Function}\n    // formatter: null\n    showDelay: 0,\n    // 隐藏延迟，单位ms\n    hideDelay: 100,\n    // 动画变换时间，单位s\n    transitionDuration: 0.4,\n    enterable: false,\n    // 提示背景颜色，默认为透明度为0.7的黑色\n    backgroundColor: 'rgba(50,50,50,0.7)',\n    // 提示边框颜色\n    borderColor: '#333',\n    // 提示边框圆角，单位px，默认为4\n    borderRadius: 4,\n    // 提示边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 提示内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // Extra css text\n    extraCssText: '',\n    // 坐标轴指示器，坐标轴触发有效\n    axisPointer: {\n      // 默认为直线\n      // 可选为：'line' | 'shadow' | 'cross'\n      type: 'line',\n      // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n      // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n      // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n      // 极坐标系会默认选择 angle 轴\n      axis: 'auto',\n      animation: 'auto',\n      animationDurationUpdate: 200,\n      animationEasingUpdate: 'exponentialOut',\n      crossStyle: {\n        color: '#999',\n        width: 1,\n        type: 'dashed',\n        // TODO formatter\n        textStyle: {} // lineStyle and shadowStyle should not be specified here,\n        // otherwise it will always override those styles on option.axisPointer.\n\n      }\n    },\n    textStyle: {\n      color: '#fff',\n      fontSize: 14\n    }\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1140:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(979);\n\nvar zrUtil = __webpack_require__(978);\n\nvar env = __webpack_require__(986);\n\nvar TooltipContent = __webpack_require__(1141);\n\nvar formatUtil = __webpack_require__(985);\n\nvar numberUtil = __webpack_require__(981);\n\nvar graphic = __webpack_require__(980);\n\nvar findPointFromSeries = __webpack_require__(1055);\n\nvar layoutUtil = __webpack_require__(990);\n\nvar Model = __webpack_require__(989);\n\nvar globalListener = __webpack_require__(1056);\n\nvar axisHelper = __webpack_require__(996);\n\nvar axisPointerViewHelper = __webpack_require__(1035);\n\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar parsePercent = numberUtil.parsePercent;\nvar proxyRect = new graphic.Rect({\n  shape: {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  }\n});\n\nvar _default = echarts.extendComponentView({\n  type: 'tooltip',\n  init: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    var tooltipContent = new TooltipContent(api.getDom(), api);\n    this._tooltipContent = tooltipContent;\n  },\n  render: function (tooltipModel, ecModel, api) {\n    if (env.node) {\n      return;\n    } // Reset\n\n\n    this.group.removeAll();\n    /**\n     * @private\n     * @type {module:echarts/component/tooltip/TooltipModel}\n     */\n\n    this._tooltipModel = tooltipModel;\n    /**\n     * @private\n     * @type {module:echarts/model/Global}\n     */\n\n    this._ecModel = ecModel;\n    /**\n     * @private\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this._api = api;\n    /**\n     * Should be cleaned when render.\n     * @private\n     * @type {Array.<Array.<Object>>}\n     */\n\n    this._lastDataByCoordSys = null;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.update();\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n    this._initGlobalListener();\n\n    this._keepShow();\n  },\n  _initGlobalListener: function () {\n    var tooltipModel = this._tooltipModel;\n    var triggerOn = tooltipModel.get('triggerOn');\n    globalListener.register('itemTooltip', this._api, bind(function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none') {\n        if (triggerOn.indexOf(currTrigger) >= 0) {\n          this._tryShow(e, dispatchAction);\n        } else if (currTrigger === 'leave') {\n          this._hide(dispatchAction);\n        }\n      }\n    }, this));\n  },\n  _keepShow: function () {\n    var tooltipModel = this._tooltipModel;\n    var ecModel = this._ecModel;\n    var api = this._api; // Try to keep the tooltip show when refreshing\n\n    if (this._lastX != null && this._lastY != null // When user is willing to control tooltip totally using API,\n    // self.manuallyShowTip({x, y}) might cause tooltip hide,\n    // which is not expected.\n    && tooltipModel.get('triggerOn') !== 'none') {\n      var self = this;\n      clearTimeout(this._refreshUpdateTimeout);\n      this._refreshUpdateTimeout = setTimeout(function () {\n        // Show tip next tick after other charts are rendered\n        // In case highlight action has wrong result\n        // FIXME\n        self.manuallyShowTip(tooltipModel, ecModel, api, {\n          x: self._lastX,\n          y: self._lastY\n        });\n      });\n    }\n  },\n\n  /**\n   * Show tip manually by\n   * dispatchAction({\n   *     type: 'showTip',\n   *     x: 10,\n   *     y: 10\n   * });\n   * Or\n   * dispatchAction({\n   *      type: 'showTip',\n   *      seriesIndex: 0,\n   *      dataIndex or dataIndexInside or name\n   * });\n   *\n   *  TODO Batch\n   */\n  manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n    if (payload.from === this.uid || env.node) {\n      return;\n    }\n\n    var dispatchAction = makeDispatchAction(payload, api); // Reset ticket\n\n    this._ticket = ''; // When triggered from axisPointer.\n\n    var dataByCoordSys = payload.dataByCoordSys;\n\n    if (payload.tooltip && payload.x != null && payload.y != null) {\n      var el = proxyRect;\n      el.position = [payload.x, payload.y];\n      el.update();\n      el.tooltip = payload.tooltip; // Manually show tooltip while view is not using zrender elements.\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        target: el\n      }, dispatchAction);\n    } else if (dataByCoordSys) {\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        event: {},\n        dataByCoordSys: payload.dataByCoordSys,\n        tooltipOption: payload.tooltipOption\n      }, dispatchAction);\n    } else if (payload.seriesIndex != null) {\n      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n        return;\n      }\n\n      var pointInfo = findPointFromSeries(payload, ecModel);\n      var cx = pointInfo.point[0];\n      var cy = pointInfo.point[1];\n\n      if (cx != null && cy != null) {\n        this._tryShow({\n          offsetX: cx,\n          offsetY: cy,\n          position: payload.position,\n          target: pointInfo.el,\n          event: {}\n        }, dispatchAction);\n      }\n    } else if (payload.x != null && payload.y != null) {\n      // FIXME\n      // should wrap dispatchAction like `axisPointer/globalListener` ?\n      api.dispatchAction({\n        type: 'updateAxisPointer',\n        x: payload.x,\n        y: payload.y\n      });\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        target: api.getZr().findHover(payload.x, payload.y).target,\n        event: {}\n      }, dispatchAction);\n    }\n  },\n  manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n    var tooltipContent = this._tooltipContent;\n\n    if (!this._alwaysShowContent) {\n      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n    }\n\n    this._lastX = this._lastY = null;\n\n    if (payload.from !== this.uid) {\n      this._hide(makeDispatchAction(payload, api));\n    }\n  },\n  // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n  // and tooltip.\n  _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n    var seriesIndex = payload.seriesIndex;\n    var dataIndex = payload.dataIndex;\n    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n      return;\n    }\n\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (!seriesModel) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model, tooltipModel]);\n\n    if (tooltipModel.get('trigger') !== 'axis') {\n      return;\n    }\n\n    api.dispatchAction({\n      type: 'updateAxisPointer',\n      seriesIndex: seriesIndex,\n      dataIndex: dataIndex,\n      position: payload.position\n    });\n    return true;\n  },\n  _tryShow: function (e, dispatchAction) {\n    var el = e.target;\n    var tooltipModel = this._tooltipModel;\n\n    if (!tooltipModel) {\n      return;\n    } // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n\n\n    this._lastX = e.offsetX;\n    this._lastY = e.offsetY;\n    var dataByCoordSys = e.dataByCoordSys;\n\n    if (dataByCoordSys && dataByCoordSys.length) {\n      this._showAxisTooltip(dataByCoordSys, e);\n    } // Always show item tooltip if mouse is on the element with dataIndex\n    else if (el && el.dataIndex != null) {\n        this._lastDataByCoordSys = null;\n\n        this._showSeriesItemTooltip(e, el, dispatchAction);\n      } // Tooltip provided directly. Like legend.\n      else if (el && el.tooltip) {\n          this._lastDataByCoordSys = null;\n\n          this._showComponentItemTooltip(e, el, dispatchAction);\n        } else {\n          this._lastDataByCoordSys = null;\n\n          this._hide(dispatchAction);\n        }\n  },\n  _showOrMove: function (tooltipModel, cb) {\n    // showDelay is used in this case: tooltip.enterable is set\n    // as true. User intent to move mouse into tooltip and click\n    // something. `showDelay` makes it easyer to enter the content\n    // but tooltip do not move immediately.\n    var delay = tooltipModel.get('showDelay');\n    cb = zrUtil.bind(cb, this);\n    clearTimeout(this._showTimout);\n    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\n  },\n  _showAxisTooltip: function (dataByCoordSys, e) {\n    var ecModel = this._ecModel;\n    var globalTooltipModel = this._tooltipModel;\n    var point = [e.offsetX, e.offsetY];\n    var singleDefaultHTML = [];\n    var singleParamsList = [];\n    var singleTooltipModel = buildTooltipModel([e.tooltipOption, globalTooltipModel]);\n    each(dataByCoordSys, function (itemCoordSys) {\n      // var coordParamList = [];\n      // var coordDefaultHTML = [];\n      // var coordTooltipModel = buildTooltipModel([\n      //     e.tooltipOption,\n      //     itemCoordSys.tooltipOption,\n      //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n      //     globalTooltipModel\n      // ]);\n      // var displayMode = coordTooltipModel.get('displayMode');\n      // var paramsList = displayMode === 'single' ? singleParamsList : [];\n      each(itemCoordSys.dataByAxis, function (item) {\n        var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n        var axisValue = item.value;\n        var seriesDefaultHTML = [];\n\n        if (!axisModel || axisValue == null) {\n          return;\n        }\n\n        var valueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, item.seriesDataIndices, item.valueLabelOpt);\n        zrUtil.each(item.seriesDataIndices, function (idxItem) {\n          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n          var dataIndex = idxItem.dataIndexInside;\n          var dataParams = series && series.getDataParams(dataIndex);\n          dataParams.axisDim = item.axisDim;\n          dataParams.axisIndex = item.axisIndex;\n          dataParams.axisType = item.axisType;\n          dataParams.axisId = item.axisId;\n          dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n          dataParams.axisValueLabel = valueLabel;\n\n          if (dataParams) {\n            singleParamsList.push(dataParams);\n            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n          }\n        }); // Default tooltip content\n        // FIXME\n        // (1) shold be the first data which has name?\n        // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n\n        var firstLine = valueLabel;\n        singleDefaultHTML.push((firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '') + seriesDefaultHTML.join('<br />'));\n      });\n    }, this); // In most case, the second axis is shown upper than the first one.\n\n    singleDefaultHTML.reverse();\n    singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n    var positionExpr = e.position;\n\n    this._showOrMove(singleTooltipModel, function () {\n      if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, singleParamsList);\n      } else {\n        this._showTooltipContent(singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(), point[0], point[1], positionExpr);\n      }\n    }); // Do not trigger events here, because this branch only be entered\n    // from dispatchAction.\n\n  },\n  _showSeriesItemTooltip: function (e, el, dispatchAction) {\n    var ecModel = this._ecModel; // Use dataModel in element if possible\n    // Used when mouseover on a element like markPoint or edge\n    // In which case, the data is not main data in series.\n\n    var seriesIndex = el.seriesIndex;\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex); // For example, graph link.\n\n    var dataModel = el.dataModel || seriesModel;\n    var dataIndex = el.dataIndex;\n    var dataType = el.dataType;\n    var data = dataModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model, this._tooltipModel]);\n    var tooltipTrigger = tooltipModel.get('trigger');\n\n    if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n      return;\n    }\n\n    var params = dataModel.getDataParams(dataIndex, dataType);\n    var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n    this._showOrMove(tooltipModel, function () {\n      this._showTooltipContent(tooltipModel, defaultHtml, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target);\n    }); // FIXME\n    // duplicated showtip if manuallyShowTip is called from dispatchAction.\n\n\n    dispatchAction({\n      type: 'showTip',\n      dataIndexInside: dataIndex,\n      dataIndex: data.getRawIndex(dataIndex),\n      seriesIndex: seriesIndex,\n      from: this.uid\n    });\n  },\n  _showComponentItemTooltip: function (e, el, dispatchAction) {\n    var tooltipOpt = el.tooltip;\n\n    if (typeof tooltipOpt === 'string') {\n      var content = tooltipOpt;\n      tooltipOpt = {\n        content: content,\n        // Fixed formatter\n        formatter: content\n      };\n    }\n\n    var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n    var defaultHtml = subTooltipModel.get('content');\n    var asyncTicket = Math.random(); // Do not check whether `trigger` is 'none' here, because `trigger`\n    // only works on cooridinate system. In fact, we have not found case\n    // that requires setting `trigger` nothing on component yet.\n\n    this._showOrMove(subTooltipModel, function () {\n      this._showTooltipContent(subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {}, asyncTicket, e.offsetX, e.offsetY, e.position, el);\n    }); // If not dispatch showTip, tip may be hide triggered by axis.\n\n\n    dispatchAction({\n      type: 'showTip',\n      from: this.uid\n    });\n  },\n  _showTooltipContent: function (tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el) {\n    // Reset ticket\n    this._ticket = '';\n\n    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n      return;\n    }\n\n    var tooltipContent = this._tooltipContent;\n    var formatter = tooltipModel.get('formatter');\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var html = defaultHtml;\n\n    if (formatter && typeof formatter === 'string') {\n      html = formatUtil.formatTpl(formatter, params, true);\n    } else if (typeof formatter === 'function') {\n      var callback = bind(function (cbTicket, html) {\n        if (cbTicket === this._ticket) {\n          tooltipContent.setContent(html);\n\n          this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n        }\n      }, this);\n      this._ticket = asyncTicket;\n      html = formatter(params, asyncTicket, callback);\n    }\n\n    tooltipContent.setContent(html);\n    tooltipContent.show(tooltipModel);\n\n    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n  },\n\n  /**\n   * @param  {string|Function|Array.<number>|Object} positionExpr\n   * @param  {number} x Mouse x\n   * @param  {number} y Mouse y\n   * @param  {boolean} confine Whether confine tooltip content in view rect.\n   * @param  {Object|<Array.<Object>} params\n   * @param  {module:zrender/Element} el target element\n   * @param  {module:echarts/ExtensionAPI} api\n   * @return {Array.<number>}\n   */\n  _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n    var viewWidth = this._api.getWidth();\n\n    var viewHeight = this._api.getHeight();\n\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var contentSize = content.getSize();\n    var align = tooltipModel.get('align');\n    var vAlign = tooltipModel.get('verticalAlign');\n    var rect = el && el.getBoundingRect().clone();\n    el && rect.applyTransform(el.transform);\n\n    if (typeof positionExpr === 'function') {\n      // Callback of position can be an array or a string specify the position\n      positionExpr = positionExpr([x, y], params, content.el, rect, {\n        viewSize: [viewWidth, viewHeight],\n        contentSize: contentSize.slice()\n      });\n    }\n\n    if (zrUtil.isArray(positionExpr)) {\n      x = parsePercent(positionExpr[0], viewWidth);\n      y = parsePercent(positionExpr[1], viewHeight);\n    } else if (zrUtil.isObject(positionExpr)) {\n      positionExpr.width = contentSize[0];\n      positionExpr.height = contentSize[1];\n      var layoutRect = layoutUtil.getLayoutRect(positionExpr, {\n        width: viewWidth,\n        height: viewHeight\n      });\n      x = layoutRect.x;\n      y = layoutRect.y;\n      align = null; // When positionExpr is left/top/right/bottom,\n      // align and verticalAlign will not work.\n\n      vAlign = null;\n    } // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n    else if (typeof positionExpr === 'string' && el) {\n        var pos = calcTooltipPosition(positionExpr, rect, contentSize);\n        x = pos[0];\n        y = pos[1];\n      } else {\n        var pos = refixTooltipPosition(x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\n        x = pos[0];\n        y = pos[1];\n      }\n\n    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n    if (tooltipModel.get('confine')) {\n      var pos = confineTooltipPosition(x, y, content.el, viewWidth, viewHeight);\n      x = pos[0];\n      y = pos[1];\n    }\n\n    content.moveTo(x, y);\n  },\n  // FIXME\n  // Should we remove this but leave this to user?\n  _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n    var lastCoordSys = this._lastDataByCoordSys;\n    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\n    contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n      var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n      contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n      contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n        var thisItem = thisDataByAxis[indexAxis] || {};\n        var lastIndices = lastItem.seriesDataIndices || [];\n        var newIndices = thisItem.seriesDataIndices || [];\n        contentNotChanged &= lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\n        contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n          var newIdxItem = newIndices[j];\n          contentNotChanged &= lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n        });\n      });\n    });\n    this._lastDataByCoordSys = dataByCoordSys;\n    return !!contentNotChanged;\n  },\n  _hide: function (dispatchAction) {\n    // Do not directly hideLater here, because this behavior may be prevented\n    // in dispatchAction when showTip is dispatched.\n    // FIXME\n    // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n    this._lastDataByCoordSys = null;\n    dispatchAction({\n      type: 'hideTip',\n      from: this.uid\n    });\n  },\n  dispose: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    this._tooltipContent.hide();\n\n    globalListener.unregister('itemTooltip', api);\n  }\n});\n/**\n * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n * From top to bottom. (the last one should be globalTooltipModel);\n */\n\n\nfunction buildTooltipModel(modelCascade) {\n  var resultModel = modelCascade.pop();\n\n  while (modelCascade.length) {\n    var tooltipOpt = modelCascade.pop();\n\n    if (tooltipOpt) {\n      if (tooltipOpt instanceof Model) {\n        tooltipOpt = tooltipOpt.get('tooltip', true);\n      } // In each data item tooltip can be simply write:\n      // {\n      //  value: 10,\n      //  tooltip: 'Something you need to know'\n      // }\n\n\n      if (typeof tooltipOpt === 'string') {\n        tooltipOpt = {\n          formatter: tooltipOpt\n        };\n      }\n\n      resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n    }\n  }\n\n  return resultModel;\n}\n\nfunction makeDispatchAction(payload, api) {\n  return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n}\n\nfunction refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n\n  if (gapH != null) {\n    if (x + width + gapH > viewWidth) {\n      x -= width + gapH;\n    } else {\n      x += gapH;\n    }\n  }\n\n  if (gapV != null) {\n    if (y + height + gapV > viewHeight) {\n      y -= height + gapV;\n    } else {\n      y += gapV;\n    }\n  }\n\n  return [x, y];\n}\n\nfunction confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n  x = Math.min(x + width, viewWidth) - width;\n  y = Math.min(y + height, viewHeight) - height;\n  x = Math.max(x, 0);\n  y = Math.max(y, 0);\n  return [x, y];\n}\n\nfunction getOuterSize(el) {\n  var width = el.clientWidth;\n  var height = el.clientHeight; // Consider browser compatibility.\n  // IE8 does not support getComputedStyle.\n\n  if (document.defaultView && document.defaultView.getComputedStyle) {\n    var stl = document.defaultView.getComputedStyle(el);\n\n    if (stl) {\n      width += parseInt(stl.paddingLeft, 10) + parseInt(stl.paddingRight, 10) + parseInt(stl.borderLeftWidth, 10) + parseInt(stl.borderRightWidth, 10);\n      height += parseInt(stl.paddingTop, 10) + parseInt(stl.paddingBottom, 10) + parseInt(stl.borderTopWidth, 10) + parseInt(stl.borderBottomWidth, 10);\n    }\n  }\n\n  return {\n    width: width,\n    height: height\n  };\n}\n\nfunction calcTooltipPosition(position, rect, contentSize) {\n  var domWidth = contentSize[0];\n  var domHeight = contentSize[1];\n  var gap = 5;\n  var x = 0;\n  var y = 0;\n  var rectWidth = rect.width;\n  var rectHeight = rect.height;\n\n  switch (position) {\n    case 'inside':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'top':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y - domHeight - gap;\n      break;\n\n    case 'bottom':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight + gap;\n      break;\n\n    case 'left':\n      x = rect.x - domWidth - gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'right':\n      x = rect.x + rectWidth + gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n  }\n\n  return [x, y];\n}\n\nfunction isCenterAlign(align) {\n  return align === 'center' || align === 'middle';\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1141:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar zrColor = __webpack_require__(1002);\n\nvar eventUtil = __webpack_require__(998);\n\nvar env = __webpack_require__(986);\n\nvar formatUtil = __webpack_require__(985);\n\nvar each = zrUtil.each;\nvar toCamelCase = formatUtil.toCamelCase;\nvar vendors = ['', '-webkit-', '-moz-', '-o-'];\nvar gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n/**\n * @param {number} duration\n * @return {string}\n * @inner\n */\n\nfunction assembleTransition(duration) {\n  var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n  var transitionText = 'left ' + duration + 's ' + transitionCurve + ',' + 'top ' + duration + 's ' + transitionCurve;\n  return zrUtil.map(vendors, function (vendorPrefix) {\n    return vendorPrefix + 'transition:' + transitionText;\n  }).join(';');\n}\n/**\n * @param {Object} textStyle\n * @return {string}\n * @inner\n */\n\n\nfunction assembleFont(textStyleModel) {\n  var cssText = [];\n  var fontSize = textStyleModel.get('fontSize');\n  var color = textStyleModel.getTextColor();\n  color && cssText.push('color:' + color);\n  cssText.push('font:' + textStyleModel.getFont());\n  fontSize && cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n  each(['decoration', 'align'], function (name) {\n    var val = textStyleModel.get(name);\n    val && cssText.push('text-' + name + ':' + val);\n  });\n  return cssText.join(';');\n}\n/**\n * @param {Object} tooltipModel\n * @return {string}\n * @inner\n */\n\n\nfunction assembleCssText(tooltipModel) {\n  var cssText = [];\n  var transitionDuration = tooltipModel.get('transitionDuration');\n  var backgroundColor = tooltipModel.get('backgroundColor');\n  var textStyleModel = tooltipModel.getModel('textStyle');\n  var padding = tooltipModel.get('padding'); // Animation transition. Do not animate when transitionDuration is 0.\n\n  transitionDuration && cssText.push(assembleTransition(transitionDuration));\n\n  if (backgroundColor) {\n    if (env.canvasSupported) {\n      cssText.push('background-Color:' + backgroundColor);\n    } else {\n      // for ie\n      cssText.push('background-Color:#' + zrColor.toHex(backgroundColor));\n      cssText.push('filter:alpha(opacity=70)');\n    }\n  } // Border style\n\n\n  each(['width', 'color', 'radius'], function (name) {\n    var borderName = 'border-' + name;\n    var camelCase = toCamelCase(borderName);\n    var val = tooltipModel.get(camelCase);\n    val != null && cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n  }); // Text style\n\n  cssText.push(assembleFont(textStyleModel)); // Padding\n\n  if (padding != null) {\n    cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n  }\n\n  return cssText.join(';') + ';';\n}\n/**\n * @alias module:echarts/component/tooltip/TooltipContent\n * @constructor\n */\n\n\nfunction TooltipContent(container, api) {\n  var el = document.createElement('div');\n  var zr = this._zr = api.getZr();\n  this.el = el;\n  this._x = api.getWidth() / 2;\n  this._y = api.getHeight() / 2;\n  container.appendChild(el);\n  this._container = container;\n  this._show = false;\n  /**\n   * @private\n   */\n\n  this._hideTimeout;\n  var self = this;\n\n  el.onmouseenter = function () {\n    // clear the timeout in hideLater and keep showing tooltip\n    if (self._enterable) {\n      clearTimeout(self._hideTimeout);\n      self._show = true;\n    }\n\n    self._inContent = true;\n  };\n\n  el.onmousemove = function (e) {\n    e = e || window.event;\n\n    if (!self._enterable) {\n      // Try trigger zrender event to avoid mouse\n      // in and out shape too frequently\n      var handler = zr.handler;\n      eventUtil.normalizeEvent(container, e, true);\n      handler.dispatch('mousemove', e);\n    }\n  };\n\n  el.onmouseleave = function () {\n    if (self._enterable) {\n      if (self._show) {\n        self.hideLater(self._hideDelay);\n      }\n    }\n\n    self._inContent = false;\n  };\n}\n\nTooltipContent.prototype = {\n  constructor: TooltipContent,\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  _enterable: true,\n\n  /**\n   * Update when tooltip is rendered\n   */\n  update: function () {\n    // FIXME\n    // Move this logic to ec main?\n    var container = this._container;\n    var stl = container.currentStyle || document.defaultView.getComputedStyle(container);\n    var domStyle = container.style;\n\n    if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n      domStyle.position = 'relative';\n    } // Hide the tooltip\n    // PENDING\n    // this.hide();\n\n  },\n  show: function (tooltipModel) {\n    clearTimeout(this._hideTimeout);\n    var el = this.el;\n    el.style.cssText = gCssText + assembleCssText(tooltipModel) // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n    + ';left:' + this._x + 'px;top:' + this._y + 'px;' + (tooltipModel.get('extraCssText') || '');\n    el.style.display = el.innerHTML ? 'block' : 'none';\n    this._show = true;\n  },\n  setContent: function (content) {\n    this.el.innerHTML = content == null ? '' : content;\n  },\n  setEnterable: function (enterable) {\n    this._enterable = enterable;\n  },\n  getSize: function () {\n    var el = this.el;\n    return [el.clientWidth, el.clientHeight];\n  },\n  moveTo: function (x, y) {\n    // xy should be based on canvas root. But tooltipContent is\n    // the sibling of canvas root. So padding of ec container\n    // should be considered here.\n    var zr = this._zr;\n    var viewportRootOffset;\n\n    if (zr && zr.painter && (viewportRootOffset = zr.painter.getViewportRootOffset())) {\n      x += viewportRootOffset.offsetLeft;\n      y += viewportRootOffset.offsetTop;\n    }\n\n    var style = this.el.style;\n    style.left = x + 'px';\n    style.top = y + 'px';\n    this._x = x;\n    this._y = y;\n  },\n  hide: function () {\n    this.el.style.display = 'none';\n    this._show = false;\n  },\n  hideLater: function (time) {\n    if (this._show && !(this._inContent && this._enterable)) {\n      if (time) {\n        this._hideDelay = time; // Set show false to avoid invoke hideLater mutiple times\n\n        this._show = false;\n        this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n      } else {\n        this.hide();\n      }\n    }\n  },\n  isShow: function () {\n    return this._show;\n  }\n};\nvar _default = TooltipContent;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1142:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(979);\n\nvar zrUtil = __webpack_require__(978);\n\nfunction legendSelectActionHandler(methodName, payload, ecModel) {\n  var selectedMap = {};\n  var isToggleSelect = methodName === 'toggleSelected';\n  var isSelected; // Update all legend components\n\n  ecModel.eachComponent('legend', function (legendModel) {\n    if (isToggleSelect && isSelected != null) {\n      // Force other legend has same selected status\n      // Or the first is toggled to true and other are toggled to false\n      // In the case one legend has some item unSelected in option. And if other legend\n      // doesn't has the item, they will assume it is selected.\n      legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n    } else {\n      legendModel[methodName](payload.name);\n      isSelected = legendModel.isSelected(payload.name);\n    }\n\n    var legendData = legendModel.getData();\n    zrUtil.each(legendData, function (model) {\n      var name = model.get('name'); // Wrap element\n\n      if (name === '\\n' || name === '') {\n        return;\n      }\n\n      var isItemSelected = legendModel.isSelected(name);\n\n      if (selectedMap.hasOwnProperty(name)) {\n        // Unselected if any legend is unselected\n        selectedMap[name] = selectedMap[name] && isItemSelected;\n      } else {\n        selectedMap[name] = isItemSelected;\n      }\n    });\n  }); // Return the event explicitly\n\n  return {\n    name: payload.name,\n    selected: selectedMap\n  };\n}\n/**\n * @event legendToggleSelect\n * @type {Object}\n * @property {string} type 'legendToggleSelect'\n * @property {string} [from]\n * @property {string} name Series name or data item name\n */\n\n\necharts.registerAction('legendToggleSelect', 'legendselectchanged', zrUtil.curry(legendSelectActionHandler, 'toggleSelected'));\n/**\n * @event legendSelect\n * @type {Object}\n * @property {string} type 'legendSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendSelect', 'legendselected', zrUtil.curry(legendSelectActionHandler, 'select'));\n/**\n * @event legendUnSelect\n * @type {Object}\n * @property {string} type 'legendUnSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendUnSelect', 'legendunselected', zrUtil.curry(legendSelectActionHandler, 'unSelect'));\n\n/***/ }),\n\n/***/ 1143:\n/***/ (function(module, exports) {\n\nfunction _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (legendModels && legendModels.length) {\n    ecModel.filterSeries(function (series) {\n      // If in any legend component the status is not selected.\n      // Because in legend series is assumed selected when it is not in the legend data.\n      for (var i = 0; i < legendModels.length; i++) {\n        if (!legendModels[i].isSelected(series.name)) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1146:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(979);\n\nvar zrUtil = __webpack_require__(978);\n\nvar featureManager = __webpack_require__(997);\n\nvar ToolboxModel = echarts.extendComponentModel({\n  type: 'toolbox',\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n  mergeDefaultAndTheme: function (option) {\n    ToolboxModel.superApply(this, 'mergeDefaultAndTheme', arguments);\n    zrUtil.each(this.option.feature, function (featureOpt, featureName) {\n      var Feature = featureManager.get(featureName);\n      Feature && zrUtil.merge(featureOpt, Feature.defaultOption);\n    });\n  },\n  defaultOption: {\n    show: true,\n    z: 6,\n    zlevel: 0,\n    orient: 'horizontal',\n    left: 'right',\n    top: 'top',\n    // right\n    // bottom\n    backgroundColor: 'transparent',\n    borderColor: '#ccc',\n    borderRadius: 0,\n    borderWidth: 0,\n    padding: 5,\n    itemSize: 15,\n    itemGap: 8,\n    showTitle: true,\n    iconStyle: {\n      normal: {\n        borderColor: '#666',\n        color: 'none'\n      },\n      emphasis: {\n        borderColor: '#3E98C5'\n      } // textStyle: {},\n      // feature\n\n    }\n  }\n});\nvar _default = ToolboxModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1147:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(979);\n\nvar zrUtil = __webpack_require__(978);\n\nvar textContain = __webpack_require__(993);\n\nvar featureManager = __webpack_require__(997);\n\nvar graphic = __webpack_require__(980);\n\nvar Model = __webpack_require__(989);\n\nvar DataDiffer = __webpack_require__(1013);\n\nvar listComponentHelper = __webpack_require__(1057);\n\nvar _default = echarts.extendComponentView({\n  type: 'toolbox',\n  render: function (toolboxModel, ecModel, api, payload) {\n    var group = this.group;\n    group.removeAll();\n\n    if (!toolboxModel.get('show')) {\n      return;\n    }\n\n    var itemSize = +toolboxModel.get('itemSize');\n    var featureOpts = toolboxModel.get('feature') || {};\n    var features = this._features || (this._features = {});\n    var featureNames = [];\n    zrUtil.each(featureOpts, function (opt, name) {\n      featureNames.push(name);\n    });\n    new DataDiffer(this._featureNames || [], featureNames).add(processFeature).update(processFeature).remove(zrUtil.curry(processFeature, null)).execute(); // Keep for diff.\n\n    this._featureNames = featureNames;\n\n    function processFeature(newIndex, oldIndex) {\n      var featureName = featureNames[newIndex];\n      var oldName = featureNames[oldIndex];\n      var featureOpt = featureOpts[featureName];\n      var featureModel = new Model(featureOpt, toolboxModel, toolboxModel.ecModel);\n      var feature;\n\n      if (featureName && !oldName) {\n        // Create\n        if (isUserFeatureName(featureName)) {\n          feature = {\n            model: featureModel,\n            onclick: featureModel.option.onclick,\n            featureName: featureName\n          };\n        } else {\n          var Feature = featureManager.get(featureName);\n\n          if (!Feature) {\n            return;\n          }\n\n          feature = new Feature(featureModel, ecModel, api);\n        }\n\n        features[featureName] = feature;\n      } else {\n        feature = features[oldName]; // If feature does not exsit.\n\n        if (!feature) {\n          return;\n        }\n\n        feature.model = featureModel;\n        feature.ecModel = ecModel;\n        feature.api = api;\n      }\n\n      if (!featureName && oldName) {\n        feature.dispose && feature.dispose(ecModel, api);\n        return;\n      }\n\n      if (!featureModel.get('show') || feature.unusable) {\n        feature.remove && feature.remove(ecModel, api);\n        return;\n      }\n\n      createIconPaths(featureModel, feature, featureName);\n\n      featureModel.setIconStatus = function (iconName, status) {\n        var option = this.option;\n        var iconPaths = this.iconPaths;\n        option.iconStatus = option.iconStatus || {};\n        option.iconStatus[iconName] = status; // FIXME\n\n        iconPaths[iconName] && iconPaths[iconName].trigger(status);\n      };\n\n      if (feature.render) {\n        feature.render(featureModel, ecModel, api, payload);\n      }\n    }\n\n    function createIconPaths(featureModel, feature, featureName) {\n      var iconStyleModel = featureModel.getModel('iconStyle'); // If one feature has mutiple icon. they are orginaized as\n      // {\n      //     icon: {\n      //         foo: '',\n      //         bar: ''\n      //     },\n      //     title: {\n      //         foo: '',\n      //         bar: ''\n      //     }\n      // }\n\n      var icons = feature.getIcons ? feature.getIcons() : featureModel.get('icon');\n      var titles = featureModel.get('title') || {};\n\n      if (typeof icons === 'string') {\n        var icon = icons;\n        var title = titles;\n        icons = {};\n        titles = {};\n        icons[featureName] = icon;\n        titles[featureName] = title;\n      }\n\n      var iconPaths = featureModel.iconPaths = {};\n      zrUtil.each(icons, function (iconStr, iconName) {\n        var path = graphic.createIcon(iconStr, {}, {\n          x: -itemSize / 2,\n          y: -itemSize / 2,\n          width: itemSize,\n          height: itemSize\n        });\n        path.setStyle(iconStyleModel.getModel('normal').getItemStyle());\n        path.hoverStyle = iconStyleModel.getModel('emphasis').getItemStyle();\n        graphic.setHoverStyle(path);\n\n        if (toolboxModel.get('showTitle')) {\n          path.__title = titles[iconName];\n          path.on('mouseover', function () {\n            // Should not reuse above hoverStyle, which might be modified.\n            var hoverStyle = iconStyleModel.getModel('emphasis').getItemStyle();\n            path.setStyle({\n              text: titles[iconName],\n              textPosition: hoverStyle.textPosition || 'bottom',\n              textFill: hoverStyle.fill || hoverStyle.stroke || '#000',\n              textAlign: hoverStyle.textAlign || 'center'\n            });\n          }).on('mouseout', function () {\n            path.setStyle({\n              textFill: null\n            });\n          });\n        }\n\n        path.trigger(featureModel.get('iconStatus.' + iconName) || 'normal');\n        group.add(path);\n        path.on('click', zrUtil.bind(feature.onclick, feature, ecModel, api, iconName));\n        iconPaths[iconName] = path;\n      });\n    }\n\n    listComponentHelper.layout(group, toolboxModel, api); // Render background after group is layout\n    // FIXME\n\n    group.add(listComponentHelper.makeBackground(group.getBoundingRect(), toolboxModel)); // Adjust icon title positions to avoid them out of screen\n\n    group.eachChild(function (icon) {\n      var titleText = icon.__title;\n      var hoverStyle = icon.hoverStyle; // May be background element\n\n      if (hoverStyle && titleText) {\n        var rect = textContain.getBoundingRect(titleText, textContain.makeFont(hoverStyle));\n        var offsetX = icon.position[0] + group.position[0];\n        var offsetY = icon.position[1] + group.position[1] + itemSize;\n        var needPutOnTop = false;\n\n        if (offsetY + rect.height > api.getHeight()) {\n          hoverStyle.textPosition = 'top';\n          needPutOnTop = true;\n        }\n\n        var topOffset = needPutOnTop ? -5 - rect.height : itemSize + 8;\n\n        if (offsetX + rect.width / 2 > api.getWidth()) {\n          hoverStyle.textPosition = ['100%', topOffset];\n          hoverStyle.textAlign = 'right';\n        } else if (offsetX - rect.width / 2 < 0) {\n          hoverStyle.textPosition = [0, topOffset];\n          hoverStyle.textAlign = 'left';\n        }\n      }\n    });\n  },\n  updateView: function (toolboxModel, ecModel, api, payload) {\n    zrUtil.each(this._features, function (feature) {\n      feature.updateView && feature.updateView(feature.model, ecModel, api, payload);\n    });\n  },\n  updateLayout: function (toolboxModel, ecModel, api, payload) {\n    zrUtil.each(this._features, function (feature) {\n      feature.updateLayout && feature.updateLayout(feature.model, ecModel, api, payload);\n    });\n  },\n  remove: function (ecModel, api) {\n    zrUtil.each(this._features, function (feature) {\n      feature.remove && feature.remove(ecModel, api);\n    });\n    this.group.removeAll();\n  },\n  dispose: function (ecModel, api) {\n    zrUtil.each(this._features, function (feature) {\n      feature.dispose && feature.dispose(ecModel, api);\n    });\n  }\n});\n\nfunction isUserFeatureName(featureName) {\n  return featureName.indexOf('my') === 0;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1148:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar env = __webpack_require__(986);\n\nvar lang = __webpack_require__(1005);\n\nvar featureManager = __webpack_require__(997);\n\nvar saveAsImageLang = lang.toolbox.saveAsImage;\n\nfunction SaveAsImage(model) {\n  this.model = model;\n}\n\nSaveAsImage.defaultOption = {\n  show: true,\n  icon: 'M4.7,22.9L29.3,45.5L54.7,23.4M4.6,43.6L4.6,58L53.8,58L53.8,43.6M29.2,45.1L29.2,0',\n  title: saveAsImageLang.title,\n  type: 'png',\n  // Default use option.backgroundColor\n  // backgroundColor: '#fff',\n  name: '',\n  excludeComponents: ['toolbox'],\n  pixelRatio: 1,\n  lang: saveAsImageLang.lang.slice()\n};\nSaveAsImage.prototype.unusable = !env.canvasSupported;\nvar proto = SaveAsImage.prototype;\n\nproto.onclick = function (ecModel, api) {\n  var model = this.model;\n  var title = model.get('name') || ecModel.get('title.0.text') || 'echarts';\n  var $a = document.createElement('a');\n  var type = model.get('type', true) || 'png';\n  $a.download = title + '.' + type;\n  $a.target = '_blank';\n  var url = api.getConnectedDataURL({\n    type: type,\n    backgroundColor: model.get('backgroundColor', true) || ecModel.get('backgroundColor') || '#fff',\n    excludeComponents: model.get('excludeComponents'),\n    pixelRatio: model.get('pixelRatio')\n  });\n  $a.href = url; // Chrome and Firefox\n\n  if (typeof MouseEvent === 'function' && !env.browser.ie && !env.browser.edge) {\n    var evt = new MouseEvent('click', {\n      view: window,\n      bubbles: true,\n      cancelable: false\n    });\n    $a.dispatchEvent(evt);\n  } // IE\n  else {\n      if (window.navigator.msSaveOrOpenBlob) {\n        var bstr = atob(url.split(',')[1]);\n        var n = bstr.length;\n        var u8arr = new Uint8Array(n);\n\n        while (n--) {\n          u8arr[n] = bstr.charCodeAt(n);\n        }\n\n        var blob = new Blob([u8arr]);\n        window.navigator.msSaveOrOpenBlob(blob, title + '.' + type);\n      } else {\n        var lang = model.get('lang');\n        var html = '' + '<body style=\"margin:0;\">' + '<img src=\"' + url + '\" style=\"max-width:100%;\" title=\"' + (lang && lang[0] || '') + '\" />' + '</body>';\n        var tab = window.open();\n        tab.document.write(html);\n      }\n    }\n};\n\nfeatureManager.register('saveAsImage', SaveAsImage);\nvar _default = SaveAsImage;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1149:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(979);\n\nvar zrUtil = __webpack_require__(978);\n\nvar lang = __webpack_require__(1005);\n\nvar featureManager = __webpack_require__(997);\n\nvar magicTypeLang = lang.toolbox.magicType;\n\nfunction MagicType(model) {\n  this.model = model;\n}\n\nMagicType.defaultOption = {\n  show: true,\n  type: [],\n  // Icon group\n  icon: {\n    line: 'M4.1,28.9h7.1l9.3-22l7.4,38l9.7-19.7l3,12.8h14.9M4.1,58h51.4',\n    bar: 'M6.7,22.9h10V48h-10V22.9zM24.9,13h10v35h-10V13zM43.2,2h10v46h-10V2zM3.1,58h53.7',\n    stack: 'M8.2,38.4l-8.4,4.1l30.6,15.3L60,42.5l-8.1-4.1l-21.5,11L8.2,38.4z M51.9,30l-8.1,4.2l-13.4,6.9l-13.9-6.9L8.2,30l-8.4,4.2l8.4,4.2l22.2,11l21.5-11l8.1-4.2L51.9,30z M51.9,21.7l-8.1,4.2L35.7,30l-5.3,2.8L24.9,30l-8.4-4.1l-8.3-4.2l-8.4,4.2L8.2,30l8.3,4.2l13.9,6.9l13.4-6.9l8.1-4.2l8.1-4.1L51.9,21.7zM30.4,2.2L-0.2,17.5l8.4,4.1l8.3,4.2l8.4,4.2l5.5,2.7l5.3-2.7l8.1-4.2l8.1-4.2l8.1-4.1L30.4,2.2z',\n    // jshint ignore:line\n    tiled: 'M2.3,2.2h22.8V25H2.3V2.2z M35,2.2h22.8V25H35V2.2zM2.3,35h22.8v22.8H2.3V35z M35,35h22.8v22.8H35V35z'\n  },\n  // `line`, `bar`, `stack`, `tiled`\n  title: zrUtil.clone(magicTypeLang.title),\n  option: {},\n  seriesIndex: {}\n};\nvar proto = MagicType.prototype;\n\nproto.getIcons = function () {\n  var model = this.model;\n  var availableIcons = model.get('icon');\n  var icons = {};\n  zrUtil.each(model.get('type'), function (type) {\n    if (availableIcons[type]) {\n      icons[type] = availableIcons[type];\n    }\n  });\n  return icons;\n};\n\nvar seriesOptGenreator = {\n  'line': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        type: 'line',\n        // Preserve data related option\n        data: seriesModel.get('data'),\n        stack: seriesModel.get('stack'),\n        markPoint: seriesModel.get('markPoint'),\n        markLine: seriesModel.get('markLine')\n      }, model.get('option.line') || {}, true);\n    }\n  },\n  'bar': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line') {\n      return zrUtil.merge({\n        id: seriesId,\n        type: 'bar',\n        // Preserve data related option\n        data: seriesModel.get('data'),\n        stack: seriesModel.get('stack'),\n        markPoint: seriesModel.get('markPoint'),\n        markLine: seriesModel.get('markLine')\n      }, model.get('option.bar') || {}, true);\n    }\n  },\n  'stack': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line' || seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        stack: '__ec_magicType_stack__'\n      }, model.get('option.stack') || {}, true);\n    }\n  },\n  'tiled': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line' || seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        stack: ''\n      }, model.get('option.tiled') || {}, true);\n    }\n  }\n};\nvar radioTypes = [['line', 'bar'], ['stack', 'tiled']];\n\nproto.onclick = function (ecModel, api, type) {\n  var model = this.model;\n  var seriesIndex = model.get('seriesIndex.' + type); // Not supported magicType\n\n  if (!seriesOptGenreator[type]) {\n    return;\n  }\n\n  var newOption = {\n    series: []\n  };\n\n  var generateNewSeriesTypes = function (seriesModel) {\n    var seriesType = seriesModel.subType;\n    var seriesId = seriesModel.id;\n    var newSeriesOpt = seriesOptGenreator[type](seriesType, seriesId, seriesModel, model);\n\n    if (newSeriesOpt) {\n      // PENDING If merge original option?\n      zrUtil.defaults(newSeriesOpt, seriesModel.option);\n      newOption.series.push(newSeriesOpt);\n    } // Modify boundaryGap\n\n\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.type === 'cartesian2d' && (type === 'line' || type === 'bar')) {\n      var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n\n      if (categoryAxis) {\n        var axisDim = categoryAxis.dim;\n        var axisType = axisDim + 'Axis';\n        var axisModel = ecModel.queryComponents({\n          mainType: axisType,\n          index: seriesModel.get(name + 'Index'),\n          id: seriesModel.get(name + 'Id')\n        })[0];\n        var axisIndex = axisModel.componentIndex;\n        newOption[axisType] = newOption[axisType] || [];\n\n        for (var i = 0; i <= axisIndex; i++) {\n          newOption[axisType][axisIndex] = newOption[axisType][axisIndex] || {};\n        }\n\n        newOption[axisType][axisIndex].boundaryGap = type === 'bar' ? true : false;\n      }\n    }\n  };\n\n  zrUtil.each(radioTypes, function (radio) {\n    if (zrUtil.indexOf(radio, type) >= 0) {\n      zrUtil.each(radio, function (item) {\n        model.setIconStatus(item, 'normal');\n      });\n    }\n  });\n  model.setIconStatus(type, 'emphasis');\n  ecModel.eachComponent({\n    mainType: 'series',\n    query: seriesIndex == null ? null : {\n      seriesIndex: seriesIndex\n    }\n  }, generateNewSeriesTypes);\n  api.dispatchAction({\n    type: 'changeMagicType',\n    currentType: type,\n    newOption: newOption\n  });\n};\n\necharts.registerAction({\n  type: 'changeMagicType',\n  event: 'magicTypeChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  ecModel.mergeOption(payload.newOption);\n});\nfeatureManager.register('magicType', MagicType);\nvar _default = MagicType;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1150:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(979);\n\nvar zrUtil = __webpack_require__(978);\n\nvar eventTool = __webpack_require__(998);\n\nvar lang = __webpack_require__(1005);\n\nvar featureManager = __webpack_require__(997);\n\nvar dataViewLang = lang.toolbox.dataView;\nvar BLOCK_SPLITER = new Array(60).join('-');\nvar ITEM_SPLITER = '\\t';\n/**\n * Group series into two types\n *  1. on category axis, like line, bar\n *  2. others, like scatter, pie\n * @param {module:echarts/model/Global} ecModel\n * @return {Object}\n * @inner\n */\n\nfunction groupSeries(ecModel) {\n  var seriesGroupByCategoryAxis = {};\n  var otherSeries = [];\n  var meta = [];\n  ecModel.eachRawSeries(function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && (coordSys.type === 'cartesian2d' || coordSys.type === 'polar')) {\n      var baseAxis = coordSys.getBaseAxis();\n\n      if (baseAxis.type === 'category') {\n        var key = baseAxis.dim + '_' + baseAxis.index;\n\n        if (!seriesGroupByCategoryAxis[key]) {\n          seriesGroupByCategoryAxis[key] = {\n            categoryAxis: baseAxis,\n            valueAxis: coordSys.getOtherAxis(baseAxis),\n            series: []\n          };\n          meta.push({\n            axisDim: baseAxis.dim,\n            axisIndex: baseAxis.index\n          });\n        }\n\n        seriesGroupByCategoryAxis[key].series.push(seriesModel);\n      } else {\n        otherSeries.push(seriesModel);\n      }\n    } else {\n      otherSeries.push(seriesModel);\n    }\n  });\n  return {\n    seriesGroupByCategoryAxis: seriesGroupByCategoryAxis,\n    other: otherSeries,\n    meta: meta\n  };\n}\n/**\n * Assemble content of series on cateogory axis\n * @param {Array.<module:echarts/model/Series>} series\n * @return {string}\n * @inner\n */\n\n\nfunction assembleSeriesWithCategoryAxis(series) {\n  var tables = [];\n  zrUtil.each(series, function (group, key) {\n    var categoryAxis = group.categoryAxis;\n    var valueAxis = group.valueAxis;\n    var valueAxisDim = valueAxis.dim;\n    var headers = [' '].concat(zrUtil.map(group.series, function (series) {\n      return series.name;\n    }));\n    var columns = [categoryAxis.model.getCategories()];\n    zrUtil.each(group.series, function (series) {\n      columns.push(series.getRawData().mapArray(valueAxisDim, function (val) {\n        return val;\n      }));\n    }); // Assemble table content\n\n    var lines = [headers.join(ITEM_SPLITER)];\n\n    for (var i = 0; i < columns[0].length; i++) {\n      var items = [];\n\n      for (var j = 0; j < columns.length; j++) {\n        items.push(columns[j][i]);\n      }\n\n      lines.push(items.join(ITEM_SPLITER));\n    }\n\n    tables.push(lines.join('\\n'));\n  });\n  return tables.join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n}\n/**\n * Assemble content of other series\n * @param {Array.<module:echarts/model/Series>} series\n * @return {string}\n * @inner\n */\n\n\nfunction assembleOtherSeries(series) {\n  return zrUtil.map(series, function (series) {\n    var data = series.getRawData();\n    var lines = [series.name];\n    var vals = [];\n    data.each(data.dimensions, function () {\n      var argLen = arguments.length;\n      var dataIndex = arguments[argLen - 1];\n      var name = data.getName(dataIndex);\n\n      for (var i = 0; i < argLen - 1; i++) {\n        vals[i] = arguments[i];\n      }\n\n      lines.push((name ? name + ITEM_SPLITER : '') + vals.join(ITEM_SPLITER));\n    });\n    return lines.join('\\n');\n  }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n}\n/**\n * @param {module:echarts/model/Global}\n * @return {Object}\n * @inner\n */\n\n\nfunction getContentFromModel(ecModel) {\n  var result = groupSeries(ecModel);\n  return {\n    value: zrUtil.filter([assembleSeriesWithCategoryAxis(result.seriesGroupByCategoryAxis), assembleOtherSeries(result.other)], function (str) {\n      return str.replace(/[\\n\\t\\s]/g, '');\n    }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n'),\n    meta: result.meta\n  };\n}\n\nfunction trim(str) {\n  return str.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n}\n/**\n * If a block is tsv format\n */\n\n\nfunction isTSVFormat(block) {\n  // Simple method to find out if a block is tsv format\n  var firstLine = block.slice(0, block.indexOf('\\n'));\n\n  if (firstLine.indexOf(ITEM_SPLITER) >= 0) {\n    return true;\n  }\n}\n\nvar itemSplitRegex = new RegExp('[' + ITEM_SPLITER + ']+', 'g');\n/**\n * @param {string} tsv\n * @return {Object}\n */\n\nfunction parseTSVContents(tsv) {\n  var tsvLines = tsv.split(/\\n+/g);\n  var headers = trim(tsvLines.shift()).split(itemSplitRegex);\n  var categories = [];\n  var series = zrUtil.map(headers, function (header) {\n    return {\n      name: header,\n      data: []\n    };\n  });\n\n  for (var i = 0; i < tsvLines.length; i++) {\n    var items = trim(tsvLines[i]).split(itemSplitRegex);\n    categories.push(items.shift());\n\n    for (var j = 0; j < items.length; j++) {\n      series[j] && (series[j].data[i] = items[j]);\n    }\n  }\n\n  return {\n    series: series,\n    categories: categories\n  };\n}\n/**\n * @param {string} str\n * @return {Array.<Object>}\n * @inner\n */\n\n\nfunction parseListContents(str) {\n  var lines = str.split(/\\n+/g);\n  var seriesName = trim(lines.shift());\n  var data = [];\n\n  for (var i = 0; i < lines.length; i++) {\n    var items = trim(lines[i]).split(itemSplitRegex);\n    var name = '';\n    var value;\n    var hasName = false;\n\n    if (isNaN(items[0])) {\n      // First item is name\n      hasName = true;\n      name = items[0];\n      items = items.slice(1);\n      data[i] = {\n        name: name,\n        value: []\n      };\n      value = data[i].value;\n    } else {\n      value = data[i] = [];\n    }\n\n    for (var j = 0; j < items.length; j++) {\n      value.push(+items[j]);\n    }\n\n    if (value.length === 1) {\n      hasName ? data[i].value = value[0] : data[i] = value[0];\n    }\n  }\n\n  return {\n    name: seriesName,\n    data: data\n  };\n}\n/**\n * @param {string} str\n * @param {Array.<Object>} blockMetaList\n * @return {Object}\n * @inner\n */\n\n\nfunction parseContents(str, blockMetaList) {\n  var blocks = str.split(new RegExp('\\n*' + BLOCK_SPLITER + '\\n*', 'g'));\n  var newOption = {\n    series: []\n  };\n  zrUtil.each(blocks, function (block, idx) {\n    if (isTSVFormat(block)) {\n      var result = parseTSVContents(block);\n      var blockMeta = blockMetaList[idx];\n      var axisKey = blockMeta.axisDim + 'Axis';\n\n      if (blockMeta) {\n        newOption[axisKey] = newOption[axisKey] || [];\n        newOption[axisKey][blockMeta.axisIndex] = {\n          data: result.categories\n        };\n        newOption.series = newOption.series.concat(result.series);\n      }\n    } else {\n      var result = parseListContents(block);\n      newOption.series.push(result);\n    }\n  });\n  return newOption;\n}\n/**\n * @alias {module:echarts/component/toolbox/feature/DataView}\n * @constructor\n * @param {module:echarts/model/Model} model\n */\n\n\nfunction DataView(model) {\n  this._dom = null;\n  this.model = model;\n}\n\nDataView.defaultOption = {\n  show: true,\n  readOnly: false,\n  optionToContent: null,\n  contentToOption: null,\n  icon: 'M17.5,17.3H33 M17.5,17.3H33 M45.4,29.5h-28 M11.5,2v56H51V14.8L38.4,2H11.5z M38.4,2.2v12.7H51 M45.4,41.7h-28',\n  title: zrUtil.clone(dataViewLang.title),\n  lang: zrUtil.clone(dataViewLang.lang),\n  backgroundColor: '#fff',\n  textColor: '#000',\n  textareaColor: '#fff',\n  textareaBorderColor: '#333',\n  buttonColor: '#c23531',\n  buttonTextColor: '#fff'\n};\n\nDataView.prototype.onclick = function (ecModel, api) {\n  var container = api.getDom();\n  var model = this.model;\n\n  if (this._dom) {\n    container.removeChild(this._dom);\n  }\n\n  var root = document.createElement('div');\n  root.style.cssText = 'position:absolute;left:5px;top:5px;bottom:5px;right:5px;';\n  root.style.backgroundColor = model.get('backgroundColor') || '#fff'; // Create elements\n\n  var header = document.createElement('h4');\n  var lang = model.get('lang') || [];\n  header.innerHTML = lang[0] || model.get('title');\n  header.style.cssText = 'margin: 10px 20px;';\n  header.style.color = model.get('textColor');\n  var viewMain = document.createElement('div');\n  var textarea = document.createElement('textarea');\n  viewMain.style.cssText = 'display:block;width:100%;overflow:auto;';\n  var optionToContent = model.get('optionToContent');\n  var contentToOption = model.get('contentToOption');\n  var result = getContentFromModel(ecModel);\n\n  if (typeof optionToContent === 'function') {\n    var htmlOrDom = optionToContent(api.getOption());\n\n    if (typeof htmlOrDom === 'string') {\n      viewMain.innerHTML = htmlOrDom;\n    } else if (zrUtil.isDom(htmlOrDom)) {\n      viewMain.appendChild(htmlOrDom);\n    }\n  } else {\n    // Use default textarea\n    viewMain.appendChild(textarea);\n    textarea.readOnly = model.get('readOnly');\n    textarea.style.cssText = 'width:100%;height:100%;font-family:monospace;font-size:14px;line-height:1.6rem;';\n    textarea.style.color = model.get('textColor');\n    textarea.style.borderColor = model.get('textareaBorderColor');\n    textarea.style.backgroundColor = model.get('textareaColor');\n    textarea.value = result.value;\n  }\n\n  var blockMetaList = result.meta;\n  var buttonContainer = document.createElement('div');\n  buttonContainer.style.cssText = 'position:absolute;bottom:0;left:0;right:0;';\n  var buttonStyle = 'float:right;margin-right:20px;border:none;' + 'cursor:pointer;padding:2px 5px;font-size:12px;border-radius:3px';\n  var closeButton = document.createElement('div');\n  var refreshButton = document.createElement('div');\n  buttonStyle += ';background-color:' + model.get('buttonColor');\n  buttonStyle += ';color:' + model.get('buttonTextColor');\n  var self = this;\n\n  function close() {\n    container.removeChild(root);\n    self._dom = null;\n  }\n\n  eventTool.addEventListener(closeButton, 'click', close);\n  eventTool.addEventListener(refreshButton, 'click', function () {\n    var newOption;\n\n    try {\n      if (typeof contentToOption === 'function') {\n        newOption = contentToOption(viewMain, api.getOption());\n      } else {\n        newOption = parseContents(textarea.value, blockMetaList);\n      }\n    } catch (e) {\n      close();\n      throw new Error('Data view format error ' + e);\n    }\n\n    if (newOption) {\n      api.dispatchAction({\n        type: 'changeDataView',\n        newOption: newOption\n      });\n    }\n\n    close();\n  });\n  closeButton.innerHTML = lang[1];\n  refreshButton.innerHTML = lang[2];\n  refreshButton.style.cssText = buttonStyle;\n  closeButton.style.cssText = buttonStyle;\n  !model.get('readOnly') && buttonContainer.appendChild(refreshButton);\n  buttonContainer.appendChild(closeButton); // http://stackoverflow.com/questions/6637341/use-tab-to-indent-in-textarea\n\n  eventTool.addEventListener(textarea, 'keydown', function (e) {\n    if ((e.keyCode || e.which) === 9) {\n      // get caret position/selection\n      var val = this.value;\n      var start = this.selectionStart;\n      var end = this.selectionEnd; // set textarea value to: text before caret + tab + text after caret\n\n      this.value = val.substring(0, start) + ITEM_SPLITER + val.substring(end); // put caret at right position again\n\n      this.selectionStart = this.selectionEnd = start + 1; // prevent the focus lose\n\n      eventTool.stop(e);\n    }\n  });\n  root.appendChild(header);\n  root.appendChild(viewMain);\n  root.appendChild(buttonContainer);\n  viewMain.style.height = container.clientHeight - 80 + 'px';\n  container.appendChild(root);\n  this._dom = root;\n};\n\nDataView.prototype.remove = function (ecModel, api) {\n  this._dom && api.getDom().removeChild(this._dom);\n};\n\nDataView.prototype.dispose = function (ecModel, api) {\n  this.remove(ecModel, api);\n};\n/**\n * @inner\n */\n\n\nfunction tryMergeDataOption(newData, originalData) {\n  return zrUtil.map(newData, function (newVal, idx) {\n    var original = originalData && originalData[idx];\n\n    if (zrUtil.isObject(original) && !zrUtil.isArray(original)) {\n      if (zrUtil.isObject(newVal) && !zrUtil.isArray(newVal)) {\n        newVal = newVal.value;\n      } // Original data has option\n\n\n      return zrUtil.defaults({\n        value: newVal\n      }, original);\n    } else {\n      return newVal;\n    }\n  });\n}\n\nfeatureManager.register('dataView', DataView);\necharts.registerAction({\n  type: 'changeDataView',\n  event: 'dataViewChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  var newSeriesOptList = [];\n  zrUtil.each(payload.newOption.series, function (seriesOpt) {\n    var seriesModel = ecModel.getSeriesByName(seriesOpt.name)[0];\n\n    if (!seriesModel) {\n      // New created series\n      // Geuss the series type\n      newSeriesOptList.push(zrUtil.extend({\n        // Default is scatter\n        type: 'scatter'\n      }, seriesOpt));\n    } else {\n      var originalData = seriesModel.get('data');\n      newSeriesOptList.push({\n        name: seriesOpt.name,\n        data: tryMergeDataOption(seriesOpt.data, originalData)\n      });\n    }\n  });\n  ecModel.mergeOption(zrUtil.defaults({\n    series: newSeriesOptList\n  }, payload.newOption));\n});\nvar _default = DataView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1151:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(979);\n\nvar zrUtil = __webpack_require__(978);\n\nvar BrushController = __webpack_require__(1066);\n\nvar BrushTargetManager = __webpack_require__(1084);\n\nvar history = __webpack_require__(1058);\n\nvar sliderMove = __webpack_require__(1040);\n\nvar lang = __webpack_require__(1005);\n\nvar featureManager = __webpack_require__(997);\n\n__webpack_require__(1152);\n\n// Use dataZoomSelect\nvar dataZoomLang = lang.toolbox.dataZoom;\nvar each = zrUtil.each; // Spectial component id start with \\0ec\\0, see echarts/model/Global.js~hasInnerId\n\nvar DATA_ZOOM_ID_BASE = '\\0_ec_\\0toolbox-dataZoom_';\n\nfunction DataZoom(model, ecModel, api) {\n  /**\n   * @private\n   * @type {module:echarts/component/helper/BrushController}\n   */\n  (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this)).mount();\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._isZoomActive;\n}\n\nDataZoom.defaultOption = {\n  show: true,\n  // Icon group\n  icon: {\n    zoom: 'M0,13.5h26.9 M13.5,26.9V0 M32.1,13.5H58V58H13.5 V32.1',\n    back: 'M22,1.4L9.9,13.5l12.3,12.3 M10.3,13.5H54.9v44.6 H10.3v-26'\n  },\n  // `zoom`, `back`\n  title: zrUtil.clone(dataZoomLang.title)\n};\nvar proto = DataZoom.prototype;\n\nproto.render = function (featureModel, ecModel, api, payload) {\n  this.model = featureModel;\n  this.ecModel = ecModel;\n  this.api = api;\n  updateZoomBtnStatus(featureModel, ecModel, this, payload, api);\n  updateBackBtnStatus(featureModel, ecModel);\n};\n\nproto.onclick = function (ecModel, api, type) {\n  handlers[type].call(this);\n};\n\nproto.remove = function (ecModel, api) {\n  this._brushController.unmount();\n};\n\nproto.dispose = function (ecModel, api) {\n  this._brushController.dispose();\n};\n/**\n * @private\n */\n\n\nvar handlers = {\n  zoom: function () {\n    var nextActive = !this._isZoomActive;\n    this.api.dispatchAction({\n      type: 'takeGlobalCursor',\n      key: 'dataZoomSelect',\n      dataZoomSelectActive: nextActive\n    });\n  },\n  back: function () {\n    this._dispatchZoomAction(history.pop(this.ecModel));\n  }\n};\n/**\n * @private\n */\n\nproto._onBrush = function (areas, opt) {\n  if (!opt.isEnd || !areas.length) {\n    return;\n  }\n\n  var snapshot = {};\n  var ecModel = this.ecModel;\n\n  this._brushController.updateCovers([]); // remove cover\n\n\n  var brushTargetManager = new BrushTargetManager(retrieveAxisSetting(this.model.option), ecModel, {\n    include: ['grid']\n  });\n  brushTargetManager.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n    if (coordSys.type !== 'cartesian2d') {\n      return;\n    }\n\n    var brushType = area.brushType;\n\n    if (brushType === 'rect') {\n      setBatch('x', coordSys, coordRange[0]);\n      setBatch('y', coordSys, coordRange[1]);\n    } else {\n      setBatch({\n        lineX: 'x',\n        lineY: 'y'\n      }[brushType], coordSys, coordRange);\n    }\n  });\n  history.push(ecModel, snapshot);\n\n  this._dispatchZoomAction(snapshot);\n\n  function setBatch(dimName, coordSys, minMax) {\n    var axis = coordSys.getAxis(dimName);\n    var axisModel = axis.model;\n    var dataZoomModel = findDataZoom(dimName, axisModel, ecModel); // Restrict range.\n\n    var minMaxSpan = dataZoomModel.findRepresentativeAxisProxy(axisModel).getMinMaxSpan();\n\n    if (minMaxSpan.minValueSpan != null || minMaxSpan.maxValueSpan != null) {\n      minMax = sliderMove(0, minMax.slice(), axis.scale.getExtent(), 0, minMaxSpan.minValueSpan, minMaxSpan.maxValueSpan);\n    }\n\n    dataZoomModel && (snapshot[dataZoomModel.id] = {\n      dataZoomId: dataZoomModel.id,\n      startValue: minMax[0],\n      endValue: minMax[1]\n    });\n  }\n\n  function findDataZoom(dimName, axisModel, ecModel) {\n    var found;\n    ecModel.eachComponent({\n      mainType: 'dataZoom',\n      subType: 'select'\n    }, function (dzModel) {\n      var has = dzModel.getAxisModel(dimName, axisModel.componentIndex);\n      has && (found = dzModel);\n    });\n    return found;\n  }\n};\n/**\n * @private\n */\n\n\nproto._dispatchZoomAction = function (snapshot) {\n  var batch = []; // Convert from hash map to array.\n\n  each(snapshot, function (batchItem, dataZoomId) {\n    batch.push(zrUtil.clone(batchItem));\n  });\n  batch.length && this.api.dispatchAction({\n    type: 'dataZoom',\n    from: this.uid,\n    batch: batch\n  });\n};\n\nfunction retrieveAxisSetting(option) {\n  var setting = {}; // Compatible with previous setting: null => all axis, false => no axis.\n\n  zrUtil.each(['xAxisIndex', 'yAxisIndex'], function (name) {\n    setting[name] = option[name];\n    setting[name] == null && (setting[name] = 'all');\n    (setting[name] === false || setting[name] === 'none') && (setting[name] = []);\n  });\n  return setting;\n}\n\nfunction updateBackBtnStatus(featureModel, ecModel) {\n  featureModel.setIconStatus('back', history.count(ecModel) > 1 ? 'emphasis' : 'normal');\n}\n\nfunction updateZoomBtnStatus(featureModel, ecModel, view, payload, api) {\n  var zoomActive = view._isZoomActive;\n\n  if (payload && payload.type === 'takeGlobalCursor') {\n    zoomActive = payload.key === 'dataZoomSelect' ? payload.dataZoomSelectActive : false;\n  }\n\n  view._isZoomActive = zoomActive;\n  featureModel.setIconStatus('zoom', zoomActive ? 'emphasis' : 'normal');\n  var brushTargetManager = new BrushTargetManager(retrieveAxisSetting(featureModel.option), ecModel, {\n    include: ['grid']\n  });\n\n  view._brushController.setPanels(brushTargetManager.makePanelOpts(api, function (targetInfo) {\n    return targetInfo.xAxisDeclared && !targetInfo.yAxisDeclared ? 'lineX' : !targetInfo.xAxisDeclared && targetInfo.yAxisDeclared ? 'lineY' : 'rect';\n  })).enableBrush(zoomActive ? {\n    brushType: 'auto',\n    brushStyle: {\n      // FIXME user customized?\n      lineWidth: 0,\n      fill: 'rgba(0,0,0,0.2)'\n    }\n  } : false);\n}\n\nfeatureManager.register('dataZoom', DataZoom); // Create special dataZoom option for select\n\necharts.registerPreprocessor(function (option) {\n  if (!option) {\n    return;\n  }\n\n  var dataZoomOpts = option.dataZoom || (option.dataZoom = []);\n\n  if (!zrUtil.isArray(dataZoomOpts)) {\n    option.dataZoom = dataZoomOpts = [dataZoomOpts];\n  }\n\n  var toolboxOpt = option.toolbox;\n\n  if (toolboxOpt) {\n    // Assume there is only one toolbox\n    if (zrUtil.isArray(toolboxOpt)) {\n      toolboxOpt = toolboxOpt[0];\n    }\n\n    if (toolboxOpt && toolboxOpt.feature) {\n      var dataZoomOpt = toolboxOpt.feature.dataZoom;\n      addForAxis('xAxis', dataZoomOpt);\n      addForAxis('yAxis', dataZoomOpt);\n    }\n  }\n\n  function addForAxis(axisName, dataZoomOpt) {\n    if (!dataZoomOpt) {\n      return;\n    } // Try not to modify model, because it is not merged yet.\n\n\n    var axisIndicesName = axisName + 'Index';\n    var givenAxisIndices = dataZoomOpt[axisIndicesName];\n\n    if (givenAxisIndices != null && givenAxisIndices != 'all' && !zrUtil.isArray(givenAxisIndices)) {\n      givenAxisIndices = givenAxisIndices === false || givenAxisIndices === 'none' ? [] : [givenAxisIndices];\n    }\n\n    forEachComponent(axisName, function (axisOpt, axisIndex) {\n      if (givenAxisIndices != null && givenAxisIndices != 'all' && zrUtil.indexOf(givenAxisIndices, axisIndex) === -1) {\n        return;\n      }\n\n      var newOpt = {\n        type: 'select',\n        $fromToolbox: true,\n        // Id for merge mapping.\n        id: DATA_ZOOM_ID_BASE + axisName + axisIndex\n      }; // FIXME\n      // Only support one axis now.\n\n      newOpt[axisIndicesName] = axisIndex;\n      dataZoomOpts.push(newOpt);\n    });\n  }\n\n  function forEachComponent(mainType, cb) {\n    var opts = option[mainType];\n\n    if (!zrUtil.isArray(opts)) {\n      opts = opts ? [opts] : [];\n    }\n\n    each(opts, cb);\n  }\n});\nvar _default = DataZoom;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1152:\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(1086);\n\n__webpack_require__(1029);\n\n__webpack_require__(1031);\n\n__webpack_require__(1154);\n\n__webpack_require__(1155);\n\n__webpack_require__(1087);\n\n__webpack_require__(1088);\n\n/***/ }),\n\n/***/ 1153:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar numberUtil = __webpack_require__(981);\n\nvar helper = __webpack_require__(1030);\n\nvar each = zrUtil.each;\nvar asc = numberUtil.asc;\n/**\n * Operate single axis.\n * One axis can only operated by one axis operator.\n * Different dataZoomModels may be defined to operate the same axis.\n * (i.e. 'inside' data zoom and 'slider' data zoom components)\n * So dataZoomModels share one axisProxy in that case.\n *\n * @class\n */\n\nvar AxisProxy = function (dimName, axisIndex, dataZoomModel, ecModel) {\n  /**\n   * @private\n   * @type {string}\n   */\n  this._dimName = dimName;\n  /**\n   * @private\n   */\n\n  this._axisIndex = axisIndex;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._valueWindow;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._percentWindow;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._dataExtent;\n  /**\n   * {minSpan, maxSpan, minValueSpan, maxValueSpan}\n   * @private\n   * @type {Object}\n   */\n\n  this._minMaxSpan;\n  /**\n   * @readOnly\n   * @type {module: echarts/model/Global}\n   */\n\n  this.ecModel = ecModel;\n  /**\n   * @private\n   * @type {module: echarts/component/dataZoom/DataZoomModel}\n   */\n\n  this._dataZoomModel = dataZoomModel;\n};\n\nAxisProxy.prototype = {\n  constructor: AxisProxy,\n\n  /**\n   * Whether the axisProxy is hosted by dataZoomModel.\n   *\n   * @public\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   * @return {boolean}\n   */\n  hostedBy: function (dataZoomModel) {\n    return this._dataZoomModel === dataZoomModel;\n  },\n\n  /**\n   * @return {Array.<number>} Value can only be NaN or finite value.\n   */\n  getDataValueWindow: function () {\n    return this._valueWindow.slice();\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getDataPercentWindow: function () {\n    return this._percentWindow.slice();\n  },\n\n  /**\n   * @public\n   * @param {number} axisIndex\n   * @return {Array} seriesModels\n   */\n  getTargetSeriesModels: function () {\n    var seriesModels = [];\n    var ecModel = this.ecModel;\n    ecModel.eachSeries(function (seriesModel) {\n      if (helper.isCoordSupported(seriesModel.get('coordinateSystem'))) {\n        var dimName = this._dimName;\n        var axisModel = ecModel.queryComponents({\n          mainType: dimName + 'Axis',\n          index: seriesModel.get(dimName + 'AxisIndex'),\n          id: seriesModel.get(dimName + 'AxisId')\n        })[0];\n\n        if (this._axisIndex === (axisModel && axisModel.componentIndex)) {\n          seriesModels.push(seriesModel);\n        }\n      }\n    }, this);\n    return seriesModels;\n  },\n  getAxisModel: function () {\n    return this.ecModel.getComponent(this._dimName + 'Axis', this._axisIndex);\n  },\n  getOtherAxisModel: function () {\n    var axisDim = this._dimName;\n    var ecModel = this.ecModel;\n    var axisModel = this.getAxisModel();\n    var isCartesian = axisDim === 'x' || axisDim === 'y';\n    var otherAxisDim;\n    var coordSysIndexName;\n\n    if (isCartesian) {\n      coordSysIndexName = 'gridIndex';\n      otherAxisDim = axisDim === 'x' ? 'y' : 'x';\n    } else {\n      coordSysIndexName = 'polarIndex';\n      otherAxisDim = axisDim === 'angle' ? 'radius' : 'angle';\n    }\n\n    var foundOtherAxisModel;\n    ecModel.eachComponent(otherAxisDim + 'Axis', function (otherAxisModel) {\n      if ((otherAxisModel.get(coordSysIndexName) || 0) === (axisModel.get(coordSysIndexName) || 0)) {\n        foundOtherAxisModel = otherAxisModel;\n      }\n    });\n    return foundOtherAxisModel;\n  },\n  getMinMaxSpan: function () {\n    return zrUtil.clone(this._minMaxSpan);\n  },\n\n  /**\n   * Only calculate by given range and this._dataExtent, do not change anything.\n   *\n   * @param {Object} opt\n   * @param {number} [opt.start]\n   * @param {number} [opt.end]\n   * @param {number} [opt.startValue]\n   * @param {number} [opt.endValue]\n   */\n  calculateDataWindow: function (opt) {\n    var dataExtent = this._dataExtent;\n    var axisModel = this.getAxisModel();\n    var scale = axisModel.axis.scale;\n\n    var rangePropMode = this._dataZoomModel.getRangePropMode();\n\n    var percentExtent = [0, 100];\n    var percentWindow = [opt.start, opt.end];\n    var valueWindow = [];\n    each(['startValue', 'endValue'], function (prop) {\n      valueWindow.push(opt[prop] != null ? scale.parse(opt[prop]) : null);\n    }); // Normalize bound.\n\n    each([0, 1], function (idx) {\n      var boundValue = valueWindow[idx];\n      var boundPercent = percentWindow[idx]; // Notice: dataZoom is based either on `percentProp` ('start', 'end') or\n      // on `valueProp` ('startValue', 'endValue'). The former one is suitable\n      // for cases that a dataZoom component controls multiple axes with different\n      // unit or extent, and the latter one is suitable for accurate zoom by pixel\n      // (e.g., in dataZoomSelect). `valueProp` can be calculated from `percentProp`,\n      // but it is awkward that `percentProp` can not be obtained from `valueProp`\n      // accurately (because all of values that are overflow the `dataExtent` will\n      // be calculated to percent '100%'). So we have to use\n      // `dataZoom.getRangePropMode()` to mark which prop is used.\n      // `rangePropMode` is updated only when setOption or dispatchAction, otherwise\n      // it remains its original value.\n\n      if (rangePropMode[idx] === 'percent') {\n        if (boundPercent == null) {\n          boundPercent = percentExtent[idx];\n        } // Use scale.parse to math round for category or time axis.\n\n\n        boundValue = scale.parse(numberUtil.linearMap(boundPercent, percentExtent, dataExtent, true));\n      } else {\n        // Calculating `percent` from `value` may be not accurate, because\n        // This calculation can not be inversed, because all of values that\n        // are overflow the `dataExtent` will be calculated to percent '100%'\n        boundPercent = numberUtil.linearMap(boundValue, dataExtent, percentExtent, true);\n      } // valueWindow[idx] = round(boundValue);\n      // percentWindow[idx] = round(boundPercent);\n\n\n      valueWindow[idx] = boundValue;\n      percentWindow[idx] = boundPercent;\n    });\n    return {\n      valueWindow: asc(valueWindow),\n      percentWindow: asc(percentWindow)\n    };\n  },\n\n  /**\n   * Notice: reset should not be called before series.restoreData() called,\n   * so it is recommanded to be called in \"process stage\" but not \"model init\n   * stage\".\n   *\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  reset: function (dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    } // Culculate data window and data extent, and record them.\n\n\n    this._dataExtent = calculateDataExtent(this, this._dimName, this.getTargetSeriesModels());\n    var dataWindow = this.calculateDataWindow(dataZoomModel.option);\n    this._valueWindow = dataWindow.valueWindow;\n    this._percentWindow = dataWindow.percentWindow;\n    setMinMaxSpan(this); // Update axis setting then.\n\n    setAxisModel(this);\n  },\n\n  /**\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  restore: function (dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    this._valueWindow = this._percentWindow = null;\n    setAxisModel(this, true);\n  },\n\n  /**\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  filterData: function (dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    var axisDim = this._dimName;\n    var seriesModels = this.getTargetSeriesModels();\n    var filterMode = dataZoomModel.get('filterMode');\n    var valueWindow = this._valueWindow;\n\n    if (filterMode === 'none') {\n      return;\n    } // FIXME\n    // Toolbox may has dataZoom injected. And if there are stacked bar chart\n    // with NaN data, NaN will be filtered and stack will be wrong.\n    // So we need to force the mode to be set empty.\n    // In fect, it is not a big deal that do not support filterMode-'filter'\n    // when using toolbox#dataZoom, utill tooltip#dataZoom support \"single axis\n    // selection\" some day, which might need \"adapt to data extent on the\n    // otherAxis\", which is disabled by filterMode-'empty'.\n\n\n    var otherAxisModel = this.getOtherAxisModel();\n\n    if (dataZoomModel.get('$fromToolbox') && otherAxisModel && otherAxisModel.get('type') === 'category') {\n      filterMode = 'empty';\n    } // Process series data\n\n\n    each(seriesModels, function (seriesModel) {\n      var seriesData = seriesModel.getData();\n      var dataDims = seriesModel.coordDimToDataDim(axisDim);\n\n      if (filterMode === 'weakFilter') {\n        seriesData && seriesData.filterSelf(function (dataIndex) {\n          var leftOut;\n          var rightOut;\n          var hasValue;\n\n          for (var i = 0; i < dataDims.length; i++) {\n            var value = seriesData.get(dataDims[i], dataIndex);\n            var thisHasValue = !isNaN(value);\n            var thisLeftOut = value < valueWindow[0];\n            var thisRightOut = value > valueWindow[1];\n\n            if (thisHasValue && !thisLeftOut && !thisRightOut) {\n              return true;\n            }\n\n            thisHasValue && (hasValue = true);\n            thisLeftOut && (leftOut = true);\n            thisRightOut && (rightOut = true);\n          } // If both left out and right out, do not filter.\n\n\n          return hasValue && leftOut && rightOut;\n        });\n      } else {\n        seriesData && each(dataDims, function (dim) {\n          if (filterMode === 'empty') {\n            seriesModel.setData(seriesData.map(dim, function (value) {\n              return !isInWindow(value) ? NaN : value;\n            }));\n          } else {\n            seriesData.filterSelf(dim, isInWindow);\n          }\n        });\n      }\n    });\n\n    function isInWindow(value) {\n      return value >= valueWindow[0] && value <= valueWindow[1];\n    }\n  }\n};\n\nfunction calculateDataExtent(axisProxy, axisDim, seriesModels) {\n  var dataExtent = [Infinity, -Infinity];\n  each(seriesModels, function (seriesModel) {\n    var seriesData = seriesModel.getData();\n\n    if (seriesData) {\n      each(seriesModel.coordDimToDataDim(axisDim), function (dim) {\n        var seriesExtent = seriesData.getDataExtent(dim);\n        seriesExtent[0] < dataExtent[0] && (dataExtent[0] = seriesExtent[0]);\n        seriesExtent[1] > dataExtent[1] && (dataExtent[1] = seriesExtent[1]);\n      });\n    }\n  });\n\n  if (dataExtent[1] < dataExtent[0]) {\n    dataExtent = [NaN, NaN];\n  } // It is important to get \"consistent\" extent when more then one axes is\n  // controlled by a `dataZoom`, otherwise those axes will not be synchronized\n  // when zooming. But it is difficult to know what is \"consistent\", considering\n  // axes have different type or even different meanings (For example, two\n  // time axes are used to compare data of the same date in different years).\n  // So basically dataZoom just obtains extent by series.data (in category axis\n  // extent can be obtained from axis.data).\n  // Nevertheless, user can set min/max/scale on axes to make extent of axes\n  // consistent.\n\n\n  fixExtentByAxis(axisProxy, dataExtent);\n  return dataExtent;\n}\n\nfunction fixExtentByAxis(axisProxy, dataExtent) {\n  var axisModel = axisProxy.getAxisModel();\n  var min = axisModel.getMin(true); // For category axis, if min/max/scale are not set, extent is determined\n  // by axis.data by default.\n\n  var isCategoryAxis = axisModel.get('type') === 'category';\n  var axisDataLen = isCategoryAxis && (axisModel.get('data') || []).length;\n\n  if (min != null && min !== 'dataMin' && typeof min !== 'function') {\n    dataExtent[0] = min;\n  } else if (isCategoryAxis) {\n    dataExtent[0] = axisDataLen > 0 ? 0 : NaN;\n  }\n\n  var max = axisModel.getMax(true);\n\n  if (max != null && max !== 'dataMax' && typeof max !== 'function') {\n    dataExtent[1] = max;\n  } else if (isCategoryAxis) {\n    dataExtent[1] = axisDataLen > 0 ? axisDataLen - 1 : NaN;\n  }\n\n  if (!axisModel.get('scale', true)) {\n    dataExtent[0] > 0 && (dataExtent[0] = 0);\n    dataExtent[1] < 0 && (dataExtent[1] = 0);\n  } // For value axis, if min/max/scale are not set, we just use the extent obtained\n  // by series data, which may be a little different from the extent calculated by\n  // `axisHelper.getScaleExtent`. But the different just affects the experience a\n  // little when zooming. So it will not be fixed until some users require it strongly.\n\n\n  return dataExtent;\n}\n\nfunction setAxisModel(axisProxy, isRestore) {\n  var axisModel = axisProxy.getAxisModel();\n  var percentWindow = axisProxy._percentWindow;\n  var valueWindow = axisProxy._valueWindow;\n\n  if (!percentWindow) {\n    return;\n  } // [0, 500]: arbitrary value, guess axis extent.\n\n\n  var precision = numberUtil.getPixelPrecision(valueWindow, [0, 500]);\n  precision = Math.min(precision, 20); // isRestore or isFull\n\n  var useOrigin = isRestore || percentWindow[0] === 0 && percentWindow[1] === 100;\n  axisModel.setRange(useOrigin ? null : +valueWindow[0].toFixed(precision), useOrigin ? null : +valueWindow[1].toFixed(precision));\n}\n\nfunction setMinMaxSpan(axisProxy) {\n  var minMaxSpan = axisProxy._minMaxSpan = {};\n  var dataZoomModel = axisProxy._dataZoomModel;\n  each(['min', 'max'], function (minMax) {\n    minMaxSpan[minMax + 'Span'] = dataZoomModel.get(minMax + 'Span'); // minValueSpan and maxValueSpan has higher priority than minSpan and maxSpan\n\n    var valueSpan = dataZoomModel.get(minMax + 'ValueSpan');\n\n    if (valueSpan != null) {\n      minMaxSpan[minMax + 'ValueSpan'] = valueSpan;\n      valueSpan = axisProxy.getAxisModel().axis.scale.parse(valueSpan);\n\n      if (valueSpan != null) {\n        var dataExtent = axisProxy._dataExtent;\n        minMaxSpan[minMax + 'Span'] = numberUtil.linearMap(dataExtent[0] + valueSpan, dataExtent, [0, 100], true);\n      }\n    }\n  });\n}\n\nvar _default = AxisProxy;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1154:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar DataZoomModel = __webpack_require__(1029);\n\nvar _default = DataZoomModel.extend({\n  type: 'dataZoom.select'\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1155:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar DataZoomView = __webpack_require__(1031);\n\nvar _default = DataZoomView.extend({\n  type: 'dataZoom.select'\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1156:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(979);\n\nvar history = __webpack_require__(1058);\n\nvar lang = __webpack_require__(1005);\n\nvar featureManager = __webpack_require__(997);\n\nvar restoreLang = lang.toolbox.restore;\n\nfunction Restore(model) {\n  this.model = model;\n}\n\nRestore.defaultOption = {\n  show: true,\n  icon: 'M3.8,33.4 M47,18.9h9.8V8.7 M56.3,20.1 C52.1,9,40.5,0.6,26.8,2.1C12.6,3.7,1.6,16.2,2.1,30.6 M13,41.1H3.1v10.2 M3.7,39.9c4.2,11.1,15.8,19.5,29.5,18 c14.2-1.6,25.2-14.1,24.7-28.5',\n  title: restoreLang.title\n};\nvar proto = Restore.prototype;\n\nproto.onclick = function (ecModel, api, type) {\n  history.clear(ecModel);\n  api.dispatchAction({\n    type: 'restore',\n    from: this.uid\n  });\n};\n\nfeatureManager.register('restore', Restore);\necharts.registerAction({\n  type: 'restore',\n  event: 'restore',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  ecModel.resetOption('recreate');\n});\nvar _default = Restore;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1157:\n/***/ (function(module, exports) {\n\nfunction _default(seriesType, ecModel) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var data = seriesModel.getData();\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (!coordSys) {\n      return;\n    }\n\n    var dims = [];\n    var coordDims = coordSys.dimensions;\n\n    for (var i = 0; i < coordDims.length; i++) {\n      dims.push(seriesModel.coordDimToDataDim(coordSys.dimensions[i])[0]);\n    }\n\n    if (dims.length === 1) {\n      data.each(dims[0], function (x, idx) {\n        // Also {Array.<number>}, not undefined to avoid if...else... statement\n        data.setItemLayout(idx, isNaN(x) ? [NaN, NaN] : coordSys.dataToPoint(x));\n      });\n    } else if (dims.length === 2) {\n      data.each(dims, function (x, y, idx) {\n        // Also {Array.<number>}, not undefined to avoid if...else... statement\n        data.setItemLayout(idx, isNaN(x) || isNaN(y) ? [NaN, NaN] : coordSys.dataToPoint([x, y]));\n      }, true);\n    }\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1158:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(983);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(978);\n\nvar BoundingRect = __webpack_require__(987);\n\nvar _layout = __webpack_require__(990);\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar axisHelper = __webpack_require__(996);\n\nvar Cartesian2D = __webpack_require__(1181);\n\nvar Axis2D = __webpack_require__(1183);\n\nvar CoordinateSystem = __webpack_require__(1006);\n\n__webpack_require__(1184);\n\n/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\n// Depends on GridModel, AxisModel, which performs preprocess.\nvar each = zrUtil.each;\nvar ifAxisCrossZero = axisHelper.ifAxisCrossZero;\nvar niceScaleExtent = axisHelper.niceScaleExtent;\n/**\n * Check if the axis is used in the specified grid\n * @inner\n */\n\nfunction isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n  return axisModel.getCoordSysModel() === gridModel;\n}\n\nfunction rotateTextRect(textRect, rotate) {\n  var rotateRadians = rotate * Math.PI / 180;\n  var boundingBox = textRect.plain();\n  var beforeWidth = boundingBox.width;\n  var beforeHeight = boundingBox.height;\n  var afterWidth = beforeWidth * Math.cos(rotateRadians) + beforeHeight * Math.sin(rotateRadians);\n  var afterHeight = beforeWidth * Math.sin(rotateRadians) + beforeHeight * Math.cos(rotateRadians);\n  var rotatedRect = new BoundingRect(boundingBox.x, boundingBox.y, afterWidth, afterHeight);\n  return rotatedRect;\n}\n\nfunction getLabelUnionRect(axis) {\n  var axisModel = axis.model;\n  var labels = axisModel.getFormattedLabels();\n  var axisLabelModel = axisModel.getModel('axisLabel');\n  var rect;\n  var step = 1;\n  var labelCount = labels.length;\n\n  if (labelCount > 40) {\n    // Simple optimization for large amount of labels\n    step = Math.ceil(labelCount / 40);\n  }\n\n  for (var i = 0; i < labelCount; i += step) {\n    if (!axis.isLabelIgnored(i)) {\n      var unrotatedSingleRect = axisLabelModel.getTextRect(labels[i]);\n      var singleRect = rotateTextRect(unrotatedSingleRect, axisLabelModel.get('rotate') || 0);\n      rect ? rect.union(singleRect) : rect = singleRect;\n    }\n  }\n\n  return rect;\n}\n\nfunction Grid(gridModel, ecModel, api) {\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n   * @private\n   */\n  this._coordsMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n   * @private\n   */\n\n  this._coordsList = [];\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesList = [];\n\n  this._initCartesian(gridModel, ecModel, api);\n\n  this.model = gridModel;\n}\n\nvar gridProto = Grid.prototype;\ngridProto.type = 'grid';\ngridProto.axisPointerEnabled = true;\n\ngridProto.getRect = function () {\n  return this._rect;\n};\n\ngridProto.update = function (ecModel, api) {\n  var axesMap = this._axesMap;\n\n  this._updateScale(ecModel, this.model);\n\n  each(axesMap.x, function (xAxis) {\n    niceScaleExtent(xAxis.scale, xAxis.model);\n  });\n  each(axesMap.y, function (yAxis) {\n    niceScaleExtent(yAxis.scale, yAxis.model);\n  });\n  each(axesMap.x, function (xAxis) {\n    fixAxisOnZero(axesMap, 'y', xAxis);\n  });\n  each(axesMap.y, function (yAxis) {\n    fixAxisOnZero(axesMap, 'x', yAxis);\n  }); // Resize again if containLabel is enabled\n  // FIXME It may cause getting wrong grid size in data processing stage\n\n  this.resize(this.model, api);\n};\n\nfunction fixAxisOnZero(axesMap, otherAxisDim, axis) {\n  // onZero can not be enabled in these two situations:\n  // 1. When any other axis is a category axis.\n  // 2. When no axis is cross 0 point.\n  var axes = axesMap[otherAxisDim];\n\n  if (!axis.onZero) {\n    return;\n  }\n\n  var onZeroAxisIndex = axis.onZeroAxisIndex; // If target axis is specified.\n\n  if (onZeroAxisIndex != null) {\n    var otherAxis = axes[onZeroAxisIndex];\n\n    if (otherAxis && canNotOnZeroToAxis(otherAxis)) {\n      axis.onZero = false;\n    }\n\n    return;\n  }\n\n  for (var idx in axes) {\n    if (axes.hasOwnProperty(idx)) {\n      var otherAxis = axes[idx];\n\n      if (otherAxis && !canNotOnZeroToAxis(otherAxis)) {\n        onZeroAxisIndex = +idx;\n        break;\n      }\n    }\n  }\n\n  if (onZeroAxisIndex == null) {\n    axis.onZero = false;\n  }\n\n  axis.onZeroAxisIndex = onZeroAxisIndex;\n}\n\nfunction canNotOnZeroToAxis(axis) {\n  return axis.type === 'category' || axis.type === 'time' || !ifAxisCrossZero(axis);\n}\n/**\n * Resize the grid\n * @param {module:echarts/coord/cartesian/GridModel} gridModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\ngridProto.resize = function (gridModel, api, ignoreContainLabel) {\n  var gridRect = getLayoutRect(gridModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n  this._rect = gridRect;\n  var axesList = this._axesList;\n  adjustAxes(); // Minus label size\n\n  if (!ignoreContainLabel && gridModel.get('containLabel')) {\n    each(axesList, function (axis) {\n      if (!axis.model.get('axisLabel.inside')) {\n        var labelUnionRect = getLabelUnionRect(axis);\n\n        if (labelUnionRect) {\n          var dim = axis.isHorizontal() ? 'height' : 'width';\n          var margin = axis.model.get('axisLabel.margin');\n          gridRect[dim] -= labelUnionRect[dim] + margin;\n\n          if (axis.position === 'top') {\n            gridRect.y += labelUnionRect.height + margin;\n          } else if (axis.position === 'left') {\n            gridRect.x += labelUnionRect.width + margin;\n          }\n        }\n      }\n    });\n    adjustAxes();\n  }\n\n  function adjustAxes() {\n    each(axesList, function (axis) {\n      var isHorizontal = axis.isHorizontal();\n      var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n      var idx = axis.inverse ? 1 : 0;\n      axis.setExtent(extent[idx], extent[1 - idx]);\n      updateAxisTransfrom(axis, isHorizontal ? gridRect.x : gridRect.y);\n    });\n  }\n};\n/**\n * @param {string} axisType\n * @param {number} [axisIndex]\n */\n\n\ngridProto.getAxis = function (axisType, axisIndex) {\n  var axesMapOnDim = this._axesMap[axisType];\n\n  if (axesMapOnDim != null) {\n    if (axisIndex == null) {\n      // Find first axis\n      for (var name in axesMapOnDim) {\n        if (axesMapOnDim.hasOwnProperty(name)) {\n          return axesMapOnDim[name];\n        }\n      }\n    }\n\n    return axesMapOnDim[axisIndex];\n  }\n};\n/**\n * @return {Array.<module:echarts/coord/Axis>}\n */\n\n\ngridProto.getAxes = function () {\n  return this._axesList.slice();\n};\n/**\n * Usage:\n *      grid.getCartesian(xAxisIndex, yAxisIndex);\n *      grid.getCartesian(xAxisIndex);\n *      grid.getCartesian(null, yAxisIndex);\n *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n *\n * @param {number|Object} [xAxisIndex]\n * @param {number} [yAxisIndex]\n */\n\n\ngridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n  if (xAxisIndex != null && yAxisIndex != null) {\n    var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n    return this._coordsMap[key];\n  }\n\n  if (zrUtil.isObject(xAxisIndex)) {\n    yAxisIndex = xAxisIndex.yAxisIndex;\n    xAxisIndex = xAxisIndex.xAxisIndex;\n  } // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n\n\n  for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n    if (coordList[i].getAxis('x').index === xAxisIndex || coordList[i].getAxis('y').index === yAxisIndex) {\n      return coordList[i];\n    }\n  }\n};\n\ngridProto.getCartesians = function () {\n  return this._coordsList.slice();\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertToPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.dataToPoint(value) : target.axis ? target.axis.toGlobalCoord(target.axis.dataToCoord(value)) : null;\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertFromPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.pointToData(value) : target.axis ? target.axis.coordToData(target.axis.toLocalCoord(value)) : null;\n};\n/**\n * @inner\n */\n\n\ngridProto._findConvertTarget = function (ecModel, finder) {\n  var seriesModel = finder.seriesModel;\n  var xAxisModel = finder.xAxisModel || seriesModel && seriesModel.getReferringComponents('xAxis')[0];\n  var yAxisModel = finder.yAxisModel || seriesModel && seriesModel.getReferringComponents('yAxis')[0];\n  var gridModel = finder.gridModel;\n  var coordsList = this._coordsList;\n  var cartesian;\n  var axis;\n\n  if (seriesModel) {\n    cartesian = seriesModel.coordinateSystem;\n    zrUtil.indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n  } else if (xAxisModel && yAxisModel) {\n    cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  } else if (xAxisModel) {\n    axis = this.getAxis('x', xAxisModel.componentIndex);\n  } else if (yAxisModel) {\n    axis = this.getAxis('y', yAxisModel.componentIndex);\n  } // Lowest priority.\n  else if (gridModel) {\n      var grid = gridModel.coordinateSystem;\n\n      if (grid === this) {\n        cartesian = this._coordsList[0];\n      }\n    }\n\n  return {\n    cartesian: cartesian,\n    axis: axis\n  };\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.containPoint = function (point) {\n  var coord = this._coordsList[0];\n\n  if (coord) {\n    return coord.containPoint(point);\n  }\n};\n/**\n * Initialize cartesian coordinate systems\n * @private\n */\n\n\ngridProto._initCartesian = function (gridModel, ecModel, api) {\n  var axisPositionUsed = {\n    left: false,\n    right: false,\n    top: false,\n    bottom: false\n  };\n  var axesMap = {\n    x: {},\n    y: {}\n  };\n  var axesCount = {\n    x: 0,\n    y: 0\n  }; /// Create axis\n\n  ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n  ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n  if (!axesCount.x || !axesCount.y) {\n    // Roll back when there no either x or y axis\n    this._axesMap = {};\n    this._axesList = [];\n    return;\n  }\n\n  this._axesMap = axesMap; /// Create cartesian2d\n\n  each(axesMap.x, function (xAxis, xAxisIndex) {\n    each(axesMap.y, function (yAxis, yAxisIndex) {\n      var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n      var cartesian = new Cartesian2D(key);\n      cartesian.grid = this;\n      cartesian.model = gridModel;\n      this._coordsMap[key] = cartesian;\n\n      this._coordsList.push(cartesian);\n\n      cartesian.addAxis(xAxis);\n      cartesian.addAxis(yAxis);\n    }, this);\n  }, this);\n\n  function createAxisCreator(axisType) {\n    return function (axisModel, idx) {\n      if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var axisPosition = axisModel.get('position');\n\n      if (axisType === 'x') {\n        // Fix position\n        if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n          // Default bottom of X\n          axisPosition = 'bottom';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n          }\n        }\n      } else {\n        // Fix position\n        if (axisPosition !== 'left' && axisPosition !== 'right') {\n          // Default left of Y\n          axisPosition = 'left';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n          }\n        }\n      }\n\n      axisPositionUsed[axisPosition] = true;\n      var axis = new Axis2D(axisType, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisPosition);\n      var isCategory = axis.type === 'category';\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\n      axis.inverse = axisModel.get('inverse');\n      axis.onZero = axisModel.get('axisLine.onZero');\n      axis.onZeroAxisIndex = axisModel.get('axisLine.onZeroAxisIndex'); // Inject axis into axisModel\n\n      axisModel.axis = axis; // Inject axisModel into axis\n\n      axis.model = axisModel; // Inject grid info axis\n\n      axis.grid = this; // Index of axis, can be used as key\n\n      axis.index = idx;\n\n      this._axesList.push(axis);\n\n      axesMap[axisType][idx] = axis;\n      axesCount[axisType]++;\n    };\n  }\n};\n/**\n * Update cartesian properties from series\n * @param  {module:echarts/model/Option} option\n * @private\n */\n\n\ngridProto._updateScale = function (ecModel, gridModel) {\n  // Reset scale\n  zrUtil.each(this._axesList, function (axis) {\n    axis.scale.setExtent(Infinity, -Infinity);\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (isCartesian2D(seriesModel)) {\n      var axesModels = findAxesModels(seriesModel, ecModel);\n      var xAxisModel = axesModels[0];\n      var yAxisModel = axesModels[1];\n\n      if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel) || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n      var data = seriesModel.getData();\n      var xAxis = cartesian.getAxis('x');\n      var yAxis = cartesian.getAxis('y');\n\n      if (data.type === 'list') {\n        unionExtent(data, xAxis, seriesModel);\n        unionExtent(data, yAxis, seriesModel);\n      }\n    }\n  }, this);\n\n  function unionExtent(data, axis, seriesModel) {\n    each(seriesModel.coordDimToDataDim(axis.dim), function (dim) {\n      axis.scale.unionExtentFromData(data, dim);\n    });\n  }\n};\n/**\n * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n * @return {Object} {baseAxes: [], otherAxes: []}\n */\n\n\ngridProto.getTooltipAxes = function (dim) {\n  var baseAxes = [];\n  var otherAxes = [];\n  each(this.getCartesians(), function (cartesian) {\n    var baseAxis = dim != null && dim !== 'auto' ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n    var otherAxis = cartesian.getOtherAxis(baseAxis);\n    zrUtil.indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n    zrUtil.indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n  });\n  return {\n    baseAxes: baseAxes,\n    otherAxes: otherAxes\n  };\n};\n/**\n * @inner\n */\n\n\nfunction updateAxisTransfrom(axis, coordBase) {\n  var axisExtent = axis.getExtent();\n  var axisExtentSum = axisExtent[0] + axisExtent[1]; // Fast transform\n\n  axis.toGlobalCoord = axis.dim === 'x' ? function (coord) {\n    return coord + coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n  axis.toLocalCoord = axis.dim === 'x' ? function (coord) {\n    return coord - coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n}\n\nvar axesTypes = ['xAxis', 'yAxis'];\n/**\n * @inner\n */\n\nfunction findAxesModels(seriesModel, ecModel) {\n  return zrUtil.map(axesTypes, function (axisType) {\n    var axisModel = seriesModel.getReferringComponents(axisType)[0];\n    return axisModel;\n  });\n}\n/**\n * @inner\n */\n\n\nfunction isCartesian2D(seriesModel) {\n  return seriesModel.get('coordinateSystem') === 'cartesian2d';\n}\n\nGrid.create = function (ecModel, api) {\n  var grids = [];\n  ecModel.eachComponent('grid', function (gridModel, idx) {\n    var grid = new Grid(gridModel, ecModel, api);\n    grid.name = 'grid_' + idx; // dataSampling requires axis extent, so resize\n    // should be performed in create stage.\n\n    grid.resize(gridModel, api, true);\n    gridModel.coordinateSystem = grid;\n    grids.push(grid);\n  }); // Inject the coordinateSystems into seriesModel\n\n  ecModel.eachSeries(function (seriesModel) {\n    if (!isCartesian2D(seriesModel)) {\n      return;\n    }\n\n    var axesModels = findAxesModels(seriesModel, ecModel);\n    var xAxisModel = axesModels[0];\n    var yAxisModel = axesModels[1];\n    var gridModel = xAxisModel.getCoordSysModel();\n    var grid = gridModel.coordinateSystem;\n    seriesModel.coordinateSystem = grid.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  });\n  return grids;\n}; // For deciding which dimensions to use when creating list data\n\n\nGrid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\nCoordinateSystem.register('cartesian2d', Grid);\nvar _default = Grid;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1159:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar ComponentModel = __webpack_require__(991);\n\nvar axisModelCreator = __webpack_require__(1089);\n\nvar axisModelCommonMixin = __webpack_require__(1028);\n\nvar AxisModel = ComponentModel.extend({\n  type: 'cartesian2dAxis',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Axis2D}\n   */\n  axis: null,\n\n  /**\n   * @override\n   */\n  init: function () {\n    AxisModel.superApply(this, 'init', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function () {\n    AxisModel.superApply(this, 'mergeOption', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  restoreData: function () {\n    AxisModel.superApply(this, 'restoreData', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   * @return {module:echarts/model/Component}\n   */\n  getCoordSysModel: function () {\n    return this.ecModel.queryComponents({\n      mainType: 'grid',\n      index: this.option.gridIndex,\n      id: this.option.gridId\n    })[0];\n  }\n});\n\nfunction getAxisType(axisDim, option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}\n\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\nvar extraOption = {\n  // gridIndex: 0,\n  // gridId: '',\n  // Offset is for multiple axis on the same position\n  offset: 0\n};\naxisModelCreator('x', AxisModel, getAxisType, extraOption);\naxisModelCreator('y', AxisModel, getAxisType, extraOption);\nvar _default = AxisModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1164:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _model = __webpack_require__(982);\n\nvar otherDimToDataDim = _model.otherDimToDataDim;\n\n/**\n * @module echarts/chart/helper/Symbol\n */\nfunction findLabelValueDim(data) {\n  var valueDim;\n  var labelDims = otherDimToDataDim(data, 'label');\n\n  if (labelDims.length) {\n    valueDim = labelDims[0];\n  } else {\n    // Get last value dim\n    var dimensions = data.dimensions.slice();\n    var dataType;\n\n    while (dimensions.length && (valueDim = dimensions.pop(), dataType = data.getDimensionInfo(valueDim).type, dataType === 'ordinal' || dataType === 'time')) {} // jshint ignore:line\n\n  }\n\n  return valueDim;\n}\n\nexports.findLabelValueDim = findLabelValueDim;\n\n/***/ }),\n\n/***/ 1165:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(988);\n\nvar vec2 = __webpack_require__(984);\n\nvar fixClipWithShadow = __webpack_require__(1060);\n\n// Poly path support NaN point\nvar vec2Min = vec2.min;\nvar vec2Max = vec2.max;\nvar scaleAndAdd = vec2.scaleAndAdd;\nvar v2Copy = vec2.copy; // Temporary variable\n\nvar v = [];\nvar cp0 = [];\nvar cp1 = [];\n\nfunction isPointNull(p) {\n  return isNaN(p[0]) || isNaN(p[1]);\n}\n\nfunction drawSegment(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  var prevIdx = 0;\n  var idx = start;\n\n  for (var k = 0; k < segLen; k++) {\n    var p = points[idx];\n\n    if (idx >= allLen || idx < 0) {\n      break;\n    }\n\n    if (isPointNull(p)) {\n      if (connectNulls) {\n        idx += dir;\n        continue;\n      }\n\n      break;\n    }\n\n    if (idx === start) {\n      ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n      v2Copy(cp0, p);\n    } else {\n      if (smooth > 0) {\n        var nextIdx = idx + dir;\n        var nextP = points[nextIdx];\n\n        if (connectNulls) {\n          // Find next point not null\n          while (nextP && isPointNull(points[nextIdx])) {\n            nextIdx += dir;\n            nextP = points[nextIdx];\n          }\n        }\n\n        var ratioNextSeg = 0.5;\n        var prevP = points[prevIdx];\n        var nextP = points[nextIdx]; // Last point\n\n        if (!nextP || isPointNull(nextP)) {\n          v2Copy(cp1, p);\n        } else {\n          // If next data is null in not connect case\n          if (isPointNull(nextP) && !connectNulls) {\n            nextP = p;\n          }\n\n          vec2.sub(v, nextP, prevP);\n          var lenPrevSeg;\n          var lenNextSeg;\n\n          if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n            var dim = smoothMonotone === 'x' ? 0 : 1;\n            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n          } else {\n            lenPrevSeg = vec2.dist(p, prevP);\n            lenNextSeg = vec2.dist(p, nextP);\n          } // Use ratio of seg length\n\n\n          ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n          scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n        } // Smooth constraint\n\n\n        vec2Min(cp0, cp0, smoothMax);\n        vec2Max(cp0, cp0, smoothMin);\n        vec2Min(cp1, cp1, smoothMax);\n        vec2Max(cp1, cp1, smoothMin);\n        ctx.bezierCurveTo(cp0[0], cp0[1], cp1[0], cp1[1], p[0], p[1]); // cp0 of next segment\n\n        scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n      } else {\n        ctx.lineTo(p[0], p[1]);\n      }\n    }\n\n    prevIdx = idx;\n    idx += dir;\n  }\n\n  return k;\n}\n\nfunction getBoundingBox(points, smoothConstraint) {\n  var ptMin = [Infinity, Infinity];\n  var ptMax = [-Infinity, -Infinity];\n\n  if (smoothConstraint) {\n    for (var i = 0; i < points.length; i++) {\n      var pt = points[i];\n\n      if (pt[0] < ptMin[0]) {\n        ptMin[0] = pt[0];\n      }\n\n      if (pt[1] < ptMin[1]) {\n        ptMin[1] = pt[1];\n      }\n\n      if (pt[0] > ptMax[0]) {\n        ptMax[0] = pt[0];\n      }\n\n      if (pt[1] > ptMax[1]) {\n        ptMax[1] = pt[1];\n      }\n    }\n  }\n\n  return {\n    min: smoothConstraint ? ptMin : ptMax,\n    max: smoothConstraint ? ptMax : ptMin\n  };\n}\n\nvar Polyline = Path.extend({\n  type: 'ec-polyline',\n  shape: {\n    points: [],\n    smooth: 0,\n    smoothConstraint: true,\n    smoothMonotone: null,\n    connectNulls: false\n  },\n  style: {\n    fill: null,\n    stroke: '#000'\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var points = shape.points;\n    var i = 0;\n    var len = points.length;\n    var result = getBoundingBox(points, shape.smoothConstraint);\n\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len - 1])) {\n          break;\n        }\n      }\n\n      for (; i < len; i++) {\n        if (!isPointNull(points[i])) {\n          break;\n        }\n      }\n    }\n\n    while (i < len) {\n      i += drawSegment(ctx, points, i, len, len, 1, result.min, result.max, shape.smooth, shape.smoothMonotone, shape.connectNulls) + 1;\n    }\n  }\n});\nvar Polygon = Path.extend({\n  type: 'ec-polygon',\n  shape: {\n    points: [],\n    // Offset between stacked base points and points\n    stackedOnPoints: [],\n    smooth: 0,\n    stackedOnSmooth: 0,\n    smoothConstraint: true,\n    smoothMonotone: null,\n    connectNulls: false\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var points = shape.points;\n    var stackedOnPoints = shape.stackedOnPoints;\n    var i = 0;\n    var len = points.length;\n    var smoothMonotone = shape.smoothMonotone;\n    var bbox = getBoundingBox(points, shape.smoothConstraint);\n    var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len - 1])) {\n          break;\n        }\n      }\n\n      for (; i < len; i++) {\n        if (!isPointNull(points[i])) {\n          break;\n        }\n      }\n    }\n\n    while (i < len) {\n      var k = drawSegment(ctx, points, i, len, len, 1, bbox.min, bbox.max, shape.smooth, smoothMonotone, shape.connectNulls);\n      drawSegment(ctx, stackedOnPoints, i + k - 1, k, len, -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth, smoothMonotone, shape.connectNulls);\n      i += k + 1;\n      ctx.closePath();\n    }\n  }\n});\nexports.Polyline = Polyline;\nexports.Polygon = Polygon;\n\n/***/ }),\n\n/***/ 1166:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar defaultOption = {\n  show: true,\n  zlevel: 0,\n  // 一级层叠\n  z: 0,\n  // 二级层叠\n  // 反向坐标轴\n  inverse: false,\n  // 坐标轴名字，默认为空\n  name: '',\n  // 坐标轴名字位置，支持'start' | 'middle' | 'end'\n  nameLocation: 'end',\n  // 坐标轴名字旋转，degree。\n  nameRotate: null,\n  // Adapt to axis rotate, when nameLocation is 'middle'.\n  nameTruncate: {\n    maxWidth: null,\n    ellipsis: '...',\n    placeholder: '.'\n  },\n  // 坐标轴文字样式，默认取全局样式\n  nameTextStyle: {},\n  // 文字与轴线距离\n  nameGap: 15,\n  silent: false,\n  // Default false to support tooltip.\n  triggerEvent: false,\n  // Default false to avoid legacy user event listener fail.\n  tooltip: {\n    show: false\n  },\n  axisPointer: {},\n  // 坐标轴线\n  axisLine: {\n    // 默认显示，属性show控制显示与否\n    show: true,\n    onZero: true,\n    onZeroAxisIndex: null,\n    // 属性lineStyle控制线条样式\n    lineStyle: {\n      color: '#333',\n      width: 1,\n      type: 'solid'\n    },\n    // 坐标轴两端的箭头\n    symbol: ['none', 'none'],\n    symbolSize: [10, 15]\n  },\n  // 坐标轴小标记\n  axisTick: {\n    // 属性show控制显示与否，默认显示\n    show: true,\n    // 控制小标记是否在grid里\n    inside: false,\n    // 属性length控制线长\n    length: 5,\n    // 属性lineStyle控制线条样式\n    lineStyle: {\n      width: 1\n    }\n  },\n  // 坐标轴文本标签，详见axis.axisLabel\n  axisLabel: {\n    show: true,\n    // 控制文本标签是否在grid里\n    inside: false,\n    rotate: 0,\n    showMinLabel: null,\n    // true | false | null (auto)\n    showMaxLabel: null,\n    // true | false | null (auto)\n    margin: 8,\n    // formatter: null,\n    // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n    fontSize: 12\n  },\n  // 分隔线\n  splitLine: {\n    // 默认显示，属性show控制显示与否\n    show: true,\n    // 属性lineStyle（详见lineStyle）控制线条样式\n    lineStyle: {\n      color: ['#ccc'],\n      width: 1,\n      type: 'solid'\n    }\n  },\n  // 分隔区域\n  splitArea: {\n    // 默认不显示，属性show控制显示与否\n    show: false,\n    // 属性areaStyle（详见areaStyle）控制区域样式\n    areaStyle: {\n      color: ['rgba(250,250,250,0.3)', 'rgba(200,200,200,0.3)']\n    }\n  }\n};\nvar axisDefault = {};\naxisDefault.categoryAxis = zrUtil.merge({\n  // 类目起始和结束两端空白策略\n  boundaryGap: true,\n  // splitArea: {\n  // show: false\n  // },\n  splitLine: {\n    show: false\n  },\n  // 坐标轴小标记\n  axisTick: {\n    // If tick is align with label when boundaryGap is true\n    alignWithLabel: false,\n    interval: 'auto'\n  },\n  // 坐标轴文本标签，详见axis.axisLabel\n  axisLabel: {\n    interval: 'auto'\n  }\n}, defaultOption);\naxisDefault.valueAxis = zrUtil.merge({\n  // 数值起始和结束两端空白策略\n  boundaryGap: [0, 0],\n  // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n  // min: null,\n  // 最大值，设置成 'dataMax' 则从数据中计算最大值\n  // max: null,\n  // Readonly prop, specifies start value of the range when using data zoom.\n  // rangeStart: null\n  // Readonly prop, specifies end value of the range when using data zoom.\n  // rangeEnd: null\n  // 脱离0值比例，放大聚焦到最终_min，_max区间\n  // scale: false,\n  // 分割段数，默认为5\n  splitNumber: 5 // Minimum interval\n  // minInterval: null\n  // maxInterval: null\n\n}, defaultOption); // FIXME\n\naxisDefault.timeAxis = zrUtil.defaults({\n  scale: true,\n  min: 'dataMin',\n  max: 'dataMax'\n}, axisDefault.valueAxis);\naxisDefault.logAxis = zrUtil.defaults({\n  scale: true,\n  logBase: 10\n}, axisDefault.valueAxis);\nvar _default = axisDefault;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1176:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(979);\n\nvar zrUtil = __webpack_require__(978);\n\n__webpack_require__(1177);\n\n__webpack_require__(1178);\n\nvar visualSymbol = __webpack_require__(1041);\n\nvar layoutPoints = __webpack_require__(1157);\n\nvar dataSample = __webpack_require__(1180);\n\n__webpack_require__(1059);\n\n// In case developer forget to include grid component\necharts.registerVisual(zrUtil.curry(visualSymbol, 'line', 'circle', 'line'));\necharts.registerLayout(zrUtil.curry(layoutPoints, 'line')); // Down sample after filter\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, zrUtil.curry(dataSample, 'line'));\n\n/***/ }),\n\n/***/ 1177:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(983);\n\nvar __DEV__ = _config.__DEV__;\n\nvar createListFromArray = __webpack_require__(1016);\n\nvar SeriesModel = __webpack_require__(1000);\n\nvar _default = SeriesModel.extend({\n  type: 'series.line',\n  dependencies: ['grid', 'polar'],\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(option.data, this, ecModel);\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // stack: null\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // polarIndex: 0,\n    // If clip the overflow value\n    clipOverflow: true,\n    // cursor: null,\n    label: {\n      normal: {\n        position: 'top'\n      }\n    },\n    // itemStyle: {\n    //     normal: {},\n    //     emphasis: {}\n    // },\n    lineStyle: {\n      normal: {\n        width: 2,\n        type: 'solid'\n      }\n    },\n    // areaStyle: {},\n    // false, 'start', 'end', 'middle'\n    step: false,\n    // Disabled if step is true\n    smooth: false,\n    smoothMonotone: null,\n    // 拐点图形类型\n    symbol: 'emptyCircle',\n    // 拐点图形大小\n    symbolSize: 4,\n    // 拐点图形旋转控制\n    symbolRotate: null,\n    // 是否显示 symbol, 只有在 tooltip hover 的时候显示\n    showSymbol: true,\n    // 标志图形默认只有主轴显示（随主轴标签间隔隐藏策略）\n    showAllSymbol: false,\n    // 是否连接断点\n    connectNulls: false,\n    // 数据过滤，'average', 'max', 'min', 'sum'\n    sampling: 'none',\n    animationEasing: 'linear',\n    // Disable progressive\n    progressive: 0,\n    hoverLayerThreshold: Infinity\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1178:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(983);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(978);\n\nvar SymbolDraw = __webpack_require__(1068);\n\nvar SymbolClz = __webpack_require__(1069);\n\nvar lineAnimationDiff = __webpack_require__(1179);\n\nvar graphic = __webpack_require__(980);\n\nvar modelUtil = __webpack_require__(982);\n\nvar _poly = __webpack_require__(1165);\n\nvar Polyline = _poly.Polyline;\nvar Polygon = _poly.Polygon;\n\nvar ChartView = __webpack_require__(1012);\n\n// FIXME step not support polar\nfunction isPointsSame(points1, points2) {\n  if (points1.length !== points2.length) {\n    return;\n  }\n\n  for (var i = 0; i < points1.length; i++) {\n    var p1 = points1[i];\n    var p2 = points2[i];\n\n    if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n      return;\n    }\n  }\n\n  return true;\n}\n\nfunction getSmooth(smooth) {\n  return typeof smooth === 'number' ? smooth : smooth ? 0.3 : 0;\n}\n\nfunction getAxisExtentWithGap(axis) {\n  var extent = axis.getGlobalExtent();\n\n  if (axis.onBand) {\n    // Remove extra 1px to avoid line miter in clipped edge\n    var halfBandWidth = axis.getBandWidth() / 2 - 1;\n    var dir = extent[1] > extent[0] ? 1 : -1;\n    extent[0] += dir * halfBandWidth;\n    extent[1] -= dir * halfBandWidth;\n  }\n\n  return extent;\n}\n\nfunction sign(val) {\n  return val >= 0 ? 1 : -1;\n}\n/**\n * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n * @param {module:echarts/data/List} data\n * @param {Array.<Array.<number>>} points\n * @private\n */\n\n\nfunction getStackedOnPoints(coordSys, data) {\n  var baseAxis = coordSys.getBaseAxis();\n  var valueAxis = coordSys.getOtherAxis(baseAxis);\n  var valueStart = 0;\n\n  if (!baseAxis.onZero) {\n    var extent = valueAxis.scale.getExtent();\n\n    if (extent[0] > 0) {\n      // Both positive\n      valueStart = extent[0];\n    } else if (extent[1] < 0) {\n      // Both negative\n      valueStart = extent[1];\n    } // If is one positive, and one negative, onZero shall be true\n\n  }\n\n  var valueDim = valueAxis.dim;\n  var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n  return data.mapArray([valueDim], function (val, idx) {\n    var stackedOnSameSign;\n    var stackedOn = data.stackedOn; // Find first stacked value with same sign\n\n    while (stackedOn && sign(stackedOn.get(valueDim, idx)) === sign(val)) {\n      stackedOnSameSign = stackedOn;\n      break;\n    }\n\n    var stackedData = [];\n    stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n    stackedData[1 - baseDataOffset] = stackedOnSameSign ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n    return coordSys.dataToPoint(stackedData);\n  }, true);\n}\n\nfunction createGridClipShape(cartesian, hasAnimation, seriesModel) {\n  var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n  var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n  var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n  var x = Math.min(xExtent[0], xExtent[1]);\n  var y = Math.min(yExtent[0], yExtent[1]);\n  var width = Math.max(xExtent[0], xExtent[1]) - x;\n  var height = Math.max(yExtent[0], yExtent[1]) - y;\n  var lineWidth = seriesModel.get('lineStyle.normal.width') || 2; // Expand clip shape to avoid clipping when line value exceeds axis\n\n  var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n\n  if (isHorizontal) {\n    y -= expandSize;\n    height += expandSize * 2;\n  } else {\n    x -= expandSize;\n    width += expandSize * 2;\n  }\n\n  var clipPath = new graphic.Rect({\n    shape: {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n    graphic.initProps(clipPath, {\n      shape: {\n        width: width,\n        height: height\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createPolarClipShape(polar, hasAnimation, seriesModel) {\n  var angleAxis = polar.getAngleAxis();\n  var radiusAxis = polar.getRadiusAxis();\n  var radiusExtent = radiusAxis.getExtent();\n  var angleExtent = angleAxis.getExtent();\n  var RADIAN = Math.PI / 180;\n  var clipPath = new graphic.Sector({\n    shape: {\n      cx: polar.cx,\n      cy: polar.cy,\n      r0: radiusExtent[0],\n      r: radiusExtent[1],\n      startAngle: -angleExtent[0] * RADIAN,\n      endAngle: -angleExtent[1] * RADIAN,\n      clockwise: angleAxis.inverse\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: -angleExtent[1] * RADIAN\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createClipShape(coordSys, hasAnimation, seriesModel) {\n  return coordSys.type === 'polar' ? createPolarClipShape(coordSys, hasAnimation, seriesModel) : createGridClipShape(coordSys, hasAnimation, seriesModel);\n}\n\nfunction turnPointsIntoStep(points, coordSys, stepTurnAt) {\n  var baseAxis = coordSys.getBaseAxis();\n  var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n  var stepPoints = [];\n\n  for (var i = 0; i < points.length - 1; i++) {\n    var nextPt = points[i + 1];\n    var pt = points[i];\n    stepPoints.push(pt);\n    var stepPt = [];\n\n    switch (stepTurnAt) {\n      case 'end':\n        stepPt[baseIndex] = nextPt[baseIndex];\n        stepPt[1 - baseIndex] = pt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n        break;\n\n      case 'middle':\n        // default is start\n        var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n        var stepPt2 = [];\n        stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n        stepPt[1 - baseIndex] = pt[1 - baseIndex];\n        stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n        stepPoints.push(stepPt);\n        stepPoints.push(stepPt2);\n        break;\n\n      default:\n        stepPt[baseIndex] = pt[baseIndex];\n        stepPt[1 - baseIndex] = nextPt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n    }\n  } // Last points\n\n\n  points[i] && stepPoints.push(points[i]);\n  return stepPoints;\n}\n\nfunction getVisualGradient(data, coordSys) {\n  var visualMetaList = data.getVisual('visualMeta');\n\n  if (!visualMetaList || !visualMetaList.length || !data.count()) {\n    // When data.count() is 0, gradient range can not be calculated.\n    return;\n  }\n\n  var visualMeta;\n\n  for (var i = visualMetaList.length - 1; i >= 0; i--) {\n    // Can only be x or y\n    if (visualMetaList[i].dimension < 2) {\n      visualMeta = visualMetaList[i];\n      break;\n    }\n  }\n\n  if (!visualMeta || coordSys.type !== 'cartesian2d') {\n    return;\n  } // If the area to be rendered is bigger than area defined by LinearGradient,\n  // the canvas spec prescribes that the color of the first stop and the last\n  // stop should be used. But if two stops are added at offset 0, in effect\n  // browsers use the color of the second stop to render area outside\n  // LinearGradient. So we can only infinitesimally extend area defined in\n  // LinearGradient to render `outerColors`.\n\n\n  var dimension = visualMeta.dimension;\n  var dimName = data.dimensions[dimension];\n  var axis = coordSys.getAxis(dimName); // dataToCoor mapping may not be linear, but must be monotonic.\n\n  var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n    return {\n      coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n      color: stop.color\n    };\n  });\n  var stopLen = colorStops.length;\n  var outerColors = visualMeta.outerColors.slice();\n\n  if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n    colorStops.reverse();\n    outerColors.reverse();\n  }\n\n  var tinyExtent = 10; // Arbitrary value: 10px\n\n  var minCoord = colorStops[0].coord - tinyExtent;\n  var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n  var coordSpan = maxCoord - minCoord;\n\n  if (coordSpan < 1e-3) {\n    return 'transparent';\n  }\n\n  zrUtil.each(colorStops, function (stop) {\n    stop.offset = (stop.coord - minCoord) / coordSpan;\n  });\n  colorStops.push({\n    offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n    color: outerColors[1] || 'transparent'\n  });\n  colorStops.unshift({\n    // notice colorStops.length have been changed.\n    offset: stopLen ? colorStops[0].offset : 0.5,\n    color: outerColors[0] || 'transparent'\n  }); // zrUtil.each(colorStops, function (colorStop) {\n  //     // Make sure each offset has rounded px to avoid not sharp edge\n  //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n  // });\n\n  var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n  gradient[dimName] = minCoord;\n  gradient[dimName + '2'] = maxCoord;\n  return gradient;\n}\n\nvar _default = ChartView.extend({\n  type: 'line',\n  init: function () {\n    var lineGroup = new graphic.Group();\n    var symbolDraw = new SymbolDraw();\n    this.group.add(symbolDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineGroup = lineGroup;\n  },\n  render: function (seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var lineStyleModel = seriesModel.getModel('lineStyle.normal');\n    var areaStyleModel = seriesModel.getModel('areaStyle.normal');\n    var points = data.mapArray(data.getItemLayout, true);\n    var isCoordSysPolar = coordSys.type === 'polar';\n    var prevCoordSys = this._coordSys;\n    var symbolDraw = this._symbolDraw;\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var lineGroup = this._lineGroup;\n    var hasAnimation = seriesModel.get('animation');\n    var isAreaChart = !areaStyleModel.isEmpty();\n    var stackedOnPoints = getStackedOnPoints(coordSys, data);\n    var showSymbol = seriesModel.get('showSymbol');\n\n    var isSymbolIgnore = showSymbol && !isCoordSysPolar && !seriesModel.get('showAllSymbol') && this._getSymbolIgnoreFunc(data, coordSys); // Remove temporary symbols\n\n\n    var oldData = this._data;\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    }); // Remove previous created symbols if showSymbol changed to false\n\n    if (!showSymbol) {\n      symbolDraw.remove();\n    }\n\n    group.add(lineGroup); // FIXME step not support polar\n\n    var step = !isCoordSysPolar && seriesModel.get('step'); // Initialization animation or coordinate system changed\n\n    if (!(polyline && prevCoordSys.type === coordSys.type && step === this._step)) {\n      showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n      if (step) {\n        // TODO If stacked series is not step\n        points = turnPointsIntoStep(points, coordSys, step);\n        stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n      }\n\n      polyline = this._newPolyline(points, coordSys, hasAnimation);\n\n      if (isAreaChart) {\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      }\n\n      lineGroup.setClipPath(createClipShape(coordSys, true, seriesModel));\n    } else {\n      if (isAreaChart && !polygon) {\n        // If areaStyle is added\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      } else if (polygon && !isAreaChart) {\n        // If areaStyle is removed\n        lineGroup.remove(polygon);\n        polygon = this._polygon = null;\n      } // Update clipPath\n\n\n      lineGroup.setClipPath(createClipShape(coordSys, false, seriesModel)); // Always update, or it is wrong in the case turning on legend\n      // because points are not changed\n\n      showSymbol && symbolDraw.updateData(data, isSymbolIgnore); // Stop symbol animation and sync with line points\n      // FIXME performance?\n\n      data.eachItemGraphicEl(function (el) {\n        el.stopAnimation(true);\n      }); // In the case data zoom triggerred refreshing frequently\n      // Data may not change if line has a category axis. So it should animate nothing\n\n      if (!isPointsSame(this._stackedOnPoints, stackedOnPoints) || !isPointsSame(this._points, points)) {\n        if (hasAnimation) {\n          this._updateAnimation(data, stackedOnPoints, coordSys, api, step);\n        } else {\n          // Not do it in update with animation\n          if (step) {\n            // TODO If stacked series is not step\n            points = turnPointsIntoStep(points, coordSys, step);\n            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n          }\n\n          polyline.setShape({\n            points: points\n          });\n          polygon && polygon.setShape({\n            points: points,\n            stackedOnPoints: stackedOnPoints\n          });\n        }\n      }\n    }\n\n    var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n    polyline.useStyle(zrUtil.defaults( // Use color in lineStyle first\n    lineStyleModel.getLineStyle(), {\n      fill: 'none',\n      stroke: visualColor,\n      lineJoin: 'bevel'\n    }));\n    var smooth = seriesModel.get('smooth');\n    smooth = getSmooth(seriesModel.get('smooth'));\n    polyline.setShape({\n      smooth: smooth,\n      smoothMonotone: seriesModel.get('smoothMonotone'),\n      connectNulls: seriesModel.get('connectNulls')\n    });\n\n    if (polygon) {\n      var stackedOn = data.stackedOn;\n      var stackedOnSmooth = 0;\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: visualColor,\n        opacity: 0.7,\n        lineJoin: 'bevel'\n      }));\n\n      if (stackedOn) {\n        var stackedOnSeries = stackedOn.hostModel;\n        stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n      }\n\n      polygon.setShape({\n        smooth: smooth,\n        stackedOnSmooth: stackedOnSmooth,\n        smoothMonotone: seriesModel.get('smoothMonotone'),\n        connectNulls: seriesModel.get('connectNulls')\n      });\n    }\n\n    this._data = data; // Save the coordinate system for transition animation when data changed\n\n    this._coordSys = coordSys;\n    this._stackedOnPoints = stackedOnPoints;\n    this._points = points;\n    this._step = step;\n  },\n  dispose: function () {},\n  highlight: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (!symbol) {\n        // Create a temporary symbol if it is not exists\n        var pt = data.getItemLayout(dataIndex);\n\n        if (!pt) {\n          // Null data\n          return;\n        }\n\n        symbol = new SymbolClz(data, dataIndex);\n        symbol.position = pt;\n        symbol.setZ(seriesModel.get('zlevel'), seriesModel.get('z'));\n        symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n        symbol.__temp = true;\n        data.setItemGraphicEl(dataIndex, symbol); // Stop scale animation\n\n        symbol.stopSymbolAnimation(true);\n        this.group.add(symbol);\n      }\n\n      symbol.highlight();\n    } else {\n      // Highlight whole series\n      ChartView.prototype.highlight.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n  downplay: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (symbol) {\n        if (symbol.__temp) {\n          data.setItemGraphicEl(dataIndex, null);\n          this.group.remove(symbol);\n        } else {\n          symbol.downplay();\n        }\n      }\n    } else {\n      // FIXME\n      // can not downplay completely.\n      // Downplay whole series\n      ChartView.prototype.downplay.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolyline: function (points) {\n    var polyline = this._polyline; // Remove previous created polyline\n\n    if (polyline) {\n      this._lineGroup.remove(polyline);\n    }\n\n    polyline = new Polyline({\n      shape: {\n        points: points\n      },\n      silent: true,\n      z2: 10\n    });\n\n    this._lineGroup.add(polyline);\n\n    this._polyline = polyline;\n    return polyline;\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} stackedOnPoints\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolygon: function (points, stackedOnPoints) {\n    var polygon = this._polygon; // Remove previous created polygon\n\n    if (polygon) {\n      this._lineGroup.remove(polygon);\n    }\n\n    polygon = new Polygon({\n      shape: {\n        points: points,\n        stackedOnPoints: stackedOnPoints\n      },\n      silent: true\n    });\n\n    this._lineGroup.add(polygon);\n\n    this._polygon = polygon;\n    return polygon;\n  },\n\n  /**\n   * @private\n   */\n  _getSymbolIgnoreFunc: function (data, coordSys) {\n    var categoryAxis = coordSys.getAxesByScale('ordinal')[0]; // `getLabelInterval` is provided by echarts/component/axis\n\n    if (categoryAxis && categoryAxis.isLabelIgnored) {\n      return zrUtil.bind(categoryAxis.isLabelIgnored, categoryAxis);\n    }\n  },\n\n  /**\n   * @private\n   */\n  // FIXME Two value axis\n  _updateAnimation: function (data, stackedOnPoints, coordSys, api, step) {\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var seriesModel = data.hostModel;\n    var diff = lineAnimationDiff(this._data, data, this._stackedOnPoints, stackedOnPoints, this._coordSys, coordSys);\n    var current = diff.current;\n    var stackedOnCurrent = diff.stackedOnCurrent;\n    var next = diff.next;\n    var stackedOnNext = diff.stackedOnNext;\n\n    if (step) {\n      // TODO If stacked series is not step\n      current = turnPointsIntoStep(diff.current, coordSys, step);\n      stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n      next = turnPointsIntoStep(diff.next, coordSys, step);\n      stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n    } // `diff.current` is subset of `current` (which should be ensured by\n    // turnPointsIntoStep), so points in `__points` can be updated when\n    // points in `current` are update during animation.\n\n\n    polyline.shape.__points = diff.current;\n    polyline.shape.points = current;\n    graphic.updateProps(polyline, {\n      shape: {\n        points: next\n      }\n    }, seriesModel);\n\n    if (polygon) {\n      polygon.setShape({\n        points: current,\n        stackedOnPoints: stackedOnCurrent\n      });\n      graphic.updateProps(polygon, {\n        shape: {\n          points: next,\n          stackedOnPoints: stackedOnNext\n        }\n      }, seriesModel);\n    }\n\n    var updatedDataInfo = [];\n    var diffStatus = diff.status;\n\n    for (var i = 0; i < diffStatus.length; i++) {\n      var cmd = diffStatus[i].cmd;\n\n      if (cmd === '=') {\n        var el = data.getItemGraphicEl(diffStatus[i].idx1);\n\n        if (el) {\n          updatedDataInfo.push({\n            el: el,\n            ptIdx: i // Index of points\n\n          });\n        }\n      }\n    }\n\n    if (polyline.animators && polyline.animators.length) {\n      polyline.animators[0].during(function () {\n        for (var i = 0; i < updatedDataInfo.length; i++) {\n          var el = updatedDataInfo[i].el;\n          el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n        }\n      });\n    }\n  },\n  remove: function (ecModel) {\n    var group = this.group;\n    var oldData = this._data;\n\n    this._lineGroup.removeAll();\n\n    this._symbolDraw.remove(true); // Remove temporary created elements when highlighting\n\n\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    });\n    this._polyline = this._polygon = this._coordSys = this._points = this._stackedOnPoints = this._data = null;\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1179:\n/***/ (function(module, exports) {\n\n// var arrayDiff = require('zrender/src/core/arrayDiff');\n// 'zrender/src/core/arrayDiff' has been used before, but it did\n// not do well in performance when roam with fixed dataZoom window.\nfunction sign(val) {\n  return val >= 0 ? 1 : -1;\n}\n\nfunction getStackedOnPoint(coordSys, data, idx) {\n  var baseAxis = coordSys.getBaseAxis();\n  var valueAxis = coordSys.getOtherAxis(baseAxis);\n  var valueStart = baseAxis.onZero ? 0 : valueAxis.scale.getExtent()[0];\n  var valueDim = valueAxis.dim;\n  var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n  var stackedOnSameSign;\n  var stackedOn = data.stackedOn;\n  var val = data.get(valueDim, idx); // Find first stacked value with same sign\n\n  while (stackedOn && sign(stackedOn.get(valueDim, idx)) === sign(val)) {\n    stackedOnSameSign = stackedOn;\n    break;\n  }\n\n  var stackedData = [];\n  stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n  stackedData[1 - baseDataOffset] = stackedOnSameSign ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n  return coordSys.dataToPoint(stackedData);\n} // function convertToIntId(newIdList, oldIdList) {\n//     // Generate int id instead of string id.\n//     // Compare string maybe slow in score function of arrDiff\n//     // Assume id in idList are all unique\n//     var idIndicesMap = {};\n//     var idx = 0;\n//     for (var i = 0; i < newIdList.length; i++) {\n//         idIndicesMap[newIdList[i]] = idx;\n//         newIdList[i] = idx++;\n//     }\n//     for (var i = 0; i < oldIdList.length; i++) {\n//         var oldId = oldIdList[i];\n//         // Same with newIdList\n//         if (idIndicesMap[oldId]) {\n//             oldIdList[i] = idIndicesMap[oldId];\n//         }\n//         else {\n//             oldIdList[i] = idx++;\n//         }\n//     }\n// }\n\n\nfunction diffData(oldData, newData) {\n  var diffResult = [];\n  newData.diff(oldData).add(function (idx) {\n    diffResult.push({\n      cmd: '+',\n      idx: idx\n    });\n  }).update(function (newIdx, oldIdx) {\n    diffResult.push({\n      cmd: '=',\n      idx: oldIdx,\n      idx1: newIdx\n    });\n  }).remove(function (idx) {\n    diffResult.push({\n      cmd: '-',\n      idx: idx\n    });\n  }).execute();\n  return diffResult;\n}\n\nfunction _default(oldData, newData, oldStackedOnPoints, newStackedOnPoints, oldCoordSys, newCoordSys) {\n  var diff = diffData(oldData, newData); // var newIdList = newData.mapArray(newData.getId);\n  // var oldIdList = oldData.mapArray(oldData.getId);\n  // convertToIntId(newIdList, oldIdList);\n  // // FIXME One data ?\n  // diff = arrayDiff(oldIdList, newIdList);\n\n  var currPoints = [];\n  var nextPoints = []; // Points for stacking base line\n\n  var currStackedPoints = [];\n  var nextStackedPoints = [];\n  var status = [];\n  var sortedIndices = [];\n  var rawIndices = [];\n  var dims = newCoordSys.dimensions;\n\n  for (var i = 0; i < diff.length; i++) {\n    var diffItem = diff[i];\n    var pointAdded = true; // FIXME, animation is not so perfect when dataZoom window moves fast\n    // Which is in case remvoing or add more than one data in the tail or head\n\n    switch (diffItem.cmd) {\n      case '=':\n        var currentPt = oldData.getItemLayout(diffItem.idx);\n        var nextPt = newData.getItemLayout(diffItem.idx1); // If previous data is NaN, use next point directly\n\n        if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n          currentPt = nextPt.slice();\n        }\n\n        currPoints.push(currentPt);\n        nextPoints.push(nextPt);\n        currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n        nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n        rawIndices.push(newData.getRawIndex(diffItem.idx1));\n        break;\n\n      case '+':\n        var idx = diffItem.idx;\n        currPoints.push(oldCoordSys.dataToPoint([newData.get(dims[0], idx, true), newData.get(dims[1], idx, true)]));\n        nextPoints.push(newData.getItemLayout(idx).slice());\n        currStackedPoints.push(getStackedOnPoint(oldCoordSys, newData, idx));\n        nextStackedPoints.push(newStackedOnPoints[idx]);\n        rawIndices.push(newData.getRawIndex(idx));\n        break;\n\n      case '-':\n        var idx = diffItem.idx;\n        var rawIndex = oldData.getRawIndex(idx); // Data is replaced. In the case of dynamic data queue\n        // FIXME FIXME FIXME\n\n        if (rawIndex !== idx) {\n          currPoints.push(oldData.getItemLayout(idx));\n          nextPoints.push(newCoordSys.dataToPoint([oldData.get(dims[0], idx, true), oldData.get(dims[1], idx, true)]));\n          currStackedPoints.push(oldStackedOnPoints[idx]);\n          nextStackedPoints.push(getStackedOnPoint(newCoordSys, oldData, idx));\n          rawIndices.push(rawIndex);\n        } else {\n          pointAdded = false;\n        }\n\n    } // Original indices\n\n\n    if (pointAdded) {\n      status.push(diffItem);\n      sortedIndices.push(sortedIndices.length);\n    }\n  } // Diff result may be crossed if all items are changed\n  // Sort by data index\n\n\n  sortedIndices.sort(function (a, b) {\n    return rawIndices[a] - rawIndices[b];\n  });\n  var sortedCurrPoints = [];\n  var sortedNextPoints = [];\n  var sortedCurrStackedPoints = [];\n  var sortedNextStackedPoints = [];\n  var sortedStatus = [];\n\n  for (var i = 0; i < sortedIndices.length; i++) {\n    var idx = sortedIndices[i];\n    sortedCurrPoints[i] = currPoints[idx];\n    sortedNextPoints[i] = nextPoints[idx];\n    sortedCurrStackedPoints[i] = currStackedPoints[idx];\n    sortedNextStackedPoints[i] = nextStackedPoints[idx];\n    sortedStatus[i] = status[idx];\n  }\n\n  return {\n    current: sortedCurrPoints,\n    next: sortedNextPoints,\n    stackedOnCurrent: sortedCurrStackedPoints,\n    stackedOnNext: sortedNextStackedPoints,\n    status: sortedStatus\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1180:\n/***/ (function(module, exports) {\n\nvar samplers = {\n  average: function (frame) {\n    var sum = 0;\n    var count = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      if (!isNaN(frame[i])) {\n        sum += frame[i];\n        count++;\n      }\n    } // Return NaN if count is 0\n\n\n    return count === 0 ? NaN : sum / count;\n  },\n  sum: function (frame) {\n    var sum = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      // Ignore NaN\n      sum += frame[i] || 0;\n    }\n\n    return sum;\n  },\n  max: function (frame) {\n    var max = -Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] > max && (max = frame[i]);\n    }\n\n    return max;\n  },\n  min: function (frame) {\n    var min = Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] < min && (min = frame[i]);\n    }\n\n    return min;\n  },\n  // TODO\n  // Median\n  nearest: function (frame) {\n    return frame[0];\n  }\n};\n\nvar indexSampler = function (frame, value) {\n  return Math.round(frame.length / 2);\n};\n\nfunction _default(seriesType, ecModel, api) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var data = seriesModel.getData();\n    var sampling = seriesModel.get('sampling');\n    var coordSys = seriesModel.coordinateSystem; // Only cartesian2d support down sampling\n\n    if (coordSys.type === 'cartesian2d' && sampling) {\n      var baseAxis = coordSys.getBaseAxis();\n      var valueAxis = coordSys.getOtherAxis(baseAxis);\n      var extent = baseAxis.getExtent(); // Coordinste system has been resized\n\n      var size = extent[1] - extent[0];\n      var rate = Math.round(data.count() / size);\n\n      if (rate > 1) {\n        var sampler;\n\n        if (typeof sampling === 'string') {\n          sampler = samplers[sampling];\n        } else if (typeof sampling === 'function') {\n          sampler = sampling;\n        }\n\n        if (sampler) {\n          data = data.downSample(valueAxis.dim, 1 / rate, sampler, indexSampler);\n          seriesModel.setData(data);\n        }\n      }\n    }\n  }, this);\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1181:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar Cartesian = __webpack_require__(1182);\n\nfunction Cartesian2D(name) {\n  Cartesian.call(this, name);\n}\n\nCartesian2D.prototype = {\n  constructor: Cartesian2D,\n  type: 'cartesian2d',\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['x', 'y'],\n\n  /**\n   * Base axis will be used on stacking.\n   *\n   * @return {module:echarts/coord/cartesian/Axis2D}\n   */\n  getBaseAxis: function () {\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAxis('x');\n  },\n\n  /**\n   * If contain point\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var axisX = this.getAxis('x');\n    var axisY = this.getAxis('y');\n    return axisX.contain(axisX.toLocalCoord(point[0])) && axisY.contain(axisY.toLocalCoord(point[1]));\n  },\n\n  /**\n   * If contain data\n   * @param {Array.<number>} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.getAxis('x').containData(data[0]) && this.getAxis('y').containData(data[1]);\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, clamp) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    return [xAxis.toGlobalCoord(xAxis.dataToCoord(data[0], clamp)), yAxis.toGlobalCoord(yAxis.dataToCoord(data[1], clamp))];\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  pointToData: function (point, clamp) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    return [xAxis.coordToData(xAxis.toLocalCoord(point[0]), clamp), yAxis.coordToData(yAxis.toLocalCoord(point[1]), clamp)];\n  },\n\n  /**\n   * Get other axis\n   * @param {module:echarts/coord/cartesian/Axis2D} axis\n   */\n  getOtherAxis: function (axis) {\n    return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n  }\n};\nzrUtil.inherits(Cartesian2D, Cartesian);\nvar _default = Cartesian2D;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1182:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\nfunction dimAxisMapper(dim) {\n  return this._axes[dim];\n}\n/**\n * @alias module:echarts/coord/Cartesian\n * @constructor\n */\n\n\nvar Cartesian = function (name) {\n  this._axes = {};\n  this._dimList = [];\n  /**\n   * @type {string}\n   */\n\n  this.name = name || '';\n};\n\nCartesian.prototype = {\n  constructor: Cartesian,\n  type: 'cartesian',\n\n  /**\n   * Get axis\n   * @param  {number|string} dim\n   * @return {module:echarts/coord/Cartesian~Axis}\n   */\n  getAxis: function (dim) {\n    return this._axes[dim];\n  },\n\n  /**\n   * Get axes list\n   * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n   */\n  getAxes: function () {\n    return zrUtil.map(this._dimList, dimAxisMapper, this);\n  },\n\n  /**\n   * Get axes list by given scale type\n   */\n  getAxesByScale: function (scaleType) {\n    scaleType = scaleType.toLowerCase();\n    return zrUtil.filter(this.getAxes(), function (axis) {\n      return axis.scale.type === scaleType;\n    });\n  },\n\n  /**\n   * Add axis\n   * @param {module:echarts/coord/Cartesian.Axis}\n   */\n  addAxis: function (axis) {\n    var dim = axis.dim;\n    this._axes[dim] = axis;\n\n    this._dimList.push(dim);\n  },\n\n  /**\n   * Convert data to coord in nd space\n   * @param {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  dataToCoord: function (val) {\n    return this._dataCoordConvert(val, 'dataToCoord');\n  },\n\n  /**\n   * Convert coord in nd space to data\n   * @param  {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  coordToData: function (val) {\n    return this._dataCoordConvert(val, 'coordToData');\n  },\n  _dataCoordConvert: function (input, method) {\n    var dimList = this._dimList;\n    var output = input instanceof Array ? [] : {};\n\n    for (var i = 0; i < dimList.length; i++) {\n      var dim = dimList[i];\n      var axis = this._axes[dim];\n      output[dim] = axis[method](input[dim]);\n    }\n\n    return output;\n  }\n};\nvar _default = Cartesian;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1183:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar Axis = __webpack_require__(1017);\n\n/**\n * Extend axis 2d\n * @constructor module:echarts/coord/cartesian/Axis2D\n * @extends {module:echarts/coord/cartesian/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar Axis2D = function (dim, scale, coordExtent, axisType, position) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis position\n   *  - 'top'\n   *  - 'bottom'\n   *  - 'left'\n   *  - 'right'\n   */\n\n  this.position = position || 'bottom';\n};\n\nAxis2D.prototype = {\n  constructor: Axis2D,\n\n  /**\n   * Index of axis, can be used as key\n   */\n  index: 0,\n\n  /**\n   * If axis is on the zero position of the other axis\n   * @type {boolean}\n   */\n  onZero: false,\n\n  /**\n   * Axis model\n   * @param {module:echarts/coord/cartesian/AxisModel}\n   */\n  model: null,\n  isHorizontal: function () {\n    var position = this.position;\n    return position === 'top' || position === 'bottom';\n  },\n\n  /**\n   * Each item cooresponds to this.getExtent(), which\n   * means globalExtent[0] may greater than globalExtent[1],\n   * unless `asc` is input.\n   *\n   * @param {boolean} [asc]\n   * @return {Array.<number>}\n   */\n  getGlobalExtent: function (asc) {\n    var ret = this.getExtent();\n    ret[0] = this.toGlobalCoord(ret[0]);\n    ret[1] = this.toGlobalCoord(ret[1]);\n    asc && ret[0] > ret[1] && ret.reverse();\n    return ret;\n  },\n  getOtherAxis: function () {\n    this.grid.getOtherAxis();\n  },\n\n  /**\n   * If label is ignored.\n   * Automatically used when axis is category and label can not be all shown\n   * @param  {number}  idx\n   * @return {boolean}\n   */\n  isLabelIgnored: function (idx) {\n    if (this.type === 'category') {\n      var labelInterval = this.getLabelInterval();\n      return typeof labelInterval === 'function' && !labelInterval(idx, this.scale.getLabel(idx)) || idx % (labelInterval + 1);\n    }\n  },\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n  },\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var localCoord = axis.toLocalCoord(80);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toLocalCoord: null,\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var globalCoord = axis.toLocalCoord(40);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toGlobalCoord: null\n};\nzrUtil.inherits(Axis2D, Axis);\nvar _default = Axis2D;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1184:\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(1159);\n\nvar ComponentModel = __webpack_require__(991);\n\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\nvar _default = ComponentModel.extend({\n  type: 'grid',\n  dependencies: ['xAxis', 'yAxis'],\n  layoutMode: 'box',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Grid}\n   */\n  coordinateSystem: null,\n  defaultOption: {\n    show: false,\n    zlevel: 0,\n    z: 0,\n    left: '10%',\n    top: 60,\n    right: '10%',\n    bottom: 60,\n    // If grid size contain label\n    containLabel: false,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderWidth: 1,\n    borderColor: '#ccc'\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1185:\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(1159);\n\n__webpack_require__(1186);\n\n/***/ }),\n\n/***/ 1186:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar graphic = __webpack_require__(980);\n\nvar AxisBuilder = __webpack_require__(1021);\n\nvar AxisView = __webpack_require__(1022);\n\nvar cartesianAxisHelper = __webpack_require__(1063);\n\nvar ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\nvar getInterval = AxisBuilder.getInterval;\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitArea', 'splitLine']; // function getAlignWithLabel(model, axisModel) {\n//     var alignWithLabel = model.get('alignWithLabel');\n//     if (alignWithLabel === 'auto') {\n//         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n//     }\n//     return alignWithLabel;\n// }\n\nvar CartesianAxisView = AxisView.extend({\n  type: 'cartesianAxis',\n  axisPointerClass: 'CartesianAxisPointer',\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    this.group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    this.group.add(this._axisGroup);\n\n    if (!axisModel.get('show')) {\n      return;\n    }\n\n    var gridModel = axisModel.getCoordSysModel();\n    var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n    var axisBuilder = new AxisBuilder(axisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n    this._axisGroup.add(axisBuilder.getGroup());\n\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (axisModel.get(name + '.show')) {\n        this['_' + name](axisModel, gridModel, layout.labelInterval);\n      }\n    }, this);\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n    CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @param {number|Function} labelInterval\n   * @private\n   */\n  _splitLine: function (axisModel, gridModel, labelInterval) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitLineModel = axisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineInterval = getInterval(splitLineModel, labelInterval);\n    lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var lineCount = 0;\n    var ticksCoords = axis.getTicksCoords();\n    var ticks = axis.scale.getTicks();\n    var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n    var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n    var p1 = [];\n    var p2 = []; // Simple optimization\n    // Batching the lines if color are the same\n\n    var lineStyle = lineStyleModel.getLineStyle();\n\n    for (var i = 0; i < ticksCoords.length; i++) {\n      if (ifIgnoreOnTick(axis, i, lineInterval, ticksCoords.length, showMinLabel, showMaxLabel)) {\n        continue;\n      }\n\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n      if (isHorizontal) {\n        p1[0] = tickCoord;\n        p1[1] = gridRect.y;\n        p2[0] = tickCoord;\n        p2[1] = gridRect.y + gridRect.height;\n      } else {\n        p1[0] = gridRect.x;\n        p1[1] = tickCoord;\n        p2[0] = gridRect.x + gridRect.width;\n        p2[1] = tickCoord;\n      }\n\n      var colorIndex = lineCount++ % lineColors.length;\n\n      this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n        anid: 'line_' + ticks[i],\n        shape: {\n          x1: p1[0],\n          y1: p1[1],\n          x2: p2[0],\n          y2: p2[1]\n        },\n        style: zrUtil.defaults({\n          stroke: lineColors[colorIndex]\n        }, lineStyle),\n        silent: true\n      })));\n    }\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @param {number|Function} labelInterval\n   * @private\n   */\n  _splitArea: function (axisModel, gridModel, labelInterval) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitAreaModel = axisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var ticksCoords = axis.getTicksCoords();\n    var ticks = axis.scale.getTicks();\n    var prevX = axis.toGlobalCoord(ticksCoords[0]);\n    var prevY = axis.toGlobalCoord(ticksCoords[0]);\n    var count = 0;\n    var areaInterval = getInterval(splitAreaModel, labelInterval);\n    var areaStyle = areaStyleModel.getAreaStyle();\n    areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n    var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n    var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n\n    for (var i = 1; i < ticksCoords.length; i++) {\n      if (ifIgnoreOnTick(axis, i, areaInterval, ticksCoords.length, showMinLabel, showMaxLabel)) {\n        continue;\n      }\n\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (axis.isHorizontal()) {\n        x = prevX;\n        y = gridRect.y;\n        width = tickCoord - x;\n        height = gridRect.height;\n      } else {\n        x = gridRect.x;\n        y = prevY;\n        width = gridRect.width;\n        height = tickCoord - y;\n      }\n\n      var colorIndex = count++ % areaColors.length;\n\n      this._axisGroup.add(new graphic.Rect({\n        anid: 'area_' + ticks[i],\n        shape: {\n          x: x,\n          y: y,\n          width: width,\n          height: height\n        },\n        style: zrUtil.defaults({\n          fill: areaColors[colorIndex]\n        }, areaStyle),\n        silent: true\n      }));\n\n      prevX = x + width;\n      prevY = y + height;\n    }\n  }\n});\nCartesianAxisView.extend({\n  type: 'xAxis'\n});\nCartesianAxisView.extend({\n  type: 'yAxis'\n});\n\n/***/ }),\n\n/***/ 1188:\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(1059);\n\n__webpack_require__(1061);\n\n__webpack_require__(1034);\n\n/***/ }),\n\n/***/ 1189:\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(1080);\n\n__webpack_require__(1190);\n\n__webpack_require__(1191);\n\n__webpack_require__(1192);\n\n/***/ }),\n\n/***/ 1190:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar LegendModel = __webpack_require__(1064);\n\nvar _layout = __webpack_require__(990);\n\nvar mergeLayoutParam = _layout.mergeLayoutParam;\nvar getLayoutParams = _layout.getLayoutParams;\nvar ScrollableLegendModel = LegendModel.extend({\n  type: 'legend.scroll',\n\n  /**\n   * @param {number} scrollDataIndex\n   */\n  setScrollDataIndex: function (scrollDataIndex) {\n    this.option.scrollDataIndex = scrollDataIndex;\n  },\n  defaultOption: {\n    scrollDataIndex: 0,\n    pageButtonItemGap: 5,\n    pageButtonGap: null,\n    pageButtonPosition: 'end',\n    // 'start' or 'end'\n    pageFormatter: '{current}/{total}',\n    // If null/undefined, do not show page.\n    pageIcons: {\n      horizontal: ['M0,0L12,-10L12,10z', 'M0,0L-12,-10L-12,10z'],\n      vertical: ['M0,0L20,0L10,-20z', 'M0,0L20,0L10,20z']\n    },\n    pageIconColor: '#2f4554',\n    pageIconInactiveColor: '#aaa',\n    pageIconSize: 15,\n    // Can be [10, 3], which represents [width, height]\n    pageTextStyle: {\n      color: '#333'\n    },\n    animationDurationUpdate: 800\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    var inputPositionParams = getLayoutParams(option);\n    ScrollableLegendModel.superCall(this, 'init', option, parentModel, ecModel, extraOpt);\n    mergeAndNormalizeLayoutParams(this, option, inputPositionParams);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (option, extraOpt) {\n    ScrollableLegendModel.superCall(this, 'mergeOption', option, extraOpt);\n    mergeAndNormalizeLayoutParams(this, this.option, option);\n  },\n  getOrient: function () {\n    return this.get('orient') === 'vertical' ? {\n      index: 1,\n      name: 'vertical'\n    } : {\n      index: 0,\n      name: 'horizontal'\n    };\n  }\n}); // Do not `ignoreSize` to enable setting {left: 10, right: 10}.\n\nfunction mergeAndNormalizeLayoutParams(legendModel, target, raw) {\n  var orient = legendModel.getOrient();\n  var ignoreSize = [1, 1];\n  ignoreSize[orient.index] = 0;\n  mergeLayoutParam(target, raw, {\n    type: 'box',\n    ignoreSize: ignoreSize\n  });\n}\n\nvar _default = ScrollableLegendModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1191:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar graphic = __webpack_require__(980);\n\nvar layoutUtil = __webpack_require__(990);\n\nvar LegendView = __webpack_require__(1065);\n\n/**\n * Separate legend and scrollable legend to reduce package size.\n */\nvar Group = graphic.Group;\nvar WH = ['width', 'height'];\nvar XY = ['x', 'y'];\nvar ScrollableLegendView = LegendView.extend({\n  type: 'legend.scroll',\n  newlineDisabled: true,\n  init: function () {\n    ScrollableLegendView.superCall(this, 'init');\n    /**\n     * @private\n     * @type {number} For `scroll`.\n     */\n\n    this._currentIndex = 0;\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n    this.group.add(this._containerGroup = new Group());\n\n    this._containerGroup.add(this.getContentGroup());\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n\n    this.group.add(this._controllerGroup = new Group());\n    /**\n     *\n     * @private\n     */\n\n    this._showController;\n  },\n\n  /**\n   * @override\n   */\n  resetInner: function () {\n    ScrollableLegendView.superCall(this, 'resetInner');\n\n    this._controllerGroup.removeAll();\n\n    this._containerGroup.removeClipPath();\n\n    this._containerGroup.__rectSize = null;\n  },\n\n  /**\n   * @override\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var me = this; // Render content items.\n\n    ScrollableLegendView.superCall(this, 'renderInner', itemAlign, legendModel, ecModel, api);\n    var controllerGroup = this._controllerGroup;\n    var pageIconSize = legendModel.get('pageIconSize', true);\n\n    if (!zrUtil.isArray(pageIconSize)) {\n      pageIconSize = [pageIconSize, pageIconSize];\n    }\n\n    createPageButton('pagePrev', 0);\n    var pageTextStyleModel = legendModel.getModel('pageTextStyle');\n    controllerGroup.add(new graphic.Text({\n      name: 'pageText',\n      style: {\n        textFill: pageTextStyleModel.getTextColor(),\n        font: pageTextStyleModel.getFont(),\n        textVerticalAlign: 'middle',\n        textAlign: 'center'\n      },\n      silent: true\n    }));\n    createPageButton('pageNext', 1);\n\n    function createPageButton(name, iconIdx) {\n      var pageDataIndexName = name + 'DataIndex';\n      var icon = graphic.createIcon(legendModel.get('pageIcons', true)[legendModel.getOrient().name][iconIdx], {\n        // Buttons will be created in each render, so we do not need\n        // to worry about avoiding using legendModel kept in scope.\n        onclick: zrUtil.bind(me._pageGo, me, pageDataIndexName, legendModel, api)\n      }, {\n        x: -pageIconSize[0] / 2,\n        y: -pageIconSize[1] / 2,\n        width: pageIconSize[0],\n        height: pageIconSize[1]\n      });\n      icon.name = name;\n      controllerGroup.add(icon);\n    }\n  },\n\n  /**\n   * @override\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup();\n    var containerGroup = this._containerGroup;\n    var controllerGroup = this._controllerGroup;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var yx = XY[1 - orientIdx]; // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), !orientIdx ? null : maxSize.width, orientIdx ? null : maxSize.height);\n    layoutUtil.box( // Buttons in controller are layout always horizontally.\n    'horizontal', controllerGroup, legendModel.get('pageButtonItemGap', true));\n    var contentRect = contentGroup.getBoundingRect();\n    var controllerRect = controllerGroup.getBoundingRect();\n    var showController = this._showController = contentRect[wh] > maxSize[wh];\n    var contentPos = [-contentRect.x, -contentRect.y]; // Remain contentPos when scroll animation perfroming.\n\n    contentPos[orientIdx] = contentGroup.position[orientIdx]; // Layout container group based on 0.\n\n    var containerPos = [0, 0];\n    var controllerPos = [-controllerRect.x, -controllerRect.y];\n    var pageButtonGap = zrUtil.retrieve2(legendModel.get('pageButtonGap', true), legendModel.get('itemGap', true)); // Place containerGroup and controllerGroup and contentGroup.\n\n    if (showController) {\n      var pageButtonPosition = legendModel.get('pageButtonPosition', true); // controller is on the right / bottom.\n\n      if (pageButtonPosition === 'end') {\n        controllerPos[orientIdx] += maxSize[wh] - controllerRect[wh];\n      } // controller is on the left / top.\n      else {\n          containerPos[orientIdx] += controllerRect[wh] + pageButtonGap;\n        }\n    } // Always align controller to content as 'middle'.\n\n\n    controllerPos[1 - orientIdx] += contentRect[hw] / 2 - controllerRect[hw] / 2;\n    contentGroup.attr('position', contentPos);\n    containerGroup.attr('position', containerPos);\n    controllerGroup.attr('position', controllerPos); // Calculate `mainRect` and set `clipPath`.\n    // mainRect should not be calculated by `this.group.getBoundingRect()`\n    // for sake of the overflow.\n\n    var mainRect = this.group.getBoundingRect();\n    var mainRect = {\n      x: 0,\n      y: 0\n    }; // Consider content may be overflow (should be clipped).\n\n    mainRect[wh] = showController ? maxSize[wh] : contentRect[wh];\n    mainRect[hw] = Math.max(contentRect[hw], controllerRect[hw]); // `containerRect[yx] + containerPos[1 - orientIdx]` is 0.\n\n    mainRect[yx] = Math.min(0, controllerRect[yx] + controllerPos[1 - orientIdx]);\n    containerGroup.__rectSize = maxSize[wh];\n\n    if (showController) {\n      var clipShape = {\n        x: 0,\n        y: 0\n      };\n      clipShape[wh] = Math.max(maxSize[wh] - controllerRect[wh] - pageButtonGap, 0);\n      clipShape[hw] = mainRect[hw];\n      containerGroup.setClipPath(new graphic.Rect({\n        shape: clipShape\n      })); // Consider content may be larger than container, container rect\n      // can not be obtained from `containerGroup.getBoundingRect()`.\n\n      containerGroup.__rectSize = clipShape[wh];\n    } else {\n      // Do not remove or ignore controller. Keep them set as place holders.\n      controllerGroup.eachChild(function (child) {\n        child.attr({\n          invisible: true,\n          silent: true\n        });\n      });\n    } // Content translate animation.\n\n\n    var pageInfo = this._getPageInfo(legendModel);\n\n    pageInfo.pageIndex != null && graphic.updateProps(contentGroup, {\n      position: pageInfo.contentPosition\n    }, // When switch from \"show controller\" to \"not show controller\", view should be\n    // updated immediately without animation, otherwise causes weird efffect.\n    showController ? legendModel : false);\n\n    this._updatePageInfoView(legendModel, pageInfo);\n\n    return mainRect;\n  },\n  _pageGo: function (to, legendModel, api) {\n    var scrollDataIndex = this._getPageInfo(legendModel)[to];\n\n    scrollDataIndex != null && api.dispatchAction({\n      type: 'legendScroll',\n      scrollDataIndex: scrollDataIndex,\n      legendId: legendModel.id\n    });\n  },\n  _updatePageInfoView: function (legendModel, pageInfo) {\n    var controllerGroup = this._controllerGroup;\n    zrUtil.each(['pagePrev', 'pageNext'], function (name) {\n      var canJump = pageInfo[name + 'DataIndex'] != null;\n      var icon = controllerGroup.childOfName(name);\n\n      if (icon) {\n        icon.setStyle('fill', canJump ? legendModel.get('pageIconColor', true) : legendModel.get('pageIconInactiveColor', true));\n        icon.cursor = canJump ? 'pointer' : 'default';\n      }\n    });\n    var pageText = controllerGroup.childOfName('pageText');\n    var pageFormatter = legendModel.get('pageFormatter');\n    var pageIndex = pageInfo.pageIndex;\n    var current = pageIndex != null ? pageIndex + 1 : 0;\n    var total = pageInfo.pageCount;\n    pageText && pageFormatter && pageText.setStyle('text', zrUtil.isString(pageFormatter) ? pageFormatter.replace('{current}', current).replace('{total}', total) : pageFormatter({\n      current: current,\n      total: total\n    }));\n  },\n\n  /**\n   * @param {module:echarts/model/Model} legendModel\n   * @return {Object} {\n   *  contentPosition: Array.<number>, null when data item not found.\n   *  pageIndex: number, null when data item not found.\n   *  pageCount: number, always be a number, can be 0.\n   *  pagePrevDataIndex: number, null when no next page.\n   *  pageNextDataIndex: number, null when no previous page.\n   * }\n   */\n  _getPageInfo: function (legendModel) {\n    // Align left or top by the current dataIndex.\n    var currDataIndex = legendModel.get('scrollDataIndex', true);\n    var contentGroup = this.getContentGroup();\n    var contentRect = contentGroup.getBoundingRect();\n    var containerRectSize = this._containerGroup.__rectSize;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var xy = XY[orientIdx];\n    var contentPos = contentGroup.position.slice();\n    var pageIndex;\n    var pagePrevDataIndex;\n    var pageNextDataIndex;\n    var targetItemGroup;\n\n    if (this._showController) {\n      contentGroup.eachChild(function (child) {\n        if (child.__legendDataIndex === currDataIndex) {\n          targetItemGroup = child;\n        }\n      });\n    } else {\n      targetItemGroup = contentGroup.childAt(0);\n    }\n\n    var pageCount = containerRectSize ? Math.ceil(contentRect[wh] / containerRectSize) : 0;\n\n    if (targetItemGroup) {\n      var itemRect = targetItemGroup.getBoundingRect();\n      var itemLoc = targetItemGroup.position[orientIdx] + itemRect[xy];\n      contentPos[orientIdx] = -itemLoc - contentRect[xy];\n      pageIndex = Math.floor(pageCount * (itemLoc + itemRect[xy] + containerRectSize / 2) / contentRect[wh]);\n      pageIndex = contentRect[wh] && pageCount ? Math.max(0, Math.min(pageCount - 1, pageIndex)) : -1;\n      var winRect = {\n        x: 0,\n        y: 0\n      };\n      winRect[wh] = containerRectSize;\n      winRect[hw] = contentRect[hw];\n      winRect[xy] = -contentPos[orientIdx] - contentRect[xy];\n      var startIdx;\n      var children = contentGroup.children();\n      contentGroup.eachChild(function (child, index) {\n        var itemRect = getItemRect(child);\n\n        if (itemRect.intersect(winRect)) {\n          startIdx == null && (startIdx = index); // It is user-friendly that the last item shown in the\n          // current window is shown at the begining of next window.\n\n          pageNextDataIndex = child.__legendDataIndex;\n        } // If the last item is shown entirely, no next page.\n\n\n        if (index === children.length - 1 && itemRect[xy] + itemRect[wh] <= winRect[xy] + winRect[wh]) {\n          pageNextDataIndex = null;\n        }\n      }); // Always align based on the left/top most item, so the left/top most\n      // item in the previous window is needed to be found here.\n\n      if (startIdx != null) {\n        var startItem = children[startIdx];\n        var startRect = getItemRect(startItem);\n        winRect[xy] = startRect[xy] + startRect[wh] - winRect[wh]; // If the first item is shown entirely, no previous page.\n\n        if (startIdx <= 0 && startRect[xy] >= winRect[xy]) {\n          pagePrevDataIndex = null;\n        } else {\n          while (startIdx > 0 && getItemRect(children[startIdx - 1]).intersect(winRect)) {\n            startIdx--;\n          }\n\n          pagePrevDataIndex = children[startIdx].__legendDataIndex;\n        }\n      }\n    }\n\n    return {\n      contentPosition: contentPos,\n      pageIndex: pageIndex,\n      pageCount: pageCount,\n      pagePrevDataIndex: pagePrevDataIndex,\n      pageNextDataIndex: pageNextDataIndex\n    };\n\n    function getItemRect(el) {\n      var itemRect = el.getBoundingRect().clone();\n      itemRect[xy] += el.position[orientIdx];\n      return itemRect;\n    }\n  }\n});\nvar _default = ScrollableLegendView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1192:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(979);\n\n/**\n * @event legendScroll\n * @type {Object}\n * @property {string} type 'legendScroll'\n * @property {string} scrollDataIndex\n */\necharts.registerAction('legendScroll', 'legendscroll', function (payload, ecModel) {\n  var scrollDataIndex = payload.scrollDataIndex;\n  scrollDataIndex != null && ecModel.eachComponent({\n    mainType: 'legend',\n    subType: 'scroll',\n    query: payload\n  }, function (legendModel) {\n    legendModel.setScrollDataIndex(scrollDataIndex);\n  });\n});\n\n/***/ }),\n\n/***/ 977:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_echarts_lib_echarts__ = __webpack_require__(979);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_echarts_lib_echarts___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_echarts_lib_echarts__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_echarts_lib_component_tooltip__ = __webpack_require__(1079);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_echarts_lib_component_tooltip___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_echarts_lib_component_tooltip__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_echarts_lib_component_grid__ = __webpack_require__(1188);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_echarts_lib_component_grid___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_echarts_lib_component_grid__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_echarts_lib_chart_line__ = __webpack_require__(1176);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_echarts_lib_chart_line___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_echarts_lib_chart_line__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_echarts_lib_component_legendScroll__ = __webpack_require__(1189);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_echarts_lib_component_legendScroll___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_echarts_lib_component_legendScroll__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_echarts_lib_component_toolbox__ = __webpack_require__(1082);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_echarts_lib_component_toolbox___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_echarts_lib_component_toolbox__);\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}//必须\nvar LineReact=function(_React$Component){_inherits(LineReact,_React$Component);function LineReact(props){_classCallCheck(this,LineReact);var _this=_possibleConstructorReturn(this,(LineReact.__proto__||Object.getPrototypeOf(LineReact)).call(this,props));_this.initPie=function(){var _this$props$option=_this.props.option,option=_this$props$option===undefined?{}:_this$props$option;//外部传入的data数据\nvar myChart=__WEBPACK_IMPORTED_MODULE_1_echarts_lib_echarts___default.a.init(_this.ID);//初始化echarts\n//设置options\nmyChart.setOption(option);window.onresize=function(){myChart.resize();};};return _this;}_createClass(LineReact,[{key:'componentDidMount',value:function componentDidMount(){//alert(1);\nthis.initPie();}},{key:'componentDidUpdate',value:function componentDidUpdate(){//alert(2);\nthis.initPie();}},{key:'render',value:function render(){var _this2=this;var _props=this.props,_props$width=_props.width,width=_props$width===undefined?\"100%\":_props$width,_props$height=_props.height,height=_props$height===undefined?\"300px\":_props$height;return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{ref:function ref(ID){return _this2.ID=ID;},style:{width:width,height:height},id:'line-chart'});}}]);return LineReact;}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);/* harmony default export */ __webpack_exports__[\"default\"] = (LineReact);\n\n/***/ }),\n\n/***/ 978:\n/***/ (function(module, exports) {\n\n/**\n * @module zrender/core/util\n */\n// 用于处理merge时无法遍历Date等对象的问题\nvar BUILTIN_OBJECT = {\n  '[object Function]': 1,\n  '[object RegExp]': 1,\n  '[object Date]': 1,\n  '[object Error]': 1,\n  '[object CanvasGradient]': 1,\n  '[object CanvasPattern]': 1,\n  // For node-canvas\n  '[object Image]': 1,\n  '[object Canvas]': 1\n};\nvar TYPED_ARRAY = {\n  '[object Int8Array]': 1,\n  '[object Uint8Array]': 1,\n  '[object Uint8ClampedArray]': 1,\n  '[object Int16Array]': 1,\n  '[object Uint16Array]': 1,\n  '[object Int32Array]': 1,\n  '[object Uint32Array]': 1,\n  '[object Float32Array]': 1,\n  '[object Float64Array]': 1\n};\nvar objToString = Object.prototype.toString;\nvar arrayProto = Array.prototype;\nvar nativeForEach = arrayProto.forEach;\nvar nativeFilter = arrayProto.filter;\nvar nativeSlice = arrayProto.slice;\nvar nativeMap = arrayProto.map;\nvar nativeReduce = arrayProto.reduce; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  methods[name] = fn;\n}\n/**\n * Those data types can be cloned:\n *     Plain object, Array, TypedArray, number, string, null, undefined.\n * Those data types will be assgined using the orginal data:\n *     BUILTIN_OBJECT\n * Instance of user defined class will be cloned to a plain object, without\n * properties in prototype.\n * Other data types is not supported (not sure what will happen).\n *\n * Caution: do not support clone Date, for performance consideration.\n * (There might be a large number of date in `series.data`).\n * So date should not be modified in and out of echarts.\n *\n * @param {*} source\n * @return {*} new\n */\n\n\nfunction clone(source) {\n  if (source == null || typeof source != 'object') {\n    return source;\n  }\n\n  var result = source;\n  var typeStr = objToString.call(source);\n\n  if (typeStr === '[object Array]') {\n    result = [];\n\n    for (var i = 0, len = source.length; i < len; i++) {\n      result[i] = clone(source[i]);\n    }\n  } else if (TYPED_ARRAY[typeStr]) {\n    var Ctor = source.constructor;\n\n    if (source.constructor.from) {\n      result = Ctor.from(source);\n    } else {\n      result = new Ctor(source.length);\n\n      for (var i = 0, len = source.length; i < len; i++) {\n        result[i] = clone(source[i]);\n      }\n    }\n  } else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n    result = {};\n\n    for (var key in source) {\n      if (source.hasOwnProperty(key)) {\n        result[key] = clone(source[key]);\n      }\n    }\n  }\n\n  return result;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overwrite=false]\n */\n\n\nfunction merge(target, source, overwrite) {\n  // We should escapse that source is string\n  // and enter for ... in ...\n  if (!isObject(source) || !isObject(target)) {\n    return overwrite ? clone(source) : target;\n  }\n\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      var targetProp = target[key];\n      var sourceProp = source[key];\n\n      if (isObject(sourceProp) && isObject(targetProp) && !isArray(sourceProp) && !isArray(targetProp) && !isDom(sourceProp) && !isDom(targetProp) && !isBuiltInObject(sourceProp) && !isBuiltInObject(targetProp) && !isPrimitive(sourceProp) && !isPrimitive(targetProp)) {\n        // 如果需要递归覆盖，就递归调用merge\n        merge(targetProp, sourceProp, overwrite);\n      } else if (overwrite || !(key in target)) {\n        // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n        // NOTE，在 target[key] 不存在的时候也是直接覆盖\n        target[key] = clone(source[key], true);\n      }\n    }\n  }\n\n  return target;\n}\n/**\n * @param {Array} targetAndSources The first item is target, and the rests are source.\n * @param {boolean} [overwrite=false]\n * @return {*} target\n */\n\n\nfunction mergeAll(targetAndSources, overwrite) {\n  var result = targetAndSources[0];\n\n  for (var i = 1, len = targetAndSources.length; i < len; i++) {\n    result = merge(result, targetAndSources[i], overwrite);\n  }\n\n  return result;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @memberOf module:zrender/core/util\n */\n\n\nfunction extend(target, source) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overlay=false]\n * @memberOf module:zrender/core/util\n */\n\n\nfunction defaults(target, source, overlay) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key) && (overlay ? source[key] != null : target[key] == null)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar createCanvas = function () {\n  return methods.createCanvas();\n};\n\nmethods.createCanvas = function () {\n  return document.createElement('canvas');\n}; // FIXME\n\n\nvar _ctx;\n\nfunction getContext() {\n  if (!_ctx) {\n    // Use util.createCanvas instead of createCanvas\n    // because createCanvas may be overwritten in different environment\n    _ctx = createCanvas().getContext('2d');\n  }\n\n  return _ctx;\n}\n/**\n * 查询数组中元素的index\n * @memberOf module:zrender/core/util\n */\n\n\nfunction indexOf(array, value) {\n  if (array) {\n    if (array.indexOf) {\n      return array.indexOf(value);\n    }\n\n    for (var i = 0, len = array.length; i < len; i++) {\n      if (array[i] === value) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n}\n/**\n * 构造类继承关系\n *\n * @memberOf module:zrender/core/util\n * @param {Function} clazz 源类\n * @param {Function} baseClazz 基类\n */\n\n\nfunction inherits(clazz, baseClazz) {\n  var clazzPrototype = clazz.prototype;\n\n  function F() {}\n\n  F.prototype = baseClazz.prototype;\n  clazz.prototype = new F();\n\n  for (var prop in clazzPrototype) {\n    clazz.prototype[prop] = clazzPrototype[prop];\n  }\n\n  clazz.prototype.constructor = clazz;\n  clazz.superClass = baseClazz;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Object|Function} target\n * @param {Object|Function} sorce\n * @param {boolean} overlay\n */\n\n\nfunction mixin(target, source, overlay) {\n  target = 'prototype' in target ? target.prototype : target;\n  source = 'prototype' in source ? source.prototype : source;\n  defaults(target, source, overlay);\n}\n/**\n * Consider typed array.\n * @param {Array|TypedArray} data\n */\n\n\nfunction isArrayLike(data) {\n  if (!data) {\n    return;\n  }\n\n  if (typeof data == 'string') {\n    return false;\n  }\n\n  return typeof data.length == 'number';\n}\n/**\n * 数组或对象遍历\n * @memberOf module:zrender/core/util\n * @param {Object|Array} obj\n * @param {Function} cb\n * @param {*} [context]\n */\n\n\nfunction each(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.forEach && obj.forEach === nativeForEach) {\n    obj.forEach(cb, context);\n  } else if (obj.length === +obj.length) {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      cb.call(context, obj[i], i, obj);\n    }\n  } else {\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        cb.call(context, obj[key], key, obj);\n      }\n    }\n  }\n}\n/**\n * 数组映射\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction map(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.map && obj.map === nativeMap) {\n    return obj.map(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      result.push(cb.call(context, obj[i], i, obj));\n    }\n\n    return result;\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {Object} [memo]\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction reduce(obj, cb, memo, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.reduce && obj.reduce === nativeReduce) {\n    return obj.reduce(cb, memo, context);\n  } else {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      memo = cb.call(context, memo, obj[i], i, obj);\n    }\n\n    return memo;\n  }\n}\n/**\n * 数组过滤\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction filter(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.filter && obj.filter === nativeFilter) {\n    return obj.filter(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      if (cb.call(context, obj[i], i, obj)) {\n        result.push(obj[i]);\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * 数组项查找\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {*}\n */\n\n\nfunction find(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  for (var i = 0, len = obj.length; i < len; i++) {\n    if (cb.call(context, obj[i], i, obj)) {\n      return obj[i];\n    }\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @param {*} context\n * @return {Function}\n */\n\n\nfunction bind(func, context) {\n  var args = nativeSlice.call(arguments, 2);\n  return function () {\n    return func.apply(context, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @return {Function}\n */\n\n\nfunction curry(func) {\n  var args = nativeSlice.call(arguments, 1);\n  return function () {\n    return func.apply(this, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isArray(value) {\n  return objToString.call(value) === '[object Array]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isString(value) {\n  return objToString.call(value) === '[object String]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return type === 'function' || !!value && type == 'object';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isBuiltInObject(value) {\n  return !!BUILTIN_OBJECT[objToString.call(value)];\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isDom(value) {\n  return typeof value === 'object' && typeof value.nodeType === 'number' && typeof value.ownerDocument === 'object';\n}\n/**\n * Whether is exactly NaN. Notice isNaN('a') returns true.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction eqNaN(value) {\n  return value !== value;\n}\n/**\n * If value1 is not null, then return value1, otherwise judget rest of values.\n * Low performance.\n * @memberOf module:zrender/core/util\n * @return {*} Final value\n */\n\n\nfunction retrieve(values) {\n  for (var i = 0, len = arguments.length; i < len; i++) {\n    if (arguments[i] != null) {\n      return arguments[i];\n    }\n  }\n}\n\nfunction retrieve2(value0, value1) {\n  return value0 != null ? value0 : value1;\n}\n\nfunction retrieve3(value0, value1, value2) {\n  return value0 != null ? value0 : value1 != null ? value1 : value2;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} arr\n * @param {number} startIndex\n * @param {number} endIndex\n * @return {Array}\n */\n\n\nfunction slice() {\n  return Function.call.apply(nativeSlice, arguments);\n}\n/**\n * Normalize css liked array configuration\n * e.g.\n *  3 => [3, 3, 3, 3]\n *  [4, 2] => [4, 2, 4, 2]\n *  [4, 3, 2] => [4, 3, 2, 3]\n * @param {number|Array.<number>} val\n * @return {Array.<number>}\n */\n\n\nfunction normalizeCssArray(val) {\n  if (typeof val === 'number') {\n    return [val, val, val, val];\n  }\n\n  var len = val.length;\n\n  if (len === 2) {\n    // vertical | horizontal\n    return [val[0], val[1], val[0], val[1]];\n  } else if (len === 3) {\n    // top | horizontal | bottom\n    return [val[0], val[1], val[2], val[1]];\n  }\n\n  return val;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {boolean} condition\n * @param {string} message\n */\n\n\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error(message);\n  }\n}\n\nvar primitiveKey = '__ec_primitive__';\n/**\n * Set an object as primitive to be ignored traversing children in clone or merge\n */\n\nfunction setAsPrimitive(obj) {\n  obj[primitiveKey] = true;\n}\n\nfunction isPrimitive(obj) {\n  return obj[primitiveKey];\n}\n/**\n * @constructor\n * @param {Object} obj Only apply `ownProperty`.\n */\n\n\nfunction HashMap(obj) {\n  obj && each(obj, function (value, key) {\n    this.set(key, value);\n  }, this);\n} // Add prefix to avoid conflict with Object.prototype.\n\n\nvar HASH_MAP_PREFIX = '_ec_';\nvar HASH_MAP_PREFIX_LENGTH = 4;\nHashMap.prototype = {\n  constructor: HashMap,\n  // Do not provide `has` method to avoid defining what is `has`.\n  // (We usually treat `null` and `undefined` as the same, different\n  // from ES6 Map).\n  get: function (key) {\n    return this[HASH_MAP_PREFIX + key];\n  },\n  set: function (key, value) {\n    this[HASH_MAP_PREFIX + key] = value; // Comparing with invocation chaining, `return value` is more commonly\n    // used in this case: `var someVal = map.set('a', genVal());`\n\n    return value;\n  },\n  // Although util.each can be performed on this hashMap directly, user\n  // should not use the exposed keys, who are prefixed.\n  each: function (cb, context) {\n    context !== void 0 && (cb = bind(cb, context));\n\n    for (var prefixedKey in this) {\n      this.hasOwnProperty(prefixedKey) && cb(this[prefixedKey], prefixedKey.slice(HASH_MAP_PREFIX_LENGTH));\n    }\n  },\n  // Do not use this method if performance sensitive.\n  removeKey: function (key) {\n    delete this[HASH_MAP_PREFIX + key];\n  }\n};\n\nfunction createHashMap(obj) {\n  return new HashMap(obj);\n}\n\nfunction noop() {}\n\nexports.$override = $override;\nexports.clone = clone;\nexports.merge = merge;\nexports.mergeAll = mergeAll;\nexports.extend = extend;\nexports.defaults = defaults;\nexports.createCanvas = createCanvas;\nexports.getContext = getContext;\nexports.indexOf = indexOf;\nexports.inherits = inherits;\nexports.mixin = mixin;\nexports.isArrayLike = isArrayLike;\nexports.each = each;\nexports.map = map;\nexports.reduce = reduce;\nexports.filter = filter;\nexports.find = find;\nexports.bind = bind;\nexports.curry = curry;\nexports.isArray = isArray;\nexports.isFunction = isFunction;\nexports.isString = isString;\nexports.isObject = isObject;\nexports.isBuiltInObject = isBuiltInObject;\nexports.isDom = isDom;\nexports.eqNaN = eqNaN;\nexports.retrieve = retrieve;\nexports.retrieve2 = retrieve2;\nexports.retrieve3 = retrieve3;\nexports.slice = slice;\nexports.normalizeCssArray = normalizeCssArray;\nexports.assert = assert;\nexports.setAsPrimitive = setAsPrimitive;\nexports.isPrimitive = isPrimitive;\nexports.createHashMap = createHashMap;\nexports.noop = noop;\n\n/***/ }),\n\n/***/ 979:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(983);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrender = __webpack_require__(1032);\n\nvar zrUtil = __webpack_require__(978);\n\nvar colorTool = __webpack_require__(1002);\n\nvar env = __webpack_require__(986);\n\nvar timsort = __webpack_require__(1024);\n\nvar Eventful = __webpack_require__(1001);\n\nvar GlobalModel = __webpack_require__(1101);\n\nvar ExtensionAPI = __webpack_require__(1126);\n\nvar CoordinateSystemManager = __webpack_require__(1006);\n\nvar OptionManager = __webpack_require__(1127);\n\nvar backwardCompat = __webpack_require__(1128);\n\nvar ComponentModel = __webpack_require__(991);\n\nvar SeriesModel = __webpack_require__(1000);\n\nvar ComponentView = __webpack_require__(1039);\n\nvar ChartView = __webpack_require__(1012);\n\nvar graphic = __webpack_require__(980);\n\nvar modelUtil = __webpack_require__(982);\n\nvar _throttle = __webpack_require__(1008);\n\nvar throttle = _throttle.throttle;\n\nvar seriesColor = __webpack_require__(1130);\n\nvar loadingDefault = __webpack_require__(1131);\n\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\nvar each = zrUtil.each;\nvar parseClassType = ComponentModel.parseClassType;\nvar version = '3.8.5';\nvar dependencies = {\n  zrender: '3.7.4'\n};\nvar PRIORITY_PROCESSOR_FILTER = 1000;\nvar PRIORITY_PROCESSOR_STATISTIC = 5000;\nvar PRIORITY_VISUAL_LAYOUT = 1000;\nvar PRIORITY_VISUAL_GLOBAL = 2000;\nvar PRIORITY_VISUAL_CHART = 3000;\nvar PRIORITY_VISUAL_COMPONENT = 4000; // FIXME\n// necessary?\n\nvar PRIORITY_VISUAL_BRUSH = 5000;\nvar PRIORITY = {\n  PROCESSOR: {\n    FILTER: PRIORITY_PROCESSOR_FILTER,\n    STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n  },\n  VISUAL: {\n    LAYOUT: PRIORITY_VISUAL_LAYOUT,\n    GLOBAL: PRIORITY_VISUAL_GLOBAL,\n    CHART: PRIORITY_VISUAL_CHART,\n    COMPONENT: PRIORITY_VISUAL_COMPONENT,\n    BRUSH: PRIORITY_VISUAL_BRUSH\n  }\n}; // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n// where they must not be invoked nestedly, except the only case: invoke\n// dispatchAction with updateMethod \"none\" in main process.\n// This flag is used to carry out this rule.\n// All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n\nvar IN_MAIN_PROCESS = '__flagInMainProcess';\nvar HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\nvar OPTION_UPDATED = '__optionUpdated';\nvar ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\nfunction createRegisterEventWithLowercaseName(method) {\n  return function (eventName, handler, context) {\n    // Event name is all lowercase\n    eventName = eventName && eventName.toLowerCase();\n    Eventful.prototype[method].call(this, eventName, handler, context);\n  };\n}\n/**\n * @module echarts~MessageCenter\n */\n\n\nfunction MessageCenter() {\n  Eventful.call(this);\n}\n\nMessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\nMessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\nMessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\nzrUtil.mixin(MessageCenter, Eventful);\n/**\n * @module echarts~ECharts\n */\n\nfunction ECharts(dom, theme, opts) {\n  opts = opts || {}; // Get theme by name\n\n  if (typeof theme === 'string') {\n    theme = themeStorage[theme];\n  }\n  /**\n   * @type {string}\n   */\n\n\n  this.id;\n  /**\n   * Group id\n   * @type {string}\n   */\n\n  this.group;\n  /**\n   * @type {HTMLElement}\n   * @private\n   */\n\n  this._dom = dom;\n  var defaultRenderer = 'canvas';\n\n  /**\n   * @type {module:zrender/ZRender}\n   * @private\n   */\n  var zr = this._zr = zrender.init(dom, {\n    renderer: opts.renderer || defaultRenderer,\n    devicePixelRatio: opts.devicePixelRatio,\n    width: opts.width,\n    height: opts.height\n  });\n  /**\n   * Expect 60 pfs.\n   * @type {Function}\n   * @private\n   */\n\n  this._throttledZrFlush = throttle(zrUtil.bind(zr.flush, zr), 17);\n  var theme = zrUtil.clone(theme);\n  theme && backwardCompat(theme, true);\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._theme = theme;\n  /**\n   * @type {Array.<module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsMap = {};\n  /**\n   * @type {Array.<module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsMap = {};\n  /**\n   * @type {module:echarts/CoordinateSystem}\n   * @private\n   */\n\n  this._coordSysMgr = new CoordinateSystemManager();\n  /**\n   * @type {module:echarts/ExtensionAPI}\n   * @private\n   */\n\n  this._api = createExtensionAPI(this);\n  Eventful.call(this);\n  /**\n   * @type {module:echarts~MessageCenter}\n   * @private\n   */\n\n  this._messageCenter = new MessageCenter(); // Init mouse events\n\n  this._initEvents(); // In case some people write `window.onresize = chart.resize`\n\n\n  this.resize = zrUtil.bind(this.resize, this); // Can't dispatch action during rendering procedure\n\n  this._pendingActions = []; // Sort on demand\n\n  function prioritySortFunc(a, b) {\n    return a.prio - b.prio;\n  }\n\n  timsort(visualFuncs, prioritySortFunc);\n  timsort(dataProcessorFuncs, prioritySortFunc);\n  zr.animation.on('frame', this._onframe, this); // ECharts instance can be used as value.\n\n  zrUtil.setAsPrimitive(this);\n}\n\nvar echartsProto = ECharts.prototype;\n\nechartsProto._onframe = function () {\n  // Lazy update\n  if (this[OPTION_UPDATED]) {\n    var silent = this[OPTION_UPDATED].silent;\n    this[IN_MAIN_PROCESS] = true;\n    updateMethods.prepareAndUpdate.call(this);\n    this[IN_MAIN_PROCESS] = false;\n    this[OPTION_UPDATED] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @return {HTMLElement}\n */\n\n\nechartsProto.getDom = function () {\n  return this._dom;\n};\n/**\n * @return {module:zrender~ZRender}\n */\n\n\nechartsProto.getZr = function () {\n  return this._zr;\n};\n/**\n * Usage:\n * chart.setOption(option, notMerge, lazyUpdate);\n * chart.setOption(option, {\n *     notMerge: ...,\n *     lazyUpdate: ...,\n *     silent: ...\n * });\n *\n * @param {Object} option\n * @param {Object|boolean} [opts] opts or notMerge.\n * @param {boolean} [opts.notMerge=false]\n * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n */\n\n\nechartsProto.setOption = function (option, notMerge, lazyUpdate) {\n  var silent;\n\n  if (zrUtil.isObject(notMerge)) {\n    lazyUpdate = notMerge.lazyUpdate;\n    silent = notMerge.silent;\n    notMerge = notMerge.notMerge;\n  }\n\n  this[IN_MAIN_PROCESS] = true;\n\n  if (!this._model || notMerge) {\n    var optionManager = new OptionManager(this._api);\n    var theme = this._theme;\n    var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n    ecModel.init(null, null, theme, optionManager);\n  }\n\n  this._model.setOption(option, optionPreprocessorFuncs);\n\n  if (lazyUpdate) {\n    this[OPTION_UPDATED] = {\n      silent: silent\n    };\n    this[IN_MAIN_PROCESS] = false;\n  } else {\n    updateMethods.prepareAndUpdate.call(this); // Ensure zr refresh sychronously, and then pixel in canvas can be\n    // fetched after `setOption`.\n\n    this._zr.flush();\n\n    this[OPTION_UPDATED] = false;\n    this[IN_MAIN_PROCESS] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @DEPRECATED\n */\n\n\nechartsProto.setTheme = function () {\n  console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n};\n/**\n * @return {module:echarts/model/Global}\n */\n\n\nechartsProto.getModel = function () {\n  return this._model;\n};\n/**\n * @return {Object}\n */\n\n\nechartsProto.getOption = function () {\n  return this._model && this._model.getOption();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getWidth = function () {\n  return this._zr.getWidth();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getHeight = function () {\n  return this._zr.getHeight();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getDevicePixelRatio = function () {\n  return this._zr.painter.dpr || window.devicePixelRatio || 1;\n};\n/**\n * Get canvas which has all thing rendered\n * @param {Object} opts\n * @param {string} [opts.backgroundColor]\n * @return {string}\n */\n\n\nechartsProto.getRenderedCanvas = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  opts = opts || {};\n  opts.pixelRatio = opts.pixelRatio || 1;\n  opts.backgroundColor = opts.backgroundColor || this._model.get('backgroundColor');\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.getRenderedCanvas(opts);\n};\n/**\n * Get svg data url\n * @return {string}\n */\n\n\nechartsProto.getSvgDataUrl = function () {\n  if (!env.svgSupported) {\n    return;\n  }\n\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.pathToSvg();\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n * @param {string} [opts.excludeComponents]\n */\n\n\nechartsProto.getDataURL = function (opts) {\n  opts = opts || {};\n  var excludeComponents = opts.excludeComponents;\n  var ecModel = this._model;\n  var excludesComponentViews = [];\n  var self = this;\n  each(excludeComponents, function (componentType) {\n    ecModel.eachComponent({\n      mainType: componentType\n    }, function (component) {\n      var view = self._componentsMap[component.__viewId];\n\n      if (!view.group.ignore) {\n        excludesComponentViews.push(view);\n        view.group.ignore = true;\n      }\n    });\n  });\n  var url = this._zr.painter.getType() === 'svg' ? this.getSvgDataUrl() : this.getRenderedCanvas(opts).toDataURL('image/' + (opts && opts.type || 'png'));\n  each(excludesComponentViews, function (view) {\n    view.group.ignore = false;\n  });\n  return url;\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n */\n\n\nechartsProto.getConnectedDataURL = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  var groupId = this.group;\n  var mathMin = Math.min;\n  var mathMax = Math.max;\n  var MAX_NUMBER = Infinity;\n\n  if (connectedGroups[groupId]) {\n    var left = MAX_NUMBER;\n    var top = MAX_NUMBER;\n    var right = -MAX_NUMBER;\n    var bottom = -MAX_NUMBER;\n    var canvasList = [];\n    var dpr = opts && opts.pixelRatio || 1;\n    zrUtil.each(instances, function (chart, id) {\n      if (chart.group === groupId) {\n        var canvas = chart.getRenderedCanvas(zrUtil.clone(opts));\n        var boundingRect = chart.getDom().getBoundingClientRect();\n        left = mathMin(boundingRect.left, left);\n        top = mathMin(boundingRect.top, top);\n        right = mathMax(boundingRect.right, right);\n        bottom = mathMax(boundingRect.bottom, bottom);\n        canvasList.push({\n          dom: canvas,\n          left: boundingRect.left,\n          top: boundingRect.top\n        });\n      }\n    });\n    left *= dpr;\n    top *= dpr;\n    right *= dpr;\n    bottom *= dpr;\n    var width = right - left;\n    var height = bottom - top;\n    var targetCanvas = zrUtil.createCanvas();\n    targetCanvas.width = width;\n    targetCanvas.height = height;\n    var zr = zrender.init(targetCanvas);\n    each(canvasList, function (item) {\n      var img = new graphic.Image({\n        style: {\n          x: item.left * dpr - left,\n          y: item.top * dpr - top,\n          image: item.dom\n        }\n      });\n      zr.add(img);\n    });\n    zr.refreshImmediately();\n    return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n  } else {\n    return this.getDataURL(opts);\n  }\n};\n/**\n * Convert from logical coordinate system to pixel coordinate system.\n * See CoordinateSystem#convertToPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId, geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\n\nechartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n/**\n * Convert from pixel coordinate system to logical coordinate system.\n * See CoordinateSystem#convertFromPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\nechartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\nfunction doConvertPixel(methodName, finder, value) {\n  var ecModel = this._model;\n\n  var coordSysList = this._coordSysMgr.getCoordinateSystems();\n\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n\n  for (var i = 0; i < coordSysList.length; i++) {\n    var coordSys = coordSysList[i];\n\n    if (coordSys[methodName] && (result = coordSys[methodName](ecModel, finder, value)) != null) {\n      return result;\n    }\n  }\n}\n/**\n * Is the specified coordinate systems or components contain the given pixel point.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {boolean} result\n */\n\n\nechartsProto.containPixel = function (finder, value) {\n  var ecModel = this._model;\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n  zrUtil.each(finder, function (models, key) {\n    key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n      var coordSys = model.coordinateSystem;\n\n      if (coordSys && coordSys.containPoint) {\n        result |= !!coordSys.containPoint(value);\n      } else if (key === 'seriesModels') {\n        var view = this._chartsMap[model.__viewId];\n\n        if (view && view.containPoint) {\n          result |= view.containPoint(value, model);\n        } else {}\n      } else {}\n    }, this);\n  }, this);\n  return !!result;\n};\n/**\n * Get visual from series or data.\n * @param {string|Object} finder\n *        If string, e.g., 'series', means {seriesIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            dataIndex / dataIndexInside\n *        }\n *        If dataIndex is not specified, series visual will be fetched,\n *        but not data item visual.\n *        If all of seriesIndex, seriesId, seriesName are not specified,\n *        visual will be fetched from first series.\n * @param {string} visualType 'color', 'symbol', 'symbolSize'\n */\n\n\nechartsProto.getVisual = function (finder, visualType) {\n  var ecModel = this._model;\n  finder = modelUtil.parseFinder(ecModel, finder, {\n    defaultMainType: 'series'\n  });\n  var seriesModel = finder.seriesModel;\n  var data = seriesModel.getData();\n  var dataIndexInside = finder.hasOwnProperty('dataIndexInside') ? finder.dataIndexInside : finder.hasOwnProperty('dataIndex') ? data.indexOfRawIndex(finder.dataIndex) : null;\n  return dataIndexInside != null ? data.getItemVisual(dataIndexInside, visualType) : data.getVisual(visualType);\n};\n/**\n * Get view of corresponding component model\n * @param  {module:echarts/model/Component} componentModel\n * @return {module:echarts/view/Component}\n */\n\n\nechartsProto.getViewOfComponentModel = function (componentModel) {\n  return this._componentsMap[componentModel.__viewId];\n};\n/**\n * Get view of corresponding series model\n * @param  {module:echarts/model/Series} seriesModel\n * @return {module:echarts/view/Chart}\n */\n\n\nechartsProto.getViewOfSeriesModel = function (seriesModel) {\n  return this._chartsMap[seriesModel.__viewId];\n};\n\nvar updateMethods = {\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  update: function (payload) {\n    // console.profile && console.profile('update');\n    var ecModel = this._model;\n    var api = this._api;\n    var coordSysMgr = this._coordSysMgr;\n    var zr = this._zr; // update before setOption\n\n    if (!ecModel) {\n      return;\n    } // Fixme First time update ?\n\n\n    ecModel.restoreData(); // TODO\n    // Save total ecModel here for undo/redo (after restoring data and before processing data).\n    // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n    // Create new coordinate system each update\n    // In LineView may save the old coordinate system and use it to get the orignal point\n\n    coordSysMgr.create(this._model, this._api);\n    processData.call(this, ecModel, api);\n    stackSeriesData.call(this, ecModel);\n    coordSysMgr.update(ecModel, api);\n    doVisualEncoding.call(this, ecModel, payload);\n    doRender.call(this, ecModel, payload); // Set background\n\n    var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n    var painter = zr.painter; // TODO all use clearColor ?\n\n    if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n      zr.configLayer(0, {\n        clearColor: backgroundColor\n      });\n    } else {\n      // In IE8\n      if (!env.canvasSupported) {\n        var colorArr = colorTool.parse(backgroundColor);\n        backgroundColor = colorTool.stringify(colorArr, 'rgb');\n\n        if (colorArr[3] === 0) {\n          backgroundColor = 'transparent';\n        }\n      }\n\n      if (backgroundColor.colorStops || backgroundColor.image) {\n        // Gradient background\n        // FIXME Fixed layer？\n        zr.configLayer(0, {\n          clearColor: backgroundColor\n        });\n        this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n        this._dom.style.background = 'transparent';\n      } else {\n        if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n          zr.configLayer(0, {\n            clearColor: null\n          });\n        }\n\n        this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n        this._dom.style.background = backgroundColor;\n      }\n    }\n\n    each(postUpdateFuncs, function (func) {\n      func(ecModel, api);\n    }); // console.profile && console.profileEnd('update');\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateView: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ecModel.eachSeries(function (seriesModel) {\n      seriesModel.getData().clearAllVisual();\n    });\n    doVisualEncoding.call(this, ecModel, payload);\n    invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateVisual: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ecModel.eachSeries(function (seriesModel) {\n      seriesModel.getData().clearAllVisual();\n    });\n    doVisualEncoding.call(this, ecModel, payload, true);\n    invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateLayout: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    doLayout.call(this, ecModel, payload);\n    invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  prepareAndUpdate: function (payload) {\n    var ecModel = this._model;\n    prepareView.call(this, 'component', ecModel);\n    prepareView.call(this, 'chart', ecModel);\n    updateMethods.update.call(this, payload);\n  }\n};\n/**\n * @private\n */\n\nfunction updateDirectly(ecIns, method, payload, mainType, subType) {\n  var ecModel = ecIns._model; // broadcast\n\n  if (!mainType) {\n    each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n    return;\n  }\n\n  var query = {};\n  query[mainType + 'Id'] = payload[mainType + 'Id'];\n  query[mainType + 'Index'] = payload[mainType + 'Index'];\n  query[mainType + 'Name'] = payload[mainType + 'Name'];\n  var condition = {\n    mainType: mainType,\n    query: query\n  };\n  subType && (condition.subType = subType); // subType may be '' by parseClassType;\n  // If dispatchAction before setOption, do nothing.\n\n  ecModel && ecModel.eachComponent(condition, function (model, index) {\n    callView(ecIns[mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId]);\n  }, ecIns);\n\n  function callView(view) {\n    view && view.__alive && view[method] && view[method](view.__model, ecModel, ecIns._api, payload);\n  }\n}\n/**\n * Resize the chart\n * @param {Object} opts\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n * @param {boolean} [opts.silent=false]\n */\n\n\nechartsProto.resize = function (opts) {\n  this[IN_MAIN_PROCESS] = true;\n\n  this._zr.resize(opts);\n\n  var optionChanged = this._model && this._model.resetOption('media');\n\n  var updateMethod = optionChanged ? 'prepareAndUpdate' : 'update';\n  updateMethods[updateMethod].call(this); // Resize loading effect\n\n  this._loadingFX && this._loadingFX.resize();\n  this[IN_MAIN_PROCESS] = false;\n  var silent = opts && opts.silent;\n  flushPendingActions.call(this, silent);\n  triggerUpdatedEvent.call(this, silent);\n};\n/**\n * Show loading effect\n * @param  {string} [name='default']\n * @param  {Object} [cfg]\n */\n\n\nechartsProto.showLoading = function (name, cfg) {\n  if (zrUtil.isObject(name)) {\n    cfg = name;\n    name = '';\n  }\n\n  name = name || 'default';\n  this.hideLoading();\n\n  if (!loadingEffects[name]) {\n    return;\n  }\n\n  var el = loadingEffects[name](this._api, cfg);\n  var zr = this._zr;\n  this._loadingFX = el;\n  zr.add(el);\n};\n/**\n * Hide loading effect\n */\n\n\nechartsProto.hideLoading = function () {\n  this._loadingFX && this._zr.remove(this._loadingFX);\n  this._loadingFX = null;\n};\n/**\n * @param {Object} eventObj\n * @return {Object}\n */\n\n\nechartsProto.makeActionFromEvent = function (eventObj) {\n  var payload = zrUtil.extend({}, eventObj);\n  payload.type = eventActionMap[eventObj.type];\n  return payload;\n};\n/**\n * @pubilc\n * @param {Object} payload\n * @param {string} [payload.type] Action type\n * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n * @param {boolean} [opt.silent=false] Whether trigger events.\n * @param {boolean} [opt.flush=undefined]\n *                  true: Flush immediately, and then pixel in canvas can be fetched\n *                      immediately. Caution: it might affect performance.\n *                  false: Not not flush.\n *                  undefined: Auto decide whether perform flush.\n */\n\n\nechartsProto.dispatchAction = function (payload, opt) {\n  if (!zrUtil.isObject(opt)) {\n    opt = {\n      silent: !!opt\n    };\n  }\n\n  if (!actions[payload.type]) {\n    return;\n  } // Avoid dispatch action before setOption. Especially in `connect`.\n\n\n  if (!this._model) {\n    return;\n  } // May dispatchAction in rendering procedure\n\n\n  if (this[IN_MAIN_PROCESS]) {\n    this._pendingActions.push(payload);\n\n    return;\n  }\n\n  doDispatchAction.call(this, payload, opt.silent);\n\n  if (opt.flush) {\n    this._zr.flush(true);\n  } else if (opt.flush !== false && env.browser.weChat) {\n    // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n    // hang when sliding page (on touch event), which cause that zr does not\n    // refresh util user interaction finished, which is not expected.\n    // But `dispatchAction` may be called too frequently when pan on touch\n    // screen, which impacts performance if do not throttle them.\n    this._throttledZrFlush();\n  }\n\n  flushPendingActions.call(this, opt.silent);\n  triggerUpdatedEvent.call(this, opt.silent);\n};\n\nfunction doDispatchAction(payload, silent) {\n  var payloadType = payload.type;\n  var escapeConnect = payload.escapeConnect;\n  var actionWrap = actions[payloadType];\n  var actionInfo = actionWrap.actionInfo;\n  var cptType = (actionInfo.update || 'update').split(':');\n  var updateMethod = cptType.pop();\n  cptType = cptType[0] != null && parseClassType(cptType[0]);\n  this[IN_MAIN_PROCESS] = true;\n  var payloads = [payload];\n  var batched = false; // Batch action\n\n  if (payload.batch) {\n    batched = true;\n    payloads = zrUtil.map(payload.batch, function (item) {\n      item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n      item.batch = null;\n      return item;\n    });\n  }\n\n  var eventObjBatch = [];\n  var eventObj;\n  var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n  each(payloads, function (batchItem) {\n    // Action can specify the event by return it.\n    eventObj = actionWrap.action(batchItem, this._model, this._api); // Emit event outside\n\n    eventObj = eventObj || zrUtil.extend({}, batchItem); // Convert type to eventType\n\n    eventObj.type = actionInfo.event || eventObj.type;\n    eventObjBatch.push(eventObj); // light update does not perform data process, layout and visual.\n\n    if (isHighDown) {\n      // method, payload, mainType, subType\n      updateDirectly(this, updateMethod, batchItem, 'series');\n    } else if (cptType) {\n      updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n    }\n  }, this);\n\n  if (updateMethod !== 'none' && !isHighDown && !cptType) {\n    // Still dirty\n    if (this[OPTION_UPDATED]) {\n      // FIXME Pass payload ?\n      updateMethods.prepareAndUpdate.call(this, payload);\n      this[OPTION_UPDATED] = false;\n    } else {\n      updateMethods[updateMethod].call(this, payload);\n    }\n  } // Follow the rule of action batch\n\n\n  if (batched) {\n    eventObj = {\n      type: actionInfo.event || payloadType,\n      escapeConnect: escapeConnect,\n      batch: eventObjBatch\n    };\n  } else {\n    eventObj = eventObjBatch[0];\n  }\n\n  this[IN_MAIN_PROCESS] = false;\n  !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n}\n\nfunction flushPendingActions(silent) {\n  var pendingActions = this._pendingActions;\n\n  while (pendingActions.length) {\n    var payload = pendingActions.shift();\n    doDispatchAction.call(this, payload, silent);\n  }\n}\n\nfunction triggerUpdatedEvent(silent) {\n  !silent && this.trigger('updated');\n}\n/**\n * Register event\n * @method\n */\n\n\nechartsProto.on = createRegisterEventWithLowercaseName('on');\nechartsProto.off = createRegisterEventWithLowercaseName('off');\nechartsProto.one = createRegisterEventWithLowercaseName('one');\n/**\n * @param {string} methodName\n * @private\n */\n\nfunction invokeUpdateMethod(methodName, ecModel, payload) {\n  var api = this._api; // Update all components\n\n  each(this._componentsViews, function (component) {\n    var componentModel = component.__model;\n    component[methodName](componentModel, ecModel, api, payload);\n    updateZ(componentModel, component);\n  }, this); // Upate all charts\n\n  ecModel.eachSeries(function (seriesModel, idx) {\n    var chart = this._chartsMap[seriesModel.__viewId];\n    chart[methodName](seriesModel, ecModel, api, payload);\n    updateZ(seriesModel, chart);\n    updateProgressiveAndBlend(seriesModel, chart);\n  }, this); // If use hover layer\n\n  updateHoverLayerStatus(this._zr, ecModel); // Post render\n\n  each(postUpdateFuncs, function (func) {\n    func(ecModel, api);\n  });\n}\n/**\n * Prepare view instances of charts and components\n * @param  {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction prepareView(type, ecModel) {\n  var isComponent = type === 'component';\n  var viewList = isComponent ? this._componentsViews : this._chartsViews;\n  var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n  var zr = this._zr;\n\n  for (var i = 0; i < viewList.length; i++) {\n    viewList[i].__alive = false;\n  }\n\n  ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n    if (isComponent) {\n      if (componentType === 'series') {\n        return;\n      }\n    } else {\n      model = componentType;\n    } // Consider: id same and type changed.\n\n\n    var viewId = '_ec_' + model.id + '_' + model.type;\n    var view = viewMap[viewId];\n\n    if (!view) {\n      var classType = parseClassType(model.type);\n      var Clazz = isComponent ? ComponentView.getClass(classType.main, classType.sub) : ChartView.getClass(classType.sub);\n\n      if (Clazz) {\n        view = new Clazz();\n        view.init(ecModel, this._api);\n        viewMap[viewId] = view;\n        viewList.push(view);\n        zr.add(view.group);\n      } else {\n        // Error\n        return;\n      }\n    }\n\n    model.__viewId = view.__id = viewId;\n    view.__alive = true;\n    view.__model = model;\n    view.group.__ecComponentInfo = {\n      mainType: model.mainType,\n      index: model.componentIndex\n    };\n  }, this);\n\n  for (var i = 0; i < viewList.length;) {\n    var view = viewList[i];\n\n    if (!view.__alive) {\n      zr.remove(view.group);\n      view.dispose(ecModel, this._api);\n      viewList.splice(i, 1);\n      delete viewMap[view.__id];\n      view.__id = view.group.__ecComponentInfo = null;\n    } else {\n      i++;\n    }\n  }\n}\n/**\n * Processor data in each series\n *\n * @param {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction processData(ecModel, api) {\n  each(dataProcessorFuncs, function (process) {\n    process.func(ecModel, api);\n  });\n}\n/**\n * @private\n */\n\n\nfunction stackSeriesData(ecModel) {\n  var stackedDataMap = {};\n  ecModel.eachSeries(function (series) {\n    var stack = series.get('stack');\n    var data = series.getData();\n\n    if (stack && data.type === 'list') {\n      var previousStack = stackedDataMap[stack]; // Avoid conflict with Object.prototype\n\n      if (stackedDataMap.hasOwnProperty(stack) && previousStack) {\n        data.stackedOn = previousStack;\n      }\n\n      stackedDataMap[stack] = data;\n    }\n  });\n}\n/**\n * Layout before each chart render there series, special visual encoding stage\n *\n * @param {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction doLayout(ecModel, payload) {\n  var api = this._api;\n  each(visualFuncs, function (visual) {\n    if (visual.isLayout) {\n      visual.func(ecModel, api, payload);\n    }\n  });\n}\n/**\n * Encode visual infomation from data after data processing\n *\n * @param {module:echarts/model/Global} ecModel\n * @param {object} layout\n * @param {boolean} [excludesLayout]\n * @private\n */\n\n\nfunction doVisualEncoding(ecModel, payload, excludesLayout) {\n  var api = this._api;\n  ecModel.clearColorPalette();\n  ecModel.eachSeries(function (seriesModel) {\n    seriesModel.clearColorPalette();\n  });\n  each(visualFuncs, function (visual) {\n    (!excludesLayout || !visual.isLayout) && visual.func(ecModel, api, payload);\n  });\n}\n/**\n * Render each chart and component\n * @private\n */\n\n\nfunction doRender(ecModel, payload) {\n  var api = this._api; // Render all components\n\n  each(this._componentsViews, function (componentView) {\n    var componentModel = componentView.__model;\n    componentView.render(componentModel, ecModel, api, payload);\n    updateZ(componentModel, componentView);\n  }, this);\n  each(this._chartsViews, function (chart) {\n    chart.__alive = false;\n  }, this); // Render all charts\n\n  ecModel.eachSeries(function (seriesModel, idx) {\n    var chartView = this._chartsMap[seriesModel.__viewId];\n    chartView.__alive = true;\n    chartView.render(seriesModel, ecModel, api, payload);\n    chartView.group.silent = !!seriesModel.get('silent');\n    updateZ(seriesModel, chartView);\n    updateProgressiveAndBlend(seriesModel, chartView);\n  }, this); // If use hover layer\n\n  updateHoverLayerStatus(this._zr, ecModel); // Remove groups of unrendered charts\n\n  each(this._chartsViews, function (chart) {\n    if (!chart.__alive) {\n      chart.remove(ecModel, api);\n    }\n  }, this);\n}\n\nvar MOUSE_EVENT_NAMES = ['click', 'dblclick', 'mouseover', 'mouseout', 'mousemove', 'mousedown', 'mouseup', 'globalout', 'contextmenu'];\n/**\n * @private\n */\n\nechartsProto._initEvents = function () {\n  each(MOUSE_EVENT_NAMES, function (eveName) {\n    this._zr.on(eveName, function (e) {\n      var ecModel = this.getModel();\n      var el = e.target;\n      var params; // no e.target when 'globalout'.\n\n      if (eveName === 'globalout') {\n        params = {};\n      } else if (el && el.dataIndex != null) {\n        var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n        params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n      } // If element has custom eventData of components\n      else if (el && el.eventData) {\n          params = zrUtil.extend({}, el.eventData);\n        }\n\n      if (params) {\n        params.event = e;\n        params.type = eveName;\n        this.trigger(eveName, params);\n      }\n    }, this);\n  }, this);\n  each(eventActionMap, function (actionType, eventType) {\n    this._messageCenter.on(eventType, function (event) {\n      this.trigger(eventType, event);\n    }, this);\n  }, this);\n};\n/**\n * @return {boolean}\n */\n\n\nechartsProto.isDisposed = function () {\n  return this._disposed;\n};\n/**\n * Clear\n */\n\n\nechartsProto.clear = function () {\n  this.setOption({\n    series: []\n  }, true);\n};\n/**\n * Dispose instance\n */\n\n\nechartsProto.dispose = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  this._disposed = true;\n  var api = this._api;\n  var ecModel = this._model;\n  each(this._componentsViews, function (component) {\n    component.dispose(ecModel, api);\n  });\n  each(this._chartsViews, function (chart) {\n    chart.dispose(ecModel, api);\n  }); // Dispose after all views disposed\n\n  this._zr.dispose();\n\n  delete instances[this.id];\n};\n\nzrUtil.mixin(ECharts, Eventful);\n\nfunction updateHoverLayerStatus(zr, ecModel) {\n  var storage = zr.storage;\n  var elCount = 0;\n  storage.traverse(function (el) {\n    if (!el.isGroup) {\n      elCount++;\n    }\n  });\n\n  if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n    storage.traverse(function (el) {\n      if (!el.isGroup) {\n        el.useHoverLayer = true;\n      }\n    });\n  }\n}\n/**\n * Update chart progressive and blend.\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateProgressiveAndBlend(seriesModel, chartView) {\n  // Progressive configuration\n  var elCount = 0;\n  chartView.group.traverse(function (el) {\n    if (el.type !== 'group' && !el.ignore) {\n      elCount++;\n    }\n  });\n  var frameDrawNum = +seriesModel.get('progressive');\n  var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n\n  if (needProgressive) {\n    chartView.group.traverse(function (el) {\n      // FIXME marker and other components\n      if (!el.isGroup) {\n        el.progressive = needProgressive ? Math.floor(elCount++ / frameDrawNum) : -1;\n\n        if (needProgressive) {\n          el.stopAnimation(true);\n        }\n      }\n    });\n  } // Blend configration\n\n\n  var blendMode = seriesModel.get('blendMode') || null;\n  chartView.group.traverse(function (el) {\n    // FIXME marker and other components\n    if (!el.isGroup) {\n      el.setStyle('blend', blendMode);\n    }\n  });\n}\n/**\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateZ(model, view) {\n  var z = model.get('z');\n  var zlevel = model.get('zlevel'); // Set z and zlevel\n\n  view.group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n    }\n  });\n}\n\nfunction createExtensionAPI(ecInstance) {\n  var coordSysMgr = ecInstance._coordSysMgr;\n  return zrUtil.extend(new ExtensionAPI(ecInstance), {\n    // Inject methods\n    getCoordinateSystems: zrUtil.bind(coordSysMgr.getCoordinateSystems, coordSysMgr),\n    getComponentByElement: function (el) {\n      while (el) {\n        var modelInfo = el.__ecComponentInfo;\n\n        if (modelInfo != null) {\n          return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n        }\n\n        el = el.parent;\n      }\n    }\n  });\n}\n/**\n * @type {Object} key: actionType.\n * @inner\n */\n\n\nvar actions = {};\n/**\n * Map eventType to actionType\n * @type {Object}\n */\n\nvar eventActionMap = {};\n/**\n * Data processor functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar dataProcessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar optionPreprocessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar postUpdateFuncs = [];\n/**\n * Visual encoding functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar visualFuncs = [];\n/**\n * Theme storage\n * @type {Object.<key, Object>}\n */\n\nvar themeStorage = {};\n/**\n * Loading effects\n */\n\nvar loadingEffects = {};\nvar instances = {};\nvar connectedGroups = {};\nvar idBase = new Date() - 0;\nvar groupIdBase = new Date() - 0;\nvar DOM_ATTRIBUTE_KEY = '_echarts_instance_';\nvar mapDataStores = {};\n\nfunction enableConnect(chart) {\n  var STATUS_PENDING = 0;\n  var STATUS_UPDATING = 1;\n  var STATUS_UPDATED = 2;\n  var STATUS_KEY = '__connectUpdateStatus';\n\n  function updateConnectedChartsStatus(charts, status) {\n    for (var i = 0; i < charts.length; i++) {\n      var otherChart = charts[i];\n      otherChart[STATUS_KEY] = status;\n    }\n  }\n\n  zrUtil.each(eventActionMap, function (actionType, eventType) {\n    chart._messageCenter.on(eventType, function (event) {\n      if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n        if (event && event.escapeConnect) {\n          return;\n        }\n\n        var action = chart.makeActionFromEvent(event);\n        var otherCharts = [];\n        zrUtil.each(instances, function (otherChart) {\n          if (otherChart !== chart && otherChart.group === chart.group) {\n            otherCharts.push(otherChart);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n        each(otherCharts, function (otherChart) {\n          if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n            otherChart.dispatchAction(action);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n      }\n    });\n  });\n}\n/**\n * @param {HTMLElement} dom\n * @param {Object} [theme]\n * @param {Object} opts\n * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n *                              Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n *                               Can be 'auto' (the same as null/undefined)\n */\n\n\nfunction init(dom, theme, opts) {\n  var existInstance = getInstanceByDom(dom);\n\n  if (existInstance) {\n    return existInstance;\n  }\n\n  var chart = new ECharts(dom, theme, opts);\n  chart.id = 'ec_' + idBase++;\n  instances[chart.id] = chart;\n\n  if (dom.setAttribute) {\n    dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n  } else {\n    dom[DOM_ATTRIBUTE_KEY] = chart.id;\n  }\n\n  enableConnect(chart);\n  return chart;\n}\n/**\n * @return {string|Array.<module:echarts~ECharts>} groupId\n */\n\n\nfunction connect(groupId) {\n  // Is array of charts\n  if (zrUtil.isArray(groupId)) {\n    var charts = groupId;\n    groupId = null; // If any chart has group\n\n    zrUtil.each(charts, function (chart) {\n      if (chart.group != null) {\n        groupId = chart.group;\n      }\n    });\n    groupId = groupId || 'g_' + groupIdBase++;\n    zrUtil.each(charts, function (chart) {\n      chart.group = groupId;\n    });\n  }\n\n  connectedGroups[groupId] = true;\n  return groupId;\n}\n/**\n * @DEPRECATED\n * @return {string} groupId\n */\n\n\nfunction disConnect(groupId) {\n  connectedGroups[groupId] = false;\n}\n/**\n * @return {string} groupId\n */\n\n\nvar disconnect = disConnect;\n/**\n * Dispose a chart instance\n * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n */\n\nfunction dispose(chart) {\n  if (typeof chart === 'string') {\n    chart = instances[chart];\n  } else if (!(chart instanceof ECharts)) {\n    // Try to treat as dom\n    chart = getInstanceByDom(chart);\n  }\n\n  if (chart instanceof ECharts && !chart.isDisposed()) {\n    chart.dispose();\n  }\n}\n/**\n * @param  {HTMLElement} dom\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceByDom(dom) {\n  var key;\n\n  if (dom.getAttribute) {\n    key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n  } else {\n    key = dom[DOM_ATTRIBUTE_KEY];\n  }\n\n  return instances[key];\n}\n/**\n * @param {string} key\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceById(key) {\n  return instances[key];\n}\n/**\n * Register theme\n */\n\n\nfunction registerTheme(name, theme) {\n  themeStorage[name] = theme;\n}\n/**\n * Register option preprocessor\n * @param {Function} preprocessorFunc\n */\n\n\nfunction registerPreprocessor(preprocessorFunc) {\n  optionPreprocessorFuncs.push(preprocessorFunc);\n}\n/**\n * @param {number} [priority=1000]\n * @param {Function} processorFunc\n */\n\n\nfunction registerProcessor(priority, processorFunc) {\n  if (typeof priority === 'function') {\n    processorFunc = priority;\n    priority = PRIORITY_PROCESSOR_FILTER;\n  }\n\n  dataProcessorFuncs.push({\n    prio: priority,\n    func: processorFunc\n  });\n}\n/**\n * Register postUpdater\n * @param {Function} postUpdateFunc\n */\n\n\nfunction registerPostUpdate(postUpdateFunc) {\n  postUpdateFuncs.push(postUpdateFunc);\n}\n/**\n * Usage:\n * registerAction('someAction', 'someEvent', function () { ... });\n * registerAction('someAction', function () { ... });\n * registerAction(\n *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n *     function () { ... }\n * );\n *\n * @param {(string|Object)} actionInfo\n * @param {string} actionInfo.type\n * @param {string} [actionInfo.event]\n * @param {string} [actionInfo.update]\n * @param {string} [eventName]\n * @param {Function} action\n */\n\n\nfunction registerAction(actionInfo, eventName, action) {\n  if (typeof eventName === 'function') {\n    action = eventName;\n    eventName = '';\n  }\n\n  var actionType = zrUtil.isObject(actionInfo) ? actionInfo.type : [actionInfo, actionInfo = {\n    event: eventName\n  }][0]; // Event name is all lowercase\n\n  actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n  eventName = actionInfo.event; // Validate action type and event name.\n\n  zrUtil.assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n  if (!actions[actionType]) {\n    actions[actionType] = {\n      action: action,\n      actionInfo: actionInfo\n    };\n  }\n\n  eventActionMap[eventName] = actionType;\n}\n/**\n * @param {string} type\n * @param {*} CoordinateSystem\n */\n\n\nfunction registerCoordinateSystem(type, CoordinateSystem) {\n  CoordinateSystemManager.register(type, CoordinateSystem);\n}\n/**\n * Get dimensions of specified coordinate system.\n * @param {string} type\n * @return {Array.<string|Object>}\n */\n\n\nfunction getCoordinateSystemDimensions(type) {\n  var coordSysCreator = CoordinateSystemManager.get(type);\n\n  if (coordSysCreator) {\n    return coordSysCreator.getDimensionsInfo ? coordSysCreator.getDimensionsInfo() : coordSysCreator.dimensions.slice();\n  }\n}\n/**\n * Layout is a special stage of visual encoding\n * Most visual encoding like color are common for different chart\n * But each chart has it's own layout algorithm\n *\n * @param {number} [priority=1000]\n * @param {Function} layoutFunc\n */\n\n\nfunction registerLayout(priority, layoutFunc) {\n  if (typeof priority === 'function') {\n    layoutFunc = priority;\n    priority = PRIORITY_VISUAL_LAYOUT;\n  }\n\n  visualFuncs.push({\n    prio: priority,\n    func: layoutFunc,\n    isLayout: true\n  });\n}\n/**\n * @param {number} [priority=3000]\n * @param {Function} visualFunc\n */\n\n\nfunction registerVisual(priority, visualFunc) {\n  if (typeof priority === 'function') {\n    visualFunc = priority;\n    priority = PRIORITY_VISUAL_CHART;\n  }\n\n  visualFuncs.push({\n    prio: priority,\n    func: visualFunc\n  });\n}\n/**\n * @param {string} name\n */\n\n\nfunction registerLoading(name, loadingFx) {\n  loadingEffects[name] = loadingFx;\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentModel(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentModel;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentView(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentView;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentView.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendSeriesModel(opts\n/*, superClass*/\n) {\n  // var Clazz = SeriesModel;\n  // if (superClass) {\n  //     superClass = 'series.' + superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return SeriesModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendChartView(opts\n/*, superClass*/\n) {\n  // var Clazz = ChartView;\n  // if (superClass) {\n  //     superClass = superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ChartView.getClass(classType.main, true);\n  // }\n  return ChartView.extend(opts);\n}\n/**\n * ZRender need a canvas context to do measureText.\n * But in node environment canvas may be created by node-canvas.\n * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n *\n * Be careful of using it in the browser.\n *\n * @param {Function} creator\n * @example\n *     var Canvas = require('canvas');\n *     var echarts = require('echarts');\n *     echarts.setCanvasCreator(function () {\n *         // Small size is enough.\n *         return new Canvas(32, 32);\n *     });\n */\n\n\nfunction setCanvasCreator(creator) {\n  zrUtil.$override('createCanvas', creator);\n}\n/**\n * @param {string} mapName\n * @param {Object|string} geoJson\n * @param {Object} [specialAreas]\n *\n * @example\n *     $.get('USA.json', function (geoJson) {\n *         echarts.registerMap('USA', geoJson);\n *         // Or\n *         echarts.registerMap('USA', {\n *             geoJson: geoJson,\n *             specialAreas: {}\n *         })\n *     });\n */\n\n\nfunction registerMap(mapName, geoJson, specialAreas) {\n  if (geoJson.geoJson && !geoJson.features) {\n    specialAreas = geoJson.specialAreas;\n    geoJson = geoJson.geoJson;\n  }\n\n  if (typeof geoJson === 'string') {\n    geoJson = typeof JSON !== 'undefined' && JSON.parse ? JSON.parse(geoJson) : new Function('return (' + geoJson + ');')();\n  }\n\n  mapDataStores[mapName] = {\n    geoJson: geoJson,\n    specialAreas: specialAreas\n  };\n}\n/**\n * @param {string} mapName\n * @return {Object}\n */\n\n\nfunction getMap(mapName) {\n  return mapDataStores[mapName];\n}\n\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesColor);\nregisterPreprocessor(backwardCompat);\nregisterLoading('default', loadingDefault); // Default actions\n\nregisterAction({\n  type: 'highlight',\n  event: 'highlight',\n  update: 'highlight'\n}, zrUtil.noop);\nregisterAction({\n  type: 'downplay',\n  event: 'downplay',\n  update: 'downplay'\n}, zrUtil.noop); // For backward compatibility, where the namespace `dataTool` will\n// be mounted on `echarts` is the extension `dataTool` is imported.\n\nvar dataTool = {};\nexports.version = version;\nexports.dependencies = dependencies;\nexports.PRIORITY = PRIORITY;\nexports.init = init;\nexports.connect = connect;\nexports.disConnect = disConnect;\nexports.disconnect = disconnect;\nexports.dispose = dispose;\nexports.getInstanceByDom = getInstanceByDom;\nexports.getInstanceById = getInstanceById;\nexports.registerTheme = registerTheme;\nexports.registerPreprocessor = registerPreprocessor;\nexports.registerProcessor = registerProcessor;\nexports.registerPostUpdate = registerPostUpdate;\nexports.registerAction = registerAction;\nexports.registerCoordinateSystem = registerCoordinateSystem;\nexports.getCoordinateSystemDimensions = getCoordinateSystemDimensions;\nexports.registerLayout = registerLayout;\nexports.registerVisual = registerVisual;\nexports.registerLoading = registerLoading;\nexports.extendComponentModel = extendComponentModel;\nexports.extendComponentView = extendComponentView;\nexports.extendSeriesModel = extendSeriesModel;\nexports.extendChartView = extendChartView;\nexports.setCanvasCreator = setCanvasCreator;\nexports.registerMap = registerMap;\nexports.getMap = getMap;\nexports.dataTool = dataTool;\nvar ___ec_export = __webpack_require__(1075);\n(function () {\n    for (var key in ___ec_export) {\n        if (___ec_export.hasOwnProperty(key)) {\n            exports[key] = ___ec_export[key];\n        }\n    }\n})();\n\n/***/ }),\n\n/***/ 980:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar pathTool = __webpack_require__(1105);\n\nvar colorTool = __webpack_require__(1002);\n\nvar matrix = __webpack_require__(994);\n\nvar vector = __webpack_require__(984);\n\nvar Path = __webpack_require__(988);\n\nvar Transformable = __webpack_require__(1036);\n\nvar Image = __webpack_require__(1025);\n\nexports.Image = Image;\n\nvar Group = __webpack_require__(1009);\n\nexports.Group = Group;\n\nvar Text = __webpack_require__(1038);\n\nexports.Text = Text;\n\nvar Circle = __webpack_require__(1110);\n\nexports.Circle = Circle;\n\nvar Sector = __webpack_require__(1111);\n\nexports.Sector = Sector;\n\nvar Ring = __webpack_require__(1112);\n\nexports.Ring = Ring;\n\nvar Polygon = __webpack_require__(1113);\n\nexports.Polygon = Polygon;\n\nvar Polyline = __webpack_require__(1116);\n\nexports.Polyline = Polyline;\n\nvar Rect = __webpack_require__(1117);\n\nexports.Rect = Rect;\n\nvar Line = __webpack_require__(1118);\n\nexports.Line = Line;\n\nvar BezierCurve = __webpack_require__(1119);\n\nexports.BezierCurve = BezierCurve;\n\nvar Arc = __webpack_require__(1120);\n\nexports.Arc = Arc;\n\nvar CompoundPath = __webpack_require__(1121);\n\nexports.CompoundPath = CompoundPath;\n\nvar LinearGradient = __webpack_require__(1074);\n\nexports.LinearGradient = LinearGradient;\n\nvar RadialGradient = __webpack_require__(1122);\n\nexports.RadialGradient = RadialGradient;\n\nvar BoundingRect = __webpack_require__(987);\n\nexports.BoundingRect = BoundingRect;\nvar round = Math.round;\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar EMPTY_OBJ = {};\n/**\n * Extend shape with parameters\n */\n\nfunction extendShape(opts) {\n  return Path.extend(opts);\n}\n/**\n * Extend path\n */\n\n\nfunction extendPath(pathData, opts) {\n  return pathTool.extendFromString(pathData, opts);\n}\n/**\n * Create a path element from path data string\n * @param {string} pathData\n * @param {Object} opts\n * @param {module:zrender/core/BoundingRect} rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makePath(pathData, opts, rect, layout) {\n  var path = pathTool.createFromString(pathData, opts);\n  var boundingRect = path.getBoundingRect();\n\n  if (rect) {\n    if (layout === 'center') {\n      rect = centerGraphic(rect, boundingRect);\n    }\n\n    resizePath(path, rect);\n  }\n\n  return path;\n}\n/**\n * Create a image element from image url\n * @param {string} imageUrl image url\n * @param {Object} opts options\n * @param {module:zrender/core/BoundingRect} rect constrain rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makeImage(imageUrl, rect, layout) {\n  var path = new Image({\n    style: {\n      image: imageUrl,\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    onload: function (img) {\n      if (layout === 'center') {\n        var boundingRect = {\n          width: img.width,\n          height: img.height\n        };\n        path.setStyle(centerGraphic(rect, boundingRect));\n      }\n    }\n  });\n  return path;\n}\n/**\n * Get position of centered element in bounding box.\n *\n * @param  {Object} rect         element local bounding box\n * @param  {Object} boundingRect constraint bounding box\n * @return {Object} element position containing x, y, width, and height\n */\n\n\nfunction centerGraphic(rect, boundingRect) {\n  // Set rect to center, keep width / height ratio.\n  var aspect = boundingRect.width / boundingRect.height;\n  var width = rect.height * aspect;\n  var height;\n\n  if (width <= rect.width) {\n    height = rect.height;\n  } else {\n    width = rect.width;\n    height = width / aspect;\n  }\n\n  var cx = rect.x + rect.width / 2;\n  var cy = rect.y + rect.height / 2;\n  return {\n    x: cx - width / 2,\n    y: cy - height / 2,\n    width: width,\n    height: height\n  };\n}\n\nvar mergePath = pathTool.mergePath;\n/**\n * Resize a path to fit the rect\n * @param {module:zrender/graphic/Path} path\n * @param {Object} rect\n */\n\nfunction resizePath(path, rect) {\n  if (!path.applyTransform) {\n    return;\n  }\n\n  var pathRect = path.getBoundingRect();\n  var m = pathRect.calculateTransform(rect);\n  path.applyTransform(m);\n}\n/**\n * Sub pixel optimize line for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x1]\n * @param {number} [param.shape.y1]\n * @param {number} [param.shape.x2]\n * @param {number} [param.shape.y2]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeLine(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n\n  if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n    shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n  }\n\n  if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n    shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n  }\n\n  return param;\n}\n/**\n * Sub pixel optimize rect for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x]\n * @param {number} [param.shape.y]\n * @param {number} [param.shape.width]\n * @param {number} [param.shape.height]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeRect(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n  var originX = shape.x;\n  var originY = shape.y;\n  var originWidth = shape.width;\n  var originHeight = shape.height;\n  shape.x = subPixelOptimize(shape.x, lineWidth, true);\n  shape.y = subPixelOptimize(shape.y, lineWidth, true);\n  shape.width = Math.max(subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x, originWidth === 0 ? 0 : 1);\n  shape.height = Math.max(subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y, originHeight === 0 ? 0 : 1);\n  return param;\n}\n/**\n * Sub pixel optimize for canvas\n *\n * @param {number} position Coordinate, such as x, y\n * @param {number} lineWidth Should be nonnegative integer.\n * @param {boolean=} positiveOrNegative Default false (negative).\n * @return {number} Optimized position.\n */\n\n\nfunction subPixelOptimize(position, lineWidth, positiveOrNegative) {\n  // Assure that (position + lineWidth / 2) is near integer edge,\n  // otherwise line will be fuzzy in canvas.\n  var doubledPosition = round(position * 2);\n  return (doubledPosition + round(lineWidth)) % 2 === 0 ? doubledPosition / 2 : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n}\n\nfunction hasFillOrStroke(fillOrStroke) {\n  return fillOrStroke != null && fillOrStroke != 'none';\n}\n\nfunction liftColor(color) {\n  return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n}\n/**\n * @private\n */\n\n\nfunction cacheElementStl(el) {\n  if (el.__hoverStlDirty) {\n    var stroke = el.style.stroke;\n    var fill = el.style.fill; // Create hoverStyle on mouseover\n\n    var hoverStyle = el.__hoverStl;\n    hoverStyle.fill = hoverStyle.fill || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n    hoverStyle.stroke = hoverStyle.stroke || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n    var normalStyle = {};\n\n    for (var name in hoverStyle) {\n      // See comment in `doSingleEnterHover`.\n      if (hoverStyle[name] != null) {\n        normalStyle[name] = el.style[name];\n      }\n    }\n\n    el.__normalStl = normalStyle;\n    el.__hoverStlDirty = false;\n  }\n}\n/**\n * @private\n */\n\n\nfunction doSingleEnterHover(el) {\n  if (el.__isHover) {\n    return;\n  }\n\n  cacheElementStl(el);\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.addHover(el, el.__hoverStl);\n  } else {\n    var style = el.style;\n    var insideRollbackOpt = style.insideRollbackOpt; // Consider case: only `position: 'top'` is set on emphasis, then text\n    // color should be returned to `autoColor`, rather than remain '#fff'.\n    // So we should rollback then apply again after style merging.\n\n    insideRollbackOpt && rollbackInsideStyle(style); // styles can be:\n    // {\n    //     label: {\n    //         normal: {\n    //             show: false,\n    //             position: 'outside',\n    //             fontSize: 18\n    //         },\n    //         emphasis: {\n    //             show: true\n    //         }\n    //     }\n    // },\n    // where properties of `emphasis` may not appear in `normal`. We previously use\n    // module:echarts/util/model#defaultEmphasis to merge `normal` to `emphasis`.\n    // But consider rich text and setOption in merge mode, it is impossible to cover\n    // all properties in merge. So we use merge mode when setting style here, where\n    // only properties that is not `null/undefined` can be set. The disadventage:\n    // null/undefined can not be used to remove style any more in `emphasis`.\n\n    style.extendFrom(el.__hoverStl); // Do not save `insideRollback`.\n\n    if (insideRollbackOpt) {\n      applyInsideStyle(style, style.insideOriginalTextPosition, insideRollbackOpt); // textFill may be rollbacked to null.\n\n      if (style.textFill == null) {\n        style.textFill = insideRollbackOpt.autoColor;\n      }\n    }\n\n    el.dirty(false);\n    el.z2 += 1;\n  }\n\n  el.__isHover = true;\n}\n/**\n * @inner\n */\n\n\nfunction doSingleLeaveHover(el) {\n  if (!el.__isHover) {\n    return;\n  }\n\n  var normalStl = el.__normalStl;\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.removeHover(el);\n  } else {\n    // Consider null/undefined value, should use\n    // `setStyle` but not `extendFrom(stl, true)`.\n    normalStl && el.setStyle(normalStl);\n    el.z2 -= 1;\n  }\n\n  el.__isHover = false;\n}\n/**\n * @inner\n */\n\n\nfunction doEnterHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleEnterHover(child);\n    }\n  }) : doSingleEnterHover(el);\n}\n\nfunction doLeaveHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleLeaveHover(child);\n    }\n  }) : doSingleLeaveHover(el);\n}\n/**\n * @inner\n */\n\n\nfunction setElementHoverStl(el, hoverStl) {\n  // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n  // Often used when item group has a label element and it's hoverStyle is different\n  el.__hoverStl = el.hoverStyle || hoverStl || {};\n  el.__hoverStlDirty = true;\n\n  if (el.__isHover) {\n    cacheElementStl(el);\n  }\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOver(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOut(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doLeaveHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction enterEmphasis() {\n  this.__isEmphasis = true;\n  doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction leaveEmphasis() {\n  this.__isEmphasis = false;\n  doLeaveHover(this);\n}\n/**\n * Set hover style of element.\n * This method can be called repeatly without side-effects.\n * @param {module:zrender/Element} el\n * @param {Object} [hoverStyle]\n * @param {Object} [opt]\n * @param {boolean} [opt.hoverSilentOnTouch=false]\n *        In touch device, mouseover event will be trigger on touchstart event\n *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n *        conviniently use hoverStyle when tap on touch screen without additional\n *        code for compatibility.\n *        But if the chart/component has select feature, which usually also use\n *        hoverStyle, there might be conflict between 'select-highlight' and\n *        'hover-highlight' especially when roam is enabled (see geo for example).\n *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n *        on touch device.\n */\n\n\nfunction setHoverStyle(el, hoverStyle, opt) {\n  el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      setElementHoverStl(child, hoverStyle);\n    }\n  }) : setElementHoverStl(el, hoverStyle); // Duplicated function will be auto-ignored, see Eventful.js.\n\n  el.on('mouseover', onElementMouseOver).on('mouseout', onElementMouseOut); // Emphasis, normal can be triggered manually\n\n  el.on('emphasis', enterEmphasis).on('normal', leaveEmphasis);\n}\n/**\n * @param {Object|module:zrender/graphic/Style} normalStyle\n * @param {Object} emphasisStyle\n * @param {module:echarts/model/Model} normalModel\n * @param {module:echarts/model/Model} emphasisModel\n * @param {Object} opt Check `opt` of `setTextStyleCommon` to find other props.\n * @param {Object} [opt.defaultText]\n * @param {module:echarts/model/Model} [opt.labelFetcher] Fetch text by\n *      `opt.labelFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDataIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDimIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {Object} [normalSpecified]\n * @param {Object} [emphasisSpecified]\n */\n\n\nfunction setLabelStyle(normalStyle, emphasisStyle, normalModel, emphasisModel, opt, normalSpecified, emphasisSpecified) {\n  opt = opt || EMPTY_OBJ;\n  var labelFetcher = opt.labelFetcher;\n  var labelDataIndex = opt.labelDataIndex;\n  var labelDimIndex = opt.labelDimIndex; // This scenario, `label.normal.show = true; label.emphasis.show = false`,\n  // is not supported util someone requests.\n\n  var showNormal = normalModel.getShallow('show');\n  var showEmphasis = emphasisModel.getShallow('show'); // Consider performance, only fetch label when necessary.\n  // If `normal.show` is `false` and `emphasis.show` is `true` and `emphasis.formatter` is not set,\n  // label should be displayed, where text is fetched by `normal.formatter` or `opt.defaultText`.\n\n  var baseText = showNormal || showEmphasis ? zrUtil.retrieve2(labelFetcher ? labelFetcher.getFormattedLabel(labelDataIndex, 'normal', null, labelDimIndex) : null, opt.defaultText) : null;\n  var normalStyleText = showNormal ? baseText : null;\n  var emphasisStyleText = showEmphasis ? zrUtil.retrieve2(labelFetcher ? labelFetcher.getFormattedLabel(labelDataIndex, 'emphasis', null, labelDimIndex) : null, baseText) : null; // Optimize: If style.text is null, text will not be drawn.\n\n  if (normalStyleText != null || emphasisStyleText != null) {\n    // Always set `textStyle` even if `normalStyle.text` is null, because default\n    // values have to be set on `normalStyle`.\n    // If we set default values on `emphasisStyle`, consider case:\n    // Firstly, `setOption(... label: {normal: {text: null}, emphasis: {show: true}} ...);`\n    // Secondly, `setOption(... label: {noraml: {show: true, text: 'abc', color: 'red'} ...);`\n    // Then the 'red' will not work on emphasis.\n    setTextStyle(normalStyle, normalModel, normalSpecified, opt);\n    setTextStyle(emphasisStyle, emphasisModel, emphasisSpecified, opt, true);\n  }\n\n  normalStyle.text = normalStyleText;\n  emphasisStyle.text = emphasisStyleText;\n}\n/**\n * Set basic textStyle properties.\n * @param {Object|module:zrender/graphic/Style} textStyle\n * @param {module:echarts/model/Model} model\n * @param {Object} [specifiedTextStyle] Can be overrided by settings in model.\n * @param {Object} [opt] See `opt` of `setTextStyleCommon`.\n * @param {boolean} [isEmphasis]\n */\n\n\nfunction setTextStyle(textStyle, textStyleModel, specifiedTextStyle, opt, isEmphasis) {\n  setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis);\n  specifiedTextStyle && zrUtil.extend(textStyle, specifiedTextStyle);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n  return textStyle;\n}\n/**\n * Set text option in the style.\n * @deprecated\n * @param {Object} textStyle\n * @param {module:echarts/model/Model} labelModel\n * @param {string|boolean} defaultColor Default text color.\n *        If set as false, it will be processed as a emphasis style.\n */\n\n\nfunction setText(textStyle, labelModel, defaultColor) {\n  var opt = {\n    isRectText: true\n  };\n  var isEmphasis;\n\n  if (defaultColor === false) {\n    isEmphasis = true;\n  } else {\n    // Support setting color as 'auto' to get visual color.\n    opt.autoColor = defaultColor;\n  }\n\n  setTextStyleCommon(textStyle, labelModel, opt, isEmphasis);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n}\n/**\n * {\n *      disableBox: boolean, Whether diable drawing box of block (outer most).\n *      isRectText: boolean,\n *      autoColor: string, specify a color when color is 'auto',\n *              for textFill, textStroke, textBackgroundColor, and textBorderColor.\n *              If autoColor specified, it is used as default textFill.\n *      useInsideStyle:\n *              `true`: Use inside style (textFill, textStroke, textStrokeWidth)\n *                  if `textFill` is not specified.\n *              `false`: Do not use inside style.\n *              `null/undefined`: use inside style if `isRectText` is true and\n *                  `textFill` is not specified and textPosition contains `'inside'`.\n *      forceRich: boolean\n * }\n */\n\n\nfunction setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis) {\n  // Consider there will be abnormal when merge hover style to normal style if given default value.\n  opt = opt || EMPTY_OBJ;\n\n  if (opt.isRectText) {\n    var textPosition = textStyleModel.getShallow('position') || (isEmphasis ? null : 'inside'); // 'outside' is not a valid zr textPostion value, but used\n    // in bar series, and magric type should be considered.\n\n    textPosition === 'outside' && (textPosition = 'top');\n    textStyle.textPosition = textPosition;\n    textStyle.textOffset = textStyleModel.getShallow('offset');\n    var labelRotate = textStyleModel.getShallow('rotate');\n    labelRotate != null && (labelRotate *= Math.PI / 180);\n    textStyle.textRotation = labelRotate;\n    textStyle.textDistance = zrUtil.retrieve2(textStyleModel.getShallow('distance'), isEmphasis ? null : 5);\n  }\n\n  var ecModel = textStyleModel.ecModel;\n  var globalTextStyle = ecModel && ecModel.option.textStyle; // Consider case:\n  // {\n  //     data: [{\n  //         value: 12,\n  //         label: {\n  //             normal: {\n  //                 rich: {\n  //                     // no 'a' here but using parent 'a'.\n  //                 }\n  //             }\n  //         }\n  //     }],\n  //     rich: {\n  //         a: { ... }\n  //     }\n  // }\n\n  var richItemNames = getRichItemNames(textStyleModel);\n  var richResult;\n\n  if (richItemNames) {\n    richResult = {};\n\n    for (var name in richItemNames) {\n      if (richItemNames.hasOwnProperty(name)) {\n        // Cascade is supported in rich.\n        var richTextStyle = textStyleModel.getModel(['rich', name]); // In rich, never `disableBox`.\n\n        setTokenTextStyle(richResult[name] = {}, richTextStyle, globalTextStyle, opt, isEmphasis);\n      }\n    }\n  }\n\n  textStyle.rich = richResult;\n  setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, true);\n\n  if (opt.forceRich && !opt.textStyle) {\n    opt.textStyle = {};\n  }\n\n  return textStyle;\n} // Consider case:\n// {\n//     data: [{\n//         value: 12,\n//         label: {\n//             normal: {\n//                 rich: {\n//                     // no 'a' here but using parent 'a'.\n//                 }\n//             }\n//         }\n//     }],\n//     rich: {\n//         a: { ... }\n//     }\n// }\n\n\nfunction getRichItemNames(textStyleModel) {\n  // Use object to remove duplicated names.\n  var richItemNameMap;\n\n  while (textStyleModel && textStyleModel !== textStyleModel.ecModel) {\n    var rich = (textStyleModel.option || EMPTY_OBJ).rich;\n\n    if (rich) {\n      richItemNameMap = richItemNameMap || {};\n\n      for (var name in rich) {\n        if (rich.hasOwnProperty(name)) {\n          richItemNameMap[name] = 1;\n        }\n      }\n    }\n\n    textStyleModel = textStyleModel.parentModel;\n  }\n\n  return richItemNameMap;\n}\n\nfunction setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, isBlock) {\n  // In merge mode, default value should not be given.\n  globalTextStyle = !isEmphasis && globalTextStyle || EMPTY_OBJ;\n  textStyle.textFill = getAutoColor(textStyleModel.getShallow('color'), opt) || globalTextStyle.color;\n  textStyle.textStroke = getAutoColor(textStyleModel.getShallow('textBorderColor'), opt) || globalTextStyle.textBorderColor;\n  textStyle.textStrokeWidth = zrUtil.retrieve2(textStyleModel.getShallow('textBorderWidth'), globalTextStyle.textBorderWidth);\n\n  if (!isEmphasis) {\n    if (isBlock) {\n      // Always set `insideRollback`, for clearing previous.\n      var originalTextPosition = textStyle.textPosition;\n      textStyle.insideRollback = applyInsideStyle(textStyle, originalTextPosition, opt); // Save original textPosition, because style.textPosition will be repalced by\n      // real location (like [10, 30]) in zrender.\n\n      textStyle.insideOriginalTextPosition = originalTextPosition;\n      textStyle.insideRollbackOpt = opt;\n    } // Set default finally.\n\n\n    if (textStyle.textFill == null) {\n      textStyle.textFill = opt.autoColor;\n    }\n  } // Do not use `getFont` here, because merge should be supported, where\n  // part of these properties may be changed in emphasis style, and the\n  // others should remain their original value got from normal style.\n\n\n  textStyle.fontStyle = textStyleModel.getShallow('fontStyle') || globalTextStyle.fontStyle;\n  textStyle.fontWeight = textStyleModel.getShallow('fontWeight') || globalTextStyle.fontWeight;\n  textStyle.fontSize = textStyleModel.getShallow('fontSize') || globalTextStyle.fontSize;\n  textStyle.fontFamily = textStyleModel.getShallow('fontFamily') || globalTextStyle.fontFamily;\n  textStyle.textAlign = textStyleModel.getShallow('align');\n  textStyle.textVerticalAlign = textStyleModel.getShallow('verticalAlign') || textStyleModel.getShallow('baseline');\n  textStyle.textLineHeight = textStyleModel.getShallow('lineHeight');\n  textStyle.textWidth = textStyleModel.getShallow('width');\n  textStyle.textHeight = textStyleModel.getShallow('height');\n  textStyle.textTag = textStyleModel.getShallow('tag');\n\n  if (!isBlock || !opt.disableBox) {\n    textStyle.textBackgroundColor = getAutoColor(textStyleModel.getShallow('backgroundColor'), opt);\n    textStyle.textPadding = textStyleModel.getShallow('padding');\n    textStyle.textBorderColor = getAutoColor(textStyleModel.getShallow('borderColor'), opt);\n    textStyle.textBorderWidth = textStyleModel.getShallow('borderWidth');\n    textStyle.textBorderRadius = textStyleModel.getShallow('borderRadius');\n    textStyle.textBoxShadowColor = textStyleModel.getShallow('shadowColor');\n    textStyle.textBoxShadowBlur = textStyleModel.getShallow('shadowBlur');\n    textStyle.textBoxShadowOffsetX = textStyleModel.getShallow('shadowOffsetX');\n    textStyle.textBoxShadowOffsetY = textStyleModel.getShallow('shadowOffsetY');\n  }\n\n  textStyle.textShadowColor = textStyleModel.getShallow('textShadowColor') || globalTextStyle.textShadowColor;\n  textStyle.textShadowBlur = textStyleModel.getShallow('textShadowBlur') || globalTextStyle.textShadowBlur;\n  textStyle.textShadowOffsetX = textStyleModel.getShallow('textShadowOffsetX') || globalTextStyle.textShadowOffsetX;\n  textStyle.textShadowOffsetY = textStyleModel.getShallow('textShadowOffsetY') || globalTextStyle.textShadowOffsetY;\n}\n\nfunction getAutoColor(color, opt) {\n  return color !== 'auto' ? color : opt && opt.autoColor ? opt.autoColor : null;\n}\n\nfunction applyInsideStyle(textStyle, textPosition, opt) {\n  var useInsideStyle = opt.useInsideStyle;\n  var insideRollback;\n\n  if (textStyle.textFill == null && useInsideStyle !== false && (useInsideStyle === true || opt.isRectText && textPosition // textPosition can be [10, 30]\n  && typeof textPosition === 'string' && textPosition.indexOf('inside') >= 0)) {\n    insideRollback = {\n      textFill: null,\n      textStroke: textStyle.textStroke,\n      textStrokeWidth: textStyle.textStrokeWidth\n    };\n    textStyle.textFill = '#fff'; // Consider text with #fff overflow its container.\n\n    if (textStyle.textStroke == null) {\n      textStyle.textStroke = opt.autoColor;\n      textStyle.textStrokeWidth == null && (textStyle.textStrokeWidth = 2);\n    }\n  }\n\n  return insideRollback;\n}\n\nfunction rollbackInsideStyle(style) {\n  var insideRollback = style.insideRollback;\n\n  if (insideRollback) {\n    style.textFill = insideRollback.textFill;\n    style.textStroke = insideRollback.textStroke;\n    style.textStrokeWidth = insideRollback.textStrokeWidth;\n  }\n}\n\nfunction getFont(opt, ecModel) {\n  // ecModel or default text style model.\n  var gTextStyleModel = ecModel || ecModel.getModel('textStyle');\n  return [// FIXME in node-canvas fontWeight is before fontStyle\n  opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '', opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '', (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px', opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'].join(' ');\n}\n\nfunction animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n  if (typeof dataIndex === 'function') {\n    cb = dataIndex;\n    dataIndex = null;\n  } // Do not check 'animation' property directly here. Consider this case:\n  // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n  // but its parent model (`seriesModel`) does.\n\n\n  var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n  if (animationEnabled) {\n    var postfix = isUpdate ? 'Update' : '';\n    var duration = animatableModel.getShallow('animationDuration' + postfix);\n    var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n    var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n\n    if (typeof animationDelay === 'function') {\n      animationDelay = animationDelay(dataIndex, animatableModel.getAnimationDelayParams ? animatableModel.getAnimationDelayParams(el, dataIndex) : null);\n    }\n\n    if (typeof duration === 'function') {\n      duration = duration(dataIndex);\n    }\n\n    duration > 0 ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb, !!cb) : (el.stopAnimation(), el.attr(props), cb && cb());\n  } else {\n    el.stopAnimation();\n    el.attr(props);\n    cb && cb();\n  }\n}\n/**\n * Update graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} [cb]\n * @example\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n *     // Or\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, function () { console.log('Animation done!'); });\n */\n\n\nfunction updateProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Init graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} cb\n */\n\n\nfunction initProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Get transform matrix of target (param target),\n * in coordinate of its ancestor (param ancestor)\n *\n * @param {module:zrender/mixin/Transformable} target\n * @param {module:zrender/mixin/Transformable} [ancestor]\n */\n\n\nfunction getTransform(target, ancestor) {\n  var mat = matrix.identity([]);\n\n  while (target && target !== ancestor) {\n    matrix.mul(mat, target.getLocalTransform(), mat);\n    target = target.parent;\n  }\n\n  return mat;\n}\n/**\n * Apply transform to an vertex.\n * @param {Array.<number>} target [x, y]\n * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\n *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n * @param {boolean=} invert Whether use invert matrix.\n * @return {Array.<number>} [x, y]\n */\n\n\nfunction applyTransform(target, transform, invert) {\n  if (transform && !zrUtil.isArrayLike(transform)) {\n    transform = Transformable.getLocalTransform(transform);\n  }\n\n  if (invert) {\n    transform = matrix.invert([], transform);\n  }\n\n  return vector.applyTransform([], target, transform);\n}\n/**\n * @param {string} direction 'left' 'right' 'top' 'bottom'\n * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n * @param {boolean=} invert Whether use invert matrix.\n * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n */\n\n\nfunction transformDirection(direction, transform, invert) {\n  // Pick a base, ensure that transform result will not be (0, 0).\n  var hBase = transform[4] === 0 || transform[5] === 0 || transform[0] === 0 ? 1 : Math.abs(2 * transform[4] / transform[0]);\n  var vBase = transform[4] === 0 || transform[5] === 0 || transform[2] === 0 ? 1 : Math.abs(2 * transform[4] / transform[2]);\n  var vertex = [direction === 'left' ? -hBase : direction === 'right' ? hBase : 0, direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0];\n  vertex = applyTransform(vertex, transform, invert);\n  return Math.abs(vertex[0]) > Math.abs(vertex[1]) ? vertex[0] > 0 ? 'right' : 'left' : vertex[1] > 0 ? 'bottom' : 'top';\n}\n/**\n * Apply group transition animation from g1 to g2.\n * If no animatableModel, no animation.\n */\n\n\nfunction groupTransition(g1, g2, animatableModel, cb) {\n  if (!g1 || !g2) {\n    return;\n  }\n\n  function getElMap(g) {\n    var elMap = {};\n    g.traverse(function (el) {\n      if (!el.isGroup && el.anid) {\n        elMap[el.anid] = el;\n      }\n    });\n    return elMap;\n  }\n\n  function getAnimatableProps(el) {\n    var obj = {\n      position: vector.clone(el.position),\n      rotation: el.rotation\n    };\n\n    if (el.shape) {\n      obj.shape = zrUtil.extend({}, el.shape);\n    }\n\n    return obj;\n  }\n\n  var elMap1 = getElMap(g1);\n  g2.traverse(function (el) {\n    if (!el.isGroup && el.anid) {\n      var oldEl = elMap1[el.anid];\n\n      if (oldEl) {\n        var newProp = getAnimatableProps(el);\n        el.attr(getAnimatableProps(oldEl));\n        updateProps(el, newProp, animatableModel, el.dataIndex);\n      } // else {\n      //     if (el.previousProps) {\n      //         graphic.updateProps\n      //     }\n      // }\n\n    }\n  });\n}\n/**\n * @param {Array.<Array.<number>>} points Like: [[23, 44], [53, 66], ...]\n * @param {Object} rect {x, y, width, height}\n * @return {Array.<Array.<number>>} A new clipped points.\n */\n\n\nfunction clipPointsByRect(points, rect) {\n  return zrUtil.map(points, function (point) {\n    var x = point[0];\n    x = mathMax(x, rect.x);\n    x = mathMin(x, rect.x + rect.width);\n    var y = point[1];\n    y = mathMax(y, rect.y);\n    y = mathMin(y, rect.y + rect.height);\n    return [x, y];\n  });\n}\n/**\n * @param {Object} targetRect {x, y, width, height}\n * @param {Object} rect {x, y, width, height}\n * @return {Object} A new clipped rect. If rect size are negative, return undefined.\n */\n\n\nfunction clipRectByRect(targetRect, rect) {\n  var x = mathMax(targetRect.x, rect.x);\n  var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\n  var y = mathMax(targetRect.y, rect.y);\n  var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height);\n\n  if (x2 >= x && y2 >= y) {\n    return {\n      x: x,\n      y: y,\n      width: x2 - x,\n      height: y2 - y\n    };\n  }\n}\n/**\n * @param {string} iconStr Support 'image://' or 'path://' or direct svg path.\n * @param {Object} [opt] Properties of `module:zrender/Element`, except `style`.\n * @param {Object} [rect] {x, y, width, height}\n * @return {module:zrender/Element} Icon path or image element.\n */\n\n\nfunction createIcon(iconStr, opt, rect) {\n  opt = zrUtil.extend({\n    rectHover: true\n  }, opt);\n  var style = opt.style = {\n    strokeNoScale: true\n  };\n  rect = rect || {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  };\n\n  if (iconStr) {\n    return iconStr.indexOf('image://') === 0 ? (style.image = iconStr.slice(8), zrUtil.defaults(style, rect), new Image(opt)) : makePath(iconStr.replace('path://', ''), opt, rect, 'center');\n  }\n}\n\nexports.extendShape = extendShape;\nexports.extendPath = extendPath;\nexports.makePath = makePath;\nexports.makeImage = makeImage;\nexports.mergePath = mergePath;\nexports.resizePath = resizePath;\nexports.subPixelOptimizeLine = subPixelOptimizeLine;\nexports.subPixelOptimizeRect = subPixelOptimizeRect;\nexports.subPixelOptimize = subPixelOptimize;\nexports.setHoverStyle = setHoverStyle;\nexports.setLabelStyle = setLabelStyle;\nexports.setTextStyle = setTextStyle;\nexports.setText = setText;\nexports.getFont = getFont;\nexports.updateProps = updateProps;\nexports.initProps = initProps;\nexports.getTransform = getTransform;\nexports.applyTransform = applyTransform;\nexports.transformDirection = transformDirection;\nexports.groupTransition = groupTransition;\nexports.clipPointsByRect = clipPointsByRect;\nexports.clipRectByRect = clipRectByRect;\nexports.createIcon = createIcon;\n\n/***/ }),\n\n/***/ 981:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar RADIAN_EPSILON = 1e-4;\n\nfunction _trim(str) {\n  return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n}\n/**\n * Linear mapping a value from domain to range\n * @memberOf module:echarts/util/number\n * @param  {(number|Array.<number>)} val\n * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n * @param  {boolean} clamp\n * @return {(number|Array.<number>}\n */\n\n\nfunction linearMap(val, domain, range, clamp) {\n  var subDomain = domain[1] - domain[0];\n  var subRange = range[1] - range[0];\n\n  if (subDomain === 0) {\n    return subRange === 0 ? range[0] : (range[0] + range[1]) / 2;\n  } // Avoid accuracy problem in edge, such as\n  // 146.39 - 62.83 === 83.55999999999999.\n  // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n  // It is a little verbose for efficiency considering this method\n  // is a hotspot.\n\n\n  if (clamp) {\n    if (subDomain > 0) {\n      if (val <= domain[0]) {\n        return range[0];\n      } else if (val >= domain[1]) {\n        return range[1];\n      }\n    } else {\n      if (val >= domain[0]) {\n        return range[0];\n      } else if (val <= domain[1]) {\n        return range[1];\n      }\n    }\n  } else {\n    if (val === domain[0]) {\n      return range[0];\n    }\n\n    if (val === domain[1]) {\n      return range[1];\n    }\n  }\n\n  return (val - domain[0]) / subDomain * subRange + range[0];\n}\n/**\n * Convert a percent string to absolute number.\n * Returns NaN if percent is not a valid string or number\n * @memberOf module:echarts/util/number\n * @param {string|number} percent\n * @param {number} all\n * @return {number}\n */\n\n\nfunction parsePercent(percent, all) {\n  switch (percent) {\n    case 'center':\n    case 'middle':\n      percent = '50%';\n      break;\n\n    case 'left':\n    case 'top':\n      percent = '0%';\n      break;\n\n    case 'right':\n    case 'bottom':\n      percent = '100%';\n      break;\n  }\n\n  if (typeof percent === 'string') {\n    if (_trim(percent).match(/%$/)) {\n      return parseFloat(percent) / 100 * all;\n    }\n\n    return parseFloat(percent);\n  }\n\n  return percent == null ? NaN : +percent;\n}\n/**\n * (1) Fix rounding error of float numbers.\n * (2) Support return string to avoid scientific notation like '3.5e-7'.\n *\n * @param {number} x\n * @param {number} [precision]\n * @param {boolean} [returnStr]\n * @return {number|string}\n */\n\n\nfunction round(x, precision, returnStr) {\n  if (precision == null) {\n    precision = 10;\n  } // Avoid range error\n\n\n  precision = Math.min(Math.max(0, precision), 20);\n  x = (+x).toFixed(precision);\n  return returnStr ? x : +x;\n}\n\nfunction asc(arr) {\n  arr.sort(function (a, b) {\n    return a - b;\n  });\n  return arr;\n}\n/**\n * Get precision\n * @param {number} val\n */\n\n\nfunction getPrecision(val) {\n  val = +val;\n\n  if (isNaN(val)) {\n    return 0;\n  } // It is much faster than methods converting number to string as follows\n  //      var tmp = val.toString();\n  //      return tmp.length - 1 - tmp.indexOf('.');\n  // especially when precision is low\n\n\n  var e = 1;\n  var count = 0;\n\n  while (Math.round(val * e) / e !== val) {\n    e *= 10;\n    count++;\n  }\n\n  return count;\n}\n/**\n * @param {string|number} val\n * @return {number}\n */\n\n\nfunction getPrecisionSafe(val) {\n  var str = val.toString(); // Consider scientific notation: '3.4e-12' '3.4e+12'\n\n  var eIndex = str.indexOf('e');\n\n  if (eIndex > 0) {\n    var precision = +str.slice(eIndex + 1);\n    return precision < 0 ? -precision : 0;\n  } else {\n    var dotIndex = str.indexOf('.');\n    return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n  }\n}\n/**\n * Minimal dicernible data precisioin according to a single pixel.\n *\n * @param {Array.<number>} dataExtent\n * @param {Array.<number>} pixelExtent\n * @return {number} precision\n */\n\n\nfunction getPixelPrecision(dataExtent, pixelExtent) {\n  var log = Math.log;\n  var LN10 = Math.LN10;\n  var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n  var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10); // toFixed() digits argument must be between 0 and 20.\n\n  var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n  return !isFinite(precision) ? 20 : precision;\n}\n/**\n * Get a data of given precision, assuring the sum of percentages\n * in valueList is 1.\n * The largest remainer method is used.\n * https://en.wikipedia.org/wiki/Largest_remainder_method\n *\n * @param {Array.<number>} valueList a list of all data\n * @param {number} idx index of the data to be processed in valueList\n * @param {number} precision integer number showing digits of precision\n * @return {number} percent ranging from 0 to 100\n */\n\n\nfunction getPercentWithPrecision(valueList, idx, precision) {\n  if (!valueList[idx]) {\n    return 0;\n  }\n\n  var sum = zrUtil.reduce(valueList, function (acc, val) {\n    return acc + (isNaN(val) ? 0 : val);\n  }, 0);\n\n  if (sum === 0) {\n    return 0;\n  }\n\n  var digits = Math.pow(10, precision);\n  var votesPerQuota = zrUtil.map(valueList, function (val) {\n    return (isNaN(val) ? 0 : val) / sum * digits * 100;\n  });\n  var targetSeats = digits * 100;\n  var seats = zrUtil.map(votesPerQuota, function (votes) {\n    // Assign automatic seats.\n    return Math.floor(votes);\n  });\n  var currentSum = zrUtil.reduce(seats, function (acc, val) {\n    return acc + val;\n  }, 0);\n  var remainder = zrUtil.map(votesPerQuota, function (votes, idx) {\n    return votes - seats[idx];\n  }); // Has remainding votes.\n\n  while (currentSum < targetSeats) {\n    // Find next largest remainder.\n    var max = Number.NEGATIVE_INFINITY;\n    var maxId = null;\n\n    for (var i = 0, len = remainder.length; i < len; ++i) {\n      if (remainder[i] > max) {\n        max = remainder[i];\n        maxId = i;\n      }\n    } // Add a vote to max remainder.\n\n\n    ++seats[maxId];\n    remainder[maxId] = 0;\n    ++currentSum;\n  }\n\n  return seats[idx] / digits;\n} // Number.MAX_SAFE_INTEGER, ie do not support.\n\n\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * To 0 - 2 * PI, considering negative radian.\n * @param {number} radian\n * @return {number}\n */\n\nfunction remRadian(radian) {\n  var pi2 = Math.PI * 2;\n  return (radian % pi2 + pi2) % pi2;\n}\n/**\n * @param {type} radian\n * @return {boolean}\n */\n\n\nfunction isRadianAroundZero(val) {\n  return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n}\n\nvar TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n/**\n * @param {string|Date|number} value These values can be accepted:\n *   + An instance of Date, represent a time in its own time zone.\n *   + Or string in a subset of ISO 8601, only including:\n *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n *     all of which will be treated as local time if time zone is not specified\n *     (see <https://momentjs.com/>).\n *   + Or other string format, including (all of which will be treated as loacal time):\n *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n *   + a timestamp, which represent a time in UTC.\n * @return {Date} date\n */\n\nfunction parseDate(value) {\n  if (value instanceof Date) {\n    return value;\n  } else if (typeof value === 'string') {\n    // Different browsers parse date in different way, so we parse it manually.\n    // Some other issues:\n    // new Date('1970-01-01') is UTC,\n    // new Date('1970/01/01') and new Date('1970-1-01') is local.\n    // See issue #3623\n    var match = TIME_REG.exec(value);\n\n    if (!match) {\n      // return Invalid Date.\n      return new Date(NaN);\n    } // Use local time when no timezone offset specifed.\n\n\n    if (!match[8]) {\n      // match[n] can only be string or undefined.\n      // But take care of '12' + 1 => '121'.\n      return new Date(+match[1], +(match[2] || 1) - 1, +match[3] || 1, +match[4] || 0, +(match[5] || 0), +match[6] || 0, +match[7] || 0);\n    } // Timezoneoffset of Javascript Date has considered DST (Daylight Saving Time,\n    // https://tc39.github.io/ecma262/#sec-daylight-saving-time-adjustment).\n    // For example, system timezone is set as \"Time Zone: America/Toronto\",\n    // then these code will get different result:\n    // `new Date(1478411999999).getTimezoneOffset();  // get 240`\n    // `new Date(1478412000000).getTimezoneOffset();  // get 300`\n    // So we should not use `new Date`, but use `Date.UTC`.\n    else {\n        var hour = +match[4] || 0;\n\n        if (match[8].toUpperCase() !== 'Z') {\n          hour -= match[8].slice(0, 3);\n        }\n\n        return new Date(Date.UTC(+match[1], +(match[2] || 1) - 1, +match[3] || 1, hour, +(match[5] || 0), +match[6] || 0, +match[7] || 0));\n      }\n  } else if (value == null) {\n    return new Date(NaN);\n  }\n\n  return new Date(Math.round(value));\n}\n/**\n * Quantity of a number. e.g. 0.1, 1, 10, 100\n *\n * @param  {number} val\n * @return {number}\n */\n\n\nfunction quantity(val) {\n  return Math.pow(10, quantityExponent(val));\n}\n\nfunction quantityExponent(val) {\n  return Math.floor(Math.log(val) / Math.LN10);\n}\n/**\n * find a “nice” number approximately equal to x. Round the number if round = true,\n * take ceiling if round = false. The primary observation is that the “nicest”\n * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n *\n * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n *\n * @param  {number} val Non-negative value.\n * @param  {boolean} round\n * @return {number}\n */\n\n\nfunction nice(val, round) {\n  var exponent = quantityExponent(val);\n  var exp10 = Math.pow(10, exponent);\n  var f = val / exp10; // 1 <= f < 10\n\n  var nf;\n\n  if (round) {\n    if (f < 1.5) {\n      nf = 1;\n    } else if (f < 2.5) {\n      nf = 2;\n    } else if (f < 4) {\n      nf = 3;\n    } else if (f < 7) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  } else {\n    if (f < 1) {\n      nf = 1;\n    } else if (f < 2) {\n      nf = 2;\n    } else if (f < 3) {\n      nf = 3;\n    } else if (f < 5) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  }\n\n  val = nf * exp10; // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n  // 20 is the uppper bound of toFixed.\n\n  return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n}\n/**\n * Order intervals asc, and split them when overlap.\n * expect(numberUtil.reformIntervals([\n *     {interval: [18, 62], close: [1, 1]},\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [1, 1]},\n *     {interval: [62, 150], close: [1, 1]},\n *     {interval: [106, 150], close: [1, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ])).toEqual([\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [0, 1]},\n *     {interval: [18, 62], close: [0, 1]},\n *     {interval: [62, 150], close: [0, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ]);\n * @param {Array.<Object>} list, where `close` mean open or close\n *        of the interval, and Infinity can be used.\n * @return {Array.<Object>} The origin list, which has been reformed.\n */\n\n\nfunction reformIntervals(list) {\n  list.sort(function (a, b) {\n    return littleThan(a, b, 0) ? -1 : 1;\n  });\n  var curr = -Infinity;\n  var currClose = 1;\n\n  for (var i = 0; i < list.length;) {\n    var interval = list[i].interval;\n    var close = list[i].close;\n\n    for (var lg = 0; lg < 2; lg++) {\n      if (interval[lg] <= curr) {\n        interval[lg] = curr;\n        close[lg] = !lg ? 1 - currClose : 1;\n      }\n\n      curr = interval[lg];\n      currClose = close[lg];\n    }\n\n    if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n      list.splice(i, 1);\n    } else {\n      i++;\n    }\n  }\n\n  return list;\n\n  function littleThan(a, b, lg) {\n    return a.interval[lg] < b.interval[lg] || a.interval[lg] === b.interval[lg] && (a.close[lg] - b.close[lg] === (!lg ? 1 : -1) || !lg && littleThan(a, b, 1));\n  }\n}\n/**\n * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n * subtraction forces infinities to NaN\n *\n * @param {*} v\n * @return {boolean}\n */\n\n\nfunction isNumeric(v) {\n  return v - parseFloat(v) >= 0;\n}\n\nexports.linearMap = linearMap;\nexports.parsePercent = parsePercent;\nexports.round = round;\nexports.asc = asc;\nexports.getPrecision = getPrecision;\nexports.getPrecisionSafe = getPrecisionSafe;\nexports.getPixelPrecision = getPixelPrecision;\nexports.getPercentWithPrecision = getPercentWithPrecision;\nexports.MAX_SAFE_INTEGER = MAX_SAFE_INTEGER;\nexports.remRadian = remRadian;\nexports.isRadianAroundZero = isRadianAroundZero;\nexports.parseDate = parseDate;\nexports.quantity = quantity;\nexports.nice = nice;\nexports.reformIntervals = reformIntervals;\nexports.isNumeric = isNumeric;\n\n/***/ }),\n\n/***/ 982:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar formatUtil = __webpack_require__(985);\n\nvar nubmerUtil = __webpack_require__(981);\n\nvar Model = __webpack_require__(989);\n\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\n/**\n * If value is not array, then translate it to array.\n * @param  {*} value\n * @return {Array} [value] or value\n */\n\nfunction normalizeToArray(value) {\n  return value instanceof Array ? value : value == null ? [] : [value];\n}\n/**\n * Sync default option between normal and emphasis like `position` and `show`\n * In case some one will write code like\n *     label: {\n *         normal: {\n *             show: false,\n *             position: 'outside',\n *             fontSize: 18\n *         },\n *         emphasis: {\n *             show: true\n *         }\n *     }\n * @param {Object} opt\n * @param {Array.<string>} subOpts\n */\n\n\nfunction defaultEmphasis(opt, subOpts) {\n  if (opt) {\n    var emphasisOpt = opt.emphasis = opt.emphasis || {};\n    var normalOpt = opt.normal = opt.normal || {}; // Default emphasis option from normal\n\n    for (var i = 0, len = subOpts.length; i < len; i++) {\n      var subOptName = subOpts[i];\n\n      if (!emphasisOpt.hasOwnProperty(subOptName) && normalOpt.hasOwnProperty(subOptName)) {\n        emphasisOpt[subOptName] = normalOpt[subOptName];\n      }\n    }\n  }\n}\n\nvar TEXT_STYLE_OPTIONS = ['fontStyle', 'fontWeight', 'fontSize', 'fontFamily', 'rich', 'tag', 'color', 'textBorderColor', 'textBorderWidth', 'width', 'height', 'lineHeight', 'align', 'verticalAlign', 'baseline', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY', 'textShadowColor', 'textShadowBlur', 'textShadowOffsetX', 'textShadowOffsetY', 'backgroundColor', 'borderColor', 'borderWidth', 'borderRadius', 'padding']; // modelUtil.LABEL_OPTIONS = modelUtil.TEXT_STYLE_OPTIONS.concat([\n//     'position', 'offset', 'rotate', 'origin', 'show', 'distance', 'formatter',\n//     'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\n//     // FIXME: deprecated, check and remove it.\n//     'textStyle'\n// ]);\n\n/**\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method retieves value from data.\n * @param {string|number|Date|Array|Object} dataItem\n * @return {number|string|Date|Array.<number|string|Date>}\n */\n\nfunction getDataItemValue(dataItem) {\n  // Performance sensitive.\n  return dataItem && (dataItem.value == null ? dataItem : dataItem.value);\n}\n/**\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method determine if dataItem has extra option besides value\n * @param {string|number|Date|Array|Object} dataItem\n */\n\n\nfunction isDataItemOption(dataItem) {\n  return isObject(dataItem) && !(dataItem instanceof Array); // // markLine data can be array\n  // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n}\n/**\n * This helper method convert value in data.\n * @param {string|number|Date} value\n * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n */\n\n\nfunction converDataValue(value, dimInfo) {\n  // Performance sensitive.\n  var dimType = dimInfo && dimInfo.type;\n\n  if (dimType === 'ordinal') {\n    return value;\n  }\n\n  if (dimType === 'time' // spead up when using timestamp\n  && typeof value !== 'number' && value != null && value !== '-') {\n    value = +nubmerUtil.parseDate(value);\n  } // dimType defaults 'number'.\n  // If dimType is not ordinal and value is null or undefined or NaN or '-',\n  // parse to NaN.\n\n\n  return value == null || value === '' ? NaN : +value; // If string (like '-'), using '+' parse to NaN\n}\n/**\n * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.\n * @param {module:echarts/data/List} data\n * @param {Object} opt\n * @param {string} [opt.seriesIndex]\n * @param {Object} [opt.name]\n * @param {Object} [opt.mainType]\n * @param {Object} [opt.subType]\n */\n\n\nfunction createDataFormatModel(data, opt) {\n  var model = new Model();\n  zrUtil.mixin(model, dataFormatMixin);\n  model.seriesIndex = opt.seriesIndex;\n  model.name = opt.name || '';\n  model.mainType = opt.mainType;\n  model.subType = opt.subType;\n\n  model.getData = function () {\n    return data;\n  };\n\n  return model;\n} // PENDING A little ugly\n\n\nvar dataFormatMixin = {\n  /**\n   * Get params for formatter\n   * @param {number} dataIndex\n   * @param {string} [dataType]\n   * @return {Object}\n   */\n  getDataParams: function (dataIndex, dataType) {\n    var data = this.getData(dataType);\n    var rawValue = this.getRawValue(dataIndex, dataType);\n    var rawDataIndex = data.getRawIndex(dataIndex);\n    var name = data.getName(dataIndex, true);\n    var itemOpt = data.getRawDataItem(dataIndex);\n    var color = data.getItemVisual(dataIndex, 'color');\n    return {\n      componentType: this.mainType,\n      componentSubType: this.subType,\n      seriesType: this.mainType === 'series' ? this.subType : null,\n      seriesIndex: this.seriesIndex,\n      seriesId: this.id,\n      seriesName: this.name,\n      name: name,\n      dataIndex: rawDataIndex,\n      data: itemOpt,\n      dataType: dataType,\n      value: rawValue,\n      color: color,\n      marker: formatUtil.getTooltipMarker(color),\n      // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n      $vars: ['seriesName', 'name', 'value']\n    };\n  },\n\n  /**\n   * Format label\n   * @param {number} dataIndex\n   * @param {string} [status='normal'] 'normal' or 'emphasis'\n   * @param {string} [dataType]\n   * @param {number} [dimIndex]\n   * @param {string} [labelProp='label']\n   * @return {string}\n   */\n  getFormattedLabel: function (dataIndex, status, dataType, dimIndex, labelProp) {\n    status = status || 'normal';\n    var data = this.getData(dataType);\n    var itemModel = data.getItemModel(dataIndex);\n    var params = this.getDataParams(dataIndex, dataType);\n\n    if (dimIndex != null && params.value instanceof Array) {\n      params.value = params.value[dimIndex];\n    }\n\n    var formatter = itemModel.get([labelProp || 'label', status, 'formatter']);\n\n    if (typeof formatter === 'function') {\n      params.status = status;\n      return formatter(params);\n    } else if (typeof formatter === 'string') {\n      return formatUtil.formatTpl(formatter, params);\n    }\n  },\n\n  /**\n   * Get raw value in option\n   * @param {number} idx\n   * @param {string} [dataType]\n   * @return {Object}\n   */\n  getRawValue: function (idx, dataType) {\n    var data = this.getData(dataType);\n    var dataItem = data.getRawDataItem(idx);\n\n    if (dataItem != null) {\n      return isObject(dataItem) && !(dataItem instanceof Array) ? dataItem.value : dataItem;\n    }\n  },\n\n  /**\n   * Should be implemented.\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   * @return {string} tooltip string\n   */\n  formatTooltip: zrUtil.noop\n};\n/**\n * Mapping to exists for merge.\n *\n * @public\n * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n * @param {Object|Array.<Object>} newCptOptions\n * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          index of which is the same as exists.\n */\n\nfunction mappingToExists(exists, newCptOptions) {\n  // Mapping by the order by original option (but not order of\n  // new option) in merge mode. Because we should ensure\n  // some specified index (like xAxisIndex) is consistent with\n  // original option, which is easy to understand, espatially in\n  // media query. And in most case, merge option is used to\n  // update partial option but not be expected to change order.\n  newCptOptions = (newCptOptions || []).slice();\n  var result = zrUtil.map(exists || [], function (obj, index) {\n    return {\n      exist: obj\n    };\n  }); // Mapping by id or name if specified.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    } // id has highest priority.\n\n\n    for (var i = 0; i < result.length; i++) {\n      if (!result[i].option // Consider name: two map to one.\n      && cptOption.id != null && result[i].exist.id === cptOption.id + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n\n    for (var i = 0; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Consider name: two map to one.\n      // Can not match when both ids exist but different.\n      && (exist.id == null || cptOption.id == null) && cptOption.name != null && !isIdInner(cptOption) && !isIdInner(exist) && exist.name === cptOption.name + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n  }); // Otherwise mapping by index.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    }\n\n    var i = 0;\n\n    for (; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Existing model that already has id should be able to\n      // mapped to (because after mapping performed model may\n      // be assigned with a id, whish should not affect next\n      // mapping), except those has inner id.\n      && !isIdInner(exist) // Caution:\n      // Do not overwrite id. But name can be overwritten,\n      // because axis use name as 'show label text'.\n      // 'exist' always has id and name and we dont\n      // need to check it.\n      && cptOption.id == null) {\n        result[i].option = cptOption;\n        break;\n      }\n    }\n\n    if (i >= result.length) {\n      result.push({\n        option: cptOption\n      });\n    }\n  });\n  return result;\n}\n/**\n * Make id and name for mapping result (result of mappingToExists)\n * into `keyInfo` field.\n *\n * @public\n * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          which order is the same as exists.\n * @return {Array.<Object>} The input.\n */\n\n\nfunction makeIdAndName(mapResult) {\n  // We use this id to hash component models and view instances\n  // in echarts. id can be specified by user, or auto generated.\n  // The id generation rule ensures new view instance are able\n  // to mapped to old instance when setOption are called in\n  // no-merge mode. So we generate model id by name and plus\n  // type in view id.\n  // name can be duplicated among components, which is convenient\n  // to specify multi components (like series) by one name.\n  // Ensure that each id is distinct.\n  var idMap = zrUtil.createHashMap();\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    existCpt && idMap.set(existCpt.id, item);\n  });\n  each(mapResult, function (item, index) {\n    var opt = item.option;\n    zrUtil.assert(!opt || opt.id == null || !idMap.get(opt.id) || idMap.get(opt.id) === item, 'id duplicates: ' + (opt && opt.id));\n    opt && opt.id != null && idMap.set(opt.id, item);\n    !item.keyInfo && (item.keyInfo = {});\n  }); // Make name and id.\n\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    var opt = item.option;\n    var keyInfo = item.keyInfo;\n\n    if (!isObject(opt)) {\n      return;\n    } // name can be overwitten. Consider case: axis.name = '20km'.\n    // But id generated by name will not be changed, which affect\n    // only in that case: setOption with 'not merge mode' and view\n    // instance will be recreated, which can be accepted.\n\n\n    keyInfo.name = opt.name != null ? opt.name + '' : existCpt ? existCpt.name : '\\0-'; // name may be displayed on screen, so use '-'.\n\n    if (existCpt) {\n      keyInfo.id = existCpt.id;\n    } else if (opt.id != null) {\n      keyInfo.id = opt.id + '';\n    } else {\n      // Consider this situatoin:\n      //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n      //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n      // Series with the same name between optionA and optionB\n      // should be mapped.\n      var idNum = 0;\n\n      do {\n        keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n      } while (idMap.get(keyInfo.id));\n    }\n\n    idMap.set(keyInfo.id, item);\n  });\n}\n/**\n * @public\n * @param {Object} cptOption\n * @return {boolean}\n */\n\n\nfunction isIdInner(cptOption) {\n  return isObject(cptOption) && cptOption.id && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n}\n/**\n * A helper for removing duplicate items between batchA and batchB,\n * and in themselves, and categorize by series.\n *\n * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n */\n\n\nfunction compressBatches(batchA, batchB) {\n  var mapA = {};\n  var mapB = {};\n  makeMap(batchA || [], mapA);\n  makeMap(batchB || [], mapB, mapA);\n  return [mapToArray(mapA), mapToArray(mapB)];\n\n  function makeMap(sourceBatch, map, otherMap) {\n    for (var i = 0, len = sourceBatch.length; i < len; i++) {\n      var seriesId = sourceBatch[i].seriesId;\n      var dataIndices = normalizeToArray(sourceBatch[i].dataIndex);\n      var otherDataIndices = otherMap && otherMap[seriesId];\n\n      for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n        var dataIndex = dataIndices[j];\n\n        if (otherDataIndices && otherDataIndices[dataIndex]) {\n          otherDataIndices[dataIndex] = null;\n        } else {\n          (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n        }\n      }\n    }\n  }\n\n  function mapToArray(map, isData) {\n    var result = [];\n\n    for (var i in map) {\n      if (map.hasOwnProperty(i) && map[i] != null) {\n        if (isData) {\n          result.push(+i);\n        } else {\n          var dataIndices = mapToArray(map[i], true);\n          dataIndices.length && result.push({\n            seriesId: i,\n            dataIndex: dataIndices\n          });\n        }\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n *                         each of which can be Array or primary type.\n * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n */\n\n\nfunction queryDataIndex(data, payload) {\n  if (payload.dataIndexInside != null) {\n    return payload.dataIndexInside;\n  } else if (payload.dataIndex != null) {\n    return zrUtil.isArray(payload.dataIndex) ? zrUtil.map(payload.dataIndex, function (value) {\n      return data.indexOfRawIndex(value);\n    }) : data.indexOfRawIndex(payload.dataIndex);\n  } else if (payload.name != null) {\n    return zrUtil.isArray(payload.name) ? zrUtil.map(payload.name, function (value) {\n      return data.indexOfName(value);\n    }) : data.indexOfName(payload.name);\n  }\n}\n/**\n * Enable property storage to any host object.\n * Notice: Serialization is not supported.\n *\n * For example:\n * var get = modelUitl.makeGetter();\n *\n * function some(hostObj) {\n *      get(hostObj)._someProperty = 1212;\n *      ...\n * }\n *\n * @return {Function}\n */\n\n\nvar makeGetter = function () {\n  var index = 0;\n  return function () {\n    var key = '\\0__ec_prop_getter_' + index++;\n    return function (hostObj) {\n      return hostObj[key] || (hostObj[key] = {});\n    };\n  };\n}();\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex, seriesId, seriesName,\n *            geoIndex, geoId, geoName,\n *            bmapIndex, bmapId, bmapName,\n *            xAxisIndex, xAxisId, xAxisName,\n *            yAxisIndex, yAxisId, yAxisName,\n *            gridIndex, gridId, gridName,\n *            ... (can be extended)\n *        }\n *        Each properties can be number|string|Array.<number>|Array.<string>\n *        For example, a finder could be\n *        {\n *            seriesIndex: 3,\n *            geoId: ['aa', 'cc'],\n *            gridName: ['xx', 'rr']\n *        }\n *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n *        If nothing or null/undefined specified, return nothing.\n * @param {Object} [opt]\n * @param {string} [opt.defaultMainType]\n * @param {Array.<string>} [opt.includeMainTypes]\n * @return {Object} result like:\n *        {\n *            seriesModels: [seriesModel1, seriesModel2],\n *            seriesModel: seriesModel1, // The first model\n *            geoModels: [geoModel1, geoModel2],\n *            geoModel: geoModel1, // The first model\n *            ...\n *        }\n */\n\n\nfunction parseFinder(ecModel, finder, opt) {\n  if (zrUtil.isString(finder)) {\n    var obj = {};\n    obj[finder + 'Index'] = 0;\n    finder = obj;\n  }\n\n  var defaultMainType = opt && opt.defaultMainType;\n\n  if (defaultMainType && !has(finder, defaultMainType + 'Index') && !has(finder, defaultMainType + 'Id') && !has(finder, defaultMainType + 'Name')) {\n    finder[defaultMainType + 'Index'] = 0;\n  }\n\n  var result = {};\n  each(finder, function (value, key) {\n    var value = finder[key]; // Exclude 'dataIndex' and other illgal keys.\n\n    if (key === 'dataIndex' || key === 'dataIndexInside') {\n      result[key] = value;\n      return;\n    }\n\n    var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n    var mainType = parsedKey[1];\n    var queryType = (parsedKey[2] || '').toLowerCase();\n\n    if (!mainType || !queryType || value == null || queryType === 'index' && value === 'none' || opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0) {\n      return;\n    }\n\n    var queryParam = {\n      mainType: mainType\n    };\n\n    if (queryType !== 'index' || value !== 'all') {\n      queryParam[queryType] = value;\n    }\n\n    var models = ecModel.queryComponents(queryParam);\n    result[mainType + 'Models'] = models;\n    result[mainType + 'Model'] = models[0];\n  });\n  return result;\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n * @param {module:echarts/data/List} data\n * @param {string|number} dataDim\n * @return {string}\n */\n\n\nfunction dataDimToCoordDim(data, dataDim) {\n  var dimensions = data.dimensions;\n  dataDim = data.getDimension(dataDim);\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimItem = data.getDimensionInfo(dimensions[i]);\n\n    if (dimItem.name === dataDim) {\n      return dimItem.coordDim;\n    }\n  }\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n * @param {module:echarts/data/List} data\n * @param {string} coordDim\n * @return {Array.<string>} data dimensions on the coordDim.\n */\n\n\nfunction coordDimToDataDim(data, coordDim) {\n  var dataDim = [];\n  each(data.dimensions, function (dimName) {\n    var dimItem = data.getDimensionInfo(dimName);\n\n    if (dimItem.coordDim === coordDim) {\n      dataDim[dimItem.coordDimIndex] = dimItem.name;\n    }\n  });\n  return dataDim;\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n * @param {module:echarts/data/List} data\n * @param {string} otherDim Can be `otherDims`\n *                        like 'label' or 'tooltip'.\n * @return {Array.<string>} data dimensions on the otherDim.\n */\n\n\nfunction otherDimToDataDim(data, otherDim) {\n  var dataDim = [];\n  each(data.dimensions, function (dimName) {\n    var dimItem = data.getDimensionInfo(dimName);\n    var otherDims = dimItem.otherDims;\n    var dimIndex = otherDims[otherDim];\n\n    if (dimIndex != null && dimIndex !== false) {\n      dataDim[dimIndex] = dimItem.name;\n    }\n  });\n  return dataDim;\n}\n\nfunction has(obj, prop) {\n  return obj && obj.hasOwnProperty(prop);\n}\n\nexports.normalizeToArray = normalizeToArray;\nexports.defaultEmphasis = defaultEmphasis;\nexports.TEXT_STYLE_OPTIONS = TEXT_STYLE_OPTIONS;\nexports.getDataItemValue = getDataItemValue;\nexports.isDataItemOption = isDataItemOption;\nexports.converDataValue = converDataValue;\nexports.createDataFormatModel = createDataFormatModel;\nexports.dataFormatMixin = dataFormatMixin;\nexports.mappingToExists = mappingToExists;\nexports.makeIdAndName = makeIdAndName;\nexports.isIdInner = isIdInner;\nexports.compressBatches = compressBatches;\nexports.queryDataIndex = queryDataIndex;\nexports.makeGetter = makeGetter;\nexports.parseFinder = parseFinder;\nexports.dataDimToCoordDim = dataDimToCoordDim;\nexports.coordDimToDataDim = coordDimToDataDim;\nexports.otherDimToDataDim = otherDimToDataDim;\n\n/***/ }),\n\n/***/ 983:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {// (1) The code `if (__DEV__) ...` can be removed by build tool.\n// (2) If intend to use `__DEV__`, this module should be imported. Use a global\n// variable `__DEV__` may cause that miss the declaration (see #6535), or the\n// declaration is behind of the using position (for example in `Model.extent`,\n// And tools like rollup can not analysis the dependency if not import).\nvar dev; // In browser\n\nif (typeof window !== 'undefined') {\n  dev = window.__DEV__;\n} // In node\nelse if (typeof global !== 'undefined') {\n    dev = global.__DEV__;\n  }\n\nif (typeof dev === 'undefined') {\n  dev = true;\n}\n\nvar __DEV__ = dev;\nexports.__DEV__ = __DEV__;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(23)))\n\n/***/ }),\n\n/***/ 984:\n/***/ (function(module, exports) {\n\nvar ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * 创建一个向量\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @return {Vector2}\n */\n\nfunction create(x, y) {\n  var out = new ArrayCtor(2);\n\n  if (x == null) {\n    x = 0;\n  }\n\n  if (y == null) {\n    y = 0;\n  }\n\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * 复制向量数据\n * @param {Vector2} out\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction copy(out, v) {\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 克隆一个向量\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction clone(v) {\n  var out = new ArrayCtor(2);\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 设置向量的两个项\n * @param {Vector2} out\n * @param {number} a\n * @param {number} b\n * @return {Vector2} 结果\n */\n\n\nfunction set(out, a, b) {\n  out[0] = a;\n  out[1] = b;\n  return out;\n}\n/**\n * 向量相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction add(out, v1, v2) {\n  out[0] = v1[0] + v2[0];\n  out[1] = v1[1] + v2[1];\n  return out;\n}\n/**\n * 向量缩放后相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} a\n */\n\n\nfunction scaleAndAdd(out, v1, v2, a) {\n  out[0] = v1[0] + v2[0] * a;\n  out[1] = v1[1] + v2[1] * a;\n  return out;\n}\n/**\n * 向量相减\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction sub(out, v1, v2) {\n  out[0] = v1[0] - v2[0];\n  out[1] = v1[1] - v2[1];\n  return out;\n}\n/**\n * 向量长度\n * @param {Vector2} v\n * @return {number}\n */\n\n\nfunction len(v) {\n  return Math.sqrt(lenSquare(v));\n}\n\nvar length = len; // jshint ignore:line\n\n/**\n * 向量长度平方\n * @param {Vector2} v\n * @return {number}\n */\n\nfunction lenSquare(v) {\n  return v[0] * v[0] + v[1] * v[1];\n}\n\nvar lengthSquare = lenSquare;\n/**\n * 向量乘法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\nfunction mul(out, v1, v2) {\n  out[0] = v1[0] * v2[0];\n  out[1] = v1[1] * v2[1];\n  return out;\n}\n/**\n * 向量除法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction div(out, v1, v2) {\n  out[0] = v1[0] / v2[0];\n  out[1] = v1[1] / v2[1];\n  return out;\n}\n/**\n * 向量点乘\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction dot(v1, v2) {\n  return v1[0] * v2[0] + v1[1] * v2[1];\n}\n/**\n * 向量缩放\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {number} s\n */\n\n\nfunction scale(out, v, s) {\n  out[0] = v[0] * s;\n  out[1] = v[1] * s;\n  return out;\n}\n/**\n * 向量归一化\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\n\nfunction normalize(out, v) {\n  var d = len(v);\n\n  if (d === 0) {\n    out[0] = 0;\n    out[1] = 0;\n  } else {\n    out[0] = v[0] / d;\n    out[1] = v[1] / d;\n  }\n\n  return out;\n}\n/**\n * 计算向量间距离\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction distance(v1, v2) {\n  return Math.sqrt((v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]));\n}\n\nvar dist = distance;\n/**\n * 向量距离平方\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\nfunction distanceSquare(v1, v2) {\n  return (v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n}\n\nvar distSquare = distanceSquare;\n/**\n * 求负向量\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\nfunction negate(out, v) {\n  out[0] = -v[0];\n  out[1] = -v[1];\n  return out;\n}\n/**\n * 插值两个点\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} t\n */\n\n\nfunction lerp(out, v1, v2, t) {\n  out[0] = v1[0] + t * (v2[0] - v1[0]);\n  out[1] = v1[1] + t * (v2[1] - v1[1]);\n  return out;\n}\n/**\n * 矩阵左乘向量\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {Vector2} m\n */\n\n\nfunction applyTransform(out, v, m) {\n  var x = v[0];\n  var y = v[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\n * 求两个向量最小值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction min(out, v1, v2) {\n  out[0] = Math.min(v1[0], v2[0]);\n  out[1] = Math.min(v1[1], v2[1]);\n  return out;\n}\n/**\n * 求两个向量最大值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction max(out, v1, v2) {\n  out[0] = Math.max(v1[0], v2[0]);\n  out[1] = Math.max(v1[1], v2[1]);\n  return out;\n}\n\nexports.create = create;\nexports.copy = copy;\nexports.clone = clone;\nexports.set = set;\nexports.add = add;\nexports.scaleAndAdd = scaleAndAdd;\nexports.sub = sub;\nexports.len = len;\nexports.length = length;\nexports.lenSquare = lenSquare;\nexports.lengthSquare = lengthSquare;\nexports.mul = mul;\nexports.div = div;\nexports.dot = dot;\nexports.scale = scale;\nexports.normalize = normalize;\nexports.distance = distance;\nexports.dist = dist;\nexports.distanceSquare = distanceSquare;\nexports.distSquare = distSquare;\nexports.negate = negate;\nexports.lerp = lerp;\nexports.applyTransform = applyTransform;\nexports.min = min;\nexports.max = max;\n\n/***/ }),\n\n/***/ 985:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar textContain = __webpack_require__(993);\n\nvar numberUtil = __webpack_require__(981);\n\n/**\n * 每三位默认加,格式化\n * @param {string|number} x\n * @return {string}\n */\nfunction addCommas(x) {\n  if (isNaN(x)) {\n    return '-';\n  }\n\n  x = (x + '').split('.');\n  return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g, '$1,') + (x.length > 1 ? '.' + x[1] : '');\n}\n/**\n * @param {string} str\n * @param {boolean} [upperCaseFirst=false]\n * @return {string} str\n */\n\n\nfunction toCamelCase(str, upperCaseFirst) {\n  str = (str || '').toLowerCase().replace(/-(.)/g, function (match, group1) {\n    return group1.toUpperCase();\n  });\n\n  if (upperCaseFirst && str) {\n    str = str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  return str;\n}\n\nvar normalizeCssArray = zrUtil.normalizeCssArray;\n\nfunction encodeHTML(source) {\n  return String(source).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/'/g, '&#39;');\n}\n\nvar TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\nvar wrapVar = function (varName, seriesIdx) {\n  return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n};\n/**\n * Template formatter\n * @param {string} tpl\n * @param {Array.<Object>|Object} paramsList\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTpl(tpl, paramsList, encode) {\n  if (!zrUtil.isArray(paramsList)) {\n    paramsList = [paramsList];\n  }\n\n  var seriesLen = paramsList.length;\n\n  if (!seriesLen) {\n    return '';\n  }\n\n  var $vars = paramsList[0].$vars || [];\n\n  for (var i = 0; i < $vars.length; i++) {\n    var alias = TPL_VAR_ALIAS[i];\n    var val = wrapVar(alias, 0);\n    tpl = tpl.replace(wrapVar(alias), encode ? encodeHTML(val) : val);\n  }\n\n  for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n    for (var k = 0; k < $vars.length; k++) {\n      var val = paramsList[seriesIdx][$vars[k]];\n      tpl = tpl.replace(wrapVar(TPL_VAR_ALIAS[k], seriesIdx), encode ? encodeHTML(val) : val);\n    }\n  }\n\n  return tpl;\n}\n/**\n * simple Template formatter\n *\n * @param {string} tpl\n * @param {Object} param\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTplSimple(tpl, param, encode) {\n  zrUtil.each(param, function (value, key) {\n    tpl = tpl.replace('{' + key + '}', encode ? encodeHTML(value) : value);\n  });\n  return tpl;\n}\n/**\n * @param {string} color\n * @param {string} [extraCssText]\n * @return {string}\n */\n\n\nfunction getTooltipMarker(color, extraCssText) {\n  return color ? '<span style=\"display:inline-block;margin-right:5px;' + 'border-radius:10px;width:9px;height:9px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>' : '';\n}\n/**\n * @param {string} str\n * @return {string}\n * @inner\n */\n\n\nvar s2d = function (str) {\n  return str < 10 ? '0' + str : str;\n};\n/**\n * ISO Date format\n * @param {string} tpl\n * @param {number} value\n * @param {boolean} [isUTC=false] Default in local time.\n *           see `module:echarts/scale/Time`\n *           and `module:echarts/util/number#parseDate`.\n * @inner\n */\n\n\nfunction formatTime(tpl, value, isUTC) {\n  if (tpl === 'week' || tpl === 'month' || tpl === 'quarter' || tpl === 'half-year' || tpl === 'year') {\n    tpl = 'MM-dd\\nyyyy';\n  }\n\n  var date = numberUtil.parseDate(value);\n  var utc = isUTC ? 'UTC' : '';\n  var y = date['get' + utc + 'FullYear']();\n  var M = date['get' + utc + 'Month']() + 1;\n  var d = date['get' + utc + 'Date']();\n  var h = date['get' + utc + 'Hours']();\n  var m = date['get' + utc + 'Minutes']();\n  var s = date['get' + utc + 'Seconds']();\n  tpl = tpl.replace('MM', s2d(M)).replace('M', M).replace('yyyy', y).replace('yy', y % 100).replace('dd', s2d(d)).replace('d', d).replace('hh', s2d(h)).replace('h', h).replace('mm', s2d(m)).replace('m', m).replace('ss', s2d(s)).replace('s', s);\n  return tpl;\n}\n/**\n * Capital first\n * @param {string} str\n * @return {string}\n */\n\n\nfunction capitalFirst(str) {\n  return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n}\n\nvar truncateText = textContain.truncateText;\nvar getTextRect = textContain.getBoundingRect;\nexports.addCommas = addCommas;\nexports.toCamelCase = toCamelCase;\nexports.normalizeCssArray = normalizeCssArray;\nexports.encodeHTML = encodeHTML;\nexports.formatTpl = formatTpl;\nexports.formatTplSimple = formatTplSimple;\nexports.getTooltipMarker = getTooltipMarker;\nexports.formatTime = formatTime;\nexports.capitalFirst = capitalFirst;\nexports.truncateText = truncateText;\nexports.getTextRect = getTextRect;\n\n/***/ }),\n\n/***/ 986:\n/***/ (function(module, exports) {\n\n/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\nvar env = {};\n\nif (typeof navigator === 'undefined') {\n  // In node\n  env = {\n    browser: {},\n    os: {},\n    node: true,\n    // Assume canvas is supported\n    canvasSupported: true,\n    svgSupported: true\n  };\n} else {\n  env = detect(navigator.userAgent);\n}\n\nvar _default = env; // Zepto.js\n// (c) 2010-2013 Thomas Fuchs\n// Zepto.js may be freely distributed under the MIT license.\n\nfunction detect(ua) {\n  var os = {};\n  var browser = {}; // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n  // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n  // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n  // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n  // var touchpad = webos && ua.match(/TouchPad/);\n  // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n  // var silk = ua.match(/Silk\\/([\\d._]+)/);\n  // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n  // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n  // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n  // var playbook = ua.match(/PlayBook/);\n  // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n\n  var firefox = ua.match(/Firefox\\/([\\d.]+)/); // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n  // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n\n  var ie = ua.match(/MSIE\\s([\\d.]+)/) // IE 11 Trident/7.0; rv:11.0\n  || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n  var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n  var weChat = /micromessenger/i.test(ua); // Todo: clean this up with a better OS/browser seperation:\n  // - discern (more) between multiple browsers on android\n  // - decide if kindle fire in silk mode is android or not\n  // - Firefox on Android doesn't specify the Android version\n  // - possibly devide in os, device and browser hashes\n  // if (browser.webkit = !!webkit) browser.version = webkit[1];\n  // if (android) os.android = true, os.version = android[2];\n  // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n  // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n  // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n  // if (webos) os.webos = true, os.version = webos[2];\n  // if (touchpad) os.touchpad = true;\n  // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n  // if (bb10) os.bb10 = true, os.version = bb10[2];\n  // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n  // if (playbook) browser.playbook = true;\n  // if (kindle) os.kindle = true, os.version = kindle[1];\n  // if (silk) browser.silk = true, browser.version = silk[1];\n  // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n  // if (chrome) browser.chrome = true, browser.version = chrome[1];\n\n  if (firefox) {\n    browser.firefox = true;\n    browser.version = firefox[1];\n  } // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n  // if (webview) browser.webview = true;\n\n\n  if (ie) {\n    browser.ie = true;\n    browser.version = ie[1];\n  }\n\n  if (edge) {\n    browser.edge = true;\n    browser.version = edge[1];\n  } // It is difficult to detect WeChat in Win Phone precisely, because ua can\n  // not be set on win phone. So we do not consider Win Phone.\n\n\n  if (weChat) {\n    browser.weChat = true;\n  } // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n  //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n  // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n  //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n  //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n\n  return {\n    browser: browser,\n    os: os,\n    node: false,\n    // 原生canvas支持，改极端点了\n    // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n    canvasSupported: !!document.createElement('canvas').getContext,\n    svgSupported: typeof SVGRect !== 'undefined',\n    // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\n    // works on most browsers\n    // IE10/11 does not support touch event, and MS Edge supports them but not by\n    // default, so we dont check navigator.maxTouchPoints for them here.\n    touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n    // <http://caniuse.com/#search=pointer%20event>.\n    pointerEventsSupported: 'onpointerdown' in window // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n    // events currently. So we dont use that on other browsers unless tested sufficiently.\n    // Although IE 10 supports pointer event, it use old style and is different from the\n    // standard. So we exclude that. (IE 10 is hardly used on touch device)\n    && (browser.edge || browser.ie && browser.version >= 11)\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 987:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar vec2 = __webpack_require__(984);\n\nvar matrix = __webpack_require__(994);\n\n/**\n * @module echarts/core/BoundingRect\n */\nvar v2ApplyTransform = vec2.applyTransform;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\n/**\n * @alias module:echarts/core/BoundingRect\n */\n\nfunction BoundingRect(x, y, width, height) {\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n  /**\n   * @type {number}\n   */\n\n\n  this.x = x;\n  /**\n   * @type {number}\n   */\n\n  this.y = y;\n  /**\n   * @type {number}\n   */\n\n  this.width = width;\n  /**\n   * @type {number}\n   */\n\n  this.height = height;\n}\n\nBoundingRect.prototype = {\n  constructor: BoundingRect,\n\n  /**\n   * @param {module:echarts/core/BoundingRect} other\n   */\n  union: function (other) {\n    var x = mathMin(other.x, this.x);\n    var y = mathMin(other.y, this.y);\n    this.width = mathMax(other.x + other.width, this.x + this.width) - x;\n    this.height = mathMax(other.y + other.height, this.y + this.height) - y;\n    this.x = x;\n    this.y = y;\n  },\n\n  /**\n   * @param {Array.<number>} m\n   * @methods\n   */\n  applyTransform: function () {\n    var lt = [];\n    var rb = [];\n    var lb = [];\n    var rt = [];\n    return function (m) {\n      // In case usage like this\n      // el.getBoundingRect().applyTransform(el.transform)\n      // And element has no transform\n      if (!m) {\n        return;\n      }\n\n      lt[0] = lb[0] = this.x;\n      lt[1] = rt[1] = this.y;\n      rb[0] = rt[0] = this.x + this.width;\n      rb[1] = lb[1] = this.y + this.height;\n      v2ApplyTransform(lt, lt, m);\n      v2ApplyTransform(rb, rb, m);\n      v2ApplyTransform(lb, lb, m);\n      v2ApplyTransform(rt, rt, m);\n      this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n      this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n      var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n      var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n      this.width = maxX - this.x;\n      this.height = maxY - this.y;\n    };\n  }(),\n\n  /**\n   * Calculate matrix of transforming from self to target rect\n   * @param  {module:zrender/core/BoundingRect} b\n   * @return {Array.<number>}\n   */\n  calculateTransform: function (b) {\n    var a = this;\n    var sx = b.width / a.width;\n    var sy = b.height / a.height;\n    var m = matrix.create(); // 矩阵右乘\n\n    matrix.translate(m, m, [-a.x, -a.y]);\n    matrix.scale(m, m, [sx, sy]);\n    matrix.translate(m, m, [b.x, b.y]);\n    return m;\n  },\n\n  /**\n   * @param {(module:echarts/core/BoundingRect|Object)} b\n   * @return {boolean}\n   */\n  intersect: function (b) {\n    if (!b) {\n      return false;\n    }\n\n    if (!(b instanceof BoundingRect)) {\n      // Normalize negative width/height.\n      b = BoundingRect.create(b);\n    }\n\n    var a = this;\n    var ax0 = a.x;\n    var ax1 = a.x + a.width;\n    var ay0 = a.y;\n    var ay1 = a.y + a.height;\n    var bx0 = b.x;\n    var bx1 = b.x + b.width;\n    var by0 = b.y;\n    var by1 = b.y + b.height;\n    return !(ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n  },\n  contain: function (x, y) {\n    var rect = this;\n    return x >= rect.x && x <= rect.x + rect.width && y >= rect.y && y <= rect.y + rect.height;\n  },\n\n  /**\n   * @return {module:echarts/core/BoundingRect}\n   */\n  clone: function () {\n    return new BoundingRect(this.x, this.y, this.width, this.height);\n  },\n\n  /**\n   * Copy from another rect\n   */\n  copy: function (other) {\n    this.x = other.x;\n    this.y = other.y;\n    this.width = other.width;\n    this.height = other.height;\n  },\n  plain: function () {\n    return {\n      x: this.x,\n      y: this.y,\n      width: this.width,\n      height: this.height\n    };\n  }\n};\n/**\n * @param {Object|module:zrender/core/BoundingRect} rect\n * @param {number} rect.x\n * @param {number} rect.y\n * @param {number} rect.width\n * @param {number} rect.height\n * @return {module:zrender/core/BoundingRect}\n */\n\nBoundingRect.create = function (rect) {\n  return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n};\n\nvar _default = BoundingRect;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 988:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Displayable = __webpack_require__(1018);\n\nvar zrUtil = __webpack_require__(978);\n\nvar PathProxy = __webpack_require__(1007);\n\nvar pathContain = __webpack_require__(1106);\n\nvar Pattern = __webpack_require__(1047);\n\nvar getCanvasPattern = Pattern.prototype.getCanvasPattern;\nvar abs = Math.abs;\nvar pathProxyForDraw = new PathProxy(true);\n/**\n * @alias module:zrender/graphic/Path\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\n\nfunction Path(opts) {\n  Displayable.call(this, opts);\n  /**\n   * @type {module:zrender/core/PathProxy}\n   * @readOnly\n   */\n\n  this.path = null;\n}\n\nPath.prototype = {\n  constructor: Path,\n  type: 'path',\n  __dirtyPath: true,\n  strokeContainThreshold: 5,\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var path = this.path || pathProxyForDraw;\n    var hasStroke = style.hasStroke();\n    var hasFill = style.hasFill();\n    var fill = style.fill;\n    var stroke = style.stroke;\n    var hasFillGradient = hasFill && !!fill.colorStops;\n    var hasStrokeGradient = hasStroke && !!stroke.colorStops;\n    var hasFillPattern = hasFill && !!fill.image;\n    var hasStrokePattern = hasStroke && !!stroke.image;\n    style.bind(ctx, this, prevEl);\n    this.setTransform(ctx);\n\n    if (this.__dirty) {\n      var rect; // Update gradient because bounding rect may changed\n\n      if (hasFillGradient) {\n        rect = rect || this.getBoundingRect();\n        this._fillGradient = style.getGradient(ctx, fill, rect);\n      }\n\n      if (hasStrokeGradient) {\n        rect = rect || this.getBoundingRect();\n        this._strokeGradient = style.getGradient(ctx, stroke, rect);\n      }\n    } // Use the gradient or pattern\n\n\n    if (hasFillGradient) {\n      // PENDING If may have affect the state\n      ctx.fillStyle = this._fillGradient;\n    } else if (hasFillPattern) {\n      ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n    }\n\n    if (hasStrokeGradient) {\n      ctx.strokeStyle = this._strokeGradient;\n    } else if (hasStrokePattern) {\n      ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n    }\n\n    var lineDash = style.lineDash;\n    var lineDashOffset = style.lineDashOffset;\n    var ctxLineDash = !!ctx.setLineDash; // Update path sx, sy\n\n    var scale = this.getGlobalScale();\n    path.setScale(scale[0], scale[1]); // Proxy context\n    // Rebuild path in following 2 cases\n    // 1. Path is dirty\n    // 2. Path needs javascript implemented lineDash stroking.\n    //    In this case, lineDash information will not be saved in PathProxy\n\n    if (this.__dirtyPath || lineDash && !ctxLineDash && hasStroke) {\n      path.beginPath(ctx); // Setting line dash before build path\n\n      if (lineDash && !ctxLineDash) {\n        path.setLineDash(lineDash);\n        path.setLineDashOffset(lineDashOffset);\n      }\n\n      this.buildPath(path, this.shape, false); // Clear path dirty flag\n\n      if (this.path) {\n        this.__dirtyPath = false;\n      }\n    } else {\n      // Replay path building\n      ctx.beginPath();\n      this.path.rebuildPath(ctx);\n    }\n\n    hasFill && path.fill(ctx);\n\n    if (lineDash && ctxLineDash) {\n      ctx.setLineDash(lineDash);\n      ctx.lineDashOffset = lineDashOffset;\n    }\n\n    hasStroke && path.stroke(ctx);\n\n    if (lineDash && ctxLineDash) {\n      // PENDING\n      // Remove lineDash\n      ctx.setLineDash([]);\n    }\n\n    this.restoreTransform(ctx); // Draw rect text\n\n    if (style.text != null) {\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n  // Like in circle\n  buildPath: function (ctx, shapeCfg, inBundle) {},\n  createPathProxy: function () {\n    this.path = new PathProxy();\n  },\n  getBoundingRect: function () {\n    var rect = this._rect;\n    var style = this.style;\n    var needsUpdateRect = !rect;\n\n    if (needsUpdateRect) {\n      var path = this.path;\n\n      if (!path) {\n        // Create path on demand.\n        path = this.path = new PathProxy();\n      }\n\n      if (this.__dirtyPath) {\n        path.beginPath();\n        this.buildPath(path, this.shape, false);\n      }\n\n      rect = path.getBoundingRect();\n    }\n\n    this._rect = rect;\n\n    if (style.hasStroke()) {\n      // Needs update rect with stroke lineWidth when\n      // 1. Element changes scale or lineWidth\n      // 2. Shape is changed\n      var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n\n      if (this.__dirty || needsUpdateRect) {\n        rectWithStroke.copy(rect); // FIXME Must after updateTransform\n\n        var w = style.lineWidth; // PENDING, Min line width is needed when line is horizontal or vertical\n\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Only add extra hover lineWidth when there are no fill\n\n        if (!style.hasFill()) {\n          w = Math.max(w, this.strokeContainThreshold || 4);\n        } // Consider line width\n        // Line scale can't be 0;\n\n\n        if (lineScale > 1e-10) {\n          rectWithStroke.width += w / lineScale;\n          rectWithStroke.height += w / lineScale;\n          rectWithStroke.x -= w / lineScale / 2;\n          rectWithStroke.y -= w / lineScale / 2;\n        }\n      } // Return rect with stroke\n\n\n      return rectWithStroke;\n    }\n\n    return rect;\n  },\n  contain: function (x, y) {\n    var localPos = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    var style = this.style;\n    x = localPos[0];\n    y = localPos[1];\n\n    if (rect.contain(x, y)) {\n      var pathData = this.path.data;\n\n      if (style.hasStroke()) {\n        var lineWidth = style.lineWidth;\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Line scale can't be 0;\n\n        if (lineScale > 1e-10) {\n          // Only add extra hover lineWidth when there are no fill\n          if (!style.hasFill()) {\n            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n          }\n\n          if (pathContain.containStroke(pathData, lineWidth / lineScale, x, y)) {\n            return true;\n          }\n        }\n      }\n\n      if (style.hasFill()) {\n        return pathContain.contain(pathData, x, y);\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * @param  {boolean} dirtyPath\n   */\n  dirty: function (dirtyPath) {\n    if (dirtyPath == null) {\n      dirtyPath = true;\n    } // Only mark dirty, not mark clean\n\n\n    if (dirtyPath) {\n      this.__dirtyPath = dirtyPath;\n      this._rect = null;\n    }\n\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh(); // Used as a clipping path\n\n    if (this.__clipTarget) {\n      this.__clipTarget.dirty();\n    }\n  },\n\n  /**\n   * Alias for animate('shape')\n   * @param {boolean} loop\n   */\n  animateShape: function (loop) {\n    return this.animate('shape', loop);\n  },\n  // Overwrite attrKV\n  attrKV: function (key, value) {\n    // FIXME\n    if (key === 'shape') {\n      this.setShape(value);\n      this.__dirtyPath = true;\n      this._rect = null;\n    } else {\n      Displayable.prototype.attrKV.call(this, key, value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setShape: function (key, value) {\n    var shape = this.shape; // Path from string may not have shape\n\n    if (shape) {\n      if (zrUtil.isObject(key)) {\n        for (var name in key) {\n          if (key.hasOwnProperty(name)) {\n            shape[name] = key[name];\n          }\n        }\n      } else {\n        shape[key] = value;\n      }\n\n      this.dirty(true);\n    }\n\n    return this;\n  },\n  getLineScale: function () {\n    var m = this.transform; // Get the line scale.\n    // Determinant of `m` means how much the area is enlarged by the\n    // transformation. So its square root can be used as a scale factor\n    // for width.\n\n    return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10 ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1])) : 1;\n  }\n};\n/**\n * 扩展一个 Path element, 比如星形，圆等。\n * Extend a path element\n * @param {Object} props\n * @param {string} props.type Path type\n * @param {Function} props.init Initialize\n * @param {Function} props.buildPath Overwrite buildPath method\n * @param {Object} [props.style] Extended default style config\n * @param {Object} [props.shape] Extended default shape config\n */\n\nPath.extend = function (defaults) {\n  var Sub = function (opts) {\n    Path.call(this, opts);\n\n    if (defaults.style) {\n      // Extend default style\n      this.style.extendFrom(defaults.style, false);\n    } // Extend default shape\n\n\n    var defaultShape = defaults.shape;\n\n    if (defaultShape) {\n      this.shape = this.shape || {};\n      var thisShape = this.shape;\n\n      for (var name in defaultShape) {\n        if (!thisShape.hasOwnProperty(name) && defaultShape.hasOwnProperty(name)) {\n          thisShape[name] = defaultShape[name];\n        }\n      }\n    }\n\n    defaults.init && defaults.init.call(this, opts);\n  };\n\n  zrUtil.inherits(Sub, Path); // FIXME 不能 extend position, rotation 等引用对象\n\n  for (var name in defaults) {\n    // Extending prototype values and methods\n    if (name !== 'style' && name !== 'shape') {\n      Sub.prototype[name] = defaults[name];\n    }\n  }\n\n  return Sub;\n};\n\nzrUtil.inherits(Path, Displayable);\nvar _default = Path;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 989:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar env = __webpack_require__(986);\n\nvar clazzUtil = __webpack_require__(992);\n\nvar lineStyleMixin = __webpack_require__(1102);\n\nvar areaStyleMixin = __webpack_require__(1103);\n\nvar textStyleMixin = __webpack_require__(1104);\n\nvar itemStyleMixin = __webpack_require__(1123);\n\n/**\n * @module echarts/model/Model\n */\nvar mixin = zrUtil.mixin;\n/**\n * @alias module:echarts/model/Model\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} [parentModel]\n * @param {module:echarts/model/Global} [ecModel]\n */\n\nfunction Model(option, parentModel, ecModel) {\n  /**\n   * @type {module:echarts/model/Model}\n   * @readOnly\n   */\n  this.parentModel = parentModel;\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n\n  this.ecModel = ecModel;\n  /**\n   * @type {Object}\n   * @protected\n   */\n\n  this.option = option; // Simple optimization\n  // if (this.init) {\n  //     if (arguments.length <= 4) {\n  //         this.init(option, parentModel, ecModel, extraOpt);\n  //     }\n  //     else {\n  //         this.init.apply(this, arguments);\n  //     }\n  // }\n}\n\nModel.prototype = {\n  constructor: Model,\n\n  /**\n   * Model 的初始化函数\n   * @param {Object} option\n   */\n  init: null,\n\n  /**\n   * 从新的 Option merge\n   */\n  mergeOption: function (option) {\n    zrUtil.merge(this.option, option, true);\n  },\n\n  /**\n   * @param {string|Array.<string>} path\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  get: function (path, ignoreParent) {\n    if (path == null) {\n      return this.option;\n    }\n\n    return doGet(this.option, this.parsePath(path), !ignoreParent && getParent(this, path));\n  },\n\n  /**\n   * @param {string} key\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  getShallow: function (key, ignoreParent) {\n    var option = this.option;\n    var val = option == null ? option : option[key];\n    var parentModel = !ignoreParent && getParent(this, key);\n\n    if (val == null && parentModel) {\n      val = parentModel.getShallow(key);\n    }\n\n    return val;\n  },\n\n  /**\n   * @param {string|Array.<string>} [path]\n   * @param {module:echarts/model/Model} [parentModel]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path, parentModel) {\n    var obj = path == null ? this.option : doGet(this.option, path = this.parsePath(path));\n    var thisParentModel;\n    parentModel = parentModel || (thisParentModel = getParent(this, path)) && thisParentModel.getModel(path);\n    return new Model(obj, parentModel, this.ecModel);\n  },\n\n  /**\n   * If model has option\n   */\n  isEmpty: function () {\n    return this.option == null;\n  },\n  restoreData: function () {},\n  // Pending\n  clone: function () {\n    var Ctor = this.constructor;\n    return new Ctor(zrUtil.clone(this.option));\n  },\n  setReadOnly: function (properties) {\n    clazzUtil.setReadOnly(this, properties);\n  },\n  // If path is null/undefined, return null/undefined.\n  parsePath: function (path) {\n    if (typeof path === 'string') {\n      path = path.split('.');\n    }\n\n    return path;\n  },\n\n  /**\n   * @param {Function} getParentMethod\n   *        param {Array.<string>|string} path\n   *        return {module:echarts/model/Model}\n   */\n  customizeGetParent: function (getParentMethod) {\n    clazzUtil.set(this, 'getParent', getParentMethod);\n  },\n  isAnimationEnabled: function () {\n    if (!env.node) {\n      if (this.option.animation != null) {\n        return !!this.option.animation;\n      } else if (this.parentModel) {\n        return this.parentModel.isAnimationEnabled();\n      }\n    }\n  }\n};\n\nfunction doGet(obj, pathArr, parentModel) {\n  for (var i = 0; i < pathArr.length; i++) {\n    // Ignore empty\n    if (!pathArr[i]) {\n      continue;\n    } // obj could be number/string/... (like 0)\n\n\n    obj = obj && typeof obj === 'object' ? obj[pathArr[i]] : null;\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  if (obj == null && parentModel) {\n    obj = parentModel.get(pathArr);\n  }\n\n  return obj;\n} // `path` can be null/undefined\n\n\nfunction getParent(model, path) {\n  var getParentMethod = clazzUtil.get(model, 'getParent');\n  return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n} // Enable Model.extend.\n\n\nclazzUtil.enableClassExtend(Model);\nmixin(Model, lineStyleMixin);\nmixin(Model, areaStyleMixin);\nmixin(Model, textStyleMixin);\nmixin(Model, itemStyleMixin);\nvar _default = Model;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 990:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar BoundingRect = __webpack_require__(987);\n\nvar _number = __webpack_require__(981);\n\nvar parsePercent = _number.parsePercent;\n\nvar formatUtil = __webpack_require__(985);\n\n// Layout helpers for each component positioning\nvar each = zrUtil.each;\n/**\n * @public\n */\n\nvar LOCATION_PARAMS = ['left', 'right', 'top', 'bottom', 'width', 'height'];\n/**\n * @public\n */\n\nvar HV_NAMES = [['width', 'left', 'right'], ['height', 'top', 'bottom']];\n\nfunction boxLayout(orient, group, gap, maxWidth, maxHeight) {\n  var x = 0;\n  var y = 0;\n\n  if (maxWidth == null) {\n    maxWidth = Infinity;\n  }\n\n  if (maxHeight == null) {\n    maxHeight = Infinity;\n  }\n\n  var currentLineMaxSize = 0;\n  group.eachChild(function (child, idx) {\n    var position = child.position;\n    var rect = child.getBoundingRect();\n    var nextChild = group.childAt(idx + 1);\n    var nextChildRect = nextChild && nextChild.getBoundingRect();\n    var nextX;\n    var nextY;\n\n    if (orient === 'horizontal') {\n      var moveX = rect.width + (nextChildRect ? -nextChildRect.x + rect.x : 0);\n      nextX = x + moveX; // Wrap when width exceeds maxWidth or meet a `newline` group\n      // FIXME compare before adding gap?\n\n      if (nextX > maxWidth || child.newline) {\n        x = 0;\n        nextX = moveX;\n        y += currentLineMaxSize + gap;\n        currentLineMaxSize = rect.height;\n      } else {\n        // FIXME: consider rect.y is not `0`?\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n      }\n    } else {\n      var moveY = rect.height + (nextChildRect ? -nextChildRect.y + rect.y : 0);\n      nextY = y + moveY; // Wrap when width exceeds maxHeight or meet a `newline` group\n\n      if (nextY > maxHeight || child.newline) {\n        x += currentLineMaxSize + gap;\n        y = 0;\n        nextY = moveY;\n        currentLineMaxSize = rect.width;\n      } else {\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n      }\n    }\n\n    if (child.newline) {\n      return;\n    }\n\n    position[0] = x;\n    position[1] = y;\n    orient === 'horizontal' ? x = nextX + gap : y = nextY + gap;\n  });\n}\n/**\n * VBox or HBox layouting\n * @param {string} orient\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\n\nvar box = boxLayout;\n/**\n * VBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar vbox = zrUtil.curry(boxLayout, 'vertical');\n/**\n * HBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar hbox = zrUtil.curry(boxLayout, 'horizontal');\n/**\n * If x or x2 is not specified or 'center' 'left' 'right',\n * the width would be as long as possible.\n * If y or y2 is not specified or 'middle' 'top' 'bottom',\n * the height would be as long as possible.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.x]\n * @param {number|string} [positionInfo.y]\n * @param {number|string} [positionInfo.x2]\n * @param {number|string} [positionInfo.y2]\n * @param {Object} containerRect {width, height}\n * @param {string|number} margin\n * @return {Object} {width, height}\n */\n\nfunction getAvailableSize(positionInfo, containerRect, margin) {\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var x = parsePercent(positionInfo.x, containerWidth);\n  var y = parsePercent(positionInfo.y, containerHeight);\n  var x2 = parsePercent(positionInfo.x2, containerWidth);\n  var y2 = parsePercent(positionInfo.y2, containerHeight);\n  (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n  (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n  (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n  (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  return {\n    width: Math.max(x2 - x - margin[1] - margin[3], 0),\n    height: Math.max(y2 - y - margin[0] - margin[2], 0)\n  };\n}\n/**\n * Parse position info.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width]\n * @param {number|string} [positionInfo.height]\n * @param {number|string} [positionInfo.aspect] Aspect is width / height\n * @param {Object} containerRect\n * @param {string|number} [margin]\n *\n * @return {module:zrender/core/BoundingRect}\n */\n\n\nfunction getLayoutRect(positionInfo, containerRect, margin) {\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var left = parsePercent(positionInfo.left, containerWidth);\n  var top = parsePercent(positionInfo.top, containerHeight);\n  var right = parsePercent(positionInfo.right, containerWidth);\n  var bottom = parsePercent(positionInfo.bottom, containerHeight);\n  var width = parsePercent(positionInfo.width, containerWidth);\n  var height = parsePercent(positionInfo.height, containerHeight);\n  var verticalMargin = margin[2] + margin[0];\n  var horizontalMargin = margin[1] + margin[3];\n  var aspect = positionInfo.aspect; // If width is not specified, calculate width from left and right\n\n  if (isNaN(width)) {\n    width = containerWidth - right - horizontalMargin - left;\n  }\n\n  if (isNaN(height)) {\n    height = containerHeight - bottom - verticalMargin - top;\n  }\n\n  if (aspect != null) {\n    // If width and height are not given\n    // 1. Graph should not exceeds the container\n    // 2. Aspect must be keeped\n    // 3. Graph should take the space as more as possible\n    // FIXME\n    // Margin is not considered, because there is no case that both\n    // using margin and aspect so far.\n    if (isNaN(width) && isNaN(height)) {\n      if (aspect > containerWidth / containerHeight) {\n        width = containerWidth * 0.8;\n      } else {\n        height = containerHeight * 0.8;\n      }\n    } // Calculate width or height with given aspect\n\n\n    if (isNaN(width)) {\n      width = aspect * height;\n    }\n\n    if (isNaN(height)) {\n      height = width / aspect;\n    }\n  } // If left is not specified, calculate left from right and width\n\n\n  if (isNaN(left)) {\n    left = containerWidth - right - width - horizontalMargin;\n  }\n\n  if (isNaN(top)) {\n    top = containerHeight - bottom - height - verticalMargin;\n  } // Align left and top\n\n\n  switch (positionInfo.left || positionInfo.right) {\n    case 'center':\n      left = containerWidth / 2 - width / 2 - margin[3];\n      break;\n\n    case 'right':\n      left = containerWidth - width - horizontalMargin;\n      break;\n  }\n\n  switch (positionInfo.top || positionInfo.bottom) {\n    case 'middle':\n    case 'center':\n      top = containerHeight / 2 - height / 2 - margin[0];\n      break;\n\n    case 'bottom':\n      top = containerHeight - height - verticalMargin;\n      break;\n  } // If something is wrong and left, top, width, height are calculated as NaN\n\n\n  left = left || 0;\n  top = top || 0;\n\n  if (isNaN(width)) {\n    // Width may be NaN if only one value is given except width\n    width = containerWidth - horizontalMargin - left - (right || 0);\n  }\n\n  if (isNaN(height)) {\n    // Height may be NaN if only one value is given except height\n    height = containerHeight - verticalMargin - top - (bottom || 0);\n  }\n\n  var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n  rect.margin = margin;\n  return rect;\n}\n/**\n * Position a zr element in viewport\n *  Group position is specified by either\n *  {left, top}, {right, bottom}\n *  If all properties exists, right and bottom will be igonred.\n *\n * Logic:\n *     1. Scale (against origin point in parent coord)\n *     2. Rotate (against origin point in parent coord)\n *     3. Traslate (with el.position by this method)\n * So this method only fixes the last step 'Traslate', which does not affect\n * scaling and rotating.\n *\n * If be called repeatly with the same input el, the same result will be gotten.\n *\n * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width] Only for opt.boundingModel: 'raw'\n * @param {number|string} [positionInfo.height] Only for opt.boundingModel: 'raw'\n * @param {Object} containerRect\n * @param {string|number} margin\n * @param {Object} [opt]\n * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n * @param {Array.<number>} [opt.boundingMode='all']\n *        Specify how to calculate boundingRect when locating.\n *        'all': Position the boundingRect that is transformed and uioned\n *               both itself and its descendants.\n *               This mode simplies confine the elements in the bounding\n *               of their container (e.g., using 'right: 0').\n *        'raw': Position the boundingRect that is not transformed and only itself.\n *               This mode is useful when you want a element can overflow its\n *               container. (Consider a rotated circle needs to be located in a corner.)\n *               In this mode positionInfo.width/height can only be number.\n */\n\n\nfunction positionElement(el, positionInfo, containerRect, margin, opt) {\n  var h = !opt || !opt.hv || opt.hv[0];\n  var v = !opt || !opt.hv || opt.hv[1];\n  var boundingMode = opt && opt.boundingMode || 'all';\n\n  if (!h && !v) {\n    return;\n  }\n\n  var rect;\n\n  if (boundingMode === 'raw') {\n    rect = el.type === 'group' ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0) : el.getBoundingRect();\n  } else {\n    rect = el.getBoundingRect();\n\n    if (el.needLocalTransform()) {\n      var transform = el.getLocalTransform(); // Notice: raw rect may be inner object of el,\n      // which should not be modified.\n\n      rect = rect.clone();\n      rect.applyTransform(transform);\n    }\n  } // The real width and height can not be specified but calculated by the given el.\n\n\n  positionInfo = getLayoutRect(zrUtil.defaults({\n    width: rect.width,\n    height: rect.height\n  }, positionInfo), containerRect, margin); // Because 'tranlate' is the last step in transform\n  // (see zrender/core/Transformable#getLocalTransfrom),\n  // we can just only modify el.position to get final result.\n\n  var elPos = el.position;\n  var dx = h ? positionInfo.x - rect.x : 0;\n  var dy = v ? positionInfo.y - rect.y : 0;\n  el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n}\n/**\n * @param {Object} option Contains some of the properties in HV_NAMES.\n * @param {number} hvIdx 0: horizontal; 1: vertical.\n */\n\n\nfunction sizeCalculable(option, hvIdx) {\n  return option[HV_NAMES[hvIdx][0]] != null || option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null;\n}\n/**\n * Consider Case:\n * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n * through setOption or media query, using normal zrUtil.merge will cause\n * {right: 0} does not take effect.\n *\n * @example\n * ComponentModel.extend({\n *     init: function () {\n *         ...\n *         var inputPositionParams = layout.getLayoutParams(option);\n *         this.mergeOption(inputPositionParams);\n *     },\n *     mergeOption: function (newOption) {\n *         newOption && zrUtil.merge(thisOption, newOption, true);\n *         layout.mergeLayoutParam(thisOption, newOption);\n *     }\n * });\n *\n * @param {Object} targetOption\n * @param {Object} newOption\n * @param {Object|string} [opt]\n * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Used for the components\n *  that width (or height) should not be calculated by left and right (or top and bottom).\n */\n\n\nfunction mergeLayoutParam(targetOption, newOption, opt) {\n  !zrUtil.isObject(opt) && (opt = {});\n  var ignoreSize = opt.ignoreSize;\n  !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n  var hResult = merge(HV_NAMES[0], 0);\n  var vResult = merge(HV_NAMES[1], 1);\n  copy(HV_NAMES[0], targetOption, hResult);\n  copy(HV_NAMES[1], targetOption, vResult);\n\n  function merge(names, hvIdx) {\n    var newParams = {};\n    var newValueCount = 0;\n    var merged = {};\n    var mergedValueCount = 0;\n    var enoughParamNumber = 2;\n    each(names, function (name) {\n      merged[name] = targetOption[name];\n    });\n    each(names, function (name) {\n      // Consider case: newOption.width is null, which is\n      // set by user for removing width setting.\n      hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n      hasValue(newParams, name) && newValueCount++;\n      hasValue(merged, name) && mergedValueCount++;\n    });\n\n    if (ignoreSize[hvIdx]) {\n      // Only one of left/right is premitted to exist.\n      if (hasValue(newOption, names[1])) {\n        merged[names[2]] = null;\n      } else if (hasValue(newOption, names[2])) {\n        merged[names[1]] = null;\n      }\n\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // or targetOption: {right: ...} and newOption: {width: ...},\n    // There is no conflict when merged only has params count\n    // little than enoughParamNumber.\n\n\n    if (mergedValueCount === enoughParamNumber || !newValueCount) {\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // Than we can make sure user only want those two, and ignore\n    // all origin params in targetOption.\n    else if (newValueCount >= enoughParamNumber) {\n        return newParams;\n      } else {\n        // Chose another param from targetOption by priority.\n        for (var i = 0; i < names.length; i++) {\n          var name = names[i];\n\n          if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n            newParams[name] = targetOption[name];\n            break;\n          }\n        }\n\n        return newParams;\n      }\n  }\n\n  function hasProp(obj, name) {\n    return obj.hasOwnProperty(name);\n  }\n\n  function hasValue(obj, name) {\n    return obj[name] != null && obj[name] !== 'auto';\n  }\n\n  function copy(names, target, source) {\n    each(names, function (name) {\n      target[name] = source[name];\n    });\n  }\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction getLayoutParams(source) {\n  return copyLayoutParams({}, source);\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction copyLayoutParams(target, source) {\n  source && target && each(LOCATION_PARAMS, function (name) {\n    source.hasOwnProperty(name) && (target[name] = source[name]);\n  });\n  return target;\n}\n\nexports.LOCATION_PARAMS = LOCATION_PARAMS;\nexports.HV_NAMES = HV_NAMES;\nexports.box = box;\nexports.vbox = vbox;\nexports.hbox = hbox;\nexports.getAvailableSize = getAvailableSize;\nexports.getLayoutRect = getLayoutRect;\nexports.positionElement = positionElement;\nexports.sizeCalculable = sizeCalculable;\nexports.mergeLayoutParam = mergeLayoutParam;\nexports.getLayoutParams = getLayoutParams;\nexports.copyLayoutParams = copyLayoutParams;\n\n/***/ }),\n\n/***/ 991:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(978);\n\nvar Model = __webpack_require__(989);\n\nvar componentUtil = __webpack_require__(1027);\n\nvar clazzUtil = __webpack_require__(992);\n\nvar layout = __webpack_require__(990);\n\nvar boxLayoutMixin = __webpack_require__(1124);\n\n/**\n * Component model\n *\n * @module echarts/model/Component\n */\nvar arrayPush = Array.prototype.push;\n/**\n * @alias module:echarts/model/Component\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {module:echarts/model/Model} ecModel\n */\n\nvar ComponentModel = Model.extend({\n  type: 'component',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  id: '',\n\n  /**\n   * @readOnly\n   */\n  name: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  mainType: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  subType: '',\n\n  /**\n   * @readOnly\n   * @type {number}\n   */\n  componentIndex: 0,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n  ecModel: null,\n\n  /**\n   * key: componentType\n   * value:  Component model list, can not be null.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @readOnly\n   */\n  dependentModels: [],\n\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  uid: null,\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  $constructor: function (option, parentModel, ecModel, extraOpt) {\n    Model.call(this, option, parentModel, ecModel, extraOpt);\n    this.uid = componentUtil.getUID('componentModel');\n  },\n  init: function (option, parentModel, ecModel, extraOpt) {\n    this.mergeDefaultAndTheme(option, ecModel);\n  },\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? layout.getLayoutParams(option) : {};\n    var themeModel = ecModel.getTheme();\n    zrUtil.merge(option, themeModel.get(this.mainType));\n    zrUtil.merge(option, this.getDefaultOption());\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (option, extraOpt) {\n    zrUtil.merge(this.option, option, true);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(this.option, option, layoutMode);\n    }\n  },\n  // Hooker after init or mergeOption\n  optionUpdated: function (newCptOption, isInit) {},\n  getDefaultOption: function () {\n    if (!clazzUtil.hasOwn(this, '__defaultOption')) {\n      var optList = [];\n      var Class = this.constructor;\n\n      while (Class) {\n        var opt = Class.prototype.defaultOption;\n        opt && optList.push(opt);\n        Class = Class.superClass;\n      }\n\n      var defaultOption = {};\n\n      for (var i = optList.length - 1; i >= 0; i--) {\n        defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n      }\n\n      clazzUtil.set(this, '__defaultOption', defaultOption);\n    }\n\n    return clazzUtil.get(this, '__defaultOption');\n  },\n  getReferringComponents: function (mainType) {\n    return this.ecModel.queryComponents({\n      mainType: mainType,\n      index: this.get(mainType + 'Index', true),\n      id: this.get(mainType + 'Id', true)\n    });\n  }\n}); // Reset ComponentModel.extend, add preConstruct.\n// clazzUtil.enableClassExtend(\n//     ComponentModel,\n//     function (option, parentModel, ecModel, extraOpt) {\n//         // Set dependentModels, componentIndex, name, id, mainType, subType.\n//         zrUtil.extend(this, extraOpt);\n//         this.uid = componentUtil.getUID('componentModel');\n//         // this.setReadOnly([\n//         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n//         //     'dependentModels', 'componentIndex'\n//         // ]);\n//     }\n// );\n// Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(ComponentModel, {\n  registerWhenExtend: true\n});\ncomponentUtil.enableSubTypeDefaulter(ComponentModel); // Add capability of ComponentModel.topologicalTravel.\n\ncomponentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\nfunction getDependencies(componentType) {\n  var deps = [];\n  zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n    arrayPush.apply(deps, Clazz.prototype.dependencies || []);\n  }); // Ensure main type\n\n  return zrUtil.map(deps, function (type) {\n    return clazzUtil.parseClassType(type).main;\n  });\n}\n\nzrUtil.mixin(ComponentModel, boxLayoutMixin);\nvar _default = ComponentModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 992:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(983);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(978);\n\nvar TYPE_DELIMITER = '.';\nvar IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\nvar MEMBER_PRIFIX = '\\0ec_\\0';\n/**\n * Hide private class member.\n * The same behavior as `host[name] = value;` (can be right-value)\n * @public\n */\n\nfunction set(host, name, value) {\n  return host[MEMBER_PRIFIX + name] = value;\n}\n/**\n * Hide private class member.\n * The same behavior as `host[name];`\n * @public\n */\n\n\nfunction get(host, name) {\n  return host[MEMBER_PRIFIX + name];\n}\n/**\n * For hidden private class member.\n * The same behavior as `host.hasOwnProperty(name);`\n * @public\n */\n\n\nfunction hasOwn(host, name) {\n  return host.hasOwnProperty(MEMBER_PRIFIX + name);\n}\n/**\n * Notice, parseClassType('') should returns {main: '', sub: ''}\n * @public\n */\n\n\nfunction parseClassType(componentType) {\n  var ret = {\n    main: '',\n    sub: ''\n  };\n\n  if (componentType) {\n    componentType = componentType.split(TYPE_DELIMITER);\n    ret.main = componentType[0] || '';\n    ret.sub = componentType[1] || '';\n  }\n\n  return ret;\n}\n/**\n * @public\n */\n\n\nfunction checkClassType(componentType) {\n  zrUtil.assert(/^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType), 'componentType \"' + componentType + '\" illegal');\n}\n/**\n * @public\n */\n\n\nfunction enableClassExtend(RootClass, mandatoryMethods) {\n  RootClass.$constructor = RootClass;\n\n  RootClass.extend = function (proto) {\n    var superClass = this;\n\n    var ExtendedClass = function () {\n      if (!proto.$constructor) {\n        superClass.apply(this, arguments);\n      } else {\n        proto.$constructor.apply(this, arguments);\n      }\n    };\n\n    zrUtil.extend(ExtendedClass.prototype, proto);\n    ExtendedClass.extend = this.extend;\n    ExtendedClass.superCall = superCall;\n    ExtendedClass.superApply = superApply;\n    zrUtil.inherits(ExtendedClass, this);\n    ExtendedClass.superClass = superClass;\n    return ExtendedClass;\n  };\n} // superCall should have class info, which can not be fetch from 'this'.\n// Consider this case:\n// class A has method f,\n// class B inherits class A, overrides method f, f call superApply('f'),\n// class C inherits class B, do not overrides method f,\n// then when method of class C is called, dead loop occured.\n\n\nfunction superCall(context, methodName) {\n  var args = zrUtil.slice(arguments, 2);\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n\nfunction superApply(context, methodName, args) {\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n/**\n * @param {Object} entity\n * @param {Object} options\n * @param {boolean} [options.registerWhenExtend]\n * @public\n */\n\n\nfunction enableClassManagement(entity, options) {\n  options = options || {};\n  /**\n   * Component model classes\n   * key: componentType,\n   * value:\n   *     componentClass, when componentType is 'xxx'\n   *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n   * @type {Object}\n   */\n\n  var storage = {};\n\n  entity.registerClass = function (Clazz, componentType) {\n    if (componentType) {\n      checkClassType(componentType);\n      componentType = parseClassType(componentType);\n\n      if (!componentType.sub) {\n        storage[componentType.main] = Clazz;\n      } else if (componentType.sub !== IS_CONTAINER) {\n        var container = makeContainer(componentType);\n        container[componentType.sub] = Clazz;\n      }\n    }\n\n    return Clazz;\n  };\n\n  entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n    var Clazz = storage[componentMainType];\n\n    if (Clazz && Clazz[IS_CONTAINER]) {\n      Clazz = subType ? Clazz[subType] : null;\n    }\n\n    if (throwWhenNotFound && !Clazz) {\n      throw new Error(!subType ? componentMainType + '.' + 'type should be specified.' : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.');\n    }\n\n    return Clazz;\n  };\n\n  entity.getClassesByMainType = function (componentType) {\n    componentType = parseClassType(componentType);\n    var result = [];\n    var obj = storage[componentType.main];\n\n    if (obj && obj[IS_CONTAINER]) {\n      zrUtil.each(obj, function (o, type) {\n        type !== IS_CONTAINER && result.push(o);\n      });\n    } else {\n      result.push(obj);\n    }\n\n    return result;\n  };\n\n  entity.hasClass = function (componentType) {\n    // Just consider componentType.main.\n    componentType = parseClassType(componentType);\n    return !!storage[componentType.main];\n  };\n  /**\n   * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n   */\n\n\n  entity.getAllClassMainTypes = function () {\n    var types = [];\n    zrUtil.each(storage, function (obj, type) {\n      types.push(type);\n    });\n    return types;\n  };\n  /**\n   * If a main type is container and has sub types\n   * @param  {string}  mainType\n   * @return {boolean}\n   */\n\n\n  entity.hasSubTypes = function (componentType) {\n    componentType = parseClassType(componentType);\n    var obj = storage[componentType.main];\n    return obj && obj[IS_CONTAINER];\n  };\n\n  entity.parseClassType = parseClassType;\n\n  function makeContainer(componentType) {\n    var container = storage[componentType.main];\n\n    if (!container || !container[IS_CONTAINER]) {\n      container = storage[componentType.main] = {};\n      container[IS_CONTAINER] = true;\n    }\n\n    return container;\n  }\n\n  if (options.registerWhenExtend) {\n    var originalExtend = entity.extend;\n\n    if (originalExtend) {\n      entity.extend = function (proto) {\n        var ExtendedClass = originalExtend.call(this, proto);\n        return entity.registerClass(ExtendedClass, proto.type);\n      };\n    }\n  }\n\n  return entity;\n}\n/**\n * @param {string|Array.<string>} properties\n */\n\n\nfunction setReadOnly(obj, properties) {// FIXME It seems broken in IE8 simulation of IE11\n  // if (!zrUtil.isArray(properties)) {\n  //     properties = properties != null ? [properties] : [];\n  // }\n  // zrUtil.each(properties, function (prop) {\n  //     var value = obj[prop];\n  //     Object.defineProperty\n  //         && Object.defineProperty(obj, prop, {\n  //             value: value, writable: false\n  //         });\n  //     zrUtil.isArray(obj[prop])\n  //         && Object.freeze\n  //         && Object.freeze(obj[prop]);\n  // });\n}\n\nexports.set = set;\nexports.get = get;\nexports.hasOwn = hasOwn;\nexports.parseClassType = parseClassType;\nexports.enableClassExtend = enableClassExtend;\nexports.enableClassManagement = enableClassManagement;\nexports.setReadOnly = setReadOnly;\n\n/***/ }),\n\n/***/ 993:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar BoundingRect = __webpack_require__(987);\n\nvar imageHelper = __webpack_require__(1026);\n\nvar _util = __webpack_require__(978);\n\nvar getContext = _util.getContext;\nvar extend = _util.extend;\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar textWidthCache = {};\nvar textWidthCacheCounter = 0;\nvar TEXT_CACHE_MAX = 5000;\nvar STYLE_REG = /\\{([a-zA-Z0-9_]+)\\|([^}]*)\\}/g;\nvar DEFAULT_FONT = '12px sans-serif'; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  methods[name] = fn;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {number} width\n */\n\n\nfunction getWidth(text, font) {\n  font = font || DEFAULT_FONT;\n  var key = text + ':' + font;\n\n  if (textWidthCache[key]) {\n    return textWidthCache[key];\n  }\n\n  var textLines = (text + '').split('\\n');\n  var width = 0;\n\n  for (var i = 0, l = textLines.length; i < l; i++) {\n    // textContain.measureText may be overrided in SVG or VML\n    width = Math.max(measureText(textLines[i], font).width, width);\n  }\n\n  if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n    textWidthCacheCounter = 0;\n    textWidthCache = {};\n  }\n\n  textWidthCacheCounter++;\n  textWidthCache[key] = width;\n  return width;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {string} [textAlign='left']\n * @param {string} [textVerticalAlign='top']\n * @param {Array.<number>} [textPadding]\n * @param {Object} [rich]\n * @param {Object} [truncate]\n * @return {Object} {x, y, width, height, lineHeight}\n */\n\n\nfunction getBoundingRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  return rich ? getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) : getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate);\n}\n\nfunction getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate) {\n  var contentBlock = parsePlainText(text, font, textPadding, truncate);\n  var outerWidth = getWidth(text, font);\n\n  if (textPadding) {\n    outerWidth += textPadding[1] + textPadding[3];\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  var rect = new BoundingRect(x, y, outerWidth, outerHeight);\n  rect.lineHeight = contentBlock.lineHeight;\n  return rect;\n}\n\nfunction getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  var contentBlock = parseRichText(text, {\n    rich: rich,\n    truncate: truncate,\n    font: font,\n    textAlign: textAlign,\n    textPadding: textPadding\n  });\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  return new BoundingRect(x, y, outerWidth, outerHeight);\n}\n/**\n * @public\n * @param {number} x\n * @param {number} width\n * @param {string} [textAlign='left']\n * @return {number} Adjusted x.\n */\n\n\nfunction adjustTextX(x, width, textAlign) {\n  // FIXME Right to left language\n  if (textAlign === 'right') {\n    x -= width;\n  } else if (textAlign === 'center') {\n    x -= width / 2;\n  }\n\n  return x;\n}\n/**\n * @public\n * @param {number} y\n * @param {number} height\n * @param {string} [textVerticalAlign='top']\n * @return {number} Adjusted y.\n */\n\n\nfunction adjustTextY(y, height, textVerticalAlign) {\n  if (textVerticalAlign === 'middle') {\n    y -= height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y -= height;\n  }\n\n  return y;\n}\n/**\n * @public\n * @param {stirng} textPosition\n * @param {Object} rect {x, y, width, height}\n * @param {number} distance\n * @return {Object} {x, y, textAlign, textVerticalAlign}\n */\n\n\nfunction adjustTextPositionOnRect(textPosition, rect, distance) {\n  var x = rect.x;\n  var y = rect.y;\n  var height = rect.height;\n  var width = rect.width;\n  var halfHeight = height / 2;\n  var textAlign = 'left';\n  var textVerticalAlign = 'top';\n\n  switch (textPosition) {\n    case 'left':\n      x -= distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'right':\n      x += distance + width;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'top':\n      x += width / 2;\n      y -= distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'bottom':\n      x += width / 2;\n      y += height + distance;\n      textAlign = 'center';\n      break;\n\n    case 'inside':\n      x += width / 2;\n      y += halfHeight;\n      textAlign = 'center';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideLeft':\n      x += distance;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideRight':\n      x += width - distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideTop':\n      x += width / 2;\n      y += distance;\n      textAlign = 'center';\n      break;\n\n    case 'insideBottom':\n      x += width / 2;\n      y += height - distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideTopLeft':\n      x += distance;\n      y += distance;\n      break;\n\n    case 'insideTopRight':\n      x += width - distance;\n      y += distance;\n      textAlign = 'right';\n      break;\n\n    case 'insideBottomLeft':\n      x += distance;\n      y += height - distance;\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideBottomRight':\n      x += width - distance;\n      y += height - distance;\n      textAlign = 'right';\n      textVerticalAlign = 'bottom';\n      break;\n  }\n\n  return {\n    x: x,\n    y: y,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n/**\n * Show ellipsis if overflow.\n *\n * @public\n * @param  {string} text\n * @param  {string} containerWidth\n * @param  {string} font\n * @param  {number} [ellipsis='...']\n * @param  {Object} [options]\n * @param  {number} [options.maxIterations=3]\n * @param  {number} [options.minChar=0] If truncate result are less\n *                  then minChar, ellipsis will not show, which is\n *                  better for user hint in some cases.\n * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n * @return {string}\n */\n\n\nfunction truncateText(text, containerWidth, font, ellipsis, options) {\n  if (!containerWidth) {\n    return '';\n  }\n\n  var textLines = (text + '').split('\\n');\n  options = prepareTruncateOptions(containerWidth, font, ellipsis, options); // FIXME\n  // It is not appropriate that every line has '...' when truncate multiple lines.\n\n  for (var i = 0, len = textLines.length; i < len; i++) {\n    textLines[i] = truncateSingleLine(textLines[i], options);\n  }\n\n  return textLines.join('\\n');\n}\n\nfunction prepareTruncateOptions(containerWidth, font, ellipsis, options) {\n  options = extend({}, options);\n  options.font = font;\n  var ellipsis = retrieve2(ellipsis, '...');\n  options.maxIterations = retrieve2(options.maxIterations, 2);\n  var minChar = options.minChar = retrieve2(options.minChar, 0); // FIXME\n  // Other languages?\n\n  options.cnCharWidth = getWidth('国', font); // FIXME\n  // Consider proportional font?\n\n  var ascCharWidth = options.ascCharWidth = getWidth('a', font);\n  options.placeholder = retrieve2(options.placeholder, ''); // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n  // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n\n  var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n\n  for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n    contentWidth -= ascCharWidth;\n  }\n\n  var ellipsisWidth = getWidth(ellipsis);\n\n  if (ellipsisWidth > contentWidth) {\n    ellipsis = '';\n    ellipsisWidth = 0;\n  }\n\n  contentWidth = containerWidth - ellipsisWidth;\n  options.ellipsis = ellipsis;\n  options.ellipsisWidth = ellipsisWidth;\n  options.contentWidth = contentWidth;\n  options.containerWidth = containerWidth;\n  return options;\n}\n\nfunction truncateSingleLine(textLine, options) {\n  var containerWidth = options.containerWidth;\n  var font = options.font;\n  var contentWidth = options.contentWidth;\n\n  if (!containerWidth) {\n    return '';\n  }\n\n  var lineWidth = getWidth(textLine, font);\n\n  if (lineWidth <= containerWidth) {\n    return textLine;\n  }\n\n  for (var j = 0;; j++) {\n    if (lineWidth <= contentWidth || j >= options.maxIterations) {\n      textLine += options.ellipsis;\n      break;\n    }\n\n    var subLength = j === 0 ? estimateLength(textLine, contentWidth, options.ascCharWidth, options.cnCharWidth) : lineWidth > 0 ? Math.floor(textLine.length * contentWidth / lineWidth) : 0;\n    textLine = textLine.substr(0, subLength);\n    lineWidth = getWidth(textLine, font);\n  }\n\n  if (textLine === '') {\n    textLine = options.placeholder;\n  }\n\n  return textLine;\n}\n\nfunction estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n  var width = 0;\n  var i = 0;\n\n  for (var len = text.length; i < len && width < contentWidth; i++) {\n    var charCode = text.charCodeAt(i);\n    width += 0 <= charCode && charCode <= 127 ? ascCharWidth : cnCharWidth;\n  }\n\n  return i;\n}\n/**\n * @public\n * @param {string} font\n * @return {number} line height\n */\n\n\nfunction getLineHeight(font) {\n  // FIXME A rough approach.\n  return getWidth('国', font);\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {Object} width\n */\n\n\nfunction measureText(text, font) {\n  return methods.measureText(text, font);\n} // Avoid assign to an exported variable, for transforming to cjs.\n\n\nmethods.measureText = function (text, font) {\n  var ctx = getContext();\n  ctx.font = font || DEFAULT_FONT;\n  return ctx.measureText(text);\n};\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {Object} [truncate]\n * @return {Object} block: {lineHeight, lines, height, outerHeight}\n *  Notice: for performance, do not calculate outerWidth util needed.\n */\n\n\nfunction parsePlainText(text, font, padding, truncate) {\n  text != null && (text += '');\n  var lineHeight = getLineHeight(font);\n  var lines = text ? text.split('\\n') : [];\n  var height = lines.length * lineHeight;\n  var outerHeight = height;\n\n  if (padding) {\n    outerHeight += padding[0] + padding[2];\n  }\n\n  if (text && truncate) {\n    var truncOuterHeight = truncate.outerHeight;\n    var truncOuterWidth = truncate.outerWidth;\n\n    if (truncOuterHeight != null && outerHeight > truncOuterHeight) {\n      text = '';\n      lines = [];\n    } else if (truncOuterWidth != null) {\n      var options = prepareTruncateOptions(truncOuterWidth - (padding ? padding[1] + padding[3] : 0), font, truncate.ellipsis, {\n        minChar: truncate.minChar,\n        placeholder: truncate.placeholder\n      }); // FIXME\n      // It is not appropriate that every line has '...' when truncate multiple lines.\n\n      for (var i = 0, len = lines.length; i < len; i++) {\n        lines[i] = truncateSingleLine(lines[i], options);\n      }\n    }\n  }\n\n  return {\n    lines: lines,\n    height: height,\n    outerHeight: outerHeight,\n    lineHeight: lineHeight\n  };\n}\n/**\n * For example: 'some text {a|some text}other text{b|some text}xxx{c|}xxx'\n * Also consider 'bbbb{a|xxx\\nzzz}xxxx\\naaaa'.\n *\n * @public\n * @param {string} text\n * @param {Object} style\n * @return {Object} block\n * {\n *      width,\n *      height,\n *      lines: [{\n *          lineHeight,\n *          width,\n *          tokens: [[{\n *              styleName,\n *              text,\n *              width,      // include textPadding\n *              height,     // include textPadding\n *              textWidth, // pure text width\n *              textHeight, // pure text height\n *              lineHeihgt,\n *              font,\n *              textAlign,\n *              textVerticalAlign\n *          }], [...], ...]\n *      }, ...]\n * }\n * If styleName is undefined, it is plain text.\n */\n\n\nfunction parseRichText(text, style) {\n  var contentBlock = {\n    lines: [],\n    width: 0,\n    height: 0\n  };\n  text != null && (text += '');\n\n  if (!text) {\n    return contentBlock;\n  }\n\n  var lastIndex = STYLE_REG.lastIndex = 0;\n  var result;\n\n  while ((result = STYLE_REG.exec(text)) != null) {\n    var matchedIndex = result.index;\n\n    if (matchedIndex > lastIndex) {\n      pushTokens(contentBlock, text.substring(lastIndex, matchedIndex));\n    }\n\n    pushTokens(contentBlock, result[2], result[1]);\n    lastIndex = STYLE_REG.lastIndex;\n  }\n\n  if (lastIndex < text.length) {\n    pushTokens(contentBlock, text.substring(lastIndex, text.length));\n  }\n\n  var lines = contentBlock.lines;\n  var contentHeight = 0;\n  var contentWidth = 0; // For `textWidth: 100%`\n\n  var pendingList = [];\n  var stlPadding = style.textPadding;\n  var truncate = style.truncate;\n  var truncateWidth = truncate && truncate.outerWidth;\n  var truncateHeight = truncate && truncate.outerHeight;\n\n  if (stlPadding) {\n    truncateWidth != null && (truncateWidth -= stlPadding[1] + stlPadding[3]);\n    truncateHeight != null && (truncateHeight -= stlPadding[0] + stlPadding[2]);\n  } // Calculate layout info of tokens.\n\n\n  for (var i = 0; i < lines.length; i++) {\n    var line = lines[i];\n    var lineHeight = 0;\n    var lineWidth = 0;\n\n    for (var j = 0; j < line.tokens.length; j++) {\n      var token = line.tokens[j];\n      var tokenStyle = token.styleName && style.rich[token.styleName] || {}; // textPadding should not inherit from style.\n\n      var textPadding = token.textPadding = tokenStyle.textPadding; // textFont has been asigned to font by `normalizeStyle`.\n\n      var font = token.font = tokenStyle.font || style.font; // textHeight can be used when textVerticalAlign is specified in token.\n\n      var tokenHeight = token.textHeight = retrieve2( // textHeight should not be inherited, consider it can be specified\n      // as box height of the block.\n      tokenStyle.textHeight, getLineHeight(font));\n      textPadding && (tokenHeight += textPadding[0] + textPadding[2]);\n      token.height = tokenHeight;\n      token.lineHeight = retrieve3(tokenStyle.textLineHeight, style.textLineHeight, tokenHeight);\n      token.textAlign = tokenStyle && tokenStyle.textAlign || style.textAlign;\n      token.textVerticalAlign = tokenStyle && tokenStyle.textVerticalAlign || 'middle';\n\n      if (truncateHeight != null && contentHeight + token.lineHeight > truncateHeight) {\n        return {\n          lines: [],\n          width: 0,\n          height: 0\n        };\n      }\n\n      token.textWidth = getWidth(token.text, font);\n      var tokenWidth = tokenStyle.textWidth;\n      var tokenWidthNotSpecified = tokenWidth == null || tokenWidth === 'auto'; // Percent width, can be `100%`, can be used in drawing separate\n      // line when box width is needed to be auto.\n\n      if (typeof tokenWidth === 'string' && tokenWidth.charAt(tokenWidth.length - 1) === '%') {\n        token.percentWidth = tokenWidth;\n        pendingList.push(token);\n        tokenWidth = 0; // Do not truncate in this case, because there is no user case\n        // and it is too complicated.\n      } else {\n        if (tokenWidthNotSpecified) {\n          tokenWidth = token.textWidth; // FIXME: If image is not loaded and textWidth is not specified, calling\n          // `getBoundingRect()` will not get correct result.\n\n          var textBackgroundColor = tokenStyle.textBackgroundColor;\n          var bgImg = textBackgroundColor && textBackgroundColor.image; // Use cases:\n          // (1) If image is not loaded, it will be loaded at render phase and call\n          // `dirty()` and `textBackgroundColor.image` will be replaced with the loaded\n          // image, and then the right size will be calculated here at the next tick.\n          // See `graphic/helper/text.js`.\n          // (2) If image loaded, and `textBackgroundColor.image` is image src string,\n          // use `imageHelper.findExistImage` to find cached image.\n          // `imageHelper.findExistImage` will always be called here before\n          // `imageHelper.createOrUpdateImage` in `graphic/helper/text.js#renderRichText`\n          // which ensures that image will not be rendered before correct size calcualted.\n\n          if (bgImg) {\n            bgImg = imageHelper.findExistImage(bgImg);\n\n            if (imageHelper.isImageReady(bgImg)) {\n              tokenWidth = Math.max(tokenWidth, bgImg.width * tokenHeight / bgImg.height);\n            }\n          }\n        }\n\n        var paddingW = textPadding ? textPadding[1] + textPadding[3] : 0;\n        tokenWidth += paddingW;\n        var remianTruncWidth = truncateWidth != null ? truncateWidth - lineWidth : null;\n\n        if (remianTruncWidth != null && remianTruncWidth < tokenWidth) {\n          if (!tokenWidthNotSpecified || remianTruncWidth < paddingW) {\n            token.text = '';\n            token.textWidth = tokenWidth = 0;\n          } else {\n            token.text = truncateText(token.text, remianTruncWidth - paddingW, font, truncate.ellipsis, {\n              minChar: truncate.minChar\n            });\n            token.textWidth = getWidth(token.text, font);\n            tokenWidth = token.textWidth + paddingW;\n          }\n        }\n      }\n\n      lineWidth += token.width = tokenWidth;\n      tokenStyle && (lineHeight = Math.max(lineHeight, token.lineHeight));\n    }\n\n    line.width = lineWidth;\n    line.lineHeight = lineHeight;\n    contentHeight += lineHeight;\n    contentWidth = Math.max(contentWidth, lineWidth);\n  }\n\n  contentBlock.outerWidth = contentBlock.width = retrieve2(style.textWidth, contentWidth);\n  contentBlock.outerHeight = contentBlock.height = retrieve2(style.textHeight, contentHeight);\n\n  if (stlPadding) {\n    contentBlock.outerWidth += stlPadding[1] + stlPadding[3];\n    contentBlock.outerHeight += stlPadding[0] + stlPadding[2];\n  }\n\n  for (var i = 0; i < pendingList.length; i++) {\n    var token = pendingList[i];\n    var percentWidth = token.percentWidth; // Should not base on outerWidth, because token can not be placed out of padding.\n\n    token.width = parseInt(percentWidth, 10) / 100 * contentWidth;\n  }\n\n  return contentBlock;\n}\n\nfunction pushTokens(block, str, styleName) {\n  var isEmptyStr = str === '';\n  var strs = str.split('\\n');\n  var lines = block.lines;\n\n  for (var i = 0; i < strs.length; i++) {\n    var text = strs[i];\n    var token = {\n      styleName: styleName,\n      text: text,\n      isLineHolder: !text && !isEmptyStr\n    }; // The first token should be appended to the last line.\n\n    if (!i) {\n      var tokens = (lines[lines.length - 1] || (lines[0] = {\n        tokens: []\n      })).tokens; // Consider cases:\n      // (1) ''.split('\\n') => ['', '\\n', ''], the '' at the first item\n      // (which is a placeholder) should be replaced by new token.\n      // (2) A image backage, where token likes {a|}.\n      // (3) A redundant '' will affect textAlign in line.\n      // (4) tokens with the same tplName should not be merged, because\n      // they should be displayed in different box (with border and padding).\n\n      var tokensLen = tokens.length;\n      tokensLen === 1 && tokens[0].isLineHolder ? tokens[0] = token : // Consider text is '', only insert when it is the \"lineHolder\" or\n      // \"emptyStr\". Otherwise a redundant '' will affect textAlign in line.\n      (text || !tokensLen || isEmptyStr) && tokens.push(token);\n    } // Other tokens always start a new line.\n    else {\n        // If there is '', insert it as a placeholder.\n        lines.push({\n          tokens: [token]\n        });\n      }\n  }\n}\n\nfunction makeFont(style) {\n  // FIXME in node-canvas fontWeight is before fontStyle\n  // Use `fontSize` `fontFamily` to check whether font properties are defined.\n  return (style.fontSize || style.fontFamily) && [style.fontStyle, style.fontWeight, (style.fontSize || 12) + 'px', // If font properties are defined, `fontFamily` should not be ignored.\n  style.fontFamily || 'sans-serif'].join(' ') || style.textFont || style.font;\n}\n\nexports.DEFAULT_FONT = DEFAULT_FONT;\nexports.$override = $override;\nexports.getWidth = getWidth;\nexports.getBoundingRect = getBoundingRect;\nexports.adjustTextX = adjustTextX;\nexports.adjustTextY = adjustTextY;\nexports.adjustTextPositionOnRect = adjustTextPositionOnRect;\nexports.truncateText = truncateText;\nexports.getLineHeight = getLineHeight;\nexports.measureText = measureText;\nexports.parsePlainText = parsePlainText;\nexports.parseRichText = parseRichText;\nexports.makeFont = makeFont;\n\n/***/ }),\n\n/***/ 994:\n/***/ (function(module, exports) {\n\n/**\n * 3x2矩阵操作类\n * @exports zrender/tool/matrix\n */\nvar ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * 创建一个单位矩阵\n * @return {Float32Array|Array.<number>}\n */\n\nfunction create() {\n  var out = new ArrayCtor(6);\n  identity(out);\n  return out;\n}\n/**\n * 设置矩阵为单位矩阵\n * @param {Float32Array|Array.<number>} out\n */\n\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * 复制矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m\n */\n\n\nfunction copy(out, m) {\n  out[0] = m[0];\n  out[1] = m[1];\n  out[2] = m[2];\n  out[3] = m[3];\n  out[4] = m[4];\n  out[5] = m[5];\n  return out;\n}\n/**\n * 矩阵相乘\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m1\n * @param {Float32Array|Array.<number>} m2\n */\n\n\nfunction mul(out, m1, m2) {\n  // Consider matrix.mul(m, m2, m);\n  // where out is the same as m2.\n  // So use temp variable to escape error.\n  var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n  var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n  var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n  var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n  var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n  var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = out3;\n  out[4] = out4;\n  out[5] = out5;\n  return out;\n}\n/**\n * 平移变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction translate(out, a, v) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4] + v[0];\n  out[5] = a[5] + v[1];\n  return out;\n}\n/**\n * 旋转变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {number} rad\n */\n\n\nfunction rotate(out, a, rad) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var st = Math.sin(rad);\n  var ct = Math.cos(rad);\n  out[0] = aa * ct + ab * st;\n  out[1] = -aa * st + ab * ct;\n  out[2] = ac * ct + ad * st;\n  out[3] = -ac * st + ct * ad;\n  out[4] = ct * atx + st * aty;\n  out[5] = ct * aty - st * atx;\n  return out;\n}\n/**\n * 缩放变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction scale(out, a, v) {\n  var vx = v[0];\n  var vy = v[1];\n  out[0] = a[0] * vx;\n  out[1] = a[1] * vy;\n  out[2] = a[2] * vx;\n  out[3] = a[3] * vy;\n  out[4] = a[4] * vx;\n  out[5] = a[5] * vy;\n  return out;\n}\n/**\n * 求逆矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n */\n\n\nfunction invert(out, a) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var det = aa * ad - ab * ac;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n\nexports.create = create;\nexports.identity = identity;\nexports.copy = copy;\nexports.mul = mul;\nexports.translate = translate;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.invert = invert;\n\n/***/ }),\n\n/***/ 995:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {var _config = __webpack_require__(983);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(978);\n\nvar Model = __webpack_require__(989);\n\nvar DataDiffer = __webpack_require__(1013);\n\nvar modelUtil = __webpack_require__(982);\n\n/**\n * List for data storage\n * @module echarts/data/List\n */\nvar isObject = zrUtil.isObject;\nvar UNDEFINED = 'undefined';\nvar globalObj = typeof window === UNDEFINED ? global : window;\nvar dataCtors = {\n  'float': typeof globalObj.Float64Array === UNDEFINED ? Array : globalObj.Float64Array,\n  'int': typeof globalObj.Int32Array === UNDEFINED ? Array : globalObj.Int32Array,\n  // Ordinal data type can be string or int\n  'ordinal': Array,\n  'number': Array,\n  'time': Array\n};\nvar TRANSFERABLE_PROPERTIES = ['stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'];\n\nfunction transferProperties(a, b) {\n  zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n    if (b.hasOwnProperty(propName)) {\n      a[propName] = b[propName];\n    }\n  });\n  a.__wrappedMethods = b.__wrappedMethods;\n}\n\nfunction DefaultDataProvider(dataArray) {\n  this._array = dataArray || [];\n}\n\nDefaultDataProvider.prototype.pure = false;\n\nDefaultDataProvider.prototype.count = function () {\n  return this._array.length;\n};\n\nDefaultDataProvider.prototype.getItem = function (idx) {\n  return this._array[idx];\n};\n/**\n * @constructor\n * @alias module:echarts/data/List\n *\n * @param {Array.<string|Object>} dimensions\n *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n * @param {module:echarts/model/Model} hostModel\n */\n\n\nvar List = function (dimensions, hostModel) {\n  dimensions = dimensions || ['x', 'y'];\n  var dimensionInfos = {};\n  var dimensionNames = [];\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimensionName;\n    var dimensionInfo = {};\n\n    if (typeof dimensions[i] === 'string') {\n      dimensionName = dimensions[i];\n      dimensionInfo = {\n        name: dimensionName,\n        coordDim: dimensionName,\n        coordDimIndex: 0,\n        stackable: false,\n        // Type can be 'float', 'int', 'number'\n        // Default is number, Precision of float may not enough\n        type: 'number'\n      };\n    } else {\n      dimensionInfo = dimensions[i];\n      dimensionName = dimensionInfo.name;\n      dimensionInfo.type = dimensionInfo.type || 'number';\n\n      if (!dimensionInfo.coordDim) {\n        dimensionInfo.coordDim = dimensionName;\n        dimensionInfo.coordDimIndex = 0;\n      }\n    }\n\n    dimensionInfo.otherDims = dimensionInfo.otherDims || {};\n    dimensionNames.push(dimensionName);\n    dimensionInfos[dimensionName] = dimensionInfo;\n  }\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n\n\n  this.dimensions = dimensionNames;\n  /**\n   * Infomation of each data dimension, like data type.\n   * @type {Object}\n   */\n\n  this._dimensionInfos = dimensionInfos;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.hostModel = hostModel;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.dataType;\n  /**\n   * Indices stores the indices of data subset after filtered.\n   * This data subset will be used in chart.\n   * @type {Array.<number>}\n   * @readOnly\n   */\n\n  this.indices = [];\n  /**\n   * Data storage\n   * @type {Object.<key, TypedArray|Array>}\n   * @private\n   */\n\n  this._storage = {};\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._nameList = [];\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._idList = [];\n  /**\n   * Models of data option is stored sparse for optimizing memory cost\n   * @type {Array.<module:echarts/model/Model>}\n   * @private\n   */\n\n  this._optionModels = [];\n  /**\n   * @param {module:echarts/data/List}\n   */\n\n  this.stackedOn = null;\n  /**\n   * Global visual properties after visual coding\n   * @type {Object}\n   * @private\n   */\n\n  this._visual = {};\n  /**\n   * Globel layout properties.\n   * @type {Object}\n   * @private\n   */\n\n  this._layout = {};\n  /**\n   * Item visual properties after visual coding\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemVisuals = [];\n  /**\n   * Item layout properties after layout\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemLayouts = [];\n  /**\n   * Graphic elemnents\n   * @type {Array.<module:zrender/Element>}\n   * @private\n   */\n\n  this._graphicEls = [];\n  /**\n   * @type {Array.<Array|Object>}\n   * @private\n   */\n\n  this._rawData;\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._extent;\n};\n\nvar listProto = List.prototype;\nlistProto.type = 'list';\n/**\n * If each data item has it's own option\n * @type {boolean}\n */\n\nlistProto.hasItemOption = true;\n/**\n * Get dimension name\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n * @return {string} Concrete dim name.\n */\n\nlistProto.getDimension = function (dim) {\n  if (!isNaN(dim)) {\n    dim = this.dimensions[dim] || dim;\n  }\n\n  return dim;\n};\n/**\n * Get type and stackable info of particular dimension\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n */\n\n\nlistProto.getDimensionInfo = function (dim) {\n  return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);\n};\n/**\n * Initialize from data\n * @param {Array.<Object|number|Array>} data\n * @param {Array.<string>} [nameList]\n * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n */\n\n\nlistProto.initData = function (data, nameList, dimValueGetter) {\n  data = data || [];\n  var isDataArray = zrUtil.isArray(data);\n\n  if (isDataArray) {\n    data = new DefaultDataProvider(data);\n  }\n\n  this._rawData = data; // Clear\n\n  var storage = this._storage = {};\n  var indices = this.indices = [];\n  var dimensions = this.dimensions;\n  var dimensionInfoMap = this._dimensionInfos;\n  var size = data.count();\n  var idList = [];\n  var nameRepeatCount = {};\n  var nameDimIdx;\n  nameList = nameList || []; // Init storage\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimInfo = dimensionInfoMap[dimensions[i]];\n    dimInfo.otherDims.itemName === 0 && (nameDimIdx = i);\n    var DataCtor = dataCtors[dimInfo.type];\n    storage[dimensions[i]] = new DataCtor(size);\n  }\n\n  var self = this;\n\n  if (!dimValueGetter) {\n    self.hasItemOption = false;\n  } // Default dim value getter\n\n\n  dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {\n    var value = modelUtil.getDataItemValue(dataItem); // If any dataItem is like { value: 10 }\n\n    if (modelUtil.isDataItemOption(dataItem)) {\n      self.hasItemOption = true;\n    }\n\n    return modelUtil.converDataValue(value instanceof Array ? value[dimIndex] // If value is a single number or something else not array.\n    : value, dimensionInfoMap[dimName]);\n  };\n\n  for (var i = 0; i < size; i++) {\n    // NOTICE: Try not to write things into dataItem\n    var dataItem = data.getItem(i); // Each data item is value\n    // [1, 2]\n    // 2\n    // Bar chart, line chart which uses category axis\n    // only gives the 'y' value. 'x' value is the indices of cateogry\n    // Use a tempValue to normalize the value to be a (x, y) value\n    // Store the data by dimensions\n\n    for (var k = 0; k < dimensions.length; k++) {\n      var dim = dimensions[k];\n      var dimStorage = storage[dim]; // PENDING NULL is empty or zero\n\n      dimStorage[i] = dimValueGetter(dataItem, dim, i, k);\n    }\n\n    indices.push(i);\n  } // Use the name in option and create id\n\n\n  for (var i = 0; i < size; i++) {\n    var dataItem = data.getItem(i);\n\n    if (!nameList[i] && dataItem) {\n      if (dataItem.name != null) {\n        nameList[i] = dataItem.name;\n      } else if (nameDimIdx != null) {\n        nameList[i] = storage[dimensions[nameDimIdx]][i];\n      }\n    }\n\n    var name = nameList[i] || ''; // Try using the id in option\n\n    var id = dataItem && dataItem.id;\n\n    if (!id && name) {\n      // Use name as id and add counter to avoid same name\n      nameRepeatCount[name] = nameRepeatCount[name] || 0;\n      id = name;\n\n      if (nameRepeatCount[name] > 0) {\n        id += '__ec__' + nameRepeatCount[name];\n      }\n\n      nameRepeatCount[name]++;\n    }\n\n    id && (idList[i] = id);\n  }\n\n  this._nameList = nameList;\n  this._idList = idList;\n};\n/**\n * @return {number}\n */\n\n\nlistProto.count = function () {\n  return this.indices.length;\n};\n/**\n * Get value. Return NaN if idx is out of range.\n * @param {string} dim Dim must be concrete name.\n * @param {number} idx\n * @param {boolean} stack\n * @return {number}\n */\n\n\nlistProto.get = function (dim, idx, stack) {\n  var storage = this._storage;\n  var dataIndex = this.indices[idx]; // If value not exists\n\n  if (dataIndex == null || !storage[dim]) {\n    return NaN;\n  }\n\n  var value = storage[dim][dataIndex]; // FIXME ordinal data type is not stackable\n\n  if (stack) {\n    var dimensionInfo = this._dimensionInfos[dim];\n\n    if (dimensionInfo && dimensionInfo.stackable) {\n      var stackedOn = this.stackedOn;\n\n      while (stackedOn) {\n        // Get no stacked data of stacked on\n        var stackedValue = stackedOn.get(dim, idx); // Considering positive stack, negative stack and empty data\n\n        if (value >= 0 && stackedValue > 0 || // Positive stack\n        value <= 0 && stackedValue < 0 // Negative stack\n        ) {\n            value += stackedValue;\n          }\n\n        stackedOn = stackedOn.stackedOn;\n      }\n    }\n  }\n\n  return value;\n};\n/**\n * Get value for multi dimensions.\n * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n * @param {number} idx\n * @param {boolean} stack\n * @return {number}\n */\n\n\nlistProto.getValues = function (dimensions, idx, stack) {\n  var values = [];\n\n  if (!zrUtil.isArray(dimensions)) {\n    stack = idx;\n    idx = dimensions;\n    dimensions = this.dimensions;\n  }\n\n  for (var i = 0, len = dimensions.length; i < len; i++) {\n    values.push(this.get(dimensions[i], idx, stack));\n  }\n\n  return values;\n};\n/**\n * If value is NaN. Inlcuding '-'\n * @param {string} dim\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.hasValue = function (idx) {\n  var dimensions = this.dimensions;\n  var dimensionInfos = this._dimensionInfos;\n\n  for (var i = 0, len = dimensions.length; i < len; i++) {\n    if ( // Ordinal type can be string or number\n    dimensionInfos[dimensions[i]].type !== 'ordinal' && isNaN(this.get(dimensions[i], idx))) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Get extent of data in one dimension\n * @param {string} dim\n * @param {boolean} stack\n * @param {Function} filter\n */\n\n\nlistProto.getDataExtent = function (dim, stack, filter) {\n  dim = this.getDimension(dim);\n  var dimData = this._storage[dim];\n  var dimInfo = this.getDimensionInfo(dim);\n  stack = dimInfo && dimInfo.stackable && stack;\n  var dimExtent = (this._extent || (this._extent = {}))[dim + !!stack];\n  var value;\n\n  if (dimExtent) {\n    return dimExtent;\n  } // var dimInfo = this._dimensionInfos[dim];\n\n\n  if (dimData) {\n    var min = Infinity;\n    var max = -Infinity; // var isOrdinal = dimInfo.type === 'ordinal';\n\n    for (var i = 0, len = this.count(); i < len; i++) {\n      value = this.get(dim, i, stack); // FIXME\n      // if (isOrdinal && typeof value === 'string') {\n      //     value = zrUtil.indexOf(dimData, value);\n      // }\n\n      if (!filter || filter(value, dim, i)) {\n        value < min && (min = value);\n        value > max && (max = value);\n      }\n    }\n\n    return this._extent[dim + !!stack] = [min, max];\n  } else {\n    return [Infinity, -Infinity];\n  }\n};\n/**\n * Get sum of data in one dimension\n * @param {string} dim\n * @param {boolean} stack\n */\n\n\nlistProto.getSum = function (dim, stack) {\n  var dimData = this._storage[dim];\n  var sum = 0;\n\n  if (dimData) {\n    for (var i = 0, len = this.count(); i < len; i++) {\n      var value = this.get(dim, i, stack);\n\n      if (!isNaN(value)) {\n        sum += value;\n      }\n    }\n  }\n\n  return sum;\n};\n/**\n * Retreive the index with given value\n * @param {number} idx\n * @param {number} value\n * @return {number}\n */\n// FIXME Precision of float value\n\n\nlistProto.indexOf = function (dim, value) {\n  var storage = this._storage;\n  var dimData = storage[dim];\n  var indices = this.indices;\n\n  if (dimData) {\n    for (var i = 0, len = indices.length; i < len; i++) {\n      var rawIndex = indices[i];\n\n      if (dimData[rawIndex] === value) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index with given name\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfName = function (name) {\n  var indices = this.indices;\n  var nameList = this._nameList;\n\n  for (var i = 0, len = indices.length; i < len; i++) {\n    var rawIndex = indices[i];\n\n    if (nameList[rawIndex] === name) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index with given raw data index\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfRawIndex = function (rawIndex) {\n  // Indices are ascending\n  var indices = this.indices; // If rawIndex === dataIndex\n\n  var rawDataIndex = indices[rawIndex];\n\n  if (rawDataIndex != null && rawDataIndex === rawIndex) {\n    return rawIndex;\n  }\n\n  var left = 0;\n  var right = indices.length - 1;\n\n  while (left <= right) {\n    var mid = (left + right) / 2 | 0;\n\n    if (indices[mid] < rawIndex) {\n      left = mid + 1;\n    } else if (indices[mid] > rawIndex) {\n      right = mid - 1;\n    } else {\n      return mid;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index of nearest value\n * @param {string} dim\n * @param {number} value\n * @param {boolean} stack If given value is after stacked\n * @param {number} [maxDistance=Infinity]\n * @return {Array.<number>} Considere multiple points has the same value.\n */\n\n\nlistProto.indicesOfNearest = function (dim, value, stack, maxDistance) {\n  var storage = this._storage;\n  var dimData = storage[dim];\n  var nearestIndices = [];\n\n  if (!dimData) {\n    return nearestIndices;\n  }\n\n  if (maxDistance == null) {\n    maxDistance = Infinity;\n  }\n\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n\n  for (var i = 0, len = this.count(); i < len; i++) {\n    var diff = value - this.get(dim, i, stack);\n    var dist = Math.abs(diff);\n\n    if (diff <= maxDistance && dist <= minDist) {\n      // For the case of two data are same on xAxis, which has sequence data.\n      // Show the nearest index\n      // https://github.com/ecomfe/echarts/issues/2869\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        nearestIndices.length = 0;\n      }\n\n      nearestIndices.push(i);\n    }\n  }\n\n  return nearestIndices;\n};\n/**\n * Get raw data index\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawIndex = function (idx) {\n  var rawIdx = this.indices[idx];\n  return rawIdx == null ? -1 : rawIdx;\n};\n/**\n * Get raw data item\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawDataItem = function (idx) {\n  return this._rawData.getItem(this.getRawIndex(idx));\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getName = function (idx) {\n  return this._nameList[this.indices[idx]] || '';\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getId = function (idx) {\n  return this._idList[this.indices[idx]] || this.getRawIndex(idx) + '';\n};\n\nfunction normalizeDimensions(dimensions) {\n  if (!zrUtil.isArray(dimensions)) {\n    dimensions = [dimensions];\n  }\n\n  return dimensions;\n}\n/**\n * Data iteration\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n *\n * @example\n *  list.each('x', function (x, idx) {});\n *  list.each(['x', 'y'], function (x, y, idx) {});\n *  list.each(function (idx) {})\n */\n\n\nlistProto.each = function (dims, cb, stack, context) {\n  if (typeof dims === 'function') {\n    context = stack;\n    stack = cb;\n    cb = dims;\n    dims = [];\n  }\n\n  dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n  var value = [];\n  var dimSize = dims.length;\n  var indices = this.indices;\n  context = context || this;\n\n  for (var i = 0; i < indices.length; i++) {\n    // Simple optimization\n    switch (dimSize) {\n      case 0:\n        cb.call(context, i);\n        break;\n\n      case 1:\n        cb.call(context, this.get(dims[0], i, stack), i);\n        break;\n\n      case 2:\n        cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n        break;\n\n      default:\n        for (var k = 0; k < dimSize; k++) {\n          value[k] = this.get(dims[k], i, stack);\n        } // Index\n\n\n        value[k] = i;\n        cb.apply(context, value);\n    }\n  }\n};\n/**\n * Data filter\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n */\n\n\nlistProto.filterSelf = function (dimensions, cb, stack, context) {\n  if (typeof dimensions === 'function') {\n    context = stack;\n    stack = cb;\n    cb = dimensions;\n    dimensions = [];\n  }\n\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var newIndices = [];\n  var value = [];\n  var dimSize = dimensions.length;\n  var indices = this.indices;\n  context = context || this;\n\n  for (var i = 0; i < indices.length; i++) {\n    var keep; // Simple optimization\n\n    if (!dimSize) {\n      keep = cb.call(context, i);\n    } else if (dimSize === 1) {\n      keep = cb.call(context, this.get(dimensions[0], i, stack), i);\n    } else {\n      for (var k = 0; k < dimSize; k++) {\n        value[k] = this.get(dimensions[k], i, stack);\n      }\n\n      value[k] = i;\n      keep = cb.apply(context, value);\n    }\n\n    if (keep) {\n      newIndices.push(indices[i]);\n    }\n  }\n\n  this.indices = newIndices; // Reset data extent\n\n  this._extent = {};\n  return this;\n};\n/**\n * Data mapping to a plain array\n * @param {string|Array.<string>} [dimensions]\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.mapArray = function (dimensions, cb, stack, context) {\n  if (typeof dimensions === 'function') {\n    context = stack;\n    stack = cb;\n    cb = dimensions;\n    dimensions = [];\n  }\n\n  var result = [];\n  this.each(dimensions, function () {\n    result.push(cb && cb.apply(this, arguments));\n  }, stack, context);\n  return result;\n};\n\nfunction cloneListForMapAndSample(original, excludeDimensions) {\n  var allDimensions = original.dimensions;\n  var list = new List(zrUtil.map(allDimensions, original.getDimensionInfo, original), original.hostModel); // FIXME If needs stackedOn, value may already been stacked\n\n  transferProperties(list, original);\n  var storage = list._storage = {};\n  var originalStorage = original._storage; // Init storage\n\n  for (var i = 0; i < allDimensions.length; i++) {\n    var dim = allDimensions[i];\n    var dimStore = originalStorage[dim];\n\n    if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n      storage[dim] = new dimStore.constructor(originalStorage[dim].length);\n    } else {\n      // Direct reference for other dimensions\n      storage[dim] = originalStorage[dim];\n    }\n  }\n\n  return list;\n}\n/**\n * Data mapping to a new List with given dimensions\n * @param {string|Array.<string>} dimensions\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.map = function (dimensions, cb, stack, context) {\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var list = cloneListForMapAndSample(this, dimensions); // Following properties are all immutable.\n  // So we can reference to the same value\n\n  var indices = list.indices = this.indices;\n  var storage = list._storage;\n  var tmpRetValue = [];\n  this.each(dimensions, function () {\n    var idx = arguments[arguments.length - 1];\n    var retValue = cb && cb.apply(this, arguments);\n\n    if (retValue != null) {\n      // a number\n      if (typeof retValue === 'number') {\n        tmpRetValue[0] = retValue;\n        retValue = tmpRetValue;\n      }\n\n      for (var i = 0; i < retValue.length; i++) {\n        var dim = dimensions[i];\n        var dimStore = storage[dim];\n        var rawIdx = indices[idx];\n\n        if (dimStore) {\n          dimStore[rawIdx] = retValue[i];\n        }\n      }\n    }\n  }, stack, context);\n  return list;\n};\n/**\n * Large data down sampling on given dimension\n * @param {string} dimension\n * @param {number} rate\n * @param {Function} sampleValue\n * @param {Function} sampleIndex Sample index for name and id\n */\n\n\nlistProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n  var list = cloneListForMapAndSample(this, [dimension]);\n  var storage = this._storage;\n  var targetStorage = list._storage;\n  var originalIndices = this.indices;\n  var indices = list.indices = [];\n  var frameValues = [];\n  var frameIndices = [];\n  var frameSize = Math.floor(1 / rate);\n  var dimStore = targetStorage[dimension];\n  var len = this.count(); // Copy data from original data\n\n  for (var i = 0; i < storage[dimension].length; i++) {\n    targetStorage[dimension][i] = storage[dimension][i];\n  }\n\n  for (var i = 0; i < len; i += frameSize) {\n    // Last frame\n    if (frameSize > len - i) {\n      frameSize = len - i;\n      frameValues.length = frameSize;\n    }\n\n    for (var k = 0; k < frameSize; k++) {\n      var idx = originalIndices[i + k];\n      frameValues[k] = dimStore[idx];\n      frameIndices[k] = idx;\n    }\n\n    var value = sampleValue(frameValues);\n    var idx = frameIndices[sampleIndex(frameValues, value) || 0]; // Only write value on the filtered data\n\n    dimStore[idx] = value;\n    indices.push(idx);\n  }\n\n  return list;\n};\n/**\n * Get model of one data item.\n *\n * @param {number} idx\n */\n// FIXME Model proxy ?\n\n\nlistProto.getItemModel = function (idx) {\n  var hostModel = this.hostModel;\n  idx = this.indices[idx];\n  return new Model(this._rawData.getItem(idx), hostModel, hostModel && hostModel.ecModel);\n};\n/**\n * Create a data differ\n * @param {module:echarts/data/List} otherList\n * @return {module:echarts/data/DataDiffer}\n */\n\n\nlistProto.diff = function (otherList) {\n  var idList = this._idList;\n  var otherIdList = otherList && otherList._idList;\n  var val; // Use prefix to avoid index to be the same as otherIdList[idx],\n  // which will cause weird udpate animation.\n\n  var prefix = 'e\\0\\0';\n  return new DataDiffer(otherList ? otherList.indices : [], this.indices, function (idx) {\n    return (val = otherIdList[idx]) != null ? val : prefix + idx;\n  }, function (idx) {\n    return (val = idList[idx]) != null ? val : prefix + idx;\n  });\n};\n/**\n * Get visual property.\n * @param {string} key\n */\n\n\nlistProto.getVisual = function (key) {\n  var visual = this._visual;\n  return visual && visual[key];\n};\n/**\n * Set visual property\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setVisual('color', color);\n *  setVisual({\n *      'color': color\n *  });\n */\n\n\nlistProto.setVisual = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setVisual(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._visual = this._visual || {};\n  this._visual[key] = val;\n};\n/**\n * Set layout property.\n * @param {string|Object} key\n * @param {*} [val]\n */\n\n\nlistProto.setLayout = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setLayout(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._layout[key] = val;\n};\n/**\n * Get layout property.\n * @param  {string} key.\n * @return {*}\n */\n\n\nlistProto.getLayout = function (key) {\n  return this._layout[key];\n};\n/**\n * Get layout of single data item\n * @param {number} idx\n */\n\n\nlistProto.getItemLayout = function (idx) {\n  return this._itemLayouts[idx];\n};\n/**\n * Set layout of single data item\n * @param {number} idx\n * @param {Object} layout\n * @param {boolean=} [merge=false]\n */\n\n\nlistProto.setItemLayout = function (idx, layout, merge) {\n  this._itemLayouts[idx] = merge ? zrUtil.extend(this._itemLayouts[idx] || {}, layout) : layout;\n};\n/**\n * Clear all layout of single data item\n */\n\n\nlistProto.clearItemLayouts = function () {\n  this._itemLayouts.length = 0;\n};\n/**\n * Get visual property of single data item\n * @param {number} idx\n * @param {string} key\n * @param {boolean} [ignoreParent=false]\n */\n\n\nlistProto.getItemVisual = function (idx, key, ignoreParent) {\n  var itemVisual = this._itemVisuals[idx];\n  var val = itemVisual && itemVisual[key];\n\n  if (val == null && !ignoreParent) {\n    // Use global visual property\n    return this.getVisual(key);\n  }\n\n  return val;\n};\n/**\n * Set visual property of single data item\n *\n * @param {number} idx\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setItemVisual(0, 'color', color);\n *  setItemVisual(0, {\n *      'color': color\n *  });\n */\n\n\nlistProto.setItemVisual = function (idx, key, value) {\n  var itemVisual = this._itemVisuals[idx] || {};\n  this._itemVisuals[idx] = itemVisual;\n\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        itemVisual[name] = key[name];\n      }\n    }\n\n    return;\n  }\n\n  itemVisual[key] = value;\n};\n/**\n * Clear itemVisuals and list visual.\n */\n\n\nlistProto.clearAllVisual = function () {\n  this._visual = {};\n  this._itemVisuals = [];\n};\n\nvar setItemDataAndSeriesIndex = function (child) {\n  child.seriesIndex = this.seriesIndex;\n  child.dataIndex = this.dataIndex;\n  child.dataType = this.dataType;\n};\n/**\n * Set graphic element relative to data. It can be set as null\n * @param {number} idx\n * @param {module:zrender/Element} [el]\n */\n\n\nlistProto.setItemGraphicEl = function (idx, el) {\n  var hostModel = this.hostModel;\n\n  if (el) {\n    // Add data index and series index for indexing the data by element\n    // Useful in tooltip\n    el.dataIndex = idx;\n    el.dataType = this.dataType;\n    el.seriesIndex = hostModel && hostModel.seriesIndex;\n\n    if (el.type === 'group') {\n      el.traverse(setItemDataAndSeriesIndex, el);\n    }\n  }\n\n  this._graphicEls[idx] = el;\n};\n/**\n * @param {number} idx\n * @return {module:zrender/Element}\n */\n\n\nlistProto.getItemGraphicEl = function (idx) {\n  return this._graphicEls[idx];\n};\n/**\n * @param {Function} cb\n * @param {*} context\n */\n\n\nlistProto.eachItemGraphicEl = function (cb, context) {\n  zrUtil.each(this._graphicEls, function (el, idx) {\n    if (el) {\n      cb && cb.call(context, el, idx);\n    }\n  });\n};\n/**\n * Shallow clone a new list except visual and layout properties, and graph elements.\n * New list only change the indices.\n */\n\n\nlistProto.cloneShallow = function () {\n  var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n  var list = new List(dimensionInfoList, this.hostModel); // FIXME\n\n  list._storage = this._storage;\n  transferProperties(list, this); // Clone will not change the data extent and indices\n\n  list.indices = this.indices.slice();\n\n  if (this._extent) {\n    list._extent = zrUtil.extend({}, this._extent);\n  }\n\n  return list;\n};\n/**\n * Wrap some method to add more feature\n * @param {string} methodName\n * @param {Function} injectFunction\n */\n\n\nlistProto.wrapMethod = function (methodName, injectFunction) {\n  var originalMethod = this[methodName];\n\n  if (typeof originalMethod !== 'function') {\n    return;\n  }\n\n  this.__wrappedMethods = this.__wrappedMethods || [];\n\n  this.__wrappedMethods.push(methodName);\n\n  this[methodName] = function () {\n    var res = originalMethod.apply(this, arguments);\n    return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n  };\n}; // Methods that create a new list based on this list should be listed here.\n// Notice that those method should `RETURN` the new list.\n\n\nlistProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map']; // Methods that change indices of this list should be listed here.\n\nlistProto.CHANGABLE_METHODS = ['filterSelf'];\nvar _default = List;\nmodule.exports = _default;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(23)))\n\n/***/ }),\n\n/***/ 996:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(983);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(978);\n\nvar textContain = __webpack_require__(993);\n\nvar OrdinalScale = __webpack_require__(1133);\n\nvar IntervalScale = __webpack_require__(1020);\n\nvar Scale = __webpack_require__(1014);\n\nvar numberUtil = __webpack_require__(981);\n\n__webpack_require__(1134);\n\n__webpack_require__(1135);\n\n/**\n * Get axis scale extent before niced.\n * Item of returned array can only be number (including Infinity and NaN).\n */\nfunction getScaleExtent(scale, model) {\n  var scaleType = scale.type;\n  var min = model.getMin();\n  var max = model.getMax();\n  var fixMin = min != null;\n  var fixMax = max != null;\n  var originalExtent = scale.getExtent();\n  var axisDataLen;\n  var boundaryGap;\n  var span;\n\n  if (scaleType === 'ordinal') {\n    axisDataLen = (model.get('data') || []).length;\n  } else {\n    boundaryGap = model.get('boundaryGap');\n\n    if (!zrUtil.isArray(boundaryGap)) {\n      boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n    }\n\n    if (typeof boundaryGap[0] === 'boolean') {\n      boundaryGap = [0, 0];\n    }\n\n    boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n    boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n    span = originalExtent[1] - originalExtent[0] || Math.abs(originalExtent[0]);\n  } // Notice: When min/max is not set (that is, when there are null/undefined,\n  // which is the most common case), these cases should be ensured:\n  // (1) For 'ordinal', show all axis.data.\n  // (2) For others:\n  //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n  //      disabled).\n  //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n  //      be the result that originalExtent enlarged by boundaryGap.\n  // (3) If no data, it should be ensured that `scale.setBlank` is set.\n  // FIXME\n  // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\n  // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\n  // that the results processed by boundaryGap are positive/negative?\n\n\n  if (min == null) {\n    min = scaleType === 'ordinal' ? axisDataLen ? 0 : NaN : originalExtent[0] - boundaryGap[0] * span;\n  }\n\n  if (max == null) {\n    max = scaleType === 'ordinal' ? axisDataLen ? axisDataLen - 1 : NaN : originalExtent[1] + boundaryGap[1] * span;\n  }\n\n  if (min === 'dataMin') {\n    min = originalExtent[0];\n  } else if (typeof min === 'function') {\n    min = min({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  if (max === 'dataMax') {\n    max = originalExtent[1];\n  } else if (typeof max === 'function') {\n    max = max({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  (min == null || !isFinite(min)) && (min = NaN);\n  (max == null || !isFinite(max)) && (max = NaN);\n  scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max)); // Evaluate if axis needs cross zero\n\n  if (model.getNeedCrossZero()) {\n    // Axis is over zero and min is not set\n    if (min > 0 && max > 0 && !fixMin) {\n      min = 0;\n    } // Axis is under zero and max is not set\n\n\n    if (min < 0 && max < 0 && !fixMax) {\n      max = 0;\n    }\n  }\n\n  return [min, max];\n}\n\nfunction niceScaleExtent(scale, model) {\n  var extent = getScaleExtent(scale, model);\n  var fixMin = model.getMin() != null;\n  var fixMax = model.getMax() != null;\n  var splitNumber = model.get('splitNumber');\n\n  if (scale.type === 'log') {\n    scale.base = model.get('logBase');\n  }\n\n  var scaleType = scale.type;\n  scale.setExtent(extent[0], extent[1]);\n  scale.niceExtent({\n    splitNumber: splitNumber,\n    fixMin: fixMin,\n    fixMax: fixMax,\n    minInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('minInterval') : null,\n    maxInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('maxInterval') : null\n  }); // If some one specified the min, max. And the default calculated interval\n  // is not good enough. He can specify the interval. It is often appeared\n  // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n  // to be 60.\n  // FIXME\n\n  var interval = model.get('interval');\n\n  if (interval != null) {\n    scale.setInterval && scale.setInterval(interval);\n  }\n}\n/**\n * @param {module:echarts/model/Model} model\n * @param {string} [axisType] Default retrieve from model.type\n * @return {module:echarts/scale/*}\n */\n\n\nfunction createScaleByModel(model, axisType) {\n  axisType = axisType || model.get('type');\n\n  if (axisType) {\n    switch (axisType) {\n      // Buildin scale\n      case 'category':\n        return new OrdinalScale(model.getCategories(), [Infinity, -Infinity]);\n\n      case 'value':\n        return new IntervalScale();\n      // Extended scale, like time and log\n\n      default:\n        return (Scale.getClass(axisType) || IntervalScale).create(model);\n    }\n  }\n}\n/**\n * Check if the axis corss 0\n */\n\n\nfunction ifAxisCrossZero(axis) {\n  var dataExtent = axis.scale.getExtent();\n  var min = dataExtent[0];\n  var max = dataExtent[1];\n  return !(min > 0 && max > 0 || min < 0 && max < 0);\n}\n/**\n * @param {Array.<number>} tickCoords In axis self coordinate.\n * @param {Array.<string>} labels\n * @param {string} font\n * @param {number} axisRotate 0: towards right horizontally, clock-wise is negative.\n * @param {number} [labelRotate=0] 0: towards right horizontally, clock-wise is negative.\n * @return {number}\n */\n\n\nfunction getAxisLabelInterval(tickCoords, labels, font, axisRotate, labelRotate) {\n  var textSpaceTakenRect;\n  var autoLabelInterval = 0;\n  var accumulatedLabelInterval = 0;\n  var rotation = (axisRotate - labelRotate) / 180 * Math.PI;\n  var step = 1;\n\n  if (labels.length > 40) {\n    // Simple optimization for large amount of labels\n    step = Math.floor(labels.length / 40);\n  }\n\n  for (var i = 0; i < tickCoords.length; i += step) {\n    var tickCoord = tickCoords[i]; // Not precise, do not consider align and vertical align\n    // and each distance from axis line yet.\n\n    var rect = textContain.getBoundingRect(labels[i], font, 'center', 'top');\n    rect.x += tickCoord * Math.cos(rotation);\n    rect.y += tickCoord * Math.sin(rotation); // Magic number\n\n    rect.width *= 1.3;\n    rect.height *= 1.3;\n\n    if (!textSpaceTakenRect) {\n      textSpaceTakenRect = rect.clone();\n    } // There is no space for current label;\n    else if (textSpaceTakenRect.intersect(rect)) {\n        accumulatedLabelInterval++;\n        autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n      } else {\n        textSpaceTakenRect.union(rect); // Reset\n\n        accumulatedLabelInterval = 0;\n      }\n  }\n\n  if (autoLabelInterval === 0 && step > 1) {\n    return step;\n  }\n\n  return (autoLabelInterval + 1) * step - 1;\n}\n/**\n * @param {Object} axis\n * @param {Function} labelFormatter\n * @return {Array.<string>}\n */\n\n\nfunction getFormattedLabels(axis, labelFormatter) {\n  var scale = axis.scale;\n  var labels = scale.getTicksLabels();\n  var ticks = scale.getTicks();\n\n  if (typeof labelFormatter === 'string') {\n    labelFormatter = function (tpl) {\n      return function (val) {\n        return tpl.replace('{value}', val != null ? val : '');\n      };\n    }(labelFormatter); // Consider empty array\n\n\n    return zrUtil.map(labels, labelFormatter);\n  } else if (typeof labelFormatter === 'function') {\n    return zrUtil.map(ticks, function (tick, idx) {\n      return labelFormatter(getAxisRawValue(axis, tick), idx);\n    }, this);\n  } else {\n    return labels;\n  }\n}\n\nfunction getAxisRawValue(axis, value) {\n  // In category axis with data zoom, tick is not the original\n  // index of axis.data. So tick should not be exposed to user\n  // in category axis.\n  return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n}\n\nexports.getScaleExtent = getScaleExtent;\nexports.niceScaleExtent = niceScaleExtent;\nexports.createScaleByModel = createScaleByModel;\nexports.ifAxisCrossZero = ifAxisCrossZero;\nexports.getAxisLabelInterval = getAxisLabelInterval;\nexports.getFormattedLabels = getFormattedLabels;\nexports.getAxisRawValue = getAxisRawValue;\n\n/***/ }),\n\n/***/ 997:\n/***/ (function(module, exports) {\n\nvar features = {};\n\nfunction register(name, ctor) {\n  features[name] = ctor;\n}\n\nfunction get(name) {\n  return features[name];\n}\n\nexports.register = register;\nexports.get = get;\n\n/***/ }),\n\n/***/ 998:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Eventful = __webpack_require__(1001);\n\nexports.Dispatcher = Eventful;\n\nvar env = __webpack_require__(986);\n\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\nvar isDomLevel2 = typeof window !== 'undefined' && !!window.addEventListener;\nvar MOUSE_EVENT_REG = /^(?:mouse|pointer|contextmenu|drag|drop)|click/;\n\nfunction getBoundingClientRect(el) {\n  // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n  return el.getBoundingClientRect ? el.getBoundingClientRect() : {\n    left: 0,\n    top: 0\n  };\n} // `calculate` is optional, default false\n\n\nfunction clientToLocal(el, e, out, calculate) {\n  out = out || {}; // According to the W3C Working Draft, offsetX and offsetY should be relative\n  // to the padding edge of the target element. The only browser using this convention\n  // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n  // not support the properties.\n  // (see http://www.jacklmoore.com/notes/mouse-position/)\n  // In zr painter.dom, padding edge equals to border edge.\n  // FIXME\n  // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n  // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n  // is too complex. So css-transfrom dont support in this case temporarily.\n\n  if (calculate || !env.canvasSupported) {\n    defaultGetZrXY(el, e, out);\n  } // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n  // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n  // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n  // zoom-factor, overflow / opacity layers, transforms ...)\n  // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n  // <https://bugs.jquery.com/ticket/8523#comment:14>\n  // BTW3, In ff, offsetX/offsetY is always 0.\n  else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n      out.zrX = e.layerX;\n      out.zrY = e.layerY;\n    } // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n    else if (e.offsetX != null) {\n        out.zrX = e.offsetX;\n        out.zrY = e.offsetY;\n      } // For some other device, e.g., IOS safari.\n      else {\n          defaultGetZrXY(el, e, out);\n        }\n\n  return out;\n}\n\nfunction defaultGetZrXY(el, e, out) {\n  // This well-known method below does not support css transform.\n  var box = getBoundingClientRect(el);\n  out.zrX = e.clientX - box.left;\n  out.zrY = e.clientY - box.top;\n}\n/**\n * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n * `calculate` is optional, default false.\n */\n\n\nfunction normalizeEvent(el, e, calculate) {\n  e = e || window.event;\n\n  if (e.zrX != null) {\n    return e;\n  }\n\n  var eventType = e.type;\n  var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n  if (!isTouch) {\n    clientToLocal(el, e, e, calculate);\n    e.zrDelta = e.wheelDelta ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n  } else {\n    var touch = eventType != 'touchend' ? e.targetTouches[0] : e.changedTouches[0];\n    touch && clientToLocal(el, touch, e, calculate);\n  } // Add which for click: 1 === left; 2 === middle; 3 === right; otherwise: 0;\n  // See jQuery: https://github.com/jquery/jquery/blob/master/src/event.js\n  // If e.which has been defined, if may be readonly,\n  // see: https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/which\n\n\n  var button = e.button;\n\n  if (e.which == null && button !== undefined && MOUSE_EVENT_REG.test(e.type)) {\n    e.which = button & 1 ? 1 : button & 2 ? 3 : button & 4 ? 2 : 0;\n  }\n\n  return e;\n}\n\nfunction addEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    el.addEventListener(name, handler);\n  } else {\n    el.attachEvent('on' + name, handler);\n  }\n}\n\nfunction removeEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    el.removeEventListener(name, handler);\n  } else {\n    el.detachEvent('on' + name, handler);\n  }\n}\n/**\n * preventDefault and stopPropagation.\n * Notice: do not do that in zrender. Upper application\n * do that if necessary.\n *\n * @memberOf module:zrender/core/event\n * @method\n * @param {Event} e : event对象\n */\n\n\nvar stop = isDomLevel2 ? function (e) {\n  e.preventDefault();\n  e.stopPropagation();\n  e.cancelBubble = true;\n} : function (e) {\n  e.returnValue = false;\n  e.cancelBubble = true;\n};\n\nfunction notLeftMouse(e) {\n  // If e.which is undefined, considered as left mouse event.\n  return e.which > 1;\n} // 做向上兼容\n\n\nexports.clientToLocal = clientToLocal;\nexports.normalizeEvent = normalizeEvent;\nexports.addEventListener = addEventListener;\nexports.removeEventListener = removeEventListener;\nexports.stop = stop;\nexports.notLeftMouse = notLeftMouse;\n\n/***/ }),\n\n/***/ 999:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _vector = __webpack_require__(984);\n\nvar v2Create = _vector.create;\nvar v2DistSquare = _vector.distSquare;\n\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\nvar mathPow = Math.pow;\nvar mathSqrt = Math.sqrt;\nvar EPSILON = 1e-8;\nvar EPSILON_NUMERIC = 1e-4;\nvar THREE_SQRT = mathSqrt(3);\nvar ONE_THIRD = 1 / 3; // 临时变量\n\nvar _v0 = v2Create();\n\nvar _v1 = v2Create();\n\nvar _v2 = v2Create();\n\nfunction isAroundZero(val) {\n  return val > -EPSILON && val < EPSILON;\n}\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * 计算三次贝塞尔值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return onet * onet * (onet * p0 + 3 * t * p1) + t * t * (t * p3 + 3 * onet * p2);\n}\n/**\n * 计算三次贝塞尔导数值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicDerivativeAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return 3 * (((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet + (p3 - p2) * t * t);\n}\n/**\n * 计算三次贝塞尔方程根，使用盛金公式\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} val\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction cubicRootAt(p0, p1, p2, p3, val, roots) {\n  // Evaluate roots of cubic functions\n  var a = p3 + 3 * (p1 - p2) - p0;\n  var b = 3 * (p2 - p1 * 2 + p0);\n  var c = 3 * (p1 - p0);\n  var d = p0 - val;\n  var A = b * b - 3 * a * c;\n  var B = b * c - 9 * a * d;\n  var C = c * c - 3 * b * d;\n  var n = 0;\n\n  if (isAroundZero(A) && isAroundZero(B)) {\n    if (isAroundZero(b)) {\n      roots[0] = 0;\n    } else {\n      var t1 = -c / b; //t1, t2, t3, b is not zero\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = B * B - 4 * A * C;\n\n    if (isAroundZero(disc)) {\n      var K = B / A;\n      var t1 = -b / a + K; // t1, a is not zero\n\n      var t2 = -K / 2; // t2, t3\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n      var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n\n      if (Y1 < 0) {\n        Y1 = -mathPow(-Y1, ONE_THIRD);\n      } else {\n        Y1 = mathPow(Y1, ONE_THIRD);\n      }\n\n      if (Y2 < 0) {\n        Y2 = -mathPow(-Y2, ONE_THIRD);\n      } else {\n        Y2 = mathPow(Y2, ONE_THIRD);\n      }\n\n      var t1 = (-b - (Y1 + Y2)) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else {\n      var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n      var theta = Math.acos(T) / 3;\n      var ASqrt = mathSqrt(A);\n      var tmp = Math.cos(theta);\n      var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n      var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n      var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n\n      if (t3 >= 0 && t3 <= 1) {\n        roots[n++] = t3;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算三次贝塞尔方程极限值的位置\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {Array.<number>} extrema\n * @return {number} 有效数目\n */\n\n\nfunction cubicExtrema(p0, p1, p2, p3, extrema) {\n  var b = 6 * p2 - 12 * p1 + 6 * p0;\n  var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n  var c = 3 * p1 - 3 * p0;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      extrema[0] = -b / (2 * a);\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        extrema[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 细分三次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction cubicSubdivide(p0, p1, p2, p3, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p23 = (p3 - p2) * t + p2;\n  var p012 = (p12 - p01) * t + p01;\n  var p123 = (p23 - p12) * t + p12;\n  var p0123 = (p123 - p012) * t + p012; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012;\n  out[3] = p0123; // Seg1\n\n  out[4] = p0123;\n  out[5] = p123;\n  out[6] = p23;\n  out[7] = p3;\n}\n/**\n * 投射点到三次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} [out] 投射点\n * @return {number}\n */\n\n\nfunction cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  var prev;\n  var next;\n  var d1;\n  var d2;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n    _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n    d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    prev = t - interval;\n    next = t + interval; // t - interval\n\n    _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n    _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n    d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = cubicAt(x0, x1, x2, x3, next);\n      _v2[1] = cubicAt(y0, y1, y2, y3, next);\n      d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = cubicAt(x0, x1, x2, x3, t);\n    out[1] = cubicAt(y0, y1, y2, y3, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n/**\n * 计算二次方贝塞尔值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticAt(p0, p1, p2, t) {\n  var onet = 1 - t;\n  return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n}\n/**\n * 计算二次方贝塞尔导数值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticDerivativeAt(p0, p1, p2, t) {\n  return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n}\n/**\n * 计算二次方贝塞尔方程根\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction quadraticRootAt(p0, p1, p2, val, roots) {\n  var a = p0 - 2 * p1 + p2;\n  var b = 2 * (p1 - p0);\n  var c = p0 - val;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      var t1 = -b / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算二次贝塞尔方程极限值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @return {number}\n */\n\n\nfunction quadraticExtremum(p0, p1, p2) {\n  var divider = p0 + p2 - 2 * p1;\n\n  if (divider === 0) {\n    // p1 is center of p0 and p2\n    return 0.5;\n  } else {\n    return (p0 - p1) / divider;\n  }\n}\n/**\n * 细分二次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction quadraticSubdivide(p0, p1, p2, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p012 = (p12 - p01) * t + p01; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012; // Seg1\n\n  out[3] = p012;\n  out[4] = p12;\n  out[5] = p2;\n}\n/**\n * 投射点到二次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} out 投射点\n * @return {number}\n */\n\n\nfunction quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = quadraticAt(x0, x1, x2, _t);\n    _v1[1] = quadraticAt(y0, y1, y2, _t);\n    var d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    var prev = t - interval;\n    var next = t + interval; // t - interval\n\n    _v1[0] = quadraticAt(x0, x1, x2, prev);\n    _v1[1] = quadraticAt(y0, y1, y2, prev);\n    var d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = quadraticAt(x0, x1, x2, next);\n      _v2[1] = quadraticAt(y0, y1, y2, next);\n      var d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = quadraticAt(x0, x1, x2, t);\n    out[1] = quadraticAt(y0, y1, y2, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n\nexports.cubicAt = cubicAt;\nexports.cubicDerivativeAt = cubicDerivativeAt;\nexports.cubicRootAt = cubicRootAt;\nexports.cubicExtrema = cubicExtrema;\nexports.cubicSubdivide = cubicSubdivide;\nexports.cubicProjectPoint = cubicProjectPoint;\nexports.quadraticAt = quadraticAt;\nexports.quadraticDerivativeAt = quadraticDerivativeAt;\nexports.quadraticRootAt = quadraticRootAt;\nexports.quadraticExtremum = quadraticExtremum;\nexports.quadraticSubdivide = quadraticSubdivide;\nexports.quadraticProjectPoint = quadraticProjectPoint;\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/LineReact.6e2c9c0b.chunk.js","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar _format = require(\"../util/format\");\n\nvar formatTime = _format.formatTime;\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\nvar getTooltipMarker = _format.getTooltipMarker;\n\nvar _clazz = require(\"../util/clazz\");\n\nvar set = _clazz.set;\nvar get = _clazz.get;\n\nvar modelUtil = require(\"../util/model\");\n\nvar ComponentModel = require(\"./Component\");\n\nvar colorPaletteMixin = require(\"./mixin/colorPalette\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\nvar SeriesModel = ComponentModel.extend({\n  type: 'series.__base__',\n\n  /**\n   * @readOnly\n   */\n  seriesIndex: 0,\n  // coodinateSystem will be injected in the echarts/CoordinateSystem\n  coordinateSystem: null,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * Data provided for legend\n   * @type {Function}\n   */\n  // PENDING\n  legendDataProvider: null,\n\n  /**\n   * Access path of color for visual\n   */\n  visualColorAccessPath: 'itemStyle.normal.color',\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  init: function (option, parentModel, ecModel, extraOpt) {\n    /**\n     * @type {number}\n     * @readOnly\n     */\n    this.seriesIndex = this.componentIndex;\n    this.mergeDefaultAndTheme(option, ecModel);\n    var data = this.getInitialData(option, ecModel);\n\n    /**\n     * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n     * @private\n     */\n    set(this, 'dataBeforeProcessed', data); // If we reverse the order (make data firstly, and then make\n    // dataBeforeProcessed by cloneShallow), cloneShallow will\n    // cause data.graph.data !== data when using\n    // module:echarts/data/Graph or module:echarts/data/Tree.\n    // See module:echarts/data/helper/linkList\n\n    this.restoreData();\n  },\n\n  /**\n   * Util for merge default and theme to option\n   * @param  {Object} option\n   * @param  {module:echarts/model/Global} ecModel\n   */\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? getLayoutParams(option) : {}; // Backward compat: using subType on theme.\n    // But if name duplicate between series subType\n    // (for example: parallel) add component mainType,\n    // add suffix 'Series'.\n\n    var themeSubType = this.subType;\n\n    if (ComponentModel.hasClass(themeSubType)) {\n      themeSubType += 'Series';\n    }\n\n    zrUtil.merge(option, ecModel.getTheme().get(this.subType));\n    zrUtil.merge(option, this.getDefaultOption()); // Default label emphasis `show`\n\n    modelUtil.defaultEmphasis(option.label, ['show']);\n    this.fillDataTextStyle(option.data);\n\n    if (layoutMode) {\n      mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (newSeriesOption, ecModel) {\n    newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n    this.fillDataTextStyle(newSeriesOption.data);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n    }\n\n    var data = this.getInitialData(newSeriesOption, ecModel); // TODO Merge data?\n\n    if (data) {\n      set(this, 'data', data);\n      set(this, 'dataBeforeProcessed', data.cloneShallow());\n    }\n  },\n  fillDataTextStyle: function (data) {\n    // Default data label emphasis `show`\n    // FIXME Tree structure data ?\n    // FIXME Performance ?\n    if (data) {\n      var props = ['show'];\n\n      for (var i = 0; i < data.length; i++) {\n        if (data[i] && data[i].label) {\n          modelUtil.defaultEmphasis(data[i].label, props);\n        }\n      }\n    }\n  },\n\n  /**\n   * Init a data structure from data related option in series\n   * Must be overwritten\n   */\n  getInitialData: function () {},\n\n  /**\n   * @param {string} [dataType]\n   * @return {module:echarts/data/List}\n   */\n  getData: function (dataType) {\n    var data = get(this, 'data');\n    return dataType == null ? data : data.getLinkedData(dataType);\n  },\n\n  /**\n   * @param {module:echarts/data/List} data\n   */\n  setData: function (data) {\n    set(this, 'data', data);\n  },\n\n  /**\n   * Get data before processed\n   * @return {module:echarts/data/List}\n   */\n  getRawData: function () {\n    return get(this, 'dataBeforeProcessed');\n  },\n\n  /**\n   * Coord dimension to data dimension.\n   *\n   * By default the result is the same as dimensions of series data.\n   * But in some series data dimensions are different from coord dimensions (i.e.\n   * candlestick and boxplot). Override this method to handle those cases.\n   *\n   * Coord dimension to data dimension can be one-to-many\n   *\n   * @param {string} coordDim\n   * @return {Array.<string>} dimensions on the axis.\n   */\n  coordDimToDataDim: function (coordDim) {\n    return modelUtil.coordDimToDataDim(this.getData(), coordDim);\n  },\n\n  /**\n   * Convert data dimension to coord dimension.\n   *\n   * @param {string|number} dataDim\n   * @return {string}\n   */\n  dataDimToCoordDim: function (dataDim) {\n    return modelUtil.dataDimToCoordDim(this.getData(), dataDim);\n  },\n\n  /**\n   * Get base axis if has coordinate system and has axis.\n   * By default use coordSys.getBaseAxis();\n   * Can be overrided for some chart.\n   * @return {type} description\n   */\n  getBaseAxis: function () {\n    var coordSys = this.coordinateSystem;\n    return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n  },\n  // FIXME\n\n  /**\n   * Default tooltip formatter\n   *\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    function formatArrayValue(value) {\n      var vertially = zrUtil.reduce(value, function (vertially, val, idx) {\n        var dimItem = data.getDimensionInfo(idx);\n        return vertially |= dimItem && dimItem.tooltip !== false && dimItem.tooltipName != null;\n      }, 0);\n      var result = [];\n      var tooltipDims = modelUtil.otherDimToDataDim(data, 'tooltip');\n      tooltipDims.length ? zrUtil.each(tooltipDims, function (dimIdx) {\n        setEachItem(data.get(dimIdx, dataIndex), dimIdx);\n      }) // By default, all dims is used on tooltip.\n      : zrUtil.each(value, setEachItem);\n\n      function setEachItem(val, dimIdx) {\n        var dimInfo = data.getDimensionInfo(dimIdx); // If `dimInfo.tooltip` is not set, show tooltip.\n\n        if (!dimInfo || dimInfo.otherDims.tooltip === false) {\n          return;\n        }\n\n        var dimType = dimInfo.type;\n        var valStr = (vertially ? '- ' + (dimInfo.tooltipName || dimInfo.name) + ': ' : '') + (dimType === 'ordinal' ? val + '' : dimType === 'time' ? multipleSeries ? '' : formatTime('yyyy/MM/dd hh:mm:ss', val) : addCommas(val));\n        valStr && result.push(encodeHTML(valStr));\n      }\n\n      return (vertially ? '<br/>' : '') + result.join(vertially ? '<br/>' : ', ');\n    }\n\n    var data = get(this, 'data');\n    var value = this.getRawValue(dataIndex);\n    var formattedValue = zrUtil.isArray(value) ? formatArrayValue(value) : encodeHTML(addCommas(value));\n    var name = data.getName(dataIndex);\n    var color = data.getItemVisual(dataIndex, 'color');\n\n    if (zrUtil.isObject(color) && color.colorStops) {\n      color = (color.colorStops[0] || {}).color;\n    }\n\n    color = color || 'transparent';\n    var colorEl = getTooltipMarker(color);\n    var seriesName = this.name; // FIXME\n\n    if (seriesName === '\\0-') {\n      // Not show '-'\n      seriesName = '';\n    }\n\n    seriesName = seriesName ? encodeHTML(seriesName) + (!multipleSeries ? '<br/>' : ': ') : '';\n    return !multipleSeries ? seriesName + colorEl + (name ? encodeHTML(name) + ': ' + formattedValue : formattedValue) : colorEl + seriesName + formattedValue;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isAnimationEnabled: function () {\n    if (env.node) {\n      return false;\n    }\n\n    var animationEnabled = this.getShallow('animation');\n\n    if (animationEnabled) {\n      if (this.getData().count() > this.getShallow('animationThreshold')) {\n        animationEnabled = false;\n      }\n    }\n\n    return animationEnabled;\n  },\n  restoreData: function () {\n    set(this, 'data', get(this, 'dataBeforeProcessed').cloneShallow());\n  },\n  getColorFromPalette: function (name, scope) {\n    var ecModel = this.ecModel; // PENDING\n\n    var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n\n    if (!color) {\n      color = ecModel.getColorFromPalette(name, scope);\n    }\n\n    return color;\n  },\n\n  /**\n   * Get data indices for show tooltip content. See tooltip.\n   * @abstract\n   * @param {Array.<string>|string} dim\n   * @param {Array.<number>} value\n   * @param {module:echarts/coord/single/SingleAxis} baseAxis\n   * @return {Object} {dataIndices, nestestValue}.\n   */\n  getAxisTooltipData: null,\n\n  /**\n   * See tooltip.\n   * @abstract\n   * @param {number} dataIndex\n   * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n   */\n  getTooltipPosition: null\n});\nzrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\nzrUtil.mixin(SeriesModel, colorPaletteMixin);\nvar _default = SeriesModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/Series.js\n// module id = 1000\n// module chunks = 0 1 2","/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\nvar arrySlice = Array.prototype.slice;\n/**\n * 事件分发器\n * @alias module:zrender/mixin/Eventful\n * @constructor\n */\n\nvar Eventful = function () {\n  this._$handlers = {};\n};\n\nEventful.prototype = {\n  constructor: Eventful,\n\n  /**\n   * 单次触发绑定，trigger后销毁\n   *\n   * @param {string} event 事件名\n   * @param {Function} handler 响应函数\n   * @param {Object} context\n   */\n  one: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: true,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 绑定事件\n   * @param {string} event 事件名\n   * @param {Function} handler 事件处理函数\n   * @param {Object} [context]\n   */\n  on: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: false,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 是否绑定了事件\n   * @param  {string}  event\n   * @return {boolean}\n   */\n  isSilent: function (event) {\n    var _h = this._$handlers;\n    return _h[event] && _h[event].length;\n  },\n\n  /**\n   * 解绑事件\n   * @param {string} event 事件名\n   * @param {Function} [handler] 事件处理函数\n   */\n  off: function (event, handler) {\n    var _h = this._$handlers;\n\n    if (!event) {\n      this._$handlers = {};\n      return this;\n    }\n\n    if (handler) {\n      if (_h[event]) {\n        var newList = [];\n\n        for (var i = 0, l = _h[event].length; i < l; i++) {\n          if (_h[event][i]['h'] != handler) {\n            newList.push(_h[event][i]);\n          }\n        }\n\n        _h[event] = newList;\n      }\n\n      if (_h[event] && _h[event].length === 0) {\n        delete _h[event];\n      }\n    } else {\n      delete _h[event];\n    }\n\n    return this;\n  },\n\n  /**\n   * 事件分发\n   *\n   * @param {string} type 事件类型\n   */\n  trigger: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 3) {\n        args = arrySlice.call(args, 1);\n      }\n\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(_h[i]['ctx']);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(_h[i]['ctx'], args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * 带有context的事件分发, 最后一个参数是事件回调的context\n   * @param {string} type 事件类型\n   */\n  triggerWithContext: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 4) {\n        args = arrySlice.call(args, 1, args.length - 1);\n      }\n\n      var ctx = args[args.length - 1];\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(ctx);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(ctx, args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(ctx, args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(ctx, args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  }\n}; // 对象可以通过 onxxxx 绑定事件\n\n/**\n * @event module:zrender/mixin/Eventful#onclick\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseout\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousemove\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousewheel\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousedown\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseup\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrag\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragstart\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragend\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragenter\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragleave\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrop\n * @type {Function}\n * @default null\n */\n\nvar _default = Eventful;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/mixin/Eventful.js\n// module id = 1001\n// module chunks = 0 1 2","var LRU = require(\"../core/LRU\");\n\nvar kCSSColorTable = {\n  'transparent': [0, 0, 0, 0],\n  'aliceblue': [240, 248, 255, 1],\n  'antiquewhite': [250, 235, 215, 1],\n  'aqua': [0, 255, 255, 1],\n  'aquamarine': [127, 255, 212, 1],\n  'azure': [240, 255, 255, 1],\n  'beige': [245, 245, 220, 1],\n  'bisque': [255, 228, 196, 1],\n  'black': [0, 0, 0, 1],\n  'blanchedalmond': [255, 235, 205, 1],\n  'blue': [0, 0, 255, 1],\n  'blueviolet': [138, 43, 226, 1],\n  'brown': [165, 42, 42, 1],\n  'burlywood': [222, 184, 135, 1],\n  'cadetblue': [95, 158, 160, 1],\n  'chartreuse': [127, 255, 0, 1],\n  'chocolate': [210, 105, 30, 1],\n  'coral': [255, 127, 80, 1],\n  'cornflowerblue': [100, 149, 237, 1],\n  'cornsilk': [255, 248, 220, 1],\n  'crimson': [220, 20, 60, 1],\n  'cyan': [0, 255, 255, 1],\n  'darkblue': [0, 0, 139, 1],\n  'darkcyan': [0, 139, 139, 1],\n  'darkgoldenrod': [184, 134, 11, 1],\n  'darkgray': [169, 169, 169, 1],\n  'darkgreen': [0, 100, 0, 1],\n  'darkgrey': [169, 169, 169, 1],\n  'darkkhaki': [189, 183, 107, 1],\n  'darkmagenta': [139, 0, 139, 1],\n  'darkolivegreen': [85, 107, 47, 1],\n  'darkorange': [255, 140, 0, 1],\n  'darkorchid': [153, 50, 204, 1],\n  'darkred': [139, 0, 0, 1],\n  'darksalmon': [233, 150, 122, 1],\n  'darkseagreen': [143, 188, 143, 1],\n  'darkslateblue': [72, 61, 139, 1],\n  'darkslategray': [47, 79, 79, 1],\n  'darkslategrey': [47, 79, 79, 1],\n  'darkturquoise': [0, 206, 209, 1],\n  'darkviolet': [148, 0, 211, 1],\n  'deeppink': [255, 20, 147, 1],\n  'deepskyblue': [0, 191, 255, 1],\n  'dimgray': [105, 105, 105, 1],\n  'dimgrey': [105, 105, 105, 1],\n  'dodgerblue': [30, 144, 255, 1],\n  'firebrick': [178, 34, 34, 1],\n  'floralwhite': [255, 250, 240, 1],\n  'forestgreen': [34, 139, 34, 1],\n  'fuchsia': [255, 0, 255, 1],\n  'gainsboro': [220, 220, 220, 1],\n  'ghostwhite': [248, 248, 255, 1],\n  'gold': [255, 215, 0, 1],\n  'goldenrod': [218, 165, 32, 1],\n  'gray': [128, 128, 128, 1],\n  'green': [0, 128, 0, 1],\n  'greenyellow': [173, 255, 47, 1],\n  'grey': [128, 128, 128, 1],\n  'honeydew': [240, 255, 240, 1],\n  'hotpink': [255, 105, 180, 1],\n  'indianred': [205, 92, 92, 1],\n  'indigo': [75, 0, 130, 1],\n  'ivory': [255, 255, 240, 1],\n  'khaki': [240, 230, 140, 1],\n  'lavender': [230, 230, 250, 1],\n  'lavenderblush': [255, 240, 245, 1],\n  'lawngreen': [124, 252, 0, 1],\n  'lemonchiffon': [255, 250, 205, 1],\n  'lightblue': [173, 216, 230, 1],\n  'lightcoral': [240, 128, 128, 1],\n  'lightcyan': [224, 255, 255, 1],\n  'lightgoldenrodyellow': [250, 250, 210, 1],\n  'lightgray': [211, 211, 211, 1],\n  'lightgreen': [144, 238, 144, 1],\n  'lightgrey': [211, 211, 211, 1],\n  'lightpink': [255, 182, 193, 1],\n  'lightsalmon': [255, 160, 122, 1],\n  'lightseagreen': [32, 178, 170, 1],\n  'lightskyblue': [135, 206, 250, 1],\n  'lightslategray': [119, 136, 153, 1],\n  'lightslategrey': [119, 136, 153, 1],\n  'lightsteelblue': [176, 196, 222, 1],\n  'lightyellow': [255, 255, 224, 1],\n  'lime': [0, 255, 0, 1],\n  'limegreen': [50, 205, 50, 1],\n  'linen': [250, 240, 230, 1],\n  'magenta': [255, 0, 255, 1],\n  'maroon': [128, 0, 0, 1],\n  'mediumaquamarine': [102, 205, 170, 1],\n  'mediumblue': [0, 0, 205, 1],\n  'mediumorchid': [186, 85, 211, 1],\n  'mediumpurple': [147, 112, 219, 1],\n  'mediumseagreen': [60, 179, 113, 1],\n  'mediumslateblue': [123, 104, 238, 1],\n  'mediumspringgreen': [0, 250, 154, 1],\n  'mediumturquoise': [72, 209, 204, 1],\n  'mediumvioletred': [199, 21, 133, 1],\n  'midnightblue': [25, 25, 112, 1],\n  'mintcream': [245, 255, 250, 1],\n  'mistyrose': [255, 228, 225, 1],\n  'moccasin': [255, 228, 181, 1],\n  'navajowhite': [255, 222, 173, 1],\n  'navy': [0, 0, 128, 1],\n  'oldlace': [253, 245, 230, 1],\n  'olive': [128, 128, 0, 1],\n  'olivedrab': [107, 142, 35, 1],\n  'orange': [255, 165, 0, 1],\n  'orangered': [255, 69, 0, 1],\n  'orchid': [218, 112, 214, 1],\n  'palegoldenrod': [238, 232, 170, 1],\n  'palegreen': [152, 251, 152, 1],\n  'paleturquoise': [175, 238, 238, 1],\n  'palevioletred': [219, 112, 147, 1],\n  'papayawhip': [255, 239, 213, 1],\n  'peachpuff': [255, 218, 185, 1],\n  'peru': [205, 133, 63, 1],\n  'pink': [255, 192, 203, 1],\n  'plum': [221, 160, 221, 1],\n  'powderblue': [176, 224, 230, 1],\n  'purple': [128, 0, 128, 1],\n  'red': [255, 0, 0, 1],\n  'rosybrown': [188, 143, 143, 1],\n  'royalblue': [65, 105, 225, 1],\n  'saddlebrown': [139, 69, 19, 1],\n  'salmon': [250, 128, 114, 1],\n  'sandybrown': [244, 164, 96, 1],\n  'seagreen': [46, 139, 87, 1],\n  'seashell': [255, 245, 238, 1],\n  'sienna': [160, 82, 45, 1],\n  'silver': [192, 192, 192, 1],\n  'skyblue': [135, 206, 235, 1],\n  'slateblue': [106, 90, 205, 1],\n  'slategray': [112, 128, 144, 1],\n  'slategrey': [112, 128, 144, 1],\n  'snow': [255, 250, 250, 1],\n  'springgreen': [0, 255, 127, 1],\n  'steelblue': [70, 130, 180, 1],\n  'tan': [210, 180, 140, 1],\n  'teal': [0, 128, 128, 1],\n  'thistle': [216, 191, 216, 1],\n  'tomato': [255, 99, 71, 1],\n  'turquoise': [64, 224, 208, 1],\n  'violet': [238, 130, 238, 1],\n  'wheat': [245, 222, 179, 1],\n  'white': [255, 255, 255, 1],\n  'whitesmoke': [245, 245, 245, 1],\n  'yellow': [255, 255, 0, 1],\n  'yellowgreen': [154, 205, 50, 1]\n};\n\nfunction clampCssByte(i) {\n  // Clamp to integer 0 .. 255.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 255 ? 255 : i;\n}\n\nfunction clampCssAngle(i) {\n  // Clamp to integer 0 .. 360.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 360 ? 360 : i;\n}\n\nfunction clampCssFloat(f) {\n  // Clamp to float 0.0 .. 1.0.\n  return f < 0 ? 0 : f > 1 ? 1 : f;\n}\n\nfunction parseCssInt(str) {\n  // int or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssByte(parseFloat(str) / 100 * 255);\n  }\n\n  return clampCssByte(parseInt(str, 10));\n}\n\nfunction parseCssFloat(str) {\n  // float or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssFloat(parseFloat(str) / 100);\n  }\n\n  return clampCssFloat(parseFloat(str));\n}\n\nfunction cssHueToRgb(m1, m2, h) {\n  if (h < 0) {\n    h += 1;\n  } else if (h > 1) {\n    h -= 1;\n  }\n\n  if (h * 6 < 1) {\n    return m1 + (m2 - m1) * h * 6;\n  }\n\n  if (h * 2 < 1) {\n    return m2;\n  }\n\n  if (h * 3 < 2) {\n    return m1 + (m2 - m1) * (2 / 3 - h) * 6;\n  }\n\n  return m1;\n}\n\nfunction lerpNumber(a, b, p) {\n  return a + (b - a) * p;\n}\n\nfunction setRgba(out, r, g, b, a) {\n  out[0] = r;\n  out[1] = g;\n  out[2] = b;\n  out[3] = a;\n  return out;\n}\n\nfunction copyRgba(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\nvar colorCache = new LRU(20);\nvar lastRemovedArr = null;\n\nfunction putToCache(colorStr, rgbaArr) {\n  // Reuse removed array\n  if (lastRemovedArr) {\n    copyRgba(lastRemovedArr, rgbaArr);\n  }\n\n  lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || rgbaArr.slice());\n}\n/**\n * @param {string} colorStr\n * @param {Array.<number>} out\n * @return {Array.<number>}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction parse(colorStr, rgbaArr) {\n  if (!colorStr) {\n    return;\n  }\n\n  rgbaArr = rgbaArr || [];\n  var cached = colorCache.get(colorStr);\n\n  if (cached) {\n    return copyRgba(rgbaArr, cached);\n  } // colorStr may be not string\n\n\n  colorStr = colorStr + ''; // Remove all whitespace, not compliant, but should just be more accepting.\n\n  var str = colorStr.replace(/ /g, '').toLowerCase(); // Color keywords (and transparent) lookup.\n\n  if (str in kCSSColorTable) {\n    copyRgba(rgbaArr, kCSSColorTable[str]);\n    putToCache(colorStr, rgbaArr);\n    return rgbaArr;\n  } // #abc and #abc123 syntax.\n\n\n  if (str.charAt(0) === '#') {\n    if (str.length === 4) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xfff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xf00) >> 4 | (iv & 0xf00) >> 8, iv & 0xf0 | (iv & 0xf0) >> 4, iv & 0xf | (iv & 0xf) << 4, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    } else if (str.length === 7) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xffffff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xff0000) >> 16, (iv & 0xff00) >> 8, iv & 0xff, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    }\n\n    return;\n  }\n\n  var op = str.indexOf('('),\n      ep = str.indexOf(')');\n\n  if (op !== -1 && ep + 1 === str.length) {\n    var fname = str.substr(0, op);\n    var params = str.substr(op + 1, ep - (op + 1)).split(',');\n    var alpha = 1; // To allow case fallthrough.\n\n    switch (fname) {\n      case 'rgba':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        alpha = parseCssFloat(params.pop());\n      // jshint ignore:line\n      // Fall through.\n\n      case 'rgb':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        setRgba(rgbaArr, parseCssInt(params[0]), parseCssInt(params[1]), parseCssInt(params[2]), alpha);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsla':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        params[3] = parseCssFloat(params[3]);\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsl':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      default:\n        return;\n    }\n  }\n\n  setRgba(rgbaArr, 0, 0, 0, 1);\n  return;\n}\n/**\n * @param {Array.<number>} hsla\n * @param {Array.<number>} rgba\n * @return {Array.<number>} rgba\n */\n\n\nfunction hsla2rgba(hsla, rgba) {\n  var h = (parseFloat(hsla[0]) % 360 + 360) % 360 / 360; // 0 .. 1\n  // NOTE(deanm): According to the CSS spec s/l should only be\n  // percentages, but we don't bother and let float or percentage.\n\n  var s = parseCssFloat(hsla[1]);\n  var l = parseCssFloat(hsla[2]);\n  var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n  var m1 = l * 2 - m2;\n  rgba = rgba || [];\n  setRgba(rgba, clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255), clampCssByte(cssHueToRgb(m1, m2, h) * 255), clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255), 1);\n\n  if (hsla.length === 4) {\n    rgba[3] = hsla[3];\n  }\n\n  return rgba;\n}\n/**\n * @param {Array.<number>} rgba\n * @return {Array.<number>} hsla\n */\n\n\nfunction rgba2hsla(rgba) {\n  if (!rgba) {\n    return;\n  } // RGB from 0 to 255\n\n\n  var R = rgba[0] / 255;\n  var G = rgba[1] / 255;\n  var B = rgba[2] / 255;\n  var vMin = Math.min(R, G, B); // Min. value of RGB\n\n  var vMax = Math.max(R, G, B); // Max. value of RGB\n\n  var delta = vMax - vMin; // Delta RGB value\n\n  var L = (vMax + vMin) / 2;\n  var H;\n  var S; // HSL results from 0 to 1\n\n  if (delta === 0) {\n    H = 0;\n    S = 0;\n  } else {\n    if (L < 0.5) {\n      S = delta / (vMax + vMin);\n    } else {\n      S = delta / (2 - vMax - vMin);\n    }\n\n    var deltaR = ((vMax - R) / 6 + delta / 2) / delta;\n    var deltaG = ((vMax - G) / 6 + delta / 2) / delta;\n    var deltaB = ((vMax - B) / 6 + delta / 2) / delta;\n\n    if (R === vMax) {\n      H = deltaB - deltaG;\n    } else if (G === vMax) {\n      H = 1 / 3 + deltaR - deltaB;\n    } else if (B === vMax) {\n      H = 2 / 3 + deltaG - deltaR;\n    }\n\n    if (H < 0) {\n      H += 1;\n    }\n\n    if (H > 1) {\n      H -= 1;\n    }\n  }\n\n  var hsla = [H * 360, S, L];\n\n  if (rgba[3] != null) {\n    hsla.push(rgba[3]);\n  }\n\n  return hsla;\n}\n/**\n * @param {string} color\n * @param {number} level\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction lift(color, level) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    for (var i = 0; i < 3; i++) {\n      if (level < 0) {\n        colorArr[i] = colorArr[i] * (1 - level) | 0;\n      } else {\n        colorArr[i] = (255 - colorArr[i]) * level + colorArr[i] | 0;\n      }\n    }\n\n    return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n  }\n}\n/**\n * @param {string} color\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction toHex(color) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + +colorArr[2]).toString(16).slice(1);\n  }\n}\n/**\n * Map value to color. Faster than lerp methods because color is represented by rgba array.\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<Array.<number>>} colors List of rgba color array\n * @param {Array.<number>} [out] Mapped gba color array\n * @return {Array.<number>} will be null/undefined if input illegal.\n */\n\n\nfunction fastLerp(normalizedValue, colors, out) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  out = out || [];\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = colors[leftIndex];\n  var rightColor = colors[rightIndex];\n  var dv = value - leftIndex;\n  out[0] = clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv));\n  out[1] = clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv));\n  out[2] = clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv));\n  out[3] = clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv));\n  return out;\n}\n/**\n * @deprecated\n */\n\n\nvar fastMapToColor = fastLerp;\n/**\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<string>} colors Color list.\n * @param {boolean=} fullOutput Default false.\n * @return {(string|Object)} Result color. If fullOutput,\n *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n * @memberOf module:zrender/util/color\n */\n\nfunction lerp(normalizedValue, colors, fullOutput) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = parse(colors[leftIndex]);\n  var rightColor = parse(colors[rightIndex]);\n  var dv = value - leftIndex;\n  var color = stringify([clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv)), clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv)), clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv)), clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv))], 'rgba');\n  return fullOutput ? {\n    color: color,\n    leftIndex: leftIndex,\n    rightIndex: rightIndex,\n    value: value\n  } : color;\n}\n/**\n * @deprecated\n */\n\n\nvar mapToColor = lerp;\n/**\n * @param {string} color\n * @param {number=} h 0 ~ 360, ignore when null.\n * @param {number=} s 0 ~ 1, ignore when null.\n * @param {number=} l 0 ~ 1, ignore when null.\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\nfunction modifyHSL(color, h, s, l) {\n  color = parse(color);\n\n  if (color) {\n    color = rgba2hsla(color);\n    h != null && (color[0] = clampCssAngle(h));\n    s != null && (color[1] = parseCssFloat(s));\n    l != null && (color[2] = parseCssFloat(l));\n    return stringify(hsla2rgba(color), 'rgba');\n  }\n}\n/**\n * @param {string} color\n * @param {number=} alpha 0 ~ 1\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\n\nfunction modifyAlpha(color, alpha) {\n  color = parse(color);\n\n  if (color && alpha != null) {\n    color[3] = clampCssFloat(alpha);\n    return stringify(color, 'rgba');\n  }\n}\n/**\n * @param {Array.<number>} arrColor like [12,33,44,0.4]\n * @param {string} type 'rgba', 'hsva', ...\n * @return {string} Result color. (If input illegal, return undefined).\n */\n\n\nfunction stringify(arrColor, type) {\n  if (!arrColor || !arrColor.length) {\n    return;\n  }\n\n  var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n\n  if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n    colorStr += ',' + arrColor[3];\n  }\n\n  return type + '(' + colorStr + ')';\n}\n\nexports.parse = parse;\nexports.lift = lift;\nexports.toHex = toHex;\nexports.fastLerp = fastLerp;\nexports.fastMapToColor = fastMapToColor;\nexports.lerp = lerp;\nexports.mapToColor = mapToColor;\nexports.modifyHSL = modifyHSL;\nexports.modifyAlpha = modifyAlpha;\nexports.stringify = stringify;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/tool/color.js\n// module id = 1002\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"./graphic\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\n// Symbol factory\n\n/**\n * Triangle shape\n * @inner\n */\nvar Triangle = graphic.extendShape({\n  type: 'triangle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy + height);\n    path.lineTo(cx - width, cy + height);\n    path.closePath();\n  }\n});\n/**\n * Diamond shape\n * @inner\n */\n\nvar Diamond = graphic.extendShape({\n  type: 'diamond',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy);\n    path.lineTo(cx, cy + height);\n    path.lineTo(cx - width, cy);\n    path.closePath();\n  }\n});\n/**\n * Pin shape\n * @inner\n */\n\nvar Pin = graphic.extendShape({\n  type: 'pin',\n  shape: {\n    // x, y on the cusp\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var w = shape.width / 5 * 3; // Height must be larger than width\n\n    var h = Math.max(w, shape.height);\n    var r = w / 2; // Dist on y with tangent point and circle center\n\n    var dy = r * r / (h - r);\n    var cy = y - h + r + dy;\n    var angle = Math.asin(dy / r); // Dist on x with tangent point and circle center\n\n    var dx = Math.cos(angle) * r;\n    var tanX = Math.sin(angle);\n    var tanY = Math.cos(angle);\n    var cpLen = r * 0.6;\n    var cpLen2 = r * 0.7;\n    path.moveTo(x - dx, cy + dy);\n    path.arc(x, cy, r, Math.PI - angle, Math.PI * 2 + angle);\n    path.bezierCurveTo(x + dx - tanX * cpLen, cy + dy + tanY * cpLen, x, y - cpLen2, x, y);\n    path.bezierCurveTo(x, y - cpLen2, x - dx + tanX * cpLen, cy + dy + tanY * cpLen, x - dx, cy + dy);\n    path.closePath();\n  }\n});\n/**\n * Arrow shape\n * @inner\n */\n\nvar Arrow = graphic.extendShape({\n  type: 'arrow',\n  shape: {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var height = shape.height;\n    var width = shape.width;\n    var x = shape.x;\n    var y = shape.y;\n    var dx = width / 3 * 2;\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + dx, y + height);\n    ctx.lineTo(x, y + height / 4 * 3);\n    ctx.lineTo(x - dx, y + height);\n    ctx.lineTo(x, y);\n    ctx.closePath();\n  }\n});\n/**\n * Map of path contructors\n * @type {Object.<string, module:zrender/graphic/Path>}\n */\n\nvar symbolCtors = {\n  line: graphic.Line,\n  rect: graphic.Rect,\n  roundRect: graphic.Rect,\n  square: graphic.Rect,\n  circle: graphic.Circle,\n  diamond: Diamond,\n  pin: Pin,\n  arrow: Arrow,\n  triangle: Triangle\n};\nvar symbolShapeMakers = {\n  line: function (x, y, w, h, shape) {\n    // FIXME\n    shape.x1 = x;\n    shape.y1 = y + h / 2;\n    shape.x2 = x + w;\n    shape.y2 = y + h / 2;\n  },\n  rect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n  },\n  roundRect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n    shape.r = Math.min(w, h) / 4;\n  },\n  square: function (x, y, w, h, shape) {\n    var size = Math.min(w, h);\n    shape.x = x;\n    shape.y = y;\n    shape.width = size;\n    shape.height = size;\n  },\n  circle: function (x, y, w, h, shape) {\n    // Put circle in the center of square\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.r = Math.min(w, h) / 2;\n  },\n  diamond: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  pin: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  arrow: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  triangle: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  }\n};\nvar symbolBuildProxies = {};\nzrUtil.each(symbolCtors, function (Ctor, name) {\n  symbolBuildProxies[name] = new Ctor();\n});\nvar SymbolClz = graphic.extendShape({\n  type: 'symbol',\n  shape: {\n    symbolType: '',\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  beforeBrush: function () {\n    var style = this.style;\n    var shape = this.shape; // FIXME\n\n    if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n      style.textPosition = ['50%', '40%'];\n      style.textAlign = 'center';\n      style.textVerticalAlign = 'middle';\n    }\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    var symbolType = shape.symbolType;\n    var proxySymbol = symbolBuildProxies[symbolType];\n\n    if (shape.symbolType !== 'none') {\n      if (!proxySymbol) {\n        // Default rect\n        symbolType = 'rect';\n        proxySymbol = symbolBuildProxies[symbolType];\n      }\n\n      symbolShapeMakers[symbolType](shape.x, shape.y, shape.width, shape.height, proxySymbol.shape);\n      proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n    }\n  }\n}); // Provide setColor helper method to avoid determine if set the fill or stroke outside\n\nfunction symbolPathSetColor(color, innerColor) {\n  if (this.type !== 'image') {\n    var symbolStyle = this.style;\n    var symbolShape = this.shape;\n\n    if (symbolShape && symbolShape.symbolType === 'line') {\n      symbolStyle.stroke = color;\n    } else if (this.__isEmptyBrush) {\n      symbolStyle.stroke = color;\n      symbolStyle.fill = innerColor || '#fff';\n    } else {\n      // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n      symbolStyle.fill && (symbolStyle.fill = color);\n      symbolStyle.stroke && (symbolStyle.stroke = color);\n    }\n\n    this.dirty(false);\n  }\n}\n/**\n * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n * @param {string} symbolType\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @param {string} color\n * @param {boolean} [keepAspect=false] whether to keep the ratio of w/h,\n *                            for path and image only.\n */\n\n\nfunction createSymbol(symbolType, x, y, w, h, color, keepAspect) {\n  // TODO Support image object, DynamicImage.\n  var isEmpty = symbolType.indexOf('empty') === 0;\n\n  if (isEmpty) {\n    symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n  }\n\n  var symbolPath;\n\n  if (symbolType.indexOf('image://') === 0) {\n    symbolPath = graphic.makeImage(symbolType.slice(8), new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else if (symbolType.indexOf('path://') === 0) {\n    symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else {\n    symbolPath = new SymbolClz({\n      shape: {\n        symbolType: symbolType,\n        x: x,\n        y: y,\n        width: w,\n        height: h\n      }\n    });\n  }\n\n  symbolPath.__isEmptyBrush = isEmpty;\n  symbolPath.setColor = symbolPathSetColor;\n  symbolPath.setColor(color);\n  return symbolPath;\n}\n\nexports.createSymbol = createSymbol;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/symbol.js\n// module id = 1003\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _model = require(\"../../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\n/**\n * Complete dimensions by data (guess dimension).\n */\nvar each = zrUtil.each;\nvar isString = zrUtil.isString;\nvar defaults = zrUtil.defaults;\nvar OTHER_DIMS = {\n  tooltip: 1,\n  label: 1,\n  itemName: 1\n};\n/**\n * Complete the dimensions array, by user defined `dimension` and `encode`,\n * and guessing from the data structure.\n * If no 'value' dimension specified, the first no-named dimension will be\n * named as 'value'.\n *\n * @param {Array.<string>} sysDims Necessary dimensions, like ['x', 'y'], which\n *      provides not only dim template, but also default order.\n *      `name` of each item provides default coord name.\n *      [{dimsDef: []}, ...] can be specified to give names.\n * @param {Array} data Data list. [[1, 2, 3], [2, 3, 4]].\n * @param {Object} [opt]\n * @param {Array.<Object|string>} [opt.dimsDef] option.series.dimensions User defined dimensions\n *      For example: ['asdf', {name, type}, ...].\n * @param {Object} [opt.encodeDef] option.series.encode {x: 2, y: [3, 1], tooltip: [1, 2], label: 3}\n * @param {string} [opt.extraPrefix] Prefix of name when filling the left dimensions.\n * @param {string} [opt.extraFromZero] If specified, extra dim names will be:\n *                      extraPrefix + 0, extraPrefix + extraBaseIndex + 1 ...\n *                      If not specified, extra dim names will be:\n *                      extraPrefix, extraPrefix + 0, extraPrefix + 1 ...\n * @param {number} [opt.dimCount] If not specified, guess by the first data item.\n * @return {Array.<Object>} [{\n *      name: string mandatory,\n *      coordDim: string mandatory,\n *      coordDimIndex: number mandatory,\n *      type: string optional,\n *      tooltipName: string optional,\n *      otherDims: {\n *          tooltip: number optional,\n *          label: number optional\n *      },\n *      isExtraCoord: boolean true or undefined.\n *      other props ...\n * }]\n */\n\nfunction completeDimensions(sysDims, data, opt) {\n  data = data || [];\n  opt = opt || {};\n  sysDims = (sysDims || []).slice();\n  var dimsDef = (opt.dimsDef || []).slice();\n  var encodeDef = zrUtil.createHashMap(opt.encodeDef);\n  var dataDimNameMap = zrUtil.createHashMap();\n  var coordDimNameMap = zrUtil.createHashMap(); // var valueCandidate;\n\n  var result = [];\n  var dimCount = opt.dimCount;\n\n  if (dimCount == null) {\n    var value0 = retrieveValue(data[0]);\n    dimCount = Math.max(zrUtil.isArray(value0) && value0.length || 1, sysDims.length, dimsDef.length);\n    each(sysDims, function (sysDimItem) {\n      var sysDimItemDimsDef = sysDimItem.dimsDef;\n      sysDimItemDimsDef && (dimCount = Math.max(dimCount, sysDimItemDimsDef.length));\n    });\n  } // Apply user defined dims (`name` and `type`) and init result.\n\n\n  for (var i = 0; i < dimCount; i++) {\n    var dimDefItem = isString(dimsDef[i]) ? {\n      name: dimsDef[i]\n    } : dimsDef[i] || {};\n    var userDimName = dimDefItem.name;\n    var resultItem = result[i] = {\n      otherDims: {}\n    }; // Name will be applied later for avoiding duplication.\n\n    if (userDimName != null && dataDimNameMap.get(userDimName) == null) {\n      // Only if `series.dimensions` is defined in option, tooltipName\n      // will be set, and dimension will be diplayed vertically in\n      // tooltip by default.\n      resultItem.name = resultItem.tooltipName = userDimName;\n      dataDimNameMap.set(userDimName, i);\n    }\n\n    dimDefItem.type != null && (resultItem.type = dimDefItem.type);\n  } // Set `coordDim` and `coordDimIndex` by `encodeDef` and normalize `encodeDef`.\n\n\n  encodeDef.each(function (dataDims, coordDim) {\n    dataDims = encodeDef.set(coordDim, normalizeToArray(dataDims).slice());\n    each(dataDims, function (resultDimIdx, coordDimIndex) {\n      // The input resultDimIdx can be dim name or index.\n      isString(resultDimIdx) && (resultDimIdx = dataDimNameMap.get(resultDimIdx));\n\n      if (resultDimIdx != null && resultDimIdx < dimCount) {\n        dataDims[coordDimIndex] = resultDimIdx;\n        applyDim(result[resultDimIdx], coordDim, coordDimIndex);\n      }\n    });\n  }); // Apply templetes and default order from `sysDims`.\n\n  var availDimIdx = 0;\n  each(sysDims, function (sysDimItem, sysDimIndex) {\n    var coordDim;\n    var sysDimItem;\n    var sysDimItemDimsDef;\n    var sysDimItemOtherDims;\n\n    if (isString(sysDimItem)) {\n      coordDim = sysDimItem;\n      sysDimItem = {};\n    } else {\n      coordDim = sysDimItem.name;\n      sysDimItem = zrUtil.clone(sysDimItem); // `coordDimIndex` should not be set directly.\n\n      sysDimItemDimsDef = sysDimItem.dimsDef;\n      sysDimItemOtherDims = sysDimItem.otherDims;\n      sysDimItem.name = sysDimItem.coordDim = sysDimItem.coordDimIndex = sysDimItem.dimsDef = sysDimItem.otherDims = null;\n    }\n\n    var dataDims = normalizeToArray(encodeDef.get(coordDim)); // dimensions provides default dim sequences.\n\n    if (!dataDims.length) {\n      for (var i = 0; i < (sysDimItemDimsDef && sysDimItemDimsDef.length || 1); i++) {\n        while (availDimIdx < result.length && result[availDimIdx].coordDim != null) {\n          availDimIdx++;\n        }\n\n        availDimIdx < result.length && dataDims.push(availDimIdx++);\n      }\n    } // Apply templates.\n\n\n    each(dataDims, function (resultDimIdx, coordDimIndex) {\n      var resultItem = result[resultDimIdx];\n      applyDim(defaults(resultItem, sysDimItem), coordDim, coordDimIndex);\n\n      if (resultItem.name == null && sysDimItemDimsDef) {\n        resultItem.name = resultItem.tooltipName = sysDimItemDimsDef[coordDimIndex];\n      }\n\n      sysDimItemOtherDims && defaults(resultItem.otherDims, sysDimItemOtherDims);\n    });\n  }); // Make sure the first extra dim is 'value'.\n\n  var extra = opt.extraPrefix || 'value'; // Set dim `name` and other `coordDim` and other props.\n\n  for (var resultDimIdx = 0; resultDimIdx < dimCount; resultDimIdx++) {\n    var resultItem = result[resultDimIdx] = result[resultDimIdx] || {};\n    var coordDim = resultItem.coordDim;\n    coordDim == null && (resultItem.coordDim = genName(extra, coordDimNameMap, opt.extraFromZero), resultItem.coordDimIndex = 0, resultItem.isExtraCoord = true);\n    resultItem.name == null && (resultItem.name = genName(resultItem.coordDim, dataDimNameMap));\n    resultItem.type == null && guessOrdinal(data, resultDimIdx) && (resultItem.type = 'ordinal');\n  }\n\n  return result;\n\n  function applyDim(resultItem, coordDim, coordDimIndex) {\n    if (OTHER_DIMS[coordDim]) {\n      resultItem.otherDims[coordDim] = coordDimIndex;\n    } else {\n      resultItem.coordDim = coordDim;\n      resultItem.coordDimIndex = coordDimIndex;\n      coordDimNameMap.set(coordDim, true);\n    }\n  }\n\n  function genName(name, map, fromZero) {\n    if (fromZero || map.get(name) != null) {\n      var i = 0;\n\n      while (map.get(name + i) != null) {\n        i++;\n      }\n\n      name += i;\n    }\n\n    map.set(name, true);\n    return name;\n  }\n} // The rule should not be complex, otherwise user might not\n// be able to known where the data is wrong.\n\n\nvar guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {\n  for (var i = 0, len = data.length; i < len; i++) {\n    var value = retrieveValue(data[i]);\n\n    if (!zrUtil.isArray(value)) {\n      return false;\n    }\n\n    var value = value[dimIndex]; // Consider usage convenience, '1', '2' will be treated as \"number\".\n    // `isFinit('')` get `true`.\n\n    if (value != null && isFinite(value) && value !== '') {\n      return false;\n    } else if (isString(value) && value !== '-') {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nfunction retrieveValue(o) {\n  return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value : o;\n}\n\nvar _default = completeDimensions;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/data/helper/completeDimensions.js\n// module id = 1004\n// module chunks = 0 1 2","var _default = {\n  toolbox: {\n    brush: {\n      title: {\n        rect: '矩形选择',\n        polygon: '圈选',\n        lineX: '横向选择',\n        lineY: '纵向选择',\n        keep: '保持选择',\n        clear: '清除选择'\n      }\n    },\n    dataView: {\n      title: '数据视图',\n      lang: ['数据视图', '关闭', '刷新']\n    },\n    dataZoom: {\n      title: {\n        zoom: '区域缩放',\n        back: '区域缩放还原'\n      }\n    },\n    magicType: {\n      title: {\n        line: '切换为折线图',\n        bar: '切换为柱状图',\n        stack: '切换为堆叠',\n        tiled: '切换为平铺'\n      }\n    },\n    restore: {\n      title: '还原'\n    },\n    saveAsImage: {\n      title: '保存为图片',\n      lang: ['右键另存为图片']\n    }\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/lang.js\n// module id = 1005\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar coordinateSystemCreators = {};\n\nfunction CoordinateSystemManager() {\n  this._coordinateSystems = [];\n}\n\nCoordinateSystemManager.prototype = {\n  constructor: CoordinateSystemManager,\n  create: function (ecModel, api) {\n    var coordinateSystems = [];\n    zrUtil.each(coordinateSystemCreators, function (creater, type) {\n      var list = creater.create(ecModel, api);\n      coordinateSystems = coordinateSystems.concat(list || []);\n    });\n    this._coordinateSystems = coordinateSystems;\n  },\n  update: function (ecModel, api) {\n    zrUtil.each(this._coordinateSystems, function (coordSys) {\n      // FIXME MUST have\n      coordSys.update && coordSys.update(ecModel, api);\n    });\n  },\n  getCoordinateSystems: function () {\n    return this._coordinateSystems.slice();\n  }\n};\n\nCoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n  coordinateSystemCreators[type] = coordinateSystemCreator;\n};\n\nCoordinateSystemManager.get = function (type) {\n  return coordinateSystemCreators[type];\n};\n\nvar _default = CoordinateSystemManager;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/CoordinateSystem.js\n// module id = 1006\n// module chunks = 0 1 2","var curve = require(\"./curve\");\n\nvar vec2 = require(\"./vector\");\n\nvar bbox = require(\"./bbox\");\n\nvar BoundingRect = require(\"./BoundingRect\");\n\nvar _config = require(\"../config\");\n\nvar dpr = _config.devicePixelRatio;\n\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n// TODO getTotalLength, getPointAtLength\nvar CMD = {\n  M: 1,\n  L: 2,\n  C: 3,\n  Q: 4,\n  A: 5,\n  Z: 6,\n  // Rect\n  R: 7\n}; // var CMD_MEM_SIZE = {\n//     M: 3,\n//     L: 3,\n//     C: 7,\n//     Q: 5,\n//     A: 9,\n//     R: 5,\n//     Z: 1\n// };\n\nvar min = [];\nvar max = [];\nvar min2 = [];\nvar max2 = [];\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathCos = Math.cos;\nvar mathSin = Math.sin;\nvar mathSqrt = Math.sqrt;\nvar mathAbs = Math.abs;\nvar hasTypedArray = typeof Float32Array != 'undefined';\n/**\n * @alias module:zrender/core/PathProxy\n * @constructor\n */\n\nvar PathProxy = function (notSaveData) {\n  this._saveData = !(notSaveData || false);\n\n  if (this._saveData) {\n    /**\n     * Path data. Stored as flat array\n     * @type {Array.<Object>}\n     */\n    this.data = [];\n  }\n\n  this._ctx = null;\n};\n/**\n * 快速计算Path包围盒（并不是最小包围盒）\n * @return {Object}\n */\n\n\nPathProxy.prototype = {\n  constructor: PathProxy,\n  _xi: 0,\n  _yi: 0,\n  _x0: 0,\n  _y0: 0,\n  // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n  _ux: 0,\n  _uy: 0,\n  _len: 0,\n  _lineDash: null,\n  _dashOffset: 0,\n  _dashIdx: 0,\n  _dashSum: 0,\n\n  /**\n   * @readOnly\n   */\n  setScale: function (sx, sy) {\n    this._ux = mathAbs(1 / dpr / sx) || 0;\n    this._uy = mathAbs(1 / dpr / sy) || 0;\n  },\n  getContext: function () {\n    return this._ctx;\n  },\n\n  /**\n   * @param  {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  beginPath: function (ctx) {\n    this._ctx = ctx;\n    ctx && ctx.beginPath();\n    ctx && (this.dpr = ctx.dpr); // Reset\n\n    if (this._saveData) {\n      this._len = 0;\n    }\n\n    if (this._lineDash) {\n      this._lineDash = null;\n      this._dashOffset = 0;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  moveTo: function (x, y) {\n    this.addData(CMD.M, x, y);\n    this._ctx && this._ctx.moveTo(x, y); // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n    // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n    // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n    // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n\n    this._x0 = x;\n    this._y0 = y;\n    this._xi = x;\n    this._yi = y;\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  lineTo: function (x, y) {\n    var exceedUnit = mathAbs(x - this._xi) > this._ux || mathAbs(y - this._yi) > this._uy // Force draw the first segment\n    || this._len < 5;\n    this.addData(CMD.L, x, y);\n\n    if (this._ctx && exceedUnit) {\n      this._needsDash() ? this._dashedLineTo(x, y) : this._ctx.lineTo(x, y);\n    }\n\n    if (exceedUnit) {\n      this._xi = x;\n      this._yi = y;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @param  {number} x3\n   * @param  {number} y3\n   * @return {module:zrender/core/PathProxy}\n   */\n  bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n    this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3) : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n    }\n\n    this._xi = x3;\n    this._yi = y3;\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @return {module:zrender/core/PathProxy}\n   */\n  quadraticCurveTo: function (x1, y1, x2, y2) {\n    this.addData(CMD.Q, x1, y1, x2, y2);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2) : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n    }\n\n    this._xi = x2;\n    this._yi = y2;\n    return this;\n  },\n\n  /**\n   * @param  {number} cx\n   * @param  {number} cy\n   * @param  {number} r\n   * @param  {number} startAngle\n   * @param  {number} endAngle\n   * @param  {boolean} anticlockwise\n   * @return {module:zrender/core/PathProxy}\n   */\n  arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n    this.addData(CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1);\n    this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n    this._xi = mathCos(endAngle) * r + cx;\n    this._yi = mathSin(endAngle) * r + cx;\n    return this;\n  },\n  // TODO\n  arcTo: function (x1, y1, x2, y2, radius) {\n    if (this._ctx) {\n      this._ctx.arcTo(x1, y1, x2, y2, radius);\n    }\n\n    return this;\n  },\n  // TODO\n  rect: function (x, y, w, h) {\n    this._ctx && this._ctx.rect(x, y, w, h);\n    this.addData(CMD.R, x, y, w, h);\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/PathProxy}\n   */\n  closePath: function () {\n    this.addData(CMD.Z);\n    var ctx = this._ctx;\n    var x0 = this._x0;\n    var y0 = this._y0;\n\n    if (ctx) {\n      this._needsDash() && this._dashedLineTo(x0, y0);\n      ctx.closePath();\n    }\n\n    this._xi = x0;\n    this._yi = y0;\n    return this;\n  },\n\n  /**\n   * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n   * stroke 同样\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  fill: function (ctx) {\n    ctx && ctx.fill();\n    this.toStatic();\n  },\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  stroke: function (ctx) {\n    ctx && ctx.stroke();\n    this.toStatic();\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDash: function (lineDash) {\n    if (lineDash instanceof Array) {\n      this._lineDash = lineDash;\n      this._dashIdx = 0;\n      var lineDashSum = 0;\n\n      for (var i = 0; i < lineDash.length; i++) {\n        lineDashSum += lineDash[i];\n      }\n\n      this._dashSum = lineDashSum;\n    }\n\n    return this;\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDashOffset: function (offset) {\n    this._dashOffset = offset;\n    return this;\n  },\n\n  /**\n   *\n   * @return {boolean}\n   */\n  len: function () {\n    return this._len;\n  },\n\n  /**\n   * 直接设置 Path 数据\n   */\n  setData: function (data) {\n    var len = data.length;\n\n    if (!(this.data && this.data.length == len) && hasTypedArray) {\n      this.data = new Float32Array(len);\n    }\n\n    for (var i = 0; i < len; i++) {\n      this.data[i] = data[i];\n    }\n\n    this._len = len;\n  },\n\n  /**\n   * 添加子路径\n   * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n   */\n  appendPath: function (path) {\n    if (!(path instanceof Array)) {\n      path = [path];\n    }\n\n    var len = path.length;\n    var appendSize = 0;\n    var offset = this._len;\n\n    for (var i = 0; i < len; i++) {\n      appendSize += path[i].len();\n    }\n\n    if (hasTypedArray && this.data instanceof Float32Array) {\n      this.data = new Float32Array(offset + appendSize);\n    }\n\n    for (var i = 0; i < len; i++) {\n      var appendPathData = path[i].data;\n\n      for (var k = 0; k < appendPathData.length; k++) {\n        this.data[offset++] = appendPathData[k];\n      }\n    }\n\n    this._len = offset;\n  },\n\n  /**\n   * 填充 Path 数据。\n   * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n   */\n  addData: function (cmd) {\n    if (!this._saveData) {\n      return;\n    }\n\n    var data = this.data;\n\n    if (this._len + arguments.length > data.length) {\n      // 因为之前的数组已经转换成静态的 Float32Array\n      // 所以不够用时需要扩展一个新的动态数组\n      this._expandData();\n\n      data = this.data;\n    }\n\n    for (var i = 0; i < arguments.length; i++) {\n      data[this._len++] = arguments[i];\n    }\n\n    this._prevCmd = cmd;\n  },\n  _expandData: function () {\n    // Only if data is Float32Array\n    if (!(this.data instanceof Array)) {\n      var newData = [];\n\n      for (var i = 0; i < this._len; i++) {\n        newData[i] = this.data[i];\n      }\n\n      this.data = newData;\n    }\n  },\n\n  /**\n   * If needs js implemented dashed line\n   * @return {boolean}\n   * @private\n   */\n  _needsDash: function () {\n    return this._lineDash;\n  },\n  _dashedLineTo: function (x1, y1) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    var dist = mathSqrt(dx * dx + dy * dy);\n    var x = x0;\n    var y = y0;\n    var dash;\n    var nDash = lineDash.length;\n    var idx;\n    dx /= dist;\n    dy /= dist;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum;\n    x -= offset * dx;\n    y -= offset * dy;\n\n    while (dx > 0 && x <= x1 || dx < 0 && x >= x1 || dx == 0 && (dy > 0 && y <= y1 || dy < 0 && y >= y1)) {\n      idx = this._dashIdx;\n      dash = lineDash[idx];\n      x += dx * dash;\n      y += dy * dash;\n      this._dashIdx = (idx + 1) % nDash; // Skip positive offset\n\n      if (dx > 0 && x < x0 || dx < 0 && x > x0 || dy > 0 && y < y0 || dy < 0 && y > y0) {\n        continue;\n      }\n\n      ctx[idx % 2 ? 'moveTo' : 'lineTo'](dx >= 0 ? mathMin(x, x1) : mathMax(x, x1), dy >= 0 ? mathMin(y, y1) : mathMax(y, y1));\n    } // Offset for next lineTo\n\n\n    dx = x - x1;\n    dy = y - y1;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  // Not accurate dashed line to\n  _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var t;\n    var dx;\n    var dy;\n    var cubicAt = curve.cubicAt;\n    var bezierLen = 0;\n    var idx = this._dashIdx;\n    var nDash = lineDash.length;\n    var x;\n    var y;\n    var tmpLen = 0;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum; // Bezier approx length\n\n    for (t = 0; t < 1; t += 0.1) {\n      dx = cubicAt(x0, x1, x2, x3, t + 0.1) - cubicAt(x0, x1, x2, x3, t);\n      dy = cubicAt(y0, y1, y2, y3, t + 0.1) - cubicAt(y0, y1, y2, y3, t);\n      bezierLen += mathSqrt(dx * dx + dy * dy);\n    } // Find idx after add offset\n\n\n    for (; idx < nDash; idx++) {\n      tmpLen += lineDash[idx];\n\n      if (tmpLen > offset) {\n        break;\n      }\n    }\n\n    t = (tmpLen - offset) / bezierLen;\n\n    while (t <= 1) {\n      x = cubicAt(x0, x1, x2, x3, t);\n      y = cubicAt(y0, y1, y2, y3, t); // Use line to approximate dashed bezier\n      // Bad result if dash is long\n\n      idx % 2 ? ctx.moveTo(x, y) : ctx.lineTo(x, y);\n      t += lineDash[idx] / bezierLen;\n      idx = (idx + 1) % nDash;\n    } // Finish the last segment and calculate the new offset\n\n\n    idx % 2 !== 0 && ctx.lineTo(x3, y3);\n    dx = x3 - x;\n    dy = y3 - y;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  _dashedQuadraticTo: function (x1, y1, x2, y2) {\n    // Convert quadratic to cubic using degree elevation\n    var x3 = x2;\n    var y3 = y2;\n    x2 = (x2 + 2 * x1) / 3;\n    y2 = (y2 + 2 * y1) / 3;\n    x1 = (this._xi + 2 * x1) / 3;\n    y1 = (this._yi + 2 * y1) / 3;\n\n    this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n  },\n\n  /**\n   * 转成静态的 Float32Array 减少堆内存占用\n   * Convert dynamic array to static Float32Array\n   */\n  toStatic: function () {\n    var data = this.data;\n\n    if (data instanceof Array) {\n      data.length = this._len;\n\n      if (hasTypedArray) {\n        this.data = new Float32Array(data);\n      }\n    }\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n    max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n    var data = this.data;\n    var xi = 0;\n    var yi = 0;\n    var x0 = 0;\n    var y0 = 0;\n\n    for (var i = 0; i < data.length;) {\n      var cmd = data[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = data[i];\n        yi = data[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n          // 在 closePath 的时候使用\n          x0 = data[i++];\n          y0 = data[i++];\n          xi = x0;\n          yi = y0;\n          min2[0] = x0;\n          min2[1] = y0;\n          max2[0] = x0;\n          max2[1] = y0;\n          break;\n\n        case CMD.L:\n          bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.C:\n          bbox.fromCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.Q:\n          bbox.fromQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.A:\n          // TODO Arc 判断的开销比较大\n          var cx = data[i++];\n          var cy = data[i++];\n          var rx = data[i++];\n          var ry = data[i++];\n          var startAngle = data[i++];\n          var endAngle = data[i++] + startAngle; // TODO Arc 旋转\n\n          var psi = data[i++];\n          var anticlockwise = 1 - data[i++];\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(startAngle) * rx + cx;\n            y0 = mathSin(startAngle) * ry + cy;\n          }\n\n          bbox.fromArc(cx, cy, rx, ry, startAngle, endAngle, anticlockwise, min2, max2);\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = data[i++];\n          y0 = yi = data[i++];\n          var width = data[i++];\n          var height = data[i++]; // Use fromLine\n\n          bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n          break;\n\n        case CMD.Z:\n          xi = x0;\n          yi = y0;\n          break;\n      } // Union\n\n\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * Rebuild path from current data\n   * Rebuild path will not consider javascript implemented line dash.\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  rebuildPath: function (ctx) {\n    var d = this.data;\n    var x0, y0;\n    var xi, yi;\n    var x, y;\n    var ux = this._ux;\n    var uy = this._uy;\n    var len = this._len;\n\n    for (var i = 0; i < len;) {\n      var cmd = d[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = d[i];\n        yi = d[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          x0 = xi = d[i++];\n          y0 = yi = d[i++];\n          ctx.moveTo(xi, yi);\n          break;\n\n        case CMD.L:\n          x = d[i++];\n          y = d[i++]; // Not draw too small seg between\n\n          if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n            ctx.lineTo(x, y);\n            xi = x;\n            yi = y;\n          }\n\n          break;\n\n        case CMD.C:\n          ctx.bezierCurveTo(d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.Q:\n          ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.A:\n          var cx = d[i++];\n          var cy = d[i++];\n          var rx = d[i++];\n          var ry = d[i++];\n          var theta = d[i++];\n          var dTheta = d[i++];\n          var psi = d[i++];\n          var fs = d[i++];\n          var r = rx > ry ? rx : ry;\n          var scaleX = rx > ry ? 1 : rx / ry;\n          var scaleY = rx > ry ? ry / rx : 1;\n          var isEllipse = Math.abs(rx - ry) > 1e-3;\n          var endAngle = theta + dTheta;\n\n          if (isEllipse) {\n            ctx.translate(cx, cy);\n            ctx.rotate(psi);\n            ctx.scale(scaleX, scaleY);\n            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n            ctx.scale(1 / scaleX, 1 / scaleY);\n            ctx.rotate(-psi);\n            ctx.translate(-cx, -cy);\n          } else {\n            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n          }\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(theta) * rx + cx;\n            y0 = mathSin(theta) * ry + cy;\n          }\n\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = d[i];\n          y0 = yi = d[i + 1];\n          ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n          break;\n\n        case CMD.Z:\n          ctx.closePath();\n          xi = x0;\n          yi = y0;\n      }\n    }\n  }\n};\nPathProxy.CMD = CMD;\nvar _default = PathProxy;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/PathProxy.js\n// module id = 1007\n// module chunks = 0 1 2","var ORIGIN_METHOD = '\\0__throttleOriginMethod';\nvar RATE = '\\0__throttleRate';\nvar THROTTLE_TYPE = '\\0__throttleType';\n/**\n * @public\n * @param {(Function)} fn\n * @param {number} [delay=0] Unit: ms.\n * @param {boolean} [debounce=false]\n *        true: If call interval less than `delay`, only the last call works.\n *        false: If call interval less than `delay, call works on fixed rate.\n * @return {(Function)} throttled fn.\n */\n\nfunction throttle(fn, delay, debounce) {\n  var currCall;\n  var lastCall = 0;\n  var lastExec = 0;\n  var timer = null;\n  var diff;\n  var scope;\n  var args;\n  var debounceNextCall;\n  delay = delay || 0;\n\n  function exec() {\n    lastExec = new Date().getTime();\n    timer = null;\n    fn.apply(scope, args || []);\n  }\n\n  var cb = function () {\n    currCall = new Date().getTime();\n    scope = this;\n    args = arguments;\n    var thisDelay = debounceNextCall || delay;\n    var thisDebounce = debounceNextCall || debounce;\n    debounceNextCall = null;\n    diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\n    clearTimeout(timer);\n\n    if (thisDebounce) {\n      timer = setTimeout(exec, thisDelay);\n    } else {\n      if (diff >= 0) {\n        exec();\n      } else {\n        timer = setTimeout(exec, -diff);\n      }\n    }\n\n    lastCall = currCall;\n  };\n  /**\n   * Clear throttle.\n   * @public\n   */\n\n\n  cb.clear = function () {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  };\n  /**\n   * Enable debounce once.\n   */\n\n\n  cb.debounceNextCall = function (debounceDelay) {\n    debounceNextCall = debounceDelay;\n  };\n\n  return cb;\n}\n/**\n * Create throttle method or update throttle rate.\n *\n * @example\n * ComponentView.prototype.render = function () {\n *     ...\n *     throttle.createOrUpdate(\n *         this,\n *         '_dispatchAction',\n *         this.model.get('throttle'),\n *         'fixRate'\n *     );\n * };\n * ComponentView.prototype.remove = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n * ComponentView.prototype.dispose = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n * @param {number} [rate]\n * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n * @return {Function} throttled function.\n */\n\n\nfunction createOrUpdate(obj, fnAttr, rate, throttleType) {\n  var fn = obj[fnAttr];\n\n  if (!fn) {\n    return;\n  }\n\n  var originFn = fn[ORIGIN_METHOD] || fn;\n  var lastThrottleType = fn[THROTTLE_TYPE];\n  var lastRate = fn[RATE];\n\n  if (lastRate !== rate || lastThrottleType !== throttleType) {\n    if (rate == null || !throttleType) {\n      return obj[fnAttr] = originFn;\n    }\n\n    fn = obj[fnAttr] = throttle(originFn, rate, throttleType === 'debounce');\n    fn[ORIGIN_METHOD] = originFn;\n    fn[THROTTLE_TYPE] = throttleType;\n    fn[RATE] = rate;\n  }\n\n  return fn;\n}\n/**\n * Clear throttle. Example see throttle.createOrUpdate.\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n */\n\n\nfunction clear(obj, fnAttr) {\n  var fn = obj[fnAttr];\n\n  if (fn && fn[ORIGIN_METHOD]) {\n    obj[fnAttr] = fn[ORIGIN_METHOD];\n  }\n}\n\nexports.throttle = throttle;\nexports.createOrUpdate = createOrUpdate;\nexports.clear = clear;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/throttle.js\n// module id = 1008\n// module chunks = 0 1 2","var zrUtil = require(\"../core/util\");\n\nvar Element = require(\"../Element\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\n/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/container/Group');\n *     var Circle = require('zrender/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n/**\n * @alias module:zrender/graphic/Group\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @extends module:zrender/mixin/Eventful\n */\nvar Group = function (opts) {\n  opts = opts || {};\n  Element.call(this, opts);\n\n  for (var key in opts) {\n    if (opts.hasOwnProperty(key)) {\n      this[key] = opts[key];\n    }\n  }\n\n  this._children = [];\n  this.__storage = null;\n  this.__dirty = true;\n};\n\nGroup.prototype = {\n  constructor: Group,\n  isGroup: true,\n\n  /**\n   * @type {string}\n   */\n  type: 'group',\n\n  /**\n   * 所有子孙元素是否响应鼠标事件\n   * @name module:/zrender/container/Group#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * @return {Array.<module:zrender/Element>}\n   */\n  children: function () {\n    return this._children.slice();\n  },\n\n  /**\n   * 获取指定 index 的儿子节点\n   * @param  {number} idx\n   * @return {module:zrender/Element}\n   */\n  childAt: function (idx) {\n    return this._children[idx];\n  },\n\n  /**\n   * 获取指定名字的儿子节点\n   * @param  {string} name\n   * @return {module:zrender/Element}\n   */\n  childOfName: function (name) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      if (children[i].name === name) {\n        return children[i];\n      }\n    }\n  },\n\n  /**\n   * @return {number}\n   */\n  childCount: function () {\n    return this._children.length;\n  },\n\n  /**\n   * 添加子节点到最后\n   * @param {module:zrender/Element} child\n   */\n  add: function (child) {\n    if (child && child !== this && child.parent !== this) {\n      this._children.push(child);\n\n      this._doAdd(child);\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加子节点在 nextSibling 之前\n   * @param {module:zrender/Element} child\n   * @param {module:zrender/Element} nextSibling\n   */\n  addBefore: function (child, nextSibling) {\n    if (child && child !== this && child.parent !== this && nextSibling && nextSibling.parent === this) {\n      var children = this._children;\n      var idx = children.indexOf(nextSibling);\n\n      if (idx >= 0) {\n        children.splice(idx, 0, child);\n\n        this._doAdd(child);\n      }\n    }\n\n    return this;\n  },\n  _doAdd: function (child) {\n    if (child.parent) {\n      child.parent.remove(child);\n    }\n\n    child.parent = this;\n    var storage = this.__storage;\n    var zr = this.__zr;\n\n    if (storage && storage !== child.__storage) {\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n  },\n\n  /**\n   * 移除子节点\n   * @param {module:zrender/Element} child\n   */\n  remove: function (child) {\n    var zr = this.__zr;\n    var storage = this.__storage;\n    var children = this._children;\n    var idx = zrUtil.indexOf(children, child);\n\n    if (idx < 0) {\n      return this;\n    }\n\n    children.splice(idx, 1);\n    child.parent = null;\n\n    if (storage) {\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n    return this;\n  },\n\n  /**\n   * 移除所有子节点\n   */\n  removeAll: function () {\n    var children = this._children;\n    var storage = this.__storage;\n    var child;\n    var i;\n\n    for (i = 0; i < children.length; i++) {\n      child = children[i];\n\n      if (storage) {\n        storage.delFromStorage(child);\n\n        if (child instanceof Group) {\n          child.delChildrenFromStorage(storage);\n        }\n      }\n\n      child.parent = null;\n    }\n\n    children.length = 0;\n    return this;\n  },\n\n  /**\n   * 遍历所有子节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  eachChild: function (cb, context) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n      cb.call(context, child, i);\n    }\n\n    return this;\n  },\n\n  /**\n   * 深度优先遍历所有子孙节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      cb.call(context, child);\n\n      if (child.type === 'group') {\n        child.traverse(cb, context);\n      }\n    }\n\n    return this;\n  },\n  addChildrenToStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n  },\n  delChildrenFromStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n  },\n  dirty: function () {\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh();\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function (includeChildren) {\n    // TODO Caching\n    var rect = null;\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var children = includeChildren || this._children;\n    var tmpMat = [];\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n\n      if (child.ignore || child.invisible) {\n        continue;\n      }\n\n      var childRect = child.getBoundingRect();\n      var transform = child.getLocalTransform(tmpMat); // TODO\n      // The boundingRect cacluated by transforming original\n      // rect may be bigger than the actual bundingRect when rotation\n      // is used. (Consider a circle rotated aginst its center, where\n      // the actual boundingRect should be the same as that not be\n      // rotated.) But we can not find better approach to calculate\n      // actual boundingRect yet, considering performance.\n\n      if (transform) {\n        tmpRect.copy(childRect);\n        tmpRect.applyTransform(transform);\n        rect = rect || tmpRect.clone();\n        rect.union(tmpRect);\n      } else {\n        rect = rect || childRect.clone();\n        rect.union(childRect);\n      }\n    }\n\n    return rect || tmpRect;\n  }\n};\nzrUtil.inherits(Group, Element);\nvar _default = Group;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/container/Group.js\n// module id = 1009\n// module chunks = 0 1 2","var dpr = 1; // If in browser environment\n\nif (typeof window !== 'undefined') {\n  dpr = Math.max(window.devicePixelRatio || 1, 1);\n}\n/**\n * config默认配置项\n * @exports zrender/config\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n/**\n * debug日志选项：catchBrushException为true下有效\n * 0 : 不生成debug数据，发布用\n * 1 : 异常抛出，调试用\n * 2 : 控制台输出，调试用\n */\n\n\nvar debugMode = 0; // retina 屏幕优化\n\nvar devicePixelRatio = dpr;\nexports.debugMode = debugMode;\nexports.devicePixelRatio = devicePixelRatio;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/config.js\n// module id = 1010\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\n// TODO Parse shadow style\n// TODO Only shallow path support\nfunction _default(properties) {\n  // Normalize\n  for (var i = 0; i < properties.length; i++) {\n    if (!properties[i][1]) {\n      properties[i][1] = properties[i][0];\n    }\n  }\n\n  return function (model, excludes, includes) {\n    var style = {};\n\n    for (var i = 0; i < properties.length; i++) {\n      var propName = properties[i][1];\n\n      if (excludes && zrUtil.indexOf(excludes, propName) >= 0 || includes && zrUtil.indexOf(includes, propName) < 0) {\n        continue;\n      }\n\n      var val = model.getShallow(propName);\n\n      if (val != null) {\n        style[properties[i][0]] = val;\n      }\n    }\n\n    return style;\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/mixin/makeStyleMapper.js\n// module id = 1011\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\nvar modelUtil = require(\"../util/model\");\n\nfunction Chart() {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewChart');\n}\n\nChart.prototype = {\n  type: 'chart',\n\n  /**\n   * Init the chart\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  init: function (ecModel, api) {},\n\n  /**\n   * Render the chart\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  render: function (seriesModel, ecModel, api, payload) {},\n\n  /**\n   * Highlight series or specified data item\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  highlight: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n  },\n\n  /**\n   * Downplay series or specified data item\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  downplay: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'normal');\n  },\n\n  /**\n   * Remove self\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  remove: function (ecModel, api) {\n    this.group.removeAll();\n  },\n\n  /**\n   * Dispose self\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  dispose: function () {}\n  /**\n   * The view contains the given point.\n   * @interface\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  // containPoint: function () {}\n\n};\nvar chartProto = Chart.prototype;\n\nchartProto.updateView = chartProto.updateLayout = chartProto.updateVisual = function (seriesModel, ecModel, api, payload) {\n  this.render(seriesModel, ecModel, api, payload);\n};\n/**\n * Set state of single element\n * @param  {module:zrender/Element} el\n * @param  {string} state\n */\n\n\nfunction elSetState(el, state) {\n  if (el) {\n    el.trigger(state);\n\n    if (el.type === 'group') {\n      for (var i = 0; i < el.childCount(); i++) {\n        elSetState(el.childAt(i), state);\n      }\n    }\n  }\n}\n/**\n * @param  {module:echarts/data/List} data\n * @param  {Object} payload\n * @param  {string} state 'normal'|'emphasis'\n * @inner\n */\n\n\nfunction toggleHighlight(data, payload, state) {\n  var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n  if (dataIndex != null) {\n    zrUtil.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n      elSetState(data.getItemGraphicEl(dataIdx), state);\n    });\n  } else {\n    data.eachItemGraphicEl(function (el) {\n      elSetState(el, state);\n    });\n  }\n} // Enable Chart.extend.\n\n\nclazzUtil.enableClassExtend(Chart, ['dispose']); // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Chart, {\n  registerWhenExtend: true\n});\nvar _default = Chart;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/view/Chart.js\n// module id = 1012\n// module chunks = 0 1 2","function defaultKeyGetter(item) {\n  return item;\n}\n/**\n * @param {Array} oldArr\n * @param {Array} newArr\n * @param {Function} oldKeyGetter\n * @param {Function} newKeyGetter\n * @param {Object} [context] Can be visited by this.context in callback.\n */\n\n\nfunction DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter, context) {\n  this._old = oldArr;\n  this._new = newArr;\n  this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n  this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n  this.context = context;\n}\n\nDataDiffer.prototype = {\n  constructor: DataDiffer,\n\n  /**\n   * Callback function when add a data\n   */\n  add: function (func) {\n    this._add = func;\n    return this;\n  },\n\n  /**\n   * Callback function when update a data\n   */\n  update: function (func) {\n    this._update = func;\n    return this;\n  },\n\n  /**\n   * Callback function when remove a data\n   */\n  remove: function (func) {\n    this._remove = func;\n    return this;\n  },\n  execute: function () {\n    var oldArr = this._old;\n    var newArr = this._new;\n    var oldDataIndexMap = {};\n    var newDataIndexMap = {};\n    var oldDataKeyArr = [];\n    var newDataKeyArr = [];\n    var i;\n    initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, '_oldKeyGetter', this);\n    initIndexMap(newArr, newDataIndexMap, newDataKeyArr, '_newKeyGetter', this); // Travel by inverted order to make sure order consistency\n    // when duplicate keys exists (consider newDataIndex.pop() below).\n    // For performance consideration, these code below do not look neat.\n\n    for (i = 0; i < oldArr.length; i++) {\n      var key = oldDataKeyArr[i];\n      var idx = newDataIndexMap[key]; // idx can never be empty array here. see 'set null' logic below.\n\n      if (idx != null) {\n        // Consider there is duplicate key (for example, use dataItem.name as key).\n        // We should make sure every item in newArr and oldArr can be visited.\n        var len = idx.length;\n\n        if (len) {\n          len === 1 && (newDataIndexMap[key] = null);\n          idx = idx.unshift();\n        } else {\n          newDataIndexMap[key] = null;\n        }\n\n        this._update && this._update(idx, i);\n      } else {\n        this._remove && this._remove(i);\n      }\n    }\n\n    for (var i = 0; i < newDataKeyArr.length; i++) {\n      var key = newDataKeyArr[i];\n\n      if (newDataIndexMap.hasOwnProperty(key)) {\n        var idx = newDataIndexMap[key];\n\n        if (idx == null) {\n          continue;\n        } // idx can never be empty array here. see 'set null' logic above.\n\n\n        if (!idx.length) {\n          this._add && this._add(idx);\n        } else {\n          for (var j = 0, len = idx.length; j < len; j++) {\n            this._add && this._add(idx[j]);\n          }\n        }\n      }\n    }\n  }\n};\n\nfunction initIndexMap(arr, map, keyArr, keyGetterName, dataDiffer) {\n  for (var i = 0; i < arr.length; i++) {\n    // Add prefix to avoid conflict with Object.prototype.\n    var key = '_ec_' + dataDiffer[keyGetterName](arr[i], i);\n    var existence = map[key];\n\n    if (existence == null) {\n      keyArr.push(key);\n      map[key] = i;\n    } else {\n      if (!existence.length) {\n        map[key] = existence = [existence];\n      }\n\n      existence.push(i);\n    }\n  }\n}\n\nvar _default = DataDiffer;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/data/DataDiffer.js\n// module id = 1013\n// module chunks = 0 1 2","var clazzUtil = require(\"../util/clazz\");\n\n/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n/**\n * @param {Object} [setting]\n */\nfunction Scale(setting) {\n  this._setting = setting || {};\n  /**\n   * Extent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._extent = [Infinity, -Infinity];\n  /**\n   * Step is calculated in adjustExtent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._interval = 0;\n  this.init && this.init.apply(this, arguments);\n}\n/**\n * Parse input val to valid inner number.\n * @param {*} val\n * @return {number}\n */\n\n\nScale.prototype.parse = function (val) {\n  // Notice: This would be a trap here, If the implementation\n  // of this method depends on extent, and this method is used\n  // before extent set (like in dataZoom), it would be wrong.\n  // Nevertheless, parse does not depend on extent generally.\n  return val;\n};\n\nScale.prototype.getSetting = function (name) {\n  return this._setting[name];\n};\n\nScale.prototype.contain = function (val) {\n  var extent = this._extent;\n  return val >= extent[0] && val <= extent[1];\n};\n/**\n * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.normalize = function (val) {\n  var extent = this._extent;\n\n  if (extent[1] === extent[0]) {\n    return 0.5;\n  }\n\n  return (val - extent[0]) / (extent[1] - extent[0]);\n};\n/**\n * Scale normalized value\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.scale = function (val) {\n  var extent = this._extent;\n  return val * (extent[1] - extent[0]) + extent[0];\n};\n/**\n * Set extent from data\n * @param {Array.<number>} other\n */\n\n\nScale.prototype.unionExtent = function (other) {\n  var extent = this._extent;\n  other[0] < extent[0] && (extent[0] = other[0]);\n  other[1] > extent[1] && (extent[1] = other[1]); // not setExtent because in log axis it may transformed to power\n  // this.setExtent(extent[0], extent[1]);\n};\n/**\n * Set extent from data\n * @param {module:echarts/data/List} data\n * @param {string} dim\n */\n\n\nScale.prototype.unionExtentFromData = function (data, dim) {\n  this.unionExtent(data.getDataExtent(dim, true));\n};\n/**\n * Get extent\n * @return {Array.<number>}\n */\n\n\nScale.prototype.getExtent = function () {\n  return this._extent.slice();\n};\n/**\n * Set extent\n * @param {number} start\n * @param {number} end\n */\n\n\nScale.prototype.setExtent = function (start, end) {\n  var thisExtent = this._extent;\n\n  if (!isNaN(start)) {\n    thisExtent[0] = start;\n  }\n\n  if (!isNaN(end)) {\n    thisExtent[1] = end;\n  }\n};\n/**\n * @return {Array.<string>}\n */\n\n\nScale.prototype.getTicksLabels = function () {\n  var labels = [];\n  var ticks = this.getTicks();\n\n  for (var i = 0; i < ticks.length; i++) {\n    labels.push(this.getLabel(ticks[i]));\n  }\n\n  return labels;\n};\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\n\n\nScale.prototype.isBlank = function () {\n  return this._isBlank;\n},\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\nScale.prototype.setBlank = function (isBlank) {\n  this._isBlank = isBlank;\n};\nclazzUtil.enableClassExtend(Scale);\nclazzUtil.enableClassManagement(Scale, {\n  registerWhenExtend: true\n});\nvar _default = Scale;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/scale/Scale.js\n// module id = 1014\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\nvar each = zrUtil.each;\nvar curry = zrUtil.curry; // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n// allAxesInfo should be updated when setOption performed.\n\nfunction collect(ecModel, api) {\n  var result = {\n    /**\n     * key: makeKey(axis.model)\n     * value: {\n     *      axis,\n     *      coordSys,\n     *      axisPointerModel,\n     *      triggerTooltip,\n     *      involveSeries,\n     *      snap,\n     *      seriesModels,\n     *      seriesDataCount\n     * }\n     */\n    axesInfo: {},\n    seriesInvolved: false,\n\n    /**\n     * key: makeKey(coordSys.model)\n     * value: Object: key makeKey(axis.model), value: axisInfo\n     */\n    coordSysAxesInfo: {},\n    coordSysMap: {}\n  };\n  collectAxesInfo(result, ecModel, api); // Check seriesInvolved for performance, in case too many series in some chart.\n\n  result.seriesInvolved && collectSeriesInfo(result, ecModel);\n  return result;\n}\n\nfunction collectAxesInfo(result, ecModel, api) {\n  var globalTooltipModel = ecModel.getComponent('tooltip');\n  var globalAxisPointerModel = ecModel.getComponent('axisPointer'); // links can only be set on global.\n\n  var linksOption = globalAxisPointerModel.get('link', true) || [];\n  var linkGroups = []; // Collect axes info.\n\n  each(api.getCoordinateSystems(), function (coordSys) {\n    // Some coordinate system do not support axes, like geo.\n    if (!coordSys.axisPointerEnabled) {\n      return;\n    }\n\n    var coordSysKey = makeKey(coordSys.model);\n    var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n    result.coordSysMap[coordSysKey] = coordSys; // Set tooltip (like 'cross') is a convienent way to show axisPointer\n    // for user. So we enable seting tooltip on coordSys model.\n\n    var coordSysModel = coordSys.model;\n    var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n    each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null)); // If axis tooltip used, choose tooltip axis for each coordSys.\n    // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n\n    if (coordSys.getTooltipAxes && globalTooltipModel // If tooltip.showContent is set as false, tooltip will not\n    // show but axisPointer will show as normal.\n    && baseTooltipModel.get('show')) {\n      // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n      // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n      var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n      var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n      var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n\n      if (triggerAxis || cross) {\n        each(tooltipAxes.baseAxes, curry(saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis));\n      }\n\n      if (cross) {\n        each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n      }\n    } // fromTooltip: true | false | 'cross'\n    // triggerTooltip: true | false | null\n\n\n    function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n      var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n      var axisPointerShow = axisPointerModel.get('show');\n\n      if (!axisPointerShow || axisPointerShow === 'auto' && !fromTooltip && !isHandleTrigger(axisPointerModel)) {\n        return;\n      }\n\n      if (triggerTooltip == null) {\n        triggerTooltip = axisPointerModel.get('triggerTooltip');\n      }\n\n      axisPointerModel = fromTooltip ? makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) : axisPointerModel;\n      var snap = axisPointerModel.get('snap');\n      var key = makeKey(axis.model);\n      var involveSeries = triggerTooltip || snap || axis.type === 'category'; // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n\n      var axisInfo = result.axesInfo[key] = {\n        key: key,\n        axis: axis,\n        coordSys: coordSys,\n        axisPointerModel: axisPointerModel,\n        triggerTooltip: triggerTooltip,\n        involveSeries: involveSeries,\n        snap: snap,\n        useHandle: isHandleTrigger(axisPointerModel),\n        seriesModels: []\n      };\n      axesInfoInCoordSys[key] = axisInfo;\n      result.seriesInvolved |= involveSeries;\n      var groupIndex = getLinkGroupIndex(linksOption, axis);\n\n      if (groupIndex != null) {\n        var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {\n          axesInfo: {}\n        });\n        linkGroup.axesInfo[key] = axisInfo;\n        linkGroup.mapper = linksOption[groupIndex].mapper;\n        axisInfo.linkGroup = linkGroup;\n      }\n    }\n  });\n}\n\nfunction makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) {\n  var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n  var volatileOption = {};\n  each(['type', 'snap', 'lineStyle', 'shadowStyle', 'label', 'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'], function (field) {\n    volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n  }); // category axis do not auto snap, otherwise some tick that do not\n  // has value can not be hovered. value/time/log axis default snap if\n  // triggered from tooltip and trigger tooltip.\n\n  volatileOption.snap = axis.type !== 'category' && !!triggerTooltip; // Compatibel with previous behavior, tooltip axis do not show label by default.\n  // Only these properties can be overrided from tooltip to axisPointer.\n\n  if (tooltipAxisPointerModel.get('type') === 'cross') {\n    volatileOption.type = 'line';\n  }\n\n  var labelOption = volatileOption.label || (volatileOption.label = {}); // Follow the convention, do not show label when triggered by tooltip by default.\n\n  labelOption.show == null && (labelOption.show = false);\n\n  if (fromTooltip === 'cross') {\n    // When 'cross', both axes show labels.\n    labelOption.show = true; // If triggerTooltip, this is a base axis, which should better not use cross style\n    // (cross style is dashed by default)\n\n    if (!triggerTooltip) {\n      var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n      crossStyle && zrUtil.defaults(labelOption, crossStyle.textStyle);\n    }\n  }\n\n  return axis.model.getModel('axisPointer', new Model(volatileOption, globalAxisPointerModel, ecModel));\n}\n\nfunction collectSeriesInfo(result, ecModel) {\n  // Prepare data for axis trigger\n  ecModel.eachSeries(function (seriesModel) {\n    // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n    var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n\n    if (!coordSys || seriesTooltipTrigger === 'none' || seriesTooltipTrigger === false || seriesTooltipTrigger === 'item' || seriesTooltipShow === false || seriesModel.get('axisPointer.show', true) === false) {\n      return;\n    }\n\n    each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n      var axis = axisInfo.axis;\n\n      if (coordSys.getAxis(axis.dim) === axis) {\n        axisInfo.seriesModels.push(seriesModel);\n        axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n        axisInfo.seriesDataCount += seriesModel.getData().count();\n      }\n    });\n  }, this);\n}\n/**\n * For example:\n * {\n *     axisPointer: {\n *         links: [{\n *             xAxisIndex: [2, 4],\n *             yAxisIndex: 'all'\n *         }, {\n *             xAxisId: ['a5', 'a7'],\n *             xAxisName: 'xxx'\n *         }]\n *     }\n * }\n */\n\n\nfunction getLinkGroupIndex(linksOption, axis) {\n  var axisModel = axis.model;\n  var dim = axis.dim;\n\n  for (var i = 0; i < linksOption.length; i++) {\n    var linkOption = linksOption[i] || {};\n\n    if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id) || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex) || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)) {\n      return i;\n    }\n  }\n}\n\nfunction checkPropInLink(linkPropValue, axisPropValue) {\n  return linkPropValue === 'all' || zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0 || linkPropValue === axisPropValue;\n}\n\nfunction fixValue(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n\n  if (!axisInfo) {\n    return;\n  }\n\n  var axisPointerModel = axisInfo.axisPointerModel;\n  var scale = axisInfo.axis.scale;\n  var option = axisPointerModel.option;\n  var status = axisPointerModel.get('status');\n  var value = axisPointerModel.get('value'); // Parse init value for category and time axis.\n\n  if (value != null) {\n    value = scale.parse(value);\n  }\n\n  var useHandle = isHandleTrigger(axisPointerModel); // If `handle` used, `axisPointer` will always be displayed, so value\n  // and status should be initialized.\n\n  if (status == null) {\n    option.status = useHandle ? 'show' : 'hide';\n  }\n\n  var extent = scale.getExtent().slice();\n  extent[0] > extent[1] && extent.reverse();\n\n  if ( // Pick a value on axis when initializing.\n  value == null // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n  // where we should re-pick a value to keep `handle` displaying normally.\n  || value > extent[1]) {\n    // Make handle displayed on the end of the axis when init, which looks better.\n    value = extent[1];\n  }\n\n  if (value < extent[0]) {\n    value = extent[0];\n  }\n\n  option.value = value;\n\n  if (useHandle) {\n    option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n  }\n}\n\nfunction getAxisInfo(axisModel) {\n  var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n  return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n}\n\nfunction getAxisPointerModel(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n  return axisInfo && axisInfo.axisPointerModel;\n}\n\nfunction isHandleTrigger(axisPointerModel) {\n  return !!axisPointerModel.get('handle.show');\n}\n/**\n * @param {module:echarts/model/Model} model\n * @return {string} unique key\n */\n\n\nfunction makeKey(model) {\n  return model.type + '||' + model.id;\n}\n\nexports.collect = collect;\nexports.fixValue = fixValue;\nexports.getAxisInfo = getAxisInfo;\nexports.getAxisPointerModel = getAxisPointerModel;\nexports.makeKey = makeKey;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/modelHelper.js\n// module id = 1015\n// module chunks = 0 1 2","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar List = require(\"../../data/List\");\n\nvar completeDimensions = require(\"../../data/helper/completeDimensions\");\n\nvar _model = require(\"../../util/model\");\n\nvar getDataItemValue = _model.getDataItemValue;\nvar converDataValue = _model.converDataValue;\nvar isDataItemOption = _model.isDataItemOption;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nfunction firstDataNotNull(data) {\n  var i = 0;\n\n  while (i < data.length && data[i] == null) {\n    i++;\n  }\n\n  return data[i];\n}\n\nfunction ifNeedCompleteOrdinalData(data) {\n  var sampleItem = firstDataNotNull(data);\n  return sampleItem != null && !zrUtil.isArray(getDataItemValue(sampleItem));\n}\n/**\n * Helper function to create a list from option data\n */\n\n\nfunction createListFromArray(data, seriesModel, ecModel) {\n  // If data is undefined\n  data = data || [];\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var creator = creators[coordSysName];\n  var registeredCoordSys = CoordinateSystem.get(coordSysName);\n  var completeDimOpt = {\n    encodeDef: seriesModel.get('encode'),\n    dimsDef: seriesModel.get('dimensions')\n  }; // FIXME\n\n  var axesInfo = creator && creator(data, seriesModel, ecModel, completeDimOpt);\n  var dimensions = axesInfo && axesInfo.dimensions;\n\n  if (!dimensions) {\n    // Get dimensions from registered coordinate system\n    dimensions = registeredCoordSys && (registeredCoordSys.getDimensionsInfo ? registeredCoordSys.getDimensionsInfo() : registeredCoordSys.dimensions.slice()) || ['x', 'y'];\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n  }\n\n  var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;\n  var list = new List(dimensions, seriesModel);\n  var nameList = createNameList(axesInfo, data);\n  var categories = {};\n  var dimValueGetter = categoryIndex >= 0 && ifNeedCompleteOrdinalData(data) ? function (itemOpt, dimName, dataIndex, dimIndex) {\n    // If any dataItem is like { value: 10 }\n    if (isDataItemOption(itemOpt)) {\n      list.hasItemOption = true;\n    } // Use dataIndex as ordinal value in categoryAxis\n\n\n    return dimIndex === categoryIndex ? dataIndex : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);\n  } : function (itemOpt, dimName, dataIndex, dimIndex) {\n    var value = getDataItemValue(itemOpt);\n    var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]); // If any dataItem is like { value: 10 }\n\n    if (isDataItemOption(itemOpt)) {\n      list.hasItemOption = true;\n    }\n\n    var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;\n\n    if (categoryAxesModels && categoryAxesModels[dimName]) {\n      // If given value is a category string\n      if (typeof val === 'string') {\n        // Lazy get categories\n        categories[dimName] = categories[dimName] || categoryAxesModels[dimName].getCategories();\n        val = zrUtil.indexOf(categories[dimName], val);\n\n        if (val < 0 && !isNaN(val)) {\n          // In case some one write '1', '2' istead of 1, 2\n          val = +val;\n        }\n      }\n    }\n\n    return val;\n  };\n  list.hasItemOption = false;\n  list.initData(data, nameList, dimValueGetter);\n  return list;\n}\n\nfunction isStackable(axisType) {\n  return axisType !== 'category' && axisType !== 'time';\n}\n\nfunction getDimTypeByAxis(axisType) {\n  return axisType === 'category' ? 'ordinal' : axisType === 'time' ? 'time' : 'float';\n}\n/**\n * Creaters for each coord system.\n */\n\n\nvar creators = {\n  cartesian2d: function (data, seriesModel, ecModel, completeDimOpt) {\n    var axesModels = zrUtil.map(['xAxis', 'yAxis'], function (name) {\n      return ecModel.queryComponents({\n        mainType: name,\n        index: seriesModel.get(name + 'Index'),\n        id: seriesModel.get(name + 'Id')\n      })[0];\n    });\n    var xAxisModel = axesModels[0];\n    var yAxisModel = axesModels[1];\n    var xAxisType = xAxisModel.get('type');\n    var yAxisType = yAxisModel.get('type');\n    var dimensions = [{\n      name: 'x',\n      type: getDimTypeByAxis(xAxisType),\n      stackable: isStackable(xAxisType)\n    }, {\n      name: 'y',\n      // If two category axes\n      type: getDimTypeByAxis(yAxisType),\n      stackable: isStackable(yAxisType)\n    }];\n    var isXAxisCateogry = xAxisType === 'category';\n    var isYAxisCategory = yAxisType === 'category';\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n    var categoryAxesModels = {};\n\n    if (isXAxisCateogry) {\n      categoryAxesModels.x = xAxisModel;\n    }\n\n    if (isYAxisCategory) {\n      categoryAxesModels.y = yAxisModel;\n    }\n\n    return {\n      dimensions: dimensions,\n      categoryIndex: isXAxisCateogry ? 0 : isYAxisCategory ? 1 : -1,\n      categoryAxesModels: categoryAxesModels\n    };\n  },\n  singleAxis: function (data, seriesModel, ecModel, completeDimOpt) {\n    var singleAxisModel = ecModel.queryComponents({\n      mainType: 'singleAxis',\n      index: seriesModel.get('singleAxisIndex'),\n      id: seriesModel.get('singleAxisId')\n    })[0];\n    var singleAxisType = singleAxisModel.get('type');\n    var isCategory = singleAxisType === 'category';\n    var dimensions = [{\n      name: 'single',\n      type: getDimTypeByAxis(singleAxisType),\n      stackable: isStackable(singleAxisType)\n    }];\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n    var categoryAxesModels = {};\n\n    if (isCategory) {\n      categoryAxesModels.single = singleAxisModel;\n    }\n\n    return {\n      dimensions: dimensions,\n      categoryIndex: isCategory ? 0 : -1,\n      categoryAxesModels: categoryAxesModels\n    };\n  },\n  polar: function (data, seriesModel, ecModel, completeDimOpt) {\n    var polarModel = ecModel.queryComponents({\n      mainType: 'polar',\n      index: seriesModel.get('polarIndex'),\n      id: seriesModel.get('polarId')\n    })[0];\n    var angleAxisModel = polarModel.findAxisModel('angleAxis');\n    var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n    var radiusAxisType = radiusAxisModel.get('type');\n    var angleAxisType = angleAxisModel.get('type');\n    var dimensions = [{\n      name: 'radius',\n      type: getDimTypeByAxis(radiusAxisType),\n      stackable: isStackable(radiusAxisType)\n    }, {\n      name: 'angle',\n      type: getDimTypeByAxis(angleAxisType),\n      stackable: isStackable(angleAxisType)\n    }];\n    var isAngleAxisCateogry = angleAxisType === 'category';\n    var isRadiusAxisCateogry = radiusAxisType === 'category';\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n    var categoryAxesModels = {};\n\n    if (isRadiusAxisCateogry) {\n      categoryAxesModels.radius = radiusAxisModel;\n    }\n\n    if (isAngleAxisCateogry) {\n      categoryAxesModels.angle = angleAxisModel;\n    }\n\n    return {\n      dimensions: dimensions,\n      categoryIndex: isAngleAxisCateogry ? 1 : isRadiusAxisCateogry ? 0 : -1,\n      categoryAxesModels: categoryAxesModels\n    };\n  },\n  geo: function (data, seriesModel, ecModel, completeDimOpt) {\n    // TODO Region\n    // 多个散点图系列在同一个地区的时候\n    return {\n      dimensions: completeDimensions([{\n        name: 'lng'\n      }, {\n        name: 'lat'\n      }], data, completeDimOpt)\n    };\n  }\n};\n\nfunction createNameList(result, data) {\n  var nameList = [];\n  var categoryDim = result && result.dimensions[result.categoryIndex];\n  var categoryAxisModel;\n\n  if (categoryDim) {\n    categoryAxisModel = result.categoryAxesModels[categoryDim.name];\n  }\n\n  if (categoryAxisModel) {\n    // FIXME Two category axis\n    var categories = categoryAxisModel.getCategories();\n\n    if (categories) {\n      var dataLen = data.length; // Ordered data is given explicitly like\n      // [[3, 0.2], [1, 0.3], [2, 0.15]]\n      // or given scatter data,\n      // pick the category\n\n      if (zrUtil.isArray(data[0]) && data[0].length > 1) {\n        nameList = [];\n\n        for (var i = 0; i < dataLen; i++) {\n          nameList[i] = categories[data[i][result.categoryIndex || 0]];\n        }\n      } else {\n        nameList = categories.slice(0);\n      }\n    }\n  }\n\n  return nameList;\n}\n\nvar _default = createListFromArray;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/createListFromArray.js\n// module id = 1016\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar axisHelper = require(\"./axisHelper\");\n\nvar linearMap = numberUtil.linearMap;\n\nfunction fixExtentWithBands(extent, nTick) {\n  var size = extent[1] - extent[0];\n  var len = nTick;\n  var margin = size / len / 2;\n  extent[0] += margin;\n  extent[1] -= margin;\n}\n\nvar normalizedExtent = [0, 1];\n/**\n * @name module:echarts/coord/CartesianAxis\n * @constructor\n */\n\nvar Axis = function (dim, scale, extent) {\n  /**\n   * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n   * @type {string}\n   */\n  this.dim = dim;\n  /**\n   * Axis scale\n   * @type {module:echarts/coord/scale/*}\n   */\n\n  this.scale = scale;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  this._extent = extent || [0, 0];\n  /**\n   * @type {boolean}\n   */\n\n  this.inverse = false;\n  /**\n   * Usually true when axis has a ordinal scale\n   * @type {boolean}\n   */\n\n  this.onBand = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._labelInterval;\n};\n\nAxis.prototype = {\n  constructor: Axis,\n\n  /**\n   * If axis extent contain given coord\n   * @param {number} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var extent = this._extent;\n    var min = Math.min(extent[0], extent[1]);\n    var max = Math.max(extent[0], extent[1]);\n    return coord >= min && coord <= max;\n  },\n\n  /**\n   * If axis extent contain given data\n   * @param {number} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.contain(this.dataToCoord(data));\n  },\n\n  /**\n   * Get coord extent.\n   * @return {Array.<number>}\n   */\n  getExtent: function () {\n    return this._extent.slice();\n  },\n\n  /**\n   * Get precision used for formatting\n   * @param {Array.<number>} [dataExtent]\n   * @return {number}\n   */\n  getPixelPrecision: function (dataExtent) {\n    return numberUtil.getPixelPrecision(dataExtent || this.scale.getExtent(), this._extent);\n  },\n\n  /**\n   * Set coord extent\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var extent = this._extent;\n    extent[0] = start;\n    extent[1] = end;\n  },\n\n  /**\n   * Convert data to coord. Data is the rank if it has a ordinal scale\n   * @param {number} data\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  dataToCoord: function (data, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n    data = scale.normalize(data);\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    return linearMap(data, normalizedExtent, extent, clamp);\n  },\n\n  /**\n   * Convert coord to data. Data is the rank if it has a ordinal scale\n   * @param {number} coord\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  coordToData: function (coord, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    var t = linearMap(coord, extent, normalizedExtent, clamp);\n    return this.scale.scale(t);\n  },\n\n  /**\n   * Convert pixel point to data in axis\n   * @param {Array.<number>} point\n   * @param  {boolean} clamp\n   * @return {number} data\n   */\n  pointToData: function (point, clamp) {// Should be implemented in derived class if necessary.\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicksCoords: function (alignWithLabel) {\n    if (this.onBand && !alignWithLabel) {\n      var bands = this.getBands();\n      var coords = [];\n\n      for (var i = 0; i < bands.length; i++) {\n        coords.push(bands[i][0]);\n      }\n\n      if (bands[i - 1]) {\n        coords.push(bands[i - 1][1]);\n      }\n\n      return coords;\n    } else {\n      return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n    }\n  },\n\n  /**\n   * Coords of labels are on the ticks or on the middle of bands\n   * @return {Array.<number>}\n   */\n  getLabelsCoords: function () {\n    return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n  },\n\n  /**\n   * Get bands.\n   *\n   * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n   * |---1---|---2---|---3---|---4---|.\n   *\n   * @return {Array}\n   */\n  // FIXME Situation when labels is on ticks\n  getBands: function () {\n    var extent = this.getExtent();\n    var bands = [];\n    var len = this.scale.count();\n    var start = extent[0];\n    var end = extent[1];\n    var span = end - start;\n\n    for (var i = 0; i < len; i++) {\n      bands.push([span * i / len + start, span * (i + 1) / len + start]);\n    }\n\n    return bands;\n  },\n\n  /**\n   * Get width of band\n   * @return {number}\n   */\n  getBandWidth: function () {\n    var axisExtent = this._extent;\n    var dataExtent = this.scale.getExtent();\n    var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0); // Fix #2728, avoid NaN when only one data.\n\n    len === 0 && (len = 1);\n    var size = Math.abs(axisExtent[1] - axisExtent[0]);\n    return Math.abs(size) / len;\n  },\n\n  /**\n   * @abstract\n   * @return {boolean} Is horizontal\n   */\n  isHorizontal: null,\n\n  /**\n   * @abstract\n   * @return {number} Get axis rotate, by degree.\n   */\n  getRotate: null,\n\n  /**\n   * Get interval of the axis label.\n   * To get precise result, at least one of `getRotate` and `isHorizontal`\n   * should be implemented.\n   * @return {number}\n   */\n  getLabelInterval: function () {\n    var labelInterval = this._labelInterval;\n\n    if (!labelInterval) {\n      var axisModel = this.model;\n      var labelModel = axisModel.getModel('axisLabel');\n      labelInterval = labelModel.get('interval');\n\n      if (this.type === 'category' && (labelInterval == null || labelInterval === 'auto')) {\n        labelInterval = axisHelper.getAxisLabelInterval(zrUtil.map(this.scale.getTicks(), this.dataToCoord, this), axisModel.getFormattedLabels(), labelModel.getFont(), this.getRotate ? this.getRotate() : this.isHorizontal && !this.isHorizontal() ? 90 : 0, labelModel.get('rotate'));\n      }\n\n      this._labelInterval = labelInterval;\n    }\n\n    return labelInterval;\n  }\n};\nvar _default = Axis;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/Axis.js\n// module id = 1017\n// module chunks = 0 1 2","var zrUtil = require(\"../core/util\");\n\nvar Style = require(\"./Style\");\n\nvar Element = require(\"../Element\");\n\nvar RectText = require(\"./mixin/RectText\");\n\n/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n/**\n * @alias module:zrender/graphic/Displayable\n * @extends module:zrender/Element\n * @extends module:zrender/graphic/mixin/RectText\n */\nfunction Displayable(opts) {\n  opts = opts || {};\n  Element.call(this, opts); // Extend properties\n\n  for (var name in opts) {\n    if (opts.hasOwnProperty(name) && name !== 'style') {\n      this[name] = opts[name];\n    }\n  }\n  /**\n   * @type {module:zrender/graphic/Style}\n   */\n\n\n  this.style = new Style(opts.style, this);\n  this._rect = null; // Shapes for cascade clipping.\n\n  this.__clipPaths = []; // FIXME Stateful must be mixined after style is setted\n  // Stateful.call(this, opts);\n}\n\nDisplayable.prototype = {\n  constructor: Displayable,\n  type: 'displayable',\n\n  /**\n   * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n   * Dirty flag. From which painter will determine if this displayable object needs brush\n   * @name module:zrender/graphic/Displayable#__dirty\n   * @type {boolean}\n   */\n  __dirty: true,\n\n  /**\n   * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n   * If ignore drawing of the displayable object. Mouse event will still be triggered\n   * @name module:/zrender/graphic/Displayable#invisible\n   * @type {boolean}\n   * @default false\n   */\n  invisible: false,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z: 0,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z2: 0,\n\n  /**\n   * z层level，决定绘画在哪层canvas中\n   * @name module:/zrender/graphic/Displayable#zlevel\n   * @type {number}\n   * @default 0\n   */\n  zlevel: 0,\n\n  /**\n   * 是否可拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  draggable: false,\n\n  /**\n   * 是否正在拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  dragging: false,\n\n  /**\n   * 是否相应鼠标事件\n   * @name module:/zrender/graphic/Displayable#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * If enable culling\n   * @type {boolean}\n   * @default false\n   */\n  culling: false,\n\n  /**\n   * Mouse cursor when hovered\n   * @name module:/zrender/graphic/Displayable#cursor\n   * @type {string}\n   */\n  cursor: 'pointer',\n\n  /**\n   * If hover area is bounding rect\n   * @name module:/zrender/graphic/Displayable#rectHover\n   * @type {string}\n   */\n  rectHover: false,\n\n  /**\n   * Render the element progressively when the value >= 0,\n   * usefull for large data.\n   * @type {number}\n   */\n  progressive: -1,\n  beforeBrush: function (ctx) {},\n  afterBrush: function (ctx) {},\n\n  /**\n   * 图形绘制方法\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  // Interface\n  brush: function (ctx, prevEl) {},\n\n  /**\n   * 获取最小包围盒\n   * @return {module:zrender/core/BoundingRect}\n   */\n  // Interface\n  getBoundingRect: function () {},\n\n  /**\n   * 判断坐标 x, y 是否在图形上\n   * If displayable element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  contain: function (x, y) {\n    return this.rectContain(x, y);\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    cb.call(context, this);\n  },\n\n  /**\n   * 判断坐标 x, y 是否在图形的包围盒上\n   * If bounding rect of element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  rectContain: function (x, y) {\n    var coord = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    return rect.contain(coord[0], coord[1]);\n  },\n\n  /**\n   * 标记图形元素为脏，并且在下一帧重绘\n   * Mark displayable element dirty and refresh next frame\n   */\n  dirty: function () {\n    this.__dirty = true;\n    this._rect = null;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * 图形是否会触发事件\n   * If displayable object binded any event\n   * @return {boolean}\n   */\n  // TODO, 通过 bind 绑定的事件\n  // isSilent: function () {\n  //     return !(\n  //         this.hoverable || this.draggable\n  //         || this.onmousemove || this.onmouseover || this.onmouseout\n  //         || this.onmousedown || this.onmouseup || this.onclick\n  //         || this.ondragenter || this.ondragover || this.ondragleave\n  //         || this.ondrop\n  //     );\n  // },\n\n  /**\n   * Alias for animate('style')\n   * @param {boolean} loop\n   */\n  animateStyle: function (loop) {\n    return this.animate('style', loop);\n  },\n  attrKV: function (key, value) {\n    if (key !== 'style') {\n      Element.prototype.attrKV.call(this, key, value);\n    } else {\n      this.style.set(value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setStyle: function (key, value) {\n    this.style.set(key, value);\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * Use given style object\n   * @param  {Object} obj\n   */\n  useStyle: function (obj) {\n    this.style = new Style(obj, this);\n    this.dirty(false);\n    return this;\n  }\n};\nzrUtil.inherits(Displayable, Element);\nzrUtil.mixin(Displayable, RectText); // zrUtil.mixin(Displayable, Stateful);\n\nvar _default = Displayable;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/Displayable.js\n// module id = 1018\n// module chunks = 0 1 2","/**\n * @param {Array.<Object>} colorStops\n */\nvar Gradient = function (colorStops) {\n  this.colorStops = colorStops || [];\n};\n\nGradient.prototype = {\n  constructor: Gradient,\n  addColorStop: function (offset, color) {\n    this.colorStops.push({\n      offset: offset,\n      color: color\n    });\n  }\n};\nvar _default = Gradient;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/Gradient.js\n// module id = 1019\n// module chunks = 0 1 2","var numberUtil = require(\"../util/number\");\n\nvar formatUtil = require(\"../util/format\");\n\nvar Scale = require(\"./Scale\");\n\nvar helper = require(\"./helper\");\n\n/**\n * Interval scale\n * @module echarts/scale/Interval\n */\nvar roundNumber = numberUtil.round;\n/**\n * @alias module:echarts/coord/scale/Interval\n * @constructor\n */\n\nvar IntervalScale = Scale.extend({\n  type: 'interval',\n  _interval: 0,\n  _intervalPrecision: 2,\n  setExtent: function (start, end) {\n    var thisExtent = this._extent; //start,end may be a Number like '25',so...\n\n    if (!isNaN(start)) {\n      thisExtent[0] = parseFloat(start);\n    }\n\n    if (!isNaN(end)) {\n      thisExtent[1] = parseFloat(end);\n    }\n  },\n  unionExtent: function (other) {\n    var extent = this._extent;\n    other[0] < extent[0] && (extent[0] = other[0]);\n    other[1] > extent[1] && (extent[1] = other[1]); // unionExtent may called by it's sub classes\n\n    IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n  },\n\n  /**\n   * Get interval\n   */\n  getInterval: function () {\n    return this._interval;\n  },\n\n  /**\n   * Set interval\n   */\n  setInterval: function (interval) {\n    this._interval = interval; // Dropped auto calculated niceExtent and use user setted extent\n    // We assume user wan't to set both interval, min, max to get a better result\n\n    this._niceExtent = this._extent.slice();\n    this._intervalPrecision = helper.getIntervalPrecision(interval);\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    return helper.intervalScaleGetTicks(this._interval, this._extent, this._niceExtent, this._intervalPrecision);\n  },\n\n  /**\n   * @return {Array.<string>}\n   */\n  getTicksLabels: function () {\n    var labels = [];\n    var ticks = this.getTicks();\n\n    for (var i = 0; i < ticks.length; i++) {\n      labels.push(this.getLabel(ticks[i]));\n    }\n\n    return labels;\n  },\n\n  /**\n   * @param {number} data\n   * @param {Object} [opt]\n   * @param {number|string} [opt.precision] If 'auto', use nice presision.\n   * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n   * @return {string}\n   */\n  getLabel: function (data, opt) {\n    if (data == null) {\n      return '';\n    }\n\n    var precision = opt && opt.precision;\n\n    if (precision == null) {\n      precision = numberUtil.getPrecisionSafe(data) || 0;\n    } else if (precision === 'auto') {\n      // Should be more precise then tick.\n      precision = this._intervalPrecision;\n    } // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n    // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n\n\n    data = roundNumber(data, precision, true);\n    return formatUtil.addCommas(data);\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   *\n   * @param {number} [splitNumber = 5] Desired number of ticks\n   * @param {number} [minInterval]\n   * @param {number} [maxInterval]\n   */\n  niceTicks: function (splitNumber, minInterval, maxInterval) {\n    splitNumber = splitNumber || 5;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (!isFinite(span)) {\n      return;\n    } // User may set axis min 0 and data are all negative\n    // FIXME If it needs to reverse ?\n\n\n    if (span < 0) {\n      span = -span;\n      extent.reverse();\n    }\n\n    var result = helper.intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval);\n    this._intervalPrecision = result.intervalPrecision;\n    this._interval = result.interval;\n    this._niceExtent = result.niceTickExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @param {Object} opt\n   * @param {number} [opt.splitNumber = 5] Given approx tick number\n   * @param {boolean} [opt.fixMin=false]\n   * @param {boolean} [opt.fixMax=false]\n   * @param {boolean} [opt.minInterval]\n   * @param {boolean} [opt.maxInterval]\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      if (extent[0] !== 0) {\n        // Expand extent\n        var expandSize = extent[0]; // In the fowllowing case\n        //      Axis has been fixed max 100\n        //      Plus data are all 100 and axis extent are [100, 100].\n        // Extend to the both side will cause expanded max is larger than fixed max.\n        // So only expand to the smaller side.\n\n        if (!opt.fixMax) {\n          extent[1] += expandSize / 2;\n          extent[0] -= expandSize / 2;\n        } else {\n          extent[0] -= expandSize / 2;\n        }\n      } else {\n        extent[1] = 1;\n      }\n    }\n\n    var span = extent[1] - extent[0]; // If there are no data and extent are [Infinity, -Infinity]\n\n    if (!isFinite(span)) {\n      extent[0] = 0;\n      extent[1] = 1;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n    }\n  }\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nIntervalScale.create = function () {\n  return new IntervalScale();\n};\n\nvar _default = IntervalScale;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/scale/Interval.js\n// module id = 1020\n// module chunks = 0 1 2","var _util = require(\"zrender/lib/core/util\");\n\nvar retrieve = _util.retrieve;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar each = _util.each;\n\nvar formatUtil = require(\"../../util/format\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _number = require(\"../../util/number\");\n\nvar isRadianAroundZero = _number.isRadianAroundZero;\nvar remRadian = _number.remRadian;\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar matrixUtil = require(\"zrender/lib/core/matrix\");\n\nvar _vector = require(\"zrender/lib/core/vector\");\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar PI = Math.PI;\n\nfunction makeAxisEventDataBase(axisModel) {\n  var eventData = {\n    componentType: axisModel.mainType\n  };\n  eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n  return eventData;\n}\n/**\n * A final axis is translated and rotated from a \"standard axis\".\n * So opt.position and opt.rotation is required.\n *\n * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n * for example: (0, 0) ------------> (0, 50)\n *\n * nameDirection or tickDirection or labelDirection is 1 means tick\n * or label is below the standard axis, whereas is -1 means above\n * the standard axis. labelOffset means offset between label and axis,\n * which is useful when 'onZero', where axisLabel is in the grid and\n * label in outside grid.\n *\n * Tips: like always,\n * positive rotation represents anticlockwise, and negative rotation\n * represents clockwise.\n * The direction of position coordinate is the same as the direction\n * of screen coordinate.\n *\n * Do not need to consider axis 'inverse', which is auto processed by\n * axis extent.\n *\n * @param {module:zrender/container/Group} group\n * @param {Object} axisModel\n * @param {Object} opt Standard axis parameters.\n * @param {Array.<number>} opt.position [x, y]\n * @param {number} opt.rotation by radian\n * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle' or 'center'.\n * @param {number} [opt.tickDirection=1] 1 or -1\n * @param {number} [opt.labelDirection=1] 1 or -1\n * @param {number} [opt.labelOffset=0] Usefull when onZero.\n * @param {string} [opt.axisLabelShow] default get from axisModel.\n * @param {string} [opt.axisName] default get from axisModel.\n * @param {number} [opt.axisNameAvailableWidth]\n * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n * @param {number} [opt.labelInterval] Default label interval when label\n *                                     interval from model is null or 'auto'.\n * @param {number} [opt.strokeContainThreshold] Default label interval when label\n * @param {number} [opt.nameTruncateMaxWidth]\n */\n\n\nvar AxisBuilder = function (axisModel, opt) {\n  /**\n   * @readOnly\n   */\n  this.opt = opt;\n  /**\n   * @readOnly\n   */\n\n  this.axisModel = axisModel; // Default value\n\n  defaults(opt, {\n    labelOffset: 0,\n    nameDirection: 1,\n    tickDirection: 1,\n    labelDirection: 1,\n    silent: true\n  });\n  /**\n   * @readOnly\n   */\n\n  this.group = new graphic.Group(); // FIXME Not use a seperate text group?\n\n  var dumbGroup = new graphic.Group({\n    position: opt.position.slice(),\n    rotation: opt.rotation\n  }); // this.group.add(dumbGroup);\n  // this._dumbGroup = dumbGroup;\n\n  dumbGroup.updateTransform();\n  this._transform = dumbGroup.transform;\n  this._dumbGroup = dumbGroup;\n};\n\nAxisBuilder.prototype = {\n  constructor: AxisBuilder,\n  hasBuilder: function (name) {\n    return !!builders[name];\n  },\n  add: function (name) {\n    builders[name].call(this);\n  },\n  getGroup: function () {\n    return this.group;\n  }\n};\nvar builders = {\n  /**\n   * @private\n   */\n  axisLine: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n\n    if (!axisModel.get('axisLine.show')) {\n      return;\n    }\n\n    var extent = this.axisModel.axis.getExtent();\n    var matrix = this._transform;\n    var pt1 = [extent[0], 0];\n    var pt2 = [extent[1], 0];\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    }\n\n    var lineStyle = extend({\n      lineCap: 'round'\n    }, axisModel.getModel('axisLine.lineStyle').getLineStyle());\n    this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'line',\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: lineStyle,\n      strokeContainThreshold: opt.strokeContainThreshold || 5,\n      silent: true,\n      z2: 1\n    })));\n    var arrows = axisModel.get('axisLine.symbol');\n    var arrowSize = axisModel.get('axisLine.symbolSize');\n\n    if (arrows != null) {\n      if (typeof arrows === 'string') {\n        // Use the same arrow for start and end point\n        arrows = [arrows, arrows];\n      }\n\n      if (typeof arrowSize === 'string' || typeof arrowSize === 'number') {\n        // Use the same size for width and height\n        arrowSize = [arrowSize, arrowSize];\n      }\n\n      var symbolWidth = arrowSize[0];\n      var symbolHeight = arrowSize[1];\n      each([[opt.rotation + Math.PI / 2, pt1], [opt.rotation - Math.PI / 2, pt2]], function (item, index) {\n        if (arrows[index] !== 'none' && arrows[index] != null) {\n          var symbol = createSymbol(arrows[index], -symbolWidth / 2, -symbolHeight / 2, symbolWidth, symbolHeight, lineStyle.stroke, true);\n          symbol.attr({\n            rotation: item[0],\n            position: item[1],\n            silent: true\n          });\n          this.group.add(symbol);\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  axisTickLabel: function () {\n    var axisModel = this.axisModel;\n    var opt = this.opt;\n    var tickEls = buildAxisTick(this, axisModel, opt);\n    var labelEls = buildAxisLabel(this, axisModel, opt);\n    fixMinMaxLabelShow(axisModel, labelEls, tickEls);\n  },\n\n  /**\n   * @private\n   */\n  axisName: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n    var name = retrieve(opt.axisName, axisModel.get('name'));\n\n    if (!name) {\n      return;\n    }\n\n    var nameLocation = axisModel.get('nameLocation');\n    var nameDirection = opt.nameDirection;\n    var textStyleModel = axisModel.getModel('nameTextStyle');\n    var gap = axisModel.get('nameGap') || 0;\n    var extent = this.axisModel.axis.getExtent();\n    var gapSignal = extent[0] > extent[1] ? -1 : 1;\n    var pos = [nameLocation === 'start' ? extent[0] - gapSignal * gap : nameLocation === 'end' ? extent[1] + gapSignal * gap : (extent[0] + extent[1]) / 2, // 'middle'\n    // Reuse labelOffset.\n    isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0];\n    var labelLayout;\n    var nameRotation = axisModel.get('nameRotate');\n\n    if (nameRotation != null) {\n      nameRotation = nameRotation * PI / 180; // To radian.\n    }\n\n    var axisNameAvailableWidth;\n\n    if (isNameLocationCenter(nameLocation)) {\n      labelLayout = innerTextLayout(opt.rotation, nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n      nameDirection);\n    } else {\n      labelLayout = endTextLayout(opt, nameLocation, nameRotation || 0, extent);\n      axisNameAvailableWidth = opt.axisNameAvailableWidth;\n\n      if (axisNameAvailableWidth != null) {\n        axisNameAvailableWidth = Math.abs(axisNameAvailableWidth / Math.sin(labelLayout.rotation));\n        !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n      }\n    }\n\n    var textFont = textStyleModel.getFont();\n    var truncateOpt = axisModel.get('nameTruncate', true) || {};\n    var ellipsis = truncateOpt.ellipsis;\n    var maxWidth = retrieve(opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth); // FIXME\n    // truncate rich text? (consider performance)\n\n    var truncatedText = ellipsis != null && maxWidth != null ? formatUtil.truncateText(name, maxWidth, textFont, ellipsis, {\n      minChar: 2,\n      placeholder: truncateOpt.placeholder\n    }) : name;\n    var tooltipOpt = axisModel.get('tooltip', true);\n    var mainType = axisModel.mainType;\n    var formatterParams = {\n      componentType: mainType,\n      name: name,\n      $vars: ['name']\n    };\n    formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'name',\n      __fullText: name,\n      __truncatedText: truncatedText,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: isSilent(axisModel),\n      z2: 1,\n      tooltip: tooltipOpt && tooltipOpt.show ? extend({\n        content: name,\n        formatter: function () {\n          return name;\n        },\n        formatterParams: formatterParams\n      }, tooltipOpt) : null\n    });\n    graphic.setTextStyle(textEl.style, textStyleModel, {\n      text: truncatedText,\n      textFont: textFont,\n      textFill: textStyleModel.getTextColor() || axisModel.get('axisLine.lineStyle.color'),\n      textAlign: labelLayout.textAlign,\n      textVerticalAlign: labelLayout.textVerticalAlign\n    });\n\n    if (axisModel.get('triggerEvent')) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisName';\n      textEl.eventData.name = name;\n    } // FIXME\n\n\n    this._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    this.group.add(textEl);\n    textEl.decomposeTransform();\n  }\n};\n/**\n * @public\n * @static\n * @param {Object} opt\n * @param {number} axisRotation in radian\n * @param {number} textRotation in radian\n * @param {number} direction\n * @return {Object} {\n *  rotation, // according to axis\n *  textAlign,\n *  textVerticalAlign\n * }\n */\n\nvar innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n  var rotationDiff = remRadian(textRotation - axisRotation);\n  var textAlign;\n  var textVerticalAlign;\n\n  if (isRadianAroundZero(rotationDiff)) {\n    // Label is parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI)) {\n    // Label is inverse parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff > 0 && rotationDiff < PI) {\n      textAlign = direction > 0 ? 'right' : 'left';\n    } else {\n      textAlign = direction > 0 ? 'left' : 'right';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n};\n\nfunction endTextLayout(opt, textPosition, textRotate, extent) {\n  var rotationDiff = remRadian(textRotate - opt.rotation);\n  var textAlign;\n  var textVerticalAlign;\n  var inverse = extent[0] > extent[1];\n  var onLeft = textPosition === 'start' && !inverse || textPosition !== 'start' && inverse;\n\n  if (isRadianAroundZero(rotationDiff - PI / 2)) {\n    textVerticalAlign = onLeft ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n    textVerticalAlign = onLeft ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n      textAlign = onLeft ? 'left' : 'right';\n    } else {\n      textAlign = onLeft ? 'right' : 'left';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction isSilent(axisModel) {\n  var tooltipOpt = axisModel.get('tooltip');\n  return axisModel.get('silent') // Consider mouse cursor, add these restrictions.\n  || !(axisModel.get('triggerEvent') || tooltipOpt && tooltipOpt.show);\n}\n\nfunction fixMinMaxLabelShow(axisModel, labelEls, tickEls) {\n  // If min or max are user set, we need to check\n  // If the tick on min(max) are overlap on their neighbour tick\n  // If they are overlapped, we need to hide the min(max) tick label\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel'); // FIXME\n  // Have not consider onBand yet, where tick els is more than label els.\n\n  labelEls = labelEls || [];\n  tickEls = tickEls || [];\n  var firstLabel = labelEls[0];\n  var nextLabel = labelEls[1];\n  var lastLabel = labelEls[labelEls.length - 1];\n  var prevLabel = labelEls[labelEls.length - 2];\n  var firstTick = tickEls[0];\n  var nextTick = tickEls[1];\n  var lastTick = tickEls[tickEls.length - 1];\n  var prevTick = tickEls[tickEls.length - 2];\n\n  if (showMinLabel === false) {\n    ignoreEl(firstLabel);\n    ignoreEl(firstTick);\n  } else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n    if (showMinLabel) {\n      ignoreEl(nextLabel);\n      ignoreEl(nextTick);\n    } else {\n      ignoreEl(firstLabel);\n      ignoreEl(firstTick);\n    }\n  }\n\n  if (showMaxLabel === false) {\n    ignoreEl(lastLabel);\n    ignoreEl(lastTick);\n  } else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n    if (showMaxLabel) {\n      ignoreEl(prevLabel);\n      ignoreEl(prevTick);\n    } else {\n      ignoreEl(lastLabel);\n      ignoreEl(lastTick);\n    }\n  }\n}\n\nfunction ignoreEl(el) {\n  el && (el.ignore = true);\n}\n\nfunction isTwoLabelOverlapped(current, next, labelLayout) {\n  // current and next has the same rotation.\n  var firstRect = current && current.getBoundingRect().clone();\n  var nextRect = next && next.getBoundingRect().clone();\n\n  if (!firstRect || !nextRect) {\n    return;\n  } // When checking intersect of two rotated labels, we use mRotationBack\n  // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n\n\n  var mRotationBack = matrixUtil.identity([]);\n  matrixUtil.rotate(mRotationBack, mRotationBack, -current.rotation);\n  firstRect.applyTransform(matrixUtil.mul([], mRotationBack, current.getLocalTransform()));\n  nextRect.applyTransform(matrixUtil.mul([], mRotationBack, next.getLocalTransform()));\n  return firstRect.intersect(nextRect);\n}\n\nfunction isNameLocationCenter(nameLocation) {\n  return nameLocation === 'middle' || nameLocation === 'center';\n}\n/**\n * @static\n */\n\n\nvar ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval, ticksCnt, showMinLabel, showMaxLabel) {\n  if (i === 0 && showMinLabel || i === ticksCnt - 1 && showMaxLabel) {\n    return false;\n  } // FIXME\n  // Have not consider label overlap (if label is too long) yet.\n\n\n  var rawTick;\n  var scale = axis.scale;\n  return scale.type === 'ordinal' && (typeof interval === 'function' ? (rawTick = scale.getTicks()[i], !interval(rawTick, scale.getLabel(rawTick))) : i % (interval + 1));\n};\n/**\n * @static\n */\n\n\nvar getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n  var interval = model.get('interval');\n\n  if (interval == null || interval == 'auto') {\n    interval = labelInterval;\n  }\n\n  return interval;\n};\n\nfunction buildAxisTick(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n\n  if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n    return;\n  }\n\n  var tickModel = axisModel.getModel('axisTick');\n  var lineStyleModel = tickModel.getModel('lineStyle');\n  var tickLen = tickModel.get('length');\n  var tickInterval = getInterval(tickModel, opt.labelInterval);\n  var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel')); // FIXME\n  // Corresponds to ticksCoords ?\n\n  var ticks = axis.scale.getTicks();\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n  var pt1 = [];\n  var pt2 = [];\n  var matrix = axisBuilder._transform;\n  var tickEls = [];\n  var ticksCnt = ticksCoords.length;\n\n  for (var i = 0; i < ticksCnt; i++) {\n    // Only ordinal scale support tick interval\n    if (ifIgnoreOnTick(axis, i, tickInterval, ticksCnt, showMinLabel, showMaxLabel)) {\n      continue;\n    }\n\n    var tickCoord = ticksCoords[i];\n    pt1[0] = tickCoord;\n    pt1[1] = 0;\n    pt2[0] = tickCoord;\n    pt2[1] = opt.tickDirection * tickLen;\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    } // Tick line, Not use group transform to have better line draw\n\n\n    var tickEl = new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'tick_' + ticks[i],\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: defaults(lineStyleModel.getLineStyle(), {\n        stroke: axisModel.get('axisLine.lineStyle.color')\n      }),\n      z2: 2,\n      silent: true\n    }));\n    axisBuilder.group.add(tickEl);\n    tickEls.push(tickEl);\n  }\n\n  return tickEls;\n}\n\nfunction buildAxisLabel(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n  var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n  if (!show || axis.scale.isBlank()) {\n    return;\n  }\n\n  var labelModel = axisModel.getModel('axisLabel');\n  var labelMargin = labelModel.get('margin');\n  var ticks = axis.scale.getTicks();\n  var labels = axisModel.getFormattedLabels(); // Special label rotate.\n\n  var labelRotation = (retrieve(opt.labelRotate, labelModel.get('rotate')) || 0) * PI / 180;\n  var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n  var categoryData = axisModel.get('data');\n  var labelEls = [];\n  var silent = isSilent(axisModel);\n  var triggerEvent = axisModel.get('triggerEvent');\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n  each(ticks, function (tickVal, index) {\n    if (ifIgnoreOnTick(axis, index, opt.labelInterval, ticks.length, showMinLabel, showMaxLabel)) {\n      return;\n    }\n\n    var itemLabelModel = labelModel;\n\n    if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n      itemLabelModel = new Model(categoryData[tickVal].textStyle, labelModel, axisModel.ecModel);\n    }\n\n    var textColor = itemLabelModel.getTextColor() || axisModel.get('axisLine.lineStyle.color');\n    var tickCoord = axis.dataToCoord(tickVal);\n    var pos = [tickCoord, opt.labelOffset + opt.labelDirection * labelMargin];\n    var labelStr = axis.scale.getLabel(tickVal);\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'label_' + tickVal,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: silent,\n      z2: 10\n    });\n    graphic.setTextStyle(textEl.style, itemLabelModel, {\n      text: labels[index],\n      textAlign: itemLabelModel.getShallow('align', true) || labelLayout.textAlign,\n      textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true) || itemLabelModel.getShallow('baseline', true) || labelLayout.textVerticalAlign,\n      textFill: typeof textColor === 'function' ? textColor( // (1) In category axis with data zoom, tick is not the original\n      // index of axis.data. So tick should not be exposed to user\n      // in category axis.\n      // (2) Compatible with previous version, which always returns labelStr.\n      // But in interval scale labelStr is like '223,445', which maked\n      // user repalce ','. So we modify it to return original val but remain\n      // it as 'string' to avoid error in replacing.\n      axis.type === 'category' ? labelStr : axis.type === 'value' ? tickVal + '' : tickVal, index) : textColor\n    }); // Pack data for mouse event\n\n    if (triggerEvent) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisLabel';\n      textEl.eventData.value = labelStr;\n    } // FIXME\n\n\n    axisBuilder._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    labelEls.push(textEl);\n    axisBuilder.group.add(textEl);\n    textEl.decomposeTransform();\n  });\n  return labelEls;\n}\n\nvar _default = AxisBuilder;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axis/AxisBuilder.js\n// module id = 1021\n// module chunks = 0 1 2","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar axisPointerModelHelper = require(\"../axisPointer/modelHelper\");\n\n/**\n * Base class of AxisView.\n */\nvar AxisView = echarts.extendComponentView({\n  type: 'axis',\n\n  /**\n   * @private\n   */\n  _axisPointer: null,\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  axisPointerClass: null,\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    // FIXME\n    // This process should proformed after coordinate systems updated\n    // (axis scale updated), and should be performed each time update.\n    // So put it here temporarily, although it is not appropriate to\n    // put a model-writing procedure in `view`.\n    this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n    AxisView.superApply(this, 'render', arguments);\n    updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n  },\n\n  /**\n   * Action handler.\n   * @public\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/model/Global} ecModel\n   * @param {module:echarts/ExtensionAPI} api\n   * @param {Object} payload\n   */\n  updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n    updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    var axisPointer = this._axisPointer;\n    axisPointer && axisPointer.remove(api);\n    AxisView.superApply(this, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    disposeAxisPointer(this, api);\n    AxisView.superApply(this, 'dispose', arguments);\n  }\n});\n\nfunction updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n  var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n\n  if (!Clazz) {\n    return;\n  }\n\n  var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n  axisPointerModel ? (axisView._axisPointer || (axisView._axisPointer = new Clazz())).render(axisModel, axisPointerModel, api, forceRender) : disposeAxisPointer(axisView, api);\n}\n\nfunction disposeAxisPointer(axisView, ecModel, api) {\n  var axisPointer = axisView._axisPointer;\n  axisPointer && axisPointer.dispose(ecModel, api);\n  axisView._axisPointer = null;\n}\n\nvar axisPointerClazz = [];\n\nAxisView.registerAxisPointerClass = function (type, clazz) {\n  axisPointerClazz[type] = clazz;\n};\n\nAxisView.getAxisPointerClass = function (type) {\n  return type && axisPointerClazz[type];\n};\n\nvar _default = AxisView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axis/AxisView.js\n// module id = 1022\n// module chunks = 0 1 2","var _config = require(\"../config\");\n\nvar debugMode = _config.debugMode;\n\nvar log = function () {};\n\nif (debugMode === 1) {\n  log = function () {\n    for (var k in arguments) {\n      throw new Error(arguments[k]);\n    }\n  };\n} else if (debugMode > 1) {\n  log = function () {\n    for (var k in arguments) {\n      console.log(arguments[k]);\n    }\n  };\n}\n\nvar _default = log;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/log.js\n// module id = 1023\n// module chunks = 0 1 2","// https://github.com/mziccard/node-timsort\nvar DEFAULT_MIN_MERGE = 32;\nvar DEFAULT_MIN_GALLOPING = 7;\nvar DEFAULT_TMP_STORAGE_LENGTH = 256;\n\nfunction minRunLength(n) {\n  var r = 0;\n\n  while (n >= DEFAULT_MIN_MERGE) {\n    r |= n & 1;\n    n >>= 1;\n  }\n\n  return n + r;\n}\n\nfunction makeAscendingRun(array, lo, hi, compare) {\n  var runHi = lo + 1;\n\n  if (runHi === hi) {\n    return 1;\n  }\n\n  if (compare(array[runHi++], array[lo]) < 0) {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n      runHi++;\n    }\n\n    reverseRun(array, lo, runHi);\n  } else {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n      runHi++;\n    }\n  }\n\n  return runHi - lo;\n}\n\nfunction reverseRun(array, lo, hi) {\n  hi--;\n\n  while (lo < hi) {\n    var t = array[lo];\n    array[lo++] = array[hi];\n    array[hi--] = t;\n  }\n}\n\nfunction binaryInsertionSort(array, lo, hi, start, compare) {\n  if (start === lo) {\n    start++;\n  }\n\n  for (; start < hi; start++) {\n    var pivot = array[start];\n    var left = lo;\n    var right = start;\n    var mid;\n\n    while (left < right) {\n      mid = left + right >>> 1;\n\n      if (compare(pivot, array[mid]) < 0) {\n        right = mid;\n      } else {\n        left = mid + 1;\n      }\n    }\n\n    var n = start - left;\n\n    switch (n) {\n      case 3:\n        array[left + 3] = array[left + 2];\n\n      case 2:\n        array[left + 2] = array[left + 1];\n\n      case 1:\n        array[left + 1] = array[left];\n        break;\n\n      default:\n        while (n > 0) {\n          array[left + n] = array[left + n - 1];\n          n--;\n        }\n\n    }\n\n    array[left] = pivot;\n  }\n}\n\nfunction gallopLeft(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) > 0) {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  } else {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) > 0) {\n      lastOffset = m + 1;\n    } else {\n      offset = m;\n    }\n  }\n\n  return offset;\n}\n\nfunction gallopRight(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) < 0) {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  } else {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) < 0) {\n      offset = m;\n    } else {\n      lastOffset = m + 1;\n    }\n  }\n\n  return offset;\n}\n\nfunction TimSort(array, compare) {\n  var minGallop = DEFAULT_MIN_GALLOPING;\n  var length = 0;\n  var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n  var stackLength = 0;\n  var runStart;\n  var runLength;\n  var stackSize = 0;\n  length = array.length;\n\n  if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n    tmpStorageLength = length >>> 1;\n  }\n\n  var tmp = [];\n  stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n  runStart = [];\n  runLength = [];\n\n  function pushRun(_runStart, _runLength) {\n    runStart[stackSize] = _runStart;\n    runLength[stackSize] = _runLength;\n    stackSize += 1;\n  }\n\n  function mergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n        if (runLength[n - 1] < runLength[n + 1]) {\n          n--;\n        }\n      } else if (runLength[n] > runLength[n + 1]) {\n        break;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function forceMergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n        n--;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function mergeAt(i) {\n    var start1 = runStart[i];\n    var length1 = runLength[i];\n    var start2 = runStart[i + 1];\n    var length2 = runLength[i + 1];\n    runLength[i] = length1 + length2;\n\n    if (i === stackSize - 3) {\n      runStart[i + 1] = runStart[i + 2];\n      runLength[i + 1] = runLength[i + 2];\n    }\n\n    stackSize--;\n    var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n    start1 += k;\n    length1 -= k;\n\n    if (length1 === 0) {\n      return;\n    }\n\n    length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n    if (length2 === 0) {\n      return;\n    }\n\n    if (length1 <= length2) {\n      mergeLow(start1, length1, start2, length2);\n    } else {\n      mergeHigh(start1, length1, start2, length2);\n    }\n  }\n\n  function mergeLow(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length1; i++) {\n      tmp[i] = array[start1 + i];\n    }\n\n    var cursor1 = 0;\n    var cursor2 = start2;\n    var dest = start1;\n    array[dest++] = array[cursor2++];\n\n    if (--length2 === 0) {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n\n      return;\n    }\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n      return;\n    }\n\n    var _minGallop = minGallop;\n    var count1, count2, exit;\n\n    while (1) {\n      count1 = 0;\n      count2 = 0;\n      exit = false;\n\n      do {\n        if (compare(array[cursor2], tmp[cursor1]) < 0) {\n          array[dest++] = array[cursor2++];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest++] = tmp[cursor1++];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n        if (count1 !== 0) {\n          for (i = 0; i < count1; i++) {\n            array[dest + i] = tmp[cursor1 + i];\n          }\n\n          dest += count1;\n          cursor1 += count1;\n          length1 -= count1;\n\n          if (length1 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = array[cursor2++];\n\n        if (--length2 === 0) {\n          exit = true;\n          break;\n        }\n\n        count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n        if (count2 !== 0) {\n          for (i = 0; i < count2; i++) {\n            array[dest + i] = array[cursor2 + i];\n          }\n\n          dest += count2;\n          cursor2 += count2;\n          length2 -= count2;\n\n          if (length2 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = tmp[cursor1++];\n\n        if (--length1 === 1) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n    minGallop < 1 && (minGallop = 1);\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n    } else if (length1 === 0) {\n      throw new Error(); // throw new Error('mergeLow preconditions were not respected');\n    } else {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n    }\n  }\n\n  function mergeHigh(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length2; i++) {\n      tmp[i] = array[start2 + i];\n    }\n\n    var cursor1 = start1 + length1 - 1;\n    var cursor2 = length2 - 1;\n    var dest = start2 + length2 - 1;\n    var customCursor = 0;\n    var customDest = 0;\n    array[dest--] = array[cursor1--];\n\n    if (--length1 === 0) {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n\n      return;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n      return;\n    }\n\n    var _minGallop = minGallop;\n\n    while (true) {\n      var count1 = 0;\n      var count2 = 0;\n      var exit = false;\n\n      do {\n        if (compare(tmp[cursor2], array[cursor1]) < 0) {\n          array[dest--] = array[cursor1--];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest--] = tmp[cursor2--];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n        if (count1 !== 0) {\n          dest -= count1;\n          cursor1 -= count1;\n          length1 -= count1;\n          customDest = dest + 1;\n          customCursor = cursor1 + 1;\n\n          for (i = count1 - 1; i >= 0; i--) {\n            array[customDest + i] = array[customCursor + i];\n          }\n\n          if (length1 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = tmp[cursor2--];\n\n        if (--length2 === 1) {\n          exit = true;\n          break;\n        }\n\n        count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n        if (count2 !== 0) {\n          dest -= count2;\n          cursor2 -= count2;\n          length2 -= count2;\n          customDest = dest + 1;\n          customCursor = cursor2 + 1;\n\n          for (i = 0; i < count2; i++) {\n            array[customDest + i] = tmp[customCursor + i];\n          }\n\n          if (length2 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = array[cursor1--];\n\n        if (--length1 === 0) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n\n    if (minGallop < 1) {\n      minGallop = 1;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n    } else if (length2 === 0) {\n      throw new Error(); // throw new Error('mergeHigh preconditions were not respected');\n    } else {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n    }\n  }\n\n  this.mergeRuns = mergeRuns;\n  this.forceMergeRuns = forceMergeRuns;\n  this.pushRun = pushRun;\n}\n\nfunction sort(array, compare, lo, hi) {\n  if (!lo) {\n    lo = 0;\n  }\n\n  if (!hi) {\n    hi = array.length;\n  }\n\n  var remaining = hi - lo;\n\n  if (remaining < 2) {\n    return;\n  }\n\n  var runLength = 0;\n\n  if (remaining < DEFAULT_MIN_MERGE) {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n    binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n    return;\n  }\n\n  var ts = new TimSort(array, compare);\n  var minRun = minRunLength(remaining);\n\n  do {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n\n    if (runLength < minRun) {\n      var force = remaining;\n\n      if (force > minRun) {\n        force = minRun;\n      }\n\n      binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n      runLength = force;\n    }\n\n    ts.pushRun(lo, runLength);\n    ts.mergeRuns();\n    remaining -= runLength;\n    lo += runLength;\n  } while (remaining !== 0);\n\n  ts.forceMergeRuns();\n}\n\nmodule.exports = sort;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/timsort.js\n// module id = 1024\n// module chunks = 0 1 2","var Displayable = require(\"./Displayable\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar imageHelper = require(\"./helper/image\");\n\n/**\n * @alias zrender/graphic/Image\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nfunction ZImage(opts) {\n  Displayable.call(this, opts);\n}\n\nZImage.prototype = {\n  constructor: ZImage,\n  type: 'image',\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var src = style.image; // Must bind each time\n\n    style.bind(ctx, this, prevEl);\n    var image = this._image = imageHelper.createOrUpdateImage(src, this._image, this, this.onload);\n\n    if (!image || !imageHelper.isImageReady(image)) {\n      return;\n    } // 图片已经加载完成\n    // if (image.nodeName.toUpperCase() == 'IMG') {\n    //     if (!image.complete) {\n    //         return;\n    //     }\n    // }\n    // Else is canvas\n\n\n    var x = style.x || 0;\n    var y = style.y || 0;\n    var width = style.width;\n    var height = style.height;\n    var aspect = image.width / image.height;\n\n    if (width == null && height != null) {\n      // Keep image/height ratio\n      width = height * aspect;\n    } else if (height == null && width != null) {\n      height = width / aspect;\n    } else if (width == null && height == null) {\n      width = image.width;\n      height = image.height;\n    } // 设置transform\n\n\n    this.setTransform(ctx);\n\n    if (style.sWidth && style.sHeight) {\n      var sx = style.sx || 0;\n      var sy = style.sy || 0;\n      ctx.drawImage(image, sx, sy, style.sWidth, style.sHeight, x, y, width, height);\n    } else if (style.sx && style.sy) {\n      var sx = style.sx;\n      var sy = style.sy;\n      var sWidth = width - sx;\n      var sHeight = height - sy;\n      ctx.drawImage(image, sx, sy, sWidth, sHeight, x, y, width, height);\n    } else {\n      ctx.drawImage(image, x, y, width, height);\n    }\n\n    this.restoreTransform(ctx); // Draw rect text\n\n    if (style.text != null) {\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  getBoundingRect: function () {\n    var style = this.style;\n\n    if (!this._rect) {\n      this._rect = new BoundingRect(style.x || 0, style.y || 0, style.width || 0, style.height || 0);\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(ZImage, Displayable);\nvar _default = ZImage;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/Image.js\n// module id = 1025\n// module chunks = 0 1 2","var LRU = require(\"../../core/LRU\");\n\nvar globalImageCache = new LRU(50);\n/**\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\nfunction findExistImage(newImageOrSrc) {\n  if (typeof newImageOrSrc === 'string') {\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    return cachedImgObj && cachedImgObj.image;\n  } else {\n    return newImageOrSrc;\n  }\n}\n/**\n * Caution: User should cache loaded images, but not just count on LRU.\n * Consider if required images more than LRU size, will dead loop occur?\n *\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @param {HTMLImageElement|HTMLCanvasElement|Canvas} image Existent image.\n * @param {module:zrender/Element} [hostEl] For calling `dirty`.\n * @param {Function} [cb] params: (image, cbPayload)\n * @param {Object} [cbPayload] Payload on cb calling.\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\n\nfunction createOrUpdateImage(newImageOrSrc, image, hostEl, cb, cbPayload) {\n  if (!newImageOrSrc) {\n    return image;\n  } else if (typeof newImageOrSrc === 'string') {\n    // Image should not be loaded repeatly.\n    if (image && image.__zrImageSrc === newImageOrSrc || !hostEl) {\n      return image;\n    } // Only when there is no existent image or existent image src\n    // is different, this method is responsible for load.\n\n\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    var pendingWrap = {\n      hostEl: hostEl,\n      cb: cb,\n      cbPayload: cbPayload\n    };\n\n    if (cachedImgObj) {\n      image = cachedImgObj.image;\n      !isImageReady(image) && cachedImgObj.pending.push(pendingWrap);\n    } else {\n      !image && (image = new Image());\n      image.onload = imageOnLoad;\n      globalImageCache.put(newImageOrSrc, image.__cachedImgObj = {\n        image: image,\n        pending: [pendingWrap]\n      });\n      image.src = image.__zrImageSrc = newImageOrSrc;\n    }\n\n    return image;\n  } // newImageOrSrc is an HTMLImageElement or HTMLCanvasElement or Canvas\n  else {\n      return newImageOrSrc;\n    }\n}\n\nfunction imageOnLoad() {\n  var cachedImgObj = this.__cachedImgObj;\n  this.onload = this.__cachedImgObj = null;\n\n  for (var i = 0; i < cachedImgObj.pending.length; i++) {\n    var pendingWrap = cachedImgObj.pending[i];\n    var cb = pendingWrap.cb;\n    cb && cb(this, pendingWrap.cbPayload);\n    pendingWrap.hostEl.dirty();\n  }\n\n  cachedImgObj.pending.length = 0;\n}\n\nfunction isImageReady(image) {\n  return image && image.width && image.height;\n}\n\nexports.findExistImage = findExistImage;\nexports.createOrUpdateImage = createOrUpdateImage;\nexports.isImageReady = isImageReady;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/helper/image.js\n// module id = 1026\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _clazz = require(\"./clazz\");\n\nvar parseClassType = _clazz.parseClassType;\nvar base = 0;\nvar DELIMITER = '_';\n/**\n * @public\n * @param {string} type\n * @return {string}\n */\n\nfunction getUID(type) {\n  // Considering the case of crossing js context,\n  // use Math.random to make id as unique as possible.\n  return [type || '', base++, Math.random()].join(DELIMITER);\n}\n/**\n * @inner\n */\n\n\nfunction enableSubTypeDefaulter(entity) {\n  var subTypeDefaulters = {};\n\n  entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n    componentType = parseClassType(componentType);\n    subTypeDefaulters[componentType.main] = defaulter;\n  };\n\n  entity.determineSubType = function (componentType, option) {\n    var type = option.type;\n\n    if (!type) {\n      var componentTypeMain = parseClassType(componentType).main;\n\n      if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n        type = subTypeDefaulters[componentTypeMain](option);\n      }\n    }\n\n    return type;\n  };\n\n  return entity;\n}\n/**\n * Topological travel on Activity Network (Activity On Vertices).\n * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n *\n * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n *\n * If there is circle dependencey, Error will be thrown.\n *\n */\n\n\nfunction enableTopologicalTravel(entity, dependencyGetter) {\n  /**\n   * @public\n   * @param {Array.<string>} targetNameList Target Component type list.\n   *                                           Can be ['aa', 'bb', 'aa.xx']\n   * @param {Array.<string>} fullNameList By which we can build dependency graph.\n   * @param {Function} callback Params: componentType, dependencies.\n   * @param {Object} context Scope of callback.\n   */\n  entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n    if (!targetNameList.length) {\n      return;\n    }\n\n    var result = makeDepndencyGraph(fullNameList);\n    var graph = result.graph;\n    var stack = result.noEntryList;\n    var targetNameSet = {};\n    zrUtil.each(targetNameList, function (name) {\n      targetNameSet[name] = true;\n    });\n\n    while (stack.length) {\n      var currComponentType = stack.pop();\n      var currVertex = graph[currComponentType];\n      var isInTargetNameSet = !!targetNameSet[currComponentType];\n\n      if (isInTargetNameSet) {\n        callback.call(context, currComponentType, currVertex.originalDeps.slice());\n        delete targetNameSet[currComponentType];\n      }\n\n      zrUtil.each(currVertex.successor, isInTargetNameSet ? removeEdgeAndAdd : removeEdge);\n    }\n\n    zrUtil.each(targetNameSet, function () {\n      throw new Error('Circle dependency may exists');\n    });\n\n    function removeEdge(succComponentType) {\n      graph[succComponentType].entryCount--;\n\n      if (graph[succComponentType].entryCount === 0) {\n        stack.push(succComponentType);\n      }\n    } // Consider this case: legend depends on series, and we call\n    // chart.setOption({series: [...]}), where only series is in option.\n    // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n    // not be called, but only sereis.mergeOption is called. Thus legend\n    // have no chance to update its local record about series (like which\n    // name of series is available in legend).\n\n\n    function removeEdgeAndAdd(succComponentType) {\n      targetNameSet[succComponentType] = true;\n      removeEdge(succComponentType);\n    }\n  };\n  /**\n   * DepndencyGraph: {Object}\n   * key: conponentType,\n   * value: {\n   *     successor: [conponentTypes...],\n   *     originalDeps: [conponentTypes...],\n   *     entryCount: {number}\n   * }\n   */\n\n\n  function makeDepndencyGraph(fullNameList) {\n    var graph = {};\n    var noEntryList = [];\n    zrUtil.each(fullNameList, function (name) {\n      var thisItem = createDependencyGraphItem(graph, name);\n      var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n      var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n      thisItem.entryCount = availableDeps.length;\n\n      if (thisItem.entryCount === 0) {\n        noEntryList.push(name);\n      }\n\n      zrUtil.each(availableDeps, function (dependentName) {\n        if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n          thisItem.predecessor.push(dependentName);\n        }\n\n        var thatItem = createDependencyGraphItem(graph, dependentName);\n\n        if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n          thatItem.successor.push(name);\n        }\n      });\n    });\n    return {\n      graph: graph,\n      noEntryList: noEntryList\n    };\n  }\n\n  function createDependencyGraphItem(graph, name) {\n    if (!graph[name]) {\n      graph[name] = {\n        predecessor: [],\n        successor: []\n      };\n    }\n\n    return graph[name];\n  }\n\n  function getAvailableDependencies(originalDeps, fullNameList) {\n    var availableDeps = [];\n    zrUtil.each(originalDeps, function (dep) {\n      zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n    });\n    return availableDeps;\n  }\n}\n\nexports.getUID = getUID;\nexports.enableSubTypeDefaulter = enableSubTypeDefaulter;\nexports.enableTopologicalTravel = enableTopologicalTravel;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/component.js\n// module id = 1027\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisHelper = require(\"./axisHelper\");\n\nfunction getName(obj) {\n  if (zrUtil.isObject(obj) && obj.value != null) {\n    return obj.value;\n  } else {\n    return obj + '';\n  }\n}\n\nvar _default = {\n  /**\n   * Format labels\n   * @return {Array.<string>}\n   */\n  getFormattedLabels: function () {\n    return axisHelper.getFormattedLabels(this.axis, this.get('axisLabel.formatter'));\n  },\n\n  /**\n   * Get categories\n   */\n  getCategories: function () {\n    return this.get('type') === 'category' && zrUtil.map(this.get('data'), getName);\n  },\n\n  /**\n   * @param {boolean} origin\n   * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n   */\n  getMin: function (origin) {\n    var option = this.option;\n    var min = !origin && option.rangeStart != null ? option.rangeStart : option.min;\n\n    if (this.axis && min != null && min !== 'dataMin' && typeof min !== 'function' && !zrUtil.eqNaN(min)) {\n      min = this.axis.scale.parse(min);\n    }\n\n    return min;\n  },\n\n  /**\n   * @param {boolean} origin\n   * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n   */\n  getMax: function (origin) {\n    var option = this.option;\n    var max = !origin && option.rangeEnd != null ? option.rangeEnd : option.max;\n\n    if (this.axis && max != null && max !== 'dataMax' && typeof max !== 'function' && !zrUtil.eqNaN(max)) {\n      max = this.axis.scale.parse(max);\n    }\n\n    return max;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  getNeedCrossZero: function () {\n    var option = this.option;\n    return option.rangeStart != null || option.rangeEnd != null ? false : !option.scale;\n  },\n\n  /**\n   * Should be implemented by each axis model if necessary.\n   * @return {module:echarts/model/Component} coordinate system model\n   */\n  getCoordSysModel: zrUtil.noop,\n\n  /**\n   * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n   * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n   */\n  setRange: function (rangeStart, rangeEnd) {\n    this.option.rangeStart = rangeStart;\n    this.option.rangeEnd = rangeEnd;\n  },\n\n  /**\n   * Reset range\n   */\n  resetRange: function () {\n    // rangeStart and rangeEnd is readonly.\n    this.option.rangeStart = this.option.rangeEnd = null;\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/axisModelCommonMixin.js\n// module id = 1028\n// module chunks = 0 1 2","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar helper = require(\"./helper\");\n\nvar AxisProxy = require(\"./AxisProxy\");\n\nvar each = zrUtil.each;\nvar eachAxisDim = helper.eachAxisDim;\nvar DataZoomModel = echarts.extendComponentModel({\n  type: 'dataZoom',\n  dependencies: ['xAxis', 'yAxis', 'zAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'series'],\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    zlevel: 0,\n    z: 4,\n    // Higher than normal component (z: 2).\n    orient: null,\n    // Default auto by axisIndex. Possible value: 'horizontal', 'vertical'.\n    xAxisIndex: null,\n    // Default the first horizontal category axis.\n    yAxisIndex: null,\n    // Default the first vertical category axis.\n    filterMode: 'filter',\n    // Possible values: 'filter' or 'empty' or 'weakFilter'.\n    // 'filter': data items which are out of window will be removed. This option is\n    //          applicable when filtering outliers. For each data item, it will be\n    //          filtered if one of the relevant dimensions is out of the window.\n    // 'weakFilter': data items which are out of window will be removed. This option\n    //          is applicable when filtering outliers. For each data item, it will be\n    //          filtered only if all  of the relevant dimensions are out of the same\n    //          side of the window.\n    // 'empty': data items which are out of window will be set to empty.\n    //          This option is applicable when user should not neglect\n    //          that there are some data items out of window.\n    // 'none': Do not filter.\n    // Taking line chart as an example, line will be broken in\n    // the filtered points when filterModel is set to 'empty', but\n    // be connected when set to 'filter'.\n    throttle: null,\n    // Dispatch action by the fixed rate, avoid frequency.\n    // default 100. Do not throttle when use null/undefined.\n    // If animation === true and animationDurationUpdate > 0,\n    // default value is 100, otherwise 20.\n    start: 0,\n    // Start percent. 0 ~ 100\n    end: 100,\n    // End percent. 0 ~ 100\n    startValue: null,\n    // Start value. If startValue specified, start is ignored.\n    endValue: null,\n    // End value. If endValue specified, end is ignored.\n    minSpan: null,\n    // 0 ~ 100\n    maxSpan: null,\n    // 0 ~ 100\n    minValueSpan: null,\n    // The range of dataZoom can not be smaller than that.\n    maxValueSpan: null,\n    // The range of dataZoom can not be larger than that.\n    rangeMode: null // Array, can be 'value' or 'percent'.\n\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel) {\n    /**\n     * key like x_0, y_1\n     * @private\n     * @type {Object}\n     */\n    this._dataIntervalByAxis = {};\n    /**\n     * @private\n     */\n\n    this._dataInfo = {};\n    /**\n     * key like x_0, y_1\n     * @private\n     */\n\n    this._axisProxies = {};\n    /**\n     * @readOnly\n     */\n\n    this.textStyleModel;\n    /**\n     * @private\n     */\n\n    this._autoThrottle = true;\n    /**\n     * 'percent' or 'value'\n     * @private\n     */\n\n    this._rangePropMode = ['percent', 'percent'];\n    var rawOption = retrieveRaw(option);\n    this.mergeDefaultAndTheme(option, ecModel);\n    this.doInit(rawOption);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (newOption) {\n    var rawOption = retrieveRaw(newOption); //FIX #2591\n\n    zrUtil.merge(this.option, newOption, true);\n    this.doInit(rawOption);\n  },\n\n  /**\n   * @protected\n   */\n  doInit: function (rawOption) {\n    var thisOption = this.option; // Disable realtime view update if canvas is not supported.\n\n    if (!env.canvasSupported) {\n      thisOption.realtime = false;\n    }\n\n    this._setDefaultThrottle(rawOption);\n\n    updateRangeUse(this, rawOption);\n    each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n      // start/end has higher priority over startValue/endValue if they\n      // both set, but we should make chart.setOption({endValue: 1000})\n      // effective, rather than chart.setOption({endValue: 1000, end: null}).\n      if (this._rangePropMode[index] === 'value') {\n        thisOption[names[0]] = null;\n      } // Otherwise do nothing and use the merge result.\n\n    }, this);\n    this.textStyleModel = this.getModel('textStyle');\n\n    this._resetTarget();\n\n    this._giveAxisProxies();\n  },\n\n  /**\n   * @private\n   */\n  _giveAxisProxies: function () {\n    var axisProxies = this._axisProxies;\n    this.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel, ecModel) {\n      var axisModel = this.dependentModels[dimNames.axis][axisIndex]; // If exists, share axisProxy with other dataZoomModels.\n\n      var axisProxy = axisModel.__dzAxisProxy || ( // Use the first dataZoomModel as the main model of axisProxy.\n      axisModel.__dzAxisProxy = new AxisProxy(dimNames.name, axisIndex, this, ecModel)); // FIXME\n      // dispose __dzAxisProxy\n\n      axisProxies[dimNames.name + '_' + axisIndex] = axisProxy;\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _resetTarget: function () {\n    var thisOption = this.option;\n\n    var autoMode = this._judgeAutoMode();\n\n    eachAxisDim(function (dimNames) {\n      var axisIndexName = dimNames.axisIndex;\n      thisOption[axisIndexName] = modelUtil.normalizeToArray(thisOption[axisIndexName]);\n    }, this);\n\n    if (autoMode === 'axisIndex') {\n      this._autoSetAxisIndex();\n    } else if (autoMode === 'orient') {\n      this._autoSetOrient();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _judgeAutoMode: function () {\n    // Auto set only works for setOption at the first time.\n    // The following is user's reponsibility. So using merged\n    // option is OK.\n    var thisOption = this.option;\n    var hasIndexSpecified = false;\n    eachAxisDim(function (dimNames) {\n      // When user set axisIndex as a empty array, we think that user specify axisIndex\n      // but do not want use auto mode. Because empty array may be encountered when\n      // some error occured.\n      if (thisOption[dimNames.axisIndex] != null) {\n        hasIndexSpecified = true;\n      }\n    }, this);\n    var orient = thisOption.orient;\n\n    if (orient == null && hasIndexSpecified) {\n      return 'orient';\n    } else if (!hasIndexSpecified) {\n      if (orient == null) {\n        thisOption.orient = 'horizontal';\n      }\n\n      return 'axisIndex';\n    }\n  },\n\n  /**\n   * @private\n   */\n  _autoSetAxisIndex: function () {\n    var autoAxisIndex = true;\n    var orient = this.get('orient', true);\n    var thisOption = this.option;\n    var dependentModels = this.dependentModels;\n\n    if (autoAxisIndex) {\n      // Find axis that parallel to dataZoom as default.\n      var dimName = orient === 'vertical' ? 'y' : 'x';\n\n      if (dependentModels[dimName + 'Axis'].length) {\n        thisOption[dimName + 'AxisIndex'] = [0];\n        autoAxisIndex = false;\n      } else {\n        each(dependentModels.singleAxis, function (singleAxisModel) {\n          if (autoAxisIndex && singleAxisModel.get('orient', true) === orient) {\n            thisOption.singleAxisIndex = [singleAxisModel.componentIndex];\n            autoAxisIndex = false;\n          }\n        });\n      }\n    }\n\n    if (autoAxisIndex) {\n      // Find the first category axis as default. (consider polar)\n      eachAxisDim(function (dimNames) {\n        if (!autoAxisIndex) {\n          return;\n        }\n\n        var axisIndices = [];\n        var axisModels = this.dependentModels[dimNames.axis];\n\n        if (axisModels.length && !axisIndices.length) {\n          for (var i = 0, len = axisModels.length; i < len; i++) {\n            if (axisModels[i].get('type') === 'category') {\n              axisIndices.push(i);\n            }\n          }\n        }\n\n        thisOption[dimNames.axisIndex] = axisIndices;\n\n        if (axisIndices.length) {\n          autoAxisIndex = false;\n        }\n      }, this);\n    }\n\n    if (autoAxisIndex) {\n      // FIXME\n      // 这里是兼容ec2的写法（没指定xAxisIndex和yAxisIndex时把scatter和双数值轴折柱纳入dataZoom控制），\n      // 但是实际是否需要Grid.js#getScaleByOption来判断（考虑time，log等axis type）？\n      // If both dataZoom.xAxisIndex and dataZoom.yAxisIndex is not specified,\n      // dataZoom component auto adopts series that reference to\n      // both xAxis and yAxis which type is 'value'.\n      this.ecModel.eachSeries(function (seriesModel) {\n        if (this._isSeriesHasAllAxesTypeOf(seriesModel, 'value')) {\n          eachAxisDim(function (dimNames) {\n            var axisIndices = thisOption[dimNames.axisIndex];\n            var axisIndex = seriesModel.get(dimNames.axisIndex);\n            var axisId = seriesModel.get(dimNames.axisId);\n            var axisModel = seriesModel.ecModel.queryComponents({\n              mainType: dimNames.axis,\n              index: axisIndex,\n              id: axisId\n            })[0];\n            axisIndex = axisModel.componentIndex;\n\n            if (zrUtil.indexOf(axisIndices, axisIndex) < 0) {\n              axisIndices.push(axisIndex);\n            }\n          });\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _autoSetOrient: function () {\n    var dim; // Find the first axis\n\n    this.eachTargetAxis(function (dimNames) {\n      !dim && (dim = dimNames.name);\n    }, this);\n    this.option.orient = dim === 'y' ? 'vertical' : 'horizontal';\n  },\n\n  /**\n   * @private\n   */\n  _isSeriesHasAllAxesTypeOf: function (seriesModel, axisType) {\n    // FIXME\n    // 需要series的xAxisIndex和yAxisIndex都首先自动设置上。\n    // 例如series.type === scatter时。\n    var is = true;\n    eachAxisDim(function (dimNames) {\n      var seriesAxisIndex = seriesModel.get(dimNames.axisIndex);\n      var axisModel = this.dependentModels[dimNames.axis][seriesAxisIndex];\n\n      if (!axisModel || axisModel.get('type') !== axisType) {\n        is = false;\n      }\n    }, this);\n    return is;\n  },\n\n  /**\n   * @private\n   */\n  _setDefaultThrottle: function (rawOption) {\n    // When first time user set throttle, auto throttle ends.\n    if (rawOption.hasOwnProperty('throttle')) {\n      this._autoThrottle = false;\n    }\n\n    if (this._autoThrottle) {\n      var globalOption = this.ecModel.option;\n      this.option.throttle = globalOption.animation && globalOption.animationDurationUpdate > 0 ? 100 : 20;\n    }\n  },\n\n  /**\n   * @public\n   */\n  getFirstTargetAxisModel: function () {\n    var firstAxisModel;\n    eachAxisDim(function (dimNames) {\n      if (firstAxisModel == null) {\n        var indices = this.get(dimNames.axisIndex);\n\n        if (indices.length) {\n          firstAxisModel = this.dependentModels[dimNames.axis][indices[0]];\n        }\n      }\n    }, this);\n    return firstAxisModel;\n  },\n\n  /**\n   * @public\n   * @param {Function} callback param: axisModel, dimNames, axisIndex, dataZoomModel, ecModel\n   */\n  eachTargetAxis: function (callback, context) {\n    var ecModel = this.ecModel;\n    eachAxisDim(function (dimNames) {\n      each(this.get(dimNames.axisIndex), function (axisIndex) {\n        callback.call(context, dimNames, axisIndex, this, ecModel);\n      }, this);\n    }, this);\n  },\n\n  /**\n   * @param {string} dimName\n   * @param {number} axisIndex\n   * @return {module:echarts/component/dataZoom/AxisProxy} If not found, return null/undefined.\n   */\n  getAxisProxy: function (dimName, axisIndex) {\n    return this._axisProxies[dimName + '_' + axisIndex];\n  },\n\n  /**\n   * @param {string} dimName\n   * @param {number} axisIndex\n   * @return {module:echarts/model/Model} If not found, return null/undefined.\n   */\n  getAxisModel: function (dimName, axisIndex) {\n    var axisProxy = this.getAxisProxy(dimName, axisIndex);\n    return axisProxy && axisProxy.getAxisModel();\n  },\n\n  /**\n   * If not specified, set to undefined.\n   *\n   * @public\n   * @param {Object} opt\n   * @param {number} [opt.start]\n   * @param {number} [opt.end]\n   * @param {number} [opt.startValue]\n   * @param {number} [opt.endValue]\n   * @param {boolean} [ignoreUpdateRangeUsg=false]\n   */\n  setRawRange: function (opt, ignoreUpdateRangeUsg) {\n    var option = this.option;\n    each([['start', 'startValue'], ['end', 'endValue']], function (names) {\n      // If only one of 'start' and 'startValue' is not null/undefined, the other\n      // should be cleared, which enable clear the option.\n      // If both of them are not set, keep option with the original value, which\n      // enable use only set start but not set end when calling `dispatchAction`.\n      // The same as 'end' and 'endValue'.\n      if (opt[names[0]] != null || opt[names[1]] != null) {\n        option[names[0]] = opt[names[0]];\n        option[names[1]] = opt[names[1]];\n      }\n    }, this);\n    !ignoreUpdateRangeUsg && updateRangeUse(this, opt);\n  },\n\n  /**\n   * @public\n   * @return {Array.<number>} [startPercent, endPercent]\n   */\n  getPercentRange: function () {\n    var axisProxy = this.findRepresentativeAxisProxy();\n\n    if (axisProxy) {\n      return axisProxy.getDataPercentWindow();\n    }\n  },\n\n  /**\n   * @public\n   * For example, chart.getModel().getComponent('dataZoom').getValueRange('y', 0);\n   *\n   * @param {string} [axisDimName]\n   * @param {number} [axisIndex]\n   * @return {Array.<number>} [startValue, endValue] value can only be '-' or finite number.\n   */\n  getValueRange: function (axisDimName, axisIndex) {\n    if (axisDimName == null && axisIndex == null) {\n      var axisProxy = this.findRepresentativeAxisProxy();\n\n      if (axisProxy) {\n        return axisProxy.getDataValueWindow();\n      }\n    } else {\n      return this.getAxisProxy(axisDimName, axisIndex).getDataValueWindow();\n    }\n  },\n\n  /**\n   * @public\n   * @param {module:echarts/model/Model} [axisModel] If axisModel given, find axisProxy\n   *      corresponding to the axisModel\n   * @return {module:echarts/component/dataZoom/AxisProxy}\n   */\n  findRepresentativeAxisProxy: function (axisModel) {\n    if (axisModel) {\n      return axisModel.__dzAxisProxy;\n    } // Find the first hosted axisProxy\n\n\n    var axisProxies = this._axisProxies;\n\n    for (var key in axisProxies) {\n      if (axisProxies.hasOwnProperty(key) && axisProxies[key].hostedBy(this)) {\n        return axisProxies[key];\n      }\n    } // If no hosted axis find not hosted axisProxy.\n    // Consider this case: dataZoomModel1 and dataZoomModel2 control the same axis,\n    // and the option.start or option.end settings are different. The percentRange\n    // should follow axisProxy.\n    // (We encounter this problem in toolbox data zoom.)\n\n\n    for (var key in axisProxies) {\n      if (axisProxies.hasOwnProperty(key) && !axisProxies[key].hostedBy(this)) {\n        return axisProxies[key];\n      }\n    }\n  },\n\n  /**\n   * @return {Array.<string>}\n   */\n  getRangePropMode: function () {\n    return this._rangePropMode.slice();\n  }\n});\n\nfunction retrieveRaw(option) {\n  var ret = {};\n  each(['start', 'end', 'startValue', 'endValue', 'throttle'], function (name) {\n    option.hasOwnProperty(name) && (ret[name] = option[name]);\n  });\n  return ret;\n}\n\nfunction updateRangeUse(dataZoomModel, rawOption) {\n  var rangePropMode = dataZoomModel._rangePropMode;\n  var rangeModeInOption = dataZoomModel.get('rangeMode');\n  each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n    var percentSpecified = rawOption[names[0]] != null;\n    var valueSpecified = rawOption[names[1]] != null;\n\n    if (percentSpecified && !valueSpecified) {\n      rangePropMode[index] = 'percent';\n    } else if (!percentSpecified && valueSpecified) {\n      rangePropMode[index] = 'value';\n    } else if (rangeModeInOption) {\n      rangePropMode[index] = rangeModeInOption[index];\n    } else if (percentSpecified) {\n      // percentSpecified && valueSpecified\n      rangePropMode[index] = 'percent';\n    } // else remain its original setting.\n\n  });\n}\n\nvar _default = DataZoomModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/DataZoomModel.js\n// module id = 1029\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar AXIS_DIMS = ['x', 'y', 'z', 'radius', 'angle', 'single']; // Supported coords.\n\nvar COORDS = ['cartesian2d', 'polar', 'singleAxis'];\n/**\n * @param {string} coordType\n * @return {boolean}\n */\n\nfunction isCoordSupported(coordType) {\n  return zrUtil.indexOf(COORDS, coordType) >= 0;\n}\n/**\n * Create \"each\" method to iterate names.\n *\n * @pubilc\n * @param  {Array.<string>} names\n * @param  {Array.<string>=} attrs\n * @return {Function}\n */\n\n\nfunction createNameEach(names, attrs) {\n  names = names.slice();\n  var capitalNames = zrUtil.map(names, formatUtil.capitalFirst);\n  attrs = (attrs || []).slice();\n  var capitalAttrs = zrUtil.map(attrs, formatUtil.capitalFirst);\n  return function (callback, context) {\n    zrUtil.each(names, function (name, index) {\n      var nameObj = {\n        name: name,\n        capital: capitalNames[index]\n      };\n\n      for (var j = 0; j < attrs.length; j++) {\n        nameObj[attrs[j]] = name + capitalAttrs[j];\n      }\n\n      callback.call(context, nameObj);\n    });\n  };\n}\n/**\n * Iterate each dimension name.\n *\n * @public\n * @param {Function} callback The parameter is like:\n *                            {\n *                                name: 'angle',\n *                                capital: 'Angle',\n *                                axis: 'angleAxis',\n *                                axisIndex: 'angleAixs',\n *                                index: 'angleIndex'\n *                            }\n * @param {Object} context\n */\n\n\nvar eachAxisDim = createNameEach(AXIS_DIMS, ['axisIndex', 'axis', 'index', 'id']);\n/**\n * If tow dataZoomModels has the same axis controlled, we say that they are 'linked'.\n * dataZoomModels and 'links' make up one or more graphics.\n * This function finds the graphic where the source dataZoomModel is in.\n *\n * @public\n * @param {Function} forEachNode Node iterator.\n * @param {Function} forEachEdgeType edgeType iterator\n * @param {Function} edgeIdGetter Giving node and edgeType, return an array of edge id.\n * @return {Function} Input: sourceNode, Output: Like {nodes: [], dims: {}}\n */\n\nfunction createLinkedNodesFinder(forEachNode, forEachEdgeType, edgeIdGetter) {\n  return function (sourceNode) {\n    var result = {\n      nodes: [],\n      records: {} // key: edgeType.name, value: Object (key: edge id, value: boolean).\n\n    };\n    forEachEdgeType(function (edgeType) {\n      result.records[edgeType.name] = {};\n    });\n\n    if (!sourceNode) {\n      return result;\n    }\n\n    absorb(sourceNode, result);\n    var existsLink;\n\n    do {\n      existsLink = false;\n      forEachNode(processSingleNode);\n    } while (existsLink);\n\n    function processSingleNode(node) {\n      if (!isNodeAbsorded(node, result) && isLinked(node, result)) {\n        absorb(node, result);\n        existsLink = true;\n      }\n    }\n\n    return result;\n  };\n\n  function isNodeAbsorded(node, result) {\n    return zrUtil.indexOf(result.nodes, node) >= 0;\n  }\n\n  function isLinked(node, result) {\n    var hasLink = false;\n    forEachEdgeType(function (edgeType) {\n      zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n        result.records[edgeType.name][edgeId] && (hasLink = true);\n      });\n    });\n    return hasLink;\n  }\n\n  function absorb(node, result) {\n    result.nodes.push(node);\n    forEachEdgeType(function (edgeType) {\n      zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n        result.records[edgeType.name][edgeId] = true;\n      });\n    });\n  }\n}\n\nexports.isCoordSupported = isCoordSupported;\nexports.createNameEach = createNameEach;\nexports.eachAxisDim = eachAxisDim;\nexports.createLinkedNodesFinder = createLinkedNodesFinder;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/helper.js\n// module id = 1030\n// module chunks = 0 1 2","var ComponentView = require(\"../../view/Component\");\n\nvar _default = ComponentView.extend({\n  type: 'dataZoom',\n  render: function (dataZoomModel, ecModel, api, payload) {\n    this.dataZoomModel = dataZoomModel;\n    this.ecModel = ecModel;\n    this.api = api;\n  },\n\n  /**\n   * Find the first target coordinate system.\n   *\n   * @protected\n   * @return {Object} {\n   *                   grid: [\n   *                       {model: coord0, axisModels: [axis1, axis3], coordIndex: 1},\n   *                       {model: coord1, axisModels: [axis0, axis2], coordIndex: 0},\n   *                       ...\n   *                   ],  // cartesians must not be null/undefined.\n   *                   polar: [\n   *                       {model: coord0, axisModels: [axis4], coordIndex: 0},\n   *                       ...\n   *                   ],  // polars must not be null/undefined.\n   *                   singleAxis: [\n   *                       {model: coord0, axisModels: [], coordIndex: 0}\n   *                   ]\n   */\n  getTargetCoordInfo: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var ecModel = this.ecModel;\n    var coordSysLists = {};\n    dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\n      var axisModel = ecModel.getComponent(dimNames.axis, axisIndex);\n\n      if (axisModel) {\n        var coordModel = axisModel.getCoordSysModel();\n        coordModel && save(coordModel, axisModel, coordSysLists[coordModel.mainType] || (coordSysLists[coordModel.mainType] = []), coordModel.componentIndex);\n      }\n    }, this);\n\n    function save(coordModel, axisModel, store, coordIndex) {\n      var item;\n\n      for (var i = 0; i < store.length; i++) {\n        if (store[i].model === coordModel) {\n          item = store[i];\n          break;\n        }\n      }\n\n      if (!item) {\n        store.push(item = {\n          model: coordModel,\n          axisModels: [],\n          coordIndex: coordIndex\n        });\n      }\n\n      item.axisModels.push(axisModel);\n    }\n\n    return coordSysLists;\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/DataZoomView.js\n// module id = 1031\n// module chunks = 0 1 2","var guid = require(\"./core/guid\");\n\nvar env = require(\"./core/env\");\n\nvar zrUtil = require(\"./core/util\");\n\nvar Handler = require(\"./Handler\");\n\nvar Storage = require(\"./Storage\");\n\nvar Painter = require(\"./Painter\");\n\nvar Animation = require(\"./animation/Animation\");\n\nvar HandlerProxy = require(\"./dom/HandlerProxy\");\n\n/*!\n* ZRender, a high performance 2d drawing library.\n*\n* Copyright (c) 2013, Baidu Inc.\n* All rights reserved.\n*\n* LICENSE\n* https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n*/\nvar useVML = !env.canvasSupported;\nvar painterCtors = {\n  canvas: Painter\n};\nvar instances = {}; // ZRender实例map索引\n\n/**\n * @type {string}\n */\n\nvar version = '3.7.4';\n/**\n * Initializing a zrender instance\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n * @return {module:zrender/ZRender}\n */\n\nfunction init(dom, opts) {\n  var zr = new ZRender(guid(), dom, opts);\n  instances[zr.id] = zr;\n  return zr;\n}\n/**\n * Dispose zrender instance\n * @param {module:zrender/ZRender} zr\n */\n\n\nfunction dispose(zr) {\n  if (zr) {\n    zr.dispose();\n  } else {\n    for (var key in instances) {\n      if (instances.hasOwnProperty(key)) {\n        instances[key].dispose();\n      }\n    }\n\n    instances = {};\n  }\n\n  return this;\n}\n/**\n * Get zrender instance by id\n * @param {string} id zrender instance id\n * @return {module:zrender/ZRender}\n */\n\n\nfunction getInstance(id) {\n  return instances[id];\n}\n\nfunction registerPainter(name, Ctor) {\n  painterCtors[name] = Ctor;\n}\n\nfunction delInstance(id) {\n  delete instances[id];\n}\n/**\n * @module zrender/ZRender\n */\n\n/**\n * @constructor\n * @alias module:zrender/ZRender\n * @param {string} id\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n */\n\n\nvar ZRender = function (id, dom, opts) {\n  opts = opts || {};\n  /**\n   * @type {HTMLDomElement}\n   */\n\n  this.dom = dom;\n  /**\n   * @type {string}\n   */\n\n  this.id = id;\n  var self = this;\n  var storage = new Storage();\n  var rendererType = opts.renderer; // TODO WebGL\n\n  if (useVML) {\n    if (!painterCtors.vml) {\n      throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n    }\n\n    rendererType = 'vml';\n  } else if (!rendererType || !painterCtors[rendererType]) {\n    rendererType = 'canvas';\n  }\n\n  var painter = new painterCtors[rendererType](dom, storage, opts);\n  this.storage = storage;\n  this.painter = painter;\n  var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;\n  this.handler = new Handler(storage, painter, handerProxy, painter.root);\n  /**\n   * @type {module:zrender/animation/Animation}\n   */\n\n  this.animation = new Animation({\n    stage: {\n      update: zrUtil.bind(this.flush, this)\n    }\n  });\n  this.animation.start();\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._needsRefresh; // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n  // FIXME 有点ugly\n\n  var oldDelFromStorage = storage.delFromStorage;\n  var oldAddToStorage = storage.addToStorage;\n\n  storage.delFromStorage = function (el) {\n    oldDelFromStorage.call(storage, el);\n    el && el.removeSelfFromZr(self);\n  };\n\n  storage.addToStorage = function (el) {\n    oldAddToStorage.call(storage, el);\n    el.addSelfToZr(self);\n  };\n};\n\nZRender.prototype = {\n  constructor: ZRender,\n\n  /**\n   * 获取实例唯一标识\n   * @return {string}\n   */\n  getId: function () {\n    return this.id;\n  },\n\n  /**\n   * 添加元素\n   * @param  {module:zrender/Element} el\n   */\n  add: function (el) {\n    this.storage.addRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * 删除元素\n   * @param  {module:zrender/Element} el\n   */\n  remove: function (el) {\n    this.storage.delRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Change configuration of layer\n   * @param {string} zLevel\n   * @param {Object} config\n   * @param {string} [config.clearColor=0] Clear color\n   * @param {string} [config.motionBlur=false] If enable motion blur\n   * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n  */\n  configLayer: function (zLevel, config) {\n    this.painter.configLayer(zLevel, config);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Repaint the canvas immediately\n   */\n  refreshImmediately: function () {\n    // var start = new Date();\n    // Clear needsRefresh ahead to avoid something wrong happens in refresh\n    // Or it will cause zrender refreshes again and again.\n    this._needsRefresh = false;\n    this.painter.refresh();\n    /**\n     * Avoid trigger zr.refresh in Element#beforeUpdate hook\n     */\n\n    this._needsRefresh = false; // var end = new Date();\n    // var log = document.getElementById('log');\n    // if (log) {\n    //     log.innerHTML = log.innerHTML + '<br>' + (end - start);\n    // }\n  },\n\n  /**\n   * Mark and repaint the canvas in the next frame of browser\n   */\n  refresh: function () {\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Perform all refresh\n   */\n  flush: function () {\n    if (this._needsRefresh) {\n      this.refreshImmediately();\n    }\n\n    if (this._needsRefreshHover) {\n      this.refreshHoverImmediately();\n    }\n  },\n\n  /**\n   * Add element to hover layer\n   * @param  {module:zrender/Element} el\n   * @param {Object} style\n   */\n  addHover: function (el, style) {\n    if (this.painter.addHover) {\n      this.painter.addHover(el, style);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Add element from hover layer\n   * @param  {module:zrender/Element} el\n   */\n  removeHover: function (el) {\n    if (this.painter.removeHover) {\n      this.painter.removeHover(el);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Clear all hover elements in hover layer\n   * @param  {module:zrender/Element} el\n   */\n  clearHover: function () {\n    if (this.painter.clearHover) {\n      this.painter.clearHover();\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Refresh hover in next frame\n   */\n  refreshHover: function () {\n    this._needsRefreshHover = true;\n  },\n\n  /**\n   * Refresh hover immediately\n   */\n  refreshHoverImmediately: function () {\n    this._needsRefreshHover = false;\n    this.painter.refreshHover && this.painter.refreshHover();\n  },\n\n  /**\n   * Resize the canvas.\n   * Should be invoked when container size is changed\n   * @param {Object} [opts]\n   * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n   * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n   */\n  resize: function (opts) {\n    opts = opts || {};\n    this.painter.resize(opts.width, opts.height);\n    this.handler.resize();\n  },\n\n  /**\n   * Stop and clear all animation immediately\n   */\n  clearAnimation: function () {\n    this.animation.clear();\n  },\n\n  /**\n   * Get container width\n   */\n  getWidth: function () {\n    return this.painter.getWidth();\n  },\n\n  /**\n   * Get container height\n   */\n  getHeight: function () {\n    return this.painter.getHeight();\n  },\n\n  /**\n   * Export the canvas as Base64 URL\n   * @param {string} type\n   * @param {string} [backgroundColor='#fff']\n   * @return {string} Base64 URL\n   */\n  // toDataURL: function(type, backgroundColor) {\n  //     return this.painter.getRenderedCanvas({\n  //         backgroundColor: backgroundColor\n  //     }).toDataURL(type);\n  // },\n\n  /**\n   * Converting a path to image.\n   * It has much better performance of drawing image rather than drawing a vector path.\n   * @param {module:zrender/graphic/Path} e\n   * @param {number} width\n   * @param {number} height\n   */\n  pathToImage: function (e, dpr) {\n    return this.painter.pathToImage(e, dpr);\n  },\n\n  /**\n   * Set default cursor\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    this.handler.setCursorStyle(cursorStyle);\n  },\n\n  /**\n   * Find hovered element\n   * @param {number} x\n   * @param {number} y\n   * @return {Object} {target, topTarget}\n   */\n  findHover: function (x, y) {\n    return this.handler.findHover(x, y);\n  },\n\n  /**\n   * Bind event\n   *\n   * @param {string} eventName Event name\n   * @param {Function} eventHandler Handler function\n   * @param {Object} [context] Context object\n   */\n  on: function (eventName, eventHandler, context) {\n    this.handler.on(eventName, eventHandler, context);\n  },\n\n  /**\n   * Unbind event\n   * @param {string} eventName Event name\n   * @param {Function} [eventHandler] Handler function\n   */\n  off: function (eventName, eventHandler) {\n    this.handler.off(eventName, eventHandler);\n  },\n\n  /**\n   * Trigger event manually\n   *\n   * @param {string} eventName Event name\n   * @param {event=} event Event object\n   */\n  trigger: function (eventName, event) {\n    this.handler.trigger(eventName, event);\n  },\n\n  /**\n   * Clear all objects and the canvas.\n   */\n  clear: function () {\n    this.storage.delRoot();\n    this.painter.clear();\n  },\n\n  /**\n   * Dispose self.\n   */\n  dispose: function () {\n    this.animation.stop();\n    this.clear();\n    this.storage.dispose();\n    this.painter.dispose();\n    this.handler.dispose();\n    this.animation = this.storage = this.painter = this.handler = null;\n    delInstance(this.id);\n  }\n};\nexports.version = version;\nexports.init = init;\nexports.dispose = dispose;\nexports.getInstance = getInstance;\nexports.registerPainter = registerPainter;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/zrender.js\n// module id = 1032\n// module chunks = 0 1 2","var _util = require(\"../../core/util\");\n\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar each = _util.each;\nvar normalizeCssArray = _util.normalizeCssArray;\nvar isString = _util.isString;\nvar isObject = _util.isObject;\n\nvar textContain = require(\"../../contain/text\");\n\nvar roundRectHelper = require(\"./roundRect\");\n\nvar imageHelper = require(\"./image\");\n\n// TODO: Have not support 'start', 'end' yet.\nvar VALID_TEXT_ALIGN = {\n  left: 1,\n  right: 1,\n  center: 1\n};\nvar VALID_TEXT_VERTICAL_ALIGN = {\n  top: 1,\n  bottom: 1,\n  middle: 1\n};\n/**\n * @param {module:zrender/graphic/Style} style\n * @return {module:zrender/graphic/Style} The input style.\n */\n\nfunction normalizeTextStyle(style) {\n  normalizeStyle(style);\n  each(style.rich, normalizeStyle);\n  return style;\n}\n\nfunction normalizeStyle(style) {\n  if (style) {\n    style.font = textContain.makeFont(style);\n    var textAlign = style.textAlign;\n    textAlign === 'middle' && (textAlign = 'center');\n    style.textAlign = textAlign == null || VALID_TEXT_ALIGN[textAlign] ? textAlign : 'left'; // Compatible with textBaseline.\n\n    var textVerticalAlign = style.textVerticalAlign || style.textBaseline;\n    textVerticalAlign === 'center' && (textVerticalAlign = 'middle');\n    style.textVerticalAlign = textVerticalAlign == null || VALID_TEXT_VERTICAL_ALIGN[textVerticalAlign] ? textVerticalAlign : 'top';\n    var textPadding = style.textPadding;\n\n    if (textPadding) {\n      style.textPadding = normalizeCssArray(style.textPadding);\n    }\n  }\n}\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {string} text\n * @param {module:zrender/graphic/Style} style\n * @param {Object|boolean} [rect] {x, y, width, height}\n *                  If set false, rect text is not used.\n */\n\n\nfunction renderText(hostEl, ctx, text, style, rect) {\n  style.rich ? renderRichText(hostEl, ctx, text, style, rect) : renderPlainText(hostEl, ctx, text, style, rect);\n}\n\nfunction renderPlainText(hostEl, ctx, text, style, rect) {\n  var font = setCtx(ctx, 'font', style.font || textContain.DEFAULT_FONT);\n  var textPadding = style.textPadding;\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parsePlainText(text, font, textPadding, style.truncate);\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var textLines = contentBlock.lines;\n  var lineHeight = contentBlock.lineHeight;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var textX = baseX;\n  var textY = boxY;\n  var needDrawBg = needDrawBackground(style);\n\n  if (needDrawBg || textPadding) {\n    // Consider performance, do not call getTextWidth util necessary.\n    var textWidth = textContain.getWidth(text, font);\n    var outerWidth = textWidth;\n    textPadding && (outerWidth += textPadding[1] + textPadding[3]);\n    var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n    needDrawBg && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n    if (textPadding) {\n      textX = getTextXForPadding(baseX, textAlign, textPadding);\n      textY += textPadding[0];\n    }\n  }\n\n  setCtx(ctx, 'textAlign', textAlign || 'left'); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle'); // Always set shadowBlur and shadowOffset to avoid leak from displayable.\n\n  setCtx(ctx, 'shadowBlur', style.textShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textShadowOffsetY || 0); // `textBaseline` is set as 'middle'.\n\n  textY += lineHeight / 2;\n  var textStrokeWidth = style.textStrokeWidth;\n  var textStroke = getStroke(style.textStroke, textStrokeWidth);\n  var textFill = getFill(style.textFill);\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n  }\n\n  for (var i = 0; i < textLines.length; i++) {\n    // Fill after stroke so the outline will not cover the main part.\n    textStroke && ctx.strokeText(textLines[i], textX, textY);\n    textFill && ctx.fillText(textLines[i], textX, textY);\n    textY += lineHeight;\n  }\n}\n\nfunction renderRichText(hostEl, ctx, text, style, rect) {\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parseRichText(text, style);\n  }\n\n  drawRichText(hostEl, ctx, contentBlock, style, rect);\n}\n\nfunction drawRichText(hostEl, ctx, contentBlock, style, rect) {\n  var contentWidth = contentBlock.width;\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var textPadding = style.textPadding;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var xLeft = boxX;\n  var lineTop = boxY;\n\n  if (textPadding) {\n    xLeft += textPadding[3];\n    lineTop += textPadding[0];\n  }\n\n  var xRight = xLeft + contentWidth;\n  needDrawBackground(style) && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n  for (var i = 0; i < contentBlock.lines.length; i++) {\n    var line = contentBlock.lines[i];\n    var tokens = line.tokens;\n    var tokenCount = tokens.length;\n    var lineHeight = line.lineHeight;\n    var usedWidth = line.width;\n    var leftIndex = 0;\n    var lineXLeft = xLeft;\n    var lineXRight = xRight;\n    var rightIndex = tokenCount - 1;\n    var token;\n\n    while (leftIndex < tokenCount && (token = tokens[leftIndex], !token.textAlign || token.textAlign === 'left')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft, 'left');\n      usedWidth -= token.width;\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    while (rightIndex >= 0 && (token = tokens[rightIndex], token.textAlign === 'right')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXRight, 'right');\n      usedWidth -= token.width;\n      lineXRight -= token.width;\n      rightIndex--;\n    } // The other tokens are placed as textAlign 'center' if there is enough space.\n\n\n    lineXLeft += (contentWidth - (lineXLeft - xLeft) - (xRight - lineXRight) - usedWidth) / 2;\n\n    while (leftIndex <= rightIndex) {\n      token = tokens[leftIndex]; // Consider width specified by user, use 'center' rather than 'left'.\n\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft + token.width / 2, 'center');\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    lineTop += lineHeight;\n  }\n}\n\nfunction applyTextRotation(ctx, style, rect, x, y) {\n  // textRotation only apply in RectText.\n  if (rect && style.textRotation) {\n    var origin = style.textOrigin;\n\n    if (origin === 'center') {\n      x = rect.width / 2 + rect.x;\n      y = rect.height / 2 + rect.y;\n    } else if (origin) {\n      x = origin[0] + rect.x;\n      y = origin[1] + rect.y;\n    }\n\n    ctx.translate(x, y); // Positive: anticlockwise\n\n    ctx.rotate(-style.textRotation);\n    ctx.translate(-x, -y);\n  }\n}\n\nfunction placeToken(hostEl, ctx, token, style, lineHeight, lineTop, x, textAlign) {\n  var tokenStyle = style.rich[token.styleName] || {}; // 'ctx.textBaseline' is always set as 'middle', for sake of\n  // the bias of \"Microsoft YaHei\".\n\n  var textVerticalAlign = token.textVerticalAlign;\n  var y = lineTop + lineHeight / 2;\n\n  if (textVerticalAlign === 'top') {\n    y = lineTop + token.height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y = lineTop + lineHeight - token.height / 2;\n  }\n\n  !token.isLineHolder && needDrawBackground(tokenStyle) && drawBackground(hostEl, ctx, tokenStyle, textAlign === 'right' ? x - token.width : textAlign === 'center' ? x - token.width / 2 : x, y - token.height / 2, token.width, token.height);\n  var textPadding = token.textPadding;\n\n  if (textPadding) {\n    x = getTextXForPadding(x, textAlign, textPadding);\n    y -= token.height / 2 - textPadding[2] - token.textHeight / 2;\n  }\n\n  setCtx(ctx, 'shadowBlur', retrieve3(tokenStyle.textShadowBlur, style.textShadowBlur, 0));\n  setCtx(ctx, 'shadowColor', tokenStyle.textShadowColor || style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', retrieve3(tokenStyle.textShadowOffsetX, style.textShadowOffsetX, 0));\n  setCtx(ctx, 'shadowOffsetY', retrieve3(tokenStyle.textShadowOffsetY, style.textShadowOffsetY, 0));\n  setCtx(ctx, 'textAlign', textAlign); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle');\n  setCtx(ctx, 'font', token.font || textContain.DEFAULT_FONT);\n  var textStroke = getStroke(tokenStyle.textStroke || style.textStroke, textStrokeWidth);\n  var textFill = getFill(tokenStyle.textFill || style.textFill);\n  var textStrokeWidth = retrieve2(tokenStyle.textStrokeWidth, style.textStrokeWidth); // Fill after stroke so the outline will not cover the main part.\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n    ctx.strokeText(token.text, x, y);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n    ctx.fillText(token.text, x, y);\n  }\n}\n\nfunction needDrawBackground(style) {\n  return style.textBackgroundColor || style.textBorderWidth && style.textBorderColor;\n} // style: {textBackgroundColor, textBorderWidth, textBorderColor, textBorderRadius}\n// shape: {x, y, width, height}\n\n\nfunction drawBackground(hostEl, ctx, style, x, y, width, height) {\n  var textBackgroundColor = style.textBackgroundColor;\n  var textBorderWidth = style.textBorderWidth;\n  var textBorderColor = style.textBorderColor;\n  var isPlainBg = isString(textBackgroundColor);\n  setCtx(ctx, 'shadowBlur', style.textBoxShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textBoxShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textBoxShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textBoxShadowOffsetY || 0);\n\n  if (isPlainBg || textBorderWidth && textBorderColor) {\n    ctx.beginPath();\n    var textBorderRadius = style.textBorderRadius;\n\n    if (!textBorderRadius) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height,\n        r: textBorderRadius\n      });\n    }\n\n    ctx.closePath();\n  }\n\n  if (isPlainBg) {\n    setCtx(ctx, 'fillStyle', textBackgroundColor);\n    ctx.fill();\n  } else if (isObject(textBackgroundColor)) {\n    var image = textBackgroundColor.image;\n    image = imageHelper.createOrUpdateImage(image, null, hostEl, onBgImageLoaded, textBackgroundColor);\n\n    if (image && imageHelper.isImageReady(image)) {\n      ctx.drawImage(image, x, y, width, height);\n    }\n  }\n\n  if (textBorderWidth && textBorderColor) {\n    setCtx(ctx, 'lineWidth', textBorderWidth);\n    setCtx(ctx, 'strokeStyle', textBorderColor);\n    ctx.stroke();\n  }\n}\n\nfunction onBgImageLoaded(image, textBackgroundColor) {\n  // Replace image, so that `contain/text.js#parseRichText`\n  // will get correct result in next tick.\n  textBackgroundColor.image = image;\n}\n\nfunction getBoxPosition(blockHeiht, style, rect) {\n  var baseX = style.x || 0;\n  var baseY = style.y || 0;\n  var textAlign = style.textAlign;\n  var textVerticalAlign = style.textVerticalAlign; // Text position represented by coord\n\n  if (rect) {\n    var textPosition = style.textPosition;\n\n    if (textPosition instanceof Array) {\n      // Percent\n      baseX = rect.x + parsePercent(textPosition[0], rect.width);\n      baseY = rect.y + parsePercent(textPosition[1], rect.height);\n    } else {\n      var res = textContain.adjustTextPositionOnRect(textPosition, rect, style.textDistance);\n      baseX = res.x;\n      baseY = res.y; // Default align and baseline when has textPosition\n\n      textAlign = textAlign || res.textAlign;\n      textVerticalAlign = textVerticalAlign || res.textVerticalAlign;\n    } // textOffset is only support in RectText, otherwise\n    // we have to adjust boundingRect for textOffset.\n\n\n    var textOffset = style.textOffset;\n\n    if (textOffset) {\n      baseX += textOffset[0];\n      baseY += textOffset[1];\n    }\n  }\n\n  return {\n    baseX: baseX,\n    baseY: baseY,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction setCtx(ctx, prop, value) {\n  // FIXME ??? performance try\n  // if (ctx.__currentValues[prop] !== value) {\n  // ctx[prop] = ctx.__currentValues[prop] = value;\n  ctx[prop] = value; // }\n\n  return ctx[prop];\n}\n/**\n * @param {string} [stroke] If specified, do not check style.textStroke.\n * @param {string} [lineWidth] If specified, do not check style.textStroke.\n * @param {number} style\n */\n\n\nfunction getStroke(stroke, lineWidth) {\n  return stroke == null || lineWidth <= 0 || stroke === 'transparent' || stroke === 'none' ? null // TODO pattern and gradient?\n  : stroke.image || stroke.colorStops ? '#000' : stroke;\n}\n\nfunction getFill(fill) {\n  return fill == null || fill === 'none' ? null // TODO pattern and gradient?\n  : fill.image || fill.colorStops ? '#000' : fill;\n}\n\nfunction parsePercent(value, maxValue) {\n  if (typeof value === 'string') {\n    if (value.lastIndexOf('%') >= 0) {\n      return parseFloat(value) / 100 * maxValue;\n    }\n\n    return parseFloat(value);\n  }\n\n  return value;\n}\n\nfunction getTextXForPadding(x, textAlign, textPadding) {\n  return textAlign === 'right' ? x - textPadding[1] : textAlign === 'center' ? x + textPadding[3] / 2 - textPadding[1] / 2 : x + textPadding[3];\n}\n/**\n * @param {string} text\n * @param {module:zrender/Style} style\n * @return {boolean}\n */\n\n\nfunction needDrawText(text, style) {\n  return text != null && (text || style.textBackgroundColor || style.textBorderWidth && style.textBorderColor || style.textPadding);\n}\n\nexports.normalizeTextStyle = normalizeTextStyle;\nexports.renderText = renderText;\nexports.getStroke = getStroke;\nexports.getFill = getFill;\nexports.needDrawText = needDrawText;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/helper/text.js\n// module id = 1033\n// module chunks = 0 1 2","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisPointerModelHelper = require(\"./axisPointer/modelHelper\");\n\nvar axisTrigger = require(\"./axisPointer/axisTrigger\");\n\nrequire(\"./axisPointer/AxisPointerModel\");\n\nrequire(\"./axisPointer/AxisPointerView\");\n\nrequire(\"./axisPointer/CartesianAxisPointer\");\n\n// CartesianAxisPointer is not supposed to be required here. But consider\n// echarts.simple.js and online build tooltip, which only require gridSimple,\n// CartesianAxisPointer should be able to required somewhere.\necharts.registerPreprocessor(function (option) {\n  // Always has a global axisPointerModel for default setting.\n  if (option) {\n    (!option.axisPointer || option.axisPointer.length === 0) && (option.axisPointer = {});\n    var link = option.axisPointer.link; // Normalize to array to avoid object mergin. But if link\n    // is not set, remain null/undefined, otherwise it will\n    // override existent link setting.\n\n    if (link && !zrUtil.isArray(link)) {\n      option.axisPointer.link = [link];\n    }\n  }\n}); // This process should proformed after coordinate systems created\n// and series data processed. So put it on statistic processing stage.\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n  // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n  // allAxesInfo should be updated when setOption performed.\n  ecModel.getComponent('axisPointer').coordSysAxesInfo = axisPointerModelHelper.collect(ecModel, api);\n}); // Broadcast to all views.\n\necharts.registerAction({\n  type: 'updateAxisPointer',\n  event: 'updateAxisPointer',\n  update: ':updateAxisPointer'\n}, axisTrigger);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer.js\n// module id = 1034\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar AxisBuilder = require(\"../axis/AxisBuilder\");\n\n/**\n * @param {module:echarts/model/Model} axisPointerModel\n */\nfunction buildElStyle(axisPointerModel) {\n  var axisPointerType = axisPointerModel.get('type');\n  var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n  var style;\n\n  if (axisPointerType === 'line') {\n    style = styleModel.getLineStyle();\n    style.fill = null;\n  } else if (axisPointerType === 'shadow') {\n    style = styleModel.getAreaStyle();\n    style.stroke = null;\n  }\n\n  return style;\n}\n/**\n * @param {Function} labelPos {align, verticalAlign, position}\n */\n\n\nfunction buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos) {\n  var value = axisPointerModel.get('value');\n  var text = getValueLabel(value, axisModel.axis, axisModel.ecModel, axisPointerModel.get('seriesDataIndices'), {\n    precision: axisPointerModel.get('label.precision'),\n    formatter: axisPointerModel.get('label.formatter')\n  });\n  var labelModel = axisPointerModel.getModel('label');\n  var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n  var font = labelModel.getFont();\n  var textRect = textContain.getBoundingRect(text, font);\n  var position = labelPos.position;\n  var width = textRect.width + paddings[1] + paddings[3];\n  var height = textRect.height + paddings[0] + paddings[2]; // Adjust by align.\n\n  var align = labelPos.align;\n  align === 'right' && (position[0] -= width);\n  align === 'center' && (position[0] -= width / 2);\n  var verticalAlign = labelPos.verticalAlign;\n  verticalAlign === 'bottom' && (position[1] -= height);\n  verticalAlign === 'middle' && (position[1] -= height / 2); // Not overflow ec container\n\n  confineInContainer(position, width, height, api);\n  var bgColor = labelModel.get('backgroundColor');\n\n  if (!bgColor || bgColor === 'auto') {\n    bgColor = axisModel.get('axisLine.lineStyle.color');\n  }\n\n  elOption.label = {\n    shape: {\n      x: 0,\n      y: 0,\n      width: width,\n      height: height,\n      r: labelModel.get('borderRadius')\n    },\n    position: position.slice(),\n    // TODO: rich\n    style: {\n      text: text,\n      textFont: font,\n      textFill: labelModel.getTextColor(),\n      textPosition: 'inside',\n      fill: bgColor,\n      stroke: labelModel.get('borderColor') || 'transparent',\n      lineWidth: labelModel.get('borderWidth') || 0,\n      shadowBlur: labelModel.get('shadowBlur'),\n      shadowColor: labelModel.get('shadowColor'),\n      shadowOffsetX: labelModel.get('shadowOffsetX'),\n      shadowOffsetY: labelModel.get('shadowOffsetY')\n    },\n    // Lable should be over axisPointer.\n    z2: 10\n  };\n} // Do not overflow ec container\n\n\nfunction confineInContainer(position, width, height, api) {\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  position[0] = Math.min(position[0] + width, viewWidth) - width;\n  position[1] = Math.min(position[1] + height, viewHeight) - height;\n  position[0] = Math.max(position[0], 0);\n  position[1] = Math.max(position[1], 0);\n}\n/**\n * @param {number} value\n * @param {module:echarts/coord/Axis} axis\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} opt\n * @param {Array.<Object>} seriesDataIndices\n * @param {number|string} opt.precision 'auto' or a number\n * @param {string|Function} opt.formatter label formatter\n */\n\n\nfunction getValueLabel(value, axis, ecModel, seriesDataIndices, opt) {\n  var text = axis.scale.getLabel( // If `precision` is set, width can be fixed (like '12.00500'), which\n  // helps to debounce when when moving label.\n  value, {\n    precision: opt.precision\n  });\n  var formatter = opt.formatter;\n\n  if (formatter) {\n    var params = {\n      value: axisHelper.getAxisRawValue(axis, value),\n      seriesData: []\n    };\n    zrUtil.each(seriesDataIndices, function (idxItem) {\n      var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n      var dataIndex = idxItem.dataIndexInside;\n      var dataParams = series && series.getDataParams(dataIndex);\n      dataParams && params.seriesData.push(dataParams);\n    });\n\n    if (zrUtil.isString(formatter)) {\n      text = formatter.replace('{value}', text);\n    } else if (zrUtil.isFunction(formatter)) {\n      text = formatter(params);\n    }\n  }\n\n  return text;\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @param {number} value\n * @param {Object} layoutInfo {\n *  rotation, position, labelOffset, labelDirection, labelMargin\n * }\n */\n\n\nfunction getTransformedPosition(axis, value, layoutInfo) {\n  var transform = matrix.create();\n  matrix.rotate(transform, transform, layoutInfo.rotation);\n  matrix.translate(transform, transform, layoutInfo.position);\n  return graphic.applyTransform([axis.dataToCoord(value), (layoutInfo.labelOffset || 0) + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)], transform);\n}\n\nfunction buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api) {\n  var textLayout = AxisBuilder.innerTextLayout(layoutInfo.rotation, 0, layoutInfo.labelDirection);\n  layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n  buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n    position: getTransformedPosition(axisModel.axis, value, layoutInfo),\n    align: textLayout.textAlign,\n    verticalAlign: textLayout.textVerticalAlign\n  });\n}\n/**\n * @param {Array.<number>} p1\n * @param {Array.<number>} p2\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeLineShape(p1, p2, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x1: p1[xDimIndex],\n    y1: p1[1 - xDimIndex],\n    x2: p2[xDimIndex],\n    y2: p2[1 - xDimIndex]\n  };\n}\n/**\n * @param {Array.<number>} xy\n * @param {Array.<number>} wh\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeRectShape(xy, wh, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x: xy[xDimIndex],\n    y: xy[1 - xDimIndex],\n    width: wh[xDimIndex],\n    height: wh[1 - xDimIndex]\n  };\n}\n\nfunction makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\n  return {\n    cx: cx,\n    cy: cy,\n    r0: r0,\n    r: r,\n    startAngle: startAngle,\n    endAngle: endAngle,\n    clockwise: true\n  };\n}\n\nexports.buildElStyle = buildElStyle;\nexports.buildLabelElOption = buildLabelElOption;\nexports.getValueLabel = getValueLabel;\nexports.getTransformedPosition = getTransformedPosition;\nexports.buildCartesianSingleLabelElOption = buildCartesianSingleLabelElOption;\nexports.makeLineShape = makeLineShape;\nexports.makeRectShape = makeRectShape;\nexports.makeSectorShape = makeSectorShape;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/viewHelper.js\n// module id = 1035\n// module chunks = 0 1 2","var matrix = require(\"../core/matrix\");\n\nvar vector = require(\"../core/vector\");\n\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\nvar mIdentity = matrix.identity;\nvar EPSILON = 5e-5;\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * @alias module:zrender/mixin/Transformable\n * @constructor\n */\n\n\nvar Transformable = function (opts) {\n  opts = opts || {}; // If there are no given position, rotation, scale\n\n  if (!opts.position) {\n    /**\n     * 平移\n     * @type {Array.<number>}\n     * @default [0, 0]\n     */\n    this.position = [0, 0];\n  }\n\n  if (opts.rotation == null) {\n    /**\n     * 旋转\n     * @type {Array.<number>}\n     * @default 0\n     */\n    this.rotation = 0;\n  }\n\n  if (!opts.scale) {\n    /**\n     * 缩放\n     * @type {Array.<number>}\n     * @default [1, 1]\n     */\n    this.scale = [1, 1];\n  }\n  /**\n   * 旋转和缩放的原点\n   * @type {Array.<number>}\n   * @default null\n   */\n\n\n  this.origin = this.origin || null;\n};\n\nvar transformableProto = Transformable.prototype;\ntransformableProto.transform = null;\n/**\n * 判断是否需要有坐标变换\n * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n */\n\ntransformableProto.needLocalTransform = function () {\n  return isNotAroundZero(this.rotation) || isNotAroundZero(this.position[0]) || isNotAroundZero(this.position[1]) || isNotAroundZero(this.scale[0] - 1) || isNotAroundZero(this.scale[1] - 1);\n};\n\ntransformableProto.updateTransform = function () {\n  var parent = this.parent;\n  var parentHasTransform = parent && parent.transform;\n  var needLocalTransform = this.needLocalTransform();\n  var m = this.transform;\n\n  if (!(needLocalTransform || parentHasTransform)) {\n    m && mIdentity(m);\n    return;\n  }\n\n  m = m || matrix.create();\n\n  if (needLocalTransform) {\n    this.getLocalTransform(m);\n  } else {\n    mIdentity(m);\n  } // 应用父节点变换\n\n\n  if (parentHasTransform) {\n    if (needLocalTransform) {\n      matrix.mul(m, parent.transform, m);\n    } else {\n      matrix.copy(m, parent.transform);\n    }\n  } // 保存这个变换矩阵\n\n\n  this.transform = m;\n  this.invTransform = this.invTransform || matrix.create();\n  matrix.invert(this.invTransform, m);\n};\n\ntransformableProto.getLocalTransform = function (m) {\n  return Transformable.getLocalTransform(this, m);\n};\n/**\n * 将自己的transform应用到context上\n * @param {CanvasRenderingContext2D} ctx\n */\n\n\ntransformableProto.setTransform = function (ctx) {\n  var m = this.transform;\n  var dpr = ctx.dpr || 1;\n\n  if (m) {\n    ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n  } else {\n    ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n  }\n};\n\ntransformableProto.restoreTransform = function (ctx) {\n  var dpr = ctx.dpr || 1;\n  ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n};\n\nvar tmpTransform = [];\n/**\n * 分解`transform`矩阵到`position`, `rotation`, `scale`\n */\n\ntransformableProto.decomposeTransform = function () {\n  if (!this.transform) {\n    return;\n  }\n\n  var parent = this.parent;\n  var m = this.transform;\n\n  if (parent && parent.transform) {\n    // Get local transform and decompose them to position, scale, rotation\n    matrix.mul(tmpTransform, parent.invTransform, m);\n    m = tmpTransform;\n  }\n\n  var sx = m[0] * m[0] + m[1] * m[1];\n  var sy = m[2] * m[2] + m[3] * m[3];\n  var position = this.position;\n  var scale = this.scale;\n\n  if (isNotAroundZero(sx - 1)) {\n    sx = Math.sqrt(sx);\n  }\n\n  if (isNotAroundZero(sy - 1)) {\n    sy = Math.sqrt(sy);\n  }\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  position[0] = m[4];\n  position[1] = m[5];\n  scale[0] = sx;\n  scale[1] = sy;\n  this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n};\n/**\n * Get global scale\n * @return {Array.<number>}\n */\n\n\ntransformableProto.getGlobalScale = function () {\n  var m = this.transform;\n\n  if (!m) {\n    return [1, 1];\n  }\n\n  var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n  var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  return [sx, sy];\n};\n/**\n * 变换坐标位置到 shape 的局部坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToLocal = function (x, y) {\n  var v2 = [x, y];\n  var invTransform = this.invTransform;\n\n  if (invTransform) {\n    vector.applyTransform(v2, v2, invTransform);\n  }\n\n  return v2;\n};\n/**\n * 变换局部坐标位置到全局坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToGlobal = function (x, y) {\n  var v2 = [x, y];\n  var transform = this.transform;\n\n  if (transform) {\n    vector.applyTransform(v2, v2, transform);\n  }\n\n  return v2;\n};\n/**\n * @static\n * @param {Object} target\n * @param {Array.<number>} target.origin\n * @param {number} target.rotation\n * @param {Array.<number>} target.position\n * @param {Array.<number>} [m]\n */\n\n\nTransformable.getLocalTransform = function (target, m) {\n  m = m || [];\n  mIdentity(m);\n  var origin = target.origin;\n  var scale = target.scale || [1, 1];\n  var rotation = target.rotation || 0;\n  var position = target.position || [0, 0];\n\n  if (origin) {\n    // Translate to origin\n    m[4] -= origin[0];\n    m[5] -= origin[1];\n  }\n\n  matrix.scale(m, m, scale);\n\n  if (rotation) {\n    matrix.rotate(m, m, rotation);\n  }\n\n  if (origin) {\n    // Translate back from origin\n    m[4] += origin[0];\n    m[5] += origin[1];\n  }\n\n  m[4] += position[0];\n  m[5] += position[1];\n  return m;\n};\n\nvar _default = Transformable;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/mixin/Transformable.js\n// module id = 1036\n// module chunks = 0 1 2","var vec2 = require(\"./vector\");\n\nvar curve = require(\"./curve\");\n\n/**\n * @author Yi Shen(https://github.com/pissang)\n */\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI2 = Math.PI * 2;\nvar start = vec2.create();\nvar end = vec2.create();\nvar extremity = vec2.create();\n/**\n * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n * @module zrender/core/bbox\n * @param {Array<Object>} points 顶点数组\n * @param {number} min\n * @param {number} max\n */\n\nfunction fromPoints(points, min, max) {\n  if (points.length === 0) {\n    return;\n  }\n\n  var p = points[0];\n  var left = p[0];\n  var right = p[0];\n  var top = p[1];\n  var bottom = p[1];\n  var i;\n\n  for (i = 1; i < points.length; i++) {\n    p = points[i];\n    left = mathMin(left, p[0]);\n    right = mathMax(right, p[0]);\n    top = mathMin(top, p[1]);\n    bottom = mathMax(bottom, p[1]);\n  }\n\n  min[0] = left;\n  min[1] = top;\n  max[0] = right;\n  max[1] = bottom;\n}\n/**\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromLine(x0, y0, x1, y1, min, max) {\n  min[0] = mathMin(x0, x1);\n  min[1] = mathMin(y0, y1);\n  max[0] = mathMax(x0, x1);\n  max[1] = mathMax(y0, y1);\n}\n\nvar xDim = [];\nvar yDim = [];\n/**\n * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\nfunction fromCubic(x0, y0, x1, y1, x2, y2, x3, y3, min, max) {\n  var cubicExtrema = curve.cubicExtrema;\n  var cubicAt = curve.cubicAt;\n  var i;\n  var n = cubicExtrema(x0, x1, x2, x3, xDim);\n  min[0] = Infinity;\n  min[1] = Infinity;\n  max[0] = -Infinity;\n  max[1] = -Infinity;\n\n  for (i = 0; i < n; i++) {\n    var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n    min[0] = mathMin(x, min[0]);\n    max[0] = mathMax(x, max[0]);\n  }\n\n  n = cubicExtrema(y0, y1, y2, y3, yDim);\n\n  for (i = 0; i < n; i++) {\n    var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n    min[1] = mathMin(y, min[1]);\n    max[1] = mathMax(y, max[1]);\n  }\n\n  min[0] = mathMin(x0, min[0]);\n  max[0] = mathMax(x0, max[0]);\n  min[0] = mathMin(x3, min[0]);\n  max[0] = mathMax(x3, max[0]);\n  min[1] = mathMin(y0, min[1]);\n  max[1] = mathMax(y0, max[1]);\n  min[1] = mathMin(y3, min[1]);\n  max[1] = mathMax(y3, max[1]);\n}\n/**\n * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromQuadratic(x0, y0, x1, y1, x2, y2, min, max) {\n  var quadraticExtremum = curve.quadraticExtremum;\n  var quadraticAt = curve.quadraticAt; // Find extremities, where derivative in x dim or y dim is zero\n\n  var tx = mathMax(mathMin(quadraticExtremum(x0, x1, x2), 1), 0);\n  var ty = mathMax(mathMin(quadraticExtremum(y0, y1, y2), 1), 0);\n  var x = quadraticAt(x0, x1, x2, tx);\n  var y = quadraticAt(y0, y1, y2, ty);\n  min[0] = mathMin(x0, x2, x);\n  min[1] = mathMin(y0, y2, y);\n  max[0] = mathMax(x0, x2, x);\n  max[1] = mathMax(y0, y2, y);\n}\n/**\n * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n * @method\n * @memberOf module:zrender/core/bbox\n * @param {number} x\n * @param {number} y\n * @param {number} rx\n * @param {number} ry\n * @param {number} startAngle\n * @param {number} endAngle\n * @param {number} anticlockwise\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromArc(x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max) {\n  var vec2Min = vec2.min;\n  var vec2Max = vec2.max;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff % PI2 < 1e-4 && diff > 1e-4) {\n    // Is a circle\n    min[0] = x - rx;\n    min[1] = y - ry;\n    max[0] = x + rx;\n    max[1] = y + ry;\n    return;\n  }\n\n  start[0] = mathCos(startAngle) * rx + x;\n  start[1] = mathSin(startAngle) * ry + y;\n  end[0] = mathCos(endAngle) * rx + x;\n  end[1] = mathSin(endAngle) * ry + y;\n  vec2Min(min, start, end);\n  vec2Max(max, start, end); // Thresh to [0, Math.PI * 2]\n\n  startAngle = startAngle % PI2;\n\n  if (startAngle < 0) {\n    startAngle = startAngle + PI2;\n  }\n\n  endAngle = endAngle % PI2;\n\n  if (endAngle < 0) {\n    endAngle = endAngle + PI2;\n  }\n\n  if (startAngle > endAngle && !anticlockwise) {\n    endAngle += PI2;\n  } else if (startAngle < endAngle && anticlockwise) {\n    startAngle += PI2;\n  }\n\n  if (anticlockwise) {\n    var tmp = endAngle;\n    endAngle = startAngle;\n    startAngle = tmp;\n  } // var number = 0;\n  // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n\n\n  for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n    if (angle > startAngle) {\n      extremity[0] = mathCos(angle) * rx + x;\n      extremity[1] = mathSin(angle) * ry + y;\n      vec2Min(min, extremity, min);\n      vec2Max(max, extremity, max);\n    }\n  }\n}\n\nexports.fromPoints = fromPoints;\nexports.fromLine = fromLine;\nexports.fromCubic = fromCubic;\nexports.fromQuadratic = fromQuadratic;\nexports.fromArc = fromArc;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/bbox.js\n// module id = 1037\n// module chunks = 0 1 2","var Displayable = require(\"./Displayable\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar textContain = require(\"../contain/text\");\n\nvar textHelper = require(\"./helper/text\");\n\n/**\n * @alias zrender/graphic/Text\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nvar Text = function (opts) {\n  // jshint ignore:line\n  Displayable.call(this, opts);\n};\n\nText.prototype = {\n  constructor: Text,\n  type: 'text',\n  brush: function (ctx, prevEl) {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true); // Use props with prefix 'text'.\n\n    style.fill = style.stroke = style.shadowBlur = style.shadowColor = style.shadowOffsetX = style.shadowOffsetY = null;\n    var text = style.text; // Convert to string\n\n    text != null && (text += ''); // Always bind style\n\n    style.bind(ctx, this, prevEl);\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    }\n\n    this.setTransform(ctx);\n    textHelper.renderText(this, ctx, text, style);\n    this.restoreTransform(ctx);\n  },\n  getBoundingRect: function () {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n    if (!this._rect) {\n      var text = style.text;\n      text != null ? text += '' : text = '';\n      var rect = textContain.getBoundingRect(style.text + '', style.font, style.textAlign, style.textVerticalAlign, style.textPadding, style.rich);\n      rect.x += style.x || 0;\n      rect.y += style.y || 0;\n\n      if (textHelper.getStroke(style.textStroke, style.textStrokeWidth)) {\n        var w = style.textStrokeWidth;\n        rect.x -= w / 2;\n        rect.y -= w / 2;\n        rect.width += w;\n        rect.height += w;\n      }\n\n      this._rect = rect;\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(Text, Displayable);\nvar _default = Text;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/Text.js\n// module id = 1038\n// module chunks = 0 1 2","var Group = require(\"zrender/lib/container/Group\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\nvar Component = function () {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewComponent');\n};\n\nComponent.prototype = {\n  constructor: Component,\n  init: function (ecModel, api) {},\n  render: function (componentModel, ecModel, api, payload) {},\n  dispose: function () {}\n};\nvar componentProto = Component.prototype;\n\ncomponentProto.updateView = componentProto.updateLayout = componentProto.updateVisual = function (seriesModel, ecModel, api, payload) {// Do nothing;\n}; // Enable Component.extend.\n\n\nclazzUtil.enableClassExtend(Component); // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Component, {\n  registerWhenExtend: true\n});\nvar _default = Component;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/view/Component.js\n// module id = 1039\n// module chunks = 0 1 2","/**\n * Calculate slider move result.\n * Usage:\n * (1) If both handle0 and handle1 are needed to be moved, set minSpan the same as\n * maxSpan and the same as `Math.abs(handleEnd[1] - handleEnds[0])`.\n * (2) If handle0 is forbidden to cross handle1, set minSpan as `0`.\n *\n * @param {number} delta Move length.\n * @param {Array.<number>} handleEnds handleEnds[0] can be bigger then handleEnds[1].\n *              handleEnds will be modified in this method.\n * @param {Array.<number>} extent handleEnds is restricted by extent.\n *              extent[0] should less or equals than extent[1].\n * @param {number|string} handleIndex Can be 'all', means that both move the two handleEnds,\n *              where the input minSpan and maxSpan will not work.\n * @param {number} [minSpan] The range of dataZoom can not be smaller than that.\n *              If not set, handle0 and cross handle1. If set as a non-negative\n *              number (including `0`), handles will push each other when reaching\n *              the minSpan.\n * @param {number} [maxSpan] The range of dataZoom can not be larger than that.\n * @return {Array.<number>} The input handleEnds.\n */\nfunction _default(delta, handleEnds, extent, handleIndex, minSpan, maxSpan) {\n  // Normalize firstly.\n  handleEnds[0] = restrict(handleEnds[0], extent);\n  handleEnds[1] = restrict(handleEnds[1], extent);\n  delta = delta || 0;\n  var extentSpan = extent[1] - extent[0]; // Notice maxSpan and minSpan can be null/undefined.\n\n  if (minSpan != null) {\n    minSpan = restrict(minSpan, [0, extentSpan]);\n  }\n\n  if (maxSpan != null) {\n    maxSpan = Math.max(maxSpan, minSpan != null ? minSpan : 0);\n  }\n\n  if (handleIndex === 'all') {\n    minSpan = maxSpan = Math.abs(handleEnds[1] - handleEnds[0]);\n    handleIndex = 0;\n  }\n\n  var originalDistSign = getSpanSign(handleEnds, handleIndex);\n  handleEnds[handleIndex] += delta; // Restrict in extent.\n\n  var extentMinSpan = minSpan || 0;\n  var realExtent = extent.slice();\n  originalDistSign.sign < 0 ? realExtent[0] += extentMinSpan : realExtent[1] -= extentMinSpan;\n  handleEnds[handleIndex] = restrict(handleEnds[handleIndex], realExtent); // Expand span.\n\n  var currDistSign = getSpanSign(handleEnds, handleIndex);\n\n  if (minSpan != null && (currDistSign.sign !== originalDistSign.sign || currDistSign.span < minSpan)) {\n    // If minSpan exists, 'cross' is forbinden.\n    handleEnds[1 - handleIndex] = handleEnds[handleIndex] + originalDistSign.sign * minSpan;\n  } // Shrink span.\n\n\n  var currDistSign = getSpanSign(handleEnds, handleIndex);\n\n  if (maxSpan != null && currDistSign.span > maxSpan) {\n    handleEnds[1 - handleIndex] = handleEnds[handleIndex] + currDistSign.sign * maxSpan;\n  }\n\n  return handleEnds;\n}\n\nfunction getSpanSign(handleEnds, handleIndex) {\n  var dist = handleEnds[handleIndex] - handleEnds[1 - handleIndex]; // If `handleEnds[0] === handleEnds[1]`, always believe that handleEnd[0]\n  // is at left of handleEnds[1] for non-cross case.\n\n  return {\n    span: Math.abs(dist),\n    sign: dist > 0 ? -1 : dist < 0 ? 1 : handleIndex ? -1 : 1\n  };\n}\n\nfunction restrict(value, extend) {\n  return Math.min(extend[1], Math.max(extend[0], value));\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/sliderMove.js\n// module id = 1040\n// module chunks = 0 1 2","function _default(seriesType, defaultSymbolType, legendSymbol, ecModel, api) {\n  // Encoding visual for all series include which is filtered for legend drawing\n  ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n    var data = seriesModel.getData();\n    var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n    var symbolSize = seriesModel.get('symbolSize');\n    data.setVisual({\n      legendSymbol: legendSymbol || symbolType,\n      symbol: symbolType,\n      symbolSize: symbolSize\n    }); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      if (typeof symbolSize === 'function') {\n        data.each(function (idx) {\n          var rawValue = seriesModel.getRawValue(idx); // FIXME\n\n          var params = seriesModel.getDataParams(idx);\n          data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n        });\n      }\n\n      data.each(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        var itemSymbolType = itemModel.getShallow('symbol', true);\n        var itemSymbolSize = itemModel.getShallow('symbolSize', true); // If has item symbol\n\n        if (itemSymbolType != null) {\n          data.setItemVisual(idx, 'symbol', itemSymbolType);\n        }\n\n        if (itemSymbolSize != null) {\n          // PENDING Transform symbolSize ?\n          data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n        }\n      });\n    }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/visual/symbol.js\n// module id = 1041\n// module chunks = 0 1","/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\nvar idStart = 0x0907;\n\nfunction _default() {\n  return idStart++;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/guid.js\n// module id = 1042\n// module chunks = 0 1 2","var guid = require(\"./core/guid\");\n\nvar Eventful = require(\"./mixin/Eventful\");\n\nvar Transformable = require(\"./mixin/Transformable\");\n\nvar Animatable = require(\"./mixin/Animatable\");\n\nvar zrUtil = require(\"./core/util\");\n\n/**\n * @alias module:zrender/Element\n * @constructor\n * @extends {module:zrender/mixin/Animatable}\n * @extends {module:zrender/mixin/Transformable}\n * @extends {module:zrender/mixin/Eventful}\n */\nvar Element = function (opts) {\n  // jshint ignore:line\n  Transformable.call(this, opts);\n  Eventful.call(this, opts);\n  Animatable.call(this, opts);\n  /**\n   * 画布元素ID\n   * @type {string}\n   */\n\n  this.id = opts.id || guid();\n};\n\nElement.prototype = {\n  /**\n   * 元素类型\n   * Element type\n   * @type {string}\n   */\n  type: 'element',\n\n  /**\n   * 元素名字\n   * Element name\n   * @type {string}\n   */\n  name: '',\n\n  /**\n   * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n   * ZRender instance will be assigned when element is associated with zrender\n   * @name module:/zrender/Element#__zr\n   * @type {module:zrender/ZRender}\n   */\n  __zr: null,\n\n  /**\n   * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n   * If ignore drawing and events of the element object\n   * @name module:/zrender/Element#ignore\n   * @type {boolean}\n   * @default false\n   */\n  ignore: false,\n\n  /**\n   * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n   * 该路径会继承被裁减对象的变换\n   * @type {module:zrender/graphic/Path}\n   * @see http://www.w3.org/TR/2dcontext/#clipping-region\n   * @readOnly\n   */\n  clipPath: null,\n\n  /**\n   * Drift element\n   * @param  {number} dx dx on the global space\n   * @param  {number} dy dy on the global space\n   */\n  drift: function (dx, dy) {\n    switch (this.draggable) {\n      case 'horizontal':\n        dy = 0;\n        break;\n\n      case 'vertical':\n        dx = 0;\n        break;\n    }\n\n    var m = this.transform;\n\n    if (!m) {\n      m = this.transform = [1, 0, 0, 1, 0, 0];\n    }\n\n    m[4] += dx;\n    m[5] += dy;\n    this.decomposeTransform();\n    this.dirty(false);\n  },\n\n  /**\n   * Hook before update\n   */\n  beforeUpdate: function () {},\n\n  /**\n   * Hook after update\n   */\n  afterUpdate: function () {},\n\n  /**\n   * Update each frame\n   */\n  update: function () {\n    this.updateTransform();\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {},\n\n  /**\n   * @protected\n   */\n  attrKV: function (key, value) {\n    if (key === 'position' || key === 'scale' || key === 'origin') {\n      // Copy the array\n      if (value) {\n        var target = this[key];\n\n        if (!target) {\n          target = this[key] = [];\n        }\n\n        target[0] = value[0];\n        target[1] = value[1];\n      }\n    } else {\n      this[key] = value;\n    }\n  },\n\n  /**\n   * Hide the element\n   */\n  hide: function () {\n    this.ignore = true;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * Show the element\n   */\n  show: function () {\n    this.ignore = false;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * @param {string|Object} key\n   * @param {*} value\n   */\n  attr: function (key, value) {\n    if (typeof key === 'string') {\n      this.attrKV(key, value);\n    } else if (zrUtil.isObject(key)) {\n      for (var name in key) {\n        if (key.hasOwnProperty(name)) {\n          this.attrKV(name, key[name]);\n        }\n      }\n    }\n\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * @param {module:zrender/graphic/Path} clipPath\n   */\n  setClipPath: function (clipPath) {\n    var zr = this.__zr;\n\n    if (zr) {\n      clipPath.addSelfToZr(zr);\n    } // Remove previous clip path\n\n\n    if (this.clipPath && this.clipPath !== clipPath) {\n      this.removeClipPath();\n    }\n\n    this.clipPath = clipPath;\n    clipPath.__zr = zr;\n    clipPath.__clipTarget = this;\n    this.dirty(false);\n  },\n\n  /**\n   */\n  removeClipPath: function () {\n    var clipPath = this.clipPath;\n\n    if (clipPath) {\n      if (clipPath.__zr) {\n        clipPath.removeSelfFromZr(clipPath.__zr);\n      }\n\n      clipPath.__zr = null;\n      clipPath.__clipTarget = null;\n      this.clipPath = null;\n      this.dirty(false);\n    }\n  },\n\n  /**\n   * Add self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  addSelfToZr: function (zr) {\n    this.__zr = zr; // 添加动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.addAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.addSelfToZr(zr);\n    }\n  },\n\n  /**\n   * Remove self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  removeSelfFromZr: function (zr) {\n    this.__zr = null; // 移除动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.removeAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.removeSelfFromZr(zr);\n    }\n  }\n};\nzrUtil.mixin(Element, Animatable);\nzrUtil.mixin(Element, Transformable);\nzrUtil.mixin(Element, Eventful);\nvar _default = Element;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/Element.js\n// module id = 1043\n// module chunks = 0 1 2","var Clip = require(\"./Clip\");\n\nvar color = require(\"../tool/color\");\n\nvar _util = require(\"../core/util\");\n\nvar isArrayLike = _util.isArrayLike;\n\n/**\n * @module echarts/animation/Animator\n */\nvar arraySlice = Array.prototype.slice;\n\nfunction defaultGetter(target, key) {\n  return target[key];\n}\n\nfunction defaultSetter(target, key, value) {\n  target[key] = value;\n}\n/**\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} percent\n * @return {number}\n */\n\n\nfunction interpolateNumber(p0, p1, percent) {\n  return (p1 - p0) * percent + p0;\n}\n/**\n * @param  {string} p0\n * @param  {string} p1\n * @param  {number} percent\n * @return {string}\n */\n\n\nfunction interpolateString(p0, p1, percent) {\n  return percent > 0.5 ? p1 : p0;\n}\n/**\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {number} percent\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction interpolateArray(p0, p1, percent, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = interpolateNumber(p0[i], p1[i], percent);\n    }\n  } else {\n    var len2 = len && p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = interpolateNumber(p0[i][j], p1[i][j], percent);\n      }\n    }\n  }\n} // arr0 is source array, arr1 is target array.\n// Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n\n\nfunction fillArr(arr0, arr1, arrDim) {\n  var arr0Len = arr0.length;\n  var arr1Len = arr1.length;\n\n  if (arr0Len !== arr1Len) {\n    // FIXME Not work for TypedArray\n    var isPreviousLarger = arr0Len > arr1Len;\n\n    if (isPreviousLarger) {\n      // Cut the previous\n      arr0.length = arr1Len;\n    } else {\n      // Fill the previous\n      for (var i = arr0Len; i < arr1Len; i++) {\n        arr0.push(arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i]));\n      }\n    }\n  } // Handling NaN value\n\n\n  var len2 = arr0[0] && arr0[0].length;\n\n  for (var i = 0; i < arr0.length; i++) {\n    if (arrDim === 1) {\n      if (isNaN(arr0[i])) {\n        arr0[i] = arr1[i];\n      }\n    } else {\n      for (var j = 0; j < len2; j++) {\n        if (isNaN(arr0[i][j])) {\n          arr0[i][j] = arr1[i][j];\n        }\n      }\n    }\n  }\n}\n/**\n * @param  {Array} arr0\n * @param  {Array} arr1\n * @param  {number} arrDim\n * @return {boolean}\n */\n\n\nfunction isArraySame(arr0, arr1, arrDim) {\n  if (arr0 === arr1) {\n    return true;\n  }\n\n  var len = arr0.length;\n\n  if (len !== arr1.length) {\n    return false;\n  }\n\n  if (arrDim === 1) {\n    for (var i = 0; i < len; i++) {\n      if (arr0[i] !== arr1[i]) {\n        return false;\n      }\n    }\n  } else {\n    var len2 = arr0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        if (arr0[i][j] !== arr1[i][j]) {\n          return false;\n        }\n      }\n    }\n  }\n\n  return true;\n}\n/**\n * Catmull Rom interpolate array\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {Array} p2\n * @param  {Array} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction catmullRomInterpolateArray(p0, p1, p2, p3, t, t2, t3, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = catmullRomInterpolate(p0[i], p1[i], p2[i], p3[i], t, t2, t3);\n    }\n  } else {\n    var len2 = p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = catmullRomInterpolate(p0[i][j], p1[i][j], p2[i][j], p3[i][j], t, t2, t3);\n      }\n    }\n  }\n}\n/**\n * Catmull Rom interpolate number\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @return {number}\n */\n\n\nfunction catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n\nfunction cloneValue(value) {\n  if (isArrayLike(value)) {\n    var len = value.length;\n\n    if (isArrayLike(value[0])) {\n      var ret = [];\n\n      for (var i = 0; i < len; i++) {\n        ret.push(arraySlice.call(value[i]));\n      }\n\n      return ret;\n    }\n\n    return arraySlice.call(value);\n  }\n\n  return value;\n}\n\nfunction rgba2String(rgba) {\n  rgba[0] = Math.floor(rgba[0]);\n  rgba[1] = Math.floor(rgba[1]);\n  rgba[2] = Math.floor(rgba[2]);\n  return 'rgba(' + rgba.join(',') + ')';\n}\n\nfunction getArrayDim(keyframes) {\n  var lastValue = keyframes[keyframes.length - 1].value;\n  return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\n}\n\nfunction createTrackClip(animator, easing, oneTrackDone, keyframes, propName, forceAnimate) {\n  var getter = animator._getter;\n  var setter = animator._setter;\n  var useSpline = easing === 'spline';\n  var trackLen = keyframes.length;\n\n  if (!trackLen) {\n    return;\n  } // Guess data type\n\n\n  var firstVal = keyframes[0].value;\n  var isValueArray = isArrayLike(firstVal);\n  var isValueColor = false;\n  var isValueString = false; // For vertices morphing\n\n  var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\n  var trackMaxTime; // Sort keyframe as ascending\n\n  keyframes.sort(function (a, b) {\n    return a.time - b.time;\n  });\n  trackMaxTime = keyframes[trackLen - 1].time; // Percents of each keyframe\n\n  var kfPercents = []; // Value of each keyframe\n\n  var kfValues = [];\n  var prevValue = keyframes[0].value;\n  var isAllValueEqual = true;\n\n  for (var i = 0; i < trackLen; i++) {\n    kfPercents.push(keyframes[i].time / trackMaxTime); // Assume value is a color when it is a string\n\n    var value = keyframes[i].value; // Check if value is equal, deep check if value is array\n\n    if (!(isValueArray && isArraySame(value, prevValue, arrDim) || !isValueArray && value === prevValue)) {\n      isAllValueEqual = false;\n    }\n\n    prevValue = value; // Try converting a string to a color array\n\n    if (typeof value == 'string') {\n      var colorArray = color.parse(value);\n\n      if (colorArray) {\n        value = colorArray;\n        isValueColor = true;\n      } else {\n        isValueString = true;\n      }\n    }\n\n    kfValues.push(value);\n  }\n\n  if (!forceAnimate && isAllValueEqual) {\n    return;\n  }\n\n  var lastValue = kfValues[trackLen - 1]; // Polyfill array and NaN value\n\n  for (var i = 0; i < trackLen - 1; i++) {\n    if (isValueArray) {\n      fillArr(kfValues[i], lastValue, arrDim);\n    } else {\n      if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n        kfValues[i] = lastValue;\n      }\n    }\n  }\n\n  isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim); // Cache the key of last frame to speed up when\n  // animation playback is sequency\n\n  var lastFrame = 0;\n  var lastFramePercent = 0;\n  var start;\n  var w;\n  var p0;\n  var p1;\n  var p2;\n  var p3;\n\n  if (isValueColor) {\n    var rgba = [0, 0, 0, 0];\n  }\n\n  var onframe = function (target, percent) {\n    // Find the range keyframes\n    // kf1-----kf2---------current--------kf3\n    // find kf2 and kf3 and do interpolation\n    var frame; // In the easing function like elasticOut, percent may less than 0\n\n    if (percent < 0) {\n      frame = 0;\n    } else if (percent < lastFramePercent) {\n      // Start from next key\n      // PENDING start from lastFrame ?\n      start = Math.min(lastFrame + 1, trackLen - 1);\n\n      for (frame = start; frame >= 0; frame--) {\n        if (kfPercents[frame] <= percent) {\n          break;\n        }\n      } // PENDING really need to do this ?\n\n\n      frame = Math.min(frame, trackLen - 2);\n    } else {\n      for (frame = lastFrame; frame < trackLen; frame++) {\n        if (kfPercents[frame] > percent) {\n          break;\n        }\n      }\n\n      frame = Math.min(frame - 1, trackLen - 2);\n    }\n\n    lastFrame = frame;\n    lastFramePercent = percent;\n    var range = kfPercents[frame + 1] - kfPercents[frame];\n\n    if (range === 0) {\n      return;\n    } else {\n      w = (percent - kfPercents[frame]) / range;\n    }\n\n    if (useSpline) {\n      p1 = kfValues[frame];\n      p0 = kfValues[frame === 0 ? frame : frame - 1];\n      p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n      p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n\n      if (isValueArray) {\n        catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          value = catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(p1, p2, w);\n        } else {\n          value = catmullRomInterpolate(p0, p1, p2, p3, w, w * w, w * w * w);\n        }\n\n        setter(target, propName, value);\n      }\n    } else {\n      if (isValueArray) {\n        interpolateArray(kfValues[frame], kfValues[frame + 1], w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          interpolateArray(kfValues[frame], kfValues[frame + 1], w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n        } else {\n          value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n        }\n\n        setter(target, propName, value);\n      }\n    }\n  };\n\n  var clip = new Clip({\n    target: animator._target,\n    life: trackMaxTime,\n    loop: animator._loop,\n    delay: animator._delay,\n    onframe: onframe,\n    ondestroy: oneTrackDone\n  });\n\n  if (easing && easing !== 'spline') {\n    clip.easing = easing;\n  }\n\n  return clip;\n}\n/**\n * @alias module:zrender/animation/Animator\n * @constructor\n * @param {Object} target\n * @param {boolean} loop\n * @param {Function} getter\n * @param {Function} setter\n */\n\n\nvar Animator = function (target, loop, getter, setter) {\n  this._tracks = {};\n  this._target = target;\n  this._loop = loop || false;\n  this._getter = getter || defaultGetter;\n  this._setter = setter || defaultSetter;\n  this._clipCount = 0;\n  this._delay = 0;\n  this._doneList = [];\n  this._onframeList = [];\n  this._clipList = [];\n};\n\nAnimator.prototype = {\n  /**\n   * 设置动画关键帧\n   * @param  {number} time 关键帧时间，单位是ms\n   * @param  {Object} props 关键帧的属性值，key-value表示\n   * @return {module:zrender/animation/Animator}\n   */\n  when: function (time\n  /* ms */\n  , props) {\n    var tracks = this._tracks;\n\n    for (var propName in props) {\n      if (!props.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      if (!tracks[propName]) {\n        tracks[propName] = []; // Invalid value\n\n        var value = this._getter(this._target, propName);\n\n        if (value == null) {\n          // zrLog('Invalid property ' + propName);\n          continue;\n        } // If time is 0\n        //  Then props is given initialize value\n        // Else\n        //  Initialize value from current prop value\n\n\n        if (time !== 0) {\n          tracks[propName].push({\n            time: 0,\n            value: cloneValue(value)\n          });\n        }\n      }\n\n      tracks[propName].push({\n        time: time,\n        value: props[propName]\n      });\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加动画每一帧的回调函数\n   * @param  {Function} callback\n   * @return {module:zrender/animation/Animator}\n   */\n  during: function (callback) {\n    this._onframeList.push(callback);\n\n    return this;\n  },\n  pause: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].pause();\n    }\n\n    this._paused = true;\n  },\n  resume: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].resume();\n    }\n\n    this._paused = false;\n  },\n  isPaused: function () {\n    return !!this._paused;\n  },\n  _doneCallback: function () {\n    // Clear all tracks\n    this._tracks = {}; // Clear all clips\n\n    this._clipList.length = 0;\n    var doneList = this._doneList;\n    var len = doneList.length;\n\n    for (var i = 0; i < len; i++) {\n      doneList[i].call(this);\n    }\n  },\n\n  /**\n   * 开始执行动画\n   * @param  {string|Function} [easing]\n   *         动画缓动函数，详见{@link module:zrender/animation/easing}\n   * @param  {boolean} forceAnimate\n   * @return {module:zrender/animation/Animator}\n   */\n  start: function (easing, forceAnimate) {\n    var self = this;\n    var clipCount = 0;\n\n    var oneTrackDone = function () {\n      clipCount--;\n\n      if (!clipCount) {\n        self._doneCallback();\n      }\n    };\n\n    var lastClip;\n\n    for (var propName in this._tracks) {\n      if (!this._tracks.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      var clip = createTrackClip(this, easing, oneTrackDone, this._tracks[propName], propName, forceAnimate);\n\n      if (clip) {\n        this._clipList.push(clip);\n\n        clipCount++; // If start after added to animation\n\n        if (this.animation) {\n          this.animation.addClip(clip);\n        }\n\n        lastClip = clip;\n      }\n    } // Add during callback on the last clip\n\n\n    if (lastClip) {\n      var oldOnFrame = lastClip.onframe;\n\n      lastClip.onframe = function (target, percent) {\n        oldOnFrame(target, percent);\n\n        for (var i = 0; i < self._onframeList.length; i++) {\n          self._onframeList[i](target, percent);\n        }\n      };\n    } // This optimization will help the case that in the upper application\n    // the view may be refreshed frequently, where animation will be\n    // called repeatly but nothing changed.\n\n\n    if (!clipCount) {\n      this._doneCallback();\n    }\n\n    return this;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stop: function (forwardToLast) {\n    var clipList = this._clipList;\n    var animation = this.animation;\n\n    for (var i = 0; i < clipList.length; i++) {\n      var clip = clipList[i];\n\n      if (forwardToLast) {\n        // Move to last frame before stop\n        clip.onframe(this._target, 1);\n      }\n\n      animation && animation.removeClip(clip);\n    }\n\n    clipList.length = 0;\n  },\n\n  /**\n   * 设置动画延迟开始的时间\n   * @param  {number} time 单位ms\n   * @return {module:zrender/animation/Animator}\n   */\n  delay: function (time) {\n    this._delay = time;\n    return this;\n  },\n\n  /**\n   * 添加动画结束的回调\n   * @param  {Function} cb\n   * @return {module:zrender/animation/Animator}\n   */\n  done: function (cb) {\n    if (cb) {\n      this._doneList.push(cb);\n    }\n\n    return this;\n  },\n\n  /**\n   * @return {Array.<module:zrender/animation/Clip>}\n   */\n  getClips: function () {\n    return this._clipList;\n  }\n};\nvar _default = Animator;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/animation/Animator.js\n// module id = 1044\n// module chunks = 0 1 2","// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n/**\n * Simple double linked list. Compared with array, it has O(1) remove operation.\n * @constructor\n */\nvar LinkedList = function () {\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n  this.head = null;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.tail = null;\n  this._len = 0;\n};\n\nvar linkedListProto = LinkedList.prototype;\n/**\n * Insert a new value at the tail\n * @param  {} val\n * @return {module:zrender/core/LRU~Entry}\n */\n\nlinkedListProto.insert = function (val) {\n  var entry = new Entry(val);\n  this.insertEntry(entry);\n  return entry;\n};\n/**\n * Insert an entry at the tail\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.insertEntry = function (entry) {\n  if (!this.head) {\n    this.head = this.tail = entry;\n  } else {\n    this.tail.next = entry;\n    entry.prev = this.tail;\n    entry.next = null;\n    this.tail = entry;\n  }\n\n  this._len++;\n};\n/**\n * Remove entry.\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.remove = function (entry) {\n  var prev = entry.prev;\n  var next = entry.next;\n\n  if (prev) {\n    prev.next = next;\n  } else {\n    // Is head\n    this.head = next;\n  }\n\n  if (next) {\n    next.prev = prev;\n  } else {\n    // Is tail\n    this.tail = prev;\n  }\n\n  entry.next = entry.prev = null;\n  this._len--;\n};\n/**\n * @return {number}\n */\n\n\nlinkedListProto.len = function () {\n  return this._len;\n};\n/**\n * Clear list\n */\n\n\nlinkedListProto.clear = function () {\n  this.head = this.tail = null;\n  this._len = 0;\n};\n/**\n * @constructor\n * @param {} val\n */\n\n\nvar Entry = function (val) {\n  /**\n   * @type {}\n   */\n  this.value = val;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.next;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.prev;\n};\n/**\n * LRU Cache\n * @constructor\n * @alias module:zrender/core/LRU\n */\n\n\nvar LRU = function (maxSize) {\n  this._list = new LinkedList();\n  this._map = {};\n  this._maxSize = maxSize || 10;\n  this._lastRemovedEntry = null;\n};\n\nvar LRUProto = LRU.prototype;\n/**\n * @param  {string} key\n * @param  {} value\n * @return {} Removed value\n */\n\nLRUProto.put = function (key, value) {\n  var list = this._list;\n  var map = this._map;\n  var removed = null;\n\n  if (map[key] == null) {\n    var len = list.len(); // Reuse last removed entry\n\n    var entry = this._lastRemovedEntry;\n\n    if (len >= this._maxSize && len > 0) {\n      // Remove the least recently used\n      var leastUsedEntry = list.head;\n      list.remove(leastUsedEntry);\n      delete map[leastUsedEntry.key];\n      removed = leastUsedEntry.value;\n      this._lastRemovedEntry = leastUsedEntry;\n    }\n\n    if (entry) {\n      entry.value = value;\n    } else {\n      entry = new Entry(value);\n    }\n\n    entry.key = key;\n    list.insertEntry(entry);\n    map[key] = entry;\n  }\n\n  return removed;\n};\n/**\n * @param  {string} key\n * @return {}\n */\n\n\nLRUProto.get = function (key) {\n  var entry = this._map[key];\n  var list = this._list;\n\n  if (entry != null) {\n    // Put the latest used entry in the tail\n    if (entry !== list.tail) {\n      list.remove(entry);\n      list.insertEntry(entry);\n    }\n\n    return entry.value;\n  }\n};\n/**\n * Clear the cache\n */\n\n\nLRUProto.clear = function () {\n  this._list.clear();\n\n  this._map = {};\n};\n\nvar _default = LRU;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/LRU.js\n// module id = 1045\n// module chunks = 0 1 2","var STYLE_COMMON_PROPS = [['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'], ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]]; // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n// var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\nvar Style = function (opts, host) {\n  this.extendFrom(opts, false);\n  this.host = host;\n};\n\nfunction createLinearGradient(ctx, obj, rect) {\n  var x = obj.x == null ? 0 : obj.x;\n  var x2 = obj.x2 == null ? 1 : obj.x2;\n  var y = obj.y == null ? 0 : obj.y;\n  var y2 = obj.y2 == null ? 0 : obj.y2;\n\n  if (!obj.global) {\n    x = x * rect.width + rect.x;\n    x2 = x2 * rect.width + rect.x;\n    y = y * rect.height + rect.y;\n    y2 = y2 * rect.height + rect.y;\n  }\n\n  var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n  return canvasGradient;\n}\n\nfunction createRadialGradient(ctx, obj, rect) {\n  var width = rect.width;\n  var height = rect.height;\n  var min = Math.min(width, height);\n  var x = obj.x == null ? 0.5 : obj.x;\n  var y = obj.y == null ? 0.5 : obj.y;\n  var r = obj.r == null ? 0.5 : obj.r;\n\n  if (!obj.global) {\n    x = x * width + rect.x;\n    y = y * height + rect.y;\n    r = r * min;\n  }\n\n  var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n  return canvasGradient;\n}\n\nStyle.prototype = {\n  constructor: Style,\n\n  /**\n   * @type {module:zrender/graphic/Displayable}\n   */\n  host: null,\n\n  /**\n   * @type {string}\n   */\n  fill: '#000',\n\n  /**\n   * @type {string}\n   */\n  stroke: null,\n\n  /**\n   * @type {number}\n   */\n  opacity: 1,\n\n  /**\n   * @type {Array.<number>}\n   */\n  lineDash: null,\n\n  /**\n   * @type {number}\n   */\n  lineDashOffset: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetY: 0,\n\n  /**\n   * @type {number}\n   */\n  lineWidth: 1,\n\n  /**\n   * If stroke ignore scale\n   * @type {Boolean}\n   */\n  strokeNoScale: false,\n  // Bounding rect text configuration\n  // Not affected by element transform\n\n  /**\n   * @type {string}\n   */\n  text: null,\n\n  /**\n   * If `fontSize` or `fontFamily` exists, `font` will be reset by\n   * `fontSize`, `fontStyle`, `fontWeight`, `fontFamily`.\n   * So do not visit it directly in upper application (like echarts),\n   * but use `contain/text#makeFont` instead.\n   * @type {string}\n   */\n  font: null,\n\n  /**\n   * The same as font. Use font please.\n   * @deprecated\n   * @type {string}\n   */\n  textFont: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontStyle: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontWeight: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * Should be 12 but not '12px'.\n   * @type {number}\n   */\n  fontSize: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontFamily: null,\n\n  /**\n   * Reserved for special functinality, like 'hr'.\n   * @type {string}\n   */\n  textTag: null,\n\n  /**\n   * @type {string}\n   */\n  textFill: '#000',\n\n  /**\n   * @type {string}\n   */\n  textStroke: null,\n\n  /**\n   * @type {number}\n   */\n  textWidth: null,\n\n  /**\n   * Only for textBackground.\n   * @type {number}\n   */\n  textHeight: null,\n\n  /**\n   * textStroke may be set as some color as a default\n   * value in upper applicaion, where the default value\n   * of textStrokeWidth should be 0 to make sure that\n   * user can choose to do not use text stroke.\n   * @type {number}\n   */\n  textStrokeWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textLineHeight: null,\n\n  /**\n   * 'inside', 'left', 'right', 'top', 'bottom'\n   * [x, y]\n   * Based on x, y of rect.\n   * @type {string|Array.<number>}\n   * @default 'inside'\n   */\n  textPosition: 'inside',\n\n  /**\n   * If not specified, use the boundingRect of a `displayable`.\n   * @type {Object}\n   */\n  textRect: null,\n\n  /**\n   * [x, y]\n   * @type {Array.<number>}\n   */\n  textOffset: null,\n\n  /**\n   * @type {string}\n   */\n  textAlign: null,\n\n  /**\n   * @type {string}\n   */\n  textVerticalAlign: null,\n\n  /**\n   * @type {number}\n   */\n  textDistance: 5,\n\n  /**\n   * @type {string}\n   */\n  textShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetY: 0,\n\n  /**\n   * @type {string}\n   */\n  textBoxShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetY: 0,\n\n  /**\n   * Whether transform text.\n   * Only useful in Path and Image element\n   * @type {boolean}\n   */\n  transformText: false,\n\n  /**\n   * Text rotate around position of Path or Image\n   * Only useful in Path and Image element and transformText is false.\n   */\n  textRotation: 0,\n\n  /**\n   * Text origin of text rotation, like [10, 40].\n   * Based on x, y of rect.\n   * Useful in label rotation of circular symbol.\n   * By default, this origin is textPosition.\n   * Can be 'center'.\n   * @type {string|Array.<number>}\n   */\n  textOrigin: null,\n\n  /**\n   * @type {string}\n   */\n  textBackgroundColor: null,\n\n  /**\n   * @type {string}\n   */\n  textBorderColor: null,\n\n  /**\n   * @type {number}\n   */\n  textBorderWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textBorderRadius: 0,\n\n  /**\n   * Can be `2` or `[2, 4]` or `[2, 3, 4, 5]`\n   * @type {number|Array.<number>}\n   */\n  textPadding: null,\n\n  /**\n   * Text styles for rich text.\n   * @type {Object}\n   */\n  rich: null,\n\n  /**\n   * {outerWidth, outerHeight, ellipsis, placeholder}\n   * @type {Object}\n   */\n  truncate: null,\n\n  /**\n   * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n   * @type {string}\n   */\n  blend: null,\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  bind: function (ctx, el, prevEl) {\n    var style = this;\n    var prevStyle = prevEl && prevEl.style;\n    var firstDraw = !prevStyle;\n\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n      var prop = STYLE_COMMON_PROPS[i];\n      var styleName = prop[0];\n\n      if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n        // FIXME Invalid property value will cause style leak from previous element.\n        ctx[styleName] = style[styleName] || prop[1];\n      }\n    }\n\n    if (firstDraw || style.fill !== prevStyle.fill) {\n      ctx.fillStyle = style.fill;\n    }\n\n    if (firstDraw || style.stroke !== prevStyle.stroke) {\n      ctx.strokeStyle = style.stroke;\n    }\n\n    if (firstDraw || style.opacity !== prevStyle.opacity) {\n      ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n    }\n\n    if (firstDraw || style.blend !== prevStyle.blend) {\n      ctx.globalCompositeOperation = style.blend || 'source-over';\n    }\n\n    if (this.hasStroke()) {\n      var lineWidth = style.lineWidth;\n      ctx.lineWidth = lineWidth / (this.strokeNoScale && el && el.getLineScale ? el.getLineScale() : 1);\n    }\n  },\n  hasFill: function () {\n    var fill = this.fill;\n    return fill != null && fill !== 'none';\n  },\n  hasStroke: function () {\n    var stroke = this.stroke;\n    return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n  },\n\n  /**\n   * Extend from other style\n   * @param {zrender/graphic/Style} otherStyle\n   * @param {boolean} overwrite true: overwrirte any way.\n   *                            false: overwrite only when !target.hasOwnProperty\n   *                            others: overwrite when property is not null/undefined.\n   */\n  extendFrom: function (otherStyle, overwrite) {\n    if (otherStyle) {\n      for (var name in otherStyle) {\n        if (otherStyle.hasOwnProperty(name) && (overwrite === true || (overwrite === false ? !this.hasOwnProperty(name) : otherStyle[name] != null))) {\n          this[name] = otherStyle[name];\n        }\n      }\n    }\n  },\n\n  /**\n   * Batch setting style with a given object\n   * @param {Object|string} obj\n   * @param {*} [obj]\n   */\n  set: function (obj, value) {\n    if (typeof obj === 'string') {\n      this[obj] = value;\n    } else {\n      this.extendFrom(obj, true);\n    }\n  },\n\n  /**\n   * Clone\n   * @return {zrender/graphic/Style} [description]\n   */\n  clone: function () {\n    var newStyle = new this.constructor();\n    newStyle.extendFrom(this, true);\n    return newStyle;\n  },\n  getGradient: function (ctx, obj, rect) {\n    var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n    var canvasGradient = method(ctx, obj, rect);\n    var colorStops = obj.colorStops;\n\n    for (var i = 0; i < colorStops.length; i++) {\n      canvasGradient.addColorStop(colorStops[i].offset, colorStops[i].color);\n    }\n\n    return canvasGradient;\n  }\n};\nvar styleProto = Style.prototype;\n\nfor (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n  var prop = STYLE_COMMON_PROPS[i];\n\n  if (!(prop[0] in styleProto)) {\n    styleProto[prop[0]] = prop[1];\n  }\n} // Provide for others\n\n\nStyle.getGradient = styleProto.getGradient;\nvar _default = Style;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/Style.js\n// module id = 1046\n// module chunks = 0 1 2","var Pattern = function (image, repeat) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {image: ...}`, where this constructor will not be called.\n  this.image = image;\n  this.repeat = repeat; // Can be cloned\n\n  this.type = 'pattern';\n};\n\nPattern.prototype.getCanvasPattern = function (ctx) {\n  return ctx.createPattern(this.image, this.repeat || 'repeat');\n};\n\nvar _default = Pattern;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/Pattern.js\n// module id = 1047\n// module chunks = 0 1 2","var _default = typeof window !== 'undefined' && (window.requestAnimationFrame && window.requestAnimationFrame.bind(window) || // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\nwindow.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window) || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame) || function (func) {\n  setTimeout(func, 16);\n};\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/animation/requestAnimationFrame.js\n// module id = 1048\n// module chunks = 0 1 2","function buildPath(ctx, shape) {\n  var x = shape.x;\n  var y = shape.y;\n  var width = shape.width;\n  var height = shape.height;\n  var r = shape.r;\n  var r1;\n  var r2;\n  var r3;\n  var r4; // Convert width and height to positive for better borderRadius\n\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n\n  if (typeof r === 'number') {\n    r1 = r2 = r3 = r4 = r;\n  } else if (r instanceof Array) {\n    if (r.length === 1) {\n      r1 = r2 = r3 = r4 = r[0];\n    } else if (r.length === 2) {\n      r1 = r3 = r[0];\n      r2 = r4 = r[1];\n    } else if (r.length === 3) {\n      r1 = r[0];\n      r2 = r4 = r[1];\n      r3 = r[2];\n    } else {\n      r1 = r[0];\n      r2 = r[1];\n      r3 = r[2];\n      r4 = r[3];\n    }\n  } else {\n    r1 = r2 = r3 = r4 = 0;\n  }\n\n  var total;\n\n  if (r1 + r2 > width) {\n    total = r1 + r2;\n    r1 *= width / total;\n    r2 *= width / total;\n  }\n\n  if (r3 + r4 > width) {\n    total = r3 + r4;\n    r3 *= width / total;\n    r4 *= width / total;\n  }\n\n  if (r2 + r3 > height) {\n    total = r2 + r3;\n    r2 *= height / total;\n    r3 *= height / total;\n  }\n\n  if (r1 + r4 > height) {\n    total = r1 + r4;\n    r1 *= height / total;\n    r4 *= height / total;\n  }\n\n  ctx.moveTo(x + r1, y);\n  ctx.lineTo(x + width - r2, y);\n  r2 !== 0 && ctx.quadraticCurveTo(x + width, y, x + width, y + r2);\n  ctx.lineTo(x + width, y + height - r3);\n  r3 !== 0 && ctx.quadraticCurveTo(x + width, y + height, x + width - r3, y + height);\n  ctx.lineTo(x + r4, y + height);\n  r4 !== 0 && ctx.quadraticCurveTo(x, y + height, x, y + height - r4);\n  ctx.lineTo(x, y + r1);\n  r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n}\n\nexports.buildPath = buildPath;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/helper/roundRect.js\n// module id = 1049\n// module chunks = 0 1 2","var PI2 = Math.PI * 2;\n\nfunction normalizeRadian(angle) {\n  angle %= PI2;\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle;\n}\n\nexports.normalizeRadian = normalizeRadian;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/contain/util.js\n// module id = 1050\n// module chunks = 0 1 2","function windingLine(x0, y0, x1, y1, x, y) {\n  if (y > y0 && y > y1 || y < y0 && y < y1) {\n    return 0;\n  } // Ignore horizontal line\n\n\n  if (y1 === y0) {\n    return 0;\n  }\n\n  var dir = y1 < y0 ? 1 : -1;\n  var t = (y - y0) / (y1 - y0); // Avoid winding error when intersection point is the connect point of two line of polygon\n\n  if (t === 1 || t === 0) {\n    dir = y1 < y0 ? 0.5 : -0.5;\n  }\n\n  var x_ = t * (x1 - x0) + x0;\n  return x_ > x ? dir : 0;\n}\n\nmodule.exports = windingLine;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/contain/windingLine.js\n// module id = 1051\n// module chunks = 0 1 2","var smoothSpline = require(\"./smoothSpline\");\n\nvar smoothBezier = require(\"./smoothBezier\");\n\nfunction buildPath(ctx, shape, closePath) {\n  var points = shape.points;\n  var smooth = shape.smooth;\n\n  if (points && points.length >= 2) {\n    if (smooth && smooth !== 'spline') {\n      var controlPoints = smoothBezier(points, smooth, closePath, shape.smoothConstraint);\n      ctx.moveTo(points[0][0], points[0][1]);\n      var len = points.length;\n\n      for (var i = 0; i < (closePath ? len : len - 1); i++) {\n        var cp1 = controlPoints[i * 2];\n        var cp2 = controlPoints[i * 2 + 1];\n        var p = points[(i + 1) % len];\n        ctx.bezierCurveTo(cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]);\n      }\n    } else {\n      if (smooth === 'spline') {\n        points = smoothSpline(points, closePath);\n      }\n\n      ctx.moveTo(points[0][0], points[0][1]);\n\n      for (var i = 1, l = points.length; i < l; i++) {\n        ctx.lineTo(points[i][0], points[i][1]);\n      }\n    }\n\n    closePath && ctx.closePath();\n  }\n}\n\nexports.buildPath = buildPath;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/helper/poly.js\n// module id = 1052\n// module chunks = 0 1 2","var _clazz = require(\"../../util/clazz\");\n\nvar set = _clazz.set;\nvar get = _clazz.get;\nvar _default = {\n  clearColorPalette: function () {\n    set(this, 'colorIdx', 0);\n    set(this, 'colorNameMap', {});\n  },\n  getColorFromPalette: function (name, scope) {\n    scope = scope || this;\n    var colorIdx = get(scope, 'colorIdx') || 0;\n    var colorNameMap = get(scope, 'colorNameMap') || set(scope, 'colorNameMap', {}); // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n\n    if (colorNameMap.hasOwnProperty(name)) {\n      return colorNameMap[name];\n    }\n\n    var colorPalette = this.get('color', true) || [];\n\n    if (!colorPalette.length) {\n      return;\n    }\n\n    var color = colorPalette[colorIdx];\n\n    if (name) {\n      colorNameMap[name] = color;\n    }\n\n    set(scope, 'colorIdx', (colorIdx + 1) % colorPalette.length);\n    return color;\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/mixin/colorPalette.js\n// module id = 1053\n// module chunks = 0 1 2","var numberUtil = require(\"../util/number\");\n\n/**\n * For testable.\n */\nvar roundNumber = numberUtil.round;\n/**\n * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n *                                Should be extent[0] < extent[1].\n * @param {number} splitNumber splitNumber should be >= 1.\n * @param {number} [minInterval]\n * @param {number} [maxInterval]\n * @return {Object} {interval, intervalPrecision, niceTickExtent}\n */\n\nfunction intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval) {\n  var result = {};\n  var span = extent[1] - extent[0];\n  var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n\n  if (minInterval != null && interval < minInterval) {\n    interval = result.interval = minInterval;\n  }\n\n  if (maxInterval != null && interval > maxInterval) {\n    interval = result.interval = maxInterval;\n  } // Tow more digital for tick.\n\n\n  var precision = result.intervalPrecision = getIntervalPrecision(interval); // Niced extent inside original extent\n\n  var niceTickExtent = result.niceTickExtent = [roundNumber(Math.ceil(extent[0] / interval) * interval, precision), roundNumber(Math.floor(extent[1] / interval) * interval, precision)];\n  fixExtent(niceTickExtent, extent);\n  return result;\n}\n/**\n * @param {number} interval\n * @return {number} interval precision\n */\n\n\nfunction getIntervalPrecision(interval) {\n  // Tow more digital for tick.\n  return numberUtil.getPrecisionSafe(interval) + 2;\n}\n\nfunction clamp(niceTickExtent, idx, extent) {\n  niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n} // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n\n\nfunction fixExtent(niceTickExtent, extent) {\n  !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n  !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n  clamp(niceTickExtent, 0, extent);\n  clamp(niceTickExtent, 1, extent);\n\n  if (niceTickExtent[0] > niceTickExtent[1]) {\n    niceTickExtent[0] = niceTickExtent[1];\n  }\n}\n\nfunction intervalScaleGetTicks(interval, extent, niceTickExtent, intervalPrecision) {\n  var ticks = []; // If interval is 0, return [];\n\n  if (!interval) {\n    return ticks;\n  } // Consider this case: using dataZoom toolbox, zoom and zoom.\n\n\n  var safeLimit = 10000;\n\n  if (extent[0] < niceTickExtent[0]) {\n    ticks.push(extent[0]);\n  }\n\n  var tick = niceTickExtent[0];\n\n  while (tick <= niceTickExtent[1]) {\n    ticks.push(tick); // Avoid rounding error\n\n    tick = roundNumber(tick + interval, intervalPrecision);\n\n    if (tick === ticks[ticks.length - 1]) {\n      // Consider out of safe float point, e.g.,\n      // -3711126.9907707 + 2e-10 === -3711126.9907707\n      break;\n    }\n\n    if (ticks.length > safeLimit) {\n      return [];\n    }\n  } // Consider this case: the last item of ticks is smaller\n  // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n\n\n  if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n    ticks.push(extent[1]);\n  }\n\n  return ticks;\n}\n\nexports.intervalScaleNiceTicks = intervalScaleNiceTicks;\nexports.getIntervalPrecision = getIntervalPrecision;\nexports.fixExtent = fixExtent;\nexports.intervalScaleGetTicks = intervalScaleGetTicks;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/scale/helper.js\n// module id = 1054\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\n/**\n * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} {point: [x, y], el: ...} point Will not be null.\n */\nfunction _default(finder, ecModel) {\n  var point = [];\n  var seriesIndex = finder.seriesIndex;\n  var seriesModel;\n\n  if (seriesIndex == null || !(seriesModel = ecModel.getSeriesByIndex(seriesIndex))) {\n    return {\n      point: []\n    };\n  }\n\n  var data = seriesModel.getData();\n  var dataIndex = modelUtil.queryDataIndex(data, finder);\n\n  if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n    return {\n      point: []\n    };\n  }\n\n  var el = data.getItemGraphicEl(dataIndex);\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (seriesModel.getTooltipPosition) {\n    point = seriesModel.getTooltipPosition(dataIndex) || [];\n  } else if (coordSys && coordSys.dataToPoint) {\n    point = coordSys.dataToPoint(data.getValues(zrUtil.map(coordSys.dimensions, function (dim) {\n      return seriesModel.coordDimToDataDim(dim)[0];\n    }), dataIndex, true)) || [];\n  } else if (el) {\n    // Use graphic bounding rect\n    var rect = el.getBoundingRect().clone();\n    rect.applyTransform(el.transform);\n    point = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n\n  return {\n    point: point,\n    el: el\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/findPointFromSeries.js\n// module id = 1055\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar get = modelUtil.makeGetter();\nvar each = zrUtil.each;\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n * @param {Function} handler\n *      param: {string} currTrigger\n *      param: {Array.<number>} point\n */\n\nfunction register(key, api, handler) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  get(zr).records || (get(zr).records = {});\n  initGlobalListeners(zr, api);\n  var record = get(zr).records[key] || (get(zr).records[key] = {});\n  record.handler = handler;\n}\n\nfunction initGlobalListeners(zr, api) {\n  if (get(zr).initialized) {\n    return;\n  }\n\n  get(zr).initialized = true;\n  useHandler('click', zrUtil.curry(doEnter, 'click'));\n  useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove')); // useHandler('mouseout', onLeave);\n\n  useHandler('globalout', onLeave);\n\n  function useHandler(eventType, cb) {\n    zr.on(eventType, function (e) {\n      var dis = makeDispatchAction(api);\n      each(get(zr).records, function (record) {\n        record && cb(record, e, dis.dispatchAction);\n      });\n      dispatchTooltipFinally(dis.pendings, api);\n    });\n  }\n}\n\nfunction dispatchTooltipFinally(pendings, api) {\n  var showLen = pendings.showTip.length;\n  var hideLen = pendings.hideTip.length;\n  var actuallyPayload;\n\n  if (showLen) {\n    actuallyPayload = pendings.showTip[showLen - 1];\n  } else if (hideLen) {\n    actuallyPayload = pendings.hideTip[hideLen - 1];\n  }\n\n  if (actuallyPayload) {\n    actuallyPayload.dispatchAction = null;\n    api.dispatchAction(actuallyPayload);\n  }\n}\n\nfunction onLeave(record, e, dispatchAction) {\n  record.handler('leave', null, dispatchAction);\n}\n\nfunction doEnter(currTrigger, record, e, dispatchAction) {\n  record.handler(currTrigger, e, dispatchAction);\n}\n\nfunction makeDispatchAction(api) {\n  var pendings = {\n    showTip: [],\n    hideTip: []\n  }; // FIXME\n  // better approach?\n  // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n  // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n  // So we have to add \"final stage\" to merge those dispatched actions.\n\n  var dispatchAction = function (payload) {\n    var pendingList = pendings[payload.type];\n\n    if (pendingList) {\n      pendingList.push(payload);\n    } else {\n      payload.dispatchAction = dispatchAction;\n      api.dispatchAction(payload);\n    }\n  };\n\n  return {\n    dispatchAction: dispatchAction,\n    pendings: pendings\n  };\n}\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction unregister(key, api) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  var record = (get(zr).records || {})[key];\n\n  if (record) {\n    get(zr).records[key] = null;\n  }\n}\n\nexports.register = register;\nexports.unregister = unregister;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/globalListener.js\n// module id = 1056\n// module chunks = 0 1 2","var _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\nvar layoutBox = _layout.box;\nvar positionElement = _layout.positionElement;\n\nvar formatUtil = require(\"../../util/format\");\n\nvar graphic = require(\"../../util/graphic\");\n\n/**\n * Layout list like component.\n * It will box layout each items in group of component and then position the whole group in the viewport\n * @param {module:zrender/group/Group} group\n * @param {module:echarts/model/Component} componentModel\n * @param {module:echarts/ExtensionAPI}\n */\nfunction layout(group, componentModel, api) {\n  var boxLayoutParams = componentModel.getBoxLayoutParams();\n  var padding = componentModel.get('padding');\n  var viewportSize = {\n    width: api.getWidth(),\n    height: api.getHeight()\n  };\n  var rect = getLayoutRect(boxLayoutParams, viewportSize, padding);\n  layoutBox(componentModel.get('orient'), group, componentModel.get('itemGap'), rect.width, rect.height);\n  positionElement(group, boxLayoutParams, viewportSize, padding);\n}\n\nfunction makeBackground(rect, componentModel) {\n  var padding = formatUtil.normalizeCssArray(componentModel.get('padding'));\n  var style = componentModel.getItemStyle(['color', 'opacity']);\n  style.fill = componentModel.get('backgroundColor');\n  var rect = new graphic.Rect({\n    shape: {\n      x: rect.x - padding[3],\n      y: rect.y - padding[0],\n      width: rect.width + padding[1] + padding[3],\n      height: rect.height + padding[0] + padding[2],\n      r: componentModel.get('borderRadius')\n    },\n    style: style,\n    silent: true,\n    z2: -1\n  }); // FIXME\n  // `subPixelOptimizeRect` may bring some gap between edge of viewpart\n  // and background rect when setting like `left: 0`, `top: 0`.\n  // graphic.subPixelOptimizeRect(rect);\n\n  return rect;\n}\n\nexports.layout = layout;\nexports.makeBackground = makeBackground;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/listComponent.js\n// module id = 1057\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar each = zrUtil.each;\nvar ATTR = '\\0_ec_hist_store';\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} newSnapshot {dataZoomId, batch: [payloadInfo, ...]}\n */\n\nfunction push(ecModel, newSnapshot) {\n  var store = giveStore(ecModel); // If previous dataZoom can not be found,\n  // complete an range with current range.\n\n  each(newSnapshot, function (batchItem, dataZoomId) {\n    var i = store.length - 1;\n\n    for (; i >= 0; i--) {\n      var snapshot = store[i];\n\n      if (snapshot[dataZoomId]) {\n        break;\n      }\n    }\n\n    if (i < 0) {\n      // No origin range set, create one by current range.\n      var dataZoomModel = ecModel.queryComponents({\n        mainType: 'dataZoom',\n        subType: 'select',\n        id: dataZoomId\n      })[0];\n\n      if (dataZoomModel) {\n        var percentRange = dataZoomModel.getPercentRange();\n        store[0][dataZoomId] = {\n          dataZoomId: dataZoomId,\n          start: percentRange[0],\n          end: percentRange[1]\n        };\n      }\n    }\n  });\n  store.push(newSnapshot);\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} snapshot\n */\n\n\nfunction pop(ecModel) {\n  var store = giveStore(ecModel);\n  var head = store[store.length - 1];\n  store.length > 1 && store.pop(); // Find top for all dataZoom.\n\n  var snapshot = {};\n  each(head, function (batchItem, dataZoomId) {\n    for (var i = store.length - 1; i >= 0; i--) {\n      var batchItem = store[i][dataZoomId];\n\n      if (batchItem) {\n        snapshot[dataZoomId] = batchItem;\n        break;\n      }\n    }\n  });\n  return snapshot;\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n */\n\n\nfunction clear(ecModel) {\n  ecModel[ATTR] = null;\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n * @return {number} records. always >= 1.\n */\n\n\nfunction count(ecModel) {\n  return giveStore(ecModel).length;\n}\n/**\n * [{key: dataZoomId, value: {dataZoomId, range}}, ...]\n * History length of each dataZoom may be different.\n * this._history[0] is used to store origin range.\n * @type {Array.<Object>}\n */\n\n\nfunction giveStore(ecModel) {\n  var store = ecModel[ATTR];\n\n  if (!store) {\n    store = ecModel[ATTR] = [{}];\n  }\n\n  return store;\n}\n\nexports.push = push;\nexports.pop = pop;\nexports.clear = clear;\nexports.count = count;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/history.js\n// module id = 1058\n// module chunks = 0 1 2","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../util/graphic\");\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./axis\");\n\n// Grid view\necharts.extendComponentView({\n  type: 'grid',\n  render: function (gridModel, ecModel) {\n    this.group.removeAll();\n\n    if (gridModel.get('show')) {\n      this.group.add(new graphic.Rect({\n        shape: gridModel.coordinateSystem.getRect(),\n        style: zrUtil.defaults({\n          fill: gridModel.get('backgroundColor')\n        }, gridModel.getItemStyle()),\n        silent: true,\n        z2: -1\n      }));\n    }\n  }\n});\necharts.registerPreprocessor(function (option) {\n  // Only create grid when need\n  if (option.xAxis && option.yAxis && !option.grid) {\n    option.grid = {};\n  }\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/gridSimple.js\n// module id = 1059\n// module chunks = 0 1","var env = require(\"../../core/env\");\n\n// Fix weird bug in some version of IE11 (like 11.0.9600.178**),\n// where exception \"unexpected call to method or property access\"\n// might be thrown when calling ctx.fill or ctx.stroke after a path\n// whose area size is zero is drawn and ctx.clip() is called and\n// shadowBlur is set. See #4572, #3112, #5777.\n// (e.g.,\n//  ctx.moveTo(10, 10);\n//  ctx.lineTo(20, 10);\n//  ctx.closePath();\n//  ctx.clip();\n//  ctx.shadowBlur = 10;\n//  ...\n//  ctx.fill();\n// )\nvar shadowTemp = [['shadowBlur', 0], ['shadowColor', '#000'], ['shadowOffsetX', 0], ['shadowOffsetY', 0]];\n\nfunction _default(orignalBrush) {\n  // version string can be: '11.0'\n  return env.browser.ie && env.browser.version >= 11 ? function () {\n    var clipPaths = this.__clipPaths;\n    var style = this.style;\n    var modified;\n\n    if (clipPaths) {\n      for (var i = 0; i < clipPaths.length; i++) {\n        var clipPath = clipPaths[i];\n        var shape = clipPath && clipPath.shape;\n        var type = clipPath && clipPath.type;\n\n        if (shape && (type === 'sector' && shape.startAngle === shape.endAngle || type === 'rect' && (!shape.width || !shape.height))) {\n          for (var j = 0; j < shadowTemp.length; j++) {\n            // It is save to put shadowTemp static, because shadowTemp\n            // will be all modified each item brush called.\n            shadowTemp[j][2] = style[shadowTemp[j][0]];\n            style[shadowTemp[j][0]] = shadowTemp[j][1];\n          }\n\n          modified = true;\n          break;\n        }\n      }\n    }\n\n    orignalBrush.apply(this, arguments);\n\n    if (modified) {\n      for (var j = 0; j < shadowTemp.length; j++) {\n        style[shadowTemp[j][0]] = shadowTemp[j][2];\n      }\n    }\n  } : orignalBrush;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/helper/fixClipWithShadow.js\n// module id = 1060\n// module chunks = 0 1 2","var graphic = require(\"../../util/graphic\");\n\nvar BaseAxisPointer = require(\"./BaseAxisPointer\");\n\nvar viewHelper = require(\"./viewHelper\");\n\nvar cartesianAxisHelper = require(\"../axis/cartesianAxisHelper\");\n\nvar AxisView = require(\"../axis/AxisView\");\n\nvar CartesianAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisPointerType = axisPointerModel.get('type');\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  },\n\n  /**\n   * @override\n   */\n  getHandleTransform: function (value, axisModel, axisPointerModel) {\n    var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n      labelInside: false\n    });\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n    return {\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  },\n\n  /**\n   * @override\n   */\n  updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisExtent = axis.getGlobalExtent(true);\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var dimIndex = axis.dim === 'x' ? 0 : 1;\n    var currPosition = transform.position;\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex]; // Make tooltip do not overlap axisPointer and in the middle of the grid.\n\n    var tooltipOptions = [{\n      verticalAlign: 'middle'\n    }, {\n      align: 'center'\n    }];\n    return {\n      position: currPosition,\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: tooltipOptions[dimIndex]\n    };\n  }\n});\n\nfunction getCartesian(grid, axis) {\n  var opt = {};\n  opt[axis.dim + 'AxisIndex'] = axis.index;\n  return grid.getCartesian(opt);\n}\n\nvar pointerShapeBuilder = {\n  line: function (axis, pixelValue, otherExtent, elStyle) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getAxisDimIndex(axis));\n    graphic.subPixelOptimizeLine({\n      shape: targetShape,\n      style: elStyle\n    });\n    return {\n      type: 'Line',\n      shape: targetShape\n    };\n  },\n  shadow: function (axis, pixelValue, otherExtent, elStyle) {\n    var bandWidth = axis.getBandWidth();\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getAxisDimIndex(axis))\n    };\n  }\n};\n\nfunction getAxisDimIndex(axis) {\n  return axis.dim === 'x' ? 0 : 1;\n}\n\nAxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\nvar _default = CartesianAxisPointer;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/CartesianAxisPointer.js\n// module id = 1061\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar clazzUtil = require(\"../../util/clazz\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar axisPointerModelHelper = require(\"./modelHelper\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar throttleUtil = require(\"../../util/throttle\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar get = modelUtil.makeGetter();\nvar clone = zrUtil.clone;\nvar bind = zrUtil.bind;\n/**\n * Base axis pointer class in 2D.\n * Implemenents {module:echarts/component/axis/IAxisPointer}.\n */\n\nfunction BaseAxisPointer() {}\n\nBaseAxisPointer.prototype = {\n  /**\n   * @private\n   */\n  _group: null,\n\n  /**\n   * @private\n   */\n  _lastGraphicKey: null,\n\n  /**\n   * @private\n   */\n  _handle: null,\n\n  /**\n   * @private\n   */\n  _dragging: false,\n\n  /**\n   * @private\n   */\n  _lastValue: null,\n\n  /**\n   * @private\n   */\n  _lastStatus: null,\n\n  /**\n   * @private\n   */\n  _payloadInfo: null,\n\n  /**\n   * In px, arbitrary value. Do not set too small,\n   * no animation is ok for most cases.\n   * @protected\n   */\n  animationThreshold: 15,\n\n  /**\n   * @implement\n   */\n  render: function (axisModel, axisPointerModel, api, forceRender) {\n    var value = axisPointerModel.get('value');\n    var status = axisPointerModel.get('status'); // Bind them to `this`, not in closure, otherwise they will not\n    // be replaced when user calling setOption in not merge mode.\n\n    this._axisModel = axisModel;\n    this._axisPointerModel = axisPointerModel;\n    this._api = api; // Optimize: `render` will be called repeatly during mouse move.\n    // So it is power consuming if performing `render` each time,\n    // especially on mobile device.\n\n    if (!forceRender && this._lastValue === value && this._lastStatus === status) {\n      return;\n    }\n\n    this._lastValue = value;\n    this._lastStatus = status;\n    var group = this._group;\n    var handle = this._handle;\n\n    if (!status || status === 'hide') {\n      // Do not clear here, for animation better.\n      group && group.hide();\n      handle && handle.hide();\n      return;\n    }\n\n    group && group.show();\n    handle && handle.show(); // Otherwise status is 'show'\n\n    var elOption = {};\n    this.makeElOption(elOption, value, axisModel, axisPointerModel, api); // Enable change axis pointer type.\n\n    var graphicKey = elOption.graphicKey;\n\n    if (graphicKey !== this._lastGraphicKey) {\n      this.clear(api);\n    }\n\n    this._lastGraphicKey = graphicKey;\n    var moveAnimation = this._moveAnimation = this.determineAnimation(axisModel, axisPointerModel);\n\n    if (!group) {\n      group = this._group = new graphic.Group();\n      this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n      this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n      api.getZr().add(group);\n    } else {\n      var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n      this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n      this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n    }\n\n    updateMandatoryProps(group, axisPointerModel, true);\n\n    this._renderHandle(value);\n  },\n\n  /**\n   * @implement\n   */\n  remove: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @implement\n   */\n  dispose: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @protected\n   */\n  determineAnimation: function (axisModel, axisPointerModel) {\n    var animation = axisPointerModel.get('animation');\n    var axis = axisModel.axis;\n    var isCategoryAxis = axis.type === 'category';\n    var useSnap = axisPointerModel.get('snap'); // Value axis without snap always do not snap.\n\n    if (!useSnap && !isCategoryAxis) {\n      return false;\n    }\n\n    if (animation === 'auto' || animation == null) {\n      var animationThreshold = this.animationThreshold;\n\n      if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n        return true;\n      } // It is important to auto animation when snap used. Consider if there is\n      // a dataZoom, animation will be disabled when too many points exist, while\n      // it will be enabled for better visual effect when little points exist.\n\n\n      if (useSnap) {\n        var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n        var axisExtent = axis.getExtent(); // Approximate band width\n\n        return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n      }\n\n      return false;\n    }\n\n    return animation === true;\n  },\n\n  /**\n   * add {pointer, label, graphicKey} to elOption\n   * @protected\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {// Shoule be implemenented by sub-class.\n  },\n\n  /**\n   * @protected\n   */\n  createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n    var pointerOption = elOption.pointer;\n\n    if (pointerOption) {\n      var pointerEl = get(group).pointerEl = new graphic[pointerOption.type](clone(elOption.pointer));\n      group.add(pointerEl);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n    if (elOption.label) {\n      var labelEl = get(group).labelEl = new graphic.Rect(clone(elOption.label));\n      group.add(labelEl);\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updatePointerEl: function (group, elOption, updateProps) {\n    var pointerEl = get(group).pointerEl;\n\n    if (pointerEl) {\n      pointerEl.setStyle(elOption.pointer.style);\n      updateProps(pointerEl, {\n        shape: elOption.pointer.shape\n      });\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n    var labelEl = get(group).labelEl;\n\n    if (labelEl) {\n      labelEl.setStyle(elOption.label.style);\n      updateProps(labelEl, {\n        // Consider text length change in vertical axis, animation should\n        // be used on shape, otherwise the effect will be weird.\n        shape: elOption.label.shape,\n        position: elOption.label.position\n      });\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderHandle: function (value) {\n    if (this._dragging || !this.updateHandleTransform) {\n      return;\n    }\n\n    var axisPointerModel = this._axisPointerModel;\n\n    var zr = this._api.getZr();\n\n    var handle = this._handle;\n    var handleModel = axisPointerModel.getModel('handle');\n    var status = axisPointerModel.get('status');\n\n    if (!handleModel.get('show') || !status || status === 'hide') {\n      handle && zr.remove(handle);\n      this._handle = null;\n      return;\n    }\n\n    var isInit;\n\n    if (!this._handle) {\n      isInit = true;\n      handle = this._handle = graphic.createIcon(handleModel.get('icon'), {\n        cursor: 'move',\n        draggable: true,\n        onmousemove: function (e) {\n          // Fot mobile devicem, prevent screen slider on the button.\n          eventTool.stop(e.event);\n        },\n        onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n        drift: bind(this._onHandleDragMove, this),\n        ondragend: bind(this._onHandleDragEnd, this)\n      });\n      zr.add(handle);\n    }\n\n    updateMandatoryProps(handle, axisPointerModel, false); // update style\n\n    var includeStyles = ['color', 'borderColor', 'borderWidth', 'opacity', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'];\n    handle.setStyle(handleModel.getItemStyle(null, includeStyles)); // update position\n\n    var handleSize = handleModel.get('size');\n\n    if (!zrUtil.isArray(handleSize)) {\n      handleSize = [handleSize, handleSize];\n    }\n\n    handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n    throttleUtil.createOrUpdate(this, '_doDispatchAxisPointer', handleModel.get('throttle') || 0, 'fixRate');\n\n    this._moveHandleToValue(value, isInit);\n  },\n\n  /**\n   * @private\n   */\n  _moveHandleToValue: function (value, isInit) {\n    updateProps(this._axisPointerModel, !isInit && this._moveAnimation, this._handle, getHandleTransProps(this.getHandleTransform(value, this._axisModel, this._axisPointerModel)));\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragMove: function (dx, dy) {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    this._dragging = true; // Persistent for throttle.\n\n    var trans = this.updateHandleTransform(getHandleTransProps(handle), [dx, dy], this._axisModel, this._axisPointerModel);\n    this._payloadInfo = trans;\n    handle.stopAnimation();\n    handle.attr(getHandleTransProps(trans));\n    get(handle).lastProp = null;\n\n    this._doDispatchAxisPointer();\n  },\n\n  /**\n   * Throttled method.\n   * @private\n   */\n  _doDispatchAxisPointer: function () {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var payloadInfo = this._payloadInfo;\n    var axisModel = this._axisModel;\n\n    this._api.dispatchAction({\n      type: 'updateAxisPointer',\n      x: payloadInfo.cursorPoint[0],\n      y: payloadInfo.cursorPoint[1],\n      tooltipOption: payloadInfo.tooltipOption,\n      axesInfo: [{\n        axisDim: axisModel.axis.dim,\n        axisIndex: axisModel.componentIndex\n      }]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragEnd: function (moveAnimation) {\n    this._dragging = false;\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var value = this._axisPointerModel.get('value'); // Consider snap or categroy axis, handle may be not consistent with\n    // axisPointer. So move handle to align the exact value position when\n    // drag ended.\n\n\n    this._moveHandleToValue(value); // For the effect: tooltip will be shown when finger holding on handle\n    // button, and will be hidden after finger left handle button.\n\n\n    this._api.dispatchAction({\n      type: 'hideTip'\n    });\n  },\n\n  /**\n   * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {number} value\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0}\n   */\n  getHandleTransform: null,\n\n  /**\n   * * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {Object} transform {position, rotation}\n   * @param {Array.<number>} delta [dx, dy]\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n   */\n  updateHandleTransform: null,\n\n  /**\n   * @private\n   */\n  clear: function (api) {\n    this._lastValue = null;\n    this._lastStatus = null;\n    var zr = api.getZr();\n    var group = this._group;\n    var handle = this._handle;\n\n    if (zr && group) {\n      this._lastGraphicKey = null;\n      group && zr.remove(group);\n      handle && zr.remove(handle);\n      this._group = null;\n      this._handle = null;\n      this._payloadInfo = null;\n    }\n  },\n\n  /**\n   * @protected\n   */\n  doClear: function () {// Implemented by sub-class if necessary.\n  },\n\n  /**\n   * @protected\n   * @param {Array.<number>} xy\n   * @param {Array.<number>} wh\n   * @param {number} [xDimIndex=0] or 1\n   */\n  buildLabel: function (xy, wh, xDimIndex) {\n    xDimIndex = xDimIndex || 0;\n    return {\n      x: xy[xDimIndex],\n      y: xy[1 - xDimIndex],\n      width: wh[xDimIndex],\n      height: wh[1 - xDimIndex]\n    };\n  }\n};\nBaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\nfunction updateProps(animationModel, moveAnimation, el, props) {\n  // Animation optimize.\n  if (!propsEqual(get(el).lastProp, props)) {\n    get(el).lastProp = props;\n    moveAnimation ? graphic.updateProps(el, props, animationModel) : (el.stopAnimation(), el.attr(props));\n  }\n}\n\nfunction propsEqual(lastProps, newProps) {\n  if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n    var equals = true;\n    zrUtil.each(newProps, function (item, key) {\n      equals = equals && propsEqual(lastProps[key], item);\n    });\n    return !!equals;\n  } else {\n    return lastProps === newProps;\n  }\n}\n\nfunction updateLabelShowHide(labelEl, axisPointerModel) {\n  labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n}\n\nfunction getHandleTransProps(trans) {\n  return {\n    position: trans.position.slice(),\n    rotation: trans.rotation || 0\n  };\n}\n\nfunction updateMandatoryProps(group, axisPointerModel, silent) {\n  var z = axisPointerModel.get('z');\n  var zlevel = axisPointerModel.get('zlevel');\n  group && group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n      el.silent = silent;\n    }\n  });\n}\n\nclazzUtil.enableClassExtend(BaseAxisPointer);\nvar _default = BaseAxisPointer;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/BaseAxisPointer.js\n// module id = 1062\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * @param {Object} opt {labelInside}\n * @return {Object} {\n *  position, rotation, labelDirection, labelOffset,\n *  tickDirection, labelRotate, labelInterval, z2\n * }\n */\nfunction layout(gridModel, axisModel, opt) {\n  opt = opt || {};\n  var grid = gridModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var rawAxisPosition = axis.position;\n  var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n  var axisDim = axis.dim;\n  var rect = grid.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var idx = {\n    left: 0,\n    right: 1,\n    top: 0,\n    bottom: 1,\n    onZero: 2\n  };\n  var axisOffset = axisModel.get('offset') || 0;\n  var posBound = axisDim === 'x' ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset] : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\n\n  if (axis.onZero) {\n    var otherAxis = grid.getAxis(axisDim === 'x' ? 'y' : 'x', axis.onZeroAxisIndex);\n    var onZeroCoord = otherAxis.toGlobalCoord(otherAxis.dataToCoord(0));\n    posBound[idx['onZero']] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\n  } // Axis position\n\n\n  layout.position = [axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0], axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]]; // Axis rotation\n\n  layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1); // Tick and label direction, x y is axisDim\n\n  var dirMap = {\n    top: -1,\n    bottom: 1,\n    left: -1,\n    right: 1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n  layout.labelOffset = axis.onZero ? posBound[idx[rawAxisPosition]] - posBound[idx['onZero']] : 0;\n\n  if (axisModel.get('axisTick.inside')) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n    layout.labelDirection = -layout.labelDirection;\n  } // Special label rotation\n\n\n  var labelRotate = axisModel.get('axisLabel.rotate');\n  layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate; // label interval when auto mode.\n\n  layout.labelInterval = axis.getLabelInterval(); // Over splitLine and splitArea\n\n  layout.z2 = 1;\n  return layout;\n}\n\nexports.layout = layout;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axis/cartesianAxisHelper.js\n// module id = 1063\n// module chunks = 0 1 2","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\nvar LegendModel = echarts.extendComponentModel({\n  type: 'legend.plain',\n  dependencies: ['series'],\n  layoutMode: {\n    type: 'box',\n    // legend.width/height are maxWidth/maxHeight actually,\n    // whereas realy width/height is calculated by its content.\n    // (Setting {left: 10, right: 10} does not make sense).\n    // So consider the case:\n    // `setOption({legend: {left: 10});`\n    // then `setOption({legend: {right: 10});`\n    // The previous `left` should be cleared by setting `ignoreSize`.\n    ignoreSize: true\n  },\n  init: function (option, parentModel, ecModel) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    option.selected = option.selected || {};\n  },\n  mergeOption: function (option) {\n    LegendModel.superCall(this, 'mergeOption', option);\n  },\n  optionUpdated: function () {\n    this._updateData(this.ecModel);\n\n    var legendData = this._data; // If selectedMode is single, try to select one\n\n    if (legendData[0] && this.get('selectedMode') === 'single') {\n      var hasSelected = false; // If has any selected in option.selected\n\n      for (var i = 0; i < legendData.length; i++) {\n        var name = legendData[i].get('name');\n\n        if (this.isSelected(name)) {\n          // Force to unselect others\n          this.select(name);\n          hasSelected = true;\n          break;\n        }\n      } // Try select the first if selectedMode is single\n\n\n      !hasSelected && this.select(legendData[0].get('name'));\n    }\n  },\n  _updateData: function (ecModel) {\n    var legendData = zrUtil.map(this.get('data') || [], function (dataItem) {\n      // Can be string or number\n      if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n        dataItem = {\n          name: dataItem\n        };\n      }\n\n      return new Model(dataItem, this, this.ecModel);\n    }, this);\n    this._data = legendData;\n    var availableNames = zrUtil.map(ecModel.getSeries(), function (series) {\n      return series.name;\n    });\n    ecModel.eachSeries(function (seriesModel) {\n      if (seriesModel.legendDataProvider) {\n        var data = seriesModel.legendDataProvider();\n        availableNames = availableNames.concat(data.mapArray(data.getName));\n      }\n    });\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n\n    this._availableNames = availableNames;\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Model>}\n   */\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @param {string} name\n   */\n  select: function (name) {\n    var selected = this.option.selected;\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      var data = this._data;\n      zrUtil.each(data, function (dataItem) {\n        selected[dataItem.get('name')] = false;\n      });\n    }\n\n    selected[name] = true;\n  },\n\n  /**\n   * @param {string} name\n   */\n  unSelect: function (name) {\n    if (this.get('selectedMode') !== 'single') {\n      this.option.selected[name] = false;\n    }\n  },\n\n  /**\n   * @param {string} name\n   */\n  toggleSelected: function (name) {\n    var selected = this.option.selected; // Default is true\n\n    if (!selected.hasOwnProperty(name)) {\n      selected[name] = true;\n    }\n\n    this[selected[name] ? 'unSelect' : 'select'](name);\n  },\n\n  /**\n   * @param {string} name\n   */\n  isSelected: function (name) {\n    var selected = this.option.selected;\n    return !(selected.hasOwnProperty(name) && !selected[name]) && zrUtil.indexOf(this._availableNames, name) >= 0;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 4,\n    show: true,\n    // 布局方式，默认为水平布局，可选为：\n    // 'horizontal' | 'vertical'\n    orient: 'horizontal',\n    left: 'center',\n    // right: 'center',\n    top: 0,\n    // bottom: null,\n    // 水平对齐\n    // 'auto' | 'left' | 'right'\n    // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n    align: 'auto',\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 图例边框颜色\n    borderColor: '#ccc',\n    borderRadius: 0,\n    // 图例边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 图例内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 各个item之间的间隔，单位px，默认为10，\n    // 横向布局时为水平间隔，纵向布局时为纵向间隔\n    itemGap: 10,\n    // 图例图形宽度\n    itemWidth: 25,\n    // 图例图形高度\n    itemHeight: 14,\n    // 图例关闭时候的颜色\n    inactiveColor: '#ccc',\n    textStyle: {\n      // 图例文字颜色\n      color: '#333'\n    },\n    // formatter: '',\n    // 选择模式，默认开启图例开关\n    selectedMode: true,\n    // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n    // selected: null,\n    // 图例内容（详见legend.data，数组中每一项代表一个item\n    // data: [],\n    // Tooltip 相关配置\n    tooltip: {\n      show: false\n    }\n  }\n});\nvar _default = LegendModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/LegendModel.js\n// module id = 1064\n// module chunks = 0 1 2","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _listComponent = require(\"../helper/listComponent\");\n\nvar makeBackground = _listComponent.makeBackground;\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar Group = graphic.Group;\n\nvar _default = echarts.extendComponentView({\n  type: 'legend.plain',\n  newlineDisabled: false,\n\n  /**\n   * @override\n   */\n  init: function () {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this.group.add(this._contentGroup = new Group());\n    /**\n     * @private\n     * @type {module:zrender/Element}\n     */\n\n    this._backgroundEl;\n  },\n\n  /**\n   * @protected\n   */\n  getContentGroup: function () {\n    return this._contentGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (legendModel, ecModel, api) {\n    this.resetInner();\n\n    if (!legendModel.get('show', true)) {\n      return;\n    }\n\n    var itemAlign = legendModel.get('align');\n\n    if (!itemAlign || itemAlign === 'auto') {\n      itemAlign = legendModel.get('left') === 'right' && legendModel.get('orient') === 'vertical' ? 'right' : 'left';\n    }\n\n    this.renderInner(itemAlign, legendModel, ecModel, api); // Perform layout.\n\n    var positionInfo = legendModel.getBoxLayoutParams();\n    var viewportSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var padding = legendModel.get('padding');\n    var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize); // Place mainGroup, based on the calculated `mainRect`.\n\n    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({\n      width: mainRect.width,\n      height: mainRect.height\n    }, positionInfo), viewportSize, padding);\n    this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]); // Render background after group is layout.\n\n    this.group.add(this._backgroundEl = makeBackground(mainRect, legendModel));\n  },\n\n  /**\n   * @protected\n   */\n  resetInner: function () {\n    this.getContentGroup().removeAll();\n    this._backgroundEl && this.group.remove(this._backgroundEl);\n  },\n\n  /**\n   * @protected\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var contentGroup = this.getContentGroup();\n    var legendDrawnMap = zrUtil.createHashMap();\n    var selectMode = legendModel.get('selectedMode');\n    each(legendModel.getData(), function (itemModel, dataIndex) {\n      var name = itemModel.get('name'); // Use empty string or \\n as a newline string\n\n      if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n        contentGroup.add(new Group({\n          newline: true\n        }));\n        return;\n      }\n\n      var seriesModel = ecModel.getSeriesByName(name)[0];\n\n      if (legendDrawnMap.get(name)) {\n        // Have been drawed\n        return;\n      } // Series legend\n\n\n      if (seriesModel) {\n        var data = seriesModel.getData();\n        var color = data.getVisual('color'); // If color is a callback function\n\n        if (typeof color === 'function') {\n          // Use the first data\n          color = color(seriesModel.getDataParams(0));\n        } // Using rect symbol defaultly\n\n\n        var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n        var symbolType = data.getVisual('symbol');\n\n        var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode);\n\n        itemGroup.on('click', curry(dispatchSelectAction, name, api)).on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api));\n        legendDrawnMap.set(name, true);\n      } else {\n        // Data legend of pie, funnel\n        ecModel.eachRawSeries(function (seriesModel) {\n          // In case multiple series has same data name\n          if (legendDrawnMap.get(name)) {\n            return;\n          }\n\n          if (seriesModel.legendDataProvider) {\n            var data = seriesModel.legendDataProvider();\n            var idx = data.indexOfName(name);\n\n            if (idx < 0) {\n              return;\n            }\n\n            var color = data.getItemVisual(idx, 'color');\n            var legendSymbolType = 'roundRect';\n\n            var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, null, itemAlign, color, selectMode);\n\n            itemGroup.on('click', curry(dispatchSelectAction, name, api)) // FIXME Should not specify the series name\n            .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));\n            legendDrawnMap.set(name, true);\n          }\n        }, this);\n      }\n    }, this);\n  },\n  _createItem: function (name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode) {\n    var itemWidth = legendModel.get('itemWidth');\n    var itemHeight = legendModel.get('itemHeight');\n    var inactiveColor = legendModel.get('inactiveColor');\n    var isSelected = legendModel.isSelected(name);\n    var itemGroup = new Group();\n    var textStyleModel = itemModel.getModel('textStyle');\n    var itemIcon = itemModel.get('icon');\n    var tooltipModel = itemModel.getModel('tooltip');\n    var legendGlobalTooltipModel = tooltipModel.parentModel; // Use user given icon first\n\n    legendSymbolType = itemIcon || legendSymbolType;\n    itemGroup.add(createSymbol(legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor, true)); // Compose symbols\n    // PENDING\n\n    if (!itemIcon && symbolType // At least show one symbol, can't be all none\n    && (symbolType !== legendSymbolType || symbolType == 'none')) {\n      var size = itemHeight * 0.8;\n\n      if (symbolType === 'none') {\n        symbolType = 'circle';\n      } // Put symbol in the center\n\n\n      itemGroup.add(createSymbol(symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size, isSelected ? color : inactiveColor));\n    }\n\n    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n    var textAlign = itemAlign;\n    var formatter = legendModel.get('formatter');\n    var content = name;\n\n    if (typeof formatter === 'string' && formatter) {\n      content = formatter.replace('{name}', name != null ? name : '');\n    } else if (typeof formatter === 'function') {\n      content = formatter(name);\n    }\n\n    itemGroup.add(new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: content,\n        x: textX,\n        y: itemHeight / 2,\n        textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n        textAlign: textAlign,\n        textVerticalAlign: 'middle'\n      })\n    })); // Add a invisible rect to increase the area of mouse hover\n\n    var hitRect = new graphic.Rect({\n      shape: itemGroup.getBoundingRect(),\n      invisible: true,\n      tooltip: tooltipModel.get('show') ? zrUtil.extend({\n        content: name,\n        // Defaul formatter\n        formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n          return name;\n        },\n        formatterParams: {\n          componentType: 'legend',\n          legendIndex: legendModel.componentIndex,\n          name: name,\n          $vars: ['name']\n        }\n      }, tooltipModel.option) : null\n    });\n    itemGroup.add(hitRect);\n    itemGroup.eachChild(function (child) {\n      child.silent = true;\n    });\n    hitRect.silent = !selectMode;\n    this.getContentGroup().add(itemGroup);\n    graphic.setHoverStyle(itemGroup);\n    itemGroup.__legendDataIndex = dataIndex;\n    return itemGroup;\n  },\n\n  /**\n   * @protected\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup(); // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\n    var contentRect = contentGroup.getBoundingRect();\n    contentGroup.attr('position', [-contentRect.x, -contentRect.y]);\n    return this.group.getBoundingRect();\n  }\n});\n\nfunction dispatchSelectAction(name, api) {\n  api.dispatchAction({\n    type: 'legendToggleSelect',\n    name: name\n  });\n}\n\nfunction dispatchHighlightAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'highlight',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nfunction dispatchDownplayAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'downplay',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/LegendView.js\n// module id = 1065\n// module chunks = 0 1 2","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar interactionMutex = require(\"./interactionMutex\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar map = zrUtil.map;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathPow = Math.pow;\nvar COVER_Z = 10000;\nvar UNSELECT_THRESHOLD = 6;\nvar MIN_RESIZE_LINE_WIDTH = 6;\nvar MUTEX_RESOURCE_KEY = 'globalPan';\nvar DIRECTION_MAP = {\n  w: [0, 0],\n  e: [0, 1],\n  n: [1, 0],\n  s: [1, 1]\n};\nvar CURSOR_MAP = {\n  w: 'ew',\n  e: 'ew',\n  n: 'ns',\n  s: 'ns',\n  ne: 'nesw',\n  sw: 'nesw',\n  nw: 'nwse',\n  se: 'nwse'\n};\nvar DEFAULT_BRUSH_OPT = {\n  brushStyle: {\n    lineWidth: 2,\n    stroke: 'rgba(0,0,0,0.3)',\n    fill: 'rgba(0,0,0,0.1)'\n  },\n  transformable: true,\n  brushMode: 'single',\n  removeOnClick: false\n};\nvar baseUID = 0;\n/**\n * @alias module:echarts/component/helper/BrushController\n * @constructor\n * @mixin {module:zrender/mixin/Eventful}\n * @event module:echarts/component/helper/BrushController#brush\n *        params:\n *            areas: Array.<Array>, coord relates to container group,\n *                                    If no container specified, to global.\n *            opt {\n *                isEnd: boolean,\n *                removeOnClick: boolean\n *            }\n *\n * @param {module:zrender/zrender~ZRender} zr\n */\n\nfunction BrushController(zr) {\n  Eventful.call(this);\n  /**\n   * @type {module:zrender/zrender~ZRender}\n   * @private\n   */\n\n  this._zr = zr;\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n\n  this.group = new graphic.Group();\n  /**\n   * Only for drawing (after enabledBrush).\n   *     'line', 'rect', 'polygon' or false\n   *     If passing false/null/undefined, disable brush.\n   *     If passing 'auto', determined by panel.defaultBrushType\n   * @private\n   * @type {string}\n   */\n\n  this._brushType;\n  /**\n   * Only for drawing (after enabledBrush).\n   *\n   * @private\n   * @type {Object}\n   */\n\n  this._brushOption;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._panels;\n  /**\n   * @private\n   * @type {Array.<nubmer>}\n   */\n\n  this._track = [];\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._dragging;\n  /**\n   * @private\n   * @type {Array}\n   */\n\n  this._covers = [];\n  /**\n   * @private\n   * @type {moudule:zrender/container/Group}\n   */\n\n  this._creatingCover;\n  /**\n   * `true` means global panel\n   * @private\n   * @type {module:zrender/container/Group|boolean}\n   */\n\n  this._creatingPanel;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._enableGlobalPan;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this._uid = 'brushController_' + baseUID++;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._handlers = {};\n  each(mouseHandlers, function (handler, eventName) {\n    this._handlers[eventName] = zrUtil.bind(handler, this);\n  }, this);\n}\n\nBrushController.prototype = {\n  constructor: BrushController,\n\n  /**\n   * If set to null/undefined/false, select disabled.\n   * @param {Object} brushOption\n   * @param {string|boolean} brushOption.brushType 'line', 'rect', 'polygon' or false\n   *                          If passing false/null/undefined, disable brush.\n   *                          If passing 'auto', determined by panel.defaultBrushType.\n   *                              ('auto' can not be used in global panel)\n   * @param {number} [brushOption.brushMode='single'] 'single' or 'multiple'\n   * @param {boolean} [brushOption.transformable=true]\n   * @param {boolean} [brushOption.removeOnClick=false]\n   * @param {Object} [brushOption.brushStyle]\n   * @param {number} [brushOption.brushStyle.width]\n   * @param {number} [brushOption.brushStyle.lineWidth]\n   * @param {string} [brushOption.brushStyle.stroke]\n   * @param {string} [brushOption.brushStyle.fill]\n   * @param {number} [brushOption.z]\n   */\n  enableBrush: function (brushOption) {\n    this._brushType && doDisableBrush(this);\n    brushOption.brushType && doEnableBrush(this, brushOption);\n    return this;\n  },\n\n  /**\n   * @param {Array.<Object>} panelOpts If not pass, it is global brush.\n   *        Each items: {\n   *            panelId, // mandatory.\n   *            clipPath, // mandatory. function.\n   *            isTargetByCursor, // mandatory. function.\n   *            defaultBrushType, // optional, only used when brushType is 'auto'.\n   *            getLinearBrushOtherExtent, // optional. function.\n   *        }\n   */\n  setPanels: function (panelOpts) {\n    if (panelOpts && panelOpts.length) {\n      var panels = this._panels = {};\n      zrUtil.each(panelOpts, function (panelOpts) {\n        panels[panelOpts.panelId] = zrUtil.clone(panelOpts);\n      });\n    } else {\n      this._panels = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param {Object} [opt]\n   * @return {boolean} [opt.enableGlobalPan=false]\n   */\n  mount: function (opt) {\n    opt = opt || {};\n    this._enableGlobalPan = opt.enableGlobalPan;\n    var thisGroup = this.group;\n\n    this._zr.add(thisGroup);\n\n    thisGroup.attr({\n      position: opt.position || [0, 0],\n      rotation: opt.rotation || 0,\n      scale: opt.scale || [1, 1]\n    });\n    this._transform = thisGroup.getLocalTransform();\n    return this;\n  },\n  eachCover: function (cb, context) {\n    each(this._covers, cb, context);\n  },\n\n  /**\n   * Update covers.\n   * @param {Array.<Object>} brushOptionList Like:\n   *        [\n   *            {id: 'xx', brushType: 'line', range: [23, 44], brushStyle, transformable},\n   *            {id: 'yy', brushType: 'rect', range: [[23, 44], [23, 54]]},\n   *            ...\n   *        ]\n   *        `brushType` is required in each cover info. (can not be 'auto')\n   *        `id` is not mandatory.\n   *        `brushStyle`, `transformable` is not mandatory, use DEFAULT_BRUSH_OPT by default.\n   *        If brushOptionList is null/undefined, all covers removed.\n   */\n  updateCovers: function (brushOptionList) {\n    brushOptionList = zrUtil.map(brushOptionList, function (brushOption) {\n      return zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n    });\n    var tmpIdPrefix = '\\0-brush-index-';\n    var oldCovers = this._covers;\n    var newCovers = this._covers = [];\n    var controller = this;\n    var creatingCover = this._creatingCover;\n    new DataDiffer(oldCovers, brushOptionList, oldGetKey, getKey).add(addOrUpdate).update(addOrUpdate).remove(remove).execute();\n    return this;\n\n    function getKey(brushOption, index) {\n      return (brushOption.id != null ? brushOption.id : tmpIdPrefix + index) + '-' + brushOption.brushType;\n    }\n\n    function oldGetKey(cover, index) {\n      return getKey(cover.__brushOption, index);\n    }\n\n    function addOrUpdate(newIndex, oldIndex) {\n      var newBrushOption = brushOptionList[newIndex]; // Consider setOption in event listener of brushSelect,\n      // where updating cover when creating should be forbiden.\n\n      if (oldIndex != null && oldCovers[oldIndex] === creatingCover) {\n        newCovers[newIndex] = oldCovers[oldIndex];\n      } else {\n        var cover = newCovers[newIndex] = oldIndex != null ? (oldCovers[oldIndex].__brushOption = newBrushOption, oldCovers[oldIndex]) : endCreating(controller, createCover(controller, newBrushOption));\n        updateCoverAfterCreation(controller, cover);\n      }\n    }\n\n    function remove(oldIndex) {\n      if (oldCovers[oldIndex] !== creatingCover) {\n        controller.group.remove(oldCovers[oldIndex]);\n      }\n    }\n  },\n  unmount: function () {\n    this.enableBrush(false); // container may 'removeAll' outside.\n\n    clearCovers(this);\n\n    this._zr.remove(this.group);\n\n    return this;\n  },\n  dispose: function () {\n    this.unmount();\n    this.off();\n  }\n};\nzrUtil.mixin(BrushController, Eventful);\n\nfunction doEnableBrush(controller, brushOption) {\n  var zr = controller._zr; // Consider roam, which takes globalPan too.\n\n  if (!controller._enableGlobalPan) {\n    interactionMutex.take(zr, MUTEX_RESOURCE_KEY, controller._uid);\n  }\n\n  each(controller._handlers, function (handler, eventName) {\n    zr.on(eventName, handler);\n  });\n  controller._brushType = brushOption.brushType;\n  controller._brushOption = zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n}\n\nfunction doDisableBrush(controller) {\n  var zr = controller._zr;\n  interactionMutex.release(zr, MUTEX_RESOURCE_KEY, controller._uid);\n  each(controller._handlers, function (handler, eventName) {\n    zr.off(eventName, handler);\n  });\n  controller._brushType = controller._brushOption = null;\n}\n\nfunction createCover(controller, brushOption) {\n  var cover = coverRenderers[brushOption.brushType].createCover(controller, brushOption);\n  cover.__brushOption = brushOption;\n  updateZ(cover, brushOption);\n  controller.group.add(cover);\n  return cover;\n}\n\nfunction endCreating(controller, creatingCover) {\n  var coverRenderer = getCoverRenderer(creatingCover);\n\n  if (coverRenderer.endCreating) {\n    coverRenderer.endCreating(controller, creatingCover);\n    updateZ(creatingCover, creatingCover.__brushOption);\n  }\n\n  return creatingCover;\n}\n\nfunction updateCoverShape(controller, cover) {\n  var brushOption = cover.__brushOption;\n  getCoverRenderer(cover).updateCoverShape(controller, cover, brushOption.range, brushOption);\n}\n\nfunction updateZ(cover, brushOption) {\n  var z = brushOption.z;\n  z == null && (z = COVER_Z);\n  cover.traverse(function (el) {\n    el.z = z;\n    el.z2 = z; // Consider in given container.\n  });\n}\n\nfunction updateCoverAfterCreation(controller, cover) {\n  getCoverRenderer(cover).updateCommon(controller, cover);\n  updateCoverShape(controller, cover);\n}\n\nfunction getCoverRenderer(cover) {\n  return coverRenderers[cover.__brushOption.brushType];\n} // return target panel or `true` (means global panel)\n\n\nfunction getPanelByPoint(controller, e, localCursorPoint) {\n  var panels = controller._panels;\n\n  if (!panels) {\n    return true; // Global panel\n  }\n\n  var panel;\n  var transform = controller._transform;\n  each(panels, function (pn) {\n    pn.isTargetByCursor(e, localCursorPoint, transform) && (panel = pn);\n  });\n  return panel;\n} // Return a panel or true\n\n\nfunction getPanelByCover(controller, cover) {\n  var panels = controller._panels;\n\n  if (!panels) {\n    return true; // Global panel\n  }\n\n  var panelId = cover.__brushOption.panelId; // User may give cover without coord sys info,\n  // which is then treated as global panel.\n\n  return panelId != null ? panels[panelId] : true;\n}\n\nfunction clearCovers(controller) {\n  var covers = controller._covers;\n  var originalLength = covers.length;\n  each(covers, function (cover) {\n    controller.group.remove(cover);\n  }, controller);\n  covers.length = 0;\n  return !!originalLength;\n}\n\nfunction trigger(controller, opt) {\n  var areas = map(controller._covers, function (cover) {\n    var brushOption = cover.__brushOption;\n    var range = zrUtil.clone(brushOption.range);\n    return {\n      brushType: brushOption.brushType,\n      panelId: brushOption.panelId,\n      range: range\n    };\n  });\n  controller.trigger('brush', areas, {\n    isEnd: !!opt.isEnd,\n    removeOnClick: !!opt.removeOnClick\n  });\n}\n\nfunction shouldShowCover(controller) {\n  var track = controller._track;\n\n  if (!track.length) {\n    return false;\n  }\n\n  var p2 = track[track.length - 1];\n  var p1 = track[0];\n  var dx = p2[0] - p1[0];\n  var dy = p2[1] - p1[1];\n  var dist = mathPow(dx * dx + dy * dy, 0.5);\n  return dist > UNSELECT_THRESHOLD;\n}\n\nfunction getTrackEnds(track) {\n  var tail = track.length - 1;\n  tail < 0 && (tail = 0);\n  return [track[0], track[tail]];\n}\n\nfunction createBaseRectCover(doDrift, controller, brushOption, edgeNames) {\n  var cover = new graphic.Group();\n  cover.add(new graphic.Rect({\n    name: 'main',\n    style: makeStyle(brushOption),\n    silent: true,\n    draggable: true,\n    cursor: 'move',\n    drift: curry(doDrift, controller, cover, 'nswe'),\n    ondragend: curry(trigger, controller, {\n      isEnd: true\n    })\n  }));\n  each(edgeNames, function (name) {\n    cover.add(new graphic.Rect({\n      name: name,\n      style: {\n        opacity: 0\n      },\n      draggable: true,\n      silent: true,\n      invisible: true,\n      drift: curry(doDrift, controller, cover, name),\n      ondragend: curry(trigger, controller, {\n        isEnd: true\n      })\n    }));\n  });\n  return cover;\n}\n\nfunction updateBaseRect(controller, cover, localRange, brushOption) {\n  var lineWidth = brushOption.brushStyle.lineWidth || 0;\n  var handleSize = mathMax(lineWidth, MIN_RESIZE_LINE_WIDTH);\n  var x = localRange[0][0];\n  var y = localRange[1][0];\n  var xa = x - lineWidth / 2;\n  var ya = y - lineWidth / 2;\n  var x2 = localRange[0][1];\n  var y2 = localRange[1][1];\n  var x2a = x2 - handleSize + lineWidth / 2;\n  var y2a = y2 - handleSize + lineWidth / 2;\n  var width = x2 - x;\n  var height = y2 - y;\n  var widtha = width + lineWidth;\n  var heighta = height + lineWidth;\n  updateRectShape(controller, cover, 'main', x, y, width, height);\n\n  if (brushOption.transformable) {\n    updateRectShape(controller, cover, 'w', xa, ya, handleSize, heighta);\n    updateRectShape(controller, cover, 'e', x2a, ya, handleSize, heighta);\n    updateRectShape(controller, cover, 'n', xa, ya, widtha, handleSize);\n    updateRectShape(controller, cover, 's', xa, y2a, widtha, handleSize);\n    updateRectShape(controller, cover, 'nw', xa, ya, handleSize, handleSize);\n    updateRectShape(controller, cover, 'ne', x2a, ya, handleSize, handleSize);\n    updateRectShape(controller, cover, 'sw', xa, y2a, handleSize, handleSize);\n    updateRectShape(controller, cover, 'se', x2a, y2a, handleSize, handleSize);\n  }\n}\n\nfunction updateCommon(controller, cover) {\n  var brushOption = cover.__brushOption;\n  var transformable = brushOption.transformable;\n  var mainEl = cover.childAt(0);\n  mainEl.useStyle(makeStyle(brushOption));\n  mainEl.attr({\n    silent: !transformable,\n    cursor: transformable ? 'move' : 'default'\n  });\n  each(['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw'], function (name) {\n    var el = cover.childOfName(name);\n    var globalDir = getGlobalDirection(controller, name);\n    el && el.attr({\n      silent: !transformable,\n      invisible: !transformable,\n      cursor: transformable ? CURSOR_MAP[globalDir] + '-resize' : null\n    });\n  });\n}\n\nfunction updateRectShape(controller, cover, name, x, y, w, h) {\n  var el = cover.childOfName(name);\n  el && el.setShape(pointsToRect(clipByPanel(controller, cover, [[x, y], [x + w, y + h]])));\n}\n\nfunction makeStyle(brushOption) {\n  return zrUtil.defaults({\n    strokeNoScale: true\n  }, brushOption.brushStyle);\n}\n\nfunction formatRectRange(x, y, x2, y2) {\n  var min = [mathMin(x, x2), mathMin(y, y2)];\n  var max = [mathMax(x, x2), mathMax(y, y2)];\n  return [[min[0], max[0]], // x range\n  [min[1], max[1]] // y range\n  ];\n}\n\nfunction getTransform(controller) {\n  return graphic.getTransform(controller.group);\n}\n\nfunction getGlobalDirection(controller, localDirection) {\n  if (localDirection.length > 1) {\n    localDirection = localDirection.split('');\n    var globalDir = [getGlobalDirection(controller, localDirection[0]), getGlobalDirection(controller, localDirection[1])];\n    (globalDir[0] === 'e' || globalDir[0] === 'w') && globalDir.reverse();\n    return globalDir.join('');\n  } else {\n    var map = {\n      w: 'left',\n      e: 'right',\n      n: 'top',\n      s: 'bottom'\n    };\n    var inverseMap = {\n      left: 'w',\n      right: 'e',\n      top: 'n',\n      bottom: 's'\n    };\n    var globalDir = graphic.transformDirection(map[localDirection], getTransform(controller));\n    return inverseMap[globalDir];\n  }\n}\n\nfunction driftRect(toRectRange, fromRectRange, controller, cover, name, dx, dy, e) {\n  var brushOption = cover.__brushOption;\n  var rectRange = toRectRange(brushOption.range);\n  var localDelta = toLocalDelta(controller, dx, dy);\n  each(name.split(''), function (namePart) {\n    var ind = DIRECTION_MAP[namePart];\n    rectRange[ind[0]][ind[1]] += localDelta[ind[0]];\n  });\n  brushOption.range = fromRectRange(formatRectRange(rectRange[0][0], rectRange[1][0], rectRange[0][1], rectRange[1][1]));\n  updateCoverAfterCreation(controller, cover);\n  trigger(controller, {\n    isEnd: false\n  });\n}\n\nfunction driftPolygon(controller, cover, dx, dy, e) {\n  var range = cover.__brushOption.range;\n  var localDelta = toLocalDelta(controller, dx, dy);\n  each(range, function (point) {\n    point[0] += localDelta[0];\n    point[1] += localDelta[1];\n  });\n  updateCoverAfterCreation(controller, cover);\n  trigger(controller, {\n    isEnd: false\n  });\n}\n\nfunction toLocalDelta(controller, dx, dy) {\n  var thisGroup = controller.group;\n  var localD = thisGroup.transformCoordToLocal(dx, dy);\n  var localZero = thisGroup.transformCoordToLocal(0, 0);\n  return [localD[0] - localZero[0], localD[1] - localZero[1]];\n}\n\nfunction clipByPanel(controller, cover, data) {\n  var panel = getPanelByCover(controller, cover);\n  return panel && panel !== true ? panel.clipPath(data, controller._transform) : zrUtil.clone(data);\n}\n\nfunction pointsToRect(points) {\n  var xmin = mathMin(points[0][0], points[1][0]);\n  var ymin = mathMin(points[0][1], points[1][1]);\n  var xmax = mathMax(points[0][0], points[1][0]);\n  var ymax = mathMax(points[0][1], points[1][1]);\n  return {\n    x: xmin,\n    y: ymin,\n    width: xmax - xmin,\n    height: ymax - ymin\n  };\n}\n\nfunction resetCursor(controller, e, localCursorPoint) {\n  // Check active\n  if (!controller._brushType) {\n    return;\n  }\n\n  var zr = controller._zr;\n  var covers = controller._covers;\n  var currPanel = getPanelByPoint(controller, e, localCursorPoint); // Check whether in covers.\n\n  if (!controller._dragging) {\n    for (var i = 0; i < covers.length; i++) {\n      var brushOption = covers[i].__brushOption;\n\n      if (currPanel && (currPanel === true || brushOption.panelId === currPanel.panelId) && coverRenderers[brushOption.brushType].contain(covers[i], localCursorPoint[0], localCursorPoint[1])) {\n        // Use cursor style set on cover.\n        return;\n      }\n    }\n  }\n\n  currPanel && zr.setCursorStyle('crosshair');\n}\n\nfunction preventDefault(e) {\n  var rawE = e.event;\n  rawE.preventDefault && rawE.preventDefault();\n}\n\nfunction mainShapeContain(cover, x, y) {\n  return cover.childOfName('main').contain(x, y);\n}\n\nfunction updateCoverByMouse(controller, e, localCursorPoint, isEnd) {\n  var creatingCover = controller._creatingCover;\n  var panel = controller._creatingPanel;\n  var thisBrushOption = controller._brushOption;\n  var eventParams;\n\n  controller._track.push(localCursorPoint.slice());\n\n  if (shouldShowCover(controller) || creatingCover) {\n    if (panel && !creatingCover) {\n      thisBrushOption.brushMode === 'single' && clearCovers(controller);\n      var brushOption = zrUtil.clone(thisBrushOption);\n      brushOption.brushType = determineBrushType(brushOption.brushType, panel);\n      brushOption.panelId = panel === true ? null : panel.panelId;\n      creatingCover = controller._creatingCover = createCover(controller, brushOption);\n\n      controller._covers.push(creatingCover);\n    }\n\n    if (creatingCover) {\n      var coverRenderer = coverRenderers[determineBrushType(controller._brushType, panel)];\n      var coverBrushOption = creatingCover.__brushOption;\n      coverBrushOption.range = coverRenderer.getCreatingRange(clipByPanel(controller, creatingCover, controller._track));\n\n      if (isEnd) {\n        endCreating(controller, creatingCover);\n        coverRenderer.updateCommon(controller, creatingCover);\n      }\n\n      updateCoverShape(controller, creatingCover);\n      eventParams = {\n        isEnd: isEnd\n      };\n    }\n  } else if (isEnd && thisBrushOption.brushMode === 'single' && thisBrushOption.removeOnClick) {\n    // Help user to remove covers easily, only by a tiny drag, in 'single' mode.\n    // But a single click do not clear covers, because user may have casual\n    // clicks (for example, click on other component and do not expect covers\n    // disappear).\n    // Only some cover removed, trigger action, but not every click trigger action.\n    if (getPanelByPoint(controller, e, localCursorPoint) && clearCovers(controller)) {\n      eventParams = {\n        isEnd: isEnd,\n        removeOnClick: true\n      };\n    }\n  }\n\n  return eventParams;\n}\n\nfunction determineBrushType(brushType, panel) {\n  if (brushType === 'auto') {\n    return panel.defaultBrushType;\n  }\n\n  return brushType;\n}\n\nvar mouseHandlers = {\n  mousedown: function (e) {\n    if (this._dragging) {\n      // In case some browser do not support globalOut,\n      // and release mose out side the browser.\n      handleDragEnd.call(this, e);\n    } else if (!e.target || !e.target.draggable) {\n      preventDefault(e);\n      var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n      this._creatingCover = null;\n      var panel = this._creatingPanel = getPanelByPoint(this, e, localCursorPoint);\n\n      if (panel) {\n        this._dragging = true;\n        this._track = [localCursorPoint.slice()];\n      }\n    }\n  },\n  mousemove: function (e) {\n    var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n    resetCursor(this, e, localCursorPoint);\n\n    if (this._dragging) {\n      preventDefault(e);\n      var eventParams = updateCoverByMouse(this, e, localCursorPoint, false);\n      eventParams && trigger(this, eventParams);\n    }\n  },\n  mouseup: handleDragEnd //,\n  // FIXME\n  // in tooltip, globalout should not be triggered.\n  // globalout: handleDragEnd\n\n};\n\nfunction handleDragEnd(e) {\n  if (this._dragging) {\n    preventDefault(e);\n    var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n    var eventParams = updateCoverByMouse(this, e, localCursorPoint, true);\n    this._dragging = false;\n    this._track = [];\n    this._creatingCover = null; // trigger event shoule be at final, after procedure will be nested.\n\n    eventParams && trigger(this, eventParams);\n  }\n}\n/**\n * key: brushType\n * @type {Object}\n */\n\n\nvar coverRenderers = {\n  lineX: getLineRenderer(0),\n  lineY: getLineRenderer(1),\n  rect: {\n    createCover: function (controller, brushOption) {\n      return createBaseRectCover(curry(driftRect, function (range) {\n        return range;\n      }, function (range) {\n        return range;\n      }), controller, brushOption, ['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw']);\n    },\n    getCreatingRange: function (localTrack) {\n      var ends = getTrackEnds(localTrack);\n      return formatRectRange(ends[1][0], ends[1][1], ends[0][0], ends[0][1]);\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      updateBaseRect(controller, cover, localRange, brushOption);\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  },\n  polygon: {\n    createCover: function (controller, brushOption) {\n      var cover = new graphic.Group(); // Do not use graphic.Polygon because graphic.Polyline do not close the\n      // border of the shape when drawing, which is a better experience for user.\n\n      cover.add(new graphic.Polyline({\n        name: 'main',\n        style: makeStyle(brushOption),\n        silent: true\n      }));\n      return cover;\n    },\n    getCreatingRange: function (localTrack) {\n      return localTrack;\n    },\n    endCreating: function (controller, cover) {\n      cover.remove(cover.childAt(0)); // Use graphic.Polygon close the shape.\n\n      cover.add(new graphic.Polygon({\n        name: 'main',\n        draggable: true,\n        drift: curry(driftPolygon, controller, cover),\n        ondragend: curry(trigger, controller, {\n          isEnd: true\n        })\n      }));\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      cover.childAt(0).setShape({\n        points: clipByPanel(controller, cover, localRange)\n      });\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  }\n};\n\nfunction getLineRenderer(xyIndex) {\n  return {\n    createCover: function (controller, brushOption) {\n      return createBaseRectCover(curry(driftRect, function (range) {\n        var rectRange = [range, [0, 100]];\n        xyIndex && rectRange.reverse();\n        return rectRange;\n      }, function (rectRange) {\n        return rectRange[xyIndex];\n      }), controller, brushOption, [['w', 'e'], ['n', 's']][xyIndex]);\n    },\n    getCreatingRange: function (localTrack) {\n      var ends = getTrackEnds(localTrack);\n      var min = mathMin(ends[0][xyIndex], ends[1][xyIndex]);\n      var max = mathMax(ends[0][xyIndex], ends[1][xyIndex]);\n      return [min, max];\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      var otherExtent; // If brushWidth not specified, fit the panel.\n\n      var panel = getPanelByCover(controller, cover);\n\n      if (panel !== true && panel.getLinearBrushOtherExtent) {\n        otherExtent = panel.getLinearBrushOtherExtent(xyIndex, controller._transform);\n      } else {\n        var zr = controller._zr;\n        otherExtent = [0, [zr.getWidth(), zr.getHeight()][1 - xyIndex]];\n      }\n\n      var rectRange = [localRange, otherExtent];\n      xyIndex && rectRange.reverse();\n      updateBaseRect(controller, cover, rectRange, brushOption);\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  };\n}\n\nvar _default = BrushController;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/BrushController.js\n// module id = 1066\n// module chunks = 0 1 2","var IRRELEVANT_EXCLUDES = {\n  'axisPointer': 1,\n  'tooltip': 1,\n  'brush': 1\n};\n/**\n * Avoid that: mouse click on a elements that is over geo or graph,\n * but roam is triggered.\n */\n\nfunction onIrrelevantElement(e, api, targetCoordSysModel) {\n  var model = api.getComponentByElement(e.topTarget); // If model is axisModel, it works only if it is injected with coordinateSystem.\n\n  var coordSys = model && model.coordinateSystem;\n  return model && model !== targetCoordSysModel && !IRRELEVANT_EXCLUDES[model.mainType] && coordSys && coordSys.model !== targetCoordSysModel;\n}\n\nexports.onIrrelevantElement = onIrrelevantElement;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/cursorHelper.js\n// module id = 1067\n// module chunks = 0 1 2","var graphic = require(\"../../util/graphic\");\n\nvar SymbolClz = require(\"./Symbol\");\n\n/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n/**\n * @constructor\n * @alias module:echarts/chart/helper/SymbolDraw\n * @param {module:zrender/graphic/Group} [symbolCtor]\n */\nfunction SymbolDraw(symbolCtor) {\n  this.group = new graphic.Group();\n  this._symbolCtor = symbolCtor || SymbolClz;\n}\n\nvar symbolDrawProto = SymbolDraw.prototype;\n\nfunction symbolNeedsDraw(data, idx, isIgnore) {\n  var point = data.getItemLayout(idx); // Is an object\n  // if (point && point.hasOwnProperty('point')) {\n  //     point = point.point;\n  // }\n\n  return point && !isNaN(point[0]) && !isNaN(point[1]) && !(isIgnore && isIgnore(idx)) && data.getItemVisual(idx, 'symbol') !== 'none';\n}\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n * @param {Array.<boolean>} [isIgnore]\n */\n\n\nsymbolDrawProto.updateData = function (data, isIgnore) {\n  var group = this.group;\n  var seriesModel = data.hostModel;\n  var oldData = this._data;\n  var SymbolCtor = this._symbolCtor;\n  var seriesScope = {\n    itemStyle: seriesModel.getModel('itemStyle.normal').getItemStyle(['color']),\n    hoverItemStyle: seriesModel.getModel('itemStyle.emphasis').getItemStyle(),\n    symbolRotate: seriesModel.get('symbolRotate'),\n    symbolOffset: seriesModel.get('symbolOffset'),\n    hoverAnimation: seriesModel.get('hoverAnimation'),\n    labelModel: seriesModel.getModel('label.normal'),\n    hoverLabelModel: seriesModel.getModel('label.emphasis'),\n    cursorStyle: seriesModel.get('cursor')\n  };\n  data.diff(oldData).add(function (newIdx) {\n    var point = data.getItemLayout(newIdx);\n\n    if (symbolNeedsDraw(data, newIdx, isIgnore)) {\n      var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n      symbolEl.attr('position', point);\n      data.setItemGraphicEl(newIdx, symbolEl);\n      group.add(symbolEl);\n    }\n  }).update(function (newIdx, oldIdx) {\n    var symbolEl = oldData.getItemGraphicEl(oldIdx);\n    var point = data.getItemLayout(newIdx);\n\n    if (!symbolNeedsDraw(data, newIdx, isIgnore)) {\n      group.remove(symbolEl);\n      return;\n    }\n\n    if (!symbolEl) {\n      symbolEl = new SymbolCtor(data, newIdx);\n      symbolEl.attr('position', point);\n    } else {\n      symbolEl.updateData(data, newIdx, seriesScope);\n      graphic.updateProps(symbolEl, {\n        position: point\n      }, seriesModel);\n    } // Add back\n\n\n    group.add(symbolEl);\n    data.setItemGraphicEl(newIdx, symbolEl);\n  }).remove(function (oldIdx) {\n    var el = oldData.getItemGraphicEl(oldIdx);\n    el && el.fadeOut(function () {\n      group.remove(el);\n    });\n  }).execute();\n  this._data = data;\n};\n\nsymbolDrawProto.updateLayout = function () {\n  var data = this._data;\n\n  if (data) {\n    // Not use animation\n    data.eachItemGraphicEl(function (el, idx) {\n      var point = data.getItemLayout(idx);\n      el.attr('position', point);\n    });\n  }\n};\n\nsymbolDrawProto.remove = function (enableAnimation) {\n  var group = this.group;\n  var data = this._data;\n\n  if (data) {\n    if (enableAnimation) {\n      data.eachItemGraphicEl(function (el) {\n        el.fadeOut(function () {\n          group.remove(el);\n        });\n      });\n    } else {\n      group.removeAll();\n    }\n  }\n};\n\nvar _default = SymbolDraw;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/SymbolDraw.js\n// module id = 1068\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _labelHelper = require(\"./labelHelper\");\n\nvar findLabelValueDim = _labelHelper.findLabelValueDim;\n\n/**\n * @module echarts/chart/helper/Symbol\n */\nfunction getSymbolSize(data, idx) {\n  var symbolSize = data.getItemVisual(idx, 'symbolSize');\n  return symbolSize instanceof Array ? symbolSize.slice() : [+symbolSize, +symbolSize];\n}\n\nfunction getScale(symbolSize) {\n  return [symbolSize[0] / 2, symbolSize[1] / 2];\n}\n/**\n * @constructor\n * @alias {module:echarts/chart/helper/Symbol}\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction SymbolClz(data, idx, seriesScope) {\n  graphic.Group.call(this);\n  this.updateData(data, idx, seriesScope);\n}\n\nvar symbolProto = SymbolClz.prototype;\n\nfunction driftSymbol(dx, dy) {\n  this.parent.drift(dx, dy);\n}\n\nsymbolProto._createSymbol = function (symbolType, data, idx, symbolSize) {\n  // Remove paths created before\n  this.removeAll();\n  var color = data.getItemVisual(idx, 'color'); // var symbolPath = createSymbol(\n  //     symbolType, -0.5, -0.5, 1, 1, color\n  // );\n  // If width/height are set too small (e.g., set to 1) on ios10\n  // and macOS Sierra, a circle stroke become a rect, no matter what\n  // the scale is set. So we set width/height as 2. See #4150.\n\n  var symbolPath = createSymbol(symbolType, -1, -1, 2, 2, color);\n  symbolPath.attr({\n    z2: 100,\n    culling: true,\n    scale: getScale(symbolSize)\n  }); // Rewrite drift method\n\n  symbolPath.drift = driftSymbol;\n  this._symbolType = symbolType;\n  this.add(symbolPath);\n};\n/**\n * Stop animation\n * @param {boolean} toLastFrame\n */\n\n\nsymbolProto.stopSymbolAnimation = function (toLastFrame) {\n  this.childAt(0).stopAnimation(toLastFrame);\n};\n/**\n * FIXME:\n * Caution: This method breaks the encapsulation of this module,\n * but it indeed brings convenience. So do not use the method\n * unless you detailedly know all the implements of `Symbol`,\n * especially animation.\n *\n * Get symbol path element.\n */\n\n\nsymbolProto.getSymbolPath = function () {\n  return this.childAt(0);\n};\n/**\n * Get scale(aka, current symbol size).\n * Including the change caused by animation\n */\n\n\nsymbolProto.getScale = function () {\n  return this.childAt(0).scale;\n};\n/**\n * Highlight symbol\n */\n\n\nsymbolProto.highlight = function () {\n  this.childAt(0).trigger('emphasis');\n};\n/**\n * Downplay symbol\n */\n\n\nsymbolProto.downplay = function () {\n  this.childAt(0).trigger('normal');\n};\n/**\n * @param {number} zlevel\n * @param {number} z\n */\n\n\nsymbolProto.setZ = function (zlevel, z) {\n  var symbolPath = this.childAt(0);\n  symbolPath.zlevel = zlevel;\n  symbolPath.z = z;\n};\n\nsymbolProto.setDraggable = function (draggable) {\n  var symbolPath = this.childAt(0);\n  symbolPath.draggable = draggable;\n  symbolPath.cursor = draggable ? 'move' : 'pointer';\n};\n/**\n * Update symbol properties\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Object} [seriesScope]\n * @param {Object} [seriesScope.itemStyle]\n * @param {Object} [seriesScope.hoverItemStyle]\n * @param {Object} [seriesScope.symbolRotate]\n * @param {Object} [seriesScope.symbolOffset]\n * @param {module:echarts/model/Model} [seriesScope.labelModel]\n * @param {module:echarts/model/Model} [seriesScope.hoverLabelModel]\n * @param {boolean} [seriesScope.hoverAnimation]\n * @param {Object} [seriesScope.cursorStyle]\n * @param {module:echarts/model/Model} [seriesScope.itemModel]\n * @param {string} [seriesScope.symbolInnerColor]\n * @param {Object} [seriesScope.fadeIn=false]\n */\n\n\nsymbolProto.updateData = function (data, idx, seriesScope) {\n  this.silent = false;\n  var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n  var seriesModel = data.hostModel;\n  var symbolSize = getSymbolSize(data, idx);\n  var isInit = symbolType !== this._symbolType;\n\n  if (isInit) {\n    this._createSymbol(symbolType, data, idx, symbolSize);\n  } else {\n    var symbolPath = this.childAt(0);\n    symbolPath.silent = false;\n    graphic.updateProps(symbolPath, {\n      scale: getScale(symbolSize)\n    }, seriesModel, idx);\n  }\n\n  this._updateCommon(data, idx, symbolSize, seriesScope);\n\n  if (isInit) {\n    var symbolPath = this.childAt(0);\n    var fadeIn = seriesScope && seriesScope.fadeIn;\n    var target = {\n      scale: symbolPath.scale.slice()\n    };\n    fadeIn && (target.style = {\n      opacity: symbolPath.style.opacity\n    });\n    symbolPath.scale = [0, 0];\n    fadeIn && (symbolPath.style.opacity = 0);\n    graphic.initProps(symbolPath, target, seriesModel, idx);\n  }\n\n  this._seriesModel = seriesModel;\n}; // Update common properties\n\n\nvar normalStyleAccessPath = ['itemStyle', 'normal'];\nvar emphasisStyleAccessPath = ['itemStyle', 'emphasis'];\nvar normalLabelAccessPath = ['label', 'normal'];\nvar emphasisLabelAccessPath = ['label', 'emphasis'];\n/**\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Array.<number>} symbolSize\n * @param {Object} [seriesScope]\n */\n\nsymbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n  var symbolPath = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var color = data.getItemVisual(idx, 'color'); // Reset style\n\n  if (symbolPath.type !== 'image') {\n    symbolPath.useStyle({\n      strokeNoScale: true\n    });\n  }\n\n  var itemStyle = seriesScope && seriesScope.itemStyle;\n  var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n  var symbolRotate = seriesScope && seriesScope.symbolRotate;\n  var symbolOffset = seriesScope && seriesScope.symbolOffset;\n  var labelModel = seriesScope && seriesScope.labelModel;\n  var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n  var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n  var cursorStyle = seriesScope && seriesScope.cursorStyle;\n\n  if (!seriesScope || data.hasItemOption) {\n    var itemModel = seriesScope && seriesScope.itemModel ? seriesScope.itemModel : data.getItemModel(idx); // Color must be excluded.\n    // Because symbol provide setColor individually to set fill and stroke\n\n    itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n    hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n    symbolRotate = itemModel.getShallow('symbolRotate');\n    symbolOffset = itemModel.getShallow('symbolOffset');\n    labelModel = itemModel.getModel(normalLabelAccessPath);\n    hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n    hoverAnimation = itemModel.getShallow('hoverAnimation');\n    cursorStyle = itemModel.getShallow('cursor');\n  } else {\n    hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n  }\n\n  var elStyle = symbolPath.style;\n  symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n  if (symbolOffset) {\n    symbolPath.attr('position', [parsePercent(symbolOffset[0], symbolSize[0]), parsePercent(symbolOffset[1], symbolSize[1])]);\n  }\n\n  cursorStyle && symbolPath.attr('cursor', cursorStyle); // PENDING setColor before setStyle!!!\n\n  symbolPath.setColor(color, seriesScope && seriesScope.symbolInnerColor);\n  symbolPath.setStyle(itemStyle);\n  var opacity = data.getItemVisual(idx, 'opacity');\n\n  if (opacity != null) {\n    elStyle.opacity = opacity;\n  }\n\n  var useNameLabel = seriesScope && seriesScope.useNameLabel;\n  var valueDim = !useNameLabel && findLabelValueDim(data);\n\n  if (useNameLabel || valueDim != null) {\n    graphic.setLabelStyle(elStyle, hoverItemStyle, labelModel, hoverLabelModel, {\n      labelFetcher: seriesModel,\n      labelDataIndex: idx,\n      defaultText: useNameLabel ? data.getName(idx) : data.get(valueDim, idx),\n      isRectText: true,\n      autoColor: color\n    });\n  }\n\n  symbolPath.off('mouseover').off('mouseout').off('emphasis').off('normal');\n  symbolPath.hoverStyle = hoverItemStyle; // FIXME\n  // Do not use symbol.trigger('emphasis'), but use symbol.highlight() instead.\n\n  graphic.setHoverStyle(symbolPath);\n  var scale = getScale(symbolSize);\n\n  if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n    var onEmphasis = function () {\n      var ratio = scale[1] / scale[0];\n      this.animateTo({\n        scale: [Math.max(scale[0] * 1.1, scale[0] + 3), Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)]\n      }, 400, 'elasticOut');\n    };\n\n    var onNormal = function () {\n      this.animateTo({\n        scale: scale\n      }, 400, 'elasticOut');\n    };\n\n    symbolPath.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n  }\n};\n/**\n * @param {Function} cb\n * @param {Object} [opt]\n * @param {Object} [opt.keepLabel=true]\n */\n\n\nsymbolProto.fadeOut = function (cb, opt) {\n  var symbolPath = this.childAt(0); // Avoid mistaken hover when fading out\n\n  this.silent = symbolPath.silent = true; // Not show text when animating\n\n  !(opt && opt.keepLabel) && (symbolPath.style.text = null);\n  graphic.updateProps(symbolPath, {\n    style: {\n      opacity: 0\n    },\n    scale: [0, 0]\n  }, this._seriesModel, this.dataIndex, cb);\n};\n\nzrUtil.inherits(SymbolClz, graphic.Group);\nvar _default = SymbolClz;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/Symbol.js\n// module id = 1069\n// module chunks = 0 1","var textHelper = require(\"../helper/text\");\n\nvar BoundingRect = require(\"../../core/BoundingRect\");\n\n/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\nvar tmpRect = new BoundingRect();\n\nvar RectText = function () {};\n\nRectText.prototype = {\n  constructor: RectText,\n\n  /**\n   * Draw text in a rect with specified position.\n   * @param  {CanvasRenderingContext2D} ctx\n   * @param  {Object} rect Displayable rect\n   */\n  drawRectText: function (ctx, rect) {\n    var style = this.style;\n    rect = style.textRect || rect; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n    var text = style.text; // Convert to string\n\n    text != null && (text += '');\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    } // FIXME\n\n\n    ctx.save(); // Transform rect to view space\n\n    var transform = this.transform;\n\n    if (!style.transformText) {\n      if (transform) {\n        tmpRect.copy(rect);\n        tmpRect.applyTransform(transform);\n        rect = tmpRect;\n      }\n    } else {\n      this.setTransform(ctx);\n    } // transformText and textRotation can not be used at the same time.\n\n\n    textHelper.renderText(this, ctx, text, style, rect);\n    ctx.restore();\n  }\n};\nvar _default = RectText;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/mixin/RectText.js\n// module id = 1071\n// module chunks = 0 1 2","/**\n * 线段包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  var _a = 0;\n  var _b = x0; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l || y < y0 - _l && y < y1 - _l || x > x0 + _l && x > x1 + _l || x < x0 - _l && x < x1 - _l) {\n    return false;\n  }\n\n  if (x0 !== x1) {\n    _a = (y0 - y1) / (x0 - x1);\n    _b = (x0 * y1 - x1 * y0) / (x0 - x1);\n  } else {\n    return Math.abs(x - x0) <= _l / 2;\n  }\n\n  var tmp = _a * x - y + _b;\n\n  var _s = tmp * tmp / (_a * _a + 1);\n\n  return _s <= _l / 2 * _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/contain/line.js\n// module id = 1072\n// module chunks = 0 1 2","var _curve = require(\"../core/curve\");\n\nvar quadraticProjectPoint = _curve.quadraticProjectPoint;\n\n/**\n * 二次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l) {\n    return false;\n  }\n\n  var d = quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/contain/quadratic.js\n// module id = 1073\n// module chunks = 0 1 2","var zrUtil = require(\"../core/util\");\n\nvar Gradient = require(\"./Gradient\");\n\n/**\n * x, y, x2, y2 are all percent from 0 to 1\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @param {number} [x2=1]\n * @param {number} [y2=0]\n * @param {Array.<Object>} colorStops\n * @param {boolean} [globalCoord=false]\n */\nvar LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'linear', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0 : x;\n  this.y = y == null ? 0 : y;\n  this.x2 = x2 == null ? 1 : x2;\n  this.y2 = y2 == null ? 0 : y2; // Can be cloned\n\n  this.type = 'linear'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nLinearGradient.prototype = {\n  constructor: LinearGradient\n};\nzrUtil.inherits(LinearGradient, Gradient);\nvar _default = LinearGradient;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/LinearGradient.js\n// module id = 1074\n// module chunks = 0 1 2","var zrender = require(\"zrender/lib/zrender\");\n\nexports.zrender = zrender;\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nexports.matrix = matrix;\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nexports.vector = vector;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nexports.color = colorTool;\n\nvar graphic = require(\"./util/graphic\");\n\nexports.graphic = graphic;\n\nvar numberUtil = require(\"./util/number\");\n\nexports.number = numberUtil;\n\nvar formatUtil = require(\"./util/format\");\n\nexports.format = formatUtil;\n\nvar _throttle = require(\"./util/throttle\");\n\nvar throttle = _throttle.throttle;\nexports.throttle = _throttle.throttle;\n\nvar ecHelper = require(\"./helper\");\n\nexports.helper = ecHelper;\n\nvar _List = require(\"./data/List\");\n\nexports.List = _List;\n\nvar _Model = require(\"./model/Model\");\n\nexports.Model = _Model;\n\nvar _Axis = require(\"./coord/Axis\");\n\nexports.Axis = _Axis;\n\nvar _env = require(\"zrender/lib/core/env\");\n\nexports.env = _env;\n\nvar _parseGeoJson = require(\"./coord/geo/parseGeoJson\");\n\nexports.parseGeoJson = _parseGeoJson;\n\n/**\n * Do not mount those modules on 'src/echarts' for better tree shaking.\n */\nvar ecUtil = {};\nzrUtil.each(['map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter', 'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction', 'extend', 'defaults', 'clone', 'merge'], function (name) {\n  ecUtil[name] = zrUtil[name];\n});\nexports.util = ecUtil;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/export.js\n// module id = 1075\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Region = require(\"./Region\");\n\n/**\n * Parse and decode geo json\n * @module echarts/coord/geo/parseGeoJson\n */\nfunction decode(json) {\n  if (!json.UTF8Encoding) {\n    return json;\n  }\n\n  var encodeScale = json.UTF8Scale;\n\n  if (encodeScale == null) {\n    encodeScale = 1024;\n  }\n\n  var features = json.features;\n\n  for (var f = 0; f < features.length; f++) {\n    var feature = features[f];\n    var geometry = feature.geometry;\n    var coordinates = geometry.coordinates;\n    var encodeOffsets = geometry.encodeOffsets;\n\n    for (var c = 0; c < coordinates.length; c++) {\n      var coordinate = coordinates[c];\n\n      if (geometry.type === 'Polygon') {\n        coordinates[c] = decodePolygon(coordinate, encodeOffsets[c], encodeScale);\n      } else if (geometry.type === 'MultiPolygon') {\n        for (var c2 = 0; c2 < coordinate.length; c2++) {\n          var polygon = coordinate[c2];\n          coordinate[c2] = decodePolygon(polygon, encodeOffsets[c][c2], encodeScale);\n        }\n      }\n    }\n  } // Has been decoded\n\n\n  json.UTF8Encoding = false;\n  return json;\n}\n\nfunction decodePolygon(coordinate, encodeOffsets, encodeScale) {\n  var result = [];\n  var prevX = encodeOffsets[0];\n  var prevY = encodeOffsets[1];\n\n  for (var i = 0; i < coordinate.length; i += 2) {\n    var x = coordinate.charCodeAt(i) - 64;\n    var y = coordinate.charCodeAt(i + 1) - 64; // ZigZag decoding\n\n    x = x >> 1 ^ -(x & 1);\n    y = y >> 1 ^ -(y & 1); // Delta deocding\n\n    x += prevX;\n    y += prevY;\n    prevX = x;\n    prevY = y; // Dequantize\n\n    result.push([x / encodeScale, y / encodeScale]);\n  }\n\n  return result;\n}\n/**\n * @alias module:echarts/coord/geo/parseGeoJson\n * @param {Object} geoJson\n * @return {module:zrender/container/Group}\n */\n\n\nfunction _default(geoJson) {\n  decode(geoJson);\n  return zrUtil.map(zrUtil.filter(geoJson.features, function (featureObj) {\n    // Output of mapshaper may have geometry null\n    return featureObj.geometry && featureObj.properties && featureObj.geometry.coordinates.length > 0;\n  }), function (featureObj) {\n    var properties = featureObj.properties;\n    var geo = featureObj.geometry;\n    var coordinates = geo.coordinates;\n    var geometries = [];\n\n    if (geo.type === 'Polygon') {\n      geometries.push({\n        type: 'polygon',\n        // According to the GeoJSON specification.\n        // First must be exterior, and the rest are all interior(holes).\n        exterior: coordinates[0],\n        interiors: coordinates.slice(1)\n      });\n    }\n\n    if (geo.type === 'MultiPolygon') {\n      zrUtil.each(coordinates, function (item) {\n        if (item[0]) {\n          geometries.push({\n            type: 'polygon',\n            exterior: item[0],\n            interiors: item.slice(1)\n          });\n        }\n      });\n    }\n\n    var region = new Region(properties.name, geometries, properties.cp);\n    region.properties = properties;\n    return region;\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/geo/parseGeoJson.js\n// module id = 1076\n// module chunks = 0 1 2","var BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar bbox = require(\"zrender/lib/core/bbox\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar polygonContain = require(\"zrender/lib/contain/polygon\");\n\n/**\n * @module echarts/coord/geo/Region\n */\n\n/**\n * @param {string} name\n * @param {Array} geometries\n * @param {Array.<number>} cp\n */\nfunction Region(name, geometries, cp) {\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  this.name = name;\n  /**\n   * @type {Array.<Array>}\n   * @readOnly\n   */\n\n  this.geometries = geometries;\n\n  if (!cp) {\n    var rect = this.getBoundingRect();\n    cp = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  } else {\n    cp = [cp[0], cp[1]];\n  }\n  /**\n   * @type {Array.<number>}\n   */\n\n\n  this.center = cp;\n}\n\nRegion.prototype = {\n  constructor: Region,\n  properties: null,\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    var rect = this._rect;\n\n    if (rect) {\n      return rect;\n    }\n\n    var MAX_NUMBER = Number.MAX_VALUE;\n    var min = [MAX_NUMBER, MAX_NUMBER];\n    var max = [-MAX_NUMBER, -MAX_NUMBER];\n    var min2 = [];\n    var max2 = [];\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      } // Doesn't consider hole\n\n\n      var exterior = geometries[i].exterior;\n      bbox.fromPoints(exterior, min2, max2);\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return this._rect = new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * @param {<Array.<number>} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var rect = this.getBoundingRect();\n    var geometries = this.geometries;\n\n    if (!rect.contain(coord[0], coord[1])) {\n      return false;\n    }\n\n    loopGeo: for (var i = 0, len = geometries.length; i < len; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      if (polygonContain.contain(exterior, coord[0], coord[1])) {\n        // Not in the region if point is in the hole.\n        for (var k = 0; k < (interiors ? interiors.length : 0); k++) {\n          if (polygonContain.contain(interiors[k])) {\n            continue loopGeo;\n          }\n        }\n\n        return true;\n      }\n    }\n\n    return false;\n  },\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var aspect = rect.width / rect.height;\n\n    if (!width) {\n      width = aspect * height;\n    } else if (!height) {\n      height = width / aspect;\n    }\n\n    var target = new BoundingRect(x, y, width, height);\n    var transform = rect.calculateTransform(target);\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      for (var p = 0; p < exterior.length; p++) {\n        vec2.applyTransform(exterior[p], exterior[p], transform);\n      }\n\n      for (var h = 0; h < (interiors ? interiors.length : 0); h++) {\n        for (var p = 0; p < interiors[h].length; p++) {\n          vec2.applyTransform(interiors[h][p], interiors[h][p], transform);\n        }\n      }\n    }\n\n    rect = this._rect;\n    rect.copy(target); // Update center\n\n    this.center = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n};\nvar _default = Region;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/geo/Region.js\n// module id = 1077\n// module chunks = 0 1 2","var windingLine = require(\"./windingLine\");\n\nvar EPSILON = 1e-8;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n}\n\nfunction contain(points, x, y) {\n  var w = 0;\n  var p = points[0];\n\n  if (!p) {\n    return false;\n  }\n\n  for (var i = 1; i < points.length; i++) {\n    var p2 = points[i];\n    w += windingLine(p[0], p[1], p2[0], p2[1], x, y);\n    p = p2;\n  } // Close polygon\n\n\n  var p0 = points[0];\n\n  if (!isAroundEqual(p[0], p0[0]) || !isAroundEqual(p[1], p0[1])) {\n    w += windingLine(p[0], p[1], p0[0], p0[1], x, y);\n  }\n\n  return w !== 0;\n}\n\nexports.contain = contain;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/contain/polygon.js\n// module id = 1078\n// module chunks = 0 1 2","var echarts = require(\"../echarts\");\n\nrequire(\"./axisPointer\");\n\nrequire(\"./tooltip/TooltipModel\");\n\nrequire(\"./tooltip/TooltipView\");\n\n// FIXME Better way to pack data in graphic element\n\n/**\n * @action\n * @property {string} type\n * @property {number} seriesIndex\n * @property {number} dataIndex\n * @property {number} [x]\n * @property {number} [y]\n */\necharts.registerAction({\n  type: 'showTip',\n  event: 'showTip',\n  update: 'tooltip:manuallyShowTip'\n}, // noop\nfunction () {});\necharts.registerAction({\n  type: 'hideTip',\n  event: 'hideTip',\n  update: 'tooltip:manuallyHideTip'\n}, // noop\nfunction () {});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/tooltip.js\n// module id = 1079\n// module chunks = 0 1 2","var echarts = require(\"../echarts\");\n\nrequire(\"./legend/LegendModel\");\n\nrequire(\"./legend/legendAction\");\n\nrequire(\"./legend/LegendView\");\n\nvar legendFilter = require(\"./legend/legendFilter\");\n\nvar Component = require(\"../model/Component\");\n\n// Do not contain scrollable legend, for sake of file size.\n// Series Filter\necharts.registerProcessor(legendFilter);\nComponent.registerSubTypeDefaulter('legend', function () {\n  // Default 'plain' when no type specified.\n  return 'plain';\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend.js\n// module id = 1080\n// module chunks = 0 1 2","require(\"./toolbox/ToolboxModel\");\n\nrequire(\"./toolbox/ToolboxView\");\n\nrequire(\"./toolbox/feature/SaveAsImage\");\n\nrequire(\"./toolbox/feature/MagicType\");\n\nrequire(\"./toolbox/feature/DataView\");\n\nrequire(\"./toolbox/feature/DataZoom\");\n\nrequire(\"./toolbox/feature/Restore\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox.js\n// module id = 1082\n// module chunks = 0 1 2","var echarts = require(\"../../echarts\");\n\nvar ATTR = '\\0_ec_interaction_mutex';\n\nfunction take(zr, resourceKey, userKey) {\n  var store = getStore(zr);\n  store[resourceKey] = userKey;\n}\n\nfunction release(zr, resourceKey, userKey) {\n  var store = getStore(zr);\n  var uKey = store[resourceKey];\n\n  if (uKey === userKey) {\n    store[resourceKey] = null;\n  }\n}\n\nfunction isTaken(zr, resourceKey) {\n  return !!getStore(zr)[resourceKey];\n}\n\nfunction getStore(zr) {\n  return zr[ATTR] || (zr[ATTR] = {});\n}\n/**\n * payload: {\n *     type: 'takeGlobalCursor',\n *     key: 'dataZoomSelect', or 'brush', or ...,\n *         If no userKey, release global cursor.\n * }\n */\n\n\necharts.registerAction({\n  type: 'takeGlobalCursor',\n  event: 'globalCursorTaken',\n  update: 'update'\n}, function () {});\nexports.take = take;\nexports.release = release;\nexports.isTaken = isTaken;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/interactionMutex.js\n// module id = 1083\n// module chunks = 0 1 2","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar brushHelper = require(\"./brushHelper\");\n\nvar each = zrUtil.each;\nvar indexOf = zrUtil.indexOf;\nvar curry = zrUtil.curry;\nvar COORD_CONVERTS = ['dataToPoint', 'pointToData']; // FIXME\n// how to genarialize to more coordinate systems.\n\nvar INCLUDE_FINDER_MAIN_TYPES = ['grid', 'xAxis', 'yAxis', 'geo', 'graph', 'polar', 'radiusAxis', 'angleAxis', 'bmap'];\n/**\n * [option in constructor]:\n * {\n *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n * }\n *\n *\n * [targetInfo]:\n *\n * There can be multiple axes in a single targetInfo. Consider the case\n * of `grid` component, a targetInfo represents a grid which contains one or more\n * cartesian and one or more axes. And consider the case of parallel system,\n * which has multiple axes in a coordinate system.\n * Can be {\n *     panelId: ...,\n *     coordSys: <a representitive cartesian in grid (first cartesian by default)>,\n *     coordSyses: all cartesians.\n *     gridModel: <grid component>\n *     xAxes: correspond to coordSyses on index\n *     yAxes: correspond to coordSyses on index\n * }\n * or {\n *     panelId: ...,\n *     coordSys: <geo coord sys>\n *     coordSyses: [<geo coord sys>]\n *     geoModel: <geo component>\n * }\n *\n *\n * [panelOpt]:\n *\n * Make from targetInfo. Input to BrushController.\n * {\n *     panelId: ...,\n *     rect: ...\n * }\n *\n *\n * [area]:\n *\n * Generated by BrushController or user input.\n * {\n *     panelId: Used to locate coordInfo directly. If user inpput, no panelId.\n *     brushType: determine how to convert to/from coord('rect' or 'polygon' or 'lineX/Y').\n *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n *     range: pixel range.\n *     coordRange: representitive coord range (the first one of coordRanges).\n *     coordRanges: <Array> coord ranges, used in multiple cartesian in one grid.\n * }\n */\n\n/**\n * @param {Object} option contains Index/Id/Name of xAxis/yAxis/geo/grid\n *        Each can be {number|Array.<number>}. like: {xAxisIndex: [3, 4]}\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} [opt]\n * @param {Array.<string>} [opt.include] include coordinate system types.\n */\n\nfunction BrushTargetManager(option, ecModel, opt) {\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n  var targetInfoList = this._targetInfoList = [];\n  var info = {};\n  var foundCpts = parseFinder(ecModel, option);\n  each(targetInfoBuilders, function (builder, type) {\n    if (!opt || !opt.include || indexOf(opt.include, type) >= 0) {\n      builder(foundCpts, targetInfoList, info);\n    }\n  });\n}\n\nvar proto = BrushTargetManager.prototype;\n\nproto.setOutputRanges = function (areas, ecModel) {\n  this.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n    (area.coordRanges || (area.coordRanges = [])).push(coordRange); // area.coordRange is the first of area.coordRanges\n\n    if (!area.coordRange) {\n      area.coordRange = coordRange; // In 'category' axis, coord to pixel is not reversible, so we can not\n      // rebuild range by coordRange accrately, which may bring trouble when\n      // brushing only one item. So we use __rangeOffset to rebuilding range\n      // by coordRange. And this it only used in brush component so it is no\n      // need to be adapted to coordRanges.\n\n      var result = coordConvert[area.brushType](0, coordSys, coordRange);\n      area.__rangeOffset = {\n        offset: diffProcessor[area.brushType](result.values, area.range, [1, 1]),\n        xyMinMax: result.xyMinMax\n      };\n    }\n  });\n};\n\nproto.matchOutputRanges = function (areas, ecModel, cb) {\n  each(areas, function (area) {\n    var targetInfo = this.findTargetInfo(area, ecModel);\n\n    if (targetInfo && targetInfo !== true) {\n      zrUtil.each(targetInfo.coordSyses, function (coordSys) {\n        var result = coordConvert[area.brushType](1, coordSys, area.range);\n        cb(area, result.values, coordSys, ecModel);\n      });\n    }\n  }, this);\n};\n\nproto.setInputRanges = function (areas, ecModel) {\n  each(areas, function (area) {\n    var targetInfo = this.findTargetInfo(area, ecModel);\n    area.range = area.range || []; // convert coordRange to global range and set panelId.\n\n    if (targetInfo && targetInfo !== true) {\n      area.panelId = targetInfo.panelId; // (1) area.range shoule always be calculate from coordRange but does\n      // not keep its original value, for the sake of the dataZoom scenario,\n      // where area.coordRange remains unchanged but area.range may be changed.\n      // (2) Only support converting one coordRange to pixel range in brush\n      // component. So do not consider `coordRanges`.\n      // (3) About __rangeOffset, see comment above.\n\n      var result = coordConvert[area.brushType](0, targetInfo.coordSys, area.coordRange);\n      var rangeOffset = area.__rangeOffset;\n      area.range = rangeOffset ? diffProcessor[area.brushType](result.values, rangeOffset.offset, getScales(result.xyMinMax, rangeOffset.xyMinMax)) : result.values;\n    }\n  }, this);\n};\n\nproto.makePanelOpts = function (api, getDefaultBrushType) {\n  return zrUtil.map(this._targetInfoList, function (targetInfo) {\n    var rect = targetInfo.getPanelRect();\n    return {\n      panelId: targetInfo.panelId,\n      defaultBrushType: getDefaultBrushType && getDefaultBrushType(targetInfo),\n      clipPath: brushHelper.makeRectPanelClipPath(rect),\n      isTargetByCursor: brushHelper.makeRectIsTargetByCursor(rect, api, targetInfo.coordSysModel),\n      getLinearBrushOtherExtent: brushHelper.makeLinearBrushOtherExtent(rect)\n    };\n  });\n};\n\nproto.controlSeries = function (area, seriesModel, ecModel) {\n  // Check whether area is bound in coord, and series do not belong to that coord.\n  // If do not do this check, some brush (like lineX) will controll all axes.\n  var targetInfo = this.findTargetInfo(area, ecModel);\n  return targetInfo === true || targetInfo && indexOf(targetInfo.coordSyses, seriesModel.coordinateSystem) >= 0;\n};\n/**\n * If return Object, a coord found.\n * If reutrn true, global found.\n * Otherwise nothing found.\n *\n * @param {Object} area\n * @param {Array} targetInfoList\n * @return {Object|boolean}\n */\n\n\nproto.findTargetInfo = function (area, ecModel) {\n  var targetInfoList = this._targetInfoList;\n  var foundCpts = parseFinder(ecModel, area);\n\n  for (var i = 0; i < targetInfoList.length; i++) {\n    var targetInfo = targetInfoList[i];\n    var areaPanelId = area.panelId;\n\n    if (areaPanelId) {\n      if (targetInfo.panelId === areaPanelId) {\n        return targetInfo;\n      }\n    } else {\n      for (var i = 0; i < targetInfoMatchers.length; i++) {\n        if (targetInfoMatchers[i](foundCpts, targetInfo)) {\n          return targetInfo;\n        }\n      }\n    }\n  }\n\n  return true;\n};\n\nfunction formatMinMax(minMax) {\n  minMax[0] > minMax[1] && minMax.reverse();\n  return minMax;\n}\n\nfunction parseFinder(ecModel, option) {\n  return modelUtil.parseFinder(ecModel, option, {\n    includeMainTypes: INCLUDE_FINDER_MAIN_TYPES\n  });\n}\n\nvar targetInfoBuilders = {\n  grid: function (foundCpts, targetInfoList) {\n    var xAxisModels = foundCpts.xAxisModels;\n    var yAxisModels = foundCpts.yAxisModels;\n    var gridModels = foundCpts.gridModels; // Remove duplicated.\n\n    var gridModelMap = zrUtil.createHashMap();\n    var xAxesHas = {};\n    var yAxesHas = {};\n\n    if (!xAxisModels && !yAxisModels && !gridModels) {\n      return;\n    }\n\n    each(xAxisModels, function (axisModel) {\n      var gridModel = axisModel.axis.grid.model;\n      gridModelMap.set(gridModel.id, gridModel);\n      xAxesHas[gridModel.id] = true;\n    });\n    each(yAxisModels, function (axisModel) {\n      var gridModel = axisModel.axis.grid.model;\n      gridModelMap.set(gridModel.id, gridModel);\n      yAxesHas[gridModel.id] = true;\n    });\n    each(gridModels, function (gridModel) {\n      gridModelMap.set(gridModel.id, gridModel);\n      xAxesHas[gridModel.id] = true;\n      yAxesHas[gridModel.id] = true;\n    });\n    gridModelMap.each(function (gridModel) {\n      var grid = gridModel.coordinateSystem;\n      var cartesians = [];\n      each(grid.getCartesians(), function (cartesian, index) {\n        if (indexOf(xAxisModels, cartesian.getAxis('x').model) >= 0 || indexOf(yAxisModels, cartesian.getAxis('y').model) >= 0) {\n          cartesians.push(cartesian);\n        }\n      });\n      targetInfoList.push({\n        panelId: 'grid--' + gridModel.id,\n        gridModel: gridModel,\n        coordSysModel: gridModel,\n        // Use the first one as the representitive coordSys.\n        coordSys: cartesians[0],\n        coordSyses: cartesians,\n        getPanelRect: panelRectBuilder.grid,\n        xAxisDeclared: xAxesHas[gridModel.id],\n        yAxisDeclared: yAxesHas[gridModel.id]\n      });\n    });\n  },\n  geo: function (foundCpts, targetInfoList) {\n    each(foundCpts.geoModels, function (geoModel) {\n      var coordSys = geoModel.coordinateSystem;\n      targetInfoList.push({\n        panelId: 'geo--' + geoModel.id,\n        geoModel: geoModel,\n        coordSysModel: geoModel,\n        coordSys: coordSys,\n        coordSyses: [coordSys],\n        getPanelRect: panelRectBuilder.geo\n      });\n    });\n  }\n};\nvar targetInfoMatchers = [// grid\nfunction (foundCpts, targetInfo) {\n  var xAxisModel = foundCpts.xAxisModel;\n  var yAxisModel = foundCpts.yAxisModel;\n  var gridModel = foundCpts.gridModel;\n  !gridModel && xAxisModel && (gridModel = xAxisModel.axis.grid.model);\n  !gridModel && yAxisModel && (gridModel = yAxisModel.axis.grid.model);\n  return gridModel && gridModel === targetInfo.gridModel;\n}, // geo\nfunction (foundCpts, targetInfo) {\n  var geoModel = foundCpts.geoModel;\n  return geoModel && geoModel === targetInfo.geoModel;\n}];\nvar panelRectBuilder = {\n  grid: function () {\n    // grid is not Transformable.\n    return this.coordSys.grid.getRect().clone();\n  },\n  geo: function () {\n    var coordSys = this.coordSys;\n    var rect = coordSys.getBoundingRect().clone(); // geo roam and zoom transform\n\n    rect.applyTransform(graphic.getTransform(coordSys));\n    return rect;\n  }\n};\nvar coordConvert = {\n  lineX: curry(axisConvert, 0),\n  lineY: curry(axisConvert, 1),\n  rect: function (to, coordSys, rangeOrCoordRange) {\n    var xminymin = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][0], rangeOrCoordRange[1][0]]);\n    var xmaxymax = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][1], rangeOrCoordRange[1][1]]);\n    var values = [formatMinMax([xminymin[0], xmaxymax[0]]), formatMinMax([xminymin[1], xmaxymax[1]])];\n    return {\n      values: values,\n      xyMinMax: values\n    };\n  },\n  polygon: function (to, coordSys, rangeOrCoordRange) {\n    var xyMinMax = [[Infinity, -Infinity], [Infinity, -Infinity]];\n    var values = zrUtil.map(rangeOrCoordRange, function (item) {\n      var p = coordSys[COORD_CONVERTS[to]](item);\n      xyMinMax[0][0] = Math.min(xyMinMax[0][0], p[0]);\n      xyMinMax[1][0] = Math.min(xyMinMax[1][0], p[1]);\n      xyMinMax[0][1] = Math.max(xyMinMax[0][1], p[0]);\n      xyMinMax[1][1] = Math.max(xyMinMax[1][1], p[1]);\n      return p;\n    });\n    return {\n      values: values,\n      xyMinMax: xyMinMax\n    };\n  }\n};\n\nfunction axisConvert(axisNameIndex, to, coordSys, rangeOrCoordRange) {\n  var axis = coordSys.getAxis(['x', 'y'][axisNameIndex]);\n  var values = formatMinMax(zrUtil.map([0, 1], function (i) {\n    return to ? axis.coordToData(axis.toLocalCoord(rangeOrCoordRange[i])) : axis.toGlobalCoord(axis.dataToCoord(rangeOrCoordRange[i]));\n  }));\n  var xyMinMax = [];\n  xyMinMax[axisNameIndex] = values;\n  xyMinMax[1 - axisNameIndex] = [NaN, NaN];\n  return {\n    values: values,\n    xyMinMax: xyMinMax\n  };\n}\n\nvar diffProcessor = {\n  lineX: curry(axisDiffProcessor, 0),\n  lineY: curry(axisDiffProcessor, 1),\n  rect: function (values, refer, scales) {\n    return [[values[0][0] - scales[0] * refer[0][0], values[0][1] - scales[0] * refer[0][1]], [values[1][0] - scales[1] * refer[1][0], values[1][1] - scales[1] * refer[1][1]]];\n  },\n  polygon: function (values, refer, scales) {\n    return zrUtil.map(values, function (item, idx) {\n      return [item[0] - scales[0] * refer[idx][0], item[1] - scales[1] * refer[idx][1]];\n    });\n  }\n};\n\nfunction axisDiffProcessor(axisNameIndex, values, refer, scales) {\n  return [values[0] - scales[axisNameIndex] * refer[0], values[1] - scales[axisNameIndex] * refer[1]];\n} // We have to process scale caused by dataZoom manually,\n// although it might be not accurate.\n\n\nfunction getScales(xyMinMaxCurr, xyMinMaxOrigin) {\n  var sizeCurr = getSize(xyMinMaxCurr);\n  var sizeOrigin = getSize(xyMinMaxOrigin);\n  var scales = [sizeCurr[0] / sizeOrigin[0], sizeCurr[1] / sizeOrigin[1]];\n  isNaN(scales[0]) && (scales[0] = 1);\n  isNaN(scales[1]) && (scales[1] = 1);\n  return scales;\n}\n\nfunction getSize(xyMinMax) {\n  return xyMinMax ? [xyMinMax[0][1] - xyMinMax[0][0], xyMinMax[1][1] - xyMinMax[1][0]] : [NaN, NaN];\n}\n\nvar _default = BrushTargetManager;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/BrushTargetManager.js\n// module id = 1084\n// module chunks = 0 1 2","var BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _cursorHelper = require(\"./cursorHelper\");\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar graphicUtil = require(\"../../util/graphic\");\n\nfunction makeRectPanelClipPath(rect) {\n  rect = normalizeRect(rect);\n  return function (localPoints, transform) {\n    return graphicUtil.clipPointsByRect(localPoints, rect);\n  };\n}\n\nfunction makeLinearBrushOtherExtent(rect, specifiedXYIndex) {\n  rect = normalizeRect(rect);\n  return function (xyIndex) {\n    var idx = specifiedXYIndex != null ? specifiedXYIndex : xyIndex;\n    var brushWidth = idx ? rect.width : rect.height;\n    var base = idx ? rect.x : rect.y;\n    return [base, base + (brushWidth || 0)];\n  };\n}\n\nfunction makeRectIsTargetByCursor(rect, api, targetModel) {\n  rect = normalizeRect(rect);\n  return function (e, localCursorPoint, transform) {\n    return rect.contain(localCursorPoint[0], localCursorPoint[1]) && !onIrrelevantElement(e, api, targetModel);\n  };\n} // Consider width/height is negative.\n\n\nfunction normalizeRect(rect) {\n  return BoundingRect.create(rect);\n}\n\nexports.makeRectPanelClipPath = makeRectPanelClipPath;\nexports.makeLinearBrushOtherExtent = makeLinearBrushOtherExtent;\nexports.makeRectIsTargetByCursor = makeRectIsTargetByCursor;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/brushHelper.js\n// module id = 1085\n// module chunks = 0 1 2","var Component = require(\"../../model/Component\");\n\nComponent.registerSubTypeDefaulter('dataZoom', function () {\n  // Default 'slider' when no type specified.\n  return 'slider';\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/typeDefaulter.js\n// module id = 1086\n// module chunks = 0 1 2","var echarts = require(\"../../echarts\");\n\necharts.registerProcessor(function (ecModel, api) {\n  ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n    // We calculate window and reset axis here but not in model\n    // init stage and not after action dispatch handler, because\n    // reset should be called after seriesData.restoreData.\n    dataZoomModel.eachTargetAxis(resetSingleAxis); // Caution: data zoom filtering is order sensitive when using\n    // percent range and no min/max/scale set on axis.\n    // For example, we have dataZoom definition:\n    // [\n    //      {xAxisIndex: 0, start: 30, end: 70},\n    //      {yAxisIndex: 0, start: 20, end: 80}\n    // ]\n    // In this case, [20, 80] of y-dataZoom should be based on data\n    // that have filtered by x-dataZoom using range of [30, 70],\n    // but should not be based on full raw data. Thus sliding\n    // x-dataZoom will change both ranges of xAxis and yAxis,\n    // while sliding y-dataZoom will only change the range of yAxis.\n    // So we should filter x-axis after reset x-axis immediately,\n    // and then reset y-axis and filter y-axis.\n\n    dataZoomModel.eachTargetAxis(filterSingleAxis);\n  });\n  ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n    // Fullfill all of the range props so that user\n    // is able to get them from chart.getOption().\n    var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n    var percentRange = axisProxy.getDataPercentWindow();\n    var valueRange = axisProxy.getDataValueWindow();\n    dataZoomModel.setRawRange({\n      start: percentRange[0],\n      end: percentRange[1],\n      startValue: valueRange[0],\n      endValue: valueRange[1]\n    }, true);\n  });\n});\n\nfunction resetSingleAxis(dimNames, axisIndex, dataZoomModel) {\n  dataZoomModel.getAxisProxy(dimNames.name, axisIndex).reset(dataZoomModel);\n}\n\nfunction filterSingleAxis(dimNames, axisIndex, dataZoomModel) {\n  dataZoomModel.getAxisProxy(dimNames.name, axisIndex).filterData(dataZoomModel);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/dataZoomProcessor.js\n// module id = 1087\n// module chunks = 0 1 2","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar helper = require(\"./helper\");\n\necharts.registerAction('dataZoom', function (payload, ecModel) {\n  var linkedNodesFinder = helper.createLinkedNodesFinder(zrUtil.bind(ecModel.eachComponent, ecModel, 'dataZoom'), helper.eachAxisDim, function (model, dimNames) {\n    return model.get(dimNames.axisIndex);\n  });\n  var effectedModels = [];\n  ecModel.eachComponent({\n    mainType: 'dataZoom',\n    query: payload\n  }, function (model, index) {\n    effectedModels.push.apply(effectedModels, linkedNodesFinder(model).nodes);\n  });\n  zrUtil.each(effectedModels, function (dataZoomModel, index) {\n    dataZoomModel.setRawRange({\n      start: payload.start,\n      end: payload.end,\n      startValue: payload.startValue,\n      endValue: payload.endValue\n    });\n  });\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/dataZoomAction.js\n// module id = 1088\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisDefault = require(\"./axisDefault\");\n\nvar ComponentModel = require(\"../model/Component\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n// FIXME axisType is fixed ?\nvar AXIS_TYPES = ['value', 'category', 'time', 'log'];\n/**\n * Generate sub axis model class\n * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n * @param {module:echarts/model/Component} BaseAxisModelClass\n * @param {Function} axisTypeDefaulter\n * @param {Object} [extraDefaultOption]\n */\n\nfunction _default(axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n  zrUtil.each(AXIS_TYPES, function (axisType) {\n    BaseAxisModelClass.extend({\n      type: axisName + 'Axis.' + axisType,\n      mergeDefaultAndTheme: function (option, ecModel) {\n        var layoutMode = this.layoutMode;\n        var inputPositionParams = layoutMode ? getLayoutParams(option) : {};\n        var themeModel = ecModel.getTheme();\n        zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n        zrUtil.merge(option, this.getDefaultOption());\n        option.type = axisTypeDefaulter(axisName, option);\n\n        if (layoutMode) {\n          mergeLayoutParam(option, inputPositionParams, layoutMode);\n        }\n      },\n      defaultOption: zrUtil.mergeAll([{}, axisDefault[axisType + 'Axis'], extraDefaultOption], true)\n    });\n  });\n  ComponentModel.registerSubTypeDefaulter(axisName + 'Axis', zrUtil.curry(axisTypeDefaulter, axisName));\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/axisModelCreator.js\n// module id = 1089\n// module chunks = 0 1","var util = require(\"./core/util\");\n\nvar vec2 = require(\"./core/vector\");\n\nvar Draggable = require(\"./mixin/Draggable\");\n\nvar Eventful = require(\"./mixin/Eventful\");\n\n/**\n * Handler\n * @module zrender/Handler\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (shenyi.914@gmail.com)\n */\nvar SILENT = 'silent';\n\nfunction makeEventPacket(eveType, targetInfo, event) {\n  return {\n    type: eveType,\n    event: event,\n    // target can only be an element that is not silent.\n    target: targetInfo.target,\n    // topTarget can be a silent element.\n    topTarget: targetInfo.topTarget,\n    cancelBubble: false,\n    offsetX: event.zrX,\n    offsetY: event.zrY,\n    gestureEvent: event.gestureEvent,\n    pinchX: event.pinchX,\n    pinchY: event.pinchY,\n    pinchScale: event.pinchScale,\n    wheelDelta: event.zrDelta,\n    zrByTouch: event.zrByTouch,\n    which: event.which\n  };\n}\n\nfunction EmptyProxy() {}\n\nEmptyProxy.prototype.dispose = function () {};\n\nvar handlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\n/**\n * @alias module:zrender/Handler\n * @constructor\n * @extends module:zrender/mixin/Eventful\n * @param {module:zrender/Storage} storage Storage instance.\n * @param {module:zrender/Painter} painter Painter instance.\n * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n */\n\nvar Handler = function (storage, painter, proxy, painterRoot) {\n  Eventful.call(this);\n  this.storage = storage;\n  this.painter = painter;\n  this.painterRoot = painterRoot;\n  proxy = proxy || new EmptyProxy();\n  /**\n   * Proxy of event. can be Dom, WebGLSurface, etc.\n   */\n\n  this.proxy = proxy; // Attach handler\n\n  proxy.handler = this;\n  /**\n   * {target, topTarget, x, y}\n   * @private\n   * @type {Object}\n   */\n\n  this._hovered = {};\n  /**\n   * @private\n   * @type {Date}\n   */\n\n  this._lastTouchMoment;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastX;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastY;\n  Draggable.call(this);\n  util.each(handlerNames, function (name) {\n    proxy.on && proxy.on(name, this[name], this);\n  }, this);\n};\n\nHandler.prototype = {\n  constructor: Handler,\n  mousemove: function (event) {\n    var x = event.zrX;\n    var y = event.zrY;\n    var lastHovered = this._hovered;\n    var lastHoveredTarget = lastHovered.target; // If lastHoveredTarget is removed from zr (detected by '__zr') by some API call\n    // (like 'setOption' or 'dispatchAction') in event handlers, we should find\n    // lastHovered again here. Otherwise 'mouseout' can not be triggered normally.\n    // See #6198.\n\n    if (lastHoveredTarget && !lastHoveredTarget.__zr) {\n      lastHovered = this.findHover(lastHovered.x, lastHovered.y);\n      lastHoveredTarget = lastHovered.target;\n    }\n\n    var hovered = this._hovered = this.findHover(x, y);\n    var hoveredTarget = hovered.target;\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default'); // Mouse out on previous hovered element\n\n    if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(lastHovered, 'mouseout', event);\n    } // Mouse moving on one element\n\n\n    this.dispatchToElement(hovered, 'mousemove', event); // Mouse over on a new element\n\n    if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(hovered, 'mouseover', event);\n    }\n  },\n  mouseout: function (event) {\n    this.dispatchToElement(this._hovered, 'mouseout', event); // There might be some doms created by upper layer application\n    // at the same level of painter.getViewportRoot() (e.g., tooltip\n    // dom created by echarts), where 'globalout' event should not\n    // be triggered when mouse enters these doms. (But 'mouseout'\n    // should be triggered at the original hovered element as usual).\n\n    var element = event.toElement || event.relatedTarget;\n    var innerDom;\n\n    do {\n      element = element && element.parentNode;\n    } while (element && element.nodeType != 9 && !(innerDom = element === this.painterRoot));\n\n    !innerDom && this.trigger('globalout', {\n      event: event\n    });\n  },\n\n  /**\n   * Resize\n   */\n  resize: function (event) {\n    this._hovered = {};\n  },\n\n  /**\n   * Dispatch event\n   * @param {string} eventName\n   * @param {event=} eventArgs\n   */\n  dispatch: function (eventName, eventArgs) {\n    var handler = this[eventName];\n    handler && handler.call(this, eventArgs);\n  },\n\n  /**\n   * Dispose\n   */\n  dispose: function () {\n    this.proxy.dispose();\n    this.storage = this.proxy = this.painter = null;\n  },\n\n  /**\n   * 设置默认的cursor style\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(cursorStyle);\n  },\n\n  /**\n   * 事件分发代理\n   *\n   * @private\n   * @param {Object} targetInfo {target, topTarget} 目标图形元素\n   * @param {string} eventName 事件名称\n   * @param {Object} event 事件对象\n   */\n  dispatchToElement: function (targetInfo, eventName, event) {\n    targetInfo = targetInfo || {};\n    var el = targetInfo.target;\n\n    if (el && el.silent) {\n      return;\n    }\n\n    var eventHandler = 'on' + eventName;\n    var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n    while (el) {\n      el[eventHandler] && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n      el.trigger(eventName, eventPacket);\n      el = el.parent;\n\n      if (eventPacket.cancelBubble) {\n        break;\n      }\n    }\n\n    if (!eventPacket.cancelBubble) {\n      // 冒泡到顶级 zrender 对象\n      this.trigger(eventName, eventPacket); // 分发事件到用户自定义层\n      // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n\n      this.painter && this.painter.eachOtherLayer(function (layer) {\n        if (typeof layer[eventHandler] == 'function') {\n          layer[eventHandler].call(layer, eventPacket);\n        }\n\n        if (layer.trigger) {\n          layer.trigger(eventName, eventPacket);\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   * @param {number} x\n   * @param {number} y\n   * @param {module:zrender/graphic/Displayable} exclude\n   * @return {model:zrender/Element}\n   * @method\n   */\n  findHover: function (x, y, exclude) {\n    var list = this.storage.getDisplayList();\n    var out = {\n      x: x,\n      y: y\n    };\n\n    for (var i = list.length - 1; i >= 0; i--) {\n      var hoverCheckResult;\n\n      if (list[i] !== exclude // getDisplayList may include ignored item in VML mode\n      && !list[i].ignore && (hoverCheckResult = isHover(list[i], x, y))) {\n        !out.topTarget && (out.topTarget = list[i]);\n\n        if (hoverCheckResult !== SILENT) {\n          out.target = list[i];\n          break;\n        }\n      }\n    }\n\n    return out;\n  }\n}; // Common handlers\n\nutil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  Handler.prototype[name] = function (event) {\n    // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n    var hovered = this.findHover(event.zrX, event.zrY);\n    var hoveredTarget = hovered.target;\n\n    if (name === 'mousedown') {\n      this._downEl = hoveredTarget;\n      this._downPoint = [event.zrX, event.zrY]; // In case click triggered before mouseup\n\n      this._upEl = hoveredTarget;\n    } else if (name === 'mosueup') {\n      this._upEl = hoveredTarget;\n    } else if (name === 'click') {\n      if (this._downEl !== this._upEl // Original click event is triggered on the whole canvas element,\n      // including the case that `mousedown` - `mousemove` - `mouseup`,\n      // which should be filtered, otherwise it will bring trouble to\n      // pan and zoom.\n      || !this._downPoint // Arbitrary value\n      || vec2.dist(this._downPoint, [event.zrX, event.zrY]) > 4) {\n        return;\n      }\n\n      this._downPoint = null;\n    }\n\n    this.dispatchToElement(hovered, name, event);\n  };\n});\n\nfunction isHover(displayable, x, y) {\n  if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n    var el = displayable;\n    var isSilent;\n\n    while (el) {\n      // If clipped by ancestor.\n      // FIXME: If clipPath has neither stroke nor fill,\n      // el.clipPath.contain(x, y) will always return false.\n      if (el.clipPath && !el.clipPath.contain(x, y)) {\n        return false;\n      }\n\n      if (el.silent) {\n        isSilent = true;\n      }\n\n      el = el.parent;\n    }\n\n    return isSilent ? SILENT : true;\n  }\n\n  return false;\n}\n\nutil.mixin(Handler, Eventful);\nutil.mixin(Handler, Draggable);\nvar _default = Handler;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/Handler.js\n// module id = 1090\n// module chunks = 0 1 2","// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\nfunction Draggable() {\n  this.on('mousedown', this._dragStart, this);\n  this.on('mousemove', this._drag, this);\n  this.on('mouseup', this._dragEnd, this);\n  this.on('globalout', this._dragEnd, this); // this._dropTarget = null;\n  // this._draggingTarget = null;\n  // this._x = 0;\n  // this._y = 0;\n}\n\nDraggable.prototype = {\n  constructor: Draggable,\n  _dragStart: function (e) {\n    var draggingTarget = e.target;\n\n    if (draggingTarget && draggingTarget.draggable) {\n      this._draggingTarget = draggingTarget;\n      draggingTarget.dragging = true;\n      this._x = e.offsetX;\n      this._y = e.offsetY;\n      this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n    }\n  },\n  _drag: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      var x = e.offsetX;\n      var y = e.offsetY;\n      var dx = x - this._x;\n      var dy = y - this._y;\n      this._x = x;\n      this._y = y;\n      draggingTarget.drift(dx, dy, e);\n      this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n      var dropTarget = this.findHover(x, y, draggingTarget).target;\n      var lastDropTarget = this._dropTarget;\n      this._dropTarget = dropTarget;\n\n      if (draggingTarget !== dropTarget) {\n        if (lastDropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n        }\n\n        if (dropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n        }\n      }\n    }\n  },\n  _dragEnd: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      draggingTarget.dragging = false;\n    }\n\n    this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n    if (this._dropTarget) {\n      this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n    }\n\n    this._draggingTarget = null;\n    this._dropTarget = null;\n  }\n};\n\nfunction param(target, e) {\n  return {\n    target: target,\n    topTarget: e && e.topTarget\n  };\n}\n\nvar _default = Draggable;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/mixin/Draggable.js\n// module id = 1091\n// module chunks = 0 1 2","var util = require(\"./core/util\");\n\nvar env = require(\"./core/env\");\n\nvar Group = require(\"./container/Group\");\n\nvar timsort = require(\"./core/timsort\");\n\n/**\n * Storage内容仓库模块\n * @module zrender/Storage\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @author errorrik (errorrik@gmail.com)\n * @author pissang (https://github.com/pissang/)\n */\n// Use timsort because in most case elements are partially sorted\n// https://jsfiddle.net/pissang/jr4x7mdm/8/\nfunction shapeCompareFunc(a, b) {\n  if (a.zlevel === b.zlevel) {\n    if (a.z === b.z) {\n      // if (a.z2 === b.z2) {\n      //     // FIXME Slow has renderidx compare\n      //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n      //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n      //     return a.__renderidx - b.__renderidx;\n      // }\n      return a.z2 - b.z2;\n    }\n\n    return a.z - b.z;\n  }\n\n  return a.zlevel - b.zlevel;\n}\n/**\n * 内容仓库 (M)\n * @alias module:zrender/Storage\n * @constructor\n */\n\n\nvar Storage = function () {\n  // jshint ignore:line\n  this._roots = [];\n  this._displayList = [];\n  this._displayListLen = 0;\n};\n\nStorage.prototype = {\n  constructor: Storage,\n\n  /**\n   * @param  {Function} cb\n   *\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._roots.length; i++) {\n      this._roots[i].traverse(cb, context);\n    }\n  },\n\n  /**\n   * 返回所有图形的绘制队列\n   * @param {boolean} [update=false] 是否在返回前更新该数组\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n   *\n   * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n   * @return {Array.<module:zrender/graphic/Displayable>}\n   */\n  getDisplayList: function (update, includeIgnore) {\n    includeIgnore = includeIgnore || false;\n\n    if (update) {\n      this.updateDisplayList(includeIgnore);\n    }\n\n    return this._displayList;\n  },\n\n  /**\n   * 更新图形的绘制队列。\n   * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n   * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n   */\n  updateDisplayList: function (includeIgnore) {\n    this._displayListLen = 0;\n    var roots = this._roots;\n    var displayList = this._displayList;\n\n    for (var i = 0, len = roots.length; i < len; i++) {\n      this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n    }\n\n    displayList.length = this._displayListLen; // for (var i = 0, len = displayList.length; i < len; i++) {\n    //     displayList[i].__renderidx = i;\n    // }\n    // displayList.sort(shapeCompareFunc);\n\n    env.canvasSupported && timsort(displayList, shapeCompareFunc);\n  },\n  _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n    if (el.ignore && !includeIgnore) {\n      return;\n    }\n\n    el.beforeUpdate();\n\n    if (el.__dirty) {\n      el.update();\n    }\n\n    el.afterUpdate();\n    var userSetClipPath = el.clipPath;\n\n    if (userSetClipPath) {\n      // FIXME 效率影响\n      if (clipPaths) {\n        clipPaths = clipPaths.slice();\n      } else {\n        clipPaths = [];\n      }\n\n      var currentClipPath = userSetClipPath;\n      var parentClipPath = el; // Recursively add clip path\n\n      while (currentClipPath) {\n        // clipPath 的变换是基于使用这个 clipPath 的元素\n        currentClipPath.parent = parentClipPath;\n        currentClipPath.updateTransform();\n        clipPaths.push(currentClipPath);\n        parentClipPath = currentClipPath;\n        currentClipPath = currentClipPath.clipPath;\n      }\n    }\n\n    if (el.isGroup) {\n      var children = el._children;\n\n      for (var i = 0; i < children.length; i++) {\n        var child = children[i]; // Force to mark as dirty if group is dirty\n        // FIXME __dirtyPath ?\n\n        if (el.__dirty) {\n          child.__dirty = true;\n        }\n\n        this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n      } // Mark group clean here\n\n\n      el.__dirty = false;\n    } else {\n      el.__clipPaths = clipPaths;\n      this._displayList[this._displayListLen++] = el;\n    }\n  },\n\n  /**\n   * 添加图形(Shape)或者组(Group)到根节点\n   * @param {module:zrender/Element} el\n   */\n  addRoot: function (el) {\n    if (el.__storage === this) {\n      return;\n    }\n\n    if (el instanceof Group) {\n      el.addChildrenToStorage(this);\n    }\n\n    this.addToStorage(el);\n\n    this._roots.push(el);\n  },\n\n  /**\n   * 删除指定的图形(Shape)或者组(Group)\n   * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n   */\n  delRoot: function (el) {\n    if (el == null) {\n      // 不指定el清空\n      for (var i = 0; i < this._roots.length; i++) {\n        var root = this._roots[i];\n\n        if (root instanceof Group) {\n          root.delChildrenFromStorage(this);\n        }\n      }\n\n      this._roots = [];\n      this._displayList = [];\n      this._displayListLen = 0;\n      return;\n    }\n\n    if (el instanceof Array) {\n      for (var i = 0, l = el.length; i < l; i++) {\n        this.delRoot(el[i]);\n      }\n\n      return;\n    }\n\n    var idx = util.indexOf(this._roots, el);\n\n    if (idx >= 0) {\n      this.delFromStorage(el);\n\n      this._roots.splice(idx, 1);\n\n      if (el instanceof Group) {\n        el.delChildrenFromStorage(this);\n      }\n    }\n  },\n  addToStorage: function (el) {\n    el.__storage = this;\n    el.dirty(false);\n    return this;\n  },\n  delFromStorage: function (el) {\n    if (el) {\n      el.__storage = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * 清空并且释放Storage\n   */\n  dispose: function () {\n    this._renderList = this._roots = null;\n  },\n  displayableSortFunc: shapeCompareFunc\n};\nvar _default = Storage;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/Storage.js\n// module id = 1092\n// module chunks = 0 1 2","var Animator = require(\"../animation/Animator\");\n\nvar log = require(\"../core/log\");\n\nvar _util = require(\"../core/util\");\n\nvar isString = _util.isString;\nvar isFunction = _util.isFunction;\nvar isObject = _util.isObject;\nvar isArrayLike = _util.isArrayLike;\nvar indexOf = _util.indexOf;\n\n/**\n * @alias modue:zrender/mixin/Animatable\n * @constructor\n */\nvar Animatable = function () {\n  /**\n   * @type {Array.<module:zrender/animation/Animator>}\n   * @readOnly\n   */\n  this.animators = [];\n};\n\nAnimatable.prototype = {\n  constructor: Animatable,\n\n  /**\n   * 动画\n   *\n   * @param {string} path The path to fetch value from object, like 'a.b.c'.\n   * @param {boolean} [loop] Whether to loop animation.\n   * @return {module:zrender/animation/Animator}\n   * @example:\n   *     el.animate('style', false)\n   *         .when(1000, {x: 10} )\n   *         .done(function(){ // Animation done })\n   *         .start()\n   */\n  animate: function (path, loop) {\n    var target;\n    var animatingShape = false;\n    var el = this;\n    var zr = this.__zr;\n\n    if (path) {\n      var pathSplitted = path.split('.');\n      var prop = el; // If animating shape\n\n      animatingShape = pathSplitted[0] === 'shape';\n\n      for (var i = 0, l = pathSplitted.length; i < l; i++) {\n        if (!prop) {\n          continue;\n        }\n\n        prop = prop[pathSplitted[i]];\n      }\n\n      if (prop) {\n        target = prop;\n      }\n    } else {\n      target = el;\n    }\n\n    if (!target) {\n      log('Property \"' + path + '\" is not existed in element ' + el.id);\n      return;\n    }\n\n    var animators = el.animators;\n    var animator = new Animator(target, loop);\n    animator.during(function (target) {\n      el.dirty(animatingShape);\n    }).done(function () {\n      // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n      animators.splice(indexOf(animators, animator), 1);\n    });\n    animators.push(animator); // If animate after added to the zrender\n\n    if (zr) {\n      zr.animation.addAnimator(animator);\n    }\n\n    return animator;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stopAnimation: function (forwardToLast) {\n    var animators = this.animators;\n    var len = animators.length;\n\n    for (var i = 0; i < len; i++) {\n      animators[i].stop(forwardToLast);\n    }\n\n    animators.length = 0;\n    return this;\n  },\n\n  /**\n   * Caution: this method will stop previous animation.\n   * So do not use this method to one element twice before\n   * animation starts, unless you know what you are doing.\n   * @param {Object} target\n   * @param {number} [time=500] Time in ms\n   * @param {string} [easing='linear']\n   * @param {number} [delay=0]\n   * @param {Function} [callback]\n   * @param {Function} [forceAnimate] Prevent stop animation and callback\n   *        immediently when target values are the same as current values.\n   *\n   * @example\n   *  // Animate position\n   *  el.animateTo({\n   *      position: [10, 10]\n   *  }, function () { // done })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n   *  el.animateTo({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100, 'cubicOut', function () { // done })\n   */\n  // TODO Return animation key\n  animateTo: function (target, time, delay, easing, callback, forceAnimate) {\n    // animateTo(target, time, easing, callback);\n    if (isString(delay)) {\n      callback = easing;\n      easing = delay;\n      delay = 0;\n    } // animateTo(target, time, delay, callback);\n    else if (isFunction(easing)) {\n        callback = easing;\n        easing = 'linear';\n        delay = 0;\n      } // animateTo(target, time, callback);\n      else if (isFunction(delay)) {\n          callback = delay;\n          delay = 0;\n        } // animateTo(target, callback)\n        else if (isFunction(time)) {\n            callback = time;\n            time = 500;\n          } // animateTo(target)\n          else if (!time) {\n              time = 500;\n            } // Stop all previous animations\n\n\n    this.stopAnimation();\n\n    this._animateToShallow('', this, target, time, delay); // Animators may be removed immediately after start\n    // if there is nothing to animate\n\n\n    var animators = this.animators.slice();\n    var count = animators.length;\n\n    function done() {\n      count--;\n\n      if (!count) {\n        callback && callback();\n      }\n    } // No animators. This should be checked before animators[i].start(),\n    // because 'done' may be executed immediately if no need to animate.\n\n\n    if (!count) {\n      callback && callback();\n    } // Start after all animators created\n    // Incase any animator is done immediately when all animation properties are not changed\n\n\n    for (var i = 0; i < animators.length; i++) {\n      animators[i].done(done).start(easing, forceAnimate);\n    }\n  },\n\n  /**\n   * @private\n   * @param {string} path=''\n   * @param {Object} source=this\n   * @param {Object} target\n   * @param {number} [time=500]\n   * @param {number} [delay=0]\n   *\n   * @example\n   *  // Animate position\n   *  el._animateToShallow({\n   *      position: [10, 10]\n   *  })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms\n   *  el._animateToShallow({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100)\n   */\n  _animateToShallow: function (path, source, target, time, delay) {\n    var objShallow = {};\n    var propertyCount = 0;\n\n    for (var name in target) {\n      if (!target.hasOwnProperty(name)) {\n        continue;\n      }\n\n      if (source[name] != null) {\n        if (isObject(target[name]) && !isArrayLike(target[name])) {\n          this._animateToShallow(path ? path + '.' + name : name, source[name], target[name], time, delay);\n        } else {\n          objShallow[name] = target[name];\n          propertyCount++;\n        }\n      } else if (target[name] != null) {\n        // Attr directly if not has property\n        // FIXME, if some property not needed for element ?\n        if (!path) {\n          this.attr(name, target[name]);\n        } else {\n          // Shape or style\n          var props = {};\n          props[path] = {};\n          props[path][name] = target[name];\n          this.attr(props);\n        }\n      }\n    }\n\n    if (propertyCount > 0) {\n      this.animate(path, false).when(time == null ? 500 : time, objShallow).delay(delay || 0);\n    }\n\n    return this;\n  }\n};\nvar _default = Animatable;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/mixin/Animatable.js\n// module id = 1093\n// module chunks = 0 1 2","var easingFuncs = require(\"./easing\");\n\n/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\nfunction Clip(options) {\n  this._target = options.target; // 生命周期\n\n  this._life = options.life || 1000; // 延时\n\n  this._delay = options.delay || 0; // 开始时间\n  // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n\n  this._initialized = false; // 是否循环\n\n  this.loop = options.loop == null ? false : options.loop;\n  this.gap = options.gap || 0;\n  this.easing = options.easing || 'Linear';\n  this.onframe = options.onframe;\n  this.ondestroy = options.ondestroy;\n  this.onrestart = options.onrestart;\n  this._pausedTime = 0;\n  this._paused = false;\n}\n\nClip.prototype = {\n  constructor: Clip,\n  step: function (globalTime, deltaTime) {\n    // Set startTime on first step, or _startTime may has milleseconds different between clips\n    // PENDING\n    if (!this._initialized) {\n      this._startTime = globalTime + this._delay;\n      this._initialized = true;\n    }\n\n    if (this._paused) {\n      this._pausedTime += deltaTime;\n      return;\n    }\n\n    var percent = (globalTime - this._startTime - this._pausedTime) / this._life; // 还没开始\n\n    if (percent < 0) {\n      return;\n    }\n\n    percent = Math.min(percent, 1);\n    var easing = this.easing;\n    var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n    var schedule = typeof easingFunc === 'function' ? easingFunc(percent) : percent;\n    this.fire('frame', schedule); // 结束\n\n    if (percent == 1) {\n      if (this.loop) {\n        this.restart(globalTime); // 重新开始周期\n        // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n\n        return 'restart';\n      } // 动画完成将这个控制器标识为待删除\n      // 在Animation.update中进行批量删除\n\n\n      this._needsRemove = true;\n      return 'destroy';\n    }\n\n    return null;\n  },\n  restart: function (globalTime) {\n    var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n    this._startTime = globalTime - remainder + this.gap;\n    this._pausedTime = 0;\n    this._needsRemove = false;\n  },\n  fire: function (eventType, arg) {\n    eventType = 'on' + eventType;\n\n    if (this[eventType]) {\n      this[eventType](this._target, arg);\n    }\n  },\n  pause: function () {\n    this._paused = true;\n  },\n  resume: function () {\n    this._paused = false;\n  }\n};\nvar _default = Clip;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/animation/Clip.js\n// module id = 1094\n// module chunks = 0 1 2","/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\nvar easing = {\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  linear: function (k) {\n    return k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticIn: function (k) {\n    return k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticOut: function (k) {\n    return k * (2 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k;\n    }\n\n    return -0.5 * (--k * (k - 2) - 1);\n  },\n  // 三次方的缓动（t^3）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicIn: function (k) {\n    return k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicOut: function (k) {\n    return --k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k + 2);\n  },\n  // 四次方的缓动（t^4）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticIn: function (k) {\n    return k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticOut: function (k) {\n    return 1 - --k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k;\n    }\n\n    return -0.5 * ((k -= 2) * k * k * k - 2);\n  },\n  // 五次方的缓动（t^5）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticIn: function (k) {\n    return k * k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticOut: function (k) {\n    return --k * k * k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k * k * k + 2);\n  },\n  // 正弦曲线的缓动（sin(t)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalIn: function (k) {\n    return 1 - Math.cos(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalOut: function (k) {\n    return Math.sin(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalInOut: function (k) {\n    return 0.5 * (1 - Math.cos(Math.PI * k));\n  },\n  // 指数曲线的缓动（2^t）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialIn: function (k) {\n    return k === 0 ? 0 : Math.pow(1024, k - 1);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialOut: function (k) {\n    return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialInOut: function (k) {\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if ((k *= 2) < 1) {\n      return 0.5 * Math.pow(1024, k - 1);\n    }\n\n    return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n  },\n  // 圆形曲线的缓动（sqrt(1-t^2)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularIn: function (k) {\n    return 1 - Math.sqrt(1 - k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularOut: function (k) {\n    return Math.sqrt(1 - --k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return -0.5 * (Math.sqrt(1 - k * k) - 1);\n    }\n\n    return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n  },\n  // 创建类似于弹簧在停止前来回振荡的动画\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticIn: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return -(a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return a * Math.pow(2, -10 * k) * Math.sin((k - s) * (2 * Math.PI) / p) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticInOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    if ((k *= 2) < 1) {\n      return -0.5 * (a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n    }\n\n    return a * Math.pow(2, -10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n  },\n  // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backIn: function (k) {\n    var s = 1.70158;\n    return k * k * ((s + 1) * k - s);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backOut: function (k) {\n    var s = 1.70158;\n    return --k * k * ((s + 1) * k + s) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backInOut: function (k) {\n    var s = 1.70158 * 1.525;\n\n    if ((k *= 2) < 1) {\n      return 0.5 * (k * k * ((s + 1) * k - s));\n    }\n\n    return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n  },\n  // 创建弹跳效果\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceIn: function (k) {\n    return 1 - easing.bounceOut(1 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceOut: function (k) {\n    if (k < 1 / 2.75) {\n      return 7.5625 * k * k;\n    } else if (k < 2 / 2.75) {\n      return 7.5625 * (k -= 1.5 / 2.75) * k + 0.75;\n    } else if (k < 2.5 / 2.75) {\n      return 7.5625 * (k -= 2.25 / 2.75) * k + 0.9375;\n    } else {\n      return 7.5625 * (k -= 2.625 / 2.75) * k + 0.984375;\n    }\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceInOut: function (k) {\n    if (k < 0.5) {\n      return easing.bounceIn(k * 2) * 0.5;\n    }\n\n    return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n  }\n};\nvar _default = easing;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/animation/easing.js\n// module id = 1095\n// module chunks = 0 1 2","var _config = require(\"./config\");\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar util = require(\"./core/util\");\n\nvar log = require(\"./core/log\");\n\nvar BoundingRect = require(\"./core/BoundingRect\");\n\nvar timsort = require(\"./core/timsort\");\n\nvar Layer = require(\"./Layer\");\n\nvar requestAnimationFrame = require(\"./animation/requestAnimationFrame\");\n\nvar Image = require(\"./graphic/Image\");\n\n/**\n * Default canvas painter\n * @module zrender/Painter\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n// PENDIGN\n// Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.\n//\n// Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.\nvar MAX_PROGRESSIVE_LAYER_NUMBER = 5;\n\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n\nfunction isLayerValid(layer) {\n  if (!layer) {\n    return false;\n  }\n\n  if (layer.__builtin__) {\n    return true;\n  }\n\n  if (typeof layer.resize !== 'function' || typeof layer.refresh !== 'function') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction preProcessLayer(layer) {\n  layer.__unusedCount++;\n}\n\nfunction postProcessLayer(layer) {\n  if (layer.__unusedCount == 1) {\n    layer.clear();\n  }\n}\n\nvar tmpRect = new BoundingRect(0, 0, 0, 0);\nvar viewRect = new BoundingRect(0, 0, 0, 0);\n\nfunction isDisplayableCulled(el, width, height) {\n  tmpRect.copy(el.getBoundingRect());\n\n  if (el.transform) {\n    tmpRect.applyTransform(el.transform);\n  }\n\n  viewRect.width = width;\n  viewRect.height = height;\n  return !tmpRect.intersect(viewRect);\n}\n\nfunction isClipPathChanged(clipPaths, prevClipPaths) {\n  if (clipPaths == prevClipPaths) {\n    // Can both be null or undefined\n    return false;\n  }\n\n  if (!clipPaths || !prevClipPaths || clipPaths.length !== prevClipPaths.length) {\n    return true;\n  }\n\n  for (var i = 0; i < clipPaths.length; i++) {\n    if (clipPaths[i] !== prevClipPaths[i]) {\n      return true;\n    }\n  }\n}\n\nfunction doClip(clipPaths, ctx) {\n  for (var i = 0; i < clipPaths.length; i++) {\n    var clipPath = clipPaths[i];\n    clipPath.setTransform(ctx);\n    ctx.beginPath();\n    clipPath.buildPath(ctx, clipPath.shape);\n    ctx.clip(); // Transform back\n\n    clipPath.restoreTransform(ctx);\n  }\n}\n\nfunction createRoot(width, height) {\n  var domRoot = document.createElement('div'); // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n  domRoot.style.cssText = ['position:relative', 'overflow:hidden', 'width:' + width + 'px', 'height:' + height + 'px', 'padding:0', 'margin:0', 'border-width:0'].join(';') + ';';\n  return domRoot;\n}\n/**\n * @alias module:zrender/Painter\n * @constructor\n * @param {HTMLElement} root 绘图容器\n * @param {module:zrender/Storage} storage\n * @param {Object} opts\n */\n\n\nvar Painter = function (root, storage, opts) {\n  this.type = 'canvas'; // In node environment using node-canvas\n\n  var singleCanvas = !root.nodeName // In node ?\n  || root.nodeName.toUpperCase() === 'CANVAS';\n  this._opts = opts = util.extend({}, opts || {});\n  /**\n   * @type {number}\n   */\n\n  this.dpr = opts.devicePixelRatio || devicePixelRatio;\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._singleCanvas = singleCanvas;\n  /**\n   * 绘图容器\n   * @type {HTMLElement}\n   */\n\n  this.root = root;\n  var rootStyle = root.style;\n\n  if (rootStyle) {\n    rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n    rootStyle['-webkit-user-select'] = rootStyle['user-select'] = rootStyle['-webkit-touch-callout'] = 'none';\n    root.innerHTML = '';\n  }\n  /**\n   * @type {module:zrender/Storage}\n   */\n\n\n  this.storage = storage;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  var zlevelList = this._zlevelList = [];\n  /**\n   * @type {Object.<string, module:zrender/Layer>}\n   * @private\n   */\n\n  var layers = this._layers = {};\n  /**\n   * @type {Object.<string, Object>}\n   * @type {private}\n   */\n\n  this._layerConfig = {};\n\n  if (!singleCanvas) {\n    this._width = this._getSize(0);\n    this._height = this._getSize(1);\n    var domRoot = this._domRoot = createRoot(this._width, this._height);\n    root.appendChild(domRoot);\n  } else {\n    if (opts.width != null) {\n      root.width = opts.width;\n    }\n\n    if (opts.height != null) {\n      root.height = opts.height;\n    } // Use canvas width and height directly\n\n\n    var width = root.width;\n    var height = root.height;\n    this._width = width;\n    this._height = height; // Create layer if only one given canvas\n    // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n\n    var mainLayer = new Layer(root, this, 1);\n    mainLayer.initContext(); // FIXME Use canvas width and height\n    // mainLayer.resize(width, height);\n\n    layers[0] = mainLayer;\n    zlevelList.push(0);\n    this._domRoot = root;\n  } // Layers for progressive rendering\n\n\n  this._progressiveLayers = [];\n  /**\n   * @type {module:zrender/Layer}\n   * @private\n   */\n\n  this._hoverlayer;\n  this._hoverElements = [];\n};\n\nPainter.prototype = {\n  constructor: Painter,\n  getType: function () {\n    return 'canvas';\n  },\n\n  /**\n   * If painter use a single canvas\n   * @return {boolean}\n   */\n  isSingleCanvas: function () {\n    return this._singleCanvas;\n  },\n\n  /**\n   * @return {HTMLDivElement}\n   */\n  getViewportRoot: function () {\n    return this._domRoot;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n\n  /**\n   * 刷新\n   * @param {boolean} [paintAll=false] 强制绘制所有displayable\n   */\n  refresh: function (paintAll) {\n    var list = this.storage.getDisplayList(true);\n    var zlevelList = this._zlevelList;\n\n    this._paintList(list, paintAll); // Paint custum layers\n\n\n    for (var i = 0; i < zlevelList.length; i++) {\n      var z = zlevelList[i];\n      var layer = this._layers[z];\n\n      if (!layer.__builtin__ && layer.refresh) {\n        layer.refresh();\n      }\n    }\n\n    this.refreshHover();\n\n    if (this._progressiveLayers.length) {\n      this._startProgessive();\n    }\n\n    return this;\n  },\n  addHover: function (el, hoverStyle) {\n    if (el.__hoverMir) {\n      return;\n    }\n\n    var elMirror = new el.constructor({\n      style: el.style,\n      shape: el.shape\n    });\n    elMirror.__from = el;\n    el.__hoverMir = elMirror;\n    elMirror.setStyle(hoverStyle);\n\n    this._hoverElements.push(elMirror);\n  },\n  removeHover: function (el) {\n    var elMirror = el.__hoverMir;\n    var hoverElements = this._hoverElements;\n    var idx = util.indexOf(hoverElements, elMirror);\n\n    if (idx >= 0) {\n      hoverElements.splice(idx, 1);\n    }\n\n    el.__hoverMir = null;\n  },\n  clearHover: function (el) {\n    var hoverElements = this._hoverElements;\n\n    for (var i = 0; i < hoverElements.length; i++) {\n      var from = hoverElements[i].__from;\n\n      if (from) {\n        from.__hoverMir = null;\n      }\n    }\n\n    hoverElements.length = 0;\n  },\n  refreshHover: function () {\n    var hoverElements = this._hoverElements;\n    var len = hoverElements.length;\n    var hoverLayer = this._hoverlayer;\n    hoverLayer && hoverLayer.clear();\n\n    if (!len) {\n      return;\n    }\n\n    timsort(hoverElements, this.storage.displayableSortFunc); // Use a extream large zlevel\n    // FIXME?\n\n    if (!hoverLayer) {\n      hoverLayer = this._hoverlayer = this.getLayer(1e5);\n    }\n\n    var scope = {};\n    hoverLayer.ctx.save();\n\n    for (var i = 0; i < len;) {\n      var el = hoverElements[i];\n      var originalEl = el.__from; // Original el is removed\n      // PENDING\n\n      if (!(originalEl && originalEl.__zr)) {\n        hoverElements.splice(i, 1);\n        originalEl.__hoverMir = null;\n        len--;\n        continue;\n      }\n\n      i++; // Use transform\n      // FIXME style and shape ?\n\n      if (!originalEl.invisible) {\n        el.transform = originalEl.transform;\n        el.invTransform = originalEl.invTransform;\n        el.__clipPaths = originalEl.__clipPaths; // el.\n\n        this._doPaintEl(el, hoverLayer, true, scope);\n      }\n    }\n\n    hoverLayer.ctx.restore();\n  },\n  _startProgessive: function () {\n    var self = this;\n\n    if (!self._furtherProgressive) {\n      return;\n    } // Use a token to stop progress steps triggered by\n    // previous zr.refresh calling.\n\n\n    var token = self._progressiveToken = +new Date();\n    self._progress++;\n    requestAnimationFrame(step);\n\n    function step() {\n      // In case refreshed or disposed\n      if (token === self._progressiveToken && self.storage) {\n        self._doPaintList(self.storage.getDisplayList());\n\n        if (self._furtherProgressive) {\n          self._progress++;\n          requestAnimationFrame(step);\n        } else {\n          self._progressiveToken = -1;\n        }\n      }\n    }\n  },\n  _clearProgressive: function () {\n    this._progressiveToken = -1;\n    this._progress = 0;\n    util.each(this._progressiveLayers, function (layer) {\n      layer.__dirty && layer.clear();\n    });\n  },\n  _paintList: function (list, paintAll) {\n    if (paintAll == null) {\n      paintAll = false;\n    }\n\n    this._updateLayerStatus(list);\n\n    this._clearProgressive();\n\n    this.eachBuiltinLayer(preProcessLayer);\n\n    this._doPaintList(list, paintAll);\n\n    this.eachBuiltinLayer(postProcessLayer);\n  },\n  _doPaintList: function (list, paintAll) {\n    var currentLayer;\n    var currentZLevel;\n    var ctx; // var invTransform = [];\n\n    var scope;\n    var progressiveLayerIdx = 0;\n    var currentProgressiveLayer;\n    var width = this._width;\n    var height = this._height;\n    var layerProgress;\n    var frame = this._progress;\n\n    function flushProgressiveLayer(layer) {\n      var dpr = ctx.dpr || 1;\n      ctx.save();\n      ctx.globalAlpha = 1;\n      ctx.shadowBlur = 0; // Avoid layer don't clear in next progressive frame\n\n      currentLayer.__dirty = true;\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\n      ctx.drawImage(layer.dom, 0, 0, width * dpr, height * dpr);\n      ctx.restore();\n    }\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      var el = list[i];\n      var elZLevel = this._singleCanvas ? 0 : el.zlevel;\n      var elFrame = el.__frame; // Flush at current context\n      // PENDING\n\n      if (elFrame < 0 && currentProgressiveLayer) {\n        flushProgressiveLayer(currentProgressiveLayer);\n        currentProgressiveLayer = null;\n      } // Change draw layer\n\n\n      if (currentZLevel !== elZLevel) {\n        if (ctx) {\n          ctx.restore();\n        } // Reset scope\n\n\n        scope = {}; // Only 0 zlevel if only has one canvas\n\n        currentZLevel = elZLevel;\n        currentLayer = this.getLayer(currentZLevel);\n\n        if (!currentLayer.__builtin__) {\n          log('ZLevel ' + currentZLevel + ' has been used by unkown layer ' + currentLayer.id);\n        }\n\n        ctx = currentLayer.ctx;\n        ctx.save(); // Reset the count\n\n        currentLayer.__unusedCount = 0;\n\n        if (currentLayer.__dirty || paintAll) {\n          currentLayer.clear();\n        }\n      }\n\n      if (!(currentLayer.__dirty || paintAll)) {\n        continue;\n      }\n\n      if (elFrame >= 0) {\n        // Progressive layer changed\n        if (!currentProgressiveLayer) {\n          currentProgressiveLayer = this._progressiveLayers[Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)];\n          currentProgressiveLayer.ctx.save();\n          currentProgressiveLayer.renderScope = {};\n\n          if (currentProgressiveLayer && currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress) {\n            // flushProgressiveLayer(currentProgressiveLayer);\n            // Quick jump all progressive elements\n            // All progressive element are not dirty, jump over and flush directly\n            i = currentProgressiveLayer.__nextIdxNotProg - 1; // currentProgressiveLayer = null;\n\n            continue;\n          }\n\n          layerProgress = currentProgressiveLayer.__progress;\n\n          if (!currentProgressiveLayer.__dirty) {\n            // Keep rendering\n            frame = layerProgress;\n          }\n\n          currentProgressiveLayer.__progress = frame + 1;\n        }\n\n        if (elFrame === frame) {\n          this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);\n        }\n      } else {\n        this._doPaintEl(el, currentLayer, paintAll, scope);\n      }\n\n      el.__dirty = false;\n    }\n\n    if (currentProgressiveLayer) {\n      flushProgressiveLayer(currentProgressiveLayer);\n    } // Restore the lastLayer ctx\n\n\n    ctx && ctx.restore(); // If still has clipping state\n    // if (scope.prevElClipPaths) {\n    //     ctx.restore();\n    // }\n\n    this._furtherProgressive = false;\n    util.each(this._progressiveLayers, function (layer) {\n      if (layer.__maxProgress >= layer.__progress) {\n        this._furtherProgressive = true;\n      }\n    }, this);\n  },\n  _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n    var ctx = currentLayer.ctx;\n    var m = el.transform;\n\n    if ((currentLayer.__dirty || forcePaint) && // Ignore invisible element\n    !el.invisible // Ignore transparent element\n    && el.style.opacity !== 0 // Ignore scale 0 element, in some environment like node-canvas\n    // Draw a scale 0 element can cause all following draw wrong\n    // And setTransform with scale 0 will cause set back transform failed.\n    && !(m && !m[0] && !m[3]) // Ignore culled element\n    && !(el.culling && isDisplayableCulled(el, this._width, this._height))) {\n      var clipPaths = el.__clipPaths; // Optimize when clipping on group with several elements\n\n      if (scope.prevClipLayer !== currentLayer || isClipPathChanged(clipPaths, scope.prevElClipPaths)) {\n        // If has previous clipping state, restore from it\n        if (scope.prevElClipPaths) {\n          scope.prevClipLayer.ctx.restore();\n          scope.prevClipLayer = scope.prevElClipPaths = null; // Reset prevEl since context has been restored\n\n          scope.prevEl = null;\n        } // New clipping state\n\n\n        if (clipPaths) {\n          ctx.save();\n          doClip(clipPaths, ctx);\n          scope.prevClipLayer = currentLayer;\n          scope.prevElClipPaths = clipPaths;\n        }\n      }\n\n      el.beforeBrush && el.beforeBrush(ctx);\n      el.brush(ctx, scope.prevEl || null);\n      scope.prevEl = el;\n      el.afterBrush && el.afterBrush(ctx);\n    }\n  },\n\n  /**\n   * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n   * @param {number} zlevel\n   * @return {module:zrender/Layer}\n   */\n  getLayer: function (zlevel) {\n    if (this._singleCanvas) {\n      return this._layers[0];\n    }\n\n    var layer = this._layers[zlevel];\n\n    if (!layer) {\n      // Create a new layer\n      layer = new Layer('zr_' + zlevel, this, this.dpr);\n      layer.__builtin__ = true;\n\n      if (this._layerConfig[zlevel]) {\n        util.merge(layer, this._layerConfig[zlevel], true);\n      }\n\n      this.insertLayer(zlevel, layer); // Context is created after dom inserted to document\n      // Or excanvas will get 0px clientWidth and clientHeight\n\n      layer.initContext();\n    }\n\n    return layer;\n  },\n  insertLayer: function (zlevel, layer) {\n    var layersMap = this._layers;\n    var zlevelList = this._zlevelList;\n    var len = zlevelList.length;\n    var prevLayer = null;\n    var i = -1;\n    var domRoot = this._domRoot;\n\n    if (layersMap[zlevel]) {\n      log('ZLevel ' + zlevel + ' has been used already');\n      return;\n    } // Check if is a valid layer\n\n\n    if (!isLayerValid(layer)) {\n      log('Layer of zlevel ' + zlevel + ' is not valid');\n      return;\n    }\n\n    if (len > 0 && zlevel > zlevelList[0]) {\n      for (i = 0; i < len - 1; i++) {\n        if (zlevelList[i] < zlevel && zlevelList[i + 1] > zlevel) {\n          break;\n        }\n      }\n\n      prevLayer = layersMap[zlevelList[i]];\n    }\n\n    zlevelList.splice(i + 1, 0, zlevel);\n    layersMap[zlevel] = layer; // Vitual layer will not directly show on the screen.\n    // (It can be a WebGL layer and assigned to a ZImage element)\n    // But it still under management of zrender.\n\n    if (!layer.virtual) {\n      if (prevLayer) {\n        var prevDom = prevLayer.dom;\n\n        if (prevDom.nextSibling) {\n          domRoot.insertBefore(layer.dom, prevDom.nextSibling);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      } else {\n        if (domRoot.firstChild) {\n          domRoot.insertBefore(layer.dom, domRoot.firstChild);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      }\n    }\n  },\n  // Iterate each layer\n  eachLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      cb.call(context, this._layers[z], z);\n    }\n  },\n  // Iterate each buildin layer\n  eachBuiltinLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n  // Iterate each other layer except buildin layer\n  eachOtherLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (!layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n\n  /**\n   * 获取所有已创建的层\n   * @param {Array.<module:zrender/Layer>} [prevLayer]\n   */\n  getLayers: function () {\n    return this._layers;\n  },\n  _updateLayerStatus: function (list) {\n    var layers = this._layers;\n    var progressiveLayers = this._progressiveLayers;\n    var elCountsLastFrame = {};\n    var progressiveElCountsLastFrame = {};\n    this.eachBuiltinLayer(function (layer, z) {\n      elCountsLastFrame[z] = layer.elCount;\n      layer.elCount = 0;\n      layer.__dirty = false;\n    });\n    util.each(progressiveLayers, function (layer, idx) {\n      progressiveElCountsLastFrame[idx] = layer.elCount;\n      layer.elCount = 0;\n      layer.__dirty = false;\n    });\n    var progressiveLayerCount = 0;\n    var currentProgressiveLayer;\n    var lastProgressiveKey;\n    var frameCount = 0;\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      var el = list[i];\n      var zlevel = this._singleCanvas ? 0 : el.zlevel;\n      var layer = layers[zlevel];\n      var elProgress = el.progressive;\n\n      if (layer) {\n        layer.elCount++;\n        layer.__dirty = layer.__dirty || el.__dirty;\n      } /////// Update progressive\n\n\n      if (elProgress >= 0) {\n        // Fix wrong progressive sequence problem.\n        if (lastProgressiveKey !== elProgress) {\n          lastProgressiveKey = elProgress;\n          frameCount++;\n        }\n\n        var elFrame = el.__frame = frameCount - 1;\n\n        if (!currentProgressiveLayer) {\n          var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);\n          currentProgressiveLayer = progressiveLayers[idx];\n\n          if (!currentProgressiveLayer) {\n            currentProgressiveLayer = progressiveLayers[idx] = new Layer('progressive', this, this.dpr);\n            currentProgressiveLayer.initContext();\n          }\n\n          currentProgressiveLayer.__maxProgress = 0;\n        }\n\n        currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;\n        currentProgressiveLayer.elCount++;\n        currentProgressiveLayer.__maxProgress = Math.max(currentProgressiveLayer.__maxProgress, elFrame);\n\n        if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {\n          // Should keep rendering this  layer because progressive rendering is not finished yet\n          layer.__dirty = true;\n        }\n      } else {\n        el.__frame = -1;\n\n        if (currentProgressiveLayer) {\n          currentProgressiveLayer.__nextIdxNotProg = i;\n          progressiveLayerCount++;\n          currentProgressiveLayer = null;\n        }\n      }\n    }\n\n    if (currentProgressiveLayer) {\n      progressiveLayerCount++;\n      currentProgressiveLayer.__nextIdxNotProg = i;\n    } // 层中的元素数量有发生变化\n\n\n    this.eachBuiltinLayer(function (layer, z) {\n      if (elCountsLastFrame[z] !== layer.elCount) {\n        layer.__dirty = true;\n      }\n    });\n    progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);\n    util.each(progressiveLayers, function (layer, idx) {\n      if (progressiveElCountsLastFrame[idx] !== layer.elCount) {\n        el.__dirty = true;\n      }\n\n      if (layer.__dirty) {\n        layer.__progress = 0;\n      }\n    });\n  },\n\n  /**\n   * 清除hover层外所有内容\n   */\n  clear: function () {\n    this.eachBuiltinLayer(this._clearLayer);\n    return this;\n  },\n  _clearLayer: function (layer) {\n    layer.clear();\n  },\n\n  /**\n   * 修改指定zlevel的绘制参数\n   *\n   * @param {string} zlevel\n   * @param {Object} config 配置对象\n   * @param {string} [config.clearColor=0] 每次清空画布的颜色\n   * @param {string} [config.motionBlur=false] 是否开启动态模糊\n   * @param {number} [config.lastFrameAlpha=0.7]\n   *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   */\n  configLayer: function (zlevel, config) {\n    if (config) {\n      var layerConfig = this._layerConfig;\n\n      if (!layerConfig[zlevel]) {\n        layerConfig[zlevel] = config;\n      } else {\n        util.merge(layerConfig[zlevel], config, true);\n      }\n\n      var layer = this._layers[zlevel];\n\n      if (layer) {\n        util.merge(layer, layerConfig[zlevel], true);\n      }\n    }\n  },\n\n  /**\n   * 删除指定层\n   * @param {number} zlevel 层所在的zlevel\n   */\n  delLayer: function (zlevel) {\n    var layers = this._layers;\n    var zlevelList = this._zlevelList;\n    var layer = layers[zlevel];\n\n    if (!layer) {\n      return;\n    }\n\n    layer.dom.parentNode.removeChild(layer.dom);\n    delete layers[zlevel];\n    zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n  },\n\n  /**\n   * 区域大小变化后重绘\n   */\n  resize: function (width, height) {\n    var domRoot = this._domRoot; // FIXME Why ?\n\n    domRoot.style.display = 'none'; // Save input w/h\n\n    var opts = this._opts;\n    width != null && (opts.width = width);\n    height != null && (opts.height = height);\n    width = this._getSize(0);\n    height = this._getSize(1);\n    domRoot.style.display = ''; // 优化没有实际改变的resize\n\n    if (this._width != width || height != this._height) {\n      domRoot.style.width = width + 'px';\n      domRoot.style.height = height + 'px';\n\n      for (var id in this._layers) {\n        if (this._layers.hasOwnProperty(id)) {\n          this._layers[id].resize(width, height);\n        }\n      }\n\n      util.each(this._progressiveLayers, function (layer) {\n        layer.resize(width, height);\n      });\n      this.refresh(true);\n    }\n\n    this._width = width;\n    this._height = height;\n    return this;\n  },\n\n  /**\n   * 清除单独的一个层\n   * @param {number} zlevel\n   */\n  clearLayer: function (zlevel) {\n    var layer = this._layers[zlevel];\n\n    if (layer) {\n      layer.clear();\n    }\n  },\n\n  /**\n   * 释放\n   */\n  dispose: function () {\n    this.root.innerHTML = '';\n    this.root = this.storage = this._domRoot = this._layers = null;\n  },\n\n  /**\n   * Get canvas which has all thing rendered\n   * @param {Object} opts\n   * @param {string} [opts.backgroundColor]\n   * @param {number} [opts.pixelRatio]\n   */\n  getRenderedCanvas: function (opts) {\n    opts = opts || {};\n\n    if (this._singleCanvas) {\n      return this._layers[0].dom;\n    }\n\n    var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n    imageLayer.initContext();\n    imageLayer.clearColor = opts.backgroundColor;\n    imageLayer.clear();\n    var displayList = this.storage.getDisplayList(true);\n    var scope = {};\n    var zlevel;\n    var self = this;\n\n    function findAndDrawOtherLayer(smaller, larger) {\n      var zlevelList = self._zlevelList;\n\n      if (smaller == null) {\n        smaller = -Infinity;\n      }\n\n      var intermediateLayer;\n\n      for (var i = 0; i < zlevelList.length; i++) {\n        var z = zlevelList[i];\n        var layer = self._layers[z];\n\n        if (!layer.__builtin__ && z > smaller && z < larger) {\n          intermediateLayer = layer;\n          break;\n        }\n      }\n\n      if (intermediateLayer && intermediateLayer.renderToCanvas) {\n        imageLayer.ctx.save();\n        intermediateLayer.renderToCanvas(imageLayer.ctx);\n        imageLayer.ctx.restore();\n      }\n    }\n\n    for (var i = 0; i < displayList.length; i++) {\n      var el = displayList[i];\n\n      if (el.zlevel !== zlevel) {\n        findAndDrawOtherLayer(zlevel, el.zlevel);\n        zlevel = el.zlevel;\n      }\n\n      this._doPaintEl(el, imageLayer, true, scope);\n    }\n\n    findAndDrawOtherLayer(zlevel, Infinity);\n    return imageLayer.dom;\n  },\n\n  /**\n   * 获取绘图区域宽度\n   */\n  getWidth: function () {\n    return this._width;\n  },\n\n  /**\n   * 获取绘图区域高度\n   */\n  getHeight: function () {\n    return this._height;\n  },\n  _getSize: function (whIdx) {\n    var opts = this._opts;\n    var wh = ['width', 'height'][whIdx];\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n    if (opts[wh] != null && opts[wh] !== 'auto') {\n      return parseFloat(opts[wh]);\n    }\n\n    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.\n\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n  },\n  pathToImage: function (path, dpr) {\n    dpr = dpr || this.dpr;\n    var canvas = document.createElement('canvas');\n    var ctx = canvas.getContext('2d');\n    var rect = path.getBoundingRect();\n    var style = path.style;\n    var shadowBlurSize = style.shadowBlur;\n    var shadowOffsetX = style.shadowOffsetX;\n    var shadowOffsetY = style.shadowOffsetY;\n    var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n    var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n    var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n    var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n    var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n    var width = rect.width + leftMargin + rightMargin;\n    var height = rect.height + topMargin + bottomMargin;\n    canvas.width = width * dpr;\n    canvas.height = height * dpr;\n    ctx.scale(dpr, dpr);\n    ctx.clearRect(0, 0, width, height);\n    ctx.dpr = dpr;\n    var pathTransform = {\n      position: path.position,\n      rotation: path.rotation,\n      scale: path.scale\n    };\n    path.position = [leftMargin - rect.x, topMargin - rect.y];\n    path.rotation = 0;\n    path.scale = [1, 1];\n    path.updateTransform();\n\n    if (path) {\n      path.brush(ctx);\n    }\n\n    var ImageShape = Image;\n    var imgShape = new ImageShape({\n      style: {\n        x: 0,\n        y: 0,\n        image: canvas\n      }\n    });\n\n    if (pathTransform.position != null) {\n      imgShape.position = path.position = pathTransform.position;\n    }\n\n    if (pathTransform.rotation != null) {\n      imgShape.rotation = path.rotation = pathTransform.rotation;\n    }\n\n    if (pathTransform.scale != null) {\n      imgShape.scale = path.scale = pathTransform.scale;\n    }\n\n    return imgShape;\n  }\n};\nvar _default = Painter;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/Painter.js\n// module id = 1096\n// module chunks = 0 1 2","var util = require(\"./core/util\");\n\nvar _config = require(\"./config\");\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar Style = require(\"./graphic/Style\");\n\nvar Pattern = require(\"./graphic/Pattern\");\n\n/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\nfunction returnFalse() {\n  return false;\n}\n/**\n * 创建dom\n *\n * @inner\n * @param {string} id dom id 待用\n * @param {Painter} painter painter instance\n * @param {number} number\n */\n\n\nfunction createDom(id, painter, dpr) {\n  var newDom = util.createCanvas();\n  var width = painter.getWidth();\n  var height = painter.getHeight();\n  var newDomStyle = newDom.style; // 没append呢，请原谅我这样写，清晰~\n\n  newDomStyle.position = 'absolute';\n  newDomStyle.left = 0;\n  newDomStyle.top = 0;\n  newDomStyle.width = width + 'px';\n  newDomStyle.height = height + 'px';\n  newDom.width = width * dpr;\n  newDom.height = height * dpr; // id不作为索引用，避免可能造成的重名，定义为私有属性\n\n  newDom.setAttribute('data-zr-dom-id', id);\n  return newDom;\n}\n/**\n * @alias module:zrender/Layer\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @param {string} id\n * @param {module:zrender/Painter} painter\n * @param {number} [dpr]\n */\n\n\nvar Layer = function (id, painter, dpr) {\n  var dom;\n  dpr = dpr || devicePixelRatio;\n\n  if (typeof id === 'string') {\n    dom = createDom(id, painter, dpr);\n  } // Not using isDom because in node it will return false\n  else if (util.isObject(id)) {\n      dom = id;\n      id = dom.id;\n    }\n\n  this.id = id;\n  this.dom = dom;\n  var domStyle = dom.style;\n\n  if (domStyle) {\n    // Not in node\n    dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n    domStyle['-webkit-user-select'] = 'none';\n    domStyle['user-select'] = 'none';\n    domStyle['-webkit-touch-callout'] = 'none';\n    domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n    domStyle['padding'] = 0;\n    domStyle['margin'] = 0;\n    domStyle['border-width'] = 0;\n  }\n\n  this.domBack = null;\n  this.ctxBack = null;\n  this.painter = painter;\n  this.config = null; // Configs\n\n  /**\n   * 每次清空画布的颜色\n   * @type {string}\n   * @default 0\n   */\n\n  this.clearColor = 0;\n  /**\n   * 是否开启动态模糊\n   * @type {boolean}\n   * @default false\n   */\n\n  this.motionBlur = false;\n  /**\n   * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   * @type {number}\n   * @default 0.7\n   */\n\n  this.lastFrameAlpha = 0.7;\n  /**\n   * Layer dpr\n   * @type {number}\n   */\n\n  this.dpr = dpr;\n};\n\nLayer.prototype = {\n  constructor: Layer,\n  elCount: 0,\n  __dirty: true,\n  initContext: function () {\n    this.ctx = this.dom.getContext('2d');\n    this.ctx.__currentValues = {};\n    this.ctx.dpr = this.dpr;\n  },\n  createBackBuffer: function () {\n    var dpr = this.dpr;\n    this.domBack = createDom('back-' + this.id, this.painter, dpr);\n    this.ctxBack = this.domBack.getContext('2d');\n    this.ctxBack.__currentValues = {};\n\n    if (dpr != 1) {\n      this.ctxBack.scale(dpr, dpr);\n    }\n  },\n\n  /**\n   * @param  {number} width\n   * @param  {number} height\n   */\n  resize: function (width, height) {\n    var dpr = this.dpr;\n    var dom = this.dom;\n    var domStyle = dom.style;\n    var domBack = this.domBack;\n    domStyle.width = width + 'px';\n    domStyle.height = height + 'px';\n    dom.width = width * dpr;\n    dom.height = height * dpr;\n\n    if (domBack) {\n      domBack.width = width * dpr;\n      domBack.height = height * dpr;\n\n      if (dpr != 1) {\n        this.ctxBack.scale(dpr, dpr);\n      }\n    }\n  },\n\n  /**\n   * 清空该层画布\n   * @param {boolean} clearAll Clear all with out motion blur\n   */\n  clear: function (clearAll) {\n    var dom = this.dom;\n    var ctx = this.ctx;\n    var width = dom.width;\n    var height = dom.height;\n    var clearColor = this.clearColor;\n    var haveMotionBLur = this.motionBlur && !clearAll;\n    var lastFrameAlpha = this.lastFrameAlpha;\n    var dpr = this.dpr;\n\n    if (haveMotionBLur) {\n      if (!this.domBack) {\n        this.createBackBuffer();\n      }\n\n      this.ctxBack.globalCompositeOperation = 'copy';\n      this.ctxBack.drawImage(dom, 0, 0, width / dpr, height / dpr);\n    }\n\n    ctx.clearRect(0, 0, width, height);\n\n    if (clearColor) {\n      var clearColorGradientOrPattern; // Gradient\n\n      if (clearColor.colorStops) {\n        // Cache canvas gradient\n        clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n          x: 0,\n          y: 0,\n          width: width,\n          height: height\n        });\n        clearColor.__canvasGradient = clearColorGradientOrPattern;\n      } // Pattern\n      else if (clearColor.image) {\n          clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n        }\n\n      ctx.save();\n      ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    if (haveMotionBLur) {\n      var domBack = this.domBack;\n      ctx.save();\n      ctx.globalAlpha = lastFrameAlpha;\n      ctx.drawImage(domBack, 0, 0, width, height);\n      ctx.restore();\n    }\n  }\n};\nvar _default = Layer;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/Layer.js\n// module id = 1097\n// module chunks = 0 1 2","var util = require(\"../core/util\");\n\nvar _event = require(\"../core/event\");\n\nvar Dispatcher = _event.Dispatcher;\n\nvar requestAnimationFrame = require(\"./requestAnimationFrame\");\n\nvar Animator = require(\"./Animator\");\n\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n/**\n * @typedef {Object} IZRenderStage\n * @property {Function} update\n */\n\n/**\n * @alias module:zrender/animation/Animation\n * @constructor\n * @param {Object} [options]\n * @param {Function} [options.onframe]\n * @param {IZRenderStage} [options.stage]\n * @example\n *     var animation = new Animation();\n *     var obj = {\n *         x: 100,\n *         y: 100\n *     };\n *     animation.animate(node.position)\n *         .when(1000, {\n *             x: 500,\n *             y: 500\n *         })\n *         .when(2000, {\n *             x: 100,\n *             y: 100\n *         })\n *         .start('spline');\n */\nvar Animation = function (options) {\n  options = options || {};\n  this.stage = options.stage || {};\n\n  this.onframe = options.onframe || function () {}; // private properties\n\n\n  this._clips = [];\n  this._running = false;\n  this._time;\n  this._pausedTime;\n  this._pauseStart;\n  this._paused = false;\n  Dispatcher.call(this);\n};\n\nAnimation.prototype = {\n  constructor: Animation,\n\n  /**\n   * 添加 clip\n   * @param {module:zrender/animation/Clip} clip\n   */\n  addClip: function (clip) {\n    this._clips.push(clip);\n  },\n\n  /**\n   * 添加 animator\n   * @param {module:zrender/animation/Animator} animator\n   */\n  addAnimator: function (animator) {\n    animator.animation = this;\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.addClip(clips[i]);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Clip} clip\n   */\n  removeClip: function (clip) {\n    var idx = util.indexOf(this._clips, clip);\n\n    if (idx >= 0) {\n      this._clips.splice(idx, 1);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Animator} animator\n   */\n  removeAnimator: function (animator) {\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.removeClip(clips[i]);\n    }\n\n    animator.animation = null;\n  },\n  _update: function () {\n    var time = new Date().getTime() - this._pausedTime;\n\n    var delta = time - this._time;\n    var clips = this._clips;\n    var len = clips.length;\n    var deferredEvents = [];\n    var deferredClips = [];\n\n    for (var i = 0; i < len; i++) {\n      var clip = clips[i];\n      var e = clip.step(time, delta); // Throw out the events need to be called after\n      // stage.update, like destroy\n\n      if (e) {\n        deferredEvents.push(e);\n        deferredClips.push(clip);\n      }\n    } // Remove the finished clip\n\n\n    for (var i = 0; i < len;) {\n      if (clips[i]._needsRemove) {\n        clips[i] = clips[len - 1];\n        clips.pop();\n        len--;\n      } else {\n        i++;\n      }\n    }\n\n    len = deferredEvents.length;\n\n    for (var i = 0; i < len; i++) {\n      deferredClips[i].fire(deferredEvents[i]);\n    }\n\n    this._time = time;\n    this.onframe(delta);\n    this.trigger('frame', delta);\n\n    if (this.stage.update) {\n      this.stage.update();\n    }\n  },\n  _startLoop: function () {\n    var self = this;\n    this._running = true;\n\n    function step() {\n      if (self._running) {\n        requestAnimationFrame(step);\n        !self._paused && self._update();\n      }\n    }\n\n    requestAnimationFrame(step);\n  },\n\n  /**\n   * 开始运行动画\n   */\n  start: function () {\n    this._time = new Date().getTime();\n    this._pausedTime = 0;\n\n    this._startLoop();\n  },\n\n  /**\n   * 停止运行动画\n   */\n  stop: function () {\n    this._running = false;\n  },\n\n  /**\n   * Pause\n   */\n  pause: function () {\n    if (!this._paused) {\n      this._pauseStart = new Date().getTime();\n      this._paused = true;\n    }\n  },\n\n  /**\n   * Resume\n   */\n  resume: function () {\n    if (this._paused) {\n      this._pausedTime += new Date().getTime() - this._pauseStart;\n      this._paused = false;\n    }\n  },\n\n  /**\n   * 清除所有动画片段\n   */\n  clear: function () {\n    this._clips = [];\n  },\n\n  /**\n   * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n   * @param  {Object} target\n   * @param  {Object} options\n   * @param  {boolean} [options.loop=false] 是否循环播放动画\n   * @param  {Function} [options.getter=null]\n   *         如果指定getter函数，会通过getter函数取属性值\n   * @param  {Function} [options.setter=null]\n   *         如果指定setter函数，会通过setter函数设置属性值\n   * @return {module:zrender/animation/Animation~Animator}\n   */\n  // TODO Gap\n  animate: function (target, options) {\n    options = options || {};\n    var animator = new Animator(target, options.loop, options.getter, options.setter);\n    this.addAnimator(animator);\n    return animator;\n  }\n};\nutil.mixin(Animation, Dispatcher);\nvar _default = Animation;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/animation/Animation.js\n// module id = 1098\n// module chunks = 0 1 2","var _event = require(\"../core/event\");\n\nvar addEventListener = _event.addEventListener;\nvar removeEventListener = _event.removeEventListener;\nvar normalizeEvent = _event.normalizeEvent;\n\nvar zrUtil = require(\"../core/util\");\n\nvar Eventful = require(\"../mixin/Eventful\");\n\nvar env = require(\"../core/env\");\n\nvar GestureMgr = require(\"../core/GestureMgr\");\n\nvar TOUCH_CLICK_DELAY = 300;\nvar mouseHandlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\nvar touchHandlerNames = ['touchstart', 'touchend', 'touchmove'];\nvar pointerEventNames = {\n  pointerdown: 1,\n  pointerup: 1,\n  pointermove: 1,\n  pointerout: 1\n};\nvar pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n  var nm = name.replace('mouse', 'pointer');\n  return pointerEventNames[nm] ? nm : name;\n});\n\nfunction eventNameFix(name) {\n  return name === 'mousewheel' && env.browser.firefox ? 'DOMMouseScroll' : name;\n}\n\nfunction processGesture(proxy, event, stage) {\n  var gestureMgr = proxy._gestureMgr;\n  stage === 'start' && gestureMgr.clear();\n  var gestureInfo = gestureMgr.recognize(event, proxy.handler.findHover(event.zrX, event.zrY, null).target, proxy.dom);\n  stage === 'end' && gestureMgr.clear(); // Do not do any preventDefault here. Upper application do that if necessary.\n\n  if (gestureInfo) {\n    var type = gestureInfo.type;\n    event.gestureEvent = type;\n    proxy.handler.dispatchToElement({\n      target: gestureInfo.target\n    }, type, gestureInfo.event);\n  }\n} // function onMSGestureChange(proxy, event) {\n//     if (event.translationX || event.translationY) {\n//         // mousemove is carried by MSGesture to reduce the sensitivity.\n//         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n//     }\n//     if (event.scale !== 1) {\n//         event.pinchX = event.offsetX;\n//         event.pinchY = event.offsetY;\n//         event.pinchScale = event.scale;\n//         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n//     }\n// }\n\n/**\n * Prevent mouse event from being dispatched after Touch Events action\n * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n * Result: Blocking Mouse Events for 700ms.\n */\n\n\nfunction setTouchTimer(instance) {\n  instance._touching = true;\n  clearTimeout(instance._touchTimer);\n  instance._touchTimer = setTimeout(function () {\n    instance._touching = false;\n  }, 700);\n}\n\nvar domHandlers = {\n  /**\n   * Mouse move handler\n   * @inner\n   * @param {Event} event\n   */\n  mousemove: function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger('mousemove', event);\n  },\n\n  /**\n   * Mouse out handler\n   * @inner\n   * @param {Event} event\n   */\n  mouseout: function (event) {\n    event = normalizeEvent(this.dom, event);\n    var element = event.toElement || event.relatedTarget;\n\n    if (element != this.dom) {\n      while (element && element.nodeType != 9) {\n        // 忽略包含在root中的dom引起的mouseOut\n        if (element === this.dom) {\n          return;\n        }\n\n        element = element.parentNode;\n      }\n    }\n\n    this.trigger('mouseout', event);\n  },\n\n  /**\n   * Touch开始响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchstart: function (event) {\n    // Default mouse behaviour should not be disabled here.\n    // For example, page may needs to be slided.\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    this._lastTouchMoment = new Date();\n    processGesture(this, event, 'start'); // In touch device, trigger `mousemove`(`mouseover`) should\n    // be triggered, and must before `mousedown` triggered.\n\n    domHandlers.mousemove.call(this, event);\n    domHandlers.mousedown.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch移动响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchmove: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'change'); // Mouse move should always be triggered no matter whether\n    // there is gestrue event, because mouse move and pinch may\n    // be used at the same time.\n\n    domHandlers.mousemove.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch结束响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchend: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'end');\n    domHandlers.mouseup.call(this, event); // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n    // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n    // we can conveniently implement \"hover style\" in both PC and touch device just\n    // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n    // to remove \"hover style\" on an element, without any additional code for\n    // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n    // style\" will remain for user view)\n    // click event should always be triggered no matter whether\n    // there is gestrue event. System click can not be prevented.\n\n    if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n      domHandlers.click.call(this, event);\n    }\n\n    setTouchTimer(this);\n  },\n  pointerdown: function (event) {\n    domHandlers.mousedown.call(this, event); // if (useMSGuesture(this, event)) {\n    //     this._msGesture.addPointer(event.pointerId);\n    // }\n  },\n  pointermove: function (event) {\n    // FIXME\n    // pointermove is so sensitive that it always triggered when\n    // tap(click) on touch screen, which affect some judgement in\n    // upper application. So, we dont support mousemove on MS touch\n    // device yet.\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mousemove.call(this, event);\n    }\n  },\n  pointerup: function (event) {\n    domHandlers.mouseup.call(this, event);\n  },\n  pointerout: function (event) {\n    // pointerout will be triggered when tap on touch screen\n    // (IE11+/Edge on MS Surface) after click event triggered,\n    // which is inconsistent with the mousout behavior we defined\n    // in touchend. So we unify them.\n    // (check domHandlers.touchend for detailed explanation)\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mouseout.call(this, event);\n    }\n  }\n};\n\nfunction isPointerFromTouch(event) {\n  var pointerType = event.pointerType;\n  return pointerType === 'pen' || pointerType === 'touch';\n} // function useMSGuesture(handlerProxy, event) {\n//     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n// }\n// Common handlers\n\n\nzrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  domHandlers[name] = function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger(name, event);\n  };\n});\n/**\n * 为控制类实例初始化dom 事件处理函数\n *\n * @inner\n * @param {module:zrender/Handler} instance 控制类实例\n */\n\nfunction initDomHandler(instance) {\n  zrUtil.each(touchHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(pointerHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(mouseHandlerNames, function (name) {\n    instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n  });\n\n  function makeMouseHandler(fn, instance) {\n    return function () {\n      if (instance._touching) {\n        return;\n      }\n\n      return fn.apply(instance, arguments);\n    };\n  }\n}\n\nfunction HandlerDomProxy(dom) {\n  Eventful.call(this);\n  this.dom = dom;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._touching = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._touchTimer;\n  /**\n   * @private\n   * @type {module:zrender/core/GestureMgr}\n   */\n\n  this._gestureMgr = new GestureMgr();\n  this._handlers = {};\n  initDomHandler(this);\n\n  if (env.pointerEventsSupported) {\n    // Only IE11+/Edge\n    // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n    // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n    // at the same time.\n    // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n    // screen, which do not occurs in pointer event.\n    // So we use pointer event to both detect touch gesture and mouse behavior.\n    mountHandlers(pointerHandlerNames, this); // FIXME\n    // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n    // which does not prevent defuault behavior occasionally (which may cause view port\n    // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n    // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n    // touch screen. And we only support click behavior on MS touch screen now.\n    // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n    // We dont support touch on IE on win7.\n    // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n    // if (typeof MSGesture === 'function') {\n    //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n    //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n    // }\n  } else {\n    if (env.touchEventsSupported) {\n      mountHandlers(touchHandlerNames, this); // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n      // addEventListener(root, 'mouseout', this._mouseoutHandler);\n    } // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n    // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n    // mouse event can not be handle in those devices.\n    // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n    // mouseevent after touch event triggered, see `setTouchTimer`.\n\n\n    mountHandlers(mouseHandlerNames, this);\n  }\n\n  function mountHandlers(handlerNames, instance) {\n    zrUtil.each(handlerNames, function (name) {\n      addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n    }, instance);\n  }\n}\n\nvar handlerDomProxyProto = HandlerDomProxy.prototype;\n\nhandlerDomProxyProto.dispose = function () {\n  var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n  for (var i = 0; i < handlerNames.length; i++) {\n    var name = handlerNames[i];\n    removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n  }\n};\n\nhandlerDomProxyProto.setCursor = function (cursorStyle) {\n  this.dom.style.cursor = cursorStyle || 'default';\n};\n\nzrUtil.mixin(HandlerDomProxy, Eventful);\nvar _default = HandlerDomProxy;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/dom/HandlerProxy.js\n// module id = 1099\n// module chunks = 0 1 2","var eventUtil = require(\"./event\");\n\n/**\n * Only implements needed gestures for mobile.\n */\nvar GestureMgr = function () {\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n  this._track = [];\n};\n\nGestureMgr.prototype = {\n  constructor: GestureMgr,\n  recognize: function (event, target, root) {\n    this._doTrack(event, target, root);\n\n    return this._recognize(event);\n  },\n  clear: function () {\n    this._track.length = 0;\n    return this;\n  },\n  _doTrack: function (event, target, root) {\n    var touches = event.touches;\n\n    if (!touches) {\n      return;\n    }\n\n    var trackItem = {\n      points: [],\n      touches: [],\n      target: target,\n      event: event\n    };\n\n    for (var i = 0, len = touches.length; i < len; i++) {\n      var touch = touches[i];\n      var pos = eventUtil.clientToLocal(root, touch, {});\n      trackItem.points.push([pos.zrX, pos.zrY]);\n      trackItem.touches.push(touch);\n    }\n\n    this._track.push(trackItem);\n  },\n  _recognize: function (event) {\n    for (var eventName in recognizers) {\n      if (recognizers.hasOwnProperty(eventName)) {\n        var gestureInfo = recognizers[eventName](this._track, event);\n\n        if (gestureInfo) {\n          return gestureInfo;\n        }\n      }\n    }\n  }\n};\n\nfunction dist(pointPair) {\n  var dx = pointPair[1][0] - pointPair[0][0];\n  var dy = pointPair[1][1] - pointPair[0][1];\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\nfunction center(pointPair) {\n  return [(pointPair[0][0] + pointPair[1][0]) / 2, (pointPair[0][1] + pointPair[1][1]) / 2];\n}\n\nvar recognizers = {\n  pinch: function (track, event) {\n    var trackLen = track.length;\n\n    if (!trackLen) {\n      return;\n    }\n\n    var pinchEnd = (track[trackLen - 1] || {}).points;\n    var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n    if (pinchPre && pinchPre.length > 1 && pinchEnd && pinchEnd.length > 1) {\n      var pinchScale = dist(pinchEnd) / dist(pinchPre);\n      !isFinite(pinchScale) && (pinchScale = 1);\n      event.pinchScale = pinchScale;\n      var pinchCenter = center(pinchEnd);\n      event.pinchX = pinchCenter[0];\n      event.pinchY = pinchCenter[1];\n      return {\n        type: 'pinch',\n        target: track[0].target,\n        event: event\n      };\n    }\n  } // Only pinch currently.\n\n};\nvar _default = GestureMgr;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/GestureMgr.js\n// module id = 1100\n// module chunks = 0 1 2","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar Model = require(\"./Model\");\n\nvar ComponentModel = require(\"./Component\");\n\nvar globalDefault = require(\"./globalDefault\");\n\nvar colorPaletteMinin = require(\"./mixin/colorPalette\");\n\n/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n/**\n * Caution: If the mechanism should be changed some day, these cases\n * should be considered:\n *\n * (1) In `merge option` mode, if using the same option to call `setOption`\n * many times, the result should be the same (try our best to ensure that).\n * (2) In `merge option` mode, if a component has no id/name specified, it\n * will be merged by index, and the result sequence of the components is\n * consistent to the original sequence.\n * (3) `reset` feature (in toolbox). Find detailed info in comments about\n * `mergeOption` in module:echarts/model/OptionManager.\n */\nvar each = zrUtil.each;\nvar filter = zrUtil.filter;\nvar map = zrUtil.map;\nvar isArray = zrUtil.isArray;\nvar indexOf = zrUtil.indexOf;\nvar isObject = zrUtil.isObject;\nvar OPTION_INNER_KEY = '\\0_ec_inner';\n/**\n * @alias module:echarts/model/Global\n *\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {Object} theme\n */\n\nvar GlobalModel = Model.extend({\n  constructor: GlobalModel,\n  init: function (option, parentModel, theme, optionManager) {\n    theme = theme || {};\n    this.option = null; // Mark as not initialized.\n\n    /**\n     * @type {module:echarts/model/Model}\n     * @private\n     */\n\n    this._theme = new Model(theme);\n    /**\n     * @type {module:echarts/model/OptionManager}\n     */\n\n    this._optionManager = optionManager;\n  },\n  setOption: function (option, optionPreprocessorFuncs) {\n    zrUtil.assert(!(OPTION_INNER_KEY in option), 'please use chart.getOption()');\n\n    this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n    this.resetOption(null);\n  },\n\n  /**\n   * @param {string} type null/undefined: reset all.\n   *                      'recreate': force recreate all.\n   *                      'timeline': only reset timeline option\n   *                      'media': only reset media query option\n   * @return {boolean} Whether option changed.\n   */\n  resetOption: function (type) {\n    var optionChanged = false;\n    var optionManager = this._optionManager;\n\n    if (!type || type === 'recreate') {\n      var baseOption = optionManager.mountOption(type === 'recreate');\n\n      if (!this.option || type === 'recreate') {\n        initBase.call(this, baseOption);\n      } else {\n        this.restoreData();\n        this.mergeOption(baseOption);\n      }\n\n      optionChanged = true;\n    }\n\n    if (type === 'timeline' || type === 'media') {\n      this.restoreData();\n    }\n\n    if (!type || type === 'recreate' || type === 'timeline') {\n      var timelineOption = optionManager.getTimelineOption(this);\n      timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n    }\n\n    if (!type || type === 'recreate' || type === 'media') {\n      var mediaOptions = optionManager.getMediaOption(this, this._api);\n\n      if (mediaOptions.length) {\n        each(mediaOptions, function (mediaOption) {\n          this.mergeOption(mediaOption, optionChanged = true);\n        }, this);\n      }\n    }\n\n    return optionChanged;\n  },\n\n  /**\n   * @protected\n   */\n  mergeOption: function (newOption) {\n    var option = this.option;\n    var componentsMap = this._componentsMap;\n    var newCptTypes = []; // 如果不存在对应的 component model 则直接 merge\n\n    each(newOption, function (componentOption, mainType) {\n      if (componentOption == null) {\n        return;\n      }\n\n      if (!ComponentModel.hasClass(mainType)) {\n        option[mainType] = option[mainType] == null ? zrUtil.clone(componentOption) : zrUtil.merge(option[mainType], componentOption, true);\n      } else {\n        newCptTypes.push(mainType);\n      }\n    }); // FIXME OPTION 同步是否要改回原来的\n\n    ComponentModel.topologicalTravel(newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this);\n    this._seriesIndices = this._seriesIndices || [];\n\n    function visitComponent(mainType, dependencies) {\n      var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n      var mapResult = modelUtil.mappingToExists(componentsMap.get(mainType), newCptOptionList);\n      modelUtil.makeIdAndName(mapResult); // Set mainType and complete subType.\n\n      each(mapResult, function (item, index) {\n        var opt = item.option;\n\n        if (isObject(opt)) {\n          item.keyInfo.mainType = mainType;\n          item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n        }\n      });\n      var dependentModels = getComponentsByTypes(componentsMap, dependencies);\n      option[mainType] = [];\n      componentsMap.set(mainType, []);\n      each(mapResult, function (resultItem, index) {\n        var componentModel = resultItem.exist;\n        var newCptOption = resultItem.option;\n        zrUtil.assert(isObject(newCptOption) || componentModel, 'Empty component definition'); // Consider where is no new option and should be merged using {},\n        // see removeEdgeAndAdd in topologicalTravel and\n        // ComponentModel.getAllClassMainTypes.\n\n        if (!newCptOption) {\n          componentModel.mergeOption({}, this);\n          componentModel.optionUpdated({}, false);\n        } else {\n          var ComponentModelClass = ComponentModel.getClass(mainType, resultItem.keyInfo.subType, true);\n\n          if (componentModel && componentModel instanceof ComponentModelClass) {\n            componentModel.name = resultItem.keyInfo.name;\n            componentModel.mergeOption(newCptOption, this);\n            componentModel.optionUpdated(newCptOption, false);\n          } else {\n            // PENDING Global as parent ?\n            var extraOpt = zrUtil.extend({\n              dependentModels: dependentModels,\n              componentIndex: index\n            }, resultItem.keyInfo);\n            componentModel = new ComponentModelClass(newCptOption, this, this, extraOpt);\n            zrUtil.extend(componentModel, extraOpt);\n            componentModel.init(newCptOption, this, this, extraOpt); // Call optionUpdated after init.\n            // newCptOption has been used as componentModel.option\n            // and may be merged with theme and default, so pass null\n            // to avoid confusion.\n\n            componentModel.optionUpdated(null, true);\n          }\n        }\n\n        componentsMap.get(mainType)[index] = componentModel;\n        option[mainType][index] = componentModel.option;\n      }, this); // Backup series for filtering.\n\n      if (mainType === 'series') {\n        this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n      }\n    }\n  },\n\n  /**\n   * Get option for output (cloned option and inner info removed)\n   * @public\n   * @return {Object}\n   */\n  getOption: function () {\n    var option = zrUtil.clone(this.option);\n    each(option, function (opts, mainType) {\n      if (ComponentModel.hasClass(mainType)) {\n        var opts = modelUtil.normalizeToArray(opts);\n\n        for (var i = opts.length - 1; i >= 0; i--) {\n          // Remove options with inner id.\n          if (modelUtil.isIdInner(opts[i])) {\n            opts.splice(i, 1);\n          }\n        }\n\n        option[mainType] = opts;\n      }\n    });\n    delete option[OPTION_INNER_KEY];\n    return option;\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getTheme: function () {\n    return this._theme;\n  },\n\n  /**\n   * @param {string} mainType\n   * @param {number} [idx=0]\n   * @return {module:echarts/model/Component}\n   */\n  getComponent: function (mainType, idx) {\n    var list = this._componentsMap.get(mainType);\n\n    if (list) {\n      return list[idx || 0];\n    }\n  },\n\n  /**\n   * If none of index and id and name used, return all components with mainType.\n   * @param {Object} condition\n   * @param {string} condition.mainType\n   * @param {string} [condition.subType] If ignore, only query by mainType\n   * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  queryComponents: function (condition) {\n    var mainType = condition.mainType;\n\n    if (!mainType) {\n      return [];\n    }\n\n    var index = condition.index;\n    var id = condition.id;\n    var name = condition.name;\n\n    var cpts = this._componentsMap.get(mainType);\n\n    if (!cpts || !cpts.length) {\n      return [];\n    }\n\n    var result;\n\n    if (index != null) {\n      if (!isArray(index)) {\n        index = [index];\n      }\n\n      result = filter(map(index, function (idx) {\n        return cpts[idx];\n      }), function (val) {\n        return !!val;\n      });\n    } else if (id != null) {\n      var isIdArray = isArray(id);\n      result = filter(cpts, function (cpt) {\n        return isIdArray && indexOf(id, cpt.id) >= 0 || !isIdArray && cpt.id === id;\n      });\n    } else if (name != null) {\n      var isNameArray = isArray(name);\n      result = filter(cpts, function (cpt) {\n        return isNameArray && indexOf(name, cpt.name) >= 0 || !isNameArray && cpt.name === name;\n      });\n    } else {\n      // Return all components with mainType\n      result = cpts.slice();\n    }\n\n    return filterBySubType(result, condition);\n  },\n\n  /**\n   * The interface is different from queryComponents,\n   * which is convenient for inner usage.\n   *\n   * @usage\n   * var result = findComponents(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series'},\n   *     function (model, index) {...}\n   * );\n   * // result like [component0, componnet1, ...]\n   *\n   * @param {Object} condition\n   * @param {string} condition.mainType Mandatory.\n   * @param {string} [condition.subType] Optional.\n   * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n   *        where xxx is mainType.\n   *        If query attribute is null/undefined or has no index/id/name,\n   *        do not filtering by query conditions, which is convenient for\n   *        no-payload situations or when target of action is global.\n   * @param {Function} [condition.filter] parameter: component, return boolean.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  findComponents: function (condition) {\n    var query = condition.query;\n    var mainType = condition.mainType;\n    var queryCond = getQueryCond(query);\n    var result = queryCond ? this.queryComponents(queryCond) : this._componentsMap.get(mainType);\n    return doFilter(filterBySubType(result, condition));\n\n    function getQueryCond(q) {\n      var indexAttr = mainType + 'Index';\n      var idAttr = mainType + 'Id';\n      var nameAttr = mainType + 'Name';\n      return q && (q[indexAttr] != null || q[idAttr] != null || q[nameAttr] != null) ? {\n        mainType: mainType,\n        // subType will be filtered finally.\n        index: q[indexAttr],\n        id: q[idAttr],\n        name: q[nameAttr]\n      } : null;\n    }\n\n    function doFilter(res) {\n      return condition.filter ? filter(res, condition.filter) : res;\n    }\n  },\n\n  /**\n   * @usage\n   * eachComponent('legend', function (legendModel, index) {\n   *     ...\n   * });\n   * eachComponent(function (componentType, model, index) {\n   *     // componentType does not include subType\n   *     // (componentType is 'xxx' but not 'xxx.aa')\n   * });\n   * eachComponent(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n   *     function (model, index) {...}\n   * );\n   * eachComponent(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n   *     function (model, index) {...}\n   * );\n   *\n   * @param {string|Object=} mainType When mainType is object, the definition\n   *                                  is the same as the method 'findComponents'.\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachComponent: function (mainType, cb, context) {\n    var componentsMap = this._componentsMap;\n\n    if (typeof mainType === 'function') {\n      context = cb;\n      cb = mainType;\n      componentsMap.each(function (components, componentType) {\n        each(components, function (component, index) {\n          cb.call(context, componentType, component, index);\n        });\n      });\n    } else if (zrUtil.isString(mainType)) {\n      each(componentsMap.get(mainType), cb, context);\n    } else if (isObject(mainType)) {\n      var queryResult = this.findComponents(mainType);\n      each(queryResult, cb, context);\n    }\n  },\n\n  /**\n   * @param {string} name\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByName: function (name) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.name === name;\n    });\n  },\n\n  /**\n   * @param {number} seriesIndex\n   * @return {module:echarts/model/Series}\n   */\n  getSeriesByIndex: function (seriesIndex) {\n    return this._componentsMap.get('series')[seriesIndex];\n  },\n\n  /**\n   * @param {string} subType\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByType: function (subType) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.subType === subType;\n    });\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeries: function () {\n    return this._componentsMap.get('series').slice();\n  },\n\n  /**\n   * After filtering, series may be different\n   * frome raw series.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      cb.call(context, series, rawSeriesIndex);\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeries: function (cb, context) {\n    each(this._componentsMap.get('series'), cb, context);\n  },\n\n  /**\n   * After filtering, series may be different.\n   * frome raw series.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeriesByType: function (subType, cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      if (series.subType === subType) {\n        cb.call(context, series, rawSeriesIndex);\n      }\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered of given type.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeriesByType: function (subType, cb, context) {\n    return each(this.getSeriesByType(subType), cb, context);\n  },\n\n  /**\n   * @param {module:echarts/model/Series} seriesModel\n   */\n  isSeriesFiltered: function (seriesModel) {\n    assertSeriesInitialized(this);\n    return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getCurrentSeriesIndices: function () {\n    return (this._seriesIndices || []).slice();\n  },\n\n  /**\n   * @param {Function} cb\n   * @param {*} context\n   */\n  filterSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    var filteredSeries = filter(this._componentsMap.get('series'), cb, context);\n    this._seriesIndices = createSeriesIndices(filteredSeries);\n  },\n  restoreData: function () {\n    var componentsMap = this._componentsMap;\n    this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n    var componentTypes = [];\n    componentsMap.each(function (components, componentType) {\n      componentTypes.push(componentType);\n    });\n    ComponentModel.topologicalTravel(componentTypes, ComponentModel.getAllClassMainTypes(), function (componentType, dependencies) {\n      each(componentsMap.get(componentType), function (component) {\n        component.restoreData();\n      });\n    });\n  }\n});\n/**\n * @inner\n */\n\nfunction mergeTheme(option, theme) {\n  zrUtil.each(theme, function (themeItem, name) {\n    // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n    if (!ComponentModel.hasClass(name)) {\n      if (typeof themeItem === 'object') {\n        option[name] = !option[name] ? zrUtil.clone(themeItem) : zrUtil.merge(option[name], themeItem, false);\n      } else {\n        if (option[name] == null) {\n          option[name] = themeItem;\n        }\n      }\n    }\n  });\n}\n\nfunction initBase(baseOption) {\n  baseOption = baseOption; // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n  // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n\n  this.option = {};\n  this.option[OPTION_INNER_KEY] = 1;\n  /**\n   * Init with series: [], in case of calling findSeries method\n   * before series initialized.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @private\n   */\n\n  this._componentsMap = zrUtil.createHashMap({\n    series: []\n  });\n  /**\n   * Mapping between filtered series list and raw series list.\n   * key: filtered series indices, value: raw series indices.\n   * @type {Array.<nubmer>}\n   * @private\n   */\n\n  this._seriesIndices = null;\n  mergeTheme(baseOption, this._theme.option); // TODO Needs clone when merging to the unexisted property\n\n  zrUtil.merge(baseOption, globalDefault, false);\n  this.mergeOption(baseOption);\n}\n/**\n * @inner\n * @param {Array.<string>|string} types model types\n * @return {Object} key: {string} type, value: {Array.<Object>} models\n */\n\n\nfunction getComponentsByTypes(componentsMap, types) {\n  if (!zrUtil.isArray(types)) {\n    types = types ? [types] : [];\n  }\n\n  var ret = {};\n  each(types, function (type) {\n    ret[type] = (componentsMap.get(type) || []).slice();\n  });\n  return ret;\n}\n/**\n * @inner\n */\n\n\nfunction determineSubType(mainType, newCptOption, existComponent) {\n  var subType = newCptOption.type ? newCptOption.type : existComponent ? existComponent.subType // Use determineSubType only when there is no existComponent.\n  : ComponentModel.determineSubType(mainType, newCptOption); // tooltip, markline, markpoint may always has no subType\n\n  return subType;\n}\n/**\n * @inner\n */\n\n\nfunction createSeriesIndices(seriesModels) {\n  return map(seriesModels, function (series) {\n    return series.componentIndex;\n  }) || [];\n}\n/**\n * @inner\n */\n\n\nfunction filterBySubType(components, condition) {\n  // Using hasOwnProperty for restrict. Consider\n  // subType is undefined in user payload.\n  return condition.hasOwnProperty('subType') ? filter(components, function (cpt) {\n    return cpt.subType === condition.subType;\n  }) : components;\n}\n/**\n * @inner\n */\n\n\nfunction assertSeriesInitialized(ecModel) {}\n\nzrUtil.mixin(GlobalModel, colorPaletteMinin);\nvar _default = GlobalModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/Global.js\n// module id = 1101\n// module chunks = 0 1 2","var makeStyleMapper = require(\"./makeStyleMapper\");\n\nvar getLineStyle = makeStyleMapper([['lineWidth', 'width'], ['stroke', 'color'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\nvar _default = {\n  getLineStyle: function (excludes) {\n    var style = getLineStyle(this, excludes);\n    var lineDash = this.getLineDash(style.lineWidth);\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getLineDash: function (lineWidth) {\n    if (lineWidth == null) {\n      lineWidth = 1;\n    }\n\n    var lineType = this.get('type');\n    var dotSize = Math.max(lineWidth, 2);\n    var dashSize = lineWidth * 4;\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize];\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/mixin/lineStyle.js\n// module id = 1102\n// module chunks = 0 1 2","var makeStyleMapper = require(\"./makeStyleMapper\");\n\nvar getAreaStyle = makeStyleMapper([['fill', 'color'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['opacity'], ['shadowColor']]);\nvar _default = {\n  getAreaStyle: function (excludes, includes) {\n    return getAreaStyle(this, excludes, includes);\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/mixin/areaStyle.js\n// module id = 1103\n// module chunks = 0 1 2","var textContain = require(\"zrender/lib/contain/text\");\n\nvar graphicUtil = require(\"../../util/graphic\");\n\nvar PATH_COLOR = ['textStyle', 'color'];\nvar _default = {\n  /**\n   * Get color property or get color from option.textStyle.color\n   * @param {boolean} [isEmphasis]\n   * @return {string}\n   */\n  getTextColor: function (isEmphasis) {\n    var ecModel = this.ecModel;\n    return this.getShallow('color') || (!isEmphasis && ecModel ? ecModel.get(PATH_COLOR) : null);\n  },\n\n  /**\n   * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n   * @return {string}\n   */\n  getFont: function () {\n    return graphicUtil.getFont({\n      fontStyle: this.getShallow('fontStyle'),\n      fontWeight: this.getShallow('fontWeight'),\n      fontSize: this.getShallow('fontSize'),\n      fontFamily: this.getShallow('fontFamily')\n    }, this.ecModel);\n  },\n  getTextRect: function (text) {\n    return textContain.getBoundingRect(text, this.getFont(), this.getShallow('align'), this.getShallow('verticalAlign') || this.getShallow('baseline'), this.getShallow('padding'), this.getShallow('rich'), this.getShallow('truncateText'));\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/mixin/textStyle.js\n// module id = 1104\n// module chunks = 0 1 2","var Path = require(\"../graphic/Path\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar transformPath = require(\"./transformPath\");\n\n// command chars\nvar cc = ['m', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z', 'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'];\nvar mathSqrt = Math.sqrt;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI = Math.PI;\n\nvar vMag = function (v) {\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n};\n\nvar vRatio = function (u, v) {\n  return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n};\n\nvar vAngle = function (u, v) {\n  return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n};\n\nfunction processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n  var psi = psiDeg * (PI / 180.0);\n  var xp = mathCos(psi) * (x1 - x2) / 2.0 + mathSin(psi) * (y1 - y2) / 2.0;\n  var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0 + mathCos(psi) * (y1 - y2) / 2.0;\n  var lambda = xp * xp / (rx * rx) + yp * yp / (ry * ry);\n\n  if (lambda > 1) {\n    rx *= mathSqrt(lambda);\n    ry *= mathSqrt(lambda);\n  }\n\n  var f = (fa === fs ? -1 : 1) * mathSqrt((rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) / (rx * rx * (yp * yp) + ry * ry * (xp * xp))) || 0;\n  var cxp = f * rx * yp / ry;\n  var cyp = f * -ry * xp / rx;\n  var cx = (x1 + x2) / 2.0 + mathCos(psi) * cxp - mathSin(psi) * cyp;\n  var cy = (y1 + y2) / 2.0 + mathSin(psi) * cxp + mathCos(psi) * cyp;\n  var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n  var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n  var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n  var dTheta = vAngle(u, v);\n\n  if (vRatio(u, v) <= -1) {\n    dTheta = PI;\n  }\n\n  if (vRatio(u, v) >= 1) {\n    dTheta = 0;\n  }\n\n  if (fs === 0 && dTheta > 0) {\n    dTheta = dTheta - 2 * PI;\n  }\n\n  if (fs === 1 && dTheta < 0) {\n    dTheta = dTheta + 2 * PI;\n  }\n\n  path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n}\n\nfunction createPathProxyFromString(data) {\n  if (!data) {\n    return [];\n  } // command string\n\n\n  var cs = data.replace(/-/g, ' -').replace(/  /g, ' ').replace(/ /g, ',').replace(/,,/g, ',');\n  var n; // create pipes so that we can split the data\n\n  for (n = 0; n < cc.length; n++) {\n    cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n  } // create array\n\n\n  var arr = cs.split('|'); // init context point\n\n  var cpx = 0;\n  var cpy = 0;\n  var path = new PathProxy();\n  var CMD = PathProxy.CMD;\n  var prevCmd;\n\n  for (n = 1; n < arr.length; n++) {\n    var str = arr[n];\n    var c = str.charAt(0);\n    var off = 0;\n    var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n    var cmd;\n\n    if (p.length > 0 && p[0] === '') {\n      p.shift();\n    }\n\n    for (var i = 0; i < p.length; i++) {\n      p[i] = parseFloat(p[i]);\n    }\n\n    while (off < p.length && !isNaN(p[off])) {\n      if (isNaN(p[0])) {\n        break;\n      }\n\n      var ctlPtx;\n      var ctlPty;\n      var rx;\n      var ry;\n      var psi;\n      var fa;\n      var fs;\n      var x1 = cpx;\n      var y1 = cpy; // convert l, H, h, V, and v to L\n\n      switch (c) {\n        case 'l':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'L':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'm':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'l';\n          break;\n\n        case 'M':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'L';\n          break;\n\n        case 'h':\n          cpx += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'H':\n          cpx = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'v':\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'V':\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'C':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]);\n          cpx = p[off - 2];\n          cpy = p[off - 1];\n          break;\n\n        case 'c':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy);\n          cpx += p[off - 2];\n          cpy += p[off - 1];\n          break;\n\n        case 'S':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 's':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = cpx + p[off++];\n          y1 = cpy + p[off++];\n          cpx += p[off++];\n          cpy += p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 'Q':\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'q':\n          x1 = p[off++] + cpx;\n          y1 = p[off++] + cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'T':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 't':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 'A':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n\n        case 'a':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n      }\n    }\n\n    if (c === 'z' || c === 'Z') {\n      cmd = CMD.Z;\n      path.addData(cmd);\n    }\n\n    prevCmd = cmd;\n  }\n\n  path.toStatic();\n  return path;\n} // TODO Optimize double memory cost problem\n\n\nfunction createPathOptions(str, opts) {\n  var pathProxy = createPathProxyFromString(str);\n  opts = opts || {};\n\n  opts.buildPath = function (path) {\n    if (path.setData) {\n      path.setData(pathProxy.data); // Svg and vml renderer don't have context\n\n      var ctx = path.getContext();\n\n      if (ctx) {\n        path.rebuildPath(ctx);\n      }\n    } else {\n      var ctx = path;\n      pathProxy.rebuildPath(ctx);\n    }\n  };\n\n  opts.applyTransform = function (m) {\n    transformPath(pathProxy, m);\n    this.dirty(true);\n  };\n\n  return opts;\n}\n/**\n * Create a Path object from path string data\n * http://www.w3.org/TR/SVG/paths.html#PathData\n * @param  {Object} opts Other options\n */\n\n\nfunction createFromString(str, opts) {\n  return new Path(createPathOptions(str, opts));\n}\n/**\n * Create a Path class from path string data\n * @param  {string} str\n * @param  {Object} opts Other options\n */\n\n\nfunction extendFromString(str, opts) {\n  return Path.extend(createPathOptions(str, opts));\n}\n/**\n * Merge multiple paths\n */\n// TODO Apply transform\n// TODO stroke dash\n// TODO Optimize double memory cost problem\n\n\nfunction mergePath(pathEls, opts) {\n  var pathList = [];\n  var len = pathEls.length;\n\n  for (var i = 0; i < len; i++) {\n    var pathEl = pathEls[i];\n\n    if (!pathEl.path) {\n      pathEl.createPathProxy();\n    }\n\n    if (pathEl.__dirtyPath) {\n      pathEl.buildPath(pathEl.path, pathEl.shape, true);\n    }\n\n    pathList.push(pathEl.path);\n  }\n\n  var pathBundle = new Path(opts); // Need path proxy.\n\n  pathBundle.createPathProxy();\n\n  pathBundle.buildPath = function (path) {\n    path.appendPath(pathList); // Svg and vml renderer don't have context\n\n    var ctx = path.getContext();\n\n    if (ctx) {\n      path.rebuildPath(ctx);\n    }\n  };\n\n  return pathBundle;\n}\n\nexports.createFromString = createFromString;\nexports.extendFromString = extendFromString;\nexports.mergePath = mergePath;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/tool/path.js\n// module id = 1105\n// module chunks = 0 1 2","var PathProxy = require(\"../core/PathProxy\");\n\nvar line = require(\"./line\");\n\nvar cubic = require(\"./cubic\");\n\nvar quadratic = require(\"./quadratic\");\n\nvar arc = require(\"./arc\");\n\nvar _util = require(\"./util\");\n\nvar normalizeRadian = _util.normalizeRadian;\n\nvar curve = require(\"../core/curve\");\n\nvar windingLine = require(\"./windingLine\");\n\nvar CMD = PathProxy.CMD;\nvar PI2 = Math.PI * 2;\nvar EPSILON = 1e-4;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n} // 临时数组\n\n\nvar roots = [-1, -1, -1];\nvar extrema = [-1, -1];\n\nfunction swapExtrema() {\n  var tmp = extrema[0];\n  extrema[0] = extrema[1];\n  extrema[1] = tmp;\n}\n\nfunction windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 && y > y3 || y < y0 && y < y1 && y < y2 && y < y3) {\n    return 0;\n  }\n\n  var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var w = 0;\n    var nExtrema = -1;\n    var y0_, y1_;\n\n    for (var i = 0; i < nRoots; i++) {\n      var t = roots[i]; // Avoid winding error when intersection point is the connect point of two line of polygon\n\n      var unit = t === 0 || t === 1 ? 0.5 : 1;\n      var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n\n      if (x_ < x) {\n        // Quick reject\n        continue;\n      }\n\n      if (nExtrema < 0) {\n        nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n\n        if (extrema[1] < extrema[0] && nExtrema > 1) {\n          swapExtrema();\n        }\n\n        y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n\n        if (nExtrema > 1) {\n          y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n        }\n      }\n\n      if (nExtrema == 2) {\n        // 分成三段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else if (t < extrema[1]) {\n          w += y1_ < y0_ ? unit : -unit;\n        } else {\n          w += y3 < y1_ ? unit : -unit;\n        }\n      } else {\n        // 分成两段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else {\n          w += y3 < y0_ ? unit : -unit;\n        }\n      }\n    }\n\n    return w;\n  }\n}\n\nfunction windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 || y < y0 && y < y1 && y < y2) {\n    return 0;\n  }\n\n  var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var t = curve.quadraticExtremum(y0, y1, y2);\n\n    if (t >= 0 && t <= 1) {\n      var w = 0;\n      var y_ = curve.quadraticAt(y0, y1, y2, t);\n\n      for (var i = 0; i < nRoots; i++) {\n        // Remove one endpoint.\n        var unit = roots[i] === 0 || roots[i] === 1 ? 0.5 : 1;\n        var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n\n        if (x_ < x) {\n          // Quick reject\n          continue;\n        }\n\n        if (roots[i] < t) {\n          w += y_ < y0 ? unit : -unit;\n        } else {\n          w += y2 < y_ ? unit : -unit;\n        }\n      }\n\n      return w;\n    } else {\n      // Remove one endpoint.\n      var unit = roots[0] === 0 || roots[0] === 1 ? 0.5 : 1;\n      var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n\n      if (x_ < x) {\n        // Quick reject\n        return 0;\n      }\n\n      return y2 < y0 ? unit : -unit;\n    }\n  }\n} // TODO\n// Arc 旋转\n\n\nfunction windingArc(cx, cy, r, startAngle, endAngle, anticlockwise, x, y) {\n  y -= cy;\n\n  if (y > r || y < -r) {\n    return 0;\n  }\n\n  var tmp = Math.sqrt(r * r - y * y);\n  roots[0] = -tmp;\n  roots[1] = tmp;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff < 1e-4) {\n    return 0;\n  }\n\n  if (diff % PI2 < 1e-4) {\n    // Is a circle\n    startAngle = 0;\n    endAngle = PI2;\n    var dir = anticlockwise ? 1 : -1;\n\n    if (x >= roots[0] + cx && x <= roots[1] + cx) {\n      return dir;\n    } else {\n      return 0;\n    }\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var w = 0;\n\n  for (var i = 0; i < 2; i++) {\n    var x_ = roots[i];\n\n    if (x_ + cx > x) {\n      var angle = Math.atan2(y, x_);\n      var dir = anticlockwise ? 1 : -1;\n\n      if (angle < 0) {\n        angle = PI2 + angle;\n      }\n\n      if (angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle) {\n        if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n          dir = -dir;\n        }\n\n        w += dir;\n      }\n    }\n  }\n\n  return w;\n}\n\nfunction containPath(data, lineWidth, isStroke, x, y) {\n  var w = 0;\n  var xi = 0;\n  var yi = 0;\n  var x0 = 0;\n  var y0 = 0;\n\n  for (var i = 0; i < data.length;) {\n    var cmd = data[i++]; // Begin a new subpath\n\n    if (cmd === CMD.M && i > 1) {\n      // Close previous subpath\n      if (!isStroke) {\n        w += windingLine(xi, yi, x0, y0, x, y);\n      } // 如果被任何一个 subpath 包含\n      // if (w !== 0) {\n      //     return true;\n      // }\n\n    }\n\n    if (i == 1) {\n      // 如果第一个命令是 L, C, Q\n      // 则 previous point 同绘制命令的第一个 point\n      //\n      // 第一个命令为 Arc 的情况下会在后面特殊处理\n      xi = data[i];\n      yi = data[i + 1];\n      x0 = xi;\n      y0 = yi;\n    }\n\n    switch (cmd) {\n      case CMD.M:\n        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n        // 在 closePath 的时候使用\n        x0 = data[i++];\n        y0 = data[i++];\n        xi = x0;\n        yi = y0;\n        break;\n\n      case CMD.L:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n          w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.C:\n        if (isStroke) {\n          if (cubic.containStroke(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.Q:\n        if (isStroke) {\n          if (quadratic.containStroke(xi, yi, data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.A:\n        // TODO Arc 判断的开销比较大\n        var cx = data[i++];\n        var cy = data[i++];\n        var rx = data[i++];\n        var ry = data[i++];\n        var theta = data[i++];\n        var dTheta = data[i++]; // TODO Arc 旋转\n\n        var psi = data[i++];\n        var anticlockwise = 1 - data[i++];\n        var x1 = Math.cos(theta) * rx + cx;\n        var y1 = Math.sin(theta) * ry + cy; // 不是直接使用 arc 命令\n\n        if (i > 1) {\n          w += windingLine(xi, yi, x1, y1, x, y);\n        } else {\n          // 第一个命令起点还未定义\n          x0 = x1;\n          y0 = y1;\n        } // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n\n\n        var _x = (x - cx) * ry / rx + cx;\n\n        if (isStroke) {\n          if (arc.containStroke(cx, cy, ry, theta, theta + dTheta, anticlockwise, lineWidth, _x, y)) {\n            return true;\n          }\n        } else {\n          w += windingArc(cx, cy, ry, theta, theta + dTheta, anticlockwise, _x, y);\n        }\n\n        xi = Math.cos(theta + dTheta) * rx + cx;\n        yi = Math.sin(theta + dTheta) * ry + cy;\n        break;\n\n      case CMD.R:\n        x0 = xi = data[i++];\n        y0 = yi = data[i++];\n        var width = data[i++];\n        var height = data[i++];\n        var x1 = x0 + width;\n        var y1 = y0 + height;\n\n        if (isStroke) {\n          if (line.containStroke(x0, y0, x1, y0, lineWidth, x, y) || line.containStroke(x1, y0, x1, y1, lineWidth, x, y) || line.containStroke(x1, y1, x0, y1, lineWidth, x, y) || line.containStroke(x0, y1, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // FIXME Clockwise ?\n          w += windingLine(x1, y0, x1, y1, x, y);\n          w += windingLine(x0, y1, x0, y0, x, y);\n        }\n\n        break;\n\n      case CMD.Z:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // Close a subpath\n          w += windingLine(xi, yi, x0, y0, x, y); // 如果被任何一个 subpath 包含\n          // FIXME subpaths may overlap\n          // if (w !== 0) {\n          //     return true;\n          // }\n        }\n\n        xi = x0;\n        yi = y0;\n        break;\n    }\n  }\n\n  if (!isStroke && !isAroundEqual(yi, y0)) {\n    w += windingLine(xi, yi, x0, y0, x, y) || 0;\n  }\n\n  return w !== 0;\n}\n\nfunction contain(pathData, x, y) {\n  return containPath(pathData, 0, false, x, y);\n}\n\nfunction containStroke(pathData, lineWidth, x, y) {\n  return containPath(pathData, lineWidth, true, x, y);\n}\n\nexports.contain = contain;\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/contain/path.js\n// module id = 1106\n// module chunks = 0 1 2","var curve = require(\"../core/curve\");\n\n/**\n * 三次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  x3\n * @param  {number}  y3\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l) {\n    return false;\n  }\n\n  var d = curve.cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/contain/cubic.js\n// module id = 1107\n// module chunks = 0 1 2","var _util = require(\"./util\");\n\nvar normalizeRadian = _util.normalizeRadian;\nvar PI2 = Math.PI * 2;\n/**\n * 圆弧描边包含判断\n * @param  {number}  cx\n * @param  {number}  cy\n * @param  {number}  r\n * @param  {number}  startAngle\n * @param  {number}  endAngle\n * @param  {boolean}  anticlockwise\n * @param  {number} lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {Boolean}\n */\n\nfunction containStroke(cx, cy, r, startAngle, endAngle, anticlockwise, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  x -= cx;\n  y -= cy;\n  var d = Math.sqrt(x * x + y * y);\n\n  if (d - _l > r || d + _l < r) {\n    return false;\n  }\n\n  if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n    // Is a circle\n    return true;\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var angle = Math.atan2(y, x);\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle;\n}\n\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/contain/arc.js\n// module id = 1108\n// module chunks = 0 1 2","var PathProxy = require(\"../core/PathProxy\");\n\nvar _vector = require(\"../core/vector\");\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar CMD = PathProxy.CMD;\nvar points = [[], [], []];\nvar mathSqrt = Math.sqrt;\nvar mathAtan2 = Math.atan2;\n\nfunction _default(path, m) {\n  var data = path.data;\n  var cmd;\n  var nPoint;\n  var i;\n  var j;\n  var k;\n  var p;\n  var M = CMD.M;\n  var C = CMD.C;\n  var L = CMD.L;\n  var R = CMD.R;\n  var A = CMD.A;\n  var Q = CMD.Q;\n\n  for (i = 0, j = 0; i < data.length;) {\n    cmd = data[i++];\n    j = i;\n    nPoint = 0;\n\n    switch (cmd) {\n      case M:\n        nPoint = 1;\n        break;\n\n      case L:\n        nPoint = 1;\n        break;\n\n      case C:\n        nPoint = 3;\n        break;\n\n      case Q:\n        nPoint = 2;\n        break;\n\n      case A:\n        var x = m[4];\n        var y = m[5];\n        var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n        var angle = mathAtan2(-m[1] / sy, m[0] / sx); // cx\n\n        data[i] *= sx;\n        data[i++] += x; // cy\n\n        data[i] *= sy;\n        data[i++] += y; // Scale rx and ry\n        // FIXME Assume psi is 0 here\n\n        data[i++] *= sx;\n        data[i++] *= sy; // Start angle\n\n        data[i++] += angle; // end angle\n\n        data[i++] += angle; // FIXME psi\n\n        i += 2;\n        j = i;\n        break;\n\n      case R:\n        // x0, y0\n        p[0] = data[i++];\n        p[1] = data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1]; // x1, y1\n\n        p[0] += data[i++];\n        p[1] += data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1];\n    }\n\n    for (k = 0; k < nPoint; k++) {\n      var p = points[k];\n      p[0] = data[i++];\n      p[1] = data[i++];\n      v2ApplyTransform(p, p, m); // Write back\n\n      data[j++] = p[0];\n      data[j++] = p[1];\n    }\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/tool/transformPath.js\n// module id = 1109\n// module chunks = 0 1 2","var Path = require(\"../Path\");\n\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\nvar _default = Path.extend({\n  type: 'circle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    // Better stroking in ShapeBundle\n    // Always do it may have performence issue ( fill may be 2x more cost)\n    if (inBundle) {\n      ctx.moveTo(shape.cx + shape.r, shape.cy);\n    } // else {\n    //     if (ctx.allocate && !ctx.data.length) {\n    //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n    //     }\n    // }\n    // Better stroking in ShapeBundle\n    // ctx.moveTo(shape.cx + shape.r, shape.cy);\n\n\n    ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/shape/Circle.js\n// module id = 1110\n// module chunks = 0 1 2","var Path = require(\"../Path\");\n\nvar fixClipWithShadow = require(\"../helper/fixClipWithShadow\");\n\n/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\nvar _default = Path.extend({\n  type: 'sector',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r0: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r0 = Math.max(shape.r0 || 0, 0);\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n    ctx.lineTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n    ctx.lineTo(Math.cos(endAngle) * r0 + x, Math.sin(endAngle) * r0 + y);\n\n    if (r0 !== 0) {\n      ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n    }\n\n    ctx.closePath();\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/shape/Sector.js\n// module id = 1111\n// module chunks = 0 1 2","var Path = require(\"../Path\");\n\n/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\nvar _default = Path.extend({\n  type: 'ring',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    r0: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var PI2 = Math.PI * 2;\n    ctx.moveTo(x + shape.r, y);\n    ctx.arc(x, y, shape.r, 0, PI2, false);\n    ctx.moveTo(x + shape.r0, y);\n    ctx.arc(x, y, shape.r0, 0, PI2, true);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/shape/Ring.js\n// module id = 1112\n// module chunks = 0 1 2","var Path = require(\"../Path\");\n\nvar polyHelper = require(\"../helper/poly\");\n\n/**\n * 多边形\n * @module zrender/shape/Polygon\n */\nvar _default = Path.extend({\n  type: 'polygon',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, true);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/shape/Polygon.js\n// module id = 1113\n// module chunks = 0 1 2","var _vector = require(\"../../core/vector\");\n\nvar v2Distance = _vector.distance;\n\n/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * @inner\n */\nfunction interpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n/**\n * @alias module:zrender/shape/util/smoothSpline\n * @param {Array} points 线段顶点数组\n * @param {boolean} isLoop\n * @return {Array}\n */\n\n\nfunction _default(points, isLoop) {\n  var len = points.length;\n  var ret = [];\n  var distance = 0;\n\n  for (var i = 1; i < len; i++) {\n    distance += v2Distance(points[i - 1], points[i]);\n  }\n\n  var segs = distance / 2;\n  segs = segs < len ? len : segs;\n\n  for (var i = 0; i < segs; i++) {\n    var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n    var idx = Math.floor(pos);\n    var w = pos - idx;\n    var p0;\n    var p1 = points[idx % len];\n    var p2;\n    var p3;\n\n    if (!isLoop) {\n      p0 = points[idx === 0 ? idx : idx - 1];\n      p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n      p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n    } else {\n      p0 = points[(idx - 1 + len) % len];\n      p2 = points[(idx + 1) % len];\n      p3 = points[(idx + 2) % len];\n    }\n\n    var w2 = w * w;\n    var w3 = w * w2;\n    ret.push([interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3), interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)]);\n  }\n\n  return ret;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/helper/smoothSpline.js\n// module id = 1114\n// module chunks = 0 1 2","var _vector = require(\"../../core/vector\");\n\nvar v2Min = _vector.min;\nvar v2Max = _vector.max;\nvar v2Scale = _vector.scale;\nvar v2Distance = _vector.distance;\nvar v2Add = _vector.add;\nvar v2Clone = _vector.clone;\nvar v2Sub = _vector.sub;\n\n/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * 贝塞尔平滑曲线\n * @alias module:zrender/shape/util/smoothBezier\n * @param {Array} points 线段顶点数组\n * @param {number} smooth 平滑等级, 0-1\n * @param {boolean} isLoop\n * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n *                           整个折线的包围盒做一个并集用来约束控制点。\n * @param {Array} 计算出来的控制点数组\n */\nfunction _default(points, smooth, isLoop, constraint) {\n  var cps = [];\n  var v = [];\n  var v1 = [];\n  var v2 = [];\n  var prevPoint;\n  var nextPoint;\n  var min, max;\n\n  if (constraint) {\n    min = [Infinity, Infinity];\n    max = [-Infinity, -Infinity];\n\n    for (var i = 0, len = points.length; i < len; i++) {\n      v2Min(min, min, points[i]);\n      v2Max(max, max, points[i]);\n    } // 与指定的包围盒做并集\n\n\n    v2Min(min, min, constraint[0]);\n    v2Max(max, max, constraint[1]);\n  }\n\n  for (var i = 0, len = points.length; i < len; i++) {\n    var point = points[i];\n\n    if (isLoop) {\n      prevPoint = points[i ? i - 1 : len - 1];\n      nextPoint = points[(i + 1) % len];\n    } else {\n      if (i === 0 || i === len - 1) {\n        cps.push(v2Clone(points[i]));\n        continue;\n      } else {\n        prevPoint = points[i - 1];\n        nextPoint = points[i + 1];\n      }\n    }\n\n    v2Sub(v, nextPoint, prevPoint); // use degree to scale the handle length\n\n    v2Scale(v, v, smooth);\n    var d0 = v2Distance(point, prevPoint);\n    var d1 = v2Distance(point, nextPoint);\n    var sum = d0 + d1;\n\n    if (sum !== 0) {\n      d0 /= sum;\n      d1 /= sum;\n    }\n\n    v2Scale(v1, v, -d0);\n    v2Scale(v2, v, d1);\n    var cp0 = v2Add([], point, v1);\n    var cp1 = v2Add([], point, v2);\n\n    if (constraint) {\n      v2Max(cp0, cp0, min);\n      v2Min(cp0, cp0, max);\n      v2Max(cp1, cp1, min);\n      v2Min(cp1, cp1, max);\n    }\n\n    cps.push(cp0);\n    cps.push(cp1);\n  }\n\n  if (isLoop) {\n    cps.push(cps.shift());\n  }\n\n  return cps;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/helper/smoothBezier.js\n// module id = 1115\n// module chunks = 0 1 2","var Path = require(\"../Path\");\n\nvar polyHelper = require(\"../helper/poly\");\n\n/**\n * @module zrender/graphic/shape/Polyline\n */\nvar _default = Path.extend({\n  type: 'polyline',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, false);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/shape/Polyline.js\n// module id = 1116\n// module chunks = 0 1 2","var Path = require(\"../Path\");\n\nvar roundRectHelper = require(\"../helper/roundRect\");\n\n/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\nvar _default = Path.extend({\n  type: 'rect',\n  shape: {\n    // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n    // r缩写为1         相当于 [1, 1, 1, 1]\n    // r缩写为[1]       相当于 [1, 1, 1, 1]\n    // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n    // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n    r: 0,\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var width = shape.width;\n    var height = shape.height;\n\n    if (!shape.r) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, shape);\n    }\n\n    ctx.closePath();\n    return;\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/shape/Rect.js\n// module id = 1117\n// module chunks = 0 1 2","var Path = require(\"../Path\");\n\n/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\nvar _default = Path.extend({\n  type: 'line',\n  shape: {\n    // Start point\n    x1: 0,\n    y1: 0,\n    // End point\n    x2: 0,\n    y2: 0,\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (percent < 1) {\n      x2 = x1 * (1 - percent) + x2 * percent;\n      y2 = y1 * (1 - percent) + y2 * percent;\n    }\n\n    ctx.lineTo(x2, y2);\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} percent\n   * @return {Array.<number>}\n   */\n  pointAt: function (p) {\n    var shape = this.shape;\n    return [shape.x1 * (1 - p) + shape.x2 * p, shape.y1 * (1 - p) + shape.y2 * p];\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/shape/Line.js\n// module id = 1118\n// module chunks = 0 1 2","var Path = require(\"../Path\");\n\nvar vec2 = require(\"../../core/vector\");\n\nvar _curve = require(\"../../core/curve\");\n\nvar quadraticSubdivide = _curve.quadraticSubdivide;\nvar cubicSubdivide = _curve.cubicSubdivide;\nvar quadraticAt = _curve.quadraticAt;\nvar cubicAt = _curve.cubicAt;\nvar quadraticDerivativeAt = _curve.quadraticDerivativeAt;\nvar cubicDerivativeAt = _curve.cubicDerivativeAt;\n\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\nvar out = [];\n\nfunction someVectorAt(shape, t, isTangent) {\n  var cpx2 = shape.cpx2;\n  var cpy2 = shape.cpy2;\n\n  if (cpx2 === null || cpy2 === null) {\n    return [(isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t), (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)];\n  } else {\n    return [(isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t), (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)];\n  }\n}\n\nvar _default = Path.extend({\n  type: 'bezier-curve',\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    cpx1: 0,\n    cpy1: 0,\n    // cpx2: 0,\n    // cpy2: 0\n    // Curve show percent, for animating\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var cpx1 = shape.cpx1;\n    var cpy1 = shape.cpy1;\n    var cpx2 = shape.cpx2;\n    var cpy2 = shape.cpy2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (cpx2 == null || cpy2 == null) {\n      if (percent < 1) {\n        quadraticSubdivide(x1, cpx1, x2, percent, out);\n        cpx1 = out[1];\n        x2 = out[2];\n        quadraticSubdivide(y1, cpy1, y2, percent, out);\n        cpy1 = out[1];\n        y2 = out[2];\n      }\n\n      ctx.quadraticCurveTo(cpx1, cpy1, x2, y2);\n    } else {\n      if (percent < 1) {\n        cubicSubdivide(x1, cpx1, cpx2, x2, percent, out);\n        cpx1 = out[1];\n        cpx2 = out[2];\n        x2 = out[3];\n        cubicSubdivide(y1, cpy1, cpy2, y2, percent, out);\n        cpy1 = out[1];\n        cpy2 = out[2];\n        y2 = out[3];\n      }\n\n      ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\n    }\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  pointAt: function (t) {\n    return someVectorAt(this.shape, t, false);\n  },\n\n  /**\n   * Get tangent at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  tangentAt: function (t) {\n    var p = someVectorAt(this.shape, t, true);\n    return vec2.normalize(p, p);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/shape/BezierCurve.js\n// module id = 1119\n// module chunks = 0 1 2","var Path = require(\"../Path\");\n\n/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\nvar _default = Path.extend({\n  type: 'arc',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/shape/Arc.js\n// module id = 1120\n// module chunks = 0 1 2","var Path = require(\"./Path\");\n\n// CompoundPath to improve performance\nvar _default = Path.extend({\n  type: 'compound',\n  shape: {\n    paths: null\n  },\n  _updatePathDirty: function () {\n    var dirtyPath = this.__dirtyPath;\n    var paths = this.shape.paths;\n\n    for (var i = 0; i < paths.length; i++) {\n      // Mark as dirty if any subpath is dirty\n      dirtyPath = dirtyPath || paths[i].__dirtyPath;\n    }\n\n    this.__dirtyPath = dirtyPath;\n    this.__dirty = this.__dirty || dirtyPath;\n  },\n  beforeBrush: function () {\n    this._updatePathDirty();\n\n    var paths = this.shape.paths || [];\n    var scale = this.getGlobalScale(); // Update path scale\n\n    for (var i = 0; i < paths.length; i++) {\n      if (!paths[i].path) {\n        paths[i].createPathProxy();\n      }\n\n      paths[i].path.setScale(scale[0], scale[1]);\n    }\n  },\n  buildPath: function (ctx, shape) {\n    var paths = shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].buildPath(ctx, paths[i].shape, true);\n    }\n  },\n  afterBrush: function () {\n    var paths = this.shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].__dirtyPath = false;\n    }\n  },\n  getBoundingRect: function () {\n    this._updatePathDirty();\n\n    return Path.prototype.getBoundingRect.call(this);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/CompoundPath.js\n// module id = 1121\n// module chunks = 0 1 2","var zrUtil = require(\"../core/util\");\n\nvar Gradient = require(\"./Gradient\");\n\n/**\n * x, y, r are all percent from 0 to 1\n * @param {number} [x=0.5]\n * @param {number} [y=0.5]\n * @param {number} [r=0.5]\n * @param {Array.<Object>} [colorStops]\n * @param {boolean} [globalCoord=false]\n */\nvar RadialGradient = function (x, y, r, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'radial', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0.5 : x;\n  this.y = y == null ? 0.5 : y;\n  this.r = r == null ? 0.5 : r; // Can be cloned\n\n  this.type = 'radial'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nRadialGradient.prototype = {\n  constructor: RadialGradient\n};\nzrUtil.inherits(RadialGradient, Gradient);\nvar _default = RadialGradient;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/RadialGradient.js\n// module id = 1122\n// module chunks = 0 1 2","var makeStyleMapper = require(\"./makeStyleMapper\");\n\nvar getItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor'], ['textPosition'], ['textAlign']]);\nvar _default = {\n  getItemStyle: function (excludes, includes) {\n    var style = getItemStyle(this, excludes, includes);\n    var lineDash = this.getBorderLineDash();\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getBorderLineDash: function () {\n    var lineType = this.get('borderType');\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [5, 5] : [1, 1];\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/mixin/itemStyle.js\n// module id = 1123\n// module chunks = 0 1 2","var _default = {\n  getBoxLayoutParams: function () {\n    return {\n      left: this.get('left'),\n      top: this.get('top'),\n      right: this.get('right'),\n      bottom: this.get('bottom'),\n      width: this.get('width'),\n      height: this.get('height')\n    };\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/mixin/boxLayout.js\n// module id = 1124\n// module chunks = 0 1 2","var platform = ''; // Navigator not exists in node\n\nif (typeof navigator !== 'undefined') {\n  platform = navigator.platform || '';\n}\n\nvar _default = {\n  // 全图默认背景\n  // backgroundColor: 'rgba(0,0,0,0)',\n  // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n  // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n  // 浅色\n  // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n  // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n  // 深色\n  color: ['#c23531', '#2f4554', '#61a0a8', '#d48265', '#91c7ae', '#749f83', '#ca8622', '#bda29a', '#6e7074', '#546570', '#c4ccd3'],\n  // 默认需要 Grid 配置项\n  // grid: {},\n  // 主题，主题\n  textStyle: {\n    // color: '#000',\n    // decoration: 'none',\n    // PENDING\n    fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n    // fontFamily: 'Arial, Verdana, sans-serif',\n    fontSize: 12,\n    fontStyle: 'normal',\n    fontWeight: 'normal'\n  },\n  // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n  // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n  // Default is source-over\n  blendMode: null,\n  animation: 'auto',\n  animationDuration: 1000,\n  animationDurationUpdate: 300,\n  animationEasing: 'exponentialOut',\n  animationEasingUpdate: 'cubicOut',\n  animationThreshold: 2000,\n  // Configuration for progressive/incremental rendering\n  progressiveThreshold: 3000,\n  progressive: 400,\n  // Threshold of if use single hover layer to optimize.\n  // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n  // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n  // which is unexpected.\n  // see example <echarts/test/heatmap-large.html>.\n  hoverLayerThreshold: 3000,\n  // See: module:echarts/scale/Time\n  useUTC: false\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/globalDefault.js\n// module id = 1125\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar echartsAPIList = ['getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed', 'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption', 'getViewOfComponentModel', 'getViewOfSeriesModel']; // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\n\nfunction ExtensionAPI(chartInstance) {\n  zrUtil.each(echartsAPIList, function (name) {\n    this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n  }, this);\n}\n\nvar _default = ExtensionAPI;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/ExtensionAPI.js\n// module id = 1126\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar ComponentModel = require(\"./Component\");\n\n/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\nvar each = zrUtil.each;\nvar clone = zrUtil.clone;\nvar map = zrUtil.map;\nvar merge = zrUtil.merge;\nvar QUERY_REG = /^(min|max)?(.+)$/;\n/**\n * TERM EXPLANATIONS:\n *\n * [option]:\n *\n *     An object that contains definitions of components. For example:\n *     var option = {\n *         title: {...},\n *         legend: {...},\n *         visualMap: {...},\n *         series: [\n *             {data: [...]},\n *             {data: [...]},\n *             ...\n *         ]\n *     };\n *\n * [rawOption]:\n *\n *     An object input to echarts.setOption. 'rawOption' may be an\n *     'option', or may be an object contains multi-options. For example:\n *     var option = {\n *         baseOption: {\n *             title: {...},\n *             legend: {...},\n *             series: [\n *                 {data: [...]},\n *                 {data: [...]},\n *                 ...\n *             ]\n *         },\n *         timeline: {...},\n *         options: [\n *             {title: {...}, series: {data: [...]}},\n *             {title: {...}, series: {data: [...]}},\n *             ...\n *         ],\n *         media: [\n *             {\n *                 query: {maxWidth: 320},\n *                 option: {series: {x: 20}, visualMap: {show: false}}\n *             },\n *             {\n *                 query: {minWidth: 320, maxWidth: 720},\n *                 option: {series: {x: 500}, visualMap: {show: true}}\n *             },\n *             {\n *                 option: {series: {x: 1200}, visualMap: {show: true}}\n *             }\n *         ]\n *     };\n *\n * @alias module:echarts/model/OptionManager\n * @param {module:echarts/ExtensionAPI} api\n */\n\nfunction OptionManager(api) {\n  /**\n   * @private\n   * @type {module:echarts/ExtensionAPI}\n   */\n  this._api = api;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._timelineOptions = [];\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n\n  this._mediaList = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._mediaDefault;\n  /**\n   * -1, means default.\n   * empty means no media.\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._currentMediaIndices = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._optionBackup;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._newBaseOption;\n} // timeline.notMerge is not supported in ec3. Firstly there is rearly\n// case that notMerge is needed. Secondly supporting 'notMerge' requires\n// rawOption cloned and backuped when timeline changed, which does no\n// good to performance. What's more, that both timeline and setOption\n// method supply 'notMerge' brings complex and some problems.\n// Consider this case:\n// (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n// (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n\nOptionManager.prototype = {\n  constructor: OptionManager,\n\n  /**\n   * @public\n   * @param {Object} rawOption Raw option.\n   * @param {module:echarts/model/Global} ecModel\n   * @param {Array.<Function>} optionPreprocessorFuncs\n   * @return {Object} Init option\n   */\n  setOption: function (rawOption, optionPreprocessorFuncs) {\n    rawOption = clone(rawOption, true); // FIXME\n    // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n    var oldOptionBackup = this._optionBackup;\n    var newParsedOption = parseRawOption.call(this, rawOption, optionPreprocessorFuncs, !oldOptionBackup);\n    this._newBaseOption = newParsedOption.baseOption; // For setOption at second time (using merge mode);\n\n    if (oldOptionBackup) {\n      // Only baseOption can be merged.\n      mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption); // For simplicity, timeline options and media options do not support merge,\n      // that is, if you `setOption` twice and both has timeline options, the latter\n      // timeline opitons will not be merged to the formers, but just substitude them.\n\n      if (newParsedOption.timelineOptions.length) {\n        oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n      }\n\n      if (newParsedOption.mediaList.length) {\n        oldOptionBackup.mediaList = newParsedOption.mediaList;\n      }\n\n      if (newParsedOption.mediaDefault) {\n        oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n      }\n    } else {\n      this._optionBackup = newParsedOption;\n    }\n  },\n\n  /**\n   * @param {boolean} isRecreate\n   * @return {Object}\n   */\n  mountOption: function (isRecreate) {\n    var optionBackup = this._optionBackup; // TODO\n    // 如果没有reset功能则不clone。\n\n    this._timelineOptions = map(optionBackup.timelineOptions, clone);\n    this._mediaList = map(optionBackup.mediaList, clone);\n    this._mediaDefault = clone(optionBackup.mediaDefault);\n    this._currentMediaIndices = [];\n    return clone(isRecreate // this._optionBackup.baseOption, which is created at the first `setOption`\n    // called, and is merged into every new option by inner method `mergeOption`\n    // each time `setOption` called, can be only used in `isRecreate`, because\n    // its reliability is under suspicion. In other cases option merge is\n    // performed by `model.mergeOption`.\n    ? optionBackup.baseOption : this._newBaseOption);\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Object}\n   */\n  getTimelineOption: function (ecModel) {\n    var option;\n    var timelineOptions = this._timelineOptions;\n\n    if (timelineOptions.length) {\n      // getTimelineOption can only be called after ecModel inited,\n      // so we can get currentIndex from timelineModel.\n      var timelineModel = ecModel.getComponent('timeline');\n\n      if (timelineModel) {\n        option = clone(timelineOptions[timelineModel.getCurrentIndex()], true);\n      }\n    }\n\n    return option;\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Array.<Object>}\n   */\n  getMediaOption: function (ecModel) {\n    var ecWidth = this._api.getWidth();\n\n    var ecHeight = this._api.getHeight();\n\n    var mediaList = this._mediaList;\n    var mediaDefault = this._mediaDefault;\n    var indices = [];\n    var result = []; // No media defined.\n\n    if (!mediaList.length && !mediaDefault) {\n      return result;\n    } // Multi media may be applied, the latter defined media has higher priority.\n\n\n    for (var i = 0, len = mediaList.length; i < len; i++) {\n      if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n        indices.push(i);\n      }\n    } // FIXME\n    // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n\n\n    if (!indices.length && mediaDefault) {\n      indices = [-1];\n    }\n\n    if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n      result = map(indices, function (index) {\n        return clone(index === -1 ? mediaDefault.option : mediaList[index].option);\n      });\n    } // Otherwise return nothing.\n\n\n    this._currentMediaIndices = indices;\n    return result;\n  }\n};\n\nfunction parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n  var timelineOptions = [];\n  var mediaList = [];\n  var mediaDefault;\n  var baseOption; // Compatible with ec2.\n\n  var timelineOpt = rawOption.timeline;\n\n  if (rawOption.baseOption) {\n    baseOption = rawOption.baseOption;\n  } // For timeline\n\n\n  if (timelineOpt || rawOption.options) {\n    baseOption = baseOption || {};\n    timelineOptions = (rawOption.options || []).slice();\n  } // For media query\n\n\n  if (rawOption.media) {\n    baseOption = baseOption || {};\n    var media = rawOption.media;\n    each(media, function (singleMedia) {\n      if (singleMedia && singleMedia.option) {\n        if (singleMedia.query) {\n          mediaList.push(singleMedia);\n        } else if (!mediaDefault) {\n          // Use the first media default.\n          mediaDefault = singleMedia;\n        }\n      }\n    });\n  } // For normal option\n\n\n  if (!baseOption) {\n    baseOption = rawOption;\n  } // Set timelineOpt to baseOption in ec3,\n  // which is convenient for merge option.\n\n\n  if (!baseOption.timeline) {\n    baseOption.timeline = timelineOpt;\n  } // Preprocess.\n\n\n  each([baseOption].concat(timelineOptions).concat(zrUtil.map(mediaList, function (media) {\n    return media.option;\n  })), function (option) {\n    each(optionPreprocessorFuncs, function (preProcess) {\n      preProcess(option, isNew);\n    });\n  });\n  return {\n    baseOption: baseOption,\n    timelineOptions: timelineOptions,\n    mediaDefault: mediaDefault,\n    mediaList: mediaList\n  };\n}\n/**\n * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n * Support: width, height, aspectRatio\n * Can use max or min as prefix.\n */\n\n\nfunction applyMediaQuery(query, ecWidth, ecHeight) {\n  var realMap = {\n    width: ecWidth,\n    height: ecHeight,\n    aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n\n  };\n  var applicatable = true;\n  zrUtil.each(query, function (value, attr) {\n    var matched = attr.match(QUERY_REG);\n\n    if (!matched || !matched[1] || !matched[2]) {\n      return;\n    }\n\n    var operator = matched[1];\n    var realAttr = matched[2].toLowerCase();\n\n    if (!compare(realMap[realAttr], value, operator)) {\n      applicatable = false;\n    }\n  });\n  return applicatable;\n}\n\nfunction compare(real, expect, operator) {\n  if (operator === 'min') {\n    return real >= expect;\n  } else if (operator === 'max') {\n    return real <= expect;\n  } else {\n    // Equals\n    return real === expect;\n  }\n}\n\nfunction indicesEquals(indices1, indices2) {\n  // indices is always order by asc and has only finite number.\n  return indices1.join(',') === indices2.join(',');\n}\n/**\n * Consider case:\n * `chart.setOption(opt1);`\n * Then user do some interaction like dataZoom, dataView changing.\n * `chart.setOption(opt2);`\n * Then user press 'reset button' in toolbox.\n *\n * After doing that all of the interaction effects should be reset, the\n * chart should be the same as the result of invoke\n * `chart.setOption(opt1); chart.setOption(opt2);`.\n *\n * Although it is not able ensure that\n * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n * `chart.setOption(merge(opt1, opt2));` exactly,\n * this might be the only simple way to implement that feature.\n *\n * MEMO: We've considered some other approaches:\n * 1. Each model handle its self restoration but not uniform treatment.\n *     (Too complex in logic and error-prone)\n * 2. Use a shadow ecModel. (Performace expensive)\n */\n\n\nfunction mergeOption(oldOption, newOption) {\n  newOption = newOption || {};\n  each(newOption, function (newCptOpt, mainType) {\n    if (newCptOpt == null) {\n      return;\n    }\n\n    var oldCptOpt = oldOption[mainType];\n\n    if (!ComponentModel.hasClass(mainType)) {\n      oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n    } else {\n      newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n      oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n      var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n      oldOption[mainType] = map(mapResult, function (item) {\n        return item.option && item.exist ? merge(item.exist, item.option, true) : item.exist || item.option;\n      });\n    }\n  });\n}\n\nvar _default = OptionManager;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/OptionManager.js\n// module id = 1127\n// module chunks = 0 1 2","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar isArray = _util.isArray;\nvar isObject = _util.isObject;\n\nvar compatStyle = require(\"./helper/compatStyle\");\n\nvar _model = require(\"../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\n// Compatitable with 2.0\nfunction get(opt, path) {\n  path = path.split(',');\n  var obj = opt;\n\n  for (var i = 0; i < path.length; i++) {\n    obj = obj && obj[path[i]];\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  return obj;\n}\n\nfunction set(opt, path, val, overwrite) {\n  path = path.split(',');\n  var obj = opt;\n  var key;\n\n  for (var i = 0; i < path.length - 1; i++) {\n    key = path[i];\n\n    if (obj[key] == null) {\n      obj[key] = {};\n    }\n\n    obj = obj[key];\n  }\n\n  if (overwrite || obj[path[i]] == null) {\n    obj[path[i]] = val;\n  }\n}\n\nfunction compatLayoutProperties(option) {\n  each(LAYOUT_PROPERTIES, function (prop) {\n    if (prop[0] in option && !(prop[1] in option)) {\n      option[prop[1]] = option[prop[0]];\n    }\n  });\n}\n\nvar LAYOUT_PROPERTIES = [['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']];\nvar COMPATITABLE_COMPONENTS = ['grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'];\nvar COMPATITABLE_SERIES = ['bar', 'boxplot', 'candlestick', 'chord', 'effectScatter', 'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel', 'pie', 'radar', 'sankey', 'scatter', 'treemap'];\n\nfunction _default(option, isTheme) {\n  compatStyle(option, isTheme); // Make sure series array for model initialization.\n\n  option.series = normalizeToArray(option.series);\n  each(option.series, function (seriesOpt) {\n    if (!isObject(seriesOpt)) {\n      return;\n    }\n\n    var seriesType = seriesOpt.type;\n\n    if (seriesType === 'pie' || seriesType === 'gauge') {\n      if (seriesOpt.clockWise != null) {\n        seriesOpt.clockwise = seriesOpt.clockWise;\n      }\n    }\n\n    if (seriesType === 'gauge') {\n      var pointerColor = get(seriesOpt, 'pointer.color');\n      pointerColor != null && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n    }\n\n    for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\n      if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\n        compatLayoutProperties(seriesOpt);\n        break;\n      }\n    }\n  }); // dataRange has changed to visualMap\n\n  if (option.dataRange) {\n    option.visualMap = option.dataRange;\n  }\n\n  each(COMPATITABLE_COMPONENTS, function (componentName) {\n    var options = option[componentName];\n\n    if (options) {\n      if (!isArray(options)) {\n        options = [options];\n      }\n\n      each(options, function (option) {\n        compatLayoutProperties(option);\n      });\n    }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/preprocessor/backwardCompat.js\n// module id = 1128\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar POSSIBLE_STYLES = ['areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle', 'chordStyle', 'label', 'labelLine'];\n\nfunction compatItemStyle(opt) {\n  var itemStyleOpt = opt && opt.itemStyle;\n\n  if (!itemStyleOpt) {\n    return;\n  }\n\n  for (var i = 0, len = POSSIBLE_STYLES.length; i < len; i++) {\n    var styleName = POSSIBLE_STYLES[i];\n    var normalItemStyleOpt = itemStyleOpt.normal;\n    var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n\n    if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].normal) {\n        opt[styleName].normal = normalItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n      }\n\n      normalItemStyleOpt[styleName] = null;\n    }\n\n    if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].emphasis) {\n        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n      }\n\n      emphasisItemStyleOpt[styleName] = null;\n    }\n  }\n}\n\nfunction compatTextStyle(opt, propName) {\n  var labelOptSingle = isObject(opt) && opt[propName];\n  var textStyle = isObject(labelOptSingle) && labelOptSingle.textStyle;\n\n  if (textStyle) {\n    for (var i = 0, len = modelUtil.TEXT_STYLE_OPTIONS.length; i < len; i++) {\n      var propName = modelUtil.TEXT_STYLE_OPTIONS[i];\n\n      if (textStyle.hasOwnProperty(propName)) {\n        labelOptSingle[propName] = textStyle[propName];\n      }\n    }\n  }\n}\n\nfunction compatLabelTextStyle(labelOpt) {\n  if (isObject(labelOpt)) {\n    compatTextStyle(labelOpt, 'normal');\n    compatTextStyle(labelOpt, 'emphasis');\n  }\n}\n\nfunction processSeries(seriesOpt) {\n  if (!isObject(seriesOpt)) {\n    return;\n  }\n\n  compatItemStyle(seriesOpt);\n  compatLabelTextStyle(seriesOpt.label); // treemap\n\n  compatLabelTextStyle(seriesOpt.upperLabel); // graph\n\n  compatLabelTextStyle(seriesOpt.edgeLabel);\n  var markPoint = seriesOpt.markPoint;\n  compatItemStyle(markPoint);\n  compatLabelTextStyle(markPoint && markPoint.label);\n  var markLine = seriesOpt.markLine;\n  compatItemStyle(seriesOpt.markLine);\n  compatLabelTextStyle(markLine && markLine.label);\n  var markArea = seriesOpt.markArea;\n  compatLabelTextStyle(markArea && markArea.label); // For gauge\n\n  compatTextStyle(seriesOpt, 'axisLabel');\n  compatTextStyle(seriesOpt, 'title');\n  compatTextStyle(seriesOpt, 'detail');\n  var data = seriesOpt.data;\n\n  if (data) {\n    for (var i = 0; i < data.length; i++) {\n      compatItemStyle(data[i]);\n      compatLabelTextStyle(data[i] && data[i].label);\n    }\n  } // mark point data\n\n\n  var markPoint = seriesOpt.markPoint;\n\n  if (markPoint && markPoint.data) {\n    var mpData = markPoint.data;\n\n    for (var i = 0; i < mpData.length; i++) {\n      compatItemStyle(mpData[i]);\n      compatLabelTextStyle(mpData[i] && mpData[i].label);\n    }\n  } // mark line data\n\n\n  var markLine = seriesOpt.markLine;\n\n  if (markLine && markLine.data) {\n    var mlData = markLine.data;\n\n    for (var i = 0; i < mlData.length; i++) {\n      if (zrUtil.isArray(mlData[i])) {\n        compatItemStyle(mlData[i][0]);\n        compatLabelTextStyle(mlData[i][0] && mlData[i][0].label);\n        compatItemStyle(mlData[i][1]);\n        compatLabelTextStyle(mlData[i][1] && mlData[i][1].label);\n      } else {\n        compatItemStyle(mlData[i]);\n        compatLabelTextStyle(mlData[i] && mlData[i].label);\n      }\n    }\n  }\n}\n\nfunction toArr(o) {\n  return zrUtil.isArray(o) ? o : o ? [o] : [];\n}\n\nfunction toObj(o) {\n  return (zrUtil.isArray(o) ? o[0] : o) || {};\n}\n\nfunction _default(option, isTheme) {\n  each(toArr(option.series), function (seriesOpt) {\n    isObject(seriesOpt) && processSeries(seriesOpt);\n  });\n  var axes = ['xAxis', 'yAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'parallelAxis', 'radar'];\n  isTheme && axes.push('valueAxis', 'categoryAxis', 'logAxis', 'timeAxis');\n  each(axes, function (axisName) {\n    each(toArr(option[axisName]), function (axisOpt) {\n      if (axisOpt) {\n        compatTextStyle(axisOpt, 'axisLabel');\n        compatTextStyle(axisOpt.axisPointer, 'label');\n      }\n    });\n  });\n  each(toArr(option.parallel), function (parallelOpt) {\n    var parallelAxisDefault = parallelOpt && parallelOpt.parallelAxisDefault;\n    compatTextStyle(parallelAxisDefault, 'axisLabel');\n    compatTextStyle(parallelAxisDefault && parallelAxisDefault.axisPointer, 'label');\n  });\n  each(toArr(option.calendar), function (calendarOpt) {\n    compatTextStyle(calendarOpt, 'dayLabel');\n    compatTextStyle(calendarOpt, 'monthLabel');\n    compatTextStyle(calendarOpt, 'yearLabel');\n  }); // radar.name.textStyle\n\n  each(toArr(option.radar), function (radarOpt) {\n    compatTextStyle(radarOpt, 'name');\n  });\n  each(toArr(option.geo), function (geoOpt) {\n    if (isObject(geoOpt)) {\n      compatLabelTextStyle(geoOpt.label);\n      each(toArr(geoOpt.regions), function (regionObj) {\n        compatLabelTextStyle(regionObj.label);\n      });\n    }\n  });\n  compatLabelTextStyle(toObj(option.timeline).label);\n  compatTextStyle(toObj(option.axisPointer), 'label');\n  compatTextStyle(toObj(option.tooltip).axisPointer, 'label');\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/preprocessor/helper/compatStyle.js\n// module id = 1129\n// module chunks = 0 1 2","var Gradient = require(\"zrender/lib/graphic/Gradient\");\n\nfunction _default(ecModel) {\n  function encodeColor(seriesModel) {\n    var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\n    var data = seriesModel.getData();\n    var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n    || seriesModel.getColorFromPalette(seriesModel.get('name')); // Default color\n    // FIXME Set color function or use the platte color\n\n    data.setVisual('color', color); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      if (typeof color === 'function' && !(color instanceof Gradient)) {\n        data.each(function (idx) {\n          data.setItemVisual(idx, 'color', color(seriesModel.getDataParams(idx)));\n        });\n      } // itemStyle in each data item\n\n\n      data.each(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        var color = itemModel.get(colorAccessPath, true);\n\n        if (color != null) {\n          data.setItemVisual(idx, 'color', color);\n        }\n      });\n    }\n  }\n\n  ecModel.eachRawSeries(encodeColor);\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/visual/seriesColor.js\n// module id = 1130\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../util/graphic\");\n\nvar PI = Math.PI;\n/**\n * @param {module:echarts/ExtensionAPI} api\n * @param {Object} [opts]\n * @param {string} [opts.text]\n * @param {string} [opts.color]\n * @param {string} [opts.textColor]\n * @return {module:zrender/Element}\n */\n\nfunction _default(api, opts) {\n  opts = opts || {};\n  zrUtil.defaults(opts, {\n    text: 'loading',\n    color: '#c23531',\n    textColor: '#000',\n    maskColor: 'rgba(255, 255, 255, 0.8)',\n    zlevel: 0\n  });\n  var mask = new graphic.Rect({\n    style: {\n      fill: opts.maskColor\n    },\n    zlevel: opts.zlevel,\n    z: 10000\n  });\n  var arc = new graphic.Arc({\n    shape: {\n      startAngle: -PI / 2,\n      endAngle: -PI / 2 + 0.1,\n      r: 10\n    },\n    style: {\n      stroke: opts.color,\n      lineCap: 'round',\n      lineWidth: 5\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  var labelRect = new graphic.Rect({\n    style: {\n      fill: 'none',\n      text: opts.text,\n      textPosition: 'right',\n      textDistance: 10,\n      textFill: opts.textColor\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  arc.animateShape(true).when(1000, {\n    endAngle: PI * 3 / 2\n  }).start('circularInOut');\n  arc.animateShape(true).when(1000, {\n    startAngle: PI * 3 / 2\n  }).delay(300).start('circularInOut');\n  var group = new graphic.Group();\n  group.add(arc);\n  group.add(labelRect);\n  group.add(mask); // Inject resize\n\n  group.resize = function () {\n    var cx = api.getWidth() / 2;\n    var cy = api.getHeight() / 2;\n    arc.setShape({\n      cx: cx,\n      cy: cy\n    });\n    var r = arc.shape.r;\n    labelRect.setShape({\n      x: cx - r,\n      y: cy - r,\n      width: r * 2,\n      height: r * 2\n    });\n    mask.setShape({\n      x: 0,\n      y: 0,\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n  };\n\n  group.resize();\n  return group;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/loading/default.js\n// module id = 1131\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar createListFromArray = require(\"./chart/helper/createListFromArray\");\n\nvar axisHelper = require(\"./coord/axisHelper\");\n\nvar axisModelCommonMixin = require(\"./coord/axisModelCommonMixin\");\n\nvar Model = require(\"./model/Model\");\n\nvar _completeDimensions = require(\"./data/helper/completeDimensions\");\n\nexports.completeDimensions = _completeDimensions;\n\nvar _symbol = require(\"./util/symbol\");\n\nexports.createSymbol = _symbol.createSymbol;\n\n/**\n * Create a muti dimension List structure from seriesModel.\n * @param  {module:echarts/model/Model} seriesModel\n * @return {module:echarts/data/List} list\n */\nfunction createList(seriesModel) {\n  var data = seriesModel.get('data');\n  return createListFromArray(data, seriesModel, seriesModel.ecModel);\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n */\n\n\n/**\n * Create scale\n * @param {Array.<number>} dataExtent\n * @param {Object|module:echarts/Model} option\n */\nfunction createScale(dataExtent, option) {\n  var axisModel = option;\n\n  if (!(option instanceof Model)) {\n    axisModel = new Model(option);\n    zrUtil.mixin(axisModel, axisModelCommonMixin);\n  }\n\n  var scale = axisHelper.createScaleByModel(axisModel);\n  scale.setExtent(dataExtent[0], dataExtent[1]);\n  axisHelper.niceScaleExtent(scale, axisModel);\n  return scale;\n}\n/**\n * Mixin common methods to axis model,\n *\n * Inlcude methods\n * `getFormattedLabels() => Array.<string>`\n * `getCategories() => Array.<string>`\n * `getMin(origin: boolean) => number`\n * `getMax(origin: boolean) => number`\n * `getNeedCrossZero() => boolean`\n * `setRange(start: number, end: number)`\n * `resetRange()`\n */\n\n\nfunction mixinAxisModelCommonMethods(Model) {\n  zrUtil.mixin(Model, axisModelCommonMixin);\n}\n\nexports.createList = createList;\nexports.createScale = createScale;\nexports.mixinAxisModelCommonMethods = mixinAxisModelCommonMethods;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/helper.js\n// module id = 1132\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Scale = require(\"./Scale\");\n\n/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n// FIXME only one data\nvar scaleProto = Scale.prototype;\nvar OrdinalScale = Scale.extend({\n  type: 'ordinal',\n  init: function (data, extent) {\n    this._data = data;\n    this._extent = extent || [0, data.length - 1];\n  },\n  parse: function (val) {\n    return typeof val === 'string' ? zrUtil.indexOf(this._data, val) // val might be float.\n    : Math.round(val);\n  },\n  contain: function (rank) {\n    rank = this.parse(rank);\n    return scaleProto.contain.call(this, rank) && this._data[rank] != null;\n  },\n\n  /**\n   * Normalize given rank or name to linear [0, 1]\n   * @param {number|string} [val]\n   * @return {number}\n   */\n  normalize: function (val) {\n    return scaleProto.normalize.call(this, this.parse(val));\n  },\n  scale: function (val) {\n    return Math.round(scaleProto.scale.call(this, val));\n  },\n\n  /**\n   * @return {Array}\n   */\n  getTicks: function () {\n    var ticks = [];\n    var extent = this._extent;\n    var rank = extent[0];\n\n    while (rank <= extent[1]) {\n      ticks.push(rank);\n      rank++;\n    }\n\n    return ticks;\n  },\n\n  /**\n   * Get item on rank n\n   * @param {number} n\n   * @return {string}\n   */\n  getLabel: function (n) {\n    return this._data[n];\n  },\n\n  /**\n   * @return {number}\n   */\n  count: function () {\n    return this._extent[1] - this._extent[0] + 1;\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    this.unionExtent(data.getDataExtent(dim, false));\n  },\n  niceTicks: zrUtil.noop,\n  niceExtent: zrUtil.noop\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nOrdinalScale.create = function () {\n  return new OrdinalScale();\n};\n\nvar _default = OrdinalScale;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/scale/Ordinal.js\n// module id = 1133\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar formatUtil = require(\"../util/format\");\n\nvar scaleHelper = require(\"./helper\");\n\nvar IntervalScale = require(\"./Interval\");\n\n// [About UTC and local time zone]:\n// In most cases, `number.parseDate` will treat input data string as local time\n// (except time zone is specified in time string). And `format.formateTime` returns\n// local time by default. option.useUTC is false by default. This design have\n// concidered these common case:\n// (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n// in local time by default.\n// (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n// as its original time, without any time difference.\nvar intervalScaleProto = IntervalScale.prototype;\nvar mathCeil = Math.ceil;\nvar mathFloor = Math.floor;\nvar ONE_SECOND = 1000;\nvar ONE_MINUTE = ONE_SECOND * 60;\nvar ONE_HOUR = ONE_MINUTE * 60;\nvar ONE_DAY = ONE_HOUR * 24; // FIXME 公用？\n\nvar bisect = function (a, x, lo, hi) {\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n\n    if (a[mid][1] < x) {\n      lo = mid + 1;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return lo;\n};\n/**\n * @alias module:echarts/coord/scale/Time\n * @constructor\n */\n\n\nvar TimeScale = IntervalScale.extend({\n  type: 'time',\n\n  /**\n   * @override\n   */\n  getLabel: function (val) {\n    var stepLvl = this._stepLvl;\n    var date = new Date(val);\n    return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n  },\n\n  /**\n   * @override\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      // Expand extent\n      extent[0] -= ONE_DAY;\n      extent[1] += ONE_DAY;\n    } // If there are no data and extent are [Infinity, -Infinity]\n\n\n    if (extent[1] === -Infinity && extent[0] === Infinity) {\n      var d = new Date();\n      extent[1] = +new Date(d.getFullYear(), d.getMonth(), d.getDate());\n      extent[0] = extent[1] - ONE_DAY;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n    }\n  },\n\n  /**\n   * @override\n   */\n  niceTicks: function (approxTickNum, minInterval, maxInterval) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n    var approxInterval = span / approxTickNum;\n\n    if (minInterval != null && approxInterval < minInterval) {\n      approxInterval = minInterval;\n    }\n\n    if (maxInterval != null && approxInterval > maxInterval) {\n      approxInterval = maxInterval;\n    }\n\n    var scaleLevelsLen = scaleLevels.length;\n    var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n    var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n    var interval = level[1]; // Same with interval scale if span is much larger than 1 year\n\n    if (level[0] === 'year') {\n      var yearSpan = span / interval; // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n      // var niceYearSpan = numberUtil.nice(yearSpan, false);\n\n      var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n      interval *= yearStep;\n    }\n\n    var timezoneOffset = this.getSetting('useUTC') ? 0 : new Date(+extent[0] || +extent[1]).getTimezoneOffset() * 60 * 1000;\n    var niceExtent = [Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset), Math.round(mathFloor((extent[1] - timezoneOffset) / interval) * interval + timezoneOffset)];\n    scaleHelper.fixExtent(niceExtent, extent);\n    this._stepLvl = level; // Interval will be used in getTicks\n\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n  parse: function (val) {\n    // val might be float.\n    return +numberUtil.parseDate(val);\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  TimeScale.prototype[methodName] = function (val) {\n    return intervalScaleProto[methodName].call(this, this.parse(val));\n  };\n}); // Steps from d3\n\nvar scaleLevels = [// Format              interval\n['hh:mm:ss', ONE_SECOND], // 1s\n['hh:mm:ss', ONE_SECOND * 5], // 5s\n['hh:mm:ss', ONE_SECOND * 10], // 10s\n['hh:mm:ss', ONE_SECOND * 15], // 15s\n['hh:mm:ss', ONE_SECOND * 30], // 30s\n['hh:mm\\nMM-dd', ONE_MINUTE], // 1m\n['hh:mm\\nMM-dd', ONE_MINUTE * 5], // 5m\n['hh:mm\\nMM-dd', ONE_MINUTE * 10], // 10m\n['hh:mm\\nMM-dd', ONE_MINUTE * 15], // 15m\n['hh:mm\\nMM-dd', ONE_MINUTE * 30], // 30m\n['hh:mm\\nMM-dd', ONE_HOUR], // 1h\n['hh:mm\\nMM-dd', ONE_HOUR * 2], // 2h\n['hh:mm\\nMM-dd', ONE_HOUR * 6], // 6h\n['hh:mm\\nMM-dd', ONE_HOUR * 12], // 12h\n['MM-dd\\nyyyy', ONE_DAY], // 1d\n['MM-dd\\nyyyy', ONE_DAY * 2], // 2d\n['MM-dd\\nyyyy', ONE_DAY * 3], // 3d\n['MM-dd\\nyyyy', ONE_DAY * 4], // 4d\n['MM-dd\\nyyyy', ONE_DAY * 5], // 5d\n['MM-dd\\nyyyy', ONE_DAY * 6], // 6d\n['week', ONE_DAY * 7], // 7d\n['MM-dd\\nyyyy', ONE_DAY * 10], // 10d\n['week', ONE_DAY * 14], // 2w\n['week', ONE_DAY * 21], // 3w\n['month', ONE_DAY * 31], // 1M\n['week', ONE_DAY * 42], // 6w\n['month', ONE_DAY * 62], // 2M\n['week', ONE_DAY * 42], // 10w\n['quarter', ONE_DAY * 380 / 4], // 3M\n['month', ONE_DAY * 31 * 4], // 4M\n['month', ONE_DAY * 31 * 5], // 5M\n['half-year', ONE_DAY * 380 / 2], // 6M\n['month', ONE_DAY * 31 * 8], // 8M\n['month', ONE_DAY * 31 * 10], // 10M\n['year', ONE_DAY * 380] // 1Y\n];\n/**\n * @param {module:echarts/model/Model}\n * @return {module:echarts/scale/Time}\n */\n\nTimeScale.create = function (model) {\n  return new TimeScale({\n    useUTC: model.ecModel.get('useUTC')\n  });\n};\n\nvar _default = TimeScale;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/scale/Time.js\n// module id = 1134\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Scale = require(\"./Scale\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar IntervalScale = require(\"./Interval\");\n\n/**\n * Log scale\n * @module echarts/scale/Log\n */\n// Use some method of IntervalScale\nvar scaleProto = Scale.prototype;\nvar intervalScaleProto = IntervalScale.prototype;\nvar getPrecisionSafe = numberUtil.getPrecisionSafe;\nvar roundingErrorFix = numberUtil.round;\nvar mathFloor = Math.floor;\nvar mathCeil = Math.ceil;\nvar mathPow = Math.pow;\nvar mathLog = Math.log;\nvar LogScale = Scale.extend({\n  type: 'log',\n  base: 10,\n  $constructor: function () {\n    Scale.apply(this, arguments);\n    this._originalScale = new IntervalScale();\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    var originalScale = this._originalScale;\n    var extent = this._extent;\n    var originalExtent = originalScale.getExtent();\n    return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n      var powVal = numberUtil.round(mathPow(this.base, val)); // Fix #4158\n\n      powVal = val === extent[0] && originalScale.__fixMin ? fixRoundingError(powVal, originalExtent[0]) : powVal;\n      powVal = val === extent[1] && originalScale.__fixMax ? fixRoundingError(powVal, originalExtent[1]) : powVal;\n      return powVal;\n    }, this);\n  },\n\n  /**\n   * @param {number} val\n   * @return {string}\n   */\n  getLabel: intervalScaleProto.getLabel,\n\n  /**\n   * @param  {number} val\n   * @return {number}\n   */\n  scale: function (val) {\n    val = scaleProto.scale.call(this, val);\n    return mathPow(this.base, val);\n  },\n\n  /**\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var base = this.base;\n    start = mathLog(start) / mathLog(base);\n    end = mathLog(end) / mathLog(base);\n    intervalScaleProto.setExtent.call(this, start, end);\n  },\n\n  /**\n   * @return {number} end\n   */\n  getExtent: function () {\n    var base = this.base;\n    var extent = scaleProto.getExtent.call(this);\n    extent[0] = mathPow(base, extent[0]);\n    extent[1] = mathPow(base, extent[1]); // Fix #4158\n\n    var originalScale = this._originalScale;\n    var originalExtent = originalScale.getExtent();\n    originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n    originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n    return extent;\n  },\n\n  /**\n   * @param  {Array.<number>} extent\n   */\n  unionExtent: function (extent) {\n    this._originalScale.unionExtent(extent);\n\n    var base = this.base;\n    extent[0] = mathLog(extent[0]) / mathLog(base);\n    extent[1] = mathLog(extent[1]) / mathLog(base);\n    scaleProto.unionExtent.call(this, extent);\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    this.unionExtent(data.getDataExtent(dim, true, function (val) {\n      return val > 0;\n    }));\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   * @param  {number} [approxTickNum = 10] Given approx tick number\n   */\n  niceTicks: function (approxTickNum) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (span === Infinity || span <= 0) {\n      return;\n    }\n\n    var interval = numberUtil.quantity(span);\n    var err = approxTickNum / span * interval; // Filter ticks to get closer to the desired count.\n\n    if (err <= 0.5) {\n      interval *= 10;\n    } // Interval should be integer\n\n\n    while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n      interval *= 10;\n    }\n\n    var niceExtent = [numberUtil.round(mathCeil(extent[0] / interval) * interval), numberUtil.round(mathFloor(extent[1] / interval) * interval)];\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @override\n   */\n  niceExtent: function (opt) {\n    intervalScaleProto.niceExtent.call(this, opt);\n    var originalScale = this._originalScale;\n    originalScale.__fixMin = opt.fixMin;\n    originalScale.__fixMax = opt.fixMax;\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  LogScale.prototype[methodName] = function (val) {\n    val = mathLog(val) / mathLog(this.base);\n    return scaleProto[methodName].call(this, val);\n  };\n});\n\nLogScale.create = function () {\n  return new LogScale();\n};\n\nfunction fixRoundingError(val, originalVal) {\n  return roundingErrorFix(val, getPrecisionSafe(originalVal));\n}\n\nvar _default = LogScale;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/scale/Log.js\n// module id = 1135\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar modelHelper = require(\"./modelHelper\");\n\nvar findPointFromSeries = require(\"./findPointFromSeries\");\n\nvar each = zrUtil.each;\nvar curry = zrUtil.curry;\nvar get = modelUtil.makeGetter();\n/**\n * Basic logic: check all axis, if they do not demand show/highlight,\n * then hide/downplay them.\n *\n * @param {Object} coordSysAxesInfo\n * @param {Object} payload\n * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n * @param {Object} [payload.dataIndex] finder, restrict target axes.\n * @param {Object} [payload.axesInfo] finder, restrict target axes.\n *        [{\n *          axisDim: 'x'|'y'|'angle'|...,\n *          axisIndex: ...,\n *          value: ...\n *        }, ...]\n * @param {Function} [payload.dispatchAction]\n * @param {Object} [payload.tooltipOption]\n * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n *        which can be specified in dispatchAction\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n * @return {Object} content of event obj for echarts.connect.\n */\n\nfunction _default(payload, ecModel, api) {\n  var currTrigger = payload.currTrigger;\n  var point = [payload.x, payload.y];\n  var finder = payload;\n  var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n  var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo; // Pending\n  // See #6121. But we are not able to reproduce it yet.\n\n  if (!coordSysAxesInfo) {\n    return;\n  }\n\n  if (illegalPoint(point)) {\n    // Used in the default behavior of `connection`: use the sample seriesIndex\n    // and dataIndex. And also used in the tooltipView trigger.\n    point = findPointFromSeries({\n      seriesIndex: finder.seriesIndex,\n      // Do not use dataIndexInside from other ec instance.\n      // FIXME: auto detect it?\n      dataIndex: finder.dataIndex\n    }, ecModel).point;\n  }\n\n  var isIllegalPoint = illegalPoint(point); // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n  // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n  // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n  // and dataIndex.\n\n  var inputAxesInfo = finder.axesInfo;\n  var axesInfo = coordSysAxesInfo.axesInfo;\n  var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n  var outputFinder = {};\n  var showValueMap = {};\n  var dataByCoordSys = {\n    list: [],\n    map: {}\n  };\n  var updaters = {\n    showPointer: curry(showPointer, showValueMap),\n    showTooltip: curry(showTooltip, dataByCoordSys)\n  }; // Process for triggered axes.\n\n  each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n    // If a point given, it must be contained by the coordinate system.\n    var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n    each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n      var axis = axisInfo.axis;\n      var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo); // If no inputAxesInfo, no axis is restricted.\n\n      if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n        var val = inputAxisInfo && inputAxisInfo.value;\n\n        if (val == null && !isIllegalPoint) {\n          val = axis.pointToData(point);\n        }\n\n        val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n      }\n    });\n  }); // Process for linked axes.\n\n  var linkTriggers = {};\n  each(axesInfo, function (tarAxisInfo, tarKey) {\n    var linkGroup = tarAxisInfo.linkGroup; // If axis has been triggered in the previous stage, it should not be triggered by link.\n\n    if (linkGroup && !showValueMap[tarKey]) {\n      each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n        var srcValItem = showValueMap[srcKey]; // If srcValItem exist, source axis is triggered, so link to target axis.\n\n        if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n          var val = srcValItem.value;\n          linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo))));\n          linkTriggers[tarAxisInfo.key] = val;\n        }\n      });\n    }\n  });\n  each(linkTriggers, function (val, tarKey) {\n    processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n  });\n  updateModelActually(showValueMap, axesInfo, outputFinder);\n  dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n  dispatchHighDownActually(axesInfo, dispatchAction, api);\n  return outputFinder;\n}\n\nfunction processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n  var axis = axisInfo.axis;\n\n  if (axis.scale.isBlank() || !axis.containData(newValue)) {\n    return;\n  }\n\n  if (!axisInfo.involveSeries) {\n    updaters.showPointer(axisInfo, newValue);\n    return;\n  } // Heavy calculation. So put it after axis.containData checking.\n\n\n  var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n  var payloadBatch = payloadInfo.payloadBatch;\n  var snapToValue = payloadInfo.snapToValue; // Fill content of event obj for echarts.connect.\n  // By defualt use the first involved series data as a sample to connect.\n\n  if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n    zrUtil.extend(outputFinder, payloadBatch[0]);\n  } // If no linkSource input, this process is for collecting link\n  // target, where snap should not be accepted.\n\n\n  if (!dontSnap && axisInfo.snap) {\n    if (axis.containData(snapToValue) && snapToValue != null) {\n      newValue = snapToValue;\n    }\n  }\n\n  updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder); // Tooltip should always be snapToValue, otherwise there will be\n  // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n\n  updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n}\n\nfunction buildPayloadsBySeries(value, axisInfo) {\n  var axis = axisInfo.axis;\n  var dim = axis.dim;\n  var snapToValue = value;\n  var payloadBatch = [];\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n  each(axisInfo.seriesModels, function (series, idx) {\n    var dataDim = series.coordDimToDataDim(dim);\n    var seriesNestestValue;\n    var dataIndices;\n\n    if (series.getAxisTooltipData) {\n      var result = series.getAxisTooltipData(dataDim, value, axis);\n      dataIndices = result.dataIndices;\n      seriesNestestValue = result.nestestValue;\n    } else {\n      dataIndices = series.getData().indicesOfNearest(dataDim[0], value, // Add a threshold to avoid find the wrong dataIndex\n      // when data length is not same.\n      false, axis.type === 'category' ? 0.5 : null);\n\n      if (!dataIndices.length) {\n        return;\n      }\n\n      seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n    }\n\n    if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n      return;\n    }\n\n    var diff = value - seriesNestestValue;\n    var dist = Math.abs(diff); // Consider category case\n\n    if (dist <= minDist) {\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        snapToValue = seriesNestestValue;\n        payloadBatch.length = 0;\n      }\n\n      each(dataIndices, function (dataIndex) {\n        payloadBatch.push({\n          seriesIndex: series.seriesIndex,\n          dataIndexInside: dataIndex,\n          dataIndex: series.getData().getRawIndex(dataIndex)\n        });\n      });\n    }\n  });\n  return {\n    payloadBatch: payloadBatch,\n    snapToValue: snapToValue\n  };\n}\n\nfunction showPointer(showValueMap, axisInfo, value, payloadBatch) {\n  showValueMap[axisInfo.key] = {\n    value: value,\n    payloadBatch: payloadBatch\n  };\n}\n\nfunction showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n  var payloadBatch = payloadInfo.payloadBatch;\n  var axis = axisInfo.axis;\n  var axisModel = axis.model;\n  var axisPointerModel = axisInfo.axisPointerModel; // If no data, do not create anything in dataByCoordSys,\n  // whose length will be used to judge whether dispatch action.\n\n  if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n    return;\n  }\n\n  var coordSysModel = axisInfo.coordSys.model;\n  var coordSysKey = modelHelper.makeKey(coordSysModel);\n  var coordSysItem = dataByCoordSys.map[coordSysKey];\n\n  if (!coordSysItem) {\n    coordSysItem = dataByCoordSys.map[coordSysKey] = {\n      coordSysId: coordSysModel.id,\n      coordSysIndex: coordSysModel.componentIndex,\n      coordSysType: coordSysModel.type,\n      coordSysMainType: coordSysModel.mainType,\n      dataByAxis: []\n    };\n    dataByCoordSys.list.push(coordSysItem);\n  }\n\n  coordSysItem.dataByAxis.push({\n    axisDim: axis.dim,\n    axisIndex: axisModel.componentIndex,\n    axisType: axisModel.type,\n    axisId: axisModel.id,\n    value: value,\n    // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n    // depends that all models have been updated. So it should not be performed\n    // here. Considering axisPointerModel used here is volatile, which is hard\n    // to be retrieve in TooltipView, we prepare parameters here.\n    valueLabelOpt: {\n      precision: axisPointerModel.get('label.precision'),\n      formatter: axisPointerModel.get('label.formatter')\n    },\n    seriesDataIndices: payloadBatch.slice()\n  });\n}\n\nfunction updateModelActually(showValueMap, axesInfo, outputFinder) {\n  var outputAxesInfo = outputFinder.axesInfo = []; // Basic logic: If no 'show' required, 'hide' this axisPointer.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    var valItem = showValueMap[key];\n\n    if (valItem) {\n      !axisInfo.useHandle && (option.status = 'show');\n      option.value = valItem.value; // For label formatter param and highlight.\n\n      option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n    } // When always show (e.g., handle used), remain\n    // original value and status.\n    else {\n        // If hide, value still need to be set, consider\n        // click legend to toggle axis blank.\n        !axisInfo.useHandle && (option.status = 'hide');\n      } // If status is 'hide', should be no info in payload.\n\n\n    option.status === 'show' && outputAxesInfo.push({\n      axisDim: axisInfo.axis.dim,\n      axisIndex: axisInfo.axis.model.componentIndex,\n      value: option.value\n    });\n  });\n}\n\nfunction dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n  // Basic logic: If no showTip required, hideTip will be dispatched.\n  if (illegalPoint(point) || !dataByCoordSys.list.length) {\n    dispatchAction({\n      type: 'hideTip'\n    });\n    return;\n  } // In most case only one axis (or event one series is used). It is\n  // convinient to fetch payload.seriesIndex and payload.dataIndex\n  // dirtectly. So put the first seriesIndex and dataIndex of the first\n  // axis on the payload.\n\n\n  var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n  dispatchAction({\n    type: 'showTip',\n    escapeConnect: true,\n    x: point[0],\n    y: point[1],\n    tooltipOption: payload.tooltipOption,\n    position: payload.position,\n    dataIndexInside: sampleItem.dataIndexInside,\n    dataIndex: sampleItem.dataIndex,\n    seriesIndex: sampleItem.seriesIndex,\n    dataByCoordSys: dataByCoordSys.list\n  });\n}\n\nfunction dispatchHighDownActually(axesInfo, dispatchAction, api) {\n  // FIXME\n  // highlight status modification shoule be a stage of main process?\n  // (Consider confilct (e.g., legend and axisPointer) and setOption)\n  var zr = api.getZr();\n  var highDownKey = 'axisPointerLastHighlights';\n  var lastHighlights = get(zr)[highDownKey] || {};\n  var newHighlights = get(zr)[highDownKey] = {}; // Update highlight/downplay status according to axisPointer model.\n  // Build hash map and remove duplicate incidentally.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n      var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n      newHighlights[key] = batchItem;\n    });\n  }); // Diff.\n\n  var toHighlight = [];\n  var toDownplay = [];\n  zrUtil.each(lastHighlights, function (batchItem, key) {\n    !newHighlights[key] && toDownplay.push(batchItem);\n  });\n  zrUtil.each(newHighlights, function (batchItem, key) {\n    !lastHighlights[key] && toHighlight.push(batchItem);\n  });\n  toDownplay.length && api.dispatchAction({\n    type: 'downplay',\n    escapeConnect: true,\n    batch: toDownplay\n  });\n  toHighlight.length && api.dispatchAction({\n    type: 'highlight',\n    escapeConnect: true,\n    batch: toHighlight\n  });\n}\n\nfunction findInputAxisInfo(inputAxesInfo, axisInfo) {\n  for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n    var inputAxisInfo = inputAxesInfo[i];\n\n    if (axisInfo.axis.dim === inputAxisInfo.axisDim && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex) {\n      return inputAxisInfo;\n    }\n  }\n}\n\nfunction makeMapperParam(axisInfo) {\n  var axisModel = axisInfo.axis.model;\n  var item = {};\n  var dim = item.axisDim = axisInfo.axis.dim;\n  item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n  item.axisName = item[dim + 'AxisName'] = axisModel.name;\n  item.axisId = item[dim + 'AxisId'] = axisModel.id;\n  return item;\n}\n\nfunction illegalPoint(point) {\n  return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/axisTrigger.js\n// module id = 1136\n// module chunks = 0 1 2","var echarts = require(\"../../echarts\");\n\nvar AxisPointerModel = echarts.extendComponentModel({\n  type: 'axisPointer',\n  coordSysAxesInfo: null,\n  defaultOption: {\n    // 'auto' means that show when triggered by tooltip or handle.\n    show: 'auto',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: null,\n    // set default in AxisPonterView.js\n    zlevel: 0,\n    z: 50,\n    type: 'line',\n    // axispointer triggered by tootip determine snap automatically,\n    // see `modelHelper`.\n    snap: false,\n    triggerTooltip: true,\n    value: null,\n    status: null,\n    // Init value depends on whether handle is used.\n    // [group0, group1, ...]\n    // Each group can be: {\n    //      mapper: function () {},\n    //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n    //      xAxisId: ...,\n    //      yAxisName: ...,\n    //      angleAxisIndex: ...\n    // }\n    // mapper: can be ignored.\n    //      input: {axisInfo, value}\n    //      output: {axisInfo, value}\n    link: [],\n    // Do not set 'auto' here, otherwise global animation: false\n    // will not effect at this axispointer.\n    animation: null,\n    animationDurationUpdate: 200,\n    lineStyle: {\n      color: '#aaa',\n      width: 1,\n      type: 'solid'\n    },\n    shadowStyle: {\n      color: 'rgba(150,150,150,0.3)'\n    },\n    label: {\n      show: true,\n      formatter: null,\n      // string | Function\n      precision: 'auto',\n      // Or a number like 0, 1, 2 ...\n      margin: 3,\n      color: '#fff',\n      padding: [5, 7, 5, 7],\n      backgroundColor: 'auto',\n      // default: axis line color\n      borderColor: null,\n      borderWidth: 0,\n      shadowBlur: 3,\n      shadowColor: '#aaa' // Considering applicability, common style should\n      // better not have shadowOffset.\n      // shadowOffsetX: 0,\n      // shadowOffsetY: 2\n\n    },\n    handle: {\n      show: false,\n      icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z',\n      // jshint ignore:line\n      size: 45,\n      // handle margin is from symbol center to axis, which is stable when circular move.\n      margin: 50,\n      // color: '#1b8bbd'\n      // color: '#2f4554'\n      color: '#333',\n      shadowBlur: 3,\n      shadowColor: '#aaa',\n      shadowOffsetX: 0,\n      shadowOffsetY: 2,\n      // For mobile performance\n      throttle: 40\n    }\n  }\n});\nvar _default = AxisPointerModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/AxisPointerModel.js\n// module id = 1137\n// module chunks = 0 1 2","var echarts = require(\"../../echarts\");\n\nvar globalListener = require(\"./globalListener\");\n\nvar AxisPointerView = echarts.extendComponentView({\n  type: 'axisPointer',\n  render: function (globalAxisPointerModel, ecModel, api) {\n    var globalTooltipModel = ecModel.getComponent('tooltip');\n    var triggerOn = globalAxisPointerModel.get('triggerOn') || globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click'; // Register global listener in AxisPointerView to enable\n    // AxisPointerView to be independent to Tooltip.\n\n    globalListener.register('axisPointer', api, function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none' && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)) {\n        dispatchAction({\n          type: 'updateAxisPointer',\n          currTrigger: currTrigger,\n          x: e && e.offsetX,\n          y: e && e.offsetY\n        });\n      }\n    });\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    globalListener.unregister(api.getZr(), 'axisPointer');\n    AxisPointerView.superApply(this._model, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    globalListener.unregister('axisPointer', api);\n    AxisPointerView.superApply(this._model, 'dispose', arguments);\n  }\n});\nvar _default = AxisPointerView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/AxisPointerView.js\n// module id = 1138\n// module chunks = 0 1 2","var echarts = require(\"../../echarts\");\n\nvar _default = echarts.extendComponentModel({\n  type: 'tooltip',\n  dependencies: ['axisPointer'],\n  defaultOption: {\n    zlevel: 0,\n    z: 8,\n    show: true,\n    // tooltip主体内容\n    showContent: true,\n    // 'trigger' only works on coordinate system.\n    // 'item' | 'axis' | 'none'\n    trigger: 'item',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: 'mousemove|click',\n    alwaysShowContent: false,\n    displayMode: 'single',\n    // 'single' | 'multipleByCoordSys'\n    // 位置 {Array} | {Function}\n    // position: null\n    // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n    // align: null,\n    // verticalAlign: null,\n    // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n    confine: false,\n    // 内容格式器：{string}（Template） ¦ {Function}\n    // formatter: null\n    showDelay: 0,\n    // 隐藏延迟，单位ms\n    hideDelay: 100,\n    // 动画变换时间，单位s\n    transitionDuration: 0.4,\n    enterable: false,\n    // 提示背景颜色，默认为透明度为0.7的黑色\n    backgroundColor: 'rgba(50,50,50,0.7)',\n    // 提示边框颜色\n    borderColor: '#333',\n    // 提示边框圆角，单位px，默认为4\n    borderRadius: 4,\n    // 提示边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 提示内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // Extra css text\n    extraCssText: '',\n    // 坐标轴指示器，坐标轴触发有效\n    axisPointer: {\n      // 默认为直线\n      // 可选为：'line' | 'shadow' | 'cross'\n      type: 'line',\n      // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n      // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n      // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n      // 极坐标系会默认选择 angle 轴\n      axis: 'auto',\n      animation: 'auto',\n      animationDurationUpdate: 200,\n      animationEasingUpdate: 'exponentialOut',\n      crossStyle: {\n        color: '#999',\n        width: 1,\n        type: 'dashed',\n        // TODO formatter\n        textStyle: {} // lineStyle and shadowStyle should not be specified here,\n        // otherwise it will always override those styles on option.axisPointer.\n\n      }\n    },\n    textStyle: {\n      color: '#fff',\n      fontSize: 14\n    }\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/tooltip/TooltipModel.js\n// module id = 1139\n// module chunks = 0 1 2","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar TooltipContent = require(\"./TooltipContent\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar findPointFromSeries = require(\"../axisPointer/findPointFromSeries\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar Model = require(\"../../model/Model\");\n\nvar globalListener = require(\"../axisPointer/globalListener\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar axisPointerViewHelper = require(\"../axisPointer/viewHelper\");\n\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar parsePercent = numberUtil.parsePercent;\nvar proxyRect = new graphic.Rect({\n  shape: {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  }\n});\n\nvar _default = echarts.extendComponentView({\n  type: 'tooltip',\n  init: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    var tooltipContent = new TooltipContent(api.getDom(), api);\n    this._tooltipContent = tooltipContent;\n  },\n  render: function (tooltipModel, ecModel, api) {\n    if (env.node) {\n      return;\n    } // Reset\n\n\n    this.group.removeAll();\n    /**\n     * @private\n     * @type {module:echarts/component/tooltip/TooltipModel}\n     */\n\n    this._tooltipModel = tooltipModel;\n    /**\n     * @private\n     * @type {module:echarts/model/Global}\n     */\n\n    this._ecModel = ecModel;\n    /**\n     * @private\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this._api = api;\n    /**\n     * Should be cleaned when render.\n     * @private\n     * @type {Array.<Array.<Object>>}\n     */\n\n    this._lastDataByCoordSys = null;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.update();\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n    this._initGlobalListener();\n\n    this._keepShow();\n  },\n  _initGlobalListener: function () {\n    var tooltipModel = this._tooltipModel;\n    var triggerOn = tooltipModel.get('triggerOn');\n    globalListener.register('itemTooltip', this._api, bind(function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none') {\n        if (triggerOn.indexOf(currTrigger) >= 0) {\n          this._tryShow(e, dispatchAction);\n        } else if (currTrigger === 'leave') {\n          this._hide(dispatchAction);\n        }\n      }\n    }, this));\n  },\n  _keepShow: function () {\n    var tooltipModel = this._tooltipModel;\n    var ecModel = this._ecModel;\n    var api = this._api; // Try to keep the tooltip show when refreshing\n\n    if (this._lastX != null && this._lastY != null // When user is willing to control tooltip totally using API,\n    // self.manuallyShowTip({x, y}) might cause tooltip hide,\n    // which is not expected.\n    && tooltipModel.get('triggerOn') !== 'none') {\n      var self = this;\n      clearTimeout(this._refreshUpdateTimeout);\n      this._refreshUpdateTimeout = setTimeout(function () {\n        // Show tip next tick after other charts are rendered\n        // In case highlight action has wrong result\n        // FIXME\n        self.manuallyShowTip(tooltipModel, ecModel, api, {\n          x: self._lastX,\n          y: self._lastY\n        });\n      });\n    }\n  },\n\n  /**\n   * Show tip manually by\n   * dispatchAction({\n   *     type: 'showTip',\n   *     x: 10,\n   *     y: 10\n   * });\n   * Or\n   * dispatchAction({\n   *      type: 'showTip',\n   *      seriesIndex: 0,\n   *      dataIndex or dataIndexInside or name\n   * });\n   *\n   *  TODO Batch\n   */\n  manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n    if (payload.from === this.uid || env.node) {\n      return;\n    }\n\n    var dispatchAction = makeDispatchAction(payload, api); // Reset ticket\n\n    this._ticket = ''; // When triggered from axisPointer.\n\n    var dataByCoordSys = payload.dataByCoordSys;\n\n    if (payload.tooltip && payload.x != null && payload.y != null) {\n      var el = proxyRect;\n      el.position = [payload.x, payload.y];\n      el.update();\n      el.tooltip = payload.tooltip; // Manually show tooltip while view is not using zrender elements.\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        target: el\n      }, dispatchAction);\n    } else if (dataByCoordSys) {\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        event: {},\n        dataByCoordSys: payload.dataByCoordSys,\n        tooltipOption: payload.tooltipOption\n      }, dispatchAction);\n    } else if (payload.seriesIndex != null) {\n      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n        return;\n      }\n\n      var pointInfo = findPointFromSeries(payload, ecModel);\n      var cx = pointInfo.point[0];\n      var cy = pointInfo.point[1];\n\n      if (cx != null && cy != null) {\n        this._tryShow({\n          offsetX: cx,\n          offsetY: cy,\n          position: payload.position,\n          target: pointInfo.el,\n          event: {}\n        }, dispatchAction);\n      }\n    } else if (payload.x != null && payload.y != null) {\n      // FIXME\n      // should wrap dispatchAction like `axisPointer/globalListener` ?\n      api.dispatchAction({\n        type: 'updateAxisPointer',\n        x: payload.x,\n        y: payload.y\n      });\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        target: api.getZr().findHover(payload.x, payload.y).target,\n        event: {}\n      }, dispatchAction);\n    }\n  },\n  manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n    var tooltipContent = this._tooltipContent;\n\n    if (!this._alwaysShowContent) {\n      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n    }\n\n    this._lastX = this._lastY = null;\n\n    if (payload.from !== this.uid) {\n      this._hide(makeDispatchAction(payload, api));\n    }\n  },\n  // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n  // and tooltip.\n  _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n    var seriesIndex = payload.seriesIndex;\n    var dataIndex = payload.dataIndex;\n    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n      return;\n    }\n\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (!seriesModel) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model, tooltipModel]);\n\n    if (tooltipModel.get('trigger') !== 'axis') {\n      return;\n    }\n\n    api.dispatchAction({\n      type: 'updateAxisPointer',\n      seriesIndex: seriesIndex,\n      dataIndex: dataIndex,\n      position: payload.position\n    });\n    return true;\n  },\n  _tryShow: function (e, dispatchAction) {\n    var el = e.target;\n    var tooltipModel = this._tooltipModel;\n\n    if (!tooltipModel) {\n      return;\n    } // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n\n\n    this._lastX = e.offsetX;\n    this._lastY = e.offsetY;\n    var dataByCoordSys = e.dataByCoordSys;\n\n    if (dataByCoordSys && dataByCoordSys.length) {\n      this._showAxisTooltip(dataByCoordSys, e);\n    } // Always show item tooltip if mouse is on the element with dataIndex\n    else if (el && el.dataIndex != null) {\n        this._lastDataByCoordSys = null;\n\n        this._showSeriesItemTooltip(e, el, dispatchAction);\n      } // Tooltip provided directly. Like legend.\n      else if (el && el.tooltip) {\n          this._lastDataByCoordSys = null;\n\n          this._showComponentItemTooltip(e, el, dispatchAction);\n        } else {\n          this._lastDataByCoordSys = null;\n\n          this._hide(dispatchAction);\n        }\n  },\n  _showOrMove: function (tooltipModel, cb) {\n    // showDelay is used in this case: tooltip.enterable is set\n    // as true. User intent to move mouse into tooltip and click\n    // something. `showDelay` makes it easyer to enter the content\n    // but tooltip do not move immediately.\n    var delay = tooltipModel.get('showDelay');\n    cb = zrUtil.bind(cb, this);\n    clearTimeout(this._showTimout);\n    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\n  },\n  _showAxisTooltip: function (dataByCoordSys, e) {\n    var ecModel = this._ecModel;\n    var globalTooltipModel = this._tooltipModel;\n    var point = [e.offsetX, e.offsetY];\n    var singleDefaultHTML = [];\n    var singleParamsList = [];\n    var singleTooltipModel = buildTooltipModel([e.tooltipOption, globalTooltipModel]);\n    each(dataByCoordSys, function (itemCoordSys) {\n      // var coordParamList = [];\n      // var coordDefaultHTML = [];\n      // var coordTooltipModel = buildTooltipModel([\n      //     e.tooltipOption,\n      //     itemCoordSys.tooltipOption,\n      //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n      //     globalTooltipModel\n      // ]);\n      // var displayMode = coordTooltipModel.get('displayMode');\n      // var paramsList = displayMode === 'single' ? singleParamsList : [];\n      each(itemCoordSys.dataByAxis, function (item) {\n        var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n        var axisValue = item.value;\n        var seriesDefaultHTML = [];\n\n        if (!axisModel || axisValue == null) {\n          return;\n        }\n\n        var valueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, item.seriesDataIndices, item.valueLabelOpt);\n        zrUtil.each(item.seriesDataIndices, function (idxItem) {\n          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n          var dataIndex = idxItem.dataIndexInside;\n          var dataParams = series && series.getDataParams(dataIndex);\n          dataParams.axisDim = item.axisDim;\n          dataParams.axisIndex = item.axisIndex;\n          dataParams.axisType = item.axisType;\n          dataParams.axisId = item.axisId;\n          dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n          dataParams.axisValueLabel = valueLabel;\n\n          if (dataParams) {\n            singleParamsList.push(dataParams);\n            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n          }\n        }); // Default tooltip content\n        // FIXME\n        // (1) shold be the first data which has name?\n        // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n\n        var firstLine = valueLabel;\n        singleDefaultHTML.push((firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '') + seriesDefaultHTML.join('<br />'));\n      });\n    }, this); // In most case, the second axis is shown upper than the first one.\n\n    singleDefaultHTML.reverse();\n    singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n    var positionExpr = e.position;\n\n    this._showOrMove(singleTooltipModel, function () {\n      if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, singleParamsList);\n      } else {\n        this._showTooltipContent(singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(), point[0], point[1], positionExpr);\n      }\n    }); // Do not trigger events here, because this branch only be entered\n    // from dispatchAction.\n\n  },\n  _showSeriesItemTooltip: function (e, el, dispatchAction) {\n    var ecModel = this._ecModel; // Use dataModel in element if possible\n    // Used when mouseover on a element like markPoint or edge\n    // In which case, the data is not main data in series.\n\n    var seriesIndex = el.seriesIndex;\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex); // For example, graph link.\n\n    var dataModel = el.dataModel || seriesModel;\n    var dataIndex = el.dataIndex;\n    var dataType = el.dataType;\n    var data = dataModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model, this._tooltipModel]);\n    var tooltipTrigger = tooltipModel.get('trigger');\n\n    if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n      return;\n    }\n\n    var params = dataModel.getDataParams(dataIndex, dataType);\n    var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n    this._showOrMove(tooltipModel, function () {\n      this._showTooltipContent(tooltipModel, defaultHtml, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target);\n    }); // FIXME\n    // duplicated showtip if manuallyShowTip is called from dispatchAction.\n\n\n    dispatchAction({\n      type: 'showTip',\n      dataIndexInside: dataIndex,\n      dataIndex: data.getRawIndex(dataIndex),\n      seriesIndex: seriesIndex,\n      from: this.uid\n    });\n  },\n  _showComponentItemTooltip: function (e, el, dispatchAction) {\n    var tooltipOpt = el.tooltip;\n\n    if (typeof tooltipOpt === 'string') {\n      var content = tooltipOpt;\n      tooltipOpt = {\n        content: content,\n        // Fixed formatter\n        formatter: content\n      };\n    }\n\n    var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n    var defaultHtml = subTooltipModel.get('content');\n    var asyncTicket = Math.random(); // Do not check whether `trigger` is 'none' here, because `trigger`\n    // only works on cooridinate system. In fact, we have not found case\n    // that requires setting `trigger` nothing on component yet.\n\n    this._showOrMove(subTooltipModel, function () {\n      this._showTooltipContent(subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {}, asyncTicket, e.offsetX, e.offsetY, e.position, el);\n    }); // If not dispatch showTip, tip may be hide triggered by axis.\n\n\n    dispatchAction({\n      type: 'showTip',\n      from: this.uid\n    });\n  },\n  _showTooltipContent: function (tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el) {\n    // Reset ticket\n    this._ticket = '';\n\n    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n      return;\n    }\n\n    var tooltipContent = this._tooltipContent;\n    var formatter = tooltipModel.get('formatter');\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var html = defaultHtml;\n\n    if (formatter && typeof formatter === 'string') {\n      html = formatUtil.formatTpl(formatter, params, true);\n    } else if (typeof formatter === 'function') {\n      var callback = bind(function (cbTicket, html) {\n        if (cbTicket === this._ticket) {\n          tooltipContent.setContent(html);\n\n          this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n        }\n      }, this);\n      this._ticket = asyncTicket;\n      html = formatter(params, asyncTicket, callback);\n    }\n\n    tooltipContent.setContent(html);\n    tooltipContent.show(tooltipModel);\n\n    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n  },\n\n  /**\n   * @param  {string|Function|Array.<number>|Object} positionExpr\n   * @param  {number} x Mouse x\n   * @param  {number} y Mouse y\n   * @param  {boolean} confine Whether confine tooltip content in view rect.\n   * @param  {Object|<Array.<Object>} params\n   * @param  {module:zrender/Element} el target element\n   * @param  {module:echarts/ExtensionAPI} api\n   * @return {Array.<number>}\n   */\n  _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n    var viewWidth = this._api.getWidth();\n\n    var viewHeight = this._api.getHeight();\n\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var contentSize = content.getSize();\n    var align = tooltipModel.get('align');\n    var vAlign = tooltipModel.get('verticalAlign');\n    var rect = el && el.getBoundingRect().clone();\n    el && rect.applyTransform(el.transform);\n\n    if (typeof positionExpr === 'function') {\n      // Callback of position can be an array or a string specify the position\n      positionExpr = positionExpr([x, y], params, content.el, rect, {\n        viewSize: [viewWidth, viewHeight],\n        contentSize: contentSize.slice()\n      });\n    }\n\n    if (zrUtil.isArray(positionExpr)) {\n      x = parsePercent(positionExpr[0], viewWidth);\n      y = parsePercent(positionExpr[1], viewHeight);\n    } else if (zrUtil.isObject(positionExpr)) {\n      positionExpr.width = contentSize[0];\n      positionExpr.height = contentSize[1];\n      var layoutRect = layoutUtil.getLayoutRect(positionExpr, {\n        width: viewWidth,\n        height: viewHeight\n      });\n      x = layoutRect.x;\n      y = layoutRect.y;\n      align = null; // When positionExpr is left/top/right/bottom,\n      // align and verticalAlign will not work.\n\n      vAlign = null;\n    } // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n    else if (typeof positionExpr === 'string' && el) {\n        var pos = calcTooltipPosition(positionExpr, rect, contentSize);\n        x = pos[0];\n        y = pos[1];\n      } else {\n        var pos = refixTooltipPosition(x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\n        x = pos[0];\n        y = pos[1];\n      }\n\n    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n    if (tooltipModel.get('confine')) {\n      var pos = confineTooltipPosition(x, y, content.el, viewWidth, viewHeight);\n      x = pos[0];\n      y = pos[1];\n    }\n\n    content.moveTo(x, y);\n  },\n  // FIXME\n  // Should we remove this but leave this to user?\n  _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n    var lastCoordSys = this._lastDataByCoordSys;\n    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\n    contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n      var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n      contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n      contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n        var thisItem = thisDataByAxis[indexAxis] || {};\n        var lastIndices = lastItem.seriesDataIndices || [];\n        var newIndices = thisItem.seriesDataIndices || [];\n        contentNotChanged &= lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\n        contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n          var newIdxItem = newIndices[j];\n          contentNotChanged &= lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n        });\n      });\n    });\n    this._lastDataByCoordSys = dataByCoordSys;\n    return !!contentNotChanged;\n  },\n  _hide: function (dispatchAction) {\n    // Do not directly hideLater here, because this behavior may be prevented\n    // in dispatchAction when showTip is dispatched.\n    // FIXME\n    // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n    this._lastDataByCoordSys = null;\n    dispatchAction({\n      type: 'hideTip',\n      from: this.uid\n    });\n  },\n  dispose: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    this._tooltipContent.hide();\n\n    globalListener.unregister('itemTooltip', api);\n  }\n});\n/**\n * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n * From top to bottom. (the last one should be globalTooltipModel);\n */\n\n\nfunction buildTooltipModel(modelCascade) {\n  var resultModel = modelCascade.pop();\n\n  while (modelCascade.length) {\n    var tooltipOpt = modelCascade.pop();\n\n    if (tooltipOpt) {\n      if (tooltipOpt instanceof Model) {\n        tooltipOpt = tooltipOpt.get('tooltip', true);\n      } // In each data item tooltip can be simply write:\n      // {\n      //  value: 10,\n      //  tooltip: 'Something you need to know'\n      // }\n\n\n      if (typeof tooltipOpt === 'string') {\n        tooltipOpt = {\n          formatter: tooltipOpt\n        };\n      }\n\n      resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n    }\n  }\n\n  return resultModel;\n}\n\nfunction makeDispatchAction(payload, api) {\n  return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n}\n\nfunction refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n\n  if (gapH != null) {\n    if (x + width + gapH > viewWidth) {\n      x -= width + gapH;\n    } else {\n      x += gapH;\n    }\n  }\n\n  if (gapV != null) {\n    if (y + height + gapV > viewHeight) {\n      y -= height + gapV;\n    } else {\n      y += gapV;\n    }\n  }\n\n  return [x, y];\n}\n\nfunction confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n  x = Math.min(x + width, viewWidth) - width;\n  y = Math.min(y + height, viewHeight) - height;\n  x = Math.max(x, 0);\n  y = Math.max(y, 0);\n  return [x, y];\n}\n\nfunction getOuterSize(el) {\n  var width = el.clientWidth;\n  var height = el.clientHeight; // Consider browser compatibility.\n  // IE8 does not support getComputedStyle.\n\n  if (document.defaultView && document.defaultView.getComputedStyle) {\n    var stl = document.defaultView.getComputedStyle(el);\n\n    if (stl) {\n      width += parseInt(stl.paddingLeft, 10) + parseInt(stl.paddingRight, 10) + parseInt(stl.borderLeftWidth, 10) + parseInt(stl.borderRightWidth, 10);\n      height += parseInt(stl.paddingTop, 10) + parseInt(stl.paddingBottom, 10) + parseInt(stl.borderTopWidth, 10) + parseInt(stl.borderBottomWidth, 10);\n    }\n  }\n\n  return {\n    width: width,\n    height: height\n  };\n}\n\nfunction calcTooltipPosition(position, rect, contentSize) {\n  var domWidth = contentSize[0];\n  var domHeight = contentSize[1];\n  var gap = 5;\n  var x = 0;\n  var y = 0;\n  var rectWidth = rect.width;\n  var rectHeight = rect.height;\n\n  switch (position) {\n    case 'inside':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'top':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y - domHeight - gap;\n      break;\n\n    case 'bottom':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight + gap;\n      break;\n\n    case 'left':\n      x = rect.x - domWidth - gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'right':\n      x = rect.x + rectWidth + gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n  }\n\n  return [x, y];\n}\n\nfunction isCenterAlign(align) {\n  return align === 'center' || align === 'middle';\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/tooltip/TooltipView.js\n// module id = 1140\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar zrColor = require(\"zrender/lib/tool/color\");\n\nvar eventUtil = require(\"zrender/lib/core/event\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar each = zrUtil.each;\nvar toCamelCase = formatUtil.toCamelCase;\nvar vendors = ['', '-webkit-', '-moz-', '-o-'];\nvar gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n/**\n * @param {number} duration\n * @return {string}\n * @inner\n */\n\nfunction assembleTransition(duration) {\n  var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n  var transitionText = 'left ' + duration + 's ' + transitionCurve + ',' + 'top ' + duration + 's ' + transitionCurve;\n  return zrUtil.map(vendors, function (vendorPrefix) {\n    return vendorPrefix + 'transition:' + transitionText;\n  }).join(';');\n}\n/**\n * @param {Object} textStyle\n * @return {string}\n * @inner\n */\n\n\nfunction assembleFont(textStyleModel) {\n  var cssText = [];\n  var fontSize = textStyleModel.get('fontSize');\n  var color = textStyleModel.getTextColor();\n  color && cssText.push('color:' + color);\n  cssText.push('font:' + textStyleModel.getFont());\n  fontSize && cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n  each(['decoration', 'align'], function (name) {\n    var val = textStyleModel.get(name);\n    val && cssText.push('text-' + name + ':' + val);\n  });\n  return cssText.join(';');\n}\n/**\n * @param {Object} tooltipModel\n * @return {string}\n * @inner\n */\n\n\nfunction assembleCssText(tooltipModel) {\n  var cssText = [];\n  var transitionDuration = tooltipModel.get('transitionDuration');\n  var backgroundColor = tooltipModel.get('backgroundColor');\n  var textStyleModel = tooltipModel.getModel('textStyle');\n  var padding = tooltipModel.get('padding'); // Animation transition. Do not animate when transitionDuration is 0.\n\n  transitionDuration && cssText.push(assembleTransition(transitionDuration));\n\n  if (backgroundColor) {\n    if (env.canvasSupported) {\n      cssText.push('background-Color:' + backgroundColor);\n    } else {\n      // for ie\n      cssText.push('background-Color:#' + zrColor.toHex(backgroundColor));\n      cssText.push('filter:alpha(opacity=70)');\n    }\n  } // Border style\n\n\n  each(['width', 'color', 'radius'], function (name) {\n    var borderName = 'border-' + name;\n    var camelCase = toCamelCase(borderName);\n    var val = tooltipModel.get(camelCase);\n    val != null && cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n  }); // Text style\n\n  cssText.push(assembleFont(textStyleModel)); // Padding\n\n  if (padding != null) {\n    cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n  }\n\n  return cssText.join(';') + ';';\n}\n/**\n * @alias module:echarts/component/tooltip/TooltipContent\n * @constructor\n */\n\n\nfunction TooltipContent(container, api) {\n  var el = document.createElement('div');\n  var zr = this._zr = api.getZr();\n  this.el = el;\n  this._x = api.getWidth() / 2;\n  this._y = api.getHeight() / 2;\n  container.appendChild(el);\n  this._container = container;\n  this._show = false;\n  /**\n   * @private\n   */\n\n  this._hideTimeout;\n  var self = this;\n\n  el.onmouseenter = function () {\n    // clear the timeout in hideLater and keep showing tooltip\n    if (self._enterable) {\n      clearTimeout(self._hideTimeout);\n      self._show = true;\n    }\n\n    self._inContent = true;\n  };\n\n  el.onmousemove = function (e) {\n    e = e || window.event;\n\n    if (!self._enterable) {\n      // Try trigger zrender event to avoid mouse\n      // in and out shape too frequently\n      var handler = zr.handler;\n      eventUtil.normalizeEvent(container, e, true);\n      handler.dispatch('mousemove', e);\n    }\n  };\n\n  el.onmouseleave = function () {\n    if (self._enterable) {\n      if (self._show) {\n        self.hideLater(self._hideDelay);\n      }\n    }\n\n    self._inContent = false;\n  };\n}\n\nTooltipContent.prototype = {\n  constructor: TooltipContent,\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  _enterable: true,\n\n  /**\n   * Update when tooltip is rendered\n   */\n  update: function () {\n    // FIXME\n    // Move this logic to ec main?\n    var container = this._container;\n    var stl = container.currentStyle || document.defaultView.getComputedStyle(container);\n    var domStyle = container.style;\n\n    if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n      domStyle.position = 'relative';\n    } // Hide the tooltip\n    // PENDING\n    // this.hide();\n\n  },\n  show: function (tooltipModel) {\n    clearTimeout(this._hideTimeout);\n    var el = this.el;\n    el.style.cssText = gCssText + assembleCssText(tooltipModel) // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n    + ';left:' + this._x + 'px;top:' + this._y + 'px;' + (tooltipModel.get('extraCssText') || '');\n    el.style.display = el.innerHTML ? 'block' : 'none';\n    this._show = true;\n  },\n  setContent: function (content) {\n    this.el.innerHTML = content == null ? '' : content;\n  },\n  setEnterable: function (enterable) {\n    this._enterable = enterable;\n  },\n  getSize: function () {\n    var el = this.el;\n    return [el.clientWidth, el.clientHeight];\n  },\n  moveTo: function (x, y) {\n    // xy should be based on canvas root. But tooltipContent is\n    // the sibling of canvas root. So padding of ec container\n    // should be considered here.\n    var zr = this._zr;\n    var viewportRootOffset;\n\n    if (zr && zr.painter && (viewportRootOffset = zr.painter.getViewportRootOffset())) {\n      x += viewportRootOffset.offsetLeft;\n      y += viewportRootOffset.offsetTop;\n    }\n\n    var style = this.el.style;\n    style.left = x + 'px';\n    style.top = y + 'px';\n    this._x = x;\n    this._y = y;\n  },\n  hide: function () {\n    this.el.style.display = 'none';\n    this._show = false;\n  },\n  hideLater: function (time) {\n    if (this._show && !(this._inContent && this._enterable)) {\n      if (time) {\n        this._hideDelay = time; // Set show false to avoid invoke hideLater mutiple times\n\n        this._show = false;\n        this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n      } else {\n        this.hide();\n      }\n    }\n  },\n  isShow: function () {\n    return this._show;\n  }\n};\nvar _default = TooltipContent;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/tooltip/TooltipContent.js\n// module id = 1141\n// module chunks = 0 1 2","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nfunction legendSelectActionHandler(methodName, payload, ecModel) {\n  var selectedMap = {};\n  var isToggleSelect = methodName === 'toggleSelected';\n  var isSelected; // Update all legend components\n\n  ecModel.eachComponent('legend', function (legendModel) {\n    if (isToggleSelect && isSelected != null) {\n      // Force other legend has same selected status\n      // Or the first is toggled to true and other are toggled to false\n      // In the case one legend has some item unSelected in option. And if other legend\n      // doesn't has the item, they will assume it is selected.\n      legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n    } else {\n      legendModel[methodName](payload.name);\n      isSelected = legendModel.isSelected(payload.name);\n    }\n\n    var legendData = legendModel.getData();\n    zrUtil.each(legendData, function (model) {\n      var name = model.get('name'); // Wrap element\n\n      if (name === '\\n' || name === '') {\n        return;\n      }\n\n      var isItemSelected = legendModel.isSelected(name);\n\n      if (selectedMap.hasOwnProperty(name)) {\n        // Unselected if any legend is unselected\n        selectedMap[name] = selectedMap[name] && isItemSelected;\n      } else {\n        selectedMap[name] = isItemSelected;\n      }\n    });\n  }); // Return the event explicitly\n\n  return {\n    name: payload.name,\n    selected: selectedMap\n  };\n}\n/**\n * @event legendToggleSelect\n * @type {Object}\n * @property {string} type 'legendToggleSelect'\n * @property {string} [from]\n * @property {string} name Series name or data item name\n */\n\n\necharts.registerAction('legendToggleSelect', 'legendselectchanged', zrUtil.curry(legendSelectActionHandler, 'toggleSelected'));\n/**\n * @event legendSelect\n * @type {Object}\n * @property {string} type 'legendSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendSelect', 'legendselected', zrUtil.curry(legendSelectActionHandler, 'select'));\n/**\n * @event legendUnSelect\n * @type {Object}\n * @property {string} type 'legendUnSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendUnSelect', 'legendunselected', zrUtil.curry(legendSelectActionHandler, 'unSelect'));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/legendAction.js\n// module id = 1142\n// module chunks = 0 1 2","function _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (legendModels && legendModels.length) {\n    ecModel.filterSeries(function (series) {\n      // If in any legend component the status is not selected.\n      // Because in legend series is assumed selected when it is not in the legend data.\n      for (var i = 0; i < legendModels.length; i++) {\n        if (!legendModels[i].isSelected(series.name)) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/legendFilter.js\n// module id = 1143\n// module chunks = 0 1 2","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar featureManager = require(\"./featureManager\");\n\nvar ToolboxModel = echarts.extendComponentModel({\n  type: 'toolbox',\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n  mergeDefaultAndTheme: function (option) {\n    ToolboxModel.superApply(this, 'mergeDefaultAndTheme', arguments);\n    zrUtil.each(this.option.feature, function (featureOpt, featureName) {\n      var Feature = featureManager.get(featureName);\n      Feature && zrUtil.merge(featureOpt, Feature.defaultOption);\n    });\n  },\n  defaultOption: {\n    show: true,\n    z: 6,\n    zlevel: 0,\n    orient: 'horizontal',\n    left: 'right',\n    top: 'top',\n    // right\n    // bottom\n    backgroundColor: 'transparent',\n    borderColor: '#ccc',\n    borderRadius: 0,\n    borderWidth: 0,\n    padding: 5,\n    itemSize: 15,\n    itemGap: 8,\n    showTitle: true,\n    iconStyle: {\n      normal: {\n        borderColor: '#666',\n        color: 'none'\n      },\n      emphasis: {\n        borderColor: '#3E98C5'\n      } // textStyle: {},\n      // feature\n\n    }\n  }\n});\nvar _default = ToolboxModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox/ToolboxModel.js\n// module id = 1146\n// module chunks = 0 1 2","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar featureManager = require(\"./featureManager\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\nvar listComponentHelper = require(\"../helper/listComponent\");\n\nvar _default = echarts.extendComponentView({\n  type: 'toolbox',\n  render: function (toolboxModel, ecModel, api, payload) {\n    var group = this.group;\n    group.removeAll();\n\n    if (!toolboxModel.get('show')) {\n      return;\n    }\n\n    var itemSize = +toolboxModel.get('itemSize');\n    var featureOpts = toolboxModel.get('feature') || {};\n    var features = this._features || (this._features = {});\n    var featureNames = [];\n    zrUtil.each(featureOpts, function (opt, name) {\n      featureNames.push(name);\n    });\n    new DataDiffer(this._featureNames || [], featureNames).add(processFeature).update(processFeature).remove(zrUtil.curry(processFeature, null)).execute(); // Keep for diff.\n\n    this._featureNames = featureNames;\n\n    function processFeature(newIndex, oldIndex) {\n      var featureName = featureNames[newIndex];\n      var oldName = featureNames[oldIndex];\n      var featureOpt = featureOpts[featureName];\n      var featureModel = new Model(featureOpt, toolboxModel, toolboxModel.ecModel);\n      var feature;\n\n      if (featureName && !oldName) {\n        // Create\n        if (isUserFeatureName(featureName)) {\n          feature = {\n            model: featureModel,\n            onclick: featureModel.option.onclick,\n            featureName: featureName\n          };\n        } else {\n          var Feature = featureManager.get(featureName);\n\n          if (!Feature) {\n            return;\n          }\n\n          feature = new Feature(featureModel, ecModel, api);\n        }\n\n        features[featureName] = feature;\n      } else {\n        feature = features[oldName]; // If feature does not exsit.\n\n        if (!feature) {\n          return;\n        }\n\n        feature.model = featureModel;\n        feature.ecModel = ecModel;\n        feature.api = api;\n      }\n\n      if (!featureName && oldName) {\n        feature.dispose && feature.dispose(ecModel, api);\n        return;\n      }\n\n      if (!featureModel.get('show') || feature.unusable) {\n        feature.remove && feature.remove(ecModel, api);\n        return;\n      }\n\n      createIconPaths(featureModel, feature, featureName);\n\n      featureModel.setIconStatus = function (iconName, status) {\n        var option = this.option;\n        var iconPaths = this.iconPaths;\n        option.iconStatus = option.iconStatus || {};\n        option.iconStatus[iconName] = status; // FIXME\n\n        iconPaths[iconName] && iconPaths[iconName].trigger(status);\n      };\n\n      if (feature.render) {\n        feature.render(featureModel, ecModel, api, payload);\n      }\n    }\n\n    function createIconPaths(featureModel, feature, featureName) {\n      var iconStyleModel = featureModel.getModel('iconStyle'); // If one feature has mutiple icon. they are orginaized as\n      // {\n      //     icon: {\n      //         foo: '',\n      //         bar: ''\n      //     },\n      //     title: {\n      //         foo: '',\n      //         bar: ''\n      //     }\n      // }\n\n      var icons = feature.getIcons ? feature.getIcons() : featureModel.get('icon');\n      var titles = featureModel.get('title') || {};\n\n      if (typeof icons === 'string') {\n        var icon = icons;\n        var title = titles;\n        icons = {};\n        titles = {};\n        icons[featureName] = icon;\n        titles[featureName] = title;\n      }\n\n      var iconPaths = featureModel.iconPaths = {};\n      zrUtil.each(icons, function (iconStr, iconName) {\n        var path = graphic.createIcon(iconStr, {}, {\n          x: -itemSize / 2,\n          y: -itemSize / 2,\n          width: itemSize,\n          height: itemSize\n        });\n        path.setStyle(iconStyleModel.getModel('normal').getItemStyle());\n        path.hoverStyle = iconStyleModel.getModel('emphasis').getItemStyle();\n        graphic.setHoverStyle(path);\n\n        if (toolboxModel.get('showTitle')) {\n          path.__title = titles[iconName];\n          path.on('mouseover', function () {\n            // Should not reuse above hoverStyle, which might be modified.\n            var hoverStyle = iconStyleModel.getModel('emphasis').getItemStyle();\n            path.setStyle({\n              text: titles[iconName],\n              textPosition: hoverStyle.textPosition || 'bottom',\n              textFill: hoverStyle.fill || hoverStyle.stroke || '#000',\n              textAlign: hoverStyle.textAlign || 'center'\n            });\n          }).on('mouseout', function () {\n            path.setStyle({\n              textFill: null\n            });\n          });\n        }\n\n        path.trigger(featureModel.get('iconStatus.' + iconName) || 'normal');\n        group.add(path);\n        path.on('click', zrUtil.bind(feature.onclick, feature, ecModel, api, iconName));\n        iconPaths[iconName] = path;\n      });\n    }\n\n    listComponentHelper.layout(group, toolboxModel, api); // Render background after group is layout\n    // FIXME\n\n    group.add(listComponentHelper.makeBackground(group.getBoundingRect(), toolboxModel)); // Adjust icon title positions to avoid them out of screen\n\n    group.eachChild(function (icon) {\n      var titleText = icon.__title;\n      var hoverStyle = icon.hoverStyle; // May be background element\n\n      if (hoverStyle && titleText) {\n        var rect = textContain.getBoundingRect(titleText, textContain.makeFont(hoverStyle));\n        var offsetX = icon.position[0] + group.position[0];\n        var offsetY = icon.position[1] + group.position[1] + itemSize;\n        var needPutOnTop = false;\n\n        if (offsetY + rect.height > api.getHeight()) {\n          hoverStyle.textPosition = 'top';\n          needPutOnTop = true;\n        }\n\n        var topOffset = needPutOnTop ? -5 - rect.height : itemSize + 8;\n\n        if (offsetX + rect.width / 2 > api.getWidth()) {\n          hoverStyle.textPosition = ['100%', topOffset];\n          hoverStyle.textAlign = 'right';\n        } else if (offsetX - rect.width / 2 < 0) {\n          hoverStyle.textPosition = [0, topOffset];\n          hoverStyle.textAlign = 'left';\n        }\n      }\n    });\n  },\n  updateView: function (toolboxModel, ecModel, api, payload) {\n    zrUtil.each(this._features, function (feature) {\n      feature.updateView && feature.updateView(feature.model, ecModel, api, payload);\n    });\n  },\n  updateLayout: function (toolboxModel, ecModel, api, payload) {\n    zrUtil.each(this._features, function (feature) {\n      feature.updateLayout && feature.updateLayout(feature.model, ecModel, api, payload);\n    });\n  },\n  remove: function (ecModel, api) {\n    zrUtil.each(this._features, function (feature) {\n      feature.remove && feature.remove(ecModel, api);\n    });\n    this.group.removeAll();\n  },\n  dispose: function (ecModel, api) {\n    zrUtil.each(this._features, function (feature) {\n      feature.dispose && feature.dispose(ecModel, api);\n    });\n  }\n});\n\nfunction isUserFeatureName(featureName) {\n  return featureName.indexOf('my') === 0;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox/ToolboxView.js\n// module id = 1147\n// module chunks = 0 1 2","var env = require(\"zrender/lib/core/env\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\nvar saveAsImageLang = lang.toolbox.saveAsImage;\n\nfunction SaveAsImage(model) {\n  this.model = model;\n}\n\nSaveAsImage.defaultOption = {\n  show: true,\n  icon: 'M4.7,22.9L29.3,45.5L54.7,23.4M4.6,43.6L4.6,58L53.8,58L53.8,43.6M29.2,45.1L29.2,0',\n  title: saveAsImageLang.title,\n  type: 'png',\n  // Default use option.backgroundColor\n  // backgroundColor: '#fff',\n  name: '',\n  excludeComponents: ['toolbox'],\n  pixelRatio: 1,\n  lang: saveAsImageLang.lang.slice()\n};\nSaveAsImage.prototype.unusable = !env.canvasSupported;\nvar proto = SaveAsImage.prototype;\n\nproto.onclick = function (ecModel, api) {\n  var model = this.model;\n  var title = model.get('name') || ecModel.get('title.0.text') || 'echarts';\n  var $a = document.createElement('a');\n  var type = model.get('type', true) || 'png';\n  $a.download = title + '.' + type;\n  $a.target = '_blank';\n  var url = api.getConnectedDataURL({\n    type: type,\n    backgroundColor: model.get('backgroundColor', true) || ecModel.get('backgroundColor') || '#fff',\n    excludeComponents: model.get('excludeComponents'),\n    pixelRatio: model.get('pixelRatio')\n  });\n  $a.href = url; // Chrome and Firefox\n\n  if (typeof MouseEvent === 'function' && !env.browser.ie && !env.browser.edge) {\n    var evt = new MouseEvent('click', {\n      view: window,\n      bubbles: true,\n      cancelable: false\n    });\n    $a.dispatchEvent(evt);\n  } // IE\n  else {\n      if (window.navigator.msSaveOrOpenBlob) {\n        var bstr = atob(url.split(',')[1]);\n        var n = bstr.length;\n        var u8arr = new Uint8Array(n);\n\n        while (n--) {\n          u8arr[n] = bstr.charCodeAt(n);\n        }\n\n        var blob = new Blob([u8arr]);\n        window.navigator.msSaveOrOpenBlob(blob, title + '.' + type);\n      } else {\n        var lang = model.get('lang');\n        var html = '' + '<body style=\"margin:0;\">' + '<img src=\"' + url + '\" style=\"max-width:100%;\" title=\"' + (lang && lang[0] || '') + '\" />' + '</body>';\n        var tab = window.open();\n        tab.document.write(html);\n      }\n    }\n};\n\nfeatureManager.register('saveAsImage', SaveAsImage);\nvar _default = SaveAsImage;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox/feature/SaveAsImage.js\n// module id = 1148\n// module chunks = 0 1 2","var echarts = require(\"../../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\nvar magicTypeLang = lang.toolbox.magicType;\n\nfunction MagicType(model) {\n  this.model = model;\n}\n\nMagicType.defaultOption = {\n  show: true,\n  type: [],\n  // Icon group\n  icon: {\n    line: 'M4.1,28.9h7.1l9.3-22l7.4,38l9.7-19.7l3,12.8h14.9M4.1,58h51.4',\n    bar: 'M6.7,22.9h10V48h-10V22.9zM24.9,13h10v35h-10V13zM43.2,2h10v46h-10V2zM3.1,58h53.7',\n    stack: 'M8.2,38.4l-8.4,4.1l30.6,15.3L60,42.5l-8.1-4.1l-21.5,11L8.2,38.4z M51.9,30l-8.1,4.2l-13.4,6.9l-13.9-6.9L8.2,30l-8.4,4.2l8.4,4.2l22.2,11l21.5-11l8.1-4.2L51.9,30z M51.9,21.7l-8.1,4.2L35.7,30l-5.3,2.8L24.9,30l-8.4-4.1l-8.3-4.2l-8.4,4.2L8.2,30l8.3,4.2l13.9,6.9l13.4-6.9l8.1-4.2l8.1-4.1L51.9,21.7zM30.4,2.2L-0.2,17.5l8.4,4.1l8.3,4.2l8.4,4.2l5.5,2.7l5.3-2.7l8.1-4.2l8.1-4.2l8.1-4.1L30.4,2.2z',\n    // jshint ignore:line\n    tiled: 'M2.3,2.2h22.8V25H2.3V2.2z M35,2.2h22.8V25H35V2.2zM2.3,35h22.8v22.8H2.3V35z M35,35h22.8v22.8H35V35z'\n  },\n  // `line`, `bar`, `stack`, `tiled`\n  title: zrUtil.clone(magicTypeLang.title),\n  option: {},\n  seriesIndex: {}\n};\nvar proto = MagicType.prototype;\n\nproto.getIcons = function () {\n  var model = this.model;\n  var availableIcons = model.get('icon');\n  var icons = {};\n  zrUtil.each(model.get('type'), function (type) {\n    if (availableIcons[type]) {\n      icons[type] = availableIcons[type];\n    }\n  });\n  return icons;\n};\n\nvar seriesOptGenreator = {\n  'line': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        type: 'line',\n        // Preserve data related option\n        data: seriesModel.get('data'),\n        stack: seriesModel.get('stack'),\n        markPoint: seriesModel.get('markPoint'),\n        markLine: seriesModel.get('markLine')\n      }, model.get('option.line') || {}, true);\n    }\n  },\n  'bar': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line') {\n      return zrUtil.merge({\n        id: seriesId,\n        type: 'bar',\n        // Preserve data related option\n        data: seriesModel.get('data'),\n        stack: seriesModel.get('stack'),\n        markPoint: seriesModel.get('markPoint'),\n        markLine: seriesModel.get('markLine')\n      }, model.get('option.bar') || {}, true);\n    }\n  },\n  'stack': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line' || seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        stack: '__ec_magicType_stack__'\n      }, model.get('option.stack') || {}, true);\n    }\n  },\n  'tiled': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line' || seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        stack: ''\n      }, model.get('option.tiled') || {}, true);\n    }\n  }\n};\nvar radioTypes = [['line', 'bar'], ['stack', 'tiled']];\n\nproto.onclick = function (ecModel, api, type) {\n  var model = this.model;\n  var seriesIndex = model.get('seriesIndex.' + type); // Not supported magicType\n\n  if (!seriesOptGenreator[type]) {\n    return;\n  }\n\n  var newOption = {\n    series: []\n  };\n\n  var generateNewSeriesTypes = function (seriesModel) {\n    var seriesType = seriesModel.subType;\n    var seriesId = seriesModel.id;\n    var newSeriesOpt = seriesOptGenreator[type](seriesType, seriesId, seriesModel, model);\n\n    if (newSeriesOpt) {\n      // PENDING If merge original option?\n      zrUtil.defaults(newSeriesOpt, seriesModel.option);\n      newOption.series.push(newSeriesOpt);\n    } // Modify boundaryGap\n\n\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.type === 'cartesian2d' && (type === 'line' || type === 'bar')) {\n      var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n\n      if (categoryAxis) {\n        var axisDim = categoryAxis.dim;\n        var axisType = axisDim + 'Axis';\n        var axisModel = ecModel.queryComponents({\n          mainType: axisType,\n          index: seriesModel.get(name + 'Index'),\n          id: seriesModel.get(name + 'Id')\n        })[0];\n        var axisIndex = axisModel.componentIndex;\n        newOption[axisType] = newOption[axisType] || [];\n\n        for (var i = 0; i <= axisIndex; i++) {\n          newOption[axisType][axisIndex] = newOption[axisType][axisIndex] || {};\n        }\n\n        newOption[axisType][axisIndex].boundaryGap = type === 'bar' ? true : false;\n      }\n    }\n  };\n\n  zrUtil.each(radioTypes, function (radio) {\n    if (zrUtil.indexOf(radio, type) >= 0) {\n      zrUtil.each(radio, function (item) {\n        model.setIconStatus(item, 'normal');\n      });\n    }\n  });\n  model.setIconStatus(type, 'emphasis');\n  ecModel.eachComponent({\n    mainType: 'series',\n    query: seriesIndex == null ? null : {\n      seriesIndex: seriesIndex\n    }\n  }, generateNewSeriesTypes);\n  api.dispatchAction({\n    type: 'changeMagicType',\n    currentType: type,\n    newOption: newOption\n  });\n};\n\necharts.registerAction({\n  type: 'changeMagicType',\n  event: 'magicTypeChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  ecModel.mergeOption(payload.newOption);\n});\nfeatureManager.register('magicType', MagicType);\nvar _default = MagicType;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox/feature/MagicType.js\n// module id = 1149\n// module chunks = 0 1 2","var echarts = require(\"../../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\nvar dataViewLang = lang.toolbox.dataView;\nvar BLOCK_SPLITER = new Array(60).join('-');\nvar ITEM_SPLITER = '\\t';\n/**\n * Group series into two types\n *  1. on category axis, like line, bar\n *  2. others, like scatter, pie\n * @param {module:echarts/model/Global} ecModel\n * @return {Object}\n * @inner\n */\n\nfunction groupSeries(ecModel) {\n  var seriesGroupByCategoryAxis = {};\n  var otherSeries = [];\n  var meta = [];\n  ecModel.eachRawSeries(function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && (coordSys.type === 'cartesian2d' || coordSys.type === 'polar')) {\n      var baseAxis = coordSys.getBaseAxis();\n\n      if (baseAxis.type === 'category') {\n        var key = baseAxis.dim + '_' + baseAxis.index;\n\n        if (!seriesGroupByCategoryAxis[key]) {\n          seriesGroupByCategoryAxis[key] = {\n            categoryAxis: baseAxis,\n            valueAxis: coordSys.getOtherAxis(baseAxis),\n            series: []\n          };\n          meta.push({\n            axisDim: baseAxis.dim,\n            axisIndex: baseAxis.index\n          });\n        }\n\n        seriesGroupByCategoryAxis[key].series.push(seriesModel);\n      } else {\n        otherSeries.push(seriesModel);\n      }\n    } else {\n      otherSeries.push(seriesModel);\n    }\n  });\n  return {\n    seriesGroupByCategoryAxis: seriesGroupByCategoryAxis,\n    other: otherSeries,\n    meta: meta\n  };\n}\n/**\n * Assemble content of series on cateogory axis\n * @param {Array.<module:echarts/model/Series>} series\n * @return {string}\n * @inner\n */\n\n\nfunction assembleSeriesWithCategoryAxis(series) {\n  var tables = [];\n  zrUtil.each(series, function (group, key) {\n    var categoryAxis = group.categoryAxis;\n    var valueAxis = group.valueAxis;\n    var valueAxisDim = valueAxis.dim;\n    var headers = [' '].concat(zrUtil.map(group.series, function (series) {\n      return series.name;\n    }));\n    var columns = [categoryAxis.model.getCategories()];\n    zrUtil.each(group.series, function (series) {\n      columns.push(series.getRawData().mapArray(valueAxisDim, function (val) {\n        return val;\n      }));\n    }); // Assemble table content\n\n    var lines = [headers.join(ITEM_SPLITER)];\n\n    for (var i = 0; i < columns[0].length; i++) {\n      var items = [];\n\n      for (var j = 0; j < columns.length; j++) {\n        items.push(columns[j][i]);\n      }\n\n      lines.push(items.join(ITEM_SPLITER));\n    }\n\n    tables.push(lines.join('\\n'));\n  });\n  return tables.join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n}\n/**\n * Assemble content of other series\n * @param {Array.<module:echarts/model/Series>} series\n * @return {string}\n * @inner\n */\n\n\nfunction assembleOtherSeries(series) {\n  return zrUtil.map(series, function (series) {\n    var data = series.getRawData();\n    var lines = [series.name];\n    var vals = [];\n    data.each(data.dimensions, function () {\n      var argLen = arguments.length;\n      var dataIndex = arguments[argLen - 1];\n      var name = data.getName(dataIndex);\n\n      for (var i = 0; i < argLen - 1; i++) {\n        vals[i] = arguments[i];\n      }\n\n      lines.push((name ? name + ITEM_SPLITER : '') + vals.join(ITEM_SPLITER));\n    });\n    return lines.join('\\n');\n  }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n}\n/**\n * @param {module:echarts/model/Global}\n * @return {Object}\n * @inner\n */\n\n\nfunction getContentFromModel(ecModel) {\n  var result = groupSeries(ecModel);\n  return {\n    value: zrUtil.filter([assembleSeriesWithCategoryAxis(result.seriesGroupByCategoryAxis), assembleOtherSeries(result.other)], function (str) {\n      return str.replace(/[\\n\\t\\s]/g, '');\n    }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n'),\n    meta: result.meta\n  };\n}\n\nfunction trim(str) {\n  return str.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n}\n/**\n * If a block is tsv format\n */\n\n\nfunction isTSVFormat(block) {\n  // Simple method to find out if a block is tsv format\n  var firstLine = block.slice(0, block.indexOf('\\n'));\n\n  if (firstLine.indexOf(ITEM_SPLITER) >= 0) {\n    return true;\n  }\n}\n\nvar itemSplitRegex = new RegExp('[' + ITEM_SPLITER + ']+', 'g');\n/**\n * @param {string} tsv\n * @return {Object}\n */\n\nfunction parseTSVContents(tsv) {\n  var tsvLines = tsv.split(/\\n+/g);\n  var headers = trim(tsvLines.shift()).split(itemSplitRegex);\n  var categories = [];\n  var series = zrUtil.map(headers, function (header) {\n    return {\n      name: header,\n      data: []\n    };\n  });\n\n  for (var i = 0; i < tsvLines.length; i++) {\n    var items = trim(tsvLines[i]).split(itemSplitRegex);\n    categories.push(items.shift());\n\n    for (var j = 0; j < items.length; j++) {\n      series[j] && (series[j].data[i] = items[j]);\n    }\n  }\n\n  return {\n    series: series,\n    categories: categories\n  };\n}\n/**\n * @param {string} str\n * @return {Array.<Object>}\n * @inner\n */\n\n\nfunction parseListContents(str) {\n  var lines = str.split(/\\n+/g);\n  var seriesName = trim(lines.shift());\n  var data = [];\n\n  for (var i = 0; i < lines.length; i++) {\n    var items = trim(lines[i]).split(itemSplitRegex);\n    var name = '';\n    var value;\n    var hasName = false;\n\n    if (isNaN(items[0])) {\n      // First item is name\n      hasName = true;\n      name = items[0];\n      items = items.slice(1);\n      data[i] = {\n        name: name,\n        value: []\n      };\n      value = data[i].value;\n    } else {\n      value = data[i] = [];\n    }\n\n    for (var j = 0; j < items.length; j++) {\n      value.push(+items[j]);\n    }\n\n    if (value.length === 1) {\n      hasName ? data[i].value = value[0] : data[i] = value[0];\n    }\n  }\n\n  return {\n    name: seriesName,\n    data: data\n  };\n}\n/**\n * @param {string} str\n * @param {Array.<Object>} blockMetaList\n * @return {Object}\n * @inner\n */\n\n\nfunction parseContents(str, blockMetaList) {\n  var blocks = str.split(new RegExp('\\n*' + BLOCK_SPLITER + '\\n*', 'g'));\n  var newOption = {\n    series: []\n  };\n  zrUtil.each(blocks, function (block, idx) {\n    if (isTSVFormat(block)) {\n      var result = parseTSVContents(block);\n      var blockMeta = blockMetaList[idx];\n      var axisKey = blockMeta.axisDim + 'Axis';\n\n      if (blockMeta) {\n        newOption[axisKey] = newOption[axisKey] || [];\n        newOption[axisKey][blockMeta.axisIndex] = {\n          data: result.categories\n        };\n        newOption.series = newOption.series.concat(result.series);\n      }\n    } else {\n      var result = parseListContents(block);\n      newOption.series.push(result);\n    }\n  });\n  return newOption;\n}\n/**\n * @alias {module:echarts/component/toolbox/feature/DataView}\n * @constructor\n * @param {module:echarts/model/Model} model\n */\n\n\nfunction DataView(model) {\n  this._dom = null;\n  this.model = model;\n}\n\nDataView.defaultOption = {\n  show: true,\n  readOnly: false,\n  optionToContent: null,\n  contentToOption: null,\n  icon: 'M17.5,17.3H33 M17.5,17.3H33 M45.4,29.5h-28 M11.5,2v56H51V14.8L38.4,2H11.5z M38.4,2.2v12.7H51 M45.4,41.7h-28',\n  title: zrUtil.clone(dataViewLang.title),\n  lang: zrUtil.clone(dataViewLang.lang),\n  backgroundColor: '#fff',\n  textColor: '#000',\n  textareaColor: '#fff',\n  textareaBorderColor: '#333',\n  buttonColor: '#c23531',\n  buttonTextColor: '#fff'\n};\n\nDataView.prototype.onclick = function (ecModel, api) {\n  var container = api.getDom();\n  var model = this.model;\n\n  if (this._dom) {\n    container.removeChild(this._dom);\n  }\n\n  var root = document.createElement('div');\n  root.style.cssText = 'position:absolute;left:5px;top:5px;bottom:5px;right:5px;';\n  root.style.backgroundColor = model.get('backgroundColor') || '#fff'; // Create elements\n\n  var header = document.createElement('h4');\n  var lang = model.get('lang') || [];\n  header.innerHTML = lang[0] || model.get('title');\n  header.style.cssText = 'margin: 10px 20px;';\n  header.style.color = model.get('textColor');\n  var viewMain = document.createElement('div');\n  var textarea = document.createElement('textarea');\n  viewMain.style.cssText = 'display:block;width:100%;overflow:auto;';\n  var optionToContent = model.get('optionToContent');\n  var contentToOption = model.get('contentToOption');\n  var result = getContentFromModel(ecModel);\n\n  if (typeof optionToContent === 'function') {\n    var htmlOrDom = optionToContent(api.getOption());\n\n    if (typeof htmlOrDom === 'string') {\n      viewMain.innerHTML = htmlOrDom;\n    } else if (zrUtil.isDom(htmlOrDom)) {\n      viewMain.appendChild(htmlOrDom);\n    }\n  } else {\n    // Use default textarea\n    viewMain.appendChild(textarea);\n    textarea.readOnly = model.get('readOnly');\n    textarea.style.cssText = 'width:100%;height:100%;font-family:monospace;font-size:14px;line-height:1.6rem;';\n    textarea.style.color = model.get('textColor');\n    textarea.style.borderColor = model.get('textareaBorderColor');\n    textarea.style.backgroundColor = model.get('textareaColor');\n    textarea.value = result.value;\n  }\n\n  var blockMetaList = result.meta;\n  var buttonContainer = document.createElement('div');\n  buttonContainer.style.cssText = 'position:absolute;bottom:0;left:0;right:0;';\n  var buttonStyle = 'float:right;margin-right:20px;border:none;' + 'cursor:pointer;padding:2px 5px;font-size:12px;border-radius:3px';\n  var closeButton = document.createElement('div');\n  var refreshButton = document.createElement('div');\n  buttonStyle += ';background-color:' + model.get('buttonColor');\n  buttonStyle += ';color:' + model.get('buttonTextColor');\n  var self = this;\n\n  function close() {\n    container.removeChild(root);\n    self._dom = null;\n  }\n\n  eventTool.addEventListener(closeButton, 'click', close);\n  eventTool.addEventListener(refreshButton, 'click', function () {\n    var newOption;\n\n    try {\n      if (typeof contentToOption === 'function') {\n        newOption = contentToOption(viewMain, api.getOption());\n      } else {\n        newOption = parseContents(textarea.value, blockMetaList);\n      }\n    } catch (e) {\n      close();\n      throw new Error('Data view format error ' + e);\n    }\n\n    if (newOption) {\n      api.dispatchAction({\n        type: 'changeDataView',\n        newOption: newOption\n      });\n    }\n\n    close();\n  });\n  closeButton.innerHTML = lang[1];\n  refreshButton.innerHTML = lang[2];\n  refreshButton.style.cssText = buttonStyle;\n  closeButton.style.cssText = buttonStyle;\n  !model.get('readOnly') && buttonContainer.appendChild(refreshButton);\n  buttonContainer.appendChild(closeButton); // http://stackoverflow.com/questions/6637341/use-tab-to-indent-in-textarea\n\n  eventTool.addEventListener(textarea, 'keydown', function (e) {\n    if ((e.keyCode || e.which) === 9) {\n      // get caret position/selection\n      var val = this.value;\n      var start = this.selectionStart;\n      var end = this.selectionEnd; // set textarea value to: text before caret + tab + text after caret\n\n      this.value = val.substring(0, start) + ITEM_SPLITER + val.substring(end); // put caret at right position again\n\n      this.selectionStart = this.selectionEnd = start + 1; // prevent the focus lose\n\n      eventTool.stop(e);\n    }\n  });\n  root.appendChild(header);\n  root.appendChild(viewMain);\n  root.appendChild(buttonContainer);\n  viewMain.style.height = container.clientHeight - 80 + 'px';\n  container.appendChild(root);\n  this._dom = root;\n};\n\nDataView.prototype.remove = function (ecModel, api) {\n  this._dom && api.getDom().removeChild(this._dom);\n};\n\nDataView.prototype.dispose = function (ecModel, api) {\n  this.remove(ecModel, api);\n};\n/**\n * @inner\n */\n\n\nfunction tryMergeDataOption(newData, originalData) {\n  return zrUtil.map(newData, function (newVal, idx) {\n    var original = originalData && originalData[idx];\n\n    if (zrUtil.isObject(original) && !zrUtil.isArray(original)) {\n      if (zrUtil.isObject(newVal) && !zrUtil.isArray(newVal)) {\n        newVal = newVal.value;\n      } // Original data has option\n\n\n      return zrUtil.defaults({\n        value: newVal\n      }, original);\n    } else {\n      return newVal;\n    }\n  });\n}\n\nfeatureManager.register('dataView', DataView);\necharts.registerAction({\n  type: 'changeDataView',\n  event: 'dataViewChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  var newSeriesOptList = [];\n  zrUtil.each(payload.newOption.series, function (seriesOpt) {\n    var seriesModel = ecModel.getSeriesByName(seriesOpt.name)[0];\n\n    if (!seriesModel) {\n      // New created series\n      // Geuss the series type\n      newSeriesOptList.push(zrUtil.extend({\n        // Default is scatter\n        type: 'scatter'\n      }, seriesOpt));\n    } else {\n      var originalData = seriesModel.get('data');\n      newSeriesOptList.push({\n        name: seriesOpt.name,\n        data: tryMergeDataOption(seriesOpt.data, originalData)\n      });\n    }\n  });\n  ecModel.mergeOption(zrUtil.defaults({\n    series: newSeriesOptList\n  }, payload.newOption));\n});\nvar _default = DataView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox/feature/DataView.js\n// module id = 1150\n// module chunks = 0 1 2","var echarts = require(\"../../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BrushController = require(\"../../helper/BrushController\");\n\nvar BrushTargetManager = require(\"../../helper/BrushTargetManager\");\n\nvar history = require(\"../../dataZoom/history\");\n\nvar sliderMove = require(\"../../helper/sliderMove\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\nrequire(\"../../dataZoomSelect\");\n\n// Use dataZoomSelect\nvar dataZoomLang = lang.toolbox.dataZoom;\nvar each = zrUtil.each; // Spectial component id start with \\0ec\\0, see echarts/model/Global.js~hasInnerId\n\nvar DATA_ZOOM_ID_BASE = '\\0_ec_\\0toolbox-dataZoom_';\n\nfunction DataZoom(model, ecModel, api) {\n  /**\n   * @private\n   * @type {module:echarts/component/helper/BrushController}\n   */\n  (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this)).mount();\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._isZoomActive;\n}\n\nDataZoom.defaultOption = {\n  show: true,\n  // Icon group\n  icon: {\n    zoom: 'M0,13.5h26.9 M13.5,26.9V0 M32.1,13.5H58V58H13.5 V32.1',\n    back: 'M22,1.4L9.9,13.5l12.3,12.3 M10.3,13.5H54.9v44.6 H10.3v-26'\n  },\n  // `zoom`, `back`\n  title: zrUtil.clone(dataZoomLang.title)\n};\nvar proto = DataZoom.prototype;\n\nproto.render = function (featureModel, ecModel, api, payload) {\n  this.model = featureModel;\n  this.ecModel = ecModel;\n  this.api = api;\n  updateZoomBtnStatus(featureModel, ecModel, this, payload, api);\n  updateBackBtnStatus(featureModel, ecModel);\n};\n\nproto.onclick = function (ecModel, api, type) {\n  handlers[type].call(this);\n};\n\nproto.remove = function (ecModel, api) {\n  this._brushController.unmount();\n};\n\nproto.dispose = function (ecModel, api) {\n  this._brushController.dispose();\n};\n/**\n * @private\n */\n\n\nvar handlers = {\n  zoom: function () {\n    var nextActive = !this._isZoomActive;\n    this.api.dispatchAction({\n      type: 'takeGlobalCursor',\n      key: 'dataZoomSelect',\n      dataZoomSelectActive: nextActive\n    });\n  },\n  back: function () {\n    this._dispatchZoomAction(history.pop(this.ecModel));\n  }\n};\n/**\n * @private\n */\n\nproto._onBrush = function (areas, opt) {\n  if (!opt.isEnd || !areas.length) {\n    return;\n  }\n\n  var snapshot = {};\n  var ecModel = this.ecModel;\n\n  this._brushController.updateCovers([]); // remove cover\n\n\n  var brushTargetManager = new BrushTargetManager(retrieveAxisSetting(this.model.option), ecModel, {\n    include: ['grid']\n  });\n  brushTargetManager.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n    if (coordSys.type !== 'cartesian2d') {\n      return;\n    }\n\n    var brushType = area.brushType;\n\n    if (brushType === 'rect') {\n      setBatch('x', coordSys, coordRange[0]);\n      setBatch('y', coordSys, coordRange[1]);\n    } else {\n      setBatch({\n        lineX: 'x',\n        lineY: 'y'\n      }[brushType], coordSys, coordRange);\n    }\n  });\n  history.push(ecModel, snapshot);\n\n  this._dispatchZoomAction(snapshot);\n\n  function setBatch(dimName, coordSys, minMax) {\n    var axis = coordSys.getAxis(dimName);\n    var axisModel = axis.model;\n    var dataZoomModel = findDataZoom(dimName, axisModel, ecModel); // Restrict range.\n\n    var minMaxSpan = dataZoomModel.findRepresentativeAxisProxy(axisModel).getMinMaxSpan();\n\n    if (minMaxSpan.minValueSpan != null || minMaxSpan.maxValueSpan != null) {\n      minMax = sliderMove(0, minMax.slice(), axis.scale.getExtent(), 0, minMaxSpan.minValueSpan, minMaxSpan.maxValueSpan);\n    }\n\n    dataZoomModel && (snapshot[dataZoomModel.id] = {\n      dataZoomId: dataZoomModel.id,\n      startValue: minMax[0],\n      endValue: minMax[1]\n    });\n  }\n\n  function findDataZoom(dimName, axisModel, ecModel) {\n    var found;\n    ecModel.eachComponent({\n      mainType: 'dataZoom',\n      subType: 'select'\n    }, function (dzModel) {\n      var has = dzModel.getAxisModel(dimName, axisModel.componentIndex);\n      has && (found = dzModel);\n    });\n    return found;\n  }\n};\n/**\n * @private\n */\n\n\nproto._dispatchZoomAction = function (snapshot) {\n  var batch = []; // Convert from hash map to array.\n\n  each(snapshot, function (batchItem, dataZoomId) {\n    batch.push(zrUtil.clone(batchItem));\n  });\n  batch.length && this.api.dispatchAction({\n    type: 'dataZoom',\n    from: this.uid,\n    batch: batch\n  });\n};\n\nfunction retrieveAxisSetting(option) {\n  var setting = {}; // Compatible with previous setting: null => all axis, false => no axis.\n\n  zrUtil.each(['xAxisIndex', 'yAxisIndex'], function (name) {\n    setting[name] = option[name];\n    setting[name] == null && (setting[name] = 'all');\n    (setting[name] === false || setting[name] === 'none') && (setting[name] = []);\n  });\n  return setting;\n}\n\nfunction updateBackBtnStatus(featureModel, ecModel) {\n  featureModel.setIconStatus('back', history.count(ecModel) > 1 ? 'emphasis' : 'normal');\n}\n\nfunction updateZoomBtnStatus(featureModel, ecModel, view, payload, api) {\n  var zoomActive = view._isZoomActive;\n\n  if (payload && payload.type === 'takeGlobalCursor') {\n    zoomActive = payload.key === 'dataZoomSelect' ? payload.dataZoomSelectActive : false;\n  }\n\n  view._isZoomActive = zoomActive;\n  featureModel.setIconStatus('zoom', zoomActive ? 'emphasis' : 'normal');\n  var brushTargetManager = new BrushTargetManager(retrieveAxisSetting(featureModel.option), ecModel, {\n    include: ['grid']\n  });\n\n  view._brushController.setPanels(brushTargetManager.makePanelOpts(api, function (targetInfo) {\n    return targetInfo.xAxisDeclared && !targetInfo.yAxisDeclared ? 'lineX' : !targetInfo.xAxisDeclared && targetInfo.yAxisDeclared ? 'lineY' : 'rect';\n  })).enableBrush(zoomActive ? {\n    brushType: 'auto',\n    brushStyle: {\n      // FIXME user customized?\n      lineWidth: 0,\n      fill: 'rgba(0,0,0,0.2)'\n    }\n  } : false);\n}\n\nfeatureManager.register('dataZoom', DataZoom); // Create special dataZoom option for select\n\necharts.registerPreprocessor(function (option) {\n  if (!option) {\n    return;\n  }\n\n  var dataZoomOpts = option.dataZoom || (option.dataZoom = []);\n\n  if (!zrUtil.isArray(dataZoomOpts)) {\n    option.dataZoom = dataZoomOpts = [dataZoomOpts];\n  }\n\n  var toolboxOpt = option.toolbox;\n\n  if (toolboxOpt) {\n    // Assume there is only one toolbox\n    if (zrUtil.isArray(toolboxOpt)) {\n      toolboxOpt = toolboxOpt[0];\n    }\n\n    if (toolboxOpt && toolboxOpt.feature) {\n      var dataZoomOpt = toolboxOpt.feature.dataZoom;\n      addForAxis('xAxis', dataZoomOpt);\n      addForAxis('yAxis', dataZoomOpt);\n    }\n  }\n\n  function addForAxis(axisName, dataZoomOpt) {\n    if (!dataZoomOpt) {\n      return;\n    } // Try not to modify model, because it is not merged yet.\n\n\n    var axisIndicesName = axisName + 'Index';\n    var givenAxisIndices = dataZoomOpt[axisIndicesName];\n\n    if (givenAxisIndices != null && givenAxisIndices != 'all' && !zrUtil.isArray(givenAxisIndices)) {\n      givenAxisIndices = givenAxisIndices === false || givenAxisIndices === 'none' ? [] : [givenAxisIndices];\n    }\n\n    forEachComponent(axisName, function (axisOpt, axisIndex) {\n      if (givenAxisIndices != null && givenAxisIndices != 'all' && zrUtil.indexOf(givenAxisIndices, axisIndex) === -1) {\n        return;\n      }\n\n      var newOpt = {\n        type: 'select',\n        $fromToolbox: true,\n        // Id for merge mapping.\n        id: DATA_ZOOM_ID_BASE + axisName + axisIndex\n      }; // FIXME\n      // Only support one axis now.\n\n      newOpt[axisIndicesName] = axisIndex;\n      dataZoomOpts.push(newOpt);\n    });\n  }\n\n  function forEachComponent(mainType, cb) {\n    var opts = option[mainType];\n\n    if (!zrUtil.isArray(opts)) {\n      opts = opts ? [opts] : [];\n    }\n\n    each(opts, cb);\n  }\n});\nvar _default = DataZoom;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox/feature/DataZoom.js\n// module id = 1151\n// module chunks = 0 1 2","require(\"./dataZoom/typeDefaulter\");\n\nrequire(\"./dataZoom/DataZoomModel\");\n\nrequire(\"./dataZoom/DataZoomView\");\n\nrequire(\"./dataZoom/SelectZoomModel\");\n\nrequire(\"./dataZoom/SelectZoomView\");\n\nrequire(\"./dataZoom/dataZoomProcessor\");\n\nrequire(\"./dataZoom/dataZoomAction\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoomSelect.js\n// module id = 1152\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar helper = require(\"./helper\");\n\nvar each = zrUtil.each;\nvar asc = numberUtil.asc;\n/**\n * Operate single axis.\n * One axis can only operated by one axis operator.\n * Different dataZoomModels may be defined to operate the same axis.\n * (i.e. 'inside' data zoom and 'slider' data zoom components)\n * So dataZoomModels share one axisProxy in that case.\n *\n * @class\n */\n\nvar AxisProxy = function (dimName, axisIndex, dataZoomModel, ecModel) {\n  /**\n   * @private\n   * @type {string}\n   */\n  this._dimName = dimName;\n  /**\n   * @private\n   */\n\n  this._axisIndex = axisIndex;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._valueWindow;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._percentWindow;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._dataExtent;\n  /**\n   * {minSpan, maxSpan, minValueSpan, maxValueSpan}\n   * @private\n   * @type {Object}\n   */\n\n  this._minMaxSpan;\n  /**\n   * @readOnly\n   * @type {module: echarts/model/Global}\n   */\n\n  this.ecModel = ecModel;\n  /**\n   * @private\n   * @type {module: echarts/component/dataZoom/DataZoomModel}\n   */\n\n  this._dataZoomModel = dataZoomModel;\n};\n\nAxisProxy.prototype = {\n  constructor: AxisProxy,\n\n  /**\n   * Whether the axisProxy is hosted by dataZoomModel.\n   *\n   * @public\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   * @return {boolean}\n   */\n  hostedBy: function (dataZoomModel) {\n    return this._dataZoomModel === dataZoomModel;\n  },\n\n  /**\n   * @return {Array.<number>} Value can only be NaN or finite value.\n   */\n  getDataValueWindow: function () {\n    return this._valueWindow.slice();\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getDataPercentWindow: function () {\n    return this._percentWindow.slice();\n  },\n\n  /**\n   * @public\n   * @param {number} axisIndex\n   * @return {Array} seriesModels\n   */\n  getTargetSeriesModels: function () {\n    var seriesModels = [];\n    var ecModel = this.ecModel;\n    ecModel.eachSeries(function (seriesModel) {\n      if (helper.isCoordSupported(seriesModel.get('coordinateSystem'))) {\n        var dimName = this._dimName;\n        var axisModel = ecModel.queryComponents({\n          mainType: dimName + 'Axis',\n          index: seriesModel.get(dimName + 'AxisIndex'),\n          id: seriesModel.get(dimName + 'AxisId')\n        })[0];\n\n        if (this._axisIndex === (axisModel && axisModel.componentIndex)) {\n          seriesModels.push(seriesModel);\n        }\n      }\n    }, this);\n    return seriesModels;\n  },\n  getAxisModel: function () {\n    return this.ecModel.getComponent(this._dimName + 'Axis', this._axisIndex);\n  },\n  getOtherAxisModel: function () {\n    var axisDim = this._dimName;\n    var ecModel = this.ecModel;\n    var axisModel = this.getAxisModel();\n    var isCartesian = axisDim === 'x' || axisDim === 'y';\n    var otherAxisDim;\n    var coordSysIndexName;\n\n    if (isCartesian) {\n      coordSysIndexName = 'gridIndex';\n      otherAxisDim = axisDim === 'x' ? 'y' : 'x';\n    } else {\n      coordSysIndexName = 'polarIndex';\n      otherAxisDim = axisDim === 'angle' ? 'radius' : 'angle';\n    }\n\n    var foundOtherAxisModel;\n    ecModel.eachComponent(otherAxisDim + 'Axis', function (otherAxisModel) {\n      if ((otherAxisModel.get(coordSysIndexName) || 0) === (axisModel.get(coordSysIndexName) || 0)) {\n        foundOtherAxisModel = otherAxisModel;\n      }\n    });\n    return foundOtherAxisModel;\n  },\n  getMinMaxSpan: function () {\n    return zrUtil.clone(this._minMaxSpan);\n  },\n\n  /**\n   * Only calculate by given range and this._dataExtent, do not change anything.\n   *\n   * @param {Object} opt\n   * @param {number} [opt.start]\n   * @param {number} [opt.end]\n   * @param {number} [opt.startValue]\n   * @param {number} [opt.endValue]\n   */\n  calculateDataWindow: function (opt) {\n    var dataExtent = this._dataExtent;\n    var axisModel = this.getAxisModel();\n    var scale = axisModel.axis.scale;\n\n    var rangePropMode = this._dataZoomModel.getRangePropMode();\n\n    var percentExtent = [0, 100];\n    var percentWindow = [opt.start, opt.end];\n    var valueWindow = [];\n    each(['startValue', 'endValue'], function (prop) {\n      valueWindow.push(opt[prop] != null ? scale.parse(opt[prop]) : null);\n    }); // Normalize bound.\n\n    each([0, 1], function (idx) {\n      var boundValue = valueWindow[idx];\n      var boundPercent = percentWindow[idx]; // Notice: dataZoom is based either on `percentProp` ('start', 'end') or\n      // on `valueProp` ('startValue', 'endValue'). The former one is suitable\n      // for cases that a dataZoom component controls multiple axes with different\n      // unit or extent, and the latter one is suitable for accurate zoom by pixel\n      // (e.g., in dataZoomSelect). `valueProp` can be calculated from `percentProp`,\n      // but it is awkward that `percentProp` can not be obtained from `valueProp`\n      // accurately (because all of values that are overflow the `dataExtent` will\n      // be calculated to percent '100%'). So we have to use\n      // `dataZoom.getRangePropMode()` to mark which prop is used.\n      // `rangePropMode` is updated only when setOption or dispatchAction, otherwise\n      // it remains its original value.\n\n      if (rangePropMode[idx] === 'percent') {\n        if (boundPercent == null) {\n          boundPercent = percentExtent[idx];\n        } // Use scale.parse to math round for category or time axis.\n\n\n        boundValue = scale.parse(numberUtil.linearMap(boundPercent, percentExtent, dataExtent, true));\n      } else {\n        // Calculating `percent` from `value` may be not accurate, because\n        // This calculation can not be inversed, because all of values that\n        // are overflow the `dataExtent` will be calculated to percent '100%'\n        boundPercent = numberUtil.linearMap(boundValue, dataExtent, percentExtent, true);\n      } // valueWindow[idx] = round(boundValue);\n      // percentWindow[idx] = round(boundPercent);\n\n\n      valueWindow[idx] = boundValue;\n      percentWindow[idx] = boundPercent;\n    });\n    return {\n      valueWindow: asc(valueWindow),\n      percentWindow: asc(percentWindow)\n    };\n  },\n\n  /**\n   * Notice: reset should not be called before series.restoreData() called,\n   * so it is recommanded to be called in \"process stage\" but not \"model init\n   * stage\".\n   *\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  reset: function (dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    } // Culculate data window and data extent, and record them.\n\n\n    this._dataExtent = calculateDataExtent(this, this._dimName, this.getTargetSeriesModels());\n    var dataWindow = this.calculateDataWindow(dataZoomModel.option);\n    this._valueWindow = dataWindow.valueWindow;\n    this._percentWindow = dataWindow.percentWindow;\n    setMinMaxSpan(this); // Update axis setting then.\n\n    setAxisModel(this);\n  },\n\n  /**\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  restore: function (dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    this._valueWindow = this._percentWindow = null;\n    setAxisModel(this, true);\n  },\n\n  /**\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  filterData: function (dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    var axisDim = this._dimName;\n    var seriesModels = this.getTargetSeriesModels();\n    var filterMode = dataZoomModel.get('filterMode');\n    var valueWindow = this._valueWindow;\n\n    if (filterMode === 'none') {\n      return;\n    } // FIXME\n    // Toolbox may has dataZoom injected. And if there are stacked bar chart\n    // with NaN data, NaN will be filtered and stack will be wrong.\n    // So we need to force the mode to be set empty.\n    // In fect, it is not a big deal that do not support filterMode-'filter'\n    // when using toolbox#dataZoom, utill tooltip#dataZoom support \"single axis\n    // selection\" some day, which might need \"adapt to data extent on the\n    // otherAxis\", which is disabled by filterMode-'empty'.\n\n\n    var otherAxisModel = this.getOtherAxisModel();\n\n    if (dataZoomModel.get('$fromToolbox') && otherAxisModel && otherAxisModel.get('type') === 'category') {\n      filterMode = 'empty';\n    } // Process series data\n\n\n    each(seriesModels, function (seriesModel) {\n      var seriesData = seriesModel.getData();\n      var dataDims = seriesModel.coordDimToDataDim(axisDim);\n\n      if (filterMode === 'weakFilter') {\n        seriesData && seriesData.filterSelf(function (dataIndex) {\n          var leftOut;\n          var rightOut;\n          var hasValue;\n\n          for (var i = 0; i < dataDims.length; i++) {\n            var value = seriesData.get(dataDims[i], dataIndex);\n            var thisHasValue = !isNaN(value);\n            var thisLeftOut = value < valueWindow[0];\n            var thisRightOut = value > valueWindow[1];\n\n            if (thisHasValue && !thisLeftOut && !thisRightOut) {\n              return true;\n            }\n\n            thisHasValue && (hasValue = true);\n            thisLeftOut && (leftOut = true);\n            thisRightOut && (rightOut = true);\n          } // If both left out and right out, do not filter.\n\n\n          return hasValue && leftOut && rightOut;\n        });\n      } else {\n        seriesData && each(dataDims, function (dim) {\n          if (filterMode === 'empty') {\n            seriesModel.setData(seriesData.map(dim, function (value) {\n              return !isInWindow(value) ? NaN : value;\n            }));\n          } else {\n            seriesData.filterSelf(dim, isInWindow);\n          }\n        });\n      }\n    });\n\n    function isInWindow(value) {\n      return value >= valueWindow[0] && value <= valueWindow[1];\n    }\n  }\n};\n\nfunction calculateDataExtent(axisProxy, axisDim, seriesModels) {\n  var dataExtent = [Infinity, -Infinity];\n  each(seriesModels, function (seriesModel) {\n    var seriesData = seriesModel.getData();\n\n    if (seriesData) {\n      each(seriesModel.coordDimToDataDim(axisDim), function (dim) {\n        var seriesExtent = seriesData.getDataExtent(dim);\n        seriesExtent[0] < dataExtent[0] && (dataExtent[0] = seriesExtent[0]);\n        seriesExtent[1] > dataExtent[1] && (dataExtent[1] = seriesExtent[1]);\n      });\n    }\n  });\n\n  if (dataExtent[1] < dataExtent[0]) {\n    dataExtent = [NaN, NaN];\n  } // It is important to get \"consistent\" extent when more then one axes is\n  // controlled by a `dataZoom`, otherwise those axes will not be synchronized\n  // when zooming. But it is difficult to know what is \"consistent\", considering\n  // axes have different type or even different meanings (For example, two\n  // time axes are used to compare data of the same date in different years).\n  // So basically dataZoom just obtains extent by series.data (in category axis\n  // extent can be obtained from axis.data).\n  // Nevertheless, user can set min/max/scale on axes to make extent of axes\n  // consistent.\n\n\n  fixExtentByAxis(axisProxy, dataExtent);\n  return dataExtent;\n}\n\nfunction fixExtentByAxis(axisProxy, dataExtent) {\n  var axisModel = axisProxy.getAxisModel();\n  var min = axisModel.getMin(true); // For category axis, if min/max/scale are not set, extent is determined\n  // by axis.data by default.\n\n  var isCategoryAxis = axisModel.get('type') === 'category';\n  var axisDataLen = isCategoryAxis && (axisModel.get('data') || []).length;\n\n  if (min != null && min !== 'dataMin' && typeof min !== 'function') {\n    dataExtent[0] = min;\n  } else if (isCategoryAxis) {\n    dataExtent[0] = axisDataLen > 0 ? 0 : NaN;\n  }\n\n  var max = axisModel.getMax(true);\n\n  if (max != null && max !== 'dataMax' && typeof max !== 'function') {\n    dataExtent[1] = max;\n  } else if (isCategoryAxis) {\n    dataExtent[1] = axisDataLen > 0 ? axisDataLen - 1 : NaN;\n  }\n\n  if (!axisModel.get('scale', true)) {\n    dataExtent[0] > 0 && (dataExtent[0] = 0);\n    dataExtent[1] < 0 && (dataExtent[1] = 0);\n  } // For value axis, if min/max/scale are not set, we just use the extent obtained\n  // by series data, which may be a little different from the extent calculated by\n  // `axisHelper.getScaleExtent`. But the different just affects the experience a\n  // little when zooming. So it will not be fixed until some users require it strongly.\n\n\n  return dataExtent;\n}\n\nfunction setAxisModel(axisProxy, isRestore) {\n  var axisModel = axisProxy.getAxisModel();\n  var percentWindow = axisProxy._percentWindow;\n  var valueWindow = axisProxy._valueWindow;\n\n  if (!percentWindow) {\n    return;\n  } // [0, 500]: arbitrary value, guess axis extent.\n\n\n  var precision = numberUtil.getPixelPrecision(valueWindow, [0, 500]);\n  precision = Math.min(precision, 20); // isRestore or isFull\n\n  var useOrigin = isRestore || percentWindow[0] === 0 && percentWindow[1] === 100;\n  axisModel.setRange(useOrigin ? null : +valueWindow[0].toFixed(precision), useOrigin ? null : +valueWindow[1].toFixed(precision));\n}\n\nfunction setMinMaxSpan(axisProxy) {\n  var minMaxSpan = axisProxy._minMaxSpan = {};\n  var dataZoomModel = axisProxy._dataZoomModel;\n  each(['min', 'max'], function (minMax) {\n    minMaxSpan[minMax + 'Span'] = dataZoomModel.get(minMax + 'Span'); // minValueSpan and maxValueSpan has higher priority than minSpan and maxSpan\n\n    var valueSpan = dataZoomModel.get(minMax + 'ValueSpan');\n\n    if (valueSpan != null) {\n      minMaxSpan[minMax + 'ValueSpan'] = valueSpan;\n      valueSpan = axisProxy.getAxisModel().axis.scale.parse(valueSpan);\n\n      if (valueSpan != null) {\n        var dataExtent = axisProxy._dataExtent;\n        minMaxSpan[minMax + 'Span'] = numberUtil.linearMap(dataExtent[0] + valueSpan, dataExtent, [0, 100], true);\n      }\n    }\n  });\n}\n\nvar _default = AxisProxy;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/AxisProxy.js\n// module id = 1153\n// module chunks = 0 1 2","var DataZoomModel = require(\"./DataZoomModel\");\n\nvar _default = DataZoomModel.extend({\n  type: 'dataZoom.select'\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/SelectZoomModel.js\n// module id = 1154\n// module chunks = 0 1 2","var DataZoomView = require(\"./DataZoomView\");\n\nvar _default = DataZoomView.extend({\n  type: 'dataZoom.select'\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/SelectZoomView.js\n// module id = 1155\n// module chunks = 0 1 2","var echarts = require(\"../../../echarts\");\n\nvar history = require(\"../../dataZoom/history\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\nvar restoreLang = lang.toolbox.restore;\n\nfunction Restore(model) {\n  this.model = model;\n}\n\nRestore.defaultOption = {\n  show: true,\n  icon: 'M3.8,33.4 M47,18.9h9.8V8.7 M56.3,20.1 C52.1,9,40.5,0.6,26.8,2.1C12.6,3.7,1.6,16.2,2.1,30.6 M13,41.1H3.1v10.2 M3.7,39.9c4.2,11.1,15.8,19.5,29.5,18 c14.2-1.6,25.2-14.1,24.7-28.5',\n  title: restoreLang.title\n};\nvar proto = Restore.prototype;\n\nproto.onclick = function (ecModel, api, type) {\n  history.clear(ecModel);\n  api.dispatchAction({\n    type: 'restore',\n    from: this.uid\n  });\n};\n\nfeatureManager.register('restore', Restore);\necharts.registerAction({\n  type: 'restore',\n  event: 'restore',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  ecModel.resetOption('recreate');\n});\nvar _default = Restore;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox/feature/Restore.js\n// module id = 1156\n// module chunks = 0 1 2","function _default(seriesType, ecModel) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var data = seriesModel.getData();\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (!coordSys) {\n      return;\n    }\n\n    var dims = [];\n    var coordDims = coordSys.dimensions;\n\n    for (var i = 0; i < coordDims.length; i++) {\n      dims.push(seriesModel.coordDimToDataDim(coordSys.dimensions[i])[0]);\n    }\n\n    if (dims.length === 1) {\n      data.each(dims[0], function (x, idx) {\n        // Also {Array.<number>}, not undefined to avoid if...else... statement\n        data.setItemLayout(idx, isNaN(x) ? [NaN, NaN] : coordSys.dataToPoint(x));\n      });\n    } else if (dims.length === 2) {\n      data.each(dims, function (x, y, idx) {\n        // Also {Array.<number>}, not undefined to avoid if...else... statement\n        data.setItemLayout(idx, isNaN(x) || isNaN(y) ? [NaN, NaN] : coordSys.dataToPoint([x, y]));\n      }, true);\n    }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/layout/points.js\n// module id = 1157\n// module chunks = 0 1","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar Cartesian2D = require(\"./Cartesian2D\");\n\nvar Axis2D = require(\"./Axis2D\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nrequire(\"./GridModel\");\n\n/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\n// Depends on GridModel, AxisModel, which performs preprocess.\nvar each = zrUtil.each;\nvar ifAxisCrossZero = axisHelper.ifAxisCrossZero;\nvar niceScaleExtent = axisHelper.niceScaleExtent;\n/**\n * Check if the axis is used in the specified grid\n * @inner\n */\n\nfunction isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n  return axisModel.getCoordSysModel() === gridModel;\n}\n\nfunction rotateTextRect(textRect, rotate) {\n  var rotateRadians = rotate * Math.PI / 180;\n  var boundingBox = textRect.plain();\n  var beforeWidth = boundingBox.width;\n  var beforeHeight = boundingBox.height;\n  var afterWidth = beforeWidth * Math.cos(rotateRadians) + beforeHeight * Math.sin(rotateRadians);\n  var afterHeight = beforeWidth * Math.sin(rotateRadians) + beforeHeight * Math.cos(rotateRadians);\n  var rotatedRect = new BoundingRect(boundingBox.x, boundingBox.y, afterWidth, afterHeight);\n  return rotatedRect;\n}\n\nfunction getLabelUnionRect(axis) {\n  var axisModel = axis.model;\n  var labels = axisModel.getFormattedLabels();\n  var axisLabelModel = axisModel.getModel('axisLabel');\n  var rect;\n  var step = 1;\n  var labelCount = labels.length;\n\n  if (labelCount > 40) {\n    // Simple optimization for large amount of labels\n    step = Math.ceil(labelCount / 40);\n  }\n\n  for (var i = 0; i < labelCount; i += step) {\n    if (!axis.isLabelIgnored(i)) {\n      var unrotatedSingleRect = axisLabelModel.getTextRect(labels[i]);\n      var singleRect = rotateTextRect(unrotatedSingleRect, axisLabelModel.get('rotate') || 0);\n      rect ? rect.union(singleRect) : rect = singleRect;\n    }\n  }\n\n  return rect;\n}\n\nfunction Grid(gridModel, ecModel, api) {\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n   * @private\n   */\n  this._coordsMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n   * @private\n   */\n\n  this._coordsList = [];\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesList = [];\n\n  this._initCartesian(gridModel, ecModel, api);\n\n  this.model = gridModel;\n}\n\nvar gridProto = Grid.prototype;\ngridProto.type = 'grid';\ngridProto.axisPointerEnabled = true;\n\ngridProto.getRect = function () {\n  return this._rect;\n};\n\ngridProto.update = function (ecModel, api) {\n  var axesMap = this._axesMap;\n\n  this._updateScale(ecModel, this.model);\n\n  each(axesMap.x, function (xAxis) {\n    niceScaleExtent(xAxis.scale, xAxis.model);\n  });\n  each(axesMap.y, function (yAxis) {\n    niceScaleExtent(yAxis.scale, yAxis.model);\n  });\n  each(axesMap.x, function (xAxis) {\n    fixAxisOnZero(axesMap, 'y', xAxis);\n  });\n  each(axesMap.y, function (yAxis) {\n    fixAxisOnZero(axesMap, 'x', yAxis);\n  }); // Resize again if containLabel is enabled\n  // FIXME It may cause getting wrong grid size in data processing stage\n\n  this.resize(this.model, api);\n};\n\nfunction fixAxisOnZero(axesMap, otherAxisDim, axis) {\n  // onZero can not be enabled in these two situations:\n  // 1. When any other axis is a category axis.\n  // 2. When no axis is cross 0 point.\n  var axes = axesMap[otherAxisDim];\n\n  if (!axis.onZero) {\n    return;\n  }\n\n  var onZeroAxisIndex = axis.onZeroAxisIndex; // If target axis is specified.\n\n  if (onZeroAxisIndex != null) {\n    var otherAxis = axes[onZeroAxisIndex];\n\n    if (otherAxis && canNotOnZeroToAxis(otherAxis)) {\n      axis.onZero = false;\n    }\n\n    return;\n  }\n\n  for (var idx in axes) {\n    if (axes.hasOwnProperty(idx)) {\n      var otherAxis = axes[idx];\n\n      if (otherAxis && !canNotOnZeroToAxis(otherAxis)) {\n        onZeroAxisIndex = +idx;\n        break;\n      }\n    }\n  }\n\n  if (onZeroAxisIndex == null) {\n    axis.onZero = false;\n  }\n\n  axis.onZeroAxisIndex = onZeroAxisIndex;\n}\n\nfunction canNotOnZeroToAxis(axis) {\n  return axis.type === 'category' || axis.type === 'time' || !ifAxisCrossZero(axis);\n}\n/**\n * Resize the grid\n * @param {module:echarts/coord/cartesian/GridModel} gridModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\ngridProto.resize = function (gridModel, api, ignoreContainLabel) {\n  var gridRect = getLayoutRect(gridModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n  this._rect = gridRect;\n  var axesList = this._axesList;\n  adjustAxes(); // Minus label size\n\n  if (!ignoreContainLabel && gridModel.get('containLabel')) {\n    each(axesList, function (axis) {\n      if (!axis.model.get('axisLabel.inside')) {\n        var labelUnionRect = getLabelUnionRect(axis);\n\n        if (labelUnionRect) {\n          var dim = axis.isHorizontal() ? 'height' : 'width';\n          var margin = axis.model.get('axisLabel.margin');\n          gridRect[dim] -= labelUnionRect[dim] + margin;\n\n          if (axis.position === 'top') {\n            gridRect.y += labelUnionRect.height + margin;\n          } else if (axis.position === 'left') {\n            gridRect.x += labelUnionRect.width + margin;\n          }\n        }\n      }\n    });\n    adjustAxes();\n  }\n\n  function adjustAxes() {\n    each(axesList, function (axis) {\n      var isHorizontal = axis.isHorizontal();\n      var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n      var idx = axis.inverse ? 1 : 0;\n      axis.setExtent(extent[idx], extent[1 - idx]);\n      updateAxisTransfrom(axis, isHorizontal ? gridRect.x : gridRect.y);\n    });\n  }\n};\n/**\n * @param {string} axisType\n * @param {number} [axisIndex]\n */\n\n\ngridProto.getAxis = function (axisType, axisIndex) {\n  var axesMapOnDim = this._axesMap[axisType];\n\n  if (axesMapOnDim != null) {\n    if (axisIndex == null) {\n      // Find first axis\n      for (var name in axesMapOnDim) {\n        if (axesMapOnDim.hasOwnProperty(name)) {\n          return axesMapOnDim[name];\n        }\n      }\n    }\n\n    return axesMapOnDim[axisIndex];\n  }\n};\n/**\n * @return {Array.<module:echarts/coord/Axis>}\n */\n\n\ngridProto.getAxes = function () {\n  return this._axesList.slice();\n};\n/**\n * Usage:\n *      grid.getCartesian(xAxisIndex, yAxisIndex);\n *      grid.getCartesian(xAxisIndex);\n *      grid.getCartesian(null, yAxisIndex);\n *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n *\n * @param {number|Object} [xAxisIndex]\n * @param {number} [yAxisIndex]\n */\n\n\ngridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n  if (xAxisIndex != null && yAxisIndex != null) {\n    var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n    return this._coordsMap[key];\n  }\n\n  if (zrUtil.isObject(xAxisIndex)) {\n    yAxisIndex = xAxisIndex.yAxisIndex;\n    xAxisIndex = xAxisIndex.xAxisIndex;\n  } // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n\n\n  for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n    if (coordList[i].getAxis('x').index === xAxisIndex || coordList[i].getAxis('y').index === yAxisIndex) {\n      return coordList[i];\n    }\n  }\n};\n\ngridProto.getCartesians = function () {\n  return this._coordsList.slice();\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertToPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.dataToPoint(value) : target.axis ? target.axis.toGlobalCoord(target.axis.dataToCoord(value)) : null;\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertFromPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.pointToData(value) : target.axis ? target.axis.coordToData(target.axis.toLocalCoord(value)) : null;\n};\n/**\n * @inner\n */\n\n\ngridProto._findConvertTarget = function (ecModel, finder) {\n  var seriesModel = finder.seriesModel;\n  var xAxisModel = finder.xAxisModel || seriesModel && seriesModel.getReferringComponents('xAxis')[0];\n  var yAxisModel = finder.yAxisModel || seriesModel && seriesModel.getReferringComponents('yAxis')[0];\n  var gridModel = finder.gridModel;\n  var coordsList = this._coordsList;\n  var cartesian;\n  var axis;\n\n  if (seriesModel) {\n    cartesian = seriesModel.coordinateSystem;\n    zrUtil.indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n  } else if (xAxisModel && yAxisModel) {\n    cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  } else if (xAxisModel) {\n    axis = this.getAxis('x', xAxisModel.componentIndex);\n  } else if (yAxisModel) {\n    axis = this.getAxis('y', yAxisModel.componentIndex);\n  } // Lowest priority.\n  else if (gridModel) {\n      var grid = gridModel.coordinateSystem;\n\n      if (grid === this) {\n        cartesian = this._coordsList[0];\n      }\n    }\n\n  return {\n    cartesian: cartesian,\n    axis: axis\n  };\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.containPoint = function (point) {\n  var coord = this._coordsList[0];\n\n  if (coord) {\n    return coord.containPoint(point);\n  }\n};\n/**\n * Initialize cartesian coordinate systems\n * @private\n */\n\n\ngridProto._initCartesian = function (gridModel, ecModel, api) {\n  var axisPositionUsed = {\n    left: false,\n    right: false,\n    top: false,\n    bottom: false\n  };\n  var axesMap = {\n    x: {},\n    y: {}\n  };\n  var axesCount = {\n    x: 0,\n    y: 0\n  }; /// Create axis\n\n  ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n  ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n  if (!axesCount.x || !axesCount.y) {\n    // Roll back when there no either x or y axis\n    this._axesMap = {};\n    this._axesList = [];\n    return;\n  }\n\n  this._axesMap = axesMap; /// Create cartesian2d\n\n  each(axesMap.x, function (xAxis, xAxisIndex) {\n    each(axesMap.y, function (yAxis, yAxisIndex) {\n      var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n      var cartesian = new Cartesian2D(key);\n      cartesian.grid = this;\n      cartesian.model = gridModel;\n      this._coordsMap[key] = cartesian;\n\n      this._coordsList.push(cartesian);\n\n      cartesian.addAxis(xAxis);\n      cartesian.addAxis(yAxis);\n    }, this);\n  }, this);\n\n  function createAxisCreator(axisType) {\n    return function (axisModel, idx) {\n      if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var axisPosition = axisModel.get('position');\n\n      if (axisType === 'x') {\n        // Fix position\n        if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n          // Default bottom of X\n          axisPosition = 'bottom';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n          }\n        }\n      } else {\n        // Fix position\n        if (axisPosition !== 'left' && axisPosition !== 'right') {\n          // Default left of Y\n          axisPosition = 'left';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n          }\n        }\n      }\n\n      axisPositionUsed[axisPosition] = true;\n      var axis = new Axis2D(axisType, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisPosition);\n      var isCategory = axis.type === 'category';\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\n      axis.inverse = axisModel.get('inverse');\n      axis.onZero = axisModel.get('axisLine.onZero');\n      axis.onZeroAxisIndex = axisModel.get('axisLine.onZeroAxisIndex'); // Inject axis into axisModel\n\n      axisModel.axis = axis; // Inject axisModel into axis\n\n      axis.model = axisModel; // Inject grid info axis\n\n      axis.grid = this; // Index of axis, can be used as key\n\n      axis.index = idx;\n\n      this._axesList.push(axis);\n\n      axesMap[axisType][idx] = axis;\n      axesCount[axisType]++;\n    };\n  }\n};\n/**\n * Update cartesian properties from series\n * @param  {module:echarts/model/Option} option\n * @private\n */\n\n\ngridProto._updateScale = function (ecModel, gridModel) {\n  // Reset scale\n  zrUtil.each(this._axesList, function (axis) {\n    axis.scale.setExtent(Infinity, -Infinity);\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (isCartesian2D(seriesModel)) {\n      var axesModels = findAxesModels(seriesModel, ecModel);\n      var xAxisModel = axesModels[0];\n      var yAxisModel = axesModels[1];\n\n      if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel) || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n      var data = seriesModel.getData();\n      var xAxis = cartesian.getAxis('x');\n      var yAxis = cartesian.getAxis('y');\n\n      if (data.type === 'list') {\n        unionExtent(data, xAxis, seriesModel);\n        unionExtent(data, yAxis, seriesModel);\n      }\n    }\n  }, this);\n\n  function unionExtent(data, axis, seriesModel) {\n    each(seriesModel.coordDimToDataDim(axis.dim), function (dim) {\n      axis.scale.unionExtentFromData(data, dim);\n    });\n  }\n};\n/**\n * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n * @return {Object} {baseAxes: [], otherAxes: []}\n */\n\n\ngridProto.getTooltipAxes = function (dim) {\n  var baseAxes = [];\n  var otherAxes = [];\n  each(this.getCartesians(), function (cartesian) {\n    var baseAxis = dim != null && dim !== 'auto' ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n    var otherAxis = cartesian.getOtherAxis(baseAxis);\n    zrUtil.indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n    zrUtil.indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n  });\n  return {\n    baseAxes: baseAxes,\n    otherAxes: otherAxes\n  };\n};\n/**\n * @inner\n */\n\n\nfunction updateAxisTransfrom(axis, coordBase) {\n  var axisExtent = axis.getExtent();\n  var axisExtentSum = axisExtent[0] + axisExtent[1]; // Fast transform\n\n  axis.toGlobalCoord = axis.dim === 'x' ? function (coord) {\n    return coord + coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n  axis.toLocalCoord = axis.dim === 'x' ? function (coord) {\n    return coord - coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n}\n\nvar axesTypes = ['xAxis', 'yAxis'];\n/**\n * @inner\n */\n\nfunction findAxesModels(seriesModel, ecModel) {\n  return zrUtil.map(axesTypes, function (axisType) {\n    var axisModel = seriesModel.getReferringComponents(axisType)[0];\n    return axisModel;\n  });\n}\n/**\n * @inner\n */\n\n\nfunction isCartesian2D(seriesModel) {\n  return seriesModel.get('coordinateSystem') === 'cartesian2d';\n}\n\nGrid.create = function (ecModel, api) {\n  var grids = [];\n  ecModel.eachComponent('grid', function (gridModel, idx) {\n    var grid = new Grid(gridModel, ecModel, api);\n    grid.name = 'grid_' + idx; // dataSampling requires axis extent, so resize\n    // should be performed in create stage.\n\n    grid.resize(gridModel, api, true);\n    gridModel.coordinateSystem = grid;\n    grids.push(grid);\n  }); // Inject the coordinateSystems into seriesModel\n\n  ecModel.eachSeries(function (seriesModel) {\n    if (!isCartesian2D(seriesModel)) {\n      return;\n    }\n\n    var axesModels = findAxesModels(seriesModel, ecModel);\n    var xAxisModel = axesModels[0];\n    var yAxisModel = axesModels[1];\n    var gridModel = xAxisModel.getCoordSysModel();\n    var grid = gridModel.coordinateSystem;\n    seriesModel.coordinateSystem = grid.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  });\n  return grids;\n}; // For deciding which dimensions to use when creating list data\n\n\nGrid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\nCoordinateSystem.register('cartesian2d', Grid);\nvar _default = Grid;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/cartesian/Grid.js\n// module id = 1158\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\nvar AxisModel = ComponentModel.extend({\n  type: 'cartesian2dAxis',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Axis2D}\n   */\n  axis: null,\n\n  /**\n   * @override\n   */\n  init: function () {\n    AxisModel.superApply(this, 'init', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function () {\n    AxisModel.superApply(this, 'mergeOption', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  restoreData: function () {\n    AxisModel.superApply(this, 'restoreData', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   * @return {module:echarts/model/Component}\n   */\n  getCoordSysModel: function () {\n    return this.ecModel.queryComponents({\n      mainType: 'grid',\n      index: this.option.gridIndex,\n      id: this.option.gridId\n    })[0];\n  }\n});\n\nfunction getAxisType(axisDim, option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}\n\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\nvar extraOption = {\n  // gridIndex: 0,\n  // gridId: '',\n  // Offset is for multiple axis on the same position\n  offset: 0\n};\naxisModelCreator('x', AxisModel, getAxisType, extraOption);\naxisModelCreator('y', AxisModel, getAxisType, extraOption);\nvar _default = AxisModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/cartesian/AxisModel.js\n// module id = 1159\n// module chunks = 0 1","var _model = require(\"../../util/model\");\n\nvar otherDimToDataDim = _model.otherDimToDataDim;\n\n/**\n * @module echarts/chart/helper/Symbol\n */\nfunction findLabelValueDim(data) {\n  var valueDim;\n  var labelDims = otherDimToDataDim(data, 'label');\n\n  if (labelDims.length) {\n    valueDim = labelDims[0];\n  } else {\n    // Get last value dim\n    var dimensions = data.dimensions.slice();\n    var dataType;\n\n    while (dimensions.length && (valueDim = dimensions.pop(), dataType = data.getDimensionInfo(valueDim).type, dataType === 'ordinal' || dataType === 'time')) {} // jshint ignore:line\n\n  }\n\n  return valueDim;\n}\n\nexports.findLabelValueDim = findLabelValueDim;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/labelHelper.js\n// module id = 1164\n// module chunks = 0 1","var Path = require(\"zrender/lib/graphic/Path\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar fixClipWithShadow = require(\"zrender/lib/graphic/helper/fixClipWithShadow\");\n\n// Poly path support NaN point\nvar vec2Min = vec2.min;\nvar vec2Max = vec2.max;\nvar scaleAndAdd = vec2.scaleAndAdd;\nvar v2Copy = vec2.copy; // Temporary variable\n\nvar v = [];\nvar cp0 = [];\nvar cp1 = [];\n\nfunction isPointNull(p) {\n  return isNaN(p[0]) || isNaN(p[1]);\n}\n\nfunction drawSegment(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  var prevIdx = 0;\n  var idx = start;\n\n  for (var k = 0; k < segLen; k++) {\n    var p = points[idx];\n\n    if (idx >= allLen || idx < 0) {\n      break;\n    }\n\n    if (isPointNull(p)) {\n      if (connectNulls) {\n        idx += dir;\n        continue;\n      }\n\n      break;\n    }\n\n    if (idx === start) {\n      ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n      v2Copy(cp0, p);\n    } else {\n      if (smooth > 0) {\n        var nextIdx = idx + dir;\n        var nextP = points[nextIdx];\n\n        if (connectNulls) {\n          // Find next point not null\n          while (nextP && isPointNull(points[nextIdx])) {\n            nextIdx += dir;\n            nextP = points[nextIdx];\n          }\n        }\n\n        var ratioNextSeg = 0.5;\n        var prevP = points[prevIdx];\n        var nextP = points[nextIdx]; // Last point\n\n        if (!nextP || isPointNull(nextP)) {\n          v2Copy(cp1, p);\n        } else {\n          // If next data is null in not connect case\n          if (isPointNull(nextP) && !connectNulls) {\n            nextP = p;\n          }\n\n          vec2.sub(v, nextP, prevP);\n          var lenPrevSeg;\n          var lenNextSeg;\n\n          if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n            var dim = smoothMonotone === 'x' ? 0 : 1;\n            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n          } else {\n            lenPrevSeg = vec2.dist(p, prevP);\n            lenNextSeg = vec2.dist(p, nextP);\n          } // Use ratio of seg length\n\n\n          ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n          scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n        } // Smooth constraint\n\n\n        vec2Min(cp0, cp0, smoothMax);\n        vec2Max(cp0, cp0, smoothMin);\n        vec2Min(cp1, cp1, smoothMax);\n        vec2Max(cp1, cp1, smoothMin);\n        ctx.bezierCurveTo(cp0[0], cp0[1], cp1[0], cp1[1], p[0], p[1]); // cp0 of next segment\n\n        scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n      } else {\n        ctx.lineTo(p[0], p[1]);\n      }\n    }\n\n    prevIdx = idx;\n    idx += dir;\n  }\n\n  return k;\n}\n\nfunction getBoundingBox(points, smoothConstraint) {\n  var ptMin = [Infinity, Infinity];\n  var ptMax = [-Infinity, -Infinity];\n\n  if (smoothConstraint) {\n    for (var i = 0; i < points.length; i++) {\n      var pt = points[i];\n\n      if (pt[0] < ptMin[0]) {\n        ptMin[0] = pt[0];\n      }\n\n      if (pt[1] < ptMin[1]) {\n        ptMin[1] = pt[1];\n      }\n\n      if (pt[0] > ptMax[0]) {\n        ptMax[0] = pt[0];\n      }\n\n      if (pt[1] > ptMax[1]) {\n        ptMax[1] = pt[1];\n      }\n    }\n  }\n\n  return {\n    min: smoothConstraint ? ptMin : ptMax,\n    max: smoothConstraint ? ptMax : ptMin\n  };\n}\n\nvar Polyline = Path.extend({\n  type: 'ec-polyline',\n  shape: {\n    points: [],\n    smooth: 0,\n    smoothConstraint: true,\n    smoothMonotone: null,\n    connectNulls: false\n  },\n  style: {\n    fill: null,\n    stroke: '#000'\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var points = shape.points;\n    var i = 0;\n    var len = points.length;\n    var result = getBoundingBox(points, shape.smoothConstraint);\n\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len - 1])) {\n          break;\n        }\n      }\n\n      for (; i < len; i++) {\n        if (!isPointNull(points[i])) {\n          break;\n        }\n      }\n    }\n\n    while (i < len) {\n      i += drawSegment(ctx, points, i, len, len, 1, result.min, result.max, shape.smooth, shape.smoothMonotone, shape.connectNulls) + 1;\n    }\n  }\n});\nvar Polygon = Path.extend({\n  type: 'ec-polygon',\n  shape: {\n    points: [],\n    // Offset between stacked base points and points\n    stackedOnPoints: [],\n    smooth: 0,\n    stackedOnSmooth: 0,\n    smoothConstraint: true,\n    smoothMonotone: null,\n    connectNulls: false\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var points = shape.points;\n    var stackedOnPoints = shape.stackedOnPoints;\n    var i = 0;\n    var len = points.length;\n    var smoothMonotone = shape.smoothMonotone;\n    var bbox = getBoundingBox(points, shape.smoothConstraint);\n    var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len - 1])) {\n          break;\n        }\n      }\n\n      for (; i < len; i++) {\n        if (!isPointNull(points[i])) {\n          break;\n        }\n      }\n    }\n\n    while (i < len) {\n      var k = drawSegment(ctx, points, i, len, len, 1, bbox.min, bbox.max, shape.smooth, smoothMonotone, shape.connectNulls);\n      drawSegment(ctx, stackedOnPoints, i + k - 1, k, len, -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth, smoothMonotone, shape.connectNulls);\n      i += k + 1;\n      ctx.closePath();\n    }\n  }\n});\nexports.Polyline = Polyline;\nexports.Polygon = Polygon;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/line/poly.js\n// module id = 1165\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar defaultOption = {\n  show: true,\n  zlevel: 0,\n  // 一级层叠\n  z: 0,\n  // 二级层叠\n  // 反向坐标轴\n  inverse: false,\n  // 坐标轴名字，默认为空\n  name: '',\n  // 坐标轴名字位置，支持'start' | 'middle' | 'end'\n  nameLocation: 'end',\n  // 坐标轴名字旋转，degree。\n  nameRotate: null,\n  // Adapt to axis rotate, when nameLocation is 'middle'.\n  nameTruncate: {\n    maxWidth: null,\n    ellipsis: '...',\n    placeholder: '.'\n  },\n  // 坐标轴文字样式，默认取全局样式\n  nameTextStyle: {},\n  // 文字与轴线距离\n  nameGap: 15,\n  silent: false,\n  // Default false to support tooltip.\n  triggerEvent: false,\n  // Default false to avoid legacy user event listener fail.\n  tooltip: {\n    show: false\n  },\n  axisPointer: {},\n  // 坐标轴线\n  axisLine: {\n    // 默认显示，属性show控制显示与否\n    show: true,\n    onZero: true,\n    onZeroAxisIndex: null,\n    // 属性lineStyle控制线条样式\n    lineStyle: {\n      color: '#333',\n      width: 1,\n      type: 'solid'\n    },\n    // 坐标轴两端的箭头\n    symbol: ['none', 'none'],\n    symbolSize: [10, 15]\n  },\n  // 坐标轴小标记\n  axisTick: {\n    // 属性show控制显示与否，默认显示\n    show: true,\n    // 控制小标记是否在grid里\n    inside: false,\n    // 属性length控制线长\n    length: 5,\n    // 属性lineStyle控制线条样式\n    lineStyle: {\n      width: 1\n    }\n  },\n  // 坐标轴文本标签，详见axis.axisLabel\n  axisLabel: {\n    show: true,\n    // 控制文本标签是否在grid里\n    inside: false,\n    rotate: 0,\n    showMinLabel: null,\n    // true | false | null (auto)\n    showMaxLabel: null,\n    // true | false | null (auto)\n    margin: 8,\n    // formatter: null,\n    // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n    fontSize: 12\n  },\n  // 分隔线\n  splitLine: {\n    // 默认显示，属性show控制显示与否\n    show: true,\n    // 属性lineStyle（详见lineStyle）控制线条样式\n    lineStyle: {\n      color: ['#ccc'],\n      width: 1,\n      type: 'solid'\n    }\n  },\n  // 分隔区域\n  splitArea: {\n    // 默认不显示，属性show控制显示与否\n    show: false,\n    // 属性areaStyle（详见areaStyle）控制区域样式\n    areaStyle: {\n      color: ['rgba(250,250,250,0.3)', 'rgba(200,200,200,0.3)']\n    }\n  }\n};\nvar axisDefault = {};\naxisDefault.categoryAxis = zrUtil.merge({\n  // 类目起始和结束两端空白策略\n  boundaryGap: true,\n  // splitArea: {\n  // show: false\n  // },\n  splitLine: {\n    show: false\n  },\n  // 坐标轴小标记\n  axisTick: {\n    // If tick is align with label when boundaryGap is true\n    alignWithLabel: false,\n    interval: 'auto'\n  },\n  // 坐标轴文本标签，详见axis.axisLabel\n  axisLabel: {\n    interval: 'auto'\n  }\n}, defaultOption);\naxisDefault.valueAxis = zrUtil.merge({\n  // 数值起始和结束两端空白策略\n  boundaryGap: [0, 0],\n  // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n  // min: null,\n  // 最大值，设置成 'dataMax' 则从数据中计算最大值\n  // max: null,\n  // Readonly prop, specifies start value of the range when using data zoom.\n  // rangeStart: null\n  // Readonly prop, specifies end value of the range when using data zoom.\n  // rangeEnd: null\n  // 脱离0值比例，放大聚焦到最终_min，_max区间\n  // scale: false,\n  // 分割段数，默认为5\n  splitNumber: 5 // Minimum interval\n  // minInterval: null\n  // maxInterval: null\n\n}, defaultOption); // FIXME\n\naxisDefault.timeAxis = zrUtil.defaults({\n  scale: true,\n  min: 'dataMin',\n  max: 'dataMax'\n}, axisDefault.valueAxis);\naxisDefault.logAxis = zrUtil.defaults({\n  scale: true,\n  logBase: 10\n}, axisDefault.valueAxis);\nvar _default = axisDefault;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/axisDefault.js\n// module id = 1166\n// module chunks = 0 1","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"./line/LineSeries\");\n\nrequire(\"./line/LineView\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar layoutPoints = require(\"../layout/points\");\n\nvar dataSample = require(\"../processor/dataSample\");\n\nrequire(\"../component/gridSimple\");\n\n// In case developer forget to include grid component\necharts.registerVisual(zrUtil.curry(visualSymbol, 'line', 'circle', 'line'));\necharts.registerLayout(zrUtil.curry(layoutPoints, 'line')); // Down sample after filter\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, zrUtil.curry(dataSample, 'line'));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/line.js\n// module id = 1176\n// module chunks = 0 1","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar _default = SeriesModel.extend({\n  type: 'series.line',\n  dependencies: ['grid', 'polar'],\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(option.data, this, ecModel);\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // stack: null\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // polarIndex: 0,\n    // If clip the overflow value\n    clipOverflow: true,\n    // cursor: null,\n    label: {\n      normal: {\n        position: 'top'\n      }\n    },\n    // itemStyle: {\n    //     normal: {},\n    //     emphasis: {}\n    // },\n    lineStyle: {\n      normal: {\n        width: 2,\n        type: 'solid'\n      }\n    },\n    // areaStyle: {},\n    // false, 'start', 'end', 'middle'\n    step: false,\n    // Disabled if step is true\n    smooth: false,\n    smoothMonotone: null,\n    // 拐点图形类型\n    symbol: 'emptyCircle',\n    // 拐点图形大小\n    symbolSize: 4,\n    // 拐点图形旋转控制\n    symbolRotate: null,\n    // 是否显示 symbol, 只有在 tooltip hover 的时候显示\n    showSymbol: true,\n    // 标志图形默认只有主轴显示（随主轴标签间隔隐藏策略）\n    showAllSymbol: false,\n    // 是否连接断点\n    connectNulls: false,\n    // 数据过滤，'average', 'max', 'min', 'sum'\n    sampling: 'none',\n    animationEasing: 'linear',\n    // Disable progressive\n    progressive: 0,\n    hoverLayerThreshold: Infinity\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/line/LineSeries.js\n// module id = 1177\n// module chunks = 0 1","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar SymbolClz = require(\"../helper/Symbol\");\n\nvar lineAnimationDiff = require(\"./lineAnimationDiff\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar _poly = require(\"./poly\");\n\nvar Polyline = _poly.Polyline;\nvar Polygon = _poly.Polygon;\n\nvar ChartView = require(\"../../view/Chart\");\n\n// FIXME step not support polar\nfunction isPointsSame(points1, points2) {\n  if (points1.length !== points2.length) {\n    return;\n  }\n\n  for (var i = 0; i < points1.length; i++) {\n    var p1 = points1[i];\n    var p2 = points2[i];\n\n    if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n      return;\n    }\n  }\n\n  return true;\n}\n\nfunction getSmooth(smooth) {\n  return typeof smooth === 'number' ? smooth : smooth ? 0.3 : 0;\n}\n\nfunction getAxisExtentWithGap(axis) {\n  var extent = axis.getGlobalExtent();\n\n  if (axis.onBand) {\n    // Remove extra 1px to avoid line miter in clipped edge\n    var halfBandWidth = axis.getBandWidth() / 2 - 1;\n    var dir = extent[1] > extent[0] ? 1 : -1;\n    extent[0] += dir * halfBandWidth;\n    extent[1] -= dir * halfBandWidth;\n  }\n\n  return extent;\n}\n\nfunction sign(val) {\n  return val >= 0 ? 1 : -1;\n}\n/**\n * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n * @param {module:echarts/data/List} data\n * @param {Array.<Array.<number>>} points\n * @private\n */\n\n\nfunction getStackedOnPoints(coordSys, data) {\n  var baseAxis = coordSys.getBaseAxis();\n  var valueAxis = coordSys.getOtherAxis(baseAxis);\n  var valueStart = 0;\n\n  if (!baseAxis.onZero) {\n    var extent = valueAxis.scale.getExtent();\n\n    if (extent[0] > 0) {\n      // Both positive\n      valueStart = extent[0];\n    } else if (extent[1] < 0) {\n      // Both negative\n      valueStart = extent[1];\n    } // If is one positive, and one negative, onZero shall be true\n\n  }\n\n  var valueDim = valueAxis.dim;\n  var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n  return data.mapArray([valueDim], function (val, idx) {\n    var stackedOnSameSign;\n    var stackedOn = data.stackedOn; // Find first stacked value with same sign\n\n    while (stackedOn && sign(stackedOn.get(valueDim, idx)) === sign(val)) {\n      stackedOnSameSign = stackedOn;\n      break;\n    }\n\n    var stackedData = [];\n    stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n    stackedData[1 - baseDataOffset] = stackedOnSameSign ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n    return coordSys.dataToPoint(stackedData);\n  }, true);\n}\n\nfunction createGridClipShape(cartesian, hasAnimation, seriesModel) {\n  var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n  var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n  var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n  var x = Math.min(xExtent[0], xExtent[1]);\n  var y = Math.min(yExtent[0], yExtent[1]);\n  var width = Math.max(xExtent[0], xExtent[1]) - x;\n  var height = Math.max(yExtent[0], yExtent[1]) - y;\n  var lineWidth = seriesModel.get('lineStyle.normal.width') || 2; // Expand clip shape to avoid clipping when line value exceeds axis\n\n  var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n\n  if (isHorizontal) {\n    y -= expandSize;\n    height += expandSize * 2;\n  } else {\n    x -= expandSize;\n    width += expandSize * 2;\n  }\n\n  var clipPath = new graphic.Rect({\n    shape: {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n    graphic.initProps(clipPath, {\n      shape: {\n        width: width,\n        height: height\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createPolarClipShape(polar, hasAnimation, seriesModel) {\n  var angleAxis = polar.getAngleAxis();\n  var radiusAxis = polar.getRadiusAxis();\n  var radiusExtent = radiusAxis.getExtent();\n  var angleExtent = angleAxis.getExtent();\n  var RADIAN = Math.PI / 180;\n  var clipPath = new graphic.Sector({\n    shape: {\n      cx: polar.cx,\n      cy: polar.cy,\n      r0: radiusExtent[0],\n      r: radiusExtent[1],\n      startAngle: -angleExtent[0] * RADIAN,\n      endAngle: -angleExtent[1] * RADIAN,\n      clockwise: angleAxis.inverse\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: -angleExtent[1] * RADIAN\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createClipShape(coordSys, hasAnimation, seriesModel) {\n  return coordSys.type === 'polar' ? createPolarClipShape(coordSys, hasAnimation, seriesModel) : createGridClipShape(coordSys, hasAnimation, seriesModel);\n}\n\nfunction turnPointsIntoStep(points, coordSys, stepTurnAt) {\n  var baseAxis = coordSys.getBaseAxis();\n  var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n  var stepPoints = [];\n\n  for (var i = 0; i < points.length - 1; i++) {\n    var nextPt = points[i + 1];\n    var pt = points[i];\n    stepPoints.push(pt);\n    var stepPt = [];\n\n    switch (stepTurnAt) {\n      case 'end':\n        stepPt[baseIndex] = nextPt[baseIndex];\n        stepPt[1 - baseIndex] = pt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n        break;\n\n      case 'middle':\n        // default is start\n        var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n        var stepPt2 = [];\n        stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n        stepPt[1 - baseIndex] = pt[1 - baseIndex];\n        stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n        stepPoints.push(stepPt);\n        stepPoints.push(stepPt2);\n        break;\n\n      default:\n        stepPt[baseIndex] = pt[baseIndex];\n        stepPt[1 - baseIndex] = nextPt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n    }\n  } // Last points\n\n\n  points[i] && stepPoints.push(points[i]);\n  return stepPoints;\n}\n\nfunction getVisualGradient(data, coordSys) {\n  var visualMetaList = data.getVisual('visualMeta');\n\n  if (!visualMetaList || !visualMetaList.length || !data.count()) {\n    // When data.count() is 0, gradient range can not be calculated.\n    return;\n  }\n\n  var visualMeta;\n\n  for (var i = visualMetaList.length - 1; i >= 0; i--) {\n    // Can only be x or y\n    if (visualMetaList[i].dimension < 2) {\n      visualMeta = visualMetaList[i];\n      break;\n    }\n  }\n\n  if (!visualMeta || coordSys.type !== 'cartesian2d') {\n    return;\n  } // If the area to be rendered is bigger than area defined by LinearGradient,\n  // the canvas spec prescribes that the color of the first stop and the last\n  // stop should be used. But if two stops are added at offset 0, in effect\n  // browsers use the color of the second stop to render area outside\n  // LinearGradient. So we can only infinitesimally extend area defined in\n  // LinearGradient to render `outerColors`.\n\n\n  var dimension = visualMeta.dimension;\n  var dimName = data.dimensions[dimension];\n  var axis = coordSys.getAxis(dimName); // dataToCoor mapping may not be linear, but must be monotonic.\n\n  var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n    return {\n      coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n      color: stop.color\n    };\n  });\n  var stopLen = colorStops.length;\n  var outerColors = visualMeta.outerColors.slice();\n\n  if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n    colorStops.reverse();\n    outerColors.reverse();\n  }\n\n  var tinyExtent = 10; // Arbitrary value: 10px\n\n  var minCoord = colorStops[0].coord - tinyExtent;\n  var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n  var coordSpan = maxCoord - minCoord;\n\n  if (coordSpan < 1e-3) {\n    return 'transparent';\n  }\n\n  zrUtil.each(colorStops, function (stop) {\n    stop.offset = (stop.coord - minCoord) / coordSpan;\n  });\n  colorStops.push({\n    offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n    color: outerColors[1] || 'transparent'\n  });\n  colorStops.unshift({\n    // notice colorStops.length have been changed.\n    offset: stopLen ? colorStops[0].offset : 0.5,\n    color: outerColors[0] || 'transparent'\n  }); // zrUtil.each(colorStops, function (colorStop) {\n  //     // Make sure each offset has rounded px to avoid not sharp edge\n  //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n  // });\n\n  var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n  gradient[dimName] = minCoord;\n  gradient[dimName + '2'] = maxCoord;\n  return gradient;\n}\n\nvar _default = ChartView.extend({\n  type: 'line',\n  init: function () {\n    var lineGroup = new graphic.Group();\n    var symbolDraw = new SymbolDraw();\n    this.group.add(symbolDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineGroup = lineGroup;\n  },\n  render: function (seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var lineStyleModel = seriesModel.getModel('lineStyle.normal');\n    var areaStyleModel = seriesModel.getModel('areaStyle.normal');\n    var points = data.mapArray(data.getItemLayout, true);\n    var isCoordSysPolar = coordSys.type === 'polar';\n    var prevCoordSys = this._coordSys;\n    var symbolDraw = this._symbolDraw;\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var lineGroup = this._lineGroup;\n    var hasAnimation = seriesModel.get('animation');\n    var isAreaChart = !areaStyleModel.isEmpty();\n    var stackedOnPoints = getStackedOnPoints(coordSys, data);\n    var showSymbol = seriesModel.get('showSymbol');\n\n    var isSymbolIgnore = showSymbol && !isCoordSysPolar && !seriesModel.get('showAllSymbol') && this._getSymbolIgnoreFunc(data, coordSys); // Remove temporary symbols\n\n\n    var oldData = this._data;\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    }); // Remove previous created symbols if showSymbol changed to false\n\n    if (!showSymbol) {\n      symbolDraw.remove();\n    }\n\n    group.add(lineGroup); // FIXME step not support polar\n\n    var step = !isCoordSysPolar && seriesModel.get('step'); // Initialization animation or coordinate system changed\n\n    if (!(polyline && prevCoordSys.type === coordSys.type && step === this._step)) {\n      showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n      if (step) {\n        // TODO If stacked series is not step\n        points = turnPointsIntoStep(points, coordSys, step);\n        stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n      }\n\n      polyline = this._newPolyline(points, coordSys, hasAnimation);\n\n      if (isAreaChart) {\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      }\n\n      lineGroup.setClipPath(createClipShape(coordSys, true, seriesModel));\n    } else {\n      if (isAreaChart && !polygon) {\n        // If areaStyle is added\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      } else if (polygon && !isAreaChart) {\n        // If areaStyle is removed\n        lineGroup.remove(polygon);\n        polygon = this._polygon = null;\n      } // Update clipPath\n\n\n      lineGroup.setClipPath(createClipShape(coordSys, false, seriesModel)); // Always update, or it is wrong in the case turning on legend\n      // because points are not changed\n\n      showSymbol && symbolDraw.updateData(data, isSymbolIgnore); // Stop symbol animation and sync with line points\n      // FIXME performance?\n\n      data.eachItemGraphicEl(function (el) {\n        el.stopAnimation(true);\n      }); // In the case data zoom triggerred refreshing frequently\n      // Data may not change if line has a category axis. So it should animate nothing\n\n      if (!isPointsSame(this._stackedOnPoints, stackedOnPoints) || !isPointsSame(this._points, points)) {\n        if (hasAnimation) {\n          this._updateAnimation(data, stackedOnPoints, coordSys, api, step);\n        } else {\n          // Not do it in update with animation\n          if (step) {\n            // TODO If stacked series is not step\n            points = turnPointsIntoStep(points, coordSys, step);\n            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n          }\n\n          polyline.setShape({\n            points: points\n          });\n          polygon && polygon.setShape({\n            points: points,\n            stackedOnPoints: stackedOnPoints\n          });\n        }\n      }\n    }\n\n    var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n    polyline.useStyle(zrUtil.defaults( // Use color in lineStyle first\n    lineStyleModel.getLineStyle(), {\n      fill: 'none',\n      stroke: visualColor,\n      lineJoin: 'bevel'\n    }));\n    var smooth = seriesModel.get('smooth');\n    smooth = getSmooth(seriesModel.get('smooth'));\n    polyline.setShape({\n      smooth: smooth,\n      smoothMonotone: seriesModel.get('smoothMonotone'),\n      connectNulls: seriesModel.get('connectNulls')\n    });\n\n    if (polygon) {\n      var stackedOn = data.stackedOn;\n      var stackedOnSmooth = 0;\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: visualColor,\n        opacity: 0.7,\n        lineJoin: 'bevel'\n      }));\n\n      if (stackedOn) {\n        var stackedOnSeries = stackedOn.hostModel;\n        stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n      }\n\n      polygon.setShape({\n        smooth: smooth,\n        stackedOnSmooth: stackedOnSmooth,\n        smoothMonotone: seriesModel.get('smoothMonotone'),\n        connectNulls: seriesModel.get('connectNulls')\n      });\n    }\n\n    this._data = data; // Save the coordinate system for transition animation when data changed\n\n    this._coordSys = coordSys;\n    this._stackedOnPoints = stackedOnPoints;\n    this._points = points;\n    this._step = step;\n  },\n  dispose: function () {},\n  highlight: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (!symbol) {\n        // Create a temporary symbol if it is not exists\n        var pt = data.getItemLayout(dataIndex);\n\n        if (!pt) {\n          // Null data\n          return;\n        }\n\n        symbol = new SymbolClz(data, dataIndex);\n        symbol.position = pt;\n        symbol.setZ(seriesModel.get('zlevel'), seriesModel.get('z'));\n        symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n        symbol.__temp = true;\n        data.setItemGraphicEl(dataIndex, symbol); // Stop scale animation\n\n        symbol.stopSymbolAnimation(true);\n        this.group.add(symbol);\n      }\n\n      symbol.highlight();\n    } else {\n      // Highlight whole series\n      ChartView.prototype.highlight.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n  downplay: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (symbol) {\n        if (symbol.__temp) {\n          data.setItemGraphicEl(dataIndex, null);\n          this.group.remove(symbol);\n        } else {\n          symbol.downplay();\n        }\n      }\n    } else {\n      // FIXME\n      // can not downplay completely.\n      // Downplay whole series\n      ChartView.prototype.downplay.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolyline: function (points) {\n    var polyline = this._polyline; // Remove previous created polyline\n\n    if (polyline) {\n      this._lineGroup.remove(polyline);\n    }\n\n    polyline = new Polyline({\n      shape: {\n        points: points\n      },\n      silent: true,\n      z2: 10\n    });\n\n    this._lineGroup.add(polyline);\n\n    this._polyline = polyline;\n    return polyline;\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} stackedOnPoints\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolygon: function (points, stackedOnPoints) {\n    var polygon = this._polygon; // Remove previous created polygon\n\n    if (polygon) {\n      this._lineGroup.remove(polygon);\n    }\n\n    polygon = new Polygon({\n      shape: {\n        points: points,\n        stackedOnPoints: stackedOnPoints\n      },\n      silent: true\n    });\n\n    this._lineGroup.add(polygon);\n\n    this._polygon = polygon;\n    return polygon;\n  },\n\n  /**\n   * @private\n   */\n  _getSymbolIgnoreFunc: function (data, coordSys) {\n    var categoryAxis = coordSys.getAxesByScale('ordinal')[0]; // `getLabelInterval` is provided by echarts/component/axis\n\n    if (categoryAxis && categoryAxis.isLabelIgnored) {\n      return zrUtil.bind(categoryAxis.isLabelIgnored, categoryAxis);\n    }\n  },\n\n  /**\n   * @private\n   */\n  // FIXME Two value axis\n  _updateAnimation: function (data, stackedOnPoints, coordSys, api, step) {\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var seriesModel = data.hostModel;\n    var diff = lineAnimationDiff(this._data, data, this._stackedOnPoints, stackedOnPoints, this._coordSys, coordSys);\n    var current = diff.current;\n    var stackedOnCurrent = diff.stackedOnCurrent;\n    var next = diff.next;\n    var stackedOnNext = diff.stackedOnNext;\n\n    if (step) {\n      // TODO If stacked series is not step\n      current = turnPointsIntoStep(diff.current, coordSys, step);\n      stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n      next = turnPointsIntoStep(diff.next, coordSys, step);\n      stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n    } // `diff.current` is subset of `current` (which should be ensured by\n    // turnPointsIntoStep), so points in `__points` can be updated when\n    // points in `current` are update during animation.\n\n\n    polyline.shape.__points = diff.current;\n    polyline.shape.points = current;\n    graphic.updateProps(polyline, {\n      shape: {\n        points: next\n      }\n    }, seriesModel);\n\n    if (polygon) {\n      polygon.setShape({\n        points: current,\n        stackedOnPoints: stackedOnCurrent\n      });\n      graphic.updateProps(polygon, {\n        shape: {\n          points: next,\n          stackedOnPoints: stackedOnNext\n        }\n      }, seriesModel);\n    }\n\n    var updatedDataInfo = [];\n    var diffStatus = diff.status;\n\n    for (var i = 0; i < diffStatus.length; i++) {\n      var cmd = diffStatus[i].cmd;\n\n      if (cmd === '=') {\n        var el = data.getItemGraphicEl(diffStatus[i].idx1);\n\n        if (el) {\n          updatedDataInfo.push({\n            el: el,\n            ptIdx: i // Index of points\n\n          });\n        }\n      }\n    }\n\n    if (polyline.animators && polyline.animators.length) {\n      polyline.animators[0].during(function () {\n        for (var i = 0; i < updatedDataInfo.length; i++) {\n          var el = updatedDataInfo[i].el;\n          el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n        }\n      });\n    }\n  },\n  remove: function (ecModel) {\n    var group = this.group;\n    var oldData = this._data;\n\n    this._lineGroup.removeAll();\n\n    this._symbolDraw.remove(true); // Remove temporary created elements when highlighting\n\n\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    });\n    this._polyline = this._polygon = this._coordSys = this._points = this._stackedOnPoints = this._data = null;\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/line/LineView.js\n// module id = 1178\n// module chunks = 0 1","// var arrayDiff = require('zrender/src/core/arrayDiff');\n// 'zrender/src/core/arrayDiff' has been used before, but it did\n// not do well in performance when roam with fixed dataZoom window.\nfunction sign(val) {\n  return val >= 0 ? 1 : -1;\n}\n\nfunction getStackedOnPoint(coordSys, data, idx) {\n  var baseAxis = coordSys.getBaseAxis();\n  var valueAxis = coordSys.getOtherAxis(baseAxis);\n  var valueStart = baseAxis.onZero ? 0 : valueAxis.scale.getExtent()[0];\n  var valueDim = valueAxis.dim;\n  var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n  var stackedOnSameSign;\n  var stackedOn = data.stackedOn;\n  var val = data.get(valueDim, idx); // Find first stacked value with same sign\n\n  while (stackedOn && sign(stackedOn.get(valueDim, idx)) === sign(val)) {\n    stackedOnSameSign = stackedOn;\n    break;\n  }\n\n  var stackedData = [];\n  stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n  stackedData[1 - baseDataOffset] = stackedOnSameSign ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n  return coordSys.dataToPoint(stackedData);\n} // function convertToIntId(newIdList, oldIdList) {\n//     // Generate int id instead of string id.\n//     // Compare string maybe slow in score function of arrDiff\n//     // Assume id in idList are all unique\n//     var idIndicesMap = {};\n//     var idx = 0;\n//     for (var i = 0; i < newIdList.length; i++) {\n//         idIndicesMap[newIdList[i]] = idx;\n//         newIdList[i] = idx++;\n//     }\n//     for (var i = 0; i < oldIdList.length; i++) {\n//         var oldId = oldIdList[i];\n//         // Same with newIdList\n//         if (idIndicesMap[oldId]) {\n//             oldIdList[i] = idIndicesMap[oldId];\n//         }\n//         else {\n//             oldIdList[i] = idx++;\n//         }\n//     }\n// }\n\n\nfunction diffData(oldData, newData) {\n  var diffResult = [];\n  newData.diff(oldData).add(function (idx) {\n    diffResult.push({\n      cmd: '+',\n      idx: idx\n    });\n  }).update(function (newIdx, oldIdx) {\n    diffResult.push({\n      cmd: '=',\n      idx: oldIdx,\n      idx1: newIdx\n    });\n  }).remove(function (idx) {\n    diffResult.push({\n      cmd: '-',\n      idx: idx\n    });\n  }).execute();\n  return diffResult;\n}\n\nfunction _default(oldData, newData, oldStackedOnPoints, newStackedOnPoints, oldCoordSys, newCoordSys) {\n  var diff = diffData(oldData, newData); // var newIdList = newData.mapArray(newData.getId);\n  // var oldIdList = oldData.mapArray(oldData.getId);\n  // convertToIntId(newIdList, oldIdList);\n  // // FIXME One data ?\n  // diff = arrayDiff(oldIdList, newIdList);\n\n  var currPoints = [];\n  var nextPoints = []; // Points for stacking base line\n\n  var currStackedPoints = [];\n  var nextStackedPoints = [];\n  var status = [];\n  var sortedIndices = [];\n  var rawIndices = [];\n  var dims = newCoordSys.dimensions;\n\n  for (var i = 0; i < diff.length; i++) {\n    var diffItem = diff[i];\n    var pointAdded = true; // FIXME, animation is not so perfect when dataZoom window moves fast\n    // Which is in case remvoing or add more than one data in the tail or head\n\n    switch (diffItem.cmd) {\n      case '=':\n        var currentPt = oldData.getItemLayout(diffItem.idx);\n        var nextPt = newData.getItemLayout(diffItem.idx1); // If previous data is NaN, use next point directly\n\n        if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n          currentPt = nextPt.slice();\n        }\n\n        currPoints.push(currentPt);\n        nextPoints.push(nextPt);\n        currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n        nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n        rawIndices.push(newData.getRawIndex(diffItem.idx1));\n        break;\n\n      case '+':\n        var idx = diffItem.idx;\n        currPoints.push(oldCoordSys.dataToPoint([newData.get(dims[0], idx, true), newData.get(dims[1], idx, true)]));\n        nextPoints.push(newData.getItemLayout(idx).slice());\n        currStackedPoints.push(getStackedOnPoint(oldCoordSys, newData, idx));\n        nextStackedPoints.push(newStackedOnPoints[idx]);\n        rawIndices.push(newData.getRawIndex(idx));\n        break;\n\n      case '-':\n        var idx = diffItem.idx;\n        var rawIndex = oldData.getRawIndex(idx); // Data is replaced. In the case of dynamic data queue\n        // FIXME FIXME FIXME\n\n        if (rawIndex !== idx) {\n          currPoints.push(oldData.getItemLayout(idx));\n          nextPoints.push(newCoordSys.dataToPoint([oldData.get(dims[0], idx, true), oldData.get(dims[1], idx, true)]));\n          currStackedPoints.push(oldStackedOnPoints[idx]);\n          nextStackedPoints.push(getStackedOnPoint(newCoordSys, oldData, idx));\n          rawIndices.push(rawIndex);\n        } else {\n          pointAdded = false;\n        }\n\n    } // Original indices\n\n\n    if (pointAdded) {\n      status.push(diffItem);\n      sortedIndices.push(sortedIndices.length);\n    }\n  } // Diff result may be crossed if all items are changed\n  // Sort by data index\n\n\n  sortedIndices.sort(function (a, b) {\n    return rawIndices[a] - rawIndices[b];\n  });\n  var sortedCurrPoints = [];\n  var sortedNextPoints = [];\n  var sortedCurrStackedPoints = [];\n  var sortedNextStackedPoints = [];\n  var sortedStatus = [];\n\n  for (var i = 0; i < sortedIndices.length; i++) {\n    var idx = sortedIndices[i];\n    sortedCurrPoints[i] = currPoints[idx];\n    sortedNextPoints[i] = nextPoints[idx];\n    sortedCurrStackedPoints[i] = currStackedPoints[idx];\n    sortedNextStackedPoints[i] = nextStackedPoints[idx];\n    sortedStatus[i] = status[idx];\n  }\n\n  return {\n    current: sortedCurrPoints,\n    next: sortedNextPoints,\n    stackedOnCurrent: sortedCurrStackedPoints,\n    stackedOnNext: sortedNextStackedPoints,\n    status: sortedStatus\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/line/lineAnimationDiff.js\n// module id = 1179\n// module chunks = 0 1","var samplers = {\n  average: function (frame) {\n    var sum = 0;\n    var count = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      if (!isNaN(frame[i])) {\n        sum += frame[i];\n        count++;\n      }\n    } // Return NaN if count is 0\n\n\n    return count === 0 ? NaN : sum / count;\n  },\n  sum: function (frame) {\n    var sum = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      // Ignore NaN\n      sum += frame[i] || 0;\n    }\n\n    return sum;\n  },\n  max: function (frame) {\n    var max = -Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] > max && (max = frame[i]);\n    }\n\n    return max;\n  },\n  min: function (frame) {\n    var min = Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] < min && (min = frame[i]);\n    }\n\n    return min;\n  },\n  // TODO\n  // Median\n  nearest: function (frame) {\n    return frame[0];\n  }\n};\n\nvar indexSampler = function (frame, value) {\n  return Math.round(frame.length / 2);\n};\n\nfunction _default(seriesType, ecModel, api) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var data = seriesModel.getData();\n    var sampling = seriesModel.get('sampling');\n    var coordSys = seriesModel.coordinateSystem; // Only cartesian2d support down sampling\n\n    if (coordSys.type === 'cartesian2d' && sampling) {\n      var baseAxis = coordSys.getBaseAxis();\n      var valueAxis = coordSys.getOtherAxis(baseAxis);\n      var extent = baseAxis.getExtent(); // Coordinste system has been resized\n\n      var size = extent[1] - extent[0];\n      var rate = Math.round(data.count() / size);\n\n      if (rate > 1) {\n        var sampler;\n\n        if (typeof sampling === 'string') {\n          sampler = samplers[sampling];\n        } else if (typeof sampling === 'function') {\n          sampler = sampling;\n        }\n\n        if (sampler) {\n          data = data.downSample(valueAxis.dim, 1 / rate, sampler, indexSampler);\n          seriesModel.setData(data);\n        }\n      }\n    }\n  }, this);\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/processor/dataSample.js\n// module id = 1180\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Cartesian = require(\"./Cartesian\");\n\nfunction Cartesian2D(name) {\n  Cartesian.call(this, name);\n}\n\nCartesian2D.prototype = {\n  constructor: Cartesian2D,\n  type: 'cartesian2d',\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['x', 'y'],\n\n  /**\n   * Base axis will be used on stacking.\n   *\n   * @return {module:echarts/coord/cartesian/Axis2D}\n   */\n  getBaseAxis: function () {\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAxis('x');\n  },\n\n  /**\n   * If contain point\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var axisX = this.getAxis('x');\n    var axisY = this.getAxis('y');\n    return axisX.contain(axisX.toLocalCoord(point[0])) && axisY.contain(axisY.toLocalCoord(point[1]));\n  },\n\n  /**\n   * If contain data\n   * @param {Array.<number>} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.getAxis('x').containData(data[0]) && this.getAxis('y').containData(data[1]);\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, clamp) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    return [xAxis.toGlobalCoord(xAxis.dataToCoord(data[0], clamp)), yAxis.toGlobalCoord(yAxis.dataToCoord(data[1], clamp))];\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  pointToData: function (point, clamp) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    return [xAxis.coordToData(xAxis.toLocalCoord(point[0]), clamp), yAxis.coordToData(yAxis.toLocalCoord(point[1]), clamp)];\n  },\n\n  /**\n   * Get other axis\n   * @param {module:echarts/coord/cartesian/Axis2D} axis\n   */\n  getOtherAxis: function (axis) {\n    return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n  }\n};\nzrUtil.inherits(Cartesian2D, Cartesian);\nvar _default = Cartesian2D;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/cartesian/Cartesian2D.js\n// module id = 1181\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\nfunction dimAxisMapper(dim) {\n  return this._axes[dim];\n}\n/**\n * @alias module:echarts/coord/Cartesian\n * @constructor\n */\n\n\nvar Cartesian = function (name) {\n  this._axes = {};\n  this._dimList = [];\n  /**\n   * @type {string}\n   */\n\n  this.name = name || '';\n};\n\nCartesian.prototype = {\n  constructor: Cartesian,\n  type: 'cartesian',\n\n  /**\n   * Get axis\n   * @param  {number|string} dim\n   * @return {module:echarts/coord/Cartesian~Axis}\n   */\n  getAxis: function (dim) {\n    return this._axes[dim];\n  },\n\n  /**\n   * Get axes list\n   * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n   */\n  getAxes: function () {\n    return zrUtil.map(this._dimList, dimAxisMapper, this);\n  },\n\n  /**\n   * Get axes list by given scale type\n   */\n  getAxesByScale: function (scaleType) {\n    scaleType = scaleType.toLowerCase();\n    return zrUtil.filter(this.getAxes(), function (axis) {\n      return axis.scale.type === scaleType;\n    });\n  },\n\n  /**\n   * Add axis\n   * @param {module:echarts/coord/Cartesian.Axis}\n   */\n  addAxis: function (axis) {\n    var dim = axis.dim;\n    this._axes[dim] = axis;\n\n    this._dimList.push(dim);\n  },\n\n  /**\n   * Convert data to coord in nd space\n   * @param {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  dataToCoord: function (val) {\n    return this._dataCoordConvert(val, 'dataToCoord');\n  },\n\n  /**\n   * Convert coord in nd space to data\n   * @param  {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  coordToData: function (val) {\n    return this._dataCoordConvert(val, 'coordToData');\n  },\n  _dataCoordConvert: function (input, method) {\n    var dimList = this._dimList;\n    var output = input instanceof Array ? [] : {};\n\n    for (var i = 0; i < dimList.length; i++) {\n      var dim = dimList[i];\n      var axis = this._axes[dim];\n      output[dim] = axis[method](input[dim]);\n    }\n\n    return output;\n  }\n};\nvar _default = Cartesian;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/cartesian/Cartesian.js\n// module id = 1182\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/**\n * Extend axis 2d\n * @constructor module:echarts/coord/cartesian/Axis2D\n * @extends {module:echarts/coord/cartesian/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar Axis2D = function (dim, scale, coordExtent, axisType, position) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis position\n   *  - 'top'\n   *  - 'bottom'\n   *  - 'left'\n   *  - 'right'\n   */\n\n  this.position = position || 'bottom';\n};\n\nAxis2D.prototype = {\n  constructor: Axis2D,\n\n  /**\n   * Index of axis, can be used as key\n   */\n  index: 0,\n\n  /**\n   * If axis is on the zero position of the other axis\n   * @type {boolean}\n   */\n  onZero: false,\n\n  /**\n   * Axis model\n   * @param {module:echarts/coord/cartesian/AxisModel}\n   */\n  model: null,\n  isHorizontal: function () {\n    var position = this.position;\n    return position === 'top' || position === 'bottom';\n  },\n\n  /**\n   * Each item cooresponds to this.getExtent(), which\n   * means globalExtent[0] may greater than globalExtent[1],\n   * unless `asc` is input.\n   *\n   * @param {boolean} [asc]\n   * @return {Array.<number>}\n   */\n  getGlobalExtent: function (asc) {\n    var ret = this.getExtent();\n    ret[0] = this.toGlobalCoord(ret[0]);\n    ret[1] = this.toGlobalCoord(ret[1]);\n    asc && ret[0] > ret[1] && ret.reverse();\n    return ret;\n  },\n  getOtherAxis: function () {\n    this.grid.getOtherAxis();\n  },\n\n  /**\n   * If label is ignored.\n   * Automatically used when axis is category and label can not be all shown\n   * @param  {number}  idx\n   * @return {boolean}\n   */\n  isLabelIgnored: function (idx) {\n    if (this.type === 'category') {\n      var labelInterval = this.getLabelInterval();\n      return typeof labelInterval === 'function' && !labelInterval(idx, this.scale.getLabel(idx)) || idx % (labelInterval + 1);\n    }\n  },\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n  },\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var localCoord = axis.toLocalCoord(80);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toLocalCoord: null,\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var globalCoord = axis.toLocalCoord(40);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toGlobalCoord: null\n};\nzrUtil.inherits(Axis2D, Axis);\nvar _default = Axis2D;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/cartesian/Axis2D.js\n// module id = 1183\n// module chunks = 0 1","require(\"./AxisModel\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\nvar _default = ComponentModel.extend({\n  type: 'grid',\n  dependencies: ['xAxis', 'yAxis'],\n  layoutMode: 'box',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Grid}\n   */\n  coordinateSystem: null,\n  defaultOption: {\n    show: false,\n    zlevel: 0,\n    z: 0,\n    left: '10%',\n    top: 60,\n    right: '10%',\n    bottom: 60,\n    // If grid size contain label\n    containLabel: false,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderWidth: 1,\n    borderColor: '#ccc'\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/cartesian/GridModel.js\n// module id = 1184\n// module chunks = 0 1","require(\"../coord/cartesian/AxisModel\");\n\nrequire(\"./axis/CartesianAxisView\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axis.js\n// module id = 1185\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar AxisView = require(\"./AxisView\");\n\nvar cartesianAxisHelper = require(\"./cartesianAxisHelper\");\n\nvar ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\nvar getInterval = AxisBuilder.getInterval;\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitArea', 'splitLine']; // function getAlignWithLabel(model, axisModel) {\n//     var alignWithLabel = model.get('alignWithLabel');\n//     if (alignWithLabel === 'auto') {\n//         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n//     }\n//     return alignWithLabel;\n// }\n\nvar CartesianAxisView = AxisView.extend({\n  type: 'cartesianAxis',\n  axisPointerClass: 'CartesianAxisPointer',\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    this.group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    this.group.add(this._axisGroup);\n\n    if (!axisModel.get('show')) {\n      return;\n    }\n\n    var gridModel = axisModel.getCoordSysModel();\n    var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n    var axisBuilder = new AxisBuilder(axisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n    this._axisGroup.add(axisBuilder.getGroup());\n\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (axisModel.get(name + '.show')) {\n        this['_' + name](axisModel, gridModel, layout.labelInterval);\n      }\n    }, this);\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n    CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @param {number|Function} labelInterval\n   * @private\n   */\n  _splitLine: function (axisModel, gridModel, labelInterval) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitLineModel = axisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineInterval = getInterval(splitLineModel, labelInterval);\n    lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var lineCount = 0;\n    var ticksCoords = axis.getTicksCoords();\n    var ticks = axis.scale.getTicks();\n    var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n    var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n    var p1 = [];\n    var p2 = []; // Simple optimization\n    // Batching the lines if color are the same\n\n    var lineStyle = lineStyleModel.getLineStyle();\n\n    for (var i = 0; i < ticksCoords.length; i++) {\n      if (ifIgnoreOnTick(axis, i, lineInterval, ticksCoords.length, showMinLabel, showMaxLabel)) {\n        continue;\n      }\n\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n      if (isHorizontal) {\n        p1[0] = tickCoord;\n        p1[1] = gridRect.y;\n        p2[0] = tickCoord;\n        p2[1] = gridRect.y + gridRect.height;\n      } else {\n        p1[0] = gridRect.x;\n        p1[1] = tickCoord;\n        p2[0] = gridRect.x + gridRect.width;\n        p2[1] = tickCoord;\n      }\n\n      var colorIndex = lineCount++ % lineColors.length;\n\n      this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n        anid: 'line_' + ticks[i],\n        shape: {\n          x1: p1[0],\n          y1: p1[1],\n          x2: p2[0],\n          y2: p2[1]\n        },\n        style: zrUtil.defaults({\n          stroke: lineColors[colorIndex]\n        }, lineStyle),\n        silent: true\n      })));\n    }\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @param {number|Function} labelInterval\n   * @private\n   */\n  _splitArea: function (axisModel, gridModel, labelInterval) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitAreaModel = axisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var ticksCoords = axis.getTicksCoords();\n    var ticks = axis.scale.getTicks();\n    var prevX = axis.toGlobalCoord(ticksCoords[0]);\n    var prevY = axis.toGlobalCoord(ticksCoords[0]);\n    var count = 0;\n    var areaInterval = getInterval(splitAreaModel, labelInterval);\n    var areaStyle = areaStyleModel.getAreaStyle();\n    areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n    var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n    var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n\n    for (var i = 1; i < ticksCoords.length; i++) {\n      if (ifIgnoreOnTick(axis, i, areaInterval, ticksCoords.length, showMinLabel, showMaxLabel)) {\n        continue;\n      }\n\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (axis.isHorizontal()) {\n        x = prevX;\n        y = gridRect.y;\n        width = tickCoord - x;\n        height = gridRect.height;\n      } else {\n        x = gridRect.x;\n        y = prevY;\n        width = gridRect.width;\n        height = tickCoord - y;\n      }\n\n      var colorIndex = count++ % areaColors.length;\n\n      this._axisGroup.add(new graphic.Rect({\n        anid: 'area_' + ticks[i],\n        shape: {\n          x: x,\n          y: y,\n          width: width,\n          height: height\n        },\n        style: zrUtil.defaults({\n          fill: areaColors[colorIndex]\n        }, areaStyle),\n        silent: true\n      }));\n\n      prevX = x + width;\n      prevY = y + height;\n    }\n  }\n});\nCartesianAxisView.extend({\n  type: 'xAxis'\n});\nCartesianAxisView.extend({\n  type: 'yAxis'\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axis/CartesianAxisView.js\n// module id = 1186\n// module chunks = 0 1","require(\"./gridSimple\");\n\nrequire(\"./axisPointer/CartesianAxisPointer\");\n\nrequire(\"./axisPointer\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/grid.js\n// module id = 1188\n// module chunks = 0 1","require(\"./legend\");\n\nrequire(\"./legend/ScrollableLegendModel\");\n\nrequire(\"./legend/ScrollableLegendView\");\n\nrequire(\"./legend/scrollableLegendAction\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legendScroll.js\n// module id = 1189\n// module chunks = 0 1","var LegendModel = require(\"./LegendModel\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar mergeLayoutParam = _layout.mergeLayoutParam;\nvar getLayoutParams = _layout.getLayoutParams;\nvar ScrollableLegendModel = LegendModel.extend({\n  type: 'legend.scroll',\n\n  /**\n   * @param {number} scrollDataIndex\n   */\n  setScrollDataIndex: function (scrollDataIndex) {\n    this.option.scrollDataIndex = scrollDataIndex;\n  },\n  defaultOption: {\n    scrollDataIndex: 0,\n    pageButtonItemGap: 5,\n    pageButtonGap: null,\n    pageButtonPosition: 'end',\n    // 'start' or 'end'\n    pageFormatter: '{current}/{total}',\n    // If null/undefined, do not show page.\n    pageIcons: {\n      horizontal: ['M0,0L12,-10L12,10z', 'M0,0L-12,-10L-12,10z'],\n      vertical: ['M0,0L20,0L10,-20z', 'M0,0L20,0L10,20z']\n    },\n    pageIconColor: '#2f4554',\n    pageIconInactiveColor: '#aaa',\n    pageIconSize: 15,\n    // Can be [10, 3], which represents [width, height]\n    pageTextStyle: {\n      color: '#333'\n    },\n    animationDurationUpdate: 800\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    var inputPositionParams = getLayoutParams(option);\n    ScrollableLegendModel.superCall(this, 'init', option, parentModel, ecModel, extraOpt);\n    mergeAndNormalizeLayoutParams(this, option, inputPositionParams);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (option, extraOpt) {\n    ScrollableLegendModel.superCall(this, 'mergeOption', option, extraOpt);\n    mergeAndNormalizeLayoutParams(this, this.option, option);\n  },\n  getOrient: function () {\n    return this.get('orient') === 'vertical' ? {\n      index: 1,\n      name: 'vertical'\n    } : {\n      index: 0,\n      name: 'horizontal'\n    };\n  }\n}); // Do not `ignoreSize` to enable setting {left: 10, right: 10}.\n\nfunction mergeAndNormalizeLayoutParams(legendModel, target, raw) {\n  var orient = legendModel.getOrient();\n  var ignoreSize = [1, 1];\n  ignoreSize[orient.index] = 0;\n  mergeLayoutParam(target, raw, {\n    type: 'box',\n    ignoreSize: ignoreSize\n  });\n}\n\nvar _default = ScrollableLegendModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/ScrollableLegendModel.js\n// module id = 1190\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar LegendView = require(\"./LegendView\");\n\n/**\n * Separate legend and scrollable legend to reduce package size.\n */\nvar Group = graphic.Group;\nvar WH = ['width', 'height'];\nvar XY = ['x', 'y'];\nvar ScrollableLegendView = LegendView.extend({\n  type: 'legend.scroll',\n  newlineDisabled: true,\n  init: function () {\n    ScrollableLegendView.superCall(this, 'init');\n    /**\n     * @private\n     * @type {number} For `scroll`.\n     */\n\n    this._currentIndex = 0;\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n    this.group.add(this._containerGroup = new Group());\n\n    this._containerGroup.add(this.getContentGroup());\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n\n    this.group.add(this._controllerGroup = new Group());\n    /**\n     *\n     * @private\n     */\n\n    this._showController;\n  },\n\n  /**\n   * @override\n   */\n  resetInner: function () {\n    ScrollableLegendView.superCall(this, 'resetInner');\n\n    this._controllerGroup.removeAll();\n\n    this._containerGroup.removeClipPath();\n\n    this._containerGroup.__rectSize = null;\n  },\n\n  /**\n   * @override\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var me = this; // Render content items.\n\n    ScrollableLegendView.superCall(this, 'renderInner', itemAlign, legendModel, ecModel, api);\n    var controllerGroup = this._controllerGroup;\n    var pageIconSize = legendModel.get('pageIconSize', true);\n\n    if (!zrUtil.isArray(pageIconSize)) {\n      pageIconSize = [pageIconSize, pageIconSize];\n    }\n\n    createPageButton('pagePrev', 0);\n    var pageTextStyleModel = legendModel.getModel('pageTextStyle');\n    controllerGroup.add(new graphic.Text({\n      name: 'pageText',\n      style: {\n        textFill: pageTextStyleModel.getTextColor(),\n        font: pageTextStyleModel.getFont(),\n        textVerticalAlign: 'middle',\n        textAlign: 'center'\n      },\n      silent: true\n    }));\n    createPageButton('pageNext', 1);\n\n    function createPageButton(name, iconIdx) {\n      var pageDataIndexName = name + 'DataIndex';\n      var icon = graphic.createIcon(legendModel.get('pageIcons', true)[legendModel.getOrient().name][iconIdx], {\n        // Buttons will be created in each render, so we do not need\n        // to worry about avoiding using legendModel kept in scope.\n        onclick: zrUtil.bind(me._pageGo, me, pageDataIndexName, legendModel, api)\n      }, {\n        x: -pageIconSize[0] / 2,\n        y: -pageIconSize[1] / 2,\n        width: pageIconSize[0],\n        height: pageIconSize[1]\n      });\n      icon.name = name;\n      controllerGroup.add(icon);\n    }\n  },\n\n  /**\n   * @override\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup();\n    var containerGroup = this._containerGroup;\n    var controllerGroup = this._controllerGroup;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var yx = XY[1 - orientIdx]; // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), !orientIdx ? null : maxSize.width, orientIdx ? null : maxSize.height);\n    layoutUtil.box( // Buttons in controller are layout always horizontally.\n    'horizontal', controllerGroup, legendModel.get('pageButtonItemGap', true));\n    var contentRect = contentGroup.getBoundingRect();\n    var controllerRect = controllerGroup.getBoundingRect();\n    var showController = this._showController = contentRect[wh] > maxSize[wh];\n    var contentPos = [-contentRect.x, -contentRect.y]; // Remain contentPos when scroll animation perfroming.\n\n    contentPos[orientIdx] = contentGroup.position[orientIdx]; // Layout container group based on 0.\n\n    var containerPos = [0, 0];\n    var controllerPos = [-controllerRect.x, -controllerRect.y];\n    var pageButtonGap = zrUtil.retrieve2(legendModel.get('pageButtonGap', true), legendModel.get('itemGap', true)); // Place containerGroup and controllerGroup and contentGroup.\n\n    if (showController) {\n      var pageButtonPosition = legendModel.get('pageButtonPosition', true); // controller is on the right / bottom.\n\n      if (pageButtonPosition === 'end') {\n        controllerPos[orientIdx] += maxSize[wh] - controllerRect[wh];\n      } // controller is on the left / top.\n      else {\n          containerPos[orientIdx] += controllerRect[wh] + pageButtonGap;\n        }\n    } // Always align controller to content as 'middle'.\n\n\n    controllerPos[1 - orientIdx] += contentRect[hw] / 2 - controllerRect[hw] / 2;\n    contentGroup.attr('position', contentPos);\n    containerGroup.attr('position', containerPos);\n    controllerGroup.attr('position', controllerPos); // Calculate `mainRect` and set `clipPath`.\n    // mainRect should not be calculated by `this.group.getBoundingRect()`\n    // for sake of the overflow.\n\n    var mainRect = this.group.getBoundingRect();\n    var mainRect = {\n      x: 0,\n      y: 0\n    }; // Consider content may be overflow (should be clipped).\n\n    mainRect[wh] = showController ? maxSize[wh] : contentRect[wh];\n    mainRect[hw] = Math.max(contentRect[hw], controllerRect[hw]); // `containerRect[yx] + containerPos[1 - orientIdx]` is 0.\n\n    mainRect[yx] = Math.min(0, controllerRect[yx] + controllerPos[1 - orientIdx]);\n    containerGroup.__rectSize = maxSize[wh];\n\n    if (showController) {\n      var clipShape = {\n        x: 0,\n        y: 0\n      };\n      clipShape[wh] = Math.max(maxSize[wh] - controllerRect[wh] - pageButtonGap, 0);\n      clipShape[hw] = mainRect[hw];\n      containerGroup.setClipPath(new graphic.Rect({\n        shape: clipShape\n      })); // Consider content may be larger than container, container rect\n      // can not be obtained from `containerGroup.getBoundingRect()`.\n\n      containerGroup.__rectSize = clipShape[wh];\n    } else {\n      // Do not remove or ignore controller. Keep them set as place holders.\n      controllerGroup.eachChild(function (child) {\n        child.attr({\n          invisible: true,\n          silent: true\n        });\n      });\n    } // Content translate animation.\n\n\n    var pageInfo = this._getPageInfo(legendModel);\n\n    pageInfo.pageIndex != null && graphic.updateProps(contentGroup, {\n      position: pageInfo.contentPosition\n    }, // When switch from \"show controller\" to \"not show controller\", view should be\n    // updated immediately without animation, otherwise causes weird efffect.\n    showController ? legendModel : false);\n\n    this._updatePageInfoView(legendModel, pageInfo);\n\n    return mainRect;\n  },\n  _pageGo: function (to, legendModel, api) {\n    var scrollDataIndex = this._getPageInfo(legendModel)[to];\n\n    scrollDataIndex != null && api.dispatchAction({\n      type: 'legendScroll',\n      scrollDataIndex: scrollDataIndex,\n      legendId: legendModel.id\n    });\n  },\n  _updatePageInfoView: function (legendModel, pageInfo) {\n    var controllerGroup = this._controllerGroup;\n    zrUtil.each(['pagePrev', 'pageNext'], function (name) {\n      var canJump = pageInfo[name + 'DataIndex'] != null;\n      var icon = controllerGroup.childOfName(name);\n\n      if (icon) {\n        icon.setStyle('fill', canJump ? legendModel.get('pageIconColor', true) : legendModel.get('pageIconInactiveColor', true));\n        icon.cursor = canJump ? 'pointer' : 'default';\n      }\n    });\n    var pageText = controllerGroup.childOfName('pageText');\n    var pageFormatter = legendModel.get('pageFormatter');\n    var pageIndex = pageInfo.pageIndex;\n    var current = pageIndex != null ? pageIndex + 1 : 0;\n    var total = pageInfo.pageCount;\n    pageText && pageFormatter && pageText.setStyle('text', zrUtil.isString(pageFormatter) ? pageFormatter.replace('{current}', current).replace('{total}', total) : pageFormatter({\n      current: current,\n      total: total\n    }));\n  },\n\n  /**\n   * @param {module:echarts/model/Model} legendModel\n   * @return {Object} {\n   *  contentPosition: Array.<number>, null when data item not found.\n   *  pageIndex: number, null when data item not found.\n   *  pageCount: number, always be a number, can be 0.\n   *  pagePrevDataIndex: number, null when no next page.\n   *  pageNextDataIndex: number, null when no previous page.\n   * }\n   */\n  _getPageInfo: function (legendModel) {\n    // Align left or top by the current dataIndex.\n    var currDataIndex = legendModel.get('scrollDataIndex', true);\n    var contentGroup = this.getContentGroup();\n    var contentRect = contentGroup.getBoundingRect();\n    var containerRectSize = this._containerGroup.__rectSize;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var xy = XY[orientIdx];\n    var contentPos = contentGroup.position.slice();\n    var pageIndex;\n    var pagePrevDataIndex;\n    var pageNextDataIndex;\n    var targetItemGroup;\n\n    if (this._showController) {\n      contentGroup.eachChild(function (child) {\n        if (child.__legendDataIndex === currDataIndex) {\n          targetItemGroup = child;\n        }\n      });\n    } else {\n      targetItemGroup = contentGroup.childAt(0);\n    }\n\n    var pageCount = containerRectSize ? Math.ceil(contentRect[wh] / containerRectSize) : 0;\n\n    if (targetItemGroup) {\n      var itemRect = targetItemGroup.getBoundingRect();\n      var itemLoc = targetItemGroup.position[orientIdx] + itemRect[xy];\n      contentPos[orientIdx] = -itemLoc - contentRect[xy];\n      pageIndex = Math.floor(pageCount * (itemLoc + itemRect[xy] + containerRectSize / 2) / contentRect[wh]);\n      pageIndex = contentRect[wh] && pageCount ? Math.max(0, Math.min(pageCount - 1, pageIndex)) : -1;\n      var winRect = {\n        x: 0,\n        y: 0\n      };\n      winRect[wh] = containerRectSize;\n      winRect[hw] = contentRect[hw];\n      winRect[xy] = -contentPos[orientIdx] - contentRect[xy];\n      var startIdx;\n      var children = contentGroup.children();\n      contentGroup.eachChild(function (child, index) {\n        var itemRect = getItemRect(child);\n\n        if (itemRect.intersect(winRect)) {\n          startIdx == null && (startIdx = index); // It is user-friendly that the last item shown in the\n          // current window is shown at the begining of next window.\n\n          pageNextDataIndex = child.__legendDataIndex;\n        } // If the last item is shown entirely, no next page.\n\n\n        if (index === children.length - 1 && itemRect[xy] + itemRect[wh] <= winRect[xy] + winRect[wh]) {\n          pageNextDataIndex = null;\n        }\n      }); // Always align based on the left/top most item, so the left/top most\n      // item in the previous window is needed to be found here.\n\n      if (startIdx != null) {\n        var startItem = children[startIdx];\n        var startRect = getItemRect(startItem);\n        winRect[xy] = startRect[xy] + startRect[wh] - winRect[wh]; // If the first item is shown entirely, no previous page.\n\n        if (startIdx <= 0 && startRect[xy] >= winRect[xy]) {\n          pagePrevDataIndex = null;\n        } else {\n          while (startIdx > 0 && getItemRect(children[startIdx - 1]).intersect(winRect)) {\n            startIdx--;\n          }\n\n          pagePrevDataIndex = children[startIdx].__legendDataIndex;\n        }\n      }\n    }\n\n    return {\n      contentPosition: contentPos,\n      pageIndex: pageIndex,\n      pageCount: pageCount,\n      pagePrevDataIndex: pagePrevDataIndex,\n      pageNextDataIndex: pageNextDataIndex\n    };\n\n    function getItemRect(el) {\n      var itemRect = el.getBoundingRect().clone();\n      itemRect[xy] += el.position[orientIdx];\n      return itemRect;\n    }\n  }\n});\nvar _default = ScrollableLegendView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/ScrollableLegendView.js\n// module id = 1191\n// module chunks = 0 1","var echarts = require(\"../../echarts\");\n\n/**\n * @event legendScroll\n * @type {Object}\n * @property {string} type 'legendScroll'\n * @property {string} scrollDataIndex\n */\necharts.registerAction('legendScroll', 'legendscroll', function (payload, ecModel) {\n  var scrollDataIndex = payload.scrollDataIndex;\n  scrollDataIndex != null && ecModel.eachComponent({\n    mainType: 'legend',\n    subType: 'scroll',\n    query: payload\n  }, function (legendModel) {\n    legendModel.setScrollDataIndex(scrollDataIndex);\n  });\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/scrollableLegendAction.js\n// module id = 1192\n// module chunks = 0 1","import React from 'react'\nimport echarts from 'echarts/lib/echarts' //必须\nimport 'echarts/lib/component/tooltip'\nimport 'echarts/lib/component/grid'\nimport 'echarts/lib/chart/line'\nimport 'echarts/lib/component/legendScroll'\nimport 'echarts/lib/component/toolbox'\n\nexport default class LineReact extends React.Component {\n  \n  constructor(props) {\n    super(props);\n  }\n  \n  initPie = () => {\n    const { option={} } = this.props; //外部传入的data数据\n    let myChart = echarts.init(this.ID); //初始化echarts\n\n\n    //设置options\n    myChart.setOption(option)\n    window.onresize = function() {\n      myChart.resize()\n    }\n  }\n  \n  componentDidMount() {\n    //alert(1);\n    this.initPie()\n  }\n  \n  componentDidUpdate() {\n    //alert(2);\n    this.initPie()\n  }\n  \n  render() {\n    const { width=\"100%\", height=\"300px\" } = this.props\n    return <div ref={ID => this.ID = ID} style={{width, height}} id=\"line-chart\"></div>\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/Echarts/LineReact.js","/**\n * @module zrender/core/util\n */\n// 用于处理merge时无法遍历Date等对象的问题\nvar BUILTIN_OBJECT = {\n  '[object Function]': 1,\n  '[object RegExp]': 1,\n  '[object Date]': 1,\n  '[object Error]': 1,\n  '[object CanvasGradient]': 1,\n  '[object CanvasPattern]': 1,\n  // For node-canvas\n  '[object Image]': 1,\n  '[object Canvas]': 1\n};\nvar TYPED_ARRAY = {\n  '[object Int8Array]': 1,\n  '[object Uint8Array]': 1,\n  '[object Uint8ClampedArray]': 1,\n  '[object Int16Array]': 1,\n  '[object Uint16Array]': 1,\n  '[object Int32Array]': 1,\n  '[object Uint32Array]': 1,\n  '[object Float32Array]': 1,\n  '[object Float64Array]': 1\n};\nvar objToString = Object.prototype.toString;\nvar arrayProto = Array.prototype;\nvar nativeForEach = arrayProto.forEach;\nvar nativeFilter = arrayProto.filter;\nvar nativeSlice = arrayProto.slice;\nvar nativeMap = arrayProto.map;\nvar nativeReduce = arrayProto.reduce; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  methods[name] = fn;\n}\n/**\n * Those data types can be cloned:\n *     Plain object, Array, TypedArray, number, string, null, undefined.\n * Those data types will be assgined using the orginal data:\n *     BUILTIN_OBJECT\n * Instance of user defined class will be cloned to a plain object, without\n * properties in prototype.\n * Other data types is not supported (not sure what will happen).\n *\n * Caution: do not support clone Date, for performance consideration.\n * (There might be a large number of date in `series.data`).\n * So date should not be modified in and out of echarts.\n *\n * @param {*} source\n * @return {*} new\n */\n\n\nfunction clone(source) {\n  if (source == null || typeof source != 'object') {\n    return source;\n  }\n\n  var result = source;\n  var typeStr = objToString.call(source);\n\n  if (typeStr === '[object Array]') {\n    result = [];\n\n    for (var i = 0, len = source.length; i < len; i++) {\n      result[i] = clone(source[i]);\n    }\n  } else if (TYPED_ARRAY[typeStr]) {\n    var Ctor = source.constructor;\n\n    if (source.constructor.from) {\n      result = Ctor.from(source);\n    } else {\n      result = new Ctor(source.length);\n\n      for (var i = 0, len = source.length; i < len; i++) {\n        result[i] = clone(source[i]);\n      }\n    }\n  } else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n    result = {};\n\n    for (var key in source) {\n      if (source.hasOwnProperty(key)) {\n        result[key] = clone(source[key]);\n      }\n    }\n  }\n\n  return result;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overwrite=false]\n */\n\n\nfunction merge(target, source, overwrite) {\n  // We should escapse that source is string\n  // and enter for ... in ...\n  if (!isObject(source) || !isObject(target)) {\n    return overwrite ? clone(source) : target;\n  }\n\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      var targetProp = target[key];\n      var sourceProp = source[key];\n\n      if (isObject(sourceProp) && isObject(targetProp) && !isArray(sourceProp) && !isArray(targetProp) && !isDom(sourceProp) && !isDom(targetProp) && !isBuiltInObject(sourceProp) && !isBuiltInObject(targetProp) && !isPrimitive(sourceProp) && !isPrimitive(targetProp)) {\n        // 如果需要递归覆盖，就递归调用merge\n        merge(targetProp, sourceProp, overwrite);\n      } else if (overwrite || !(key in target)) {\n        // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n        // NOTE，在 target[key] 不存在的时候也是直接覆盖\n        target[key] = clone(source[key], true);\n      }\n    }\n  }\n\n  return target;\n}\n/**\n * @param {Array} targetAndSources The first item is target, and the rests are source.\n * @param {boolean} [overwrite=false]\n * @return {*} target\n */\n\n\nfunction mergeAll(targetAndSources, overwrite) {\n  var result = targetAndSources[0];\n\n  for (var i = 1, len = targetAndSources.length; i < len; i++) {\n    result = merge(result, targetAndSources[i], overwrite);\n  }\n\n  return result;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @memberOf module:zrender/core/util\n */\n\n\nfunction extend(target, source) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overlay=false]\n * @memberOf module:zrender/core/util\n */\n\n\nfunction defaults(target, source, overlay) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key) && (overlay ? source[key] != null : target[key] == null)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar createCanvas = function () {\n  return methods.createCanvas();\n};\n\nmethods.createCanvas = function () {\n  return document.createElement('canvas');\n}; // FIXME\n\n\nvar _ctx;\n\nfunction getContext() {\n  if (!_ctx) {\n    // Use util.createCanvas instead of createCanvas\n    // because createCanvas may be overwritten in different environment\n    _ctx = createCanvas().getContext('2d');\n  }\n\n  return _ctx;\n}\n/**\n * 查询数组中元素的index\n * @memberOf module:zrender/core/util\n */\n\n\nfunction indexOf(array, value) {\n  if (array) {\n    if (array.indexOf) {\n      return array.indexOf(value);\n    }\n\n    for (var i = 0, len = array.length; i < len; i++) {\n      if (array[i] === value) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n}\n/**\n * 构造类继承关系\n *\n * @memberOf module:zrender/core/util\n * @param {Function} clazz 源类\n * @param {Function} baseClazz 基类\n */\n\n\nfunction inherits(clazz, baseClazz) {\n  var clazzPrototype = clazz.prototype;\n\n  function F() {}\n\n  F.prototype = baseClazz.prototype;\n  clazz.prototype = new F();\n\n  for (var prop in clazzPrototype) {\n    clazz.prototype[prop] = clazzPrototype[prop];\n  }\n\n  clazz.prototype.constructor = clazz;\n  clazz.superClass = baseClazz;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Object|Function} target\n * @param {Object|Function} sorce\n * @param {boolean} overlay\n */\n\n\nfunction mixin(target, source, overlay) {\n  target = 'prototype' in target ? target.prototype : target;\n  source = 'prototype' in source ? source.prototype : source;\n  defaults(target, source, overlay);\n}\n/**\n * Consider typed array.\n * @param {Array|TypedArray} data\n */\n\n\nfunction isArrayLike(data) {\n  if (!data) {\n    return;\n  }\n\n  if (typeof data == 'string') {\n    return false;\n  }\n\n  return typeof data.length == 'number';\n}\n/**\n * 数组或对象遍历\n * @memberOf module:zrender/core/util\n * @param {Object|Array} obj\n * @param {Function} cb\n * @param {*} [context]\n */\n\n\nfunction each(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.forEach && obj.forEach === nativeForEach) {\n    obj.forEach(cb, context);\n  } else if (obj.length === +obj.length) {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      cb.call(context, obj[i], i, obj);\n    }\n  } else {\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        cb.call(context, obj[key], key, obj);\n      }\n    }\n  }\n}\n/**\n * 数组映射\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction map(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.map && obj.map === nativeMap) {\n    return obj.map(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      result.push(cb.call(context, obj[i], i, obj));\n    }\n\n    return result;\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {Object} [memo]\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction reduce(obj, cb, memo, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.reduce && obj.reduce === nativeReduce) {\n    return obj.reduce(cb, memo, context);\n  } else {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      memo = cb.call(context, memo, obj[i], i, obj);\n    }\n\n    return memo;\n  }\n}\n/**\n * 数组过滤\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction filter(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.filter && obj.filter === nativeFilter) {\n    return obj.filter(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      if (cb.call(context, obj[i], i, obj)) {\n        result.push(obj[i]);\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * 数组项查找\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {*}\n */\n\n\nfunction find(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  for (var i = 0, len = obj.length; i < len; i++) {\n    if (cb.call(context, obj[i], i, obj)) {\n      return obj[i];\n    }\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @param {*} context\n * @return {Function}\n */\n\n\nfunction bind(func, context) {\n  var args = nativeSlice.call(arguments, 2);\n  return function () {\n    return func.apply(context, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @return {Function}\n */\n\n\nfunction curry(func) {\n  var args = nativeSlice.call(arguments, 1);\n  return function () {\n    return func.apply(this, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isArray(value) {\n  return objToString.call(value) === '[object Array]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isString(value) {\n  return objToString.call(value) === '[object String]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return type === 'function' || !!value && type == 'object';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isBuiltInObject(value) {\n  return !!BUILTIN_OBJECT[objToString.call(value)];\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isDom(value) {\n  return typeof value === 'object' && typeof value.nodeType === 'number' && typeof value.ownerDocument === 'object';\n}\n/**\n * Whether is exactly NaN. Notice isNaN('a') returns true.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction eqNaN(value) {\n  return value !== value;\n}\n/**\n * If value1 is not null, then return value1, otherwise judget rest of values.\n * Low performance.\n * @memberOf module:zrender/core/util\n * @return {*} Final value\n */\n\n\nfunction retrieve(values) {\n  for (var i = 0, len = arguments.length; i < len; i++) {\n    if (arguments[i] != null) {\n      return arguments[i];\n    }\n  }\n}\n\nfunction retrieve2(value0, value1) {\n  return value0 != null ? value0 : value1;\n}\n\nfunction retrieve3(value0, value1, value2) {\n  return value0 != null ? value0 : value1 != null ? value1 : value2;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} arr\n * @param {number} startIndex\n * @param {number} endIndex\n * @return {Array}\n */\n\n\nfunction slice() {\n  return Function.call.apply(nativeSlice, arguments);\n}\n/**\n * Normalize css liked array configuration\n * e.g.\n *  3 => [3, 3, 3, 3]\n *  [4, 2] => [4, 2, 4, 2]\n *  [4, 3, 2] => [4, 3, 2, 3]\n * @param {number|Array.<number>} val\n * @return {Array.<number>}\n */\n\n\nfunction normalizeCssArray(val) {\n  if (typeof val === 'number') {\n    return [val, val, val, val];\n  }\n\n  var len = val.length;\n\n  if (len === 2) {\n    // vertical | horizontal\n    return [val[0], val[1], val[0], val[1]];\n  } else if (len === 3) {\n    // top | horizontal | bottom\n    return [val[0], val[1], val[2], val[1]];\n  }\n\n  return val;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {boolean} condition\n * @param {string} message\n */\n\n\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error(message);\n  }\n}\n\nvar primitiveKey = '__ec_primitive__';\n/**\n * Set an object as primitive to be ignored traversing children in clone or merge\n */\n\nfunction setAsPrimitive(obj) {\n  obj[primitiveKey] = true;\n}\n\nfunction isPrimitive(obj) {\n  return obj[primitiveKey];\n}\n/**\n * @constructor\n * @param {Object} obj Only apply `ownProperty`.\n */\n\n\nfunction HashMap(obj) {\n  obj && each(obj, function (value, key) {\n    this.set(key, value);\n  }, this);\n} // Add prefix to avoid conflict with Object.prototype.\n\n\nvar HASH_MAP_PREFIX = '_ec_';\nvar HASH_MAP_PREFIX_LENGTH = 4;\nHashMap.prototype = {\n  constructor: HashMap,\n  // Do not provide `has` method to avoid defining what is `has`.\n  // (We usually treat `null` and `undefined` as the same, different\n  // from ES6 Map).\n  get: function (key) {\n    return this[HASH_MAP_PREFIX + key];\n  },\n  set: function (key, value) {\n    this[HASH_MAP_PREFIX + key] = value; // Comparing with invocation chaining, `return value` is more commonly\n    // used in this case: `var someVal = map.set('a', genVal());`\n\n    return value;\n  },\n  // Although util.each can be performed on this hashMap directly, user\n  // should not use the exposed keys, who are prefixed.\n  each: function (cb, context) {\n    context !== void 0 && (cb = bind(cb, context));\n\n    for (var prefixedKey in this) {\n      this.hasOwnProperty(prefixedKey) && cb(this[prefixedKey], prefixedKey.slice(HASH_MAP_PREFIX_LENGTH));\n    }\n  },\n  // Do not use this method if performance sensitive.\n  removeKey: function (key) {\n    delete this[HASH_MAP_PREFIX + key];\n  }\n};\n\nfunction createHashMap(obj) {\n  return new HashMap(obj);\n}\n\nfunction noop() {}\n\nexports.$override = $override;\nexports.clone = clone;\nexports.merge = merge;\nexports.mergeAll = mergeAll;\nexports.extend = extend;\nexports.defaults = defaults;\nexports.createCanvas = createCanvas;\nexports.getContext = getContext;\nexports.indexOf = indexOf;\nexports.inherits = inherits;\nexports.mixin = mixin;\nexports.isArrayLike = isArrayLike;\nexports.each = each;\nexports.map = map;\nexports.reduce = reduce;\nexports.filter = filter;\nexports.find = find;\nexports.bind = bind;\nexports.curry = curry;\nexports.isArray = isArray;\nexports.isFunction = isFunction;\nexports.isString = isString;\nexports.isObject = isObject;\nexports.isBuiltInObject = isBuiltInObject;\nexports.isDom = isDom;\nexports.eqNaN = eqNaN;\nexports.retrieve = retrieve;\nexports.retrieve2 = retrieve2;\nexports.retrieve3 = retrieve3;\nexports.slice = slice;\nexports.normalizeCssArray = normalizeCssArray;\nexports.assert = assert;\nexports.setAsPrimitive = setAsPrimitive;\nexports.isPrimitive = isPrimitive;\nexports.createHashMap = createHashMap;\nexports.noop = noop;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/util.js\n// module id = 978\n// module chunks = 0 1 2","var _config = require(\"./config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrender = require(\"zrender/lib/zrender\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar timsort = require(\"zrender/lib/core/timsort\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar GlobalModel = require(\"./model/Global\");\n\nvar ExtensionAPI = require(\"./ExtensionAPI\");\n\nvar CoordinateSystemManager = require(\"./CoordinateSystem\");\n\nvar OptionManager = require(\"./model/OptionManager\");\n\nvar backwardCompat = require(\"./preprocessor/backwardCompat\");\n\nvar ComponentModel = require(\"./model/Component\");\n\nvar SeriesModel = require(\"./model/Series\");\n\nvar ComponentView = require(\"./view/Component\");\n\nvar ChartView = require(\"./view/Chart\");\n\nvar graphic = require(\"./util/graphic\");\n\nvar modelUtil = require(\"./util/model\");\n\nvar _throttle = require(\"./util/throttle\");\n\nvar throttle = _throttle.throttle;\n\nvar seriesColor = require(\"./visual/seriesColor\");\n\nvar loadingDefault = require(\"./loading/default\");\n\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\nvar each = zrUtil.each;\nvar parseClassType = ComponentModel.parseClassType;\nvar version = '3.8.5';\nvar dependencies = {\n  zrender: '3.7.4'\n};\nvar PRIORITY_PROCESSOR_FILTER = 1000;\nvar PRIORITY_PROCESSOR_STATISTIC = 5000;\nvar PRIORITY_VISUAL_LAYOUT = 1000;\nvar PRIORITY_VISUAL_GLOBAL = 2000;\nvar PRIORITY_VISUAL_CHART = 3000;\nvar PRIORITY_VISUAL_COMPONENT = 4000; // FIXME\n// necessary?\n\nvar PRIORITY_VISUAL_BRUSH = 5000;\nvar PRIORITY = {\n  PROCESSOR: {\n    FILTER: PRIORITY_PROCESSOR_FILTER,\n    STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n  },\n  VISUAL: {\n    LAYOUT: PRIORITY_VISUAL_LAYOUT,\n    GLOBAL: PRIORITY_VISUAL_GLOBAL,\n    CHART: PRIORITY_VISUAL_CHART,\n    COMPONENT: PRIORITY_VISUAL_COMPONENT,\n    BRUSH: PRIORITY_VISUAL_BRUSH\n  }\n}; // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n// where they must not be invoked nestedly, except the only case: invoke\n// dispatchAction with updateMethod \"none\" in main process.\n// This flag is used to carry out this rule.\n// All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n\nvar IN_MAIN_PROCESS = '__flagInMainProcess';\nvar HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\nvar OPTION_UPDATED = '__optionUpdated';\nvar ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\nfunction createRegisterEventWithLowercaseName(method) {\n  return function (eventName, handler, context) {\n    // Event name is all lowercase\n    eventName = eventName && eventName.toLowerCase();\n    Eventful.prototype[method].call(this, eventName, handler, context);\n  };\n}\n/**\n * @module echarts~MessageCenter\n */\n\n\nfunction MessageCenter() {\n  Eventful.call(this);\n}\n\nMessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\nMessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\nMessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\nzrUtil.mixin(MessageCenter, Eventful);\n/**\n * @module echarts~ECharts\n */\n\nfunction ECharts(dom, theme, opts) {\n  opts = opts || {}; // Get theme by name\n\n  if (typeof theme === 'string') {\n    theme = themeStorage[theme];\n  }\n  /**\n   * @type {string}\n   */\n\n\n  this.id;\n  /**\n   * Group id\n   * @type {string}\n   */\n\n  this.group;\n  /**\n   * @type {HTMLElement}\n   * @private\n   */\n\n  this._dom = dom;\n  var defaultRenderer = 'canvas';\n\n  /**\n   * @type {module:zrender/ZRender}\n   * @private\n   */\n  var zr = this._zr = zrender.init(dom, {\n    renderer: opts.renderer || defaultRenderer,\n    devicePixelRatio: opts.devicePixelRatio,\n    width: opts.width,\n    height: opts.height\n  });\n  /**\n   * Expect 60 pfs.\n   * @type {Function}\n   * @private\n   */\n\n  this._throttledZrFlush = throttle(zrUtil.bind(zr.flush, zr), 17);\n  var theme = zrUtil.clone(theme);\n  theme && backwardCompat(theme, true);\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._theme = theme;\n  /**\n   * @type {Array.<module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsMap = {};\n  /**\n   * @type {Array.<module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsMap = {};\n  /**\n   * @type {module:echarts/CoordinateSystem}\n   * @private\n   */\n\n  this._coordSysMgr = new CoordinateSystemManager();\n  /**\n   * @type {module:echarts/ExtensionAPI}\n   * @private\n   */\n\n  this._api = createExtensionAPI(this);\n  Eventful.call(this);\n  /**\n   * @type {module:echarts~MessageCenter}\n   * @private\n   */\n\n  this._messageCenter = new MessageCenter(); // Init mouse events\n\n  this._initEvents(); // In case some people write `window.onresize = chart.resize`\n\n\n  this.resize = zrUtil.bind(this.resize, this); // Can't dispatch action during rendering procedure\n\n  this._pendingActions = []; // Sort on demand\n\n  function prioritySortFunc(a, b) {\n    return a.prio - b.prio;\n  }\n\n  timsort(visualFuncs, prioritySortFunc);\n  timsort(dataProcessorFuncs, prioritySortFunc);\n  zr.animation.on('frame', this._onframe, this); // ECharts instance can be used as value.\n\n  zrUtil.setAsPrimitive(this);\n}\n\nvar echartsProto = ECharts.prototype;\n\nechartsProto._onframe = function () {\n  // Lazy update\n  if (this[OPTION_UPDATED]) {\n    var silent = this[OPTION_UPDATED].silent;\n    this[IN_MAIN_PROCESS] = true;\n    updateMethods.prepareAndUpdate.call(this);\n    this[IN_MAIN_PROCESS] = false;\n    this[OPTION_UPDATED] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @return {HTMLElement}\n */\n\n\nechartsProto.getDom = function () {\n  return this._dom;\n};\n/**\n * @return {module:zrender~ZRender}\n */\n\n\nechartsProto.getZr = function () {\n  return this._zr;\n};\n/**\n * Usage:\n * chart.setOption(option, notMerge, lazyUpdate);\n * chart.setOption(option, {\n *     notMerge: ...,\n *     lazyUpdate: ...,\n *     silent: ...\n * });\n *\n * @param {Object} option\n * @param {Object|boolean} [opts] opts or notMerge.\n * @param {boolean} [opts.notMerge=false]\n * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n */\n\n\nechartsProto.setOption = function (option, notMerge, lazyUpdate) {\n  var silent;\n\n  if (zrUtil.isObject(notMerge)) {\n    lazyUpdate = notMerge.lazyUpdate;\n    silent = notMerge.silent;\n    notMerge = notMerge.notMerge;\n  }\n\n  this[IN_MAIN_PROCESS] = true;\n\n  if (!this._model || notMerge) {\n    var optionManager = new OptionManager(this._api);\n    var theme = this._theme;\n    var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n    ecModel.init(null, null, theme, optionManager);\n  }\n\n  this._model.setOption(option, optionPreprocessorFuncs);\n\n  if (lazyUpdate) {\n    this[OPTION_UPDATED] = {\n      silent: silent\n    };\n    this[IN_MAIN_PROCESS] = false;\n  } else {\n    updateMethods.prepareAndUpdate.call(this); // Ensure zr refresh sychronously, and then pixel in canvas can be\n    // fetched after `setOption`.\n\n    this._zr.flush();\n\n    this[OPTION_UPDATED] = false;\n    this[IN_MAIN_PROCESS] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @DEPRECATED\n */\n\n\nechartsProto.setTheme = function () {\n  console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n};\n/**\n * @return {module:echarts/model/Global}\n */\n\n\nechartsProto.getModel = function () {\n  return this._model;\n};\n/**\n * @return {Object}\n */\n\n\nechartsProto.getOption = function () {\n  return this._model && this._model.getOption();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getWidth = function () {\n  return this._zr.getWidth();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getHeight = function () {\n  return this._zr.getHeight();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getDevicePixelRatio = function () {\n  return this._zr.painter.dpr || window.devicePixelRatio || 1;\n};\n/**\n * Get canvas which has all thing rendered\n * @param {Object} opts\n * @param {string} [opts.backgroundColor]\n * @return {string}\n */\n\n\nechartsProto.getRenderedCanvas = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  opts = opts || {};\n  opts.pixelRatio = opts.pixelRatio || 1;\n  opts.backgroundColor = opts.backgroundColor || this._model.get('backgroundColor');\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.getRenderedCanvas(opts);\n};\n/**\n * Get svg data url\n * @return {string}\n */\n\n\nechartsProto.getSvgDataUrl = function () {\n  if (!env.svgSupported) {\n    return;\n  }\n\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.pathToSvg();\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n * @param {string} [opts.excludeComponents]\n */\n\n\nechartsProto.getDataURL = function (opts) {\n  opts = opts || {};\n  var excludeComponents = opts.excludeComponents;\n  var ecModel = this._model;\n  var excludesComponentViews = [];\n  var self = this;\n  each(excludeComponents, function (componentType) {\n    ecModel.eachComponent({\n      mainType: componentType\n    }, function (component) {\n      var view = self._componentsMap[component.__viewId];\n\n      if (!view.group.ignore) {\n        excludesComponentViews.push(view);\n        view.group.ignore = true;\n      }\n    });\n  });\n  var url = this._zr.painter.getType() === 'svg' ? this.getSvgDataUrl() : this.getRenderedCanvas(opts).toDataURL('image/' + (opts && opts.type || 'png'));\n  each(excludesComponentViews, function (view) {\n    view.group.ignore = false;\n  });\n  return url;\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n */\n\n\nechartsProto.getConnectedDataURL = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  var groupId = this.group;\n  var mathMin = Math.min;\n  var mathMax = Math.max;\n  var MAX_NUMBER = Infinity;\n\n  if (connectedGroups[groupId]) {\n    var left = MAX_NUMBER;\n    var top = MAX_NUMBER;\n    var right = -MAX_NUMBER;\n    var bottom = -MAX_NUMBER;\n    var canvasList = [];\n    var dpr = opts && opts.pixelRatio || 1;\n    zrUtil.each(instances, function (chart, id) {\n      if (chart.group === groupId) {\n        var canvas = chart.getRenderedCanvas(zrUtil.clone(opts));\n        var boundingRect = chart.getDom().getBoundingClientRect();\n        left = mathMin(boundingRect.left, left);\n        top = mathMin(boundingRect.top, top);\n        right = mathMax(boundingRect.right, right);\n        bottom = mathMax(boundingRect.bottom, bottom);\n        canvasList.push({\n          dom: canvas,\n          left: boundingRect.left,\n          top: boundingRect.top\n        });\n      }\n    });\n    left *= dpr;\n    top *= dpr;\n    right *= dpr;\n    bottom *= dpr;\n    var width = right - left;\n    var height = bottom - top;\n    var targetCanvas = zrUtil.createCanvas();\n    targetCanvas.width = width;\n    targetCanvas.height = height;\n    var zr = zrender.init(targetCanvas);\n    each(canvasList, function (item) {\n      var img = new graphic.Image({\n        style: {\n          x: item.left * dpr - left,\n          y: item.top * dpr - top,\n          image: item.dom\n        }\n      });\n      zr.add(img);\n    });\n    zr.refreshImmediately();\n    return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n  } else {\n    return this.getDataURL(opts);\n  }\n};\n/**\n * Convert from logical coordinate system to pixel coordinate system.\n * See CoordinateSystem#convertToPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId, geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\n\nechartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n/**\n * Convert from pixel coordinate system to logical coordinate system.\n * See CoordinateSystem#convertFromPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\nechartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\nfunction doConvertPixel(methodName, finder, value) {\n  var ecModel = this._model;\n\n  var coordSysList = this._coordSysMgr.getCoordinateSystems();\n\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n\n  for (var i = 0; i < coordSysList.length; i++) {\n    var coordSys = coordSysList[i];\n\n    if (coordSys[methodName] && (result = coordSys[methodName](ecModel, finder, value)) != null) {\n      return result;\n    }\n  }\n}\n/**\n * Is the specified coordinate systems or components contain the given pixel point.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {boolean} result\n */\n\n\nechartsProto.containPixel = function (finder, value) {\n  var ecModel = this._model;\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n  zrUtil.each(finder, function (models, key) {\n    key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n      var coordSys = model.coordinateSystem;\n\n      if (coordSys && coordSys.containPoint) {\n        result |= !!coordSys.containPoint(value);\n      } else if (key === 'seriesModels') {\n        var view = this._chartsMap[model.__viewId];\n\n        if (view && view.containPoint) {\n          result |= view.containPoint(value, model);\n        } else {}\n      } else {}\n    }, this);\n  }, this);\n  return !!result;\n};\n/**\n * Get visual from series or data.\n * @param {string|Object} finder\n *        If string, e.g., 'series', means {seriesIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            dataIndex / dataIndexInside\n *        }\n *        If dataIndex is not specified, series visual will be fetched,\n *        but not data item visual.\n *        If all of seriesIndex, seriesId, seriesName are not specified,\n *        visual will be fetched from first series.\n * @param {string} visualType 'color', 'symbol', 'symbolSize'\n */\n\n\nechartsProto.getVisual = function (finder, visualType) {\n  var ecModel = this._model;\n  finder = modelUtil.parseFinder(ecModel, finder, {\n    defaultMainType: 'series'\n  });\n  var seriesModel = finder.seriesModel;\n  var data = seriesModel.getData();\n  var dataIndexInside = finder.hasOwnProperty('dataIndexInside') ? finder.dataIndexInside : finder.hasOwnProperty('dataIndex') ? data.indexOfRawIndex(finder.dataIndex) : null;\n  return dataIndexInside != null ? data.getItemVisual(dataIndexInside, visualType) : data.getVisual(visualType);\n};\n/**\n * Get view of corresponding component model\n * @param  {module:echarts/model/Component} componentModel\n * @return {module:echarts/view/Component}\n */\n\n\nechartsProto.getViewOfComponentModel = function (componentModel) {\n  return this._componentsMap[componentModel.__viewId];\n};\n/**\n * Get view of corresponding series model\n * @param  {module:echarts/model/Series} seriesModel\n * @return {module:echarts/view/Chart}\n */\n\n\nechartsProto.getViewOfSeriesModel = function (seriesModel) {\n  return this._chartsMap[seriesModel.__viewId];\n};\n\nvar updateMethods = {\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  update: function (payload) {\n    // console.profile && console.profile('update');\n    var ecModel = this._model;\n    var api = this._api;\n    var coordSysMgr = this._coordSysMgr;\n    var zr = this._zr; // update before setOption\n\n    if (!ecModel) {\n      return;\n    } // Fixme First time update ?\n\n\n    ecModel.restoreData(); // TODO\n    // Save total ecModel here for undo/redo (after restoring data and before processing data).\n    // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n    // Create new coordinate system each update\n    // In LineView may save the old coordinate system and use it to get the orignal point\n\n    coordSysMgr.create(this._model, this._api);\n    processData.call(this, ecModel, api);\n    stackSeriesData.call(this, ecModel);\n    coordSysMgr.update(ecModel, api);\n    doVisualEncoding.call(this, ecModel, payload);\n    doRender.call(this, ecModel, payload); // Set background\n\n    var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n    var painter = zr.painter; // TODO all use clearColor ?\n\n    if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n      zr.configLayer(0, {\n        clearColor: backgroundColor\n      });\n    } else {\n      // In IE8\n      if (!env.canvasSupported) {\n        var colorArr = colorTool.parse(backgroundColor);\n        backgroundColor = colorTool.stringify(colorArr, 'rgb');\n\n        if (colorArr[3] === 0) {\n          backgroundColor = 'transparent';\n        }\n      }\n\n      if (backgroundColor.colorStops || backgroundColor.image) {\n        // Gradient background\n        // FIXME Fixed layer？\n        zr.configLayer(0, {\n          clearColor: backgroundColor\n        });\n        this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n        this._dom.style.background = 'transparent';\n      } else {\n        if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n          zr.configLayer(0, {\n            clearColor: null\n          });\n        }\n\n        this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n        this._dom.style.background = backgroundColor;\n      }\n    }\n\n    each(postUpdateFuncs, function (func) {\n      func(ecModel, api);\n    }); // console.profile && console.profileEnd('update');\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateView: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ecModel.eachSeries(function (seriesModel) {\n      seriesModel.getData().clearAllVisual();\n    });\n    doVisualEncoding.call(this, ecModel, payload);\n    invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateVisual: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ecModel.eachSeries(function (seriesModel) {\n      seriesModel.getData().clearAllVisual();\n    });\n    doVisualEncoding.call(this, ecModel, payload, true);\n    invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateLayout: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    doLayout.call(this, ecModel, payload);\n    invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  prepareAndUpdate: function (payload) {\n    var ecModel = this._model;\n    prepareView.call(this, 'component', ecModel);\n    prepareView.call(this, 'chart', ecModel);\n    updateMethods.update.call(this, payload);\n  }\n};\n/**\n * @private\n */\n\nfunction updateDirectly(ecIns, method, payload, mainType, subType) {\n  var ecModel = ecIns._model; // broadcast\n\n  if (!mainType) {\n    each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n    return;\n  }\n\n  var query = {};\n  query[mainType + 'Id'] = payload[mainType + 'Id'];\n  query[mainType + 'Index'] = payload[mainType + 'Index'];\n  query[mainType + 'Name'] = payload[mainType + 'Name'];\n  var condition = {\n    mainType: mainType,\n    query: query\n  };\n  subType && (condition.subType = subType); // subType may be '' by parseClassType;\n  // If dispatchAction before setOption, do nothing.\n\n  ecModel && ecModel.eachComponent(condition, function (model, index) {\n    callView(ecIns[mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId]);\n  }, ecIns);\n\n  function callView(view) {\n    view && view.__alive && view[method] && view[method](view.__model, ecModel, ecIns._api, payload);\n  }\n}\n/**\n * Resize the chart\n * @param {Object} opts\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n * @param {boolean} [opts.silent=false]\n */\n\n\nechartsProto.resize = function (opts) {\n  this[IN_MAIN_PROCESS] = true;\n\n  this._zr.resize(opts);\n\n  var optionChanged = this._model && this._model.resetOption('media');\n\n  var updateMethod = optionChanged ? 'prepareAndUpdate' : 'update';\n  updateMethods[updateMethod].call(this); // Resize loading effect\n\n  this._loadingFX && this._loadingFX.resize();\n  this[IN_MAIN_PROCESS] = false;\n  var silent = opts && opts.silent;\n  flushPendingActions.call(this, silent);\n  triggerUpdatedEvent.call(this, silent);\n};\n/**\n * Show loading effect\n * @param  {string} [name='default']\n * @param  {Object} [cfg]\n */\n\n\nechartsProto.showLoading = function (name, cfg) {\n  if (zrUtil.isObject(name)) {\n    cfg = name;\n    name = '';\n  }\n\n  name = name || 'default';\n  this.hideLoading();\n\n  if (!loadingEffects[name]) {\n    return;\n  }\n\n  var el = loadingEffects[name](this._api, cfg);\n  var zr = this._zr;\n  this._loadingFX = el;\n  zr.add(el);\n};\n/**\n * Hide loading effect\n */\n\n\nechartsProto.hideLoading = function () {\n  this._loadingFX && this._zr.remove(this._loadingFX);\n  this._loadingFX = null;\n};\n/**\n * @param {Object} eventObj\n * @return {Object}\n */\n\n\nechartsProto.makeActionFromEvent = function (eventObj) {\n  var payload = zrUtil.extend({}, eventObj);\n  payload.type = eventActionMap[eventObj.type];\n  return payload;\n};\n/**\n * @pubilc\n * @param {Object} payload\n * @param {string} [payload.type] Action type\n * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n * @param {boolean} [opt.silent=false] Whether trigger events.\n * @param {boolean} [opt.flush=undefined]\n *                  true: Flush immediately, and then pixel in canvas can be fetched\n *                      immediately. Caution: it might affect performance.\n *                  false: Not not flush.\n *                  undefined: Auto decide whether perform flush.\n */\n\n\nechartsProto.dispatchAction = function (payload, opt) {\n  if (!zrUtil.isObject(opt)) {\n    opt = {\n      silent: !!opt\n    };\n  }\n\n  if (!actions[payload.type]) {\n    return;\n  } // Avoid dispatch action before setOption. Especially in `connect`.\n\n\n  if (!this._model) {\n    return;\n  } // May dispatchAction in rendering procedure\n\n\n  if (this[IN_MAIN_PROCESS]) {\n    this._pendingActions.push(payload);\n\n    return;\n  }\n\n  doDispatchAction.call(this, payload, opt.silent);\n\n  if (opt.flush) {\n    this._zr.flush(true);\n  } else if (opt.flush !== false && env.browser.weChat) {\n    // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n    // hang when sliding page (on touch event), which cause that zr does not\n    // refresh util user interaction finished, which is not expected.\n    // But `dispatchAction` may be called too frequently when pan on touch\n    // screen, which impacts performance if do not throttle them.\n    this._throttledZrFlush();\n  }\n\n  flushPendingActions.call(this, opt.silent);\n  triggerUpdatedEvent.call(this, opt.silent);\n};\n\nfunction doDispatchAction(payload, silent) {\n  var payloadType = payload.type;\n  var escapeConnect = payload.escapeConnect;\n  var actionWrap = actions[payloadType];\n  var actionInfo = actionWrap.actionInfo;\n  var cptType = (actionInfo.update || 'update').split(':');\n  var updateMethod = cptType.pop();\n  cptType = cptType[0] != null && parseClassType(cptType[0]);\n  this[IN_MAIN_PROCESS] = true;\n  var payloads = [payload];\n  var batched = false; // Batch action\n\n  if (payload.batch) {\n    batched = true;\n    payloads = zrUtil.map(payload.batch, function (item) {\n      item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n      item.batch = null;\n      return item;\n    });\n  }\n\n  var eventObjBatch = [];\n  var eventObj;\n  var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n  each(payloads, function (batchItem) {\n    // Action can specify the event by return it.\n    eventObj = actionWrap.action(batchItem, this._model, this._api); // Emit event outside\n\n    eventObj = eventObj || zrUtil.extend({}, batchItem); // Convert type to eventType\n\n    eventObj.type = actionInfo.event || eventObj.type;\n    eventObjBatch.push(eventObj); // light update does not perform data process, layout and visual.\n\n    if (isHighDown) {\n      // method, payload, mainType, subType\n      updateDirectly(this, updateMethod, batchItem, 'series');\n    } else if (cptType) {\n      updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n    }\n  }, this);\n\n  if (updateMethod !== 'none' && !isHighDown && !cptType) {\n    // Still dirty\n    if (this[OPTION_UPDATED]) {\n      // FIXME Pass payload ?\n      updateMethods.prepareAndUpdate.call(this, payload);\n      this[OPTION_UPDATED] = false;\n    } else {\n      updateMethods[updateMethod].call(this, payload);\n    }\n  } // Follow the rule of action batch\n\n\n  if (batched) {\n    eventObj = {\n      type: actionInfo.event || payloadType,\n      escapeConnect: escapeConnect,\n      batch: eventObjBatch\n    };\n  } else {\n    eventObj = eventObjBatch[0];\n  }\n\n  this[IN_MAIN_PROCESS] = false;\n  !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n}\n\nfunction flushPendingActions(silent) {\n  var pendingActions = this._pendingActions;\n\n  while (pendingActions.length) {\n    var payload = pendingActions.shift();\n    doDispatchAction.call(this, payload, silent);\n  }\n}\n\nfunction triggerUpdatedEvent(silent) {\n  !silent && this.trigger('updated');\n}\n/**\n * Register event\n * @method\n */\n\n\nechartsProto.on = createRegisterEventWithLowercaseName('on');\nechartsProto.off = createRegisterEventWithLowercaseName('off');\nechartsProto.one = createRegisterEventWithLowercaseName('one');\n/**\n * @param {string} methodName\n * @private\n */\n\nfunction invokeUpdateMethod(methodName, ecModel, payload) {\n  var api = this._api; // Update all components\n\n  each(this._componentsViews, function (component) {\n    var componentModel = component.__model;\n    component[methodName](componentModel, ecModel, api, payload);\n    updateZ(componentModel, component);\n  }, this); // Upate all charts\n\n  ecModel.eachSeries(function (seriesModel, idx) {\n    var chart = this._chartsMap[seriesModel.__viewId];\n    chart[methodName](seriesModel, ecModel, api, payload);\n    updateZ(seriesModel, chart);\n    updateProgressiveAndBlend(seriesModel, chart);\n  }, this); // If use hover layer\n\n  updateHoverLayerStatus(this._zr, ecModel); // Post render\n\n  each(postUpdateFuncs, function (func) {\n    func(ecModel, api);\n  });\n}\n/**\n * Prepare view instances of charts and components\n * @param  {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction prepareView(type, ecModel) {\n  var isComponent = type === 'component';\n  var viewList = isComponent ? this._componentsViews : this._chartsViews;\n  var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n  var zr = this._zr;\n\n  for (var i = 0; i < viewList.length; i++) {\n    viewList[i].__alive = false;\n  }\n\n  ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n    if (isComponent) {\n      if (componentType === 'series') {\n        return;\n      }\n    } else {\n      model = componentType;\n    } // Consider: id same and type changed.\n\n\n    var viewId = '_ec_' + model.id + '_' + model.type;\n    var view = viewMap[viewId];\n\n    if (!view) {\n      var classType = parseClassType(model.type);\n      var Clazz = isComponent ? ComponentView.getClass(classType.main, classType.sub) : ChartView.getClass(classType.sub);\n\n      if (Clazz) {\n        view = new Clazz();\n        view.init(ecModel, this._api);\n        viewMap[viewId] = view;\n        viewList.push(view);\n        zr.add(view.group);\n      } else {\n        // Error\n        return;\n      }\n    }\n\n    model.__viewId = view.__id = viewId;\n    view.__alive = true;\n    view.__model = model;\n    view.group.__ecComponentInfo = {\n      mainType: model.mainType,\n      index: model.componentIndex\n    };\n  }, this);\n\n  for (var i = 0; i < viewList.length;) {\n    var view = viewList[i];\n\n    if (!view.__alive) {\n      zr.remove(view.group);\n      view.dispose(ecModel, this._api);\n      viewList.splice(i, 1);\n      delete viewMap[view.__id];\n      view.__id = view.group.__ecComponentInfo = null;\n    } else {\n      i++;\n    }\n  }\n}\n/**\n * Processor data in each series\n *\n * @param {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction processData(ecModel, api) {\n  each(dataProcessorFuncs, function (process) {\n    process.func(ecModel, api);\n  });\n}\n/**\n * @private\n */\n\n\nfunction stackSeriesData(ecModel) {\n  var stackedDataMap = {};\n  ecModel.eachSeries(function (series) {\n    var stack = series.get('stack');\n    var data = series.getData();\n\n    if (stack && data.type === 'list') {\n      var previousStack = stackedDataMap[stack]; // Avoid conflict with Object.prototype\n\n      if (stackedDataMap.hasOwnProperty(stack) && previousStack) {\n        data.stackedOn = previousStack;\n      }\n\n      stackedDataMap[stack] = data;\n    }\n  });\n}\n/**\n * Layout before each chart render there series, special visual encoding stage\n *\n * @param {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction doLayout(ecModel, payload) {\n  var api = this._api;\n  each(visualFuncs, function (visual) {\n    if (visual.isLayout) {\n      visual.func(ecModel, api, payload);\n    }\n  });\n}\n/**\n * Encode visual infomation from data after data processing\n *\n * @param {module:echarts/model/Global} ecModel\n * @param {object} layout\n * @param {boolean} [excludesLayout]\n * @private\n */\n\n\nfunction doVisualEncoding(ecModel, payload, excludesLayout) {\n  var api = this._api;\n  ecModel.clearColorPalette();\n  ecModel.eachSeries(function (seriesModel) {\n    seriesModel.clearColorPalette();\n  });\n  each(visualFuncs, function (visual) {\n    (!excludesLayout || !visual.isLayout) && visual.func(ecModel, api, payload);\n  });\n}\n/**\n * Render each chart and component\n * @private\n */\n\n\nfunction doRender(ecModel, payload) {\n  var api = this._api; // Render all components\n\n  each(this._componentsViews, function (componentView) {\n    var componentModel = componentView.__model;\n    componentView.render(componentModel, ecModel, api, payload);\n    updateZ(componentModel, componentView);\n  }, this);\n  each(this._chartsViews, function (chart) {\n    chart.__alive = false;\n  }, this); // Render all charts\n\n  ecModel.eachSeries(function (seriesModel, idx) {\n    var chartView = this._chartsMap[seriesModel.__viewId];\n    chartView.__alive = true;\n    chartView.render(seriesModel, ecModel, api, payload);\n    chartView.group.silent = !!seriesModel.get('silent');\n    updateZ(seriesModel, chartView);\n    updateProgressiveAndBlend(seriesModel, chartView);\n  }, this); // If use hover layer\n\n  updateHoverLayerStatus(this._zr, ecModel); // Remove groups of unrendered charts\n\n  each(this._chartsViews, function (chart) {\n    if (!chart.__alive) {\n      chart.remove(ecModel, api);\n    }\n  }, this);\n}\n\nvar MOUSE_EVENT_NAMES = ['click', 'dblclick', 'mouseover', 'mouseout', 'mousemove', 'mousedown', 'mouseup', 'globalout', 'contextmenu'];\n/**\n * @private\n */\n\nechartsProto._initEvents = function () {\n  each(MOUSE_EVENT_NAMES, function (eveName) {\n    this._zr.on(eveName, function (e) {\n      var ecModel = this.getModel();\n      var el = e.target;\n      var params; // no e.target when 'globalout'.\n\n      if (eveName === 'globalout') {\n        params = {};\n      } else if (el && el.dataIndex != null) {\n        var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n        params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n      } // If element has custom eventData of components\n      else if (el && el.eventData) {\n          params = zrUtil.extend({}, el.eventData);\n        }\n\n      if (params) {\n        params.event = e;\n        params.type = eveName;\n        this.trigger(eveName, params);\n      }\n    }, this);\n  }, this);\n  each(eventActionMap, function (actionType, eventType) {\n    this._messageCenter.on(eventType, function (event) {\n      this.trigger(eventType, event);\n    }, this);\n  }, this);\n};\n/**\n * @return {boolean}\n */\n\n\nechartsProto.isDisposed = function () {\n  return this._disposed;\n};\n/**\n * Clear\n */\n\n\nechartsProto.clear = function () {\n  this.setOption({\n    series: []\n  }, true);\n};\n/**\n * Dispose instance\n */\n\n\nechartsProto.dispose = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  this._disposed = true;\n  var api = this._api;\n  var ecModel = this._model;\n  each(this._componentsViews, function (component) {\n    component.dispose(ecModel, api);\n  });\n  each(this._chartsViews, function (chart) {\n    chart.dispose(ecModel, api);\n  }); // Dispose after all views disposed\n\n  this._zr.dispose();\n\n  delete instances[this.id];\n};\n\nzrUtil.mixin(ECharts, Eventful);\n\nfunction updateHoverLayerStatus(zr, ecModel) {\n  var storage = zr.storage;\n  var elCount = 0;\n  storage.traverse(function (el) {\n    if (!el.isGroup) {\n      elCount++;\n    }\n  });\n\n  if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n    storage.traverse(function (el) {\n      if (!el.isGroup) {\n        el.useHoverLayer = true;\n      }\n    });\n  }\n}\n/**\n * Update chart progressive and blend.\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateProgressiveAndBlend(seriesModel, chartView) {\n  // Progressive configuration\n  var elCount = 0;\n  chartView.group.traverse(function (el) {\n    if (el.type !== 'group' && !el.ignore) {\n      elCount++;\n    }\n  });\n  var frameDrawNum = +seriesModel.get('progressive');\n  var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n\n  if (needProgressive) {\n    chartView.group.traverse(function (el) {\n      // FIXME marker and other components\n      if (!el.isGroup) {\n        el.progressive = needProgressive ? Math.floor(elCount++ / frameDrawNum) : -1;\n\n        if (needProgressive) {\n          el.stopAnimation(true);\n        }\n      }\n    });\n  } // Blend configration\n\n\n  var blendMode = seriesModel.get('blendMode') || null;\n  chartView.group.traverse(function (el) {\n    // FIXME marker and other components\n    if (!el.isGroup) {\n      el.setStyle('blend', blendMode);\n    }\n  });\n}\n/**\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateZ(model, view) {\n  var z = model.get('z');\n  var zlevel = model.get('zlevel'); // Set z and zlevel\n\n  view.group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n    }\n  });\n}\n\nfunction createExtensionAPI(ecInstance) {\n  var coordSysMgr = ecInstance._coordSysMgr;\n  return zrUtil.extend(new ExtensionAPI(ecInstance), {\n    // Inject methods\n    getCoordinateSystems: zrUtil.bind(coordSysMgr.getCoordinateSystems, coordSysMgr),\n    getComponentByElement: function (el) {\n      while (el) {\n        var modelInfo = el.__ecComponentInfo;\n\n        if (modelInfo != null) {\n          return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n        }\n\n        el = el.parent;\n      }\n    }\n  });\n}\n/**\n * @type {Object} key: actionType.\n * @inner\n */\n\n\nvar actions = {};\n/**\n * Map eventType to actionType\n * @type {Object}\n */\n\nvar eventActionMap = {};\n/**\n * Data processor functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar dataProcessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar optionPreprocessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar postUpdateFuncs = [];\n/**\n * Visual encoding functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar visualFuncs = [];\n/**\n * Theme storage\n * @type {Object.<key, Object>}\n */\n\nvar themeStorage = {};\n/**\n * Loading effects\n */\n\nvar loadingEffects = {};\nvar instances = {};\nvar connectedGroups = {};\nvar idBase = new Date() - 0;\nvar groupIdBase = new Date() - 0;\nvar DOM_ATTRIBUTE_KEY = '_echarts_instance_';\nvar mapDataStores = {};\n\nfunction enableConnect(chart) {\n  var STATUS_PENDING = 0;\n  var STATUS_UPDATING = 1;\n  var STATUS_UPDATED = 2;\n  var STATUS_KEY = '__connectUpdateStatus';\n\n  function updateConnectedChartsStatus(charts, status) {\n    for (var i = 0; i < charts.length; i++) {\n      var otherChart = charts[i];\n      otherChart[STATUS_KEY] = status;\n    }\n  }\n\n  zrUtil.each(eventActionMap, function (actionType, eventType) {\n    chart._messageCenter.on(eventType, function (event) {\n      if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n        if (event && event.escapeConnect) {\n          return;\n        }\n\n        var action = chart.makeActionFromEvent(event);\n        var otherCharts = [];\n        zrUtil.each(instances, function (otherChart) {\n          if (otherChart !== chart && otherChart.group === chart.group) {\n            otherCharts.push(otherChart);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n        each(otherCharts, function (otherChart) {\n          if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n            otherChart.dispatchAction(action);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n      }\n    });\n  });\n}\n/**\n * @param {HTMLElement} dom\n * @param {Object} [theme]\n * @param {Object} opts\n * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n *                              Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n *                               Can be 'auto' (the same as null/undefined)\n */\n\n\nfunction init(dom, theme, opts) {\n  var existInstance = getInstanceByDom(dom);\n\n  if (existInstance) {\n    return existInstance;\n  }\n\n  var chart = new ECharts(dom, theme, opts);\n  chart.id = 'ec_' + idBase++;\n  instances[chart.id] = chart;\n\n  if (dom.setAttribute) {\n    dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n  } else {\n    dom[DOM_ATTRIBUTE_KEY] = chart.id;\n  }\n\n  enableConnect(chart);\n  return chart;\n}\n/**\n * @return {string|Array.<module:echarts~ECharts>} groupId\n */\n\n\nfunction connect(groupId) {\n  // Is array of charts\n  if (zrUtil.isArray(groupId)) {\n    var charts = groupId;\n    groupId = null; // If any chart has group\n\n    zrUtil.each(charts, function (chart) {\n      if (chart.group != null) {\n        groupId = chart.group;\n      }\n    });\n    groupId = groupId || 'g_' + groupIdBase++;\n    zrUtil.each(charts, function (chart) {\n      chart.group = groupId;\n    });\n  }\n\n  connectedGroups[groupId] = true;\n  return groupId;\n}\n/**\n * @DEPRECATED\n * @return {string} groupId\n */\n\n\nfunction disConnect(groupId) {\n  connectedGroups[groupId] = false;\n}\n/**\n * @return {string} groupId\n */\n\n\nvar disconnect = disConnect;\n/**\n * Dispose a chart instance\n * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n */\n\nfunction dispose(chart) {\n  if (typeof chart === 'string') {\n    chart = instances[chart];\n  } else if (!(chart instanceof ECharts)) {\n    // Try to treat as dom\n    chart = getInstanceByDom(chart);\n  }\n\n  if (chart instanceof ECharts && !chart.isDisposed()) {\n    chart.dispose();\n  }\n}\n/**\n * @param  {HTMLElement} dom\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceByDom(dom) {\n  var key;\n\n  if (dom.getAttribute) {\n    key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n  } else {\n    key = dom[DOM_ATTRIBUTE_KEY];\n  }\n\n  return instances[key];\n}\n/**\n * @param {string} key\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceById(key) {\n  return instances[key];\n}\n/**\n * Register theme\n */\n\n\nfunction registerTheme(name, theme) {\n  themeStorage[name] = theme;\n}\n/**\n * Register option preprocessor\n * @param {Function} preprocessorFunc\n */\n\n\nfunction registerPreprocessor(preprocessorFunc) {\n  optionPreprocessorFuncs.push(preprocessorFunc);\n}\n/**\n * @param {number} [priority=1000]\n * @param {Function} processorFunc\n */\n\n\nfunction registerProcessor(priority, processorFunc) {\n  if (typeof priority === 'function') {\n    processorFunc = priority;\n    priority = PRIORITY_PROCESSOR_FILTER;\n  }\n\n  dataProcessorFuncs.push({\n    prio: priority,\n    func: processorFunc\n  });\n}\n/**\n * Register postUpdater\n * @param {Function} postUpdateFunc\n */\n\n\nfunction registerPostUpdate(postUpdateFunc) {\n  postUpdateFuncs.push(postUpdateFunc);\n}\n/**\n * Usage:\n * registerAction('someAction', 'someEvent', function () { ... });\n * registerAction('someAction', function () { ... });\n * registerAction(\n *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n *     function () { ... }\n * );\n *\n * @param {(string|Object)} actionInfo\n * @param {string} actionInfo.type\n * @param {string} [actionInfo.event]\n * @param {string} [actionInfo.update]\n * @param {string} [eventName]\n * @param {Function} action\n */\n\n\nfunction registerAction(actionInfo, eventName, action) {\n  if (typeof eventName === 'function') {\n    action = eventName;\n    eventName = '';\n  }\n\n  var actionType = zrUtil.isObject(actionInfo) ? actionInfo.type : [actionInfo, actionInfo = {\n    event: eventName\n  }][0]; // Event name is all lowercase\n\n  actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n  eventName = actionInfo.event; // Validate action type and event name.\n\n  zrUtil.assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n  if (!actions[actionType]) {\n    actions[actionType] = {\n      action: action,\n      actionInfo: actionInfo\n    };\n  }\n\n  eventActionMap[eventName] = actionType;\n}\n/**\n * @param {string} type\n * @param {*} CoordinateSystem\n */\n\n\nfunction registerCoordinateSystem(type, CoordinateSystem) {\n  CoordinateSystemManager.register(type, CoordinateSystem);\n}\n/**\n * Get dimensions of specified coordinate system.\n * @param {string} type\n * @return {Array.<string|Object>}\n */\n\n\nfunction getCoordinateSystemDimensions(type) {\n  var coordSysCreator = CoordinateSystemManager.get(type);\n\n  if (coordSysCreator) {\n    return coordSysCreator.getDimensionsInfo ? coordSysCreator.getDimensionsInfo() : coordSysCreator.dimensions.slice();\n  }\n}\n/**\n * Layout is a special stage of visual encoding\n * Most visual encoding like color are common for different chart\n * But each chart has it's own layout algorithm\n *\n * @param {number} [priority=1000]\n * @param {Function} layoutFunc\n */\n\n\nfunction registerLayout(priority, layoutFunc) {\n  if (typeof priority === 'function') {\n    layoutFunc = priority;\n    priority = PRIORITY_VISUAL_LAYOUT;\n  }\n\n  visualFuncs.push({\n    prio: priority,\n    func: layoutFunc,\n    isLayout: true\n  });\n}\n/**\n * @param {number} [priority=3000]\n * @param {Function} visualFunc\n */\n\n\nfunction registerVisual(priority, visualFunc) {\n  if (typeof priority === 'function') {\n    visualFunc = priority;\n    priority = PRIORITY_VISUAL_CHART;\n  }\n\n  visualFuncs.push({\n    prio: priority,\n    func: visualFunc\n  });\n}\n/**\n * @param {string} name\n */\n\n\nfunction registerLoading(name, loadingFx) {\n  loadingEffects[name] = loadingFx;\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentModel(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentModel;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentView(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentView;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentView.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendSeriesModel(opts\n/*, superClass*/\n) {\n  // var Clazz = SeriesModel;\n  // if (superClass) {\n  //     superClass = 'series.' + superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return SeriesModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendChartView(opts\n/*, superClass*/\n) {\n  // var Clazz = ChartView;\n  // if (superClass) {\n  //     superClass = superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ChartView.getClass(classType.main, true);\n  // }\n  return ChartView.extend(opts);\n}\n/**\n * ZRender need a canvas context to do measureText.\n * But in node environment canvas may be created by node-canvas.\n * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n *\n * Be careful of using it in the browser.\n *\n * @param {Function} creator\n * @example\n *     var Canvas = require('canvas');\n *     var echarts = require('echarts');\n *     echarts.setCanvasCreator(function () {\n *         // Small size is enough.\n *         return new Canvas(32, 32);\n *     });\n */\n\n\nfunction setCanvasCreator(creator) {\n  zrUtil.$override('createCanvas', creator);\n}\n/**\n * @param {string} mapName\n * @param {Object|string} geoJson\n * @param {Object} [specialAreas]\n *\n * @example\n *     $.get('USA.json', function (geoJson) {\n *         echarts.registerMap('USA', geoJson);\n *         // Or\n *         echarts.registerMap('USA', {\n *             geoJson: geoJson,\n *             specialAreas: {}\n *         })\n *     });\n */\n\n\nfunction registerMap(mapName, geoJson, specialAreas) {\n  if (geoJson.geoJson && !geoJson.features) {\n    specialAreas = geoJson.specialAreas;\n    geoJson = geoJson.geoJson;\n  }\n\n  if (typeof geoJson === 'string') {\n    geoJson = typeof JSON !== 'undefined' && JSON.parse ? JSON.parse(geoJson) : new Function('return (' + geoJson + ');')();\n  }\n\n  mapDataStores[mapName] = {\n    geoJson: geoJson,\n    specialAreas: specialAreas\n  };\n}\n/**\n * @param {string} mapName\n * @return {Object}\n */\n\n\nfunction getMap(mapName) {\n  return mapDataStores[mapName];\n}\n\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesColor);\nregisterPreprocessor(backwardCompat);\nregisterLoading('default', loadingDefault); // Default actions\n\nregisterAction({\n  type: 'highlight',\n  event: 'highlight',\n  update: 'highlight'\n}, zrUtil.noop);\nregisterAction({\n  type: 'downplay',\n  event: 'downplay',\n  update: 'downplay'\n}, zrUtil.noop); // For backward compatibility, where the namespace `dataTool` will\n// be mounted on `echarts` is the extension `dataTool` is imported.\n\nvar dataTool = {};\nexports.version = version;\nexports.dependencies = dependencies;\nexports.PRIORITY = PRIORITY;\nexports.init = init;\nexports.connect = connect;\nexports.disConnect = disConnect;\nexports.disconnect = disconnect;\nexports.dispose = dispose;\nexports.getInstanceByDom = getInstanceByDom;\nexports.getInstanceById = getInstanceById;\nexports.registerTheme = registerTheme;\nexports.registerPreprocessor = registerPreprocessor;\nexports.registerProcessor = registerProcessor;\nexports.registerPostUpdate = registerPostUpdate;\nexports.registerAction = registerAction;\nexports.registerCoordinateSystem = registerCoordinateSystem;\nexports.getCoordinateSystemDimensions = getCoordinateSystemDimensions;\nexports.registerLayout = registerLayout;\nexports.registerVisual = registerVisual;\nexports.registerLoading = registerLoading;\nexports.extendComponentModel = extendComponentModel;\nexports.extendComponentView = extendComponentView;\nexports.extendSeriesModel = extendSeriesModel;\nexports.extendChartView = extendChartView;\nexports.setCanvasCreator = setCanvasCreator;\nexports.registerMap = registerMap;\nexports.getMap = getMap;\nexports.dataTool = dataTool;\nvar ___ec_export = require(\"./export\");\n(function () {\n    for (var key in ___ec_export) {\n        if (___ec_export.hasOwnProperty(key)) {\n            exports[key] = ___ec_export[key];\n        }\n    }\n})();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/echarts.js\n// module id = 979\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar pathTool = require(\"zrender/lib/tool/path\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\nvar Transformable = require(\"zrender/lib/mixin/Transformable\");\n\nvar Image = require(\"zrender/lib/graphic/Image\");\n\nexports.Image = Image;\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nexports.Group = Group;\n\nvar Text = require(\"zrender/lib/graphic/Text\");\n\nexports.Text = Text;\n\nvar Circle = require(\"zrender/lib/graphic/shape/Circle\");\n\nexports.Circle = Circle;\n\nvar Sector = require(\"zrender/lib/graphic/shape/Sector\");\n\nexports.Sector = Sector;\n\nvar Ring = require(\"zrender/lib/graphic/shape/Ring\");\n\nexports.Ring = Ring;\n\nvar Polygon = require(\"zrender/lib/graphic/shape/Polygon\");\n\nexports.Polygon = Polygon;\n\nvar Polyline = require(\"zrender/lib/graphic/shape/Polyline\");\n\nexports.Polyline = Polyline;\n\nvar Rect = require(\"zrender/lib/graphic/shape/Rect\");\n\nexports.Rect = Rect;\n\nvar Line = require(\"zrender/lib/graphic/shape/Line\");\n\nexports.Line = Line;\n\nvar BezierCurve = require(\"zrender/lib/graphic/shape/BezierCurve\");\n\nexports.BezierCurve = BezierCurve;\n\nvar Arc = require(\"zrender/lib/graphic/shape/Arc\");\n\nexports.Arc = Arc;\n\nvar CompoundPath = require(\"zrender/lib/graphic/CompoundPath\");\n\nexports.CompoundPath = CompoundPath;\n\nvar LinearGradient = require(\"zrender/lib/graphic/LinearGradient\");\n\nexports.LinearGradient = LinearGradient;\n\nvar RadialGradient = require(\"zrender/lib/graphic/RadialGradient\");\n\nexports.RadialGradient = RadialGradient;\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nexports.BoundingRect = BoundingRect;\nvar round = Math.round;\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar EMPTY_OBJ = {};\n/**\n * Extend shape with parameters\n */\n\nfunction extendShape(opts) {\n  return Path.extend(opts);\n}\n/**\n * Extend path\n */\n\n\nfunction extendPath(pathData, opts) {\n  return pathTool.extendFromString(pathData, opts);\n}\n/**\n * Create a path element from path data string\n * @param {string} pathData\n * @param {Object} opts\n * @param {module:zrender/core/BoundingRect} rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makePath(pathData, opts, rect, layout) {\n  var path = pathTool.createFromString(pathData, opts);\n  var boundingRect = path.getBoundingRect();\n\n  if (rect) {\n    if (layout === 'center') {\n      rect = centerGraphic(rect, boundingRect);\n    }\n\n    resizePath(path, rect);\n  }\n\n  return path;\n}\n/**\n * Create a image element from image url\n * @param {string} imageUrl image url\n * @param {Object} opts options\n * @param {module:zrender/core/BoundingRect} rect constrain rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makeImage(imageUrl, rect, layout) {\n  var path = new Image({\n    style: {\n      image: imageUrl,\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    onload: function (img) {\n      if (layout === 'center') {\n        var boundingRect = {\n          width: img.width,\n          height: img.height\n        };\n        path.setStyle(centerGraphic(rect, boundingRect));\n      }\n    }\n  });\n  return path;\n}\n/**\n * Get position of centered element in bounding box.\n *\n * @param  {Object} rect         element local bounding box\n * @param  {Object} boundingRect constraint bounding box\n * @return {Object} element position containing x, y, width, and height\n */\n\n\nfunction centerGraphic(rect, boundingRect) {\n  // Set rect to center, keep width / height ratio.\n  var aspect = boundingRect.width / boundingRect.height;\n  var width = rect.height * aspect;\n  var height;\n\n  if (width <= rect.width) {\n    height = rect.height;\n  } else {\n    width = rect.width;\n    height = width / aspect;\n  }\n\n  var cx = rect.x + rect.width / 2;\n  var cy = rect.y + rect.height / 2;\n  return {\n    x: cx - width / 2,\n    y: cy - height / 2,\n    width: width,\n    height: height\n  };\n}\n\nvar mergePath = pathTool.mergePath;\n/**\n * Resize a path to fit the rect\n * @param {module:zrender/graphic/Path} path\n * @param {Object} rect\n */\n\nfunction resizePath(path, rect) {\n  if (!path.applyTransform) {\n    return;\n  }\n\n  var pathRect = path.getBoundingRect();\n  var m = pathRect.calculateTransform(rect);\n  path.applyTransform(m);\n}\n/**\n * Sub pixel optimize line for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x1]\n * @param {number} [param.shape.y1]\n * @param {number} [param.shape.x2]\n * @param {number} [param.shape.y2]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeLine(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n\n  if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n    shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n  }\n\n  if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n    shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n  }\n\n  return param;\n}\n/**\n * Sub pixel optimize rect for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x]\n * @param {number} [param.shape.y]\n * @param {number} [param.shape.width]\n * @param {number} [param.shape.height]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeRect(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n  var originX = shape.x;\n  var originY = shape.y;\n  var originWidth = shape.width;\n  var originHeight = shape.height;\n  shape.x = subPixelOptimize(shape.x, lineWidth, true);\n  shape.y = subPixelOptimize(shape.y, lineWidth, true);\n  shape.width = Math.max(subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x, originWidth === 0 ? 0 : 1);\n  shape.height = Math.max(subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y, originHeight === 0 ? 0 : 1);\n  return param;\n}\n/**\n * Sub pixel optimize for canvas\n *\n * @param {number} position Coordinate, such as x, y\n * @param {number} lineWidth Should be nonnegative integer.\n * @param {boolean=} positiveOrNegative Default false (negative).\n * @return {number} Optimized position.\n */\n\n\nfunction subPixelOptimize(position, lineWidth, positiveOrNegative) {\n  // Assure that (position + lineWidth / 2) is near integer edge,\n  // otherwise line will be fuzzy in canvas.\n  var doubledPosition = round(position * 2);\n  return (doubledPosition + round(lineWidth)) % 2 === 0 ? doubledPosition / 2 : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n}\n\nfunction hasFillOrStroke(fillOrStroke) {\n  return fillOrStroke != null && fillOrStroke != 'none';\n}\n\nfunction liftColor(color) {\n  return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n}\n/**\n * @private\n */\n\n\nfunction cacheElementStl(el) {\n  if (el.__hoverStlDirty) {\n    var stroke = el.style.stroke;\n    var fill = el.style.fill; // Create hoverStyle on mouseover\n\n    var hoverStyle = el.__hoverStl;\n    hoverStyle.fill = hoverStyle.fill || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n    hoverStyle.stroke = hoverStyle.stroke || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n    var normalStyle = {};\n\n    for (var name in hoverStyle) {\n      // See comment in `doSingleEnterHover`.\n      if (hoverStyle[name] != null) {\n        normalStyle[name] = el.style[name];\n      }\n    }\n\n    el.__normalStl = normalStyle;\n    el.__hoverStlDirty = false;\n  }\n}\n/**\n * @private\n */\n\n\nfunction doSingleEnterHover(el) {\n  if (el.__isHover) {\n    return;\n  }\n\n  cacheElementStl(el);\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.addHover(el, el.__hoverStl);\n  } else {\n    var style = el.style;\n    var insideRollbackOpt = style.insideRollbackOpt; // Consider case: only `position: 'top'` is set on emphasis, then text\n    // color should be returned to `autoColor`, rather than remain '#fff'.\n    // So we should rollback then apply again after style merging.\n\n    insideRollbackOpt && rollbackInsideStyle(style); // styles can be:\n    // {\n    //     label: {\n    //         normal: {\n    //             show: false,\n    //             position: 'outside',\n    //             fontSize: 18\n    //         },\n    //         emphasis: {\n    //             show: true\n    //         }\n    //     }\n    // },\n    // where properties of `emphasis` may not appear in `normal`. We previously use\n    // module:echarts/util/model#defaultEmphasis to merge `normal` to `emphasis`.\n    // But consider rich text and setOption in merge mode, it is impossible to cover\n    // all properties in merge. So we use merge mode when setting style here, where\n    // only properties that is not `null/undefined` can be set. The disadventage:\n    // null/undefined can not be used to remove style any more in `emphasis`.\n\n    style.extendFrom(el.__hoverStl); // Do not save `insideRollback`.\n\n    if (insideRollbackOpt) {\n      applyInsideStyle(style, style.insideOriginalTextPosition, insideRollbackOpt); // textFill may be rollbacked to null.\n\n      if (style.textFill == null) {\n        style.textFill = insideRollbackOpt.autoColor;\n      }\n    }\n\n    el.dirty(false);\n    el.z2 += 1;\n  }\n\n  el.__isHover = true;\n}\n/**\n * @inner\n */\n\n\nfunction doSingleLeaveHover(el) {\n  if (!el.__isHover) {\n    return;\n  }\n\n  var normalStl = el.__normalStl;\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.removeHover(el);\n  } else {\n    // Consider null/undefined value, should use\n    // `setStyle` but not `extendFrom(stl, true)`.\n    normalStl && el.setStyle(normalStl);\n    el.z2 -= 1;\n  }\n\n  el.__isHover = false;\n}\n/**\n * @inner\n */\n\n\nfunction doEnterHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleEnterHover(child);\n    }\n  }) : doSingleEnterHover(el);\n}\n\nfunction doLeaveHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleLeaveHover(child);\n    }\n  }) : doSingleLeaveHover(el);\n}\n/**\n * @inner\n */\n\n\nfunction setElementHoverStl(el, hoverStl) {\n  // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n  // Often used when item group has a label element and it's hoverStyle is different\n  el.__hoverStl = el.hoverStyle || hoverStl || {};\n  el.__hoverStlDirty = true;\n\n  if (el.__isHover) {\n    cacheElementStl(el);\n  }\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOver(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOut(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doLeaveHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction enterEmphasis() {\n  this.__isEmphasis = true;\n  doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction leaveEmphasis() {\n  this.__isEmphasis = false;\n  doLeaveHover(this);\n}\n/**\n * Set hover style of element.\n * This method can be called repeatly without side-effects.\n * @param {module:zrender/Element} el\n * @param {Object} [hoverStyle]\n * @param {Object} [opt]\n * @param {boolean} [opt.hoverSilentOnTouch=false]\n *        In touch device, mouseover event will be trigger on touchstart event\n *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n *        conviniently use hoverStyle when tap on touch screen without additional\n *        code for compatibility.\n *        But if the chart/component has select feature, which usually also use\n *        hoverStyle, there might be conflict between 'select-highlight' and\n *        'hover-highlight' especially when roam is enabled (see geo for example).\n *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n *        on touch device.\n */\n\n\nfunction setHoverStyle(el, hoverStyle, opt) {\n  el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      setElementHoverStl(child, hoverStyle);\n    }\n  }) : setElementHoverStl(el, hoverStyle); // Duplicated function will be auto-ignored, see Eventful.js.\n\n  el.on('mouseover', onElementMouseOver).on('mouseout', onElementMouseOut); // Emphasis, normal can be triggered manually\n\n  el.on('emphasis', enterEmphasis).on('normal', leaveEmphasis);\n}\n/**\n * @param {Object|module:zrender/graphic/Style} normalStyle\n * @param {Object} emphasisStyle\n * @param {module:echarts/model/Model} normalModel\n * @param {module:echarts/model/Model} emphasisModel\n * @param {Object} opt Check `opt` of `setTextStyleCommon` to find other props.\n * @param {Object} [opt.defaultText]\n * @param {module:echarts/model/Model} [opt.labelFetcher] Fetch text by\n *      `opt.labelFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDataIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDimIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {Object} [normalSpecified]\n * @param {Object} [emphasisSpecified]\n */\n\n\nfunction setLabelStyle(normalStyle, emphasisStyle, normalModel, emphasisModel, opt, normalSpecified, emphasisSpecified) {\n  opt = opt || EMPTY_OBJ;\n  var labelFetcher = opt.labelFetcher;\n  var labelDataIndex = opt.labelDataIndex;\n  var labelDimIndex = opt.labelDimIndex; // This scenario, `label.normal.show = true; label.emphasis.show = false`,\n  // is not supported util someone requests.\n\n  var showNormal = normalModel.getShallow('show');\n  var showEmphasis = emphasisModel.getShallow('show'); // Consider performance, only fetch label when necessary.\n  // If `normal.show` is `false` and `emphasis.show` is `true` and `emphasis.formatter` is not set,\n  // label should be displayed, where text is fetched by `normal.formatter` or `opt.defaultText`.\n\n  var baseText = showNormal || showEmphasis ? zrUtil.retrieve2(labelFetcher ? labelFetcher.getFormattedLabel(labelDataIndex, 'normal', null, labelDimIndex) : null, opt.defaultText) : null;\n  var normalStyleText = showNormal ? baseText : null;\n  var emphasisStyleText = showEmphasis ? zrUtil.retrieve2(labelFetcher ? labelFetcher.getFormattedLabel(labelDataIndex, 'emphasis', null, labelDimIndex) : null, baseText) : null; // Optimize: If style.text is null, text will not be drawn.\n\n  if (normalStyleText != null || emphasisStyleText != null) {\n    // Always set `textStyle` even if `normalStyle.text` is null, because default\n    // values have to be set on `normalStyle`.\n    // If we set default values on `emphasisStyle`, consider case:\n    // Firstly, `setOption(... label: {normal: {text: null}, emphasis: {show: true}} ...);`\n    // Secondly, `setOption(... label: {noraml: {show: true, text: 'abc', color: 'red'} ...);`\n    // Then the 'red' will not work on emphasis.\n    setTextStyle(normalStyle, normalModel, normalSpecified, opt);\n    setTextStyle(emphasisStyle, emphasisModel, emphasisSpecified, opt, true);\n  }\n\n  normalStyle.text = normalStyleText;\n  emphasisStyle.text = emphasisStyleText;\n}\n/**\n * Set basic textStyle properties.\n * @param {Object|module:zrender/graphic/Style} textStyle\n * @param {module:echarts/model/Model} model\n * @param {Object} [specifiedTextStyle] Can be overrided by settings in model.\n * @param {Object} [opt] See `opt` of `setTextStyleCommon`.\n * @param {boolean} [isEmphasis]\n */\n\n\nfunction setTextStyle(textStyle, textStyleModel, specifiedTextStyle, opt, isEmphasis) {\n  setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis);\n  specifiedTextStyle && zrUtil.extend(textStyle, specifiedTextStyle);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n  return textStyle;\n}\n/**\n * Set text option in the style.\n * @deprecated\n * @param {Object} textStyle\n * @param {module:echarts/model/Model} labelModel\n * @param {string|boolean} defaultColor Default text color.\n *        If set as false, it will be processed as a emphasis style.\n */\n\n\nfunction setText(textStyle, labelModel, defaultColor) {\n  var opt = {\n    isRectText: true\n  };\n  var isEmphasis;\n\n  if (defaultColor === false) {\n    isEmphasis = true;\n  } else {\n    // Support setting color as 'auto' to get visual color.\n    opt.autoColor = defaultColor;\n  }\n\n  setTextStyleCommon(textStyle, labelModel, opt, isEmphasis);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n}\n/**\n * {\n *      disableBox: boolean, Whether diable drawing box of block (outer most).\n *      isRectText: boolean,\n *      autoColor: string, specify a color when color is 'auto',\n *              for textFill, textStroke, textBackgroundColor, and textBorderColor.\n *              If autoColor specified, it is used as default textFill.\n *      useInsideStyle:\n *              `true`: Use inside style (textFill, textStroke, textStrokeWidth)\n *                  if `textFill` is not specified.\n *              `false`: Do not use inside style.\n *              `null/undefined`: use inside style if `isRectText` is true and\n *                  `textFill` is not specified and textPosition contains `'inside'`.\n *      forceRich: boolean\n * }\n */\n\n\nfunction setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis) {\n  // Consider there will be abnormal when merge hover style to normal style if given default value.\n  opt = opt || EMPTY_OBJ;\n\n  if (opt.isRectText) {\n    var textPosition = textStyleModel.getShallow('position') || (isEmphasis ? null : 'inside'); // 'outside' is not a valid zr textPostion value, but used\n    // in bar series, and magric type should be considered.\n\n    textPosition === 'outside' && (textPosition = 'top');\n    textStyle.textPosition = textPosition;\n    textStyle.textOffset = textStyleModel.getShallow('offset');\n    var labelRotate = textStyleModel.getShallow('rotate');\n    labelRotate != null && (labelRotate *= Math.PI / 180);\n    textStyle.textRotation = labelRotate;\n    textStyle.textDistance = zrUtil.retrieve2(textStyleModel.getShallow('distance'), isEmphasis ? null : 5);\n  }\n\n  var ecModel = textStyleModel.ecModel;\n  var globalTextStyle = ecModel && ecModel.option.textStyle; // Consider case:\n  // {\n  //     data: [{\n  //         value: 12,\n  //         label: {\n  //             normal: {\n  //                 rich: {\n  //                     // no 'a' here but using parent 'a'.\n  //                 }\n  //             }\n  //         }\n  //     }],\n  //     rich: {\n  //         a: { ... }\n  //     }\n  // }\n\n  var richItemNames = getRichItemNames(textStyleModel);\n  var richResult;\n\n  if (richItemNames) {\n    richResult = {};\n\n    for (var name in richItemNames) {\n      if (richItemNames.hasOwnProperty(name)) {\n        // Cascade is supported in rich.\n        var richTextStyle = textStyleModel.getModel(['rich', name]); // In rich, never `disableBox`.\n\n        setTokenTextStyle(richResult[name] = {}, richTextStyle, globalTextStyle, opt, isEmphasis);\n      }\n    }\n  }\n\n  textStyle.rich = richResult;\n  setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, true);\n\n  if (opt.forceRich && !opt.textStyle) {\n    opt.textStyle = {};\n  }\n\n  return textStyle;\n} // Consider case:\n// {\n//     data: [{\n//         value: 12,\n//         label: {\n//             normal: {\n//                 rich: {\n//                     // no 'a' here but using parent 'a'.\n//                 }\n//             }\n//         }\n//     }],\n//     rich: {\n//         a: { ... }\n//     }\n// }\n\n\nfunction getRichItemNames(textStyleModel) {\n  // Use object to remove duplicated names.\n  var richItemNameMap;\n\n  while (textStyleModel && textStyleModel !== textStyleModel.ecModel) {\n    var rich = (textStyleModel.option || EMPTY_OBJ).rich;\n\n    if (rich) {\n      richItemNameMap = richItemNameMap || {};\n\n      for (var name in rich) {\n        if (rich.hasOwnProperty(name)) {\n          richItemNameMap[name] = 1;\n        }\n      }\n    }\n\n    textStyleModel = textStyleModel.parentModel;\n  }\n\n  return richItemNameMap;\n}\n\nfunction setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, isBlock) {\n  // In merge mode, default value should not be given.\n  globalTextStyle = !isEmphasis && globalTextStyle || EMPTY_OBJ;\n  textStyle.textFill = getAutoColor(textStyleModel.getShallow('color'), opt) || globalTextStyle.color;\n  textStyle.textStroke = getAutoColor(textStyleModel.getShallow('textBorderColor'), opt) || globalTextStyle.textBorderColor;\n  textStyle.textStrokeWidth = zrUtil.retrieve2(textStyleModel.getShallow('textBorderWidth'), globalTextStyle.textBorderWidth);\n\n  if (!isEmphasis) {\n    if (isBlock) {\n      // Always set `insideRollback`, for clearing previous.\n      var originalTextPosition = textStyle.textPosition;\n      textStyle.insideRollback = applyInsideStyle(textStyle, originalTextPosition, opt); // Save original textPosition, because style.textPosition will be repalced by\n      // real location (like [10, 30]) in zrender.\n\n      textStyle.insideOriginalTextPosition = originalTextPosition;\n      textStyle.insideRollbackOpt = opt;\n    } // Set default finally.\n\n\n    if (textStyle.textFill == null) {\n      textStyle.textFill = opt.autoColor;\n    }\n  } // Do not use `getFont` here, because merge should be supported, where\n  // part of these properties may be changed in emphasis style, and the\n  // others should remain their original value got from normal style.\n\n\n  textStyle.fontStyle = textStyleModel.getShallow('fontStyle') || globalTextStyle.fontStyle;\n  textStyle.fontWeight = textStyleModel.getShallow('fontWeight') || globalTextStyle.fontWeight;\n  textStyle.fontSize = textStyleModel.getShallow('fontSize') || globalTextStyle.fontSize;\n  textStyle.fontFamily = textStyleModel.getShallow('fontFamily') || globalTextStyle.fontFamily;\n  textStyle.textAlign = textStyleModel.getShallow('align');\n  textStyle.textVerticalAlign = textStyleModel.getShallow('verticalAlign') || textStyleModel.getShallow('baseline');\n  textStyle.textLineHeight = textStyleModel.getShallow('lineHeight');\n  textStyle.textWidth = textStyleModel.getShallow('width');\n  textStyle.textHeight = textStyleModel.getShallow('height');\n  textStyle.textTag = textStyleModel.getShallow('tag');\n\n  if (!isBlock || !opt.disableBox) {\n    textStyle.textBackgroundColor = getAutoColor(textStyleModel.getShallow('backgroundColor'), opt);\n    textStyle.textPadding = textStyleModel.getShallow('padding');\n    textStyle.textBorderColor = getAutoColor(textStyleModel.getShallow('borderColor'), opt);\n    textStyle.textBorderWidth = textStyleModel.getShallow('borderWidth');\n    textStyle.textBorderRadius = textStyleModel.getShallow('borderRadius');\n    textStyle.textBoxShadowColor = textStyleModel.getShallow('shadowColor');\n    textStyle.textBoxShadowBlur = textStyleModel.getShallow('shadowBlur');\n    textStyle.textBoxShadowOffsetX = textStyleModel.getShallow('shadowOffsetX');\n    textStyle.textBoxShadowOffsetY = textStyleModel.getShallow('shadowOffsetY');\n  }\n\n  textStyle.textShadowColor = textStyleModel.getShallow('textShadowColor') || globalTextStyle.textShadowColor;\n  textStyle.textShadowBlur = textStyleModel.getShallow('textShadowBlur') || globalTextStyle.textShadowBlur;\n  textStyle.textShadowOffsetX = textStyleModel.getShallow('textShadowOffsetX') || globalTextStyle.textShadowOffsetX;\n  textStyle.textShadowOffsetY = textStyleModel.getShallow('textShadowOffsetY') || globalTextStyle.textShadowOffsetY;\n}\n\nfunction getAutoColor(color, opt) {\n  return color !== 'auto' ? color : opt && opt.autoColor ? opt.autoColor : null;\n}\n\nfunction applyInsideStyle(textStyle, textPosition, opt) {\n  var useInsideStyle = opt.useInsideStyle;\n  var insideRollback;\n\n  if (textStyle.textFill == null && useInsideStyle !== false && (useInsideStyle === true || opt.isRectText && textPosition // textPosition can be [10, 30]\n  && typeof textPosition === 'string' && textPosition.indexOf('inside') >= 0)) {\n    insideRollback = {\n      textFill: null,\n      textStroke: textStyle.textStroke,\n      textStrokeWidth: textStyle.textStrokeWidth\n    };\n    textStyle.textFill = '#fff'; // Consider text with #fff overflow its container.\n\n    if (textStyle.textStroke == null) {\n      textStyle.textStroke = opt.autoColor;\n      textStyle.textStrokeWidth == null && (textStyle.textStrokeWidth = 2);\n    }\n  }\n\n  return insideRollback;\n}\n\nfunction rollbackInsideStyle(style) {\n  var insideRollback = style.insideRollback;\n\n  if (insideRollback) {\n    style.textFill = insideRollback.textFill;\n    style.textStroke = insideRollback.textStroke;\n    style.textStrokeWidth = insideRollback.textStrokeWidth;\n  }\n}\n\nfunction getFont(opt, ecModel) {\n  // ecModel or default text style model.\n  var gTextStyleModel = ecModel || ecModel.getModel('textStyle');\n  return [// FIXME in node-canvas fontWeight is before fontStyle\n  opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '', opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '', (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px', opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'].join(' ');\n}\n\nfunction animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n  if (typeof dataIndex === 'function') {\n    cb = dataIndex;\n    dataIndex = null;\n  } // Do not check 'animation' property directly here. Consider this case:\n  // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n  // but its parent model (`seriesModel`) does.\n\n\n  var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n  if (animationEnabled) {\n    var postfix = isUpdate ? 'Update' : '';\n    var duration = animatableModel.getShallow('animationDuration' + postfix);\n    var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n    var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n\n    if (typeof animationDelay === 'function') {\n      animationDelay = animationDelay(dataIndex, animatableModel.getAnimationDelayParams ? animatableModel.getAnimationDelayParams(el, dataIndex) : null);\n    }\n\n    if (typeof duration === 'function') {\n      duration = duration(dataIndex);\n    }\n\n    duration > 0 ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb, !!cb) : (el.stopAnimation(), el.attr(props), cb && cb());\n  } else {\n    el.stopAnimation();\n    el.attr(props);\n    cb && cb();\n  }\n}\n/**\n * Update graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} [cb]\n * @example\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n *     // Or\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, function () { console.log('Animation done!'); });\n */\n\n\nfunction updateProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Init graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} cb\n */\n\n\nfunction initProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Get transform matrix of target (param target),\n * in coordinate of its ancestor (param ancestor)\n *\n * @param {module:zrender/mixin/Transformable} target\n * @param {module:zrender/mixin/Transformable} [ancestor]\n */\n\n\nfunction getTransform(target, ancestor) {\n  var mat = matrix.identity([]);\n\n  while (target && target !== ancestor) {\n    matrix.mul(mat, target.getLocalTransform(), mat);\n    target = target.parent;\n  }\n\n  return mat;\n}\n/**\n * Apply transform to an vertex.\n * @param {Array.<number>} target [x, y]\n * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\n *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n * @param {boolean=} invert Whether use invert matrix.\n * @return {Array.<number>} [x, y]\n */\n\n\nfunction applyTransform(target, transform, invert) {\n  if (transform && !zrUtil.isArrayLike(transform)) {\n    transform = Transformable.getLocalTransform(transform);\n  }\n\n  if (invert) {\n    transform = matrix.invert([], transform);\n  }\n\n  return vector.applyTransform([], target, transform);\n}\n/**\n * @param {string} direction 'left' 'right' 'top' 'bottom'\n * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n * @param {boolean=} invert Whether use invert matrix.\n * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n */\n\n\nfunction transformDirection(direction, transform, invert) {\n  // Pick a base, ensure that transform result will not be (0, 0).\n  var hBase = transform[4] === 0 || transform[5] === 0 || transform[0] === 0 ? 1 : Math.abs(2 * transform[4] / transform[0]);\n  var vBase = transform[4] === 0 || transform[5] === 0 || transform[2] === 0 ? 1 : Math.abs(2 * transform[4] / transform[2]);\n  var vertex = [direction === 'left' ? -hBase : direction === 'right' ? hBase : 0, direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0];\n  vertex = applyTransform(vertex, transform, invert);\n  return Math.abs(vertex[0]) > Math.abs(vertex[1]) ? vertex[0] > 0 ? 'right' : 'left' : vertex[1] > 0 ? 'bottom' : 'top';\n}\n/**\n * Apply group transition animation from g1 to g2.\n * If no animatableModel, no animation.\n */\n\n\nfunction groupTransition(g1, g2, animatableModel, cb) {\n  if (!g1 || !g2) {\n    return;\n  }\n\n  function getElMap(g) {\n    var elMap = {};\n    g.traverse(function (el) {\n      if (!el.isGroup && el.anid) {\n        elMap[el.anid] = el;\n      }\n    });\n    return elMap;\n  }\n\n  function getAnimatableProps(el) {\n    var obj = {\n      position: vector.clone(el.position),\n      rotation: el.rotation\n    };\n\n    if (el.shape) {\n      obj.shape = zrUtil.extend({}, el.shape);\n    }\n\n    return obj;\n  }\n\n  var elMap1 = getElMap(g1);\n  g2.traverse(function (el) {\n    if (!el.isGroup && el.anid) {\n      var oldEl = elMap1[el.anid];\n\n      if (oldEl) {\n        var newProp = getAnimatableProps(el);\n        el.attr(getAnimatableProps(oldEl));\n        updateProps(el, newProp, animatableModel, el.dataIndex);\n      } // else {\n      //     if (el.previousProps) {\n      //         graphic.updateProps\n      //     }\n      // }\n\n    }\n  });\n}\n/**\n * @param {Array.<Array.<number>>} points Like: [[23, 44], [53, 66], ...]\n * @param {Object} rect {x, y, width, height}\n * @return {Array.<Array.<number>>} A new clipped points.\n */\n\n\nfunction clipPointsByRect(points, rect) {\n  return zrUtil.map(points, function (point) {\n    var x = point[0];\n    x = mathMax(x, rect.x);\n    x = mathMin(x, rect.x + rect.width);\n    var y = point[1];\n    y = mathMax(y, rect.y);\n    y = mathMin(y, rect.y + rect.height);\n    return [x, y];\n  });\n}\n/**\n * @param {Object} targetRect {x, y, width, height}\n * @param {Object} rect {x, y, width, height}\n * @return {Object} A new clipped rect. If rect size are negative, return undefined.\n */\n\n\nfunction clipRectByRect(targetRect, rect) {\n  var x = mathMax(targetRect.x, rect.x);\n  var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\n  var y = mathMax(targetRect.y, rect.y);\n  var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height);\n\n  if (x2 >= x && y2 >= y) {\n    return {\n      x: x,\n      y: y,\n      width: x2 - x,\n      height: y2 - y\n    };\n  }\n}\n/**\n * @param {string} iconStr Support 'image://' or 'path://' or direct svg path.\n * @param {Object} [opt] Properties of `module:zrender/Element`, except `style`.\n * @param {Object} [rect] {x, y, width, height}\n * @return {module:zrender/Element} Icon path or image element.\n */\n\n\nfunction createIcon(iconStr, opt, rect) {\n  opt = zrUtil.extend({\n    rectHover: true\n  }, opt);\n  var style = opt.style = {\n    strokeNoScale: true\n  };\n  rect = rect || {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  };\n\n  if (iconStr) {\n    return iconStr.indexOf('image://') === 0 ? (style.image = iconStr.slice(8), zrUtil.defaults(style, rect), new Image(opt)) : makePath(iconStr.replace('path://', ''), opt, rect, 'center');\n  }\n}\n\nexports.extendShape = extendShape;\nexports.extendPath = extendPath;\nexports.makePath = makePath;\nexports.makeImage = makeImage;\nexports.mergePath = mergePath;\nexports.resizePath = resizePath;\nexports.subPixelOptimizeLine = subPixelOptimizeLine;\nexports.subPixelOptimizeRect = subPixelOptimizeRect;\nexports.subPixelOptimize = subPixelOptimize;\nexports.setHoverStyle = setHoverStyle;\nexports.setLabelStyle = setLabelStyle;\nexports.setTextStyle = setTextStyle;\nexports.setText = setText;\nexports.getFont = getFont;\nexports.updateProps = updateProps;\nexports.initProps = initProps;\nexports.getTransform = getTransform;\nexports.applyTransform = applyTransform;\nexports.transformDirection = transformDirection;\nexports.groupTransition = groupTransition;\nexports.clipPointsByRect = clipPointsByRect;\nexports.clipRectByRect = clipRectByRect;\nexports.createIcon = createIcon;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/graphic.js\n// module id = 980\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar RADIAN_EPSILON = 1e-4;\n\nfunction _trim(str) {\n  return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n}\n/**\n * Linear mapping a value from domain to range\n * @memberOf module:echarts/util/number\n * @param  {(number|Array.<number>)} val\n * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n * @param  {boolean} clamp\n * @return {(number|Array.<number>}\n */\n\n\nfunction linearMap(val, domain, range, clamp) {\n  var subDomain = domain[1] - domain[0];\n  var subRange = range[1] - range[0];\n\n  if (subDomain === 0) {\n    return subRange === 0 ? range[0] : (range[0] + range[1]) / 2;\n  } // Avoid accuracy problem in edge, such as\n  // 146.39 - 62.83 === 83.55999999999999.\n  // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n  // It is a little verbose for efficiency considering this method\n  // is a hotspot.\n\n\n  if (clamp) {\n    if (subDomain > 0) {\n      if (val <= domain[0]) {\n        return range[0];\n      } else if (val >= domain[1]) {\n        return range[1];\n      }\n    } else {\n      if (val >= domain[0]) {\n        return range[0];\n      } else if (val <= domain[1]) {\n        return range[1];\n      }\n    }\n  } else {\n    if (val === domain[0]) {\n      return range[0];\n    }\n\n    if (val === domain[1]) {\n      return range[1];\n    }\n  }\n\n  return (val - domain[0]) / subDomain * subRange + range[0];\n}\n/**\n * Convert a percent string to absolute number.\n * Returns NaN if percent is not a valid string or number\n * @memberOf module:echarts/util/number\n * @param {string|number} percent\n * @param {number} all\n * @return {number}\n */\n\n\nfunction parsePercent(percent, all) {\n  switch (percent) {\n    case 'center':\n    case 'middle':\n      percent = '50%';\n      break;\n\n    case 'left':\n    case 'top':\n      percent = '0%';\n      break;\n\n    case 'right':\n    case 'bottom':\n      percent = '100%';\n      break;\n  }\n\n  if (typeof percent === 'string') {\n    if (_trim(percent).match(/%$/)) {\n      return parseFloat(percent) / 100 * all;\n    }\n\n    return parseFloat(percent);\n  }\n\n  return percent == null ? NaN : +percent;\n}\n/**\n * (1) Fix rounding error of float numbers.\n * (2) Support return string to avoid scientific notation like '3.5e-7'.\n *\n * @param {number} x\n * @param {number} [precision]\n * @param {boolean} [returnStr]\n * @return {number|string}\n */\n\n\nfunction round(x, precision, returnStr) {\n  if (precision == null) {\n    precision = 10;\n  } // Avoid range error\n\n\n  precision = Math.min(Math.max(0, precision), 20);\n  x = (+x).toFixed(precision);\n  return returnStr ? x : +x;\n}\n\nfunction asc(arr) {\n  arr.sort(function (a, b) {\n    return a - b;\n  });\n  return arr;\n}\n/**\n * Get precision\n * @param {number} val\n */\n\n\nfunction getPrecision(val) {\n  val = +val;\n\n  if (isNaN(val)) {\n    return 0;\n  } // It is much faster than methods converting number to string as follows\n  //      var tmp = val.toString();\n  //      return tmp.length - 1 - tmp.indexOf('.');\n  // especially when precision is low\n\n\n  var e = 1;\n  var count = 0;\n\n  while (Math.round(val * e) / e !== val) {\n    e *= 10;\n    count++;\n  }\n\n  return count;\n}\n/**\n * @param {string|number} val\n * @return {number}\n */\n\n\nfunction getPrecisionSafe(val) {\n  var str = val.toString(); // Consider scientific notation: '3.4e-12' '3.4e+12'\n\n  var eIndex = str.indexOf('e');\n\n  if (eIndex > 0) {\n    var precision = +str.slice(eIndex + 1);\n    return precision < 0 ? -precision : 0;\n  } else {\n    var dotIndex = str.indexOf('.');\n    return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n  }\n}\n/**\n * Minimal dicernible data precisioin according to a single pixel.\n *\n * @param {Array.<number>} dataExtent\n * @param {Array.<number>} pixelExtent\n * @return {number} precision\n */\n\n\nfunction getPixelPrecision(dataExtent, pixelExtent) {\n  var log = Math.log;\n  var LN10 = Math.LN10;\n  var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n  var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10); // toFixed() digits argument must be between 0 and 20.\n\n  var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n  return !isFinite(precision) ? 20 : precision;\n}\n/**\n * Get a data of given precision, assuring the sum of percentages\n * in valueList is 1.\n * The largest remainer method is used.\n * https://en.wikipedia.org/wiki/Largest_remainder_method\n *\n * @param {Array.<number>} valueList a list of all data\n * @param {number} idx index of the data to be processed in valueList\n * @param {number} precision integer number showing digits of precision\n * @return {number} percent ranging from 0 to 100\n */\n\n\nfunction getPercentWithPrecision(valueList, idx, precision) {\n  if (!valueList[idx]) {\n    return 0;\n  }\n\n  var sum = zrUtil.reduce(valueList, function (acc, val) {\n    return acc + (isNaN(val) ? 0 : val);\n  }, 0);\n\n  if (sum === 0) {\n    return 0;\n  }\n\n  var digits = Math.pow(10, precision);\n  var votesPerQuota = zrUtil.map(valueList, function (val) {\n    return (isNaN(val) ? 0 : val) / sum * digits * 100;\n  });\n  var targetSeats = digits * 100;\n  var seats = zrUtil.map(votesPerQuota, function (votes) {\n    // Assign automatic seats.\n    return Math.floor(votes);\n  });\n  var currentSum = zrUtil.reduce(seats, function (acc, val) {\n    return acc + val;\n  }, 0);\n  var remainder = zrUtil.map(votesPerQuota, function (votes, idx) {\n    return votes - seats[idx];\n  }); // Has remainding votes.\n\n  while (currentSum < targetSeats) {\n    // Find next largest remainder.\n    var max = Number.NEGATIVE_INFINITY;\n    var maxId = null;\n\n    for (var i = 0, len = remainder.length; i < len; ++i) {\n      if (remainder[i] > max) {\n        max = remainder[i];\n        maxId = i;\n      }\n    } // Add a vote to max remainder.\n\n\n    ++seats[maxId];\n    remainder[maxId] = 0;\n    ++currentSum;\n  }\n\n  return seats[idx] / digits;\n} // Number.MAX_SAFE_INTEGER, ie do not support.\n\n\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * To 0 - 2 * PI, considering negative radian.\n * @param {number} radian\n * @return {number}\n */\n\nfunction remRadian(radian) {\n  var pi2 = Math.PI * 2;\n  return (radian % pi2 + pi2) % pi2;\n}\n/**\n * @param {type} radian\n * @return {boolean}\n */\n\n\nfunction isRadianAroundZero(val) {\n  return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n}\n\nvar TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n/**\n * @param {string|Date|number} value These values can be accepted:\n *   + An instance of Date, represent a time in its own time zone.\n *   + Or string in a subset of ISO 8601, only including:\n *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n *     all of which will be treated as local time if time zone is not specified\n *     (see <https://momentjs.com/>).\n *   + Or other string format, including (all of which will be treated as loacal time):\n *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n *   + a timestamp, which represent a time in UTC.\n * @return {Date} date\n */\n\nfunction parseDate(value) {\n  if (value instanceof Date) {\n    return value;\n  } else if (typeof value === 'string') {\n    // Different browsers parse date in different way, so we parse it manually.\n    // Some other issues:\n    // new Date('1970-01-01') is UTC,\n    // new Date('1970/01/01') and new Date('1970-1-01') is local.\n    // See issue #3623\n    var match = TIME_REG.exec(value);\n\n    if (!match) {\n      // return Invalid Date.\n      return new Date(NaN);\n    } // Use local time when no timezone offset specifed.\n\n\n    if (!match[8]) {\n      // match[n] can only be string or undefined.\n      // But take care of '12' + 1 => '121'.\n      return new Date(+match[1], +(match[2] || 1) - 1, +match[3] || 1, +match[4] || 0, +(match[5] || 0), +match[6] || 0, +match[7] || 0);\n    } // Timezoneoffset of Javascript Date has considered DST (Daylight Saving Time,\n    // https://tc39.github.io/ecma262/#sec-daylight-saving-time-adjustment).\n    // For example, system timezone is set as \"Time Zone: America/Toronto\",\n    // then these code will get different result:\n    // `new Date(1478411999999).getTimezoneOffset();  // get 240`\n    // `new Date(1478412000000).getTimezoneOffset();  // get 300`\n    // So we should not use `new Date`, but use `Date.UTC`.\n    else {\n        var hour = +match[4] || 0;\n\n        if (match[8].toUpperCase() !== 'Z') {\n          hour -= match[8].slice(0, 3);\n        }\n\n        return new Date(Date.UTC(+match[1], +(match[2] || 1) - 1, +match[3] || 1, hour, +(match[5] || 0), +match[6] || 0, +match[7] || 0));\n      }\n  } else if (value == null) {\n    return new Date(NaN);\n  }\n\n  return new Date(Math.round(value));\n}\n/**\n * Quantity of a number. e.g. 0.1, 1, 10, 100\n *\n * @param  {number} val\n * @return {number}\n */\n\n\nfunction quantity(val) {\n  return Math.pow(10, quantityExponent(val));\n}\n\nfunction quantityExponent(val) {\n  return Math.floor(Math.log(val) / Math.LN10);\n}\n/**\n * find a “nice” number approximately equal to x. Round the number if round = true,\n * take ceiling if round = false. The primary observation is that the “nicest”\n * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n *\n * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n *\n * @param  {number} val Non-negative value.\n * @param  {boolean} round\n * @return {number}\n */\n\n\nfunction nice(val, round) {\n  var exponent = quantityExponent(val);\n  var exp10 = Math.pow(10, exponent);\n  var f = val / exp10; // 1 <= f < 10\n\n  var nf;\n\n  if (round) {\n    if (f < 1.5) {\n      nf = 1;\n    } else if (f < 2.5) {\n      nf = 2;\n    } else if (f < 4) {\n      nf = 3;\n    } else if (f < 7) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  } else {\n    if (f < 1) {\n      nf = 1;\n    } else if (f < 2) {\n      nf = 2;\n    } else if (f < 3) {\n      nf = 3;\n    } else if (f < 5) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  }\n\n  val = nf * exp10; // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n  // 20 is the uppper bound of toFixed.\n\n  return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n}\n/**\n * Order intervals asc, and split them when overlap.\n * expect(numberUtil.reformIntervals([\n *     {interval: [18, 62], close: [1, 1]},\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [1, 1]},\n *     {interval: [62, 150], close: [1, 1]},\n *     {interval: [106, 150], close: [1, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ])).toEqual([\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [0, 1]},\n *     {interval: [18, 62], close: [0, 1]},\n *     {interval: [62, 150], close: [0, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ]);\n * @param {Array.<Object>} list, where `close` mean open or close\n *        of the interval, and Infinity can be used.\n * @return {Array.<Object>} The origin list, which has been reformed.\n */\n\n\nfunction reformIntervals(list) {\n  list.sort(function (a, b) {\n    return littleThan(a, b, 0) ? -1 : 1;\n  });\n  var curr = -Infinity;\n  var currClose = 1;\n\n  for (var i = 0; i < list.length;) {\n    var interval = list[i].interval;\n    var close = list[i].close;\n\n    for (var lg = 0; lg < 2; lg++) {\n      if (interval[lg] <= curr) {\n        interval[lg] = curr;\n        close[lg] = !lg ? 1 - currClose : 1;\n      }\n\n      curr = interval[lg];\n      currClose = close[lg];\n    }\n\n    if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n      list.splice(i, 1);\n    } else {\n      i++;\n    }\n  }\n\n  return list;\n\n  function littleThan(a, b, lg) {\n    return a.interval[lg] < b.interval[lg] || a.interval[lg] === b.interval[lg] && (a.close[lg] - b.close[lg] === (!lg ? 1 : -1) || !lg && littleThan(a, b, 1));\n  }\n}\n/**\n * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n * subtraction forces infinities to NaN\n *\n * @param {*} v\n * @return {boolean}\n */\n\n\nfunction isNumeric(v) {\n  return v - parseFloat(v) >= 0;\n}\n\nexports.linearMap = linearMap;\nexports.parsePercent = parsePercent;\nexports.round = round;\nexports.asc = asc;\nexports.getPrecision = getPrecision;\nexports.getPrecisionSafe = getPrecisionSafe;\nexports.getPixelPrecision = getPixelPrecision;\nexports.getPercentWithPrecision = getPercentWithPrecision;\nexports.MAX_SAFE_INTEGER = MAX_SAFE_INTEGER;\nexports.remRadian = remRadian;\nexports.isRadianAroundZero = isRadianAroundZero;\nexports.parseDate = parseDate;\nexports.quantity = quantity;\nexports.nice = nice;\nexports.reformIntervals = reformIntervals;\nexports.isNumeric = isNumeric;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/number.js\n// module id = 981\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar formatUtil = require(\"./format\");\n\nvar nubmerUtil = require(\"./number\");\n\nvar Model = require(\"../model/Model\");\n\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\n/**\n * If value is not array, then translate it to array.\n * @param  {*} value\n * @return {Array} [value] or value\n */\n\nfunction normalizeToArray(value) {\n  return value instanceof Array ? value : value == null ? [] : [value];\n}\n/**\n * Sync default option between normal and emphasis like `position` and `show`\n * In case some one will write code like\n *     label: {\n *         normal: {\n *             show: false,\n *             position: 'outside',\n *             fontSize: 18\n *         },\n *         emphasis: {\n *             show: true\n *         }\n *     }\n * @param {Object} opt\n * @param {Array.<string>} subOpts\n */\n\n\nfunction defaultEmphasis(opt, subOpts) {\n  if (opt) {\n    var emphasisOpt = opt.emphasis = opt.emphasis || {};\n    var normalOpt = opt.normal = opt.normal || {}; // Default emphasis option from normal\n\n    for (var i = 0, len = subOpts.length; i < len; i++) {\n      var subOptName = subOpts[i];\n\n      if (!emphasisOpt.hasOwnProperty(subOptName) && normalOpt.hasOwnProperty(subOptName)) {\n        emphasisOpt[subOptName] = normalOpt[subOptName];\n      }\n    }\n  }\n}\n\nvar TEXT_STYLE_OPTIONS = ['fontStyle', 'fontWeight', 'fontSize', 'fontFamily', 'rich', 'tag', 'color', 'textBorderColor', 'textBorderWidth', 'width', 'height', 'lineHeight', 'align', 'verticalAlign', 'baseline', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY', 'textShadowColor', 'textShadowBlur', 'textShadowOffsetX', 'textShadowOffsetY', 'backgroundColor', 'borderColor', 'borderWidth', 'borderRadius', 'padding']; // modelUtil.LABEL_OPTIONS = modelUtil.TEXT_STYLE_OPTIONS.concat([\n//     'position', 'offset', 'rotate', 'origin', 'show', 'distance', 'formatter',\n//     'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\n//     // FIXME: deprecated, check and remove it.\n//     'textStyle'\n// ]);\n\n/**\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method retieves value from data.\n * @param {string|number|Date|Array|Object} dataItem\n * @return {number|string|Date|Array.<number|string|Date>}\n */\n\nfunction getDataItemValue(dataItem) {\n  // Performance sensitive.\n  return dataItem && (dataItem.value == null ? dataItem : dataItem.value);\n}\n/**\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method determine if dataItem has extra option besides value\n * @param {string|number|Date|Array|Object} dataItem\n */\n\n\nfunction isDataItemOption(dataItem) {\n  return isObject(dataItem) && !(dataItem instanceof Array); // // markLine data can be array\n  // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n}\n/**\n * This helper method convert value in data.\n * @param {string|number|Date} value\n * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n */\n\n\nfunction converDataValue(value, dimInfo) {\n  // Performance sensitive.\n  var dimType = dimInfo && dimInfo.type;\n\n  if (dimType === 'ordinal') {\n    return value;\n  }\n\n  if (dimType === 'time' // spead up when using timestamp\n  && typeof value !== 'number' && value != null && value !== '-') {\n    value = +nubmerUtil.parseDate(value);\n  } // dimType defaults 'number'.\n  // If dimType is not ordinal and value is null or undefined or NaN or '-',\n  // parse to NaN.\n\n\n  return value == null || value === '' ? NaN : +value; // If string (like '-'), using '+' parse to NaN\n}\n/**\n * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.\n * @param {module:echarts/data/List} data\n * @param {Object} opt\n * @param {string} [opt.seriesIndex]\n * @param {Object} [opt.name]\n * @param {Object} [opt.mainType]\n * @param {Object} [opt.subType]\n */\n\n\nfunction createDataFormatModel(data, opt) {\n  var model = new Model();\n  zrUtil.mixin(model, dataFormatMixin);\n  model.seriesIndex = opt.seriesIndex;\n  model.name = opt.name || '';\n  model.mainType = opt.mainType;\n  model.subType = opt.subType;\n\n  model.getData = function () {\n    return data;\n  };\n\n  return model;\n} // PENDING A little ugly\n\n\nvar dataFormatMixin = {\n  /**\n   * Get params for formatter\n   * @param {number} dataIndex\n   * @param {string} [dataType]\n   * @return {Object}\n   */\n  getDataParams: function (dataIndex, dataType) {\n    var data = this.getData(dataType);\n    var rawValue = this.getRawValue(dataIndex, dataType);\n    var rawDataIndex = data.getRawIndex(dataIndex);\n    var name = data.getName(dataIndex, true);\n    var itemOpt = data.getRawDataItem(dataIndex);\n    var color = data.getItemVisual(dataIndex, 'color');\n    return {\n      componentType: this.mainType,\n      componentSubType: this.subType,\n      seriesType: this.mainType === 'series' ? this.subType : null,\n      seriesIndex: this.seriesIndex,\n      seriesId: this.id,\n      seriesName: this.name,\n      name: name,\n      dataIndex: rawDataIndex,\n      data: itemOpt,\n      dataType: dataType,\n      value: rawValue,\n      color: color,\n      marker: formatUtil.getTooltipMarker(color),\n      // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n      $vars: ['seriesName', 'name', 'value']\n    };\n  },\n\n  /**\n   * Format label\n   * @param {number} dataIndex\n   * @param {string} [status='normal'] 'normal' or 'emphasis'\n   * @param {string} [dataType]\n   * @param {number} [dimIndex]\n   * @param {string} [labelProp='label']\n   * @return {string}\n   */\n  getFormattedLabel: function (dataIndex, status, dataType, dimIndex, labelProp) {\n    status = status || 'normal';\n    var data = this.getData(dataType);\n    var itemModel = data.getItemModel(dataIndex);\n    var params = this.getDataParams(dataIndex, dataType);\n\n    if (dimIndex != null && params.value instanceof Array) {\n      params.value = params.value[dimIndex];\n    }\n\n    var formatter = itemModel.get([labelProp || 'label', status, 'formatter']);\n\n    if (typeof formatter === 'function') {\n      params.status = status;\n      return formatter(params);\n    } else if (typeof formatter === 'string') {\n      return formatUtil.formatTpl(formatter, params);\n    }\n  },\n\n  /**\n   * Get raw value in option\n   * @param {number} idx\n   * @param {string} [dataType]\n   * @return {Object}\n   */\n  getRawValue: function (idx, dataType) {\n    var data = this.getData(dataType);\n    var dataItem = data.getRawDataItem(idx);\n\n    if (dataItem != null) {\n      return isObject(dataItem) && !(dataItem instanceof Array) ? dataItem.value : dataItem;\n    }\n  },\n\n  /**\n   * Should be implemented.\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   * @return {string} tooltip string\n   */\n  formatTooltip: zrUtil.noop\n};\n/**\n * Mapping to exists for merge.\n *\n * @public\n * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n * @param {Object|Array.<Object>} newCptOptions\n * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          index of which is the same as exists.\n */\n\nfunction mappingToExists(exists, newCptOptions) {\n  // Mapping by the order by original option (but not order of\n  // new option) in merge mode. Because we should ensure\n  // some specified index (like xAxisIndex) is consistent with\n  // original option, which is easy to understand, espatially in\n  // media query. And in most case, merge option is used to\n  // update partial option but not be expected to change order.\n  newCptOptions = (newCptOptions || []).slice();\n  var result = zrUtil.map(exists || [], function (obj, index) {\n    return {\n      exist: obj\n    };\n  }); // Mapping by id or name if specified.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    } // id has highest priority.\n\n\n    for (var i = 0; i < result.length; i++) {\n      if (!result[i].option // Consider name: two map to one.\n      && cptOption.id != null && result[i].exist.id === cptOption.id + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n\n    for (var i = 0; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Consider name: two map to one.\n      // Can not match when both ids exist but different.\n      && (exist.id == null || cptOption.id == null) && cptOption.name != null && !isIdInner(cptOption) && !isIdInner(exist) && exist.name === cptOption.name + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n  }); // Otherwise mapping by index.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    }\n\n    var i = 0;\n\n    for (; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Existing model that already has id should be able to\n      // mapped to (because after mapping performed model may\n      // be assigned with a id, whish should not affect next\n      // mapping), except those has inner id.\n      && !isIdInner(exist) // Caution:\n      // Do not overwrite id. But name can be overwritten,\n      // because axis use name as 'show label text'.\n      // 'exist' always has id and name and we dont\n      // need to check it.\n      && cptOption.id == null) {\n        result[i].option = cptOption;\n        break;\n      }\n    }\n\n    if (i >= result.length) {\n      result.push({\n        option: cptOption\n      });\n    }\n  });\n  return result;\n}\n/**\n * Make id and name for mapping result (result of mappingToExists)\n * into `keyInfo` field.\n *\n * @public\n * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          which order is the same as exists.\n * @return {Array.<Object>} The input.\n */\n\n\nfunction makeIdAndName(mapResult) {\n  // We use this id to hash component models and view instances\n  // in echarts. id can be specified by user, or auto generated.\n  // The id generation rule ensures new view instance are able\n  // to mapped to old instance when setOption are called in\n  // no-merge mode. So we generate model id by name and plus\n  // type in view id.\n  // name can be duplicated among components, which is convenient\n  // to specify multi components (like series) by one name.\n  // Ensure that each id is distinct.\n  var idMap = zrUtil.createHashMap();\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    existCpt && idMap.set(existCpt.id, item);\n  });\n  each(mapResult, function (item, index) {\n    var opt = item.option;\n    zrUtil.assert(!opt || opt.id == null || !idMap.get(opt.id) || idMap.get(opt.id) === item, 'id duplicates: ' + (opt && opt.id));\n    opt && opt.id != null && idMap.set(opt.id, item);\n    !item.keyInfo && (item.keyInfo = {});\n  }); // Make name and id.\n\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    var opt = item.option;\n    var keyInfo = item.keyInfo;\n\n    if (!isObject(opt)) {\n      return;\n    } // name can be overwitten. Consider case: axis.name = '20km'.\n    // But id generated by name will not be changed, which affect\n    // only in that case: setOption with 'not merge mode' and view\n    // instance will be recreated, which can be accepted.\n\n\n    keyInfo.name = opt.name != null ? opt.name + '' : existCpt ? existCpt.name : '\\0-'; // name may be displayed on screen, so use '-'.\n\n    if (existCpt) {\n      keyInfo.id = existCpt.id;\n    } else if (opt.id != null) {\n      keyInfo.id = opt.id + '';\n    } else {\n      // Consider this situatoin:\n      //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n      //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n      // Series with the same name between optionA and optionB\n      // should be mapped.\n      var idNum = 0;\n\n      do {\n        keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n      } while (idMap.get(keyInfo.id));\n    }\n\n    idMap.set(keyInfo.id, item);\n  });\n}\n/**\n * @public\n * @param {Object} cptOption\n * @return {boolean}\n */\n\n\nfunction isIdInner(cptOption) {\n  return isObject(cptOption) && cptOption.id && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n}\n/**\n * A helper for removing duplicate items between batchA and batchB,\n * and in themselves, and categorize by series.\n *\n * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n */\n\n\nfunction compressBatches(batchA, batchB) {\n  var mapA = {};\n  var mapB = {};\n  makeMap(batchA || [], mapA);\n  makeMap(batchB || [], mapB, mapA);\n  return [mapToArray(mapA), mapToArray(mapB)];\n\n  function makeMap(sourceBatch, map, otherMap) {\n    for (var i = 0, len = sourceBatch.length; i < len; i++) {\n      var seriesId = sourceBatch[i].seriesId;\n      var dataIndices = normalizeToArray(sourceBatch[i].dataIndex);\n      var otherDataIndices = otherMap && otherMap[seriesId];\n\n      for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n        var dataIndex = dataIndices[j];\n\n        if (otherDataIndices && otherDataIndices[dataIndex]) {\n          otherDataIndices[dataIndex] = null;\n        } else {\n          (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n        }\n      }\n    }\n  }\n\n  function mapToArray(map, isData) {\n    var result = [];\n\n    for (var i in map) {\n      if (map.hasOwnProperty(i) && map[i] != null) {\n        if (isData) {\n          result.push(+i);\n        } else {\n          var dataIndices = mapToArray(map[i], true);\n          dataIndices.length && result.push({\n            seriesId: i,\n            dataIndex: dataIndices\n          });\n        }\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n *                         each of which can be Array or primary type.\n * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n */\n\n\nfunction queryDataIndex(data, payload) {\n  if (payload.dataIndexInside != null) {\n    return payload.dataIndexInside;\n  } else if (payload.dataIndex != null) {\n    return zrUtil.isArray(payload.dataIndex) ? zrUtil.map(payload.dataIndex, function (value) {\n      return data.indexOfRawIndex(value);\n    }) : data.indexOfRawIndex(payload.dataIndex);\n  } else if (payload.name != null) {\n    return zrUtil.isArray(payload.name) ? zrUtil.map(payload.name, function (value) {\n      return data.indexOfName(value);\n    }) : data.indexOfName(payload.name);\n  }\n}\n/**\n * Enable property storage to any host object.\n * Notice: Serialization is not supported.\n *\n * For example:\n * var get = modelUitl.makeGetter();\n *\n * function some(hostObj) {\n *      get(hostObj)._someProperty = 1212;\n *      ...\n * }\n *\n * @return {Function}\n */\n\n\nvar makeGetter = function () {\n  var index = 0;\n  return function () {\n    var key = '\\0__ec_prop_getter_' + index++;\n    return function (hostObj) {\n      return hostObj[key] || (hostObj[key] = {});\n    };\n  };\n}();\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex, seriesId, seriesName,\n *            geoIndex, geoId, geoName,\n *            bmapIndex, bmapId, bmapName,\n *            xAxisIndex, xAxisId, xAxisName,\n *            yAxisIndex, yAxisId, yAxisName,\n *            gridIndex, gridId, gridName,\n *            ... (can be extended)\n *        }\n *        Each properties can be number|string|Array.<number>|Array.<string>\n *        For example, a finder could be\n *        {\n *            seriesIndex: 3,\n *            geoId: ['aa', 'cc'],\n *            gridName: ['xx', 'rr']\n *        }\n *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n *        If nothing or null/undefined specified, return nothing.\n * @param {Object} [opt]\n * @param {string} [opt.defaultMainType]\n * @param {Array.<string>} [opt.includeMainTypes]\n * @return {Object} result like:\n *        {\n *            seriesModels: [seriesModel1, seriesModel2],\n *            seriesModel: seriesModel1, // The first model\n *            geoModels: [geoModel1, geoModel2],\n *            geoModel: geoModel1, // The first model\n *            ...\n *        }\n */\n\n\nfunction parseFinder(ecModel, finder, opt) {\n  if (zrUtil.isString(finder)) {\n    var obj = {};\n    obj[finder + 'Index'] = 0;\n    finder = obj;\n  }\n\n  var defaultMainType = opt && opt.defaultMainType;\n\n  if (defaultMainType && !has(finder, defaultMainType + 'Index') && !has(finder, defaultMainType + 'Id') && !has(finder, defaultMainType + 'Name')) {\n    finder[defaultMainType + 'Index'] = 0;\n  }\n\n  var result = {};\n  each(finder, function (value, key) {\n    var value = finder[key]; // Exclude 'dataIndex' and other illgal keys.\n\n    if (key === 'dataIndex' || key === 'dataIndexInside') {\n      result[key] = value;\n      return;\n    }\n\n    var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n    var mainType = parsedKey[1];\n    var queryType = (parsedKey[2] || '').toLowerCase();\n\n    if (!mainType || !queryType || value == null || queryType === 'index' && value === 'none' || opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0) {\n      return;\n    }\n\n    var queryParam = {\n      mainType: mainType\n    };\n\n    if (queryType !== 'index' || value !== 'all') {\n      queryParam[queryType] = value;\n    }\n\n    var models = ecModel.queryComponents(queryParam);\n    result[mainType + 'Models'] = models;\n    result[mainType + 'Model'] = models[0];\n  });\n  return result;\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n * @param {module:echarts/data/List} data\n * @param {string|number} dataDim\n * @return {string}\n */\n\n\nfunction dataDimToCoordDim(data, dataDim) {\n  var dimensions = data.dimensions;\n  dataDim = data.getDimension(dataDim);\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimItem = data.getDimensionInfo(dimensions[i]);\n\n    if (dimItem.name === dataDim) {\n      return dimItem.coordDim;\n    }\n  }\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n * @param {module:echarts/data/List} data\n * @param {string} coordDim\n * @return {Array.<string>} data dimensions on the coordDim.\n */\n\n\nfunction coordDimToDataDim(data, coordDim) {\n  var dataDim = [];\n  each(data.dimensions, function (dimName) {\n    var dimItem = data.getDimensionInfo(dimName);\n\n    if (dimItem.coordDim === coordDim) {\n      dataDim[dimItem.coordDimIndex] = dimItem.name;\n    }\n  });\n  return dataDim;\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n * @param {module:echarts/data/List} data\n * @param {string} otherDim Can be `otherDims`\n *                        like 'label' or 'tooltip'.\n * @return {Array.<string>} data dimensions on the otherDim.\n */\n\n\nfunction otherDimToDataDim(data, otherDim) {\n  var dataDim = [];\n  each(data.dimensions, function (dimName) {\n    var dimItem = data.getDimensionInfo(dimName);\n    var otherDims = dimItem.otherDims;\n    var dimIndex = otherDims[otherDim];\n\n    if (dimIndex != null && dimIndex !== false) {\n      dataDim[dimIndex] = dimItem.name;\n    }\n  });\n  return dataDim;\n}\n\nfunction has(obj, prop) {\n  return obj && obj.hasOwnProperty(prop);\n}\n\nexports.normalizeToArray = normalizeToArray;\nexports.defaultEmphasis = defaultEmphasis;\nexports.TEXT_STYLE_OPTIONS = TEXT_STYLE_OPTIONS;\nexports.getDataItemValue = getDataItemValue;\nexports.isDataItemOption = isDataItemOption;\nexports.converDataValue = converDataValue;\nexports.createDataFormatModel = createDataFormatModel;\nexports.dataFormatMixin = dataFormatMixin;\nexports.mappingToExists = mappingToExists;\nexports.makeIdAndName = makeIdAndName;\nexports.isIdInner = isIdInner;\nexports.compressBatches = compressBatches;\nexports.queryDataIndex = queryDataIndex;\nexports.makeGetter = makeGetter;\nexports.parseFinder = parseFinder;\nexports.dataDimToCoordDim = dataDimToCoordDim;\nexports.coordDimToDataDim = coordDimToDataDim;\nexports.otherDimToDataDim = otherDimToDataDim;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/model.js\n// module id = 982\n// module chunks = 0 1 2","// (1) The code `if (__DEV__) ...` can be removed by build tool.\n// (2) If intend to use `__DEV__`, this module should be imported. Use a global\n// variable `__DEV__` may cause that miss the declaration (see #6535), or the\n// declaration is behind of the using position (for example in `Model.extent`,\n// And tools like rollup can not analysis the dependency if not import).\nvar dev; // In browser\n\nif (typeof window !== 'undefined') {\n  dev = window.__DEV__;\n} // In node\nelse if (typeof global !== 'undefined') {\n    dev = global.__DEV__;\n  }\n\nif (typeof dev === 'undefined') {\n  dev = true;\n}\n\nvar __DEV__ = dev;\nexports.__DEV__ = __DEV__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/config.js\n// module id = 983\n// module chunks = 0 1 2","var ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * 创建一个向量\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @return {Vector2}\n */\n\nfunction create(x, y) {\n  var out = new ArrayCtor(2);\n\n  if (x == null) {\n    x = 0;\n  }\n\n  if (y == null) {\n    y = 0;\n  }\n\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * 复制向量数据\n * @param {Vector2} out\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction copy(out, v) {\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 克隆一个向量\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction clone(v) {\n  var out = new ArrayCtor(2);\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 设置向量的两个项\n * @param {Vector2} out\n * @param {number} a\n * @param {number} b\n * @return {Vector2} 结果\n */\n\n\nfunction set(out, a, b) {\n  out[0] = a;\n  out[1] = b;\n  return out;\n}\n/**\n * 向量相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction add(out, v1, v2) {\n  out[0] = v1[0] + v2[0];\n  out[1] = v1[1] + v2[1];\n  return out;\n}\n/**\n * 向量缩放后相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} a\n */\n\n\nfunction scaleAndAdd(out, v1, v2, a) {\n  out[0] = v1[0] + v2[0] * a;\n  out[1] = v1[1] + v2[1] * a;\n  return out;\n}\n/**\n * 向量相减\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction sub(out, v1, v2) {\n  out[0] = v1[0] - v2[0];\n  out[1] = v1[1] - v2[1];\n  return out;\n}\n/**\n * 向量长度\n * @param {Vector2} v\n * @return {number}\n */\n\n\nfunction len(v) {\n  return Math.sqrt(lenSquare(v));\n}\n\nvar length = len; // jshint ignore:line\n\n/**\n * 向量长度平方\n * @param {Vector2} v\n * @return {number}\n */\n\nfunction lenSquare(v) {\n  return v[0] * v[0] + v[1] * v[1];\n}\n\nvar lengthSquare = lenSquare;\n/**\n * 向量乘法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\nfunction mul(out, v1, v2) {\n  out[0] = v1[0] * v2[0];\n  out[1] = v1[1] * v2[1];\n  return out;\n}\n/**\n * 向量除法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction div(out, v1, v2) {\n  out[0] = v1[0] / v2[0];\n  out[1] = v1[1] / v2[1];\n  return out;\n}\n/**\n * 向量点乘\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction dot(v1, v2) {\n  return v1[0] * v2[0] + v1[1] * v2[1];\n}\n/**\n * 向量缩放\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {number} s\n */\n\n\nfunction scale(out, v, s) {\n  out[0] = v[0] * s;\n  out[1] = v[1] * s;\n  return out;\n}\n/**\n * 向量归一化\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\n\nfunction normalize(out, v) {\n  var d = len(v);\n\n  if (d === 0) {\n    out[0] = 0;\n    out[1] = 0;\n  } else {\n    out[0] = v[0] / d;\n    out[1] = v[1] / d;\n  }\n\n  return out;\n}\n/**\n * 计算向量间距离\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction distance(v1, v2) {\n  return Math.sqrt((v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]));\n}\n\nvar dist = distance;\n/**\n * 向量距离平方\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\nfunction distanceSquare(v1, v2) {\n  return (v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n}\n\nvar distSquare = distanceSquare;\n/**\n * 求负向量\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\nfunction negate(out, v) {\n  out[0] = -v[0];\n  out[1] = -v[1];\n  return out;\n}\n/**\n * 插值两个点\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} t\n */\n\n\nfunction lerp(out, v1, v2, t) {\n  out[0] = v1[0] + t * (v2[0] - v1[0]);\n  out[1] = v1[1] + t * (v2[1] - v1[1]);\n  return out;\n}\n/**\n * 矩阵左乘向量\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {Vector2} m\n */\n\n\nfunction applyTransform(out, v, m) {\n  var x = v[0];\n  var y = v[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\n * 求两个向量最小值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction min(out, v1, v2) {\n  out[0] = Math.min(v1[0], v2[0]);\n  out[1] = Math.min(v1[1], v2[1]);\n  return out;\n}\n/**\n * 求两个向量最大值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction max(out, v1, v2) {\n  out[0] = Math.max(v1[0], v2[0]);\n  out[1] = Math.max(v1[1], v2[1]);\n  return out;\n}\n\nexports.create = create;\nexports.copy = copy;\nexports.clone = clone;\nexports.set = set;\nexports.add = add;\nexports.scaleAndAdd = scaleAndAdd;\nexports.sub = sub;\nexports.len = len;\nexports.length = length;\nexports.lenSquare = lenSquare;\nexports.lengthSquare = lengthSquare;\nexports.mul = mul;\nexports.div = div;\nexports.dot = dot;\nexports.scale = scale;\nexports.normalize = normalize;\nexports.distance = distance;\nexports.dist = dist;\nexports.distanceSquare = distanceSquare;\nexports.distSquare = distSquare;\nexports.negate = negate;\nexports.lerp = lerp;\nexports.applyTransform = applyTransform;\nexports.min = min;\nexports.max = max;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/vector.js\n// module id = 984\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar numberUtil = require(\"./number\");\n\n/**\n * 每三位默认加,格式化\n * @param {string|number} x\n * @return {string}\n */\nfunction addCommas(x) {\n  if (isNaN(x)) {\n    return '-';\n  }\n\n  x = (x + '').split('.');\n  return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g, '$1,') + (x.length > 1 ? '.' + x[1] : '');\n}\n/**\n * @param {string} str\n * @param {boolean} [upperCaseFirst=false]\n * @return {string} str\n */\n\n\nfunction toCamelCase(str, upperCaseFirst) {\n  str = (str || '').toLowerCase().replace(/-(.)/g, function (match, group1) {\n    return group1.toUpperCase();\n  });\n\n  if (upperCaseFirst && str) {\n    str = str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  return str;\n}\n\nvar normalizeCssArray = zrUtil.normalizeCssArray;\n\nfunction encodeHTML(source) {\n  return String(source).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/'/g, '&#39;');\n}\n\nvar TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\nvar wrapVar = function (varName, seriesIdx) {\n  return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n};\n/**\n * Template formatter\n * @param {string} tpl\n * @param {Array.<Object>|Object} paramsList\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTpl(tpl, paramsList, encode) {\n  if (!zrUtil.isArray(paramsList)) {\n    paramsList = [paramsList];\n  }\n\n  var seriesLen = paramsList.length;\n\n  if (!seriesLen) {\n    return '';\n  }\n\n  var $vars = paramsList[0].$vars || [];\n\n  for (var i = 0; i < $vars.length; i++) {\n    var alias = TPL_VAR_ALIAS[i];\n    var val = wrapVar(alias, 0);\n    tpl = tpl.replace(wrapVar(alias), encode ? encodeHTML(val) : val);\n  }\n\n  for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n    for (var k = 0; k < $vars.length; k++) {\n      var val = paramsList[seriesIdx][$vars[k]];\n      tpl = tpl.replace(wrapVar(TPL_VAR_ALIAS[k], seriesIdx), encode ? encodeHTML(val) : val);\n    }\n  }\n\n  return tpl;\n}\n/**\n * simple Template formatter\n *\n * @param {string} tpl\n * @param {Object} param\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTplSimple(tpl, param, encode) {\n  zrUtil.each(param, function (value, key) {\n    tpl = tpl.replace('{' + key + '}', encode ? encodeHTML(value) : value);\n  });\n  return tpl;\n}\n/**\n * @param {string} color\n * @param {string} [extraCssText]\n * @return {string}\n */\n\n\nfunction getTooltipMarker(color, extraCssText) {\n  return color ? '<span style=\"display:inline-block;margin-right:5px;' + 'border-radius:10px;width:9px;height:9px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>' : '';\n}\n/**\n * @param {string} str\n * @return {string}\n * @inner\n */\n\n\nvar s2d = function (str) {\n  return str < 10 ? '0' + str : str;\n};\n/**\n * ISO Date format\n * @param {string} tpl\n * @param {number} value\n * @param {boolean} [isUTC=false] Default in local time.\n *           see `module:echarts/scale/Time`\n *           and `module:echarts/util/number#parseDate`.\n * @inner\n */\n\n\nfunction formatTime(tpl, value, isUTC) {\n  if (tpl === 'week' || tpl === 'month' || tpl === 'quarter' || tpl === 'half-year' || tpl === 'year') {\n    tpl = 'MM-dd\\nyyyy';\n  }\n\n  var date = numberUtil.parseDate(value);\n  var utc = isUTC ? 'UTC' : '';\n  var y = date['get' + utc + 'FullYear']();\n  var M = date['get' + utc + 'Month']() + 1;\n  var d = date['get' + utc + 'Date']();\n  var h = date['get' + utc + 'Hours']();\n  var m = date['get' + utc + 'Minutes']();\n  var s = date['get' + utc + 'Seconds']();\n  tpl = tpl.replace('MM', s2d(M)).replace('M', M).replace('yyyy', y).replace('yy', y % 100).replace('dd', s2d(d)).replace('d', d).replace('hh', s2d(h)).replace('h', h).replace('mm', s2d(m)).replace('m', m).replace('ss', s2d(s)).replace('s', s);\n  return tpl;\n}\n/**\n * Capital first\n * @param {string} str\n * @return {string}\n */\n\n\nfunction capitalFirst(str) {\n  return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n}\n\nvar truncateText = textContain.truncateText;\nvar getTextRect = textContain.getBoundingRect;\nexports.addCommas = addCommas;\nexports.toCamelCase = toCamelCase;\nexports.normalizeCssArray = normalizeCssArray;\nexports.encodeHTML = encodeHTML;\nexports.formatTpl = formatTpl;\nexports.formatTplSimple = formatTplSimple;\nexports.getTooltipMarker = getTooltipMarker;\nexports.formatTime = formatTime;\nexports.capitalFirst = capitalFirst;\nexports.truncateText = truncateText;\nexports.getTextRect = getTextRect;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/format.js\n// module id = 985\n// module chunks = 0 1 2","/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\nvar env = {};\n\nif (typeof navigator === 'undefined') {\n  // In node\n  env = {\n    browser: {},\n    os: {},\n    node: true,\n    // Assume canvas is supported\n    canvasSupported: true,\n    svgSupported: true\n  };\n} else {\n  env = detect(navigator.userAgent);\n}\n\nvar _default = env; // Zepto.js\n// (c) 2010-2013 Thomas Fuchs\n// Zepto.js may be freely distributed under the MIT license.\n\nfunction detect(ua) {\n  var os = {};\n  var browser = {}; // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n  // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n  // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n  // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n  // var touchpad = webos && ua.match(/TouchPad/);\n  // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n  // var silk = ua.match(/Silk\\/([\\d._]+)/);\n  // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n  // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n  // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n  // var playbook = ua.match(/PlayBook/);\n  // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n\n  var firefox = ua.match(/Firefox\\/([\\d.]+)/); // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n  // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n\n  var ie = ua.match(/MSIE\\s([\\d.]+)/) // IE 11 Trident/7.0; rv:11.0\n  || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n  var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n  var weChat = /micromessenger/i.test(ua); // Todo: clean this up with a better OS/browser seperation:\n  // - discern (more) between multiple browsers on android\n  // - decide if kindle fire in silk mode is android or not\n  // - Firefox on Android doesn't specify the Android version\n  // - possibly devide in os, device and browser hashes\n  // if (browser.webkit = !!webkit) browser.version = webkit[1];\n  // if (android) os.android = true, os.version = android[2];\n  // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n  // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n  // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n  // if (webos) os.webos = true, os.version = webos[2];\n  // if (touchpad) os.touchpad = true;\n  // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n  // if (bb10) os.bb10 = true, os.version = bb10[2];\n  // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n  // if (playbook) browser.playbook = true;\n  // if (kindle) os.kindle = true, os.version = kindle[1];\n  // if (silk) browser.silk = true, browser.version = silk[1];\n  // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n  // if (chrome) browser.chrome = true, browser.version = chrome[1];\n\n  if (firefox) {\n    browser.firefox = true;\n    browser.version = firefox[1];\n  } // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n  // if (webview) browser.webview = true;\n\n\n  if (ie) {\n    browser.ie = true;\n    browser.version = ie[1];\n  }\n\n  if (edge) {\n    browser.edge = true;\n    browser.version = edge[1];\n  } // It is difficult to detect WeChat in Win Phone precisely, because ua can\n  // not be set on win phone. So we do not consider Win Phone.\n\n\n  if (weChat) {\n    browser.weChat = true;\n  } // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n  //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n  // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n  //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n  //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n\n  return {\n    browser: browser,\n    os: os,\n    node: false,\n    // 原生canvas支持，改极端点了\n    // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n    canvasSupported: !!document.createElement('canvas').getContext,\n    svgSupported: typeof SVGRect !== 'undefined',\n    // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\n    // works on most browsers\n    // IE10/11 does not support touch event, and MS Edge supports them but not by\n    // default, so we dont check navigator.maxTouchPoints for them here.\n    touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n    // <http://caniuse.com/#search=pointer%20event>.\n    pointerEventsSupported: 'onpointerdown' in window // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n    // events currently. So we dont use that on other browsers unless tested sufficiently.\n    // Although IE 10 supports pointer event, it use old style and is different from the\n    // standard. So we exclude that. (IE 10 is hardly used on touch device)\n    && (browser.edge || browser.ie && browser.version >= 11)\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/env.js\n// module id = 986\n// module chunks = 0 1 2","var vec2 = require(\"./vector\");\n\nvar matrix = require(\"./matrix\");\n\n/**\n * @module echarts/core/BoundingRect\n */\nvar v2ApplyTransform = vec2.applyTransform;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\n/**\n * @alias module:echarts/core/BoundingRect\n */\n\nfunction BoundingRect(x, y, width, height) {\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n  /**\n   * @type {number}\n   */\n\n\n  this.x = x;\n  /**\n   * @type {number}\n   */\n\n  this.y = y;\n  /**\n   * @type {number}\n   */\n\n  this.width = width;\n  /**\n   * @type {number}\n   */\n\n  this.height = height;\n}\n\nBoundingRect.prototype = {\n  constructor: BoundingRect,\n\n  /**\n   * @param {module:echarts/core/BoundingRect} other\n   */\n  union: function (other) {\n    var x = mathMin(other.x, this.x);\n    var y = mathMin(other.y, this.y);\n    this.width = mathMax(other.x + other.width, this.x + this.width) - x;\n    this.height = mathMax(other.y + other.height, this.y + this.height) - y;\n    this.x = x;\n    this.y = y;\n  },\n\n  /**\n   * @param {Array.<number>} m\n   * @methods\n   */\n  applyTransform: function () {\n    var lt = [];\n    var rb = [];\n    var lb = [];\n    var rt = [];\n    return function (m) {\n      // In case usage like this\n      // el.getBoundingRect().applyTransform(el.transform)\n      // And element has no transform\n      if (!m) {\n        return;\n      }\n\n      lt[0] = lb[0] = this.x;\n      lt[1] = rt[1] = this.y;\n      rb[0] = rt[0] = this.x + this.width;\n      rb[1] = lb[1] = this.y + this.height;\n      v2ApplyTransform(lt, lt, m);\n      v2ApplyTransform(rb, rb, m);\n      v2ApplyTransform(lb, lb, m);\n      v2ApplyTransform(rt, rt, m);\n      this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n      this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n      var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n      var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n      this.width = maxX - this.x;\n      this.height = maxY - this.y;\n    };\n  }(),\n\n  /**\n   * Calculate matrix of transforming from self to target rect\n   * @param  {module:zrender/core/BoundingRect} b\n   * @return {Array.<number>}\n   */\n  calculateTransform: function (b) {\n    var a = this;\n    var sx = b.width / a.width;\n    var sy = b.height / a.height;\n    var m = matrix.create(); // 矩阵右乘\n\n    matrix.translate(m, m, [-a.x, -a.y]);\n    matrix.scale(m, m, [sx, sy]);\n    matrix.translate(m, m, [b.x, b.y]);\n    return m;\n  },\n\n  /**\n   * @param {(module:echarts/core/BoundingRect|Object)} b\n   * @return {boolean}\n   */\n  intersect: function (b) {\n    if (!b) {\n      return false;\n    }\n\n    if (!(b instanceof BoundingRect)) {\n      // Normalize negative width/height.\n      b = BoundingRect.create(b);\n    }\n\n    var a = this;\n    var ax0 = a.x;\n    var ax1 = a.x + a.width;\n    var ay0 = a.y;\n    var ay1 = a.y + a.height;\n    var bx0 = b.x;\n    var bx1 = b.x + b.width;\n    var by0 = b.y;\n    var by1 = b.y + b.height;\n    return !(ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n  },\n  contain: function (x, y) {\n    var rect = this;\n    return x >= rect.x && x <= rect.x + rect.width && y >= rect.y && y <= rect.y + rect.height;\n  },\n\n  /**\n   * @return {module:echarts/core/BoundingRect}\n   */\n  clone: function () {\n    return new BoundingRect(this.x, this.y, this.width, this.height);\n  },\n\n  /**\n   * Copy from another rect\n   */\n  copy: function (other) {\n    this.x = other.x;\n    this.y = other.y;\n    this.width = other.width;\n    this.height = other.height;\n  },\n  plain: function () {\n    return {\n      x: this.x,\n      y: this.y,\n      width: this.width,\n      height: this.height\n    };\n  }\n};\n/**\n * @param {Object|module:zrender/core/BoundingRect} rect\n * @param {number} rect.x\n * @param {number} rect.y\n * @param {number} rect.width\n * @param {number} rect.height\n * @return {module:zrender/core/BoundingRect}\n */\n\nBoundingRect.create = function (rect) {\n  return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n};\n\nvar _default = BoundingRect;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/BoundingRect.js\n// module id = 987\n// module chunks = 0 1 2","var Displayable = require(\"./Displayable\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar pathContain = require(\"../contain/path\");\n\nvar Pattern = require(\"./Pattern\");\n\nvar getCanvasPattern = Pattern.prototype.getCanvasPattern;\nvar abs = Math.abs;\nvar pathProxyForDraw = new PathProxy(true);\n/**\n * @alias module:zrender/graphic/Path\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\n\nfunction Path(opts) {\n  Displayable.call(this, opts);\n  /**\n   * @type {module:zrender/core/PathProxy}\n   * @readOnly\n   */\n\n  this.path = null;\n}\n\nPath.prototype = {\n  constructor: Path,\n  type: 'path',\n  __dirtyPath: true,\n  strokeContainThreshold: 5,\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var path = this.path || pathProxyForDraw;\n    var hasStroke = style.hasStroke();\n    var hasFill = style.hasFill();\n    var fill = style.fill;\n    var stroke = style.stroke;\n    var hasFillGradient = hasFill && !!fill.colorStops;\n    var hasStrokeGradient = hasStroke && !!stroke.colorStops;\n    var hasFillPattern = hasFill && !!fill.image;\n    var hasStrokePattern = hasStroke && !!stroke.image;\n    style.bind(ctx, this, prevEl);\n    this.setTransform(ctx);\n\n    if (this.__dirty) {\n      var rect; // Update gradient because bounding rect may changed\n\n      if (hasFillGradient) {\n        rect = rect || this.getBoundingRect();\n        this._fillGradient = style.getGradient(ctx, fill, rect);\n      }\n\n      if (hasStrokeGradient) {\n        rect = rect || this.getBoundingRect();\n        this._strokeGradient = style.getGradient(ctx, stroke, rect);\n      }\n    } // Use the gradient or pattern\n\n\n    if (hasFillGradient) {\n      // PENDING If may have affect the state\n      ctx.fillStyle = this._fillGradient;\n    } else if (hasFillPattern) {\n      ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n    }\n\n    if (hasStrokeGradient) {\n      ctx.strokeStyle = this._strokeGradient;\n    } else if (hasStrokePattern) {\n      ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n    }\n\n    var lineDash = style.lineDash;\n    var lineDashOffset = style.lineDashOffset;\n    var ctxLineDash = !!ctx.setLineDash; // Update path sx, sy\n\n    var scale = this.getGlobalScale();\n    path.setScale(scale[0], scale[1]); // Proxy context\n    // Rebuild path in following 2 cases\n    // 1. Path is dirty\n    // 2. Path needs javascript implemented lineDash stroking.\n    //    In this case, lineDash information will not be saved in PathProxy\n\n    if (this.__dirtyPath || lineDash && !ctxLineDash && hasStroke) {\n      path.beginPath(ctx); // Setting line dash before build path\n\n      if (lineDash && !ctxLineDash) {\n        path.setLineDash(lineDash);\n        path.setLineDashOffset(lineDashOffset);\n      }\n\n      this.buildPath(path, this.shape, false); // Clear path dirty flag\n\n      if (this.path) {\n        this.__dirtyPath = false;\n      }\n    } else {\n      // Replay path building\n      ctx.beginPath();\n      this.path.rebuildPath(ctx);\n    }\n\n    hasFill && path.fill(ctx);\n\n    if (lineDash && ctxLineDash) {\n      ctx.setLineDash(lineDash);\n      ctx.lineDashOffset = lineDashOffset;\n    }\n\n    hasStroke && path.stroke(ctx);\n\n    if (lineDash && ctxLineDash) {\n      // PENDING\n      // Remove lineDash\n      ctx.setLineDash([]);\n    }\n\n    this.restoreTransform(ctx); // Draw rect text\n\n    if (style.text != null) {\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n  // Like in circle\n  buildPath: function (ctx, shapeCfg, inBundle) {},\n  createPathProxy: function () {\n    this.path = new PathProxy();\n  },\n  getBoundingRect: function () {\n    var rect = this._rect;\n    var style = this.style;\n    var needsUpdateRect = !rect;\n\n    if (needsUpdateRect) {\n      var path = this.path;\n\n      if (!path) {\n        // Create path on demand.\n        path = this.path = new PathProxy();\n      }\n\n      if (this.__dirtyPath) {\n        path.beginPath();\n        this.buildPath(path, this.shape, false);\n      }\n\n      rect = path.getBoundingRect();\n    }\n\n    this._rect = rect;\n\n    if (style.hasStroke()) {\n      // Needs update rect with stroke lineWidth when\n      // 1. Element changes scale or lineWidth\n      // 2. Shape is changed\n      var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n\n      if (this.__dirty || needsUpdateRect) {\n        rectWithStroke.copy(rect); // FIXME Must after updateTransform\n\n        var w = style.lineWidth; // PENDING, Min line width is needed when line is horizontal or vertical\n\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Only add extra hover lineWidth when there are no fill\n\n        if (!style.hasFill()) {\n          w = Math.max(w, this.strokeContainThreshold || 4);\n        } // Consider line width\n        // Line scale can't be 0;\n\n\n        if (lineScale > 1e-10) {\n          rectWithStroke.width += w / lineScale;\n          rectWithStroke.height += w / lineScale;\n          rectWithStroke.x -= w / lineScale / 2;\n          rectWithStroke.y -= w / lineScale / 2;\n        }\n      } // Return rect with stroke\n\n\n      return rectWithStroke;\n    }\n\n    return rect;\n  },\n  contain: function (x, y) {\n    var localPos = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    var style = this.style;\n    x = localPos[0];\n    y = localPos[1];\n\n    if (rect.contain(x, y)) {\n      var pathData = this.path.data;\n\n      if (style.hasStroke()) {\n        var lineWidth = style.lineWidth;\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Line scale can't be 0;\n\n        if (lineScale > 1e-10) {\n          // Only add extra hover lineWidth when there are no fill\n          if (!style.hasFill()) {\n            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n          }\n\n          if (pathContain.containStroke(pathData, lineWidth / lineScale, x, y)) {\n            return true;\n          }\n        }\n      }\n\n      if (style.hasFill()) {\n        return pathContain.contain(pathData, x, y);\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * @param  {boolean} dirtyPath\n   */\n  dirty: function (dirtyPath) {\n    if (dirtyPath == null) {\n      dirtyPath = true;\n    } // Only mark dirty, not mark clean\n\n\n    if (dirtyPath) {\n      this.__dirtyPath = dirtyPath;\n      this._rect = null;\n    }\n\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh(); // Used as a clipping path\n\n    if (this.__clipTarget) {\n      this.__clipTarget.dirty();\n    }\n  },\n\n  /**\n   * Alias for animate('shape')\n   * @param {boolean} loop\n   */\n  animateShape: function (loop) {\n    return this.animate('shape', loop);\n  },\n  // Overwrite attrKV\n  attrKV: function (key, value) {\n    // FIXME\n    if (key === 'shape') {\n      this.setShape(value);\n      this.__dirtyPath = true;\n      this._rect = null;\n    } else {\n      Displayable.prototype.attrKV.call(this, key, value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setShape: function (key, value) {\n    var shape = this.shape; // Path from string may not have shape\n\n    if (shape) {\n      if (zrUtil.isObject(key)) {\n        for (var name in key) {\n          if (key.hasOwnProperty(name)) {\n            shape[name] = key[name];\n          }\n        }\n      } else {\n        shape[key] = value;\n      }\n\n      this.dirty(true);\n    }\n\n    return this;\n  },\n  getLineScale: function () {\n    var m = this.transform; // Get the line scale.\n    // Determinant of `m` means how much the area is enlarged by the\n    // transformation. So its square root can be used as a scale factor\n    // for width.\n\n    return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10 ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1])) : 1;\n  }\n};\n/**\n * 扩展一个 Path element, 比如星形，圆等。\n * Extend a path element\n * @param {Object} props\n * @param {string} props.type Path type\n * @param {Function} props.init Initialize\n * @param {Function} props.buildPath Overwrite buildPath method\n * @param {Object} [props.style] Extended default style config\n * @param {Object} [props.shape] Extended default shape config\n */\n\nPath.extend = function (defaults) {\n  var Sub = function (opts) {\n    Path.call(this, opts);\n\n    if (defaults.style) {\n      // Extend default style\n      this.style.extendFrom(defaults.style, false);\n    } // Extend default shape\n\n\n    var defaultShape = defaults.shape;\n\n    if (defaultShape) {\n      this.shape = this.shape || {};\n      var thisShape = this.shape;\n\n      for (var name in defaultShape) {\n        if (!thisShape.hasOwnProperty(name) && defaultShape.hasOwnProperty(name)) {\n          thisShape[name] = defaultShape[name];\n        }\n      }\n    }\n\n    defaults.init && defaults.init.call(this, opts);\n  };\n\n  zrUtil.inherits(Sub, Path); // FIXME 不能 extend position, rotation 等引用对象\n\n  for (var name in defaults) {\n    // Extending prototype values and methods\n    if (name !== 'style' && name !== 'shape') {\n      Sub.prototype[name] = defaults[name];\n    }\n  }\n\n  return Sub;\n};\n\nzrUtil.inherits(Path, Displayable);\nvar _default = Path;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/Path.js\n// module id = 988\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\nvar lineStyleMixin = require(\"./mixin/lineStyle\");\n\nvar areaStyleMixin = require(\"./mixin/areaStyle\");\n\nvar textStyleMixin = require(\"./mixin/textStyle\");\n\nvar itemStyleMixin = require(\"./mixin/itemStyle\");\n\n/**\n * @module echarts/model/Model\n */\nvar mixin = zrUtil.mixin;\n/**\n * @alias module:echarts/model/Model\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} [parentModel]\n * @param {module:echarts/model/Global} [ecModel]\n */\n\nfunction Model(option, parentModel, ecModel) {\n  /**\n   * @type {module:echarts/model/Model}\n   * @readOnly\n   */\n  this.parentModel = parentModel;\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n\n  this.ecModel = ecModel;\n  /**\n   * @type {Object}\n   * @protected\n   */\n\n  this.option = option; // Simple optimization\n  // if (this.init) {\n  //     if (arguments.length <= 4) {\n  //         this.init(option, parentModel, ecModel, extraOpt);\n  //     }\n  //     else {\n  //         this.init.apply(this, arguments);\n  //     }\n  // }\n}\n\nModel.prototype = {\n  constructor: Model,\n\n  /**\n   * Model 的初始化函数\n   * @param {Object} option\n   */\n  init: null,\n\n  /**\n   * 从新的 Option merge\n   */\n  mergeOption: function (option) {\n    zrUtil.merge(this.option, option, true);\n  },\n\n  /**\n   * @param {string|Array.<string>} path\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  get: function (path, ignoreParent) {\n    if (path == null) {\n      return this.option;\n    }\n\n    return doGet(this.option, this.parsePath(path), !ignoreParent && getParent(this, path));\n  },\n\n  /**\n   * @param {string} key\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  getShallow: function (key, ignoreParent) {\n    var option = this.option;\n    var val = option == null ? option : option[key];\n    var parentModel = !ignoreParent && getParent(this, key);\n\n    if (val == null && parentModel) {\n      val = parentModel.getShallow(key);\n    }\n\n    return val;\n  },\n\n  /**\n   * @param {string|Array.<string>} [path]\n   * @param {module:echarts/model/Model} [parentModel]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path, parentModel) {\n    var obj = path == null ? this.option : doGet(this.option, path = this.parsePath(path));\n    var thisParentModel;\n    parentModel = parentModel || (thisParentModel = getParent(this, path)) && thisParentModel.getModel(path);\n    return new Model(obj, parentModel, this.ecModel);\n  },\n\n  /**\n   * If model has option\n   */\n  isEmpty: function () {\n    return this.option == null;\n  },\n  restoreData: function () {},\n  // Pending\n  clone: function () {\n    var Ctor = this.constructor;\n    return new Ctor(zrUtil.clone(this.option));\n  },\n  setReadOnly: function (properties) {\n    clazzUtil.setReadOnly(this, properties);\n  },\n  // If path is null/undefined, return null/undefined.\n  parsePath: function (path) {\n    if (typeof path === 'string') {\n      path = path.split('.');\n    }\n\n    return path;\n  },\n\n  /**\n   * @param {Function} getParentMethod\n   *        param {Array.<string>|string} path\n   *        return {module:echarts/model/Model}\n   */\n  customizeGetParent: function (getParentMethod) {\n    clazzUtil.set(this, 'getParent', getParentMethod);\n  },\n  isAnimationEnabled: function () {\n    if (!env.node) {\n      if (this.option.animation != null) {\n        return !!this.option.animation;\n      } else if (this.parentModel) {\n        return this.parentModel.isAnimationEnabled();\n      }\n    }\n  }\n};\n\nfunction doGet(obj, pathArr, parentModel) {\n  for (var i = 0; i < pathArr.length; i++) {\n    // Ignore empty\n    if (!pathArr[i]) {\n      continue;\n    } // obj could be number/string/... (like 0)\n\n\n    obj = obj && typeof obj === 'object' ? obj[pathArr[i]] : null;\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  if (obj == null && parentModel) {\n    obj = parentModel.get(pathArr);\n  }\n\n  return obj;\n} // `path` can be null/undefined\n\n\nfunction getParent(model, path) {\n  var getParentMethod = clazzUtil.get(model, 'getParent');\n  return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n} // Enable Model.extend.\n\n\nclazzUtil.enableClassExtend(Model);\nmixin(Model, lineStyleMixin);\nmixin(Model, areaStyleMixin);\nmixin(Model, textStyleMixin);\nmixin(Model, itemStyleMixin);\nvar _default = Model;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/Model.js\n// module id = 989\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _number = require(\"./number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar formatUtil = require(\"./format\");\n\n// Layout helpers for each component positioning\nvar each = zrUtil.each;\n/**\n * @public\n */\n\nvar LOCATION_PARAMS = ['left', 'right', 'top', 'bottom', 'width', 'height'];\n/**\n * @public\n */\n\nvar HV_NAMES = [['width', 'left', 'right'], ['height', 'top', 'bottom']];\n\nfunction boxLayout(orient, group, gap, maxWidth, maxHeight) {\n  var x = 0;\n  var y = 0;\n\n  if (maxWidth == null) {\n    maxWidth = Infinity;\n  }\n\n  if (maxHeight == null) {\n    maxHeight = Infinity;\n  }\n\n  var currentLineMaxSize = 0;\n  group.eachChild(function (child, idx) {\n    var position = child.position;\n    var rect = child.getBoundingRect();\n    var nextChild = group.childAt(idx + 1);\n    var nextChildRect = nextChild && nextChild.getBoundingRect();\n    var nextX;\n    var nextY;\n\n    if (orient === 'horizontal') {\n      var moveX = rect.width + (nextChildRect ? -nextChildRect.x + rect.x : 0);\n      nextX = x + moveX; // Wrap when width exceeds maxWidth or meet a `newline` group\n      // FIXME compare before adding gap?\n\n      if (nextX > maxWidth || child.newline) {\n        x = 0;\n        nextX = moveX;\n        y += currentLineMaxSize + gap;\n        currentLineMaxSize = rect.height;\n      } else {\n        // FIXME: consider rect.y is not `0`?\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n      }\n    } else {\n      var moveY = rect.height + (nextChildRect ? -nextChildRect.y + rect.y : 0);\n      nextY = y + moveY; // Wrap when width exceeds maxHeight or meet a `newline` group\n\n      if (nextY > maxHeight || child.newline) {\n        x += currentLineMaxSize + gap;\n        y = 0;\n        nextY = moveY;\n        currentLineMaxSize = rect.width;\n      } else {\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n      }\n    }\n\n    if (child.newline) {\n      return;\n    }\n\n    position[0] = x;\n    position[1] = y;\n    orient === 'horizontal' ? x = nextX + gap : y = nextY + gap;\n  });\n}\n/**\n * VBox or HBox layouting\n * @param {string} orient\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\n\nvar box = boxLayout;\n/**\n * VBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar vbox = zrUtil.curry(boxLayout, 'vertical');\n/**\n * HBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar hbox = zrUtil.curry(boxLayout, 'horizontal');\n/**\n * If x or x2 is not specified or 'center' 'left' 'right',\n * the width would be as long as possible.\n * If y or y2 is not specified or 'middle' 'top' 'bottom',\n * the height would be as long as possible.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.x]\n * @param {number|string} [positionInfo.y]\n * @param {number|string} [positionInfo.x2]\n * @param {number|string} [positionInfo.y2]\n * @param {Object} containerRect {width, height}\n * @param {string|number} margin\n * @return {Object} {width, height}\n */\n\nfunction getAvailableSize(positionInfo, containerRect, margin) {\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var x = parsePercent(positionInfo.x, containerWidth);\n  var y = parsePercent(positionInfo.y, containerHeight);\n  var x2 = parsePercent(positionInfo.x2, containerWidth);\n  var y2 = parsePercent(positionInfo.y2, containerHeight);\n  (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n  (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n  (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n  (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  return {\n    width: Math.max(x2 - x - margin[1] - margin[3], 0),\n    height: Math.max(y2 - y - margin[0] - margin[2], 0)\n  };\n}\n/**\n * Parse position info.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width]\n * @param {number|string} [positionInfo.height]\n * @param {number|string} [positionInfo.aspect] Aspect is width / height\n * @param {Object} containerRect\n * @param {string|number} [margin]\n *\n * @return {module:zrender/core/BoundingRect}\n */\n\n\nfunction getLayoutRect(positionInfo, containerRect, margin) {\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var left = parsePercent(positionInfo.left, containerWidth);\n  var top = parsePercent(positionInfo.top, containerHeight);\n  var right = parsePercent(positionInfo.right, containerWidth);\n  var bottom = parsePercent(positionInfo.bottom, containerHeight);\n  var width = parsePercent(positionInfo.width, containerWidth);\n  var height = parsePercent(positionInfo.height, containerHeight);\n  var verticalMargin = margin[2] + margin[0];\n  var horizontalMargin = margin[1] + margin[3];\n  var aspect = positionInfo.aspect; // If width is not specified, calculate width from left and right\n\n  if (isNaN(width)) {\n    width = containerWidth - right - horizontalMargin - left;\n  }\n\n  if (isNaN(height)) {\n    height = containerHeight - bottom - verticalMargin - top;\n  }\n\n  if (aspect != null) {\n    // If width and height are not given\n    // 1. Graph should not exceeds the container\n    // 2. Aspect must be keeped\n    // 3. Graph should take the space as more as possible\n    // FIXME\n    // Margin is not considered, because there is no case that both\n    // using margin and aspect so far.\n    if (isNaN(width) && isNaN(height)) {\n      if (aspect > containerWidth / containerHeight) {\n        width = containerWidth * 0.8;\n      } else {\n        height = containerHeight * 0.8;\n      }\n    } // Calculate width or height with given aspect\n\n\n    if (isNaN(width)) {\n      width = aspect * height;\n    }\n\n    if (isNaN(height)) {\n      height = width / aspect;\n    }\n  } // If left is not specified, calculate left from right and width\n\n\n  if (isNaN(left)) {\n    left = containerWidth - right - width - horizontalMargin;\n  }\n\n  if (isNaN(top)) {\n    top = containerHeight - bottom - height - verticalMargin;\n  } // Align left and top\n\n\n  switch (positionInfo.left || positionInfo.right) {\n    case 'center':\n      left = containerWidth / 2 - width / 2 - margin[3];\n      break;\n\n    case 'right':\n      left = containerWidth - width - horizontalMargin;\n      break;\n  }\n\n  switch (positionInfo.top || positionInfo.bottom) {\n    case 'middle':\n    case 'center':\n      top = containerHeight / 2 - height / 2 - margin[0];\n      break;\n\n    case 'bottom':\n      top = containerHeight - height - verticalMargin;\n      break;\n  } // If something is wrong and left, top, width, height are calculated as NaN\n\n\n  left = left || 0;\n  top = top || 0;\n\n  if (isNaN(width)) {\n    // Width may be NaN if only one value is given except width\n    width = containerWidth - horizontalMargin - left - (right || 0);\n  }\n\n  if (isNaN(height)) {\n    // Height may be NaN if only one value is given except height\n    height = containerHeight - verticalMargin - top - (bottom || 0);\n  }\n\n  var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n  rect.margin = margin;\n  return rect;\n}\n/**\n * Position a zr element in viewport\n *  Group position is specified by either\n *  {left, top}, {right, bottom}\n *  If all properties exists, right and bottom will be igonred.\n *\n * Logic:\n *     1. Scale (against origin point in parent coord)\n *     2. Rotate (against origin point in parent coord)\n *     3. Traslate (with el.position by this method)\n * So this method only fixes the last step 'Traslate', which does not affect\n * scaling and rotating.\n *\n * If be called repeatly with the same input el, the same result will be gotten.\n *\n * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width] Only for opt.boundingModel: 'raw'\n * @param {number|string} [positionInfo.height] Only for opt.boundingModel: 'raw'\n * @param {Object} containerRect\n * @param {string|number} margin\n * @param {Object} [opt]\n * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n * @param {Array.<number>} [opt.boundingMode='all']\n *        Specify how to calculate boundingRect when locating.\n *        'all': Position the boundingRect that is transformed and uioned\n *               both itself and its descendants.\n *               This mode simplies confine the elements in the bounding\n *               of their container (e.g., using 'right: 0').\n *        'raw': Position the boundingRect that is not transformed and only itself.\n *               This mode is useful when you want a element can overflow its\n *               container. (Consider a rotated circle needs to be located in a corner.)\n *               In this mode positionInfo.width/height can only be number.\n */\n\n\nfunction positionElement(el, positionInfo, containerRect, margin, opt) {\n  var h = !opt || !opt.hv || opt.hv[0];\n  var v = !opt || !opt.hv || opt.hv[1];\n  var boundingMode = opt && opt.boundingMode || 'all';\n\n  if (!h && !v) {\n    return;\n  }\n\n  var rect;\n\n  if (boundingMode === 'raw') {\n    rect = el.type === 'group' ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0) : el.getBoundingRect();\n  } else {\n    rect = el.getBoundingRect();\n\n    if (el.needLocalTransform()) {\n      var transform = el.getLocalTransform(); // Notice: raw rect may be inner object of el,\n      // which should not be modified.\n\n      rect = rect.clone();\n      rect.applyTransform(transform);\n    }\n  } // The real width and height can not be specified but calculated by the given el.\n\n\n  positionInfo = getLayoutRect(zrUtil.defaults({\n    width: rect.width,\n    height: rect.height\n  }, positionInfo), containerRect, margin); // Because 'tranlate' is the last step in transform\n  // (see zrender/core/Transformable#getLocalTransfrom),\n  // we can just only modify el.position to get final result.\n\n  var elPos = el.position;\n  var dx = h ? positionInfo.x - rect.x : 0;\n  var dy = v ? positionInfo.y - rect.y : 0;\n  el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n}\n/**\n * @param {Object} option Contains some of the properties in HV_NAMES.\n * @param {number} hvIdx 0: horizontal; 1: vertical.\n */\n\n\nfunction sizeCalculable(option, hvIdx) {\n  return option[HV_NAMES[hvIdx][0]] != null || option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null;\n}\n/**\n * Consider Case:\n * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n * through setOption or media query, using normal zrUtil.merge will cause\n * {right: 0} does not take effect.\n *\n * @example\n * ComponentModel.extend({\n *     init: function () {\n *         ...\n *         var inputPositionParams = layout.getLayoutParams(option);\n *         this.mergeOption(inputPositionParams);\n *     },\n *     mergeOption: function (newOption) {\n *         newOption && zrUtil.merge(thisOption, newOption, true);\n *         layout.mergeLayoutParam(thisOption, newOption);\n *     }\n * });\n *\n * @param {Object} targetOption\n * @param {Object} newOption\n * @param {Object|string} [opt]\n * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Used for the components\n *  that width (or height) should not be calculated by left and right (or top and bottom).\n */\n\n\nfunction mergeLayoutParam(targetOption, newOption, opt) {\n  !zrUtil.isObject(opt) && (opt = {});\n  var ignoreSize = opt.ignoreSize;\n  !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n  var hResult = merge(HV_NAMES[0], 0);\n  var vResult = merge(HV_NAMES[1], 1);\n  copy(HV_NAMES[0], targetOption, hResult);\n  copy(HV_NAMES[1], targetOption, vResult);\n\n  function merge(names, hvIdx) {\n    var newParams = {};\n    var newValueCount = 0;\n    var merged = {};\n    var mergedValueCount = 0;\n    var enoughParamNumber = 2;\n    each(names, function (name) {\n      merged[name] = targetOption[name];\n    });\n    each(names, function (name) {\n      // Consider case: newOption.width is null, which is\n      // set by user for removing width setting.\n      hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n      hasValue(newParams, name) && newValueCount++;\n      hasValue(merged, name) && mergedValueCount++;\n    });\n\n    if (ignoreSize[hvIdx]) {\n      // Only one of left/right is premitted to exist.\n      if (hasValue(newOption, names[1])) {\n        merged[names[2]] = null;\n      } else if (hasValue(newOption, names[2])) {\n        merged[names[1]] = null;\n      }\n\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // or targetOption: {right: ...} and newOption: {width: ...},\n    // There is no conflict when merged only has params count\n    // little than enoughParamNumber.\n\n\n    if (mergedValueCount === enoughParamNumber || !newValueCount) {\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // Than we can make sure user only want those two, and ignore\n    // all origin params in targetOption.\n    else if (newValueCount >= enoughParamNumber) {\n        return newParams;\n      } else {\n        // Chose another param from targetOption by priority.\n        for (var i = 0; i < names.length; i++) {\n          var name = names[i];\n\n          if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n            newParams[name] = targetOption[name];\n            break;\n          }\n        }\n\n        return newParams;\n      }\n  }\n\n  function hasProp(obj, name) {\n    return obj.hasOwnProperty(name);\n  }\n\n  function hasValue(obj, name) {\n    return obj[name] != null && obj[name] !== 'auto';\n  }\n\n  function copy(names, target, source) {\n    each(names, function (name) {\n      target[name] = source[name];\n    });\n  }\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction getLayoutParams(source) {\n  return copyLayoutParams({}, source);\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction copyLayoutParams(target, source) {\n  source && target && each(LOCATION_PARAMS, function (name) {\n    source.hasOwnProperty(name) && (target[name] = source[name]);\n  });\n  return target;\n}\n\nexports.LOCATION_PARAMS = LOCATION_PARAMS;\nexports.HV_NAMES = HV_NAMES;\nexports.box = box;\nexports.vbox = vbox;\nexports.hbox = hbox;\nexports.getAvailableSize = getAvailableSize;\nexports.getLayoutRect = getLayoutRect;\nexports.positionElement = positionElement;\nexports.sizeCalculable = sizeCalculable;\nexports.mergeLayoutParam = mergeLayoutParam;\nexports.getLayoutParams = getLayoutParams;\nexports.copyLayoutParams = copyLayoutParams;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/layout.js\n// module id = 990\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"./Model\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\nvar layout = require(\"../util/layout\");\n\nvar boxLayoutMixin = require(\"./mixin/boxLayout\");\n\n/**\n * Component model\n *\n * @module echarts/model/Component\n */\nvar arrayPush = Array.prototype.push;\n/**\n * @alias module:echarts/model/Component\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {module:echarts/model/Model} ecModel\n */\n\nvar ComponentModel = Model.extend({\n  type: 'component',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  id: '',\n\n  /**\n   * @readOnly\n   */\n  name: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  mainType: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  subType: '',\n\n  /**\n   * @readOnly\n   * @type {number}\n   */\n  componentIndex: 0,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n  ecModel: null,\n\n  /**\n   * key: componentType\n   * value:  Component model list, can not be null.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @readOnly\n   */\n  dependentModels: [],\n\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  uid: null,\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  $constructor: function (option, parentModel, ecModel, extraOpt) {\n    Model.call(this, option, parentModel, ecModel, extraOpt);\n    this.uid = componentUtil.getUID('componentModel');\n  },\n  init: function (option, parentModel, ecModel, extraOpt) {\n    this.mergeDefaultAndTheme(option, ecModel);\n  },\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? layout.getLayoutParams(option) : {};\n    var themeModel = ecModel.getTheme();\n    zrUtil.merge(option, themeModel.get(this.mainType));\n    zrUtil.merge(option, this.getDefaultOption());\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (option, extraOpt) {\n    zrUtil.merge(this.option, option, true);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(this.option, option, layoutMode);\n    }\n  },\n  // Hooker after init or mergeOption\n  optionUpdated: function (newCptOption, isInit) {},\n  getDefaultOption: function () {\n    if (!clazzUtil.hasOwn(this, '__defaultOption')) {\n      var optList = [];\n      var Class = this.constructor;\n\n      while (Class) {\n        var opt = Class.prototype.defaultOption;\n        opt && optList.push(opt);\n        Class = Class.superClass;\n      }\n\n      var defaultOption = {};\n\n      for (var i = optList.length - 1; i >= 0; i--) {\n        defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n      }\n\n      clazzUtil.set(this, '__defaultOption', defaultOption);\n    }\n\n    return clazzUtil.get(this, '__defaultOption');\n  },\n  getReferringComponents: function (mainType) {\n    return this.ecModel.queryComponents({\n      mainType: mainType,\n      index: this.get(mainType + 'Index', true),\n      id: this.get(mainType + 'Id', true)\n    });\n  }\n}); // Reset ComponentModel.extend, add preConstruct.\n// clazzUtil.enableClassExtend(\n//     ComponentModel,\n//     function (option, parentModel, ecModel, extraOpt) {\n//         // Set dependentModels, componentIndex, name, id, mainType, subType.\n//         zrUtil.extend(this, extraOpt);\n//         this.uid = componentUtil.getUID('componentModel');\n//         // this.setReadOnly([\n//         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n//         //     'dependentModels', 'componentIndex'\n//         // ]);\n//     }\n// );\n// Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(ComponentModel, {\n  registerWhenExtend: true\n});\ncomponentUtil.enableSubTypeDefaulter(ComponentModel); // Add capability of ComponentModel.topologicalTravel.\n\ncomponentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\nfunction getDependencies(componentType) {\n  var deps = [];\n  zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n    arrayPush.apply(deps, Clazz.prototype.dependencies || []);\n  }); // Ensure main type\n\n  return zrUtil.map(deps, function (type) {\n    return clazzUtil.parseClassType(type).main;\n  });\n}\n\nzrUtil.mixin(ComponentModel, boxLayoutMixin);\nvar _default = ComponentModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/Component.js\n// module id = 991\n// module chunks = 0 1 2","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar TYPE_DELIMITER = '.';\nvar IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\nvar MEMBER_PRIFIX = '\\0ec_\\0';\n/**\n * Hide private class member.\n * The same behavior as `host[name] = value;` (can be right-value)\n * @public\n */\n\nfunction set(host, name, value) {\n  return host[MEMBER_PRIFIX + name] = value;\n}\n/**\n * Hide private class member.\n * The same behavior as `host[name];`\n * @public\n */\n\n\nfunction get(host, name) {\n  return host[MEMBER_PRIFIX + name];\n}\n/**\n * For hidden private class member.\n * The same behavior as `host.hasOwnProperty(name);`\n * @public\n */\n\n\nfunction hasOwn(host, name) {\n  return host.hasOwnProperty(MEMBER_PRIFIX + name);\n}\n/**\n * Notice, parseClassType('') should returns {main: '', sub: ''}\n * @public\n */\n\n\nfunction parseClassType(componentType) {\n  var ret = {\n    main: '',\n    sub: ''\n  };\n\n  if (componentType) {\n    componentType = componentType.split(TYPE_DELIMITER);\n    ret.main = componentType[0] || '';\n    ret.sub = componentType[1] || '';\n  }\n\n  return ret;\n}\n/**\n * @public\n */\n\n\nfunction checkClassType(componentType) {\n  zrUtil.assert(/^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType), 'componentType \"' + componentType + '\" illegal');\n}\n/**\n * @public\n */\n\n\nfunction enableClassExtend(RootClass, mandatoryMethods) {\n  RootClass.$constructor = RootClass;\n\n  RootClass.extend = function (proto) {\n    var superClass = this;\n\n    var ExtendedClass = function () {\n      if (!proto.$constructor) {\n        superClass.apply(this, arguments);\n      } else {\n        proto.$constructor.apply(this, arguments);\n      }\n    };\n\n    zrUtil.extend(ExtendedClass.prototype, proto);\n    ExtendedClass.extend = this.extend;\n    ExtendedClass.superCall = superCall;\n    ExtendedClass.superApply = superApply;\n    zrUtil.inherits(ExtendedClass, this);\n    ExtendedClass.superClass = superClass;\n    return ExtendedClass;\n  };\n} // superCall should have class info, which can not be fetch from 'this'.\n// Consider this case:\n// class A has method f,\n// class B inherits class A, overrides method f, f call superApply('f'),\n// class C inherits class B, do not overrides method f,\n// then when method of class C is called, dead loop occured.\n\n\nfunction superCall(context, methodName) {\n  var args = zrUtil.slice(arguments, 2);\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n\nfunction superApply(context, methodName, args) {\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n/**\n * @param {Object} entity\n * @param {Object} options\n * @param {boolean} [options.registerWhenExtend]\n * @public\n */\n\n\nfunction enableClassManagement(entity, options) {\n  options = options || {};\n  /**\n   * Component model classes\n   * key: componentType,\n   * value:\n   *     componentClass, when componentType is 'xxx'\n   *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n   * @type {Object}\n   */\n\n  var storage = {};\n\n  entity.registerClass = function (Clazz, componentType) {\n    if (componentType) {\n      checkClassType(componentType);\n      componentType = parseClassType(componentType);\n\n      if (!componentType.sub) {\n        storage[componentType.main] = Clazz;\n      } else if (componentType.sub !== IS_CONTAINER) {\n        var container = makeContainer(componentType);\n        container[componentType.sub] = Clazz;\n      }\n    }\n\n    return Clazz;\n  };\n\n  entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n    var Clazz = storage[componentMainType];\n\n    if (Clazz && Clazz[IS_CONTAINER]) {\n      Clazz = subType ? Clazz[subType] : null;\n    }\n\n    if (throwWhenNotFound && !Clazz) {\n      throw new Error(!subType ? componentMainType + '.' + 'type should be specified.' : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.');\n    }\n\n    return Clazz;\n  };\n\n  entity.getClassesByMainType = function (componentType) {\n    componentType = parseClassType(componentType);\n    var result = [];\n    var obj = storage[componentType.main];\n\n    if (obj && obj[IS_CONTAINER]) {\n      zrUtil.each(obj, function (o, type) {\n        type !== IS_CONTAINER && result.push(o);\n      });\n    } else {\n      result.push(obj);\n    }\n\n    return result;\n  };\n\n  entity.hasClass = function (componentType) {\n    // Just consider componentType.main.\n    componentType = parseClassType(componentType);\n    return !!storage[componentType.main];\n  };\n  /**\n   * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n   */\n\n\n  entity.getAllClassMainTypes = function () {\n    var types = [];\n    zrUtil.each(storage, function (obj, type) {\n      types.push(type);\n    });\n    return types;\n  };\n  /**\n   * If a main type is container and has sub types\n   * @param  {string}  mainType\n   * @return {boolean}\n   */\n\n\n  entity.hasSubTypes = function (componentType) {\n    componentType = parseClassType(componentType);\n    var obj = storage[componentType.main];\n    return obj && obj[IS_CONTAINER];\n  };\n\n  entity.parseClassType = parseClassType;\n\n  function makeContainer(componentType) {\n    var container = storage[componentType.main];\n\n    if (!container || !container[IS_CONTAINER]) {\n      container = storage[componentType.main] = {};\n      container[IS_CONTAINER] = true;\n    }\n\n    return container;\n  }\n\n  if (options.registerWhenExtend) {\n    var originalExtend = entity.extend;\n\n    if (originalExtend) {\n      entity.extend = function (proto) {\n        var ExtendedClass = originalExtend.call(this, proto);\n        return entity.registerClass(ExtendedClass, proto.type);\n      };\n    }\n  }\n\n  return entity;\n}\n/**\n * @param {string|Array.<string>} properties\n */\n\n\nfunction setReadOnly(obj, properties) {// FIXME It seems broken in IE8 simulation of IE11\n  // if (!zrUtil.isArray(properties)) {\n  //     properties = properties != null ? [properties] : [];\n  // }\n  // zrUtil.each(properties, function (prop) {\n  //     var value = obj[prop];\n  //     Object.defineProperty\n  //         && Object.defineProperty(obj, prop, {\n  //             value: value, writable: false\n  //         });\n  //     zrUtil.isArray(obj[prop])\n  //         && Object.freeze\n  //         && Object.freeze(obj[prop]);\n  // });\n}\n\nexports.set = set;\nexports.get = get;\nexports.hasOwn = hasOwn;\nexports.parseClassType = parseClassType;\nexports.enableClassExtend = enableClassExtend;\nexports.enableClassManagement = enableClassManagement;\nexports.setReadOnly = setReadOnly;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/clazz.js\n// module id = 992\n// module chunks = 0 1 2","var BoundingRect = require(\"../core/BoundingRect\");\n\nvar imageHelper = require(\"../graphic/helper/image\");\n\nvar _util = require(\"../core/util\");\n\nvar getContext = _util.getContext;\nvar extend = _util.extend;\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar textWidthCache = {};\nvar textWidthCacheCounter = 0;\nvar TEXT_CACHE_MAX = 5000;\nvar STYLE_REG = /\\{([a-zA-Z0-9_]+)\\|([^}]*)\\}/g;\nvar DEFAULT_FONT = '12px sans-serif'; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  methods[name] = fn;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {number} width\n */\n\n\nfunction getWidth(text, font) {\n  font = font || DEFAULT_FONT;\n  var key = text + ':' + font;\n\n  if (textWidthCache[key]) {\n    return textWidthCache[key];\n  }\n\n  var textLines = (text + '').split('\\n');\n  var width = 0;\n\n  for (var i = 0, l = textLines.length; i < l; i++) {\n    // textContain.measureText may be overrided in SVG or VML\n    width = Math.max(measureText(textLines[i], font).width, width);\n  }\n\n  if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n    textWidthCacheCounter = 0;\n    textWidthCache = {};\n  }\n\n  textWidthCacheCounter++;\n  textWidthCache[key] = width;\n  return width;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {string} [textAlign='left']\n * @param {string} [textVerticalAlign='top']\n * @param {Array.<number>} [textPadding]\n * @param {Object} [rich]\n * @param {Object} [truncate]\n * @return {Object} {x, y, width, height, lineHeight}\n */\n\n\nfunction getBoundingRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  return rich ? getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) : getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate);\n}\n\nfunction getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate) {\n  var contentBlock = parsePlainText(text, font, textPadding, truncate);\n  var outerWidth = getWidth(text, font);\n\n  if (textPadding) {\n    outerWidth += textPadding[1] + textPadding[3];\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  var rect = new BoundingRect(x, y, outerWidth, outerHeight);\n  rect.lineHeight = contentBlock.lineHeight;\n  return rect;\n}\n\nfunction getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  var contentBlock = parseRichText(text, {\n    rich: rich,\n    truncate: truncate,\n    font: font,\n    textAlign: textAlign,\n    textPadding: textPadding\n  });\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  return new BoundingRect(x, y, outerWidth, outerHeight);\n}\n/**\n * @public\n * @param {number} x\n * @param {number} width\n * @param {string} [textAlign='left']\n * @return {number} Adjusted x.\n */\n\n\nfunction adjustTextX(x, width, textAlign) {\n  // FIXME Right to left language\n  if (textAlign === 'right') {\n    x -= width;\n  } else if (textAlign === 'center') {\n    x -= width / 2;\n  }\n\n  return x;\n}\n/**\n * @public\n * @param {number} y\n * @param {number} height\n * @param {string} [textVerticalAlign='top']\n * @return {number} Adjusted y.\n */\n\n\nfunction adjustTextY(y, height, textVerticalAlign) {\n  if (textVerticalAlign === 'middle') {\n    y -= height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y -= height;\n  }\n\n  return y;\n}\n/**\n * @public\n * @param {stirng} textPosition\n * @param {Object} rect {x, y, width, height}\n * @param {number} distance\n * @return {Object} {x, y, textAlign, textVerticalAlign}\n */\n\n\nfunction adjustTextPositionOnRect(textPosition, rect, distance) {\n  var x = rect.x;\n  var y = rect.y;\n  var height = rect.height;\n  var width = rect.width;\n  var halfHeight = height / 2;\n  var textAlign = 'left';\n  var textVerticalAlign = 'top';\n\n  switch (textPosition) {\n    case 'left':\n      x -= distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'right':\n      x += distance + width;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'top':\n      x += width / 2;\n      y -= distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'bottom':\n      x += width / 2;\n      y += height + distance;\n      textAlign = 'center';\n      break;\n\n    case 'inside':\n      x += width / 2;\n      y += halfHeight;\n      textAlign = 'center';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideLeft':\n      x += distance;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideRight':\n      x += width - distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideTop':\n      x += width / 2;\n      y += distance;\n      textAlign = 'center';\n      break;\n\n    case 'insideBottom':\n      x += width / 2;\n      y += height - distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideTopLeft':\n      x += distance;\n      y += distance;\n      break;\n\n    case 'insideTopRight':\n      x += width - distance;\n      y += distance;\n      textAlign = 'right';\n      break;\n\n    case 'insideBottomLeft':\n      x += distance;\n      y += height - distance;\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideBottomRight':\n      x += width - distance;\n      y += height - distance;\n      textAlign = 'right';\n      textVerticalAlign = 'bottom';\n      break;\n  }\n\n  return {\n    x: x,\n    y: y,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n/**\n * Show ellipsis if overflow.\n *\n * @public\n * @param  {string} text\n * @param  {string} containerWidth\n * @param  {string} font\n * @param  {number} [ellipsis='...']\n * @param  {Object} [options]\n * @param  {number} [options.maxIterations=3]\n * @param  {number} [options.minChar=0] If truncate result are less\n *                  then minChar, ellipsis will not show, which is\n *                  better for user hint in some cases.\n * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n * @return {string}\n */\n\n\nfunction truncateText(text, containerWidth, font, ellipsis, options) {\n  if (!containerWidth) {\n    return '';\n  }\n\n  var textLines = (text + '').split('\\n');\n  options = prepareTruncateOptions(containerWidth, font, ellipsis, options); // FIXME\n  // It is not appropriate that every line has '...' when truncate multiple lines.\n\n  for (var i = 0, len = textLines.length; i < len; i++) {\n    textLines[i] = truncateSingleLine(textLines[i], options);\n  }\n\n  return textLines.join('\\n');\n}\n\nfunction prepareTruncateOptions(containerWidth, font, ellipsis, options) {\n  options = extend({}, options);\n  options.font = font;\n  var ellipsis = retrieve2(ellipsis, '...');\n  options.maxIterations = retrieve2(options.maxIterations, 2);\n  var minChar = options.minChar = retrieve2(options.minChar, 0); // FIXME\n  // Other languages?\n\n  options.cnCharWidth = getWidth('国', font); // FIXME\n  // Consider proportional font?\n\n  var ascCharWidth = options.ascCharWidth = getWidth('a', font);\n  options.placeholder = retrieve2(options.placeholder, ''); // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n  // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n\n  var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n\n  for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n    contentWidth -= ascCharWidth;\n  }\n\n  var ellipsisWidth = getWidth(ellipsis);\n\n  if (ellipsisWidth > contentWidth) {\n    ellipsis = '';\n    ellipsisWidth = 0;\n  }\n\n  contentWidth = containerWidth - ellipsisWidth;\n  options.ellipsis = ellipsis;\n  options.ellipsisWidth = ellipsisWidth;\n  options.contentWidth = contentWidth;\n  options.containerWidth = containerWidth;\n  return options;\n}\n\nfunction truncateSingleLine(textLine, options) {\n  var containerWidth = options.containerWidth;\n  var font = options.font;\n  var contentWidth = options.contentWidth;\n\n  if (!containerWidth) {\n    return '';\n  }\n\n  var lineWidth = getWidth(textLine, font);\n\n  if (lineWidth <= containerWidth) {\n    return textLine;\n  }\n\n  for (var j = 0;; j++) {\n    if (lineWidth <= contentWidth || j >= options.maxIterations) {\n      textLine += options.ellipsis;\n      break;\n    }\n\n    var subLength = j === 0 ? estimateLength(textLine, contentWidth, options.ascCharWidth, options.cnCharWidth) : lineWidth > 0 ? Math.floor(textLine.length * contentWidth / lineWidth) : 0;\n    textLine = textLine.substr(0, subLength);\n    lineWidth = getWidth(textLine, font);\n  }\n\n  if (textLine === '') {\n    textLine = options.placeholder;\n  }\n\n  return textLine;\n}\n\nfunction estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n  var width = 0;\n  var i = 0;\n\n  for (var len = text.length; i < len && width < contentWidth; i++) {\n    var charCode = text.charCodeAt(i);\n    width += 0 <= charCode && charCode <= 127 ? ascCharWidth : cnCharWidth;\n  }\n\n  return i;\n}\n/**\n * @public\n * @param {string} font\n * @return {number} line height\n */\n\n\nfunction getLineHeight(font) {\n  // FIXME A rough approach.\n  return getWidth('国', font);\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {Object} width\n */\n\n\nfunction measureText(text, font) {\n  return methods.measureText(text, font);\n} // Avoid assign to an exported variable, for transforming to cjs.\n\n\nmethods.measureText = function (text, font) {\n  var ctx = getContext();\n  ctx.font = font || DEFAULT_FONT;\n  return ctx.measureText(text);\n};\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {Object} [truncate]\n * @return {Object} block: {lineHeight, lines, height, outerHeight}\n *  Notice: for performance, do not calculate outerWidth util needed.\n */\n\n\nfunction parsePlainText(text, font, padding, truncate) {\n  text != null && (text += '');\n  var lineHeight = getLineHeight(font);\n  var lines = text ? text.split('\\n') : [];\n  var height = lines.length * lineHeight;\n  var outerHeight = height;\n\n  if (padding) {\n    outerHeight += padding[0] + padding[2];\n  }\n\n  if (text && truncate) {\n    var truncOuterHeight = truncate.outerHeight;\n    var truncOuterWidth = truncate.outerWidth;\n\n    if (truncOuterHeight != null && outerHeight > truncOuterHeight) {\n      text = '';\n      lines = [];\n    } else if (truncOuterWidth != null) {\n      var options = prepareTruncateOptions(truncOuterWidth - (padding ? padding[1] + padding[3] : 0), font, truncate.ellipsis, {\n        minChar: truncate.minChar,\n        placeholder: truncate.placeholder\n      }); // FIXME\n      // It is not appropriate that every line has '...' when truncate multiple lines.\n\n      for (var i = 0, len = lines.length; i < len; i++) {\n        lines[i] = truncateSingleLine(lines[i], options);\n      }\n    }\n  }\n\n  return {\n    lines: lines,\n    height: height,\n    outerHeight: outerHeight,\n    lineHeight: lineHeight\n  };\n}\n/**\n * For example: 'some text {a|some text}other text{b|some text}xxx{c|}xxx'\n * Also consider 'bbbb{a|xxx\\nzzz}xxxx\\naaaa'.\n *\n * @public\n * @param {string} text\n * @param {Object} style\n * @return {Object} block\n * {\n *      width,\n *      height,\n *      lines: [{\n *          lineHeight,\n *          width,\n *          tokens: [[{\n *              styleName,\n *              text,\n *              width,      // include textPadding\n *              height,     // include textPadding\n *              textWidth, // pure text width\n *              textHeight, // pure text height\n *              lineHeihgt,\n *              font,\n *              textAlign,\n *              textVerticalAlign\n *          }], [...], ...]\n *      }, ...]\n * }\n * If styleName is undefined, it is plain text.\n */\n\n\nfunction parseRichText(text, style) {\n  var contentBlock = {\n    lines: [],\n    width: 0,\n    height: 0\n  };\n  text != null && (text += '');\n\n  if (!text) {\n    return contentBlock;\n  }\n\n  var lastIndex = STYLE_REG.lastIndex = 0;\n  var result;\n\n  while ((result = STYLE_REG.exec(text)) != null) {\n    var matchedIndex = result.index;\n\n    if (matchedIndex > lastIndex) {\n      pushTokens(contentBlock, text.substring(lastIndex, matchedIndex));\n    }\n\n    pushTokens(contentBlock, result[2], result[1]);\n    lastIndex = STYLE_REG.lastIndex;\n  }\n\n  if (lastIndex < text.length) {\n    pushTokens(contentBlock, text.substring(lastIndex, text.length));\n  }\n\n  var lines = contentBlock.lines;\n  var contentHeight = 0;\n  var contentWidth = 0; // For `textWidth: 100%`\n\n  var pendingList = [];\n  var stlPadding = style.textPadding;\n  var truncate = style.truncate;\n  var truncateWidth = truncate && truncate.outerWidth;\n  var truncateHeight = truncate && truncate.outerHeight;\n\n  if (stlPadding) {\n    truncateWidth != null && (truncateWidth -= stlPadding[1] + stlPadding[3]);\n    truncateHeight != null && (truncateHeight -= stlPadding[0] + stlPadding[2]);\n  } // Calculate layout info of tokens.\n\n\n  for (var i = 0; i < lines.length; i++) {\n    var line = lines[i];\n    var lineHeight = 0;\n    var lineWidth = 0;\n\n    for (var j = 0; j < line.tokens.length; j++) {\n      var token = line.tokens[j];\n      var tokenStyle = token.styleName && style.rich[token.styleName] || {}; // textPadding should not inherit from style.\n\n      var textPadding = token.textPadding = tokenStyle.textPadding; // textFont has been asigned to font by `normalizeStyle`.\n\n      var font = token.font = tokenStyle.font || style.font; // textHeight can be used when textVerticalAlign is specified in token.\n\n      var tokenHeight = token.textHeight = retrieve2( // textHeight should not be inherited, consider it can be specified\n      // as box height of the block.\n      tokenStyle.textHeight, getLineHeight(font));\n      textPadding && (tokenHeight += textPadding[0] + textPadding[2]);\n      token.height = tokenHeight;\n      token.lineHeight = retrieve3(tokenStyle.textLineHeight, style.textLineHeight, tokenHeight);\n      token.textAlign = tokenStyle && tokenStyle.textAlign || style.textAlign;\n      token.textVerticalAlign = tokenStyle && tokenStyle.textVerticalAlign || 'middle';\n\n      if (truncateHeight != null && contentHeight + token.lineHeight > truncateHeight) {\n        return {\n          lines: [],\n          width: 0,\n          height: 0\n        };\n      }\n\n      token.textWidth = getWidth(token.text, font);\n      var tokenWidth = tokenStyle.textWidth;\n      var tokenWidthNotSpecified = tokenWidth == null || tokenWidth === 'auto'; // Percent width, can be `100%`, can be used in drawing separate\n      // line when box width is needed to be auto.\n\n      if (typeof tokenWidth === 'string' && tokenWidth.charAt(tokenWidth.length - 1) === '%') {\n        token.percentWidth = tokenWidth;\n        pendingList.push(token);\n        tokenWidth = 0; // Do not truncate in this case, because there is no user case\n        // and it is too complicated.\n      } else {\n        if (tokenWidthNotSpecified) {\n          tokenWidth = token.textWidth; // FIXME: If image is not loaded and textWidth is not specified, calling\n          // `getBoundingRect()` will not get correct result.\n\n          var textBackgroundColor = tokenStyle.textBackgroundColor;\n          var bgImg = textBackgroundColor && textBackgroundColor.image; // Use cases:\n          // (1) If image is not loaded, it will be loaded at render phase and call\n          // `dirty()` and `textBackgroundColor.image` will be replaced with the loaded\n          // image, and then the right size will be calculated here at the next tick.\n          // See `graphic/helper/text.js`.\n          // (2) If image loaded, and `textBackgroundColor.image` is image src string,\n          // use `imageHelper.findExistImage` to find cached image.\n          // `imageHelper.findExistImage` will always be called here before\n          // `imageHelper.createOrUpdateImage` in `graphic/helper/text.js#renderRichText`\n          // which ensures that image will not be rendered before correct size calcualted.\n\n          if (bgImg) {\n            bgImg = imageHelper.findExistImage(bgImg);\n\n            if (imageHelper.isImageReady(bgImg)) {\n              tokenWidth = Math.max(tokenWidth, bgImg.width * tokenHeight / bgImg.height);\n            }\n          }\n        }\n\n        var paddingW = textPadding ? textPadding[1] + textPadding[3] : 0;\n        tokenWidth += paddingW;\n        var remianTruncWidth = truncateWidth != null ? truncateWidth - lineWidth : null;\n\n        if (remianTruncWidth != null && remianTruncWidth < tokenWidth) {\n          if (!tokenWidthNotSpecified || remianTruncWidth < paddingW) {\n            token.text = '';\n            token.textWidth = tokenWidth = 0;\n          } else {\n            token.text = truncateText(token.text, remianTruncWidth - paddingW, font, truncate.ellipsis, {\n              minChar: truncate.minChar\n            });\n            token.textWidth = getWidth(token.text, font);\n            tokenWidth = token.textWidth + paddingW;\n          }\n        }\n      }\n\n      lineWidth += token.width = tokenWidth;\n      tokenStyle && (lineHeight = Math.max(lineHeight, token.lineHeight));\n    }\n\n    line.width = lineWidth;\n    line.lineHeight = lineHeight;\n    contentHeight += lineHeight;\n    contentWidth = Math.max(contentWidth, lineWidth);\n  }\n\n  contentBlock.outerWidth = contentBlock.width = retrieve2(style.textWidth, contentWidth);\n  contentBlock.outerHeight = contentBlock.height = retrieve2(style.textHeight, contentHeight);\n\n  if (stlPadding) {\n    contentBlock.outerWidth += stlPadding[1] + stlPadding[3];\n    contentBlock.outerHeight += stlPadding[0] + stlPadding[2];\n  }\n\n  for (var i = 0; i < pendingList.length; i++) {\n    var token = pendingList[i];\n    var percentWidth = token.percentWidth; // Should not base on outerWidth, because token can not be placed out of padding.\n\n    token.width = parseInt(percentWidth, 10) / 100 * contentWidth;\n  }\n\n  return contentBlock;\n}\n\nfunction pushTokens(block, str, styleName) {\n  var isEmptyStr = str === '';\n  var strs = str.split('\\n');\n  var lines = block.lines;\n\n  for (var i = 0; i < strs.length; i++) {\n    var text = strs[i];\n    var token = {\n      styleName: styleName,\n      text: text,\n      isLineHolder: !text && !isEmptyStr\n    }; // The first token should be appended to the last line.\n\n    if (!i) {\n      var tokens = (lines[lines.length - 1] || (lines[0] = {\n        tokens: []\n      })).tokens; // Consider cases:\n      // (1) ''.split('\\n') => ['', '\\n', ''], the '' at the first item\n      // (which is a placeholder) should be replaced by new token.\n      // (2) A image backage, where token likes {a|}.\n      // (3) A redundant '' will affect textAlign in line.\n      // (4) tokens with the same tplName should not be merged, because\n      // they should be displayed in different box (with border and padding).\n\n      var tokensLen = tokens.length;\n      tokensLen === 1 && tokens[0].isLineHolder ? tokens[0] = token : // Consider text is '', only insert when it is the \"lineHolder\" or\n      // \"emptyStr\". Otherwise a redundant '' will affect textAlign in line.\n      (text || !tokensLen || isEmptyStr) && tokens.push(token);\n    } // Other tokens always start a new line.\n    else {\n        // If there is '', insert it as a placeholder.\n        lines.push({\n          tokens: [token]\n        });\n      }\n  }\n}\n\nfunction makeFont(style) {\n  // FIXME in node-canvas fontWeight is before fontStyle\n  // Use `fontSize` `fontFamily` to check whether font properties are defined.\n  return (style.fontSize || style.fontFamily) && [style.fontStyle, style.fontWeight, (style.fontSize || 12) + 'px', // If font properties are defined, `fontFamily` should not be ignored.\n  style.fontFamily || 'sans-serif'].join(' ') || style.textFont || style.font;\n}\n\nexports.DEFAULT_FONT = DEFAULT_FONT;\nexports.$override = $override;\nexports.getWidth = getWidth;\nexports.getBoundingRect = getBoundingRect;\nexports.adjustTextX = adjustTextX;\nexports.adjustTextY = adjustTextY;\nexports.adjustTextPositionOnRect = adjustTextPositionOnRect;\nexports.truncateText = truncateText;\nexports.getLineHeight = getLineHeight;\nexports.measureText = measureText;\nexports.parsePlainText = parsePlainText;\nexports.parseRichText = parseRichText;\nexports.makeFont = makeFont;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/contain/text.js\n// module id = 993\n// module chunks = 0 1 2","/**\n * 3x2矩阵操作类\n * @exports zrender/tool/matrix\n */\nvar ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * 创建一个单位矩阵\n * @return {Float32Array|Array.<number>}\n */\n\nfunction create() {\n  var out = new ArrayCtor(6);\n  identity(out);\n  return out;\n}\n/**\n * 设置矩阵为单位矩阵\n * @param {Float32Array|Array.<number>} out\n */\n\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * 复制矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m\n */\n\n\nfunction copy(out, m) {\n  out[0] = m[0];\n  out[1] = m[1];\n  out[2] = m[2];\n  out[3] = m[3];\n  out[4] = m[4];\n  out[5] = m[5];\n  return out;\n}\n/**\n * 矩阵相乘\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m1\n * @param {Float32Array|Array.<number>} m2\n */\n\n\nfunction mul(out, m1, m2) {\n  // Consider matrix.mul(m, m2, m);\n  // where out is the same as m2.\n  // So use temp variable to escape error.\n  var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n  var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n  var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n  var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n  var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n  var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = out3;\n  out[4] = out4;\n  out[5] = out5;\n  return out;\n}\n/**\n * 平移变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction translate(out, a, v) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4] + v[0];\n  out[5] = a[5] + v[1];\n  return out;\n}\n/**\n * 旋转变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {number} rad\n */\n\n\nfunction rotate(out, a, rad) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var st = Math.sin(rad);\n  var ct = Math.cos(rad);\n  out[0] = aa * ct + ab * st;\n  out[1] = -aa * st + ab * ct;\n  out[2] = ac * ct + ad * st;\n  out[3] = -ac * st + ct * ad;\n  out[4] = ct * atx + st * aty;\n  out[5] = ct * aty - st * atx;\n  return out;\n}\n/**\n * 缩放变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction scale(out, a, v) {\n  var vx = v[0];\n  var vy = v[1];\n  out[0] = a[0] * vx;\n  out[1] = a[1] * vy;\n  out[2] = a[2] * vx;\n  out[3] = a[3] * vy;\n  out[4] = a[4] * vx;\n  out[5] = a[5] * vy;\n  return out;\n}\n/**\n * 求逆矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n */\n\n\nfunction invert(out, a) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var det = aa * ad - ab * ac;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n\nexports.create = create;\nexports.identity = identity;\nexports.copy = copy;\nexports.mul = mul;\nexports.translate = translate;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.invert = invert;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/matrix.js\n// module id = 994\n// module chunks = 0 1 2","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../model/Model\");\n\nvar DataDiffer = require(\"./DataDiffer\");\n\nvar modelUtil = require(\"../util/model\");\n\n/**\n * List for data storage\n * @module echarts/data/List\n */\nvar isObject = zrUtil.isObject;\nvar UNDEFINED = 'undefined';\nvar globalObj = typeof window === UNDEFINED ? global : window;\nvar dataCtors = {\n  'float': typeof globalObj.Float64Array === UNDEFINED ? Array : globalObj.Float64Array,\n  'int': typeof globalObj.Int32Array === UNDEFINED ? Array : globalObj.Int32Array,\n  // Ordinal data type can be string or int\n  'ordinal': Array,\n  'number': Array,\n  'time': Array\n};\nvar TRANSFERABLE_PROPERTIES = ['stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'];\n\nfunction transferProperties(a, b) {\n  zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n    if (b.hasOwnProperty(propName)) {\n      a[propName] = b[propName];\n    }\n  });\n  a.__wrappedMethods = b.__wrappedMethods;\n}\n\nfunction DefaultDataProvider(dataArray) {\n  this._array = dataArray || [];\n}\n\nDefaultDataProvider.prototype.pure = false;\n\nDefaultDataProvider.prototype.count = function () {\n  return this._array.length;\n};\n\nDefaultDataProvider.prototype.getItem = function (idx) {\n  return this._array[idx];\n};\n/**\n * @constructor\n * @alias module:echarts/data/List\n *\n * @param {Array.<string|Object>} dimensions\n *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n * @param {module:echarts/model/Model} hostModel\n */\n\n\nvar List = function (dimensions, hostModel) {\n  dimensions = dimensions || ['x', 'y'];\n  var dimensionInfos = {};\n  var dimensionNames = [];\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimensionName;\n    var dimensionInfo = {};\n\n    if (typeof dimensions[i] === 'string') {\n      dimensionName = dimensions[i];\n      dimensionInfo = {\n        name: dimensionName,\n        coordDim: dimensionName,\n        coordDimIndex: 0,\n        stackable: false,\n        // Type can be 'float', 'int', 'number'\n        // Default is number, Precision of float may not enough\n        type: 'number'\n      };\n    } else {\n      dimensionInfo = dimensions[i];\n      dimensionName = dimensionInfo.name;\n      dimensionInfo.type = dimensionInfo.type || 'number';\n\n      if (!dimensionInfo.coordDim) {\n        dimensionInfo.coordDim = dimensionName;\n        dimensionInfo.coordDimIndex = 0;\n      }\n    }\n\n    dimensionInfo.otherDims = dimensionInfo.otherDims || {};\n    dimensionNames.push(dimensionName);\n    dimensionInfos[dimensionName] = dimensionInfo;\n  }\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n\n\n  this.dimensions = dimensionNames;\n  /**\n   * Infomation of each data dimension, like data type.\n   * @type {Object}\n   */\n\n  this._dimensionInfos = dimensionInfos;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.hostModel = hostModel;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.dataType;\n  /**\n   * Indices stores the indices of data subset after filtered.\n   * This data subset will be used in chart.\n   * @type {Array.<number>}\n   * @readOnly\n   */\n\n  this.indices = [];\n  /**\n   * Data storage\n   * @type {Object.<key, TypedArray|Array>}\n   * @private\n   */\n\n  this._storage = {};\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._nameList = [];\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._idList = [];\n  /**\n   * Models of data option is stored sparse for optimizing memory cost\n   * @type {Array.<module:echarts/model/Model>}\n   * @private\n   */\n\n  this._optionModels = [];\n  /**\n   * @param {module:echarts/data/List}\n   */\n\n  this.stackedOn = null;\n  /**\n   * Global visual properties after visual coding\n   * @type {Object}\n   * @private\n   */\n\n  this._visual = {};\n  /**\n   * Globel layout properties.\n   * @type {Object}\n   * @private\n   */\n\n  this._layout = {};\n  /**\n   * Item visual properties after visual coding\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemVisuals = [];\n  /**\n   * Item layout properties after layout\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemLayouts = [];\n  /**\n   * Graphic elemnents\n   * @type {Array.<module:zrender/Element>}\n   * @private\n   */\n\n  this._graphicEls = [];\n  /**\n   * @type {Array.<Array|Object>}\n   * @private\n   */\n\n  this._rawData;\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._extent;\n};\n\nvar listProto = List.prototype;\nlistProto.type = 'list';\n/**\n * If each data item has it's own option\n * @type {boolean}\n */\n\nlistProto.hasItemOption = true;\n/**\n * Get dimension name\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n * @return {string} Concrete dim name.\n */\n\nlistProto.getDimension = function (dim) {\n  if (!isNaN(dim)) {\n    dim = this.dimensions[dim] || dim;\n  }\n\n  return dim;\n};\n/**\n * Get type and stackable info of particular dimension\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n */\n\n\nlistProto.getDimensionInfo = function (dim) {\n  return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);\n};\n/**\n * Initialize from data\n * @param {Array.<Object|number|Array>} data\n * @param {Array.<string>} [nameList]\n * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n */\n\n\nlistProto.initData = function (data, nameList, dimValueGetter) {\n  data = data || [];\n  var isDataArray = zrUtil.isArray(data);\n\n  if (isDataArray) {\n    data = new DefaultDataProvider(data);\n  }\n\n  this._rawData = data; // Clear\n\n  var storage = this._storage = {};\n  var indices = this.indices = [];\n  var dimensions = this.dimensions;\n  var dimensionInfoMap = this._dimensionInfos;\n  var size = data.count();\n  var idList = [];\n  var nameRepeatCount = {};\n  var nameDimIdx;\n  nameList = nameList || []; // Init storage\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimInfo = dimensionInfoMap[dimensions[i]];\n    dimInfo.otherDims.itemName === 0 && (nameDimIdx = i);\n    var DataCtor = dataCtors[dimInfo.type];\n    storage[dimensions[i]] = new DataCtor(size);\n  }\n\n  var self = this;\n\n  if (!dimValueGetter) {\n    self.hasItemOption = false;\n  } // Default dim value getter\n\n\n  dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {\n    var value = modelUtil.getDataItemValue(dataItem); // If any dataItem is like { value: 10 }\n\n    if (modelUtil.isDataItemOption(dataItem)) {\n      self.hasItemOption = true;\n    }\n\n    return modelUtil.converDataValue(value instanceof Array ? value[dimIndex] // If value is a single number or something else not array.\n    : value, dimensionInfoMap[dimName]);\n  };\n\n  for (var i = 0; i < size; i++) {\n    // NOTICE: Try not to write things into dataItem\n    var dataItem = data.getItem(i); // Each data item is value\n    // [1, 2]\n    // 2\n    // Bar chart, line chart which uses category axis\n    // only gives the 'y' value. 'x' value is the indices of cateogry\n    // Use a tempValue to normalize the value to be a (x, y) value\n    // Store the data by dimensions\n\n    for (var k = 0; k < dimensions.length; k++) {\n      var dim = dimensions[k];\n      var dimStorage = storage[dim]; // PENDING NULL is empty or zero\n\n      dimStorage[i] = dimValueGetter(dataItem, dim, i, k);\n    }\n\n    indices.push(i);\n  } // Use the name in option and create id\n\n\n  for (var i = 0; i < size; i++) {\n    var dataItem = data.getItem(i);\n\n    if (!nameList[i] && dataItem) {\n      if (dataItem.name != null) {\n        nameList[i] = dataItem.name;\n      } else if (nameDimIdx != null) {\n        nameList[i] = storage[dimensions[nameDimIdx]][i];\n      }\n    }\n\n    var name = nameList[i] || ''; // Try using the id in option\n\n    var id = dataItem && dataItem.id;\n\n    if (!id && name) {\n      // Use name as id and add counter to avoid same name\n      nameRepeatCount[name] = nameRepeatCount[name] || 0;\n      id = name;\n\n      if (nameRepeatCount[name] > 0) {\n        id += '__ec__' + nameRepeatCount[name];\n      }\n\n      nameRepeatCount[name]++;\n    }\n\n    id && (idList[i] = id);\n  }\n\n  this._nameList = nameList;\n  this._idList = idList;\n};\n/**\n * @return {number}\n */\n\n\nlistProto.count = function () {\n  return this.indices.length;\n};\n/**\n * Get value. Return NaN if idx is out of range.\n * @param {string} dim Dim must be concrete name.\n * @param {number} idx\n * @param {boolean} stack\n * @return {number}\n */\n\n\nlistProto.get = function (dim, idx, stack) {\n  var storage = this._storage;\n  var dataIndex = this.indices[idx]; // If value not exists\n\n  if (dataIndex == null || !storage[dim]) {\n    return NaN;\n  }\n\n  var value = storage[dim][dataIndex]; // FIXME ordinal data type is not stackable\n\n  if (stack) {\n    var dimensionInfo = this._dimensionInfos[dim];\n\n    if (dimensionInfo && dimensionInfo.stackable) {\n      var stackedOn = this.stackedOn;\n\n      while (stackedOn) {\n        // Get no stacked data of stacked on\n        var stackedValue = stackedOn.get(dim, idx); // Considering positive stack, negative stack and empty data\n\n        if (value >= 0 && stackedValue > 0 || // Positive stack\n        value <= 0 && stackedValue < 0 // Negative stack\n        ) {\n            value += stackedValue;\n          }\n\n        stackedOn = stackedOn.stackedOn;\n      }\n    }\n  }\n\n  return value;\n};\n/**\n * Get value for multi dimensions.\n * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n * @param {number} idx\n * @param {boolean} stack\n * @return {number}\n */\n\n\nlistProto.getValues = function (dimensions, idx, stack) {\n  var values = [];\n\n  if (!zrUtil.isArray(dimensions)) {\n    stack = idx;\n    idx = dimensions;\n    dimensions = this.dimensions;\n  }\n\n  for (var i = 0, len = dimensions.length; i < len; i++) {\n    values.push(this.get(dimensions[i], idx, stack));\n  }\n\n  return values;\n};\n/**\n * If value is NaN. Inlcuding '-'\n * @param {string} dim\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.hasValue = function (idx) {\n  var dimensions = this.dimensions;\n  var dimensionInfos = this._dimensionInfos;\n\n  for (var i = 0, len = dimensions.length; i < len; i++) {\n    if ( // Ordinal type can be string or number\n    dimensionInfos[dimensions[i]].type !== 'ordinal' && isNaN(this.get(dimensions[i], idx))) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Get extent of data in one dimension\n * @param {string} dim\n * @param {boolean} stack\n * @param {Function} filter\n */\n\n\nlistProto.getDataExtent = function (dim, stack, filter) {\n  dim = this.getDimension(dim);\n  var dimData = this._storage[dim];\n  var dimInfo = this.getDimensionInfo(dim);\n  stack = dimInfo && dimInfo.stackable && stack;\n  var dimExtent = (this._extent || (this._extent = {}))[dim + !!stack];\n  var value;\n\n  if (dimExtent) {\n    return dimExtent;\n  } // var dimInfo = this._dimensionInfos[dim];\n\n\n  if (dimData) {\n    var min = Infinity;\n    var max = -Infinity; // var isOrdinal = dimInfo.type === 'ordinal';\n\n    for (var i = 0, len = this.count(); i < len; i++) {\n      value = this.get(dim, i, stack); // FIXME\n      // if (isOrdinal && typeof value === 'string') {\n      //     value = zrUtil.indexOf(dimData, value);\n      // }\n\n      if (!filter || filter(value, dim, i)) {\n        value < min && (min = value);\n        value > max && (max = value);\n      }\n    }\n\n    return this._extent[dim + !!stack] = [min, max];\n  } else {\n    return [Infinity, -Infinity];\n  }\n};\n/**\n * Get sum of data in one dimension\n * @param {string} dim\n * @param {boolean} stack\n */\n\n\nlistProto.getSum = function (dim, stack) {\n  var dimData = this._storage[dim];\n  var sum = 0;\n\n  if (dimData) {\n    for (var i = 0, len = this.count(); i < len; i++) {\n      var value = this.get(dim, i, stack);\n\n      if (!isNaN(value)) {\n        sum += value;\n      }\n    }\n  }\n\n  return sum;\n};\n/**\n * Retreive the index with given value\n * @param {number} idx\n * @param {number} value\n * @return {number}\n */\n// FIXME Precision of float value\n\n\nlistProto.indexOf = function (dim, value) {\n  var storage = this._storage;\n  var dimData = storage[dim];\n  var indices = this.indices;\n\n  if (dimData) {\n    for (var i = 0, len = indices.length; i < len; i++) {\n      var rawIndex = indices[i];\n\n      if (dimData[rawIndex] === value) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index with given name\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfName = function (name) {\n  var indices = this.indices;\n  var nameList = this._nameList;\n\n  for (var i = 0, len = indices.length; i < len; i++) {\n    var rawIndex = indices[i];\n\n    if (nameList[rawIndex] === name) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index with given raw data index\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfRawIndex = function (rawIndex) {\n  // Indices are ascending\n  var indices = this.indices; // If rawIndex === dataIndex\n\n  var rawDataIndex = indices[rawIndex];\n\n  if (rawDataIndex != null && rawDataIndex === rawIndex) {\n    return rawIndex;\n  }\n\n  var left = 0;\n  var right = indices.length - 1;\n\n  while (left <= right) {\n    var mid = (left + right) / 2 | 0;\n\n    if (indices[mid] < rawIndex) {\n      left = mid + 1;\n    } else if (indices[mid] > rawIndex) {\n      right = mid - 1;\n    } else {\n      return mid;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index of nearest value\n * @param {string} dim\n * @param {number} value\n * @param {boolean} stack If given value is after stacked\n * @param {number} [maxDistance=Infinity]\n * @return {Array.<number>} Considere multiple points has the same value.\n */\n\n\nlistProto.indicesOfNearest = function (dim, value, stack, maxDistance) {\n  var storage = this._storage;\n  var dimData = storage[dim];\n  var nearestIndices = [];\n\n  if (!dimData) {\n    return nearestIndices;\n  }\n\n  if (maxDistance == null) {\n    maxDistance = Infinity;\n  }\n\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n\n  for (var i = 0, len = this.count(); i < len; i++) {\n    var diff = value - this.get(dim, i, stack);\n    var dist = Math.abs(diff);\n\n    if (diff <= maxDistance && dist <= minDist) {\n      // For the case of two data are same on xAxis, which has sequence data.\n      // Show the nearest index\n      // https://github.com/ecomfe/echarts/issues/2869\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        nearestIndices.length = 0;\n      }\n\n      nearestIndices.push(i);\n    }\n  }\n\n  return nearestIndices;\n};\n/**\n * Get raw data index\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawIndex = function (idx) {\n  var rawIdx = this.indices[idx];\n  return rawIdx == null ? -1 : rawIdx;\n};\n/**\n * Get raw data item\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawDataItem = function (idx) {\n  return this._rawData.getItem(this.getRawIndex(idx));\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getName = function (idx) {\n  return this._nameList[this.indices[idx]] || '';\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getId = function (idx) {\n  return this._idList[this.indices[idx]] || this.getRawIndex(idx) + '';\n};\n\nfunction normalizeDimensions(dimensions) {\n  if (!zrUtil.isArray(dimensions)) {\n    dimensions = [dimensions];\n  }\n\n  return dimensions;\n}\n/**\n * Data iteration\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n *\n * @example\n *  list.each('x', function (x, idx) {});\n *  list.each(['x', 'y'], function (x, y, idx) {});\n *  list.each(function (idx) {})\n */\n\n\nlistProto.each = function (dims, cb, stack, context) {\n  if (typeof dims === 'function') {\n    context = stack;\n    stack = cb;\n    cb = dims;\n    dims = [];\n  }\n\n  dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n  var value = [];\n  var dimSize = dims.length;\n  var indices = this.indices;\n  context = context || this;\n\n  for (var i = 0; i < indices.length; i++) {\n    // Simple optimization\n    switch (dimSize) {\n      case 0:\n        cb.call(context, i);\n        break;\n\n      case 1:\n        cb.call(context, this.get(dims[0], i, stack), i);\n        break;\n\n      case 2:\n        cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n        break;\n\n      default:\n        for (var k = 0; k < dimSize; k++) {\n          value[k] = this.get(dims[k], i, stack);\n        } // Index\n\n\n        value[k] = i;\n        cb.apply(context, value);\n    }\n  }\n};\n/**\n * Data filter\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n */\n\n\nlistProto.filterSelf = function (dimensions, cb, stack, context) {\n  if (typeof dimensions === 'function') {\n    context = stack;\n    stack = cb;\n    cb = dimensions;\n    dimensions = [];\n  }\n\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var newIndices = [];\n  var value = [];\n  var dimSize = dimensions.length;\n  var indices = this.indices;\n  context = context || this;\n\n  for (var i = 0; i < indices.length; i++) {\n    var keep; // Simple optimization\n\n    if (!dimSize) {\n      keep = cb.call(context, i);\n    } else if (dimSize === 1) {\n      keep = cb.call(context, this.get(dimensions[0], i, stack), i);\n    } else {\n      for (var k = 0; k < dimSize; k++) {\n        value[k] = this.get(dimensions[k], i, stack);\n      }\n\n      value[k] = i;\n      keep = cb.apply(context, value);\n    }\n\n    if (keep) {\n      newIndices.push(indices[i]);\n    }\n  }\n\n  this.indices = newIndices; // Reset data extent\n\n  this._extent = {};\n  return this;\n};\n/**\n * Data mapping to a plain array\n * @param {string|Array.<string>} [dimensions]\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.mapArray = function (dimensions, cb, stack, context) {\n  if (typeof dimensions === 'function') {\n    context = stack;\n    stack = cb;\n    cb = dimensions;\n    dimensions = [];\n  }\n\n  var result = [];\n  this.each(dimensions, function () {\n    result.push(cb && cb.apply(this, arguments));\n  }, stack, context);\n  return result;\n};\n\nfunction cloneListForMapAndSample(original, excludeDimensions) {\n  var allDimensions = original.dimensions;\n  var list = new List(zrUtil.map(allDimensions, original.getDimensionInfo, original), original.hostModel); // FIXME If needs stackedOn, value may already been stacked\n\n  transferProperties(list, original);\n  var storage = list._storage = {};\n  var originalStorage = original._storage; // Init storage\n\n  for (var i = 0; i < allDimensions.length; i++) {\n    var dim = allDimensions[i];\n    var dimStore = originalStorage[dim];\n\n    if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n      storage[dim] = new dimStore.constructor(originalStorage[dim].length);\n    } else {\n      // Direct reference for other dimensions\n      storage[dim] = originalStorage[dim];\n    }\n  }\n\n  return list;\n}\n/**\n * Data mapping to a new List with given dimensions\n * @param {string|Array.<string>} dimensions\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.map = function (dimensions, cb, stack, context) {\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var list = cloneListForMapAndSample(this, dimensions); // Following properties are all immutable.\n  // So we can reference to the same value\n\n  var indices = list.indices = this.indices;\n  var storage = list._storage;\n  var tmpRetValue = [];\n  this.each(dimensions, function () {\n    var idx = arguments[arguments.length - 1];\n    var retValue = cb && cb.apply(this, arguments);\n\n    if (retValue != null) {\n      // a number\n      if (typeof retValue === 'number') {\n        tmpRetValue[0] = retValue;\n        retValue = tmpRetValue;\n      }\n\n      for (var i = 0; i < retValue.length; i++) {\n        var dim = dimensions[i];\n        var dimStore = storage[dim];\n        var rawIdx = indices[idx];\n\n        if (dimStore) {\n          dimStore[rawIdx] = retValue[i];\n        }\n      }\n    }\n  }, stack, context);\n  return list;\n};\n/**\n * Large data down sampling on given dimension\n * @param {string} dimension\n * @param {number} rate\n * @param {Function} sampleValue\n * @param {Function} sampleIndex Sample index for name and id\n */\n\n\nlistProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n  var list = cloneListForMapAndSample(this, [dimension]);\n  var storage = this._storage;\n  var targetStorage = list._storage;\n  var originalIndices = this.indices;\n  var indices = list.indices = [];\n  var frameValues = [];\n  var frameIndices = [];\n  var frameSize = Math.floor(1 / rate);\n  var dimStore = targetStorage[dimension];\n  var len = this.count(); // Copy data from original data\n\n  for (var i = 0; i < storage[dimension].length; i++) {\n    targetStorage[dimension][i] = storage[dimension][i];\n  }\n\n  for (var i = 0; i < len; i += frameSize) {\n    // Last frame\n    if (frameSize > len - i) {\n      frameSize = len - i;\n      frameValues.length = frameSize;\n    }\n\n    for (var k = 0; k < frameSize; k++) {\n      var idx = originalIndices[i + k];\n      frameValues[k] = dimStore[idx];\n      frameIndices[k] = idx;\n    }\n\n    var value = sampleValue(frameValues);\n    var idx = frameIndices[sampleIndex(frameValues, value) || 0]; // Only write value on the filtered data\n\n    dimStore[idx] = value;\n    indices.push(idx);\n  }\n\n  return list;\n};\n/**\n * Get model of one data item.\n *\n * @param {number} idx\n */\n// FIXME Model proxy ?\n\n\nlistProto.getItemModel = function (idx) {\n  var hostModel = this.hostModel;\n  idx = this.indices[idx];\n  return new Model(this._rawData.getItem(idx), hostModel, hostModel && hostModel.ecModel);\n};\n/**\n * Create a data differ\n * @param {module:echarts/data/List} otherList\n * @return {module:echarts/data/DataDiffer}\n */\n\n\nlistProto.diff = function (otherList) {\n  var idList = this._idList;\n  var otherIdList = otherList && otherList._idList;\n  var val; // Use prefix to avoid index to be the same as otherIdList[idx],\n  // which will cause weird udpate animation.\n\n  var prefix = 'e\\0\\0';\n  return new DataDiffer(otherList ? otherList.indices : [], this.indices, function (idx) {\n    return (val = otherIdList[idx]) != null ? val : prefix + idx;\n  }, function (idx) {\n    return (val = idList[idx]) != null ? val : prefix + idx;\n  });\n};\n/**\n * Get visual property.\n * @param {string} key\n */\n\n\nlistProto.getVisual = function (key) {\n  var visual = this._visual;\n  return visual && visual[key];\n};\n/**\n * Set visual property\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setVisual('color', color);\n *  setVisual({\n *      'color': color\n *  });\n */\n\n\nlistProto.setVisual = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setVisual(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._visual = this._visual || {};\n  this._visual[key] = val;\n};\n/**\n * Set layout property.\n * @param {string|Object} key\n * @param {*} [val]\n */\n\n\nlistProto.setLayout = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setLayout(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._layout[key] = val;\n};\n/**\n * Get layout property.\n * @param  {string} key.\n * @return {*}\n */\n\n\nlistProto.getLayout = function (key) {\n  return this._layout[key];\n};\n/**\n * Get layout of single data item\n * @param {number} idx\n */\n\n\nlistProto.getItemLayout = function (idx) {\n  return this._itemLayouts[idx];\n};\n/**\n * Set layout of single data item\n * @param {number} idx\n * @param {Object} layout\n * @param {boolean=} [merge=false]\n */\n\n\nlistProto.setItemLayout = function (idx, layout, merge) {\n  this._itemLayouts[idx] = merge ? zrUtil.extend(this._itemLayouts[idx] || {}, layout) : layout;\n};\n/**\n * Clear all layout of single data item\n */\n\n\nlistProto.clearItemLayouts = function () {\n  this._itemLayouts.length = 0;\n};\n/**\n * Get visual property of single data item\n * @param {number} idx\n * @param {string} key\n * @param {boolean} [ignoreParent=false]\n */\n\n\nlistProto.getItemVisual = function (idx, key, ignoreParent) {\n  var itemVisual = this._itemVisuals[idx];\n  var val = itemVisual && itemVisual[key];\n\n  if (val == null && !ignoreParent) {\n    // Use global visual property\n    return this.getVisual(key);\n  }\n\n  return val;\n};\n/**\n * Set visual property of single data item\n *\n * @param {number} idx\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setItemVisual(0, 'color', color);\n *  setItemVisual(0, {\n *      'color': color\n *  });\n */\n\n\nlistProto.setItemVisual = function (idx, key, value) {\n  var itemVisual = this._itemVisuals[idx] || {};\n  this._itemVisuals[idx] = itemVisual;\n\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        itemVisual[name] = key[name];\n      }\n    }\n\n    return;\n  }\n\n  itemVisual[key] = value;\n};\n/**\n * Clear itemVisuals and list visual.\n */\n\n\nlistProto.clearAllVisual = function () {\n  this._visual = {};\n  this._itemVisuals = [];\n};\n\nvar setItemDataAndSeriesIndex = function (child) {\n  child.seriesIndex = this.seriesIndex;\n  child.dataIndex = this.dataIndex;\n  child.dataType = this.dataType;\n};\n/**\n * Set graphic element relative to data. It can be set as null\n * @param {number} idx\n * @param {module:zrender/Element} [el]\n */\n\n\nlistProto.setItemGraphicEl = function (idx, el) {\n  var hostModel = this.hostModel;\n\n  if (el) {\n    // Add data index and series index for indexing the data by element\n    // Useful in tooltip\n    el.dataIndex = idx;\n    el.dataType = this.dataType;\n    el.seriesIndex = hostModel && hostModel.seriesIndex;\n\n    if (el.type === 'group') {\n      el.traverse(setItemDataAndSeriesIndex, el);\n    }\n  }\n\n  this._graphicEls[idx] = el;\n};\n/**\n * @param {number} idx\n * @return {module:zrender/Element}\n */\n\n\nlistProto.getItemGraphicEl = function (idx) {\n  return this._graphicEls[idx];\n};\n/**\n * @param {Function} cb\n * @param {*} context\n */\n\n\nlistProto.eachItemGraphicEl = function (cb, context) {\n  zrUtil.each(this._graphicEls, function (el, idx) {\n    if (el) {\n      cb && cb.call(context, el, idx);\n    }\n  });\n};\n/**\n * Shallow clone a new list except visual and layout properties, and graph elements.\n * New list only change the indices.\n */\n\n\nlistProto.cloneShallow = function () {\n  var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n  var list = new List(dimensionInfoList, this.hostModel); // FIXME\n\n  list._storage = this._storage;\n  transferProperties(list, this); // Clone will not change the data extent and indices\n\n  list.indices = this.indices.slice();\n\n  if (this._extent) {\n    list._extent = zrUtil.extend({}, this._extent);\n  }\n\n  return list;\n};\n/**\n * Wrap some method to add more feature\n * @param {string} methodName\n * @param {Function} injectFunction\n */\n\n\nlistProto.wrapMethod = function (methodName, injectFunction) {\n  var originalMethod = this[methodName];\n\n  if (typeof originalMethod !== 'function') {\n    return;\n  }\n\n  this.__wrappedMethods = this.__wrappedMethods || [];\n\n  this.__wrappedMethods.push(methodName);\n\n  this[methodName] = function () {\n    var res = originalMethod.apply(this, arguments);\n    return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n  };\n}; // Methods that create a new list based on this list should be listed here.\n// Notice that those method should `RETURN` the new list.\n\n\nlistProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map']; // Methods that change indices of this list should be listed here.\n\nlistProto.CHANGABLE_METHODS = ['filterSelf'];\nvar _default = List;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/data/List.js\n// module id = 995\n// module chunks = 0 1 2","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar OrdinalScale = require(\"../scale/Ordinal\");\n\nvar IntervalScale = require(\"../scale/Interval\");\n\nvar Scale = require(\"../scale/Scale\");\n\nvar numberUtil = require(\"../util/number\");\n\nrequire(\"../scale/Time\");\n\nrequire(\"../scale/Log\");\n\n/**\n * Get axis scale extent before niced.\n * Item of returned array can only be number (including Infinity and NaN).\n */\nfunction getScaleExtent(scale, model) {\n  var scaleType = scale.type;\n  var min = model.getMin();\n  var max = model.getMax();\n  var fixMin = min != null;\n  var fixMax = max != null;\n  var originalExtent = scale.getExtent();\n  var axisDataLen;\n  var boundaryGap;\n  var span;\n\n  if (scaleType === 'ordinal') {\n    axisDataLen = (model.get('data') || []).length;\n  } else {\n    boundaryGap = model.get('boundaryGap');\n\n    if (!zrUtil.isArray(boundaryGap)) {\n      boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n    }\n\n    if (typeof boundaryGap[0] === 'boolean') {\n      boundaryGap = [0, 0];\n    }\n\n    boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n    boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n    span = originalExtent[1] - originalExtent[0] || Math.abs(originalExtent[0]);\n  } // Notice: When min/max is not set (that is, when there are null/undefined,\n  // which is the most common case), these cases should be ensured:\n  // (1) For 'ordinal', show all axis.data.\n  // (2) For others:\n  //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n  //      disabled).\n  //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n  //      be the result that originalExtent enlarged by boundaryGap.\n  // (3) If no data, it should be ensured that `scale.setBlank` is set.\n  // FIXME\n  // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\n  // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\n  // that the results processed by boundaryGap are positive/negative?\n\n\n  if (min == null) {\n    min = scaleType === 'ordinal' ? axisDataLen ? 0 : NaN : originalExtent[0] - boundaryGap[0] * span;\n  }\n\n  if (max == null) {\n    max = scaleType === 'ordinal' ? axisDataLen ? axisDataLen - 1 : NaN : originalExtent[1] + boundaryGap[1] * span;\n  }\n\n  if (min === 'dataMin') {\n    min = originalExtent[0];\n  } else if (typeof min === 'function') {\n    min = min({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  if (max === 'dataMax') {\n    max = originalExtent[1];\n  } else if (typeof max === 'function') {\n    max = max({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  (min == null || !isFinite(min)) && (min = NaN);\n  (max == null || !isFinite(max)) && (max = NaN);\n  scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max)); // Evaluate if axis needs cross zero\n\n  if (model.getNeedCrossZero()) {\n    // Axis is over zero and min is not set\n    if (min > 0 && max > 0 && !fixMin) {\n      min = 0;\n    } // Axis is under zero and max is not set\n\n\n    if (min < 0 && max < 0 && !fixMax) {\n      max = 0;\n    }\n  }\n\n  return [min, max];\n}\n\nfunction niceScaleExtent(scale, model) {\n  var extent = getScaleExtent(scale, model);\n  var fixMin = model.getMin() != null;\n  var fixMax = model.getMax() != null;\n  var splitNumber = model.get('splitNumber');\n\n  if (scale.type === 'log') {\n    scale.base = model.get('logBase');\n  }\n\n  var scaleType = scale.type;\n  scale.setExtent(extent[0], extent[1]);\n  scale.niceExtent({\n    splitNumber: splitNumber,\n    fixMin: fixMin,\n    fixMax: fixMax,\n    minInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('minInterval') : null,\n    maxInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('maxInterval') : null\n  }); // If some one specified the min, max. And the default calculated interval\n  // is not good enough. He can specify the interval. It is often appeared\n  // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n  // to be 60.\n  // FIXME\n\n  var interval = model.get('interval');\n\n  if (interval != null) {\n    scale.setInterval && scale.setInterval(interval);\n  }\n}\n/**\n * @param {module:echarts/model/Model} model\n * @param {string} [axisType] Default retrieve from model.type\n * @return {module:echarts/scale/*}\n */\n\n\nfunction createScaleByModel(model, axisType) {\n  axisType = axisType || model.get('type');\n\n  if (axisType) {\n    switch (axisType) {\n      // Buildin scale\n      case 'category':\n        return new OrdinalScale(model.getCategories(), [Infinity, -Infinity]);\n\n      case 'value':\n        return new IntervalScale();\n      // Extended scale, like time and log\n\n      default:\n        return (Scale.getClass(axisType) || IntervalScale).create(model);\n    }\n  }\n}\n/**\n * Check if the axis corss 0\n */\n\n\nfunction ifAxisCrossZero(axis) {\n  var dataExtent = axis.scale.getExtent();\n  var min = dataExtent[0];\n  var max = dataExtent[1];\n  return !(min > 0 && max > 0 || min < 0 && max < 0);\n}\n/**\n * @param {Array.<number>} tickCoords In axis self coordinate.\n * @param {Array.<string>} labels\n * @param {string} font\n * @param {number} axisRotate 0: towards right horizontally, clock-wise is negative.\n * @param {number} [labelRotate=0] 0: towards right horizontally, clock-wise is negative.\n * @return {number}\n */\n\n\nfunction getAxisLabelInterval(tickCoords, labels, font, axisRotate, labelRotate) {\n  var textSpaceTakenRect;\n  var autoLabelInterval = 0;\n  var accumulatedLabelInterval = 0;\n  var rotation = (axisRotate - labelRotate) / 180 * Math.PI;\n  var step = 1;\n\n  if (labels.length > 40) {\n    // Simple optimization for large amount of labels\n    step = Math.floor(labels.length / 40);\n  }\n\n  for (var i = 0; i < tickCoords.length; i += step) {\n    var tickCoord = tickCoords[i]; // Not precise, do not consider align and vertical align\n    // and each distance from axis line yet.\n\n    var rect = textContain.getBoundingRect(labels[i], font, 'center', 'top');\n    rect.x += tickCoord * Math.cos(rotation);\n    rect.y += tickCoord * Math.sin(rotation); // Magic number\n\n    rect.width *= 1.3;\n    rect.height *= 1.3;\n\n    if (!textSpaceTakenRect) {\n      textSpaceTakenRect = rect.clone();\n    } // There is no space for current label;\n    else if (textSpaceTakenRect.intersect(rect)) {\n        accumulatedLabelInterval++;\n        autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n      } else {\n        textSpaceTakenRect.union(rect); // Reset\n\n        accumulatedLabelInterval = 0;\n      }\n  }\n\n  if (autoLabelInterval === 0 && step > 1) {\n    return step;\n  }\n\n  return (autoLabelInterval + 1) * step - 1;\n}\n/**\n * @param {Object} axis\n * @param {Function} labelFormatter\n * @return {Array.<string>}\n */\n\n\nfunction getFormattedLabels(axis, labelFormatter) {\n  var scale = axis.scale;\n  var labels = scale.getTicksLabels();\n  var ticks = scale.getTicks();\n\n  if (typeof labelFormatter === 'string') {\n    labelFormatter = function (tpl) {\n      return function (val) {\n        return tpl.replace('{value}', val != null ? val : '');\n      };\n    }(labelFormatter); // Consider empty array\n\n\n    return zrUtil.map(labels, labelFormatter);\n  } else if (typeof labelFormatter === 'function') {\n    return zrUtil.map(ticks, function (tick, idx) {\n      return labelFormatter(getAxisRawValue(axis, tick), idx);\n    }, this);\n  } else {\n    return labels;\n  }\n}\n\nfunction getAxisRawValue(axis, value) {\n  // In category axis with data zoom, tick is not the original\n  // index of axis.data. So tick should not be exposed to user\n  // in category axis.\n  return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n}\n\nexports.getScaleExtent = getScaleExtent;\nexports.niceScaleExtent = niceScaleExtent;\nexports.createScaleByModel = createScaleByModel;\nexports.ifAxisCrossZero = ifAxisCrossZero;\nexports.getAxisLabelInterval = getAxisLabelInterval;\nexports.getFormattedLabels = getFormattedLabels;\nexports.getAxisRawValue = getAxisRawValue;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/axisHelper.js\n// module id = 996\n// module chunks = 0 1 2","var features = {};\n\nfunction register(name, ctor) {\n  features[name] = ctor;\n}\n\nfunction get(name) {\n  return features[name];\n}\n\nexports.register = register;\nexports.get = get;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox/featureManager.js\n// module id = 997\n// module chunks = 0 1 2","var Eventful = require(\"../mixin/Eventful\");\n\nexports.Dispatcher = Eventful;\n\nvar env = require(\"./env\");\n\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\nvar isDomLevel2 = typeof window !== 'undefined' && !!window.addEventListener;\nvar MOUSE_EVENT_REG = /^(?:mouse|pointer|contextmenu|drag|drop)|click/;\n\nfunction getBoundingClientRect(el) {\n  // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n  return el.getBoundingClientRect ? el.getBoundingClientRect() : {\n    left: 0,\n    top: 0\n  };\n} // `calculate` is optional, default false\n\n\nfunction clientToLocal(el, e, out, calculate) {\n  out = out || {}; // According to the W3C Working Draft, offsetX and offsetY should be relative\n  // to the padding edge of the target element. The only browser using this convention\n  // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n  // not support the properties.\n  // (see http://www.jacklmoore.com/notes/mouse-position/)\n  // In zr painter.dom, padding edge equals to border edge.\n  // FIXME\n  // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n  // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n  // is too complex. So css-transfrom dont support in this case temporarily.\n\n  if (calculate || !env.canvasSupported) {\n    defaultGetZrXY(el, e, out);\n  } // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n  // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n  // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n  // zoom-factor, overflow / opacity layers, transforms ...)\n  // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n  // <https://bugs.jquery.com/ticket/8523#comment:14>\n  // BTW3, In ff, offsetX/offsetY is always 0.\n  else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n      out.zrX = e.layerX;\n      out.zrY = e.layerY;\n    } // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n    else if (e.offsetX != null) {\n        out.zrX = e.offsetX;\n        out.zrY = e.offsetY;\n      } // For some other device, e.g., IOS safari.\n      else {\n          defaultGetZrXY(el, e, out);\n        }\n\n  return out;\n}\n\nfunction defaultGetZrXY(el, e, out) {\n  // This well-known method below does not support css transform.\n  var box = getBoundingClientRect(el);\n  out.zrX = e.clientX - box.left;\n  out.zrY = e.clientY - box.top;\n}\n/**\n * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n * `calculate` is optional, default false.\n */\n\n\nfunction normalizeEvent(el, e, calculate) {\n  e = e || window.event;\n\n  if (e.zrX != null) {\n    return e;\n  }\n\n  var eventType = e.type;\n  var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n  if (!isTouch) {\n    clientToLocal(el, e, e, calculate);\n    e.zrDelta = e.wheelDelta ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n  } else {\n    var touch = eventType != 'touchend' ? e.targetTouches[0] : e.changedTouches[0];\n    touch && clientToLocal(el, touch, e, calculate);\n  } // Add which for click: 1 === left; 2 === middle; 3 === right; otherwise: 0;\n  // See jQuery: https://github.com/jquery/jquery/blob/master/src/event.js\n  // If e.which has been defined, if may be readonly,\n  // see: https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/which\n\n\n  var button = e.button;\n\n  if (e.which == null && button !== undefined && MOUSE_EVENT_REG.test(e.type)) {\n    e.which = button & 1 ? 1 : button & 2 ? 3 : button & 4 ? 2 : 0;\n  }\n\n  return e;\n}\n\nfunction addEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    el.addEventListener(name, handler);\n  } else {\n    el.attachEvent('on' + name, handler);\n  }\n}\n\nfunction removeEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    el.removeEventListener(name, handler);\n  } else {\n    el.detachEvent('on' + name, handler);\n  }\n}\n/**\n * preventDefault and stopPropagation.\n * Notice: do not do that in zrender. Upper application\n * do that if necessary.\n *\n * @memberOf module:zrender/core/event\n * @method\n * @param {Event} e : event对象\n */\n\n\nvar stop = isDomLevel2 ? function (e) {\n  e.preventDefault();\n  e.stopPropagation();\n  e.cancelBubble = true;\n} : function (e) {\n  e.returnValue = false;\n  e.cancelBubble = true;\n};\n\nfunction notLeftMouse(e) {\n  // If e.which is undefined, considered as left mouse event.\n  return e.which > 1;\n} // 做向上兼容\n\n\nexports.clientToLocal = clientToLocal;\nexports.normalizeEvent = normalizeEvent;\nexports.addEventListener = addEventListener;\nexports.removeEventListener = removeEventListener;\nexports.stop = stop;\nexports.notLeftMouse = notLeftMouse;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/event.js\n// module id = 998\n// module chunks = 0 1 2","var _vector = require(\"./vector\");\n\nvar v2Create = _vector.create;\nvar v2DistSquare = _vector.distSquare;\n\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\nvar mathPow = Math.pow;\nvar mathSqrt = Math.sqrt;\nvar EPSILON = 1e-8;\nvar EPSILON_NUMERIC = 1e-4;\nvar THREE_SQRT = mathSqrt(3);\nvar ONE_THIRD = 1 / 3; // 临时变量\n\nvar _v0 = v2Create();\n\nvar _v1 = v2Create();\n\nvar _v2 = v2Create();\n\nfunction isAroundZero(val) {\n  return val > -EPSILON && val < EPSILON;\n}\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * 计算三次贝塞尔值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return onet * onet * (onet * p0 + 3 * t * p1) + t * t * (t * p3 + 3 * onet * p2);\n}\n/**\n * 计算三次贝塞尔导数值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicDerivativeAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return 3 * (((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet + (p3 - p2) * t * t);\n}\n/**\n * 计算三次贝塞尔方程根，使用盛金公式\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} val\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction cubicRootAt(p0, p1, p2, p3, val, roots) {\n  // Evaluate roots of cubic functions\n  var a = p3 + 3 * (p1 - p2) - p0;\n  var b = 3 * (p2 - p1 * 2 + p0);\n  var c = 3 * (p1 - p0);\n  var d = p0 - val;\n  var A = b * b - 3 * a * c;\n  var B = b * c - 9 * a * d;\n  var C = c * c - 3 * b * d;\n  var n = 0;\n\n  if (isAroundZero(A) && isAroundZero(B)) {\n    if (isAroundZero(b)) {\n      roots[0] = 0;\n    } else {\n      var t1 = -c / b; //t1, t2, t3, b is not zero\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = B * B - 4 * A * C;\n\n    if (isAroundZero(disc)) {\n      var K = B / A;\n      var t1 = -b / a + K; // t1, a is not zero\n\n      var t2 = -K / 2; // t2, t3\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n      var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n\n      if (Y1 < 0) {\n        Y1 = -mathPow(-Y1, ONE_THIRD);\n      } else {\n        Y1 = mathPow(Y1, ONE_THIRD);\n      }\n\n      if (Y2 < 0) {\n        Y2 = -mathPow(-Y2, ONE_THIRD);\n      } else {\n        Y2 = mathPow(Y2, ONE_THIRD);\n      }\n\n      var t1 = (-b - (Y1 + Y2)) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else {\n      var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n      var theta = Math.acos(T) / 3;\n      var ASqrt = mathSqrt(A);\n      var tmp = Math.cos(theta);\n      var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n      var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n      var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n\n      if (t3 >= 0 && t3 <= 1) {\n        roots[n++] = t3;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算三次贝塞尔方程极限值的位置\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {Array.<number>} extrema\n * @return {number} 有效数目\n */\n\n\nfunction cubicExtrema(p0, p1, p2, p3, extrema) {\n  var b = 6 * p2 - 12 * p1 + 6 * p0;\n  var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n  var c = 3 * p1 - 3 * p0;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      extrema[0] = -b / (2 * a);\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        extrema[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 细分三次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction cubicSubdivide(p0, p1, p2, p3, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p23 = (p3 - p2) * t + p2;\n  var p012 = (p12 - p01) * t + p01;\n  var p123 = (p23 - p12) * t + p12;\n  var p0123 = (p123 - p012) * t + p012; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012;\n  out[3] = p0123; // Seg1\n\n  out[4] = p0123;\n  out[5] = p123;\n  out[6] = p23;\n  out[7] = p3;\n}\n/**\n * 投射点到三次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} [out] 投射点\n * @return {number}\n */\n\n\nfunction cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  var prev;\n  var next;\n  var d1;\n  var d2;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n    _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n    d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    prev = t - interval;\n    next = t + interval; // t - interval\n\n    _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n    _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n    d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = cubicAt(x0, x1, x2, x3, next);\n      _v2[1] = cubicAt(y0, y1, y2, y3, next);\n      d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = cubicAt(x0, x1, x2, x3, t);\n    out[1] = cubicAt(y0, y1, y2, y3, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n/**\n * 计算二次方贝塞尔值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticAt(p0, p1, p2, t) {\n  var onet = 1 - t;\n  return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n}\n/**\n * 计算二次方贝塞尔导数值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticDerivativeAt(p0, p1, p2, t) {\n  return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n}\n/**\n * 计算二次方贝塞尔方程根\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction quadraticRootAt(p0, p1, p2, val, roots) {\n  var a = p0 - 2 * p1 + p2;\n  var b = 2 * (p1 - p0);\n  var c = p0 - val;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      var t1 = -b / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算二次贝塞尔方程极限值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @return {number}\n */\n\n\nfunction quadraticExtremum(p0, p1, p2) {\n  var divider = p0 + p2 - 2 * p1;\n\n  if (divider === 0) {\n    // p1 is center of p0 and p2\n    return 0.5;\n  } else {\n    return (p0 - p1) / divider;\n  }\n}\n/**\n * 细分二次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction quadraticSubdivide(p0, p1, p2, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p012 = (p12 - p01) * t + p01; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012; // Seg1\n\n  out[3] = p012;\n  out[4] = p12;\n  out[5] = p2;\n}\n/**\n * 投射点到二次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} out 投射点\n * @return {number}\n */\n\n\nfunction quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = quadraticAt(x0, x1, x2, _t);\n    _v1[1] = quadraticAt(y0, y1, y2, _t);\n    var d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    var prev = t - interval;\n    var next = t + interval; // t - interval\n\n    _v1[0] = quadraticAt(x0, x1, x2, prev);\n    _v1[1] = quadraticAt(y0, y1, y2, prev);\n    var d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = quadraticAt(x0, x1, x2, next);\n      _v2[1] = quadraticAt(y0, y1, y2, next);\n      var d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = quadraticAt(x0, x1, x2, t);\n    out[1] = quadraticAt(y0, y1, y2, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n\nexports.cubicAt = cubicAt;\nexports.cubicDerivativeAt = cubicDerivativeAt;\nexports.cubicRootAt = cubicRootAt;\nexports.cubicExtrema = cubicExtrema;\nexports.cubicSubdivide = cubicSubdivide;\nexports.cubicProjectPoint = cubicProjectPoint;\nexports.quadraticAt = quadraticAt;\nexports.quadraticDerivativeAt = quadraticDerivativeAt;\nexports.quadraticRootAt = quadraticRootAt;\nexports.quadraticExtremum = quadraticExtremum;\nexports.quadraticSubdivide = quadraticSubdivide;\nexports.quadraticProjectPoint = quadraticProjectPoint;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/curve.js\n// module id = 999\n// module chunks = 0 1 2"],"sourceRoot":""}