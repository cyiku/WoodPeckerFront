{"version":3,"sources":["../static/js/PieReact.21674c18.chunk.js","../node_modules/zrender/lib/container/Group.js","../node_modules/echarts/lib/view/Chart.js","../node_modules/echarts/lib/data/DataDiffer.js","../node_modules/echarts/lib/scale/Scale.js","../node_modules/echarts/lib/component/axisPointer/modelHelper.js","../node_modules/echarts/lib/model/mixin/makeStyleMapper.js","../node_modules/echarts/lib/coord/Axis.js","../node_modules/echarts/lib/chart/helper/createListFromArray.js","../node_modules/zrender/lib/graphic/Displayable.js","../node_modules/zrender/lib/graphic/Gradient.js","../node_modules/echarts/lib/util/throttle.js","../node_modules/echarts/lib/scale/Interval.js","../node_modules/echarts/lib/component/axis/AxisBuilder.js","../node_modules/echarts/lib/component/axis/AxisView.js","../node_modules/zrender/lib/graphic/helper/image.js","../node_modules/echarts/lib/util/component.js","../node_modules/zrender/lib/core/timsort.js","../node_modules/echarts/lib/coord/axisModelCommonMixin.js","../node_modules/echarts/lib/component/dataZoom/DataZoomModel.js","../node_modules/echarts/lib/component/dataZoom/helper.js","../node_modules/echarts/lib/component/dataZoom/DataZoomView.js","../node_modules/echarts/lib/component/axisPointer.js","../node_modules/echarts/lib/component/axisPointer/viewHelper.js","../node_modules/zrender/lib/mixin/Transformable.js","../node_modules/zrender/lib/core/log.js","../node_modules/zrender/lib/graphic/helper/text.js","../node_modules/zrender/lib/graphic/Image.js","../node_modules/echarts/lib/view/Component.js","../node_modules/echarts/lib/component/helper/sliderMove.js","../node_modules/zrender/lib/core/LRU.js","../node_modules/zrender/lib/graphic/Style.js","../node_modules/zrender/lib/Element.js","../node_modules/zrender/lib/core/guid.js","../node_modules/zrender/lib/animation/Animator.js","../node_modules/zrender/lib/graphic/helper/roundRect.js","../node_modules/zrender/lib/contain/util.js","../node_modules/zrender/lib/graphic/Pattern.js","../node_modules/zrender/lib/graphic/helper/poly.js","../node_modules/echarts/lib/model/mixin/colorPalette.js","../node_modules/zrender/lib/animation/requestAnimationFrame.js","../node_modules/echarts/lib/scale/helper.js","../node_modules/echarts/lib/component/axisPointer/findPointFromSeries.js","../node_modules/echarts/lib/component/axisPointer/globalListener.js","../node_modules/echarts/lib/component/helper/listComponent.js","../node_modules/echarts/lib/component/dataZoom/history.js","../node_modules/zrender/lib/core/bbox.js","../node_modules/zrender/lib/graphic/helper/fixClipWithShadow.js","../node_modules/echarts/lib/component/axisPointer/CartesianAxisPointer.js","../node_modules/echarts/lib/component/axisPointer/BaseAxisPointer.js","../node_modules/echarts/lib/component/axis/cartesianAxisHelper.js","../node_modules/echarts/lib/component/legend/LegendModel.js","../node_modules/echarts/lib/component/legend/LegendView.js","../node_modules/echarts/lib/component/helper/BrushController.js","../node_modules/echarts/lib/component/helper/cursorHelper.js","../node_modules/zrender/lib/graphic/mixin/RectText.js","../node_modules/zrender/lib/contain/line.js","../node_modules/zrender/lib/contain/quadratic.js","../node_modules/zrender/lib/contain/windingLine.js","../node_modules/zrender/lib/graphic/Text.js","../node_modules/zrender/lib/graphic/LinearGradient.js","../node_modules/zrender/lib/zrender.js","../node_modules/echarts/lib/component/tooltip.js","../node_modules/echarts/lib/component/legend.js","../node_modules/echarts/lib/processor/dataFilter.js","../node_modules/echarts/lib/component/toolbox.js","../node_modules/echarts/lib/component/helper/interactionMutex.js","../node_modules/echarts/lib/component/helper/BrushTargetManager.js","../node_modules/echarts/lib/component/helper/brushHelper.js","../node_modules/echarts/lib/component/dataZoom/typeDefaulter.js","../node_modules/echarts/lib/component/dataZoom/dataZoomProcessor.js","../node_modules/echarts/lib/component/dataZoom/dataZoomAction.js","../node_modules/echarts/lib/model/Global.js","../node_modules/echarts/lib/model/mixin/lineStyle.js","../node_modules/echarts/lib/model/mixin/areaStyle.js","../node_modules/echarts/lib/model/mixin/textStyle.js","../node_modules/zrender/lib/tool/path.js","../node_modules/zrender/lib/mixin/Animatable.js","../node_modules/zrender/lib/animation/Clip.js","../node_modules/zrender/lib/animation/easing.js","../node_modules/zrender/lib/contain/path.js","../node_modules/zrender/lib/contain/cubic.js","../node_modules/zrender/lib/contain/arc.js","../node_modules/zrender/lib/tool/transformPath.js","../node_modules/zrender/lib/graphic/shape/Circle.js","../node_modules/zrender/lib/graphic/shape/Sector.js","../node_modules/zrender/lib/graphic/shape/Ring.js","../node_modules/zrender/lib/graphic/shape/Polygon.js","../node_modules/zrender/lib/graphic/helper/smoothSpline.js","../node_modules/zrender/lib/graphic/helper/smoothBezier.js","../node_modules/zrender/lib/graphic/shape/Polyline.js","../node_modules/zrender/lib/graphic/shape/Rect.js","../node_modules/zrender/lib/graphic/shape/Line.js","../node_modules/zrender/lib/graphic/shape/BezierCurve.js","../node_modules/zrender/lib/graphic/shape/Arc.js","../node_modules/zrender/lib/graphic/CompoundPath.js","../node_modules/zrender/lib/graphic/RadialGradient.js","../node_modules/echarts/lib/model/mixin/itemStyle.js","../node_modules/echarts/lib/model/mixin/boxLayout.js","../node_modules/echarts/lib/model/globalDefault.js","../node_modules/echarts/lib/ExtensionAPI.js","../node_modules/echarts/lib/model/OptionManager.js","../node_modules/echarts/lib/preprocessor/backwardCompat.js","../node_modules/echarts/lib/preprocessor/helper/compatStyle.js","../node_modules/zrender/lib/Handler.js","../node_modules/zrender/lib/mixin/Draggable.js","../node_modules/zrender/lib/Storage.js","../node_modules/zrender/lib/animation/Animation.js","../node_modules/zrender/lib/dom/HandlerProxy.js","../node_modules/zrender/lib/core/GestureMgr.js","../node_modules/zrender/lib/Painter.js","../node_modules/zrender/lib/Layer.js","../node_modules/echarts/lib/visual/seriesColor.js","../node_modules/echarts/lib/loading/default.js","../node_modules/echarts/lib/scale/Ordinal.js","../node_modules/echarts/lib/scale/Time.js","../node_modules/echarts/lib/scale/Log.js","../node_modules/echarts/lib/helper.js","../node_modules/echarts/lib/component/axisPointer/axisTrigger.js","../node_modules/echarts/lib/component/axisPointer/AxisPointerModel.js","../node_modules/echarts/lib/component/axisPointer/AxisPointerView.js","../node_modules/echarts/lib/component/tooltip/TooltipModel.js","../node_modules/echarts/lib/component/tooltip/TooltipView.js","../node_modules/echarts/lib/component/tooltip/TooltipContent.js","../node_modules/echarts/lib/component/legend/legendAction.js","../node_modules/echarts/lib/component/legend/legendFilter.js","../node_modules/echarts/lib/component/helper/selectableMixin.js","../node_modules/echarts/lib/visual/dataColor.js","../node_modules/echarts/lib/component/toolbox/ToolboxModel.js","../node_modules/echarts/lib/component/toolbox/ToolboxView.js","../node_modules/echarts/lib/component/toolbox/feature/SaveAsImage.js","../node_modules/echarts/lib/component/toolbox/feature/MagicType.js","../node_modules/echarts/lib/component/toolbox/feature/DataView.js","../node_modules/echarts/lib/component/toolbox/feature/DataZoom.js","../node_modules/echarts/lib/component/dataZoomSelect.js","../node_modules/echarts/lib/component/dataZoom/AxisProxy.js","../node_modules/echarts/lib/component/dataZoom/SelectZoomModel.js","../node_modules/echarts/lib/component/dataZoom/SelectZoomView.js","../node_modules/echarts/lib/component/toolbox/feature/Restore.js","../node_modules/echarts/lib/action/createDataSelectAction.js","../node_modules/echarts/lib/chart/pie.js","../node_modules/echarts/lib/chart/pie/PieSeries.js","../node_modules/echarts/lib/chart/pie/PieView.js","../node_modules/echarts/lib/chart/pie/pieLayout.js","../node_modules/echarts/lib/chart/pie/labelLayout.js","Echarts/PieReact.js","../node_modules/zrender/lib/core/util.js","../node_modules/echarts/lib/echarts.js","../node_modules/echarts/lib/util/graphic.js","../node_modules/echarts/lib/util/number.js","../node_modules/echarts/lib/util/model.js","../node_modules/zrender/lib/core/vector.js","../node_modules/echarts/lib/util/format.js","../node_modules/zrender/lib/core/env.js","../node_modules/echarts/lib/model/Model.js","../node_modules/zrender/lib/graphic/Path.js","../node_modules/echarts/lib/util/layout.js","../node_modules/zrender/lib/core/BoundingRect.js","../node_modules/echarts/lib/model/Component.js","../node_modules/echarts/lib/util/clazz.js","../node_modules/zrender/lib/contain/text.js","../node_modules/zrender/lib/core/matrix.js","../node_modules/echarts/lib/data/List.js","../node_modules/echarts/lib/coord/axisHelper.js","../node_modules/echarts/lib/component/toolbox/featureManager.js","../node_modules/zrender/lib/core/event.js","../node_modules/zrender/lib/core/curve.js","../node_modules/zrender/lib/mixin/Eventful.js","../node_modules/zrender/lib/tool/color.js","../node_modules/echarts/lib/model/Series.js","../node_modules/echarts/lib/data/helper/completeDimensions.js","../node_modules/echarts/lib/util/symbol.js","../node_modules/echarts/lib/lang.js","../node_modules/echarts/lib/CoordinateSystem.js","../node_modules/zrender/lib/core/PathProxy.js","../node_modules/zrender/lib/config.js"],"names":["webpackJsonp","1000","module","exports","__webpack_require__","zrUtil","Element","BoundingRect","Group","opts","call","this","key","hasOwnProperty","_children","__storage","__dirty","prototype","constructor","isGroup","type","silent","children","slice","childAt","idx","childOfName","name","i","length","childCount","add","child","parent","push","_doAdd","addBefore","nextSibling","indexOf","splice","remove","storage","zr","__zr","addToStorage","addChildrenToStorage","refresh","delFromStorage","delChildrenFromStorage","removeAll","eachChild","cb","context","traverse","dirty","getBoundingRect","includeChildren","rect","tmpRect","tmpMat","ignore","invisible","childRect","transform","getLocalTransform","copy","applyTransform","clone","union","inherits","1001","Chart","group","uid","componentUtil","getUID","elSetState","el","state","trigger","toggleHighlight","data","payload","dataIndex","modelUtil","queryDataIndex","each","normalizeToArray","dataIdx","getItemGraphicEl","eachItemGraphicEl","clazzUtil","init","ecModel","api","render","seriesModel","highlight","getData","downplay","dispose","chartProto","updateView","updateLayout","updateVisual","enableClassExtend","enableClassManagement","registerWhenExtend","1002","defaultKeyGetter","item","DataDiffer","oldArr","newArr","oldKeyGetter","newKeyGetter","_old","_new","_oldKeyGetter","_newKeyGetter","initIndexMap","arr","map","keyArr","keyGetterName","dataDiffer","existence","func","_add","update","_update","_remove","execute","oldDataIndexMap","newDataIndexMap","oldDataKeyArr","newDataKeyArr","len","unshift","j","1003","Scale","setting","_setting","_extent","Infinity","_interval","apply","arguments","scaleProto","parse","val","getSetting","contain","extent","normalize","scale","unionExtent","other","unionExtentFromData","dim","getDataExtent","getExtent","setExtent","start","end","thisExtent","isNaN","getTicksLabels","labels","ticks","getTicks","getLabel","isBlank","_isBlank","setBlank","1004","collectAxesInfo","result","globalTooltipModel","getComponent","globalAxisPointerModel","linksOption","get","linkGroups","getCoordinateSystems","coordSys","saveTooltipAxisInfo","fromTooltip","triggerTooltip","axis","axisPointerModel","model","getModel","axisPointerShow","isHandleTrigger","makeAxisPointerModel","baseTooltipModel","snap","makeKey","involveSeries","axisInfo","axesInfo","useHandle","seriesModels","axesInfoInCoordSys","seriesInvolved","groupIndex","getLinkGroupIndex","linkGroup","mapper","axisPointerEnabled","coordSysKey","coordSysAxesInfo","coordSysMap","coordSysModel","getAxes","curry","getTooltipAxes","triggerAxis","cross","tooltipAxes","baseAxes","otherAxes","tooltipAxisPointerModel","volatileOption","field","labelOption","label","show","crossStyle","lineStyle","defaults","textStyle","Model","collectSeriesInfo","eachSeries","coordinateSystem","seriesTooltipTrigger","seriesTooltipShow","getAxis","seriesDataCount","count","axisModel","linkOption","checkPropInLink","id","componentIndex","linkPropValue","axisPropValue","isArray","helper","collect","fixValue","getAxisInfo","option","status","value","reverse","getAxisPointerModel","1005","properties","excludes","includes","style","propName","getShallow","1006","fixExtentWithBands","nTick","size","margin","numberUtil","linearMap","axisHelper","normalizedExtent","Axis","inverse","onBand","_labelInterval","coord","min","Math","max","containData","dataToCoord","getPixelPrecision","dataExtent","clamp","coordToData","t","pointToData","point","getTicksCoords","alignWithLabel","bands","getBands","coords","getLabelsCoords","span","getBandWidth","axisExtent","abs","getLabelInterval","labelInterval","labelModel","interval","isHorizontal","getAxisLabelInterval","getFormattedLabels","getFont","1007","firstDataNotNull","ifNeedCompleteOrdinalData","sampleItem","getDataItemValue","createListFromArray","__DEV__","Error","coordSysName","creator","creators","registeredCoordSys","CoordinateSystem","completeDimOpt","encodeDef","dimsDef","dimensions","getDimensionsInfo","completeDimensions","categoryIndex","list","List","nameList","createNameList","categories","dimValueGetter","itemOpt","dimName","dimIndex","isDataItemOption","hasItemOption","converDataValue","categoryAxesModels","getCategories","initData","isStackable","axisType","getDimTypeByAxis","categoryAxisModel","categoryDim","dataLen","cartesian2d","axesModels","queryComponents","mainType","index","xAxisModel","yAxisModel","retrieve","xAxisType","yAxisType","stackable","isXAxisCateogry","isYAxisCategory","x","y","singleAxis","singleAxisModel","singleAxisType","isCategory","single","polar","polarModel","angleAxisModel","findAxisModel","radiusAxisModel","radiusAxisType","angleAxisType","isAngleAxisCateogry","isRadiusAxisCateogry","radius","angle","geo","1008","Displayable","Style","_rect","__clipPaths","RectText","z","z2","zlevel","draggable","dragging","culling","cursor","rectHover","progressive","beforeBrush","ctx","afterBrush","brush","prevEl","rectContain","transformCoordToLocal","animateStyle","loop","animate","attrKV","set","setStyle","useStyle","obj","mixin","1009","Gradient","colorStops","addColorStop","offset","color","1010","lib","ORIGIN_METHOD","RATE","throttle","fn","delay","debounce","exec","lastExec","Date","getTime","timer","scope","args","currCall","diff","debounceNextCall","lastCall","thisDelay","thisDebounce","clearTimeout","setTimeout","clear","debounceDelay","createOrUpdate","fnAttr","rate","throttleType","originFn","lastThrottleType","1011","formatUtil","roundNumber","round","IntervalScale","extend","_intervalPrecision","parseFloat","getInterval","setInterval","_niceExtent","getIntervalPrecision","intervalScaleGetTicks","opt","precision","getPrecisionSafe","addCommas","niceTicks","splitNumber","minInterval","maxInterval","isFinite","intervalScaleNiceTicks","intervalPrecision","niceTickExtent","niceExtent","expandSize","fixMax","fixMin","floor","ceil","create","1012","makeAxisEventDataBase","eventData","componentType","endTextLayout","textPosition","textRotate","textAlign","textVerticalAlign","rotationDiff","remRadian","rotation","onLeft","isRadianAroundZero","PI","isSilent","tooltipOpt","fixMinMaxLabelShow","labelEls","tickEls","showMinLabel","showMaxLabel","firstLabel","nextLabel","lastLabel","prevLabel","firstTick","nextTick","lastTick","prevTick","ignoreEl","isTwoLabelOverlapped","current","next","labelLayout","firstRect","nextRect","mRotationBack","matrix","identity","rotate","mul","intersect","isNameLocationCenter","nameLocation","buildAxisTick","axisBuilder","tickModel","lineStyleModel","tickLen","tickInterval","ticksCoords","pt1","pt2","_transform","ticksCnt","ifIgnoreOnTick","tickCoord","tickDirection","v2ApplyTransform","tickEl","graphic","Line","subPixelOptimizeLine","anid","shape","x1","y1","x2","y2","getLineStyle","stroke","buildAxisLabel","axisLabelShow","labelMargin","labelRotation","labelRotate","innerTextLayout","labelDirection","categoryData","triggerEvent","tickVal","itemLabelModel","textColor","getTextColor","pos","labelOffset","labelStr","textEl","Text","position","setTextStyle","text","textFill","targetType","_dumbGroup","updateTransform","decomposeTransform","vec2","AxisBuilder","nameDirection","dumbGroup","hasBuilder","builders","getGroup","axisLine","lineCap","strokeContainThreshold","axisTickLabel","axisName","textStyleModel","gap","gapSignal","nameRotation","axisNameAvailableWidth","sin","textFont","truncateOpt","ellipsis","maxWidth","nameTruncateMaxWidth","truncatedText","truncateText","minChar","placeholder","formatterParams","$vars","__fullText","__truncatedText","tooltip","content","formatter","axisRotation","textRotation","direction","rawTick","1013","updateAxisPointer","axisView","forceRender","Clazz","AxisView","getAxisPointerClass","axisPointerClass","axisPointerModelHelper","_axisPointer","disposeAxisPointer","axisPointer","extendComponentView","superApply","force","axisPointerClazz","registerAxisPointerClass","clazz","1014","imageOnLoad","cachedImgObj","__cachedImgObj","onload","pending","pendingWrap","cbPayload","hostEl","LRU","globalImageCache","findExistImage","newImageOrSrc","image","createOrUpdateImage","__zrImageSrc","isImageReady","Image","put","src","width","height","1015","parseClassType","base","random","join","enableSubTypeDefaulter","entity","subTypeDefaulters","registerSubTypeDefaulter","defaulter","main","determineSubType","componentTypeMain","hasSubTypes","enableTopologicalTravel","dependencyGetter","makeDepndencyGraph","fullNameList","graph","noEntryList","thisItem","createDependencyGraphItem","originalDeps","availableDeps","getAvailableDependencies","entryCount","dependentName","predecessor","thatItem","successor","dep","topologicalTravel","targetNameList","callback","removeEdge","succComponentType","stack","removeEdgeAndAdd","targetNameSet","currComponentType","pop","currVertex","isInTargetNameSet","1016","minRunLength","n","r","DEFAULT_MIN_MERGE","makeAscendingRun","array","lo","hi","compare","runHi","reverseRun","binaryInsertionSort","mid","pivot","left","right","gallopLeft","hint","lastOffset","maxOffset","tmp","m","gallopRight","TimSort","pushRun","_runStart","_runLength","runStart","stackSize","runLength","mergeRuns","mergeAt","forceMergeRuns","start1","length1","start2","length2","k","mergeLow","mergeHigh","cursor1","cursor2","dest","count1","count2","exit","_minGallop","minGallop","DEFAULT_MIN_GALLOPING","customCursor","customDest","sort","remaining","ts","minRun","1017","getName","isObject","getMin","origin","rangeStart","eqNaN","getMax","rangeEnd","getNeedCrossZero","getCoordSysModel","noop","setRange","resetRange","1018","retrieveRaw","ret","updateRangeUse","dataZoomModel","rawOption","rangePropMode","_rangePropMode","rangeModeInOption","names","percentSpecified","valueSpecified","env","echarts","AxisProxy","eachAxisDim","DataZoomModel","extendComponentModel","dependencies","defaultOption","orient","xAxisIndex","yAxisIndex","filterMode","startValue","endValue","minSpan","maxSpan","minValueSpan","maxValueSpan","rangeMode","parentModel","_dataIntervalByAxis","_dataInfo","_axisProxies","_autoThrottle","mergeDefaultAndTheme","doInit","mergeOption","newOption","merge","thisOption","canvasSupported","realtime","_setDefaultThrottle","_resetTarget","_giveAxisProxies","axisProxies","eachTargetAxis","dimNames","axisIndex","dependentModels","axisProxy","__dzAxisProxy","autoMode","_judgeAutoMode","axisIndexName","_autoSetAxisIndex","_autoSetOrient","hasIndexSpecified","autoAxisIndex","singleAxisIndex","axisIndices","axisModels","_isSeriesHasAllAxesTypeOf","axisId","is","seriesAxisIndex","globalOption","animation","animationDurationUpdate","getFirstTargetAxisModel","firstAxisModel","indices","getAxisProxy","getAxisModel","setRawRange","ignoreUpdateRangeUsg","getPercentRange","findRepresentativeAxisProxy","getDataPercentWindow","getValueRange","axisDimName","getDataValueWindow","hostedBy","getRangePropMode","1019","AXIS_DIMS","COORDS","isCoordSupported","coordType","createNameEach","attrs","capitalNames","capitalFirst","capitalAttrs","nameObj","capital","createLinkedNodesFinder","forEachNode","forEachEdgeType","edgeIdGetter","isNodeAbsorded","node","nodes","isLinked","hasLink","edgeType","edgeId","records","absorb","sourceNode","processSingleNode","existsLink","1020","ComponentView","getTargetCoordInfo","save","coordModel","store","coordIndex","coordSysLists","1021","axisTrigger","registerPreprocessor","link","registerProcessor","PRIORITY","PROCESSOR","STATISTIC","registerAction","event","1022","confineInContainer","viewWidth","getWidth","viewHeight","getHeight","textContain","buildElStyle","axisPointerType","styleModel","fill","getAreaStyle","buildLabelElOption","elOption","labelPos","getValueLabel","paddings","normalizeCssArray","font","textRect","align","verticalAlign","bgColor","lineWidth","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","seriesDataIndices","params","getAxisRawValue","seriesData","idxItem","series","getSeriesByIndex","seriesIndex","dataIndexInside","dataParams","getDataParams","isString","replace","isFunction","getTransformedPosition","layoutInfo","translate","buildCartesianSingleLabelElOption","textLayout","makeLineShape","p1","p2","xDimIndex","makeRectShape","xy","wh","makeSectorShape","cx","cy","r0","startAngle","endAngle","clockwise","1023","isNotAroundZero","EPSILON","vector","mIdentity","Transformable","transformableProto","needLocalTransform","parentHasTransform","invTransform","invert","setTransform","dpr","restoreTransform","tmpTransform","sx","sy","sqrt","atan2","getGlobalScale","v2","transformCoordToGlobal","target","1024","config","debugMode","console","log","1025","normalizeStyle","makeFont","VALID_TEXT_ALIGN","textBaseline","VALID_TEXT_VERTICAL_ALIGN","textPadding","util","renderPlainText","setCtx","DEFAULT_FONT","contentBlock","__textCotentBlock","parsePlainText","truncate","outerHeight","textLines","lines","lineHeight","boxPos","getBoxPosition","baseX","baseY","applyTextRotation","boxY","adjustTextY","textX","textY","needDrawBg","needDrawBackground","textWidth","outerWidth","boxX","adjustTextX","drawBackground","getTextXForPadding","textShadowBlur","textShadowColor","textShadowOffsetX","textShadowOffsetY","textStrokeWidth","textStroke","getStroke","getFill","strokeText","fillText","renderRichText","parseRichText","drawRichText","contentWidth","xLeft","lineTop","xRight","token","line","tokens","tokenCount","usedWidth","leftIndex","lineXLeft","lineXRight","rightIndex","placeToken","textOrigin","tokenStyle","rich","styleName","isLineHolder","textHeight","retrieve3","retrieve2","textBackgroundColor","textBorderWidth","textBorderColor","isPlainBg","textBoxShadowBlur","textBoxShadowColor","textBoxShadowOffsetX","textBoxShadowOffsetY","beginPath","textBorderRadius","roundRectHelper","buildPath","closePath","imageHelper","onBgImageLoaded","drawImage","blockHeiht","Array","parsePercent","res","adjustTextPositionOnRect","textDistance","textOffset","prop","maxValue","lastIndexOf","center","top","bottom","middle","normalizeTextStyle","renderText","needDrawText","1026","ZImage","bind","_image","aspect","sWidth","sHeight","drawRectText","1027","Component","componentModel","componentProto","1028","getSpanSign","handleEnds","handleIndex","dist","sign","restrict","delta","extentSpan","originalDistSign","extentMinSpan","realExtent","currDistSign","1029","LinkedList","head","tail","_len","linkedListProto","insert","entry","Entry","insertEntry","prev","maxSize","_list","_map","_maxSize","_lastRemovedEntry","LRUProto","removed","leastUsedEntry","1030","createLinearGradient","global","createRadialGradient","STYLE_COMMON_PROPS","host","extendFrom","opacity","lineDash","lineDashOffset","strokeNoScale","fontStyle","fontWeight","fontSize","fontFamily","textTag","textLineHeight","transformText","blend","prevStyle","firstDraw","fillStyle","strokeStyle","globalAlpha","globalCompositeOperation","hasStroke","getLineScale","hasFill","otherStyle","overwrite","newStyle","getGradient","method","canvasGradient","styleProto","1031","guid","Eventful","Animatable","clipPath","drift","dx","dy","beforeUpdate","afterUpdate","hide","attr","setClipPath","addSelfToZr","removeClipPath","__clipTarget","removeSelfFromZr","animators","addAnimator","removeAnimator","1032","idStart","1033","defaultGetter","defaultSetter","interpolateNumber","p0","percent","interpolateString","interpolateArray","out","arrDim","len2","fillArr","arr0","arr1","arr0Len","arr1Len","arraySlice","isArraySame","catmullRomInterpolateArray","p3","t2","t3","catmullRomInterpolate","v0","v1","cloneValue","isArrayLike","rgba2String","rgba","getArrayDim","keyframes","lastValue","createTrackClip","animator","easing","oneTrackDone","forceAnimate","getter","_getter","setter","_setter","useSpline","trackLen","trackMaxTime","firstVal","isValueArray","isValueColor","isValueString","a","b","time","kfPercents","kfValues","prevValue","isAllValueEqual","colorArray","_target","w","lastFrame","lastFramePercent","onframe","frame","range","clip","Clip","life","_loop","_delay","ondestroy","Animator","_tracks","_clipCount","_doneList","_onframeList","_clipList","when","props","tracks","during","pause","_paused","resume","isPaused","_doneCallback","doneList","lastClip","self","clipCount","addClip","oldOnFrame","stop","forwardToLast","clipList","removeClip","done","getClips","1034","r1","r2","r3","r4","total","moveTo","lineTo","quadraticCurveTo","1035","PI2","normalizeRadian","1036","Pattern","repeat","getCanvasPattern","createPattern","1037","smoothSpline","smoothBezier","points","smooth","controlPoints","smoothConstraint","cp1","cp2","p","bezierCurveTo","l","1038","classUtil","clearColorPalette","getColorFromPalette","colorIdx","colorNameMap","colorPalette","1039","window","requestAnimationFrame","msRequestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","1040","nice","fixExtent","tick","1041","finder","getTooltipPosition","dataToPoint","getValues","coordDimToDataDim","1042","initGlobalListeners","useHandler","eventType","on","e","dis","makeDispatchAction","record","dispatchAction","dispatchTooltipFinally","pendings","initialized","doEnter","onLeave","actuallyPayload","showLen","showTip","hideLen","hideTip","handler","currTrigger","pendingList","makeGetter","globalListener","register","getZr","unregister","1043","layout","boxLayoutParams","getBoxLayoutParams","padding","viewportSize","getLayoutRect","box","positionElement","makeBackground","getItemStyle","Rect","1044","giveStore","ATTR","history","newSnapshot","batchItem","dataZoomId","subType","percentRange","snapshot","1047","curve","bbox","mathMin","mathMax","mathSin","mathCos","cos","extremity","fromPoints","fromLine","x0","y0","xDim","yDim","fromCubic","x3","y3","cubicExtrema","cubicAt","fromQuadratic","quadraticExtremum","quadraticAt","tx","ty","fromArc","rx","ry","anticlockwise","vec2Min","vec2Max","1048","shadowTemp","orignalBrush","browser","ie","version","modified","clipPaths","1049","getCartesian","grid","getAxisDimIndex","BaseAxisPointer","viewHelper","cartesianAxisHelper","CartesianAxisPointer","makeElOption","otherExtent","getOtherAxis","getGlobalExtent","pixelValue","toGlobalCoord","elStyle","pointerOption","pointerShapeBuilder","graphicKey","pointer","getHandleTransform","labelInside","updateHandleTransform","currPosition","cursorOtherValue","cursorPoint","tooltipOptions","tooltipOption","targetShape","shadow","bandWidth","1050","updateProps","animationModel","moveAnimation","propsEqual","lastProp","stopAnimation","lastProps","newProps","equals","updateLabelShowHide","labelEl","getHandleTransProps","trans","updateMandatoryProps","eventTool","_group","_lastGraphicKey","_handle","_dragging","_lastValue","_lastStatus","_payloadInfo","animationThreshold","_axisModel","_axisPointerModel","_api","handle","_moveAnimation","determineAnimation","doUpdateProps","updatePointerEl","updateLabelEl","createPointerEl","createLabelEl","_renderHandle","isCategoryAxis","useSnap","pointerEl","handleModel","isInit","createIcon","onmousemove","onmousedown","_onHandleDragMove","ondragend","_onHandleDragEnd","includeStyles","handleSize","_moveHandleToValue","_doDispatchAxisPointer","payloadInfo","axisDim","doClear","buildLabel","1051","gridModel","rawAxisPosition","axisPosition","onZero","getRect","rectBound","axisOffset","posBound","otherAxis","onZeroAxisIndex","onZeroCoord","dirMap","1052","LegendModel","layoutMode","ignoreSize","selected","superCall","optionUpdated","_updateData","legendData","_data","hasSelected","isSelected","select","dataItem","availableNames","getSeries","legendDataProvider","concat","mapArray","_availableNames","unSelect","toggleSelected","backgroundColor","borderColor","borderRadius","borderWidth","itemGap","itemWidth","itemHeight","inactiveColor","selectedMode","1053","dispatchSelectAction","dispatchHighlightAction","dataName","getDisplayList","useHoverLayer","seriesName","dispatchDownplayAction","symbolCreator","listComponentHelper","layoutUtil","newlineDisabled","_contentGroup","_backgroundEl","getContentGroup","legendModel","resetInner","itemAlign","renderInner","positionInfo","mainRect","layoutInner","layoutRect","contentGroup","legendDrawnMap","createHashMap","selectMode","itemModel","newline","getSeriesByName","getVisual","legendSymbolType","symbolType","_createItem","eachRawSeries","indexOfName","getItemVisual","warn","itemGroup","itemIcon","tooltipModel","legendGlobalTooltipModel","createSymbol","hitRect","legendIndex","setHoverStyle","__legendDataIndex","contentRect","1054","BrushController","assert","_zr","_brushType","_brushOption","_panels","_track","_covers","_creatingCover","_creatingPanel","_enableGlobalPan","_mounted","_uid","baseUID","_handlers","mouseHandlers","eventName","doEnableBrush","controller","brushOption","interactionMutex","take","MUTEX_RESOURCE_KEY","brushType","DEFAULT_BRUSH_OPT","doDisableBrush","release","off","createCover","cover","coverRenderers","__brushOption","updateZ","endCreating","creatingCover","coverRenderer","getCoverRenderer","updateCoverShape","COVER_Z","updateCoverAfterCreation","updateCommon","getPanelByPoint","localCursorPoint","panels","panel","pn","isTargetByCursor","getPanelByCover","panelId","clearCovers","covers","originalLength","areas","isEnd","removeOnClick","shouldShowCover","track","mathPow","UNSELECT_THRESHOLD","getTrackEnds","createBaseRectCover","doDrift","edgeNames","makeStyle","updateBaseRect","localRange","brushStyle","MIN_RESIZE_LINE_WIDTH","xa","ya","x2a","y2a","widtha","heighta","updateRectShape","transformable","mainEl","globalDir","getGlobalDirection","CURSOR_MAP","h","setShape","pointsToRect","clipByPanel","formatRectRange","getTransform","localDirection","split","s","inverseMap","transformDirection","driftRect","toRectRange","fromRectRange","rectRange","localDelta","toLocalDelta","namePart","ind","DIRECTION_MAP","driftPolygon","thisGroup","localD","localZero","xmin","ymin","resetCursor","currPanel","setCursorStyle","preventDefault","rawE","mainShapeContain","updateCoverByMouse","eventParams","thisBrushOption","brushMode","determineBrushType","getCreatingRange","defaultBrushType","handleDragEnd","offsetX","offsetY","getLineRenderer","xyIndex","localTrack","ends","getLinearBrushOtherExtent","pow","ne","sw","nw","se","enableBrush","setPanels","panelOpts","mount","enableGlobalPan","eachCover","updateCovers","brushOptionList","getKey","tmpIdPrefix","oldGetKey","addOrUpdate","newIndex","oldIndex","newBrushOption","oldCovers","newCovers","unmount","mousedown","mousemove","mouseup","lineX","lineY","polygon","Polyline","Polygon","1055","IRRELEVANT_EXCLUDES","onIrrelevantElement","targetCoordSysModel","getComponentByElement","topTarget","1058","textHelper","restore","1059","containStroke","_l","_a","_b","1060","quadraticProjectPoint","1061","dir","1062","1063","LinearGradient","globalCoord","1064","delInstance","instances","Handler","Storage","Animation","HandlerProxy","useVML","painterCtors","canvas","zrender","dom","ZRender","getInstance","registerPainter","Ctor","rendererType","renderer","vml","painter","handerProxy","getViewportRoot","root","stage","flush","_needsRefresh","oldDelFromStorage","oldAddToStorage","getId","addRoot","delRoot","configLayer","zLevel","refreshImmediately","_needsRefreshHover","refreshHoverImmediately","addHover","refreshHover","removeHover","clearHover","resize","clearAnimation","pathToImage","cursorStyle","findHover","eventHandler","1065","1066","1067","seriesType","legendModels","findComponents","eachSeriesByType","filterSelf","1068","1069","getStore","resourceKey","userKey","isTaken","1070","BrushTargetManager","targetInfoList","_targetInfoList","info","foundCpts","parseFinder","targetInfoBuilders","builder","include","formatMinMax","minMax","includeMainTypes","INCLUDE_FINDER_MAIN_TYPES","axisConvert","axisNameIndex","to","rangeOrCoordRange","values","toLocalCoord","xyMinMax","NaN","axisDiffProcessor","refer","scales","getScales","xyMinMaxCurr","xyMinMaxOrigin","sizeCurr","getSize","sizeOrigin","brushHelper","COORD_CONVERTS","proto","setOutputRanges","matchOutputRanges","area","coordRange","coordRanges","coordConvert","__rangeOffset","diffProcessor","targetInfo","findTargetInfo","coordSyses","setInputRanges","rangeOffset","makePanelOpts","getDefaultBrushType","getPanelRect","makeRectPanelClipPath","makeRectIsTargetByCursor","makeLinearBrushOtherExtent","controlSeries","areaPanelId","targetInfoMatchers","xAxisModels","yAxisModels","gridModels","gridModelMap","xAxesHas","yAxesHas","cartesians","getCartesians","cartesian","panelRectBuilder","xAxisDeclared","yAxisDeclared","geoModels","geoModel","xminymin","xmaxymax","1071","normalizeRect","cursorHelper","graphicUtil","localPoints","clipPointsByRect","specifiedXYIndex","brushWidth","targetModel","1072","1073","resetSingleAxis","reset","filterSingleAxis","filterData","eachComponent","valueRange","1074","linkedNodesFinder","effectedModels","query","1078","mergeTheme","theme","themeItem","ComponentModel","hasClass","initBase","baseOption","OPTION_INNER_KEY","_componentsMap","_seriesIndices","_theme","globalDefault","getComponentsByTypes","componentsMap","types","newCptOption","existComponent","createSeriesIndices","filterBySubType","components","condition","filter","cpt","assertSeriesInitialized","GlobalModel","optionManager","_optionManager","setOption","optionPreprocessorFuncs","resetOption","optionChanged","mountOption","restoreData","timelineOption","getTimelineOption","mediaOptions","getMediaOption","mediaOption","visitComponent","newCptOptionList","mapResult","mappingToExists","makeIdAndName","keyInfo","exist","resultItem","ComponentModelClass","getClass","extraOpt","newCptTypes","componentOption","getAllClassMainTypes","getOption","isIdInner","getTheme","cpts","isIdArray","isNameArray","queryCond","q","indexAttr","idAttr","nameAttr","component","queryResult","oneSeries","getSeriesByType","rawSeriesIndex","eachRawSeriesByType","isSeriesFiltered","getCurrentSeriesIndices","filterSeries","filteredSeries","componentTypes","1079","getLineDash","lineType","dotSize","dashSize","1080","1081","PATH_COLOR","isEmphasis","getTextRect","1082","processArc","fa","fs","psiDeg","cmd","path","psi","xp","yp","lambda","mathSqrt","f","cxp","cyp","theta","vAngle","u","v","dTheta","vRatio","addData","createPathProxyFromString","cs","cc","RegExp","prevCmd","cpx","cpy","PathProxy","CMD","str","c","charAt","shift","ctlPtx","ctlPty","L","M","C","pathData","Q","A","Z","toStatic","createPathOptions","pathProxy","setData","getContext","rebuildPath","transformPath","Path","vMag","acos","createFromString","extendFromString","mergePath","pathEls","pathList","pathEl","createPathProxy","__dirtyPath","pathBundle","appendPath","1083","animatingShape","pathSplitted","animateTo","_animateToShallow","source","objShallow","propertyCount","1084","options","_life","_initialized","onrestart","_pausedTime","easingFuncs","step","globalTime","deltaTime","_startTime","easingFunc","schedule","fire","restart","_needsRemove","remainder","arg","1085","linear","quadraticIn","quadraticOut","quadraticInOut","cubicIn","cubicOut","cubicInOut","quarticIn","quarticOut","quarticInOut","quinticIn","quinticOut","quinticInOut","sinusoidalIn","sinusoidalOut","sinusoidalInOut","exponentialIn","exponentialOut","exponentialInOut","circularIn","circularOut","circularInOut","elasticIn","asin","elasticOut","elasticInOut","backIn","backOut","backInOut","bounceIn","bounceOut","bounceInOut","1086","isAroundEqual","swapExtrema","extrema","windingCubic","nRoots","cubicRootAt","roots","y0_","y1_","nExtrema","unit","windingQuadratic","quadraticRootAt","y_","x_","windingArc","containPath","isStroke","xi","yi","windingLine","cubic","quadratic","_x","arc","R","1087","cubicProjectPoint","1088","d","1089","nPoint","mathAtan2","1090","inBundle","1091","fixClipWithShadow","unitX","unitY","1092","1093","polyHelper","1094","interpolate","isLoop","distance","segs","w2","w3","1095","v2Min","v2Max","v2Scale","v2Distance","v2Add","constraint","prevPoint","nextPoint","cps","sub","d0","d1","sum","cp0","1096","1097","1098","pointAt","1099","someVectorAt","isTangent","cpx2","cpy2","cubicDerivativeAt","cpx1","cpy1","quadraticDerivativeAt","curveTool","quadraticSubdivide","cubicSubdivide","tangentAt","1100","1101","paths","_updatePathDirty","dirtyPath","setScale","1102","RadialGradient","1103","getBorderLineDash","1104","1105","platform","navigator","match","blendMode","animationDuration","animationEasing","animationEasingUpdate","progressiveThreshold","hoverLayerThreshold","useUTC","1106","ExtensionAPI","chartInstance","echartsAPIList","1107","OptionManager","_timelineOptions","_mediaList","_mediaDefault","_currentMediaIndices","_optionBackup","_newBaseOption","parseRawOption","isNew","mediaDefault","timelineOptions","mediaList","timelineOpt","timeline","media","singleMedia","preProcess","applyMediaQuery","ecWidth","ecHeight","realMap","aspectratio","applicatable","matched","QUERY_REG","operator","realAttr","toLowerCase","real","expect","indicesEquals","indices1","indices2","oldOption","newCptOpt","oldCptOpt","oldOptionBackup","newParsedOption","isRecreate","optionBackup","timelineModel","getCurrentIndex","1108","compatLayoutProperties","LAYOUT_PROPERTIES","compatStyle","COMPATITABLE_COMPONENTS","COMPATITABLE_SERIES","isTheme","seriesOpt","clockWise","pointerColor","dataRange","visualMap","componentName","1109","compatItemStyle","itemStyleOpt","itemStyle","POSSIBLE_STYLES","normalItemStyleOpt","normal","emphasisItemStyleOpt","emphasis","compatTextStyle","labelOptSingle","TEXT_STYLE_OPTIONS","compatLabelTextStyle","labelOpt","processSeries","upperLabel","edgeLabel","markPoint","markLine","markArea","mpData","mlData","toArr","o","toObj","axes","axisOpt","parallel","parallelOpt","parallelAxisDefault","calendar","calendarOpt","radar","radarOpt","geoOpt","regions","regionObj","1110","makeEventPacket","eveType","cancelBubble","zrX","zrY","gestureEvent","pinchX","pinchY","pinchScale","wheelDelta","zrDelta","zrByTouch","which","EmptyProxy","isHover","displayable","SILENT","Draggable","handlerNames","proxy","painterRoot","_hovered","_lastTouchMoment","_lastX","_lastY","lastHovered","lastHoveredTarget","hovered","hoveredTarget","setCursor","dispatchToElement","mouseout","innerDom","element","toElement","relatedTarget","parentNode","nodeType","dispatch","eventArgs","eventPacket","eachOtherLayer","layer","exclude","hoverCheckResult","_downEl","_downPoint","_upEl","1111","_dragStart","_drag","_dragEnd","param","draggingTarget","_draggingTarget","_y","dropTarget","lastDropTarget","_dropTarget","1112","shapeCompareFunc","timsort","_roots","_displayList","_displayListLen","includeIgnore","updateDisplayList","displayList","_updateAndAddDisplayable","userSetClipPath","currentClipPath","parentClipPath","_renderList","displayableSortFunc","1113","Dispatcher","_clips","_running","_time","_pauseStart","clips","deferredEvents","deferredClips","_startLoop","1114","eventNameFix","firefox","processGesture","gestureMgr","_gestureMgr","gestureInfo","recognize","setTouchTimer","instance","_touching","_touchTimer","isPointerFromTouch","pointerType","initDomHandler","makeMouseHandler","touchHandlerNames","domHandlers","pointerHandlerNames","mouseHandlerNames","HandlerDomProxy","mountHandlers","addEventListener","GestureMgr","pointerEventsSupported","touchEventsSupported","removeEventListener","normalizeEvent","pointerEventNames","pointerdown","pointerup","pointermove","pointerout","nm","touchstart","touchmove","touchend","click","handlerDomProxyProto","1115","pointPair","eventUtil","_doTrack","_recognize","touches","trackItem","touch","clientToLocal","recognizers","pinch","pinchEnd","pinchPre","pinchCenter","1116","parseInt10","parseInt","isLayerValid","__builtin__","preProcessLayer","__unusedCount","postProcessLayer","isDisplayableCulled","viewRect","isClipPathChanged","prevClipPaths","doClip","createRoot","domRoot","document","createElement","cssText","Layer","Painter","singleCanvas","nodeName","toUpperCase","_opts","devicePixelRatio","_singleCanvas","rootStyle","innerHTML","zlevelList","_zlevelList","layers","_layers","_layerConfig","_width","_height","mainLayer","initContext","_domRoot","_getSize","appendChild","_progressiveLayers","_hoverlayer","_hoverElements","getType","isSingleCanvas","getViewportRootOffset","viewportRoot","offsetLeft","offsetTop","paintAll","_paintList","_startProgessive","hoverStyle","__hoverMir","elMirror","__from","hoverElements","from","hoverLayer","getLayer","originalEl","_doPaintEl","_progressiveToken","_doPaintList","_furtherProgressive","_progress","_clearProgressive","_updateLayerStatus","eachBuiltinLayer","flushProgressiveLayer","currentLayer","currentZLevel","currentProgressiveLayer","layerProgress","progressiveLayerIdx","elZLevel","elFrame","__frame","MAX_PROGRESSIVE_LAYER_NUMBER","renderScope","__progress","__maxProgress","__nextIdxNotProg","forcePaint","prevClipLayer","prevElClipPaths","insertLayer","layersMap","prevLayer","virtual","prevDom","insertBefore","firstChild","eachLayer","getLayers","progressiveLayers","elCountsLastFrame","progressiveElCountsLastFrame","elCount","lastProgressiveKey","progressiveLayerCount","frameCount","elProgress","_clearLayer","layerConfig","delLayer","removeChild","display","clearLayer","getRenderedCanvas","findAndDrawOtherLayer","smaller","larger","intermediateLayer","renderToCanvas","imageLayer","pixelRatio","clearColor","whIdx","cwh","plt","prb","stl","defaultView","getComputedStyle","shadowBlurSize","leftMargin","rightMargin","topMargin","bottomMargin","clearRect","pathTransform","ImageShape","imgShape","1117","returnFalse","createDom","newDom","newDomStyle","setAttribute","domStyle","onselectstart","domBack","ctxBack","motionBlur","lastFrameAlpha","__currentValues","createBackBuffer","clearAll","haveMotionBLur","clearColorGradientOrPattern","__canvasGradient","fillRect","1118","encodeColor","colorAccessPath","visualColorAccessPath","setVisual","setItemVisual","getItemModel","1119","maskColor","mask","Arc","labelRect","animateShape","1120","OrdinalScale","rank","1121","scaleHelper","intervalScaleProto","mathCeil","mathFloor","bisect","TimeScale","stepLvl","_stepLvl","date","formatTime","ONE_HOUR","getFullYear","getMonth","getDate","approxTickNum","approxInterval","scaleLevelsLen","scaleLevels","level","yearSpan","timezoneOffset","getTimezoneOffset","parseDate","methodName","ONE_SECOND","ONE_MINUTE","ONE_DAY","1122","fixRoundingError","originalVal","roundingErrorFix","mathLog","LogScale","$constructor","_originalScale","originalScale","originalExtent","powVal","__fixMin","__fixMax","quantity","err","1123","symbolUtil","axisModelCommonMixin","createList","createScale","createScaleByModel","niceScaleExtent","mixinAxisModelCommonMethods","1124","illegalPoint","findPointFromSeries","isIllegalPoint","inputAxesInfo","shouldHide","outputFinder","showValueMap","dataByCoordSys","updaters","showPointer","showTooltip","coordSysContainsPoint","containPoint","inputAxisInfo","findInputAxisInfo","processOnAxis","linkTriggers","tarAxisInfo","tarKey","srcAxisInfo","srcKey","srcValItem","makeMapperParam","updateModelActually","dispatchTooltipActually","dispatchHighDownActually","newValue","dontSnap","buildPayloadsBySeries","payloadBatch","snapToValue","minDist","Number","MAX_VALUE","minDiff","seriesNestestValue","dataIndices","dataDim","getAxisTooltipData","nestestValue","indicesOfNearest","getRawIndex","modelHelper","coordSysItem","coordSysId","coordSysIndex","coordSysType","coordSysMainType","dataByAxis","valueLabelOpt","outputAxesInfo","valItem","escapeConnect","lastHighlights","newHighlights","toHighlight","toDownplay","batch","1125","AxisPointerModel","triggerOn","shadowStyle","icon","1126","AxisPonterView","disopse","_model","1127","showContent","alwaysShowContent","displayMode","confine","showDelay","hideDelay","transitionDuration","enterable","extraCssText","1128","buildTooltipModel","modelCascade","resultModel","refixTooltipPosition","gapH","gapV","getOuterSize","confineTooltipPosition","clientWidth","clientHeight","paddingLeft","paddingRight","borderLeftWidth","borderRightWidth","paddingTop","paddingBottom","borderTopWidth","borderBottomWidth","calcTooltipPosition","contentSize","domWidth","domHeight","rectWidth","rectHeight","isCenterAlign","TooltipContent","axisPointerViewHelper","proxyRect","tooltipContent","getDom","_tooltipContent","_tooltipModel","_ecModel","_lastDataByCoordSys","_alwaysShowContent","setEnterable","_initGlobalListener","_keepShow","_tryShow","_hide","_refreshUpdateTimeout","manuallyShowTip","_ticket","_manuallyAxisShowTip","pointInfo","manuallyHideTip","hideLater","_showAxisTooltip","_showSeriesItemTooltip","_showComponentItemTooltip","_showOrMove","_showTimout","singleDefaultHTML","singleParamsList","singleTooltipModel","itemCoordSys","axisValue","seriesDefaultHTML","valueLabel","axisValueLabel","formatTooltip","firstLine","encodeHTML","positionExpr","_updateContentNotChangedOnAxis","_updatePosition","_showTooltipContent","dataModel","dataType","tooltipTrigger","defaultHtml","asyncTicket","subTooltipModel","html","formatTpl","cbTicket","setContent","vAlign","viewSize","lastCoordSys","contentNotChanged","lastItemCoordSys","indexCoordSys","lastDataByAxis","thisItemCoordSys","thisDataByAxis","lastItem","indexAxis","lastIndices","newIndices","lastIdxItem","newIdxItem","1129","assembleTransition","duration","transitionText","vendors","vendorPrefix","assembleFont","assembleCssText","zrColor","toHex","borderName","camelCase","toCamelCase","container","_container","_show","_hideTimeout","onmouseenter","_enterable","_inContent","onmouseleave","_hideDelay","currentStyle","viewportRootOffset","isShow","1130","legendSelectActionHandler","selectedMap","isToggleSelect","isItemSelected","1131","1132","updateSelectedMap","targetList","_targetList","_selectTargetMap","reduce","targetMap","1133","paletteScope","dataAll","getRawData","idxMap","rawIdx","filteredIdx","singleDataColor","1134","featureManager","ToolboxModel","feature","featureOpt","featureName","Feature","itemSize","showTitle","iconStyle","1135","isUserFeatureName","toolboxModel","process","featureNames","oldName","featureOpts","featureModel","onclick","features","unusable","createIconPaths","setIconStatus","iconName","iconPaths","iconStatus","iconStyleModel","icons","getIcons","titles","title","iconStr","__title","_features","_featureNames","titleText","needPutOnTop","topOffset","1136","SaveAsImage","lang","toolbox","saveAsImage","excludeComponents","$a","download","url","getConnectedDataURL","href","MouseEvent","edge","msSaveOrOpenBlob","bstr","atob","u8arr","Uint8Array","charCodeAt","blob","Blob","tab","open","write","evt","view","bubbles","cancelable","dispatchEvent","1137","MagicType","magicType","bar","tiled","availableIcons","seriesOptGenreator","seriesId","radioTypes","generateNewSeriesTypes","newSeriesOpt","categoryAxis","getAxesByScale","boundaryGap","radio","currentType","1138","groupSeries","seriesGroupByCategoryAxis","otherSeries","meta","baseAxis","getBaseAxis","valueAxis","assembleSeriesWithCategoryAxis","tables","valueAxisDim","headers","columns","ITEM_SPLITER","items","BLOCK_SPLITER","assembleOtherSeries","vals","argLen","getContentFromModel","trim","isTSVFormat","block","parseTSVContents","tsv","tsvLines","itemSplitRegex","header","parseListContents","hasName","parseContents","blockMetaList","blocks","blockMeta","axisKey","DataView","_dom","tryMergeDataOption","newData","originalData","newVal","original","dataView","readOnly","optionToContent","contentToOption","textareaColor","textareaBorderColor","buttonColor","buttonTextColor","close","viewMain","textarea","htmlOrDom","isDom","buttonContainer","buttonStyle","closeButton","refreshButton","keyCode","selectionStart","selectionEnd","substring","newSeriesOptList","1139","DataZoom","_brushController","_onBrush","_isZoomActive","retrieveAxisSetting","updateBackBtnStatus","updateZoomBtnStatus","zoomActive","dataZoomSelectActive","brushTargetManager","sliderMove","dataZoom","DATA_ZOOM_ID_BASE","zoom","back","handlers","nextActive","_dispatchZoomAction","setBatch","findDataZoom","minMaxSpan","getMinMaxSpan","found","dzModel","addForAxis","dataZoomOpt","axisIndicesName","givenAxisIndices","forEachComponent","newOpt","$fromToolbox","dataZoomOpts","toolboxOpt","1140","1141","calculateDataExtent","seriesExtent","fixExtentByAxis","axisDataLen","setAxisModel","isRestore","percentWindow","_percentWindow","valueWindow","_valueWindow","useOrigin","toFixed","setMinMaxSpan","_minMaxSpan","_dataZoomModel","valueSpan","_dataExtent","asc","_dimName","_axisIndex","getTargetSeriesModels","getOtherAxisModel","otherAxisDim","coordSysIndexName","isCartesian","foundOtherAxisModel","otherAxisModel","calculateDataWindow","percentExtent","boundValue","boundPercent","dataWindow","isInWindow","dataDims","leftOut","rightOut","hasValue","thisHasValue","thisLeftOut","thisRightOut","1142","1143","1144","Restore","1148","actionInfos","actionInfo","1156","registerVisual","registerLayout","1157","dataSelectableMixin","PieSeries","extendSeriesModel","_defaultLabelLine","getInitialData","valueList","getPercentWithPrecision","hostModel","defaultEmphasis","labelLine","labelLineNormalOpt","labelLineEmphasisOpt","legendHoverLink","hoverAnimation","minAngle","selectedOffset","hoverOffset","avoidLabelOverlap","percentPrecision","stillShowZeroSum","animationType","1158","updateDataSelected","hasAnimation","toggleItemSelected","getItemLayout","midAngle","PiePiece","onEmphasis","polyline","hoverIgnore","onNormal","normalIgnore","sector","Sector","updateData","piePieceProto","firstCreate","sectorShape","initProps","itemStyleModel","visualColor","lineJoin","isAnimationEnabled","_updateLabel","labelText","linePoints","labelHoverModel","labelLineModel","labelLineHoverModel","setLabelStyle","labelFetcher","labelDataIndex","defaultText","autoColor","useInsideStyle","inside","Pie","sectorGroup","_sectorGroup","oldData","isFirstRender","onSectorClick","piePiece","setItemGraphicEl","newIdx","oldIdx","_createClipPath","itemLayout","1159","RADIAN","validDataCount","getSum","unitRadian","roseType","restAngle","valueSumLargerThanMinAngle","currentAngle","setItemLayout","1160","adjustSingleSide","shiftUp","changeX","isDownList","lastDeltaX","deltaY","deltaX","lastY","upList","downList","avoidOverlap","labelLayoutList","leftList","rightList","hasLabelRotate","labelPosition","labelLineLen","labelLineLen2","isLabelInside","getFormattedLabel","967","__webpack_exports__","_classCallCheck","Constructor","TypeError","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","Object","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","__WEBPACK_IMPORTED_MODULE_0_react__","__WEBPACK_IMPORTED_MODULE_0_react___default","__WEBPACK_IMPORTED_MODULE_1_echarts_lib_echarts__","__WEBPACK_IMPORTED_MODULE_1_echarts_lib_echarts___default","__WEBPACK_IMPORTED_MODULE_2_echarts_lib_component_tooltip__","__WEBPACK_IMPORTED_MODULE_3_echarts_lib_component_legend__","__WEBPACK_IMPORTED_MODULE_4_echarts_lib_chart_pie__","__WEBPACK_IMPORTED_MODULE_5_echarts_lib_component_toolbox__","_createClass","defineProperties","descriptor","protoProps","staticProps","PieReact","_React$Component","_this","getPrototypeOf","initPie","_props$option","undefined","myChart","ID","onresize","_this2","_props","_props$width","_props$height","ref","970","typeStr","objToString","TYPED_ARRAY","BUILTIN_OBJECT","isPrimitive","targetProp","sourceProp","isBuiltInObject","mergeAll","targetAndSources","overlay","createCanvas","_ctx","baseClazz","F","clazzPrototype","forEach","nativeForEach","nativeMap","memo","nativeReduce","nativeFilter","find","nativeSlice","ownerDocument","value0","value1","value2","Function","message","setAsPrimitive","primitiveKey","HashMap","[object Function]","[object RegExp]","[object Date]","[object Error]","[object CanvasGradient]","[object CanvasPattern]","[object Image]","[object Canvas]","[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]","toString","arrayProto","prefixedKey","removeKey","971","createRegisterEventWithLowercaseName","MessageCenter","ECharts","prioritySortFunc","prio","themeStorage","_throttledZrFlush","backwardCompat","_chartsViews","_chartsMap","_componentsViews","_coordSysMgr","CoordinateSystemManager","createExtensionAPI","_messageCenter","_initEvents","_pendingActions","visualFuncs","dataProcessorFuncs","_onframe","doConvertPixel","coordSysList","updateDirectly","ecIns","callView","__alive","__model","__viewId","doDispatchAction","payloadType","actionWrap","actions","cptType","updateMethod","IN_MAIN_PROCESS","payloads","batched","eventObj","eventObjBatch","isHighDown","action","OPTION_UPDATED","updateMethods","prepareAndUpdate","flushPendingActions","pendingActions","triggerUpdatedEvent","invokeUpdateMethod","chart","updateProgressiveAndBlend","updateHoverLayerStatus","postUpdateFuncs","prepareView","isComponent","viewList","viewMap","viewId","classType","ChartView","__id","__ecComponentInfo","processData","stackSeriesData","stackedDataMap","previousStack","stackedOn","doLayout","visual","isLayout","doVisualEncoding","excludesLayout","doRender","componentView","chartView","frameDrawNum","needProgressive","ecInstance","coordSysMgr","modelInfo","enableConnect","updateConnectedChartsStatus","charts","STATUS_KEY","eventActionMap","actionType","connectedGroups","makeActionFromEvent","otherCharts","otherChart","SeriesModel","colorTool","ACTION_REG","one","echartsProto","notMerge","lazyUpdate","setTheme","getDevicePixelRatio","getDataURL","excludesComponentViews","toDataURL","groupId","canvasList","boundingRect","getBoundingClientRect","targetCanvas","img","convertToPixel","convertFromPixel","containPixel","models","visualType","defaultMainType","indexOfRawIndex","getViewOfComponentModel","getViewOfSeriesModel","colorArr","stringify","background","clearAllVisual","_loadingFX","showLoading","cfg","hideLoading","loadingEffects","weChat","MOUSE_EVENT_NAMES","eveName","isDisposed","_disposed","idBase","groupIdBase","existInstance","getInstanceByDom","connect","disConnect","disconnect","getAttribute","getInstanceById","registerTheme","preprocessorFunc","priority","processorFunc","registerPostUpdate","postUpdateFunc","test","registerCoordinateSystem","getCoordinateSystemDimensions","coordSysCreator","layoutFunc","visualFunc","registerLoading","loadingFx","extendChartView","setCanvasCreator","number","format","FILTER","VISUAL","LAYOUT","GLOBAL","CHART","COMPONENT","BRUSH","972","hasFillOrStroke","fillOrStroke","liftColor","lift","cacheElementStl","__hoverStlDirty","__hoverStl","normalStyle","__normalStl","doSingleEnterHover","__isHover","insideRollbackOpt","rollbackInsideStyle","applyInsideStyle","insideOriginalTextPosition","doSingleLeaveHover","normalStl","doEnterHover","doLeaveHover","setElementHoverStl","hoverStl","onElementMouseOver","__hoverSilentOnTouch","__isEmphasis","onElementMouseOut","enterEmphasis","leaveEmphasis","setTextStyleCommon","EMPTY_OBJ","isRectText","richResult","globalTextStyle","richItemNames","getRichItemNames","richTextStyle","setTokenTextStyle","forceRich","richItemNameMap","isBlock","getAutoColor","originalTextPosition","insideRollback","disableBox","animateOrSetProps","isUpdate","animatableModel","postfix","animationDelay","getAnimationDelayParams","pathTool","Circle","Ring","BezierCurve","CompoundPath","extendShape","extendPath","makePath","resizePath","pathRect","calculateTransform","subPixelOptimize","subPixelOptimizeRect","originX","originY","originWidth","originHeight","positiveOrNegative","doubledPosition","hoverSilentOnTouch","emphasisStyle","normalModel","emphasisModel","normalSpecified","emphasisSpecified","labelDimIndex","showNormal","showEmphasis","baseText","normalStyleText","emphasisStyleText","specifiedTextStyle","setText","defaultColor","gTextStyleModel","ancestor","mat","hBase","vBase","vertex","groupTransition","g1","g2","getAnimatableProps","elMap1","g","elMap","oldEl","newProp","clipRectByRect","targetRect","973","_trim","quantityExponent","LN10","domain","subDomain","subRange","all","returnStr","getPrecision","eIndex","dotIndex","pixelExtent","dataQuantity","sizeQuantity","acc","digits","votesPerQuota","targetSeats","seats","votes","currentSum","NEGATIVE_INFINITY","maxId","MAX_SAFE_INTEGER","radian","pi2","TIME_REG","hour","UTC","nf","exponent","exp10","reformIntervals","littleThan","lg","curr","currClose","isNumeric","974","has","nubmerUtil","subOpts","emphasisOpt","normalOpt","subOptName","dimInfo","dimType","createDataFormatModel","dataFormatMixin","rawValue","getRawValue","rawDataIndex","getRawDataItem","componentSubType","marker","getTooltipMarker","labelProp","exists","newCptOptions","cptOption","idMap","existCpt","idNum","compressBatches","batchA","batchB","makeMap","sourceBatch","otherMap","otherDataIndices","lenj","mapToArray","isData","mapA","mapB","hostObj","parsedKey","queryType","queryParam","dataDimToCoordDim","getDimension","dimItem","getDimensionInfo","coordDim","coordDimIndex","otherDimToDataDim","otherDim","otherDims","975","ArrayCtor","Float32Array","scaleAndAdd","lenSquare","div","dot","distanceSquare","negate","lerp","lengthSquare","distSquare","976","upperCaseFirst","group1","String","TPL_VAR_ALIAS","wrapVar","varName","seriesIdx","tpl","paramsList","encode","seriesLen","alias","formatTplSimple","s2d","isUTC","utc","substr","977","os","ua","userAgent","978","doGet","pathArr","getParent","getParentMethod","ignoreParent","parsePath","thisParentModel","isEmpty","setReadOnly","customizeGetParent","979","pathContain","pathProxyForDraw","hasFillGradient","hasStrokeGradient","hasFillPattern","hasStrokePattern","_fillGradient","_strokeGradient","ctxLineDash","setLineDash","setLineDashOffset","shapeCfg","needsUpdateRect","rectWithStroke","_rectWithStroke","lineScale","localPos","Sub","defaultShape","thisShape","980","boxLayout","maxHeight","currentLineMaxSize","nextX","nextY","nextChild","nextChildRect","moveX","moveY","LOCATION_PARAMS","HV_NAMES","vbox","hbox","getAvailableSize","containerRect","containerWidth","containerHeight","verticalMargin","horizontalMargin","hv","boundingMode","elPos","sizeCalculable","hvIdx","mergeLayoutParam","targetOption","newParams","newValueCount","merged","mergedValueCount","hasProp","hResult","vResult","getLayoutParams","copyLayoutParams","981","lt","rb","lb","rt","maxX","maxY","ax0","ax1","ay0","ay1","bx0","bx1","by0","by1","plain","982","getDependencies","deps","getClassesByMainType","arrayPush","inputPositionParams","themeModel","getDefaultOption","hasOwn","optList","Class","getReferringComponents","983","checkClassType","IS_CONTAINER","RootClass","mandatoryMethods","ExtendedClass","makeContainer","registerClass","componentMainType","throwWhenNotFound","originalExtend","984","getTextWidth","textWidthCache","measureText","textWidthCacheCounter","TEXT_CACHE_MAX","getRichTextRect","getPlainTextRect","halfHeight","prepareTruncateOptions","truncateSingleLine","maxIterations","cnCharWidth","ascCharWidth","ellipsisWidth","textLine","subLength","estimateLength","charCode","getLineHeight","truncOuterHeight","truncOuterWidth","lastIndex","STYLE_REG","matchedIndex","pushTokens","contentHeight","stlPadding","truncateWidth","truncateHeight","tokenHeight","tokenWidth","tokenWidthNotSpecified","percentWidth","bgImg","paddingW","remianTruncWidth","isEmptyStr","strs","tokensLen","985","m1","m2","out0","out1","out2","out3","out4","out5","rad","aa","ac","atx","ab","ad","aty","st","ct","vx","vy","det","986","transferProperties","TRANSFERABLE_PROPERTIES","__wrappedMethods","DefaultDataProvider","dataArray","_array","normalizeDimensions","cloneListForMapAndSample","excludeDimensions","allDimensions","_storage","originalStorage","dimStore","globalObj","Float64Array","Int32Array","dataCtors","float","int","ordinal","pure","getItem","dimensionInfos","dimensionNames","dimensionName","dimensionInfo","_dimensionInfos","_nameList","_idList","_optionModels","_visual","_layout","_itemVisuals","_itemLayouts","_graphicEls","_rawData","listProto","isDataArray","nameDimIdx","dimensionInfoMap","idList","nameRepeatCount","itemName","DataCtor","stackedValue","dimData","dimExtent","rawIndex","maxDistance","nearestIndices","dims","dimSize","keep","tmpRetValue","retValue","downSample","dimension","sampleValue","sampleIndex","targetStorage","originalIndices","frameValues","frameIndices","frameSize","otherList","otherIdList","setLayout","getLayout","clearItemLayouts","itemVisual","setItemDataAndSeriesIndex","cloneShallow","dimensionInfoList","wrapMethod","injectFunction","originalMethod","TRANSFERABLE_METHODS","CHANGABLE_METHODS","987","getScaleExtent","scaleType","ifAxisCrossZero","tickCoords","isAxisHorizontal","textSpaceTakenRect","autoLabelInterval","accumulatedLabelInterval","labelFormatter","988","ctor","989","calculate","defaultGetZrXY","layerX","layerY","clientX","clientY","targetTouches","changedTouches","detail","button","MOUSE_EVENT_REG","isDomLevel2","attachEvent","detachEvent","notLeftMouse","stopPropagation","returnValue","990","isAroundZero","onet","B","t1","disc","K","discSqrt","Y1","Y2","ONE_THIRD","T","ASqrt","THREE_SQRT","p01","p12","p23","p012","p123","p0123","d2","_v0","_t","_v1","v2DistSquare","EPSILON_NUMERIC","_v2","divider","v2Create","991","arrySlice","_$handlers","_h","newList","triggerWithContext","992","clampCssByte","clampCssAngle","clampCssFloat","parseCssInt","parseCssFloat","cssHueToRgb","lerpNumber","setRgba","copyRgba","putToCache","colorStr","rgbaArr","lastRemovedArr","colorCache","cached","kCSSColorTable","op","ep","fname","alpha","hsla2rgba","iv","hsla","rgba2hsla","H","S","G","vMin","vMax","deltaR","deltaG","deltaB","fastLerp","normalizedValue","colors","leftColor","rightColor","dv","fullOutput","modifyHSL","modifyAlpha","arrColor","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","fastMapToColor","mapToColor","993","colorPaletteMixin","themeSubType","fillDataTextStyle","newSeriesOption","getLinkedData","multipleSeries","formattedValue","setEachItem","dimIdx","valStr","vertially","tooltipName","tooltipDims","colorEl","animationEnabled","994","sysDims","applyDim","OTHER_DIMS","coordDimNameMap","genName","fromZero","dataDimNameMap","dimCount","retrieveValue","sysDimItem","sysDimItemDimsDef","dimDefItem","userDimName","resultDimIdx","availDimIdx","sysDimIndex","sysDimItemOtherDims","extra","extraPrefix","extraFromZero","isExtraCoord","guessOrdinal","995","Triangle","Diamond","Pin","tanX","tanY","cpLen","cpLen2","Arrow","symbolCtors","roundRect","square","circle","diamond","pin","arrow","triangle","symbolShapeMakers","symbolBuildProxies","Symbol","proxySymbol","symbolPathSetColor","symbolStyle","symbolShape","__isEmptyBrush","symbolPath","setColor","996","997","_coordinateSystems","coordinateSystemCreators","coordinateSystems","creater","coordinateSystemCreator","998","min2","max2","mathAbs","hasTypedArray","notSaveData","_saveData","_xi","_yi","_x0","_y0","_ux","_uy","_lineDash","_dashOffset","_dashIdx","_dashSum","exceedUnit","_needsDash","_dashedLineTo","_dashedBezierTo","_dashedQuadraticTo","arcTo","lineDashSum","appendSize","appendPathData","_expandData","_prevCmd","dash","dashSum","nDash","bezierLen","tmpLen","ux","uy","scaleX","scaleY","isEllipse","999"],"mappings":"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","file":"static/js/PieReact.21674c18.chunk.js","sourcesContent":["webpackJsonp([2],{\n\n/***/ 1000:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/lib/container/Group');\n *     var Circle = require('zrender/lib/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n\n    var zrUtil = __webpack_require__(970);\n    var Element = __webpack_require__(1031);\n    var BoundingRect = __webpack_require__(981);\n\n    /**\n     * @alias module:zrender/graphic/Group\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @extends module:zrender/mixin/Eventful\n     */\n    var Group = function (opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        for (var key in opts) {\n            if (opts.hasOwnProperty(key)) {\n                this[key] = opts[key];\n            }\n        }\n\n        this._children = [];\n\n        this.__storage = null;\n\n        this.__dirty = true;\n    };\n\n    Group.prototype = {\n\n        constructor: Group,\n\n        isGroup: true,\n\n        /**\n         * @type {string}\n         */\n        type: 'group',\n\n        /**\n         * 所有子孙元素是否响应鼠标事件\n         * @name module:/zrender/container/Group#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * @return {Array.<module:zrender/Element>}\n         */\n        children: function () {\n            return this._children.slice();\n        },\n\n        /**\n         * 获取指定 index 的儿子节点\n         * @param  {number} idx\n         * @return {module:zrender/Element}\n         */\n        childAt: function (idx) {\n            return this._children[idx];\n        },\n\n        /**\n         * 获取指定名字的儿子节点\n         * @param  {string} name\n         * @return {module:zrender/Element}\n         */\n        childOfName: function (name) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                if (children[i].name === name) {\n                    return children[i];\n                }\n             }\n        },\n\n        /**\n         * @return {number}\n         */\n        childCount: function () {\n            return this._children.length;\n        },\n\n        /**\n         * 添加子节点到最后\n         * @param {module:zrender/Element} child\n         */\n        add: function (child) {\n            if (child && child !== this && child.parent !== this) {\n\n                this._children.push(child);\n\n                this._doAdd(child);\n            }\n\n            return this;\n        },\n\n        /**\n         * 添加子节点在 nextSibling 之前\n         * @param {module:zrender/Element} child\n         * @param {module:zrender/Element} nextSibling\n         */\n        addBefore: function (child, nextSibling) {\n            if (child && child !== this && child.parent !== this\n                && nextSibling && nextSibling.parent === this) {\n\n                var children = this._children;\n                var idx = children.indexOf(nextSibling);\n\n                if (idx >= 0) {\n                    children.splice(idx, 0, child);\n                    this._doAdd(child);\n                }\n            }\n\n            return this;\n        },\n\n        _doAdd: function (child) {\n            if (child.parent) {\n                child.parent.remove(child);\n            }\n\n            child.parent = this;\n\n            var storage = this.__storage;\n            var zr = this.__zr;\n            if (storage && storage !== child.__storage) {\n\n                storage.addToStorage(child);\n\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n        },\n\n        /**\n         * 移除子节点\n         * @param {module:zrender/Element} child\n         */\n        remove: function (child) {\n            var zr = this.__zr;\n            var storage = this.__storage;\n            var children = this._children;\n\n            var idx = zrUtil.indexOf(children, child);\n            if (idx < 0) {\n                return this;\n            }\n            children.splice(idx, 1);\n\n            child.parent = null;\n\n            if (storage) {\n\n                storage.delFromStorage(child);\n\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n\n            return this;\n        },\n\n        /**\n         * 移除所有子节点\n         */\n        removeAll: function () {\n            var children = this._children;\n            var storage = this.__storage;\n            var child;\n            var i;\n            for (i = 0; i < children.length; i++) {\n                child = children[i];\n                if (storage) {\n                    storage.delFromStorage(child);\n                    if (child instanceof Group) {\n                        child.delChildrenFromStorage(storage);\n                    }\n                }\n                child.parent = null;\n            }\n            children.length = 0;\n\n            return this;\n        },\n\n        /**\n         * 遍历所有子节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        eachChild: function (cb, context) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                cb.call(context, child, i);\n            }\n            return this;\n        },\n\n        /**\n         * 深度优先遍历所有子孙节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                cb.call(context, child);\n\n                if (child.type === 'group') {\n                    child.traverse(cb, context);\n                }\n            }\n            return this;\n        },\n\n        addChildrenToStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.addToStorage(child);\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n        },\n\n        delChildrenFromStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.delFromStorage(child);\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n        },\n\n        dirty: function () {\n            this.__dirty = true;\n            this.__zr && this.__zr.refresh();\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function (includeChildren) {\n            // TODO Caching\n            var rect = null;\n            var tmpRect = new BoundingRect(0, 0, 0, 0);\n            var children = includeChildren || this._children;\n            var tmpMat = [];\n\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                if (child.ignore || child.invisible) {\n                    continue;\n                }\n\n                var childRect = child.getBoundingRect();\n                var transform = child.getLocalTransform(tmpMat);\n                // TODO\n                // The boundingRect cacluated by transforming original\n                // rect may be bigger than the actual bundingRect when rotation\n                // is used. (Consider a circle rotated aginst its center, where\n                // the actual boundingRect should be the same as that not be\n                // rotated.) But we can not find better approach to calculate\n                // actual boundingRect yet, considering performance.\n                if (transform) {\n                    tmpRect.copy(childRect);\n                    tmpRect.applyTransform(transform);\n                    rect = rect || tmpRect.clone();\n                    rect.union(tmpRect);\n                }\n                else {\n                    rect = rect || childRect.clone();\n                    rect.union(childRect);\n                }\n            }\n            return rect || tmpRect;\n        }\n    };\n\n    zrUtil.inherits(Group, Element);\n\n    module.exports = Group;\n\n\n/***/ }),\n\n/***/ 1001:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var Group = __webpack_require__(1000);\n    var componentUtil = __webpack_require__(1015);\n    var clazzUtil = __webpack_require__(983);\n    var modelUtil = __webpack_require__(974);\n    var zrUtil = __webpack_require__(970);\n\n    function Chart() {\n\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewChart');\n    }\n\n    Chart.prototype = {\n\n        type: 'chart',\n\n        /**\n         * Init the chart\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        init: function (ecModel, api) {},\n\n        /**\n         * Render the chart\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        render: function (seriesModel, ecModel, api, payload) {},\n\n        /**\n         * Highlight series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        highlight: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n        },\n\n        /**\n         * Downplay series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        downplay: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'normal');\n        },\n\n        /**\n         * Remove self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        remove: function (ecModel, api) {\n            this.group.removeAll();\n        },\n\n        /**\n         * Dispose self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        dispose: function () {}\n\n        /**\n         * The view contains the given point.\n         * @interface\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        // containPoint: function () {}\n\n    };\n\n    var chartProto = Chart.prototype;\n    chartProto.updateView\n        = chartProto.updateLayout\n        = chartProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            this.render(seriesModel, ecModel, api, payload);\n        };\n\n    /**\n     * Set state of single element\n     * @param  {module:zrender/Element} el\n     * @param  {string} state\n     */\n    function elSetState(el, state) {\n        if (el) {\n            el.trigger(state);\n            if (el.type === 'group') {\n                for (var i = 0; i < el.childCount(); i++) {\n                    elSetState(el.childAt(i), state);\n                }\n            }\n        }\n    }\n    /**\n     * @param  {module:echarts/data/List} data\n     * @param  {Object} payload\n     * @param  {string} state 'normal'|'emphasis'\n     * @inner\n     */\n    function toggleHighlight(data, payload, state) {\n        var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n        if (dataIndex != null) {\n            zrUtil.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n                elSetState(data.getItemGraphicEl(dataIdx), state);\n            });\n        }\n        else {\n            data.eachItemGraphicEl(function (el) {\n                elSetState(el, state);\n            });\n        }\n    }\n\n    // Enable Chart.extend.\n    clazzUtil.enableClassExtend(Chart, ['dispose']);\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Chart, {registerWhenExtend: true});\n\n    module.exports = Chart;\n\n\n/***/ }),\n\n/***/ 1002:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    function defaultKeyGetter(item) {\n        return item;\n    }\n\n    /**\n     * @param {Array} oldArr\n     * @param {Array} newArr\n     * @param {Function} oldKeyGetter\n     * @param {Function} newKeyGetter\n     * @param {Object} [context] Can be visited by this.context in callback.\n     */\n    function DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter, context) {\n        this._old = oldArr;\n        this._new = newArr;\n\n        this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n        this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n\n        this.context = context;\n    }\n\n    DataDiffer.prototype = {\n\n        constructor: DataDiffer,\n\n        /**\n         * Callback function when add a data\n         */\n        add: function (func) {\n            this._add = func;\n            return this;\n        },\n\n        /**\n         * Callback function when update a data\n         */\n        update: function (func) {\n            this._update = func;\n            return this;\n        },\n\n        /**\n         * Callback function when remove a data\n         */\n        remove: function (func) {\n            this._remove = func;\n            return this;\n        },\n\n        execute: function () {\n            var oldArr = this._old;\n            var newArr = this._new;\n\n            var oldDataIndexMap = {};\n            var newDataIndexMap = {};\n            var oldDataKeyArr = [];\n            var newDataKeyArr = [];\n            var i;\n\n            initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, '_oldKeyGetter', this);\n            initIndexMap(newArr, newDataIndexMap, newDataKeyArr, '_newKeyGetter', this);\n\n            // Travel by inverted order to make sure order consistency\n            // when duplicate keys exists (consider newDataIndex.pop() below).\n            // For performance consideration, these code below do not look neat.\n            for (i = 0; i < oldArr.length; i++) {\n                var key = oldDataKeyArr[i];\n                var idx = newDataIndexMap[key];\n\n                // idx can never be empty array here. see 'set null' logic below.\n                if (idx != null) {\n                    // Consider there is duplicate key (for example, use dataItem.name as key).\n                    // We should make sure every item in newArr and oldArr can be visited.\n                    var len = idx.length;\n                    if (len) {\n                        len === 1 && (newDataIndexMap[key] = null);\n                        idx = idx.unshift();\n                    }\n                    else {\n                        newDataIndexMap[key] = null;\n                    }\n                    this._update && this._update(idx, i);\n                }\n                else {\n                    this._remove && this._remove(i);\n                }\n            }\n\n            for (var i = 0; i < newDataKeyArr.length; i++) {\n                var key = newDataKeyArr[i];\n                if (newDataIndexMap.hasOwnProperty(key)) {\n                    var idx = newDataIndexMap[key];\n                    if (idx == null) {\n                        continue;\n                    }\n                    // idx can never be empty array here. see 'set null' logic above.\n                    if (!idx.length) {\n                        this._add && this._add(idx);\n                    }\n                    else {\n                        for (var j = 0, len = idx.length; j < len; j++) {\n                            this._add && this._add(idx[j]);\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    function initIndexMap(arr, map, keyArr, keyGetterName, dataDiffer) {\n        for (var i = 0; i < arr.length; i++) {\n            // Add prefix to avoid conflict with Object.prototype.\n            var key = '_ec_' + dataDiffer[keyGetterName](arr[i], i);\n            var existence = map[key];\n            if (existence == null) {\n                keyArr.push(key);\n                map[key] = i;\n            }\n            else {\n                if (!existence.length) {\n                    map[key] = existence = [existence];\n                }\n                existence.push(i);\n            }\n        }\n    }\n\n    module.exports = DataDiffer;\n\n\n/***/ }),\n\n/***/ 1003:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n\n    var clazzUtil = __webpack_require__(983);\n\n    /**\n     * @param {Object} [setting]\n     */\n    function Scale(setting) {\n        this._setting = setting || {};\n\n        /**\n         * Extent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._extent = [Infinity, -Infinity];\n\n        /**\n         * Step is calculated in adjustExtent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._interval = 0;\n\n        this.init && this.init.apply(this, arguments);\n    }\n\n    var scaleProto = Scale.prototype;\n\n    /**\n     * Parse input val to valid inner number.\n     * @param {*} val\n     * @return {number}\n     */\n    scaleProto.parse = function (val) {\n        // Notice: This would be a trap here, If the implementation\n        // of this method depends on extent, and this method is used\n        // before extent set (like in dataZoom), it would be wrong.\n        // Nevertheless, parse does not depend on extent generally.\n        return val;\n    };\n\n    scaleProto.getSetting = function (name) {\n        return this._setting[name];\n    };\n\n    scaleProto.contain = function (val) {\n        var extent = this._extent;\n        return val >= extent[0] && val <= extent[1];\n    };\n\n    /**\n     * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.normalize = function (val) {\n        var extent = this._extent;\n        if (extent[1] === extent[0]) {\n            return 0.5;\n        }\n        return (val - extent[0]) / (extent[1] - extent[0]);\n    };\n\n    /**\n     * Scale normalized value\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.scale = function (val) {\n        var extent = this._extent;\n        return val * (extent[1] - extent[0]) + extent[0];\n    };\n\n    /**\n     * Set extent from data\n     * @param {Array.<number>} other\n     */\n    scaleProto.unionExtent = function (other) {\n        var extent = this._extent;\n        other[0] < extent[0] && (extent[0] = other[0]);\n        other[1] > extent[1] && (extent[1] = other[1]);\n        // not setExtent because in log axis it may transformed to power\n        // this.setExtent(extent[0], extent[1]);\n    };\n\n    /**\n     * Set extent from data\n     * @param {module:echarts/data/List} data\n     * @param {string} dim\n     */\n    scaleProto.unionExtentFromData = function (data, dim) {\n        this.unionExtent(data.getDataExtent(dim, true));\n    };\n\n    /**\n     * Get extent\n     * @return {Array.<number>}\n     */\n    scaleProto.getExtent = function () {\n        return this._extent.slice();\n    };\n\n    /**\n     * Set extent\n     * @param {number} start\n     * @param {number} end\n     */\n    scaleProto.setExtent = function (start, end) {\n        var thisExtent = this._extent;\n        if (!isNaN(start)) {\n            thisExtent[0] = start;\n        }\n        if (!isNaN(end)) {\n            thisExtent[1] = end;\n        }\n    };\n\n    /**\n     * @return {Array.<string>}\n     */\n    scaleProto.getTicksLabels = function () {\n        var labels = [];\n        var ticks = this.getTicks();\n        for (var i = 0; i < ticks.length; i++) {\n            labels.push(this.getLabel(ticks[i]));\n        }\n        return labels;\n    };\n\n    /**\n     * When axis extent depends on data and no data exists,\n     * axis ticks should not be drawn, which is named 'blank'.\n     */\n    scaleProto.isBlank = function () {\n        return this._isBlank;\n    },\n\n    /**\n     * When axis extent depends on data and no data exists,\n     * axis ticks should not be drawn, which is named 'blank'.\n     */\n    scaleProto.setBlank = function (isBlank) {\n        this._isBlank = isBlank;\n    };\n\n\n    clazzUtil.enableClassExtend(Scale);\n    clazzUtil.enableClassManagement(Scale, {\n        registerWhenExtend: true\n    });\n\n    module.exports = Scale;\n\n\n/***/ }),\n\n/***/ 1004:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(970);\n    var Model = __webpack_require__(978);\n    var each = zrUtil.each;\n    var curry = zrUtil.curry;\n\n    var helper = {};\n\n    // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n    // allAxesInfo should be updated when setOption performed.\n    helper.collect = function (ecModel, api) {\n        var result = {\n            /**\n             * key: makeKey(axis.model)\n             * value: {\n             *      axis,\n             *      coordSys,\n             *      axisPointerModel,\n             *      triggerTooltip,\n             *      involveSeries,\n             *      snap,\n             *      seriesModels,\n             *      seriesDataCount\n             * }\n             */\n            axesInfo: {},\n            seriesInvolved: false,\n            /**\n             * key: makeKey(coordSys.model)\n             * value: Object: key makeKey(axis.model), value: axisInfo\n             */\n            coordSysAxesInfo: {},\n            coordSysMap: {}\n        };\n\n        collectAxesInfo(result, ecModel, api);\n\n        // Check seriesInvolved for performance, in case too many series in some chart.\n        result.seriesInvolved && collectSeriesInfo(result, ecModel);\n\n        return result;\n    };\n\n    function collectAxesInfo(result, ecModel, api) {\n        var globalTooltipModel = ecModel.getComponent('tooltip');\n        var globalAxisPointerModel = ecModel.getComponent('axisPointer');\n        // links can only be set on global.\n        var linksOption = globalAxisPointerModel.get('link', true) || [];\n        var linkGroups = [];\n\n        // Collect axes info.\n        each(api.getCoordinateSystems(), function (coordSys) {\n            // Some coordinate system do not support axes, like geo.\n            if (!coordSys.axisPointerEnabled) {\n                return;\n            }\n\n            var coordSysKey = makeKey(coordSys.model);\n            var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n            result.coordSysMap[coordSysKey] = coordSys;\n\n            // Set tooltip (like 'cross') is a convienent way to show axisPointer\n            // for user. So we enable seting tooltip on coordSys model.\n            var coordSysModel = coordSys.model;\n            var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n\n            each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null));\n\n            // If axis tooltip used, choose tooltip axis for each coordSys.\n            // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n            if (coordSys.getTooltipAxes\n                && globalTooltipModel\n                // If tooltip.showContent is set as false, tooltip will not\n                // show but axisPointer will show as normal.\n                && baseTooltipModel.get('show')\n            ) {\n                // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n                // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n                var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n                var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n                var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n                if (triggerAxis || cross) {\n                    each(tooltipAxes.baseAxes, curry(\n                        saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis\n                    ));\n                }\n                if (cross) {\n                    each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n                }\n            }\n\n            // fromTooltip: true | false | 'cross'\n            // triggerTooltip: true | false | null\n            function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n                var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n\n                var axisPointerShow = axisPointerModel.get('show');\n                if (!axisPointerShow || (\n                    axisPointerShow === 'auto'\n                    && !fromTooltip\n                    && !isHandleTrigger(axisPointerModel)\n                )) {\n                    return;\n                }\n\n                if (triggerTooltip == null) {\n                    triggerTooltip = axisPointerModel.get('triggerTooltip');\n                }\n\n                axisPointerModel = fromTooltip\n                    ? makeAxisPointerModel(\n                        axis, baseTooltipModel, globalAxisPointerModel, ecModel,\n                        fromTooltip, triggerTooltip\n                    )\n                    : axisPointerModel;\n\n                var snap = axisPointerModel.get('snap');\n                var key = makeKey(axis.model);\n                var involveSeries = triggerTooltip || snap || axis.type === 'category';\n\n                // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n                var axisInfo = result.axesInfo[key] = {\n                    key: key,\n                    axis: axis,\n                    coordSys: coordSys,\n                    axisPointerModel: axisPointerModel,\n                    triggerTooltip: triggerTooltip,\n                    involveSeries: involveSeries,\n                    snap: snap,\n                    useHandle: isHandleTrigger(axisPointerModel),\n                    seriesModels: []\n                };\n                axesInfoInCoordSys[key] = axisInfo;\n                result.seriesInvolved |= involveSeries;\n\n                var groupIndex = getLinkGroupIndex(linksOption, axis);\n                if (groupIndex != null) {\n                    var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {axesInfo: {}});\n                    linkGroup.axesInfo[key] = axisInfo;\n                    linkGroup.mapper = linksOption[groupIndex].mapper;\n                    axisInfo.linkGroup = linkGroup;\n                }\n            }\n        });\n    }\n\n    function makeAxisPointerModel(\n        axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip\n    ) {\n        var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n        var volatileOption = {};\n\n        each(\n            [\n                'type', 'snap', 'lineStyle', 'shadowStyle', 'label',\n                'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'\n            ],\n            function (field) {\n                volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n            }\n        );\n\n        // category axis do not auto snap, otherwise some tick that do not\n        // has value can not be hovered. value/time/log axis default snap if\n        // triggered from tooltip and trigger tooltip.\n        volatileOption.snap = axis.type !== 'category' && !!triggerTooltip;\n\n        // Compatibel with previous behavior, tooltip axis do not show label by default.\n        // Only these properties can be overrided from tooltip to axisPointer.\n        if (tooltipAxisPointerModel.get('type') === 'cross') {\n            volatileOption.type = 'line';\n        }\n        var labelOption = volatileOption.label || (volatileOption.label = {});\n        // Follow the convention, do not show label when triggered by tooltip by default.\n        labelOption.show == null && (labelOption.show = false);\n\n        if (fromTooltip === 'cross') {\n            // When 'cross', both axes show labels.\n            labelOption.show = true;\n            // If triggerTooltip, this is a base axis, which should better not use cross style\n            // (cross style is dashed by default)\n            if (!triggerTooltip) {\n                var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n                crossStyle && zrUtil.defaults(labelOption, crossStyle.textStyle);\n            }\n        }\n\n        return axis.model.getModel(\n            'axisPointer',\n            new Model(volatileOption, globalAxisPointerModel, ecModel)\n        );\n    }\n\n    function collectSeriesInfo(result, ecModel) {\n        // Prepare data for axis trigger\n        ecModel.eachSeries(function (seriesModel) {\n\n            // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n            var coordSys = seriesModel.coordinateSystem;\n            var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n            var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n            if (!coordSys\n                || seriesTooltipTrigger === 'none'\n                || seriesTooltipTrigger === false\n                || seriesTooltipTrigger === 'item'\n                || seriesTooltipShow === false\n                || seriesModel.get('axisPointer.show', true) === false\n            ) {\n                return;\n            }\n\n            each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n                var axis = axisInfo.axis;\n                if (coordSys.getAxis(axis.dim) === axis) {\n                    axisInfo.seriesModels.push(seriesModel);\n                    axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n                    axisInfo.seriesDataCount += seriesModel.getData().count();\n                }\n            });\n\n        }, this);\n    }\n\n    /**\n     * For example:\n     * {\n     *     axisPointer: {\n     *         links: [{\n     *             xAxisIndex: [2, 4],\n     *             yAxisIndex: 'all'\n     *         }, {\n     *             xAxisId: ['a5', 'a7'],\n     *             xAxisName: 'xxx'\n     *         }]\n     *     }\n     * }\n     */\n    function getLinkGroupIndex(linksOption, axis) {\n        var axisModel = axis.model;\n        var dim = axis.dim;\n        for (var i = 0; i < linksOption.length; i++) {\n            var linkOption = linksOption[i] || {};\n            if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id)\n                || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex)\n                || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)\n            ) {\n                return i;\n            }\n        }\n    }\n\n    function checkPropInLink(linkPropValue, axisPropValue) {\n        return linkPropValue === 'all'\n            || (zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0)\n            || linkPropValue === axisPropValue;\n    }\n\n    helper.fixValue = function (axisModel) {\n        var axisInfo = helper.getAxisInfo(axisModel);\n        if (!axisInfo) {\n            return;\n        }\n\n        var axisPointerModel = axisInfo.axisPointerModel;\n        var scale = axisInfo.axis.scale;\n        var option = axisPointerModel.option;\n        var status = axisPointerModel.get('status');\n        var value = axisPointerModel.get('value');\n\n        // Parse init value for category and time axis.\n        if (value != null) {\n            value = scale.parse(value);\n        }\n\n        var useHandle = isHandleTrigger(axisPointerModel);\n        // If `handle` used, `axisPointer` will always be displayed, so value\n        // and status should be initialized.\n        if (status == null) {\n            option.status = useHandle ? 'show' : 'hide';\n        }\n\n        var extent = scale.getExtent().slice();\n        extent[0] > extent[1] && extent.reverse();\n\n        if (// Pick a value on axis when initializing.\n            value == null\n            // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n            // where we should re-pick a value to keep `handle` displaying normally.\n            || value > extent[1]\n        ) {\n            // Make handle displayed on the end of the axis when init, which looks better.\n            value = extent[1];\n        }\n        if (value < extent[0]) {\n            value = extent[0];\n        }\n\n        option.value = value;\n\n        if (useHandle) {\n            option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n        }\n    };\n\n    helper.getAxisInfo = function (axisModel) {\n        var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n        return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n    };\n\n    helper.getAxisPointerModel = function (axisModel) {\n        var axisInfo = helper.getAxisInfo(axisModel);\n        return axisInfo && axisInfo.axisPointerModel;\n    };\n\n    function isHandleTrigger(axisPointerModel) {\n        return !!axisPointerModel.get('handle.show');\n    }\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @return {string} unique key\n     */\n    var makeKey = helper.makeKey = function (model) {\n        return model.type + '||' + model.id;\n    };\n\n    module.exports = helper;\n\n\n\n/***/ }),\n\n/***/ 1005:\n/***/ (function(module, exports, __webpack_require__) {\n\n// TODO Parse shadow style\n// TODO Only shallow path support\n\n    var zrUtil = __webpack_require__(970);\n\n    module.exports = function (properties) {\n        // Normalize\n        for (var i = 0; i < properties.length; i++) {\n            if (!properties[i][1]) {\n               properties[i][1] = properties[i][0];\n            }\n        }\n        return function (excludes, includes) {\n            var style = {};\n            for (var i = 0; i < properties.length; i++) {\n                var propName = properties[i][1];\n                if ((excludes && zrUtil.indexOf(excludes, propName) >= 0)\n                    || (includes && zrUtil.indexOf(includes, propName) < 0)\n                ) {\n                    continue;\n                }\n                var val = this.getShallow(propName);\n                if (val != null) {\n                    style[properties[i][0]] = val;\n                }\n            }\n            return style;\n        };\n    };\n\n\n/***/ }),\n\n/***/ 1006:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var numberUtil = __webpack_require__(973);\n    var linearMap = numberUtil.linearMap;\n    var zrUtil = __webpack_require__(970);\n    var axisHelper = __webpack_require__(987);\n\n    function fixExtentWithBands(extent, nTick) {\n        var size = extent[1] - extent[0];\n        var len = nTick;\n        var margin = size / len / 2;\n        extent[0] += margin;\n        extent[1] -= margin;\n    }\n\n    var normalizedExtent = [0, 1];\n    /**\n     * @name module:echarts/coord/CartesianAxis\n     * @constructor\n     */\n    var Axis = function (dim, scale, extent) {\n\n        /**\n         * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n         * @type {string}\n         */\n        this.dim = dim;\n\n        /**\n         * Axis scale\n         * @type {module:echarts/coord/scale/*}\n         */\n        this.scale = scale;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        this._extent = extent || [0, 0];\n\n        /**\n         * @type {boolean}\n         */\n        this.inverse = false;\n\n        /**\n         * Usually true when axis has a ordinal scale\n         * @type {boolean}\n         */\n        this.onBand = false;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._labelInterval;\n    };\n\n    Axis.prototype = {\n\n        constructor: Axis,\n\n        /**\n         * If axis extent contain given coord\n         * @param {number} coord\n         * @return {boolean}\n         */\n        contain: function (coord) {\n            var extent = this._extent;\n            var min = Math.min(extent[0], extent[1]);\n            var max = Math.max(extent[0], extent[1]);\n            return coord >= min && coord <= max;\n        },\n\n        /**\n         * If axis extent contain given data\n         * @param {number} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.contain(this.dataToCoord(data));\n        },\n\n        /**\n         * Get coord extent.\n         * @return {Array.<number>}\n         */\n        getExtent: function () {\n            return this._extent.slice();\n        },\n\n        /**\n         * Get precision used for formatting\n         * @param {Array.<number>} [dataExtent]\n         * @return {number}\n         */\n        getPixelPrecision: function (dataExtent) {\n            return numberUtil.getPixelPrecision(\n                dataExtent || this.scale.getExtent(),\n                this._extent\n            );\n        },\n\n        /**\n         * Set coord extent\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var extent = this._extent;\n            extent[0] = start;\n            extent[1] = end;\n        },\n\n        /**\n         * Convert data to coord. Data is the rank if it has a ordinal scale\n         * @param {number} data\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        dataToCoord: function (data, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n            data = scale.normalize(data);\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            return linearMap(data, normalizedExtent, extent, clamp);\n        },\n\n        /**\n         * Convert coord to data. Data is the rank if it has a ordinal scale\n         * @param {number} coord\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        coordToData: function (coord, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            var t = linearMap(coord, extent, normalizedExtent, clamp);\n\n            return this.scale.scale(t);\n        },\n\n        /**\n         * Convert pixel point to data in axis\n         * @param {Array.<number>} point\n         * @param  {boolean} clamp\n         * @return {number} data\n         */\n        pointToData: function (point, clamp) {\n            // Should be implemented in derived class if necessary.\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicksCoords: function (alignWithLabel) {\n            if (this.onBand && !alignWithLabel) {\n                var bands = this.getBands();\n                var coords = [];\n                for (var i = 0; i < bands.length; i++) {\n                    coords.push(bands[i][0]);\n                }\n                if (bands[i - 1]) {\n                    coords.push(bands[i - 1][1]);\n                }\n                return coords;\n            }\n            else {\n                return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n            }\n        },\n\n        /**\n         * Coords of labels are on the ticks or on the middle of bands\n         * @return {Array.<number>}\n         */\n        getLabelsCoords: function () {\n            return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n        },\n\n        /**\n         * Get bands.\n         *\n         * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n         * |---1---|---2---|---3---|---4---|.\n         *\n         * @return {Array}\n         */\n         // FIXME Situation when labels is on ticks\n        getBands: function () {\n            var extent = this.getExtent();\n            var bands = [];\n            var len = this.scale.count();\n            var start = extent[0];\n            var end = extent[1];\n            var span = end - start;\n\n            for (var i = 0; i < len; i++) {\n                bands.push([\n                    span * i / len + start,\n                    span * (i + 1) / len + start\n                ]);\n            }\n            return bands;\n        },\n\n        /**\n         * Get width of band\n         * @return {number}\n         */\n        getBandWidth: function () {\n            var axisExtent = this._extent;\n            var dataExtent = this.scale.getExtent();\n\n            var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0);\n            // Fix #2728, avoid NaN when only one data.\n            len === 0 && (len = 1);\n\n            var size = Math.abs(axisExtent[1] - axisExtent[0]);\n\n            return Math.abs(size) / len;\n        },\n\n        /**\n         * Get interval of the axis label.\n         * @return {number}\n         */\n        getLabelInterval: function () {\n            var labelInterval = this._labelInterval;\n            if (!labelInterval) {\n                var axisModel = this.model;\n                var labelModel = axisModel.getModel('axisLabel');\n                var interval = labelModel.get('interval');\n                if (!(this.type === 'category' && interval === 'auto')) {\n                    labelInterval = interval === 'auto' ? 0 : interval;\n                }\n                else if (this.isHorizontal){\n                    labelInterval = axisHelper.getAxisLabelInterval(\n                        zrUtil.map(this.scale.getTicks(), this.dataToCoord, this),\n                        axisModel.getFormattedLabels(),\n                        labelModel.getFont(),\n                        this.isHorizontal()\n                    );\n                }\n                this._labelInterval = labelInterval;\n            }\n            return labelInterval;\n        }\n\n    };\n\n    module.exports = Axis;\n\n\n/***/ }),\n\n/***/ 1007:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var List = __webpack_require__(986);\n    var completeDimensions = __webpack_require__(994);\n    var zrUtil = __webpack_require__(970);\n    var modelUtil = __webpack_require__(974);\n    var CoordinateSystem = __webpack_require__(997);\n    var getDataItemValue = modelUtil.getDataItemValue;\n    var converDataValue = modelUtil.converDataValue;\n\n    function firstDataNotNull(data) {\n        var i = 0;\n        while (i < data.length && data[i] == null) {\n            i++;\n        }\n        return data[i];\n    }\n    function ifNeedCompleteOrdinalData(data) {\n        var sampleItem = firstDataNotNull(data);\n        return sampleItem != null\n            && !zrUtil.isArray(getDataItemValue(sampleItem));\n    }\n\n    /**\n     * Helper function to create a list from option data\n     */\n    function createListFromArray(data, seriesModel, ecModel) {\n        // If data is undefined\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        var coordSysName = seriesModel.get('coordinateSystem');\n        var creator = creators[coordSysName];\n        var registeredCoordSys = CoordinateSystem.get(coordSysName);\n        var completeDimOpt = {\n            encodeDef: seriesModel.get('encode'),\n            dimsDef: seriesModel.get('dimensions')\n        };\n\n        // FIXME\n        var axesInfo = creator && creator(data, seriesModel, ecModel, completeDimOpt);\n        var dimensions = axesInfo && axesInfo.dimensions;\n        if (!dimensions) {\n            // Get dimensions from registered coordinate system\n            dimensions = (registeredCoordSys && (\n                registeredCoordSys.getDimensionsInfo\n                    ? registeredCoordSys.getDimensionsInfo()\n                    : registeredCoordSys.dimensions.slice()\n            )) || ['x', 'y'];\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n        }\n\n        var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;\n\n        var list = new List(dimensions, seriesModel);\n\n        var nameList = createNameList(axesInfo, data);\n\n        var categories = {};\n        var dimValueGetter = (categoryIndex >= 0 && ifNeedCompleteOrdinalData(data))\n            ? function (itemOpt, dimName, dataIndex, dimIndex) {\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                // Use dataIndex as ordinal value in categoryAxis\n                return dimIndex === categoryIndex\n                    ? dataIndex\n                    : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);\n            }\n            : function (itemOpt, dimName, dataIndex, dimIndex) {\n                var value = getDataItemValue(itemOpt);\n                var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]);\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;\n                if (categoryAxesModels && categoryAxesModels[dimName]) {\n                    // If given value is a category string\n                    if (typeof val === 'string') {\n                        // Lazy get categories\n                        categories[dimName] = categories[dimName]\n                            || categoryAxesModels[dimName].getCategories();\n                        val = zrUtil.indexOf(categories[dimName], val);\n                        if (val < 0 && !isNaN(val)) {\n                            // In case some one write '1', '2' istead of 1, 2\n                            val = +val;\n                        }\n                    }\n                }\n                return val;\n            };\n\n        list.hasItemOption = false;\n        list.initData(data, nameList, dimValueGetter);\n\n        return list;\n    }\n\n    function isStackable(axisType) {\n        return axisType !== 'category' && axisType !== 'time';\n    }\n\n    function getDimTypeByAxis(axisType) {\n        return axisType === 'category'\n            ? 'ordinal'\n            : axisType === 'time'\n            ? 'time'\n            : 'float';\n    }\n\n    /**\n     * Creaters for each coord system.\n     */\n    var creators = {\n\n        cartesian2d: function (data, seriesModel, ecModel, completeDimOpt) {\n\n            var axesModels = zrUtil.map(['xAxis', 'yAxis'], function (name) {\n                return ecModel.queryComponents({\n                    mainType: name,\n                    index: seriesModel.get(name + 'Index'),\n                    id: seriesModel.get(name + 'Id')\n                })[0];\n            });\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            if (__DEV__) {\n                if (!xAxisModel) {\n                    throw new Error('xAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('xAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n                if (!yAxisModel) {\n                    throw new Error('yAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('yAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n\n            var xAxisType = xAxisModel.get('type');\n            var yAxisType = yAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'x',\n                    type: getDimTypeByAxis(xAxisType),\n                    stackable: isStackable(xAxisType)\n                },\n                {\n                    name: 'y',\n                    // If two category axes\n                    type: getDimTypeByAxis(yAxisType),\n                    stackable: isStackable(yAxisType)\n                }\n            ];\n\n            var isXAxisCateogry = xAxisType === 'category';\n            var isYAxisCategory = yAxisType === 'category';\n\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n\n            var categoryAxesModels = {};\n            if (isXAxisCateogry) {\n                categoryAxesModels.x = xAxisModel;\n            }\n            if (isYAxisCategory) {\n                categoryAxesModels.y = yAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isXAxisCateogry ? 0 : (isYAxisCategory ? 1 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        singleAxis: function (data, seriesModel, ecModel, completeDimOpt) {\n\n            var singleAxisModel = ecModel.queryComponents({\n                mainType: 'singleAxis',\n                index: seriesModel.get('singleAxisIndex'),\n                id: seriesModel.get('singleAxisId')\n            })[0];\n\n            if (__DEV__) {\n                if (!singleAxisModel) {\n                    throw new Error('singleAxis should be specified.');\n                }\n            }\n\n            var singleAxisType = singleAxisModel.get('type');\n            var isCategory = singleAxisType === 'category';\n\n            var dimensions = [{\n                name: 'single',\n                type: getDimTypeByAxis(singleAxisType),\n                stackable: isStackable(singleAxisType)\n            }];\n\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n\n            var categoryAxesModels = {};\n            if (isCategory) {\n                categoryAxesModels.single = singleAxisModel;\n            }\n\n            return {\n                dimensions: dimensions,\n                categoryIndex: isCategory ? 0 : -1,\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        polar: function (data, seriesModel, ecModel, completeDimOpt) {\n            var polarModel = ecModel.queryComponents({\n                mainType: 'polar',\n                index: seriesModel.get('polarIndex'),\n                id: seriesModel.get('polarId')\n            })[0];\n\n            var angleAxisModel = polarModel.findAxisModel('angleAxis');\n            var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n\n            if (__DEV__) {\n                if (!angleAxisModel) {\n                    throw new Error('angleAxis option not found');\n                }\n                if (!radiusAxisModel) {\n                    throw new Error('radiusAxis option not found');\n                }\n            }\n\n            var radiusAxisType = radiusAxisModel.get('type');\n            var angleAxisType = angleAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'radius',\n                    type: getDimTypeByAxis(radiusAxisType),\n                    stackable: isStackable(radiusAxisType)\n                },\n                {\n                    name: 'angle',\n                    type: getDimTypeByAxis(angleAxisType),\n                    stackable: isStackable(angleAxisType)\n                }\n            ];\n            var isAngleAxisCateogry = angleAxisType === 'category';\n            var isRadiusAxisCateogry = radiusAxisType === 'category';\n\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n\n            var categoryAxesModels = {};\n            if (isRadiusAxisCateogry) {\n                categoryAxesModels.radius = radiusAxisModel;\n            }\n            if (isAngleAxisCateogry) {\n                categoryAxesModels.angle = angleAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isAngleAxisCateogry ? 1 : (isRadiusAxisCateogry ? 0 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        geo: function (data, seriesModel, ecModel, completeDimOpt) {\n            // TODO Region\n            // 多个散点图系列在同一个地区的时候\n            return {\n                dimensions: completeDimensions([\n                    {name: 'lng'},\n                    {name: 'lat'}\n                ], data, completeDimOpt)\n            };\n        }\n    };\n\n    function createNameList(result, data) {\n        var nameList = [];\n\n        var categoryDim = result && result.dimensions[result.categoryIndex];\n        var categoryAxisModel;\n        if (categoryDim) {\n            categoryAxisModel = result.categoryAxesModels[categoryDim.name];\n        }\n\n        if (categoryAxisModel) {\n            // FIXME Two category axis\n            var categories = categoryAxisModel.getCategories();\n            if (categories) {\n                var dataLen = data.length;\n                // Ordered data is given explicitly like\n                // [[3, 0.2], [1, 0.3], [2, 0.15]]\n                // or given scatter data,\n                // pick the category\n                if (zrUtil.isArray(data[0]) && data[0].length > 1) {\n                    nameList = [];\n                    for (var i = 0; i < dataLen; i++) {\n                        nameList[i] = categories[data[i][result.categoryIndex || 0]];\n                    }\n                }\n                else {\n                    nameList = categories.slice(0);\n                }\n            }\n        }\n\n        return nameList;\n    }\n\n    module.exports = createListFromArray;\n\n\n\n/***/ }),\n\n/***/ 1008:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n\n\n    var zrUtil = __webpack_require__(970);\n\n    var Style = __webpack_require__(1030);\n\n    var Element = __webpack_require__(1031);\n    var RectText = __webpack_require__(1058);\n    // var Stateful = require('./mixin/Stateful');\n\n    /**\n     * @alias module:zrender/graphic/Displayable\n     * @extends module:zrender/Element\n     * @extends module:zrender/graphic/mixin/RectText\n     */\n    function Displayable(opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        // Extend properties\n        for (var name in opts) {\n            if (\n                opts.hasOwnProperty(name) &&\n                name !== 'style'\n            ) {\n                this[name] = opts[name];\n            }\n        }\n\n        /**\n         * @type {module:zrender/graphic/Style}\n         */\n        this.style = new Style(opts.style, this);\n\n        this._rect = null;\n        // Shapes for cascade clipping.\n        this.__clipPaths = [];\n\n        // FIXME Stateful must be mixined after style is setted\n        // Stateful.call(this, opts);\n    }\n\n    Displayable.prototype = {\n\n        constructor: Displayable,\n\n        type: 'displayable',\n\n        /**\n         * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n         * Dirty flag. From which painter will determine if this displayable object needs brush\n         * @name module:zrender/graphic/Displayable#__dirty\n         * @type {boolean}\n         */\n        __dirty: true,\n\n        /**\n         * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n         * If ignore drawing of the displayable object. Mouse event will still be triggered\n         * @name module:/zrender/graphic/Displayable#invisible\n         * @type {boolean}\n         * @default false\n         */\n        invisible: false,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z: 0,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z2: 0,\n\n        /**\n         * z层level，决定绘画在哪层canvas中\n         * @name module:/zrender/graphic/Displayable#zlevel\n         * @type {number}\n         * @default 0\n         */\n        zlevel: 0,\n\n        /**\n         * 是否可拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        draggable: false,\n\n        /**\n         * 是否正在拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        dragging: false,\n\n        /**\n         * 是否相应鼠标事件\n         * @name module:/zrender/graphic/Displayable#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * If enable culling\n         * @type {boolean}\n         * @default false\n         */\n        culling: false,\n\n        /**\n         * Mouse cursor when hovered\n         * @name module:/zrender/graphic/Displayable#cursor\n         * @type {string}\n         */\n        cursor: 'pointer',\n\n        /**\n         * If hover area is bounding rect\n         * @name module:/zrender/graphic/Displayable#rectHover\n         * @type {string}\n         */\n        rectHover: false,\n\n        /**\n         * Render the element progressively when the value >= 0,\n         * usefull for large data.\n         * @type {number}\n         */\n        progressive: -1,\n\n        beforeBrush: function (ctx) {},\n\n        afterBrush: function (ctx) {},\n\n        /**\n         * 图形绘制方法\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        // Interface\n        brush: function (ctx, prevEl) {},\n\n        /**\n         * 获取最小包围盒\n         * @return {module:zrender/core/BoundingRect}\n         */\n        // Interface\n        getBoundingRect: function () {},\n\n        /**\n         * 判断坐标 x, y 是否在图形上\n         * If displayable element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        contain: function (x, y) {\n            return this.rectContain(x, y);\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            cb.call(context, this);\n        },\n\n        /**\n         * 判断坐标 x, y 是否在图形的包围盒上\n         * If bounding rect of element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        rectContain: function (x, y) {\n            var coord = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            return rect.contain(coord[0], coord[1]);\n        },\n\n        /**\n         * 标记图形元素为脏，并且在下一帧重绘\n         * Mark displayable element dirty and refresh next frame\n         */\n        dirty: function () {\n            this.__dirty = true;\n\n            this._rect = null;\n\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * 图形是否会触发事件\n         * If displayable object binded any event\n         * @return {boolean}\n         */\n        // TODO, 通过 bind 绑定的事件\n        // isSilent: function () {\n        //     return !(\n        //         this.hoverable || this.draggable\n        //         || this.onmousemove || this.onmouseover || this.onmouseout\n        //         || this.onmousedown || this.onmouseup || this.onclick\n        //         || this.ondragenter || this.ondragover || this.ondragleave\n        //         || this.ondrop\n        //     );\n        // },\n        /**\n         * Alias for animate('style')\n         * @param {boolean} loop\n         */\n        animateStyle: function (loop) {\n            return this.animate('style', loop);\n        },\n\n        attrKV: function (key, value) {\n            if (key !== 'style') {\n                Element.prototype.attrKV.call(this, key, value);\n            }\n            else {\n                this.style.set(value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setStyle: function (key, value) {\n            this.style.set(key, value);\n            this.dirty(false);\n            return this;\n        },\n\n        /**\n         * Use given style object\n         * @param  {Object} obj\n         */\n        useStyle: function (obj) {\n            this.style = new Style(obj, this);\n            this.dirty(false);\n            return this;\n        }\n    };\n\n    zrUtil.inherits(Displayable, Element);\n\n    zrUtil.mixin(Displayable, RectText);\n    // zrUtil.mixin(Displayable, Stateful);\n\n    module.exports = Displayable;\n\n\n/***/ }),\n\n/***/ 1009:\n/***/ (function(module, exports) {\n\n\n\n    /**\n     * @param {Array.<Object>} colorStops\n     */\n    var Gradient = function (colorStops) {\n\n        this.colorStops = colorStops || [];\n\n    };\n\n    Gradient.prototype = {\n\n        constructor: Gradient,\n\n        addColorStop: function (offset, color) {\n            this.colorStops.push({\n\n                offset: offset,\n\n                color: color\n            });\n        }\n\n    };\n\n    module.exports = Gradient;\n\n\n/***/ }),\n\n/***/ 1010:\n/***/ (function(module, exports) {\n\n\n\n    var lib = {};\n\n    var ORIGIN_METHOD = '\\0__throttleOriginMethod';\n    var RATE = '\\0__throttleRate';\n    var THROTTLE_TYPE = '\\0__throttleType';\n\n    /**\n     * @public\n     * @param {(Function)} fn\n     * @param {number} [delay=0] Unit: ms.\n     * @param {boolean} [debounce=false]\n     *        true: If call interval less than `delay`, only the last call works.\n     *        false: If call interval less than `delay, call works on fixed rate.\n     * @return {(Function)} throttled fn.\n     */\n    lib.throttle = function (fn, delay, debounce) {\n\n        var currCall;\n        var lastCall = 0;\n        var lastExec = 0;\n        var timer = null;\n        var diff;\n        var scope;\n        var args;\n        var debounceNextCall;\n\n        delay = delay || 0;\n\n        function exec() {\n            lastExec = (new Date()).getTime();\n            timer = null;\n            fn.apply(scope, args || []);\n        }\n\n        var cb = function () {\n            currCall = (new Date()).getTime();\n            scope = this;\n            args = arguments;\n            var thisDelay = debounceNextCall || delay;\n            var thisDebounce = debounceNextCall || debounce;\n            debounceNextCall = null;\n            diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\n\n            clearTimeout(timer);\n\n            if (thisDebounce) {\n                timer = setTimeout(exec, thisDelay);\n            }\n            else {\n                if (diff >= 0) {\n                    exec();\n                }\n                else {\n                    timer = setTimeout(exec, -diff);\n                }\n            }\n\n            lastCall = currCall;\n        };\n\n        /**\n         * Clear throttle.\n         * @public\n         */\n        cb.clear = function () {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n        };\n\n        /**\n         * Enable debounce once.\n         */\n        cb.debounceNextCall = function (debounceDelay) {\n            debounceNextCall = debounceDelay;\n        };\n\n        return cb;\n    };\n\n    /**\n     * Create throttle method or update throttle rate.\n     *\n     * @example\n     * ComponentView.prototype.render = function () {\n     *     ...\n     *     throttle.createOrUpdate(\n     *         this,\n     *         '_dispatchAction',\n     *         this.model.get('throttle'),\n     *         'fixRate'\n     *     );\n     * };\n     * ComponentView.prototype.remove = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     * ComponentView.prototype.dispose = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     * @param {number} [rate]\n     * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n     * @return {Function} throttled function.\n     */\n    lib.createOrUpdate = function (obj, fnAttr, rate, throttleType) {\n        var fn = obj[fnAttr];\n\n        if (!fn) {\n            return;\n        }\n\n        var originFn = fn[ORIGIN_METHOD] || fn;\n        var lastThrottleType = fn[THROTTLE_TYPE];\n        var lastRate = fn[RATE];\n\n        if (lastRate !== rate || lastThrottleType !== throttleType) {\n            if (rate == null || !throttleType) {\n                return (obj[fnAttr] = originFn);\n            }\n\n            fn = obj[fnAttr] = lib.throttle(\n                originFn, rate, throttleType === 'debounce'\n            );\n            fn[ORIGIN_METHOD] = originFn;\n            fn[THROTTLE_TYPE] = throttleType;\n            fn[RATE] = rate;\n        }\n\n        return fn;\n    };\n\n    /**\n     * Clear throttle. Example see throttle.createOrUpdate.\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     */\n    lib.clear = function (obj, fnAttr) {\n        var fn = obj[fnAttr];\n        if (fn && fn[ORIGIN_METHOD]) {\n            obj[fnAttr] = fn[ORIGIN_METHOD];\n        }\n    };\n\n    module.exports = lib;\n\n\n\n/***/ }),\n\n/***/ 1011:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Interval scale\n * @module echarts/scale/Interval\n */\n\n\n\n    var numberUtil = __webpack_require__(973);\n    var formatUtil = __webpack_require__(976);\n    var Scale = __webpack_require__(1003);\n    var helper = __webpack_require__(1040);\n\n    var roundNumber = numberUtil.round;\n\n    /**\n     * @alias module:echarts/coord/scale/Interval\n     * @constructor\n     */\n    var IntervalScale = Scale.extend({\n\n        type: 'interval',\n\n        _interval: 0,\n\n        _intervalPrecision: 2,\n\n        setExtent: function (start, end) {\n            var thisExtent = this._extent;\n            //start,end may be a Number like '25',so...\n            if (!isNaN(start)) {\n                thisExtent[0] = parseFloat(start);\n            }\n            if (!isNaN(end)) {\n                thisExtent[1] = parseFloat(end);\n            }\n        },\n\n        unionExtent: function (other) {\n            var extent = this._extent;\n            other[0] < extent[0] && (extent[0] = other[0]);\n            other[1] > extent[1] && (extent[1] = other[1]);\n\n            // unionExtent may called by it's sub classes\n            IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n        },\n        /**\n         * Get interval\n         */\n        getInterval: function () {\n            return this._interval;\n        },\n\n        /**\n         * Set interval\n         */\n        setInterval: function (interval) {\n            this._interval = interval;\n            // Dropped auto calculated niceExtent and use user setted extent\n            // We assume user wan't to set both interval, min, max to get a better result\n            this._niceExtent = this._extent.slice();\n\n            this._intervalPrecision = helper.getIntervalPrecision(interval);\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            return helper.intervalScaleGetTicks(\n                this._interval, this._extent, this._niceExtent, this._intervalPrecision\n            );\n        },\n\n        /**\n         * @return {Array.<string>}\n         */\n        getTicksLabels: function () {\n            var labels = [];\n            var ticks = this.getTicks();\n            for (var i = 0; i < ticks.length; i++) {\n                labels.push(this.getLabel(ticks[i]));\n            }\n            return labels;\n        },\n\n        /**\n         * @param {number} data\n         * @param {Object} [opt]\n         * @param {number|string} [opt.precision] If 'auto', use nice presision.\n         * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n         * @return {string}\n         */\n        getLabel: function (data, opt) {\n            if (data == null) {\n                return '';\n            }\n\n            var precision = opt && opt.precision;\n\n            if (precision == null) {\n                precision = numberUtil.getPrecisionSafe(data) || 0;\n            }\n            else if (precision === 'auto') {\n                // Should be more precise then tick.\n                precision = this._intervalPrecision;\n            }\n\n            // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n            // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n            data = roundNumber(data, precision, true);\n\n            return formatUtil.addCommas(data);\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         *\n         * @param {number} [splitNumber = 5] Desired number of ticks\n         * @param {number} [minInterval]\n         * @param {number} [maxInterval]\n         */\n        niceTicks: function (splitNumber, minInterval, maxInterval) {\n            splitNumber = splitNumber || 5;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (!isFinite(span)) {\n                return;\n            }\n            // User may set axis min 0 and data are all negative\n            // FIXME If it needs to reverse ?\n            if (span < 0) {\n                span = -span;\n                extent.reverse();\n            }\n\n            var result = helper.intervalScaleNiceTicks(\n                extent, splitNumber, minInterval, maxInterval\n            );\n\n            this._intervalPrecision = result.intervalPrecision;\n            this._interval = result.interval;\n            this._niceExtent = result.niceTickExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {Object} opt\n         * @param {number} [opt.splitNumber = 5] Given approx tick number\n         * @param {boolean} [opt.fixMin=false]\n         * @param {boolean} [opt.fixMax=false]\n         * @param {boolean} [opt.minInterval]\n         * @param {boolean} [opt.maxInterval]\n         */\n        niceExtent: function (opt) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                if (extent[0] !== 0) {\n                    // Expand extent\n                    var expandSize = extent[0];\n                    // In the fowllowing case\n                    //      Axis has been fixed max 100\n                    //      Plus data are all 100 and axis extent are [100, 100].\n                    // Extend to the both side will cause expanded max is larger than fixed max.\n                    // So only expand to the smaller side.\n                    if (!opt.fixMax) {\n                        extent[1] += expandSize / 2;\n                        extent[0] -= expandSize / 2;\n                    }\n                    else {\n                        extent[0] -= expandSize / 2;\n                    }\n                }\n                else {\n                    extent[1] = 1;\n                }\n            }\n            var span = extent[1] - extent[0];\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (!isFinite(span)) {\n                extent[0] = 0;\n                extent[1] = 1;\n            }\n\n            this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!opt.fixMin) {\n                extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n            }\n            if (!opt.fixMax) {\n                extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n            }\n        }\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    IntervalScale.create = function () {\n        return new IntervalScale();\n    };\n\n    module.exports = IntervalScale;\n\n\n\n/***/ }),\n\n/***/ 1012:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(970);\n    var formatUtil = __webpack_require__(976);\n    var graphic = __webpack_require__(972);\n    var Model = __webpack_require__(978);\n    var numberUtil = __webpack_require__(973);\n    var remRadian = numberUtil.remRadian;\n    var isRadianAroundZero = numberUtil.isRadianAroundZero;\n    var vec2 = __webpack_require__(975);\n    var matrix = __webpack_require__(985);\n    var v2ApplyTransform = vec2.applyTransform;\n    var retrieve = zrUtil.retrieve;\n\n    var PI = Math.PI;\n\n    function makeAxisEventDataBase(axisModel) {\n        var eventData = {\n            componentType: axisModel.mainType\n        };\n        eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n        return eventData;\n    }\n\n    /**\n     * A final axis is translated and rotated from a \"standard axis\".\n     * So opt.position and opt.rotation is required.\n     *\n     * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n     * for example: (0, 0) ------------> (0, 50)\n     *\n     * nameDirection or tickDirection or labelDirection is 1 means tick\n     * or label is below the standard axis, whereas is -1 means above\n     * the standard axis. labelOffset means offset between label and axis,\n     * which is useful when 'onZero', where axisLabel is in the grid and\n     * label in outside grid.\n     *\n     * Tips: like always,\n     * positive rotation represents anticlockwise, and negative rotation\n     * represents clockwise.\n     * The direction of position coordinate is the same as the direction\n     * of screen coordinate.\n     *\n     * Do not need to consider axis 'inverse', which is auto processed by\n     * axis extent.\n     *\n     * @param {module:zrender/container/Group} group\n     * @param {Object} axisModel\n     * @param {Object} opt Standard axis parameters.\n     * @param {Array.<number>} opt.position [x, y]\n     * @param {number} opt.rotation by radian\n     * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle' or 'center'.\n     * @param {number} [opt.tickDirection=1] 1 or -1\n     * @param {number} [opt.labelDirection=1] 1 or -1\n     * @param {number} [opt.labelOffset=0] Usefull when onZero.\n     * @param {string} [opt.axisLabelShow] default get from axisModel.\n     * @param {string} [opt.axisName] default get from axisModel.\n     * @param {number} [opt.axisNameAvailableWidth]\n     * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n     * @param {number} [opt.labelInterval] Default label interval when label\n     *                                     interval from model is null or 'auto'.\n     * @param {number} [opt.strokeContainThreshold] Default label interval when label\n     * @param {number} [opt.nameTruncateMaxWidth]\n     */\n    var AxisBuilder = function (axisModel, opt) {\n\n        /**\n         * @readOnly\n         */\n        this.opt = opt;\n\n        /**\n         * @readOnly\n         */\n        this.axisModel = axisModel;\n\n        // Default value\n        zrUtil.defaults(\n            opt,\n            {\n                labelOffset: 0,\n                nameDirection: 1,\n                tickDirection: 1,\n                labelDirection: 1,\n                silent: true\n            }\n        );\n\n        /**\n         * @readOnly\n         */\n        this.group = new graphic.Group();\n\n        // FIXME Not use a seperate text group?\n        var dumbGroup = new graphic.Group({\n            position: opt.position.slice(),\n            rotation: opt.rotation\n        });\n\n        // this.group.add(dumbGroup);\n        // this._dumbGroup = dumbGroup;\n\n        dumbGroup.updateTransform();\n        this._transform = dumbGroup.transform;\n\n        this._dumbGroup = dumbGroup;\n    };\n\n    AxisBuilder.prototype = {\n\n        constructor: AxisBuilder,\n\n        hasBuilder: function (name) {\n            return !!builders[name];\n        },\n\n        add: function (name) {\n            builders[name].call(this);\n        },\n\n        getGroup: function () {\n            return this.group;\n        }\n\n    };\n\n    var builders = {\n\n        /**\n         * @private\n         */\n        axisLine: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n\n            if (!axisModel.get('axisLine.show')) {\n                return;\n            }\n\n            var extent = this.axisModel.axis.getExtent();\n\n            var matrix = this._transform;\n            var pt1 = [extent[0], 0];\n            var pt2 = [extent[1], 0];\n            if (matrix) {\n                v2ApplyTransform(pt1, pt1, matrix);\n                v2ApplyTransform(pt2, pt2, matrix);\n            }\n\n            this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                // Id for animation\n                anid: 'line',\n\n                shape: {\n                    x1: pt1[0],\n                    y1: pt1[1],\n                    x2: pt2[0],\n                    y2: pt2[1]\n                },\n                style: zrUtil.extend(\n                    {lineCap: 'round'},\n                    axisModel.getModel('axisLine.lineStyle').getLineStyle()\n                ),\n                strokeContainThreshold: opt.strokeContainThreshold || 5,\n                silent: true,\n                z2: 1\n            })));\n        },\n\n        /**\n         * @private\n         */\n        axisTickLabel: function () {\n            var axisModel = this.axisModel;\n            var opt = this.opt;\n\n            var tickEls = buildAxisTick(this, axisModel, opt);\n            var labelEls = buildAxisLabel(this, axisModel, opt);\n\n            fixMinMaxLabelShow(axisModel, labelEls, tickEls);\n        },\n\n        /**\n         * @private\n         */\n        axisName: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var name = retrieve(opt.axisName, axisModel.get('name'));\n\n            if (!name) {\n                return;\n            }\n\n            var nameLocation = axisModel.get('nameLocation');\n            var nameDirection = opt.nameDirection;\n            var textStyleModel = axisModel.getModel('nameTextStyle');\n            var gap = axisModel.get('nameGap') || 0;\n\n            var extent = this.axisModel.axis.getExtent();\n            var gapSignal = extent[0] > extent[1] ? -1 : 1;\n            var pos = [\n                nameLocation === 'start'\n                    ? extent[0] - gapSignal * gap\n                    : nameLocation === 'end'\n                    ? extent[1] + gapSignal * gap\n                    : (extent[0] + extent[1]) / 2, // 'middle'\n                // Reuse labelOffset.\n                isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0\n            ];\n\n            var labelLayout;\n\n            var nameRotation = axisModel.get('nameRotate');\n            if (nameRotation != null) {\n                nameRotation = nameRotation * PI / 180; // To radian.\n            }\n\n            var axisNameAvailableWidth;\n\n            if (isNameLocationCenter(nameLocation)) {\n                labelLayout = innerTextLayout(\n                    opt.rotation,\n                    nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n                    nameDirection\n                );\n            }\n            else {\n                labelLayout = endTextLayout(\n                    opt, nameLocation, nameRotation || 0, extent\n                );\n\n                axisNameAvailableWidth = opt.axisNameAvailableWidth;\n                if (axisNameAvailableWidth != null) {\n                    axisNameAvailableWidth = Math.abs(\n                        axisNameAvailableWidth / Math.sin(labelLayout.rotation)\n                    );\n                    !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n                }\n            }\n\n            var textFont = textStyleModel.getFont();\n\n            var truncateOpt = axisModel.get('nameTruncate', true) || {};\n            var ellipsis = truncateOpt.ellipsis;\n            var maxWidth = retrieve(\n                opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth\n            );\n            // FIXME\n            // truncate rich text? (consider performance)\n            var truncatedText = (ellipsis != null && maxWidth != null)\n                ? formatUtil.truncateText(\n                    name, maxWidth, textFont, ellipsis,\n                    {minChar: 2, placeholder: truncateOpt.placeholder}\n                )\n                : name;\n\n            var tooltipOpt = axisModel.get('tooltip', true);\n\n            var mainType = axisModel.mainType;\n            var formatterParams = {\n                componentType: mainType,\n                name: name,\n                $vars: ['name']\n            };\n            formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n\n            var textEl = new graphic.Text({\n                // Id for animation\n                anid: 'name',\n\n                __fullText: name,\n                __truncatedText: truncatedText,\n\n                position: pos,\n                rotation: labelLayout.rotation,\n                silent: isSilent(axisModel),\n                z2: 1,\n                tooltip: (tooltipOpt && tooltipOpt.show)\n                    ? zrUtil.extend({\n                        content: name,\n                        formatter: function () {\n                            return name;\n                        },\n                        formatterParams: formatterParams\n                    }, tooltipOpt)\n                    : null\n            });\n\n            graphic.setTextStyle(textEl.style, textStyleModel, {\n                text: truncatedText,\n                textFont: textFont,\n                textFill: textStyleModel.getTextColor()\n                    || axisModel.get('axisLine.lineStyle.color'),\n                textAlign: labelLayout.textAlign,\n                textVerticalAlign: labelLayout.textVerticalAlign\n            });\n\n            if (axisModel.get('triggerEvent')) {\n                textEl.eventData = makeAxisEventDataBase(axisModel);\n                textEl.eventData.targetType = 'axisName';\n                textEl.eventData.name = name;\n            }\n\n            // FIXME\n            this._dumbGroup.add(textEl);\n            textEl.updateTransform();\n\n            this.group.add(textEl);\n\n            textEl.decomposeTransform();\n        }\n\n    };\n\n    /**\n     * @public\n     * @static\n     * @param {Object} opt\n     * @param {number} axisRotation in radian\n     * @param {number} textRotation in radian\n     * @param {number} direction\n     * @return {Object} {\n     *  rotation, // according to axis\n     *  textAlign,\n     *  textVerticalAlign\n     * }\n     */\n    var innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n        var rotationDiff = remRadian(textRotation - axisRotation);\n        var textAlign;\n        var textVerticalAlign;\n\n        if (isRadianAroundZero(rotationDiff)) { // Label is parallel with axis line.\n            textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI)) { // Label is inverse parallel with axis line.\n            textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else {\n            textVerticalAlign = 'middle';\n\n            if (rotationDiff > 0 && rotationDiff < PI) {\n                textAlign = direction > 0 ? 'right' : 'left';\n            }\n            else {\n                textAlign = direction > 0 ? 'left' : 'right';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    };\n\n    function endTextLayout(opt, textPosition, textRotate, extent) {\n        var rotationDiff = remRadian(textRotate - opt.rotation);\n        var textAlign;\n        var textVerticalAlign;\n        var inverse = extent[0] > extent[1];\n        var onLeft = (textPosition === 'start' && !inverse)\n            || (textPosition !== 'start' && inverse);\n\n        if (isRadianAroundZero(rotationDiff - PI / 2)) {\n            textVerticalAlign = onLeft ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n            textVerticalAlign = onLeft ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else {\n            textVerticalAlign = 'middle';\n            if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n                textAlign = onLeft ? 'left' : 'right';\n            }\n            else {\n                textAlign = onLeft ? 'right' : 'left';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    }\n\n    function isSilent(axisModel) {\n        var tooltipOpt = axisModel.get('tooltip');\n        return axisModel.get('silent')\n            // Consider mouse cursor, add these restrictions.\n            || !(\n                axisModel.get('triggerEvent') || (tooltipOpt && tooltipOpt.show)\n            );\n    }\n\n    function fixMinMaxLabelShow(axisModel, labelEls, tickEls) {\n        // If min or max are user set, we need to check\n        // If the tick on min(max) are overlap on their neighbour tick\n        // If they are overlapped, we need to hide the min(max) tick label\n        var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n        var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n\n        // FIXME\n        // Have not consider onBand yet, where tick els is more than label els.\n\n        labelEls = labelEls || [];\n        tickEls = tickEls || [];\n\n        var firstLabel = labelEls[0];\n        var nextLabel = labelEls[1];\n        var lastLabel = labelEls[labelEls.length - 1];\n        var prevLabel = labelEls[labelEls.length - 2];\n\n        var firstTick = tickEls[0];\n        var nextTick = tickEls[1];\n        var lastTick = tickEls[tickEls.length - 1];\n        var prevTick = tickEls[tickEls.length - 2];\n\n        if (showMinLabel === false) {\n            ignoreEl(firstLabel);\n            ignoreEl(firstTick);\n        }\n        else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n            if (showMinLabel) {\n                ignoreEl(nextLabel);\n                ignoreEl(nextTick);\n            }\n            else {\n                ignoreEl(firstLabel);\n                ignoreEl(firstTick);\n            }\n        }\n\n        if (showMaxLabel === false) {\n            ignoreEl(lastLabel);\n            ignoreEl(lastTick);\n        }\n        else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n            if (showMaxLabel) {\n                ignoreEl(prevLabel);\n                ignoreEl(prevTick);\n            }\n            else {\n                ignoreEl(lastLabel);\n                ignoreEl(lastTick);\n            }\n        }\n    }\n\n    function ignoreEl(el) {\n        el && (el.ignore = true);\n    }\n\n    function isTwoLabelOverlapped(current, next, labelLayout) {\n        // current and next has the same rotation.\n        var firstRect = current && current.getBoundingRect().clone();\n        var nextRect = next && next.getBoundingRect().clone();\n\n        if (!firstRect || !nextRect) {\n            return;\n        }\n\n        // When checking intersect of two rotated labels, we use mRotationBack\n        // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n        var mRotationBack = matrix.identity([]);\n        matrix.rotate(mRotationBack, mRotationBack, -current.rotation);\n\n        firstRect.applyTransform(matrix.mul([], mRotationBack, current.getLocalTransform()));\n        nextRect.applyTransform(matrix.mul([], mRotationBack, next.getLocalTransform()));\n\n        return firstRect.intersect(nextRect);\n    }\n\n    function isNameLocationCenter(nameLocation) {\n        return nameLocation === 'middle' || nameLocation === 'center';\n    }\n\n    /**\n     * @static\n     */\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (\n        axis,\n        i,\n        interval,\n        ticksCnt,\n        showMinLabel,\n        showMaxLabel\n    ) {\n        if (i === 0 && showMinLabel || i === ticksCnt - 1 && showMaxLabel) {\n            return false;\n        }\n\n        // FIXME\n        // Have not consider label overlap (if label is too long) yet.\n\n        var rawTick;\n        var scale = axis.scale;\n        return scale.type === 'ordinal'\n            && (\n                typeof interval === 'function'\n                    ? (\n                        rawTick = scale.getTicks()[i],\n                        !interval(rawTick, scale.getLabel(rawTick))\n                    )\n                    : i % (interval + 1)\n            );\n    };\n\n    /**\n     * @static\n     */\n    var getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n        var interval = model.get('interval');\n        if (interval == null || interval == 'auto') {\n            interval = labelInterval;\n        }\n        return interval;\n    };\n\n    function buildAxisTick(axisBuilder, axisModel, opt) {\n        var axis = axisModel.axis;\n\n        if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n            return;\n        }\n\n        var tickModel = axisModel.getModel('axisTick');\n\n        var lineStyleModel = tickModel.getModel('lineStyle');\n        var tickLen = tickModel.get('length');\n\n        var tickInterval = getInterval(tickModel, opt.labelInterval);\n        var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel'));\n        // FIXME\n        // Corresponds to ticksCoords ?\n        var ticks = axis.scale.getTicks();\n\n        var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n        var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n\n        var pt1 = [];\n        var pt2 = [];\n        var matrix = axisBuilder._transform;\n\n        var tickEls = [];\n\n        var ticksCnt = ticksCoords.length;\n        for (var i = 0; i < ticksCnt; i++) {\n            // Only ordinal scale support tick interval\n            if (ifIgnoreOnTick(\n                axis, i, tickInterval, ticksCnt,\n                showMinLabel, showMaxLabel\n            )) {\n                continue;\n            }\n\n            var tickCoord = ticksCoords[i];\n\n            pt1[0] = tickCoord;\n            pt1[1] = 0;\n            pt2[0] = tickCoord;\n            pt2[1] = opt.tickDirection * tickLen;\n\n            if (matrix) {\n                v2ApplyTransform(pt1, pt1, matrix);\n                v2ApplyTransform(pt2, pt2, matrix);\n            }\n            // Tick line, Not use group transform to have better line draw\n            var tickEl = new graphic.Line(graphic.subPixelOptimizeLine({\n                // Id for animation\n                anid: 'tick_' + ticks[i],\n\n                shape: {\n                    x1: pt1[0],\n                    y1: pt1[1],\n                    x2: pt2[0],\n                    y2: pt2[1]\n                },\n                style: zrUtil.defaults(\n                    lineStyleModel.getLineStyle(),\n                    {\n                        stroke: axisModel.get('axisLine.lineStyle.color')\n                    }\n                ),\n                z2: 2,\n                silent: true\n            }));\n            axisBuilder.group.add(tickEl);\n            tickEls.push(tickEl);\n        }\n\n        return tickEls;\n    }\n\n    function buildAxisLabel(axisBuilder, axisModel, opt) {\n        var axis = axisModel.axis;\n        var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n        if (!show || axis.scale.isBlank()) {\n            return;\n        }\n\n        var labelModel = axisModel.getModel('axisLabel');\n        var labelMargin = labelModel.get('margin');\n        var ticks = axis.scale.getTicks();\n        var labels = axisModel.getFormattedLabels();\n\n        // Special label rotate.\n        var labelRotation = (\n            retrieve(opt.labelRotate, labelModel.get('rotate')) || 0\n        ) * PI / 180;\n\n        var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n        var categoryData = axisModel.get('data');\n\n        var labelEls = [];\n        var silent = isSilent(axisModel);\n        var triggerEvent = axisModel.get('triggerEvent');\n\n        var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n        var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n\n        zrUtil.each(ticks, function (tickVal, index) {\n            if (ifIgnoreOnTick(\n                axis, index, opt.labelInterval, ticks.length,\n                showMinLabel, showMaxLabel\n            )) {\n                    return;\n            }\n\n            var itemLabelModel = labelModel;\n            if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n                itemLabelModel = new Model(\n                    categoryData[tickVal].textStyle, labelModel, axisModel.ecModel\n                );\n            }\n\n            var textColor = itemLabelModel.getTextColor()\n                || axisModel.get('axisLine.lineStyle.color');\n\n            var tickCoord = axis.dataToCoord(tickVal);\n            var pos = [\n                tickCoord,\n                opt.labelOffset + opt.labelDirection * labelMargin\n            ];\n            var labelStr = axis.scale.getLabel(tickVal);\n\n            var textEl = new graphic.Text({\n                // Id for animation\n                anid: 'label_' + tickVal,\n                position: pos,\n                rotation: labelLayout.rotation,\n                silent: silent,\n                z2: 10\n            });\n\n            graphic.setTextStyle(textEl.style, itemLabelModel, {\n                text: labels[index],\n                textAlign: itemLabelModel.getShallow('align', true)\n                    || labelLayout.textAlign,\n                textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true)\n                    || itemLabelModel.getShallow('baseline', true)\n                    || labelLayout.textVerticalAlign,\n                textFill: typeof textColor === 'function'\n                    ? textColor(\n                        // (1) In category axis with data zoom, tick is not the original\n                        // index of axis.data. So tick should not be exposed to user\n                        // in category axis.\n                        // (2) Compatible with previous version, which always returns labelStr.\n                        // But in interval scale labelStr is like '223,445', which maked\n                        // user repalce ','. So we modify it to return original val but remain\n                        // it as 'string' to avoid error in replacing.\n                        axis.type === 'category' ? labelStr : axis.type === 'value' ? tickVal + '' : tickVal,\n                        index\n                    )\n                    : textColor\n            });\n\n            // Pack data for mouse event\n            if (triggerEvent) {\n                textEl.eventData = makeAxisEventDataBase(axisModel);\n                textEl.eventData.targetType = 'axisLabel';\n                textEl.eventData.value = labelStr;\n            }\n\n            // FIXME\n            axisBuilder._dumbGroup.add(textEl);\n            textEl.updateTransform();\n\n            labelEls.push(textEl);\n            axisBuilder.group.add(textEl);\n\n            textEl.decomposeTransform();\n\n        });\n\n        return labelEls;\n    }\n\n\n    module.exports = AxisBuilder;\n\n\n\n/***/ }),\n\n/***/ 1013:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var axisPointerModelHelper = __webpack_require__(1004);\n\n    /**\n     * Base class of AxisView.\n     */\n    var AxisView = __webpack_require__(971).extendComponentView({\n\n        type: 'axis',\n\n        /**\n         * @private\n         */\n        _axisPointer: null,\n\n        /**\n         * @protected\n         * @type {string}\n         */\n        axisPointerClass: null,\n\n        /**\n         * @override\n         */\n        render: function (axisModel, ecModel, api, payload) {\n            // FIXME\n            // This process should proformed after coordinate systems updated\n            // (axis scale updated), and should be performed each time update.\n            // So put it here temporarily, although it is not appropriate to\n            // put a model-writing procedure in `view`.\n            this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n\n            AxisView.superApply(this, 'render', arguments);\n\n            updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n        },\n\n        /**\n         * Action handler.\n         * @public\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/model/Global} ecModel\n         * @param {module:echarts/ExtensionAPI} api\n         * @param {Object} payload\n         */\n        updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n            updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n        },\n\n        /**\n         * @override\n         */\n        remove: function (ecModel, api) {\n            var axisPointer = this._axisPointer;\n            axisPointer && axisPointer.remove(api);\n            AxisView.superApply(this, 'remove', arguments);\n        },\n\n        /**\n         * @override\n         */\n        dispose: function (ecModel, api) {\n            disposeAxisPointer(this, api);\n            AxisView.superApply(this, 'dispose', arguments);\n        }\n\n    });\n\n    function updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n        var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n        if (!Clazz) {\n            return;\n        }\n        var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n        axisPointerModel\n            ? (axisView._axisPointer || (axisView._axisPointer = new Clazz()))\n                .render(axisModel, axisPointerModel, api, forceRender)\n            : disposeAxisPointer(axisView, api);\n    }\n\n    function disposeAxisPointer(axisView, ecModel, api) {\n        var axisPointer = axisView._axisPointer;\n        axisPointer && axisPointer.dispose(ecModel, api);\n        axisView._axisPointer = null;\n    }\n\n    var axisPointerClazz = [];\n\n    AxisView.registerAxisPointerClass = function (type, clazz) {\n        if (__DEV__) {\n            if (axisPointerClazz[type]) {\n                throw new Error('axisPointer ' + type + ' exists');\n            }\n        }\n        axisPointerClazz[type] = clazz;\n    };\n\n    AxisView.getAxisPointerClass = function (type) {\n        return type && axisPointerClazz[type];\n    };\n\n    module.exports = AxisView;\n\n\n/***/ }),\n\n/***/ 1014:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var LRU = __webpack_require__(1029);\n    var globalImageCache = new LRU(50);\n\n    var helper = {};\n\n    /**\n     * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n     * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n     */\n    helper.findExistImage = function (newImageOrSrc) {\n        if (typeof newImageOrSrc === 'string') {\n            var cachedImgObj = globalImageCache.get(newImageOrSrc);\n            return cachedImgObj && cachedImgObj.image;\n        }\n        else {\n            return newImageOrSrc;\n        }\n    };\n\n    /**\n     * Caution: User should cache loaded images, but not just count on LRU.\n     * Consider if required images more than LRU size, will dead loop occur?\n     *\n     * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n     * @param {HTMLImageElement|HTMLCanvasElement|Canvas} image Existent image.\n     * @param {module:zrender/Element} [hostEl] For calling `dirty`.\n     * @param {Function} [cb] params: (image, cbPayload)\n     * @param {Object} [cbPayload] Payload on cb calling.\n     * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n     */\n    helper.createOrUpdateImage = function (newImageOrSrc, image, hostEl, cb, cbPayload) {\n        if (!newImageOrSrc) {\n            return image;\n        }\n        else if (typeof newImageOrSrc === 'string') {\n\n            // Image should not be loaded repeatly.\n            if ((image && image.__zrImageSrc === newImageOrSrc) || !hostEl) {\n                return image;\n            }\n\n            // Only when there is no existent image or existent image src\n            // is different, this method is responsible for load.\n            var cachedImgObj = globalImageCache.get(newImageOrSrc);\n\n            var pendingWrap = {hostEl: hostEl, cb: cb, cbPayload: cbPayload};\n\n            if (cachedImgObj) {\n                image = cachedImgObj.image;\n                !isImageReady(image) && cachedImgObj.pending.push(pendingWrap);\n            }\n            else {\n                !image && (image = new Image());\n                image.onload = imageOnLoad;\n\n                globalImageCache.put(\n                    newImageOrSrc,\n                    image.__cachedImgObj = {\n                        image: image,\n                        pending: [pendingWrap]\n                    }\n                );\n\n                image.src = image.__zrImageSrc = newImageOrSrc;\n            }\n\n            return image;\n        }\n        // newImageOrSrc is an HTMLImageElement or HTMLCanvasElement or Canvas\n        else {\n            return newImageOrSrc;\n        }\n    };\n\n    function imageOnLoad() {\n        var cachedImgObj = this.__cachedImgObj;\n        this.onload = this.__cachedImgObj = null;\n\n        for (var i = 0; i < cachedImgObj.pending.length; i++) {\n            var pendingWrap = cachedImgObj.pending[i];\n            var cb = pendingWrap.cb;\n            cb && cb(this, pendingWrap.cbPayload);\n            pendingWrap.hostEl.dirty();\n        }\n        cachedImgObj.pending.length = 0;\n    }\n\n    var isImageReady = helper.isImageReady = function (image) {\n        return image && image.width && image.height;\n    };\n\n    module.exports = helper;\n\n\n\n/***/ }),\n\n/***/ 1015:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(970);\n    var clazz = __webpack_require__(983);\n\n    var parseClassType = clazz.parseClassType;\n\n    var base = 0;\n\n    var componentUtil = {};\n\n    var DELIMITER = '_';\n\n    /**\n     * @public\n     * @param {string} type\n     * @return {string}\n     */\n    componentUtil.getUID = function (type) {\n        // Considering the case of crossing js context,\n        // use Math.random to make id as unique as possible.\n        return [(type || ''), base++, Math.random()].join(DELIMITER);\n    };\n\n    /**\n     * @inner\n     */\n    componentUtil.enableSubTypeDefaulter = function (entity) {\n\n        var subTypeDefaulters = {};\n\n        entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n            componentType = parseClassType(componentType);\n            subTypeDefaulters[componentType.main] = defaulter;\n        };\n\n        entity.determineSubType = function (componentType, option) {\n            var type = option.type;\n            if (!type) {\n                var componentTypeMain = parseClassType(componentType).main;\n                if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n                    type = subTypeDefaulters[componentTypeMain](option);\n                }\n            }\n            return type;\n        };\n\n        return entity;\n    };\n\n    /**\n     * Topological travel on Activity Network (Activity On Vertices).\n     * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n     *\n     * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n     *\n     * If there is circle dependencey, Error will be thrown.\n     *\n     */\n    componentUtil.enableTopologicalTravel = function (entity, dependencyGetter) {\n\n        /**\n         * @public\n         * @param {Array.<string>} targetNameList Target Component type list.\n         *                                           Can be ['aa', 'bb', 'aa.xx']\n         * @param {Array.<string>} fullNameList By which we can build dependency graph.\n         * @param {Function} callback Params: componentType, dependencies.\n         * @param {Object} context Scope of callback.\n         */\n        entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n            if (!targetNameList.length) {\n                return;\n            }\n\n            var result = makeDepndencyGraph(fullNameList);\n            var graph = result.graph;\n            var stack = result.noEntryList;\n\n            var targetNameSet = {};\n            zrUtil.each(targetNameList, function (name) {\n                targetNameSet[name] = true;\n            });\n\n            while (stack.length) {\n                var currComponentType = stack.pop();\n                var currVertex = graph[currComponentType];\n                var isInTargetNameSet = !!targetNameSet[currComponentType];\n                if (isInTargetNameSet) {\n                    callback.call(context, currComponentType, currVertex.originalDeps.slice());\n                    delete targetNameSet[currComponentType];\n                }\n                zrUtil.each(\n                    currVertex.successor,\n                    isInTargetNameSet ? removeEdgeAndAdd : removeEdge\n                );\n            }\n\n            zrUtil.each(targetNameSet, function () {\n                throw new Error('Circle dependency may exists');\n            });\n\n            function removeEdge(succComponentType) {\n                graph[succComponentType].entryCount--;\n                if (graph[succComponentType].entryCount === 0) {\n                    stack.push(succComponentType);\n                }\n            }\n\n            // Consider this case: legend depends on series, and we call\n            // chart.setOption({series: [...]}), where only series is in option.\n            // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n            // not be called, but only sereis.mergeOption is called. Thus legend\n            // have no chance to update its local record about series (like which\n            // name of series is available in legend).\n            function removeEdgeAndAdd(succComponentType) {\n                targetNameSet[succComponentType] = true;\n                removeEdge(succComponentType);\n            }\n        };\n\n        /**\n         * DepndencyGraph: {Object}\n         * key: conponentType,\n         * value: {\n         *     successor: [conponentTypes...],\n         *     originalDeps: [conponentTypes...],\n         *     entryCount: {number}\n         * }\n         */\n        function makeDepndencyGraph(fullNameList) {\n            var graph = {};\n            var noEntryList = [];\n\n            zrUtil.each(fullNameList, function (name) {\n\n                var thisItem = createDependencyGraphItem(graph, name);\n                var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n\n                var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n                thisItem.entryCount = availableDeps.length;\n                if (thisItem.entryCount === 0) {\n                    noEntryList.push(name);\n                }\n\n                zrUtil.each(availableDeps, function (dependentName) {\n                    if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n                        thisItem.predecessor.push(dependentName);\n                    }\n                    var thatItem = createDependencyGraphItem(graph, dependentName);\n                    if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n                        thatItem.successor.push(name);\n                    }\n                });\n            });\n\n            return {graph: graph, noEntryList: noEntryList};\n        }\n\n        function createDependencyGraphItem(graph, name) {\n            if (!graph[name]) {\n                graph[name] = {predecessor: [], successor: []};\n            }\n            return graph[name];\n        }\n\n        function getAvailableDependencies(originalDeps, fullNameList) {\n            var availableDeps = [];\n            zrUtil.each(originalDeps, function (dep) {\n                zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n            });\n            return availableDeps;\n        }\n    };\n\n    module.exports = componentUtil;\n\n\n/***/ }),\n\n/***/ 1016:\n/***/ (function(module, exports) {\n\n// https://github.com/mziccard/node-timsort\n\n    var DEFAULT_MIN_MERGE = 32;\n\n    var DEFAULT_MIN_GALLOPING = 7;\n\n    var DEFAULT_TMP_STORAGE_LENGTH = 256;\n\n    function minRunLength(n) {\n        var r = 0;\n\n        while (n >= DEFAULT_MIN_MERGE) {\n            r |= n & 1;\n            n >>= 1;\n        }\n\n        return n + r;\n    }\n\n    function makeAscendingRun(array, lo, hi, compare) {\n        var runHi = lo + 1;\n\n        if (runHi === hi) {\n            return 1;\n        }\n\n        if (compare(array[runHi++], array[lo]) < 0) {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n                runHi++;\n            }\n\n            reverseRun(array, lo, runHi);\n        }\n        else {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n                runHi++;\n            }\n        }\n\n        return runHi - lo;\n    }\n\n    function reverseRun(array, lo, hi) {\n        hi--;\n\n        while (lo < hi) {\n            var t = array[lo];\n            array[lo++] = array[hi];\n            array[hi--] = t;\n        }\n    }\n\n    function binaryInsertionSort(array, lo, hi, start, compare) {\n        if (start === lo) {\n            start++;\n        }\n\n        for (; start < hi; start++) {\n            var pivot = array[start];\n\n            var left = lo;\n            var right = start;\n            var mid;\n\n            while (left < right) {\n                mid = left + right >>> 1;\n\n                if (compare(pivot, array[mid]) < 0) {\n                    right = mid;\n                }\n                else {\n                    left = mid + 1;\n                }\n            }\n\n            var n = start - left;\n\n            switch (n) {\n                case 3:\n                    array[left + 3] = array[left + 2];\n\n                case 2:\n                    array[left + 2] = array[left + 1];\n\n                case 1:\n                    array[left + 1] = array[left];\n                    break;\n                default:\n                    while (n > 0) {\n                        array[left + n] = array[left + n - 1];\n                        n--;\n                    }\n            }\n\n            array[left] = pivot;\n        }\n    }\n\n    function gallopLeft(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) > 0) {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n        else {\n            maxOffset = hint + 1;\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n\n        lastOffset++;\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) > 0) {\n                lastOffset = m + 1;\n            }\n            else {\n                offset = m;\n            }\n        }\n        return offset;\n    }\n\n    function gallopRight(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) < 0) {\n            maxOffset = hint + 1;\n\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n        else {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n\n        lastOffset++;\n\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) < 0) {\n                offset = m;\n            }\n            else {\n                lastOffset = m + 1;\n            }\n        }\n\n        return offset;\n    }\n\n    function TimSort(array, compare) {\n        var minGallop = DEFAULT_MIN_GALLOPING;\n        var length = 0;\n        var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n        var stackLength = 0;\n        var runStart;\n        var runLength;\n        var stackSize = 0;\n\n        length = array.length;\n\n        if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n            tmpStorageLength = length >>> 1;\n        }\n\n        var tmp = [];\n\n        stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n\n        runStart = [];\n        runLength = [];\n\n        function pushRun(_runStart, _runLength) {\n            runStart[stackSize] = _runStart;\n            runLength[stackSize] = _runLength;\n            stackSize += 1;\n        }\n\n        function mergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n                    if (runLength[n - 1] < runLength[n + 1]) {\n                        n--;\n                    }\n                }\n                else if (runLength[n] > runLength[n + 1]) {\n                    break;\n                }\n                mergeAt(n);\n            }\n        }\n\n        function forceMergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n                    n--;\n                }\n\n                mergeAt(n);\n            }\n        }\n\n        function mergeAt(i) {\n            var start1 = runStart[i];\n            var length1 = runLength[i];\n            var start2 = runStart[i + 1];\n            var length2 = runLength[i + 1];\n\n            runLength[i] = length1 + length2;\n\n            if (i === stackSize - 3) {\n                runStart[i + 1] = runStart[i + 2];\n                runLength[i + 1] = runLength[i + 2];\n            }\n\n            stackSize--;\n\n            var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n            start1 += k;\n            length1 -= k;\n\n            if (length1 === 0) {\n                return;\n            }\n\n            length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n            if (length2 === 0) {\n                return;\n            }\n\n            if (length1 <= length2) {\n                mergeLow(start1, length1, start2, length2);\n            }\n            else {\n                mergeHigh(start1, length1, start2, length2);\n            }\n        }\n\n        function mergeLow(start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length1; i++) {\n                tmp[i] = array[start1 + i];\n            }\n\n            var cursor1 = 0;\n            var cursor2 = start2;\n            var dest = start1;\n\n            array[dest++] = array[cursor2++];\n\n            if (--length2 === 0) {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n                return;\n            }\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n                return;\n            }\n\n            var _minGallop = minGallop;\n            var count1, count2, exit;\n\n            while (1) {\n                count1 = 0;\n                count2 = 0;\n                exit = false;\n\n                do {\n                    if (compare(array[cursor2], tmp[cursor1]) < 0) {\n                        array[dest++] = array[cursor2++];\n                        count2++;\n                        count1 = 0;\n\n                        if (--length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest++] = tmp[cursor1++];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n                    if (count1 !== 0) {\n                        for (i = 0; i < count1; i++) {\n                            array[dest + i] = tmp[cursor1 + i];\n                        }\n\n                        dest += count1;\n                        cursor1 += count1;\n                        length1 -= count1;\n                        if (length1 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest++] = array[cursor2++];\n\n                    if (--length2 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n                    if (count2 !== 0) {\n                        for (i = 0; i < count2; i++) {\n                            array[dest + i] = array[cursor2 + i];\n                        }\n\n                        dest += count2;\n                        cursor2 += count2;\n                        length2 -= count2;\n\n                        if (length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    array[dest++] = tmp[cursor1++];\n\n                    if (--length1 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            minGallop < 1 && (minGallop = 1);\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n            }\n            else if (length1 === 0) {\n                throw new Error();\n                // throw new Error('mergeLow preconditions were not respected');\n            }\n            else {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n            }\n        }\n\n        function mergeHigh (start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length2; i++) {\n                tmp[i] = array[start2 + i];\n            }\n\n            var cursor1 = start1 + length1 - 1;\n            var cursor2 = length2 - 1;\n            var dest = start2 + length2 - 1;\n            var customCursor = 0;\n            var customDest = 0;\n\n            array[dest--] = array[cursor1--];\n\n            if (--length1 === 0) {\n                customCursor = dest - (length2 - 1);\n\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n\n                return;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n                return;\n            }\n\n            var _minGallop = minGallop;\n\n            while (true) {\n                var count1 = 0;\n                var count2 = 0;\n                var exit = false;\n\n                do {\n                    if (compare(tmp[cursor2], array[cursor1]) < 0) {\n                        array[dest--] = array[cursor1--];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest--] = tmp[cursor2--];\n                        count2++;\n                        count1 = 0;\n                        if (--length2 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n                    if (count1 !== 0) {\n                        dest -= count1;\n                        cursor1 -= count1;\n                        length1 -= count1;\n                        customDest = dest + 1;\n                        customCursor = cursor1 + 1;\n\n                        for (i = count1 - 1; i >= 0; i--) {\n                            array[customDest + i] = array[customCursor + i];\n                        }\n\n                        if (length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = tmp[cursor2--];\n\n                    if (--length2 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n                    if (count2 !== 0) {\n                        dest -= count2;\n                        cursor2 -= count2;\n                        length2 -= count2;\n                        customDest = dest + 1;\n                        customCursor = cursor2 + 1;\n\n                        for (i = 0; i < count2; i++) {\n                            array[customDest + i] = tmp[customCursor + i];\n                        }\n\n                        if (length2 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = array[cursor1--];\n\n                    if (--length1 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            if (minGallop < 1) {\n                minGallop = 1;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n            }\n            else if (length2 === 0) {\n                throw new Error();\n                // throw new Error('mergeHigh preconditions were not respected');\n            }\n            else {\n                customCursor = dest - (length2 - 1);\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n            }\n        }\n\n        this.mergeRuns = mergeRuns;\n        this.forceMergeRuns = forceMergeRuns;\n        this.pushRun = pushRun;\n    }\n\n    function sort(array, compare, lo, hi) {\n        if (!lo) {\n            lo = 0;\n        }\n        if (!hi) {\n            hi = array.length;\n        }\n\n        var remaining = hi - lo;\n\n        if (remaining < 2) {\n            return;\n        }\n\n        var runLength = 0;\n\n        if (remaining < DEFAULT_MIN_MERGE) {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n            return;\n        }\n\n        var ts = new TimSort(array, compare);\n\n        var minRun = minRunLength(remaining);\n\n        do {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            if (runLength < minRun) {\n                var force = remaining;\n                if (force > minRun) {\n                    force = minRun;\n                }\n\n                binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n                runLength = force;\n            }\n\n            ts.pushRun(lo, runLength);\n            ts.mergeRuns();\n\n            remaining -= runLength;\n            lo += runLength;\n        } while (remaining !== 0);\n\n        ts.forceMergeRuns();\n    }\n\n    module.exports = sort;\n\n\n/***/ }),\n\n/***/ 1017:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(970);\n    var axisHelper = __webpack_require__(987);\n\n    function getName(obj) {\n        if (zrUtil.isObject(obj) && obj.value != null) {\n            return obj.value;\n        }\n        else {\n            return obj + '';\n        }\n    }\n\n    module.exports = {\n\n        /**\n         * Format labels\n         * @return {Array.<string>}\n         */\n        getFormattedLabels: function () {\n            return axisHelper.getFormattedLabels(\n                this.axis,\n                this.get('axisLabel.formatter')\n            );\n        },\n\n        /**\n         * Get categories\n         */\n        getCategories: function () {\n            return this.get('type') === 'category'\n                && zrUtil.map(this.get('data'), getName);\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n         */\n        getMin: function (origin) {\n            var option = this.option;\n            var min = (!origin && option.rangeStart != null)\n                ? option.rangeStart : option.min;\n\n            if (this.axis\n                && min != null\n                && min !== 'dataMin'\n                && typeof min !== 'function'\n                && !zrUtil.eqNaN(min)\n            ) {\n                min = this.axis.scale.parse(min);\n            }\n            return min;\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n         */\n        getMax: function (origin) {\n            var option = this.option;\n            var max = (!origin && option.rangeEnd != null)\n                ? option.rangeEnd : option.max;\n\n            if (this.axis\n                && max != null\n                && max !== 'dataMax'\n                && typeof max !== 'function'\n                && !zrUtil.eqNaN(max)\n            ) {\n                max = this.axis.scale.parse(max);\n            }\n            return max;\n        },\n\n        /**\n         * @return {boolean}\n         */\n        getNeedCrossZero: function () {\n            var option = this.option;\n            return (option.rangeStart != null || option.rangeEnd != null)\n                ? false : !option.scale;\n        },\n\n        /**\n         * Should be implemented by each axis model if necessary.\n         * @return {module:echarts/model/Component} coordinate system model\n         */\n        getCoordSysModel: zrUtil.noop,\n\n        /**\n         * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n         * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n         */\n        setRange: function (rangeStart, rangeEnd) {\n            this.option.rangeStart = rangeStart;\n            this.option.rangeEnd = rangeEnd;\n        },\n\n        /**\n         * Reset range\n         */\n        resetRange: function () {\n            // rangeStart and rangeEnd is readonly.\n            this.option.rangeStart = this.option.rangeEnd = null;\n        }\n    };\n\n\n/***/ }),\n\n/***/ 1018:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @file Data zoom model\n */\n\n\n    var zrUtil = __webpack_require__(970);\n    var env = __webpack_require__(977);\n    var echarts = __webpack_require__(971);\n    var modelUtil = __webpack_require__(974);\n    var helper = __webpack_require__(1019);\n    var AxisProxy = __webpack_require__(1141);\n    var each = zrUtil.each;\n    var eachAxisDim = helper.eachAxisDim;\n\n    var DataZoomModel = echarts.extendComponentModel({\n\n        type: 'dataZoom',\n\n        dependencies: [\n            'xAxis', 'yAxis', 'zAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'series'\n        ],\n\n        /**\n         * @protected\n         */\n        defaultOption: {\n            zlevel: 0,\n            z: 4,                   // Higher than normal component (z: 2).\n            orient: null,           // Default auto by axisIndex. Possible value: 'horizontal', 'vertical'.\n            xAxisIndex: null,       // Default the first horizontal category axis.\n            yAxisIndex: null,       // Default the first vertical category axis.\n\n            filterMode: 'filter',   // Possible values: 'filter' or 'empty' or 'weakFilter'.\n                                    // 'filter': data items which are out of window will be removed. This option is\n                                    //          applicable when filtering outliers. For each data item, it will be\n                                    //          filtered if one of the relevant dimensions is out of the window.\n                                    // 'weakFilter': data items which are out of window will be removed. This option\n                                    //          is applicable when filtering outliers. For each data item, it will be\n                                    //          filtered only if all  of the relevant dimensions are out of the same\n                                    //          side of the window.\n                                    // 'empty': data items which are out of window will be set to empty.\n                                    //          This option is applicable when user should not neglect\n                                    //          that there are some data items out of window.\n                                    // 'none': Do not filter.\n                                    // Taking line chart as an example, line will be broken in\n                                    // the filtered points when filterModel is set to 'empty', but\n                                    // be connected when set to 'filter'.\n\n            throttle: null,         // Dispatch action by the fixed rate, avoid frequency.\n                                    // default 100. Do not throttle when use null/undefined.\n                                    // If animation === true and animationDurationUpdate > 0,\n                                    // default value is 100, otherwise 20.\n            start: 0,               // Start percent. 0 ~ 100\n            end: 100,               // End percent. 0 ~ 100\n            startValue: null,       // Start value. If startValue specified, start is ignored.\n            endValue: null,         // End value. If endValue specified, end is ignored.\n            minSpan: null,          // 0 ~ 100\n            maxSpan: null,          // 0 ~ 100\n            minValueSpan: null,     // The range of dataZoom can not be smaller than that.\n            maxValueSpan: null,     // The range of dataZoom can not be larger than that.\n            rangeMode: null         // Array, can be 'value' or 'percent'.\n        },\n\n        /**\n         * @override\n         */\n        init: function (option, parentModel, ecModel) {\n\n            /**\n             * key like x_0, y_1\n             * @private\n             * @type {Object}\n             */\n            this._dataIntervalByAxis = {};\n\n            /**\n             * @private\n             */\n            this._dataInfo = {};\n\n            /**\n             * key like x_0, y_1\n             * @private\n             */\n            this._axisProxies = {};\n\n            /**\n             * @readOnly\n             */\n            this.textStyleModel;\n\n            /**\n             * @private\n             */\n            this._autoThrottle = true;\n\n            /**\n             * 'percent' or 'value'\n             * @private\n             */\n            this._rangePropMode = ['percent', 'percent'];\n\n            var rawOption = retrieveRaw(option);\n\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            this.doInit(rawOption);\n        },\n\n        /**\n         * @override\n         */\n        mergeOption: function (newOption) {\n            var rawOption = retrieveRaw(newOption);\n\n            //FIX #2591\n            zrUtil.merge(this.option, newOption, true);\n\n            this.doInit(rawOption);\n        },\n\n        /**\n         * @protected\n         */\n        doInit: function (rawOption) {\n            var thisOption = this.option;\n\n            // Disable realtime view update if canvas is not supported.\n            if (!env.canvasSupported) {\n                thisOption.realtime = false;\n            }\n\n            this._setDefaultThrottle(rawOption);\n\n            updateRangeUse(this, rawOption);\n\n            each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n                // start/end has higher priority over startValue/endValue if they\n                // both set, but we should make chart.setOption({endValue: 1000})\n                // effective, rather than chart.setOption({endValue: 1000, end: null}).\n                if (this._rangePropMode[index] === 'value') {\n                    thisOption[names[0]] = null;\n                }\n                // Otherwise do nothing and use the merge result.\n            }, this);\n\n            this.textStyleModel = this.getModel('textStyle');\n\n            this._resetTarget();\n\n            this._giveAxisProxies();\n        },\n\n        /**\n         * @private\n         */\n        _giveAxisProxies: function () {\n            var axisProxies = this._axisProxies;\n\n            this.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel, ecModel) {\n                var axisModel = this.dependentModels[dimNames.axis][axisIndex];\n\n                // If exists, share axisProxy with other dataZoomModels.\n                var axisProxy = axisModel.__dzAxisProxy || (\n                    // Use the first dataZoomModel as the main model of axisProxy.\n                    axisModel.__dzAxisProxy = new AxisProxy(\n                        dimNames.name, axisIndex, this, ecModel\n                    )\n                );\n                // FIXME\n                // dispose __dzAxisProxy\n\n                axisProxies[dimNames.name + '_' + axisIndex] = axisProxy;\n            }, this);\n        },\n\n        /**\n         * @private\n         */\n        _resetTarget: function () {\n            var thisOption = this.option;\n\n            var autoMode = this._judgeAutoMode();\n\n            eachAxisDim(function (dimNames) {\n                var axisIndexName = dimNames.axisIndex;\n                thisOption[axisIndexName] = modelUtil.normalizeToArray(\n                    thisOption[axisIndexName]\n                );\n            }, this);\n\n            if (autoMode === 'axisIndex') {\n                this._autoSetAxisIndex();\n            }\n            else if (autoMode === 'orient') {\n                this._autoSetOrient();\n            }\n        },\n\n        /**\n         * @private\n         */\n        _judgeAutoMode: function () {\n            // Auto set only works for setOption at the first time.\n            // The following is user's reponsibility. So using merged\n            // option is OK.\n            var thisOption = this.option;\n\n            var hasIndexSpecified = false;\n            eachAxisDim(function (dimNames) {\n                // When user set axisIndex as a empty array, we think that user specify axisIndex\n                // but do not want use auto mode. Because empty array may be encountered when\n                // some error occured.\n                if (thisOption[dimNames.axisIndex] != null) {\n                    hasIndexSpecified = true;\n                }\n            }, this);\n\n            var orient = thisOption.orient;\n\n            if (orient == null && hasIndexSpecified) {\n                return 'orient';\n            }\n            else if (!hasIndexSpecified) {\n                if (orient == null) {\n                    thisOption.orient = 'horizontal';\n                }\n                return 'axisIndex';\n            }\n        },\n\n        /**\n         * @private\n         */\n        _autoSetAxisIndex: function () {\n            var autoAxisIndex = true;\n            var orient = this.get('orient', true);\n            var thisOption = this.option;\n            var dependentModels = this.dependentModels;\n\n            if (autoAxisIndex) {\n                // Find axis that parallel to dataZoom as default.\n                var dimName = orient === 'vertical' ? 'y' : 'x';\n\n                if (dependentModels[dimName + 'Axis'].length) {\n                    thisOption[dimName + 'AxisIndex'] = [0];\n                    autoAxisIndex = false;\n                }\n                else {\n                    each(dependentModels.singleAxis, function (singleAxisModel) {\n                        if (autoAxisIndex && singleAxisModel.get('orient', true) === orient) {\n                            thisOption.singleAxisIndex = [singleAxisModel.componentIndex];\n                            autoAxisIndex = false;\n                        }\n                    });\n                }\n            }\n\n            if (autoAxisIndex) {\n                // Find the first category axis as default. (consider polar)\n                eachAxisDim(function (dimNames) {\n                    if (!autoAxisIndex) {\n                        return;\n                    }\n                    var axisIndices = [];\n                    var axisModels = this.dependentModels[dimNames.axis];\n                    if (axisModels.length && !axisIndices.length) {\n                        for (var i = 0, len = axisModels.length; i < len; i++) {\n                            if (axisModels[i].get('type') === 'category') {\n                                axisIndices.push(i);\n                            }\n                        }\n                    }\n                    thisOption[dimNames.axisIndex] = axisIndices;\n                    if (axisIndices.length) {\n                        autoAxisIndex = false;\n                    }\n                }, this);\n            }\n\n            if (autoAxisIndex) {\n                // FIXME\n                // 这里是兼容ec2的写法（没指定xAxisIndex和yAxisIndex时把scatter和双数值轴折柱纳入dataZoom控制），\n                // 但是实际是否需要Grid.js#getScaleByOption来判断（考虑time，log等axis type）？\n\n                // If both dataZoom.xAxisIndex and dataZoom.yAxisIndex is not specified,\n                // dataZoom component auto adopts series that reference to\n                // both xAxis and yAxis which type is 'value'.\n                this.ecModel.eachSeries(function (seriesModel) {\n                    if (this._isSeriesHasAllAxesTypeOf(seriesModel, 'value')) {\n                        eachAxisDim(function (dimNames) {\n                            var axisIndices = thisOption[dimNames.axisIndex];\n\n                            var axisIndex = seriesModel.get(dimNames.axisIndex);\n                            var axisId = seriesModel.get(dimNames.axisId);\n\n                            var axisModel = seriesModel.ecModel.queryComponents({\n                                mainType: dimNames.axis,\n                                index: axisIndex,\n                                id: axisId\n                            })[0];\n\n                            if (__DEV__) {\n                                if (!axisModel) {\n                                    throw new Error(\n                                        dimNames.axis + ' \"' + zrUtil.retrieve(\n                                            axisIndex,\n                                            axisId,\n                                            0\n                                        ) + '\" not found'\n                                    );\n                                }\n                            }\n                            axisIndex = axisModel.componentIndex;\n\n                            if (zrUtil.indexOf(axisIndices, axisIndex) < 0) {\n                                axisIndices.push(axisIndex);\n                            }\n                        });\n                    }\n                }, this);\n            }\n        },\n\n        /**\n         * @private\n         */\n        _autoSetOrient: function () {\n            var dim;\n\n            // Find the first axis\n            this.eachTargetAxis(function (dimNames) {\n                !dim && (dim = dimNames.name);\n            }, this);\n\n            this.option.orient = dim === 'y' ? 'vertical' : 'horizontal';\n        },\n\n        /**\n         * @private\n         */\n        _isSeriesHasAllAxesTypeOf: function (seriesModel, axisType) {\n            // FIXME\n            // 需要series的xAxisIndex和yAxisIndex都首先自动设置上。\n            // 例如series.type === scatter时。\n\n            var is = true;\n            eachAxisDim(function (dimNames) {\n                var seriesAxisIndex = seriesModel.get(dimNames.axisIndex);\n                var axisModel = this.dependentModels[dimNames.axis][seriesAxisIndex];\n\n                if (!axisModel || axisModel.get('type') !== axisType) {\n                    is = false;\n                }\n            }, this);\n            return is;\n        },\n\n        /**\n         * @private\n         */\n        _setDefaultThrottle: function (rawOption) {\n            // When first time user set throttle, auto throttle ends.\n            if (rawOption.hasOwnProperty('throttle')) {\n                this._autoThrottle = false;\n            }\n            if (this._autoThrottle) {\n                var globalOption = this.ecModel.option;\n                this.option.throttle =\n                    (globalOption.animation && globalOption.animationDurationUpdate > 0)\n                    ? 100 : 20;\n            }\n        },\n\n        /**\n         * @public\n         */\n        getFirstTargetAxisModel: function () {\n            var firstAxisModel;\n            eachAxisDim(function (dimNames) {\n                if (firstAxisModel == null) {\n                    var indices = this.get(dimNames.axisIndex);\n                    if (indices.length) {\n                        firstAxisModel = this.dependentModels[dimNames.axis][indices[0]];\n                    }\n                }\n            }, this);\n\n            return firstAxisModel;\n        },\n\n        /**\n         * @public\n         * @param {Function} callback param: axisModel, dimNames, axisIndex, dataZoomModel, ecModel\n         */\n        eachTargetAxis: function (callback, context) {\n            var ecModel = this.ecModel;\n            eachAxisDim(function (dimNames) {\n                each(\n                    this.get(dimNames.axisIndex),\n                    function (axisIndex) {\n                        callback.call(context, dimNames, axisIndex, this, ecModel);\n                    },\n                    this\n                );\n            }, this);\n        },\n\n        /**\n         * @param {string} dimName\n         * @param {number} axisIndex\n         * @return {module:echarts/component/dataZoom/AxisProxy} If not found, return null/undefined.\n         */\n        getAxisProxy: function (dimName, axisIndex) {\n            return this._axisProxies[dimName + '_' + axisIndex];\n        },\n\n        /**\n         * @param {string} dimName\n         * @param {number} axisIndex\n         * @return {module:echarts/model/Model} If not found, return null/undefined.\n         */\n        getAxisModel: function (dimName, axisIndex) {\n            var axisProxy = this.getAxisProxy(dimName, axisIndex);\n            return axisProxy && axisProxy.getAxisModel();\n        },\n\n        /**\n         * If not specified, set to undefined.\n         *\n         * @public\n         * @param {Object} opt\n         * @param {number} [opt.start]\n         * @param {number} [opt.end]\n         * @param {number} [opt.startValue]\n         * @param {number} [opt.endValue]\n         * @param {boolean} [ignoreUpdateRangeUsg=false]\n         */\n        setRawRange: function (opt, ignoreUpdateRangeUsg) {\n            each(['start', 'end', 'startValue', 'endValue'], function (name) {\n                // If any of those prop is null/undefined, we should alos set\n                // them, because only one pair between start/end and\n                // startValue/endValue can work.\n                this.option[name] = opt[name];\n            }, this);\n\n            !ignoreUpdateRangeUsg && updateRangeUse(this, opt);\n        },\n\n        /**\n         * @public\n         * @return {Array.<number>} [startPercent, endPercent]\n         */\n        getPercentRange: function () {\n            var axisProxy = this.findRepresentativeAxisProxy();\n            if (axisProxy) {\n                return axisProxy.getDataPercentWindow();\n            }\n        },\n\n        /**\n         * @public\n         * For example, chart.getModel().getComponent('dataZoom').getValueRange('y', 0);\n         *\n         * @param {string} [axisDimName]\n         * @param {number} [axisIndex]\n         * @return {Array.<number>} [startValue, endValue] value can only be '-' or finite number.\n         */\n        getValueRange: function (axisDimName, axisIndex) {\n            if (axisDimName == null && axisIndex == null) {\n                var axisProxy = this.findRepresentativeAxisProxy();\n                if (axisProxy) {\n                    return axisProxy.getDataValueWindow();\n                }\n            }\n            else {\n                return this.getAxisProxy(axisDimName, axisIndex).getDataValueWindow();\n            }\n        },\n\n        /**\n         * @public\n         * @param {module:echarts/model/Model} [axisModel] If axisModel given, find axisProxy\n         *      corresponding to the axisModel\n         * @return {module:echarts/component/dataZoom/AxisProxy}\n         */\n        findRepresentativeAxisProxy: function (axisModel) {\n            if (axisModel) {\n                return axisModel.__dzAxisProxy;\n            }\n\n            // Find the first hosted axisProxy\n            var axisProxies = this._axisProxies;\n            for (var key in axisProxies) {\n                if (axisProxies.hasOwnProperty(key) && axisProxies[key].hostedBy(this)) {\n                    return axisProxies[key];\n                }\n            }\n\n            // If no hosted axis find not hosted axisProxy.\n            // Consider this case: dataZoomModel1 and dataZoomModel2 control the same axis,\n            // and the option.start or option.end settings are different. The percentRange\n            // should follow axisProxy.\n            // (We encounter this problem in toolbox data zoom.)\n            for (var key in axisProxies) {\n                if (axisProxies.hasOwnProperty(key) && !axisProxies[key].hostedBy(this)) {\n                    return axisProxies[key];\n                }\n            }\n        },\n\n        /**\n         * @return {Array.<string>}\n         */\n        getRangePropMode: function () {\n            return this._rangePropMode.slice();\n        }\n\n    });\n\n    function retrieveRaw(option) {\n        var ret = {};\n        each(\n            ['start', 'end', 'startValue', 'endValue', 'throttle'],\n            function (name) {\n                option.hasOwnProperty(name) && (ret[name] = option[name]);\n            }\n        );\n        return ret;\n    }\n\n    function updateRangeUse(dataZoomModel, rawOption) {\n        var rangePropMode = dataZoomModel._rangePropMode;\n        var rangeModeInOption = dataZoomModel.get('rangeMode');\n\n        each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n            var percentSpecified = rawOption[names[0]] != null;\n            var valueSpecified = rawOption[names[1]] != null;\n            if (percentSpecified && !valueSpecified) {\n                rangePropMode[index] = 'percent';\n            }\n            else if (!percentSpecified && valueSpecified) {\n                rangePropMode[index] = 'value';\n            }\n            else if (rangeModeInOption) {\n                rangePropMode[index] = rangeModeInOption[index];\n            }\n            else if (percentSpecified) { // percentSpecified && valueSpecified\n                rangePropMode[index] = 'percent';\n            }\n            // else remain its original setting.\n        });\n    }\n\n    module.exports = DataZoomModel;\n\n\n\n/***/ }),\n\n/***/ 1019:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var formatUtil = __webpack_require__(976);\n    var zrUtil = __webpack_require__(970);\n\n    var helper = {};\n\n    var AXIS_DIMS = ['x', 'y', 'z', 'radius', 'angle', 'single'];\n    // Supported coords.\n    var COORDS = ['cartesian2d', 'polar', 'singleAxis'];\n\n    /**\n     * @param {string} coordType\n     * @return {boolean}\n     */\n    helper.isCoordSupported = function (coordType) {\n        return zrUtil.indexOf(COORDS, coordType) >= 0;\n    };\n\n    /**\n     * Create \"each\" method to iterate names.\n     *\n     * @pubilc\n     * @param  {Array.<string>} names\n     * @param  {Array.<string>=} attrs\n     * @return {Function}\n     */\n    helper.createNameEach = function (names, attrs) {\n        names = names.slice();\n        var capitalNames = zrUtil.map(names, formatUtil.capitalFirst);\n        attrs = (attrs || []).slice();\n        var capitalAttrs = zrUtil.map(attrs, formatUtil.capitalFirst);\n\n        return function (callback, context) {\n            zrUtil.each(names, function (name, index) {\n                var nameObj = {name: name, capital: capitalNames[index]};\n\n                for (var j = 0; j < attrs.length; j++) {\n                    nameObj[attrs[j]] = name + capitalAttrs[j];\n                }\n\n                callback.call(context, nameObj);\n            });\n        };\n    };\n\n    /**\n     * Iterate each dimension name.\n     *\n     * @public\n     * @param {Function} callback The parameter is like:\n     *                            {\n     *                                name: 'angle',\n     *                                capital: 'Angle',\n     *                                axis: 'angleAxis',\n     *                                axisIndex: 'angleAixs',\n     *                                index: 'angleIndex'\n     *                            }\n     * @param {Object} context\n     */\n    helper.eachAxisDim = helper.createNameEach(AXIS_DIMS, ['axisIndex', 'axis', 'index', 'id']);\n\n    /**\n     * If tow dataZoomModels has the same axis controlled, we say that they are 'linked'.\n     * dataZoomModels and 'links' make up one or more graphics.\n     * This function finds the graphic where the source dataZoomModel is in.\n     *\n     * @public\n     * @param {Function} forEachNode Node iterator.\n     * @param {Function} forEachEdgeType edgeType iterator\n     * @param {Function} edgeIdGetter Giving node and edgeType, return an array of edge id.\n     * @return {Function} Input: sourceNode, Output: Like {nodes: [], dims: {}}\n     */\n    helper.createLinkedNodesFinder = function (forEachNode, forEachEdgeType, edgeIdGetter) {\n\n        return function (sourceNode) {\n            var result = {\n                nodes: [],\n                records: {} // key: edgeType.name, value: Object (key: edge id, value: boolean).\n            };\n\n            forEachEdgeType(function (edgeType) {\n                result.records[edgeType.name] = {};\n            });\n\n            if (!sourceNode) {\n                return result;\n            }\n\n            absorb(sourceNode, result);\n\n            var existsLink;\n            do {\n                existsLink = false;\n                forEachNode(processSingleNode);\n            }\n            while (existsLink);\n\n            function processSingleNode(node) {\n                if (!isNodeAbsorded(node, result) && isLinked(node, result)) {\n                    absorb(node, result);\n                    existsLink = true;\n                }\n            }\n\n            return result;\n        };\n\n        function isNodeAbsorded(node, result) {\n            return zrUtil.indexOf(result.nodes, node) >= 0;\n        }\n\n        function isLinked(node, result) {\n            var hasLink = false;\n            forEachEdgeType(function (edgeType) {\n                zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n                    result.records[edgeType.name][edgeId] && (hasLink = true);\n                });\n            });\n            return hasLink;\n        }\n\n        function absorb(node, result) {\n            result.nodes.push(node);\n            forEachEdgeType(function (edgeType) {\n                zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n                    result.records[edgeType.name][edgeId] = true;\n                });\n            });\n        }\n    };\n\n    module.exports = helper;\n\n\n/***/ }),\n\n/***/ 1020:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var ComponentView = __webpack_require__(1027);\n\n    module.exports = ComponentView.extend({\n\n        type: 'dataZoom',\n\n        render: function (dataZoomModel, ecModel, api, payload) {\n            this.dataZoomModel = dataZoomModel;\n            this.ecModel = ecModel;\n            this.api = api;\n        },\n\n        /**\n         * Find the first target coordinate system.\n         *\n         * @protected\n         * @return {Object} {\n         *                   grid: [\n         *                       {model: coord0, axisModels: [axis1, axis3], coordIndex: 1},\n         *                       {model: coord1, axisModels: [axis0, axis2], coordIndex: 0},\n         *                       ...\n         *                   ],  // cartesians must not be null/undefined.\n         *                   polar: [\n         *                       {model: coord0, axisModels: [axis4], coordIndex: 0},\n         *                       ...\n         *                   ],  // polars must not be null/undefined.\n         *                   singleAxis: [\n         *                       {model: coord0, axisModels: [], coordIndex: 0}\n         *                   ]\n         */\n        getTargetCoordInfo: function () {\n            var dataZoomModel = this.dataZoomModel;\n            var ecModel = this.ecModel;\n            var coordSysLists = {};\n\n            dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\n                var axisModel = ecModel.getComponent(dimNames.axis, axisIndex);\n                if (axisModel) {\n                    var coordModel = axisModel.getCoordSysModel();\n                    coordModel && save(\n                        coordModel,\n                        axisModel,\n                        coordSysLists[coordModel.mainType] || (coordSysLists[coordModel.mainType] = []),\n                        coordModel.componentIndex\n                    );\n                }\n            }, this);\n\n            function save(coordModel, axisModel, store, coordIndex) {\n                var item;\n                for (var i = 0; i < store.length; i++) {\n                    if (store[i].model === coordModel) {\n                        item = store[i];\n                        break;\n                    }\n                }\n                if (!item) {\n                    store.push(item = {\n                        model: coordModel, axisModels: [], coordIndex: coordIndex\n                    });\n                }\n                item.axisModels.push(axisModel);\n            }\n\n            return coordSysLists;\n        }\n\n    });\n\n\n\n/***/ }),\n\n/***/ 1021:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var echarts = __webpack_require__(971);\n    var axisPointerModelHelper = __webpack_require__(1004);\n    var axisTrigger = __webpack_require__(1124);\n    var zrUtil = __webpack_require__(970);\n\n    __webpack_require__(1125);\n    __webpack_require__(1126);\n\n    // CartesianAxisPointer is not supposed to be required here. But consider\n    // echarts.simple.js and online build tooltip, which only require gridSimple,\n    // CartesianAxisPointer should be able to required somewhere.\n    __webpack_require__(1049);\n\n    echarts.registerPreprocessor(function (option) {\n        // Always has a global axisPointerModel for default setting.\n        if (option) {\n            (!option.axisPointer || option.axisPointer.length === 0)\n                && (option.axisPointer = {});\n\n            var link = option.axisPointer.link;\n            // Normalize to array to avoid object mergin. But if link\n            // is not set, remain null/undefined, otherwise it will\n            // override existent link setting.\n            if (link && !zrUtil.isArray(link)) {\n                option.axisPointer.link = [link];\n            }\n        }\n    });\n\n    // This process should proformed after coordinate systems created\n    // and series data processed. So put it on statistic processing stage.\n    echarts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n        // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n        // allAxesInfo should be updated when setOption performed.\n        ecModel.getComponent('axisPointer').coordSysAxesInfo\n            = axisPointerModelHelper.collect(ecModel, api);\n    });\n\n    // Broadcast to all views.\n    echarts.registerAction({\n        type: 'updateAxisPointer',\n        event: 'updateAxisPointer',\n        update: ':updateAxisPointer'\n    }, axisTrigger);\n\n\n\n/***/ }),\n\n/***/ 1022:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(970);\n    var graphic = __webpack_require__(972);\n    var textContain = __webpack_require__(984);\n    var formatUtil = __webpack_require__(976);\n    var matrix = __webpack_require__(985);\n    var axisHelper = __webpack_require__(987);\n    var AxisBuilder = __webpack_require__(1012);\n\n    var helper = {};\n\n    /**\n     * @param {module:echarts/model/Model} axisPointerModel\n     */\n    helper.buildElStyle = function (axisPointerModel) {\n        var axisPointerType = axisPointerModel.get('type');\n        var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n        var style;\n        if (axisPointerType === 'line') {\n            style = styleModel.getLineStyle();\n            style.fill = null;\n        }\n        else if (axisPointerType === 'shadow') {\n            style = styleModel.getAreaStyle();\n            style.stroke = null;\n        }\n        return style;\n    };\n\n    /**\n     * @param {Function} labelPos {align, verticalAlign, position}\n     */\n    helper.buildLabelElOption = function (\n        elOption, axisModel, axisPointerModel, api, labelPos\n    ) {\n        var value = axisPointerModel.get('value');\n        var text = helper.getValueLabel(\n            value, axisModel.axis, axisModel.ecModel,\n            axisPointerModel.get('seriesDataIndices'),\n            {\n                precision: axisPointerModel.get('label.precision'),\n                formatter: axisPointerModel.get('label.formatter')\n            }\n        );\n        var labelModel = axisPointerModel.getModel('label');\n        var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n\n        var font = labelModel.getFont();\n        var textRect = textContain.getBoundingRect(text, font);\n\n        var position = labelPos.position;\n        var width = textRect.width + paddings[1] + paddings[3];\n        var height = textRect.height + paddings[0] + paddings[2];\n\n        // Adjust by align.\n        var align = labelPos.align;\n        align === 'right' && (position[0] -= width);\n        align === 'center' && (position[0] -= width / 2);\n        var verticalAlign = labelPos.verticalAlign;\n        verticalAlign === 'bottom' && (position[1] -= height);\n        verticalAlign === 'middle' && (position[1] -= height / 2);\n\n        // Not overflow ec container\n        confineInContainer(position, width, height, api);\n\n        var bgColor = labelModel.get('backgroundColor');\n        if (!bgColor || bgColor === 'auto') {\n            bgColor = axisModel.get('axisLine.lineStyle.color');\n        }\n\n        elOption.label = {\n            shape: {x: 0, y: 0, width: width, height: height, r: labelModel.get('borderRadius')},\n            position: position.slice(),\n            // TODO: rich\n            style: {\n                text: text,\n                textFont: font,\n                textFill: labelModel.getTextColor(),\n                textPosition: 'inside',\n                fill: bgColor,\n                stroke: labelModel.get('borderColor') || 'transparent',\n                lineWidth: labelModel.get('borderWidth') || 0,\n                shadowBlur: labelModel.get('shadowBlur'),\n                shadowColor: labelModel.get('shadowColor'),\n                shadowOffsetX: labelModel.get('shadowOffsetX'),\n                shadowOffsetY: labelModel.get('shadowOffsetY')\n            },\n            // Lable should be over axisPointer.\n            z2: 10\n        };\n    };\n\n    // Do not overflow ec container\n    function confineInContainer(position, width, height, api) {\n        var viewWidth = api.getWidth();\n        var viewHeight = api.getHeight();\n        position[0] = Math.min(position[0] + width, viewWidth) - width;\n        position[1] = Math.min(position[1] + height, viewHeight) - height;\n        position[0] = Math.max(position[0], 0);\n        position[1] = Math.max(position[1], 0);\n    }\n\n    /**\n     * @param {number} value\n     * @param {module:echarts/coord/Axis} axis\n     * @param {module:echarts/model/Global} ecModel\n     * @param {Object} opt\n     * @param {Array.<Object>} seriesDataIndices\n     * @param {number|string} opt.precision 'auto' or a number\n     * @param {string|Function} opt.formatter label formatter\n     */\n    helper.getValueLabel = function (value, axis, ecModel, seriesDataIndices, opt) {\n        var text = axis.scale.getLabel(\n            // If `precision` is set, width can be fixed (like '12.00500'), which\n            // helps to debounce when when moving label.\n            value, {precision: opt.precision}\n        );\n        var formatter = opt.formatter;\n\n        if (formatter) {\n            var params = {\n                value: axisHelper.getAxisRawValue(axis, value),\n                seriesData: []\n            };\n            zrUtil.each(seriesDataIndices, function (idxItem) {\n                var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n                var dataIndex = idxItem.dataIndexInside;\n                var dataParams = series && series.getDataParams(dataIndex);\n                dataParams && params.seriesData.push(dataParams);\n            });\n\n            if (zrUtil.isString(formatter)) {\n                text = formatter.replace('{value}', text);\n            }\n            else if (zrUtil.isFunction(formatter)) {\n                text = formatter(params);\n            }\n        }\n\n        return text;\n    };\n\n    /**\n     * @param {module:echarts/coord/Axis} axis\n     * @param {number} value\n     * @param {Object} layoutInfo {\n     *  rotation, position, labelOffset, labelDirection, labelMargin\n     * }\n     */\n    helper.getTransformedPosition = function (axis, value, layoutInfo) {\n        var transform = matrix.create();\n        matrix.rotate(transform, transform, layoutInfo.rotation);\n        matrix.translate(transform, transform, layoutInfo.position);\n\n        return graphic.applyTransform([\n            axis.dataToCoord(value),\n            (layoutInfo.labelOffset || 0)\n                + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)\n        ], transform);\n    };\n\n    helper.buildCartesianSingleLabelElOption = function (\n        value, elOption, layoutInfo, axisModel, axisPointerModel, api\n    ) {\n        var textLayout = AxisBuilder.innerTextLayout(\n            layoutInfo.rotation, 0, layoutInfo.labelDirection\n        );\n        layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n        helper.buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n            position: helper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n            align: textLayout.textAlign,\n            verticalAlign: textLayout.textVerticalAlign\n        });\n    };\n\n    /**\n     * @param {Array.<number>} p1\n     * @param {Array.<number>} p2\n     * @param {number} [xDimIndex=0] or 1\n     */\n    helper.makeLineShape = function (p1, p2, xDimIndex) {\n        xDimIndex = xDimIndex || 0;\n        return {\n            x1: p1[xDimIndex],\n            y1: p1[1 - xDimIndex],\n            x2: p2[xDimIndex],\n            y2: p2[1 - xDimIndex]\n        };\n    };\n\n    /**\n     * @param {Array.<number>} xy\n     * @param {Array.<number>} wh\n     * @param {number} [xDimIndex=0] or 1\n     */\n    helper.makeRectShape = function (xy, wh, xDimIndex) {\n        xDimIndex = xDimIndex || 0;\n        return {\n            x: xy[xDimIndex],\n            y: xy[1 - xDimIndex],\n            width: wh[xDimIndex],\n            height: wh[1 - xDimIndex]\n        };\n    };\n\n    helper.makeSectorShape = function (cx, cy, r0, r, startAngle, endAngle) {\n        return {\n            cx: cx,\n            cy: cy,\n            r0: r0,\n            r: r,\n            startAngle: startAngle,\n            endAngle: endAngle,\n            clockwise: true\n        };\n    };\n\n    module.exports = helper;\n\n\n/***/ }),\n\n/***/ 1023:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\n\n\n    var matrix = __webpack_require__(985);\n    var vector = __webpack_require__(975);\n    var mIdentity = matrix.identity;\n\n    var EPSILON = 5e-5;\n\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n\n    /**\n     * @alias module:zrender/mixin/Transformable\n     * @constructor\n     */\n    var Transformable = function (opts) {\n        opts = opts || {};\n        // If there are no given position, rotation, scale\n        if (!opts.position) {\n            /**\n             * 平移\n             * @type {Array.<number>}\n             * @default [0, 0]\n             */\n            this.position = [0, 0];\n        }\n        if (opts.rotation == null) {\n            /**\n             * 旋转\n             * @type {Array.<number>}\n             * @default 0\n             */\n            this.rotation = 0;\n        }\n        if (!opts.scale) {\n            /**\n             * 缩放\n             * @type {Array.<number>}\n             * @default [1, 1]\n             */\n            this.scale = [1, 1];\n        }\n        /**\n         * 旋转和缩放的原点\n         * @type {Array.<number>}\n         * @default null\n         */\n        this.origin = this.origin || null;\n    };\n\n    var transformableProto = Transformable.prototype;\n    transformableProto.transform = null;\n\n    /**\n     * 判断是否需要有坐标变换\n     * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n     */\n    transformableProto.needLocalTransform = function () {\n        return isNotAroundZero(this.rotation)\n            || isNotAroundZero(this.position[0])\n            || isNotAroundZero(this.position[1])\n            || isNotAroundZero(this.scale[0] - 1)\n            || isNotAroundZero(this.scale[1] - 1);\n    };\n\n    transformableProto.updateTransform = function () {\n        var parent = this.parent;\n        var parentHasTransform = parent && parent.transform;\n        var needLocalTransform = this.needLocalTransform();\n\n        var m = this.transform;\n        if (!(needLocalTransform || parentHasTransform)) {\n            m && mIdentity(m);\n            return;\n        }\n\n        m = m || matrix.create();\n\n        if (needLocalTransform) {\n            this.getLocalTransform(m);\n        }\n        else {\n            mIdentity(m);\n        }\n\n        // 应用父节点变换\n        if (parentHasTransform) {\n            if (needLocalTransform) {\n                matrix.mul(m, parent.transform, m);\n            }\n            else {\n                matrix.copy(m, parent.transform);\n            }\n        }\n        // 保存这个变换矩阵\n        this.transform = m;\n\n        this.invTransform = this.invTransform || matrix.create();\n        matrix.invert(this.invTransform, m);\n    };\n\n    transformableProto.getLocalTransform = function (m) {\n        return Transformable.getLocalTransform(this, m);\n    };\n\n    /**\n     * 将自己的transform应用到context上\n     * @param {CanvasRenderingContext2D} ctx\n     */\n    transformableProto.setTransform = function (ctx) {        \n        var m = this.transform;\n        var dpr = ctx.dpr || 1;\n        if (m) {\n            ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n        }\n        else {\n            ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n        }\n    };\n\n    transformableProto.restoreTransform = function (ctx) {\n        var dpr = ctx.dpr || 1;\n        ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n    };\n\n    var tmpTransform = [];\n\n    /**\n     * 分解`transform`矩阵到`position`, `rotation`, `scale`\n     */\n    transformableProto.decomposeTransform = function () {\n        if (!this.transform) {\n            return;\n        }\n        var parent = this.parent;\n        var m = this.transform;\n        if (parent && parent.transform) {\n            // Get local transform and decompose them to position, scale, rotation\n            matrix.mul(tmpTransform, parent.invTransform, m);\n            m = tmpTransform;\n        }\n        var sx = m[0] * m[0] + m[1] * m[1];\n        var sy = m[2] * m[2] + m[3] * m[3];\n        var position = this.position;\n        var scale = this.scale;\n        if (isNotAroundZero(sx - 1)) {\n            sx = Math.sqrt(sx);\n        }\n        if (isNotAroundZero(sy - 1)) {\n            sy = Math.sqrt(sy);\n        }\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        position[0] = m[4];\n        position[1] = m[5];\n        scale[0] = sx;\n        scale[1] = sy;\n        this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n    };\n\n    /**\n     * Get global scale\n     * @return {Array.<number>}\n     */\n    transformableProto.getGlobalScale = function () {\n        var m = this.transform;\n        if (!m) {\n            return [1, 1];\n        }\n        var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        return [sx, sy];\n    };\n    /**\n     * 变换坐标位置到 shape 的局部坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToLocal = function (x, y) {\n        var v2 = [x, y];\n        var invTransform = this.invTransform;\n        if (invTransform) {\n            vector.applyTransform(v2, v2, invTransform);\n        }\n        return v2;\n    };\n\n    /**\n     * 变换局部坐标位置到全局坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToGlobal = function (x, y) {\n        var v2 = [x, y];\n        var transform = this.transform;\n        if (transform) {\n            vector.applyTransform(v2, v2, transform);\n        }\n        return v2;\n    };\n\n    /**\n     * @static\n     * @param {Object} target\n     * @param {Array.<number>} target.origin\n     * @param {number} target.rotation\n     * @param {Array.<number>} target.position\n     * @param {Array.<number>} [m]\n     */\n    Transformable.getLocalTransform = function (target, m) {\n        m = m || [];\n        mIdentity(m);\n\n        var origin = target.origin;\n        var scale = target.scale || [1, 1];\n        var rotation = target.rotation || 0;\n        var position = target.position || [0, 0];\n\n        if (origin) {\n            // Translate to origin\n            m[4] -= origin[0];\n            m[5] -= origin[1];\n        }\n        matrix.scale(m, m, scale);\n        if (rotation) {\n            matrix.rotate(m, m, rotation);\n        }\n        if (origin) {\n            // Translate back from origin\n            m[4] += origin[0];\n            m[5] += origin[1];\n        }\n\n        m[4] += position[0];\n        m[5] += position[1];\n\n        return m;\n    };\n\n    module.exports = Transformable;\n\n\n\n/***/ }),\n\n/***/ 1024:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n        var config = __webpack_require__(999);\n\n        /**\n         * @exports zrender/tool/log\n         * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n         */\n        module.exports = function() {\n            if (config.debugMode === 0) {\n                return;\n            }\n            else if (config.debugMode == 1) {\n                for (var k in arguments) {\n                    throw new Error(arguments[k]);\n                }\n            }\n            else if (config.debugMode > 1) {\n                for (var k in arguments) {\n                    console.log(arguments[k]);\n                }\n            }\n        };\n\n        /* for debug\n        return function(mes) {\n            document.getElementById('wrong-message').innerHTML =\n                mes + ' ' + (new Date() - 0)\n                + '<br/>'\n                + document.getElementById('wrong-message').innerHTML;\n        };\n        */\n    \n\n\n/***/ }),\n\n/***/ 1025:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var textContain = __webpack_require__(984);\n    var util = __webpack_require__(970);\n    var roundRectHelper = __webpack_require__(1034);\n    var imageHelper = __webpack_require__(1014);\n\n    var retrieve3 = util.retrieve3;\n    var retrieve2 = util.retrieve2;\n\n    // TODO: Have not support 'start', 'end' yet.\n    var VALID_TEXT_ALIGN = {left: 1, right: 1, center: 1};\n    var VALID_TEXT_VERTICAL_ALIGN = {top: 1, bottom: 1, middle: 1};\n\n    var helper = {};\n\n    /**\n     * @param {module:zrender/graphic/Style} style\n     * @return {module:zrender/graphic/Style} The input style.\n     */\n    helper.normalizeTextStyle = function (style) {\n        normalizeStyle(style);\n        util.each(style.rich, normalizeStyle);\n        return style;\n    };\n\n    function normalizeStyle(style) {\n        if (style) {\n\n            style.font = textContain.makeFont(style);\n\n            var textAlign = style.textAlign;\n            textAlign === 'middle' && (textAlign = 'center');\n            style.textAlign = (\n                textAlign == null || VALID_TEXT_ALIGN[textAlign]\n            ) ? textAlign : 'left';\n\n            // Compatible with textBaseline.\n            var textVerticalAlign = style.textVerticalAlign || style.textBaseline;\n            textVerticalAlign === 'center' && (textVerticalAlign = 'middle');\n            style.textVerticalAlign = (\n                textVerticalAlign == null || VALID_TEXT_VERTICAL_ALIGN[textVerticalAlign]\n            ) ? textVerticalAlign : 'top';\n\n            var textPadding = style.textPadding;\n            if (textPadding) {\n                style.textPadding = util.normalizeCssArray(style.textPadding);\n            }\n        }\n    }\n\n    /**\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {string} text\n     * @param {module:zrender/graphic/Style} style\n     * @param {Object|boolean} [rect] {x, y, width, height}\n     *                  If set false, rect text is not used.\n     */\n    helper.renderText = function (hostEl, ctx, text, style, rect) {\n        style.rich\n            ? renderRichText(hostEl, ctx, text, style, rect)\n            : renderPlainText(hostEl, ctx, text, style, rect);\n    };\n\n    function renderPlainText(hostEl, ctx, text, style, rect) {\n        var font = setCtx(ctx, 'font', style.font || textContain.DEFAULT_FONT);\n\n        var textPadding = style.textPadding;\n\n        var contentBlock = hostEl.__textCotentBlock;\n        if (!contentBlock || hostEl.__dirty) {\n            contentBlock = hostEl.__textCotentBlock = textContain.parsePlainText(\n                text, font, textPadding, style.truncate\n            );\n        }\n\n        var outerHeight = contentBlock.outerHeight;\n\n        var textLines = contentBlock.lines;\n        var lineHeight = contentBlock.lineHeight;\n\n        var boxPos = getBoxPosition(outerHeight, style, rect);\n        var baseX = boxPos.baseX;\n        var baseY = boxPos.baseY;\n        var textAlign = boxPos.textAlign;\n        var textVerticalAlign = boxPos.textVerticalAlign;\n\n        // Origin of textRotation should be the base point of text drawing.\n        applyTextRotation(ctx, style, rect, baseX, baseY);\n\n        var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n        var textX = baseX;\n        var textY = boxY;\n\n        var needDrawBg = needDrawBackground(style);\n        if (needDrawBg || textPadding) {\n            // Consider performance, do not call getTextWidth util necessary.\n            var textWidth = textContain.getWidth(text, font);\n            var outerWidth = textWidth;\n            textPadding && (outerWidth += textPadding[1] + textPadding[3]);\n            var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n\n            needDrawBg && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n            if (textPadding) {\n                textX = getTextXForPadding(baseX, textAlign, textPadding);\n                textY += textPadding[0];\n            }\n        }\n\n        setCtx(ctx, 'textAlign', textAlign || 'left');\n        // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n        // text will offset downward a little bit in font \"Microsoft YaHei\".\n        setCtx(ctx, 'textBaseline', 'middle');\n\n        // Always set shadowBlur and shadowOffset to avoid leak from displayable.\n        setCtx(ctx, 'shadowBlur', style.textShadowBlur || 0);\n        setCtx(ctx, 'shadowColor', style.textShadowColor || 'transparent');\n        setCtx(ctx, 'shadowOffsetX', style.textShadowOffsetX || 0);\n        setCtx(ctx, 'shadowOffsetY', style.textShadowOffsetY || 0);\n\n        // `textBaseline` is set as 'middle'.\n        textY += lineHeight / 2;\n\n        var textStrokeWidth = style.textStrokeWidth;\n        var textStroke = getStroke(style.textStroke, textStrokeWidth);\n        var textFill = getFill(style.textFill);\n\n        if (textStroke) {\n            setCtx(ctx, 'lineWidth', textStrokeWidth);\n            setCtx(ctx, 'strokeStyle', textStroke);\n        }\n        if (textFill) {\n            setCtx(ctx, 'fillStyle', textFill);\n        }\n\n        for (var i = 0; i < textLines.length; i++) {\n            // Fill after stroke so the outline will not cover the main part.\n            textStroke && ctx.strokeText(textLines[i], textX, textY);\n            textFill && ctx.fillText(textLines[i], textX, textY);\n            textY += lineHeight;\n        }\n    }\n\n    function renderRichText(hostEl, ctx, text, style, rect) {\n        var contentBlock = hostEl.__textCotentBlock;\n\n        if (!contentBlock || hostEl.__dirty) {\n            contentBlock = hostEl.__textCotentBlock = textContain.parseRichText(text, style);\n        }\n\n        drawRichText(hostEl, ctx, contentBlock, style, rect);\n    }\n\n    function drawRichText(hostEl, ctx, contentBlock, style, rect) {\n        var contentWidth = contentBlock.width;\n        var outerWidth = contentBlock.outerWidth;\n        var outerHeight = contentBlock.outerHeight;\n        var textPadding = style.textPadding;\n\n        var boxPos = getBoxPosition(outerHeight, style, rect);\n        var baseX = boxPos.baseX;\n        var baseY = boxPos.baseY;\n        var textAlign = boxPos.textAlign;\n        var textVerticalAlign = boxPos.textVerticalAlign;\n\n        // Origin of textRotation should be the base point of text drawing.\n        applyTextRotation(ctx, style, rect, baseX, baseY);\n\n        var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n        var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n        var xLeft = boxX;\n        var lineTop = boxY;\n        if (textPadding) {\n            xLeft += textPadding[3];\n            lineTop += textPadding[0];\n        }\n        var xRight = xLeft + contentWidth;\n\n        needDrawBackground(style) && drawBackground(\n            hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight\n        );\n\n        for (var i = 0; i < contentBlock.lines.length; i++) {\n            var line = contentBlock.lines[i];\n            var tokens = line.tokens;\n            var tokenCount = tokens.length;\n            var lineHeight = line.lineHeight;\n            var usedWidth = line.width;\n\n            var leftIndex = 0;\n            var lineXLeft = xLeft;\n            var lineXRight = xRight;\n            var rightIndex = tokenCount - 1;\n            var token;\n\n            while (\n                leftIndex < tokenCount\n                && (token = tokens[leftIndex], !token.textAlign || token.textAlign === 'left')\n            ) {\n                placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft, 'left');\n                usedWidth -= token.width;\n                lineXLeft += token.width;\n                leftIndex++;\n            }\n\n            while (\n                rightIndex >= 0\n                && (token = tokens[rightIndex], token.textAlign === 'right')\n            ) {\n                placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXRight, 'right');\n                usedWidth -= token.width;\n                lineXRight -= token.width;\n                rightIndex--;\n            }\n\n            // The other tokens are placed as textAlign 'center' if there is enough space.\n            lineXLeft += (contentWidth - (lineXLeft - xLeft) - (xRight - lineXRight) - usedWidth) / 2;\n            while (leftIndex <= rightIndex) {\n                token = tokens[leftIndex];\n                // Consider width specified by user, use 'center' rather than 'left'.\n                placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft + token.width / 2, 'center');\n                lineXLeft += token.width;\n                leftIndex++;\n            }\n\n            lineTop += lineHeight;\n        }\n    }\n\n    function applyTextRotation(ctx, style, rect, x, y) {\n        // textRotation only apply in RectText.\n        if (rect && style.textRotation) {\n            var origin = style.textOrigin;\n            if (origin === 'center') {\n                x = rect.width / 2 + rect.x;\n                y = rect.height / 2 + rect.y;\n            }\n            else if (origin) {\n                x = origin[0] + rect.x;\n                y = origin[1] + rect.y;\n            }\n\n            ctx.translate(x, y);\n            // Positive: anticlockwise\n            ctx.rotate(-style.textRotation);\n            ctx.translate(-x, -y);\n        }\n    }\n\n    function placeToken(hostEl, ctx, token, style, lineHeight, lineTop, x, textAlign) {\n        var tokenStyle = style.rich[token.styleName] || {};\n\n        // 'ctx.textBaseline' is always set as 'middle', for sake of\n        // the bias of \"Microsoft YaHei\".\n        var textVerticalAlign = token.textVerticalAlign;\n        var y = lineTop + lineHeight / 2;\n        if (textVerticalAlign === 'top') {\n            y = lineTop + token.height / 2;\n        }\n        else if (textVerticalAlign === 'bottom') {\n            y = lineTop + lineHeight - token.height / 2;\n        }\n\n        !token.isLineHolder && needDrawBackground(tokenStyle) && drawBackground(\n            hostEl,\n            ctx,\n            tokenStyle,\n            textAlign === 'right'\n                ? x - token.width\n                : textAlign === 'center'\n                ? x - token.width / 2\n                : x,\n            y - token.height / 2,\n            token.width,\n            token.height\n        );\n\n        var textPadding = token.textPadding;\n        if (textPadding) {\n            x = getTextXForPadding(x, textAlign, textPadding);\n            y -= token.height / 2 - textPadding[2] - token.textHeight / 2;\n        }\n\n        setCtx(ctx, 'shadowBlur', retrieve3(tokenStyle.textShadowBlur, style.textShadowBlur, 0));\n        setCtx(ctx, 'shadowColor', tokenStyle.textShadowColor || style.textShadowColor || 'transparent');\n        setCtx(ctx, 'shadowOffsetX', retrieve3(tokenStyle.textShadowOffsetX, style.textShadowOffsetX, 0));\n        setCtx(ctx, 'shadowOffsetY', retrieve3(tokenStyle.textShadowOffsetY, style.textShadowOffsetY, 0));\n\n        setCtx(ctx, 'textAlign', textAlign);\n        // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n        // text will offset downward a little bit in font \"Microsoft YaHei\".\n        setCtx(ctx, 'textBaseline', 'middle');\n\n        setCtx(ctx, 'font', token.font || textContain.DEFAULT_FONT);\n\n        var textStroke = getStroke(tokenStyle.textStroke || style.textStroke, textStrokeWidth);\n        var textFill = getFill(tokenStyle.textFill || style.textFill);\n        var textStrokeWidth = retrieve2(tokenStyle.textStrokeWidth, style.textStrokeWidth);\n\n        // Fill after stroke so the outline will not cover the main part.\n        if (textStroke) {\n            setCtx(ctx, 'lineWidth', textStrokeWidth);\n            setCtx(ctx, 'strokeStyle', textStroke);\n            ctx.strokeText(token.text, x, y);\n        }\n        if (textFill) {\n            setCtx(ctx, 'fillStyle', textFill);\n            ctx.fillText(token.text, x, y);\n        }\n    }\n\n    function needDrawBackground(style) {\n        return style.textBackgroundColor\n            || (style.textBorderWidth && style.textBorderColor);\n    }\n\n    // style: {textBackgroundColor, textBorderWidth, textBorderColor, textBorderRadius}\n    // shape: {x, y, width, height}\n    function drawBackground(hostEl, ctx, style, x, y, width, height) {\n        var textBackgroundColor = style.textBackgroundColor;\n        var textBorderWidth = style.textBorderWidth;\n        var textBorderColor = style.textBorderColor;\n        var isPlainBg = util.isString(textBackgroundColor);\n\n        setCtx(ctx, 'shadowBlur', style.textBoxShadowBlur || 0);\n        setCtx(ctx, 'shadowColor', style.textBoxShadowColor || 'transparent');\n        setCtx(ctx, 'shadowOffsetX', style.textBoxShadowOffsetX || 0);\n        setCtx(ctx, 'shadowOffsetY', style.textBoxShadowOffsetY || 0);\n\n        if (isPlainBg || (textBorderWidth && textBorderColor)) {\n            ctx.beginPath();\n            var textBorderRadius = style.textBorderRadius;\n            if (!textBorderRadius) {\n                ctx.rect(x, y, width, height);\n            }\n            else {\n                roundRectHelper.buildPath(ctx, {\n                    x: x, y: y, width: width, height: height, r: textBorderRadius\n                });\n            }\n            ctx.closePath();\n        }\n\n        if (isPlainBg) {\n            setCtx(ctx, 'fillStyle', textBackgroundColor);\n            ctx.fill();\n        }\n        else if (util.isObject(textBackgroundColor)) {\n            var image = textBackgroundColor.image;\n\n            image = imageHelper.createOrUpdateImage(\n                image, null, hostEl, onBgImageLoaded, textBackgroundColor\n            );\n            if (image && imageHelper.isImageReady(image)) {\n                ctx.drawImage(image, x, y, width, height);\n            }\n        }\n\n        if (textBorderWidth && textBorderColor) {\n            setCtx(ctx, 'lineWidth', textBorderWidth);\n            setCtx(ctx, 'strokeStyle', textBorderColor);\n            ctx.stroke();\n        }\n    }\n\n    function onBgImageLoaded(image, textBackgroundColor) {\n        // Replace image, so that `contain/text.js#parseRichText`\n        // will get correct result in next tick.\n        textBackgroundColor.image = image;\n    }\n\n    function getBoxPosition(blockHeiht, style, rect) {\n        var baseX = style.x || 0;\n        var baseY = style.y || 0;\n        var textAlign = style.textAlign;\n        var textVerticalAlign = style.textVerticalAlign;\n\n        // Text position represented by coord\n        if (rect) {\n            var textPosition = style.textPosition;\n            if (textPosition instanceof Array) {\n                // Percent\n                baseX = rect.x + parsePercent(textPosition[0], rect.width);\n                baseY = rect.y + parsePercent(textPosition[1], rect.height);\n            }\n            else {\n                var res = textContain.adjustTextPositionOnRect(\n                    textPosition, rect, style.textDistance\n                );\n                baseX = res.x;\n                baseY = res.y;\n                // Default align and baseline when has textPosition\n                textAlign = textAlign || res.textAlign;\n                textVerticalAlign = textVerticalAlign || res.textVerticalAlign;\n            }\n\n            // textOffset is only support in RectText, otherwise\n            // we have to adjust boundingRect for textOffset.\n            var textOffset = style.textOffset;\n            if (textOffset) {\n                baseX += textOffset[0];\n                baseY += textOffset[1];\n            }\n        }\n\n        return {\n            baseX: baseX,\n            baseY: baseY,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    }\n\n    function setCtx(ctx, prop, value) {\n        // FIXME ??? performance try\n        // if (ctx.__currentValues[prop] !== value) {\n            // ctx[prop] = ctx.__currentValues[prop] = value;\n        ctx[prop] = value;\n        // }\n        return ctx[prop];\n    }\n\n    /**\n     * @param {string} [stroke] If specified, do not check style.textStroke.\n     * @param {string} [lineWidth] If specified, do not check style.textStroke.\n     * @param {number} style\n     */\n    var getStroke = helper.getStroke = function (stroke, lineWidth) {\n        return (stroke == null || lineWidth <= 0 || stroke === 'transparent' || stroke === 'none')\n            ? null\n            // TODO pattern and gradient?\n            : (stroke.image || stroke.colorStops)\n            ? '#000'\n            : stroke;\n    };\n\n    var getFill = helper.getFill = function (fill) {\n        return (fill == null || fill === 'none')\n            ? null\n            // TODO pattern and gradient?\n            : (fill.image || fill.colorStops)\n            ? '#000'\n            : fill;\n    };\n\n    function parsePercent(value, maxValue) {\n        if (typeof value === 'string') {\n            if (value.lastIndexOf('%') >= 0) {\n                return parseFloat(value) / 100 * maxValue;\n            }\n            return parseFloat(value);\n        }\n        return value;\n    }\n\n    function getTextXForPadding(x, textAlign, textPadding) {\n        return textAlign === 'right'\n            ? (x - textPadding[1])\n            : textAlign === 'center'\n            ? (x + textPadding[3] / 2 - textPadding[1] / 2)\n            : (x + textPadding[3]);\n    }\n\n    /**\n     * @param {string} text\n     * @param {module:zrender/Style} style\n     * @return {boolean}\n     */\n    helper.needDrawText = function (text, style) {\n        return text != null\n            && (text\n                || style.textBackgroundColor\n                || (style.textBorderWidth && style.textBorderColor)\n                || style.textPadding\n            );\n    };\n\n    module.exports = helper;\n\n\n\n\n/***/ }),\n\n/***/ 1026:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Image element\n * @module zrender/graphic/Image\n */\n\n\n\n    var Displayable = __webpack_require__(1008);\n    var BoundingRect = __webpack_require__(981);\n    var zrUtil = __webpack_require__(970);\n    var imageHelper = __webpack_require__(1014);\n\n    /**\n     * @alias zrender/graphic/Image\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function ZImage(opts) {\n        Displayable.call(this, opts);\n    }\n\n    ZImage.prototype = {\n\n        constructor: ZImage,\n\n        type: 'image',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var src = style.image;\n\n            // Must bind each time\n            style.bind(ctx, this, prevEl);\n\n            var image = this._image = imageHelper.createOrUpdateImage(src, this._image, this);\n\n            if (!image || !imageHelper.isImageReady(image)) {\n                return;\n            }\n\n            // 图片已经加载完成\n            // if (image.nodeName.toUpperCase() == 'IMG') {\n            //     if (!image.complete) {\n            //         return;\n            //     }\n            // }\n            // Else is canvas\n\n            var x = style.x || 0;\n            var y = style.y || 0;\n            var width = style.width;\n            var height = style.height;\n            var aspect = image.width / image.height;\n            if (width == null && height != null) {\n                // Keep image/height ratio\n                width = height * aspect;\n            }\n            else if (height == null && width != null) {\n                height = width / aspect;\n            }\n            else if (width == null && height == null) {\n                width = image.width;\n                height = image.height;\n            }\n\n            // 设置transform\n            this.setTransform(ctx);\n\n            if (style.sWidth && style.sHeight) {\n                var sx = style.sx || 0;\n                var sy = style.sy || 0;\n                ctx.drawImage(\n                    image,\n                    sx, sy, style.sWidth, style.sHeight,\n                    x, y, width, height\n                );\n            }\n            else if (style.sx && style.sy) {\n                var sx = style.sx;\n                var sy = style.sy;\n                var sWidth = width - sx;\n                var sHeight = height - sy;\n                ctx.drawImage(\n                    image,\n                    sx, sy, sWidth, sHeight,\n                    x, y, width, height\n                );\n            }\n            else {\n                ctx.drawImage(image, x, y, width, height);\n            }\n\n            this.restoreTransform(ctx);\n\n            // Draw rect text\n            if (style.text != null) {\n                this.drawRectText(ctx, this.getBoundingRect());\n            }\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n            if (! this._rect) {\n                this._rect = new BoundingRect(\n                    style.x || 0, style.y || 0, style.width || 0, style.height || 0\n                );\n            }\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(ZImage, Displayable);\n\n    module.exports = ZImage;\n\n\n/***/ }),\n\n/***/ 1027:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var Group = __webpack_require__(1000);\n    var componentUtil = __webpack_require__(1015);\n    var clazzUtil = __webpack_require__(983);\n\n    var Component = function () {\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewComponent');\n    };\n\n    Component.prototype = {\n\n        constructor: Component,\n\n        init: function (ecModel, api) {},\n\n        render: function (componentModel, ecModel, api, payload) {},\n\n        dispose: function () {}\n\n    };\n\n    var componentProto = Component.prototype;\n    componentProto.updateView\n        = componentProto.updateLayout\n        = componentProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            // Do nothing;\n        };\n    // Enable Component.extend.\n    clazzUtil.enableClassExtend(Component);\n\n    // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Component, {registerWhenExtend: true});\n\n    module.exports = Component;\n\n\n/***/ }),\n\n/***/ 1028:\n/***/ (function(module, exports) {\n\n\n\n    /**\n     * Calculate slider move result.\n     * Usage:\n     * (1) If both handle0 and handle1 are needed to be moved, set minSpan the same as\n     * maxSpan and the same as `Math.abs(handleEnd[1] - handleEnds[0])`.\n     * (2) If handle0 is forbidden to cross handle1, set minSpan as `0`.\n     *\n     * @param {number} delta Move length.\n     * @param {Array.<number>} handleEnds handleEnds[0] can be bigger then handleEnds[1].\n     *              handleEnds will be modified in this method.\n     * @param {Array.<number>} extent handleEnds is restricted by extent.\n     *              extent[0] should less or equals than extent[1].\n     * @param {number|string} handleIndex Can be 'all', means that both move the two handleEnds,\n     *              where the input minSpan and maxSpan will not work.\n     * @param {number} [minSpan] The range of dataZoom can not be smaller than that.\n     *              If not set, handle0 and cross handle1. If set as a non-negative\n     *              number (including `0`), handles will push each other when reaching\n     *              the minSpan.\n     * @param {number} [maxSpan] The range of dataZoom can not be larger than that.\n     * @return {Array.<number>} The input handleEnds.\n     */\n    module.exports = function (delta, handleEnds, extent, handleIndex, minSpan, maxSpan) {\n        // Normalize firstly.\n        handleEnds[0] = restrict(handleEnds[0], extent);\n        handleEnds[1] = restrict(handleEnds[1], extent);\n\n        delta = delta || 0;\n\n        var extentSpan = extent[1] - extent[0];\n\n        // Notice maxSpan and minSpan can be null/undefined.\n        if (minSpan != null) {\n            minSpan = restrict(minSpan, [0, extentSpan]);\n        }\n        if (maxSpan != null) {\n            maxSpan = Math.max(maxSpan, minSpan != null ? minSpan : 0);\n        }\n        if (handleIndex === 'all') {\n            minSpan = maxSpan = Math.abs(handleEnds[1] - handleEnds[0]);\n            handleIndex = 0;\n        }\n\n        var originalDistSign = getSpanSign(handleEnds, handleIndex);\n\n        handleEnds[handleIndex] += delta;\n\n        // Restrict in extent.\n        var extentMinSpan = minSpan || 0;\n        var realExtent = extent.slice();\n        originalDistSign.sign < 0 ? (realExtent[0] += extentMinSpan) : (realExtent[1] -= extentMinSpan);\n        handleEnds[handleIndex] = restrict(handleEnds[handleIndex], realExtent);\n\n        // Expand span.\n        var currDistSign = getSpanSign(handleEnds, handleIndex);\n        if (minSpan != null && (\n            currDistSign.sign !== originalDistSign.sign || currDistSign.span < minSpan\n        )) {\n            // If minSpan exists, 'cross' is forbinden.\n            handleEnds[1 - handleIndex] = handleEnds[handleIndex] + originalDistSign.sign * minSpan;\n        }\n\n        // Shrink span.\n        var currDistSign = getSpanSign(handleEnds, handleIndex);\n        if (maxSpan != null && currDistSign.span > maxSpan) {\n            handleEnds[1 - handleIndex] = handleEnds[handleIndex] + currDistSign.sign * maxSpan;\n        }\n\n        return handleEnds;\n    };\n\n    function getSpanSign(handleEnds, handleIndex) {\n        var dist = handleEnds[handleIndex] - handleEnds[1 - handleIndex];\n        // If `handleEnds[0] === handleEnds[1]`, always believe that handleEnd[0]\n        // is at left of handleEnds[1] for non-cross case.\n        return {span: Math.abs(dist), sign: dist > 0 ? -1 : dist < 0 ? 1 : handleIndex ? -1 : 1};\n    }\n\n    function restrict(value, extend) {\n        return Math.min(extend[1], Math.max(extend[0], value));\n    }\n\n\n/***/ }),\n\n/***/ 1029:\n/***/ (function(module, exports) {\n\n// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n\n    /**\n     * Simple double linked list. Compared with array, it has O(1) remove operation.\n     * @constructor\n     */\n    var LinkedList = function () {\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.head = null;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.tail = null;\n\n        this._len = 0;\n    };\n\n    var linkedListProto = LinkedList.prototype;\n    /**\n     * Insert a new value at the tail\n     * @param  {} val\n     * @return {module:zrender/core/LRU~Entry}\n     */\n    linkedListProto.insert = function (val) {\n        var entry = new Entry(val);\n        this.insertEntry(entry);\n        return entry;\n    };\n\n    /**\n     * Insert an entry at the tail\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.insertEntry = function (entry) {\n        if (!this.head) {\n            this.head = this.tail = entry;\n        }\n        else {\n            this.tail.next = entry;\n            entry.prev = this.tail;\n            entry.next = null;\n            this.tail = entry;\n        }\n        this._len++;\n    };\n\n    /**\n     * Remove entry.\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.remove = function (entry) {\n        var prev = entry.prev;\n        var next = entry.next;\n        if (prev) {\n            prev.next = next;\n        }\n        else {\n            // Is head\n            this.head = next;\n        }\n        if (next) {\n            next.prev = prev;\n        }\n        else {\n            // Is tail\n            this.tail = prev;\n        }\n        entry.next = entry.prev = null;\n        this._len--;\n    };\n\n    /**\n     * @return {number}\n     */\n    linkedListProto.len = function () {\n        return this._len;\n    };\n\n    /**\n     * Clear list\n     */\n    linkedListProto.clear = function () {\n        this.head = this.tail = null;\n        this._len = 0;\n    };\n\n    /**\n     * @constructor\n     * @param {} val\n     */\n    var Entry = function (val) {\n        /**\n         * @type {}\n         */\n        this.value = val;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.next;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.prev;\n    };\n\n    /**\n     * LRU Cache\n     * @constructor\n     * @alias module:zrender/core/LRU\n     */\n    var LRU = function (maxSize) {\n\n        this._list = new LinkedList();\n\n        this._map = {};\n\n        this._maxSize = maxSize || 10;\n\n        this._lastRemovedEntry = null;\n    };\n\n    var LRUProto = LRU.prototype;\n\n    /**\n     * @param  {string} key\n     * @param  {} value\n     * @return {} Removed value\n     */\n    LRUProto.put = function (key, value) {\n        var list = this._list;\n        var map = this._map;\n        var removed = null;\n        if (map[key] == null) {\n            var len = list.len();\n            // Reuse last removed entry\n            var entry = this._lastRemovedEntry;\n\n            if (len >= this._maxSize && len > 0) {\n                // Remove the least recently used\n                var leastUsedEntry = list.head;\n                list.remove(leastUsedEntry);\n                delete map[leastUsedEntry.key];\n\n                removed = leastUsedEntry.value;\n                this._lastRemovedEntry = leastUsedEntry;\n            }\n\n            if (entry) {\n                entry.value = value;\n            }\n            else {\n                entry = new Entry(value);\n            }\n            entry.key = key;\n            list.insertEntry(entry);\n            map[key] = entry;\n        }\n\n        return removed;\n    };\n\n    /**\n     * @param  {string} key\n     * @return {}\n     */\n    LRUProto.get = function (key) {\n        var entry = this._map[key];\n        var list = this._list;\n        if (entry != null) {\n            // Put the latest used entry in the tail\n            if (entry !== list.tail) {\n                list.remove(entry);\n                list.insertEntry(entry);\n            }\n\n            return entry.value;\n        }\n    };\n\n    /**\n     * Clear the cache\n     */\n    LRUProto.clear = function () {\n        this._list.clear();\n        this._map = {};\n    };\n\n    module.exports = LRU;\n\n\n/***/ }),\n\n/***/ 1030:\n/***/ (function(module, exports) {\n\n/**\n * @module zrender/graphic/Style\n */\n\n\n    var STYLE_COMMON_PROPS = [\n        ['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'],\n        ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]\n    ];\n\n    // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n    // var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\n    var Style = function (opts, host) {\n        this.extendFrom(opts, false);\n        this.host = host;\n    };\n\n    function createLinearGradient(ctx, obj, rect) {\n        var x = obj.x == null ? 0 : obj.x;\n        var x2 = obj.x2 == null ? 1 : obj.x2;\n        var y = obj.y == null ? 0 : obj.y;\n        var y2 = obj.y2 == null ? 0 : obj.y2;\n\n        if (!obj.global) {\n            x = x * rect.width + rect.x;\n            x2 = x2 * rect.width + rect.x;\n            y = y * rect.height + rect.y;\n            y2 = y2 * rect.height + rect.y;\n        }\n\n        var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n\n        return canvasGradient;\n    }\n\n    function createRadialGradient(ctx, obj, rect) {\n        var width = rect.width;\n        var height = rect.height;\n        var min = Math.min(width, height);\n\n        var x = obj.x == null ? 0.5 : obj.x;\n        var y = obj.y == null ? 0.5 : obj.y;\n        var r = obj.r == null ? 0.5 : obj.r;\n        if (!obj.global) {\n            x = x * width + rect.x;\n            y = y * height + rect.y;\n            r = r * min;\n        }\n\n        var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n\n        return canvasGradient;\n    }\n\n\n    Style.prototype = {\n\n        constructor: Style,\n\n        /**\n         * @type {module:zrender/graphic/Displayable}\n         */\n        host: null,\n\n        /**\n         * @type {string}\n         */\n        fill: '#000',\n\n        /**\n         * @type {string}\n         */\n        stroke: null,\n\n        /**\n         * @type {number}\n         */\n        opacity: 1,\n\n        /**\n         * @type {Array.<number>}\n         */\n        lineDash: null,\n\n        /**\n         * @type {number}\n         */\n        lineDashOffset: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetY: 0,\n\n        /**\n         * @type {number}\n         */\n        lineWidth: 1,\n\n        /**\n         * If stroke ignore scale\n         * @type {Boolean}\n         */\n        strokeNoScale: false,\n\n        // Bounding rect text configuration\n        // Not affected by element transform\n        /**\n         * @type {string}\n         */\n        text: null,\n\n        /**\n         * If `fontSize` or `fontFamily` exists, `font` will be reset by\n         * `fontSize`, `fontStyle`, `fontWeight`, `fontFamily`.\n         * So do not visit it directly in upper application (like echarts),\n         * but use `contain/text#makeFont` instead.\n         * @type {string}\n         */\n        font: null,\n\n        /**\n         * The same as font. Use font please.\n         * @deprecated\n         * @type {string}\n         */\n        textFont: null,\n\n        /**\n         * It helps merging respectively, rather than parsing an entire font string.\n         * @type {string}\n         */\n        fontStyle: null,\n\n        /**\n         * It helps merging respectively, rather than parsing an entire font string.\n         * @type {string}\n         */\n        fontWeight: null,\n\n        /**\n         * It helps merging respectively, rather than parsing an entire font string.\n         * Should be 12 but not '12px'.\n         * @type {number}\n         */\n        fontSize: null,\n\n        /**\n         * It helps merging respectively, rather than parsing an entire font string.\n         * @type {string}\n         */\n        fontFamily: null,\n\n        /**\n         * Reserved for special functinality, like 'hr'.\n         * @type {string}\n         */\n        textTag: null,\n\n        /**\n         * @type {string}\n         */\n        textFill: '#000',\n\n        /**\n         * @type {string}\n         */\n        textStroke: null,\n\n        /**\n         * @type {number}\n         */\n        textWidth: null,\n\n        /**\n         * Only for textBackground.\n         * @type {number}\n         */\n        textHeight: null,\n\n        /**\n         * textStroke may be set as some color as a default\n         * value in upper applicaion, where the default value\n         * of textStrokeWidth should be 0 to make sure that\n         * user can choose to do not use text stroke.\n         * @type {number}\n         */\n        textStrokeWidth: 0,\n\n        /**\n         * @type {number}\n         */\n        textLineHeight: null,\n\n        /**\n         * 'inside', 'left', 'right', 'top', 'bottom'\n         * [x, y]\n         * Based on x, y of rect.\n         * @type {string|Array.<number>}\n         * @default 'inside'\n         */\n        textPosition: 'inside',\n\n        /**\n         * If not specified, use the boundingRect of a `displayable`.\n         * @type {Object}\n         */\n        textRect: null,\n\n        /**\n         * [x, y]\n         * @type {Array.<number>}\n         */\n        textOffset: null,\n\n        /**\n         * @type {string}\n         */\n        textAlign: null,\n\n        /**\n         * @type {string}\n         */\n        textVerticalAlign: null,\n\n        /**\n         * @type {number}\n         */\n        textDistance: 5,\n\n        /**\n         * @type {string}\n         */\n        textShadowColor: 'transparent',\n\n        /**\n         * @type {number}\n         */\n        textShadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        textShadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        textShadowOffsetY: 0,\n\n        /**\n         * @type {string}\n         */\n        textBoxShadowColor: 'transparent',\n\n        /**\n         * @type {number}\n         */\n        textBoxShadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        textBoxShadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        textBoxShadowOffsetY: 0,\n\n        /**\n         * Whether transform text.\n         * Only useful in Path and Image element\n         * @type {boolean}\n         */\n        transformText: false,\n\n        /**\n         * Text rotate around position of Path or Image\n         * Only useful in Path and Image element and transformText is false.\n         */\n        textRotation: 0,\n\n        /**\n         * Text origin of text rotation, like [10, 40].\n         * Based on x, y of rect.\n         * Useful in label rotation of circular symbol.\n         * By default, this origin is textPosition.\n         * Can be 'center'.\n         * @type {string|Array.<number>}\n         */\n        textOrigin: null,\n\n        /**\n         * @type {string}\n         */\n        textBackgroundColor: null,\n\n        /**\n         * @type {string}\n         */\n        textBorderColor: null,\n\n        /**\n         * @type {number}\n         */\n        textBorderWidth: 0,\n\n        /**\n         * @type {number}\n         */\n        textBorderRadius: 0,\n\n        /**\n         * Can be `2` or `[2, 4]` or `[2, 3, 4, 5]`\n         * @type {number|Array.<number>}\n         */\n        textPadding: null,\n\n        /**\n         * Text styles for rich text.\n         * @type {Object}\n         */\n        rich: null,\n\n        /**\n         * {outerWidth, outerHeight, ellipsis, placeholder}\n         * @type {Object}\n         */\n        truncate: null,\n\n        /**\n         * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n         * @type {string}\n         */\n        blend: null,\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        bind: function (ctx, el, prevEl) {\n            var style = this;\n            var prevStyle = prevEl && prevEl.style;\n            var firstDraw = !prevStyle;\n\n            for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n                var prop = STYLE_COMMON_PROPS[i];\n                var styleName = prop[0];\n\n                if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n                    // FIXME Invalid property value will cause style leak from previous element.\n                    ctx[styleName] = style[styleName] || prop[1];\n                }\n            }\n\n            if ((firstDraw || style.fill !== prevStyle.fill)) {\n                ctx.fillStyle = style.fill;\n            }\n            if ((firstDraw || style.stroke !== prevStyle.stroke)) {\n                ctx.strokeStyle = style.stroke;\n            }\n            if ((firstDraw || style.opacity !== prevStyle.opacity)) {\n                ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n            }\n\n            if ((firstDraw || style.blend !== prevStyle.blend)) {\n                ctx.globalCompositeOperation = style.blend || 'source-over';\n            }\n            if (this.hasStroke()) {\n                var lineWidth = style.lineWidth;\n                ctx.lineWidth = lineWidth / (\n                    (this.strokeNoScale && el && el.getLineScale) ? el.getLineScale() : 1\n                );\n            }\n        },\n\n        hasFill: function () {\n            var fill = this.fill;\n            return fill != null && fill !== 'none';\n        },\n\n        hasStroke: function () {\n            var stroke = this.stroke;\n            return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n        },\n\n        /**\n         * Extend from other style\n         * @param {zrender/graphic/Style} otherStyle\n         * @param {boolean} overwrite true: overwrirte any way.\n         *                            false: overwrite only when !target.hasOwnProperty\n         *                            others: overwrite when property is not null/undefined.\n         */\n        extendFrom: function (otherStyle, overwrite) {\n            if (otherStyle) {\n                for (var name in otherStyle) {\n                    if (otherStyle.hasOwnProperty(name)\n                        && (overwrite === true\n                            || (\n                                overwrite === false\n                                    ? !this.hasOwnProperty(name)\n                                    : otherStyle[name] != null\n                            )\n                        )\n                    ) {\n                        this[name] = otherStyle[name];\n                    }\n                }\n            }\n        },\n\n        /**\n         * Batch setting style with a given object\n         * @param {Object|string} obj\n         * @param {*} [obj]\n         */\n        set: function (obj, value) {\n            if (typeof obj === 'string') {\n                this[obj] = value;\n            }\n            else {\n                this.extendFrom(obj, true);\n            }\n        },\n\n        /**\n         * Clone\n         * @return {zrender/graphic/Style} [description]\n         */\n        clone: function () {\n            var newStyle = new this.constructor();\n            newStyle.extendFrom(this, true);\n            return newStyle;\n        },\n\n        getGradient: function (ctx, obj, rect) {\n            var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n            var canvasGradient = method(ctx, obj, rect);\n            var colorStops = obj.colorStops;\n            for (var i = 0; i < colorStops.length; i++) {\n                canvasGradient.addColorStop(\n                    colorStops[i].offset, colorStops[i].color\n                );\n            }\n            return canvasGradient;\n        }\n\n    };\n\n    var styleProto = Style.prototype;\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n        var prop = STYLE_COMMON_PROPS[i];\n        if (!(prop[0] in styleProto)) {\n            styleProto[prop[0]] = prop[1];\n        }\n    }\n\n    // Provide for others\n    Style.getGradient = styleProto.getGradient;\n\n    module.exports = Style;\n\n\n/***/ }),\n\n/***/ 1031:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @module zrender/Element\n */\n\n\n    var guid = __webpack_require__(1032);\n    var Eventful = __webpack_require__(991);\n    var Transformable = __webpack_require__(1023);\n    var Animatable = __webpack_require__(1083);\n    var zrUtil = __webpack_require__(970);\n\n    /**\n     * @alias module:zrender/Element\n     * @constructor\n     * @extends {module:zrender/mixin/Animatable}\n     * @extends {module:zrender/mixin/Transformable}\n     * @extends {module:zrender/mixin/Eventful}\n     */\n    var Element = function (opts) {\n\n        Transformable.call(this, opts);\n        Eventful.call(this, opts);\n        Animatable.call(this, opts);\n\n        /**\n         * 画布元素ID\n         * @type {string}\n         */\n        this.id = opts.id || guid();\n    };\n\n    Element.prototype = {\n\n        /**\n         * 元素类型\n         * Element type\n         * @type {string}\n         */\n        type: 'element',\n\n        /**\n         * 元素名字\n         * Element name\n         * @type {string}\n         */\n        name: '',\n\n        /**\n         * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n         * ZRender instance will be assigned when element is associated with zrender\n         * @name module:/zrender/Element#__zr\n         * @type {module:zrender/ZRender}\n         */\n        __zr: null,\n\n        /**\n         * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n         * If ignore drawing and events of the element object\n         * @name module:/zrender/Element#ignore\n         * @type {boolean}\n         * @default false\n         */\n        ignore: false,\n\n        /**\n         * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n         * 该路径会继承被裁减对象的变换\n         * @type {module:zrender/graphic/Path}\n         * @see http://www.w3.org/TR/2dcontext/#clipping-region\n         * @readOnly\n         */\n        clipPath: null,\n\n        /**\n         * Drift element\n         * @param  {number} dx dx on the global space\n         * @param  {number} dy dy on the global space\n         */\n        drift: function (dx, dy) {\n            switch (this.draggable) {\n                case 'horizontal':\n                    dy = 0;\n                    break;\n                case 'vertical':\n                    dx = 0;\n                    break;\n            }\n\n            var m = this.transform;\n            if (!m) {\n                m = this.transform = [1, 0, 0, 1, 0, 0];\n            }\n            m[4] += dx;\n            m[5] += dy;\n\n            this.decomposeTransform();\n            this.dirty(false);\n        },\n\n        /**\n         * Hook before update\n         */\n        beforeUpdate: function () {},\n        /**\n         * Hook after update\n         */\n        afterUpdate: function () {},\n        /**\n         * Update each frame\n         */\n        update: function () {\n            this.updateTransform();\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {},\n\n        /**\n         * @protected\n         */\n        attrKV: function (key, value) {\n            if (key === 'position' || key === 'scale' || key === 'origin') {\n                // Copy the array\n                if (value) {\n                    var target = this[key];\n                    if (!target) {\n                        target = this[key] = [];\n                    }\n                    target[0] = value[0];\n                    target[1] = value[1];\n                }\n            }\n            else {\n                this[key] = value;\n            }\n        },\n\n        /**\n         * Hide the element\n         */\n        hide: function () {\n            this.ignore = true;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * Show the element\n         */\n        show: function () {\n            this.ignore = false;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * @param {string|Object} key\n         * @param {*} value\n         */\n        attr: function (key, value) {\n            if (typeof key === 'string') {\n                this.attrKV(key, value);\n            }\n            else if (zrUtil.isObject(key)) {\n                for (var name in key) {\n                    if (key.hasOwnProperty(name)) {\n                        this.attrKV(name, key[name]);\n                    }\n                }\n            }\n\n            this.dirty(false);\n\n            return this;\n        },\n\n        /**\n         * @param {module:zrender/graphic/Path} clipPath\n         */\n        setClipPath: function (clipPath) {\n            var zr = this.__zr;\n            if (zr) {\n                clipPath.addSelfToZr(zr);\n            }\n\n            // Remove previous clip path\n            if (this.clipPath && this.clipPath !== clipPath) {\n                this.removeClipPath();\n            }\n\n            this.clipPath = clipPath;\n            clipPath.__zr = zr;\n            clipPath.__clipTarget = this;\n\n            this.dirty(false);\n        },\n\n        /**\n         */\n        removeClipPath: function () {\n            var clipPath = this.clipPath;\n            if (clipPath) {\n                if (clipPath.__zr) {\n                    clipPath.removeSelfFromZr(clipPath.__zr);\n                }\n\n                clipPath.__zr = null;\n                clipPath.__clipTarget = null;\n                this.clipPath = null;\n\n                this.dirty(false);\n            }\n        },\n\n        /**\n         * Add self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        addSelfToZr: function (zr) {\n            this.__zr = zr;\n            // 添加动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.addAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.addSelfToZr(zr);\n            }\n        },\n\n        /**\n         * Remove self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        removeSelfFromZr: function (zr) {\n            this.__zr = null;\n            // 移除动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.removeAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.removeSelfFromZr(zr);\n            }\n        }\n    };\n\n    zrUtil.mixin(Element, Animatable);\n    zrUtil.mixin(Element, Transformable);\n    zrUtil.mixin(Element, Eventful);\n\n    module.exports = Element;\n\n\n/***/ }),\n\n/***/ 1032:\n/***/ (function(module, exports) {\n\n/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\n\n\n    var idStart = 0x0907;\n\n    module.exports = function () {\n        return idStart++;\n    };\n\n\n\n/***/ }),\n\n/***/ 1033:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/animation/Animator\n */\n\n\n    var Clip = __webpack_require__(1084);\n    var color = __webpack_require__(992);\n    var util = __webpack_require__(970);\n    var isArrayLike = util.isArrayLike;\n\n    var arraySlice = Array.prototype.slice;\n\n    function defaultGetter(target, key) {\n        return target[key];\n    }\n\n    function defaultSetter(target, key, value) {\n        target[key] = value;\n    }\n\n    /**\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} percent\n     * @return {number}\n     */\n    function interpolateNumber(p0, p1, percent) {\n        return (p1 - p0) * percent + p0;\n    }\n\n    /**\n     * @param  {string} p0\n     * @param  {string} p1\n     * @param  {number} percent\n     * @return {string}\n     */\n    function interpolateString(p0, p1, percent) {\n        return percent > 0.5 ? p1 : p0;\n    }\n\n    /**\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {number} percent\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function interpolateArray(p0, p1, percent, out, arrDim) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = interpolateNumber(p0[i], p1[i], percent);\n            }\n        }\n        else {\n            var len2 = len && p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = interpolateNumber(\n                        p0[i][j], p1[i][j], percent\n                    );\n                }\n            }\n        }\n    }\n\n    // arr0 is source array, arr1 is target array.\n    // Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n    function fillArr(arr0, arr1, arrDim) {\n        var arr0Len = arr0.length;\n        var arr1Len = arr1.length;\n        if (arr0Len !== arr1Len) {\n            // FIXME Not work for TypedArray\n            var isPreviousLarger = arr0Len > arr1Len;\n            if (isPreviousLarger) {\n                // Cut the previous\n                arr0.length = arr1Len;\n            }\n            else {\n                // Fill the previous\n                for (var i = arr0Len; i < arr1Len; i++) {\n                    arr0.push(\n                        arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i])\n                    );\n                }\n            }\n        }\n        // Handling NaN value\n        var len2 = arr0[0] && arr0[0].length;\n        for (var i = 0; i < arr0.length; i++) {\n            if (arrDim === 1) {\n                if (isNaN(arr0[i])) {\n                    arr0[i] = arr1[i];\n                }\n            }\n            else {\n                for (var j = 0; j < len2; j++) {\n                    if (isNaN(arr0[i][j])) {\n                        arr0[i][j] = arr1[i][j];\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @param  {Array} arr0\n     * @param  {Array} arr1\n     * @param  {number} arrDim\n     * @return {boolean}\n     */\n    function isArraySame(arr0, arr1, arrDim) {\n        if (arr0 === arr1) {\n            return true;\n        }\n        var len = arr0.length;\n        if (len !== arr1.length) {\n            return false;\n        }\n        if (arrDim === 1) {\n            for (var i = 0; i < len; i++) {\n                if (arr0[i] !== arr1[i]) {\n                    return false;\n                }\n            }\n        }\n        else {\n            var len2 = arr0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    if (arr0[i][j] !== arr1[i][j]) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Catmull Rom interpolate array\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {Array} p2\n     * @param  {Array} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function catmullRomInterpolateArray(\n        p0, p1, p2, p3, t, t2, t3, out, arrDim\n    ) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = catmullRomInterpolate(\n                    p0[i], p1[i], p2[i], p3[i], t, t2, t3\n                );\n            }\n        }\n        else {\n            var len2 = p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = catmullRomInterpolate(\n                        p0[i][j], p1[i][j], p2[i][j], p3[i][j],\n                        t, t2, t3\n                    );\n                }\n            }\n        }\n    }\n\n    /**\n     * Catmull Rom interpolate number\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @return {number}\n     */\n    function catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    function cloneValue(value) {\n        if (isArrayLike(value)) {\n            var len = value.length;\n            if (isArrayLike(value[0])) {\n                var ret = [];\n                for (var i = 0; i < len; i++) {\n                    ret.push(arraySlice.call(value[i]));\n                }\n                return ret;\n            }\n\n            return arraySlice.call(value);\n        }\n\n        return value;\n    }\n\n    function rgba2String(rgba) {\n        rgba[0] = Math.floor(rgba[0]);\n        rgba[1] = Math.floor(rgba[1]);\n        rgba[2] = Math.floor(rgba[2]);\n\n        return 'rgba(' + rgba.join(',') + ')';\n    }\n\n    function getArrayDim(keyframes) {\n        var lastValue = keyframes[keyframes.length - 1].value;\n        return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\n    }\n\n    function createTrackClip(animator, easing, oneTrackDone, keyframes, propName, forceAnimate) {\n        var getter = animator._getter;\n        var setter = animator._setter;\n        var useSpline = easing === 'spline';\n\n        var trackLen = keyframes.length;\n        if (!trackLen) {\n            return;\n        }\n        // Guess data type\n        var firstVal = keyframes[0].value;\n        var isValueArray = isArrayLike(firstVal);\n        var isValueColor = false;\n        var isValueString = false;\n\n        // For vertices morphing\n        var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\n\n        var trackMaxTime;\n        // Sort keyframe as ascending\n        keyframes.sort(function(a, b) {\n            return a.time - b.time;\n        });\n\n        trackMaxTime = keyframes[trackLen - 1].time;\n        // Percents of each keyframe\n        var kfPercents = [];\n        // Value of each keyframe\n        var kfValues = [];\n        var prevValue = keyframes[0].value;\n        var isAllValueEqual = true;\n        for (var i = 0; i < trackLen; i++) {\n            kfPercents.push(keyframes[i].time / trackMaxTime);\n            // Assume value is a color when it is a string\n            var value = keyframes[i].value;\n\n            // Check if value is equal, deep check if value is array\n            if (!((isValueArray && isArraySame(value, prevValue, arrDim))\n                || (!isValueArray && value === prevValue))) {\n                isAllValueEqual = false;\n            }\n            prevValue = value;\n\n            // Try converting a string to a color array\n            if (typeof value == 'string') {\n                var colorArray = color.parse(value);\n                if (colorArray) {\n                    value = colorArray;\n                    isValueColor = true;\n                }\n                else {\n                    isValueString = true;\n                }\n            }\n            kfValues.push(value);\n        }\n        if (!forceAnimate && isAllValueEqual) {\n            return;\n        }\n\n        var lastValue = kfValues[trackLen - 1];\n        // Polyfill array and NaN value\n        for (var i = 0; i < trackLen - 1; i++) {\n            if (isValueArray) {\n                fillArr(kfValues[i], lastValue, arrDim);\n            }\n            else {\n                if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n                    kfValues[i] = lastValue;\n                }\n            }\n        }\n        isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim);\n\n        // Cache the key of last frame to speed up when\n        // animation playback is sequency\n        var lastFrame = 0;\n        var lastFramePercent = 0;\n        var start;\n        var w;\n        var p0;\n        var p1;\n        var p2;\n        var p3;\n\n        if (isValueColor) {\n            var rgba = [0, 0, 0, 0];\n        }\n\n        var onframe = function (target, percent) {\n            // Find the range keyframes\n            // kf1-----kf2---------current--------kf3\n            // find kf2 and kf3 and do interpolation\n            var frame;\n            // In the easing function like elasticOut, percent may less than 0\n            if (percent < 0) {\n                frame = 0;\n            }\n            else if (percent < lastFramePercent) {\n                // Start from next key\n                // PENDING start from lastFrame ?\n                start = Math.min(lastFrame + 1, trackLen - 1);\n                for (frame = start; frame >= 0; frame--) {\n                    if (kfPercents[frame] <= percent) {\n                        break;\n                    }\n                }\n                // PENDING really need to do this ?\n                frame = Math.min(frame, trackLen - 2);\n            }\n            else {\n                for (frame = lastFrame; frame < trackLen; frame++) {\n                    if (kfPercents[frame] > percent) {\n                        break;\n                    }\n                }\n                frame = Math.min(frame - 1, trackLen - 2);\n            }\n            lastFrame = frame;\n            lastFramePercent = percent;\n\n            var range = (kfPercents[frame + 1] - kfPercents[frame]);\n            if (range === 0) {\n                return;\n            }\n            else {\n                w = (percent - kfPercents[frame]) / range;\n            }\n            if (useSpline) {\n                p1 = kfValues[frame];\n                p0 = kfValues[frame === 0 ? frame : frame - 1];\n                p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n                p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n                if (isValueArray) {\n                    catmullRomInterpolateArray(\n                        p0, p1, p2, p3, w, w * w, w * w * w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        value = catmullRomInterpolateArray(\n                            p0, p1, p2, p3, w, w * w, w * w * w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(p1, p2, w);\n                    }\n                    else {\n                        value = catmullRomInterpolate(\n                            p0, p1, p2, p3, w, w * w, w * w * w\n                        );\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n            else {\n                if (isValueArray) {\n                    interpolateArray(\n                        kfValues[frame], kfValues[frame + 1], w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        interpolateArray(\n                            kfValues[frame], kfValues[frame + 1], w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    else {\n                        value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n        };\n\n        var clip = new Clip({\n            target: animator._target,\n            life: trackMaxTime,\n            loop: animator._loop,\n            delay: animator._delay,\n            onframe: onframe,\n            ondestroy: oneTrackDone\n        });\n\n        if (easing && easing !== 'spline') {\n            clip.easing = easing;\n        }\n\n        return clip;\n    }\n\n    /**\n     * @alias module:zrender/animation/Animator\n     * @constructor\n     * @param {Object} target\n     * @param {boolean} loop\n     * @param {Function} getter\n     * @param {Function} setter\n     */\n    var Animator = function(target, loop, getter, setter) {\n        this._tracks = {};\n        this._target = target;\n\n        this._loop = loop || false;\n\n        this._getter = getter || defaultGetter;\n        this._setter = setter || defaultSetter;\n\n        this._clipCount = 0;\n\n        this._delay = 0;\n\n        this._doneList = [];\n\n        this._onframeList = [];\n\n        this._clipList = [];\n    };\n\n    Animator.prototype = {\n        /**\n         * 设置动画关键帧\n         * @param  {number} time 关键帧时间，单位是ms\n         * @param  {Object} props 关键帧的属性值，key-value表示\n         * @return {module:zrender/animation/Animator}\n         */\n        when: function(time /* ms */, props) {\n            var tracks = this._tracks;\n            for (var propName in props) {\n                if (!props.hasOwnProperty(propName)) {\n                    continue;\n                }\n\n                if (!tracks[propName]) {\n                    tracks[propName] = [];\n                    // Invalid value\n                    var value = this._getter(this._target, propName);\n                    if (value == null) {\n                        // zrLog('Invalid property ' + propName);\n                        continue;\n                    }\n                    // If time is 0\n                    //  Then props is given initialize value\n                    // Else\n                    //  Initialize value from current prop value\n                    if (time !== 0) {\n                        tracks[propName].push({\n                            time: 0,\n                            value: cloneValue(value)\n                        });\n                    }\n                }\n                tracks[propName].push({\n                    time: time,\n                    value: props[propName]\n                });\n            }\n            return this;\n        },\n        /**\n         * 添加动画每一帧的回调函数\n         * @param  {Function} callback\n         * @return {module:zrender/animation/Animator}\n         */\n        during: function (callback) {\n            this._onframeList.push(callback);\n            return this;\n        },\n\n        pause: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].pause();\n            }\n            this._paused = true;\n        },\n\n        resume: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].resume();\n            }\n            this._paused = false;\n        },\n\n        isPaused: function () {\n            return !!this._paused;\n        },\n\n        _doneCallback: function () {\n            // Clear all tracks\n            this._tracks = {};\n            // Clear all clips\n            this._clipList.length = 0;\n\n            var doneList = this._doneList;\n            var len = doneList.length;\n            for (var i = 0; i < len; i++) {\n                doneList[i].call(this);\n            }\n        },\n        /**\n         * 开始执行动画\n         * @param  {string|Function} [easing]\n         *         动画缓动函数，详见{@link module:zrender/animation/easing}\n         * @param  {boolean} forceAnimate\n         * @return {module:zrender/animation/Animator}\n         */\n        start: function (easing, forceAnimate) {\n\n            var self = this;\n            var clipCount = 0;\n\n            var oneTrackDone = function() {\n                clipCount--;\n                if (!clipCount) {\n                    self._doneCallback();\n                }\n            };\n\n            var lastClip;\n            for (var propName in this._tracks) {\n                if (!this._tracks.hasOwnProperty(propName)) {\n                    continue;\n                }\n                var clip = createTrackClip(\n                    this, easing, oneTrackDone,\n                    this._tracks[propName], propName, forceAnimate\n                );\n                if (clip) {\n                    this._clipList.push(clip);\n                    clipCount++;\n\n                    // If start after added to animation\n                    if (this.animation) {\n                        this.animation.addClip(clip);\n                    }\n\n                    lastClip = clip;\n                }\n            }\n\n            // Add during callback on the last clip\n            if (lastClip) {\n                var oldOnFrame = lastClip.onframe;\n                lastClip.onframe = function (target, percent) {\n                    oldOnFrame(target, percent);\n\n                    for (var i = 0; i < self._onframeList.length; i++) {\n                        self._onframeList[i](target, percent);\n                    }\n                };\n            }\n\n            // This optimization will help the case that in the upper application\n            // the view may be refreshed frequently, where animation will be\n            // called repeatly but nothing changed.\n            if (!clipCount) {\n                this._doneCallback();\n            }\n            return this;\n        },\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stop: function (forwardToLast) {\n            var clipList = this._clipList;\n            var animation = this.animation;\n            for (var i = 0; i < clipList.length; i++) {\n                var clip = clipList[i];\n                if (forwardToLast) {\n                    // Move to last frame before stop\n                    clip.onframe(this._target, 1);\n                }\n                animation && animation.removeClip(clip);\n            }\n            clipList.length = 0;\n        },\n        /**\n         * 设置动画延迟开始的时间\n         * @param  {number} time 单位ms\n         * @return {module:zrender/animation/Animator}\n         */\n        delay: function (time) {\n            this._delay = time;\n            return this;\n        },\n        /**\n         * 添加动画结束的回调\n         * @param  {Function} cb\n         * @return {module:zrender/animation/Animator}\n         */\n        done: function(cb) {\n            if (cb) {\n                this._doneList.push(cb);\n            }\n            return this;\n        },\n\n        /**\n         * @return {Array.<module:zrender/animation/Clip>}\n         */\n        getClips: function () {\n            return this._clipList;\n        }\n    };\n\n    module.exports = Animator;\n\n\n/***/ }),\n\n/***/ 1034:\n/***/ (function(module, exports) {\n\n\n\n    module.exports = {\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            var r = shape.r;\n            var r1;\n            var r2;\n            var r3;\n            var r4;\n\n            // Convert width and height to positive for better borderRadius\n            if (width < 0) {\n                x = x + width;\n                width = -width;\n            }\n            if (height < 0) {\n                y = y + height;\n                height = -height;\n            }\n\n            if (typeof r === 'number') {\n                r1 = r2 = r3 = r4 = r;\n            }\n            else if (r instanceof Array) {\n                if (r.length === 1) {\n                    r1 = r2 = r3 = r4 = r[0];\n                }\n                else if (r.length === 2) {\n                    r1 = r3 = r[0];\n                    r2 = r4 = r[1];\n                }\n                else if (r.length === 3) {\n                    r1 = r[0];\n                    r2 = r4 = r[1];\n                    r3 = r[2];\n                }\n                else {\n                    r1 = r[0];\n                    r2 = r[1];\n                    r3 = r[2];\n                    r4 = r[3];\n                }\n            }\n            else {\n                r1 = r2 = r3 = r4 = 0;\n            }\n\n            var total;\n            if (r1 + r2 > width) {\n                total = r1 + r2;\n                r1 *= width / total;\n                r2 *= width / total;\n            }\n            if (r3 + r4 > width) {\n                total = r3 + r4;\n                r3 *= width / total;\n                r4 *= width / total;\n            }\n            if (r2 + r3 > height) {\n                total = r2 + r3;\n                r2 *= height / total;\n                r3 *= height / total;\n            }\n            if (r1 + r4 > height) {\n                total = r1 + r4;\n                r1 *= height / total;\n                r4 *= height / total;\n            }\n            ctx.moveTo(x + r1, y);\n            ctx.lineTo(x + width - r2, y);\n            r2 !== 0 && ctx.quadraticCurveTo(\n                x + width, y, x + width, y + r2\n            );\n            ctx.lineTo(x + width, y + height - r3);\n            r3 !== 0 && ctx.quadraticCurveTo(\n                x + width, y + height, x + width - r3, y + height\n            );\n            ctx.lineTo(x + r4, y + height);\n            r4 !== 0 && ctx.quadraticCurveTo(\n                x, y + height, x, y + height - r4\n            );\n            ctx.lineTo(x, y + r1);\n            r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n        }\n    };\n\n\n/***/ }),\n\n/***/ 1035:\n/***/ (function(module, exports) {\n\n\n\n    var PI2 = Math.PI * 2;\n    module.exports = {\n        normalizeRadian: function(angle) {\n            angle %= PI2;\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return angle;\n        }\n    };\n\n\n/***/ }),\n\n/***/ 1036:\n/***/ (function(module, exports) {\n\n\n\n    var Pattern = function (image, repeat) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {image: ...}`, where this constructor will not be called.\n\n        this.image = image;\n        this.repeat = repeat;\n\n        // Can be cloned\n        this.type = 'pattern';\n    };\n\n    Pattern.prototype.getCanvasPattern = function (ctx) {\n        return ctx.createPattern(this.image, this.repeat || 'repeat');\n    };\n\n    module.exports = Pattern;\n\n\n/***/ }),\n\n/***/ 1037:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var smoothSpline = __webpack_require__(1094);\n    var smoothBezier = __webpack_require__(1095);\n\n    module.exports = {\n        buildPath: function (ctx, shape, closePath) {\n            var points = shape.points;\n            var smooth = shape.smooth;\n            if (points && points.length >= 2) {\n                if (smooth && smooth !== 'spline') {\n                    var controlPoints = smoothBezier(\n                        points, smooth, closePath, shape.smoothConstraint\n                    );\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    var len = points.length;\n                    for (var i = 0; i < (closePath ? len : len - 1); i++) {\n                        var cp1 = controlPoints[i * 2];\n                        var cp2 = controlPoints[i * 2 + 1];\n                        var p = points[(i + 1) % len];\n                        ctx.bezierCurveTo(\n                            cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]\n                        );\n                    }\n                }\n                else {\n                    if (smooth === 'spline') {\n                        points = smoothSpline(points, closePath);\n                    }\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    for (var i = 1, l = points.length; i < l; i++) {\n                        ctx.lineTo(points[i][0], points[i][1]);\n                    }\n                }\n\n                closePath && ctx.closePath();\n            }\n        }\n    };\n\n\n/***/ }),\n\n/***/ 1038:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var classUtil = __webpack_require__(983);\n    var set = classUtil.set;\n    var get = classUtil.get;\n\n    module.exports = {\n        clearColorPalette: function () {\n            set(this, 'colorIdx', 0);\n            set(this, 'colorNameMap', {});\n        },\n\n        getColorFromPalette: function (name, scope) {\n            scope = scope || this;\n            var colorIdx = get(scope, 'colorIdx') || 0;\n            var colorNameMap = get(scope, 'colorNameMap') || set(scope, 'colorNameMap', {});\n            // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n            if (colorNameMap.hasOwnProperty(name)) {\n                return colorNameMap[name];\n            }\n            var colorPalette = this.get('color', true) || [];\n            if (!colorPalette.length) {\n                return;\n            }\n\n            var color = colorPalette[colorIdx];\n            if (name) {\n                colorNameMap[name] = color;\n            }\n            set(scope, 'colorIdx', (colorIdx + 1) % colorPalette.length);\n\n            return color;\n        }\n    };\n\n\n/***/ }),\n\n/***/ 1039:\n/***/ (function(module, exports) {\n\n\n\n    module.exports = (typeof window !== 'undefined' &&\n                ((window.requestAnimationFrame && window.requestAnimationFrame.bind(window))\n                // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\n                || (window.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window))\n                || window.mozRequestAnimationFrame\n                || window.webkitRequestAnimationFrame)\n            )\n            || function (func) {\n                setTimeout(func, 16);\n            };\n\n\n\n/***/ }),\n\n/***/ 1040:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * For testable.\n */\n\n\n    var numberUtil = __webpack_require__(973);\n\n    var roundNumber = numberUtil.round;\n\n    var helper = {};\n\n    /**\n     * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n     *                                Should be extent[0] < extent[1].\n     * @param {number} splitNumber splitNumber should be >= 1.\n     * @param {number} [minInterval]\n     * @param {number} [maxInterval]\n     * @return {Object} {interval, intervalPrecision, niceTickExtent}\n     */\n    helper.intervalScaleNiceTicks = function (extent, splitNumber, minInterval, maxInterval) {\n        var result = {};\n        var span = extent[1] - extent[0];\n\n        var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n        if (minInterval != null && interval < minInterval) {\n            interval = result.interval = minInterval;\n        }\n        if (maxInterval != null && interval > maxInterval) {\n            interval = result.interval = maxInterval;\n        }\n        // Tow more digital for tick.\n        var precision = result.intervalPrecision = helper.getIntervalPrecision(interval);\n        // Niced extent inside original extent\n        var niceTickExtent = result.niceTickExtent = [\n            roundNumber(Math.ceil(extent[0] / interval) * interval, precision),\n            roundNumber(Math.floor(extent[1] / interval) * interval, precision)\n        ];\n\n        helper.fixExtent(niceTickExtent, extent);\n\n        return result;\n    };\n\n    /**\n     * @param {number} interval\n     * @return {number} interval precision\n     */\n    helper.getIntervalPrecision = function (interval) {\n        // Tow more digital for tick.\n        return numberUtil.getPrecisionSafe(interval) + 2;\n    };\n\n    function clamp(niceTickExtent, idx, extent) {\n        niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n    }\n\n    // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n    helper.fixExtent = function (niceTickExtent, extent) {\n        !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n        !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n        clamp(niceTickExtent, 0, extent);\n        clamp(niceTickExtent, 1, extent);\n        if (niceTickExtent[0] > niceTickExtent[1]) {\n            niceTickExtent[0] = niceTickExtent[1];\n        }\n    };\n\n    helper.intervalScaleGetTicks = function (interval, extent, niceTickExtent, intervalPrecision) {\n        var ticks = [];\n\n        // If interval is 0, return [];\n        if (!interval) {\n            return ticks;\n        }\n\n        // Consider this case: using dataZoom toolbox, zoom and zoom.\n        var safeLimit = 10000;\n\n        if (extent[0] < niceTickExtent[0]) {\n            ticks.push(extent[0]);\n        }\n        var tick = niceTickExtent[0];\n\n        while (tick <= niceTickExtent[1]) {\n            ticks.push(tick);\n            // Avoid rounding error\n            tick = roundNumber(tick + interval, intervalPrecision);\n            if (tick === ticks[ticks.length - 1]) {\n                // Consider out of safe float point, e.g.,\n                // -3711126.9907707 + 2e-10 === -3711126.9907707\n                break;\n            }\n            if (ticks.length > safeLimit) {\n                return [];\n            }\n        }\n        // Consider this case: the last item of ticks is smaller\n        // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n        if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n            ticks.push(extent[1]);\n        }\n\n        return ticks;\n    };\n\n    module.exports = helper;\n\n\n/***/ }),\n\n/***/ 1041:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(970);\n    var modelUtil = __webpack_require__(974);\n\n    /**\n     * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n     * @param {module:echarts/model/Global} ecModel\n     * @return {Object} {point: [x, y], el: ...} point Will not be null.\n     */\n    module.exports = function (finder, ecModel) {\n        var point = [];\n        var seriesIndex = finder.seriesIndex;\n        var seriesModel;\n        if (seriesIndex == null || !(\n            seriesModel = ecModel.getSeriesByIndex(seriesIndex)\n        )) {\n            return {point: []};\n        }\n\n        var data = seriesModel.getData();\n        var dataIndex = modelUtil.queryDataIndex(data, finder);\n        if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n            return {point: []};\n        }\n\n        var el = data.getItemGraphicEl(dataIndex);\n        var coordSys = seriesModel.coordinateSystem;\n\n        if (seriesModel.getTooltipPosition) {\n            point = seriesModel.getTooltipPosition(dataIndex) || [];\n        }\n        else if (coordSys && coordSys.dataToPoint) {\n            point = coordSys.dataToPoint(\n                data.getValues(\n                    zrUtil.map(coordSys.dimensions, function (dim) {\n                        return seriesModel.coordDimToDataDim(dim)[0];\n                    }), dataIndex, true\n                )\n            ) || [];\n        }\n        else if (el) {\n            // Use graphic bounding rect\n            var rect = el.getBoundingRect().clone();\n            rect.applyTransform(el.transform);\n            point = [\n                rect.x + rect.width / 2,\n                rect.y + rect.height / 2\n            ];\n        }\n\n        return {point: point, el: el};\n    };\n\n\n\n\n/***/ }),\n\n/***/ 1042:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var env = __webpack_require__(977);\n    var zrUtil = __webpack_require__(970);\n    var get = __webpack_require__(974).makeGetter();\n\n    var each = zrUtil.each;\n\n    var globalListener = {};\n\n    /**\n     * @param {string} key\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Function} handler\n     *      param: {string} currTrigger\n     *      param: {Array.<number>} point\n     */\n    globalListener.register = function (key, api, handler) {\n        if (env.node) {\n            return;\n        }\n\n        var zr = api.getZr();\n        get(zr).records || (get(zr).records = {});\n\n        initGlobalListeners(zr, api);\n\n        var record = get(zr).records[key] || (get(zr).records[key] = {});\n        record.handler = handler;\n    };\n\n    function initGlobalListeners(zr, api) {\n        if (get(zr).initialized) {\n            return;\n        }\n\n        get(zr).initialized = true;\n\n        useHandler('click', zrUtil.curry(doEnter, 'click'));\n        useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove'));\n        // useHandler('mouseout', onLeave);\n        useHandler('globalout', onLeave);\n\n        function useHandler(eventType, cb) {\n            zr.on(eventType, function (e) {\n                var dis = makeDispatchAction(api);\n\n                each(get(zr).records, function (record) {\n                    record && cb(record, e, dis.dispatchAction);\n                });\n\n                dispatchTooltipFinally(dis.pendings, api);\n            });\n        }\n    }\n\n    function dispatchTooltipFinally(pendings, api) {\n        var showLen = pendings.showTip.length;\n        var hideLen = pendings.hideTip.length;\n\n        var actuallyPayload;\n        if (showLen) {\n            actuallyPayload = pendings.showTip[showLen - 1];\n        }\n        else if (hideLen) {\n            actuallyPayload = pendings.hideTip[hideLen - 1];\n        }\n        if (actuallyPayload) {\n            actuallyPayload.dispatchAction = null;\n            api.dispatchAction(actuallyPayload);\n        }\n    }\n\n    function onLeave(record, e, dispatchAction) {\n        record.handler('leave', null, dispatchAction);\n    }\n\n    function doEnter(currTrigger, record, e, dispatchAction) {\n        record.handler(currTrigger, e, dispatchAction);\n    }\n\n    function makeDispatchAction(api) {\n        var pendings = {\n            showTip: [],\n            hideTip: []\n        };\n        // FIXME\n        // better approach?\n        // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n        // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n        // So we have to add \"final stage\" to merge those dispatched actions.\n        var dispatchAction = function (payload) {\n            var pendingList = pendings[payload.type];\n            if (pendingList) {\n                pendingList.push(payload);\n            }\n            else {\n                payload.dispatchAction = dispatchAction;\n                api.dispatchAction(payload);\n            }\n        };\n\n        return {\n            dispatchAction: dispatchAction,\n            pendings: pendings\n        };\n    }\n\n    /**\n     * @param {string} key\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    globalListener.unregister = function (key, api) {\n        if (env.node) {\n            return;\n        }\n        var zr = api.getZr();\n        var record = (get(zr).records || {})[key];\n        if (record) {\n            get(zr).records[key] = null;\n        }\n    };\n\n    module.exports = globalListener;\n\n\n/***/ }),\n\n/***/ 1043:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    // List layout\n    var layout = __webpack_require__(980);\n    var formatUtil = __webpack_require__(976);\n    var graphic = __webpack_require__(972);\n\n    module.exports = {\n        /**\n         * Layout list like component.\n         * It will box layout each items in group of component and then position the whole group in the viewport\n         * @param {module:zrender/group/Group} group\n         * @param {module:echarts/model/Component} componentModel\n         * @param {module:echarts/ExtensionAPI}\n         */\n        layout: function (group, componentModel, api) {\n            var boxLayoutParams = componentModel.getBoxLayoutParams();\n            var padding = componentModel.get('padding');\n            var viewportSize = {width: api.getWidth(), height: api.getHeight()};\n\n            var rect = layout.getLayoutRect(\n                boxLayoutParams,\n                viewportSize,\n                padding\n            );\n\n            layout.box(\n                componentModel.get('orient'),\n                group,\n                componentModel.get('itemGap'),\n                rect.width,\n                rect.height\n            );\n\n            layout.positionElement(\n                group,\n                boxLayoutParams,\n                viewportSize,\n                padding\n            );\n        },\n\n        makeBackground: function (rect, componentModel) {\n            var padding = formatUtil.normalizeCssArray(\n                componentModel.get('padding')\n            );\n            var style = componentModel.getItemStyle(['color', 'opacity']);\n            style.fill = componentModel.get('backgroundColor');\n            var rect = new graphic.Rect({\n                shape: {\n                    x: rect.x - padding[3],\n                    y: rect.y - padding[0],\n                    width: rect.width + padding[1] + padding[3],\n                    height: rect.height + padding[0] + padding[2],\n                    r: componentModel.get('borderRadius')\n                },\n                style: style,\n                silent: true,\n                z2: -1\n            });\n            // FIXME\n            // `subPixelOptimizeRect` may bring some gap between edge of viewpart\n            // and background rect when setting like `left: 0`, `top: 0`.\n            // graphic.subPixelOptimizeRect(rect);\n\n            return rect;\n        }\n    };\n\n\n/***/ }),\n\n/***/ 1044:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @file History manager.\n */\n\n\n    var zrUtil = __webpack_require__(970);\n    var each = zrUtil.each;\n\n    var ATTR = '\\0_ec_hist_store';\n\n    var history = {\n\n        /**\n         * @public\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Object} newSnapshot {dataZoomId, batch: [payloadInfo, ...]}\n         */\n        push: function (ecModel, newSnapshot) {\n            var store = giveStore(ecModel);\n\n            // If previous dataZoom can not be found,\n            // complete an range with current range.\n            each(newSnapshot, function (batchItem, dataZoomId) {\n                var i = store.length - 1;\n                for (; i >= 0; i--) {\n                    var snapshot = store[i];\n                    if (snapshot[dataZoomId]) {\n                        break;\n                    }\n                }\n                if (i < 0) {\n                    // No origin range set, create one by current range.\n                    var dataZoomModel = ecModel.queryComponents(\n                        {mainType: 'dataZoom', subType: 'select', id: dataZoomId}\n                    )[0];\n                    if (dataZoomModel) {\n                        var percentRange = dataZoomModel.getPercentRange();\n                        store[0][dataZoomId] = {\n                            dataZoomId: dataZoomId,\n                            start: percentRange[0],\n                            end: percentRange[1]\n                        };\n                    }\n                }\n            });\n\n            store.push(newSnapshot);\n        },\n\n        /**\n         * @public\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Object} snapshot\n         */\n        pop: function (ecModel) {\n            var store = giveStore(ecModel);\n            var head = store[store.length - 1];\n            store.length > 1 && store.pop();\n\n            // Find top for all dataZoom.\n            var snapshot = {};\n            each(head, function (batchItem, dataZoomId) {\n                for (var i = store.length - 1; i >= 0; i--) {\n                    var batchItem = store[i][dataZoomId];\n                    if (batchItem) {\n                        snapshot[dataZoomId] = batchItem;\n                        break;\n                    }\n                }\n            });\n\n            return snapshot;\n        },\n\n        /**\n         * @public\n         */\n        clear: function (ecModel) {\n            ecModel[ATTR] = null;\n        },\n\n        /**\n         * @public\n         * @param {module:echarts/model/Global} ecModel\n         * @return {number} records. always >= 1.\n         */\n        count: function (ecModel) {\n            return giveStore(ecModel).length;\n        }\n\n    };\n\n    /**\n     * [{key: dataZoomId, value: {dataZoomId, range}}, ...]\n     * History length of each dataZoom may be different.\n     * this._history[0] is used to store origin range.\n     * @type {Array.<Object>}\n     */\n    function giveStore(ecModel) {\n        var store = ecModel[ATTR];\n        if (!store) {\n            store = ecModel[ATTR] = [{}];\n        }\n        return store;\n    }\n\n    module.exports = history;\n\n\n\n/***/ }),\n\n/***/ 1047:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @author Yi Shen(https://github.com/pissang)\n */\n\n\n    var vec2 = __webpack_require__(975);\n    var curve = __webpack_require__(990);\n\n    var bbox = {};\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n\n    var start = vec2.create();\n    var end = vec2.create();\n    var extremity = vec2.create();\n\n    var PI2 = Math.PI * 2;\n    /**\n     * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n     * @module zrender/core/bbox\n     * @param {Array<Object>} points 顶点数组\n     * @param {number} min\n     * @param {number} max\n     */\n    bbox.fromPoints = function(points, min, max) {\n        if (points.length === 0) {\n            return;\n        }\n        var p = points[0];\n        var left = p[0];\n        var right = p[0];\n        var top = p[1];\n        var bottom = p[1];\n        var i;\n\n        for (i = 1; i < points.length; i++) {\n            p = points[i];\n            left = mathMin(left, p[0]);\n            right = mathMax(right, p[0]);\n            top = mathMin(top, p[1]);\n            bottom = mathMax(bottom, p[1]);\n        }\n\n        min[0] = left;\n        min[1] = top;\n        max[0] = right;\n        max[1] = bottom;\n    };\n\n    /**\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromLine = function (x0, y0, x1, y1, min, max) {\n        min[0] = mathMin(x0, x1);\n        min[1] = mathMin(y0, y1);\n        max[0] = mathMax(x0, x1);\n        max[1] = mathMax(y0, y1);\n    };\n\n    var xDim = [];\n    var yDim = [];\n    /**\n     * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromCubic = function(\n        x0, y0, x1, y1, x2, y2, x3, y3, min, max\n    ) {\n        var cubicExtrema = curve.cubicExtrema;\n        var cubicAt = curve.cubicAt;\n        var i;\n        var n = cubicExtrema(x0, x1, x2, x3, xDim);\n        min[0] = Infinity;\n        min[1] = Infinity;\n        max[0] = -Infinity;\n        max[1] = -Infinity;\n\n        for (i = 0; i < n; i++) {\n            var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n            min[0] = mathMin(x, min[0]);\n            max[0] = mathMax(x, max[0]);\n        }\n        n = cubicExtrema(y0, y1, y2, y3, yDim);\n        for (i = 0; i < n; i++) {\n            var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n            min[1] = mathMin(y, min[1]);\n            max[1] = mathMax(y, max[1]);\n        }\n\n        min[0] = mathMin(x0, min[0]);\n        max[0] = mathMax(x0, max[0]);\n        min[0] = mathMin(x3, min[0]);\n        max[0] = mathMax(x3, max[0]);\n\n        min[1] = mathMin(y0, min[1]);\n        max[1] = mathMax(y0, max[1]);\n        min[1] = mathMin(y3, min[1]);\n        max[1] = mathMax(y3, max[1]);\n    };\n\n    /**\n     * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromQuadratic = function(x0, y0, x1, y1, x2, y2, min, max) {\n        var quadraticExtremum = curve.quadraticExtremum;\n        var quadraticAt = curve.quadraticAt;\n        // Find extremities, where derivative in x dim or y dim is zero\n        var tx =\n            mathMax(\n                mathMin(quadraticExtremum(x0, x1, x2), 1), 0\n            );\n        var ty =\n            mathMax(\n                mathMin(quadraticExtremum(y0, y1, y2), 1), 0\n            );\n\n        var x = quadraticAt(x0, x1, x2, tx);\n        var y = quadraticAt(y0, y1, y2, ty);\n\n        min[0] = mathMin(x0, x2, x);\n        min[1] = mathMin(y0, y2, y);\n        max[0] = mathMax(x0, x2, x);\n        max[1] = mathMax(y0, y2, y);\n    };\n\n    /**\n     * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n     * @method\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x\n     * @param {number} y\n     * @param {number} rx\n     * @param {number} ry\n     * @param {number} startAngle\n     * @param {number} endAngle\n     * @param {number} anticlockwise\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromArc = function (\n        x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max\n    ) {\n        var vec2Min = vec2.min;\n        var vec2Max = vec2.max;\n\n        var diff = Math.abs(startAngle - endAngle);\n\n\n        if (diff % PI2 < 1e-4 && diff > 1e-4) {\n            // Is a circle\n            min[0] = x - rx;\n            min[1] = y - ry;\n            max[0] = x + rx;\n            max[1] = y + ry;\n            return;\n        }\n\n        start[0] = mathCos(startAngle) * rx + x;\n        start[1] = mathSin(startAngle) * ry + y;\n\n        end[0] = mathCos(endAngle) * rx + x;\n        end[1] = mathSin(endAngle) * ry + y;\n\n        vec2Min(min, start, end);\n        vec2Max(max, start, end);\n\n        // Thresh to [0, Math.PI * 2]\n        startAngle = startAngle % (PI2);\n        if (startAngle < 0) {\n            startAngle = startAngle + PI2;\n        }\n        endAngle = endAngle % (PI2);\n        if (endAngle < 0) {\n            endAngle = endAngle + PI2;\n        }\n\n        if (startAngle > endAngle && !anticlockwise) {\n            endAngle += PI2;\n        }\n        else if (startAngle < endAngle && anticlockwise) {\n            startAngle += PI2;\n        }\n        if (anticlockwise) {\n            var tmp = endAngle;\n            endAngle = startAngle;\n            startAngle = tmp;\n        }\n\n        // var number = 0;\n        // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n        for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n            if (angle > startAngle) {\n                extremity[0] = mathCos(angle) * rx + x;\n                extremity[1] = mathSin(angle) * ry + y;\n\n                vec2Min(min, extremity, min);\n                vec2Max(max, extremity, max);\n            }\n        }\n    };\n\n    module.exports = bbox;\n\n\n\n/***/ }),\n\n/***/ 1048:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var env = __webpack_require__(977);\n\n    // Fix weird bug in some version of IE11 (like 11.0.9600.178**),\n    // where exception \"unexpected call to method or property access\"\n    // might be thrown when calling ctx.fill or ctx.stroke after a path\n    // whose area size is zero is drawn and ctx.clip() is called and\n    // shadowBlur is set. See #4572, #3112, #5777.\n    // (e.g.,\n    //  ctx.moveTo(10, 10);\n    //  ctx.lineTo(20, 10);\n    //  ctx.closePath();\n    //  ctx.clip();\n    //  ctx.shadowBlur = 10;\n    //  ...\n    //  ctx.fill();\n    // )\n\n    var shadowTemp = [\n        ['shadowBlur', 0],\n        ['shadowColor', '#000'],\n        ['shadowOffsetX', 0],\n        ['shadowOffsetY', 0]\n    ];\n\n    module.exports = function (orignalBrush) {\n\n        // version string can be: '11.0'\n        return (env.browser.ie && env.browser.version >= 11)\n\n            ? function () {\n                var clipPaths = this.__clipPaths;\n                var style = this.style;\n                var modified;\n\n                if (clipPaths) {\n                    for (var i = 0; i < clipPaths.length; i++) {\n                        var clipPath = clipPaths[i];\n                        var shape = clipPath && clipPath.shape;\n                        var type = clipPath && clipPath.type;\n\n                        if (shape && (\n                            (type === 'sector' && shape.startAngle === shape.endAngle)\n                            || (type === 'rect' && (!shape.width || !shape.height))\n                        )) {\n                            for (var j = 0; j < shadowTemp.length; j++) {\n                                // It is save to put shadowTemp static, because shadowTemp\n                                // will be all modified each item brush called.\n                                shadowTemp[j][2] = style[shadowTemp[j][0]];\n                                style[shadowTemp[j][0]] = shadowTemp[j][1];\n                            }\n                            modified = true;\n                            break;\n                        }\n                    }\n                }\n\n                orignalBrush.apply(this, arguments);\n\n                if (modified) {\n                    for (var j = 0; j < shadowTemp.length; j++) {\n                        style[shadowTemp[j][0]] = shadowTemp[j][2];\n                    }\n                }\n            }\n\n            : orignalBrush;\n    };\n\n\n\n/***/ }),\n\n/***/ 1049:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var graphic = __webpack_require__(972);\n    var BaseAxisPointer = __webpack_require__(1050);\n    var viewHelper = __webpack_require__(1022);\n    var cartesianAxisHelper = __webpack_require__(1051);\n    var AxisView = __webpack_require__(1013);\n\n    var CartesianAxisPointer = BaseAxisPointer.extend({\n\n        /**\n         * @override\n         */\n        makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n            var axis = axisModel.axis;\n            var grid = axis.grid;\n            var axisPointerType = axisPointerModel.get('type');\n            var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n            var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n            if (axisPointerType && axisPointerType !== 'none') {\n                var elStyle = viewHelper.buildElStyle(axisPointerModel);\n                var pointerOption = pointerShapeBuilder[axisPointerType](\n                    axis, pixelValue, otherExtent, elStyle\n                );\n                pointerOption.style = elStyle;\n                elOption.graphicKey = pointerOption.type;\n                elOption.pointer = pointerOption;\n            }\n\n            var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n            viewHelper.buildCartesianSingleLabelElOption(\n                value, elOption, layoutInfo, axisModel, axisPointerModel, api\n            );\n        },\n\n        /**\n         * @override\n         */\n        getHandleTransform: function (value, axisModel, axisPointerModel) {\n            var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n                labelInside: false\n            });\n            layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n            return {\n                position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n                rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n            };\n        },\n\n        /**\n         * @override\n         */\n        updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n            var axis = axisModel.axis;\n            var grid = axis.grid;\n            var axisExtent = axis.getGlobalExtent(true);\n            var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n            var dimIndex = axis.dim === 'x' ? 0 : 1;\n\n            var currPosition = transform.position;\n            currPosition[dimIndex] += delta[dimIndex];\n            currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n            currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n\n            var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n            var cursorPoint = [cursorOtherValue, cursorOtherValue];\n            cursorPoint[dimIndex] = currPosition[dimIndex];\n\n            // Make tooltip do not overlap axisPointer and in the middle of the grid.\n            var tooltipOptions = [{verticalAlign: 'middle'}, {align: 'center'}];\n\n            return {\n                position: currPosition,\n                rotation: transform.rotation,\n                cursorPoint: cursorPoint,\n                tooltipOption: tooltipOptions[dimIndex]\n            };\n        }\n\n    });\n\n    function getCartesian(grid, axis) {\n        var opt = {};\n        opt[axis.dim + 'AxisIndex'] = axis.index;\n        return grid.getCartesian(opt);\n    }\n\n    var pointerShapeBuilder = {\n\n        line: function (axis, pixelValue, otherExtent, elStyle) {\n            var targetShape = viewHelper.makeLineShape(\n                [pixelValue, otherExtent[0]],\n                [pixelValue, otherExtent[1]],\n                getAxisDimIndex(axis)\n            );\n            graphic.subPixelOptimizeLine({\n                shape: targetShape,\n                style: elStyle\n            });\n            return {\n                type: 'Line',\n                shape: targetShape\n            };\n        },\n\n        shadow: function (axis, pixelValue, otherExtent, elStyle) {\n            var bandWidth = axis.getBandWidth();\n            var span = otherExtent[1] - otherExtent[0];\n            return {\n                type: 'Rect',\n                shape: viewHelper.makeRectShape(\n                    [pixelValue - bandWidth / 2, otherExtent[0]],\n                    [bandWidth, span],\n                    getAxisDimIndex(axis)\n                )\n            };\n        }\n    };\n\n    function getAxisDimIndex(axis) {\n        return axis.dim === 'x' ? 0 : 1;\n    }\n\n    AxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\n\n    module.exports = CartesianAxisPointer;\n\n\n/***/ }),\n\n/***/ 1050:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(970);\n    var clazzUtil = __webpack_require__(983);\n    var graphic = __webpack_require__(972);\n    var get = __webpack_require__(974).makeGetter();\n    var axisPointerModelHelper = __webpack_require__(1004);\n    var eventTool = __webpack_require__(989);\n    var throttle = __webpack_require__(1010);\n\n    var clone = zrUtil.clone;\n    var bind = zrUtil.bind;\n\n    /**\n     * Base axis pointer class in 2D.\n     * Implemenents {module:echarts/component/axis/IAxisPointer}.\n     */\n    function BaseAxisPointer () {\n    }\n\n    BaseAxisPointer.prototype = {\n\n        /**\n         * @private\n         */\n        _group: null,\n\n        /**\n         * @private\n         */\n        _lastGraphicKey: null,\n\n        /**\n         * @private\n         */\n        _handle: null,\n\n        /**\n         * @private\n         */\n        _dragging: false,\n\n        /**\n         * @private\n         */\n        _lastValue: null,\n\n        /**\n         * @private\n         */\n        _lastStatus: null,\n\n        /**\n         * @private\n         */\n        _payloadInfo: null,\n\n        /**\n         * In px, arbitrary value. Do not set too small,\n         * no animation is ok for most cases.\n         * @protected\n         */\n        animationThreshold: 15,\n\n        /**\n         * @implement\n         */\n        render: function (axisModel, axisPointerModel, api, forceRender) {\n            var value = axisPointerModel.get('value');\n            var status = axisPointerModel.get('status');\n\n            // Bind them to `this`, not in closure, otherwise they will not\n            // be replaced when user calling setOption in not merge mode.\n            this._axisModel = axisModel;\n            this._axisPointerModel = axisPointerModel;\n            this._api = api;\n\n            // Optimize: `render` will be called repeatly during mouse move.\n            // So it is power consuming if performing `render` each time,\n            // especially on mobile device.\n            if (!forceRender\n                && this._lastValue === value\n                && this._lastStatus === status\n            ) {\n                return;\n            }\n            this._lastValue = value;\n            this._lastStatus = status;\n\n            var group = this._group;\n            var handle = this._handle;\n\n            if (!status || status === 'hide') {\n                // Do not clear here, for animation better.\n                group && group.hide();\n                handle && handle.hide();\n                return;\n            }\n            group && group.show();\n            handle && handle.show();\n\n            // Otherwise status is 'show'\n            var elOption = {};\n            this.makeElOption(elOption, value, axisModel, axisPointerModel, api);\n\n            // Enable change axis pointer type.\n            var graphicKey = elOption.graphicKey;\n            if (graphicKey !== this._lastGraphicKey) {\n                this.clear(api);\n            }\n            this._lastGraphicKey = graphicKey;\n\n            var moveAnimation = this._moveAnimation =\n                this.determineAnimation(axisModel, axisPointerModel);\n\n            if (!group) {\n                group = this._group = new graphic.Group();\n                this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n                this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n                api.getZr().add(group);\n            }\n            else {\n                var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n                this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n                this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n            }\n\n            updateMandatoryProps(group, axisPointerModel, true);\n\n            this._renderHandle(value);\n        },\n\n        /**\n         * @implement\n         */\n        remove: function (api) {\n            this.clear(api);\n        },\n\n        /**\n         * @implement\n         */\n        dispose: function (api) {\n            this.clear(api);\n        },\n\n        /**\n         * @protected\n         */\n        determineAnimation: function (axisModel, axisPointerModel) {\n            var animation = axisPointerModel.get('animation');\n            var axis = axisModel.axis;\n            var isCategoryAxis = axis.type === 'category';\n            var useSnap = axisPointerModel.get('snap');\n\n            // Value axis without snap always do not snap.\n            if (!useSnap && !isCategoryAxis) {\n                return false;\n            }\n\n            if (animation === 'auto' || animation == null) {\n                var animationThreshold = this.animationThreshold;\n                if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n                    return true;\n                }\n\n                // It is important to auto animation when snap used. Consider if there is\n                // a dataZoom, animation will be disabled when too many points exist, while\n                // it will be enabled for better visual effect when little points exist.\n                if (useSnap) {\n                    var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n                    var axisExtent = axis.getExtent();\n                    // Approximate band width\n                    return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n                }\n\n                return false;\n            }\n\n            return animation === true;\n        },\n\n        /**\n         * add {pointer, label, graphicKey} to elOption\n         * @protected\n         */\n        makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n            // Shoule be implemenented by sub-class.\n        },\n\n        /**\n         * @protected\n         */\n        createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n            var pointerOption = elOption.pointer;\n            if (pointerOption) {\n                var pointerEl = get(group).pointerEl = new graphic[pointerOption.type](\n                    clone(elOption.pointer)\n                );\n                group.add(pointerEl);\n            }\n        },\n\n        /**\n         * @protected\n         */\n        createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n            if (elOption.label) {\n                var labelEl = get(group).labelEl = new graphic.Rect(\n                    clone(elOption.label)\n                );\n\n                group.add(labelEl);\n                updateLabelShowHide(labelEl, axisPointerModel);\n            }\n        },\n\n        /**\n         * @protected\n         */\n        updatePointerEl: function (group, elOption, updateProps) {\n            var pointerEl = get(group).pointerEl;\n            if (pointerEl) {\n                pointerEl.setStyle(elOption.pointer.style);\n                updateProps(pointerEl, {shape: elOption.pointer.shape});\n            }\n        },\n\n        /**\n         * @protected\n         */\n        updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n            var labelEl = get(group).labelEl;\n            if (labelEl) {\n                labelEl.setStyle(elOption.label.style);\n                updateProps(labelEl, {\n                    // Consider text length change in vertical axis, animation should\n                    // be used on shape, otherwise the effect will be weird.\n                    shape: elOption.label.shape,\n                    position: elOption.label.position\n                });\n\n                updateLabelShowHide(labelEl, axisPointerModel);\n            }\n        },\n\n        /**\n         * @private\n         */\n        _renderHandle: function (value) {\n            if (this._dragging || !this.updateHandleTransform) {\n                return;\n            }\n\n            var axisPointerModel = this._axisPointerModel;\n            var zr = this._api.getZr();\n            var handle = this._handle;\n            var handleModel = axisPointerModel.getModel('handle');\n\n            var status = axisPointerModel.get('status');\n            if (!handleModel.get('show') || !status || status === 'hide') {\n                handle && zr.remove(handle);\n                this._handle = null;\n                return;\n            }\n\n            var isInit;\n            if (!this._handle) {\n                isInit = true;\n                handle = this._handle = graphic.createIcon(\n                    handleModel.get('icon'), \n                    {\n                        cursor: 'move',\n                        draggable: true,\n                        onmousemove: function (e) {\n                            // Fot mobile devicem, prevent screen slider on the button.\n                            eventTool.stop(e.event);\n                        },\n                        onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n                        drift: bind(this._onHandleDragMove, this),\n                        ondragend: bind(this._onHandleDragEnd, this)\n                    }\n                );\n                zr.add(handle);\n            }\n\n            updateMandatoryProps(handle, axisPointerModel, false);\n\n            // update style\n            var includeStyles = [\n                'color', 'borderColor', 'borderWidth', 'opacity',\n                'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'\n            ];\n            handle.setStyle(handleModel.getItemStyle(null, includeStyles));\n\n            // update position\n            var handleSize = handleModel.get('size');\n            if (!zrUtil.isArray(handleSize)) {\n                handleSize = [handleSize, handleSize];\n            }\n            handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n\n            throttle.createOrUpdate(\n                this,\n                '_doDispatchAxisPointer',\n                handleModel.get('throttle') || 0,\n                'fixRate'\n            );\n\n            this._moveHandleToValue(value, isInit);\n        },\n\n        /**\n         * @private\n         */\n        _moveHandleToValue: function (value, isInit) {\n            updateProps(\n                this._axisPointerModel,\n                !isInit && this._moveAnimation,\n                this._handle,\n                getHandleTransProps(this.getHandleTransform(\n                    value, this._axisModel, this._axisPointerModel\n                ))\n            );\n        },\n\n        /**\n         * @private\n         */\n        _onHandleDragMove: function (dx, dy) {\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            this._dragging = true;\n\n            // Persistent for throttle.\n            var trans = this.updateHandleTransform(\n                getHandleTransProps(handle),\n                [dx, dy],\n                this._axisModel,\n                this._axisPointerModel\n            );\n            this._payloadInfo = trans;\n\n            handle.stopAnimation();\n            handle.attr(getHandleTransProps(trans));\n            get(handle).lastProp = null;\n\n            this._doDispatchAxisPointer();\n        },\n\n        /**\n         * Throttled method.\n         * @private\n         */\n        _doDispatchAxisPointer: function () {\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            var payloadInfo = this._payloadInfo;\n            var axisModel = this._axisModel;\n            this._api.dispatchAction({\n                type: 'updateAxisPointer',\n                x: payloadInfo.cursorPoint[0],\n                y: payloadInfo.cursorPoint[1],\n                tooltipOption: payloadInfo.tooltipOption,\n                axesInfo: [{\n                    axisDim: axisModel.axis.dim,\n                    axisIndex: axisModel.componentIndex\n                }]\n            });\n        },\n\n        /**\n         * @private\n         */\n        _onHandleDragEnd: function (moveAnimation) {\n            this._dragging = false;\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            var value = this._axisPointerModel.get('value');\n            // Consider snap or categroy axis, handle may be not consistent with\n            // axisPointer. So move handle to align the exact value position when\n            // drag ended.\n            this._moveHandleToValue(value);\n\n            // For the effect: tooltip will be shown when finger holding on handle\n            // button, and will be hidden after finger left handle button.\n            this._api.dispatchAction({\n                type: 'hideTip'\n            });\n        },\n\n        /**\n         * Should be implemenented by sub-class if support `handle`.\n         * @protected\n         * @param {number} value\n         * @param {module:echarts/model/Model} axisModel\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @return {Object} {position: [x, y], rotation: 0}\n         */\n        getHandleTransform: null,\n\n        /**\n         * * Should be implemenented by sub-class if support `handle`.\n         * @protected\n         * @param {Object} transform {position, rotation}\n         * @param {Array.<number>} delta [dx, dy]\n         * @param {module:echarts/model/Model} axisModel\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n         */\n        updateHandleTransform: null,\n\n        /**\n         * @private\n         */\n        clear: function (api) {\n            this._lastValue = null;\n            this._lastStatus = null;\n\n            var zr = api.getZr();\n            var group = this._group;\n            var handle = this._handle;\n            if (zr && group) {\n                this._lastGraphicKey = null;\n                group && zr.remove(group);\n                handle && zr.remove(handle);\n                this._group = null;\n                this._handle = null;\n                this._payloadInfo = null;\n            }\n        },\n\n        /**\n         * @protected\n         */\n        doClear: function () {\n            // Implemented by sub-class if necessary.\n        },\n\n        /**\n         * @protected\n         * @param {Array.<number>} xy\n         * @param {Array.<number>} wh\n         * @param {number} [xDimIndex=0] or 1\n         */\n        buildLabel: function (xy, wh, xDimIndex) {\n            xDimIndex = xDimIndex || 0;\n            return {\n                x: xy[xDimIndex],\n                y: xy[1 - xDimIndex],\n                width: wh[xDimIndex],\n                height: wh[1 - xDimIndex]\n            };\n        }\n    };\n\n    BaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\n\n    function updateProps(animationModel, moveAnimation, el, props) {\n        // Animation optimize.\n        if (!propsEqual(get(el).lastProp, props)) {\n            get(el).lastProp = props;\n            moveAnimation\n                ? graphic.updateProps(el, props, animationModel)\n                : (el.stopAnimation(), el.attr(props));\n        }\n    }\n\n    function propsEqual(lastProps, newProps) {\n        if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n            var equals = true;\n            zrUtil.each(newProps, function (item, key) {\n                equals = equals && propsEqual(lastProps[key], item);\n            });\n            return !!equals;\n        }\n        else {\n            return lastProps === newProps;\n        }\n    }\n\n    function updateLabelShowHide(labelEl, axisPointerModel) {\n        labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n    }\n\n    function getHandleTransProps(trans) {\n        return {\n            position: trans.position.slice(),\n            rotation: trans.rotation || 0\n        };\n    }\n\n    function updateMandatoryProps(group, axisPointerModel, silent) {\n        var z = axisPointerModel.get('z');\n        var zlevel = axisPointerModel.get('zlevel');\n\n        group && group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n                el.silent = silent;\n            }\n        });\n    }\n\n    clazzUtil.enableClassExtend(BaseAxisPointer);\n\n    module.exports = BaseAxisPointer;\n\n\n/***/ }),\n\n/***/ 1051:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(970);\n\n    var helper = {};\n\n    /**\n     * @param {Object} opt {labelInside}\n     * @return {Object} {\n     *  position, rotation, labelDirection, labelOffset,\n     *  tickDirection, labelRotate, labelInterval, z2\n     * }\n     */\n    helper.layout = function (gridModel, axisModel, opt) {\n        opt = opt || {};\n        var grid = gridModel.coordinateSystem;\n        var axis = axisModel.axis;\n        var layout = {};\n\n        var rawAxisPosition = axis.position;\n        var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n        var axisDim = axis.dim;\n\n        var rect = grid.getRect();\n        var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n        var idx = {left: 0, right: 1, top: 0, bottom: 1, onZero: 2};\n        var axisOffset = axisModel.get('offset') || 0;\n\n        var posBound = axisDim === 'x'\n            ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset]\n            : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\n\n        if (axis.onZero) {\n            var otherAxis = grid.getAxis(axisDim === 'x' ? 'y' : 'x', axis.onZeroAxisIndex);\n            var onZeroCoord = otherAxis.toGlobalCoord(otherAxis.dataToCoord(0));\n            posBound[idx['onZero']] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\n        }\n\n        // Axis position\n        layout.position = [\n            axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0],\n            axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]\n        ];\n\n        // Axis rotation\n        layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1);\n\n        // Tick and label direction, x y is axisDim\n        var dirMap = {top: -1, bottom: 1, left: -1, right: 1};\n\n        layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n        layout.labelOffset = axis.onZero ? posBound[idx[rawAxisPosition]] - posBound[idx['onZero']] : 0;\n\n        if (axisModel.get('axisTick.inside')) {\n            layout.tickDirection = -layout.tickDirection;\n        }\n        if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n            layout.labelDirection = -layout.labelDirection;\n        }\n\n        // Special label rotation\n        var labelRotate = axisModel.get('axisLabel.rotate');\n        layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate;\n\n        // label interval when auto mode.\n        layout.labelInterval = axis.getLabelInterval();\n\n        // Over splitLine and splitArea\n        layout.z2 = 1;\n\n        return layout;\n    };\n\n    module.exports = helper;\n\n\n\n/***/ }),\n\n/***/ 1052:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(970);\n    var Model = __webpack_require__(978);\n\n    var LegendModel = __webpack_require__(971).extendComponentModel({\n\n        type: 'legend.plain',\n\n        dependencies: ['series'],\n\n        layoutMode: {\n            type: 'box',\n            // legend.width/height are maxWidth/maxHeight actually,\n            // whereas realy width/height is calculated by its content.\n            // (Setting {left: 10, right: 10} does not make sense).\n            // So consider the case:\n            // `setOption({legend: {left: 10});`\n            // then `setOption({legend: {right: 10});`\n            // The previous `left` should be cleared by setting `ignoreSize`.\n            ignoreSize: true\n        },\n\n        init: function (option, parentModel, ecModel) {\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            option.selected = option.selected || {};\n        },\n\n        mergeOption: function (option) {\n            LegendModel.superCall(this, 'mergeOption', option);\n        },\n\n        optionUpdated: function () {\n            this._updateData(this.ecModel);\n\n            var legendData = this._data;\n\n            // If selectedMode is single, try to select one\n            if (legendData[0] && this.get('selectedMode') === 'single') {\n                var hasSelected = false;\n                // If has any selected in option.selected\n                for (var i = 0; i < legendData.length; i++) {\n                    var name = legendData[i].get('name');\n                    if (this.isSelected(name)) {\n                        // Force to unselect others\n                        this.select(name);\n                        hasSelected = true;\n                        break;\n                    }\n                }\n                // Try select the first if selectedMode is single\n                !hasSelected && this.select(legendData[0].get('name'));\n            }\n        },\n\n        _updateData: function (ecModel) {\n            var legendData = zrUtil.map(this.get('data') || [], function (dataItem) {\n                // Can be string or number\n                if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n                    dataItem = {\n                        name: dataItem\n                    };\n                }\n                return new Model(dataItem, this, this.ecModel);\n            }, this);\n            this._data = legendData;\n\n            var availableNames = zrUtil.map(ecModel.getSeries(), function (series) {\n                return series.name;\n            });\n            ecModel.eachSeries(function (seriesModel) {\n                if (seriesModel.legendDataProvider) {\n                    var data = seriesModel.legendDataProvider();\n                    availableNames = availableNames.concat(data.mapArray(data.getName));\n                }\n            });\n            /**\n             * @type {Array.<string>}\n             * @private\n             */\n            this._availableNames = availableNames;\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Model>}\n         */\n        getData: function () {\n            return this._data;\n        },\n\n        /**\n         * @param {string} name\n         */\n        select: function (name) {\n            var selected = this.option.selected;\n            var selectedMode = this.get('selectedMode');\n            if (selectedMode === 'single') {\n                var data = this._data;\n                zrUtil.each(data, function (dataItem) {\n                    selected[dataItem.get('name')] = false;\n                });\n            }\n            selected[name] = true;\n        },\n\n        /**\n         * @param {string} name\n         */\n        unSelect: function (name) {\n            if (this.get('selectedMode') !== 'single') {\n                this.option.selected[name] = false;\n            }\n        },\n\n        /**\n         * @param {string} name\n         */\n        toggleSelected: function (name) {\n            var selected = this.option.selected;\n            // Default is true\n            if (!selected.hasOwnProperty(name)) {\n                selected[name] = true;\n            }\n            this[selected[name] ? 'unSelect' : 'select'](name);\n        },\n\n        /**\n         * @param {string} name\n         */\n        isSelected: function (name) {\n            var selected = this.option.selected;\n            return !(selected.hasOwnProperty(name) && !selected[name])\n                && zrUtil.indexOf(this._availableNames, name) >= 0;\n        },\n\n        defaultOption: {\n            // 一级层叠\n            zlevel: 0,\n            // 二级层叠\n            z: 4,\n            show: true,\n\n            // 布局方式，默认为水平布局，可选为：\n            // 'horizontal' | 'vertical'\n            orient: 'horizontal',\n\n            left: 'center',\n            // right: 'center',\n\n            top: 0,\n            // bottom: null,\n\n            // 水平对齐\n            // 'auto' | 'left' | 'right'\n            // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n            align: 'auto',\n\n            backgroundColor: 'rgba(0,0,0,0)',\n            // 图例边框颜色\n            borderColor: '#ccc',\n            borderRadius: 0,\n            // 图例边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n            // 图例内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n            // 各个item之间的间隔，单位px，默认为10，\n            // 横向布局时为水平间隔，纵向布局时为纵向间隔\n            itemGap: 10,\n            // 图例图形宽度\n            itemWidth: 25,\n            // 图例图形高度\n            itemHeight: 14,\n\n            // 图例关闭时候的颜色\n            inactiveColor: '#ccc',\n\n            textStyle: {\n                // 图例文字颜色\n                color: '#333'\n            },\n            // formatter: '',\n            // 选择模式，默认开启图例开关\n            selectedMode: true,\n            // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n            // selected: null,\n            // 图例内容（详见legend.data，数组中每一项代表一个item\n            // data: [],\n\n            // Tooltip 相关配置\n            tooltip: {\n                show: false\n            }\n        }\n    });\n\n    module.exports = LegendModel;\n\n\n/***/ }),\n\n/***/ 1053:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(970);\n    var symbolCreator = __webpack_require__(995);\n    var graphic = __webpack_require__(972);\n    var listComponentHelper = __webpack_require__(1043);\n    var layoutUtil = __webpack_require__(980);\n\n    var curry = zrUtil.curry;\n    var each = zrUtil.each;\n    var Group = graphic.Group;\n\n    module.exports = __webpack_require__(971).extendComponentView({\n\n        type: 'legend.plain',\n\n        newlineDisabled: false,\n\n        /**\n         * @override\n         */\n        init: function () {\n\n            /**\n             * @private\n             * @type {module:zrender/container/Group}\n             */\n            this.group.add(this._contentGroup = new Group());\n\n            /**\n             * @private\n             * @type {module:zrender/Element}\n             */\n            this._backgroundEl;\n        },\n\n        /**\n         * @protected\n         */\n        getContentGroup: function () {\n            return this._contentGroup;\n        },\n\n        /**\n         * @override\n         */\n        render: function (legendModel, ecModel, api) {\n\n            this.resetInner();\n\n            if (!legendModel.get('show', true)) {\n                return;\n            }\n\n            var itemAlign = legendModel.get('align');\n            if (!itemAlign || itemAlign === 'auto') {\n                itemAlign = (\n                    legendModel.get('left') === 'right'\n                    && legendModel.get('orient') === 'vertical'\n                ) ? 'right' : 'left';\n            }\n\n            this.renderInner(itemAlign, legendModel, ecModel, api);\n\n            // Perform layout.\n            var positionInfo = legendModel.getBoxLayoutParams();\n            var viewportSize = {width: api.getWidth(), height: api.getHeight()};\n            var padding = legendModel.get('padding');\n\n            var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n            var mainRect = this.layoutInner(legendModel, itemAlign, maxSize);\n\n            // Place mainGroup, based on the calculated `mainRect`.\n            var layoutRect = layoutUtil.getLayoutRect(\n                zrUtil.defaults({width: mainRect.width, height: mainRect.height}, positionInfo),\n                viewportSize,\n                padding\n            );\n            this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]);\n\n            // Render background after group is layout.\n            this.group.add(\n                this._backgroundEl = listComponentHelper.makeBackground(mainRect, legendModel)\n            );\n        },\n\n        /**\n         * @protected\n         */\n        resetInner: function () {\n            this.getContentGroup().removeAll();\n            this._backgroundEl && this.group.remove(this._backgroundEl);\n        },\n\n        /**\n         * @protected\n         */\n        renderInner: function (itemAlign, legendModel, ecModel, api) {\n            var contentGroup = this.getContentGroup();\n            var legendDrawnMap = zrUtil.createHashMap();\n            var selectMode = legendModel.get('selectedMode');\n\n            each(legendModel.getData(), function (itemModel, dataIndex) {\n                var name = itemModel.get('name');\n\n                // Use empty string or \\n as a newline string\n                if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n                    contentGroup.add(new Group({\n                        newline: true\n                    }));\n                    return;\n                }\n\n                var seriesModel = ecModel.getSeriesByName(name)[0];\n\n                if (legendDrawnMap.get(name)) {\n                    // Have been drawed\n                    return;\n                }\n\n                // Series legend\n                if (seriesModel) {\n                    var data = seriesModel.getData();\n                    var color = data.getVisual('color');\n\n                    // If color is a callback function\n                    if (typeof color === 'function') {\n                        // Use the first data\n                        color = color(seriesModel.getDataParams(0));\n                    }\n\n                    // Using rect symbol defaultly\n                    var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n                    var symbolType = data.getVisual('symbol');\n\n                    var itemGroup = this._createItem(\n                        name, dataIndex, itemModel, legendModel,\n                        legendSymbolType, symbolType,\n                        itemAlign, color,\n                        selectMode\n                    );\n\n                    itemGroup.on('click', curry(dispatchSelectAction, name, api))\n                        .on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api))\n                        .on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api));\n\n                    legendDrawnMap.set(name, true);\n                }\n                else {\n                    // Data legend of pie, funnel\n                    ecModel.eachRawSeries(function (seriesModel) {\n                        // In case multiple series has same data name\n                        if (legendDrawnMap.get(name)) {\n                            return;\n                        }\n                        if (seriesModel.legendDataProvider) {\n                            var data = seriesModel.legendDataProvider();\n                            var idx = data.indexOfName(name);\n                            if (idx < 0) {\n                                return;\n                            }\n\n                            var color = data.getItemVisual(idx, 'color');\n\n                            var legendSymbolType = 'roundRect';\n\n                            var itemGroup = this._createItem(\n                                name, dataIndex, itemModel, legendModel,\n                                legendSymbolType, null,\n                                itemAlign, color,\n                                selectMode\n                            );\n\n                            itemGroup.on('click', curry(dispatchSelectAction, name, api))\n                                // FIXME Should not specify the series name\n                                .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api))\n                                .on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));\n\n                            legendDrawnMap.set(name, true);\n                        }\n                    }, this);\n                }\n\n                if (__DEV__) {\n                    if (!legendDrawnMap.get(name)) {\n                        console.warn(name + ' series not exists. Legend data should be same with series name or data name.');\n                    }\n                }\n            }, this);\n        },\n\n        _createItem: function (\n            name, dataIndex, itemModel, legendModel,\n            legendSymbolType, symbolType,\n            itemAlign, color, selectMode\n        ) {\n            var itemWidth = legendModel.get('itemWidth');\n            var itemHeight = legendModel.get('itemHeight');\n            var inactiveColor = legendModel.get('inactiveColor');\n\n            var isSelected = legendModel.isSelected(name);\n            var itemGroup = new Group();\n\n            var textStyleModel = itemModel.getModel('textStyle');\n\n            var itemIcon = itemModel.get('icon');\n\n            var tooltipModel = itemModel.getModel('tooltip');\n            var legendGlobalTooltipModel = tooltipModel.parentModel;\n\n            // Use user given icon first\n            legendSymbolType = itemIcon || legendSymbolType;\n            itemGroup.add(symbolCreator.createSymbol(\n                legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor\n            ));\n\n            // Compose symbols\n            // PENDING\n            if (!itemIcon && symbolType\n                // At least show one symbol, can't be all none\n                && ((symbolType !== legendSymbolType) || symbolType == 'none')\n            ) {\n                var size = itemHeight * 0.8;\n                if (symbolType === 'none') {\n                    symbolType = 'circle';\n                }\n                // Put symbol in the center\n                itemGroup.add(symbolCreator.createSymbol(\n                    symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size,\n                    isSelected ? color : inactiveColor\n                ));\n            }\n\n            var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n            var textAlign = itemAlign;\n\n            var formatter = legendModel.get('formatter');\n            var content = name;\n            if (typeof formatter === 'string' && formatter) {\n                content = formatter.replace('{name}', name != null ? name : '');\n            }\n            else if (typeof formatter === 'function') {\n                content = formatter(name);\n            }\n\n            itemGroup.add(new graphic.Text({\n                style: graphic.setTextStyle({}, textStyleModel, {\n                    text: content,\n                    x: textX,\n                    y: itemHeight / 2,\n                    textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n                    textAlign: textAlign,\n                    textVerticalAlign: 'middle'\n                })\n            }));\n\n            // Add a invisible rect to increase the area of mouse hover\n            var hitRect = new graphic.Rect({\n                shape: itemGroup.getBoundingRect(),\n                invisible: true,\n                tooltip: tooltipModel.get('show') ? zrUtil.extend({\n                    content: name,\n                    // Defaul formatter\n                    formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n                        return name;\n                    },\n                    formatterParams: {\n                        componentType: 'legend',\n                        legendIndex: legendModel.componentIndex,\n                        name: name,\n                        $vars: ['name']\n                    }\n                }, tooltipModel.option) : null\n            });\n            itemGroup.add(hitRect);\n\n            itemGroup.eachChild(function (child) {\n                child.silent = true;\n            });\n\n            hitRect.silent = !selectMode;\n\n            this.getContentGroup().add(itemGroup);\n\n            graphic.setHoverStyle(itemGroup);\n\n            itemGroup.__legendDataIndex = dataIndex;\n\n            return itemGroup;\n        },\n\n        /**\n         * @protected\n         */\n        layoutInner: function (legendModel, itemAlign, maxSize) {\n            var contentGroup = this.getContentGroup();\n\n            // Place items in contentGroup.\n            layoutUtil.box(\n                legendModel.get('orient'),\n                contentGroup,\n                legendModel.get('itemGap'),\n                maxSize.width,\n                maxSize.height\n            );\n\n            var contentRect = contentGroup.getBoundingRect();\n            contentGroup.attr('position', [-contentRect.x, -contentRect.y]);\n\n            return this.group.getBoundingRect();\n        }\n\n    });\n\n    function dispatchSelectAction(name, api) {\n        api.dispatchAction({\n            type: 'legendToggleSelect',\n            name: name\n        });\n    }\n\n    function dispatchHighlightAction(seriesModel, dataName, api) {\n        // If element hover will move to a hoverLayer.\n        var el = api.getZr().storage.getDisplayList()[0];\n        if (!(el && el.useHoverLayer)) {\n            seriesModel.get('legendHoverLink') && api.dispatchAction({\n                type: 'highlight',\n                seriesName: seriesModel.name,\n                name: dataName\n            });\n        }\n    }\n\n    function dispatchDownplayAction(seriesModel, dataName, api) {\n        // If element hover will move to a hoverLayer.\n        var el = api.getZr().storage.getDisplayList()[0];\n        if (!(el && el.useHoverLayer)) {\n            seriesModel.get('legendHoverLink') && api.dispatchAction({\n                type: 'downplay',\n                seriesName: seriesModel.name,\n                name: dataName\n            });\n        }\n    }\n\n\n\n/***/ }),\n\n/***/ 1054:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Box selection tool.\n *\n * @module echarts/component/helper/BrushController\n */\n\n\n\n    var Eventful = __webpack_require__(991);\n    var zrUtil = __webpack_require__(970);\n    var graphic = __webpack_require__(972);\n    var interactionMutex = __webpack_require__(1069);\n    var DataDiffer = __webpack_require__(1002);\n\n    var curry = zrUtil.curry;\n    var each = zrUtil.each;\n    var map = zrUtil.map;\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathPow = Math.pow;\n\n    var COVER_Z = 10000;\n    var UNSELECT_THRESHOLD = 6;\n    var MIN_RESIZE_LINE_WIDTH = 6;\n    var MUTEX_RESOURCE_KEY = 'globalPan';\n\n    var DIRECTION_MAP = {\n        w: [0, 0],\n        e: [0, 1],\n        n: [1, 0],\n        s: [1, 1]\n    };\n    var CURSOR_MAP = {\n        w: 'ew',\n        e: 'ew',\n        n: 'ns',\n        s: 'ns',\n        ne: 'nesw',\n        sw: 'nesw',\n        nw: 'nwse',\n        se: 'nwse'\n    };\n    var DEFAULT_BRUSH_OPT = {\n        brushStyle: {\n            lineWidth: 2,\n            stroke: 'rgba(0,0,0,0.3)',\n            fill: 'rgba(0,0,0,0.1)'\n        },\n        transformable: true,\n        brushMode: 'single',\n        removeOnClick: false\n    };\n\n    var baseUID = 0;\n\n    /**\n     * @alias module:echarts/component/helper/BrushController\n     * @constructor\n     * @mixin {module:zrender/mixin/Eventful}\n     * @event module:echarts/component/helper/BrushController#brush\n     *        params:\n     *            areas: Array.<Array>, coord relates to container group,\n     *                                    If no container specified, to global.\n     *            opt {\n     *                isEnd: boolean,\n     *                removeOnClick: boolean\n     *            }\n     *\n     * @param {module:zrender/zrender~ZRender} zr\n     */\n    function BrushController(zr) {\n\n        if (__DEV__) {\n            zrUtil.assert(zr);\n        }\n\n        Eventful.call(this);\n\n        /**\n         * @type {module:zrender/zrender~ZRender}\n         * @private\n         */\n        this._zr = zr;\n\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new graphic.Group();\n\n        /**\n         * Only for drawing (after enabledBrush).\n         *     'line', 'rect', 'polygon' or false\n         *     If passing false/null/undefined, disable brush.\n         *     If passing 'auto', determined by panel.defaultBrushType\n         * @private\n         * @type {string}\n         */\n        this._brushType;\n\n        /**\n         * Only for drawing (after enabledBrush).\n         *\n         * @private\n         * @type {Object}\n         */\n        this._brushOption;\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._panels;\n\n        /**\n         * @private\n         * @type {Array.<nubmer>}\n         */\n        this._track = [];\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._dragging;\n\n        /**\n         * @private\n         * @type {Array}\n         */\n        this._covers = [];\n\n        /**\n         * @private\n         * @type {moudule:zrender/container/Group}\n         */\n        this._creatingCover;\n\n        /**\n         * `true` means global panel\n         * @private\n         * @type {module:zrender/container/Group|boolean}\n         */\n        this._creatingPanel;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._enableGlobalPan;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        if (__DEV__) {\n            this._mounted;\n        }\n\n        /**\n         * @private\n         * @type {string}\n         */\n        this._uid = 'brushController_' + baseUID++;\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._handlers = {};\n        each(mouseHandlers, function (handler, eventName) {\n            this._handlers[eventName] = zrUtil.bind(handler, this);\n        }, this);\n    }\n\n    BrushController.prototype = {\n\n        constructor: BrushController,\n\n        /**\n         * If set to null/undefined/false, select disabled.\n         * @param {Object} brushOption\n         * @param {string|boolean} brushOption.brushType 'line', 'rect', 'polygon' or false\n         *                          If passing false/null/undefined, disable brush.\n         *                          If passing 'auto', determined by panel.defaultBrushType.\n         *                              ('auto' can not be used in global panel)\n         * @param {number} [brushOption.brushMode='single'] 'single' or 'multiple'\n         * @param {boolean} [brushOption.transformable=true]\n         * @param {boolean} [brushOption.removeOnClick=false]\n         * @param {Object} [brushOption.brushStyle]\n         * @param {number} [brushOption.brushStyle.width]\n         * @param {number} [brushOption.brushStyle.lineWidth]\n         * @param {string} [brushOption.brushStyle.stroke]\n         * @param {string} [brushOption.brushStyle.fill]\n         * @param {number} [brushOption.z]\n         */\n        enableBrush: function (brushOption) {\n            if (__DEV__) {\n                zrUtil.assert(this._mounted);\n            }\n\n            this._brushType && doDisableBrush(this);\n            brushOption.brushType && doEnableBrush(this, brushOption);\n\n            return this;\n        },\n\n        /**\n         * @param {Array.<Object>} panelOpts If not pass, it is global brush.\n         *        Each items: {\n         *            panelId, // mandatory.\n         *            clipPath, // mandatory. function.\n         *            isTargetByCursor, // mandatory. function.\n         *            defaultBrushType, // optional, only used when brushType is 'auto'.\n         *            getLinearBrushOtherExtent, // optional. function.\n         *        }\n         */\n        setPanels: function (panelOpts) {\n            if (panelOpts && panelOpts.length) {\n                var panels = this._panels = {};\n                zrUtil.each(panelOpts, function (panelOpts) {\n                    panels[panelOpts.panelId] = zrUtil.clone(panelOpts);\n                });\n            }\n            else {\n                this._panels = null;\n            }\n            return this;\n        },\n\n        /**\n         * @param {Object} [opt]\n         * @return {boolean} [opt.enableGlobalPan=false]\n         */\n        mount: function (opt) {\n            opt = opt || {};\n\n            if (__DEV__) {\n                this._mounted = true; // should be at first.\n            }\n\n            this._enableGlobalPan = opt.enableGlobalPan;\n\n            var thisGroup = this.group;\n            this._zr.add(thisGroup);\n\n            thisGroup.attr({\n                position: opt.position || [0, 0],\n                rotation: opt.rotation || 0,\n                scale: opt.scale || [1, 1]\n            });\n            this._transform = thisGroup.getLocalTransform();\n\n            return this;\n        },\n\n        eachCover: function (cb, context) {\n            each(this._covers, cb, context);\n        },\n\n        /**\n         * Update covers.\n         * @param {Array.<Object>} brushOptionList Like:\n         *        [\n         *            {id: 'xx', brushType: 'line', range: [23, 44], brushStyle, transformable},\n         *            {id: 'yy', brushType: 'rect', range: [[23, 44], [23, 54]]},\n         *            ...\n         *        ]\n         *        `brushType` is required in each cover info. (can not be 'auto')\n         *        `id` is not mandatory.\n         *        `brushStyle`, `transformable` is not mandatory, use DEFAULT_BRUSH_OPT by default.\n         *        If brushOptionList is null/undefined, all covers removed.\n         */\n        updateCovers: function (brushOptionList) {\n            if (__DEV__) {\n                zrUtil.assert(this._mounted);\n            }\n\n            brushOptionList = zrUtil.map(brushOptionList, function (brushOption) {\n                return zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n            });\n\n            var tmpIdPrefix = '\\0-brush-index-';\n            var oldCovers = this._covers;\n            var newCovers = this._covers = [];\n            var controller = this;\n            var creatingCover = this._creatingCover;\n\n            (new DataDiffer(oldCovers, brushOptionList, oldGetKey, getKey))\n                .add(addOrUpdate)\n                .update(addOrUpdate)\n                .remove(remove)\n                .execute();\n\n            return this;\n\n            function getKey(brushOption, index) {\n                return (brushOption.id != null ? brushOption.id : tmpIdPrefix + index)\n                    + '-' + brushOption.brushType;\n            }\n\n            function oldGetKey(cover, index) {\n                return getKey(cover.__brushOption, index);\n            }\n\n            function addOrUpdate(newIndex, oldIndex) {\n                var newBrushOption = brushOptionList[newIndex];\n                // Consider setOption in event listener of brushSelect,\n                // where updating cover when creating should be forbiden.\n                if (oldIndex != null && oldCovers[oldIndex] === creatingCover) {\n                    newCovers[newIndex] = oldCovers[oldIndex];\n                }\n                else {\n                    var cover = newCovers[newIndex] = oldIndex != null\n                        ? (\n                            oldCovers[oldIndex].__brushOption = newBrushOption,\n                            oldCovers[oldIndex]\n                        )\n                        : endCreating(controller, createCover(controller, newBrushOption));\n                    updateCoverAfterCreation(controller, cover);\n                }\n            }\n\n            function remove(oldIndex) {\n                if (oldCovers[oldIndex] !== creatingCover) {\n                    controller.group.remove(oldCovers[oldIndex]);\n                }\n            }\n        },\n\n        unmount: function () {\n            if (__DEV__) {\n                if (!this._mounted) {\n                    return;\n                }\n            }\n\n            this.enableBrush(false);\n\n            // container may 'removeAll' outside.\n            clearCovers(this);\n            this._zr.remove(this.group);\n\n            if (__DEV__) {\n                this._mounted = false; // should be at last.\n            }\n\n            return this;\n        },\n\n        dispose: function () {\n            this.unmount();\n            this.off();\n        }\n    };\n\n    zrUtil.mixin(BrushController, Eventful);\n\n    function doEnableBrush(controller, brushOption) {\n        var zr = controller._zr;\n\n        // Consider roam, which takes globalPan too.\n        if (!controller._enableGlobalPan) {\n            interactionMutex.take(zr, MUTEX_RESOURCE_KEY, controller._uid);\n        }\n\n        each(controller._handlers, function (handler, eventName) {\n            zr.on(eventName, handler);\n        });\n\n        controller._brushType = brushOption.brushType;\n        controller._brushOption = zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n    }\n\n    function doDisableBrush(controller) {\n        var zr = controller._zr;\n\n        interactionMutex.release(zr, MUTEX_RESOURCE_KEY, controller._uid);\n\n        each(controller._handlers, function (handler, eventName) {\n            zr.off(eventName, handler);\n        });\n\n        controller._brushType = controller._brushOption = null;\n    }\n\n    function createCover(controller, brushOption) {\n        var cover = coverRenderers[brushOption.brushType].createCover(controller, brushOption);\n        cover.__brushOption = brushOption;\n        updateZ(cover, brushOption);\n        controller.group.add(cover);\n        return cover;\n    }\n\n    function endCreating(controller, creatingCover) {\n        var coverRenderer = getCoverRenderer(creatingCover);\n        if (coverRenderer.endCreating) {\n            coverRenderer.endCreating(controller, creatingCover);\n            updateZ(creatingCover, creatingCover.__brushOption);\n        }\n        return creatingCover;\n    }\n\n    function updateCoverShape(controller, cover) {\n        var brushOption = cover.__brushOption;\n        getCoverRenderer(cover).updateCoverShape(\n            controller, cover, brushOption.range, brushOption\n        );\n    }\n\n    function updateZ(cover, brushOption) {\n        var z = brushOption.z;\n        z == null && (z = COVER_Z);\n        cover.traverse(function (el) {\n            el.z = z;\n            el.z2 = z; // Consider in given container.\n        });\n    }\n\n    function updateCoverAfterCreation(controller, cover) {\n        getCoverRenderer(cover).updateCommon(controller, cover);\n        updateCoverShape(controller, cover);\n    }\n\n    function getCoverRenderer(cover) {\n        return coverRenderers[cover.__brushOption.brushType];\n    }\n\n    // return target panel or `true` (means global panel)\n    function getPanelByPoint(controller, e, localCursorPoint) {\n        var panels = controller._panels;\n        if (!panels) {\n            return true; // Global panel\n        }\n        var panel;\n        var transform = controller._transform;\n        each(panels, function (pn) {\n            pn.isTargetByCursor(e, localCursorPoint, transform) && (panel = pn);\n        });\n        return panel;\n    }\n\n    // Return a panel or true\n    function getPanelByCover(controller, cover) {\n        var panels = controller._panels;\n        if (!panels) {\n            return true; // Global panel\n        }\n        var panelId = cover.__brushOption.panelId;\n        // User may give cover without coord sys info,\n        // which is then treated as global panel.\n        return panelId != null ? panels[panelId] : true;\n    }\n\n    function clearCovers(controller) {\n        var covers = controller._covers;\n        var originalLength = covers.length;\n        each(covers, function (cover) {\n            controller.group.remove(cover);\n        }, controller);\n        covers.length = 0;\n\n        return !!originalLength;\n    }\n\n    function trigger(controller, opt) {\n        var areas = map(controller._covers, function (cover) {\n            var brushOption = cover.__brushOption;\n            var range = zrUtil.clone(brushOption.range);\n            return {\n                brushType: brushOption.brushType,\n                panelId: brushOption.panelId,\n                range: range\n            };\n        });\n\n        controller.trigger('brush', areas, {\n            isEnd: !!opt.isEnd,\n            removeOnClick: !!opt.removeOnClick\n        });\n    }\n\n    function shouldShowCover(controller) {\n        var track = controller._track;\n\n        if (!track.length) {\n            return false;\n        }\n\n        var p2 = track[track.length - 1];\n        var p1 = track[0];\n        var dx = p2[0] - p1[0];\n        var dy = p2[1] - p1[1];\n        var dist = mathPow(dx * dx + dy * dy, 0.5);\n\n        return dist > UNSELECT_THRESHOLD;\n    }\n\n    function getTrackEnds(track) {\n        var tail = track.length - 1;\n        tail < 0 && (tail = 0);\n        return [track[0], track[tail]];\n    }\n\n    function createBaseRectCover(doDrift, controller, brushOption, edgeNames) {\n        var cover = new graphic.Group();\n\n        cover.add(new graphic.Rect({\n            name: 'main',\n            style: makeStyle(brushOption),\n            silent: true,\n            draggable: true,\n            cursor: 'move',\n            drift: curry(doDrift, controller, cover, 'nswe'),\n            ondragend: curry(trigger, controller, {isEnd: true})\n        }));\n\n        each(\n            edgeNames,\n            function (name) {\n                cover.add(new graphic.Rect({\n                    name: name,\n                    style: {opacity: 0},\n                    draggable: true,\n                    silent: true,\n                    invisible: true,\n                    drift: curry(doDrift, controller, cover, name),\n                    ondragend: curry(trigger, controller, {isEnd: true})\n                }));\n            }\n        );\n\n        return cover;\n    }\n\n    function updateBaseRect(controller, cover, localRange, brushOption) {\n        var lineWidth = brushOption.brushStyle.lineWidth || 0;\n        var handleSize = mathMax(lineWidth, MIN_RESIZE_LINE_WIDTH);\n        var x = localRange[0][0];\n        var y = localRange[1][0];\n        var xa = x - lineWidth / 2;\n        var ya = y - lineWidth / 2;\n        var x2 = localRange[0][1];\n        var y2 = localRange[1][1];\n        var x2a = x2 - handleSize + lineWidth / 2;\n        var y2a = y2 - handleSize + lineWidth / 2;\n        var width = x2 - x;\n        var height = y2 - y;\n        var widtha = width + lineWidth;\n        var heighta = height + lineWidth;\n\n        updateRectShape(controller, cover, 'main', x, y, width, height);\n\n        if (brushOption.transformable) {\n            updateRectShape(controller, cover, 'w', xa, ya, handleSize, heighta);\n            updateRectShape(controller, cover, 'e', x2a, ya, handleSize, heighta);\n            updateRectShape(controller, cover, 'n', xa, ya, widtha, handleSize);\n            updateRectShape(controller, cover, 's', xa, y2a, widtha, handleSize);\n\n            updateRectShape(controller, cover, 'nw', xa, ya, handleSize, handleSize);\n            updateRectShape(controller, cover, 'ne', x2a, ya, handleSize, handleSize);\n            updateRectShape(controller, cover, 'sw', xa, y2a, handleSize, handleSize);\n            updateRectShape(controller, cover, 'se', x2a, y2a, handleSize, handleSize);\n        }\n    }\n\n    function updateCommon(controller, cover) {\n        var brushOption = cover.__brushOption;\n        var transformable = brushOption.transformable;\n\n        var mainEl = cover.childAt(0);\n        mainEl.useStyle(makeStyle(brushOption));\n        mainEl.attr({\n            silent: !transformable,\n            cursor: transformable ? 'move' : 'default'\n        });\n\n        each(\n            ['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw'],\n            function (name) {\n                var el = cover.childOfName(name);\n                var globalDir = getGlobalDirection(controller, name);\n\n                el && el.attr({\n                    silent: !transformable,\n                    invisible: !transformable,\n                    cursor: transformable ? CURSOR_MAP[globalDir] + '-resize' : null\n                });\n            }\n        );\n    }\n\n    function updateRectShape(controller, cover, name, x, y, w, h) {\n        var el = cover.childOfName(name);\n        el && el.setShape(pointsToRect(\n            clipByPanel(controller, cover, [[x, y], [x + w, y + h]])\n        ));\n    }\n\n    function makeStyle(brushOption) {\n        return zrUtil.defaults({strokeNoScale: true}, brushOption.brushStyle);\n    }\n\n    function formatRectRange(x, y, x2, y2) {\n        var min = [mathMin(x, x2), mathMin(y, y2)];\n        var max = [mathMax(x, x2), mathMax(y, y2)];\n\n        return [\n            [min[0], max[0]], // x range\n            [min[1], max[1]] // y range\n        ];\n    }\n\n    function getTransform(controller) {\n        return graphic.getTransform(controller.group);\n    }\n\n    function getGlobalDirection(controller, localDirection) {\n        if (localDirection.length > 1) {\n            localDirection = localDirection.split('');\n            var globalDir = [\n                getGlobalDirection(controller, localDirection[0]),\n                getGlobalDirection(controller, localDirection[1])\n            ];\n            (globalDir[0] === 'e' || globalDir[0] === 'w') && globalDir.reverse();\n            return globalDir.join('');\n        }\n        else {\n            var map = {w: 'left', e: 'right', n: 'top', s: 'bottom'};\n            var inverseMap = {left: 'w', right: 'e', top: 'n', bottom: 's'};\n            var globalDir = graphic.transformDirection(\n                map[localDirection], getTransform(controller)\n            );\n            return inverseMap[globalDir];\n        }\n    }\n\n    function driftRect(toRectRange, fromRectRange, controller, cover, name, dx, dy, e) {\n        var brushOption = cover.__brushOption;\n        var rectRange = toRectRange(brushOption.range);\n        var localDelta = toLocalDelta(controller, dx, dy);\n\n        each(name.split(''), function (namePart) {\n            var ind = DIRECTION_MAP[namePart];\n            rectRange[ind[0]][ind[1]] += localDelta[ind[0]];\n        });\n\n        brushOption.range = fromRectRange(formatRectRange(\n            rectRange[0][0], rectRange[1][0], rectRange[0][1], rectRange[1][1]\n        ));\n\n        updateCoverAfterCreation(controller, cover);\n        trigger(controller, {isEnd: false});\n    }\n\n    function driftPolygon(controller, cover, dx, dy, e) {\n        var range = cover.__brushOption.range;\n        var localDelta = toLocalDelta(controller, dx, dy);\n\n        each(range, function (point) {\n            point[0] += localDelta[0];\n            point[1] += localDelta[1];\n        });\n\n        updateCoverAfterCreation(controller, cover);\n        trigger(controller, {isEnd: false});\n    }\n\n    function toLocalDelta(controller, dx, dy) {\n        var thisGroup = controller.group;\n        var localD = thisGroup.transformCoordToLocal(dx, dy);\n        var localZero = thisGroup.transformCoordToLocal(0, 0);\n\n        return [localD[0] - localZero[0], localD[1] - localZero[1]];\n    }\n\n    function clipByPanel(controller, cover, data) {\n        var panel = getPanelByCover(controller, cover);\n\n        return (panel && panel !== true)\n            ? panel.clipPath(data, controller._transform)\n            : zrUtil.clone(data);\n    }\n\n    function pointsToRect(points) {\n        var xmin = mathMin(points[0][0], points[1][0]);\n        var ymin = mathMin(points[0][1], points[1][1]);\n        var xmax = mathMax(points[0][0], points[1][0]);\n        var ymax = mathMax(points[0][1], points[1][1]);\n\n        return {\n            x: xmin,\n            y: ymin,\n            width: xmax - xmin,\n            height: ymax - ymin\n        };\n    }\n\n    function resetCursor(controller, e, localCursorPoint) {\n        // Check active\n        if (!controller._brushType) {\n            return;\n        }\n\n        var zr = controller._zr;\n        var covers = controller._covers;\n        var currPanel = getPanelByPoint(controller, e, localCursorPoint);\n\n        // Check whether in covers.\n        if (!controller._dragging) {\n            for (var i = 0; i < covers.length; i++) {\n                var brushOption = covers[i].__brushOption;\n                if (currPanel\n                    && (currPanel === true || brushOption.panelId === currPanel.panelId)\n                    && coverRenderers[brushOption.brushType].contain(\n                        covers[i], localCursorPoint[0], localCursorPoint[1]\n                    )\n                ) {\n                    // Use cursor style set on cover.\n                    return;\n                }\n            }\n        }\n\n        currPanel && zr.setCursorStyle('crosshair');\n    }\n\n    function preventDefault(e) {\n        var rawE = e.event;\n        rawE.preventDefault && rawE.preventDefault();\n    }\n\n    function mainShapeContain(cover, x, y) {\n        return cover.childOfName('main').contain(x, y);\n    }\n\n    function updateCoverByMouse(controller, e, localCursorPoint, isEnd) {\n        var creatingCover = controller._creatingCover;\n        var panel = controller._creatingPanel;\n        var thisBrushOption = controller._brushOption;\n        var eventParams;\n\n        controller._track.push(localCursorPoint.slice());\n\n        if (shouldShowCover(controller) || creatingCover) {\n\n            if (panel && !creatingCover) {\n                thisBrushOption.brushMode === 'single' && clearCovers(controller);\n                var brushOption = zrUtil.clone(thisBrushOption);\n                brushOption.brushType = determineBrushType(brushOption.brushType, panel);\n                brushOption.panelId = panel === true ? null : panel.panelId;\n                creatingCover = controller._creatingCover = createCover(controller, brushOption);\n                controller._covers.push(creatingCover);\n            }\n\n            if (creatingCover) {\n                var coverRenderer = coverRenderers[determineBrushType(controller._brushType, panel)];\n                var coverBrushOption = creatingCover.__brushOption;\n\n                coverBrushOption.range = coverRenderer.getCreatingRange(\n                    clipByPanel(controller, creatingCover, controller._track)\n                );\n\n                if (isEnd) {\n                    endCreating(controller, creatingCover);\n                    coverRenderer.updateCommon(controller, creatingCover);\n                }\n\n                updateCoverShape(controller, creatingCover);\n\n                eventParams = {isEnd: isEnd};\n            }\n        }\n        else if (\n            isEnd\n            && thisBrushOption.brushMode === 'single'\n            && thisBrushOption.removeOnClick\n        ) {\n            // Help user to remove covers easily, only by a tiny drag, in 'single' mode.\n            // But a single click do not clear covers, because user may have casual\n            // clicks (for example, click on other component and do not expect covers\n            // disappear).\n            // Only some cover removed, trigger action, but not every click trigger action.\n            if (getPanelByPoint(controller, e, localCursorPoint) && clearCovers(controller)) {\n                eventParams = {isEnd: isEnd, removeOnClick: true};\n            }\n        }\n\n        return eventParams;\n    }\n\n    function determineBrushType(brushType, panel) {\n        if (brushType === 'auto') {\n            if (__DEV__) {\n                zrUtil.assert(\n                    panel && panel.defaultBrushType,\n                    'MUST have defaultBrushType when brushType is \"atuo\"'\n                );\n            }\n            return panel.defaultBrushType;\n        }\n        return brushType;\n    }\n\n    var mouseHandlers = {\n\n        mousedown: function (e) {\n            if (this._dragging) {\n                // In case some browser do not support globalOut,\n                // and release mose out side the browser.\n                handleDragEnd.call(this, e);\n            }\n            else if (!e.target || !e.target.draggable) {\n\n                preventDefault(e);\n\n                var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n\n                this._creatingCover = null;\n                var panel = this._creatingPanel = getPanelByPoint(this, e, localCursorPoint);\n\n                if (panel) {\n                    this._dragging = true;\n                    this._track = [localCursorPoint.slice()];\n                }\n            }\n        },\n\n        mousemove: function (e) {\n            var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n\n            resetCursor(this, e, localCursorPoint);\n\n            if (this._dragging) {\n\n                preventDefault(e);\n\n                var eventParams = updateCoverByMouse(this, e, localCursorPoint, false);\n\n                eventParams && trigger(this, eventParams);\n            }\n        },\n\n        mouseup: handleDragEnd //,\n\n        // FIXME\n        // in tooltip, globalout should not be triggered.\n        // globalout: handleDragEnd\n    };\n\n    function handleDragEnd(e) {\n        if (this._dragging) {\n\n            preventDefault(e);\n\n            var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n            var eventParams = updateCoverByMouse(this, e, localCursorPoint, true);\n\n            this._dragging = false;\n            this._track = [];\n            this._creatingCover = null;\n\n            // trigger event shoule be at final, after procedure will be nested.\n            eventParams && trigger(this, eventParams);\n        }\n    }\n\n    /**\n     * key: brushType\n     * @type {Object}\n     */\n    var coverRenderers = {\n\n        lineX: getLineRenderer(0),\n\n        lineY: getLineRenderer(1),\n\n        rect: {\n            createCover: function (controller, brushOption) {\n                return createBaseRectCover(\n                    curry(\n                        driftRect,\n                        function (range) {\n                            return range;\n                        },\n                        function (range) {\n                            return range;\n                        }\n                    ),\n                    controller,\n                    brushOption,\n                    ['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw']\n                );\n            },\n            getCreatingRange: function (localTrack) {\n                var ends = getTrackEnds(localTrack);\n                return formatRectRange(ends[1][0], ends[1][1], ends[0][0], ends[0][1]);\n            },\n            updateCoverShape: function (controller, cover, localRange, brushOption) {\n                updateBaseRect(controller, cover, localRange, brushOption);\n            },\n            updateCommon: updateCommon,\n            contain: mainShapeContain\n        },\n\n        polygon: {\n            createCover: function (controller, brushOption) {\n                var cover = new graphic.Group();\n\n                // Do not use graphic.Polygon because graphic.Polyline do not close the\n                // border of the shape when drawing, which is a better experience for user.\n                cover.add(new graphic.Polyline({\n                    name: 'main',\n                    style: makeStyle(brushOption),\n                    silent: true\n                }));\n\n                return cover;\n            },\n            getCreatingRange: function (localTrack) {\n                return localTrack;\n            },\n            endCreating: function (controller, cover) {\n                cover.remove(cover.childAt(0));\n                // Use graphic.Polygon close the shape.\n                cover.add(new graphic.Polygon({\n                    name: 'main',\n                    draggable: true,\n                    drift: curry(driftPolygon, controller, cover),\n                    ondragend: curry(trigger, controller, {isEnd: true})\n                }));\n            },\n            updateCoverShape: function (controller, cover, localRange, brushOption) {\n                cover.childAt(0).setShape({\n                    points: clipByPanel(controller, cover, localRange)\n                });\n            },\n            updateCommon: updateCommon,\n            contain: mainShapeContain\n        }\n    };\n\n    function getLineRenderer(xyIndex) {\n        return {\n            createCover: function (controller, brushOption) {\n                return createBaseRectCover(\n                    curry(\n                        driftRect,\n                        function (range) {\n                            var rectRange = [range, [0, 100]];\n                            xyIndex && rectRange.reverse();\n                            return rectRange;\n                        },\n                        function (rectRange) {\n                            return rectRange[xyIndex];\n                        }\n                    ),\n                    controller,\n                    brushOption,\n                    [['w', 'e'], ['n', 's']][xyIndex]\n                );\n            },\n            getCreatingRange: function (localTrack) {\n                var ends = getTrackEnds(localTrack);\n                var min = mathMin(ends[0][xyIndex], ends[1][xyIndex]);\n                var max = mathMax(ends[0][xyIndex], ends[1][xyIndex]);\n\n                return [min, max];\n            },\n            updateCoverShape: function (controller, cover, localRange, brushOption) {\n                var otherExtent;\n                // If brushWidth not specified, fit the panel.\n                var panel = getPanelByCover(controller, cover);\n                if (panel !== true && panel.getLinearBrushOtherExtent) {\n                    otherExtent = panel.getLinearBrushOtherExtent(\n                        xyIndex, controller._transform\n                    );\n                }\n                else {\n                    var zr = controller._zr;\n                    otherExtent = [0, [zr.getWidth(), zr.getHeight()][1 - xyIndex]];\n                }\n                var rectRange = [localRange, otherExtent];\n                xyIndex && rectRange.reverse();\n\n                updateBaseRect(controller, cover, rectRange, brushOption);\n            },\n            updateCommon: updateCommon,\n            contain: mainShapeContain\n        };\n    }\n\n    module.exports = BrushController;\n\n\n/***/ }),\n\n/***/ 1055:\n/***/ (function(module, exports) {\n\n\n\n    var helper = {};\n\n    var IRRELEVANT_EXCLUDES = {'axisPointer': 1, 'tooltip': 1, 'brush': 1};\n\n    /**\n     * Avoid that: mouse click on a elements that is over geo or graph,\n     * but roam is triggered.\n     */\n    helper.onIrrelevantElement = function (e, api, targetCoordSysModel) {\n        var model = api.getComponentByElement(e.topTarget);\n        // If model is axisModel, it works only if it is injected with coordinateSystem.\n        var coordSys = model && model.coordinateSystem;\n        return model\n            && model !== targetCoordSysModel\n            && !IRRELEVANT_EXCLUDES[model.mainType]\n            && (coordSys && coordSys.model !== targetCoordSysModel);\n    };\n\n    module.exports = helper;\n\n\n/***/ }),\n\n/***/ 1058:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\n\n\n\n    var textHelper = __webpack_require__(1025);\n    var BoundingRect = __webpack_require__(981);\n\n    var tmpRect = new BoundingRect();\n\n    var RectText = function () {};\n\n    RectText.prototype = {\n\n        constructor: RectText,\n\n        /**\n         * Draw text in a rect with specified position.\n         * @param  {CanvasRenderingContext2D} ctx\n         * @param  {Object} rect Displayable rect\n         */\n        drawRectText: function (ctx, rect) {\n            var style = this.style;\n\n            rect = style.textRect || rect;\n\n            // Optimize, avoid normalize every time.\n            this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n            var text = style.text;\n\n            // Convert to string\n            text != null && (text += '');\n\n            if (!textHelper.needDrawText(text, style)) {\n                return;\n            }\n\n            // FIXME\n            ctx.save();\n\n            // Transform rect to view space\n            var transform = this.transform;\n            if (!style.transformText) {\n                if (transform) {\n                    tmpRect.copy(rect);\n                    tmpRect.applyTransform(transform);\n                    rect = tmpRect;\n                }\n            }\n            else {\n                this.setTransform(ctx);\n            }\n\n            // transformText and textRotation can not be used at the same time.\n            textHelper.renderText(this, ctx, text, style, rect);\n\n            ctx.restore();\n        }\n    };\n\n    module.exports = RectText;\n\n\n/***/ }),\n\n/***/ 1059:\n/***/ (function(module, exports) {\n\n\n    module.exports = {\n        /**\n         * 线段包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            var _a = 0;\n            var _b = x0;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l)\n                || (y < y0 - _l && y < y1 - _l)\n                || (x > x0 + _l && x > x1 + _l)\n                || (x < x0 - _l && x < x1 - _l)\n            ) {\n                return false;\n            }\n\n            if (x0 !== x1) {\n                _a = (y0 - y1) / (x0 - x1);\n                _b = (x0 * y1 - x1 * y0) / (x0 - x1) ;\n            }\n            else {\n                return Math.abs(x - x0) <= _l / 2;\n            }\n            var tmp = _a * x - y + _b;\n            var _s = tmp * tmp / (_a * _a + 1);\n            return _s <= _l / 2 * _l / 2;\n        }\n    };\n\n\n/***/ }),\n\n/***/ 1060:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var curve = __webpack_require__(990);\n\n    module.exports = {\n        /**\n         * 二次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.quadraticProjectPoint(\n                x0, y0, x1, y1, x2, y2,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n/***/ }),\n\n/***/ 1061:\n/***/ (function(module, exports) {\n\n\n    module.exports = function windingLine(x0, y0, x1, y1, x, y) {\n        if ((y > y0 && y > y1) || (y < y0 && y < y1)) {\n            return 0;\n        }\n        // Ignore horizontal line\n        if (y1 === y0) {\n            return 0;\n        }\n        var dir = y1 < y0 ? 1 : -1;\n        var t = (y - y0) / (y1 - y0);\n\n        // Avoid winding error when intersection point is the connect point of two line of polygon\n        if (t === 1 || t === 0) {\n            dir = y1 < y0 ? 0.5 : -0.5;\n        }\n\n        var x_ = t * (x1 - x0) + x0;\n\n        return x_ > x ? dir : 0;\n    };\n\n\n/***/ }),\n\n/***/ 1062:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Text element\n * @module zrender/graphic/Text\n *\n * TODO Wrapping\n *\n * Text not support gradient\n */\n\n\n\n    var Displayable = __webpack_require__(1008);\n    var zrUtil = __webpack_require__(970);\n    var textContain = __webpack_require__(984);\n    var textHelper = __webpack_require__(1025);\n\n    /**\n     * @alias zrender/graphic/Text\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    var Text = function (opts) {\n        Displayable.call(this, opts);\n    };\n\n    Text.prototype = {\n\n        constructor: Text,\n\n        type: 'text',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n\n            // Optimize, avoid normalize every time.\n            this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n            // Use props with prefix 'text'.\n            style.fill = style.stroke = style.shadowBlur = style.shadowColor =\n                style.shadowOffsetX = style.shadowOffsetY = null;\n\n            var text = style.text;\n            // Convert to string\n            text != null && (text += '');\n\n            // Always bind style\n            style.bind(ctx, this, prevEl);\n\n            if (!textHelper.needDrawText(text, style)) {\n                return;\n            }\n\n            this.setTransform(ctx);\n\n            textHelper.renderText(this, ctx, text, style);\n\n            this.restoreTransform(ctx);\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n\n            // Optimize, avoid normalize every time.\n            this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n            if (!this._rect) {\n                var text = style.text;\n                text != null ? (text += '') : (text = '');\n\n                var rect = textContain.getBoundingRect(\n                    style.text + '',\n                    style.font,\n                    style.textAlign,\n                    style.textVerticalAlign,\n                    style.textPadding,\n                    style.rich\n                );\n\n                rect.x += style.x || 0;\n                rect.y += style.y || 0;\n\n                if (textHelper.getStroke(style.textStroke, style.textStrokeWidth)) {\n                    var w = style.textStrokeWidth;\n                    rect.x -= w / 2;\n                    rect.y -= w / 2;\n                    rect.width += w;\n                    rect.height += w;\n                }\n\n                this._rect = rect;\n            }\n\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(Text, Displayable);\n\n    module.exports = Text;\n\n\n/***/ }),\n\n/***/ 1063:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(970);\n\n    var Gradient = __webpack_require__(1009);\n\n    /**\n     * x, y, x2, y2 are all percent from 0 to 1\n     * @param {number} [x=0]\n     * @param {number} [y=0]\n     * @param {number} [x2=1]\n     * @param {number} [y2=0]\n     * @param {Array.<Object>} colorStops\n     * @param {boolean} [globalCoord=false]\n     */\n    var LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'linear', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0 : x;\n\n        this.y = y == null ? 0 : y;\n\n        this.x2 = x2 == null ? 1 : x2;\n\n        this.y2 = y2 == null ? 0 : y2;\n\n        // Can be cloned\n        this.type = 'linear';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    LinearGradient.prototype = {\n\n        constructor: LinearGradient\n    };\n\n    zrUtil.inherits(LinearGradient, Gradient);\n\n    module.exports = LinearGradient;\n\n\n/***/ }),\n\n/***/ 1064:\n/***/ (function(module, exports, __webpack_require__) {\n\n/*!\n * ZRender, a high performance 2d drawing library.\n *\n * Copyright (c) 2013, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n */\n// Global defines\n\n    var guid = __webpack_require__(1032);\n    var env = __webpack_require__(977);\n    var zrUtil = __webpack_require__(970);\n\n    var Handler = __webpack_require__(1110);\n    var Storage = __webpack_require__(1112);\n    var Animation = __webpack_require__(1113);\n    var HandlerProxy = __webpack_require__(1114);\n\n    var useVML = !env.canvasSupported;\n\n    var painterCtors = {\n        canvas: __webpack_require__(1116)\n    };\n\n    var instances = {};    // ZRender实例map索引\n\n    var zrender = {};\n\n    /**\n     * @type {string}\n     */\n    zrender.version = '3.6.3';\n\n    /**\n     * Initializing a zrender instance\n     * @param {HTMLElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @return {module:zrender/ZRender}\n     */\n    zrender.init = function (dom, opts) {\n        var zr = new ZRender(guid(), dom, opts);\n        instances[zr.id] = zr;\n        return zr;\n    };\n\n    /**\n     * Dispose zrender instance\n     * @param {module:zrender/ZRender} zr\n     */\n    zrender.dispose = function (zr) {\n        if (zr) {\n            zr.dispose();\n        }\n        else {\n            for (var key in instances) {\n                if (instances.hasOwnProperty(key)) {\n                    instances[key].dispose();\n                }\n            }\n            instances = {};\n        }\n\n        return zrender;\n    };\n\n    /**\n     * Get zrender instance by id\n     * @param {string} id zrender instance id\n     * @return {module:zrender/ZRender}\n     */\n    zrender.getInstance = function (id) {\n        return instances[id];\n    };\n\n    zrender.registerPainter = function (name, Ctor) {\n        painterCtors[name] = Ctor;\n    };\n\n    function delInstance(id) {\n        delete instances[id];\n    }\n\n    /**\n     * @module zrender/ZRender\n     */\n    /**\n     * @constructor\n     * @alias module:zrender/ZRender\n     * @param {string} id\n     * @param {HTMLElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     */\n    var ZRender = function (id, dom, opts) {\n\n        opts = opts || {};\n\n        /**\n         * @type {HTMLDomElement}\n         */\n        this.dom = dom;\n\n        /**\n         * @type {string}\n         */\n        this.id = id;\n\n        var self = this;\n        var storage = new Storage();\n\n        var rendererType = opts.renderer;\n        // TODO WebGL\n        if (useVML) {\n            if (!painterCtors.vml) {\n                throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n            }\n            rendererType = 'vml';\n        }\n        else if (!rendererType || !painterCtors[rendererType]) {\n            rendererType = 'canvas';\n        }\n        var painter = new painterCtors[rendererType](dom, storage, opts);\n\n        this.storage = storage;\n        this.painter = painter;\n\n        var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;\n        this.handler = new Handler(storage, painter, handerProxy, painter.root);\n\n        /**\n         * @type {module:zrender/animation/Animation}\n         */\n        this.animation = new Animation({\n            stage: {\n                update: zrUtil.bind(this.flush, this)\n            }\n        });\n        this.animation.start();\n\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._needsRefresh;\n\n        // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n        // FIXME 有点ugly\n        var oldDelFromStorage = storage.delFromStorage;\n        var oldAddToStorage = storage.addToStorage;\n\n        storage.delFromStorage = function (el) {\n            oldDelFromStorage.call(storage, el);\n\n            el && el.removeSelfFromZr(self);\n        };\n\n        storage.addToStorage = function (el) {\n            oldAddToStorage.call(storage, el);\n\n            el.addSelfToZr(self);\n        };\n    };\n\n    ZRender.prototype = {\n\n        constructor: ZRender,\n        /**\n         * 获取实例唯一标识\n         * @return {string}\n         */\n        getId: function () {\n            return this.id;\n        },\n\n        /**\n         * 添加元素\n         * @param  {module:zrender/Element} el\n         */\n        add: function (el) {\n            this.storage.addRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * 删除元素\n         * @param  {module:zrender/Element} el\n         */\n        remove: function (el) {\n            this.storage.delRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Change configuration of layer\n         * @param {string} zLevel\n         * @param {Object} config\n         * @param {string} [config.clearColor=0] Clear color\n         * @param {string} [config.motionBlur=false] If enable motion blur\n         * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n        */\n        configLayer: function (zLevel, config) {\n            this.painter.configLayer(zLevel, config);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Repaint the canvas immediately\n         */\n        refreshImmediately: function () {\n            // var start = new Date();\n            // Clear needsRefresh ahead to avoid something wrong happens in refresh\n            // Or it will cause zrender refreshes again and again.\n            this._needsRefresh = false;\n            this.painter.refresh();\n            /**\n             * Avoid trigger zr.refresh in Element#beforeUpdate hook\n             */\n            this._needsRefresh = false;\n            // var end = new Date();\n\n            // var log = document.getElementById('log');\n            // if (log) {\n            //     log.innerHTML = log.innerHTML + '<br>' + (end - start);\n            // }\n        },\n\n        /**\n         * Mark and repaint the canvas in the next frame of browser\n         */\n        refresh: function() {\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Perform all refresh\n         */\n        flush: function () {\n            if (this._needsRefresh) {\n                this.refreshImmediately();\n            }\n            if (this._needsRefreshHover) {\n                this.refreshHoverImmediately();\n            }\n        },\n\n        /**\n         * Add element to hover layer\n         * @param  {module:zrender/Element} el\n         * @param {Object} style\n         */\n        addHover: function (el, style) {\n            if (this.painter.addHover) {\n                this.painter.addHover(el, style);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Add element from hover layer\n         * @param  {module:zrender/Element} el\n         */\n        removeHover: function (el) {\n            if (this.painter.removeHover) {\n                this.painter.removeHover(el);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Clear all hover elements in hover layer\n         * @param  {module:zrender/Element} el\n         */\n        clearHover: function () {\n            if (this.painter.clearHover) {\n                this.painter.clearHover();\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Refresh hover in next frame\n         */\n        refreshHover: function () {\n            this._needsRefreshHover = true;\n        },\n\n        /**\n         * Refresh hover immediately\n         */\n        refreshHoverImmediately: function () {\n            this._needsRefreshHover = false;\n            this.painter.refreshHover && this.painter.refreshHover();\n        },\n\n        /**\n         * Resize the canvas.\n         * Should be invoked when container size is changed\n         * @param {Object} [opts]\n         * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n         * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n         */\n        resize: function(opts) {\n            opts = opts || {};\n            this.painter.resize(opts.width, opts.height);\n            this.handler.resize();\n        },\n\n        /**\n         * Stop and clear all animation immediately\n         */\n        clearAnimation: function () {\n            this.animation.clear();\n        },\n\n        /**\n         * Get container width\n         */\n        getWidth: function() {\n            return this.painter.getWidth();\n        },\n\n        /**\n         * Get container height\n         */\n        getHeight: function() {\n            return this.painter.getHeight();\n        },\n\n        /**\n         * Export the canvas as Base64 URL\n         * @param {string} type\n         * @param {string} [backgroundColor='#fff']\n         * @return {string} Base64 URL\n         */\n        // toDataURL: function(type, backgroundColor) {\n        //     return this.painter.getRenderedCanvas({\n        //         backgroundColor: backgroundColor\n        //     }).toDataURL(type);\n        // },\n\n        /**\n         * Converting a path to image.\n         * It has much better performance of drawing image rather than drawing a vector path.\n         * @param {module:zrender/graphic/Path} e\n         * @param {number} width\n         * @param {number} height\n         */\n        pathToImage: function(e, dpr) {\n            return this.painter.pathToImage(e, dpr);\n        },\n\n        /**\n         * Set default cursor\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            this.handler.setCursorStyle(cursorStyle);\n        },\n\n        /**\n         * Find hovered element\n         * @param {number} x\n         * @param {number} y\n         * @return {Object} {target, topTarget}\n         */\n        findHover: function (x, y) {\n            return this.handler.findHover(x, y);\n        },\n\n        /**\n         * Bind event\n         *\n         * @param {string} eventName Event name\n         * @param {Function} eventHandler Handler function\n         * @param {Object} [context] Context object\n         */\n        on: function(eventName, eventHandler, context) {\n            this.handler.on(eventName, eventHandler, context);\n        },\n\n        /**\n         * Unbind event\n         * @param {string} eventName Event name\n         * @param {Function} [eventHandler] Handler function\n         */\n        off: function(eventName, eventHandler) {\n            this.handler.off(eventName, eventHandler);\n        },\n\n        /**\n         * Trigger event manually\n         *\n         * @param {string} eventName Event name\n         * @param {event=} event Event object\n         */\n        trigger: function (eventName, event) {\n            this.handler.trigger(eventName, event);\n        },\n\n\n        /**\n         * Clear all objects and the canvas.\n         */\n        clear: function () {\n            this.storage.delRoot();\n            this.painter.clear();\n        },\n\n        /**\n         * Dispose self.\n         */\n        dispose: function () {\n            this.animation.stop();\n\n            this.clear();\n            this.storage.dispose();\n            this.painter.dispose();\n            this.handler.dispose();\n\n            this.animation =\n            this.storage =\n            this.painter =\n            this.handler = null;\n\n            delInstance(this.id);\n        }\n    };\n\n    module.exports = zrender;\n\n\n\n/***/ }),\n\n/***/ 1065:\n/***/ (function(module, exports, __webpack_require__) {\n\n// FIXME Better way to pack data in graphic element\n\n\n    __webpack_require__(1021);\n\n    __webpack_require__(1127);\n\n    __webpack_require__(1128);\n\n\n    // Show tip action\n    /**\n     * @action\n     * @property {string} type\n     * @property {number} seriesIndex\n     * @property {number} dataIndex\n     * @property {number} [x]\n     * @property {number} [y]\n     */\n    __webpack_require__(971).registerAction(\n        {\n            type: 'showTip',\n            event: 'showTip',\n            update: 'tooltip:manuallyShowTip'\n        },\n        // noop\n        function () {}\n    );\n    // Hide tip action\n    __webpack_require__(971).registerAction(\n        {\n            type: 'hideTip',\n            event: 'hideTip',\n            update: 'tooltip:manuallyHideTip'\n        },\n        // noop\n        function () {}\n    );\n\n\n/***/ }),\n\n/***/ 1066:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    // Do not contain scrollable legend, for sake of file size.\n\n    __webpack_require__(1052);\n    __webpack_require__(1130);\n    __webpack_require__(1053);\n\n    var echarts = __webpack_require__(971);\n    // Series Filter\n    echarts.registerProcessor(__webpack_require__(1131));\n\n    __webpack_require__(982).registerSubTypeDefaulter('legend', function () {\n        // Default 'plain' when no type specified.\n        return 'plain';\n    });\n\n\n\n/***/ }),\n\n/***/ 1067:\n/***/ (function(module, exports) {\n\n\n    module.exports = function (seriesType, ecModel) {\n        var legendModels = ecModel.findComponents({\n            mainType: 'legend'\n        });\n        if (!legendModels || !legendModels.length) {\n            return;\n        }\n        ecModel.eachSeriesByType(seriesType, function (series) {\n            var data = series.getData();\n            data.filterSelf(function (idx) {\n                var name = data.getName(idx);\n                // If in any legend component the status is not selected.\n                for (var i = 0; i < legendModels.length; i++) {\n                    if (!legendModels[i].isSelected(name)) {\n                        return false;\n                    }\n                }\n                return true;\n            }, this);\n        }, this);\n    };\n\n\n/***/ }),\n\n/***/ 1068:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    __webpack_require__(1134);\n    __webpack_require__(1135);\n\n    __webpack_require__(1136);\n    __webpack_require__(1137);\n    __webpack_require__(1138);\n    __webpack_require__(1139);\n    __webpack_require__(1144);\n\n\n/***/ }),\n\n/***/ 1069:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var ATTR = '\\0_ec_interaction_mutex';\n\n    var interactionMutex = {\n\n        take: function (zr, resourceKey, userKey) {\n            var store = getStore(zr);\n            store[resourceKey] = userKey;\n        },\n\n        release: function (zr, resourceKey, userKey) {\n            var store = getStore(zr);\n            var uKey = store[resourceKey];\n\n            if (uKey === userKey) {\n                store[resourceKey] = null;\n            }\n        },\n\n        isTaken: function (zr, resourceKey) {\n            return !!getStore(zr)[resourceKey];\n        }\n    };\n\n    function getStore(zr) {\n        return zr[ATTR] || (zr[ATTR] = {});\n    }\n\n    /**\n     * payload: {\n     *     type: 'takeGlobalCursor',\n     *     key: 'dataZoomSelect', or 'brush', or ...,\n     *         If no userKey, release global cursor.\n     * }\n     */\n    __webpack_require__(971).registerAction(\n        {type: 'takeGlobalCursor', event: 'globalCursorTaken', update: 'update'},\n        function () {}\n    );\n\n    module.exports = interactionMutex;\n\n\n/***/ }),\n\n/***/ 1070:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(970);\n    var graphic = __webpack_require__(972);\n    var modelUtil = __webpack_require__(974);\n    var brushHelper = __webpack_require__(1071);\n\n    var each = zrUtil.each;\n    var indexOf = zrUtil.indexOf;\n    var curry = zrUtil.curry;\n\n    var COORD_CONVERTS = ['dataToPoint', 'pointToData'];\n\n    // FIXME\n    // how to genarialize to more coordinate systems.\n    var INCLUDE_FINDER_MAIN_TYPES = [\n        'grid', 'xAxis', 'yAxis', 'geo', 'graph',\n        'polar', 'radiusAxis', 'angleAxis', 'bmap'\n    ];\n\n    /**\n     * [option in constructor]:\n     * {\n     *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n     * }\n     *\n     *\n     * [targetInfo]:\n     *\n     * There can be multiple axes in a single targetInfo. Consider the case\n     * of `grid` component, a targetInfo represents a grid which contains one or more\n     * cartesian and one or more axes. And consider the case of parallel system,\n     * which has multiple axes in a coordinate system.\n     * Can be {\n     *     panelId: ...,\n     *     coordSys: <a representitive cartesian in grid (first cartesian by default)>,\n     *     coordSyses: all cartesians.\n     *     gridModel: <grid component>\n     *     xAxes: correspond to coordSyses on index\n     *     yAxes: correspond to coordSyses on index\n     * }\n     * or {\n     *     panelId: ...,\n     *     coordSys: <geo coord sys>\n     *     coordSyses: [<geo coord sys>]\n     *     geoModel: <geo component>\n     * }\n     *\n     *\n     * [panelOpt]:\n     *\n     * Make from targetInfo. Input to BrushController.\n     * {\n     *     panelId: ...,\n     *     rect: ...\n     * }\n     *\n     *\n     * [area]:\n     *\n     * Generated by BrushController or user input.\n     * {\n     *     panelId: Used to locate coordInfo directly. If user inpput, no panelId.\n     *     brushType: determine how to convert to/from coord('rect' or 'polygon' or 'lineX/Y').\n     *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n     *     range: pixel range.\n     *     coordRange: representitive coord range (the first one of coordRanges).\n     *     coordRanges: <Array> coord ranges, used in multiple cartesian in one grid.\n     * }\n     */\n\n    /**\n     * @param {Object} option contains Index/Id/Name of xAxis/yAxis/geo/grid\n     *        Each can be {number|Array.<number>}. like: {xAxisIndex: [3, 4]}\n     * @param {module:echarts/model/Global} ecModel\n     * @param {Object} [opt]\n     * @param {Array.<string>} [opt.include] include coordinate system types.\n     */\n    function BrushTargetManager(option, ecModel, opt) {\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        var targetInfoList = this._targetInfoList = [];\n        var info = {};\n        var foundCpts = parseFinder(ecModel, option);\n\n        each(targetInfoBuilders, function (builder, type) {\n            if (!opt || !opt.include || indexOf(opt.include, type) >= 0) {\n                builder(foundCpts, targetInfoList, info);\n            }\n        });\n    }\n\n    var proto = BrushTargetManager.prototype;\n\n    proto.setOutputRanges = function (areas, ecModel) {\n        this.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n            (area.coordRanges || (area.coordRanges = [])).push(coordRange);\n            // area.coordRange is the first of area.coordRanges\n            if (!area.coordRange) {\n                area.coordRange = coordRange;\n                // In 'category' axis, coord to pixel is not reversible, so we can not\n                // rebuild range by coordRange accrately, which may bring trouble when\n                // brushing only one item. So we use __rangeOffset to rebuilding range\n                // by coordRange. And this it only used in brush component so it is no\n                // need to be adapted to coordRanges.\n                var result = coordConvert[area.brushType](0, coordSys, coordRange);\n                area.__rangeOffset = {\n                    offset: diffProcessor[area.brushType](result.values, area.range, [1, 1]),\n                    xyMinMax: result.xyMinMax\n                };\n            }\n        });\n    };\n\n    proto.matchOutputRanges = function (areas, ecModel, cb) {\n        each(areas, function (area) {\n            var targetInfo = this.findTargetInfo(area, ecModel);\n\n            if (targetInfo && targetInfo !== true) {\n                zrUtil.each(\n                    targetInfo.coordSyses,\n                    function (coordSys) {\n                        var result = coordConvert[area.brushType](1, coordSys, area.range);\n                        cb(area, result.values, coordSys, ecModel);\n                    }\n                );\n            }\n        }, this);\n    };\n\n    proto.setInputRanges = function (areas, ecModel) {\n        each(areas, function (area) {\n            var targetInfo = this.findTargetInfo(area, ecModel);\n\n            if (__DEV__) {\n                zrUtil.assert(\n                    !targetInfo || targetInfo === true || area.coordRange,\n                    'coordRange must be specified when coord index specified.'\n                );\n                zrUtil.assert(\n                    !targetInfo || targetInfo !== true || area.range,\n                    'range must be specified in global brush.'\n                );\n            }\n\n            area.range = area.range || [];\n\n            // convert coordRange to global range and set panelId.\n            if (targetInfo && targetInfo !== true) {\n                area.panelId = targetInfo.panelId;\n                // (1) area.range shoule always be calculate from coordRange but does\n                // not keep its original value, for the sake of the dataZoom scenario,\n                // where area.coordRange remains unchanged but area.range may be changed.\n                // (2) Only support converting one coordRange to pixel range in brush\n                // component. So do not consider `coordRanges`.\n                // (3) About __rangeOffset, see comment above.\n                var result = coordConvert[area.brushType](0, targetInfo.coordSys, area.coordRange);\n                var rangeOffset = area.__rangeOffset;\n                area.range = rangeOffset\n                    ? diffProcessor[area.brushType](\n                        result.values,\n                        rangeOffset.offset,\n                        getScales(result.xyMinMax, rangeOffset.xyMinMax)\n                    )\n                    : result.values;\n            }\n        }, this);\n    };\n\n    proto.makePanelOpts = function (api, getDefaultBrushType) {\n        return zrUtil.map(this._targetInfoList, function (targetInfo) {\n            var rect = targetInfo.getPanelRect();\n            return {\n                panelId: targetInfo.panelId,\n                defaultBrushType: getDefaultBrushType && getDefaultBrushType(targetInfo),\n                clipPath: brushHelper.makeRectPanelClipPath(rect),\n                isTargetByCursor: brushHelper.makeRectIsTargetByCursor(\n                    rect, api, targetInfo.coordSysModel\n                ),\n                getLinearBrushOtherExtent: brushHelper.makeLinearBrushOtherExtent(rect)\n            };\n        });\n    };\n\n    proto.controlSeries = function (area, seriesModel, ecModel) {\n        // Check whether area is bound in coord, and series do not belong to that coord.\n        // If do not do this check, some brush (like lineX) will controll all axes.\n        var targetInfo = this.findTargetInfo(area, ecModel);\n        return targetInfo === true || (\n            targetInfo && indexOf(targetInfo.coordSyses, seriesModel.coordinateSystem) >= 0\n        );\n    };\n\n    /**\n     * If return Object, a coord found.\n     * If reutrn true, global found.\n     * Otherwise nothing found.\n     *\n     * @param {Object} area\n     * @param {Array} targetInfoList\n     * @return {Object|boolean}\n     */\n    proto.findTargetInfo = function (area, ecModel) {\n        var targetInfoList = this._targetInfoList;\n        var foundCpts = parseFinder(ecModel, area);\n\n        for (var i = 0; i < targetInfoList.length; i++) {\n            var targetInfo = targetInfoList[i];\n            var areaPanelId = area.panelId;\n            if (areaPanelId) {\n                if (targetInfo.panelId === areaPanelId) {\n                    return targetInfo;\n                }\n            }\n            else {\n                for (var i = 0; i < targetInfoMatchers.length; i++) {\n                    if (targetInfoMatchers[i](foundCpts, targetInfo)) {\n                        return targetInfo;\n                    }\n                }\n            }\n        }\n\n        return true;\n    };\n\n    function formatMinMax(minMax) {\n        minMax[0] > minMax[1] && minMax.reverse();\n        return minMax;\n    }\n\n    function parseFinder(ecModel, option) {\n        return modelUtil.parseFinder(\n            ecModel, option, {includeMainTypes: INCLUDE_FINDER_MAIN_TYPES}\n        );\n    }\n\n    var targetInfoBuilders = {\n\n        grid: function (foundCpts, targetInfoList) {\n            var xAxisModels = foundCpts.xAxisModels;\n            var yAxisModels = foundCpts.yAxisModels;\n            var gridModels = foundCpts.gridModels;\n            // Remove duplicated.\n            var gridModelMap = zrUtil.createHashMap();\n            var xAxesHas = {};\n            var yAxesHas = {};\n\n            if (!xAxisModels && !yAxisModels && !gridModels) {\n                return;\n            }\n\n            each(xAxisModels, function (axisModel) {\n                var gridModel = axisModel.axis.grid.model;\n                gridModelMap.set(gridModel.id, gridModel);\n                xAxesHas[gridModel.id] = true;\n            });\n            each(yAxisModels, function (axisModel) {\n                var gridModel = axisModel.axis.grid.model;\n                gridModelMap.set(gridModel.id, gridModel);\n                yAxesHas[gridModel.id] = true;\n            });\n            each(gridModels, function (gridModel) {\n                gridModelMap.set(gridModel.id, gridModel);\n                xAxesHas[gridModel.id] = true;\n                yAxesHas[gridModel.id] = true;\n            });\n\n            gridModelMap.each(function (gridModel) {\n                var grid = gridModel.coordinateSystem;\n                var cartesians = [];\n\n                each(grid.getCartesians(), function (cartesian, index) {\n                    if (indexOf(xAxisModels, cartesian.getAxis('x').model) >= 0\n                        || indexOf(yAxisModels, cartesian.getAxis('y').model) >= 0\n                    ) {\n                        cartesians.push(cartesian);\n                    }\n                });\n                targetInfoList.push({\n                    panelId: 'grid--' + gridModel.id,\n                    gridModel: gridModel,\n                    coordSysModel: gridModel,\n                    // Use the first one as the representitive coordSys.\n                    coordSys: cartesians[0],\n                    coordSyses: cartesians,\n                    getPanelRect: panelRectBuilder.grid,\n                    xAxisDeclared: xAxesHas[gridModel.id],\n                    yAxisDeclared: yAxesHas[gridModel.id]\n                });\n            });\n        },\n\n        geo: function (foundCpts, targetInfoList) {\n            each(foundCpts.geoModels, function (geoModel) {\n                var coordSys = geoModel.coordinateSystem;\n                targetInfoList.push({\n                    panelId: 'geo--' + geoModel.id,\n                    geoModel: geoModel,\n                    coordSysModel: geoModel,\n                    coordSys: coordSys,\n                    coordSyses: [coordSys],\n                    getPanelRect: panelRectBuilder.geo\n                });\n            });\n        }\n    };\n\n    var targetInfoMatchers = [\n\n        // grid\n        function (foundCpts, targetInfo) {\n            var xAxisModel = foundCpts.xAxisModel;\n            var yAxisModel = foundCpts.yAxisModel;\n            var gridModel = foundCpts.gridModel;\n\n            !gridModel && xAxisModel && (gridModel = xAxisModel.axis.grid.model);\n            !gridModel && yAxisModel && (gridModel = yAxisModel.axis.grid.model);\n\n            return gridModel && gridModel === targetInfo.gridModel;\n        },\n\n        // geo\n        function (foundCpts, targetInfo) {\n            var geoModel = foundCpts.geoModel;\n            return geoModel && geoModel === targetInfo.geoModel;\n        }\n    ];\n\n    var panelRectBuilder = {\n\n        grid: function () {\n            // grid is not Transformable.\n            return this.coordSys.grid.getRect().clone();\n        },\n\n        geo: function () {\n            var coordSys = this.coordSys;\n            var rect = coordSys.getBoundingRect().clone();\n            // geo roam and zoom transform\n            rect.applyTransform(graphic.getTransform(coordSys));\n            return rect;\n        }\n    };\n\n    var coordConvert = {\n\n        lineX: curry(axisConvert, 0),\n\n        lineY: curry(axisConvert, 1),\n\n        rect: function (to, coordSys, rangeOrCoordRange) {\n            var xminymin = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][0], rangeOrCoordRange[1][0]]);\n            var xmaxymax = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][1], rangeOrCoordRange[1][1]]);\n            var values = [\n                formatMinMax([xminymin[0], xmaxymax[0]]),\n                formatMinMax([xminymin[1], xmaxymax[1]])\n            ];\n            return {values: values, xyMinMax: values};\n        },\n\n        polygon: function (to, coordSys, rangeOrCoordRange) {\n            var xyMinMax = [[Infinity, -Infinity], [Infinity, -Infinity]];\n            var values = zrUtil.map(rangeOrCoordRange, function (item) {\n                var p = coordSys[COORD_CONVERTS[to]](item);\n                xyMinMax[0][0] = Math.min(xyMinMax[0][0], p[0]);\n                xyMinMax[1][0] = Math.min(xyMinMax[1][0], p[1]);\n                xyMinMax[0][1] = Math.max(xyMinMax[0][1], p[0]);\n                xyMinMax[1][1] = Math.max(xyMinMax[1][1], p[1]);\n                return p;\n            });\n            return {values: values, xyMinMax: xyMinMax};\n        }\n    };\n\n    function axisConvert(axisNameIndex, to, coordSys, rangeOrCoordRange) {\n        if (__DEV__) {\n            zrUtil.assert(\n                coordSys.type === 'cartesian2d',\n                'lineX/lineY brush is available only in cartesian2d.'\n            );\n        }\n\n        var axis = coordSys.getAxis(['x', 'y'][axisNameIndex]);\n        var values = formatMinMax(zrUtil.map([0, 1], function (i) {\n            return to\n                ? axis.coordToData(axis.toLocalCoord(rangeOrCoordRange[i]))\n                : axis.toGlobalCoord(axis.dataToCoord(rangeOrCoordRange[i]));\n        }));\n        var xyMinMax = [];\n        xyMinMax[axisNameIndex] = values;\n        xyMinMax[1 - axisNameIndex] = [NaN, NaN];\n\n        return {values: values, xyMinMax: xyMinMax};\n    }\n\n    var diffProcessor = {\n        lineX: curry(axisDiffProcessor, 0),\n\n        lineY: curry(axisDiffProcessor, 1),\n\n        rect: function (values, refer, scales) {\n            return [\n                [values[0][0] - scales[0] * refer[0][0], values[0][1] - scales[0] * refer[0][1]],\n                [values[1][0] - scales[1] * refer[1][0], values[1][1] - scales[1] * refer[1][1]]\n            ];\n        },\n\n        polygon: function (values, refer, scales) {\n            return zrUtil.map(values, function (item, idx) {\n                return [item[0] - scales[0] * refer[idx][0], item[1] - scales[1] * refer[idx][1]];\n            });\n        }\n    };\n\n    function axisDiffProcessor(axisNameIndex, values, refer, scales) {\n        return [\n            values[0] - scales[axisNameIndex] * refer[0],\n            values[1] - scales[axisNameIndex] * refer[1]\n        ];\n    }\n\n    // We have to process scale caused by dataZoom manually,\n    // although it might be not accurate.\n    function getScales(xyMinMaxCurr, xyMinMaxOrigin) {\n        var sizeCurr = getSize(xyMinMaxCurr);\n        var sizeOrigin = getSize(xyMinMaxOrigin);\n        var scales = [sizeCurr[0] / sizeOrigin[0], sizeCurr[1] / sizeOrigin[1]];\n        isNaN(scales[0]) && (scales[0] = 1);\n        isNaN(scales[1]) && (scales[1] = 1);\n        return scales;\n    }\n\n    function getSize(xyMinMax) {\n        return xyMinMax\n            ? [xyMinMax[0][1] - xyMinMax[0][0], xyMinMax[1][1] - xyMinMax[1][0]]\n            : [NaN, NaN];\n    }\n\n    module.exports = BrushTargetManager;\n\n\n/***/ }),\n\n/***/ 1071:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var cursorHelper = __webpack_require__(1055);\n    var BoundingRect = __webpack_require__(981);\n    var graphicUtil = __webpack_require__(972);\n\n    var helper = {};\n\n    helper.makeRectPanelClipPath = function (rect) {\n        rect = normalizeRect(rect);\n        return function (localPoints, transform) {\n            return graphicUtil.clipPointsByRect(localPoints, rect);\n        };\n    };\n\n    helper.makeLinearBrushOtherExtent = function (rect, specifiedXYIndex) {\n        rect = normalizeRect(rect);\n        return function (xyIndex) {\n            var idx = specifiedXYIndex != null ? specifiedXYIndex : xyIndex;\n            var brushWidth = idx ? rect.width : rect.height;\n            var base = idx ? rect.x : rect.y;\n            return [base, base + (brushWidth || 0)];\n        };\n    };\n\n    helper.makeRectIsTargetByCursor = function (rect, api, targetModel) {\n        rect = normalizeRect(rect);\n        return function (e, localCursorPoint, transform) {\n            return rect.contain(localCursorPoint[0], localCursorPoint[1])\n                && !cursorHelper.onIrrelevantElement(e, api, targetModel);\n        };\n    };\n\n    // Consider width/height is negative.\n    function normalizeRect(rect) {\n        return BoundingRect.create(rect);\n    }\n\n    module.exports = helper;\n\n\n\n/***/ }),\n\n/***/ 1072:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    __webpack_require__(982).registerSubTypeDefaulter('dataZoom', function () {\n        // Default 'slider' when no type specified.\n        return 'slider';\n    });\n\n\n\n/***/ }),\n\n/***/ 1073:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @file Data zoom processor\n */\n\n\n    var echarts = __webpack_require__(971);\n\n    echarts.registerProcessor(function (ecModel, api) {\n\n        ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n            // We calculate window and reset axis here but not in model\n            // init stage and not after action dispatch handler, because\n            // reset should be called after seriesData.restoreData.\n            dataZoomModel.eachTargetAxis(resetSingleAxis);\n\n            // Caution: data zoom filtering is order sensitive when using\n            // percent range and no min/max/scale set on axis.\n            // For example, we have dataZoom definition:\n            // [\n            //      {xAxisIndex: 0, start: 30, end: 70},\n            //      {yAxisIndex: 0, start: 20, end: 80}\n            // ]\n            // In this case, [20, 80] of y-dataZoom should be based on data\n            // that have filtered by x-dataZoom using range of [30, 70],\n            // but should not be based on full raw data. Thus sliding\n            // x-dataZoom will change both ranges of xAxis and yAxis,\n            // while sliding y-dataZoom will only change the range of yAxis.\n            // So we should filter x-axis after reset x-axis immediately,\n            // and then reset y-axis and filter y-axis.\n            dataZoomModel.eachTargetAxis(filterSingleAxis);\n        });\n\n        ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n            // Fullfill all of the range props so that user\n            // is able to get them from chart.getOption().\n            var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n            var percentRange = axisProxy.getDataPercentWindow();\n            var valueRange = axisProxy.getDataValueWindow();\n\n            dataZoomModel.setRawRange({\n                start: percentRange[0],\n                end: percentRange[1],\n                startValue: valueRange[0],\n                endValue: valueRange[1]\n            }, true);\n        });\n    });\n\n    function resetSingleAxis(dimNames, axisIndex, dataZoomModel) {\n        dataZoomModel.getAxisProxy(dimNames.name, axisIndex).reset(dataZoomModel);\n    }\n\n    function filterSingleAxis(dimNames, axisIndex, dataZoomModel) {\n        dataZoomModel.getAxisProxy(dimNames.name, axisIndex).filterData(dataZoomModel);\n    }\n\n\n\n\n/***/ }),\n\n/***/ 1074:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @file Data zoom action\n */\n\n\n    var zrUtil = __webpack_require__(970);\n    var helper = __webpack_require__(1019);\n    var echarts = __webpack_require__(971);\n\n\n    echarts.registerAction('dataZoom', function (payload, ecModel) {\n\n        var linkedNodesFinder = helper.createLinkedNodesFinder(\n            zrUtil.bind(ecModel.eachComponent, ecModel, 'dataZoom'),\n            helper.eachAxisDim,\n            function (model, dimNames) {\n                return model.get(dimNames.axisIndex);\n            }\n        );\n\n        var effectedModels = [];\n\n        ecModel.eachComponent(\n            {mainType: 'dataZoom', query: payload},\n            function (model, index) {\n                effectedModels.push.apply(\n                    effectedModels, linkedNodesFinder(model).nodes\n                );\n            }\n        );\n\n        zrUtil.each(effectedModels, function (dataZoomModel, index) {\n            dataZoomModel.setRawRange({\n                start: payload.start,\n                end: payload.end,\n                startValue: payload.startValue,\n                endValue: payload.endValue\n            });\n        });\n\n    });\n\n\n\n/***/ }),\n\n/***/ 1078:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n\n\n    /**\n     * Caution: If the mechanism should be changed some day, these cases\n     * should be considered:\n     *\n     * (1) In `merge option` mode, if using the same option to call `setOption`\n     * many times, the result should be the same (try our best to ensure that).\n     * (2) In `merge option` mode, if a component has no id/name specified, it\n     * will be merged by index, and the result sequence of the components is\n     * consistent to the original sequence.\n     * (3) `reset` feature (in toolbox). Find detailed info in comments about\n     * `mergeOption` in module:echarts/model/OptionManager.\n     */\n\n    var zrUtil = __webpack_require__(970);\n    var modelUtil = __webpack_require__(974);\n    var Model = __webpack_require__(978);\n    var each = zrUtil.each;\n    var filter = zrUtil.filter;\n    var map = zrUtil.map;\n    var isArray = zrUtil.isArray;\n    var indexOf = zrUtil.indexOf;\n    var isObject = zrUtil.isObject;\n\n    var ComponentModel = __webpack_require__(982);\n\n    var globalDefault = __webpack_require__(1105);\n\n    var OPTION_INNER_KEY = '\\0_ec_inner';\n\n    /**\n     * @alias module:echarts/model/Global\n     *\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {Object} theme\n     */\n    var GlobalModel = Model.extend({\n\n        constructor: GlobalModel,\n\n        init: function (option, parentModel, theme, optionManager) {\n            theme = theme || {};\n\n            this.option = null; // Mark as not initialized.\n\n            /**\n             * @type {module:echarts/model/Model}\n             * @private\n             */\n            this._theme = new Model(theme);\n\n            /**\n             * @type {module:echarts/model/OptionManager}\n             */\n            this._optionManager = optionManager;\n        },\n\n        setOption: function (option, optionPreprocessorFuncs) {\n            zrUtil.assert(\n                !(OPTION_INNER_KEY in option),\n                'please use chart.getOption()'\n            );\n\n            this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n            this.resetOption(null);\n        },\n\n        /**\n         * @param {string} type null/undefined: reset all.\n         *                      'recreate': force recreate all.\n         *                      'timeline': only reset timeline option\n         *                      'media': only reset media query option\n         * @return {boolean} Whether option changed.\n         */\n        resetOption: function (type) {\n            var optionChanged = false;\n            var optionManager = this._optionManager;\n\n            if (!type || type === 'recreate') {\n                var baseOption = optionManager.mountOption(type === 'recreate');\n\n                if (!this.option || type === 'recreate') {\n                    initBase.call(this, baseOption);\n                }\n                else {\n                    this.restoreData();\n                    this.mergeOption(baseOption);\n                }\n                optionChanged = true;\n            }\n\n            if (type === 'timeline' || type === 'media') {\n                this.restoreData();\n            }\n\n            if (!type || type === 'recreate' || type === 'timeline') {\n                var timelineOption = optionManager.getTimelineOption(this);\n                timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n            }\n\n            if (!type || type === 'recreate' || type === 'media') {\n                var mediaOptions = optionManager.getMediaOption(this, this._api);\n                if (mediaOptions.length) {\n                    each(mediaOptions, function (mediaOption) {\n                        this.mergeOption(mediaOption, optionChanged = true);\n                    }, this);\n                }\n            }\n\n            return optionChanged;\n        },\n\n        /**\n         * @protected\n         */\n        mergeOption: function (newOption) {\n            var option = this.option;\n            var componentsMap = this._componentsMap;\n            var newCptTypes = [];\n\n            // 如果不存在对应的 component model 则直接 merge\n            each(newOption, function (componentOption, mainType) {\n                if (componentOption == null) {\n                    return;\n                }\n\n                if (!ComponentModel.hasClass(mainType)) {\n                    option[mainType] = option[mainType] == null\n                        ? zrUtil.clone(componentOption)\n                        : zrUtil.merge(option[mainType], componentOption, true);\n                }\n                else {\n                    newCptTypes.push(mainType);\n                }\n            });\n\n            // FIXME OPTION 同步是否要改回原来的\n            ComponentModel.topologicalTravel(\n                newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this\n            );\n\n            this._seriesIndices = this._seriesIndices || [];\n\n            function visitComponent(mainType, dependencies) {\n                var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n\n                var mapResult = modelUtil.mappingToExists(\n                    componentsMap.get(mainType), newCptOptionList\n                );\n\n                modelUtil.makeIdAndName(mapResult);\n\n                // Set mainType and complete subType.\n                each(mapResult, function (item, index) {\n                    var opt = item.option;\n                    if (isObject(opt)) {\n                        item.keyInfo.mainType = mainType;\n                        item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n                    }\n                });\n\n                var dependentModels = getComponentsByTypes(\n                    componentsMap, dependencies\n                );\n\n                option[mainType] = [];\n                componentsMap.set(mainType, []);\n\n                each(mapResult, function (resultItem, index) {\n                    var componentModel = resultItem.exist;\n                    var newCptOption = resultItem.option;\n\n                    zrUtil.assert(\n                        isObject(newCptOption) || componentModel,\n                        'Empty component definition'\n                    );\n\n                    // Consider where is no new option and should be merged using {},\n                    // see removeEdgeAndAdd in topologicalTravel and\n                    // ComponentModel.getAllClassMainTypes.\n                    if (!newCptOption) {\n                        componentModel.mergeOption({}, this);\n                        componentModel.optionUpdated({}, false);\n                    }\n                    else {\n                        var ComponentModelClass = ComponentModel.getClass(\n                            mainType, resultItem.keyInfo.subType, true\n                        );\n\n                        if (componentModel && componentModel instanceof ComponentModelClass) {\n                            componentModel.name = resultItem.keyInfo.name;\n                            componentModel.mergeOption(newCptOption, this);\n                            componentModel.optionUpdated(newCptOption, false);\n                        }\n                        else {\n                            // PENDING Global as parent ?\n                            var extraOpt = zrUtil.extend(\n                                {\n                                    dependentModels: dependentModels,\n                                    componentIndex: index\n                                },\n                                resultItem.keyInfo\n                            );\n                            componentModel = new ComponentModelClass(\n                                newCptOption, this, this, extraOpt\n                            );\n                            zrUtil.extend(componentModel, extraOpt);\n                            componentModel.init(newCptOption, this, this, extraOpt);\n                            // Call optionUpdated after init.\n                            // newCptOption has been used as componentModel.option\n                            // and may be merged with theme and default, so pass null\n                            // to avoid confusion.\n                            componentModel.optionUpdated(null, true);\n                        }\n                    }\n\n                    componentsMap.get(mainType)[index] = componentModel;\n                    option[mainType][index] = componentModel.option;\n                }, this);\n\n                // Backup series for filtering.\n                if (mainType === 'series') {\n                    this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n                }\n            }\n        },\n\n        /**\n         * Get option for output (cloned option and inner info removed)\n         * @public\n         * @return {Object}\n         */\n        getOption: function () {\n            var option = zrUtil.clone(this.option);\n\n            each(option, function (opts, mainType) {\n                if (ComponentModel.hasClass(mainType)) {\n                    var opts = modelUtil.normalizeToArray(opts);\n                    for (var i = opts.length - 1; i >= 0; i--) {\n                        // Remove options with inner id.\n                        if (modelUtil.isIdInner(opts[i])) {\n                            opts.splice(i, 1);\n                        }\n                    }\n                    option[mainType] = opts;\n                }\n            });\n\n            delete option[OPTION_INNER_KEY];\n\n            return option;\n        },\n\n        /**\n         * @return {module:echarts/model/Model}\n         */\n        getTheme: function () {\n            return this._theme;\n        },\n\n        /**\n         * @param {string} mainType\n         * @param {number} [idx=0]\n         * @return {module:echarts/model/Component}\n         */\n        getComponent: function (mainType, idx) {\n            var list = this._componentsMap.get(mainType);\n            if (list) {\n                return list[idx || 0];\n            }\n        },\n\n        /**\n         * If none of index and id and name used, return all components with mainType.\n         * @param {Object} condition\n         * @param {string} condition.mainType\n         * @param {string} [condition.subType] If ignore, only query by mainType\n         * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        queryComponents: function (condition) {\n            var mainType = condition.mainType;\n            if (!mainType) {\n                return [];\n            }\n\n            var index = condition.index;\n            var id = condition.id;\n            var name = condition.name;\n\n            var cpts = this._componentsMap.get(mainType);\n\n            if (!cpts || !cpts.length) {\n                return [];\n            }\n\n            var result;\n\n            if (index != null) {\n                if (!isArray(index)) {\n                    index = [index];\n                }\n                result = filter(map(index, function (idx) {\n                    return cpts[idx];\n                }), function (val) {\n                    return !!val;\n                });\n            }\n            else if (id != null) {\n                var isIdArray = isArray(id);\n                result = filter(cpts, function (cpt) {\n                    return (isIdArray && indexOf(id, cpt.id) >= 0)\n                        || (!isIdArray && cpt.id === id);\n                });\n            }\n            else if (name != null) {\n                var isNameArray = isArray(name);\n                result = filter(cpts, function (cpt) {\n                    return (isNameArray && indexOf(name, cpt.name) >= 0)\n                        || (!isNameArray && cpt.name === name);\n                });\n            }\n            else {\n                // Return all components with mainType\n                result = cpts.slice();\n            }\n\n            return filterBySubType(result, condition);\n        },\n\n        /**\n         * The interface is different from queryComponents,\n         * which is convenient for inner usage.\n         *\n         * @usage\n         * var result = findComponents(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series'},\n         *     function (model, index) {...}\n         * );\n         * // result like [component0, componnet1, ...]\n         *\n         * @param {Object} condition\n         * @param {string} condition.mainType Mandatory.\n         * @param {string} [condition.subType] Optional.\n         * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n         *        where xxx is mainType.\n         *        If query attribute is null/undefined or has no index/id/name,\n         *        do not filtering by query conditions, which is convenient for\n         *        no-payload situations or when target of action is global.\n         * @param {Function} [condition.filter] parameter: component, return boolean.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        findComponents: function (condition) {\n            var query = condition.query;\n            var mainType = condition.mainType;\n\n            var queryCond = getQueryCond(query);\n            var result = queryCond\n                ? this.queryComponents(queryCond)\n                : this._componentsMap.get(mainType);\n\n            return doFilter(filterBySubType(result, condition));\n\n            function getQueryCond(q) {\n                var indexAttr = mainType + 'Index';\n                var idAttr = mainType + 'Id';\n                var nameAttr = mainType + 'Name';\n                return q && (\n                        q[indexAttr] != null\n                        || q[idAttr] != null\n                        || q[nameAttr] != null\n                    )\n                    ? {\n                        mainType: mainType,\n                        // subType will be filtered finally.\n                        index: q[indexAttr],\n                        id: q[idAttr],\n                        name: q[nameAttr]\n                    }\n                    : null;\n            }\n\n            function doFilter(res) {\n                return condition.filter\n                     ? filter(res, condition.filter)\n                     : res;\n            }\n        },\n\n        /**\n         * @usage\n         * eachComponent('legend', function (legendModel, index) {\n         *     ...\n         * });\n         * eachComponent(function (componentType, model, index) {\n         *     // componentType does not include subType\n         *     // (componentType is 'xxx' but not 'xxx.aa')\n         * });\n         * eachComponent(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n         *     function (model, index) {...}\n         * );\n         * eachComponent(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n         *     function (model, index) {...}\n         * );\n         *\n         * @param {string|Object=} mainType When mainType is object, the definition\n         *                                  is the same as the method 'findComponents'.\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachComponent: function (mainType, cb, context) {\n            var componentsMap = this._componentsMap;\n\n            if (typeof mainType === 'function') {\n                context = cb;\n                cb = mainType;\n                componentsMap.each(function (components, componentType) {\n                    each(components, function (component, index) {\n                        cb.call(context, componentType, component, index);\n                    });\n                });\n            }\n            else if (zrUtil.isString(mainType)) {\n                each(componentsMap.get(mainType), cb, context);\n            }\n            else if (isObject(mainType)) {\n                var queryResult = this.findComponents(mainType);\n                each(queryResult, cb, context);\n            }\n        },\n\n        /**\n         * @param {string} name\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByName: function (name) {\n            var series = this._componentsMap.get('series');\n            return filter(series, function (oneSeries) {\n                return oneSeries.name === name;\n            });\n        },\n\n        /**\n         * @param {number} seriesIndex\n         * @return {module:echarts/model/Series}\n         */\n        getSeriesByIndex: function (seriesIndex) {\n            return this._componentsMap.get('series')[seriesIndex];\n        },\n\n        /**\n         * @param {string} subType\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByType: function (subType) {\n            var series = this._componentsMap.get('series');\n            return filter(series, function (oneSeries) {\n                return oneSeries.subType === subType;\n            });\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeries: function () {\n            return this._componentsMap.get('series').slice();\n        },\n\n        /**\n         * After filtering, series may be different\n         * frome raw series.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.get('series')[rawSeriesIndex];\n                cb.call(context, series, rawSeriesIndex);\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeries: function (cb, context) {\n            each(this._componentsMap.get('series'), cb, context);\n        },\n\n        /**\n         * After filtering, series may be different.\n         * frome raw series.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeriesByType: function (subType, cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.get('series')[rawSeriesIndex];\n                if (series.subType === subType) {\n                    cb.call(context, series, rawSeriesIndex);\n                }\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered of given type.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeriesByType: function (subType, cb, context) {\n            return each(this.getSeriesByType(subType), cb, context);\n        },\n\n        /**\n         * @param {module:echarts/model/Series} seriesModel\n         */\n        isSeriesFiltered: function (seriesModel) {\n            assertSeriesInitialized(this);\n            return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getCurrentSeriesIndices: function () {\n            return (this._seriesIndices || []).slice();\n        },\n\n        /**\n         * @param {Function} cb\n         * @param {*} context\n         */\n        filterSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            var filteredSeries = filter(\n                this._componentsMap.get('series'), cb, context\n            );\n            this._seriesIndices = createSeriesIndices(filteredSeries);\n        },\n\n        restoreData: function () {\n            var componentsMap = this._componentsMap;\n\n            this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n\n            var componentTypes = [];\n            componentsMap.each(function (components, componentType) {\n                componentTypes.push(componentType);\n            });\n\n            ComponentModel.topologicalTravel(\n                componentTypes,\n                ComponentModel.getAllClassMainTypes(),\n                function (componentType, dependencies) {\n                    each(componentsMap.get(componentType), function (component) {\n                        component.restoreData();\n                    });\n                }\n            );\n        }\n\n    });\n\n    /**\n     * @inner\n     */\n    function mergeTheme(option, theme) {\n        zrUtil.each(theme, function (themeItem, name) {\n            // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n            if (!ComponentModel.hasClass(name)) {\n                if (typeof themeItem === 'object') {\n                    option[name] = !option[name]\n                        ? zrUtil.clone(themeItem)\n                        : zrUtil.merge(option[name], themeItem, false);\n                }\n                else {\n                    if (option[name] == null) {\n                        option[name] = themeItem;\n                    }\n                }\n            }\n        });\n    }\n\n    function initBase(baseOption) {\n        baseOption = baseOption;\n\n        // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n        // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n        this.option = {};\n        this.option[OPTION_INNER_KEY] = 1;\n\n        /**\n         * Init with series: [], in case of calling findSeries method\n         * before series initialized.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @private\n         */\n        this._componentsMap = zrUtil.createHashMap({series: []});\n\n        /**\n         * Mapping between filtered series list and raw series list.\n         * key: filtered series indices, value: raw series indices.\n         * @type {Array.<nubmer>}\n         * @private\n         */\n        this._seriesIndices = null;\n\n        mergeTheme(baseOption, this._theme.option);\n\n        // TODO Needs clone when merging to the unexisted property\n        zrUtil.merge(baseOption, globalDefault, false);\n\n        this.mergeOption(baseOption);\n    }\n\n    /**\n     * @inner\n     * @param {Array.<string>|string} types model types\n     * @return {Object} key: {string} type, value: {Array.<Object>} models\n     */\n    function getComponentsByTypes(componentsMap, types) {\n        if (!zrUtil.isArray(types)) {\n            types = types ? [types] : [];\n        }\n\n        var ret = {};\n        each(types, function (type) {\n            ret[type] = (componentsMap.get(type) || []).slice();\n        });\n\n        return ret;\n    }\n\n    /**\n     * @inner\n     */\n    function determineSubType(mainType, newCptOption, existComponent) {\n        var subType = newCptOption.type\n            ? newCptOption.type\n            : existComponent\n            ? existComponent.subType\n            // Use determineSubType only when there is no existComponent.\n            : ComponentModel.determineSubType(mainType, newCptOption);\n\n        // tooltip, markline, markpoint may always has no subType\n        return subType;\n    }\n\n    /**\n     * @inner\n     */\n    function createSeriesIndices(seriesModels) {\n        return map(seriesModels, function (series) {\n            return series.componentIndex;\n        }) || [];\n    }\n\n    /**\n     * @inner\n     */\n    function filterBySubType(components, condition) {\n        // Using hasOwnProperty for restrict. Consider\n        // subType is undefined in user payload.\n        return condition.hasOwnProperty('subType')\n            ? filter(components, function (cpt) {\n                return cpt.subType === condition.subType;\n            })\n            : components;\n    }\n\n    /**\n     * @inner\n     */\n    function assertSeriesInitialized(ecModel) {\n        // Components that use _seriesIndices should depends on series component,\n        // which make sure that their initialization is after series.\n        if (__DEV__) {\n            if (!ecModel._seriesIndices) {\n                throw new Error('Option should contains series.');\n            }\n        }\n    }\n\n    zrUtil.mixin(GlobalModel, __webpack_require__(1038));\n\n    module.exports = GlobalModel;\n\n\n/***/ }),\n\n/***/ 1079:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var getLineStyle = __webpack_require__(1005)(\n        [\n            ['lineWidth', 'width'],\n            ['stroke', 'color'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor']\n        ]\n    );\n    module.exports = {\n        getLineStyle: function (excludes) {\n            var style = getLineStyle.call(this, excludes);\n            var lineDash = this.getLineDash(style.lineWidth);\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getLineDash: function (lineWidth) {\n            if (lineWidth == null) {\n                lineWidth = 1;\n            }\n            var lineType = this.get('type');\n            var dotSize = Math.max(lineWidth, 2);\n            var dashSize = lineWidth * 4;\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize]);\n        }\n    };\n\n\n/***/ }),\n\n/***/ 1080:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    module.exports = {\n        getAreaStyle: __webpack_require__(1005)(\n            [\n                ['fill', 'color'],\n                ['shadowBlur'],\n                ['shadowOffsetX'],\n                ['shadowOffsetY'],\n                ['opacity'],\n                ['shadowColor']\n            ]\n        )\n    };\n\n\n/***/ }),\n\n/***/ 1081:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var textContain = __webpack_require__(984);\n    var graphicUtil = __webpack_require__(972);\n\n    var PATH_COLOR = ['textStyle', 'color'];\n\n    module.exports = {\n        /**\n         * Get color property or get color from option.textStyle.color\n         * @param {boolean} [isEmphasis]\n         * @return {string}\n         */\n        getTextColor: function (isEmphasis) {\n            var ecModel = this.ecModel;\n            return this.getShallow('color')\n                || (\n                    (!isEmphasis && ecModel) ? ecModel.get(PATH_COLOR) : null\n                );\n        },\n\n        /**\n         * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n         * @return {string}\n         */\n        getFont: function () {\n            return graphicUtil.getFont({\n                fontStyle: this.getShallow('fontStyle'),\n                fontWeight: this.getShallow('fontWeight'),\n                fontSize: this.getShallow('fontSize'),\n                fontFamily: this.getShallow('fontFamily')\n            }, this.ecModel);\n        },\n\n        getTextRect: function (text) {\n            return textContain.getBoundingRect(\n                text,\n                this.getFont(),\n                this.getShallow('align'),\n                this.getShallow('verticalAlign') || this.getShallow('baseline'),\n                this.getShallow('padding'),\n                this.getShallow('rich'),\n                this.getShallow('truncateText')\n            );\n        }\n    };\n\n\n/***/ }),\n\n/***/ 1082:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var Path = __webpack_require__(979);\n    var PathProxy = __webpack_require__(998);\n    var transformPath = __webpack_require__(1089);\n\n    // command chars\n    var cc = [\n        'm', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z',\n        'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'\n    ];\n\n    var mathSqrt = Math.sqrt;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n    var PI = Math.PI;\n\n    var vMag = function(v) {\n        return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n    };\n    var vRatio = function(u, v) {\n        return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n    };\n    var vAngle = function(u, v) {\n        return (u[0] * v[1] < u[1] * v[0] ? -1 : 1)\n                * Math.acos(vRatio(u, v));\n    };\n\n    function processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n        var psi = psiDeg * (PI / 180.0);\n        var xp = mathCos(psi) * (x1 - x2) / 2.0\n                 + mathSin(psi) * (y1 - y2) / 2.0;\n        var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0\n                 + mathCos(psi) * (y1 - y2) / 2.0;\n\n        var lambda = (xp * xp) / (rx * rx) + (yp * yp) / (ry * ry);\n\n        if (lambda > 1) {\n            rx *= mathSqrt(lambda);\n            ry *= mathSqrt(lambda);\n        }\n\n        var f = (fa === fs ? -1 : 1)\n            * mathSqrt((((rx * rx) * (ry * ry))\n                    - ((rx * rx) * (yp * yp))\n                    - ((ry * ry) * (xp * xp))) / ((rx * rx) * (yp * yp)\n                    + (ry * ry) * (xp * xp))\n                ) || 0;\n\n        var cxp = f * rx * yp / ry;\n        var cyp = f * -ry * xp / rx;\n\n        var cx = (x1 + x2) / 2.0\n                 + mathCos(psi) * cxp\n                 - mathSin(psi) * cyp;\n        var cy = (y1 + y2) / 2.0\n                + mathSin(psi) * cxp\n                + mathCos(psi) * cyp;\n\n        var theta = vAngle([ 1, 0 ], [ (xp - cxp) / rx, (yp - cyp) / ry ]);\n        var u = [ (xp - cxp) / rx, (yp - cyp) / ry ];\n        var v = [ (-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry ];\n        var dTheta = vAngle(u, v);\n\n        if (vRatio(u, v) <= -1) {\n            dTheta = PI;\n        }\n        if (vRatio(u, v) >= 1) {\n            dTheta = 0;\n        }\n        if (fs === 0 && dTheta > 0) {\n            dTheta = dTheta - 2 * PI;\n        }\n        if (fs === 1 && dTheta < 0) {\n            dTheta = dTheta + 2 * PI;\n        }\n\n        path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n    }\n\n    function createPathProxyFromString(data) {\n        if (!data) {\n            return [];\n        }\n\n        // command string\n        var cs = data.replace(/-/g, ' -')\n            .replace(/  /g, ' ')\n            .replace(/ /g, ',')\n            .replace(/,,/g, ',');\n\n        var n;\n        // create pipes so that we can split the data\n        for (n = 0; n < cc.length; n++) {\n            cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n        }\n\n        // create array\n        var arr = cs.split('|');\n        // init context point\n        var cpx = 0;\n        var cpy = 0;\n\n        var path = new PathProxy();\n        var CMD = PathProxy.CMD;\n\n        var prevCmd;\n        for (n = 1; n < arr.length; n++) {\n            var str = arr[n];\n            var c = str.charAt(0);\n            var off = 0;\n            var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n            var cmd;\n\n            if (p.length > 0 && p[0] === '') {\n                p.shift();\n            }\n\n            for (var i = 0; i < p.length; i++) {\n                p[i] = parseFloat(p[i]);\n            }\n            while (off < p.length && !isNaN(p[off])) {\n                if (isNaN(p[0])) {\n                    break;\n                }\n                var ctlPtx;\n                var ctlPty;\n\n                var rx;\n                var ry;\n                var psi;\n                var fa;\n                var fs;\n\n                var x1 = cpx;\n                var y1 = cpy;\n\n                // convert l, H, h, V, and v to L\n                switch (c) {\n                    case 'l':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'L':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'm':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'l';\n                        break;\n                    case 'M':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'L';\n                        break;\n                    case 'h':\n                        cpx += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'H':\n                        cpx = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'v':\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'V':\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'C':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]\n                        );\n                        cpx = p[off - 2];\n                        cpy = p[off - 1];\n                        break;\n                    case 'c':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy\n                        );\n                        cpx += p[off - 2];\n                        cpy += p[off - 1];\n                        break;\n                    case 'S':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 's':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = cpx + p[off++];\n                        y1 = cpy + p[off++];\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 'Q':\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'q':\n                        x1 = p[off++] + cpx;\n                        y1 = p[off++] + cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'T':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 't':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 'A':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                    case 'a':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                }\n            }\n\n            if (c === 'z' || c === 'Z') {\n                cmd = CMD.Z;\n                path.addData(cmd);\n            }\n\n            prevCmd = cmd;\n        }\n\n        path.toStatic();\n\n        return path;\n    }\n\n    // TODO Optimize double memory cost problem\n    function createPathOptions(str, opts) {\n        var pathProxy = createPathProxyFromString(str);\n        opts = opts || {};\n        opts.buildPath = function (path) {\n            if (path.setData) {\n                path.setData(pathProxy.data);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            }\n            else {\n                var ctx = path;\n                pathProxy.rebuildPath(ctx);\n            }\n        };\n\n        opts.applyTransform = function (m) {\n            transformPath(pathProxy, m);\n\n            this.dirty(true);\n        };\n\n        return opts;\n    }\n\n    module.exports = {\n        /**\n         * Create a Path object from path string data\n         * http://www.w3.org/TR/SVG/paths.html#PathData\n         * @param  {Object} opts Other options\n         */\n        createFromString: function (str, opts) {\n            return new Path(createPathOptions(str, opts));\n        },\n\n        /**\n         * Create a Path class from path string data\n         * @param  {string} str\n         * @param  {Object} opts Other options\n         */\n        extendFromString: function (str, opts) {\n            return Path.extend(createPathOptions(str, opts));\n        },\n\n        /**\n         * Merge multiple paths\n         */\n        // TODO Apply transform\n        // TODO stroke dash\n        // TODO Optimize double memory cost problem\n        mergePath: function (pathEls, opts) {\n            var pathList = [];\n            var len = pathEls.length;\n            for (var i = 0; i < len; i++) {\n                var pathEl = pathEls[i];\n                if (!pathEl.path) {\n                    pathEl.createPathProxy();\n                }\n                if (pathEl.__dirtyPath) {\n                    pathEl.buildPath(pathEl.path, pathEl.shape, true);\n                }\n                pathList.push(pathEl.path);\n            }\n\n            var pathBundle = new Path(opts);\n            // Need path proxy.\n            pathBundle.createPathProxy();\n            pathBundle.buildPath = function (path) {\n                path.appendPath(pathList);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            };\n\n            return pathBundle;\n        }\n    };\n\n\n/***/ }),\n\n/***/ 1083:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @module zrender/mixin/Animatable\n */\n\n\n    var Animator = __webpack_require__(1033);\n    var util = __webpack_require__(970);\n    var isString = util.isString;\n    var isFunction = util.isFunction;\n    var isObject = util.isObject;\n    var log = __webpack_require__(1024);\n\n    /**\n     * @alias modue:zrender/mixin/Animatable\n     * @constructor\n     */\n    var Animatable = function () {\n\n        /**\n         * @type {Array.<module:zrender/animation/Animator>}\n         * @readOnly\n         */\n        this.animators = [];\n    };\n\n    Animatable.prototype = {\n\n        constructor: Animatable,\n\n        /**\n         * 动画\n         *\n         * @param {string} path The path to fetch value from object, like 'a.b.c'.\n         * @param {boolean} [loop] Whether to loop animation.\n         * @return {module:zrender/animation/Animator}\n         * @example:\n         *     el.animate('style', false)\n         *         .when(1000, {x: 10} )\n         *         .done(function(){ // Animation done })\n         *         .start()\n         */\n        animate: function (path, loop) {\n            var target;\n            var animatingShape = false;\n            var el = this;\n            var zr = this.__zr;\n            if (path) {\n                var pathSplitted = path.split('.');\n                var prop = el;\n                // If animating shape\n                animatingShape = pathSplitted[0] === 'shape';\n                for (var i = 0, l = pathSplitted.length; i < l; i++) {\n                    if (!prop) {\n                        continue;\n                    }\n                    prop = prop[pathSplitted[i]];\n                }\n                if (prop) {\n                    target = prop;\n                }\n            }\n            else {\n                target = el;\n            }\n\n            if (!target) {\n                log(\n                    'Property \"'\n                    + path\n                    + '\" is not existed in element '\n                    + el.id\n                );\n                return;\n            }\n\n            var animators = el.animators;\n\n            var animator = new Animator(target, loop);\n\n            animator.during(function (target) {\n                el.dirty(animatingShape);\n            })\n            .done(function () {\n                // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n                animators.splice(util.indexOf(animators, animator), 1);\n            });\n\n            animators.push(animator);\n\n            // If animate after added to the zrender\n            if (zr) {\n                zr.animation.addAnimator(animator);\n            }\n\n            return animator;\n        },\n\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stopAnimation: function (forwardToLast) {\n            var animators = this.animators;\n            var len = animators.length;\n            for (var i = 0; i < len; i++) {\n                animators[i].stop(forwardToLast);\n            }\n            animators.length = 0;\n\n            return this;\n        },\n\n        /**\n         * Caution: this method will stop previous animation.\n         * So do not use this method to one element twice before\n         * animation starts, unless you know what you are doing.\n         * @param {Object} target\n         * @param {number} [time=500] Time in ms\n         * @param {string} [easing='linear']\n         * @param {number} [delay=0]\n         * @param {Function} [callback]\n         * @param {Function} [forceAnimate] Prevent stop animation and callback\n         *        immediently when target values are the same as current values.\n         *\n         * @example\n         *  // Animate position\n         *  el.animateTo({\n         *      position: [10, 10]\n         *  }, function () { // done })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n         *  el.animateTo({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100, 'cubicOut', function () { // done })\n         */\n         // TODO Return animation key\n        animateTo: function (target, time, delay, easing, callback, forceAnimate) {\n            // animateTo(target, time, easing, callback);\n            if (isString(delay)) {\n                callback = easing;\n                easing = delay;\n                delay = 0;\n            }\n            // animateTo(target, time, delay, callback);\n            else if (isFunction(easing)) {\n                callback = easing;\n                easing = 'linear';\n                delay = 0;\n            }\n            // animateTo(target, time, callback);\n            else if (isFunction(delay)) {\n                callback = delay;\n                delay = 0;\n            }\n            // animateTo(target, callback)\n            else if (isFunction(time)) {\n                callback = time;\n                time = 500;\n            }\n            // animateTo(target)\n            else if (!time) {\n                time = 500;\n            }\n            // Stop all previous animations\n            this.stopAnimation();\n            this._animateToShallow('', this, target, time, delay, easing, callback);\n\n            // Animators may be removed immediately after start\n            // if there is nothing to animate\n            var animators = this.animators.slice();\n            var count = animators.length;\n            function done() {\n                count--;\n                if (!count) {\n                    callback && callback();\n                }\n            }\n\n            // No animators. This should be checked before animators[i].start(),\n            // because 'done' may be executed immediately if no need to animate.\n            if (!count) {\n                callback && callback();\n            }\n            // Start after all animators created\n            // Incase any animator is done immediately when all animation properties are not changed\n            for (var i = 0; i < animators.length; i++) {\n                animators[i]\n                    .done(done)\n                    .start(easing, forceAnimate);\n            }\n        },\n\n        /**\n         * @private\n         * @param {string} path=''\n         * @param {Object} source=this\n         * @param {Object} target\n         * @param {number} [time=500]\n         * @param {number} [delay=0]\n         *\n         * @example\n         *  // Animate position\n         *  el._animateToShallow({\n         *      position: [10, 10]\n         *  })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms\n         *  el._animateToShallow({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100)\n         */\n        _animateToShallow: function (path, source, target, time, delay) {\n            var objShallow = {};\n            var propertyCount = 0;\n            for (var name in target) {\n                if (!target.hasOwnProperty(name)) {\n                    continue;\n                }\n\n                if (source[name] != null) {\n                    if (isObject(target[name]) && !util.isArrayLike(target[name])) {\n                        this._animateToShallow(\n                            path ? path + '.' + name : name,\n                            source[name],\n                            target[name],\n                            time,\n                            delay\n                        );\n                    }\n                    else {\n                        objShallow[name] = target[name];\n                        propertyCount++;\n                    }\n                }\n                else if (target[name] != null) {\n                    // Attr directly if not has property\n                    // FIXME, if some property not needed for element ?\n                    if (!path) {\n                        this.attr(name, target[name]);\n                    }\n                    else {  // Shape or style\n                        var props = {};\n                        props[path] = {};\n                        props[path][name] = target[name];\n                        this.attr(props);\n                    }\n                }\n            }\n\n            if (propertyCount > 0) {\n                this.animate(path, false)\n                    .when(time == null ? 500 : time, objShallow)\n                    .delay(delay || 0);\n            }\n\n            return this;\n        }\n    };\n\n    module.exports = Animatable;\n\n\n/***/ }),\n\n/***/ 1084:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\n\n\n    var easingFuncs = __webpack_require__(1085);\n\n    function Clip(options) {\n\n        this._target = options.target;\n\n        // 生命周期\n        this._life = options.life || 1000;\n        // 延时\n        this._delay = options.delay || 0;\n        // 开始时间\n        // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n        this._initialized = false;\n\n        // 是否循环\n        this.loop = options.loop == null ? false : options.loop;\n\n        this.gap = options.gap || 0;\n\n        this.easing = options.easing || 'Linear';\n\n        this.onframe = options.onframe;\n        this.ondestroy = options.ondestroy;\n        this.onrestart = options.onrestart;\n\n        this._pausedTime = 0;\n        this._paused = false;\n    }\n\n    Clip.prototype = {\n\n        constructor: Clip,\n\n        step: function (globalTime, deltaTime) {\n            // Set startTime on first step, or _startTime may has milleseconds different between clips\n            // PENDING\n            if (!this._initialized) {\n                this._startTime = globalTime + this._delay;\n                this._initialized = true;\n            }\n\n            if (this._paused) {\n                this._pausedTime += deltaTime;\n                return;\n            }\n\n            var percent = (globalTime - this._startTime - this._pausedTime) / this._life;\n\n            // 还没开始\n            if (percent < 0) {\n                return;\n            }\n\n            percent = Math.min(percent, 1);\n\n            var easing = this.easing;\n            var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n            var schedule = typeof easingFunc === 'function'\n                ? easingFunc(percent)\n                : percent;\n\n            this.fire('frame', schedule);\n\n            // 结束\n            if (percent == 1) {\n                if (this.loop) {\n                    this.restart (globalTime);\n                    // 重新开始周期\n                    // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n                    return 'restart';\n                }\n\n                // 动画完成将这个控制器标识为待删除\n                // 在Animation.update中进行批量删除\n                this._needsRemove = true;\n                return 'destroy';\n            }\n\n            return null;\n        },\n\n        restart: function (globalTime) {\n            var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n            this._startTime = globalTime - remainder + this.gap;\n            this._pausedTime = 0;\n\n            this._needsRemove = false;\n        },\n\n        fire: function (eventType, arg) {\n            eventType = 'on' + eventType;\n            if (this[eventType]) {\n                this[eventType](this._target, arg);\n            }\n        },\n\n        pause: function () {\n            this._paused = true;\n        },\n\n        resume: function () {\n            this._paused = false;\n        }\n    };\n\n    module.exports = Clip;\n\n\n\n/***/ }),\n\n/***/ 1085:\n/***/ (function(module, exports) {\n\n/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\n\n    var easing = {\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        linear: function (k) {\n            return k;\n        },\n\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticIn: function (k) {\n            return k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticOut: function (k) {\n            return k * (2 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k;\n            }\n            return -0.5 * (--k * (k - 2) - 1);\n        },\n\n        // 三次方的缓动（t^3）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicIn: function (k) {\n            return k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicOut: function (k) {\n            return --k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k + 2);\n        },\n\n        // 四次方的缓动（t^4）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticIn: function (k) {\n            return k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticOut: function (k) {\n            return 1 - (--k * k * k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k;\n            }\n            return -0.5 * ((k -= 2) * k * k * k - 2);\n        },\n\n        // 五次方的缓动（t^5）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticIn: function (k) {\n            return k * k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticOut: function (k) {\n            return --k * k * k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k * k * k + 2);\n        },\n\n        // 正弦曲线的缓动（sin(t)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalIn: function (k) {\n            return 1 - Math.cos(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalOut: function (k) {\n            return Math.sin(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalInOut: function (k) {\n            return 0.5 * (1 - Math.cos(Math.PI * k));\n        },\n\n        // 指数曲线的缓动（2^t）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialIn: function (k) {\n            return k === 0 ? 0 : Math.pow(1024, k - 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialOut: function (k) {\n            return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialInOut: function (k) {\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if ((k *= 2) < 1) {\n                return 0.5 * Math.pow(1024, k - 1);\n            }\n            return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n        },\n\n        // 圆形曲线的缓动（sqrt(1-t^2)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularIn: function (k) {\n            return 1 - Math.sqrt(1 - k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularOut: function (k) {\n            return Math.sqrt(1 - (--k * k));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return -0.5 * (Math.sqrt(1 - k * k) - 1);\n            }\n            return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n        },\n\n        // 创建类似于弹簧在停止前来回振荡的动画\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticIn: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return -(a * Math.pow(2, 10 * (k -= 1)) *\n                        Math.sin((k - s) * (2 * Math.PI) / p));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return (a * Math.pow(2, -10 * k) *\n                    Math.sin((k - s) * (2 * Math.PI) / p) + 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticInOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            if ((k *= 2) < 1) {\n                return -0.5 * (a * Math.pow(2, 10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p));\n            }\n            return a * Math.pow(2, -10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\n        },\n\n        // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backIn: function (k) {\n            var s = 1.70158;\n            return k * k * ((s + 1) * k - s);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backOut: function (k) {\n            var s = 1.70158;\n            return --k * k * ((s + 1) * k + s) + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backInOut: function (k) {\n            var s = 1.70158 * 1.525;\n            if ((k *= 2) < 1) {\n                return 0.5 * (k * k * ((s + 1) * k - s));\n            }\n            return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n        },\n\n        // 创建弹跳效果\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceIn: function (k) {\n            return 1 - easing.bounceOut(1 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceOut: function (k) {\n            if (k < (1 / 2.75)) {\n                return 7.5625 * k * k;\n            }\n            else if (k < (2 / 2.75)) {\n                return 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\n            }\n            else if (k < (2.5 / 2.75)) {\n                return 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\n            }\n            else {\n                return 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\n            }\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceInOut: function (k) {\n            if (k < 0.5) {\n                return easing.bounceIn(k * 2) * 0.5;\n            }\n            return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n        }\n    };\n\n    module.exports = easing;\n\n\n\n\n/***/ }),\n\n/***/ 1086:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var CMD = __webpack_require__(998).CMD;\n    var line = __webpack_require__(1059);\n    var cubic = __webpack_require__(1087);\n    var quadratic = __webpack_require__(1060);\n    var arc = __webpack_require__(1088);\n    var normalizeRadian = __webpack_require__(1035).normalizeRadian;\n    var curve = __webpack_require__(990);\n\n    var windingLine = __webpack_require__(1061);\n\n    var containStroke = line.containStroke;\n\n    var PI2 = Math.PI * 2;\n\n    var EPSILON = 1e-4;\n\n    function isAroundEqual(a, b) {\n        return Math.abs(a - b) < EPSILON;\n    }\n\n    // 临时数组\n    var roots = [-1, -1, -1];\n    var extrema = [-1, -1];\n\n    function swapExtrema() {\n        var tmp = extrema[0];\n        extrema[0] = extrema[1];\n        extrema[1] = tmp;\n    }\n\n    function windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2 && y > y3)\n            || (y < y0 && y < y1 && y < y2 && y < y3)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var w = 0;\n            var nExtrema = -1;\n            var y0_, y1_;\n            for (var i = 0; i < nRoots; i++) {\n                var t = roots[i];\n\n                // Avoid winding error when intersection point is the connect point of two line of polygon\n                var unit = (t === 0 || t === 1) ? 0.5 : 1;\n\n                var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n                if (x_ < x) { // Quick reject\n                    continue;\n                }\n                if (nExtrema < 0) {\n                    nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n                    if (extrema[1] < extrema[0] && nExtrema > 1) {\n                        swapExtrema();\n                    }\n                    y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n                    if (nExtrema > 1) {\n                        y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n                    }\n                }\n                if (nExtrema == 2) {\n                    // 分成三段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else if (t < extrema[1]) {\n                        w += y1_ < y0_ ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y1_ ? unit : -unit;\n                    }\n                }\n                else {\n                    // 分成两段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y0_ ? unit : -unit;\n                    }\n                }\n            }\n            return w;\n        }\n    }\n\n    function windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2)\n            || (y < y0 && y < y1 && y < y2)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var t = curve.quadraticExtremum(y0, y1, y2);\n            if (t >= 0 && t <= 1) {\n                var w = 0;\n                var y_ = curve.quadraticAt(y0, y1, y2, t);\n                for (var i = 0; i < nRoots; i++) {\n                    // Remove one endpoint.\n                    var unit = (roots[i] === 0 || roots[i] === 1) ? 0.5 : 1;\n\n                    var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n                    if (x_ < x) {   // Quick reject\n                        continue;\n                    }\n                    if (roots[i] < t) {\n                        w += y_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y2 < y_ ? unit : -unit;\n                    }\n                }\n                return w;\n            }\n            else {\n                // Remove one endpoint.\n                var unit = (roots[0] === 0 || roots[0] === 1) ? 0.5 : 1;\n\n                var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n                if (x_ < x) {   // Quick reject\n                    return 0;\n                }\n                return y2 < y0 ? unit : -unit;\n            }\n        }\n    }\n\n    // TODO\n    // Arc 旋转\n    function windingArc(\n        cx, cy, r, startAngle, endAngle, anticlockwise, x, y\n    ) {\n        y -= cy;\n        if (y > r || y < -r) {\n            return 0;\n        }\n        var tmp = Math.sqrt(r * r - y * y);\n        roots[0] = -tmp;\n        roots[1] = tmp;\n\n        var diff = Math.abs(startAngle - endAngle);\n        if (diff < 1e-4) {\n            return 0;\n        }\n        if (diff % PI2 < 1e-4) {\n            // Is a circle\n            startAngle = 0;\n            endAngle = PI2;\n            var dir = anticlockwise ? 1 : -1;\n            if (x >= roots[0] + cx && x <= roots[1] + cx) {\n                return dir;\n            } else {\n                return 0;\n            }\n        }\n\n        if (anticlockwise) {\n            var tmp = startAngle;\n            startAngle = normalizeRadian(endAngle);\n            endAngle = normalizeRadian(tmp);\n        }\n        else {\n            startAngle = normalizeRadian(startAngle);\n            endAngle = normalizeRadian(endAngle);\n        }\n        if (startAngle > endAngle) {\n            endAngle += PI2;\n        }\n\n        var w = 0;\n        for (var i = 0; i < 2; i++) {\n            var x_ = roots[i];\n            if (x_ + cx > x) {\n                var angle = Math.atan2(y, x_);\n                var dir = anticlockwise ? 1 : -1;\n                if (angle < 0) {\n                    angle = PI2 + angle;\n                }\n                if (\n                    (angle >= startAngle && angle <= endAngle)\n                    || (angle + PI2 >= startAngle && angle + PI2 <= endAngle)\n                ) {\n                    if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n                        dir = -dir;\n                    }\n                    w += dir;\n                }\n            }\n        }\n        return w;\n    }\n\n    function containPath(data, lineWidth, isStroke, x, y) {\n        var w = 0;\n        var xi = 0;\n        var yi = 0;\n        var x0 = 0;\n        var y0 = 0;\n\n        for (var i = 0; i < data.length;) {\n            var cmd = data[i++];\n            // Begin a new subpath\n            if (cmd === CMD.M && i > 1) {\n                // Close previous subpath\n                if (!isStroke) {\n                    w += windingLine(xi, yi, x0, y0, x, y);\n                }\n                // 如果被任何一个 subpath 包含\n                // if (w !== 0) {\n                //     return true;\n                // }\n            }\n\n            if (i == 1) {\n                // 如果第一个命令是 L, C, Q\n                // 则 previous point 同绘制命令的第一个 point\n                //\n                // 第一个命令为 Arc 的情况下会在后面特殊处理\n                xi = data[i];\n                yi = data[i + 1];\n\n                x0 = xi;\n                y0 = yi;\n            }\n\n            switch (cmd) {\n                case CMD.M:\n                    // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                    // 在 closePath 的时候使用\n                    x0 = data[i++];\n                    y0 = data[i++];\n                    xi = x0;\n                    yi = y0;\n                    break;\n                case CMD.L:\n                    if (isStroke) {\n                        if (containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n                        w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.C:\n                    if (isStroke) {\n                        if (cubic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingCubic(\n                            xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.Q:\n                    if (isStroke) {\n                        if (quadratic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingQuadratic(\n                            xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.A:\n                    // TODO Arc 判断的开销比较大\n                    var cx = data[i++];\n                    var cy = data[i++];\n                    var rx = data[i++];\n                    var ry = data[i++];\n                    var theta = data[i++];\n                    var dTheta = data[i++];\n                    // TODO Arc 旋转\n                    var psi = data[i++];\n                    var anticlockwise = 1 - data[i++];\n                    var x1 = Math.cos(theta) * rx + cx;\n                    var y1 = Math.sin(theta) * ry + cy;\n                    // 不是直接使用 arc 命令\n                    if (i > 1) {\n                        w += windingLine(xi, yi, x1, y1, x, y);\n                    }\n                    else {\n                        // 第一个命令起点还未定义\n                        x0 = x1;\n                        y0 = y1;\n                    }\n                    // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n                    var _x = (x - cx) * ry / rx + cx;\n                    if (isStroke) {\n                        if (arc.containStroke(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            lineWidth, _x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingArc(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            _x, y\n                        );\n                    }\n                    xi = Math.cos(theta + dTheta) * rx + cx;\n                    yi = Math.sin(theta + dTheta) * ry + cy;\n                    break;\n                case CMD.R:\n                    x0 = xi = data[i++];\n                    y0 = yi = data[i++];\n                    var width = data[i++];\n                    var height = data[i++];\n                    var x1 = x0 + width;\n                    var y1 = y0 + height;\n                    if (isStroke) {\n                        if (containStroke(x0, y0, x1, y0, lineWidth, x, y)\n                          || containStroke(x1, y0, x1, y1, lineWidth, x, y)\n                          || containStroke(x1, y1, x0, y1, lineWidth, x, y)\n                          || containStroke(x0, y1, x0, y0, lineWidth, x, y)\n                        ) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // FIXME Clockwise ?\n                        w += windingLine(x1, y0, x1, y1, x, y);\n                        w += windingLine(x0, y1, x0, y0, x, y);\n                    }\n                    break;\n                case CMD.Z:\n                    if (isStroke) {\n                        if (containStroke(\n                            xi, yi, x0, y0, lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // Close a subpath\n                        w += windingLine(xi, yi, x0, y0, x, y);\n                        // 如果被任何一个 subpath 包含\n                        // FIXME subpaths may overlap\n                        // if (w !== 0) {\n                        //     return true;\n                        // }\n                    }\n                    xi = x0;\n                    yi = y0;\n                    break;\n            }\n        }\n        if (!isStroke && !isAroundEqual(yi, y0)) {\n            w += windingLine(xi, yi, x0, y0, x, y) || 0;\n        }\n        return w !== 0;\n    }\n\n    module.exports = {\n        contain: function (pathData, x, y) {\n            return containPath(pathData, 0, false, x, y);\n        },\n\n        containStroke: function (pathData, lineWidth, x, y) {\n            return containPath(pathData, lineWidth, true, x, y);\n        }\n    };\n\n\n/***/ }),\n\n/***/ 1087:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var curve = __webpack_require__(990);\n\n    module.exports = {\n        /**\n         * 三次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  x3\n         * @param  {number}  y3\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.cubicProjectPoint(\n                x0, y0, x1, y1, x2, y2, x3, y3,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n/***/ }),\n\n/***/ 1088:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var normalizeRadian = __webpack_require__(1035).normalizeRadian;\n    var PI2 = Math.PI * 2;\n\n    module.exports = {\n        /**\n         * 圆弧描边包含判断\n         * @param  {number}  cx\n         * @param  {number}  cy\n         * @param  {number}  r\n         * @param  {number}  startAngle\n         * @param  {number}  endAngle\n         * @param  {boolean}  anticlockwise\n         * @param  {number} lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {Boolean}\n         */\n        containStroke: function (\n            cx, cy, r, startAngle, endAngle, anticlockwise,\n            lineWidth, x, y\n        ) {\n\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n\n            x -= cx;\n            y -= cy;\n            var d = Math.sqrt(x * x + y * y);\n\n            if ((d - _l > r) || (d + _l < r)) {\n                return false;\n            }\n            if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n                // Is a circle\n                return true;\n            }\n            if (anticlockwise) {\n                var tmp = startAngle;\n                startAngle = normalizeRadian(endAngle);\n                endAngle = normalizeRadian(tmp);\n            } else {\n                startAngle = normalizeRadian(startAngle);\n                endAngle = normalizeRadian(endAngle);\n            }\n            if (startAngle > endAngle) {\n                endAngle += PI2;\n            }\n\n            var angle = Math.atan2(y, x);\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return (angle >= startAngle && angle <= endAngle)\n                || (angle + PI2 >= startAngle && angle + PI2 <= endAngle);\n        }\n    };\n\n\n/***/ }),\n\n/***/ 1089:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var CMD = __webpack_require__(998).CMD;\n    var vec2 = __webpack_require__(975);\n    var v2ApplyTransform = vec2.applyTransform;\n\n    var points = [[], [], []];\n    var mathSqrt = Math.sqrt;\n    var mathAtan2 = Math.atan2;\n    function transformPath(path, m) {\n        var data = path.data;\n        var cmd;\n        var nPoint;\n        var i;\n        var j;\n        var k;\n        var p;\n\n        var M = CMD.M;\n        var C = CMD.C;\n        var L = CMD.L;\n        var R = CMD.R;\n        var A = CMD.A;\n        var Q = CMD.Q;\n\n        for (i = 0, j = 0; i < data.length;) {\n            cmd = data[i++];\n            j = i;\n            nPoint = 0;\n\n            switch (cmd) {\n                case M:\n                    nPoint = 1;\n                    break;\n                case L:\n                    nPoint = 1;\n                    break;\n                case C:\n                    nPoint = 3;\n                    break;\n                case Q:\n                    nPoint = 2;\n                    break;\n                case A:\n                    var x = m[4];\n                    var y = m[5];\n                    var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n                    var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n                    var angle = mathAtan2(-m[1] / sy, m[0] / sx);\n                    // cx\n                    data[i] *= sx;\n                    data[i++] += x;\n                    // cy\n                    data[i] *= sy;\n                    data[i++] += y;\n                    // Scale rx and ry\n                    // FIXME Assume psi is 0 here\n                    data[i++] *= sx;\n                    data[i++] *= sy;\n\n                    // Start angle\n                    data[i++] += angle;\n                    // end angle\n                    data[i++] += angle;\n                    // FIXME psi\n                    i += 2;\n                    j = i;\n                    break;\n                case R:\n                    // x0, y0\n                    p[0] = data[i++];\n                    p[1] = data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n                    // x1, y1\n                    p[0] += data[i++];\n                    p[1] += data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n            }\n\n            for (k = 0; k < nPoint; k++) {\n                var p = points[k];\n                p[0] = data[i++];\n                p[1] = data[i++];\n\n                v2ApplyTransform(p, p, m);\n                // Write back\n                data[j++] = p[0];\n                data[j++] = p[1];\n            }\n        }\n    }\n\n    module.exports = transformPath;\n\n\n/***/ }),\n\n/***/ 1090:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\n\n\n\n    module.exports = __webpack_require__(979).extend({\n\n        type: 'circle',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0\n        },\n\n\n        buildPath : function (ctx, shape, inBundle) {\n            // Better stroking in ShapeBundle\n            // Always do it may have performence issue ( fill may be 2x more cost)\n            if (inBundle) {\n                ctx.moveTo(shape.cx + shape.r, shape.cy);\n            }\n            // else {\n            //     if (ctx.allocate && !ctx.data.length) {\n            //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n            //     }\n            // }\n            // Better stroking in ShapeBundle\n            // ctx.moveTo(shape.cx + shape.r, shape.cy);\n            ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n        }\n    });\n\n\n\n/***/ }),\n\n/***/ 1091:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\n\n\n\n    var Path = __webpack_require__(979);\n    var fixClipWithShadow = __webpack_require__(1048);\n\n    module.exports = Path.extend({\n\n        type: 'sector',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r0: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        brush: fixClipWithShadow(Path.prototype.brush),\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r0 = Math.max(shape.r0 || 0, 0);\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n\n            ctx.lineTo(unitX * r + x, unitY * r + y);\n\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n\n            ctx.lineTo(\n                Math.cos(endAngle) * r0 + x,\n                Math.sin(endAngle) * r0 + y\n            );\n\n            if (r0 !== 0) {\n                ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n            }\n\n            ctx.closePath();\n        }\n    });\n\n\n\n/***/ }),\n\n/***/ 1092:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\n\n\n    module.exports = __webpack_require__(979).extend({\n\n        type: 'ring',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0,\n            r0: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.cx;\n            var y = shape.cy;\n            var PI2 = Math.PI * 2;\n            ctx.moveTo(x + shape.r, y);\n            ctx.arc(x, y, shape.r, 0, PI2, false);\n            ctx.moveTo(x + shape.r0, y);\n            ctx.arc(x, y, shape.r0, 0, PI2, true);\n        }\n    });\n\n\n\n/***/ }),\n\n/***/ 1093:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 多边形\n * @module zrender/shape/Polygon\n */\n\n\n    var polyHelper = __webpack_require__(1037);\n\n    module.exports = __webpack_require__(979).extend({\n        \n        type: 'polygon',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, true);\n        }\n    });\n\n\n/***/ }),\n\n/***/ 1094:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n    var vec2 = __webpack_require__(975);\n\n    /**\n     * @inner\n     */\n    function interpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    /**\n     * @alias module:zrender/shape/util/smoothSpline\n     * @param {Array} points 线段顶点数组\n     * @param {boolean} isLoop\n     * @return {Array}\n     */\n    module.exports = function (points, isLoop) {\n        var len = points.length;\n        var ret = [];\n\n        var distance = 0;\n        for (var i = 1; i < len; i++) {\n            distance += vec2.distance(points[i - 1], points[i]);\n        }\n\n        var segs = distance / 2;\n        segs = segs < len ? len : segs;\n        for (var i = 0; i < segs; i++) {\n            var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n            var idx = Math.floor(pos);\n\n            var w = pos - idx;\n\n            var p0;\n            var p1 = points[idx % len];\n            var p2;\n            var p3;\n            if (!isLoop) {\n                p0 = points[idx === 0 ? idx : idx - 1];\n                p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n                p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n            }\n            else {\n                p0 = points[(idx - 1 + len) % len];\n                p2 = points[(idx + 1) % len];\n                p3 = points[(idx + 2) % len];\n            }\n\n            var w2 = w * w;\n            var w3 = w * w2;\n\n            ret.push([\n                interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3),\n                interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)\n            ]);\n        }\n        return ret;\n    };\n\n\n\n/***/ }),\n\n/***/ 1095:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n\n    var vec2 = __webpack_require__(975);\n    var v2Min = vec2.min;\n    var v2Max = vec2.max;\n    var v2Scale = vec2.scale;\n    var v2Distance = vec2.distance;\n    var v2Add = vec2.add;\n\n    /**\n     * 贝塞尔平滑曲线\n     * @alias module:zrender/shape/util/smoothBezier\n     * @param {Array} points 线段顶点数组\n     * @param {number} smooth 平滑等级, 0-1\n     * @param {boolean} isLoop\n     * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n     *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n     *                           整个折线的包围盒做一个并集用来约束控制点。\n     * @param {Array} 计算出来的控制点数组\n     */\n    module.exports = function (points, smooth, isLoop, constraint) {\n        var cps = [];\n\n        var v = [];\n        var v1 = [];\n        var v2 = [];\n        var prevPoint;\n        var nextPoint;\n\n        var min, max;\n        if (constraint) {\n            min = [Infinity, Infinity];\n            max = [-Infinity, -Infinity];\n            for (var i = 0, len = points.length; i < len; i++) {\n                v2Min(min, min, points[i]);\n                v2Max(max, max, points[i]);\n            }\n            // 与指定的包围盒做并集\n            v2Min(min, min, constraint[0]);\n            v2Max(max, max, constraint[1]);\n        }\n\n        for (var i = 0, len = points.length; i < len; i++) {\n            var point = points[i];\n\n            if (isLoop) {\n                prevPoint = points[i ? i - 1 : len - 1];\n                nextPoint = points[(i + 1) % len];\n            }\n            else {\n                if (i === 0 || i === len - 1) {\n                    cps.push(vec2.clone(points[i]));\n                    continue;\n                }\n                else {\n                    prevPoint = points[i - 1];\n                    nextPoint = points[i + 1];\n                }\n            }\n\n            vec2.sub(v, nextPoint, prevPoint);\n\n            // use degree to scale the handle length\n            v2Scale(v, v, smooth);\n\n            var d0 = v2Distance(point, prevPoint);\n            var d1 = v2Distance(point, nextPoint);\n            var sum = d0 + d1;\n            if (sum !== 0) {\n                d0 /= sum;\n                d1 /= sum;\n            }\n\n            v2Scale(v1, v, -d0);\n            v2Scale(v2, v, d1);\n            var cp0 = v2Add([], point, v1);\n            var cp1 = v2Add([], point, v2);\n            if (constraint) {\n                v2Max(cp0, cp0, min);\n                v2Min(cp0, cp0, max);\n                v2Max(cp1, cp1, min);\n                v2Min(cp1, cp1, max);\n            }\n            cps.push(cp0);\n            cps.push(cp1);\n        }\n\n        if (isLoop) {\n            cps.push(cps.shift());\n        }\n\n        return cps;\n    };\n\n\n\n/***/ }),\n\n/***/ 1096:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module zrender/graphic/shape/Polyline\n */\n\n\n    var polyHelper = __webpack_require__(1037);\n\n    module.exports = __webpack_require__(979).extend({\n        \n        type: 'polyline',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        style: {\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, false);\n        }\n    });\n\n\n/***/ }),\n\n/***/ 1097:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\n\n\n    var roundRectHelper = __webpack_require__(1034);\n\n    module.exports = __webpack_require__(979).extend({\n\n        type: 'rect',\n\n        shape: {\n            // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n            // r缩写为1         相当于 [1, 1, 1, 1]\n            // r缩写为[1]       相当于 [1, 1, 1, 1]\n            // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n            // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n            r: 0,\n\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            if (!shape.r) {\n                ctx.rect(x, y, width, height);\n            }\n            else {\n                roundRectHelper.buildPath(ctx, shape);\n            }\n            ctx.closePath();\n            return;\n        }\n    });\n\n\n\n/***/ }),\n\n/***/ 1098:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\n\n    module.exports = __webpack_require__(979).extend({\n\n        type: 'line',\n\n        shape: {\n            // Start point\n            x1: 0,\n            y1: 0,\n            // End point\n            x2: 0,\n            y2: 0,\n\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var percent = shape.percent;\n\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (percent < 1) {\n                x2 = x1 * (1 - percent) + x2 * percent;\n                y2 = y1 * (1 - percent) + y2 * percent;\n            }\n            ctx.lineTo(x2, y2);\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} percent\n         * @return {Array.<number>}\n         */\n        pointAt: function (p) {\n            var shape = this.shape;\n            return [\n                shape.x1 * (1 - p) + shape.x2 * p,\n                shape.y1 * (1 - p) + shape.y2 * p\n            ];\n        }\n    });\n\n\n\n/***/ }),\n\n/***/ 1099:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\n\n\n    var curveTool = __webpack_require__(990);\n    var vec2 = __webpack_require__(975);\n    var quadraticSubdivide = curveTool.quadraticSubdivide;\n    var cubicSubdivide = curveTool.cubicSubdivide;\n    var quadraticAt = curveTool.quadraticAt;\n    var cubicAt = curveTool.cubicAt;\n    var quadraticDerivativeAt = curveTool.quadraticDerivativeAt;\n    var cubicDerivativeAt = curveTool.cubicDerivativeAt;\n\n    var out = [];\n\n    function someVectorAt(shape, t, isTangent) {\n        var cpx2 = shape.cpx2;\n        var cpy2 = shape.cpy2;\n        if (cpx2 === null || cpy2 === null) {\n            return [\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t),\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)\n            ];\n        }\n        else {\n            return [\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t),\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)\n            ];\n        }\n    }\n    module.exports = __webpack_require__(979).extend({\n\n        type: 'bezier-curve',\n\n        shape: {\n            x1: 0,\n            y1: 0,\n            x2: 0,\n            y2: 0,\n            cpx1: 0,\n            cpy1: 0,\n            // cpx2: 0,\n            // cpy2: 0\n\n            // Curve show percent, for animating\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var cpx1 = shape.cpx1;\n            var cpy1 = shape.cpy1;\n            var cpx2 = shape.cpx2;\n            var cpy2 = shape.cpy2;\n            var percent = shape.percent;\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (cpx2 == null || cpy2 == null) {\n                if (percent < 1) {\n                    quadraticSubdivide(\n                        x1, cpx1, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    x2 = out[2];\n                    quadraticSubdivide(\n                        y1, cpy1, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    y2 = out[2];\n                }\n\n                ctx.quadraticCurveTo(\n                    cpx1, cpy1,\n                    x2, y2\n                );\n            }\n            else {\n                if (percent < 1) {\n                    cubicSubdivide(\n                        x1, cpx1, cpx2, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    cpx2 = out[2];\n                    x2 = out[3];\n                    cubicSubdivide(\n                        y1, cpy1, cpy2, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    cpy2 = out[2];\n                    y2 = out[3];\n                }\n                ctx.bezierCurveTo(\n                    cpx1, cpy1,\n                    cpx2, cpy2,\n                    x2, y2\n                );\n            }\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        pointAt: function (t) {\n            return someVectorAt(this.shape, t, false);\n        },\n\n        /**\n         * Get tangent at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        tangentAt: function (t) {\n            var p = someVectorAt(this.shape, t, true);\n            return vec2.normalize(p, p);\n        }\n    });\n\n\n\n/***/ }),\n\n/***/ 1100:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\n \n\n    module.exports = __webpack_require__(979).extend({\n\n        type: 'arc',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        style: {\n\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r + x, unitY * r + y);\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n        }\n    });\n\n\n/***/ }),\n\n/***/ 1101:\n/***/ (function(module, exports, __webpack_require__) {\n\n// CompoundPath to improve performance\n\n\n    var Path = __webpack_require__(979);\n\n    module.exports = Path.extend({\n\n        type: 'compound',\n\n        shape: {\n\n            paths: null\n        },\n\n        _updatePathDirty: function () {\n            var dirtyPath = this.__dirtyPath;\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                // Mark as dirty if any subpath is dirty\n                dirtyPath = dirtyPath || paths[i].__dirtyPath;\n            }\n            this.__dirtyPath = dirtyPath;\n            this.__dirty = this.__dirty || dirtyPath;\n        },\n\n        beforeBrush: function () {\n            this._updatePathDirty();\n            var paths = this.shape.paths || [];\n            var scale = this.getGlobalScale();\n            // Update path scale\n            for (var i = 0; i < paths.length; i++) {\n                if (!paths[i].path) {\n                    paths[i].createPathProxy();\n                }\n                paths[i].path.setScale(scale[0], scale[1]);\n            }\n        },\n\n        buildPath: function (ctx, shape) {\n            var paths = shape.paths || [];\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].buildPath(ctx, paths[i].shape, true);\n            }\n        },\n\n        afterBrush: function () {\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].__dirtyPath = false;\n            }\n        },\n\n        getBoundingRect: function () {\n            this._updatePathDirty();\n            return Path.prototype.getBoundingRect.call(this);\n        }\n    });\n\n\n/***/ }),\n\n/***/ 1102:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(970);\n\n    var Gradient = __webpack_require__(1009);\n\n    /**\n     * x, y, r are all percent from 0 to 1\n     * @param {number} [x=0.5]\n     * @param {number} [y=0.5]\n     * @param {number} [r=0.5]\n     * @param {Array.<Object>} [colorStops]\n     * @param {boolean} [globalCoord=false]\n     */\n    var RadialGradient = function (x, y, r, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'radial', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0.5 : x;\n\n        this.y = y == null ? 0.5 : y;\n\n        this.r = r == null ? 0.5 : r;\n\n        // Can be cloned\n        this.type = 'radial';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    RadialGradient.prototype = {\n\n        constructor: RadialGradient\n    };\n\n    zrUtil.inherits(RadialGradient, Gradient);\n\n    module.exports = RadialGradient;\n\n\n/***/ }),\n\n/***/ 1103:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var getItemStyle = __webpack_require__(1005)(\n        [\n            ['fill', 'color'],\n            ['stroke', 'borderColor'],\n            ['lineWidth', 'borderWidth'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor'],\n            ['textPosition'],\n            ['textAlign']\n        ]\n    );\n    module.exports = {\n        getItemStyle: function (excludes, includes) {\n            var style = getItemStyle.call(this, excludes, includes);\n            var lineDash = this.getBorderLineDash();\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getBorderLineDash: function () {\n            var lineType = this.get('borderType');\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [5, 5] : [1, 1]);\n        }\n    };\n\n\n/***/ }),\n\n/***/ 1104:\n/***/ (function(module, exports) {\n\n\n\n    module.exports = {\n        getBoxLayoutParams: function () {\n            return {\n                left: this.get('left'),\n                top: this.get('top'),\n                right: this.get('right'),\n                bottom: this.get('bottom'),\n                width: this.get('width'),\n                height: this.get('height')\n            };\n        }\n    };\n\n\n/***/ }),\n\n/***/ 1105:\n/***/ (function(module, exports) {\n\n\n    var platform = '';\n    // Navigator not exists in node\n    if (typeof navigator !== 'undefined') {\n        platform = navigator.platform || '';\n    }\n    module.exports = {\n        // 全图默认背景\n        // backgroundColor: 'rgba(0,0,0,0)',\n\n        // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n        // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n        // 浅色\n        // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n        // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n        // 深色\n        color: ['#c23531','#2f4554', '#61a0a8', '#d48265', '#91c7ae','#749f83',  '#ca8622', '#bda29a','#6e7074', '#546570', '#c4ccd3'],\n\n        // 默认需要 Grid 配置项\n        // grid: {},\n        // 主题，主题\n        textStyle: {\n            // color: '#000',\n            // decoration: 'none',\n            // PENDING\n            fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n            // fontFamily: 'Arial, Verdana, sans-serif',\n            fontSize: 12,\n            fontStyle: 'normal',\n            fontWeight: 'normal'\n        },\n\n        // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n        // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n        // Default is source-over\n        blendMode: null,\n\n        animation: 'auto',\n        animationDuration: 1000,\n        animationDurationUpdate: 300,\n        animationEasing: 'exponentialOut',\n        animationEasingUpdate: 'cubicOut',\n\n        animationThreshold: 2000,\n        // Configuration for progressive/incremental rendering\n        progressiveThreshold: 3000,\n        progressive: 400,\n\n        // Threshold of if use single hover layer to optimize.\n        // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n        // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n        // which is unexpected.\n        // see example <echarts/test/heatmap-large.html>.\n        hoverLayerThreshold: 3000,\n\n        // See: module:echarts/scale/Time\n        useUTC: false\n    };\n\n\n/***/ }),\n\n/***/ 1106:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(970);\n\n    var echartsAPIList = [\n        'getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed',\n        'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption',\n        'getViewOfComponentModel', 'getViewOfSeriesModel'\n    ];\n    // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\n\n    function ExtensionAPI(chartInstance) {\n        zrUtil.each(echartsAPIList, function (name) {\n            this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n        }, this);\n    }\n\n    module.exports = ExtensionAPI;\n\n\n/***/ }),\n\n/***/ 1107:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\n\n\n\n    var zrUtil = __webpack_require__(970);\n    var modelUtil = __webpack_require__(974);\n    var ComponentModel = __webpack_require__(982);\n    var each = zrUtil.each;\n    var clone = zrUtil.clone;\n    var map = zrUtil.map;\n    var merge = zrUtil.merge;\n\n    var QUERY_REG = /^(min|max)?(.+)$/;\n\n    /**\n     * TERM EXPLANATIONS:\n     *\n     * [option]:\n     *\n     *     An object that contains definitions of components. For example:\n     *     var option = {\n     *         title: {...},\n     *         legend: {...},\n     *         visualMap: {...},\n     *         series: [\n     *             {data: [...]},\n     *             {data: [...]},\n     *             ...\n     *         ]\n     *     };\n     *\n     * [rawOption]:\n     *\n     *     An object input to echarts.setOption. 'rawOption' may be an\n     *     'option', or may be an object contains multi-options. For example:\n     *     var option = {\n     *         baseOption: {\n     *             title: {...},\n     *             legend: {...},\n     *             series: [\n     *                 {data: [...]},\n     *                 {data: [...]},\n     *                 ...\n     *             ]\n     *         },\n     *         timeline: {...},\n     *         options: [\n     *             {title: {...}, series: {data: [...]}},\n     *             {title: {...}, series: {data: [...]}},\n     *             ...\n     *         ],\n     *         media: [\n     *             {\n     *                 query: {maxWidth: 320},\n     *                 option: {series: {x: 20}, visualMap: {show: false}}\n     *             },\n     *             {\n     *                 query: {minWidth: 320, maxWidth: 720},\n     *                 option: {series: {x: 500}, visualMap: {show: true}}\n     *             },\n     *             {\n     *                 option: {series: {x: 1200}, visualMap: {show: true}}\n     *             }\n     *         ]\n     *     };\n     *\n     * @alias module:echarts/model/OptionManager\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    function OptionManager(api) {\n\n        /**\n         * @private\n         * @type {module:echarts/ExtensionAPI}\n         */\n        this._api = api;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._timelineOptions = [];\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._mediaList = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._mediaDefault;\n\n        /**\n         * -1, means default.\n         * empty means no media.\n         * @private\n         * @type {Array.<number>}\n         */\n        this._currentMediaIndices = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._optionBackup;\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._newBaseOption;\n    }\n\n    // timeline.notMerge is not supported in ec3. Firstly there is rearly\n    // case that notMerge is needed. Secondly supporting 'notMerge' requires\n    // rawOption cloned and backuped when timeline changed, which does no\n    // good to performance. What's more, that both timeline and setOption\n    // method supply 'notMerge' brings complex and some problems.\n    // Consider this case:\n    // (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n    // (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n    OptionManager.prototype = {\n\n        constructor: OptionManager,\n\n        /**\n         * @public\n         * @param {Object} rawOption Raw option.\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Array.<Function>} optionPreprocessorFuncs\n         * @return {Object} Init option\n         */\n        setOption: function (rawOption, optionPreprocessorFuncs) {\n            rawOption = clone(rawOption, true);\n\n            // FIXME\n            // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n            var oldOptionBackup = this._optionBackup;\n            var newParsedOption = parseRawOption.call(\n                this, rawOption, optionPreprocessorFuncs, !oldOptionBackup\n            );\n            this._newBaseOption = newParsedOption.baseOption;\n\n            // For setOption at second time (using merge mode);\n            if (oldOptionBackup) {\n                // Only baseOption can be merged.\n                mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption);\n\n                // For simplicity, timeline options and media options do not support merge,\n                // that is, if you `setOption` twice and both has timeline options, the latter\n                // timeline opitons will not be merged to the formers, but just substitude them.\n                if (newParsedOption.timelineOptions.length) {\n                    oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n                }\n                if (newParsedOption.mediaList.length) {\n                    oldOptionBackup.mediaList = newParsedOption.mediaList;\n                }\n                if (newParsedOption.mediaDefault) {\n                    oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n                }\n            }\n            else {\n                this._optionBackup = newParsedOption;\n            }\n        },\n\n        /**\n         * @param {boolean} isRecreate\n         * @return {Object}\n         */\n        mountOption: function (isRecreate) {\n            var optionBackup = this._optionBackup;\n\n            // TODO\n            // 如果没有reset功能则不clone。\n\n            this._timelineOptions = map(optionBackup.timelineOptions, clone);\n            this._mediaList = map(optionBackup.mediaList, clone);\n            this._mediaDefault = clone(optionBackup.mediaDefault);\n            this._currentMediaIndices = [];\n\n            return clone(isRecreate\n                // this._optionBackup.baseOption, which is created at the first `setOption`\n                // called, and is merged into every new option by inner method `mergeOption`\n                // each time `setOption` called, can be only used in `isRecreate`, because\n                // its reliability is under suspicion. In other cases option merge is\n                // performed by `model.mergeOption`.\n                ? optionBackup.baseOption : this._newBaseOption\n            );\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Object}\n         */\n        getTimelineOption: function (ecModel) {\n            var option;\n            var timelineOptions = this._timelineOptions;\n\n            if (timelineOptions.length) {\n                // getTimelineOption can only be called after ecModel inited,\n                // so we can get currentIndex from timelineModel.\n                var timelineModel = ecModel.getComponent('timeline');\n                if (timelineModel) {\n                    option = clone(\n                        timelineOptions[timelineModel.getCurrentIndex()],\n                        true\n                    );\n                }\n            }\n\n            return option;\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Array.<Object>}\n         */\n        getMediaOption: function (ecModel) {\n            var ecWidth = this._api.getWidth();\n            var ecHeight = this._api.getHeight();\n            var mediaList = this._mediaList;\n            var mediaDefault = this._mediaDefault;\n            var indices = [];\n            var result = [];\n\n            // No media defined.\n            if (!mediaList.length && !mediaDefault) {\n                return result;\n            }\n\n            // Multi media may be applied, the latter defined media has higher priority.\n            for (var i = 0, len = mediaList.length; i < len; i++) {\n                if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n                    indices.push(i);\n                }\n            }\n\n            // FIXME\n            // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n            if (!indices.length && mediaDefault) {\n                indices = [-1];\n            }\n\n            if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n                result = map(indices, function (index) {\n                    return clone(\n                        index === -1 ? mediaDefault.option : mediaList[index].option\n                    );\n                });\n            }\n            // Otherwise return nothing.\n\n            this._currentMediaIndices = indices;\n\n            return result;\n        }\n    };\n\n    function parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n        var timelineOptions = [];\n        var mediaList = [];\n        var mediaDefault;\n        var baseOption;\n\n        // Compatible with ec2.\n        var timelineOpt = rawOption.timeline;\n\n        if (rawOption.baseOption) {\n            baseOption = rawOption.baseOption;\n        }\n\n        // For timeline\n        if (timelineOpt || rawOption.options) {\n            baseOption = baseOption || {};\n            timelineOptions = (rawOption.options || []).slice();\n        }\n\n        // For media query\n        if (rawOption.media) {\n            baseOption = baseOption || {};\n            var media = rawOption.media;\n            each(media, function (singleMedia) {\n                if (singleMedia && singleMedia.option) {\n                    if (singleMedia.query) {\n                        mediaList.push(singleMedia);\n                    }\n                    else if (!mediaDefault) {\n                        // Use the first media default.\n                        mediaDefault = singleMedia;\n                    }\n                }\n            });\n        }\n\n        // For normal option\n        if (!baseOption) {\n            baseOption = rawOption;\n        }\n\n        // Set timelineOpt to baseOption in ec3,\n        // which is convenient for merge option.\n        if (!baseOption.timeline) {\n            baseOption.timeline = timelineOpt;\n        }\n\n        // Preprocess.\n        each([baseOption].concat(timelineOptions)\n            .concat(zrUtil.map(mediaList, function (media) {\n                return media.option;\n            })),\n            function (option) {\n                each(optionPreprocessorFuncs, function (preProcess) {\n                    preProcess(option, isNew);\n                });\n            }\n        );\n\n        return {\n            baseOption: baseOption,\n            timelineOptions: timelineOptions,\n            mediaDefault: mediaDefault,\n            mediaList: mediaList\n        };\n    }\n\n    /**\n     * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n     * Support: width, height, aspectRatio\n     * Can use max or min as prefix.\n     */\n    function applyMediaQuery(query, ecWidth, ecHeight) {\n        var realMap = {\n            width: ecWidth,\n            height: ecHeight,\n            aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n        };\n\n        var applicatable = true;\n\n        zrUtil.each(query, function (value, attr) {\n            var matched = attr.match(QUERY_REG);\n\n            if (!matched || !matched[1] || !matched[2]) {\n                return;\n            }\n\n            var operator = matched[1];\n            var realAttr = matched[2].toLowerCase();\n\n            if (!compare(realMap[realAttr], value, operator)) {\n                applicatable = false;\n            }\n        });\n\n        return applicatable;\n    }\n\n    function compare(real, expect, operator) {\n        if (operator === 'min') {\n            return real >= expect;\n        }\n        else if (operator === 'max') {\n            return real <= expect;\n        }\n        else { // Equals\n            return real === expect;\n        }\n    }\n\n    function indicesEquals(indices1, indices2) {\n        // indices is always order by asc and has only finite number.\n        return indices1.join(',') === indices2.join(',');\n    }\n\n    /**\n     * Consider case:\n     * `chart.setOption(opt1);`\n     * Then user do some interaction like dataZoom, dataView changing.\n     * `chart.setOption(opt2);`\n     * Then user press 'reset button' in toolbox.\n     *\n     * After doing that all of the interaction effects should be reset, the\n     * chart should be the same as the result of invoke\n     * `chart.setOption(opt1); chart.setOption(opt2);`.\n     *\n     * Although it is not able ensure that\n     * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n     * `chart.setOption(merge(opt1, opt2));` exactly,\n     * this might be the only simple way to implement that feature.\n     *\n     * MEMO: We've considered some other approaches:\n     * 1. Each model handle its self restoration but not uniform treatment.\n     *     (Too complex in logic and error-prone)\n     * 2. Use a shadow ecModel. (Performace expensive)\n     */\n    function mergeOption(oldOption, newOption) {\n        newOption = newOption || {};\n\n        each(newOption, function (newCptOpt, mainType) {\n            if (newCptOpt == null) {\n                return;\n            }\n\n            var oldCptOpt = oldOption[mainType];\n\n            if (!ComponentModel.hasClass(mainType)) {\n                oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n            }\n            else {\n                newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n                oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n\n                var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n\n                oldOption[mainType] = map(mapResult, function (item) {\n                    return (item.option && item.exist)\n                        ? merge(item.exist, item.option, true)\n                        : (item.exist || item.option);\n                });\n            }\n        });\n    }\n\n    module.exports = OptionManager;\n\n\n/***/ }),\n\n/***/ 1108:\n/***/ (function(module, exports, __webpack_require__) {\n\n// Compatitable with 2.0\n\n\n    var zrUtil = __webpack_require__(970);\n    var compatStyle = __webpack_require__(1109);\n\n    function get(opt, path) {\n        path = path.split(',');\n        var obj = opt;\n        for (var i = 0; i < path.length; i++) {\n            obj = obj && obj[path[i]];\n            if (obj == null) {\n                break;\n            }\n        }\n        return obj;\n    }\n\n    function set(opt, path, val, overwrite) {\n        path = path.split(',');\n        var obj = opt;\n        var key;\n        for (var i = 0; i < path.length - 1; i++) {\n            key = path[i];\n            if (obj[key] == null) {\n                obj[key] = {};\n            }\n            obj = obj[key];\n        }\n        if (overwrite || obj[path[i]] == null) {\n            obj[path[i]] = val;\n        }\n    }\n\n    function compatLayoutProperties(option) {\n        each(LAYOUT_PROPERTIES, function (prop) {\n            if (prop[0] in option && !(prop[1] in option)) {\n                option[prop[1]] = option[prop[0]];\n            }\n        });\n    }\n\n    var LAYOUT_PROPERTIES = [\n        ['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']\n    ];\n\n    var COMPATITABLE_COMPONENTS = [\n        'grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'\n    ];\n\n    var COMPATITABLE_SERIES = [\n        'bar', 'boxplot', 'candlestick', 'chord', 'effectScatter',\n        'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel',\n        'pie', 'radar', 'sankey', 'scatter', 'treemap'\n    ];\n\n    var each = zrUtil.each;\n\n    module.exports = function (option, isTheme) {\n        compatStyle(option, isTheme);\n\n        var series = option.series;\n        each(zrUtil.isArray(series) ? series : [series], function (seriesOpt) {\n            if (!zrUtil.isObject(seriesOpt)) {\n                return;\n            }\n\n            var seriesType = seriesOpt.type;\n\n            if (seriesType === 'pie' || seriesType === 'gauge') {\n                if (seriesOpt.clockWise != null) {\n                    seriesOpt.clockwise = seriesOpt.clockWise;\n                }\n            }\n            if (seriesType === 'gauge') {\n                var pointerColor = get(seriesOpt, 'pointer.color');\n                pointerColor != null\n                    && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n            }\n\n            for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\n                if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\n                    compatLayoutProperties(seriesOpt);\n                    break;\n                }\n            }\n        });\n\n        // dataRange has changed to visualMap\n        if (option.dataRange) {\n            option.visualMap = option.dataRange;\n        }\n\n        each(COMPATITABLE_COMPONENTS, function (componentName) {\n            var options = option[componentName];\n            if (options) {\n                if (!zrUtil.isArray(options)) {\n                    options = [options];\n                }\n                each(options, function (option) {\n                    compatLayoutProperties(option);\n                });\n            }\n        });\n    };\n\n\n/***/ }),\n\n/***/ 1109:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(970);\n    var modelUtil = __webpack_require__(974);\n\n    var each = zrUtil.each;\n    var isObject = zrUtil.isObject;\n\n    var POSSIBLE_STYLES = [\n        'areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle',\n        'chordStyle', 'label', 'labelLine'\n    ];\n\n    function compatItemStyle(opt) {\n        var itemStyleOpt = opt && opt.itemStyle;\n        if (!itemStyleOpt) {\n            return;\n        }\n        for (var i = 0, len = POSSIBLE_STYLES.length; i < len; i++) {\n            var styleName = POSSIBLE_STYLES[i];\n            var normalItemStyleOpt = itemStyleOpt.normal;\n            var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n            if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n                opt[styleName] = opt[styleName] || {};\n                if (!opt[styleName].normal) {\n                    opt[styleName].normal = normalItemStyleOpt[styleName];\n                }\n                else {\n                    zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n                }\n                normalItemStyleOpt[styleName] = null;\n            }\n            if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n                opt[styleName] = opt[styleName] || {};\n                if (!opt[styleName].emphasis) {\n                    opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n                }\n                else {\n                    zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n                }\n                emphasisItemStyleOpt[styleName] = null;\n            }\n        }\n    }\n\n    function compatTextStyle(opt, propName) {\n        var labelOptSingle = isObject(opt) && opt[propName];\n        var textStyle = isObject(labelOptSingle) && labelOptSingle.textStyle;\n        if (textStyle) {\n            for (var i = 0, len = modelUtil.TEXT_STYLE_OPTIONS.length; i < len; i++) {\n                var propName = modelUtil.TEXT_STYLE_OPTIONS[i];\n                if (textStyle.hasOwnProperty(propName)) {\n                    labelOptSingle[propName] = textStyle[propName];\n                }\n            }\n        }\n    }\n\n    function compatLabelTextStyle(labelOpt) {\n        if (isObject(labelOpt)) {\n            compatTextStyle(labelOpt, 'normal');\n            compatTextStyle(labelOpt, 'emphasis');\n        }\n    }\n\n    function processSeries(seriesOpt) {\n        if (!isObject(seriesOpt)) {\n            return;\n        }\n\n        compatItemStyle(seriesOpt);\n        compatLabelTextStyle(seriesOpt.label);\n        // treemap\n        compatLabelTextStyle(seriesOpt.upperLabel);\n        // graph\n        compatLabelTextStyle(seriesOpt.edgeLabel);\n\n        var markPoint = seriesOpt.markPoint;\n        compatItemStyle(markPoint);\n        compatLabelTextStyle(markPoint && markPoint.label);\n\n        var markLine = seriesOpt.markLine;\n        compatItemStyle(seriesOpt.markLine);\n        compatLabelTextStyle(markLine && markLine.label);\n\n        var markArea = seriesOpt.markArea;\n        compatLabelTextStyle(markArea && markArea.label);\n\n        // For gauge\n        compatTextStyle(seriesOpt, 'axisLabel');\n        compatTextStyle(seriesOpt, 'title');\n        compatTextStyle(seriesOpt, 'detail');\n\n        var data = seriesOpt.data;\n        if (data) {\n            for (var i = 0; i < data.length; i++) {\n                compatItemStyle(data[i]);\n                compatLabelTextStyle(data[i] && data[i].label);\n            }\n        }\n\n        // mark point data\n        var markPoint = seriesOpt.markPoint;\n        if (markPoint && markPoint.data) {\n            var mpData = markPoint.data;\n            for (var i = 0; i < mpData.length; i++) {\n                compatItemStyle(mpData[i]);\n                compatLabelTextStyle(mpData[i] && mpData[i].label);\n            }\n        }\n        // mark line data\n        var markLine = seriesOpt.markLine;\n        if (markLine && markLine.data) {\n            var mlData = markLine.data;\n            for (var i = 0; i < mlData.length; i++) {\n                if (zrUtil.isArray(mlData[i])) {\n                    compatItemStyle(mlData[i][0]);\n                    compatLabelTextStyle(mlData[i][0] && mlData[i][0].label);\n                    compatItemStyle(mlData[i][1]);\n                    compatLabelTextStyle(mlData[i][1] && mlData[i][1].label);\n                }\n                else {\n                    compatItemStyle(mlData[i]);\n                    compatLabelTextStyle(mlData[i] && mlData[i].label);\n                }\n            }\n        }\n    }\n\n    function toArr(o) {\n        return zrUtil.isArray(o) ? o : o ? [o] : [];\n    }\n\n    function toObj(o) {\n        return (zrUtil.isArray(o) ? o[0] : o) || {};\n    }\n\n    module.exports = function (option, isTheme) {\n        each(toArr(option.series), function (seriesOpt) {\n            isObject(seriesOpt) && processSeries(seriesOpt);\n        });\n\n        var axes = ['xAxis', 'yAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'parallelAxis', 'radar'];\n        isTheme && axes.push('valueAxis', 'categoryAxis', 'logAxis', 'timeAxis');\n\n        each(\n            axes,\n            function (axisName) {\n                each(toArr(option[axisName]), function (axisOpt) {\n                    if (axisOpt) {\n                        compatTextStyle(axisOpt, 'axisLabel');\n                        compatTextStyle(axisOpt.axisPointer, 'label');\n                    }\n                });\n            }\n        );\n\n        each(toArr(option.parallel), function (parallelOpt) {\n            var parallelAxisDefault = parallelOpt && parallelOpt.parallelAxisDefault;\n            compatTextStyle(parallelAxisDefault, 'axisLabel');\n            compatTextStyle(parallelAxisDefault && parallelAxisDefault.axisPointer, 'label');\n        });\n\n        each(toArr(option.calendar), function (calendarOpt) {\n            compatTextStyle(calendarOpt, 'dayLabel');\n            compatTextStyle(calendarOpt, 'monthLabel');\n            compatTextStyle(calendarOpt, 'yearLabel');\n        });\n\n        // radar.name.textStyle\n        each(toArr(option.radar), function (radarOpt) {\n            compatTextStyle(radarOpt, 'name');\n        });\n\n        each(toArr(option.geo), function (geoOpt) {\n            if (isObject(geoOpt)) {\n                compatLabelTextStyle(geoOpt.label);\n                each(toArr(geoOpt.regions), function (regionObj) {\n                    compatLabelTextStyle(regionObj.label);\n                });\n            }\n        });\n\n        compatLabelTextStyle(toObj(option.timeline).label);\n        compatTextStyle(toObj(option.axisPointer), 'label');\n        compatTextStyle(toObj(option.tooltip).axisPointer, 'label');\n    };\n\n\n/***/ }),\n\n/***/ 1110:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Handler\n * @module zrender/Handler\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (shenyi.914@gmail.com)\n */\n\n\n    var util = __webpack_require__(970);\n    var vec2 = __webpack_require__(975);\n    var Draggable = __webpack_require__(1111);\n\n    var Eventful = __webpack_require__(991);\n\n    var SILENT = 'silent';\n\n    function makeEventPacket(eveType, targetInfo, event) {\n        return {\n            type: eveType,\n            event: event,\n            // target can only be an element that is not silent.\n            target: targetInfo.target,\n            // topTarget can be a silent element.\n            topTarget: targetInfo.topTarget,\n            cancelBubble: false,\n            offsetX: event.zrX,\n            offsetY: event.zrY,\n            gestureEvent: event.gestureEvent,\n            pinchX: event.pinchX,\n            pinchY: event.pinchY,\n            pinchScale: event.pinchScale,\n            wheelDelta: event.zrDelta,\n            zrByTouch: event.zrByTouch,\n            which: event.which\n        };\n    }\n\n    function EmptyProxy () {}\n    EmptyProxy.prototype.dispose = function () {};\n\n    var handlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n    /**\n     * @alias module:zrender/Handler\n     * @constructor\n     * @extends module:zrender/mixin/Eventful\n     * @param {module:zrender/Storage} storage Storage instance.\n     * @param {module:zrender/Painter} painter Painter instance.\n     * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n     * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n     */\n    var Handler = function(storage, painter, proxy, painterRoot) {\n        Eventful.call(this);\n\n        this.storage = storage;\n\n        this.painter = painter;\n\n        this.painterRoot = painterRoot;\n\n        proxy = proxy || new EmptyProxy();\n\n        /**\n         * Proxy of event. can be Dom, WebGLSurface, etc.\n         */\n        this.proxy = proxy;\n\n        // Attach handler\n        proxy.handler = this;\n\n        /**\n         * {target, topTarget, x, y}\n         * @private\n         * @type {Object}\n         */\n        this._hovered = {};\n\n        /**\n         * @private\n         * @type {Date}\n         */\n        this._lastTouchMoment;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastX;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastY;\n\n\n        Draggable.call(this);\n\n        util.each(handlerNames, function (name) {\n            proxy.on && proxy.on(name, this[name], this);\n        }, this);\n    };\n\n    Handler.prototype = {\n\n        constructor: Handler,\n\n        mousemove: function (event) {\n            var x = event.zrX;\n            var y = event.zrY;\n\n            var lastHovered = this._hovered;\n            var lastHoveredTarget = lastHovered.target;\n\n            // If lastHoveredTarget is removed from zr (detected by '__zr') by some API call\n            // (like 'setOption' or 'dispatchAction') in event handlers, we should find\n            // lastHovered again here. Otherwise 'mouseout' can not be triggered normally.\n            // See #6198.\n            if (lastHoveredTarget && !lastHoveredTarget.__zr) {\n                lastHovered = this.findHover(lastHovered.x, lastHovered.y);\n                lastHoveredTarget = lastHovered.target;\n            }\n\n            var hovered = this._hovered = this.findHover(x, y);\n            var hoveredTarget = hovered.target;\n\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default');\n\n            // Mouse out on previous hovered element\n            if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget) {\n                this.dispatchToElement(lastHovered, 'mouseout', event);\n            }\n\n            // Mouse moving on one element\n            this.dispatchToElement(hovered, 'mousemove', event);\n\n            // Mouse over on a new element\n            if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n                this.dispatchToElement(hovered, 'mouseover', event);\n            }\n        },\n\n        mouseout: function (event) {\n            this.dispatchToElement(this._hovered, 'mouseout', event);\n\n            // There might be some doms created by upper layer application\n            // at the same level of painter.getViewportRoot() (e.g., tooltip\n            // dom created by echarts), where 'globalout' event should not\n            // be triggered when mouse enters these doms. (But 'mouseout'\n            // should be triggered at the original hovered element as usual).\n            var element = event.toElement || event.relatedTarget;\n            var innerDom;\n            do {\n                element = element && element.parentNode;\n            }\n            while (element && element.nodeType != 9 && !(\n                innerDom = element === this.painterRoot\n            ));\n\n            !innerDom && this.trigger('globalout', {event: event});\n        },\n\n        /**\n         * Resize\n         */\n        resize: function (event) {\n            this._hovered = {};\n        },\n\n        /**\n         * Dispatch event\n         * @param {string} eventName\n         * @param {event=} eventArgs\n         */\n        dispatch: function (eventName, eventArgs) {\n            var handler = this[eventName];\n            handler && handler.call(this, eventArgs);\n        },\n\n        /**\n         * Dispose\n         */\n        dispose: function () {\n\n            this.proxy.dispose();\n\n            this.storage =\n            this.proxy =\n            this.painter = null;\n        },\n\n        /**\n         * 设置默认的cursor style\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(cursorStyle);\n        },\n\n        /**\n         * 事件分发代理\n         *\n         * @private\n         * @param {Object} targetInfo {target, topTarget} 目标图形元素\n         * @param {string} eventName 事件名称\n         * @param {Object} event 事件对象\n         */\n        dispatchToElement: function (targetInfo, eventName, event) {\n            targetInfo = targetInfo || {};\n            var el = targetInfo.target;\n            if (el && el.silent) {\n                return;\n            }\n            var eventHandler = 'on' + eventName;\n            var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n            while (el) {\n                el[eventHandler]\n                    && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n\n                el.trigger(eventName, eventPacket);\n\n                el = el.parent;\n\n                if (eventPacket.cancelBubble) {\n                    break;\n                }\n            }\n\n            if (!eventPacket.cancelBubble) {\n                // 冒泡到顶级 zrender 对象\n                this.trigger(eventName, eventPacket);\n                // 分发事件到用户自定义层\n                // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n                this.painter && this.painter.eachOtherLayer(function (layer) {\n                    if (typeof(layer[eventHandler]) == 'function') {\n                        layer[eventHandler].call(layer, eventPacket);\n                    }\n                    if (layer.trigger) {\n                        layer.trigger(eventName, eventPacket);\n                    }\n                });\n            }\n        },\n\n        /**\n         * @private\n         * @param {number} x\n         * @param {number} y\n         * @param {module:zrender/graphic/Displayable} exclude\n         * @return {model:zrender/Element}\n         * @method\n         */\n        findHover: function(x, y, exclude) {\n            var list = this.storage.getDisplayList();\n            var out = {x: x, y: y};\n\n            for (var i = list.length - 1; i >= 0 ; i--) {\n                var hoverCheckResult;\n                if (list[i] !== exclude\n                    // getDisplayList may include ignored item in VML mode\n                    && !list[i].ignore\n                    && (hoverCheckResult = isHover(list[i], x, y))\n                ) {\n                    !out.topTarget && (out.topTarget = list[i]);\n                    if (hoverCheckResult !== SILENT) {\n                        out.target = list[i];\n                        break;\n                    }\n                }\n            }\n\n            return out;\n        }\n    };\n\n    // Common handlers\n    util.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        Handler.prototype[name] = function (event) {\n            // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n            var hovered = this.findHover(event.zrX, event.zrY);\n            var hoveredTarget = hovered.target;\n\n            if (name === 'mousedown') {\n                this._downEl = hoveredTarget;\n                this._downPoint = [event.zrX, event.zrY];\n                // In case click triggered before mouseup\n                this._upEl = hoveredTarget;\n            }\n            else if (name === 'mosueup') {\n                this._upEl = hoveredTarget;\n            }\n            else if (name === 'click') {\n                if (this._downEl !== this._upEl\n                    // Original click event is triggered on the whole canvas element,\n                    // including the case that `mousedown` - `mousemove` - `mouseup`,\n                    // which should be filtered, otherwise it will bring trouble to\n                    // pan and zoom.\n                    || !this._downPoint\n                    // Arbitrary value\n                    || vec2.dist(this._downPoint, [event.zrX, event.zrY]) > 4\n                ) {\n                    return;\n                }\n                this._downPoint = null;\n            }\n\n            this.dispatchToElement(hovered, name, event);\n        };\n    });\n\n    function isHover(displayable, x, y) {\n        if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n            var el = displayable;\n            var isSilent;\n            while (el) {\n                // If clipped by ancestor.\n                // FIXME: If clipPath has neither stroke nor fill,\n                // el.clipPath.contain(x, y) will always return false.\n                if (el.clipPath && !el.clipPath.contain(x, y))  {\n                    return false;\n                }\n                if (el.silent) {\n                    isSilent = true;\n                }\n                el = el.parent;\n            }\n            return isSilent ? SILENT : true;\n        }\n\n        return false;\n    }\n\n    util.mixin(Handler, Eventful);\n    util.mixin(Handler, Draggable);\n\n    module.exports = Handler;\n\n\n\n/***/ }),\n\n/***/ 1111:\n/***/ (function(module, exports) {\n\n// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\n\n    function Draggable() {\n\n        this.on('mousedown', this._dragStart, this);\n        this.on('mousemove', this._drag, this);\n        this.on('mouseup', this._dragEnd, this);\n        this.on('globalout', this._dragEnd, this);\n        // this._dropTarget = null;\n        // this._draggingTarget = null;\n\n        // this._x = 0;\n        // this._y = 0;\n    }\n\n    Draggable.prototype = {\n\n        constructor: Draggable,\n\n        _dragStart: function (e) {\n            var draggingTarget = e.target;\n            if (draggingTarget && draggingTarget.draggable) {\n                this._draggingTarget = draggingTarget;\n                draggingTarget.dragging = true;\n                this._x = e.offsetX;\n                this._y = e.offsetY;\n\n                this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n            }\n        },\n\n        _drag: function (e) {\n            var draggingTarget = this._draggingTarget;\n            if (draggingTarget) {\n\n                var x = e.offsetX;\n                var y = e.offsetY;\n\n                var dx = x - this._x;\n                var dy = y - this._y;\n                this._x = x;\n                this._y = y;\n\n                draggingTarget.drift(dx, dy, e);\n                this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n\n                var dropTarget = this.findHover(x, y, draggingTarget).target;\n                var lastDropTarget = this._dropTarget;\n                this._dropTarget = dropTarget;\n\n                if (draggingTarget !== dropTarget) {\n                    if (lastDropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n                    }\n                    if (dropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n                    }\n                }\n            }\n        },\n\n        _dragEnd: function (e) {\n            var draggingTarget = this._draggingTarget;\n\n            if (draggingTarget) {\n                draggingTarget.dragging = false;\n            }\n\n            this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n            if (this._dropTarget) {\n                this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n            }\n\n            this._draggingTarget = null;\n            this._dropTarget = null;\n        }\n\n    };\n\n    function param(target, e) {\n        return {target: target, topTarget: e && e.topTarget};\n    }\n\n    module.exports = Draggable;\n\n\n/***/ }),\n\n/***/ 1112:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Storage内容仓库模块\n * @module zrender/Storage\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @author errorrik (errorrik@gmail.com)\n * @author pissang (https://github.com/pissang/)\n */\n\n\n    var util = __webpack_require__(970);\n    var env = __webpack_require__(977);\n\n    var Group = __webpack_require__(1000);\n\n    // Use timsort because in most case elements are partially sorted\n    // https://jsfiddle.net/pissang/jr4x7mdm/8/\n    var timsort = __webpack_require__(1016);\n\n    function shapeCompareFunc(a, b) {\n        if (a.zlevel === b.zlevel) {\n            if (a.z === b.z) {\n                // if (a.z2 === b.z2) {\n                //     // FIXME Slow has renderidx compare\n                //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n                //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n                //     return a.__renderidx - b.__renderidx;\n                // }\n                return a.z2 - b.z2;\n            }\n            return a.z - b.z;\n        }\n        return a.zlevel - b.zlevel;\n    }\n    /**\n     * 内容仓库 (M)\n     * @alias module:zrender/Storage\n     * @constructor\n     */\n    var Storage = function () {\n        this._roots = [];\n\n        this._displayList = [];\n\n        this._displayListLen = 0;\n    };\n\n    Storage.prototype = {\n\n        constructor: Storage,\n\n        /**\n         * @param  {Function} cb\n         *\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._roots.length; i++) {\n                this._roots[i].traverse(cb, context);\n            }\n        },\n\n        /**\n         * 返回所有图形的绘制队列\n         * @param {boolean} [update=false] 是否在返回前更新该数组\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n         *\n         * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n         * @return {Array.<module:zrender/graphic/Displayable>}\n         */\n        getDisplayList: function (update, includeIgnore) {\n            includeIgnore = includeIgnore || false;\n            if (update) {\n                this.updateDisplayList(includeIgnore);\n            }\n            return this._displayList;\n        },\n\n        /**\n         * 更新图形的绘制队列。\n         * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n         * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n         */\n        updateDisplayList: function (includeIgnore) {\n            this._displayListLen = 0;\n            var roots = this._roots;\n            var displayList = this._displayList;\n            for (var i = 0, len = roots.length; i < len; i++) {\n                this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n            }\n            displayList.length = this._displayListLen;\n\n            // for (var i = 0, len = displayList.length; i < len; i++) {\n            //     displayList[i].__renderidx = i;\n            // }\n\n            // displayList.sort(shapeCompareFunc);\n            env.canvasSupported && timsort(displayList, shapeCompareFunc);\n        },\n\n        _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n\n            if (el.ignore && !includeIgnore) {\n                return;\n            }\n\n            el.beforeUpdate();\n\n            if (el.__dirty) {\n\n                el.update();\n\n            }\n\n            el.afterUpdate();\n\n            var userSetClipPath = el.clipPath;\n            if (userSetClipPath) {\n\n                // FIXME 效率影响\n                if (clipPaths) {\n                    clipPaths = clipPaths.slice();\n                }\n                else {\n                    clipPaths = [];\n                }\n\n                var currentClipPath = userSetClipPath;\n                var parentClipPath = el;\n                // Recursively add clip path\n                while (currentClipPath) {\n                    // clipPath 的变换是基于使用这个 clipPath 的元素\n                    currentClipPath.parent = parentClipPath;\n                    currentClipPath.updateTransform();\n\n                    clipPaths.push(currentClipPath);\n\n                    parentClipPath = currentClipPath;\n                    currentClipPath = currentClipPath.clipPath;\n                }\n            }\n\n            if (el.isGroup) {\n                var children = el._children;\n\n                for (var i = 0; i < children.length; i++) {\n                    var child = children[i];\n\n                    // Force to mark as dirty if group is dirty\n                    // FIXME __dirtyPath ?\n                    if (el.__dirty) {\n                        child.__dirty = true;\n                    }\n\n                    this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n                }\n\n                // Mark group clean here\n                el.__dirty = false;\n\n            }\n            else {\n                el.__clipPaths = clipPaths;\n\n                this._displayList[this._displayListLen++] = el;\n            }\n        },\n\n        /**\n         * 添加图形(Shape)或者组(Group)到根节点\n         * @param {module:zrender/Element} el\n         */\n        addRoot: function (el) {\n            if (el.__storage === this) {\n                return;\n            }\n\n            if (el instanceof Group) {\n                el.addChildrenToStorage(this);\n            }\n\n            this.addToStorage(el);\n            this._roots.push(el);\n        },\n\n        /**\n         * 删除指定的图形(Shape)或者组(Group)\n         * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n         */\n        delRoot: function (el) {\n            if (el == null) {\n                // 不指定el清空\n                for (var i = 0; i < this._roots.length; i++) {\n                    var root = this._roots[i];\n                    if (root instanceof Group) {\n                        root.delChildrenFromStorage(this);\n                    }\n                }\n\n                this._roots = [];\n                this._displayList = [];\n                this._displayListLen = 0;\n\n                return;\n            }\n\n            if (el instanceof Array) {\n                for (var i = 0, l = el.length; i < l; i++) {\n                    this.delRoot(el[i]);\n                }\n                return;\n            }\n\n\n            var idx = util.indexOf(this._roots, el);\n            if (idx >= 0) {\n                this.delFromStorage(el);\n                this._roots.splice(idx, 1);\n                if (el instanceof Group) {\n                    el.delChildrenFromStorage(this);\n                }\n            }\n        },\n\n        addToStorage: function (el) {\n            el.__storage = this;\n            el.dirty(false);\n\n            return this;\n        },\n\n        delFromStorage: function (el) {\n            if (el) {\n                el.__storage = null;\n            }\n\n            return this;\n        },\n\n        /**\n         * 清空并且释放Storage\n         */\n        dispose: function () {\n            this._renderList =\n            this._roots = null;\n        },\n\n        displayableSortFunc: shapeCompareFunc\n    };\n\n    module.exports = Storage;\n\n\n\n/***/ }),\n\n/***/ 1113:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n\n    var util = __webpack_require__(970);\n    var Dispatcher = __webpack_require__(989).Dispatcher;\n\n    var requestAnimationFrame = __webpack_require__(1039);\n\n    var Animator = __webpack_require__(1033);\n    /**\n     * @typedef {Object} IZRenderStage\n     * @property {Function} update\n     */\n\n    /**\n     * @alias module:zrender/animation/Animation\n     * @constructor\n     * @param {Object} [options]\n     * @param {Function} [options.onframe]\n     * @param {IZRenderStage} [options.stage]\n     * @example\n     *     var animation = new Animation();\n     *     var obj = {\n     *         x: 100,\n     *         y: 100\n     *     };\n     *     animation.animate(node.position)\n     *         .when(1000, {\n     *             x: 500,\n     *             y: 500\n     *         })\n     *         .when(2000, {\n     *             x: 100,\n     *             y: 100\n     *         })\n     *         .start('spline');\n     */\n    var Animation = function (options) {\n\n        options = options || {};\n\n        this.stage = options.stage || {};\n\n        this.onframe = options.onframe || function() {};\n\n        // private properties\n        this._clips = [];\n\n        this._running = false;\n\n        this._time;\n\n        this._pausedTime;\n\n        this._pauseStart;\n\n        this._paused = false;\n\n        Dispatcher.call(this);\n    };\n\n    Animation.prototype = {\n\n        constructor: Animation,\n        /**\n         * 添加 clip\n         * @param {module:zrender/animation/Clip} clip\n         */\n        addClip: function (clip) {\n            this._clips.push(clip);\n        },\n        /**\n         * 添加 animator\n         * @param {module:zrender/animation/Animator} animator\n         */\n        addAnimator: function (animator) {\n            animator.animation = this;\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.addClip(clips[i]);\n            }\n        },\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Clip} clip\n         */\n        removeClip: function(clip) {\n            var idx = util.indexOf(this._clips, clip);\n            if (idx >= 0) {\n                this._clips.splice(idx, 1);\n            }\n        },\n\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Animator} animator\n         */\n        removeAnimator: function (animator) {\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.removeClip(clips[i]);\n            }\n            animator.animation = null;\n        },\n\n        _update: function() {\n\n            var time = new Date().getTime() - this._pausedTime;\n            var delta = time - this._time;\n            var clips = this._clips;\n            var len = clips.length;\n\n            var deferredEvents = [];\n            var deferredClips = [];\n            for (var i = 0; i < len; i++) {\n                var clip = clips[i];\n                var e = clip.step(time, delta);\n                // Throw out the events need to be called after\n                // stage.update, like destroy\n                if (e) {\n                    deferredEvents.push(e);\n                    deferredClips.push(clip);\n                }\n            }\n\n            // Remove the finished clip\n            for (var i = 0; i < len;) {\n                if (clips[i]._needsRemove) {\n                    clips[i] = clips[len - 1];\n                    clips.pop();\n                    len--;\n                }\n                else {\n                    i++;\n                }\n            }\n\n            len = deferredEvents.length;\n            for (var i = 0; i < len; i++) {\n                deferredClips[i].fire(deferredEvents[i]);\n            }\n\n            this._time = time;\n\n            this.onframe(delta);\n\n            this.trigger('frame', delta);\n\n            if (this.stage.update) {\n                this.stage.update();\n            }\n        },\n\n        _startLoop: function () {\n            var self = this;\n\n            this._running = true;\n\n            function step() {\n                if (self._running) {\n\n                    requestAnimationFrame(step);\n\n                    !self._paused && self._update();\n                }\n            }\n\n            requestAnimationFrame(step);\n        },\n\n        /**\n         * 开始运行动画\n         */\n        start: function () {\n\n            this._time = new Date().getTime();\n            this._pausedTime = 0;\n\n            this._startLoop();\n        },\n        /**\n         * 停止运行动画\n         */\n        stop: function () {\n            this._running = false;\n        },\n\n        /**\n         * Pause\n         */\n        pause: function () {\n            if (!this._paused) {\n                this._pauseStart = new Date().getTime();\n                this._paused = true;\n            }\n        },\n\n        /**\n         * Resume\n         */\n        resume: function () {\n            if (this._paused) {\n                this._pausedTime += (new Date().getTime()) - this._pauseStart;\n                this._paused = false;\n            }\n        },\n\n        /**\n         * 清除所有动画片段\n         */\n        clear: function () {\n            this._clips = [];\n        },\n        /**\n         * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n         * @param  {Object} target\n         * @param  {Object} options\n         * @param  {boolean} [options.loop=false] 是否循环播放动画\n         * @param  {Function} [options.getter=null]\n         *         如果指定getter函数，会通过getter函数取属性值\n         * @param  {Function} [options.setter=null]\n         *         如果指定setter函数，会通过setter函数设置属性值\n         * @return {module:zrender/animation/Animation~Animator}\n         */\n        // TODO Gap\n        animate: function (target, options) {\n            options = options || {};\n\n            var animator = new Animator(\n                target,\n                options.loop,\n                options.getter,\n                options.setter\n            );\n\n            this.addAnimator(animator);\n\n            return animator;\n        }\n    };\n\n    util.mixin(Animation, Dispatcher);\n\n    module.exports = Animation;\n\n\n\n/***/ }),\n\n/***/ 1114:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var eventTool = __webpack_require__(989);\n    var zrUtil = __webpack_require__(970);\n    var Eventful = __webpack_require__(991);\n    var env = __webpack_require__(977);\n    var GestureMgr = __webpack_require__(1115);\n\n    var addEventListener = eventTool.addEventListener;\n    var removeEventListener = eventTool.removeEventListener;\n    var normalizeEvent = eventTool.normalizeEvent;\n\n    var TOUCH_CLICK_DELAY = 300;\n\n    var mouseHandlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n\n    var touchHandlerNames = [\n        'touchstart', 'touchend', 'touchmove'\n    ];\n\n    var pointerEventNames = {\n        pointerdown: 1, pointerup: 1, pointermove: 1, pointerout: 1\n    };\n\n    var pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n        var nm = name.replace('mouse', 'pointer');\n        return pointerEventNames[nm] ? nm : name;\n    });\n\n    function eventNameFix(name) {\n        return (name === 'mousewheel' && env.browser.firefox) ? 'DOMMouseScroll' : name;\n    }\n\n    function processGesture(proxy, event, stage) {\n        var gestureMgr = proxy._gestureMgr;\n\n        stage === 'start' && gestureMgr.clear();\n\n        var gestureInfo = gestureMgr.recognize(\n            event,\n            proxy.handler.findHover(event.zrX, event.zrY, null).target,\n            proxy.dom\n        );\n\n        stage === 'end' && gestureMgr.clear();\n\n        // Do not do any preventDefault here. Upper application do that if necessary.\n        if (gestureInfo) {\n            var type = gestureInfo.type;\n            event.gestureEvent = type;\n\n            proxy.handler.dispatchToElement({target: gestureInfo.target}, type, gestureInfo.event);\n        }\n    }\n\n    // function onMSGestureChange(proxy, event) {\n    //     if (event.translationX || event.translationY) {\n    //         // mousemove is carried by MSGesture to reduce the sensitivity.\n    //         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n    //     }\n    //     if (event.scale !== 1) {\n    //         event.pinchX = event.offsetX;\n    //         event.pinchY = event.offsetY;\n    //         event.pinchScale = event.scale;\n    //         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n    //     }\n    // }\n\n    /**\n     * Prevent mouse event from being dispatched after Touch Events action\n     * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n     * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n     * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n     * Result: Blocking Mouse Events for 700ms.\n     */\n    function setTouchTimer(instance) {\n        instance._touching = true;\n        clearTimeout(instance._touchTimer);\n        instance._touchTimer = setTimeout(function () {\n            instance._touching = false;\n        }, 700);\n    }\n\n\n    var domHandlers = {\n        /**\n         * Mouse move handler\n         * @inner\n         * @param {Event} event\n         */\n        mousemove: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            this.trigger('mousemove', event);\n        },\n\n        /**\n         * Mouse out handler\n         * @inner\n         * @param {Event} event\n         */\n        mouseout: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            var element = event.toElement || event.relatedTarget;\n            if (element != this.dom) {\n                while (element && element.nodeType != 9) {\n                    // 忽略包含在root中的dom引起的mouseOut\n                    if (element === this.dom) {\n                        return;\n                    }\n\n                    element = element.parentNode;\n                }\n            }\n\n            this.trigger('mouseout', event);\n        },\n\n        /**\n         * Touch开始响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchstart: function (event) {\n            // Default mouse behaviour should not be disabled here.\n            // For example, page may needs to be slided.\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            this._lastTouchMoment = new Date();\n\n            processGesture(this, event, 'start');\n\n            // In touch device, trigger `mousemove`(`mouseover`) should\n            // be triggered, and must before `mousedown` triggered.\n            domHandlers.mousemove.call(this, event);\n\n            domHandlers.mousedown.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch移动响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchmove: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'change');\n\n            // Mouse move should always be triggered no matter whether\n            // there is gestrue event, because mouse move and pinch may\n            // be used at the same time.\n            domHandlers.mousemove.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch结束响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchend: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'end');\n\n            domHandlers.mouseup.call(this, event);\n\n            // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n            // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n            // we can conveniently implement \"hover style\" in both PC and touch device just\n            // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n            // to remove \"hover style\" on an element, without any additional code for\n            // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n            // style\" will remain for user view)\n\n            // click event should always be triggered no matter whether\n            // there is gestrue event. System click can not be prevented.\n            if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n                domHandlers.click.call(this, event);\n            }\n\n            setTouchTimer(this);\n        },\n\n        pointerdown: function (event) {\n            domHandlers.mousedown.call(this, event);\n\n            // if (useMSGuesture(this, event)) {\n            //     this._msGesture.addPointer(event.pointerId);\n            // }\n        },\n\n        pointermove: function (event) {\n            // FIXME\n            // pointermove is so sensitive that it always triggered when\n            // tap(click) on touch screen, which affect some judgement in\n            // upper application. So, we dont support mousemove on MS touch\n            // device yet.\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mousemove.call(this, event);\n            }\n        },\n\n        pointerup: function (event) {\n            domHandlers.mouseup.call(this, event);\n        },\n\n        pointerout: function (event) {\n            // pointerout will be triggered when tap on touch screen\n            // (IE11+/Edge on MS Surface) after click event triggered,\n            // which is inconsistent with the mousout behavior we defined\n            // in touchend. So we unify them.\n            // (check domHandlers.touchend for detailed explanation)\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mouseout.call(this, event);\n            }\n        }\n    };\n\n    function isPointerFromTouch(event) {\n        var pointerType = event.pointerType;\n        return pointerType === 'pen' || pointerType === 'touch';\n    }\n\n    // function useMSGuesture(handlerProxy, event) {\n    //     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n    // }\n\n    // Common handlers\n    zrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        domHandlers[name] = function (event) {\n            event = normalizeEvent(this.dom, event);\n            this.trigger(name, event);\n        };\n    });\n\n    /**\n     * 为控制类实例初始化dom 事件处理函数\n     *\n     * @inner\n     * @param {module:zrender/Handler} instance 控制类实例\n     */\n    function initDomHandler(instance) {\n        zrUtil.each(touchHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(pointerHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(mouseHandlerNames, function (name) {\n            instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n        });\n\n        function makeMouseHandler(fn, instance) {\n            return function () {\n                if (instance._touching) {\n                    return;\n                }\n                return fn.apply(instance, arguments);\n            };\n        }\n    }\n\n\n    function HandlerDomProxy(dom) {\n        Eventful.call(this);\n\n        this.dom = dom;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._touching = false;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._touchTimer;\n\n        /**\n         * @private\n         * @type {module:zrender/core/GestureMgr}\n         */\n        this._gestureMgr = new GestureMgr();\n\n        this._handlers = {};\n\n        initDomHandler(this);\n\n        if (env.pointerEventsSupported) { // Only IE11+/Edge\n            // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n            // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n            // at the same time.\n            // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n            // screen, which do not occurs in pointer event.\n            // So we use pointer event to both detect touch gesture and mouse behavior.\n            mountHandlers(pointerHandlerNames, this);\n\n            // FIXME\n            // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n            // which does not prevent defuault behavior occasionally (which may cause view port\n            // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n            // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n            // touch screen. And we only support click behavior on MS touch screen now.\n\n            // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n            // We dont support touch on IE on win7.\n            // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n            // if (typeof MSGesture === 'function') {\n            //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n            //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n            // }\n        }\n        else {\n            if (env.touchEventsSupported) {\n                mountHandlers(touchHandlerNames, this);\n                // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n                // addEventListener(root, 'mouseout', this._mouseoutHandler);\n            }\n\n            // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n            // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n            // mouse event can not be handle in those devices.\n            // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n            // mouseevent after touch event triggered, see `setTouchTimer`.\n            mountHandlers(mouseHandlerNames, this);\n        }\n\n        function mountHandlers(handlerNames, instance) {\n            zrUtil.each(handlerNames, function (name) {\n                addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n            }, instance);\n        }\n    }\n\n    var handlerDomProxyProto = HandlerDomProxy.prototype;\n    handlerDomProxyProto.dispose = function () {\n        var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n        for (var i = 0; i < handlerNames.length; i++) {\n            var name = handlerNames[i];\n            removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n        }\n    };\n\n    handlerDomProxyProto.setCursor = function (cursorStyle) {\n        this.dom.style.cursor = cursorStyle || 'default';\n    };\n\n    zrUtil.mixin(HandlerDomProxy, Eventful);\n\n    module.exports = HandlerDomProxy;\n\n\n/***/ }),\n\n/***/ 1115:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Only implements needed gestures for mobile.\n */\n\n\n    var eventUtil = __webpack_require__(989);\n\n    var GestureMgr = function () {\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._track = [];\n    };\n\n    GestureMgr.prototype = {\n\n        constructor: GestureMgr,\n\n        recognize: function (event, target, root) {\n            this._doTrack(event, target, root);\n            return this._recognize(event);\n        },\n\n        clear: function () {\n            this._track.length = 0;\n            return this;\n        },\n\n        _doTrack: function (event, target, root) {\n            var touches = event.touches;\n\n            if (!touches) {\n                return;\n            }\n\n            var trackItem = {\n                points: [],\n                touches: [],\n                target: target,\n                event: event\n            };\n\n            for (var i = 0, len = touches.length; i < len; i++) {\n                var touch = touches[i];\n                var pos = eventUtil.clientToLocal(root, touch, {});\n                trackItem.points.push([pos.zrX, pos.zrY]);\n                trackItem.touches.push(touch);\n            }\n\n            this._track.push(trackItem);\n        },\n\n        _recognize: function (event) {\n            for (var eventName in recognizers) {\n                if (recognizers.hasOwnProperty(eventName)) {\n                    var gestureInfo = recognizers[eventName](this._track, event);\n                    if (gestureInfo) {\n                        return gestureInfo;\n                    }\n                }\n            }\n        }\n    };\n\n    function dist(pointPair) {\n        var dx = pointPair[1][0] - pointPair[0][0];\n        var dy = pointPair[1][1] - pointPair[0][1];\n\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    function center(pointPair) {\n        return [\n            (pointPair[0][0] + pointPair[1][0]) / 2,\n            (pointPair[0][1] + pointPair[1][1]) / 2\n        ];\n    }\n\n    var recognizers = {\n\n        pinch: function (track, event) {\n            var trackLen = track.length;\n\n            if (!trackLen) {\n                return;\n            }\n\n            var pinchEnd = (track[trackLen - 1] || {}).points;\n            var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n            if (pinchPre\n                && pinchPre.length > 1\n                && pinchEnd\n                && pinchEnd.length > 1\n            ) {\n                var pinchScale = dist(pinchEnd) / dist(pinchPre);\n                !isFinite(pinchScale) && (pinchScale = 1);\n\n                event.pinchScale = pinchScale;\n\n                var pinchCenter = center(pinchEnd);\n                event.pinchX = pinchCenter[0];\n                event.pinchY = pinchCenter[1];\n\n                return {\n                    type: 'pinch',\n                    target: track[0].target,\n                    event: event\n                };\n            }\n        }\n\n        // Only pinch currently.\n    };\n\n    module.exports = GestureMgr;\n\n\n\n/***/ }),\n\n/***/ 1116:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Default canvas painter\n * @module zrender/Painter\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n \n\n    var config = __webpack_require__(999);\n    var util = __webpack_require__(970);\n    var log = __webpack_require__(1024);\n    var BoundingRect = __webpack_require__(981);\n    var timsort = __webpack_require__(1016);\n\n    var Layer = __webpack_require__(1117);\n\n    var requestAnimationFrame = __webpack_require__(1039);\n\n    // PENDIGN\n    // Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.\n    //\n    // Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.\n    var MAX_PROGRESSIVE_LAYER_NUMBER = 5;\n\n    function parseInt10(val) {\n        return parseInt(val, 10);\n    }\n\n    function isLayerValid(layer) {\n        if (!layer) {\n            return false;\n        }\n\n        if (layer.__builtin__) {\n            return true;\n        }\n\n        if (typeof(layer.resize) !== 'function'\n            || typeof(layer.refresh) !== 'function'\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    function preProcessLayer(layer) {\n        layer.__unusedCount++;\n    }\n\n    function postProcessLayer(layer) {\n        if (layer.__unusedCount == 1) {\n            layer.clear();\n        }\n    }\n\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var viewRect = new BoundingRect(0, 0, 0, 0);\n    function isDisplayableCulled(el, width, height) {\n        tmpRect.copy(el.getBoundingRect());\n        if (el.transform) {\n            tmpRect.applyTransform(el.transform);\n        }\n        viewRect.width = width;\n        viewRect.height = height;\n        return !tmpRect.intersect(viewRect);\n    }\n\n    function isClipPathChanged(clipPaths, prevClipPaths) {\n        if (clipPaths == prevClipPaths) { // Can both be null or undefined\n            return false;\n        }\n\n        if (!clipPaths || !prevClipPaths || (clipPaths.length !== prevClipPaths.length)) {\n            return true;\n        }\n        for (var i = 0; i < clipPaths.length; i++) {\n            if (clipPaths[i] !== prevClipPaths[i]) {\n                return true;\n            }\n        }\n    }\n\n    function doClip(clipPaths, ctx) {\n        for (var i = 0; i < clipPaths.length; i++) {\n            var clipPath = clipPaths[i];\n\n            clipPath.setTransform(ctx);\n            ctx.beginPath();\n            clipPath.buildPath(ctx, clipPath.shape);\n            ctx.clip();\n            // Transform back\n            clipPath.restoreTransform(ctx);\n        }\n    }\n\n    function createRoot(width, height) {\n        var domRoot = document.createElement('div');\n\n        // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n        domRoot.style.cssText = [\n            'position:relative',\n            'overflow:hidden',\n            'width:' + width + 'px',\n            'height:' + height + 'px',\n            'padding:0',\n            'margin:0',\n            'border-width:0'\n        ].join(';') + ';';\n\n        return domRoot;\n    }\n\n    /**\n     * @alias module:zrender/Painter\n     * @constructor\n     * @param {HTMLElement} root 绘图容器\n     * @param {module:zrender/Storage} storage\n     * @param {Object} opts\n     */\n    var Painter = function (root, storage, opts) {\n\n        this.type = 'canvas';\n\n        // In node environment using node-canvas\n        var singleCanvas = !root.nodeName // In node ?\n            || root.nodeName.toUpperCase() === 'CANVAS';\n\n        this._opts = opts = util.extend({}, opts || {});\n\n        /**\n         * @type {number}\n         */\n        this.dpr = opts.devicePixelRatio || config.devicePixelRatio;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._singleCanvas = singleCanvas;\n        /**\n         * 绘图容器\n         * @type {HTMLElement}\n         */\n        this.root = root;\n\n        var rootStyle = root.style;\n\n        if (rootStyle) {\n            rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n            rootStyle['-webkit-user-select'] =\n            rootStyle['user-select'] =\n            rootStyle['-webkit-touch-callout'] = 'none';\n\n            root.innerHTML = '';\n        }\n\n        /**\n         * @type {module:zrender/Storage}\n         */\n        this.storage = storage;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        var zlevelList = this._zlevelList = [];\n\n        /**\n         * @type {Object.<string, module:zrender/Layer>}\n         * @private\n         */\n        var layers = this._layers = {};\n\n        /**\n         * @type {Object.<string, Object>}\n         * @type {private}\n         */\n        this._layerConfig = {};\n\n        if (!singleCanvas) {\n            this._width = this._getSize(0);\n            this._height = this._getSize(1);\n\n            var domRoot = this._domRoot = createRoot(\n                this._width, this._height\n            );\n            root.appendChild(domRoot);\n        }\n        else {\n            if (opts.width != null) {\n                root.width = opts.width;\n            }\n            if (opts.height != null) {\n                root.height = opts.height;\n            }\n            // Use canvas width and height directly\n            var width = root.width;\n            var height = root.height;\n            this._width = width;\n            this._height = height;\n\n            // Create layer if only one given canvas\n            // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n            var mainLayer = new Layer(root, this, 1);\n            mainLayer.initContext();\n            // FIXME Use canvas width and height\n            // mainLayer.resize(width, height);\n            layers[0] = mainLayer;\n            zlevelList.push(0);\n\n            this._domRoot = root;\n        }\n\n        // Layers for progressive rendering\n        this._progressiveLayers = [];\n\n        /**\n         * @type {module:zrender/Layer}\n         * @private\n         */\n        this._hoverlayer;\n\n        this._hoverElements = [];\n    };\n\n    Painter.prototype = {\n\n        constructor: Painter,\n\n        getType: function () {\n            return 'canvas';\n        },\n\n        /**\n         * If painter use a single canvas\n         * @return {boolean}\n         */\n        isSingleCanvas: function () {\n            return this._singleCanvas;\n        },\n        /**\n         * @return {HTMLDivElement}\n         */\n        getViewportRoot: function () {\n            return this._domRoot;\n        },\n\n        getViewportRootOffset: function () {\n            var viewportRoot = this.getViewportRoot();\n            if (viewportRoot) {\n                return {\n                    offsetLeft: viewportRoot.offsetLeft || 0,\n                    offsetTop: viewportRoot.offsetTop || 0\n                };\n            }\n        },\n\n        /**\n         * 刷新\n         * @param {boolean} [paintAll=false] 强制绘制所有displayable\n         */\n        refresh: function (paintAll) {\n\n            var list = this.storage.getDisplayList(true);\n\n            var zlevelList = this._zlevelList;\n\n            this._paintList(list, paintAll);\n\n            // Paint custum layers\n            for (var i = 0; i < zlevelList.length; i++) {\n                var z = zlevelList[i];\n                var layer = this._layers[z];\n                if (!layer.__builtin__ && layer.refresh) {\n                    layer.refresh();\n                }\n            }\n\n            this.refreshHover();\n\n            if (this._progressiveLayers.length) {\n                this._startProgessive();\n            }\n\n            return this;\n        },\n\n        addHover: function (el, hoverStyle) {\n            if (el.__hoverMir) {\n                return;\n            }\n            var elMirror = new el.constructor({\n                style: el.style,\n                shape: el.shape\n            });\n            elMirror.__from = el;\n            el.__hoverMir = elMirror;\n            elMirror.setStyle(hoverStyle);\n            this._hoverElements.push(elMirror);\n        },\n\n        removeHover: function (el) {\n            var elMirror = el.__hoverMir;\n            var hoverElements = this._hoverElements;\n            var idx = util.indexOf(hoverElements, elMirror);\n            if (idx >= 0) {\n                hoverElements.splice(idx, 1);\n            }\n            el.__hoverMir = null;\n        },\n\n        clearHover: function (el) {\n            var hoverElements = this._hoverElements;\n            for (var i = 0; i < hoverElements.length; i++) {\n                var from = hoverElements[i].__from;\n                if (from) {\n                    from.__hoverMir = null;\n                }\n            }\n            hoverElements.length = 0;\n        },\n\n        refreshHover: function () {\n            var hoverElements = this._hoverElements;\n            var len = hoverElements.length;\n            var hoverLayer = this._hoverlayer;\n            hoverLayer && hoverLayer.clear();\n\n            if (!len) {\n                return;\n            }\n            timsort(hoverElements, this.storage.displayableSortFunc);\n\n            // Use a extream large zlevel\n            // FIXME?\n            if (!hoverLayer) {\n                hoverLayer = this._hoverlayer = this.getLayer(1e5);\n            }\n\n            var scope = {};\n            hoverLayer.ctx.save();\n            for (var i = 0; i < len;) {\n                var el = hoverElements[i];\n                var originalEl = el.__from;\n                // Original el is removed\n                // PENDING\n                if (!(originalEl && originalEl.__zr)) {\n                    hoverElements.splice(i, 1);\n                    originalEl.__hoverMir = null;\n                    len--;\n                    continue;\n                }\n                i++;\n\n                // Use transform\n                // FIXME style and shape ?\n                if (!originalEl.invisible) {\n                    el.transform = originalEl.transform;\n                    el.invTransform = originalEl.invTransform;\n                    el.__clipPaths = originalEl.__clipPaths;\n                    // el.\n                    this._doPaintEl(el, hoverLayer, true, scope);\n                }\n            }\n            hoverLayer.ctx.restore();\n        },\n\n        _startProgessive: function () {\n            var self = this;\n\n            if (!self._furtherProgressive) {\n                return;\n            }\n\n            // Use a token to stop progress steps triggered by\n            // previous zr.refresh calling.\n            var token = self._progressiveToken = +new Date();\n\n            self._progress++;\n            requestAnimationFrame(step);\n\n            function step() {\n                // In case refreshed or disposed\n                if (token === self._progressiveToken && self.storage) {\n\n                    self._doPaintList(self.storage.getDisplayList());\n\n                    if (self._furtherProgressive) {\n                        self._progress++;\n                        requestAnimationFrame(step);\n                    }\n                    else {\n                        self._progressiveToken = -1;\n                    }\n                }\n            }\n        },\n\n        _clearProgressive: function () {\n            this._progressiveToken = -1;\n            this._progress = 0;\n            util.each(this._progressiveLayers, function (layer) {\n                layer.__dirty && layer.clear();\n            });\n        },\n\n        _paintList: function (list, paintAll) {\n\n            if (paintAll == null) {\n                paintAll = false;\n            }\n\n            this._updateLayerStatus(list);\n\n            this._clearProgressive();\n\n            this.eachBuiltinLayer(preProcessLayer);\n\n            this._doPaintList(list, paintAll);\n\n            this.eachBuiltinLayer(postProcessLayer);\n        },\n\n        _doPaintList: function (list, paintAll) {\n            var currentLayer;\n            var currentZLevel;\n            var ctx;\n\n            // var invTransform = [];\n            var scope;\n\n            var progressiveLayerIdx = 0;\n            var currentProgressiveLayer;\n\n            var width = this._width;\n            var height = this._height;\n            var layerProgress;\n            var frame = this._progress;\n            function flushProgressiveLayer(layer) {\n                var dpr = ctx.dpr || 1;\n                ctx.save();\n                ctx.globalAlpha = 1;\n                ctx.shadowBlur = 0;\n                // Avoid layer don't clear in next progressive frame\n                currentLayer.__dirty = true;\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n                ctx.drawImage(layer.dom, 0, 0, width * dpr, height * dpr);\n                ctx.restore();\n            }\n\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var elZLevel = this._singleCanvas ? 0 : el.zlevel;\n\n                var elFrame = el.__frame;\n\n                // Flush at current context\n                // PENDING\n                if (elFrame < 0 && currentProgressiveLayer) {\n                    flushProgressiveLayer(currentProgressiveLayer);\n                    currentProgressiveLayer = null;\n                }\n\n                // Change draw layer\n                if (currentZLevel !== elZLevel) {\n                    if (ctx) {\n                        ctx.restore();\n                    }\n\n                    // Reset scope\n                    scope = {};\n\n                    // Only 0 zlevel if only has one canvas\n                    currentZLevel = elZLevel;\n                    currentLayer = this.getLayer(currentZLevel);\n\n                    if (!currentLayer.__builtin__) {\n                        log(\n                            'ZLevel ' + currentZLevel\n                            + ' has been used by unkown layer ' + currentLayer.id\n                        );\n                    }\n\n                    ctx = currentLayer.ctx;\n                    ctx.save();\n\n                    // Reset the count\n                    currentLayer.__unusedCount = 0;\n\n                    if (currentLayer.__dirty || paintAll) {\n                        currentLayer.clear();\n                    }\n                }\n\n                if (!(currentLayer.__dirty || paintAll)) {\n                    continue;\n                }\n\n                if (elFrame >= 0) {\n                    // Progressive layer changed\n                    if (!currentProgressiveLayer) {\n                        currentProgressiveLayer = this._progressiveLayers[\n                            Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)\n                        ];\n\n                        currentProgressiveLayer.ctx.save();\n                        currentProgressiveLayer.renderScope = {};\n\n                        if (currentProgressiveLayer\n                            && (currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress)\n                        ) {\n                            // flushProgressiveLayer(currentProgressiveLayer);\n                            // Quick jump all progressive elements\n                            // All progressive element are not dirty, jump over and flush directly\n                            i = currentProgressiveLayer.__nextIdxNotProg - 1;\n                            // currentProgressiveLayer = null;\n                            continue;\n                        }\n\n                        layerProgress = currentProgressiveLayer.__progress;\n\n                        if (!currentProgressiveLayer.__dirty) {\n                            // Keep rendering\n                            frame = layerProgress;\n                        }\n\n                        currentProgressiveLayer.__progress = frame + 1;\n                    }\n\n                    if (elFrame === frame) {\n                        this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);\n                    }\n                }\n                else {\n                    this._doPaintEl(el, currentLayer, paintAll, scope);\n                }\n\n                el.__dirty = false;\n            }\n\n            if (currentProgressiveLayer) {\n                flushProgressiveLayer(currentProgressiveLayer);\n            }\n\n            // Restore the lastLayer ctx\n            ctx && ctx.restore();\n            // If still has clipping state\n            // if (scope.prevElClipPaths) {\n            //     ctx.restore();\n            // }\n\n            this._furtherProgressive = false;\n            util.each(this._progressiveLayers, function (layer) {\n                if (layer.__maxProgress >= layer.__progress) {\n                    this._furtherProgressive = true;\n                }\n            }, this);\n        },\n\n        _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n            var ctx = currentLayer.ctx;\n            var m = el.transform;\n            if (\n                (currentLayer.__dirty || forcePaint)\n                // Ignore invisible element\n                && !el.invisible\n                // Ignore transparent element\n                && el.style.opacity !== 0\n                // Ignore scale 0 element, in some environment like node-canvas\n                // Draw a scale 0 element can cause all following draw wrong\n                // And setTransform with scale 0 will cause set back transform failed.\n                && !(m && !m[0] && !m[3])\n                // Ignore culled element\n                && !(el.culling && isDisplayableCulled(el, this._width, this._height))\n            ) {\n\n                var clipPaths = el.__clipPaths;\n\n                // Optimize when clipping on group with several elements\n                if (scope.prevClipLayer !== currentLayer\n                    || isClipPathChanged(clipPaths, scope.prevElClipPaths)\n                ) {\n                    // If has previous clipping state, restore from it\n                    if (scope.prevElClipPaths) {\n                        scope.prevClipLayer.ctx.restore();\n                        scope.prevClipLayer = scope.prevElClipPaths = null;\n\n                        // Reset prevEl since context has been restored\n                        scope.prevEl = null;\n                    }\n                    // New clipping state\n                    if (clipPaths) {\n                        ctx.save();\n                        doClip(clipPaths, ctx);\n                        scope.prevClipLayer = currentLayer;\n                        scope.prevElClipPaths = clipPaths;\n                    }\n                }\n                el.beforeBrush && el.beforeBrush(ctx);\n\n                el.brush(ctx, scope.prevEl || null);\n                scope.prevEl = el;\n\n                el.afterBrush && el.afterBrush(ctx);\n            }\n        },\n\n        /**\n         * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n         * @param {number} zlevel\n         * @return {module:zrender/Layer}\n         */\n        getLayer: function (zlevel) {\n            if (this._singleCanvas) {\n                return this._layers[0];\n            }\n\n            var layer = this._layers[zlevel];\n            if (!layer) {\n                // Create a new layer\n                layer = new Layer('zr_' + zlevel, this, this.dpr);\n                layer.__builtin__ = true;\n\n                if (this._layerConfig[zlevel]) {\n                    util.merge(layer, this._layerConfig[zlevel], true);\n                }\n\n                this.insertLayer(zlevel, layer);\n\n                // Context is created after dom inserted to document\n                // Or excanvas will get 0px clientWidth and clientHeight\n                layer.initContext();\n            }\n\n            return layer;\n        },\n\n        insertLayer: function (zlevel, layer) {\n\n            var layersMap = this._layers;\n            var zlevelList = this._zlevelList;\n            var len = zlevelList.length;\n            var prevLayer = null;\n            var i = -1;\n            var domRoot = this._domRoot;\n\n            if (layersMap[zlevel]) {\n                log('ZLevel ' + zlevel + ' has been used already');\n                return;\n            }\n            // Check if is a valid layer\n            if (!isLayerValid(layer)) {\n                log('Layer of zlevel ' + zlevel + ' is not valid');\n                return;\n            }\n\n            if (len > 0 && zlevel > zlevelList[0]) {\n                for (i = 0; i < len - 1; i++) {\n                    if (\n                        zlevelList[i] < zlevel\n                        && zlevelList[i + 1] > zlevel\n                    ) {\n                        break;\n                    }\n                }\n                prevLayer = layersMap[zlevelList[i]];\n            }\n            zlevelList.splice(i + 1, 0, zlevel);\n\n            layersMap[zlevel] = layer;\n\n            // Vitual layer will not directly show on the screen.\n            // (It can be a WebGL layer and assigned to a ZImage element)\n            // But it still under management of zrender.\n            if (!layer.virtual) {\n                if (prevLayer) {\n                    var prevDom = prevLayer.dom;\n                    if (prevDom.nextSibling) {\n                        domRoot.insertBefore(\n                            layer.dom,\n                            prevDom.nextSibling\n                        );\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n                else {\n                    if (domRoot.firstChild) {\n                        domRoot.insertBefore(layer.dom, domRoot.firstChild);\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n            }\n        },\n\n        // Iterate each layer\n        eachLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                cb.call(context, this._layers[z], z);\n            }\n        },\n\n        // Iterate each buildin layer\n        eachBuiltinLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        // Iterate each other layer except buildin layer\n        eachOtherLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (!layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        /**\n         * 获取所有已创建的层\n         * @param {Array.<module:zrender/Layer>} [prevLayer]\n         */\n        getLayers: function () {\n            return this._layers;\n        },\n\n        _updateLayerStatus: function (list) {\n\n            var layers = this._layers;\n            var progressiveLayers = this._progressiveLayers;\n\n            var elCountsLastFrame = {};\n            var progressiveElCountsLastFrame = {};\n\n            this.eachBuiltinLayer(function (layer, z) {\n                elCountsLastFrame[z] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            util.each(progressiveLayers, function (layer, idx) {\n                progressiveElCountsLastFrame[idx] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            var progressiveLayerCount = 0;\n            var currentProgressiveLayer;\n            var lastProgressiveKey;\n            var frameCount = 0;\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var zlevel = this._singleCanvas ? 0 : el.zlevel;\n                var layer = layers[zlevel];\n                var elProgress = el.progressive;\n                if (layer) {\n                    layer.elCount++;\n                    layer.__dirty = layer.__dirty || el.__dirty;\n                }\n\n                /////// Update progressive\n                if (elProgress >= 0) {\n                    // Fix wrong progressive sequence problem.\n                    if (lastProgressiveKey !== elProgress) {\n                        lastProgressiveKey = elProgress;\n                        frameCount++;\n                    }\n                    var elFrame = el.__frame = frameCount - 1;\n                    if (!currentProgressiveLayer) {\n                        var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);\n                        currentProgressiveLayer = progressiveLayers[idx];\n                        if (!currentProgressiveLayer) {\n                            currentProgressiveLayer = progressiveLayers[idx] = new Layer(\n                                'progressive', this, this.dpr\n                            );\n                            currentProgressiveLayer.initContext();\n                        }\n                        currentProgressiveLayer.__maxProgress = 0;\n                    }\n                    currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;\n                    currentProgressiveLayer.elCount++;\n\n                    currentProgressiveLayer.__maxProgress = Math.max(\n                        currentProgressiveLayer.__maxProgress, elFrame\n                    );\n\n                    if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {\n                        // Should keep rendering this  layer because progressive rendering is not finished yet\n                        layer.__dirty = true;\n                    }\n                }\n                else {\n                    el.__frame = -1;\n\n                    if (currentProgressiveLayer) {\n                        currentProgressiveLayer.__nextIdxNotProg = i;\n                        progressiveLayerCount++;\n                        currentProgressiveLayer = null;\n                    }\n                }\n            }\n\n            if (currentProgressiveLayer) {\n                progressiveLayerCount++;\n                currentProgressiveLayer.__nextIdxNotProg = i;\n            }\n\n            // 层中的元素数量有发生变化\n            this.eachBuiltinLayer(function (layer, z) {\n                if (elCountsLastFrame[z] !== layer.elCount) {\n                    layer.__dirty = true;\n                }\n            });\n\n            progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);\n            util.each(progressiveLayers, function (layer, idx) {\n                if (progressiveElCountsLastFrame[idx] !== layer.elCount) {\n                    el.__dirty = true;\n                }\n                if (layer.__dirty) {\n                    layer.__progress = 0;\n                }\n            });\n        },\n\n        /**\n         * 清除hover层外所有内容\n         */\n        clear: function () {\n            this.eachBuiltinLayer(this._clearLayer);\n            return this;\n        },\n\n        _clearLayer: function (layer) {\n            layer.clear();\n        },\n\n        /**\n         * 修改指定zlevel的绘制参数\n         *\n         * @param {string} zlevel\n         * @param {Object} config 配置对象\n         * @param {string} [config.clearColor=0] 每次清空画布的颜色\n         * @param {string} [config.motionBlur=false] 是否开启动态模糊\n         * @param {number} [config.lastFrameAlpha=0.7]\n         *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         */\n        configLayer: function (zlevel, config) {\n            if (config) {\n                var layerConfig = this._layerConfig;\n                if (!layerConfig[zlevel]) {\n                    layerConfig[zlevel] = config;\n                }\n                else {\n                    util.merge(layerConfig[zlevel], config, true);\n                }\n\n                var layer = this._layers[zlevel];\n\n                if (layer) {\n                    util.merge(layer, layerConfig[zlevel], true);\n                }\n            }\n        },\n\n        /**\n         * 删除指定层\n         * @param {number} zlevel 层所在的zlevel\n         */\n        delLayer: function (zlevel) {\n            var layers = this._layers;\n            var zlevelList = this._zlevelList;\n            var layer = layers[zlevel];\n            if (!layer) {\n                return;\n            }\n            layer.dom.parentNode.removeChild(layer.dom);\n            delete layers[zlevel];\n\n            zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n        },\n\n        /**\n         * 区域大小变化后重绘\n         */\n        resize: function (width, height) {\n            var domRoot = this._domRoot;\n            // FIXME Why ?\n            domRoot.style.display = 'none';\n\n            // Save input w/h\n            var opts = this._opts;\n            width != null && (opts.width = width);\n            height != null && (opts.height = height);\n\n            width = this._getSize(0);\n            height = this._getSize(1);\n\n            domRoot.style.display = '';\n\n            // 优化没有实际改变的resize\n            if (this._width != width || height != this._height) {\n                domRoot.style.width = width + 'px';\n                domRoot.style.height = height + 'px';\n\n                for (var id in this._layers) {\n                    if (this._layers.hasOwnProperty(id)) {\n                        this._layers[id].resize(width, height);\n                    }\n                }\n                util.each(this._progressiveLayers, function (layer) {\n                    layer.resize(width, height);\n                });\n\n                this.refresh(true);\n            }\n\n            this._width = width;\n            this._height = height;\n\n            return this;\n        },\n\n        /**\n         * 清除单独的一个层\n         * @param {number} zlevel\n         */\n        clearLayer: function (zlevel) {\n            var layer = this._layers[zlevel];\n            if (layer) {\n                layer.clear();\n            }\n        },\n\n        /**\n         * 释放\n         */\n        dispose: function () {\n            this.root.innerHTML = '';\n\n            this.root =\n            this.storage =\n\n            this._domRoot =\n            this._layers = null;\n        },\n\n        /**\n         * Get canvas which has all thing rendered\n         * @param {Object} opts\n         * @param {string} [opts.backgroundColor]\n         */\n        getRenderedCanvas: function (opts) {\n            opts = opts || {};\n            if (this._singleCanvas) {\n                return this._layers[0].dom;\n            }\n\n            var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n            imageLayer.initContext();\n\n            imageLayer.clearColor = opts.backgroundColor;\n            imageLayer.clear();\n\n            var displayList = this.storage.getDisplayList(true);\n\n            var scope = {};\n            var zlevel;\n\n            var self = this;\n            function findAndDrawOtherLayer(smaller, larger) {\n                var zlevelList = self._zlevelList;\n                if (smaller == null) {\n                    smaller = -Infinity;\n                }\n                var intermediateLayer;\n                for (var i = 0; i < zlevelList.length; i++) {\n                    var z = zlevelList[i];\n                    var layer = self._layers[z];\n                    if (!layer.__builtin__ && z > smaller && z < larger) {\n                        intermediateLayer = layer;\n                        break;\n                    }\n                }\n                if (intermediateLayer && intermediateLayer.renderToCanvas) {\n                    imageLayer.ctx.save();\n                    intermediateLayer.renderToCanvas(imageLayer.ctx);\n                    imageLayer.ctx.restore();\n                }\n            }\n            for (var i = 0; i < displayList.length; i++) {\n                var el = displayList[i];\n\n                if (el.zlevel !== zlevel) {\n                    findAndDrawOtherLayer(zlevel, el.zlevel);\n                    zlevel = el.zlevel;\n                }\n                this._doPaintEl(el, imageLayer, true, scope);\n            }\n\n            findAndDrawOtherLayer(zlevel, Infinity);\n\n            return imageLayer.dom;\n        },\n        /**\n         * 获取绘图区域宽度\n         */\n        getWidth: function () {\n            return this._width;\n        },\n\n        /**\n         * 获取绘图区域高度\n         */\n        getHeight: function () {\n            return this._height;\n        },\n\n        _getSize: function (whIdx) {\n            var opts = this._opts;\n            var wh = ['width', 'height'][whIdx];\n            var cwh = ['clientWidth', 'clientHeight'][whIdx];\n            var plt = ['paddingLeft', 'paddingTop'][whIdx];\n            var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n            if (opts[wh] != null && opts[wh] !== 'auto') {\n                return parseFloat(opts[wh]);\n            }\n\n            var root = this.root;\n            // IE8 does not support getComputedStyle, but it use VML.\n            var stl = document.defaultView.getComputedStyle(root);\n\n            return (\n                (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh]))\n                - (parseInt10(stl[plt]) || 0)\n                - (parseInt10(stl[prb]) || 0)\n            ) | 0;\n        },\n\n        pathToImage: function (path, dpr) {\n            dpr = dpr || this.dpr;\n\n            var canvas = document.createElement('canvas');\n            var ctx = canvas.getContext('2d');\n            var rect = path.getBoundingRect();\n            var style = path.style;\n            var shadowBlurSize = style.shadowBlur;\n            var shadowOffsetX = style.shadowOffsetX;\n            var shadowOffsetY = style.shadowOffsetY;\n            var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n\n            var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n            var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n            var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n            var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n            var width = rect.width + leftMargin + rightMargin;\n            var height = rect.height + topMargin + bottomMargin;\n\n            canvas.width = width * dpr;\n            canvas.height = height * dpr;\n\n            ctx.scale(dpr, dpr);\n            ctx.clearRect(0, 0, width, height);\n            ctx.dpr = dpr;\n\n            var pathTransform = {\n                position: path.position,\n                rotation: path.rotation,\n                scale: path.scale\n            };\n            path.position = [leftMargin - rect.x, topMargin - rect.y];\n            path.rotation = 0;\n            path.scale = [1, 1];\n            path.updateTransform();\n            if (path) {\n                path.brush(ctx);\n            }\n\n            var ImageShape = __webpack_require__(1026);\n            var imgShape = new ImageShape({\n                style: {\n                    x: 0,\n                    y: 0,\n                    image: canvas\n                }\n            });\n\n            if (pathTransform.position != null) {\n                imgShape.position = path.position = pathTransform.position;\n            }\n\n            if (pathTransform.rotation != null) {\n                imgShape.rotation = path.rotation = pathTransform.rotation;\n            }\n\n            if (pathTransform.scale != null) {\n                imgShape.scale = path.scale = pathTransform.scale;\n            }\n\n            return imgShape;\n        }\n    };\n\n    module.exports = Painter;\n\n\n\n/***/ }),\n\n/***/ 1117:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var util = __webpack_require__(970);\n    var config = __webpack_require__(999);\n    var Style = __webpack_require__(1030);\n    var Pattern = __webpack_require__(1036);\n\n    function returnFalse() {\n        return false;\n    }\n\n    /**\n     * 创建dom\n     *\n     * @inner\n     * @param {string} id dom id 待用\n     * @param {string} type dom type，such as canvas, div etc.\n     * @param {Painter} painter painter instance\n     * @param {number} number\n     */\n    function createDom(id, type, painter, dpr) {\n        var newDom = document.createElement(type);\n        var width = painter.getWidth();\n        var height = painter.getHeight();\n\n        var newDomStyle = newDom.style;\n        // 没append呢，请原谅我这样写，清晰~\n        newDomStyle.position = 'absolute';\n        newDomStyle.left = 0;\n        newDomStyle.top = 0;\n        newDomStyle.width = width + 'px';\n        newDomStyle.height = height + 'px';\n        newDom.width = width * dpr;\n        newDom.height = height * dpr;\n\n        // id不作为索引用，避免可能造成的重名，定义为私有属性\n        newDom.setAttribute('data-zr-dom-id', id);\n        return newDom;\n    }\n\n    /**\n     * @alias module:zrender/Layer\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @param {string} id\n     * @param {module:zrender/Painter} painter\n     * @param {number} [dpr]\n     */\n    var Layer = function(id, painter, dpr) {\n        var dom;\n        dpr = dpr || config.devicePixelRatio;\n        if (typeof id === 'string') {\n            dom = createDom(id, 'canvas', painter, dpr);\n        }\n        // Not using isDom because in node it will return false\n        else if (util.isObject(id)) {\n            dom = id;\n            id = dom.id;\n        }\n        this.id = id;\n        this.dom = dom;\n\n        var domStyle = dom.style;\n        if (domStyle) { // Not in node\n            dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n            domStyle['-webkit-user-select'] = 'none';\n            domStyle['user-select'] = 'none';\n            domStyle['-webkit-touch-callout'] = 'none';\n            domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n            domStyle['padding'] = 0;\n            domStyle['margin'] = 0;\n            domStyle['border-width'] = 0;\n        }\n\n        this.domBack = null;\n        this.ctxBack = null;\n\n        this.painter = painter;\n\n        this.config = null;\n\n        // Configs\n        /**\n         * 每次清空画布的颜色\n         * @type {string}\n         * @default 0\n         */\n        this.clearColor = 0;\n        /**\n         * 是否开启动态模糊\n         * @type {boolean}\n         * @default false\n         */\n        this.motionBlur = false;\n        /**\n         * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         * @type {number}\n         * @default 0.7\n         */\n        this.lastFrameAlpha = 0.7;\n\n        /**\n         * Layer dpr\n         * @type {number}\n         */\n        this.dpr = dpr;\n    };\n\n    Layer.prototype = {\n\n        constructor: Layer,\n\n        elCount: 0,\n\n        __dirty: true,\n\n        initContext: function () {\n            this.ctx = this.dom.getContext('2d');\n            this.ctx.__currentValues = {};\n            this.ctx.dpr = this.dpr;\n        },\n\n        createBackBuffer: function () {\n            var dpr = this.dpr;\n\n            this.domBack = createDom('back-' + this.id, 'canvas', this.painter, dpr);\n            this.ctxBack = this.domBack.getContext('2d');\n            this.ctxBack.__currentValues = {};\n\n            if (dpr != 1) {\n                this.ctxBack.scale(dpr, dpr);\n            }\n        },\n\n        /**\n         * @param  {number} width\n         * @param  {number} height\n         */\n        resize: function (width, height) {\n            var dpr = this.dpr;\n\n            var dom = this.dom;\n            var domStyle = dom.style;\n            var domBack = this.domBack;\n\n            domStyle.width = width + 'px';\n            domStyle.height = height + 'px';\n\n            dom.width = width * dpr;\n            dom.height = height * dpr;\n\n            if (domBack) {\n                domBack.width = width * dpr;\n                domBack.height = height * dpr;\n\n                if (dpr != 1) {\n                    this.ctxBack.scale(dpr, dpr);\n                }\n            }\n        },\n\n        /**\n         * 清空该层画布\n         * @param {boolean} clearAll Clear all with out motion blur\n         */\n        clear: function (clearAll) {\n            var dom = this.dom;\n            var ctx = this.ctx;\n            var width = dom.width;\n            var height = dom.height;\n\n            var clearColor = this.clearColor;\n            var haveMotionBLur = this.motionBlur && !clearAll;\n            var lastFrameAlpha = this.lastFrameAlpha;\n\n            var dpr = this.dpr;\n\n            if (haveMotionBLur) {\n                if (!this.domBack) {\n                    this.createBackBuffer();\n                }\n\n                this.ctxBack.globalCompositeOperation = 'copy';\n                this.ctxBack.drawImage(\n                    dom, 0, 0,\n                    width / dpr,\n                    height / dpr\n                );\n            }\n\n            ctx.clearRect(0, 0, width, height);\n            if (clearColor) {\n                var clearColorGradientOrPattern;\n                // Gradient\n                if (clearColor.colorStops) {\n                    // Cache canvas gradient\n                    clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n                        x: 0,\n                        y: 0,\n                        width: width,\n                        height: height\n                    });\n\n                    clearColor.__canvasGradient = clearColorGradientOrPattern;\n                }\n                // Pattern\n                else if (clearColor.image) {\n                    clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n                }\n                ctx.save();\n                ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n                ctx.fillRect(0, 0, width, height);\n                ctx.restore();\n            }\n\n            if (haveMotionBLur) {\n                var domBack = this.domBack;\n                ctx.save();\n                ctx.globalAlpha = lastFrameAlpha;\n                ctx.drawImage(domBack, 0, 0, width, height);\n                ctx.restore();\n            }\n        }\n    };\n\n    module.exports = Layer;\n\n\n/***/ }),\n\n/***/ 1118:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var Gradient = __webpack_require__(1009);\n    module.exports = function (ecModel) {\n        function encodeColor(seriesModel) {\n            var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\n            var data = seriesModel.getData();\n            var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n                || seriesModel.getColorFromPalette(seriesModel.get('name'));  // Default color\n\n            // FIXME Set color function or use the platte color\n            data.setVisual('color', color);\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof color === 'function' && !(color instanceof Gradient)) {\n                    data.each(function (idx) {\n                        data.setItemVisual(\n                            idx, 'color', color(seriesModel.getDataParams(idx))\n                        );\n                    });\n                }\n\n                // itemStyle in each data item\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var color = itemModel.get(colorAccessPath, true);\n                    if (color != null) {\n                        data.setItemVisual(idx, 'color', color);\n                    }\n                });\n            }\n        }\n        ecModel.eachRawSeries(encodeColor);\n    };\n\n\n/***/ }),\n\n/***/ 1119:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var graphic = __webpack_require__(972);\n    var zrUtil = __webpack_require__(970);\n    var PI = Math.PI;\n    /**\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Object} [opts]\n     * @param {string} [opts.text]\n     * @param {string} [opts.color]\n     * @param {string} [opts.textColor]\n     * @return {module:zrender/Element}\n     */\n    module.exports = function (api, opts) {\n        opts = opts || {};\n        zrUtil.defaults(opts, {\n            text: 'loading',\n            color: '#c23531',\n            textColor: '#000',\n            maskColor: 'rgba(255, 255, 255, 0.8)',\n            zlevel: 0\n        });\n        var mask = new graphic.Rect({\n            style: {\n                fill: opts.maskColor\n            },\n            zlevel: opts.zlevel,\n            z: 10000\n        });\n        var arc = new graphic.Arc({\n            shape: {\n                startAngle: -PI / 2,\n                endAngle: -PI / 2 + 0.1,\n                r: 10\n            },\n            style: {\n                stroke: opts.color,\n                lineCap: 'round',\n                lineWidth: 5\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n        var labelRect = new graphic.Rect({\n            style: {\n                fill: 'none',\n                text: opts.text,\n                textPosition: 'right',\n                textDistance: 10,\n                textFill: opts.textColor\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n\n        arc.animateShape(true)\n            .when(1000, {\n                endAngle: PI * 3 / 2\n            })\n            .start('circularInOut');\n        arc.animateShape(true)\n            .when(1000, {\n                startAngle: PI * 3 / 2\n            })\n            .delay(300)\n            .start('circularInOut');\n\n        var group = new graphic.Group();\n        group.add(arc);\n        group.add(labelRect);\n        group.add(mask);\n        // Inject resize\n        group.resize = function () {\n            var cx = api.getWidth() / 2;\n            var cy = api.getHeight() / 2;\n            arc.setShape({\n                cx: cx,\n                cy: cy\n            });\n            var r = arc.shape.r;\n            labelRect.setShape({\n                x: cx - r,\n                y: cy - r,\n                width: r * 2,\n                height: r * 2\n            });\n\n            mask.setShape({\n                x: 0,\n                y: 0,\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n        };\n        group.resize();\n        return group;\n    };\n\n\n/***/ }),\n\n/***/ 1120:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n\n// FIXME only one data\n\n\n    var zrUtil = __webpack_require__(970);\n    var Scale = __webpack_require__(1003);\n\n    var scaleProto = Scale.prototype;\n\n    var OrdinalScale = Scale.extend({\n\n        type: 'ordinal',\n\n        init: function (data, extent) {\n            this._data = data;\n            this._extent = extent || [0, data.length - 1];\n        },\n\n        parse: function (val) {\n            return typeof val === 'string'\n                ? zrUtil.indexOf(this._data, val)\n                // val might be float.\n                : Math.round(val);\n        },\n\n        contain: function (rank) {\n            rank = this.parse(rank);\n            return scaleProto.contain.call(this, rank)\n                && this._data[rank] != null;\n        },\n\n        /**\n         * Normalize given rank or name to linear [0, 1]\n         * @param {number|string} [val]\n         * @return {number}\n         */\n        normalize: function (val) {\n            return scaleProto.normalize.call(this, this.parse(val));\n        },\n\n        scale: function (val) {\n            return Math.round(scaleProto.scale.call(this, val));\n        },\n\n        /**\n         * @return {Array}\n         */\n        getTicks: function () {\n            var ticks = [];\n            var extent = this._extent;\n            var rank = extent[0];\n\n            while (rank <= extent[1]) {\n                ticks.push(rank);\n                rank++;\n            }\n\n            return ticks;\n        },\n\n        /**\n         * Get item on rank n\n         * @param {number} n\n         * @return {string}\n         */\n        getLabel: function (n) {\n            return this._data[n];\n        },\n\n        /**\n         * @return {number}\n         */\n        count: function () {\n            return this._extent[1] - this._extent[0] + 1;\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, false));\n        },\n\n        niceTicks: zrUtil.noop,\n        niceExtent: zrUtil.noop\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    OrdinalScale.create = function () {\n        return new OrdinalScale();\n    };\n\n    module.exports = OrdinalScale;\n\n\n/***/ }),\n\n/***/ 1121:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Interval scale\n * @module echarts/coord/scale/Time\n */\n\n\n\n    // [About UTC and local time zone]:\n    // In most cases, `number.parseDate` will treat input data string as local time\n    // (except time zone is specified in time string). And `format.formateTime` returns\n    // local time by default. option.useUTC is false by default. This design have\n    // concidered these common case:\n    // (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n    // in local time by default.\n    // (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n    // as its original time, without any time difference.\n\n    var zrUtil = __webpack_require__(970);\n    var numberUtil = __webpack_require__(973);\n    var formatUtil = __webpack_require__(976);\n    var scaleHelper = __webpack_require__(1040);\n\n    var IntervalScale = __webpack_require__(1011);\n\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var mathCeil = Math.ceil;\n    var mathFloor = Math.floor;\n    var ONE_SECOND = 1000;\n    var ONE_MINUTE = ONE_SECOND * 60;\n    var ONE_HOUR = ONE_MINUTE * 60;\n    var ONE_DAY = ONE_HOUR * 24;\n\n    // FIXME 公用？\n    var bisect = function (a, x, lo, hi) {\n        while (lo < hi) {\n            var mid = lo + hi >>> 1;\n            if (a[mid][2] < x) {\n                lo = mid + 1;\n            }\n            else {\n                hi  = mid;\n            }\n        }\n        return lo;\n    };\n\n    /**\n     * @alias module:echarts/coord/scale/Time\n     * @constructor\n     */\n    var TimeScale = IntervalScale.extend({\n        type: 'time',\n\n        /**\n         * @override\n         */\n        getLabel: function (val) {\n            var stepLvl = this._stepLvl;\n\n            var date = new Date(val);\n\n            return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n        },\n\n        /**\n         * @override\n         */\n        niceExtent: function (opt) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                // Expand extent\n                extent[0] -= ONE_DAY;\n                extent[1] += ONE_DAY;\n            }\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (extent[1] === -Infinity && extent[0] === Infinity) {\n                var d = new Date();\n                extent[1] = +new Date(d.getFullYear(), d.getMonth(), d.getDate());\n                extent[0] = extent[1] - ONE_DAY;\n            }\n\n            this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!opt.fixMin) {\n                extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n            }\n            if (!opt.fixMax) {\n                extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n            }\n        },\n\n        /**\n         * @override\n         */\n        niceTicks: function (approxTickNum, minInterval, maxInterval) {\n            approxTickNum = approxTickNum || 10;\n\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            var approxInterval = span / approxTickNum;\n\n            if (minInterval != null && approxInterval < minInterval) {\n                approxInterval = minInterval;\n            }\n            if (maxInterval != null && approxInterval > maxInterval) {\n                approxInterval = maxInterval;\n            }\n\n            var scaleLevelsLen = scaleLevels.length;\n            var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n\n            var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n            var interval = level[2];\n            // Same with interval scale if span is much larger than 1 year\n            if (level[0] === 'year') {\n                var yearSpan = span / interval;\n\n                // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n                // var niceYearSpan = numberUtil.nice(yearSpan, false);\n                var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n\n                interval *= yearStep;\n            }\n\n            var timezoneOffset = this.getSetting('useUTC')\n                ? 0 : (new Date(+extent[0] || +extent[1])).getTimezoneOffset() * 60 * 1000;\n            var niceExtent = [\n                Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset),\n                Math.round(mathFloor((extent[1] - timezoneOffset) / interval) * interval + timezoneOffset)\n            ];\n\n            scaleHelper.fixExtent(niceExtent, extent);\n\n            this._stepLvl = level;\n            // Interval will be used in getTicks\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        parse: function (val) {\n            // val might be float.\n            return +numberUtil.parseDate(val);\n        }\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        TimeScale.prototype[methodName] = function (val) {\n            return intervalScaleProto[methodName].call(this, this.parse(val));\n        };\n    });\n\n    // Steps from d3\n    var scaleLevels = [\n        // Format       step    interval\n        ['hh:mm:ss',    1,      ONE_SECOND],           // 1s\n        ['hh:mm:ss',    5,      ONE_SECOND * 5],       // 5s\n        ['hh:mm:ss',    10,     ONE_SECOND * 10],      // 10s\n        ['hh:mm:ss',    15,     ONE_SECOND * 15],      // 15s\n        ['hh:mm:ss',    30,     ONE_SECOND * 30],      // 30s\n        ['hh:mm\\nMM-dd',1,      ONE_MINUTE],          // 1m\n        ['hh:mm\\nMM-dd',5,      ONE_MINUTE * 5],      // 5m\n        ['hh:mm\\nMM-dd',10,     ONE_MINUTE * 10],     // 10m\n        ['hh:mm\\nMM-dd',15,     ONE_MINUTE * 15],     // 15m\n        ['hh:mm\\nMM-dd',30,     ONE_MINUTE * 30],     // 30m\n        ['hh:mm\\nMM-dd',1,      ONE_HOUR],        // 1h\n        ['hh:mm\\nMM-dd',2,      ONE_HOUR * 2],    // 2h\n        ['hh:mm\\nMM-dd',6,      ONE_HOUR * 6],    // 6h\n        ['hh:mm\\nMM-dd',12,     ONE_HOUR * 12],   // 12h\n        ['MM-dd\\nyyyy', 1,      ONE_DAY],   // 1d\n        ['week',        7,      ONE_DAY * 7],        // 7d\n        ['month',       1,      ONE_DAY * 31],       // 1M\n        ['quarter',     3,      ONE_DAY * 380 / 4],  // 3M\n        ['half-year',   6,      ONE_DAY * 380 / 2],  // 6M\n        ['year',        1,      ONE_DAY * 380]       // 1Y\n    ];\n\n    /**\n     * @param {module:echarts/model/Model}\n     * @return {module:echarts/scale/Time}\n     */\n    TimeScale.create = function (model) {\n        return new TimeScale({useUTC: model.ecModel.get('useUTC')});\n    };\n\n    module.exports = TimeScale;\n\n\n/***/ }),\n\n/***/ 1122:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Log scale\n * @module echarts/scale/Log\n */\n\n\n    var zrUtil = __webpack_require__(970);\n    var Scale = __webpack_require__(1003);\n    var numberUtil = __webpack_require__(973);\n\n    // Use some method of IntervalScale\n    var IntervalScale = __webpack_require__(1011);\n\n    var scaleProto = Scale.prototype;\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var getPrecisionSafe = numberUtil.getPrecisionSafe;\n    var roundingErrorFix = numberUtil.round;\n\n    var mathFloor = Math.floor;\n    var mathCeil = Math.ceil;\n    var mathPow = Math.pow;\n\n    var mathLog = Math.log;\n\n    var LogScale = Scale.extend({\n\n        type: 'log',\n\n        base: 10,\n\n        $constructor: function () {\n            Scale.apply(this, arguments);\n            this._originalScale = new IntervalScale();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            var originalScale = this._originalScale;\n            var extent = this._extent;\n            var originalExtent = originalScale.getExtent();\n\n            return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n                var powVal = numberUtil.round(mathPow(this.base, val));\n\n                // Fix #4158\n                powVal = (val === extent[0] && originalScale.__fixMin)\n                    ? fixRoundingError(powVal, originalExtent[0])\n                    : powVal;\n                powVal = (val === extent[1] && originalScale.__fixMax)\n                    ? fixRoundingError(powVal, originalExtent[1])\n                    : powVal;\n\n                return powVal;\n            }, this);\n        },\n\n        /**\n         * @param {number} val\n         * @return {string}\n         */\n        getLabel: intervalScaleProto.getLabel,\n\n        /**\n         * @param  {number} val\n         * @return {number}\n         */\n        scale: function (val) {\n            val = scaleProto.scale.call(this, val);\n            return mathPow(this.base, val);\n        },\n\n        /**\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var base = this.base;\n            start = mathLog(start) / mathLog(base);\n            end = mathLog(end) / mathLog(base);\n            intervalScaleProto.setExtent.call(this, start, end);\n        },\n\n        /**\n         * @return {number} end\n         */\n        getExtent: function () {\n            var base = this.base;\n            var extent = scaleProto.getExtent.call(this);\n            extent[0] = mathPow(base, extent[0]);\n            extent[1] = mathPow(base, extent[1]);\n\n            // Fix #4158\n            var originalScale = this._originalScale;\n            var originalExtent = originalScale.getExtent();\n            originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n            originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n\n            return extent;\n        },\n\n        /**\n         * @param  {Array.<number>} extent\n         */\n        unionExtent: function (extent) {\n            this._originalScale.unionExtent(extent);\n\n            var base = this.base;\n            extent[0] = mathLog(extent[0]) / mathLog(base);\n            extent[1] = mathLog(extent[1]) / mathLog(base);\n            scaleProto.unionExtent.call(this, extent);\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, true, function (val) {\n                return val > 0;\n            }));\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         * @param  {number} [approxTickNum = 10] Given approx tick number\n         */\n        niceTicks: function (approxTickNum) {\n            approxTickNum = approxTickNum || 10;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (span === Infinity || span <= 0) {\n                return;\n            }\n\n            var interval = numberUtil.quantity(span);\n            var err = approxTickNum / span * interval;\n\n            // Filter ticks to get closer to the desired count.\n            if (err <= 0.5) {\n                interval *= 10;\n            }\n\n            // Interval should be integer\n            while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n                interval *= 10;\n            }\n\n            var niceExtent = [\n                numberUtil.round(mathCeil(extent[0] / interval) * interval),\n                numberUtil.round(mathFloor(extent[1] / interval) * interval)\n            ];\n\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @override\n         */\n        niceExtent: function (opt) {\n            intervalScaleProto.niceExtent.call(this, opt);\n\n            var originalScale = this._originalScale;\n            originalScale.__fixMin = opt.fixMin;\n            originalScale.__fixMax = opt.fixMax;\n        }\n\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        LogScale.prototype[methodName] = function (val) {\n            val = mathLog(val) / mathLog(this.base);\n            return scaleProto[methodName].call(this, val);\n        };\n    });\n\n    LogScale.create = function () {\n        return new LogScale();\n    };\n\n    function fixRoundingError(val, originalVal) {\n        return roundingErrorFix(val, getPrecisionSafe(originalVal));\n    }\n\n    module.exports = LogScale;\n\n\n/***/ }),\n\n/***/ 1123:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var createListFromArray = __webpack_require__(1007);\n    var symbolUtil = __webpack_require__(995);\n    var axisHelper = __webpack_require__(987);\n    var axisModelCommonMixin = __webpack_require__(1017);\n    var Model = __webpack_require__(978);\n    var util = __webpack_require__(970);\n\n    module.exports = {\n        /**\n         * Create a muti dimension List structure from seriesModel.\n         * @param  {module:echarts/model/Model} seriesModel\n         * @return {module:echarts/data/List} list\n         */\n        createList: function (seriesModel) {\n            var data = seriesModel.get('data');\n            return createListFromArray(data, seriesModel, seriesModel.ecModel);\n        },\n\n        /**\n         * @see {module:echarts/data/helper/completeDimensions}\n         */\n        completeDimensions: __webpack_require__(994),\n\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @see http://echarts.baidu.com/option.html#series-scatter.symbol\n         * @param {string} symbolDesc\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: symbolUtil.createSymbol,\n\n        /**\n         * Create scale\n         * @param {Array.<number>} dataExtent\n         * @param {Object|module:echarts/Model} option\n         */\n        createScale: function (dataExtent, option) {\n            var axisModel = option;\n            if (!(option instanceof Model)) {\n                axisModel = new Model(option);\n                util.mixin(axisModel, axisModelCommonMixin);\n            }\n\n            var scale = axisHelper.createScaleByModel(axisModel);\n            scale.setExtent(dataExtent[0], dataExtent[1]);\n\n            axisHelper.niceScaleExtent(scale, axisModel);\n            return scale;\n        },\n\n        /**\n         * Mixin common methods to axis model,\n         *\n         * Inlcude methods\n         * `getFormattedLabels() => Array.<string>`\n         * `getCategories() => Array.<string>`\n         * `getMin(origin: boolean) => number`\n         * `getMax(origin: boolean) => number`\n         * `getNeedCrossZero() => boolean`\n         * `setRange(start: number, end: number)`\n         * `resetRange()`\n         */\n        mixinAxisModelCommonMethods: function (Model) {\n            util.mixin(Model, axisModelCommonMixin);\n        }\n    };\n\n\n/***/ }),\n\n/***/ 1124:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(970);\n    var modelUtil = __webpack_require__(974);\n    var modelHelper = __webpack_require__(1004);\n    var findPointFromSeries = __webpack_require__(1041);\n\n    var each = zrUtil.each;\n    var curry = zrUtil.curry;\n    var get = modelUtil.makeGetter();\n\n    /**\n     * Basic logic: check all axis, if they do not demand show/highlight,\n     * then hide/downplay them.\n     *\n     * @param {Object} coordSysAxesInfo\n     * @param {Object} payload\n     * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n     * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n     *              trigger axisPointer and tooltip.\n     * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n     *              trigger axisPointer and tooltip.\n     * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n     * @param {Object} [payload.dataIndex] finder, restrict target axes.\n     * @param {Object} [payload.axesInfo] finder, restrict target axes.\n     *        [{\n     *          axisDim: 'x'|'y'|'angle'|...,\n     *          axisIndex: ...,\n     *          value: ...\n     *        }, ...]\n     * @param {Function} [payload.dispatchAction]\n     * @param {Object} [payload.tooltipOption]\n     * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n     *        which can be specified in dispatchAction\n     * @param {module:echarts/model/Global} ecModel\n     * @param {module:echarts/ExtensionAPI} api\n     * @return {Object} content of event obj for echarts.connect.\n     */\n    function axisTrigger(payload, ecModel, api) {\n        var currTrigger = payload.currTrigger;\n        var point = [payload.x, payload.y];\n        var finder = payload;\n        var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n        var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n        // Pending\n        // See #6121. But we are not able to reproduce it yet.\n        if (!coordSysAxesInfo) {\n            return;\n        }\n\n        if (illegalPoint(point)) {\n            // Used in the default behavior of `connection`: use the sample seriesIndex\n            // and dataIndex. And also used in the tooltipView trigger.\n            point = findPointFromSeries({\n                seriesIndex: finder.seriesIndex,\n                // Do not use dataIndexInside from other ec instance.\n                // FIXME: auto detect it?\n                dataIndex: finder.dataIndex\n            }, ecModel).point;\n        }\n        var isIllegalPoint = illegalPoint(point);\n\n        // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n        // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n        // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n        // and dataIndex.\n        var inputAxesInfo = finder.axesInfo;\n\n        var axesInfo = coordSysAxesInfo.axesInfo;\n        var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n        var outputFinder = {};\n\n        var showValueMap = {};\n        var dataByCoordSys = {list: [], map: {}};\n        var updaters = {\n            showPointer: curry(showPointer, showValueMap),\n            showTooltip: curry(showTooltip, dataByCoordSys)\n        };\n\n        // Process for triggered axes.\n        each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n            // If a point given, it must be contained by the coordinate system.\n            var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n\n            each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n                var axis = axisInfo.axis;\n                var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo);\n                // If no inputAxesInfo, no axis is restricted.\n                if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n                    var val = inputAxisInfo && inputAxisInfo.value;\n                    if (val == null && !isIllegalPoint) {\n                        val = axis.pointToData(point);\n                    }\n                    val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n                }\n            });\n        });\n\n        // Process for linked axes.\n        var linkTriggers = {};\n        each(axesInfo, function (tarAxisInfo, tarKey) {\n            var linkGroup = tarAxisInfo.linkGroup;\n\n            // If axis has been triggered in the previous stage, it should not be triggered by link.\n            if (linkGroup && !showValueMap[tarKey]) {\n                each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n                    var srcValItem = showValueMap[srcKey];\n                    // If srcValItem exist, source axis is triggered, so link to target axis.\n                    if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n                        var val = srcValItem.value;\n                        linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(\n                            val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo)\n                        )));\n                        linkTriggers[tarAxisInfo.key] = val;\n                    }\n                });\n            }\n        });\n        each(linkTriggers, function (val, tarKey) {\n            processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n        });\n\n        updateModelActually(showValueMap, axesInfo, outputFinder);\n        dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n        dispatchHighDownActually(axesInfo, dispatchAction, api);\n\n        return outputFinder;\n    }\n\n    function processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n        var axis = axisInfo.axis;\n\n        if (axis.scale.isBlank() || !axis.containData(newValue)) {\n            return;\n        }\n\n        if (!axisInfo.involveSeries) {\n            updaters.showPointer(axisInfo, newValue);\n            return;\n        }\n\n        // Heavy calculation. So put it after axis.containData checking.\n        var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n        var payloadBatch = payloadInfo.payloadBatch;\n        var snapToValue = payloadInfo.snapToValue;\n\n        // Fill content of event obj for echarts.connect.\n        // By defualt use the first involved series data as a sample to connect.\n        if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n            zrUtil.extend(outputFinder, payloadBatch[0]);\n        }\n\n        // If no linkSource input, this process is for collecting link\n        // target, where snap should not be accepted.\n        if (!dontSnap && axisInfo.snap) {\n            if (axis.containData(snapToValue) && snapToValue != null) {\n                newValue = snapToValue;\n            }\n        }\n\n        updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder);\n        // Tooltip should always be snapToValue, otherwise there will be\n        // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n        updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n    }\n\n    function buildPayloadsBySeries(value, axisInfo) {\n        var axis = axisInfo.axis;\n        var dim = axis.dim;\n        var snapToValue = value;\n        var payloadBatch = [];\n        var minDist = Number.MAX_VALUE;\n        var minDiff = -1;\n\n        each(axisInfo.seriesModels, function (series, idx) {\n            var dataDim = series.coordDimToDataDim(dim);\n            var seriesNestestValue;\n            var dataIndices;\n\n            if (series.getAxisTooltipData) {\n                var result = series.getAxisTooltipData(dataDim, value, axis);\n                dataIndices = result.dataIndices;\n                seriesNestestValue = result.nestestValue;\n            }\n            else {\n                dataIndices = series.getData().indicesOfNearest(\n                    dataDim[0],\n                    value,\n                    // Add a threshold to avoid find the wrong dataIndex\n                    // when data length is not same.\n                    false, axis.type === 'category' ? 0.5 : null\n                );\n                if (!dataIndices.length) {\n                    return;\n                }\n                seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n            }\n\n            if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n                return;\n            }\n\n            var diff = value - seriesNestestValue;\n            var dist = Math.abs(diff);\n            // Consider category case\n            if (dist <= minDist) {\n                if (dist < minDist || (diff >= 0 && minDiff < 0)) {\n                    minDist = dist;\n                    minDiff = diff;\n                    snapToValue = seriesNestestValue;\n                    payloadBatch.length = 0;\n                }\n                each(dataIndices, function (dataIndex) {\n                    payloadBatch.push({\n                        seriesIndex: series.seriesIndex,\n                        dataIndexInside: dataIndex,\n                        dataIndex: series.getData().getRawIndex(dataIndex)\n                    });\n                });\n            }\n        });\n\n        return {\n            payloadBatch: payloadBatch,\n            snapToValue: snapToValue\n        };\n    }\n\n    function showPointer(showValueMap, axisInfo, value, payloadBatch) {\n        showValueMap[axisInfo.key] = {value: value, payloadBatch: payloadBatch};\n    }\n\n    function showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n        var payloadBatch = payloadInfo.payloadBatch;\n        var axis = axisInfo.axis;\n        var axisModel = axis.model;\n        var axisPointerModel = axisInfo.axisPointerModel;\n\n        // If no data, do not create anything in dataByCoordSys,\n        // whose length will be used to judge whether dispatch action.\n        if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n            return;\n        }\n\n        var coordSysModel = axisInfo.coordSys.model;\n        var coordSysKey = modelHelper.makeKey(coordSysModel);\n        var coordSysItem = dataByCoordSys.map[coordSysKey];\n        if (!coordSysItem) {\n            coordSysItem = dataByCoordSys.map[coordSysKey] = {\n                coordSysId: coordSysModel.id,\n                coordSysIndex: coordSysModel.componentIndex,\n                coordSysType: coordSysModel.type,\n                coordSysMainType: coordSysModel.mainType,\n                dataByAxis: []\n            };\n            dataByCoordSys.list.push(coordSysItem);\n        }\n\n        coordSysItem.dataByAxis.push({\n            axisDim: axis.dim,\n            axisIndex: axisModel.componentIndex,\n            axisType: axisModel.type,\n            axisId: axisModel.id,\n            value: value,\n            // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n            // depends that all models have been updated. So it should not be performed\n            // here. Considering axisPointerModel used here is volatile, which is hard\n            // to be retrieve in TooltipView, we prepare parameters here.\n            valueLabelOpt: {\n                precision: axisPointerModel.get('label.precision'),\n                formatter: axisPointerModel.get('label.formatter')\n            },\n            seriesDataIndices: payloadBatch.slice()\n        });\n    }\n\n    function updateModelActually(showValueMap, axesInfo, outputFinder) {\n        var outputAxesInfo = outputFinder.axesInfo = [];\n        // Basic logic: If no 'show' required, 'hide' this axisPointer.\n        each(axesInfo, function (axisInfo, key) {\n            var option = axisInfo.axisPointerModel.option;\n            var valItem = showValueMap[key];\n\n            if (valItem) {\n                !axisInfo.useHandle && (option.status = 'show');\n                option.value = valItem.value;\n                // For label formatter param and highlight.\n                option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n            }\n            // When always show (e.g., handle used), remain\n            // original value and status.\n            else {\n                // If hide, value still need to be set, consider\n                // click legend to toggle axis blank.\n                !axisInfo.useHandle && (option.status = 'hide');\n            }\n\n            // If status is 'hide', should be no info in payload.\n            option.status === 'show' && outputAxesInfo.push({\n                axisDim: axisInfo.axis.dim,\n                axisIndex: axisInfo.axis.model.componentIndex,\n                value: option.value\n            });\n        });\n    }\n\n    function dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n        // Basic logic: If no showTip required, hideTip will be dispatched.\n        if (illegalPoint(point) || !dataByCoordSys.list.length) {\n            dispatchAction({type: 'hideTip'});\n            return;\n        }\n\n        // In most case only one axis (or event one series is used). It is\n        // convinient to fetch payload.seriesIndex and payload.dataIndex\n        // dirtectly. So put the first seriesIndex and dataIndex of the first\n        // axis on the payload.\n        var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n\n        dispatchAction({\n            type: 'showTip',\n            escapeConnect: true,\n            x: point[0],\n            y: point[1],\n            tooltipOption: payload.tooltipOption,\n            position: payload.position,\n            dataIndexInside: sampleItem.dataIndexInside,\n            dataIndex: sampleItem.dataIndex,\n            seriesIndex: sampleItem.seriesIndex,\n            dataByCoordSys: dataByCoordSys.list\n        });\n    }\n\n    function dispatchHighDownActually(axesInfo, dispatchAction, api) {\n        // FIXME\n        // highlight status modification shoule be a stage of main process?\n        // (Consider confilct (e.g., legend and axisPointer) and setOption)\n\n        var zr = api.getZr();\n        var highDownKey = 'axisPointerLastHighlights';\n        var lastHighlights = get(zr)[highDownKey] || {};\n        var newHighlights = get(zr)[highDownKey] = {};\n\n        // Update highlight/downplay status according to axisPointer model.\n        // Build hash map and remove duplicate incidentally.\n        each(axesInfo, function (axisInfo, key) {\n            var option = axisInfo.axisPointerModel.option;\n            option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n                var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n                newHighlights[key] = batchItem;\n            });\n        });\n\n        // Diff.\n        var toHighlight = [];\n        var toDownplay = [];\n        zrUtil.each(lastHighlights, function (batchItem, key) {\n            !newHighlights[key] && toDownplay.push(batchItem);\n        });\n        zrUtil.each(newHighlights, function (batchItem, key) {\n            !lastHighlights[key] && toHighlight.push(batchItem);\n        });\n\n        toDownplay.length && api.dispatchAction({\n            type: 'downplay', escapeConnect: true, batch: toDownplay\n        });\n        toHighlight.length && api.dispatchAction({\n            type: 'highlight', escapeConnect: true, batch: toHighlight\n        });\n    }\n\n    function findInputAxisInfo(inputAxesInfo, axisInfo) {\n        for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n            var inputAxisInfo = inputAxesInfo[i];\n            if (axisInfo.axis.dim === inputAxisInfo.axisDim\n                && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex\n            ) {\n                return inputAxisInfo;\n            }\n        }\n    }\n\n    function makeMapperParam(axisInfo) {\n        var axisModel = axisInfo.axis.model;\n        var item = {};\n        var dim = item.axisDim = axisInfo.axis.dim;\n        item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n        item.axisName = item[dim + 'AxisName'] = axisModel.name;\n        item.axisId = item[dim + 'AxisId'] = axisModel.id;\n        return item;\n    }\n\n    function illegalPoint(point) {\n        return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n    }\n\n    module.exports = axisTrigger;\n\n\n/***/ }),\n\n/***/ 1125:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var echarts = __webpack_require__(971);\n\n    var AxisPointerModel = echarts.extendComponentModel({\n\n        type: 'axisPointer',\n\n        coordSysAxesInfo: null,\n\n        defaultOption: {\n            // 'auto' means that show when triggered by tooltip or handle.\n            show: 'auto',\n            // 'click' | 'mousemove' | 'none'\n            triggerOn: null, // set default in AxisPonterView.js\n\n            zlevel: 0,\n            z: 50,\n\n            type: 'line',\n            // axispointer triggered by tootip determine snap automatically,\n            // see `modelHelper`.\n            snap: false,\n            triggerTooltip: true,\n\n            value: null,\n            status: null, // Init value depends on whether handle is used.\n\n            // [group0, group1, ...]\n            // Each group can be: {\n            //      mapper: function () {},\n            //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n            //      xAxisId: ...,\n            //      yAxisName: ...,\n            //      angleAxisIndex: ...\n            // }\n            // mapper: can be ignored.\n            //      input: {axisInfo, value}\n            //      output: {axisInfo, value}\n            link: [],\n\n            // Do not set 'auto' here, otherwise global animation: false\n            // will not effect at this axispointer.\n            animation: null,\n            animationDurationUpdate: 200,\n\n            lineStyle: {\n                color: '#aaa',\n                width: 1,\n                type: 'solid'\n            },\n\n            shadowStyle: {\n                color: 'rgba(150,150,150,0.3)'\n            },\n\n            label: {\n                show: true,\n                formatter: null, // string | Function\n                precision: 'auto', // Or a number like 0, 1, 2 ...\n                margin: 3,\n                color: '#fff',\n                padding: [5, 7, 5, 7],\n                backgroundColor: 'auto', // default: axis line color\n                borderColor: null,\n                borderWidth: 0,\n                shadowBlur: 3,\n                shadowColor: '#aaa'\n                // Considering applicability, common style should\n                // better not have shadowOffset.\n                // shadowOffsetX: 0,\n                // shadowOffsetY: 2\n            },\n\n            handle: {\n                show: false,\n                icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z', // jshint ignore:line\n                size: 45,\n                // handle margin is from symbol center to axis, which is stable when circular move.\n                margin: 50,\n                // color: '#1b8bbd'\n                // color: '#2f4554'\n                color: '#333',\n                shadowBlur: 3,\n                shadowColor: '#aaa',\n                shadowOffsetX: 0,\n                shadowOffsetY: 2,\n\n                // For mobile performance\n                throttle: 40\n            }\n        }\n\n    });\n\n    module.exports = AxisPointerModel;\n\n\n\n/***/ }),\n\n/***/ 1126:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var globalListener = __webpack_require__(1042);\n\n    var AxisPonterView = __webpack_require__(971).extendComponentView({\n\n        type: 'axisPointer',\n\n        render: function (globalAxisPointerModel, ecModel, api) {\n            var globalTooltipModel = ecModel.getComponent('tooltip');\n            var triggerOn = globalAxisPointerModel.get('triggerOn')\n                || (globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click');\n\n            // Register global listener in AxisPointerView to enable\n            // AxisPointerView to be independent to Tooltip.\n            globalListener.register(\n                'axisPointer',\n                api,\n                function (currTrigger, e, dispatchAction) {\n                    // If 'none', it is not controlled by mouse totally.\n                    if (triggerOn !== 'none'\n                        && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)\n                    ) {\n                        dispatchAction({\n                            type: 'updateAxisPointer',\n                            currTrigger: currTrigger,\n                            x: e && e.offsetX,\n                            y: e && e.offsetY\n                        });\n                    }\n                }\n            );\n        },\n\n        /**\n         * @override\n         */\n        remove: function (ecModel, api) {\n            globalListener.disopse(api.getZr(), 'axisPointer');\n            AxisPonterView.superApply(this._model, 'remove', arguments);\n        },\n\n        /**\n         * @override\n         */\n        dispose: function (ecModel, api) {\n            globalListener.unregister('axisPointer', api);\n            AxisPonterView.superApply(this._model, 'dispose', arguments);\n        }\n\n    });\n\n\n\n/***/ }),\n\n/***/ 1127:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    __webpack_require__(971).extendComponentModel({\n\n        type: 'tooltip',\n\n        dependencies: ['axisPointer'],\n\n        defaultOption: {\n            zlevel: 0,\n\n            z: 8,\n\n            show: true,\n\n            // tooltip主体内容\n            showContent: true,\n\n            // 'trigger' only works on coordinate system.\n            // 'item' | 'axis' | 'none'\n            trigger: 'item',\n\n            // 'click' | 'mousemove' | 'none'\n            triggerOn: 'mousemove|click',\n\n            alwaysShowContent: false,\n\n            displayMode: 'single', // 'single' | 'multipleByCoordSys'\n\n            // 位置 {Array} | {Function}\n            // position: null\n            // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n            // align: null,\n            // verticalAlign: null,\n\n            // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n            confine: false,\n\n            // 内容格式器：{string}（Template） ¦ {Function}\n            // formatter: null\n\n            showDelay: 0,\n\n            // 隐藏延迟，单位ms\n            hideDelay: 100,\n\n            // 动画变换时间，单位s\n            transitionDuration: 0.4,\n\n            enterable: false,\n\n            // 提示背景颜色，默认为透明度为0.7的黑色\n            backgroundColor: 'rgba(50,50,50,0.7)',\n\n            // 提示边框颜色\n            borderColor: '#333',\n\n            // 提示边框圆角，单位px，默认为4\n            borderRadius: 4,\n\n            // 提示边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n\n            // 提示内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n\n            // Extra css text\n            extraCssText: '',\n\n            // 坐标轴指示器，坐标轴触发有效\n            axisPointer: {\n                // 默认为直线\n                // 可选为：'line' | 'shadow' | 'cross'\n                type: 'line',\n\n                // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n                // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n                // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n                // 极坐标系会默认选择 angle 轴\n                axis: 'auto',\n\n                animation: 'auto',\n                animationDurationUpdate: 200,\n                animationEasingUpdate: 'exponentialOut',\n\n                crossStyle: {\n                    color: '#999',\n                    width: 1,\n                    type: 'dashed',\n\n                    // TODO formatter\n                    textStyle: {}\n                }\n\n                // lineStyle and shadowStyle should not be specified here,\n                // otherwise it will always override those styles on option.axisPointer.\n            },\n            textStyle: {\n                color: '#fff',\n                fontSize: 14\n            }\n        }\n    });\n\n\n/***/ }),\n\n/***/ 1128:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var TooltipContent = __webpack_require__(1129);\n    var zrUtil = __webpack_require__(970);\n    var formatUtil = __webpack_require__(976);\n    var numberUtil = __webpack_require__(973);\n    var graphic = __webpack_require__(972);\n    var findPointFromSeries = __webpack_require__(1041);\n    var layoutUtil = __webpack_require__(980);\n    var env = __webpack_require__(977);\n    var Model = __webpack_require__(978);\n    var globalListener = __webpack_require__(1042);\n    var axisHelper = __webpack_require__(987);\n    var axisPointerViewHelper = __webpack_require__(1022);\n\n    var bind = zrUtil.bind;\n    var each = zrUtil.each;\n    var parsePercent = numberUtil.parsePercent;\n\n\n    var proxyRect = new graphic.Rect({\n        shape: {x: -1, y: -1, width: 2, height: 2}\n    });\n\n    __webpack_require__(971).extendComponentView({\n\n        type: 'tooltip',\n\n        init: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            var tooltipContent = new TooltipContent(api.getDom(), api);\n            this._tooltipContent = tooltipContent;\n        },\n\n        render: function (tooltipModel, ecModel, api) {\n            if (env.node) {\n                return;\n            }\n\n            // Reset\n            this.group.removeAll();\n\n            /**\n             * @private\n             * @type {module:echarts/component/tooltip/TooltipModel}\n             */\n            this._tooltipModel = tooltipModel;\n\n            /**\n             * @private\n             * @type {module:echarts/model/Global}\n             */\n            this._ecModel = ecModel;\n\n            /**\n             * @private\n             * @type {module:echarts/ExtensionAPI}\n             */\n            this._api = api;\n\n            /**\n             * Should be cleaned when render.\n             * @private\n             * @type {Array.<Array.<Object>>}\n             */\n            this._lastDataByCoordSys = null;\n\n            /**\n             * @private\n             * @type {boolean}\n             */\n            this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n\n            var tooltipContent = this._tooltipContent;\n            tooltipContent.update();\n            tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n            this._initGlobalListener();\n\n            this._keepShow();\n        },\n\n        _initGlobalListener: function () {\n            var tooltipModel = this._tooltipModel;\n            var triggerOn = tooltipModel.get('triggerOn');\n\n            globalListener.register(\n                'itemTooltip',\n                this._api,\n                bind(function (currTrigger, e, dispatchAction) {\n                    // If 'none', it is not controlled by mouse totally.\n                    if (triggerOn !== 'none') {\n                        if (triggerOn.indexOf(currTrigger) >= 0) {\n                            this._tryShow(e, dispatchAction);\n                        }\n                        else if (currTrigger === 'leave') {\n                            this._hide(dispatchAction);\n                        }\n                    }\n                }, this)\n            );\n        },\n\n        _keepShow: function () {\n            var tooltipModel = this._tooltipModel;\n            var ecModel = this._ecModel;\n            var api = this._api;\n\n            // Try to keep the tooltip show when refreshing\n            if (this._lastX != null\n                && this._lastY != null\n                // When user is willing to control tooltip totally using API,\n                // self.manuallyShowTip({x, y}) might cause tooltip hide,\n                // which is not expected.\n                && tooltipModel.get('triggerOn') !== 'none'\n            ) {\n                var self = this;\n                clearTimeout(this._refreshUpdateTimeout);\n                this._refreshUpdateTimeout = setTimeout(function () {\n                    // Show tip next tick after other charts are rendered\n                    // In case highlight action has wrong result\n                    // FIXME\n                    self.manuallyShowTip(tooltipModel, ecModel, api, {\n                        x: self._lastX,\n                        y: self._lastY\n                    });\n                });\n            }\n        },\n\n        /**\n         * Show tip manually by\n         * dispatchAction({\n         *     type: 'showTip',\n         *     x: 10,\n         *     y: 10\n         * });\n         * Or\n         * dispatchAction({\n         *      type: 'showTip',\n         *      seriesIndex: 0,\n         *      dataIndex or dataIndexInside or name\n         * });\n         *\n         *  TODO Batch\n         */\n        manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n            if (payload.from === this.uid || env.node) {\n                return;\n            }\n\n            var dispatchAction = makeDispatchAction(payload, api);\n\n            // Reset ticket\n            this._ticket = '';\n\n            // When triggered from axisPointer.\n            var dataByCoordSys = payload.dataByCoordSys;\n\n            if (payload.tooltip && payload.x != null && payload.y != null) {\n                var el = proxyRect;\n                el.position = [payload.x, payload.y];\n                el.update();\n                el.tooltip = payload.tooltip;\n                // Manually show tooltip while view is not using zrender elements.\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    target: el\n                }, dispatchAction);\n            }\n            else if (dataByCoordSys) {\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    event: {},\n                    dataByCoordSys: payload.dataByCoordSys,\n                    tooltipOption: payload.tooltipOption\n                }, dispatchAction);\n            }\n            else if (payload.seriesIndex != null) {\n\n                if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n                    return;\n                }\n\n                var pointInfo = findPointFromSeries(payload, ecModel);\n                var cx = pointInfo.point[0];\n                var cy = pointInfo.point[1];\n                if (cx != null && cy != null) {\n                    this._tryShow({\n                        offsetX: cx,\n                        offsetY: cy,\n                        position: payload.position,\n                        target: pointInfo.el,\n                        event: {}\n                    }, dispatchAction);\n                }\n            }\n            else if (payload.x != null && payload.y != null) {\n                // FIXME\n                // should wrap dispatchAction like `axisPointer/globalListener` ?\n                api.dispatchAction({\n                    type: 'updateAxisPointer',\n                    x: payload.x,\n                    y: payload.y\n                });\n\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    target: api.getZr().findHover(payload.x, payload.y).target,\n                    event: {}\n                }, dispatchAction);\n            }\n        },\n\n        manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n            var tooltipContent = this._tooltipContent;\n\n            if (!this._alwaysShowContent) {\n                tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n            }\n\n            this._lastX = this._lastY = null;\n\n            if (payload.from !== this.uid) {\n                this._hide(makeDispatchAction(payload, api));\n            }\n        },\n\n        // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n        // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n        // and tooltip.\n        _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n            var seriesIndex = payload.seriesIndex;\n            var dataIndex = payload.dataIndex;\n            var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n            if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n                return;\n            }\n\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n            if (!seriesModel) {\n                return;\n            }\n\n            var data = seriesModel.getData();\n            var tooltipModel = buildTooltipModel([\n                data.getItemModel(dataIndex),\n                seriesModel,\n                (seriesModel.coordinateSystem || {}).model,\n                tooltipModel\n            ]);\n\n            if (tooltipModel.get('trigger') !== 'axis') {\n                return;\n            }\n\n            api.dispatchAction({\n                type: 'updateAxisPointer',\n                seriesIndex: seriesIndex,\n                dataIndex: dataIndex,\n                position: payload.position\n            });\n\n            return true;\n        },\n\n        _tryShow: function (e, dispatchAction) {\n            var el = e.target;\n            var tooltipModel = this._tooltipModel;\n\n            if (!tooltipModel) {\n                return;\n            }\n\n            // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n            this._lastX = e.offsetX;\n            this._lastY = e.offsetY;\n\n            var dataByCoordSys = e.dataByCoordSys;\n            if (dataByCoordSys && dataByCoordSys.length) {\n                this._showAxisTooltip(dataByCoordSys, e);\n            }\n            // Always show item tooltip if mouse is on the element with dataIndex\n            else if (el && el.dataIndex != null) {\n                this._lastDataByCoordSys = null;\n                this._showSeriesItemTooltip(e, el, dispatchAction);\n            }\n            // Tooltip provided directly. Like legend.\n            else if (el && el.tooltip) {\n                this._lastDataByCoordSys = null;\n                this._showComponentItemTooltip(e, el, dispatchAction);\n            }\n            else {\n                this._lastDataByCoordSys = null;\n                this._hide(dispatchAction);\n            }\n        },\n\n        _showOrMove: function (tooltipModel, cb) {\n            // showDelay is used in this case: tooltip.enterable is set\n            // as true. User intent to move mouse into tooltip and click\n            // something. `showDelay` makes it easyer to enter the content\n            // but tooltip do not move immediately.\n            var delay = tooltipModel.get('showDelay');\n            cb = zrUtil.bind(cb, this);\n            clearTimeout(this._showTimout);\n            delay > 0\n                ? (this._showTimout = setTimeout(cb, delay))\n                : cb();\n        },\n\n        _showAxisTooltip: function (dataByCoordSys, e) {\n            var ecModel = this._ecModel;\n            var globalTooltipModel = this._tooltipModel;\n            var point = [e.offsetX, e.offsetY];\n            var singleDefaultHTML = [];\n            var singleParamsList = [];\n            var singleTooltipModel = buildTooltipModel([\n                e.tooltipOption,\n                globalTooltipModel\n            ]);\n\n            each(dataByCoordSys, function (itemCoordSys) {\n                // var coordParamList = [];\n                // var coordDefaultHTML = [];\n                // var coordTooltipModel = buildTooltipModel([\n                //     e.tooltipOption,\n                //     itemCoordSys.tooltipOption,\n                //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n                //     globalTooltipModel\n                // ]);\n                // var displayMode = coordTooltipModel.get('displayMode');\n                // var paramsList = displayMode === 'single' ? singleParamsList : [];\n\n                each(itemCoordSys.dataByAxis, function (item) {\n                    var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n                    var axisValue = item.value;\n                    var seriesDefaultHTML = [];\n\n                    if (!axisModel || axisValue == null) {\n                        return;\n                    }\n\n                    var valueLabel = axisPointerViewHelper.getValueLabel(\n                        axisValue, axisModel.axis, ecModel,\n                        item.seriesDataIndices,\n                        item.valueLabelOpt\n                    );\n\n                    zrUtil.each(item.seriesDataIndices, function (idxItem) {\n                        var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n                        var dataIndex = idxItem.dataIndexInside;\n                        var dataParams = series && series.getDataParams(dataIndex);\n                        dataParams.axisDim = item.axisDim;\n                        dataParams.axisIndex = item.axisIndex;\n                        dataParams.axisType = item.axisType;\n                        dataParams.axisId = item.axisId;\n                        dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n                        dataParams.axisValueLabel = valueLabel;\n\n                        if (dataParams) {\n                            singleParamsList.push(dataParams);\n                            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n                        }\n                    });\n\n                    // Default tooltip content\n                    // FIXME\n                    // (1) shold be the first data which has name?\n                    // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n                    var firstLine = valueLabel;\n                    singleDefaultHTML.push(\n                        (firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '')\n                        + seriesDefaultHTML.join('<br />')\n                    );\n                });\n            }, this);\n\n            // In most case, the second axis is shown upper than the first one.\n            singleDefaultHTML.reverse();\n            singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n\n            var positionExpr = e.position;\n            this._showOrMove(singleTooltipModel, function () {\n                if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n                    this._updatePosition(\n                        singleTooltipModel,\n                        positionExpr,\n                        point[0], point[1],\n                        this._tooltipContent,\n                        singleParamsList\n                    );\n                }\n                else {\n                    this._showTooltipContent(\n                        singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(),\n                        point[0], point[1], positionExpr\n                    );\n                }\n            });\n\n            // Do not trigger events here, because this branch only be entered\n            // from dispatchAction.\n        },\n\n        _showSeriesItemTooltip: function (e, el, dispatchAction) {\n            var ecModel = this._ecModel;\n            // Use dataModel in element if possible\n            // Used when mouseover on a element like markPoint or edge\n            // In which case, the data is not main data in series.\n            var seriesIndex = el.seriesIndex;\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n            // For example, graph link.\n            var dataModel = el.dataModel || seriesModel;\n            var dataIndex = el.dataIndex;\n            var dataType = el.dataType;\n            var data = dataModel.getData();\n\n            var tooltipModel = buildTooltipModel([\n                data.getItemModel(dataIndex),\n                dataModel,\n                seriesModel && (seriesModel.coordinateSystem || {}).model,\n                this._tooltipModel\n            ]);\n\n            var tooltipTrigger = tooltipModel.get('trigger');\n            if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n                return;\n            }\n\n            var params = dataModel.getDataParams(dataIndex, dataType);\n            var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n            var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n            this._showOrMove(tooltipModel, function () {\n                this._showTooltipContent(\n                    tooltipModel, defaultHtml, params, asyncTicket,\n                    e.offsetX, e.offsetY, e.position, e.target\n                );\n            });\n\n            // FIXME\n            // duplicated showtip if manuallyShowTip is called from dispatchAction.\n            dispatchAction({\n                type: 'showTip',\n                dataIndexInside: dataIndex,\n                dataIndex: data.getRawIndex(dataIndex),\n                seriesIndex: seriesIndex,\n                from: this.uid\n            });\n        },\n\n        _showComponentItemTooltip: function (e, el, dispatchAction) {\n            var tooltipOpt = el.tooltip;\n            if (typeof tooltipOpt === 'string') {\n                var content = tooltipOpt;\n                tooltipOpt = {\n                    content: content,\n                    // Fixed formatter\n                    formatter: content\n                };\n            }\n            var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n            var defaultHtml = subTooltipModel.get('content');\n            var asyncTicket = Math.random();\n\n            // Do not check whether `trigger` is 'none' here, because `trigger`\n            // only works on cooridinate system. In fact, we have not found case\n            // that requires setting `trigger` nothing on component yet.\n\n            this._showOrMove(subTooltipModel, function () {\n                this._showTooltipContent(\n                    subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {},\n                    asyncTicket, e.offsetX, e.offsetY, e.position, el\n                );\n            });\n\n            // If not dispatch showTip, tip may be hide triggered by axis.\n            dispatchAction({\n                type: 'showTip',\n                from: this.uid\n            });\n        },\n\n        _showTooltipContent: function (\n            tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el\n        ) {\n            // Reset ticket\n            this._ticket = '';\n\n            if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n                return;\n            }\n\n            var tooltipContent = this._tooltipContent;\n\n            var formatter = tooltipModel.get('formatter');\n            positionExpr = positionExpr || tooltipModel.get('position');\n            var html = defaultHtml;\n\n            if (formatter && typeof formatter === 'string') {\n                html = formatUtil.formatTpl(formatter, params, true);\n            }\n            else if (typeof formatter === 'function') {\n                var callback = bind(function (cbTicket, html) {\n                    if (cbTicket === this._ticket) {\n                        tooltipContent.setContent(html);\n                        this._updatePosition(\n                            tooltipModel, positionExpr, x, y, tooltipContent, params, el\n                        );\n                    }\n                }, this);\n                this._ticket = asyncTicket;\n                html = formatter(params, asyncTicket, callback);\n            }\n\n            tooltipContent.setContent(html);\n            tooltipContent.show(tooltipModel);\n\n            this._updatePosition(\n                tooltipModel, positionExpr, x, y, tooltipContent, params, el\n            );\n        },\n\n        /**\n         * @param  {string|Function|Array.<number>|Object} positionExpr\n         * @param  {number} x Mouse x\n         * @param  {number} y Mouse y\n         * @param  {boolean} confine Whether confine tooltip content in view rect.\n         * @param  {Object|<Array.<Object>} params\n         * @param  {module:zrender/Element} el target element\n         * @param  {module:echarts/ExtensionAPI} api\n         * @return {Array.<number>}\n         */\n        _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n            var viewWidth = this._api.getWidth();\n            var viewHeight = this._api.getHeight();\n            positionExpr = positionExpr || tooltipModel.get('position');\n\n            var contentSize = content.getSize();\n            var align = tooltipModel.get('align');\n            var vAlign = tooltipModel.get('verticalAlign');\n            var rect = el && el.getBoundingRect().clone();\n            el && rect.applyTransform(el.transform);\n\n            if (typeof positionExpr === 'function') {\n                // Callback of position can be an array or a string specify the position\n                positionExpr = positionExpr([x, y], params, content.el, rect, {\n                    viewSize: [viewWidth, viewHeight],\n                    contentSize: contentSize.slice()\n                });\n            }\n\n            if (zrUtil.isArray(positionExpr)) {\n                x = parsePercent(positionExpr[0], viewWidth);\n                y = parsePercent(positionExpr[1], viewHeight);\n            }\n            else if (zrUtil.isObject(positionExpr)) {\n                positionExpr.width = contentSize[0];\n                positionExpr.height = contentSize[1];\n                var layoutRect = layoutUtil.getLayoutRect(\n                    positionExpr, {width: viewWidth, height: viewHeight}\n                );\n                x = layoutRect.x;\n                y = layoutRect.y;\n                align = null;\n                // When positionExpr is left/top/right/bottom,\n                // align and verticalAlign will not work.\n                vAlign = null;\n            }\n            // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n            else if (typeof positionExpr === 'string' && el) {\n                var pos = calcTooltipPosition(\n                    positionExpr, rect, contentSize\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n            else {\n                var pos = refixTooltipPosition(\n                    x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n\n            align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n            vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n            if (tooltipModel.get('confine')) {\n                var pos = confineTooltipPosition(\n                    x, y, content.el, viewWidth, viewHeight\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n\n            content.moveTo(x, y);\n        },\n\n        // FIXME\n        // Should we remove this but leave this to user?\n        _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n            var lastCoordSys = this._lastDataByCoordSys;\n            var contentNotChanged = !!lastCoordSys\n                && lastCoordSys.length === dataByCoordSys.length;\n\n            contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n                var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n                var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n                var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n                contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n\n                contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n                    var thisItem = thisDataByAxis[indexAxis] || {};\n                    var lastIndices = lastItem.seriesDataIndices || [];\n                    var newIndices = thisItem.seriesDataIndices || [];\n\n                    contentNotChanged &=\n                        lastItem.value === thisItem.value\n                        && lastItem.axisType === thisItem.axisType\n                        && lastItem.axisId === thisItem.axisId\n                        && lastIndices.length === newIndices.length;\n\n                    contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n                        var newIdxItem = newIndices[j];\n                        contentNotChanged &=\n                            lastIdxItem.seriesIndex === newIdxItem.seriesIndex\n                            && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n                    });\n                });\n            });\n\n            this._lastDataByCoordSys = dataByCoordSys;\n\n            return !!contentNotChanged;\n        },\n\n        _hide: function (dispatchAction) {\n            // Do not directly hideLater here, because this behavior may be prevented\n            // in dispatchAction when showTip is dispatched.\n\n            // FIXME\n            // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n            this._lastDataByCoordSys = null;\n            dispatchAction({\n                type: 'hideTip',\n                from: this.uid\n            });\n        },\n\n        dispose: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            this._tooltipContent.hide();\n            globalListener.unregister('itemTooltip', api);\n        }\n    });\n\n\n    /**\n     * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n     * From top to bottom. (the last one should be globalTooltipModel);\n     */\n    function buildTooltipModel(modelCascade) {\n        var resultModel = modelCascade.pop();\n        while (modelCascade.length) {\n            var tooltipOpt = modelCascade.pop();\n            if (tooltipOpt) {\n                if (tooltipOpt instanceof Model) {\n                    tooltipOpt = tooltipOpt.get('tooltip', true);\n                }\n                // In each data item tooltip can be simply write:\n                // {\n                //  value: 10,\n                //  tooltip: 'Something you need to know'\n                // }\n                if (typeof tooltipOpt === 'string') {\n                    tooltipOpt = {formatter: tooltipOpt};\n                }\n                resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n            }\n        }\n        return resultModel;\n    }\n\n    function makeDispatchAction(payload, api) {\n        return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n    }\n\n    function refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n        var size = getOuterSize(el);\n        var width = size.width;\n        var height = size.height;\n\n        if (gapH != null) {\n            if (x + width + gapH > viewWidth) {\n                x -= width + gapH;\n            }\n            else {\n                x += gapH;\n            }\n        }\n        if (gapV != null) {\n            if (y + height + gapV > viewHeight) {\n                y -= height + gapV;\n            }\n            else {\n                y += gapV;\n            }\n        }\n        return [x, y];\n    }\n\n    function confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n        var size = getOuterSize(el);\n        var width = size.width;\n        var height = size.height;\n\n        x = Math.min(x + width, viewWidth) - width;\n        y = Math.min(y + height, viewHeight) - height;\n        x = Math.max(x, 0);\n        y = Math.max(y, 0);\n\n        return [x, y];\n    }\n\n    function getOuterSize(el) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n\n        // Consider browser compatibility.\n        // IE8 does not support getComputedStyle.\n        if (document.defaultView && document.defaultView.getComputedStyle) {\n            var stl = document.defaultView.getComputedStyle(el);\n            if (stl) {\n                width += parseInt(stl.paddingLeft, 10) + parseInt(stl.paddingRight, 10)\n                    + parseInt(stl.borderLeftWidth, 10) + parseInt(stl.borderRightWidth, 10);\n                height += parseInt(stl.paddingTop, 10) + parseInt(stl.paddingBottom, 10)\n                    + parseInt(stl.borderTopWidth, 10) + parseInt(stl.borderBottomWidth, 10);\n            }\n        }\n\n        return {width: width, height: height};\n    }\n\n    function calcTooltipPosition(position, rect, contentSize) {\n        var domWidth = contentSize[0];\n        var domHeight = contentSize[1];\n        var gap = 5;\n        var x = 0;\n        var y = 0;\n        var rectWidth = rect.width;\n        var rectHeight = rect.height;\n        switch (position) {\n            case 'inside':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'top':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y - domHeight - gap;\n                break;\n            case 'bottom':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight + gap;\n                break;\n            case 'left':\n                x = rect.x - domWidth - gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'right':\n                x = rect.x + rectWidth + gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n        }\n        return [x, y];\n    }\n\n    function isCenterAlign(align) {\n        return align === 'center' || align === 'middle';\n    }\n\n\n\n\n/***/ }),\n\n/***/ 1129:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/component/tooltip/TooltipContent\n */\n\n\n    var zrUtil = __webpack_require__(970);\n    var zrColor = __webpack_require__(992);\n    var eventUtil = __webpack_require__(989);\n    var formatUtil = __webpack_require__(976);\n    var each = zrUtil.each;\n    var toCamelCase = formatUtil.toCamelCase;\n    var env = __webpack_require__(977);\n\n    var vendors = ['', '-webkit-', '-moz-', '-o-'];\n\n    var gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n\n    /**\n     * @param {number} duration\n     * @return {string}\n     * @inner\n     */\n    function assembleTransition(duration) {\n        var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n        var transitionText = 'left ' + duration + 's ' + transitionCurve + ','\n                            + 'top ' + duration + 's ' + transitionCurve;\n        return zrUtil.map(vendors, function (vendorPrefix) {\n            return vendorPrefix + 'transition:' + transitionText;\n        }).join(';');\n    }\n\n    /**\n     * @param {Object} textStyle\n     * @return {string}\n     * @inner\n     */\n    function assembleFont(textStyleModel) {\n        var cssText = [];\n\n        var fontSize = textStyleModel.get('fontSize');\n        var color = textStyleModel.getTextColor();\n\n        color && cssText.push('color:' + color);\n\n        cssText.push('font:' + textStyleModel.getFont());\n\n        fontSize &&\n            cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n\n        each(['decoration', 'align'], function (name) {\n            var val = textStyleModel.get(name);\n            val && cssText.push('text-' + name + ':' + val);\n        });\n\n        return cssText.join(';');\n    }\n\n    /**\n     * @param {Object} tooltipModel\n     * @return {string}\n     * @inner\n     */\n    function assembleCssText(tooltipModel) {\n\n        var cssText = [];\n\n        var transitionDuration = tooltipModel.get('transitionDuration');\n        var backgroundColor = tooltipModel.get('backgroundColor');\n        var textStyleModel = tooltipModel.getModel('textStyle');\n        var padding = tooltipModel.get('padding');\n\n        // Animation transition. Do not animate when transitionDuration is 0.\n        transitionDuration &&\n            cssText.push(assembleTransition(transitionDuration));\n\n        if (backgroundColor) {\n            if (env.canvasSupported) {\n                cssText.push('background-Color:' + backgroundColor);\n            }\n            else {\n                // for ie\n                cssText.push(\n                    'background-Color:#' + zrColor.toHex(backgroundColor)\n                );\n                cssText.push('filter:alpha(opacity=70)');\n            }\n        }\n\n        // Border style\n        each(['width', 'color', 'radius'], function (name) {\n            var borderName = 'border-' + name;\n            var camelCase = toCamelCase(borderName);\n            var val = tooltipModel.get(camelCase);\n            val != null &&\n                cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n        });\n\n        // Text style\n        cssText.push(assembleFont(textStyleModel));\n\n        // Padding\n        if (padding != null) {\n            cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n        }\n\n        return cssText.join(';') + ';';\n    }\n\n    /**\n     * @alias module:echarts/component/tooltip/TooltipContent\n     * @constructor\n     */\n    function TooltipContent(container, api) {\n        var el = document.createElement('div');\n        var zr = this._zr = api.getZr();\n\n        this.el = el;\n\n        this._x = api.getWidth() / 2;\n        this._y = api.getHeight() / 2;\n\n        container.appendChild(el);\n\n        this._container = container;\n\n        this._show = false;\n\n        /**\n         * @private\n         */\n        this._hideTimeout;\n\n        var self = this;\n        el.onmouseenter = function () {\n            // clear the timeout in hideLater and keep showing tooltip\n            if (self._enterable) {\n                clearTimeout(self._hideTimeout);\n                self._show = true;\n            }\n            self._inContent = true;\n        };\n        el.onmousemove = function (e) {\n            e = e || window.event;\n            if (!self._enterable) {\n                // Try trigger zrender event to avoid mouse\n                // in and out shape too frequently\n                var handler = zr.handler;\n                eventUtil.normalizeEvent(container, e, true);\n                handler.dispatch('mousemove', e);\n            }\n        };\n        el.onmouseleave = function () {\n            if (self._enterable) {\n                if (self._show) {\n                    self.hideLater(self._hideDelay);\n                }\n            }\n            self._inContent = false;\n        };\n    }\n\n    TooltipContent.prototype = {\n\n        constructor: TooltipContent,\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _enterable: true,\n\n        /**\n         * Update when tooltip is rendered\n         */\n        update: function () {\n            // FIXME\n            // Move this logic to ec main?\n            var container = this._container;\n            var stl = container.currentStyle\n                || document.defaultView.getComputedStyle(container);\n            var domStyle = container.style;\n            if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n                domStyle.position = 'relative';\n            }\n            // Hide the tooltip\n            // PENDING\n            // this.hide();\n        },\n\n        show: function (tooltipModel) {\n            clearTimeout(this._hideTimeout);\n            var el = this.el;\n\n            el.style.cssText = gCssText + assembleCssText(tooltipModel)\n                // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n                + ';left:' + this._x + 'px;top:' + this._y + 'px;'\n                + (tooltipModel.get('extraCssText') || '');\n\n            el.style.display = el.innerHTML ?  'block' : 'none';\n\n            this._show = true;\n        },\n\n        setContent: function (content) {\n            this.el.innerHTML = content == null ? '' : content;\n        },\n\n        setEnterable: function (enterable) {\n            this._enterable = enterable;\n        },\n\n        getSize: function () {\n            var el = this.el;\n            return [el.clientWidth, el.clientHeight];\n        },\n\n        moveTo: function (x, y) {\n            // xy should be based on canvas root. But tooltipContent is\n            // the sibling of canvas root. So padding of ec container\n            // should be considered here.\n            var zr = this._zr;\n            var viewportRootOffset;\n            if (zr && zr.painter && (viewportRootOffset = zr.painter.getViewportRootOffset())) {\n                x += viewportRootOffset.offsetLeft;\n                y += viewportRootOffset.offsetTop;\n            }\n\n            var style = this.el.style;\n            style.left = x + 'px';\n            style.top = y + 'px';\n\n            this._x = x;\n            this._y = y;\n        },\n\n        hide: function () {\n            this.el.style.display = 'none';\n            this._show = false;\n        },\n\n        hideLater: function (time) {\n            if (this._show && !(this._inContent && this._enterable)) {\n                if (time) {\n                    this._hideDelay = time;\n                    // Set show false to avoid invoke hideLater mutiple times\n                    this._show = false;\n                    this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n                }\n                else {\n                    this.hide();\n                }\n            }\n        },\n\n        isShow: function () {\n            return this._show;\n        }\n    };\n\n    module.exports = TooltipContent;\n\n\n/***/ }),\n\n/***/ 1130:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @file Legend action\n */\n\n\n    var echarts = __webpack_require__(971);\n    var zrUtil = __webpack_require__(970);\n\n    function legendSelectActionHandler(methodName, payload, ecModel) {\n        var selectedMap = {};\n        var isToggleSelect = methodName === 'toggleSelected';\n        var isSelected;\n        // Update all legend components\n        ecModel.eachComponent('legend', function (legendModel) {\n            if (isToggleSelect && isSelected != null) {\n                // Force other legend has same selected status\n                // Or the first is toggled to true and other are toggled to false\n                // In the case one legend has some item unSelected in option. And if other legend\n                // doesn't has the item, they will assume it is selected.\n                legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n            }\n            else {\n                legendModel[methodName](payload.name);\n                isSelected = legendModel.isSelected(payload.name);\n            }\n            var legendData = legendModel.getData();\n            zrUtil.each(legendData, function (model) {\n                var name = model.get('name');\n                // Wrap element\n                if (name === '\\n' || name === '') {\n                    return;\n                }\n                var isItemSelected = legendModel.isSelected(name);\n                if (selectedMap.hasOwnProperty(name)) {\n                    // Unselected if any legend is unselected\n                    selectedMap[name] = selectedMap[name] && isItemSelected;\n                }\n                else {\n                    selectedMap[name] = isItemSelected;\n                }\n            });\n        });\n        // Return the event explicitly\n        return {\n            name: payload.name,\n            selected: selectedMap\n        };\n    }\n    /**\n     * @event legendToggleSelect\n     * @type {Object}\n     * @property {string} type 'legendToggleSelect'\n     * @property {string} [from]\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendToggleSelect', 'legendselectchanged',\n        zrUtil.curry(legendSelectActionHandler, 'toggleSelected')\n    );\n\n    /**\n     * @event legendSelect\n     * @type {Object}\n     * @property {string} type 'legendSelect'\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendSelect', 'legendselected',\n        zrUtil.curry(legendSelectActionHandler, 'select')\n    );\n\n    /**\n     * @event legendUnSelect\n     * @type {Object}\n     * @property {string} type 'legendUnSelect'\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendUnSelect', 'legendunselected',\n        zrUtil.curry(legendSelectActionHandler, 'unSelect')\n    );\n\n\n\n/***/ }),\n\n/***/ 1131:\n/***/ (function(module, exports) {\n\n\n   module.exports = function (ecModel) {\n        var legendModels = ecModel.findComponents({\n            mainType: 'legend'\n        });\n        if (legendModels && legendModels.length) {\n            ecModel.filterSeries(function (series) {\n                // If in any legend component the status is not selected.\n                // Because in legend series is assumed selected when it is not in the legend data.\n                for (var i = 0; i < legendModels.length; i++) {\n                    if (!legendModels[i].isSelected(series.name)) {\n                        return false;\n                    }\n                }\n                return true;\n            });\n        }\n    };\n\n\n/***/ }),\n\n/***/ 1132:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Data selectable mixin for chart series.\n * To eanble data select, option of series must have `selectedMode`.\n * And each data item will use `selected` to toggle itself selected status\n *\n * @module echarts/chart/helper/DataSelectable\n */\n\n\n    var zrUtil = __webpack_require__(970);\n\n    module.exports = {\n\n        updateSelectedMap: function (targetList) {\n            this._targetList = targetList.slice();\n            this._selectTargetMap = zrUtil.reduce(targetList || [], function (targetMap, target) {\n                targetMap.set(target.name, target);\n                return targetMap;\n            }, zrUtil.createHashMap());\n        },\n\n        /**\n         * Either name or id should be passed as input here.\n         * If both of them are defined, id is used.\n         *\n         * @param {string|undefined} name name of data\n         * @param {number|undefined} id dataIndex of data\n         */\n        // PENGING If selectedMode is null ?\n        select: function (name, id) {\n            var target = id != null\n                ? this._targetList[id]\n                : this._selectTargetMap.get(name);\n            var selectedMode = this.get('selectedMode');\n            if (selectedMode === 'single') {\n                this._selectTargetMap.each(function (target) {\n                    target.selected = false;\n                });\n            }\n            target && (target.selected = true);\n        },\n\n        /**\n         * Either name or id should be passed as input here.\n         * If both of them are defined, id is used.\n         *\n         * @param {string|undefined} name name of data\n         * @param {number|undefined} id dataIndex of data\n         */\n        unSelect: function (name, id) {\n            var target = id != null\n                ? this._targetList[id]\n                : this._selectTargetMap.get(name);\n            // var selectedMode = this.get('selectedMode');\n            // selectedMode !== 'single' && target && (target.selected = false);\n            target && (target.selected = false);\n        },\n\n        /**\n         * Either name or id should be passed as input here.\n         * If both of them are defined, id is used.\n         *\n         * @param {string|undefined} name name of data\n         * @param {number|undefined} id dataIndex of data\n         */\n        toggleSelected: function (name, id) {\n            var target = id != null\n                ? this._targetList[id]\n                : this._selectTargetMap.get(name);\n            if (target != null) {\n                this[target.selected ? 'unSelect' : 'select'](name, id);\n                return target.selected;\n            }\n        },\n\n        /**\n         * Either name or id should be passed as input here.\n         * If both of them are defined, id is used.\n         *\n         * @param {string|undefined} name name of data\n         * @param {number|undefined} id dataIndex of data\n         */\n        isSelected: function (name, id) {\n            var target = id != null\n                ? this._targetList[id]\n                : this._selectTargetMap.get(name);\n            return target && target.selected;\n        }\n    };\n\n\n/***/ }),\n\n/***/ 1133:\n/***/ (function(module, exports) {\n\n// Pick color from palette for each data item.\n// Applicable for charts that require applying color palette\n// in data level (like pie, funnel, chord).\n\n\n    module.exports = function (seriesType, ecModel) {\n        // Pie and funnel may use diferrent scope\n        var paletteScope = {};\n        ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n            var dataAll = seriesModel.getRawData();\n            var idxMap = {};\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                var data = seriesModel.getData();\n                data.each(function (idx) {\n                    var rawIdx = data.getRawIndex(idx);\n                    idxMap[rawIdx] = idx;\n                });\n                dataAll.each(function (rawIdx) {\n                    var filteredIdx = idxMap[rawIdx];\n\n                    // If series.itemStyle.normal.color is a function. itemVisual may be encoded\n                    var singleDataColor = filteredIdx != null\n                        && data.getItemVisual(filteredIdx, 'color', true);\n\n                    if (!singleDataColor) {\n                        // FIXME Performance\n                        var itemModel = dataAll.getItemModel(rawIdx);\n                        var color = itemModel.get('itemStyle.normal.color')\n                            || seriesModel.getColorFromPalette(dataAll.getName(rawIdx), paletteScope);\n                        // Legend may use the visual info in data before processed\n                        dataAll.setItemVisual(rawIdx, 'color', color);\n\n                        // Data is not filtered\n                        if (filteredIdx != null) {\n                            data.setItemVisual(filteredIdx, 'color', color);\n                        }\n                    }\n                    else {\n                        // Set data all color for legend\n                        dataAll.setItemVisual(rawIdx, 'color', singleDataColor);\n                    }\n                });\n            }\n        });\n    };\n\n\n/***/ }),\n\n/***/ 1134:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var featureManager = __webpack_require__(988);\n    var zrUtil = __webpack_require__(970);\n\n    var ToolboxModel = __webpack_require__(971).extendComponentModel({\n\n        type: 'toolbox',\n\n        layoutMode: {\n            type: 'box',\n            ignoreSize: true\n        },\n\n        mergeDefaultAndTheme: function (option) {\n            ToolboxModel.superApply(this, 'mergeDefaultAndTheme', arguments);\n\n            zrUtil.each(this.option.feature, function (featureOpt, featureName) {\n                var Feature = featureManager.get(featureName);\n                Feature && zrUtil.merge(featureOpt, Feature.defaultOption);\n            });\n        },\n\n        defaultOption: {\n\n            show: true,\n\n            z: 6,\n\n            zlevel: 0,\n\n            orient: 'horizontal',\n\n            left: 'right',\n\n            top: 'top',\n\n            // right\n            // bottom\n\n            backgroundColor: 'transparent',\n\n            borderColor: '#ccc',\n\n            borderRadius: 0,\n\n            borderWidth: 0,\n\n            padding: 5,\n\n            itemSize: 15,\n\n            itemGap: 8,\n\n            showTitle: true,\n\n            iconStyle: {\n                normal: {\n                    borderColor: '#666',\n                    color: 'none'\n                },\n                emphasis: {\n                    borderColor: '#3E98C5'\n                }\n            }\n            // textStyle: {},\n\n            // feature\n        }\n    });\n\n    module.exports = ToolboxModel;\n\n\n/***/ }),\n\n/***/ 1135:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var featureManager = __webpack_require__(988);\n    var zrUtil = __webpack_require__(970);\n    var graphic = __webpack_require__(972);\n    var Model = __webpack_require__(978);\n    var DataDiffer = __webpack_require__(1002);\n    var listComponentHelper = __webpack_require__(1043);\n    var textContain = __webpack_require__(984);\n\n    module.exports = __webpack_require__(971).extendComponentView({\n\n        type: 'toolbox',\n\n        render: function (toolboxModel, ecModel, api, payload) {\n            var group = this.group;\n            group.removeAll();\n\n            if (!toolboxModel.get('show')) {\n                return;\n            }\n\n            var itemSize = +toolboxModel.get('itemSize');\n            var featureOpts = toolboxModel.get('feature') || {};\n            var features = this._features || (this._features = {});\n\n            var featureNames = [];\n            zrUtil.each(featureOpts, function (opt, name) {\n                featureNames.push(name);\n            });\n\n            (new DataDiffer(this._featureNames || [], featureNames))\n                .add(process)\n                .update(process)\n                .remove(zrUtil.curry(process, null))\n                .execute();\n\n            // Keep for diff.\n            this._featureNames = featureNames;\n\n            function process(newIndex, oldIndex) {\n                var featureName = featureNames[newIndex];\n                var oldName = featureNames[oldIndex];\n                var featureOpt = featureOpts[featureName];\n                var featureModel = new Model(featureOpt, toolboxModel, toolboxModel.ecModel);\n                var feature;\n\n                if (featureName && !oldName) { // Create\n                    if (isUserFeatureName(featureName)) {\n                        feature = {\n                            model: featureModel,\n                            onclick: featureModel.option.onclick,\n                            featureName: featureName\n                        };\n                    }\n                    else {\n                        var Feature = featureManager.get(featureName);\n                        if (!Feature) {\n                            return;\n                        }\n                        feature = new Feature(featureModel, ecModel, api);\n                    }\n                    features[featureName] = feature;\n                }\n                else {\n                    feature = features[oldName];\n                    // If feature does not exsit.\n                    if (!feature) {\n                        return;\n                    }\n                    feature.model = featureModel;\n                    feature.ecModel = ecModel;\n                    feature.api = api;\n                }\n\n                if (!featureName && oldName) {\n                    feature.dispose && feature.dispose(ecModel, api);\n                    return;\n                }\n\n                if (!featureModel.get('show') || feature.unusable) {\n                    feature.remove && feature.remove(ecModel, api);\n                    return;\n                }\n\n                createIconPaths(featureModel, feature, featureName);\n\n                featureModel.setIconStatus = function (iconName, status) {\n                    var option = this.option;\n                    var iconPaths = this.iconPaths;\n                    option.iconStatus = option.iconStatus || {};\n                    option.iconStatus[iconName] = status;\n                    // FIXME\n                    iconPaths[iconName] && iconPaths[iconName].trigger(status);\n                };\n\n                if (feature.render) {\n                    feature.render(featureModel, ecModel, api, payload);\n                }\n            }\n\n            function createIconPaths(featureModel, feature, featureName) {\n                var iconStyleModel = featureModel.getModel('iconStyle');\n\n                // If one feature has mutiple icon. they are orginaized as\n                // {\n                //     icon: {\n                //         foo: '',\n                //         bar: ''\n                //     },\n                //     title: {\n                //         foo: '',\n                //         bar: ''\n                //     }\n                // }\n                var icons = feature.getIcons ? feature.getIcons() : featureModel.get('icon');\n                var titles = featureModel.get('title') || {};\n                if (typeof icons === 'string') {\n                    var icon = icons;\n                    var title = titles;\n                    icons = {};\n                    titles = {};\n                    icons[featureName] = icon;\n                    titles[featureName] = title;\n                }\n                var iconPaths = featureModel.iconPaths = {};\n                zrUtil.each(icons, function (iconStr, iconName) {\n                    var path = graphic.createIcon(\n                        iconStr,\n                        {},\n                        {\n                            x: -itemSize / 2,\n                            y: -itemSize / 2,\n                            width: itemSize,\n                            height: itemSize\n                        }\n                    );\n                    path.setStyle(iconStyleModel.getModel('normal').getItemStyle());\n                    path.hoverStyle = iconStyleModel.getModel('emphasis').getItemStyle();\n\n                    graphic.setHoverStyle(path);\n\n                    if (toolboxModel.get('showTitle')) {\n                        path.__title = titles[iconName];\n                        path.on('mouseover', function () {\n                                // Should not reuse above hoverStyle, which might be modified.\n                                var hoverStyle = iconStyleModel.getModel('emphasis').getItemStyle();\n                                path.setStyle({\n                                    text: titles[iconName],\n                                    textPosition: hoverStyle.textPosition || 'bottom',\n                                    textFill: hoverStyle.fill || hoverStyle.stroke || '#000',\n                                    textAlign: hoverStyle.textAlign || 'center'\n                                });\n                            })\n                            .on('mouseout', function () {\n                                path.setStyle({\n                                    textFill: null\n                                });\n                            });\n                    }\n                    path.trigger(featureModel.get('iconStatus.' + iconName) || 'normal');\n\n                    group.add(path);\n                    path.on('click', zrUtil.bind(\n                        feature.onclick, feature, ecModel, api, iconName\n                    ));\n\n                    iconPaths[iconName] = path;\n                });\n            }\n\n            listComponentHelper.layout(group, toolboxModel, api);\n            // Render background after group is layout\n            // FIXME\n            group.add(listComponentHelper.makeBackground(group.getBoundingRect(), toolboxModel));\n\n            // Adjust icon title positions to avoid them out of screen\n            group.eachChild(function (icon) {\n                var titleText = icon.__title;\n                var hoverStyle = icon.hoverStyle;\n                // May be background element\n                if (hoverStyle && titleText) {\n                    var rect = textContain.getBoundingRect(\n                        titleText, textContain.makeFont(hoverStyle)\n                    );\n                    var offsetX = icon.position[0] + group.position[0];\n                    var offsetY = icon.position[1] + group.position[1] + itemSize;\n\n                    var needPutOnTop = false;\n                    if (offsetY + rect.height > api.getHeight()) {\n                        hoverStyle.textPosition = 'top';\n                        needPutOnTop = true;\n                    }\n                    var topOffset = needPutOnTop ? (-5 - rect.height) : (itemSize + 8);\n                    if (offsetX + rect.width /  2 > api.getWidth()) {\n                        hoverStyle.textPosition = ['100%', topOffset];\n                        hoverStyle.textAlign = 'right';\n                    }\n                    else if (offsetX - rect.width / 2 < 0) {\n                        hoverStyle.textPosition = [0, topOffset];\n                        hoverStyle.textAlign = 'left';\n                    }\n                }\n            });\n        },\n\n        updateView: function (toolboxModel, ecModel, api, payload) {\n            zrUtil.each(this._features, function (feature) {\n                feature.updateView && feature.updateView(feature.model, ecModel, api, payload);\n            });\n        },\n\n        updateLayout: function (toolboxModel, ecModel, api, payload) {\n            zrUtil.each(this._features, function (feature) {\n                feature.updateLayout && feature.updateLayout(feature.model, ecModel, api, payload);\n            });\n        },\n\n        remove: function (ecModel, api) {\n            zrUtil.each(this._features, function (feature) {\n                feature.remove && feature.remove(ecModel, api);\n            });\n            this.group.removeAll();\n        },\n\n        dispose: function (ecModel, api) {\n            zrUtil.each(this._features, function (feature) {\n                feature.dispose && feature.dispose(ecModel, api);\n            });\n        }\n    });\n\n    function isUserFeatureName(featureName) {\n        return featureName.indexOf('my') === 0;\n    }\n\n\n\n/***/ }),\n\n/***/ 1136:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var env = __webpack_require__(977);\n    var lang = __webpack_require__(996).toolbox.saveAsImage;\n\n    function SaveAsImage (model) {\n        this.model = model;\n    }\n\n    SaveAsImage.defaultOption = {\n        show: true,\n        icon: 'M4.7,22.9L29.3,45.5L54.7,23.4M4.6,43.6L4.6,58L53.8,58L53.8,43.6M29.2,45.1L29.2,0',\n        title: lang.title,\n        type: 'png',\n        // Default use option.backgroundColor\n        // backgroundColor: '#fff',\n        name: '',\n        excludeComponents: ['toolbox'],\n        pixelRatio: 1,\n        lang: lang.lang.slice()\n    };\n\n    SaveAsImage.prototype.unusable = !env.canvasSupported;\n\n    var proto = SaveAsImage.prototype;\n\n    proto.onclick = function (ecModel, api) {\n        var model = this.model;\n        var title = model.get('name') || ecModel.get('title.0.text') || 'echarts';\n        var $a = document.createElement('a');\n        var type = model.get('type', true) || 'png';\n        $a.download = title + '.' + type;\n        $a.target = '_blank';\n        var url = api.getConnectedDataURL({\n            type: type,\n            backgroundColor: model.get('backgroundColor', true)\n                || ecModel.get('backgroundColor') || '#fff',\n            excludeComponents: model.get('excludeComponents'),\n            pixelRatio: model.get('pixelRatio')\n        });\n        $a.href = url;\n        // Chrome and Firefox\n        if (typeof MouseEvent === 'function' && !env.browser.ie && !env.browser.edge) {\n            var evt = new MouseEvent('click', {\n                view: window,\n                bubbles: true,\n                cancelable: false\n            });\n            $a.dispatchEvent(evt);\n        }\n        // IE\n        else {\n            if (window.navigator.msSaveOrOpenBlob) {\n                var bstr = atob(url.split(',')[1]);\n                var n = bstr.length;\n                var u8arr = new Uint8Array(n);\n                while(n--) {\n                    u8arr[n] = bstr.charCodeAt(n);\n                }\n                var blob = new Blob([u8arr]);\n                window.navigator.msSaveOrOpenBlob(blob, title + '.' + type);\n            }\n            else {\n                var lang = model.get('lang');\n                var html = '' +\n                    '<body style=\"margin:0;\">' +\n                    '<img src=\"' + url + '\" style=\"max-width:100%;\" title=\"' + ((lang && lang[0]) || '') + '\" />' +\n                    '</body>';\n                var tab = window.open();\n                tab.document.write(html);\n            }\n        }\n    };\n\n    __webpack_require__(988).register(\n        'saveAsImage', SaveAsImage\n    );\n\n    module.exports = SaveAsImage;\n\n\n\n/***/ }),\n\n/***/ 1137:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(970);\n    var lang = __webpack_require__(996).toolbox.magicType;\n\n    function MagicType(model) {\n        this.model = model;\n    }\n\n    MagicType.defaultOption = {\n        show: true,\n        type: [],\n        // Icon group\n        icon: {\n            line: 'M4.1,28.9h7.1l9.3-22l7.4,38l9.7-19.7l3,12.8h14.9M4.1,58h51.4',\n            bar: 'M6.7,22.9h10V48h-10V22.9zM24.9,13h10v35h-10V13zM43.2,2h10v46h-10V2zM3.1,58h53.7',\n            stack: 'M8.2,38.4l-8.4,4.1l30.6,15.3L60,42.5l-8.1-4.1l-21.5,11L8.2,38.4z M51.9,30l-8.1,4.2l-13.4,6.9l-13.9-6.9L8.2,30l-8.4,4.2l8.4,4.2l22.2,11l21.5-11l8.1-4.2L51.9,30z M51.9,21.7l-8.1,4.2L35.7,30l-5.3,2.8L24.9,30l-8.4-4.1l-8.3-4.2l-8.4,4.2L8.2,30l8.3,4.2l13.9,6.9l13.4-6.9l8.1-4.2l8.1-4.1L51.9,21.7zM30.4,2.2L-0.2,17.5l8.4,4.1l8.3,4.2l8.4,4.2l5.5,2.7l5.3-2.7l8.1-4.2l8.1-4.2l8.1-4.1L30.4,2.2z', // jshint ignore:line\n            tiled: 'M2.3,2.2h22.8V25H2.3V2.2z M35,2.2h22.8V25H35V2.2zM2.3,35h22.8v22.8H2.3V35z M35,35h22.8v22.8H35V35z'\n        },\n        // `line`, `bar`, `stack`, `tiled`\n        title: zrUtil.clone(lang.title),\n        option: {},\n        seriesIndex: {}\n    };\n\n    var proto = MagicType.prototype;\n\n    proto.getIcons = function () {\n        var model = this.model;\n        var availableIcons = model.get('icon');\n        var icons = {};\n        zrUtil.each(model.get('type'), function (type) {\n            if (availableIcons[type]) {\n                icons[type] = availableIcons[type];\n            }\n        });\n        return icons;\n    };\n\n    var seriesOptGenreator = {\n        'line': function (seriesType, seriesId, seriesModel, model) {\n            if (seriesType === 'bar') {\n                return zrUtil.merge({\n                    id: seriesId,\n                    type: 'line',\n                    // Preserve data related option\n                    data: seriesModel.get('data'),\n                    stack: seriesModel.get('stack'),\n                    markPoint: seriesModel.get('markPoint'),\n                    markLine: seriesModel.get('markLine')\n                }, model.get('option.line') || {}, true);\n            }\n        },\n        'bar': function (seriesType, seriesId, seriesModel, model) {\n            if (seriesType === 'line') {\n                return zrUtil.merge({\n                    id: seriesId,\n                    type: 'bar',\n                    // Preserve data related option\n                    data: seriesModel.get('data'),\n                    stack: seriesModel.get('stack'),\n                    markPoint: seriesModel.get('markPoint'),\n                    markLine: seriesModel.get('markLine')\n                }, model.get('option.bar') || {}, true);\n            }\n        },\n        'stack': function (seriesType, seriesId, seriesModel, model) {\n            if (seriesType === 'line' || seriesType === 'bar') {\n                return zrUtil.merge({\n                    id: seriesId,\n                    stack: '__ec_magicType_stack__'\n                }, model.get('option.stack') || {}, true);\n            }\n        },\n        'tiled': function (seriesType, seriesId, seriesModel, model) {\n            if (seriesType === 'line' || seriesType === 'bar') {\n                return zrUtil.merge({\n                    id: seriesId,\n                    stack: ''\n                }, model.get('option.tiled') || {}, true);\n            }\n        }\n    };\n\n    var radioTypes = [\n        ['line', 'bar'],\n        ['stack', 'tiled']\n    ];\n\n    proto.onclick = function (ecModel, api, type) {\n        var model = this.model;\n        var seriesIndex = model.get('seriesIndex.' + type);\n        // Not supported magicType\n        if (!seriesOptGenreator[type]) {\n            return;\n        }\n        var newOption = {\n            series: []\n        };\n        var generateNewSeriesTypes = function (seriesModel) {\n            var seriesType = seriesModel.subType;\n            var seriesId = seriesModel.id;\n            var newSeriesOpt = seriesOptGenreator[type](\n                seriesType, seriesId, seriesModel, model\n            );\n            if (newSeriesOpt) {\n                // PENDING If merge original option?\n                zrUtil.defaults(newSeriesOpt, seriesModel.option);\n                newOption.series.push(newSeriesOpt);\n            }\n            // Modify boundaryGap\n            var coordSys = seriesModel.coordinateSystem;\n            if (coordSys && coordSys.type === 'cartesian2d' && (type === 'line' || type === 'bar')) {\n                var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n                if (categoryAxis) {\n                    var axisDim = categoryAxis.dim;\n                    var axisType = axisDim + 'Axis';\n                    var axisModel = ecModel.queryComponents({\n                        mainType: axisType,\n                        index: seriesModel.get(name + 'Index'),\n                        id: seriesModel.get(name + 'Id')\n                    })[0];\n                    var axisIndex = axisModel.componentIndex;\n\n                    newOption[axisType] = newOption[axisType] || [];\n                    for (var i = 0; i <= axisIndex; i++) {\n                        newOption[axisType][axisIndex] = newOption[axisType][axisIndex] || {};\n                    }\n                    newOption[axisType][axisIndex].boundaryGap = type === 'bar' ? true : false;\n                }\n            }\n        };\n\n        zrUtil.each(radioTypes, function (radio) {\n            if (zrUtil.indexOf(radio, type) >= 0) {\n                zrUtil.each(radio, function (item) {\n                    model.setIconStatus(item, 'normal');\n                });\n            }\n        });\n\n        model.setIconStatus(type, 'emphasis');\n\n        ecModel.eachComponent(\n            {\n                mainType: 'series',\n                query: seriesIndex == null ? null : {\n                    seriesIndex: seriesIndex\n                }\n            }, generateNewSeriesTypes\n        );\n        api.dispatchAction({\n            type: 'changeMagicType',\n            currentType: type,\n            newOption: newOption\n        });\n    };\n\n    var echarts = __webpack_require__(971);\n    echarts.registerAction({\n        type: 'changeMagicType',\n        event: 'magicTypeChanged',\n        update: 'prepareAndUpdate'\n    }, function (payload, ecModel) {\n        ecModel.mergeOption(payload.newOption);\n    });\n\n    __webpack_require__(988).register('magicType', MagicType);\n\n    module.exports = MagicType;\n\n\n/***/ }),\n\n/***/ 1138:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/component/toolbox/feature/DataView\n */\n\n\n\n    var zrUtil = __webpack_require__(970);\n    var eventTool = __webpack_require__(989);\n    var lang = __webpack_require__(996).toolbox.dataView;\n\n    var BLOCK_SPLITER = new Array(60).join('-');\n    var ITEM_SPLITER = '\\t';\n    /**\n     * Group series into two types\n     *  1. on category axis, like line, bar\n     *  2. others, like scatter, pie\n     * @param {module:echarts/model/Global} ecModel\n     * @return {Object}\n     * @inner\n     */\n    function groupSeries(ecModel) {\n        var seriesGroupByCategoryAxis = {};\n        var otherSeries = [];\n        var meta = [];\n        ecModel.eachRawSeries(function (seriesModel) {\n            var coordSys = seriesModel.coordinateSystem;\n\n            if (coordSys && (coordSys.type === 'cartesian2d' || coordSys.type === 'polar')) {\n                var baseAxis = coordSys.getBaseAxis();\n                if (baseAxis.type === 'category') {\n                    var key = baseAxis.dim + '_' + baseAxis.index;\n                    if (!seriesGroupByCategoryAxis[key]) {\n                        seriesGroupByCategoryAxis[key] = {\n                            categoryAxis: baseAxis,\n                            valueAxis: coordSys.getOtherAxis(baseAxis),\n                            series: []\n                        };\n                        meta.push({\n                            axisDim: baseAxis.dim,\n                            axisIndex: baseAxis.index\n                        });\n                    }\n                    seriesGroupByCategoryAxis[key].series.push(seriesModel);\n                }\n                else {\n                    otherSeries.push(seriesModel);\n                }\n            }\n            else {\n                otherSeries.push(seriesModel);\n            }\n        });\n\n        return {\n            seriesGroupByCategoryAxis: seriesGroupByCategoryAxis,\n            other: otherSeries,\n            meta: meta\n        };\n    }\n\n    /**\n     * Assemble content of series on cateogory axis\n     * @param {Array.<module:echarts/model/Series>} series\n     * @return {string}\n     * @inner\n     */\n    function assembleSeriesWithCategoryAxis(series) {\n        var tables = [];\n        zrUtil.each(series, function (group, key) {\n            var categoryAxis = group.categoryAxis;\n            var valueAxis = group.valueAxis;\n            var valueAxisDim = valueAxis.dim;\n\n            var headers = [' '].concat(zrUtil.map(group.series, function (series) {\n                return series.name;\n            }));\n            var columns = [categoryAxis.model.getCategories()];\n            zrUtil.each(group.series, function (series) {\n                columns.push(series.getRawData().mapArray(valueAxisDim, function (val) {\n                    return val;\n                }));\n            });\n            // Assemble table content\n            var lines = [headers.join(ITEM_SPLITER)];\n            for (var i = 0; i < columns[0].length; i++) {\n                var items = [];\n                for (var j = 0; j < columns.length; j++) {\n                    items.push(columns[j][i]);\n                }\n                lines.push(items.join(ITEM_SPLITER));\n            }\n            tables.push(lines.join('\\n'));\n        });\n        return tables.join('\\n\\n' +  BLOCK_SPLITER + '\\n\\n');\n    }\n\n    /**\n     * Assemble content of other series\n     * @param {Array.<module:echarts/model/Series>} series\n     * @return {string}\n     * @inner\n     */\n    function assembleOtherSeries(series) {\n        return zrUtil.map(series, function (series) {\n            var data = series.getRawData();\n            var lines = [series.name];\n            var vals = [];\n            data.each(data.dimensions, function () {\n                var argLen = arguments.length;\n                var dataIndex = arguments[argLen - 1];\n                var name = data.getName(dataIndex);\n                for (var i = 0; i < argLen - 1; i++) {\n                    vals[i] = arguments[i];\n                }\n                lines.push((name ? (name + ITEM_SPLITER) : '') + vals.join(ITEM_SPLITER));\n            });\n            return lines.join('\\n');\n        }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n    }\n\n    /**\n     * @param {module:echarts/model/Global}\n     * @return {Object}\n     * @inner\n     */\n    function getContentFromModel(ecModel) {\n\n        var result = groupSeries(ecModel);\n\n        return {\n            value: zrUtil.filter([\n                    assembleSeriesWithCategoryAxis(result.seriesGroupByCategoryAxis),\n                    assembleOtherSeries(result.other)\n                ], function (str) {\n                    return str.replace(/[\\n\\t\\s]/g, '');\n                }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n'),\n\n            meta: result.meta\n        };\n    }\n\n\n    function trim(str) {\n        return str.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n    }\n    /**\n     * If a block is tsv format\n     */\n    function isTSVFormat(block) {\n        // Simple method to find out if a block is tsv format\n        var firstLine = block.slice(0, block.indexOf('\\n'));\n        if (firstLine.indexOf(ITEM_SPLITER) >= 0) {\n            return true;\n        }\n    }\n\n    var itemSplitRegex = new RegExp('[' + ITEM_SPLITER + ']+', 'g');\n    /**\n     * @param {string} tsv\n     * @return {Object}\n     */\n    function parseTSVContents(tsv) {\n        var tsvLines = tsv.split(/\\n+/g);\n        var headers = trim(tsvLines.shift()).split(itemSplitRegex);\n\n        var categories = [];\n        var series = zrUtil.map(headers, function (header) {\n            return {\n                name: header,\n                data: []\n            };\n        });\n        for (var i = 0; i < tsvLines.length; i++) {\n            var items = trim(tsvLines[i]).split(itemSplitRegex);\n            categories.push(items.shift());\n            for (var j = 0; j < items.length; j++) {\n                series[j] && (series[j].data[i] = items[j]);\n            }\n        }\n        return {\n            series: series,\n            categories: categories\n        };\n    }\n\n    /**\n     * @param {string} str\n     * @return {Array.<Object>}\n     * @inner\n     */\n    function parseListContents(str) {\n        var lines = str.split(/\\n+/g);\n        var seriesName = trim(lines.shift());\n\n        var data = [];\n        for (var i = 0; i < lines.length; i++) {\n            var items = trim(lines[i]).split(itemSplitRegex);\n            var name = '';\n            var value;\n            var hasName = false;\n            if (isNaN(items[0])) { // First item is name\n                hasName = true;\n                name = items[0];\n                items = items.slice(1);\n                data[i] = {\n                    name: name,\n                    value: []\n                };\n                value = data[i].value;\n            }\n            else {\n                value = data[i] = [];\n            }\n            for (var j = 0; j < items.length; j++) {\n                value.push(+items[j]);\n            }\n            if (value.length === 1) {\n                hasName ? (data[i].value = value[0]) : (data[i] = value[0]);\n            }\n        }\n\n        return {\n            name: seriesName,\n            data: data\n        };\n    }\n\n    /**\n     * @param {string} str\n     * @param {Array.<Object>} blockMetaList\n     * @return {Object}\n     * @inner\n     */\n    function parseContents(str, blockMetaList) {\n        var blocks = str.split(new RegExp('\\n*' + BLOCK_SPLITER + '\\n*', 'g'));\n        var newOption = {\n            series: []\n        };\n        zrUtil.each(blocks, function (block, idx) {\n            if (isTSVFormat(block)) {\n                var result = parseTSVContents(block);\n                var blockMeta = blockMetaList[idx];\n                var axisKey = blockMeta.axisDim + 'Axis';\n\n                if (blockMeta) {\n                    newOption[axisKey] = newOption[axisKey] || [];\n                    newOption[axisKey][blockMeta.axisIndex] = {\n                        data: result.categories\n                    };\n                    newOption.series = newOption.series.concat(result.series);\n                }\n            }\n            else {\n                var result = parseListContents(block);\n                newOption.series.push(result);\n            }\n        });\n        return newOption;\n    }\n\n    /**\n     * @alias {module:echarts/component/toolbox/feature/DataView}\n     * @constructor\n     * @param {module:echarts/model/Model} model\n     */\n    function DataView(model) {\n\n        this._dom = null;\n\n        this.model = model;\n    }\n\n    DataView.defaultOption = {\n        show: true,\n        readOnly: false,\n        optionToContent: null,\n        contentToOption: null,\n\n        icon: 'M17.5,17.3H33 M17.5,17.3H33 M45.4,29.5h-28 M11.5,2v56H51V14.8L38.4,2H11.5z M38.4,2.2v12.7H51 M45.4,41.7h-28',\n        title: zrUtil.clone(lang.title),\n        lang: zrUtil.clone(lang.lang),\n        backgroundColor: '#fff',\n        textColor: '#000',\n        textareaColor: '#fff',\n        textareaBorderColor: '#333',\n        buttonColor: '#c23531',\n        buttonTextColor: '#fff'\n    };\n\n    DataView.prototype.onclick = function (ecModel, api) {\n        var container = api.getDom();\n        var model = this.model;\n        if (this._dom) {\n            container.removeChild(this._dom);\n        }\n        var root = document.createElement('div');\n        root.style.cssText = 'position:absolute;left:5px;top:5px;bottom:5px;right:5px;';\n        root.style.backgroundColor = model.get('backgroundColor') || '#fff';\n\n        // Create elements\n        var header = document.createElement('h4');\n        var lang = model.get('lang') || [];\n        header.innerHTML = lang[0] || model.get('title');\n        header.style.cssText = 'margin: 10px 20px;';\n        header.style.color = model.get('textColor');\n\n        var viewMain = document.createElement('div');\n        var textarea = document.createElement('textarea');\n        viewMain.style.cssText = 'display:block;width:100%;overflow:auto;';\n\n        var optionToContent = model.get('optionToContent');\n        var contentToOption = model.get('contentToOption');\n        var result = getContentFromModel(ecModel);\n        if (typeof optionToContent === 'function') {\n            var htmlOrDom = optionToContent(api.getOption());\n            if (typeof htmlOrDom === 'string') {\n                viewMain.innerHTML = htmlOrDom;\n            }\n            else if (zrUtil.isDom(htmlOrDom)) {\n                viewMain.appendChild(htmlOrDom);\n            }\n        }\n        else {\n            // Use default textarea\n            viewMain.appendChild(textarea);\n            textarea.readOnly = model.get('readOnly');\n            textarea.style.cssText = 'width:100%;height:100%;font-family:monospace;font-size:14px;line-height:1.6rem;';\n            textarea.style.color = model.get('textColor');\n            textarea.style.borderColor = model.get('textareaBorderColor');\n            textarea.style.backgroundColor = model.get('textareaColor');\n            textarea.value = result.value;\n        }\n\n        var blockMetaList = result.meta;\n\n        var buttonContainer = document.createElement('div');\n        buttonContainer.style.cssText = 'position:absolute;bottom:0;left:0;right:0;';\n\n        var buttonStyle = 'float:right;margin-right:20px;border:none;'\n            + 'cursor:pointer;padding:2px 5px;font-size:12px;border-radius:3px';\n        var closeButton = document.createElement('div');\n        var refreshButton = document.createElement('div');\n\n        buttonStyle += ';background-color:' + model.get('buttonColor');\n        buttonStyle += ';color:' + model.get('buttonTextColor');\n\n        var self = this;\n\n        function close() {\n            container.removeChild(root);\n            self._dom = null;\n        }\n        eventTool.addEventListener(closeButton, 'click', close);\n\n        eventTool.addEventListener(refreshButton, 'click', function () {\n            var newOption;\n            try {\n                if (typeof contentToOption === 'function') {\n                    newOption = contentToOption(viewMain, api.getOption());\n                }\n                else {\n                    newOption = parseContents(textarea.value, blockMetaList);\n                }\n            }\n            catch (e) {\n                close();\n                throw new Error('Data view format error ' + e);\n            }\n            if (newOption) {\n                api.dispatchAction({\n                    type: 'changeDataView',\n                    newOption: newOption\n                });\n            }\n\n            close();\n        });\n\n        closeButton.innerHTML = lang[1];\n        refreshButton.innerHTML = lang[2];\n        refreshButton.style.cssText = buttonStyle;\n        closeButton.style.cssText = buttonStyle;\n\n        !model.get('readOnly') && buttonContainer.appendChild(refreshButton);\n        buttonContainer.appendChild(closeButton);\n\n        // http://stackoverflow.com/questions/6637341/use-tab-to-indent-in-textarea\n        eventTool.addEventListener(textarea, 'keydown', function (e) {\n            if ((e.keyCode || e.which) === 9) {\n                // get caret position/selection\n                var val = this.value;\n                var start = this.selectionStart;\n                var end = this.selectionEnd;\n\n                // set textarea value to: text before caret + tab + text after caret\n                this.value = val.substring(0, start) + ITEM_SPLITER + val.substring(end);\n\n                // put caret at right position again\n                this.selectionStart = this.selectionEnd = start + 1;\n\n                // prevent the focus lose\n                eventTool.stop(e);\n            }\n        });\n\n        root.appendChild(header);\n        root.appendChild(viewMain);\n        root.appendChild(buttonContainer);\n\n        viewMain.style.height = (container.clientHeight - 80) + 'px';\n\n        container.appendChild(root);\n        this._dom = root;\n    };\n\n    DataView.prototype.remove = function (ecModel, api) {\n        this._dom && api.getDom().removeChild(this._dom);\n    };\n\n    DataView.prototype.dispose = function (ecModel, api) {\n        this.remove(ecModel, api);\n    };\n\n    /**\n     * @inner\n     */\n    function tryMergeDataOption(newData, originalData) {\n        return zrUtil.map(newData, function (newVal, idx) {\n            var original = originalData && originalData[idx];\n            if (zrUtil.isObject(original) && !zrUtil.isArray(original)) {\n                if (zrUtil.isObject(newVal) && !zrUtil.isArray(newVal)) {\n                    newVal = newVal.value;\n                }\n                // Original data has option\n                return zrUtil.defaults({\n                    value: newVal\n                }, original);\n            }\n            else {\n                return newVal;\n            }\n        });\n    }\n\n    __webpack_require__(988).register('dataView', DataView);\n\n    __webpack_require__(971).registerAction({\n        type: 'changeDataView',\n        event: 'dataViewChanged',\n        update: 'prepareAndUpdate'\n    }, function (payload, ecModel) {\n        var newSeriesOptList = [];\n        zrUtil.each(payload.newOption.series, function (seriesOpt) {\n            var seriesModel = ecModel.getSeriesByName(seriesOpt.name)[0];\n            if (!seriesModel) {\n                // New created series\n                // Geuss the series type\n                newSeriesOptList.push(zrUtil.extend({\n                    // Default is scatter\n                    type: 'scatter'\n                }, seriesOpt));\n            }\n            else {\n                var originalData = seriesModel.get('data');\n                newSeriesOptList.push({\n                    name: seriesOpt.name,\n                    data: tryMergeDataOption(seriesOpt.data, originalData)\n                });\n            }\n        });\n\n        ecModel.mergeOption(zrUtil.defaults({\n            series: newSeriesOptList\n        }, payload.newOption));\n    });\n\n    module.exports = DataView;\n\n\n/***/ }),\n\n/***/ 1139:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(970);\n    var BrushController = __webpack_require__(1054);\n    var BrushTargetManager = __webpack_require__(1070);\n    var history = __webpack_require__(1044);\n    var sliderMove = __webpack_require__(1028);\n    var lang = __webpack_require__(996).toolbox.dataZoom;\n\n    var each = zrUtil.each;\n\n    // Use dataZoomSelect\n    __webpack_require__(1140);\n\n    // Spectial component id start with \\0ec\\0, see echarts/model/Global.js~hasInnerId\n    var DATA_ZOOM_ID_BASE = '\\0_ec_\\0toolbox-dataZoom_';\n\n    function DataZoom(model, ecModel, api) {\n\n        /**\n         * @private\n         * @type {module:echarts/component/helper/BrushController}\n         */\n        (this._brushController = new BrushController(api.getZr()))\n            .on('brush', zrUtil.bind(this._onBrush, this))\n            .mount();\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._isZoomActive;\n    }\n\n    DataZoom.defaultOption = {\n        show: true,\n        // Icon group\n        icon: {\n            zoom: 'M0,13.5h26.9 M13.5,26.9V0 M32.1,13.5H58V58H13.5 V32.1',\n            back: 'M22,1.4L9.9,13.5l12.3,12.3 M10.3,13.5H54.9v44.6 H10.3v-26'\n        },\n        // `zoom`, `back`\n        title: zrUtil.clone(lang.title)\n    };\n\n    var proto = DataZoom.prototype;\n\n    proto.render = function (featureModel, ecModel, api, payload) {\n        this.model = featureModel;\n        this.ecModel = ecModel;\n        this.api = api;\n\n        updateZoomBtnStatus(featureModel, ecModel, this, payload, api);\n        updateBackBtnStatus(featureModel, ecModel);\n    };\n\n    proto.onclick = function (ecModel, api, type) {\n        handlers[type].call(this);\n    };\n\n    proto.remove = function (ecModel, api) {\n        this._brushController.unmount();\n    };\n\n    proto.dispose = function (ecModel, api) {\n        this._brushController.dispose();\n    };\n\n    /**\n     * @private\n     */\n    var handlers = {\n\n        zoom: function () {\n            var nextActive = !this._isZoomActive;\n\n            this.api.dispatchAction({\n                type: 'takeGlobalCursor',\n                key: 'dataZoomSelect',\n                dataZoomSelectActive: nextActive\n            });\n        },\n\n        back: function () {\n            this._dispatchZoomAction(history.pop(this.ecModel));\n        }\n    };\n\n    /**\n     * @private\n     */\n    proto._onBrush = function (areas, opt) {\n        if (!opt.isEnd || !areas.length) {\n            return;\n        }\n        var snapshot = {};\n        var ecModel = this.ecModel;\n\n        this._brushController.updateCovers([]); // remove cover\n\n        var brushTargetManager = new BrushTargetManager(\n            retrieveAxisSetting(this.model.option), ecModel, {include: ['grid']}\n        );\n        brushTargetManager.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n            if (coordSys.type !== 'cartesian2d') {\n                return;\n            }\n\n            var brushType = area.brushType;\n            if (brushType === 'rect') {\n                setBatch('x', coordSys, coordRange[0]);\n                setBatch('y', coordSys, coordRange[1]);\n            }\n            else {\n                setBatch(({lineX: 'x', lineY: 'y'})[brushType], coordSys, coordRange);\n            }\n        });\n\n        history.push(ecModel, snapshot);\n\n        this._dispatchZoomAction(snapshot);\n\n        function setBatch(dimName, coordSys, minMax) {\n            var axis = coordSys.getAxis(dimName);\n            var axisModel = axis.model;\n            var dataZoomModel = findDataZoom(dimName, axisModel, ecModel);\n\n            // Restrict range.\n            var minMaxSpan = dataZoomModel.findRepresentativeAxisProxy(axisModel).getMinMaxSpan();\n            if (minMaxSpan.minValueSpan != null || minMaxSpan.maxValueSpan != null) {\n                minMax = sliderMove(\n                    0, minMax.slice(), axis.scale.getExtent(), 0,\n                    minMaxSpan.minValueSpan, minMaxSpan.maxValueSpan\n                );\n            }\n\n            dataZoomModel && (snapshot[dataZoomModel.id] = {\n                dataZoomId: dataZoomModel.id,\n                startValue: minMax[0],\n                endValue: minMax[1]\n            });\n        }\n\n        function findDataZoom(dimName, axisModel, ecModel) {\n            var found;\n            ecModel.eachComponent({mainType: 'dataZoom', subType: 'select'}, function (dzModel) {\n                var has = dzModel.getAxisModel(dimName, axisModel.componentIndex);\n                has && (found = dzModel);\n            });\n            return found;\n        }\n    };\n\n    /**\n     * @private\n     */\n    proto._dispatchZoomAction = function (snapshot) {\n        var batch = [];\n\n        // Convert from hash map to array.\n        each(snapshot, function (batchItem, dataZoomId) {\n            batch.push(zrUtil.clone(batchItem));\n        });\n\n        batch.length && this.api.dispatchAction({\n            type: 'dataZoom',\n            from: this.uid,\n            batch: batch\n        });\n    };\n\n    function retrieveAxisSetting(option) {\n        var setting = {};\n        // Compatible with previous setting: null => all axis, false => no axis.\n        zrUtil.each(['xAxisIndex', 'yAxisIndex'], function (name) {\n            setting[name] = option[name];\n            setting[name] == null && (setting[name] = 'all');\n            (setting[name] === false || setting[name] === 'none') && (setting[name] = []);\n        });\n        return setting;\n    }\n\n    function updateBackBtnStatus(featureModel, ecModel) {\n        featureModel.setIconStatus(\n            'back',\n            history.count(ecModel) > 1 ? 'emphasis' : 'normal'\n        );\n    }\n\n    function updateZoomBtnStatus(featureModel, ecModel, view, payload, api) {\n        var zoomActive = view._isZoomActive;\n\n        if (payload && payload.type === 'takeGlobalCursor') {\n            zoomActive = payload.key === 'dataZoomSelect'\n                ? payload.dataZoomSelectActive : false;\n        }\n\n        view._isZoomActive = zoomActive;\n\n        featureModel.setIconStatus('zoom', zoomActive ? 'emphasis' : 'normal');\n\n        var brushTargetManager = new BrushTargetManager(\n            retrieveAxisSetting(featureModel.option), ecModel, {include: ['grid']}\n        );\n\n        view._brushController\n            .setPanels(brushTargetManager.makePanelOpts(api, function (targetInfo) {\n                return (targetInfo.xAxisDeclared && !targetInfo.yAxisDeclared)\n                    ? 'lineX'\n                    : (!targetInfo.xAxisDeclared && targetInfo.yAxisDeclared)\n                    ? 'lineY'\n                    : 'rect';\n            }))\n            .enableBrush(\n                zoomActive\n                ? {\n                    brushType: 'auto',\n                    brushStyle: {\n                        // FIXME user customized?\n                        lineWidth: 0,\n                        fill: 'rgba(0,0,0,0.2)'\n                    }\n                }\n                : false\n            );\n    }\n\n\n    __webpack_require__(988).register('dataZoom', DataZoom);\n\n\n    // Create special dataZoom option for select\n    __webpack_require__(971).registerPreprocessor(function (option) {\n        if (!option) {\n            return;\n        }\n\n        var dataZoomOpts = option.dataZoom || (option.dataZoom = []);\n        if (!zrUtil.isArray(dataZoomOpts)) {\n            option.dataZoom = dataZoomOpts = [dataZoomOpts];\n        }\n\n        var toolboxOpt = option.toolbox;\n        if (toolboxOpt) {\n            // Assume there is only one toolbox\n            if (zrUtil.isArray(toolboxOpt)) {\n                toolboxOpt = toolboxOpt[0];\n            }\n\n            if (toolboxOpt && toolboxOpt.feature) {\n                var dataZoomOpt = toolboxOpt.feature.dataZoom;\n                addForAxis('xAxis', dataZoomOpt);\n                addForAxis('yAxis', dataZoomOpt);\n            }\n        }\n\n        function addForAxis(axisName, dataZoomOpt) {\n            if (!dataZoomOpt) {\n                return;\n            }\n\n            // Try not to modify model, because it is not merged yet.\n            var axisIndicesName = axisName + 'Index';\n            var givenAxisIndices = dataZoomOpt[axisIndicesName];\n            if (givenAxisIndices != null\n                && givenAxisIndices != 'all'\n                && !zrUtil.isArray(givenAxisIndices)\n            ) {\n                givenAxisIndices = (givenAxisIndices === false || givenAxisIndices === 'none') ? [] : [givenAxisIndices];\n            }\n\n            forEachComponent(axisName, function (axisOpt, axisIndex) {\n                if (givenAxisIndices != null\n                    && givenAxisIndices != 'all'\n                    && zrUtil.indexOf(givenAxisIndices, axisIndex) === -1\n                ) {\n                    return;\n                }\n                var newOpt = {\n                    type: 'select',\n                    $fromToolbox: true,\n                    // Id for merge mapping.\n                    id: DATA_ZOOM_ID_BASE + axisName + axisIndex\n                };\n                // FIXME\n                // Only support one axis now.\n                newOpt[axisIndicesName] = axisIndex;\n                dataZoomOpts.push(newOpt);\n            });\n        }\n\n        function forEachComponent(mainType, cb) {\n            var opts = option[mainType];\n            if (!zrUtil.isArray(opts)) {\n                opts = opts ? [opts] : [];\n            }\n            each(opts, cb);\n        }\n    });\n\n    module.exports = DataZoom;\n\n\n/***/ }),\n\n/***/ 1140:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * DataZoom component entry\n */\n\n\n    __webpack_require__(1072);\n\n    __webpack_require__(1018);\n    __webpack_require__(1020);\n\n    __webpack_require__(1142);\n    __webpack_require__(1143);\n\n    __webpack_require__(1073);\n    __webpack_require__(1074);\n\n\n\n/***/ }),\n\n/***/ 1141:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @file Axis operator\n */\n\n\n    var zrUtil = __webpack_require__(970);\n    var numberUtil = __webpack_require__(973);\n    var helper = __webpack_require__(1019);\n    var each = zrUtil.each;\n    var asc = numberUtil.asc;\n\n    /**\n     * Operate single axis.\n     * One axis can only operated by one axis operator.\n     * Different dataZoomModels may be defined to operate the same axis.\n     * (i.e. 'inside' data zoom and 'slider' data zoom components)\n     * So dataZoomModels share one axisProxy in that case.\n     *\n     * @class\n     */\n    var AxisProxy = function (dimName, axisIndex, dataZoomModel, ecModel) {\n\n        /**\n         * @private\n         * @type {string}\n         */\n        this._dimName = dimName;\n\n        /**\n         * @private\n         */\n        this._axisIndex = axisIndex;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._valueWindow;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._percentWindow;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._dataExtent;\n\n        /**\n         * {minSpan, maxSpan, minValueSpan, maxValueSpan}\n         * @private\n         * @type {Object}\n         */\n        this._minMaxSpan;\n\n        /**\n         * @readOnly\n         * @type {module: echarts/model/Global}\n         */\n        this.ecModel = ecModel;\n\n        /**\n         * @private\n         * @type {module: echarts/component/dataZoom/DataZoomModel}\n         */\n        this._dataZoomModel = dataZoomModel;\n    };\n\n    AxisProxy.prototype = {\n\n        constructor: AxisProxy,\n\n        /**\n         * Whether the axisProxy is hosted by dataZoomModel.\n         *\n         * @public\n         * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n         * @return {boolean}\n         */\n        hostedBy: function (dataZoomModel) {\n            return this._dataZoomModel === dataZoomModel;\n        },\n\n        /**\n         * @return {Array.<number>} Value can only be NaN or finite value.\n         */\n        getDataValueWindow: function () {\n            return this._valueWindow.slice();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getDataPercentWindow: function () {\n            return this._percentWindow.slice();\n        },\n\n        /**\n         * @public\n         * @param {number} axisIndex\n         * @return {Array} seriesModels\n         */\n        getTargetSeriesModels: function () {\n            var seriesModels = [];\n            var ecModel = this.ecModel;\n\n            ecModel.eachSeries(function (seriesModel) {\n                if (helper.isCoordSupported(seriesModel.get('coordinateSystem'))) {\n                    var dimName = this._dimName;\n                    var axisModel = ecModel.queryComponents({\n                        mainType: dimName + 'Axis',\n                        index: seriesModel.get(dimName + 'AxisIndex'),\n                        id: seriesModel.get(dimName + 'AxisId')\n                    })[0];\n                    if (this._axisIndex === (axisModel && axisModel.componentIndex)) {\n                        seriesModels.push(seriesModel);\n                    }\n                }\n            }, this);\n\n            return seriesModels;\n        },\n\n        getAxisModel: function () {\n            return this.ecModel.getComponent(this._dimName + 'Axis', this._axisIndex);\n        },\n\n        getOtherAxisModel: function () {\n            var axisDim = this._dimName;\n            var ecModel = this.ecModel;\n            var axisModel = this.getAxisModel();\n            var isCartesian = axisDim === 'x' || axisDim === 'y';\n            var otherAxisDim;\n            var coordSysIndexName;\n            if (isCartesian) {\n                coordSysIndexName = 'gridIndex';\n                otherAxisDim = axisDim === 'x' ? 'y' : 'x';\n            }\n            else {\n                coordSysIndexName = 'polarIndex';\n                otherAxisDim = axisDim === 'angle' ? 'radius' : 'angle';\n            }\n            var foundOtherAxisModel;\n            ecModel.eachComponent(otherAxisDim + 'Axis', function (otherAxisModel) {\n                if ((otherAxisModel.get(coordSysIndexName) || 0)\n                    === (axisModel.get(coordSysIndexName) || 0)\n                ) {\n                    foundOtherAxisModel = otherAxisModel;\n                }\n            });\n            return foundOtherAxisModel;\n        },\n\n        getMinMaxSpan: function () {\n            return zrUtil.clone(this._minMaxSpan);\n        },\n\n        /**\n         * Only calculate by given range and this._dataExtent, do not change anything.\n         *\n         * @param {Object} opt\n         * @param {number} [opt.start]\n         * @param {number} [opt.end]\n         * @param {number} [opt.startValue]\n         * @param {number} [opt.endValue]\n         */\n        calculateDataWindow: function (opt) {\n            var dataExtent = this._dataExtent;\n            var axisModel = this.getAxisModel();\n            var scale = axisModel.axis.scale;\n            var rangePropMode = this._dataZoomModel.getRangePropMode();\n            var percentExtent = [0, 100];\n            var percentWindow = [\n                opt.start,\n                opt.end\n            ];\n            var valueWindow = [];\n\n            each(['startValue', 'endValue'], function (prop) {\n                valueWindow.push(opt[prop] != null ? scale.parse(opt[prop]) : null);\n            });\n\n            // Normalize bound.\n            each([0, 1], function (idx) {\n                var boundValue = valueWindow[idx];\n                var boundPercent = percentWindow[idx];\n\n                // Notice: dataZoom is based either on `percentProp` ('start', 'end') or\n                // on `valueProp` ('startValue', 'endValue'). The former one is suitable\n                // for cases that a dataZoom component controls multiple axes with different\n                // unit or extent, and the latter one is suitable for accurate zoom by pixel\n                // (e.g., in dataZoomSelect). `valueProp` can be calculated from `percentProp`,\n                // but it is awkward that `percentProp` can not be obtained from `valueProp`\n                // accurately (because all of values that are overflow the `dataExtent` will\n                // be calculated to percent '100%'). So we have to use\n                // `dataZoom.getRangePropMode()` to mark which prop is used.\n                // `rangePropMode` is updated only when setOption or dispatchAction, otherwise\n                // it remains its original value.\n\n                if (rangePropMode[idx] === 'percent') {\n                    if (boundPercent == null) {\n                        boundPercent = percentExtent[idx];\n                    }\n                    // Use scale.parse to math round for category or time axis.\n                    boundValue = scale.parse(numberUtil.linearMap(\n                        boundPercent, percentExtent, dataExtent, true\n                    ));\n                }\n                else {\n                    // Calculating `percent` from `value` may be not accurate, because\n                    // This calculation can not be inversed, because all of values that\n                    // are overflow the `dataExtent` will be calculated to percent '100%'\n                    boundPercent = numberUtil.linearMap(\n                        boundValue, dataExtent, percentExtent, true\n                    );\n                }\n\n                // valueWindow[idx] = round(boundValue);\n                // percentWindow[idx] = round(boundPercent);\n                valueWindow[idx] = boundValue;\n                percentWindow[idx] = boundPercent;\n            });\n\n            return {\n                valueWindow: asc(valueWindow),\n                percentWindow: asc(percentWindow)\n            };\n        },\n\n        /**\n         * Notice: reset should not be called before series.restoreData() called,\n         * so it is recommanded to be called in \"process stage\" but not \"model init\n         * stage\".\n         *\n         * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n         */\n        reset: function (dataZoomModel) {\n            if (dataZoomModel !== this._dataZoomModel) {\n                return;\n            }\n\n            // Culculate data window and data extent, and record them.\n            this._dataExtent = calculateDataExtent(\n                this, this._dimName, this.getTargetSeriesModels()\n            );\n\n            var dataWindow = this.calculateDataWindow(dataZoomModel.option);\n\n            this._valueWindow = dataWindow.valueWindow;\n            this._percentWindow = dataWindow.percentWindow;\n\n            setMinMaxSpan(this);\n\n            // Update axis setting then.\n            setAxisModel(this);\n        },\n\n        /**\n         * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n         */\n        restore: function (dataZoomModel) {\n            if (dataZoomModel !== this._dataZoomModel) {\n                return;\n            }\n\n            this._valueWindow = this._percentWindow = null;\n            setAxisModel(this, true);\n        },\n\n        /**\n         * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n         */\n        filterData: function (dataZoomModel) {\n            if (dataZoomModel !== this._dataZoomModel) {\n                return;\n            }\n\n            var axisDim = this._dimName;\n            var seriesModels = this.getTargetSeriesModels();\n            var filterMode = dataZoomModel.get('filterMode');\n            var valueWindow = this._valueWindow;\n\n            if (filterMode === 'none') {\n                return;\n            }\n\n            // FIXME\n            // Toolbox may has dataZoom injected. And if there are stacked bar chart\n            // with NaN data, NaN will be filtered and stack will be wrong.\n            // So we need to force the mode to be set empty.\n            // In fect, it is not a big deal that do not support filterMode-'filter'\n            // when using toolbox#dataZoom, utill tooltip#dataZoom support \"single axis\n            // selection\" some day, which might need \"adapt to data extent on the\n            // otherAxis\", which is disabled by filterMode-'empty'.\n            var otherAxisModel = this.getOtherAxisModel();\n            if (dataZoomModel.get('$fromToolbox')\n                && otherAxisModel\n                && otherAxisModel.get('type') === 'category'\n            ) {\n                filterMode = 'empty';\n            }\n\n            // Process series data\n            each(seriesModels, function (seriesModel) {\n                var seriesData = seriesModel.getData();\n                var dataDims = seriesModel.coordDimToDataDim(axisDim);\n\n                if (filterMode === 'weakFilter') {\n                    seriesData && seriesData.filterSelf(function (dataIndex) {\n                        var leftOut;\n                        var rightOut;\n                        var hasValue;\n                        for (var i = 0; i < dataDims.length; i++) {\n                            var value = seriesData.get(dataDims[i], dataIndex);\n                            var thisHasValue = !isNaN(value);\n                            var thisLeftOut = value < valueWindow[0];\n                            var thisRightOut = value > valueWindow[1];\n                            if (thisHasValue && !thisLeftOut && !thisRightOut) {\n                                return true;\n                            }\n                            thisHasValue && (hasValue = true);\n                            thisLeftOut && (leftOut = true);\n                            thisRightOut && (rightOut = true);\n                        }\n                        // If both left out and right out, do not filter.\n                        return hasValue && leftOut && rightOut;\n                    });\n                }\n                else {\n                    seriesData && each(dataDims, function (dim) {\n                        if (filterMode === 'empty') {\n                            seriesModel.setData(\n                                seriesData.map(dim, function (value) {\n                                    return !isInWindow(value) ? NaN : value;\n                                })\n                            );\n                        }\n                        else {\n                            seriesData.filterSelf(dim, isInWindow);\n                        }\n                    });\n                }\n            });\n\n            function isInWindow(value) {\n                return value >= valueWindow[0] && value <= valueWindow[1];\n            }\n        }\n    };\n\n    function calculateDataExtent(axisProxy, axisDim, seriesModels) {\n        var dataExtent = [Infinity, -Infinity];\n\n        each(seriesModels, function (seriesModel) {\n            var seriesData = seriesModel.getData();\n            if (seriesData) {\n                each(seriesModel.coordDimToDataDim(axisDim), function (dim) {\n                    var seriesExtent = seriesData.getDataExtent(dim);\n                    seriesExtent[0] < dataExtent[0] && (dataExtent[0] = seriesExtent[0]);\n                    seriesExtent[1] > dataExtent[1] && (dataExtent[1] = seriesExtent[1]);\n                });\n            }\n        });\n\n        if (dataExtent[1] < dataExtent[0]) {\n            dataExtent = [NaN, NaN];\n        }\n\n        // It is important to get \"consistent\" extent when more then one axes is\n        // controlled by a `dataZoom`, otherwise those axes will not be synchronized\n        // when zooming. But it is difficult to know what is \"consistent\", considering\n        // axes have different type or even different meanings (For example, two\n        // time axes are used to compare data of the same date in different years).\n        // So basically dataZoom just obtains extent by series.data (in category axis\n        // extent can be obtained from axis.data).\n        // Nevertheless, user can set min/max/scale on axes to make extent of axes\n        // consistent.\n        fixExtentByAxis(axisProxy, dataExtent);\n\n        return dataExtent;\n    }\n\n    function fixExtentByAxis(axisProxy, dataExtent) {\n        var axisModel = axisProxy.getAxisModel();\n        var min = axisModel.getMin(true);\n\n        // For category axis, if min/max/scale are not set, extent is determined\n        // by axis.data by default.\n        var isCategoryAxis = axisModel.get('type') === 'category';\n        var axisDataLen = isCategoryAxis && (axisModel.get('data') || []).length;\n\n        if (min != null && min !== 'dataMin' && typeof min !== 'function') {\n            dataExtent[0] = min;\n        }\n        else if (isCategoryAxis) {\n            dataExtent[0] = axisDataLen > 0 ? 0 : NaN;\n        }\n\n        var max = axisModel.getMax(true);\n        if (max != null && max !== 'dataMax' && typeof max !== 'function') {\n            dataExtent[1] = max;\n        }\n        else if (isCategoryAxis) {\n            dataExtent[1] = axisDataLen > 0 ? axisDataLen - 1 : NaN;\n        }\n\n        if (!axisModel.get('scale', true)) {\n            dataExtent[0] > 0 && (dataExtent[0] = 0);\n            dataExtent[1] < 0 && (dataExtent[1] = 0);\n        }\n\n        // For value axis, if min/max/scale are not set, we just use the extent obtained\n        // by series data, which may be a little different from the extent calculated by\n        // `axisHelper.getScaleExtent`. But the different just affects the experience a\n        // little when zooming. So it will not be fixed until some users require it strongly.\n\n        return dataExtent;\n    }\n\n    function setAxisModel(axisProxy, isRestore) {\n        var axisModel = axisProxy.getAxisModel();\n\n        var percentWindow = axisProxy._percentWindow;\n        var valueWindow = axisProxy._valueWindow;\n\n        if (!percentWindow) {\n            return;\n        }\n\n        // [0, 500]: arbitrary value, guess axis extent.\n        var precision = numberUtil.getPixelPrecision(valueWindow, [0, 500]);\n        precision = Math.min(precision, 20);\n        // isRestore or isFull\n        var useOrigin = isRestore || (percentWindow[0] === 0 && percentWindow[1] === 100);\n\n        axisModel.setRange(\n            useOrigin ? null : +valueWindow[0].toFixed(precision),\n            useOrigin ? null : +valueWindow[1].toFixed(precision)\n        );\n    }\n\n    function setMinMaxSpan(axisProxy) {\n        var minMaxSpan = axisProxy._minMaxSpan = {};\n        var dataZoomModel = axisProxy._dataZoomModel;\n\n        each(['min', 'max'], function (minMax) {\n            minMaxSpan[minMax + 'Span'] = dataZoomModel.get(minMax + 'Span');\n\n            // minValueSpan and maxValueSpan has higher priority than minSpan and maxSpan\n            var valueSpan = dataZoomModel.get(minMax + 'ValueSpan');\n            if (valueSpan != null) {\n                minMaxSpan[minMax + 'ValueSpan'] = valueSpan;\n\n                valueSpan = axisProxy.getAxisModel().axis.scale.parse(valueSpan);\n                if (valueSpan != null) {\n                    minMaxSpan[minMax + 'Span'] = numberUtil.linearMap(\n                        valueSpan, axisProxy._dataExtent, [0, 100], true\n                    );\n                }\n            }\n        });\n    }\n\n    module.exports = AxisProxy;\n\n\n\n/***/ }),\n\n/***/ 1142:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @file Data zoom model\n */\n\n\n    var DataZoomModel = __webpack_require__(1018);\n\n    module.exports = DataZoomModel.extend({\n\n        type: 'dataZoom.select'\n\n    });\n\n\n\n/***/ }),\n\n/***/ 1143:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    module.exports = __webpack_require__(1020).extend({\n\n        type: 'dataZoom.select'\n\n    });\n\n\n\n/***/ }),\n\n/***/ 1144:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var history = __webpack_require__(1044);\n    var lang = __webpack_require__(996).toolbox.restore;\n\n    function Restore(model) {\n        this.model = model;\n    }\n\n    Restore.defaultOption = {\n        show: true,\n        icon: 'M3.8,33.4 M47,18.9h9.8V8.7 M56.3,20.1 C52.1,9,40.5,0.6,26.8,2.1C12.6,3.7,1.6,16.2,2.1,30.6 M13,41.1H3.1v10.2 M3.7,39.9c4.2,11.1,15.8,19.5,29.5,18 c14.2-1.6,25.2-14.1,24.7-28.5',\n        title: lang.title\n    };\n\n    var proto = Restore.prototype;\n\n    proto.onclick = function (ecModel, api, type) {\n        history.clear(ecModel);\n\n        api.dispatchAction({\n            type: 'restore',\n            from: this.uid\n        });\n    };\n\n\n    __webpack_require__(988).register('restore', Restore);\n\n\n    __webpack_require__(971).registerAction(\n        {type: 'restore', event: 'restore', update: 'prepareAndUpdate'},\n        function (payload, ecModel) {\n            ecModel.resetOption('recreate');\n        }\n    );\n\n    module.exports = Restore;\n\n\n/***/ }),\n\n/***/ 1148:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var echarts = __webpack_require__(971);\n    var zrUtil = __webpack_require__(970);\n    module.exports = function (seriesType, actionInfos) {\n        zrUtil.each(actionInfos, function (actionInfo) {\n            actionInfo.update = 'updateView';\n            /**\n             * @payload\n             * @property {string} seriesName\n             * @property {string} name\n             */\n            echarts.registerAction(actionInfo, function (payload, ecModel) {\n                var selected = {};\n                ecModel.eachComponent(\n                    {mainType: 'series', subType: seriesType, query: payload},\n                    function (seriesModel) {\n                        if (seriesModel[actionInfo.method]) {\n                            seriesModel[actionInfo.method](\n                                payload.name,\n                                payload.dataIndex\n                            );\n                        }\n                        var data = seriesModel.getData();\n                        // Create selected map\n                        data.each(function (idx) {\n                            var name = data.getName(idx);\n                            selected[name] = seriesModel.isSelected(name)\n                                || false;\n                        });\n                    }\n                );\n                return {\n                    name: payload.name,\n                    selected: selected\n                };\n            });\n        });\n    };\n\n\n/***/ }),\n\n/***/ 1156:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(970);\n    var echarts = __webpack_require__(971);\n\n    __webpack_require__(1157);\n    __webpack_require__(1158);\n\n    __webpack_require__(1148)('pie', [{\n        type: 'pieToggleSelect',\n        event: 'pieselectchanged',\n        method: 'toggleSelected'\n    }, {\n        type: 'pieSelect',\n        event: 'pieselected',\n        method: 'select'\n    }, {\n        type: 'pieUnSelect',\n        event: 'pieunselected',\n        method: 'unSelect'\n    }]);\n\n    echarts.registerVisual(zrUtil.curry(__webpack_require__(1133), 'pie'));\n\n    echarts.registerLayout(zrUtil.curry(\n        __webpack_require__(1159), 'pie'\n    ));\n\n    echarts.registerProcessor(zrUtil.curry(__webpack_require__(1067), 'pie'));\n\n\n/***/ }),\n\n/***/ 1157:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var List = __webpack_require__(986);\n    var zrUtil = __webpack_require__(970);\n    var modelUtil = __webpack_require__(974);\n    var numberUtil = __webpack_require__(973);\n    var completeDimensions = __webpack_require__(994);\n\n    var dataSelectableMixin = __webpack_require__(1132);\n\n    var PieSeries = __webpack_require__(971).extendSeriesModel({\n\n        type: 'series.pie',\n\n        // Overwrite\n        init: function (option) {\n            PieSeries.superApply(this, 'init', arguments);\n\n            // Enable legend selection for each data item\n            // Use a function instead of direct access because data reference may changed\n            this.legendDataProvider = function () {\n                return this.getRawData();\n            };\n\n            this.updateSelectedMap(option.data);\n\n            this._defaultLabelLine(option);\n        },\n\n        // Overwrite\n        mergeOption: function (newOption) {\n            PieSeries.superCall(this, 'mergeOption', newOption);\n            this.updateSelectedMap(this.option.data);\n        },\n\n        getInitialData: function (option, ecModel) {\n            var dimensions = completeDimensions(['value'], option.data);\n            var list = new List(dimensions, this);\n            list.initData(option.data);\n            return list;\n        },\n\n        // Overwrite\n        getDataParams: function (dataIndex) {\n            var data = this.getData();\n            var params = PieSeries.superCall(this, 'getDataParams', dataIndex);\n            // FIXME toFixed?\n\n            var valueList = [];\n            data.each('value', function (value) {\n                valueList.push(value);\n            });\n\n            params.percent = numberUtil.getPercentWithPrecision(\n                valueList,\n                dataIndex,\n                data.hostModel.get('percentPrecision')\n            );\n\n            params.$vars.push('percent');\n            return params;\n        },\n\n        _defaultLabelLine: function (option) {\n            // Extend labelLine emphasis\n            modelUtil.defaultEmphasis(option.labelLine, ['show']);\n\n            var labelLineNormalOpt = option.labelLine.normal;\n            var labelLineEmphasisOpt = option.labelLine.emphasis;\n            // Not show label line if `label.normal.show = false`\n            labelLineNormalOpt.show = labelLineNormalOpt.show\n                && option.label.normal.show;\n            labelLineEmphasisOpt.show = labelLineEmphasisOpt.show\n                && option.label.emphasis.show;\n        },\n\n        defaultOption: {\n            zlevel: 0,\n            z: 2,\n            legendHoverLink: true,\n\n            hoverAnimation: true,\n            // 默认全局居中\n            center: ['50%', '50%'],\n            radius: [0, '75%'],\n            // 默认顺时针\n            clockwise: true,\n            startAngle: 90,\n            // 最小角度改为0\n            minAngle: 0,\n            // 选中时扇区偏移量\n            selectedOffset: 10,\n            // 高亮扇区偏移量\n            hoverOffset: 10,\n\n            // If use strategy to avoid label overlapping\n            avoidLabelOverlap: true,\n            // 选择模式，默认关闭，可选single，multiple\n            // selectedMode: false,\n            // 南丁格尔玫瑰图模式，'radius'（半径） | 'area'（面积）\n            // roseType: null,\n\n            percentPrecision: 2,\n\n            // If still show when all data zero.\n            stillShowZeroSum: true,\n\n            // cursor: null,\n\n            label: {\n                normal: {\n                    // If rotate around circle\n                    rotate: false,\n                    show: true,\n                    // 'outer', 'inside', 'center'\n                    position: 'outer'\n                    // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n                    // 默认使用全局文本样式，详见TEXTSTYLE\n                    // distance: 当position为inner时有效，为label位置到圆心的距离与圆半径(环状图为内外半径和)的比例系数\n                },\n                emphasis: {}\n            },\n            // Enabled when label.normal.position is 'outer'\n            labelLine: {\n                normal: {\n                    show: true,\n                    // 引导线两段中的第一段长度\n                    length: 15,\n                    // 引导线两段中的第二段长度\n                    length2: 15,\n                    smooth: false,\n                    lineStyle: {\n                        // color: 各异,\n                        width: 1,\n                        type: 'solid'\n                    }\n                }\n            },\n            itemStyle: {\n                normal: {\n                    borderWidth: 1\n                },\n                emphasis: {}\n            },\n\n            // Animation type canbe expansion, scale\n            animationType: 'expansion',\n\n            animationEasing: 'cubicOut',\n\n            data: []\n        }\n    });\n\n    zrUtil.mixin(PieSeries, dataSelectableMixin);\n\n    module.exports = PieSeries;\n\n\n/***/ }),\n\n/***/ 1158:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var graphic = __webpack_require__(972);\n    var zrUtil = __webpack_require__(970);\n\n    /**\n     * @param {module:echarts/model/Series} seriesModel\n     * @param {boolean} hasAnimation\n     * @inner\n     */\n    function updateDataSelected(uid, seriesModel, hasAnimation, api) {\n        var data = seriesModel.getData();\n        var dataIndex = this.dataIndex;\n        var name = data.getName(dataIndex);\n        var selectedOffset = seriesModel.get('selectedOffset');\n\n        api.dispatchAction({\n            type: 'pieToggleSelect',\n            from: uid,\n            name: name,\n            seriesId: seriesModel.id\n        });\n\n        data.each(function (idx) {\n            toggleItemSelected(\n                data.getItemGraphicEl(idx),\n                data.getItemLayout(idx),\n                seriesModel.isSelected(data.getName(idx)),\n                selectedOffset,\n                hasAnimation\n            );\n        });\n    }\n\n    /**\n     * @param {module:zrender/graphic/Sector} el\n     * @param {Object} layout\n     * @param {boolean} isSelected\n     * @param {number} selectedOffset\n     * @param {boolean} hasAnimation\n     * @inner\n     */\n    function toggleItemSelected(el, layout, isSelected, selectedOffset, hasAnimation) {\n        var midAngle = (layout.startAngle + layout.endAngle) / 2;\n\n        var dx = Math.cos(midAngle);\n        var dy = Math.sin(midAngle);\n\n        var offset = isSelected ? selectedOffset : 0;\n        var position = [dx * offset, dy * offset];\n\n        hasAnimation\n            // animateTo will stop revious animation like update transition\n            ? el.animate()\n                .when(200, {\n                    position: position\n                })\n                .start('bounceOut')\n            : el.attr('position', position);\n    }\n\n    /**\n     * Piece of pie including Sector, Label, LabelLine\n     * @constructor\n     * @extends {module:zrender/graphic/Group}\n     */\n    function PiePiece(data, idx) {\n\n        graphic.Group.call(this);\n\n        var sector = new graphic.Sector({\n            z2: 2\n        });\n        var polyline = new graphic.Polyline();\n        var text = new graphic.Text();\n        this.add(sector);\n        this.add(polyline);\n        this.add(text);\n\n        this.updateData(data, idx, true);\n\n        // Hover to change label and labelLine\n        function onEmphasis() {\n            polyline.ignore = polyline.hoverIgnore;\n            text.ignore = text.hoverIgnore;\n        }\n        function onNormal() {\n            polyline.ignore = polyline.normalIgnore;\n            text.ignore = text.normalIgnore;\n        }\n        this.on('emphasis', onEmphasis)\n            .on('normal', onNormal)\n            .on('mouseover', onEmphasis)\n            .on('mouseout', onNormal);\n    }\n\n    var piePieceProto = PiePiece.prototype;\n\n    piePieceProto.updateData = function (data, idx, firstCreate) {\n\n        var sector = this.childAt(0);\n\n        var seriesModel = data.hostModel;\n        var itemModel = data.getItemModel(idx);\n        var layout = data.getItemLayout(idx);\n        var sectorShape = zrUtil.extend({}, layout);\n        sectorShape.label = null;\n\n        if (firstCreate) {\n            sector.setShape(sectorShape);\n\n            var animationType = seriesModel.getShallow('animationType');\n            if (animationType === 'scale') {\n                sector.shape.r = layout.r0;\n                graphic.initProps(sector, {\n                    shape: {\n                        r: layout.r\n                    }\n                }, seriesModel, idx);\n            }\n            // Expansion\n            else {\n                sector.shape.endAngle = layout.startAngle;\n                graphic.updateProps(sector, {\n                    shape: {\n                        endAngle: layout.endAngle\n                    }\n                }, seriesModel, idx);\n            }\n\n        }\n        else {\n            graphic.updateProps(sector, {\n                shape: sectorShape\n            }, seriesModel, idx);\n        }\n\n        // Update common style\n        var itemStyleModel = itemModel.getModel('itemStyle');\n        var visualColor = data.getItemVisual(idx, 'color');\n\n        sector.useStyle(\n            zrUtil.defaults(\n                {\n                    lineJoin: 'bevel',\n                    fill: visualColor\n                },\n                itemStyleModel.getModel('normal').getItemStyle()\n            )\n        );\n        sector.hoverStyle = itemStyleModel.getModel('emphasis').getItemStyle();\n\n        var cursorStyle = itemModel.getShallow('cursor');\n        cursorStyle && sector.attr('cursor', cursorStyle);\n\n        // Toggle selected\n        toggleItemSelected(\n            this,\n            data.getItemLayout(idx),\n            itemModel.get('selected'),\n            seriesModel.get('selectedOffset'),\n            seriesModel.get('animation')\n        );\n\n        function onEmphasis() {\n            // Sector may has animation of updating data. Force to move to the last frame\n            // Or it may stopped on the wrong shape\n            sector.stopAnimation(true);\n            sector.animateTo({\n                shape: {\n                    r: layout.r + seriesModel.get('hoverOffset')\n                }\n            }, 300, 'elasticOut');\n        }\n        function onNormal() {\n            sector.stopAnimation(true);\n            sector.animateTo({\n                shape: {\n                    r: layout.r\n                }\n            }, 300, 'elasticOut');\n        }\n        sector.off('mouseover').off('mouseout').off('emphasis').off('normal');\n        if (itemModel.get('hoverAnimation') && seriesModel.isAnimationEnabled()) {\n            sector\n                .on('mouseover', onEmphasis)\n                .on('mouseout', onNormal)\n                .on('emphasis', onEmphasis)\n                .on('normal', onNormal);\n        }\n\n        this._updateLabel(data, idx);\n\n        graphic.setHoverStyle(this);\n    };\n\n    piePieceProto._updateLabel = function (data, idx) {\n\n        var labelLine = this.childAt(1);\n        var labelText = this.childAt(2);\n\n        var seriesModel = data.hostModel;\n        var itemModel = data.getItemModel(idx);\n        var layout = data.getItemLayout(idx);\n        var labelLayout = layout.label;\n        var visualColor = data.getItemVisual(idx, 'color');\n\n        graphic.updateProps(labelLine, {\n            shape: {\n                points: labelLayout.linePoints || [\n                    [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y]\n                ]\n            }\n        }, seriesModel, idx);\n\n        graphic.updateProps(labelText, {\n            style: {\n                x: labelLayout.x,\n                y: labelLayout.y\n            }\n        }, seriesModel, idx);\n        labelText.attr({\n            rotation: labelLayout.rotation,\n            origin: [labelLayout.x, labelLayout.y],\n            z2: 10\n        });\n\n        var labelModel = itemModel.getModel('label.normal');\n        var labelHoverModel = itemModel.getModel('label.emphasis');\n        var labelLineModel = itemModel.getModel('labelLine.normal');\n        var labelLineHoverModel = itemModel.getModel('labelLine.emphasis');\n        var visualColor = data.getItemVisual(idx, 'color');\n\n        graphic.setLabelStyle(\n            labelText.style, labelText.hoverStyle = {}, labelModel, labelHoverModel,\n            {\n                labelFetcher: data.hostModel,\n                labelDataIndex: idx,\n                defaultText: data.getName(idx),\n                autoColor: visualColor,\n                useInsideStyle: !!labelLayout.inside\n            },\n            {\n                textAlign: labelLayout.textAlign,\n                textVerticalAlign: labelLayout.verticalAlign,\n                opacity: data.getItemVisual(idx, 'opacity')\n            }\n        );\n\n        labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n        labelText.hoverIgnore = !labelHoverModel.get('show');\n\n        labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n        labelLine.hoverIgnore = !labelLineHoverModel.get('show');\n\n        // Default use item visual color\n        labelLine.setStyle({\n            stroke: visualColor,\n            opacity: data.getItemVisual(idx, 'opacity')\n        });\n        labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n\n        labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n\n        var smooth = labelLineModel.get('smooth');\n        if (smooth && smooth === true) {\n            smooth = 0.4;\n        }\n        labelLine.setShape({\n            smooth: smooth\n        });\n    };\n\n    zrUtil.inherits(PiePiece, graphic.Group);\n\n\n    // Pie view\n    var Pie = __webpack_require__(1001).extend({\n\n        type: 'pie',\n\n        init: function () {\n            var sectorGroup = new graphic.Group();\n            this._sectorGroup = sectorGroup;\n        },\n\n        render: function (seriesModel, ecModel, api, payload) {\n            if (payload && (payload.from === this.uid)) {\n                return;\n            }\n\n            var data = seriesModel.getData();\n            var oldData = this._data;\n            var group = this.group;\n\n            var hasAnimation = ecModel.get('animation');\n            var isFirstRender = !oldData;\n            var animationType = seriesModel.get('animationType');\n\n            var onSectorClick = zrUtil.curry(\n                updateDataSelected, this.uid, seriesModel, hasAnimation, api\n            );\n\n            var selectedMode = seriesModel.get('selectedMode');\n\n            data.diff(oldData)\n                .add(function (idx) {\n                    var piePiece = new PiePiece(data, idx);\n                    // Default expansion animation\n                    if (isFirstRender && animationType !== 'scale') {\n                        piePiece.eachChild(function (child) {\n                            child.stopAnimation(true);\n                        });\n                    }\n\n                    selectedMode && piePiece.on('click', onSectorClick);\n\n                    data.setItemGraphicEl(idx, piePiece);\n\n                    group.add(piePiece);\n                })\n                .update(function (newIdx, oldIdx) {\n                    var piePiece = oldData.getItemGraphicEl(oldIdx);\n\n                    piePiece.updateData(data, newIdx);\n\n                    piePiece.off('click');\n                    selectedMode && piePiece.on('click', onSectorClick);\n                    group.add(piePiece);\n                    data.setItemGraphicEl(newIdx, piePiece);\n                })\n                .remove(function (idx) {\n                    var piePiece = oldData.getItemGraphicEl(idx);\n                    group.remove(piePiece);\n                })\n                .execute();\n\n            if (\n                hasAnimation && isFirstRender && data.count() > 0\n                // Default expansion animation\n                && animationType !== 'scale'\n            ) {\n                var shape = data.getItemLayout(0);\n                var r = Math.max(api.getWidth(), api.getHeight()) / 2;\n\n                var removeClipPath = zrUtil.bind(group.removeClipPath, group);\n                group.setClipPath(this._createClipPath(\n                    shape.cx, shape.cy, r, shape.startAngle, shape.clockwise, removeClipPath, seriesModel\n                ));\n            }\n\n            this._data = data;\n        },\n\n        dispose: function () {},\n\n        _createClipPath: function (\n            cx, cy, r, startAngle, clockwise, cb, seriesModel\n        ) {\n            var clipPath = new graphic.Sector({\n                shape: {\n                    cx: cx,\n                    cy: cy,\n                    r0: 0,\n                    r: r,\n                    startAngle: startAngle,\n                    endAngle: startAngle,\n                    clockwise: clockwise\n                }\n            });\n\n            graphic.initProps(clipPath, {\n                shape: {\n                    endAngle: startAngle + (clockwise ? 1 : -1) * Math.PI * 2\n                }\n            }, seriesModel, cb);\n\n            return clipPath;\n        },\n\n        /**\n         * @implement\n         */\n        containPoint: function (point, seriesModel) {\n            var data = seriesModel.getData();\n            var itemLayout = data.getItemLayout(0);\n            if (itemLayout) {\n                var dx = point[0] - itemLayout.cx;\n                var dy = point[1] - itemLayout.cy;\n                var radius = Math.sqrt(dx * dx + dy * dy);\n                return radius <= itemLayout.r && radius >= itemLayout.r0;\n            }\n        }\n\n    });\n\n    module.exports = Pie;\n\n\n/***/ }),\n\n/***/ 1159:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var numberUtil = __webpack_require__(973);\n    var parsePercent = numberUtil.parsePercent;\n    var labelLayout = __webpack_require__(1160);\n    var zrUtil = __webpack_require__(970);\n\n    var PI2 = Math.PI * 2;\n    var RADIAN = Math.PI / 180;\n\n    module.exports = function (seriesType, ecModel, api, payload) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var center = seriesModel.get('center');\n            var radius = seriesModel.get('radius');\n\n            if (!zrUtil.isArray(radius)) {\n                radius = [0, radius];\n            }\n            if (!zrUtil.isArray(center)) {\n                center = [center, center];\n            }\n\n            var width = api.getWidth();\n            var height = api.getHeight();\n            var size = Math.min(width, height);\n            var cx = parsePercent(center[0], width);\n            var cy = parsePercent(center[1], height);\n            var r0 = parsePercent(radius[0], size / 2);\n            var r = parsePercent(radius[1], size / 2);\n\n            var data = seriesModel.getData();\n\n            var startAngle = -seriesModel.get('startAngle') * RADIAN;\n\n            var minAngle = seriesModel.get('minAngle') * RADIAN;\n\n            var validDataCount = 0;\n            data.each('value', function (value) {\n                !isNaN(value) && validDataCount++;\n            });\n\n            var sum = data.getSum('value');\n            // Sum may be 0\n            var unitRadian = Math.PI / (sum || validDataCount) * 2;\n\n            var clockwise = seriesModel.get('clockwise');\n\n            var roseType = seriesModel.get('roseType');\n            var stillShowZeroSum = seriesModel.get('stillShowZeroSum');\n\n            // [0...max]\n            var extent = data.getDataExtent('value');\n            extent[0] = 0;\n\n            // In the case some sector angle is smaller than minAngle\n            var restAngle = PI2;\n            var valueSumLargerThanMinAngle = 0;\n\n            var currentAngle = startAngle;\n            var dir = clockwise ? 1 : -1;\n\n            data.each('value', function (value, idx) {\n                var angle;\n                if (isNaN(value)) {\n                    data.setItemLayout(idx, {\n                        angle: NaN,\n                        startAngle: NaN,\n                        endAngle: NaN,\n                        clockwise: clockwise,\n                        cx: cx,\n                        cy: cy,\n                        r0: r0,\n                        r: roseType\n                            ? NaN\n                            : r\n                    });\n                    return;\n                }\n\n                // FIXME 兼容 2.0 但是 roseType 是 area 的时候才是这样？\n                if (roseType !== 'area') {\n                    angle = (sum === 0 && stillShowZeroSum)\n                        ? unitRadian : (value * unitRadian);\n                }\n                else {\n                    angle = PI2 / validDataCount;\n                }\n\n                if (angle < minAngle) {\n                    angle = minAngle;\n                    restAngle -= minAngle;\n                }\n                else {\n                    valueSumLargerThanMinAngle += value;\n                }\n\n                var endAngle = currentAngle + dir * angle;\n                data.setItemLayout(idx, {\n                    angle: angle,\n                    startAngle: currentAngle,\n                    endAngle: endAngle,\n                    clockwise: clockwise,\n                    cx: cx,\n                    cy: cy,\n                    r0: r0,\n                    r: roseType\n                        ? numberUtil.linearMap(value, extent, [r0, r])\n                        : r\n                });\n\n                currentAngle = endAngle;\n            }, true);\n\n            // Some sector is constrained by minAngle\n            // Rest sectors needs recalculate angle\n            if (restAngle < PI2 && validDataCount) {\n                // Average the angle if rest angle is not enough after all angles is\n                // Constrained by minAngle\n                if (restAngle <= 1e-3) {\n                    var angle = PI2 / validDataCount;\n                    data.each('value', function (value, idx) {\n                        if (!isNaN(value)) {\n                            var layout = data.getItemLayout(idx);\n                            layout.angle = angle;\n                            layout.startAngle = startAngle + dir * idx * angle;\n                            layout.endAngle = startAngle + dir * (idx + 1) * angle;\n                        }\n                    });\n                }\n                else {\n                    unitRadian = restAngle / valueSumLargerThanMinAngle;\n                    currentAngle = startAngle;\n                    data.each('value', function (value, idx) {\n                        if (!isNaN(value)) {\n                            var layout = data.getItemLayout(idx);\n                            var angle = layout.angle === minAngle\n                                ? minAngle : value * unitRadian;\n                            layout.startAngle = currentAngle;\n                            layout.endAngle = currentAngle + dir * angle;\n                            currentAngle += dir * angle;\n                        }\n                    });\n                }\n            }\n\n            labelLayout(seriesModel, r, width, height);\n        });\n    };\n\n\n/***/ }),\n\n/***/ 1160:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// FIXME emphasis label position is not same with normal label position\n\n\n    var textContain = __webpack_require__(984);\n\n    function adjustSingleSide(list, cx, cy, r, dir, viewWidth, viewHeight) {\n        list.sort(function (a, b) {\n            return a.y - b.y;\n        });\n\n        // 压\n        function shiftDown(start, end, delta, dir) {\n            for (var j = start; j < end; j++) {\n                list[j].y += delta;\n                if (j > start\n                    && j + 1 < end\n                    && list[j + 1].y > list[j].y + list[j].height\n                ) {\n                    shiftUp(j, delta / 2);\n                    return;\n                }\n            }\n\n            shiftUp(end - 1, delta / 2);\n        }\n\n        // 弹\n        function shiftUp(end, delta) {\n            for (var j = end; j >= 0; j--) {\n                list[j].y -= delta;\n                if (j > 0\n                    && list[j].y > list[j - 1].y + list[j - 1].height\n                ) {\n                    break;\n                }\n            }\n        }\n\n        function changeX(list, isDownList, cx, cy, r, dir) {\n            var lastDeltaX = dir > 0\n                ? isDownList                // 右侧\n                    ? Number.MAX_VALUE      // 下\n                    : 0                     // 上\n                : isDownList                // 左侧\n                    ? Number.MAX_VALUE      // 下\n                    : 0;                    // 上\n\n            for (var i = 0, l = list.length; i < l; i++) {\n                // Not change x for center label\n                if (list[i].position === 'center') {\n                    continue;\n                }\n                var deltaY = Math.abs(list[i].y - cy);\n                var length = list[i].len;\n                var length2 = list[i].len2;\n                var deltaX = (deltaY < r + length)\n                    ? Math.sqrt(\n                          (r + length + length2) * (r + length + length2)\n                          - deltaY * deltaY\n                      )\n                    : Math.abs(list[i].x - cx);\n                if (isDownList && deltaX >= lastDeltaX) {\n                    // 右下，左下\n                    deltaX = lastDeltaX - 10;\n                }\n                if (!isDownList && deltaX <= lastDeltaX) {\n                    // 右上，左上\n                    deltaX = lastDeltaX + 10;\n                }\n\n                list[i].x = cx + deltaX * dir;\n                lastDeltaX = deltaX;\n            }\n        }\n\n        var lastY = 0;\n        var delta;\n        var len = list.length;\n        var upList = [];\n        var downList = [];\n        for (var i = 0; i < len; i++) {\n            delta = list[i].y - lastY;\n            if (delta < 0) {\n                shiftDown(i, len, -delta, dir);\n            }\n            lastY = list[i].y + list[i].height;\n        }\n        if (viewHeight - lastY < 0) {\n            shiftUp(len - 1, lastY - viewHeight);\n        }\n        for (var i = 0; i < len; i++) {\n            if (list[i].y >= cy) {\n                downList.push(list[i]);\n            }\n            else {\n                upList.push(list[i]);\n            }\n        }\n        changeX(upList, false, cx, cy, r, dir);\n        changeX(downList, true, cx, cy, r, dir);\n    }\n\n    function avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight) {\n        var leftList = [];\n        var rightList = [];\n        for (var i = 0; i < labelLayoutList.length; i++) {\n            if (labelLayoutList[i].x < cx) {\n                leftList.push(labelLayoutList[i]);\n            }\n            else {\n                rightList.push(labelLayoutList[i]);\n            }\n        }\n\n        adjustSingleSide(rightList, cx, cy, r, 1, viewWidth, viewHeight);\n        adjustSingleSide(leftList, cx, cy, r, -1, viewWidth, viewHeight);\n\n        for (var i = 0; i < labelLayoutList.length; i++) {\n            var linePoints = labelLayoutList[i].linePoints;\n            if (linePoints) {\n                var dist = linePoints[1][0] - linePoints[2][0];\n                if (labelLayoutList[i].x < cx) {\n                    linePoints[2][0] = labelLayoutList[i].x + 3;\n                }\n                else {\n                    linePoints[2][0] = labelLayoutList[i].x - 3;\n                }\n                linePoints[1][1] = linePoints[2][1] = labelLayoutList[i].y;\n                linePoints[1][0] = linePoints[2][0] + dist;\n            }\n        }\n    }\n\n    module.exports = function (seriesModel, r, viewWidth, viewHeight) {\n        var data = seriesModel.getData();\n        var labelLayoutList = [];\n        var cx;\n        var cy;\n        var hasLabelRotate = false;\n\n        data.each(function (idx) {\n            var layout = data.getItemLayout(idx);\n\n            var itemModel = data.getItemModel(idx);\n            var labelModel = itemModel.getModel('label.normal');\n            // Use position in normal or emphasis\n            var labelPosition = labelModel.get('position') || itemModel.get('label.emphasis.position');\n\n            var labelLineModel = itemModel.getModel('labelLine.normal');\n            var labelLineLen = labelLineModel.get('length');\n            var labelLineLen2 = labelLineModel.get('length2');\n\n            var midAngle = (layout.startAngle + layout.endAngle) / 2;\n            var dx = Math.cos(midAngle);\n            var dy = Math.sin(midAngle);\n\n            var textX;\n            var textY;\n            var linePoints;\n            var textAlign;\n\n            cx = layout.cx;\n            cy = layout.cy;\n\n            var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\n            if (labelPosition === 'center') {\n                textX = layout.cx;\n                textY = layout.cy;\n                textAlign = 'center';\n            }\n            else {\n                var x1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dx : layout.r * dx) + cx;\n                var y1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dy : layout.r * dy) + cy;\n\n                textX = x1 + dx * 3;\n                textY = y1 + dy * 3;\n\n                if (!isLabelInside) {\n                    // For roseType\n                    var x2 = x1 + dx * (labelLineLen + r - layout.r);\n                    var y2 = y1 + dy * (labelLineLen + r - layout.r);\n                    var x3 = x2 + ((dx < 0 ? -1 : 1) * labelLineLen2);\n                    var y3 = y2;\n\n                    textX = x3 + (dx < 0 ? -5 : 5);\n                    textY = y3;\n                    linePoints = [[x1, y1], [x2, y2], [x3, y3]];\n                }\n\n                textAlign = isLabelInside ? 'center' : (dx > 0 ? 'left' : 'right');\n            }\n            var font = labelModel.getFont();\n\n            var labelRotate = labelModel.get('rotate')\n                ? (dx < 0 ? -midAngle + Math.PI : -midAngle) : 0;\n            var text = seriesModel.getFormattedLabel(idx, 'normal')\n                        || data.getName(idx);\n            var textRect = textContain.getBoundingRect(\n                text, font, textAlign, 'top'\n            );\n            hasLabelRotate = !!labelRotate;\n            layout.label = {\n                x: textX,\n                y: textY,\n                position: labelPosition,\n                height: textRect.height,\n                len: labelLineLen,\n                len2: labelLineLen2,\n                linePoints: linePoints,\n                textAlign: textAlign,\n                verticalAlign: 'middle',\n                rotation: labelRotate,\n                inside: isLabelInside\n            };\n\n            // Not layout the inside label\n            if (!isLabelInside) {\n                labelLayoutList.push(layout.label);\n            }\n        });\n        if (!hasLabelRotate && seriesModel.get('avoidLabelOverlap')) {\n            avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight);\n        }\n    };\n\n\n/***/ }),\n\n/***/ 967:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_echarts_lib_echarts__ = __webpack_require__(971);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_echarts_lib_echarts___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_echarts_lib_echarts__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_echarts_lib_component_tooltip__ = __webpack_require__(1065);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_echarts_lib_component_tooltip___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_echarts_lib_component_tooltip__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_echarts_lib_component_legend__ = __webpack_require__(1066);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_echarts_lib_component_legend___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_echarts_lib_component_legend__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_echarts_lib_chart_pie__ = __webpack_require__(1156);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_echarts_lib_chart_pie___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_echarts_lib_chart_pie__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_echarts_lib_component_toolbox__ = __webpack_require__(1068);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_echarts_lib_component_toolbox___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_echarts_lib_component_toolbox__);\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}//必须\nvar PieReact=function(_React$Component){_inherits(PieReact,_React$Component);function PieReact(props){_classCallCheck(this,PieReact);var _this=_possibleConstructorReturn(this,(PieReact.__proto__||Object.getPrototypeOf(PieReact)).call(this,props));_this.initPie=_this.initPie.bind(_this);return _this;}_createClass(PieReact,[{key:'initPie',value:function initPie(){var _props$option=this.props.option,option=_props$option===undefined?{}:_props$option;//外部传入的data数据\nvar myChart=__WEBPACK_IMPORTED_MODULE_1_echarts_lib_echarts___default.a.init(this.ID);//初始化echarts\n//设置options\nmyChart.setOption(option);window.onresize=function(){myChart.resize();};}},{key:'componentDidMount',value:function componentDidMount(){this.initPie();}},{key:'componentDidUpdate',value:function componentDidUpdate(){this.initPie();}},{key:'render',value:function render(){var _this2=this;var _props=this.props,_props$width=_props.width,width=_props$width===undefined?\"100%\":_props$width,_props$height=_props.height,height=_props$height===undefined?'300px':_props$height;return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{ref:function ref(ID){return _this2.ID=ID;},style:{width:width,height:height}});}}]);return PieReact;}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);/* harmony default export */ __webpack_exports__[\"default\"] = (PieReact);\n\n/***/ }),\n\n/***/ 970:\n/***/ (function(module, exports) {\n\n/**\n * @module zrender/core/util\n */\n\n\n    // 用于处理merge时无法遍历Date等对象的问题\n    var BUILTIN_OBJECT = {\n        '[object Function]': 1,\n        '[object RegExp]': 1,\n        '[object Date]': 1,\n        '[object Error]': 1,\n        '[object CanvasGradient]': 1,\n        '[object CanvasPattern]': 1,\n        // For node-canvas\n        '[object Image]': 1,\n        '[object Canvas]': 1\n    };\n\n    var TYPED_ARRAY = {\n        '[object Int8Array]': 1,\n        '[object Uint8Array]': 1,\n        '[object Uint8ClampedArray]': 1,\n        '[object Int16Array]': 1,\n        '[object Uint16Array]': 1,\n        '[object Int32Array]': 1,\n        '[object Uint32Array]': 1,\n        '[object Float32Array]': 1,\n        '[object Float64Array]': 1\n    };\n\n    var objToString = Object.prototype.toString;\n\n    var arrayProto = Array.prototype;\n    var nativeForEach = arrayProto.forEach;\n    var nativeFilter = arrayProto.filter;\n    var nativeSlice = arrayProto.slice;\n    var nativeMap = arrayProto.map;\n    var nativeReduce = arrayProto.reduce;\n\n    /**\n     * Those data types can be cloned:\n     *     Plain object, Array, TypedArray, number, string, null, undefined.\n     * Those data types will be assgined using the orginal data:\n     *     BUILTIN_OBJECT\n     * Instance of user defined class will be cloned to a plain object, without\n     * properties in prototype.\n     * Other data types is not supported (not sure what will happen).\n     *\n     * Caution: do not support clone Date, for performance consideration.\n     * (There might be a large number of date in `series.data`).\n     * So date should not be modified in and out of echarts.\n     *\n     * @param {*} source\n     * @return {*} new\n     */\n    function clone(source) {\n        if (source == null || typeof source != 'object') {\n            return source;\n        }\n\n        var result = source;\n        var typeStr = objToString.call(source);\n\n        if (typeStr === '[object Array]') {\n            result = [];\n            for (var i = 0, len = source.length; i < len; i++) {\n                result[i] = clone(source[i]);\n            }\n        }\n        else if (TYPED_ARRAY[typeStr]) {\n            var Ctor = source.constructor;\n            if (source.constructor.from) {\n                result = Ctor.from(source);\n            }\n            else {\n                result = new Ctor(source.length);\n                for (var i = 0, len = source.length; i < len; i++) {\n                    result[i] = clone(source[i]);\n                }\n            }\n        }\n        else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n            result = {};\n            for (var key in source) {\n                if (source.hasOwnProperty(key)) {\n                    result[key] = clone(source[key]);\n                }\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} target\n     * @param {*} source\n     * @param {boolean} [overwrite=false]\n     */\n    function merge(target, source, overwrite) {\n        // We should escapse that source is string\n        // and enter for ... in ...\n        if (!isObject(source) || !isObject(target)) {\n            return overwrite ? clone(source) : target;\n        }\n\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                var targetProp = target[key];\n                var sourceProp = source[key];\n\n                if (isObject(sourceProp)\n                    && isObject(targetProp)\n                    && !isArray(sourceProp)\n                    && !isArray(targetProp)\n                    && !isDom(sourceProp)\n                    && !isDom(targetProp)\n                    && !isBuiltInObject(sourceProp)\n                    && !isBuiltInObject(targetProp)\n                    && !isPrimitive(sourceProp)\n                    && !isPrimitive(targetProp)\n                ) {\n                    // 如果需要递归覆盖，就递归调用merge\n                    merge(targetProp, sourceProp, overwrite);\n                }\n                else if (overwrite || !(key in target)) {\n                    // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n                    // NOTE，在 target[key] 不存在的时候也是直接覆盖\n                    target[key] = clone(source[key], true);\n                }\n            }\n        }\n\n        return target;\n    }\n\n    /**\n     * @param {Array} targetAndSources The first item is target, and the rests are source.\n     * @param {boolean} [overwrite=false]\n     * @return {*} target\n     */\n    function mergeAll(targetAndSources, overwrite) {\n        var result = targetAndSources[0];\n        for (var i = 1, len = targetAndSources.length; i < len; i++) {\n            result = merge(result, targetAndSources[i], overwrite);\n        }\n        return result;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @memberOf module:zrender/core/util\n     */\n    function extend(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @param {boolean} [overlay=false]\n     * @memberOf module:zrender/core/util\n     */\n    function defaults(target, source, overlay) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)\n                && (overlay ? source[key] != null : target[key] == null)\n            ) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    function createCanvas() {\n        return document.createElement('canvas');\n    }\n    // FIXME\n    var _ctx;\n    function getContext() {\n        if (!_ctx) {\n            // Use util.createCanvas instead of createCanvas\n            // because createCanvas may be overwritten in different environment\n            _ctx = util.createCanvas().getContext('2d');\n        }\n        return _ctx;\n    }\n\n    /**\n     * 查询数组中元素的index\n     * @memberOf module:zrender/core/util\n     */\n    function indexOf(array, value) {\n        if (array) {\n            if (array.indexOf) {\n                return array.indexOf(value);\n            }\n            for (var i = 0, len = array.length; i < len; i++) {\n                if (array[i] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    }\n\n    /**\n     * 构造类继承关系\n     *\n     * @memberOf module:zrender/core/util\n     * @param {Function} clazz 源类\n     * @param {Function} baseClazz 基类\n     */\n    function inherits(clazz, baseClazz) {\n        var clazzPrototype = clazz.prototype;\n        function F() {}\n        F.prototype = baseClazz.prototype;\n        clazz.prototype = new F();\n\n        for (var prop in clazzPrototype) {\n            clazz.prototype[prop] = clazzPrototype[prop];\n        }\n        clazz.prototype.constructor = clazz;\n        clazz.superClass = baseClazz;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Object|Function} target\n     * @param {Object|Function} sorce\n     * @param {boolean} overlay\n     */\n    function mixin(target, source, overlay) {\n        target = 'prototype' in target ? target.prototype : target;\n        source = 'prototype' in source ? source.prototype : source;\n\n        defaults(target, source, overlay);\n    }\n\n    /**\n     * Consider typed array.\n     * @param {Array|TypedArray} data\n     */\n    function isArrayLike(data) {\n        if (! data) {\n            return;\n        }\n        if (typeof data == 'string') {\n            return false;\n        }\n        return typeof data.length == 'number';\n    }\n\n    /**\n     * 数组或对象遍历\n     * @memberOf module:zrender/core/util\n     * @param {Object|Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     */\n    function each(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.forEach && obj.forEach === nativeForEach) {\n            obj.forEach(cb, context);\n        }\n        else if (obj.length === +obj.length) {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                cb.call(context, obj[i], i, obj);\n            }\n        }\n        else {\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    cb.call(context, obj[key], key, obj);\n                }\n            }\n        }\n    }\n\n    /**\n     * 数组映射\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function map(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.map && obj.map === nativeMap) {\n            return obj.map(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                result.push(cb.call(context, obj[i], i, obj));\n            }\n            return result;\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {Object} [memo]\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function reduce(obj, cb, memo, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.reduce && obj.reduce === nativeReduce) {\n            return obj.reduce(cb, memo, context);\n        }\n        else {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                memo = cb.call(context, memo, obj[i], i, obj);\n            }\n            return memo;\n        }\n    }\n\n    /**\n     * 数组过滤\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function filter(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.filter && obj.filter === nativeFilter) {\n            return obj.filter(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                if (cb.call(context, obj[i], i, obj)) {\n                    result.push(obj[i]);\n                }\n            }\n            return result;\n        }\n    }\n\n    /**\n     * 数组项查找\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function find(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        for (var i = 0, len = obj.length; i < len; i++) {\n            if (cb.call(context, obj[i], i, obj)) {\n                return obj[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @param {*} context\n     * @return {Function}\n     */\n    function bind(func, context) {\n        var args = nativeSlice.call(arguments, 2);\n        return function () {\n            return func.apply(context, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @return {Function}\n     */\n    function curry(func) {\n        var args = nativeSlice.call(arguments, 1);\n        return function () {\n            return func.apply(this, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isArray(value) {\n        return objToString.call(value) === '[object Array]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isString(value) {\n        return objToString.call(value) === '[object String]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isObject(value) {\n        // Avoid a V8 JIT bug in Chrome 19-20.\n        // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n        var type = typeof value;\n        return type === 'function' || (!!value && type == 'object');\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isBuiltInObject(value) {\n        return !!BUILTIN_OBJECT[objToString.call(value)];\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isDom(value) {\n        return typeof value === 'object'\n            && typeof value.nodeType === 'number'\n            && typeof value.ownerDocument === 'object';\n    }\n\n    /**\n     * Whether is exactly NaN. Notice isNaN('a') returns true.\n     * @param {*} value\n     * @return {boolean}\n     */\n    function eqNaN(value) {\n        return value !== value;\n    }\n\n    /**\n     * If value1 is not null, then return value1, otherwise judget rest of values.\n     * Low performance.\n     * @memberOf module:zrender/core/util\n     * @return {*} Final value\n     */\n    function retrieve(values) {\n        for (var i = 0, len = arguments.length; i < len; i++) {\n            if (arguments[i] != null) {\n                return arguments[i];\n            }\n        }\n    }\n\n    function retrieve2(value0, value1) {\n        return value0 != null\n            ? value0\n            : value1;\n    }\n\n    function retrieve3(value0, value1, value2) {\n        return value0 != null\n            ? value0\n            : value1 != null\n            ? value1\n            : value2;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} arr\n     * @param {number} startIndex\n     * @param {number} endIndex\n     * @return {Array}\n     */\n    function slice() {\n        return Function.call.apply(nativeSlice, arguments);\n    }\n\n    /**\n     * Normalize css liked array configuration\n     * e.g.\n     *  3 => [3, 3, 3, 3]\n     *  [4, 2] => [4, 2, 4, 2]\n     *  [4, 3, 2] => [4, 3, 2, 3]\n     * @param {number|Array.<number>} val\n     * @return {Array.<number>}\n     */\n    function normalizeCssArray(val) {\n        if (typeof (val) === 'number') {\n            return [val, val, val, val];\n        }\n        var len = val.length;\n        if (len === 2) {\n            // vertical | horizontal\n            return [val[0], val[1], val[0], val[1]];\n        }\n        else if (len === 3) {\n            // top | horizontal | bottom\n            return [val[0], val[1], val[2], val[1]];\n        }\n        return val;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {boolean} condition\n     * @param {string} message\n     */\n    function assert(condition, message) {\n        if (!condition) {\n            throw new Error(message);\n        }\n    }\n\n    var primitiveKey = '__ec_primitive__';\n    /**\n     * Set an object as primitive to be ignored traversing children in clone or merge\n     */\n    function setAsPrimitive(obj) {\n        obj[primitiveKey] = true;\n    }\n\n    function isPrimitive(obj) {\n        return obj[primitiveKey];\n    }\n\n    /**\n     * @constructor\n     * @param {Object} obj Only apply `ownProperty`.\n     */\n    function HashMap(obj) {\n        obj && each(obj, function (value, key) {\n            this.set(key, value);\n        }, this);\n    }\n\n    // Add prefix to avoid conflict with Object.prototype.\n    var HASH_MAP_PREFIX = '_ec_';\n    var HASH_MAP_PREFIX_LENGTH = 4;\n\n    HashMap.prototype = {\n        constructor: HashMap,\n        // Do not provide `has` method to avoid defining what is `has`.\n        // (We usually treat `null` and `undefined` as the same, different\n        // from ES6 Map).\n        get: function (key) {\n            return this[HASH_MAP_PREFIX + key];\n        },\n        set: function (key, value) {\n            this[HASH_MAP_PREFIX + key] = value;\n            // Comparing with invocation chaining, `return value` is more commonly\n            // used in this case: `var someVal = map.set('a', genVal());`\n            return value;\n        },\n        // Although util.each can be performed on this hashMap directly, user\n        // should not use the exposed keys, who are prefixed.\n        each: function (cb, context) {\n            context !== void 0 && (cb = bind(cb, context));\n            for (var prefixedKey in this) {\n                this.hasOwnProperty(prefixedKey)\n                    && cb(this[prefixedKey], prefixedKey.slice(HASH_MAP_PREFIX_LENGTH));\n            }\n        },\n        // Do not use this method if performance sensitive.\n        removeKey: function (key) {\n            delete this[HASH_MAP_PREFIX + key];\n        }\n    };\n\n    function createHashMap(obj) {\n        return new HashMap(obj);\n    }\n\n    var util = {\n        inherits: inherits,\n        mixin: mixin,\n        clone: clone,\n        merge: merge,\n        mergeAll: mergeAll,\n        extend: extend,\n        defaults: defaults,\n        getContext: getContext,\n        createCanvas: createCanvas,\n        indexOf: indexOf,\n        slice: slice,\n        find: find,\n        isArrayLike: isArrayLike,\n        each: each,\n        map: map,\n        reduce: reduce,\n        filter: filter,\n        bind: bind,\n        curry: curry,\n        isArray: isArray,\n        isString: isString,\n        isObject: isObject,\n        isFunction: isFunction,\n        isBuiltInObject: isBuiltInObject,\n        isDom: isDom,\n        eqNaN: eqNaN,\n        retrieve: retrieve,\n        retrieve2: retrieve2,\n        retrieve3: retrieve3,\n        assert: assert,\n        setAsPrimitive: setAsPrimitive,\n        createHashMap: createHashMap,\n        normalizeCssArray: normalizeCssArray,\n        noop: function () {}\n    };\n    module.exports = util;\n\n\n\n/***/ }),\n\n/***/ 971:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {// Enable DEV mode when using source code without build. which has no __DEV__ variable\n// In build process 'typeof __DEV__' will be replace with 'boolean'\n// So this code will be removed or disabled anyway after built.\nif (typeof __DEV__ === 'undefined') {\n    // In browser\n    if (typeof window !== 'undefined') {\n        window.__DEV__ = true;\n    }\n    // In node\n    else if (typeof global !== 'undefined') {\n        global.__DEV__ = true;\n    }\n}\n\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\n\n/**\n * @module echarts\n */\n\n\n    var env = __webpack_require__(977);\n\n    var GlobalModel = __webpack_require__(1078);\n    var ExtensionAPI = __webpack_require__(1106);\n    var CoordinateSystemManager = __webpack_require__(997);\n    var OptionManager = __webpack_require__(1107);\n    var backwardCompat = __webpack_require__(1108);\n\n    var ComponentModel = __webpack_require__(982);\n    var SeriesModel = __webpack_require__(993);\n\n    var ComponentView = __webpack_require__(1027);\n    var ChartView = __webpack_require__(1001);\n    var graphic = __webpack_require__(972);\n    var modelUtil = __webpack_require__(974);\n    var throttle = __webpack_require__(1010);\n\n    var zrender = __webpack_require__(1064);\n    var zrUtil = __webpack_require__(970);\n    var colorTool = __webpack_require__(992);\n    var Eventful = __webpack_require__(991);\n    var timsort = __webpack_require__(1016);\n\n\n    var each = zrUtil.each;\n    var parseClassType = ComponentModel.parseClassType;\n\n    var PRIORITY_PROCESSOR_FILTER = 1000;\n    var PRIORITY_PROCESSOR_STATISTIC = 5000;\n\n\n    var PRIORITY_VISUAL_LAYOUT = 1000;\n    var PRIORITY_VISUAL_GLOBAL = 2000;\n    var PRIORITY_VISUAL_CHART = 3000;\n    var PRIORITY_VISUAL_COMPONENT = 4000;\n    // FIXME\n    // necessary?\n    var PRIORITY_VISUAL_BRUSH = 5000;\n\n    // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n    // where they must not be invoked nestedly, except the only case: invoke\n    // dispatchAction with updateMethod \"none\" in main process.\n    // This flag is used to carry out this rule.\n    // All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n    var IN_MAIN_PROCESS = '__flagInMainProcess';\n    var HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\n    var OPTION_UPDATED = '__optionUpdated';\n    var ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\n\n    function createRegisterEventWithLowercaseName(method) {\n        return function (eventName, handler, context) {\n            // Event name is all lowercase\n            eventName = eventName && eventName.toLowerCase();\n            Eventful.prototype[method].call(this, eventName, handler, context);\n        };\n    }\n\n    /**\n     * @module echarts~MessageCenter\n     */\n    function MessageCenter() {\n        Eventful.call(this);\n    }\n    MessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\n    MessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\n    MessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\n    zrUtil.mixin(MessageCenter, Eventful);\n\n    /**\n     * @module echarts~ECharts\n     */\n    function ECharts(dom, theme, opts) {\n        opts = opts || {};\n\n        // Get theme by name\n        if (typeof theme === 'string') {\n            theme = themeStorage[theme];\n        }\n\n        /**\n         * @type {string}\n         */\n        this.id;\n        /**\n         * Group id\n         * @type {string}\n         */\n        this.group;\n        /**\n         * @type {HTMLElement}\n         * @private\n         */\n        this._dom = dom;\n        /**\n         * @type {module:zrender/ZRender}\n         * @private\n         */\n        var zr = this._zr = zrender.init(dom, {\n            renderer: opts.renderer || 'canvas',\n            devicePixelRatio: opts.devicePixelRatio,\n            width: opts.width,\n            height: opts.height\n        });\n\n        /**\n         * Expect 60 pfs.\n         * @type {Function}\n         * @private\n         */\n        this._throttledZrFlush = throttle.throttle(zrUtil.bind(zr.flush, zr), 17);\n\n        var theme = zrUtil.clone(theme);\n        theme && backwardCompat(theme, true);\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._theme = theme;\n\n        /**\n         * @type {Array.<module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsMap = {};\n\n        /**\n         * @type {module:echarts/CoordinateSystem}\n         * @private\n         */\n        this._coordSysMgr = new CoordinateSystemManager();\n\n        /**\n         * @type {module:echarts/ExtensionAPI}\n         * @private\n         */\n        this._api = createExtensionAPI(this);\n\n        Eventful.call(this);\n\n        /**\n         * @type {module:echarts~MessageCenter}\n         * @private\n         */\n        this._messageCenter = new MessageCenter();\n\n        // Init mouse events\n        this._initEvents();\n\n        // In case some people write `window.onresize = chart.resize`\n        this.resize = zrUtil.bind(this.resize, this);\n\n        // Can't dispatch action during rendering procedure\n        this._pendingActions = [];\n        // Sort on demand\n        function prioritySortFunc(a, b) {\n            return a.prio - b.prio;\n        }\n        timsort(visualFuncs, prioritySortFunc);\n        timsort(dataProcessorFuncs, prioritySortFunc);\n\n        zr.animation.on('frame', this._onframe, this);\n\n        // ECharts instance can be used as value.\n        zrUtil.setAsPrimitive(this);\n    }\n\n    var echartsProto = ECharts.prototype;\n\n    echartsProto._onframe = function () {\n        // Lazy update\n        if (this[OPTION_UPDATED]) {\n            var silent = this[OPTION_UPDATED].silent;\n\n            this[IN_MAIN_PROCESS] = true;\n\n            updateMethods.prepareAndUpdate.call(this);\n\n            this[IN_MAIN_PROCESS] = false;\n\n            this[OPTION_UPDATED] = false;\n\n            flushPendingActions.call(this, silent);\n\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n    /**\n     * @return {HTMLElement}\n     */\n    echartsProto.getDom = function () {\n        return this._dom;\n    };\n\n    /**\n     * @return {module:zrender~ZRender}\n     */\n    echartsProto.getZr = function () {\n        return this._zr;\n    };\n\n    /**\n     * Usage:\n     * chart.setOption(option, notMerge, lazyUpdate);\n     * chart.setOption(option, {\n     *     notMerge: ...,\n     *     lazyUpdate: ...,\n     *     silent: ...\n     * });\n     *\n     * @param {Object} option\n     * @param {Object|boolean} [opts] opts or notMerge.\n     * @param {boolean} [opts.notMerge=false]\n     * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n     */\n    echartsProto.setOption = function (option, notMerge, lazyUpdate) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`setOption` should not be called during main process.');\n        }\n\n        var silent;\n        if (zrUtil.isObject(notMerge)) {\n            lazyUpdate = notMerge.lazyUpdate;\n            silent = notMerge.silent;\n            notMerge = notMerge.notMerge;\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        if (!this._model || notMerge) {\n            var optionManager = new OptionManager(this._api);\n            var theme = this._theme;\n            var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n            ecModel.init(null, null, theme, optionManager);\n        }\n\n        this._model.setOption(option, optionPreprocessorFuncs);\n\n        if (lazyUpdate) {\n            this[OPTION_UPDATED] = {silent: silent};\n            this[IN_MAIN_PROCESS] = false;\n        }\n        else {\n            updateMethods.prepareAndUpdate.call(this);\n            // Ensure zr refresh sychronously, and then pixel in canvas can be\n            // fetched after `setOption`.\n            this._zr.flush();\n\n            this[OPTION_UPDATED] = false;\n            this[IN_MAIN_PROCESS] = false;\n\n            flushPendingActions.call(this, silent);\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n\n    /**\n     * @DEPRECATED\n     */\n    echartsProto.setTheme = function () {\n        console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n    };\n\n    /**\n     * @return {module:echarts/model/Global}\n     */\n    echartsProto.getModel = function () {\n        return this._model;\n    };\n\n    /**\n     * @return {Object}\n     */\n    echartsProto.getOption = function () {\n        return this._model && this._model.getOption();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getWidth = function () {\n        return this._zr.getWidth();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getHeight = function () {\n        return this._zr.getHeight();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getDevicePixelRatio = function () {\n        return this._zr.painter.dpr || window.devicePixelRatio || 1;\n    };\n\n    /**\n     * Get canvas which has all thing rendered\n     * @param {Object} opts\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getRenderedCanvas = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        opts = opts || {};\n        opts.pixelRatio = opts.pixelRatio || 1;\n        opts.backgroundColor = opts.backgroundColor\n            || this._model.get('backgroundColor');\n        var zr = this._zr;\n        var list = zr.storage.getDisplayList();\n        // Stop animations\n        zrUtil.each(list, function (el) {\n            el.stopAnimation(true);\n        });\n        return zr.painter.getRenderedCanvas(opts);\n    };\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     * @param {string} [opts.excludeComponents]\n     */\n    echartsProto.getDataURL = function (opts) {\n        opts = opts || {};\n        var excludeComponents = opts.excludeComponents;\n        var ecModel = this._model;\n        var excludesComponentViews = [];\n        var self = this;\n\n        each(excludeComponents, function (componentType) {\n            ecModel.eachComponent({\n                mainType: componentType\n            }, function (component) {\n                var view = self._componentsMap[component.__viewId];\n                if (!view.group.ignore) {\n                    excludesComponentViews.push(view);\n                    view.group.ignore = true;\n                }\n            });\n        });\n\n        var url = this.getRenderedCanvas(opts).toDataURL(\n            'image/' + (opts && opts.type || 'png')\n        );\n\n        each(excludesComponentViews, function (view) {\n            view.group.ignore = false;\n        });\n        return url;\n    };\n\n\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getConnectedDataURL = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        var groupId = this.group;\n        var mathMin = Math.min;\n        var mathMax = Math.max;\n        var MAX_NUMBER = Infinity;\n        if (connectedGroups[groupId]) {\n            var left = MAX_NUMBER;\n            var top = MAX_NUMBER;\n            var right = -MAX_NUMBER;\n            var bottom = -MAX_NUMBER;\n            var canvasList = [];\n            var dpr = (opts && opts.pixelRatio) || 1;\n\n            zrUtil.each(instances, function (chart, id) {\n                if (chart.group === groupId) {\n                    var canvas = chart.getRenderedCanvas(\n                        zrUtil.clone(opts)\n                    );\n                    var boundingRect = chart.getDom().getBoundingClientRect();\n                    left = mathMin(boundingRect.left, left);\n                    top = mathMin(boundingRect.top, top);\n                    right = mathMax(boundingRect.right, right);\n                    bottom = mathMax(boundingRect.bottom, bottom);\n                    canvasList.push({\n                        dom: canvas,\n                        left: boundingRect.left,\n                        top: boundingRect.top\n                    });\n                }\n            });\n\n            left *= dpr;\n            top *= dpr;\n            right *= dpr;\n            bottom *= dpr;\n            var width = right - left;\n            var height = bottom - top;\n            var targetCanvas = zrUtil.createCanvas();\n            targetCanvas.width = width;\n            targetCanvas.height = height;\n            var zr = zrender.init(targetCanvas);\n\n            each(canvasList, function (item) {\n                var img = new graphic.Image({\n                    style: {\n                        x: item.left * dpr - left,\n                        y: item.top * dpr - top,\n                        image: item.dom\n                    }\n                });\n                zr.add(img);\n            });\n            zr.refreshImmediately();\n\n            return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n        }\n        else {\n            return this.getDataURL(opts);\n        }\n    };\n\n    /**\n     * Convert from logical coordinate system to pixel coordinate system.\n     * See CoordinateSystem#convertToPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId, geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n\n    /**\n     * Convert from pixel coordinate system to logical coordinate system.\n     * See CoordinateSystem#convertFromPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\n    function doConvertPixel(methodName, finder, value) {\n        var ecModel = this._model;\n        var coordSysList = this._coordSysMgr.getCoordinateSystems();\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        for (var i = 0; i < coordSysList.length; i++) {\n            var coordSys = coordSysList[i];\n            if (coordSys[methodName]\n                && (result = coordSys[methodName](ecModel, finder, value)) != null\n            ) {\n                return result;\n            }\n        }\n\n        if (__DEV__) {\n            console.warn(\n                'No coordinate system that supports ' + methodName + ' found by the given finder.'\n            );\n        }\n    }\n\n    /**\n     * Is the specified coordinate systems or components contain the given pixel point.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {boolean} result\n     */\n    echartsProto.containPixel = function (finder, value) {\n        var ecModel = this._model;\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        zrUtil.each(finder, function (models, key) {\n            key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n                var coordSys = model.coordinateSystem;\n                if (coordSys && coordSys.containPoint) {\n                    result |= !!coordSys.containPoint(value);\n                }\n                else if (key === 'seriesModels') {\n                    var view = this._chartsMap[model.__viewId];\n                    if (view && view.containPoint) {\n                        result |= view.containPoint(value, model);\n                    }\n                    else {\n                        if (__DEV__) {\n                            console.warn(key + ': ' + (view\n                                ? 'The found component do not support containPoint.'\n                                : 'No view mapping to the found component.'\n                            ));\n                        }\n                    }\n                }\n                else {\n                    if (__DEV__) {\n                        console.warn(key + ': containPoint is not supported');\n                    }\n                }\n            }, this);\n        }, this);\n\n        return !!result;\n    };\n\n    /**\n     * Get visual from series or data.\n     * @param {string|Object} finder\n     *        If string, e.g., 'series', means {seriesIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            dataIndex / dataIndexInside\n     *        }\n     *        If dataIndex is not specified, series visual will be fetched,\n     *        but not data item visual.\n     *        If all of seriesIndex, seriesId, seriesName are not specified,\n     *        visual will be fetched from first series.\n     * @param {string} visualType 'color', 'symbol', 'symbolSize'\n     */\n    echartsProto.getVisual = function (finder, visualType) {\n        var ecModel = this._model;\n\n        finder = modelUtil.parseFinder(ecModel, finder, {defaultMainType: 'series'});\n\n        var seriesModel = finder.seriesModel;\n\n        if (__DEV__) {\n            if (!seriesModel) {\n                console.warn('There is no specified seires model');\n            }\n        }\n\n        var data = seriesModel.getData();\n\n        var dataIndexInside = finder.hasOwnProperty('dataIndexInside')\n            ? finder.dataIndexInside\n            : finder.hasOwnProperty('dataIndex')\n            ? data.indexOfRawIndex(finder.dataIndex)\n            : null;\n\n        return dataIndexInside != null\n            ? data.getItemVisual(dataIndexInside, visualType)\n            : data.getVisual(visualType);\n    };\n\n    /**\n     * Get view of corresponding component model\n     * @param  {module:echarts/model/Component} componentModel\n     * @return {module:echarts/view/Component}\n     */\n    echartsProto.getViewOfComponentModel = function (componentModel) {\n        return this._componentsMap[componentModel.__viewId];\n    };\n\n    /**\n     * Get view of corresponding series model\n     * @param  {module:echarts/model/Series} seriesModel\n     * @return {module:echarts/view/Chart}\n     */\n    echartsProto.getViewOfSeriesModel = function (seriesModel) {\n        return this._chartsMap[seriesModel.__viewId];\n    };\n\n\n    var updateMethods = {\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        update: function (payload) {\n            // console.profile && console.profile('update');\n\n            var ecModel = this._model;\n            var api = this._api;\n            var coordSysMgr = this._coordSysMgr;\n            var zr = this._zr;\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            // Fixme First time update ?\n            ecModel.restoreData();\n\n            // TODO\n            // Save total ecModel here for undo/redo (after restoring data and before processing data).\n            // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n\n            // Create new coordinate system each update\n            // In LineView may save the old coordinate system and use it to get the orignal point\n            coordSysMgr.create(this._model, this._api);\n\n            processData.call(this, ecModel, api);\n\n            stackSeriesData.call(this, ecModel);\n\n            coordSysMgr.update(ecModel, api);\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            doRender.call(this, ecModel, payload);\n\n            // Set background\n            var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n\n            var painter = zr.painter;\n            // TODO all use clearColor ?\n            if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n                zr.configLayer(0, {\n                    clearColor: backgroundColor\n                });\n            }\n            else {\n                // In IE8\n                if (!env.canvasSupported) {\n                    var colorArr = colorTool.parse(backgroundColor);\n                    backgroundColor = colorTool.stringify(colorArr, 'rgb');\n                    if (colorArr[3] === 0) {\n                        backgroundColor = 'transparent';\n                    }\n                }\n                if (backgroundColor.colorStops || backgroundColor.image) {\n                    // Gradient background\n                    // FIXME Fixed layer？\n                    zr.configLayer(0, {\n                        clearColor: backgroundColor\n                    });\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n\n                    this._dom.style.background = 'transparent';\n                }\n                else {\n                    if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n                        zr.configLayer(0, {\n                            clearColor: null\n                        });\n                    }\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n\n                    this._dom.style.background = backgroundColor;\n                }\n            }\n\n            each(postUpdateFuncs, function (func) {\n                func(ecModel, api);\n            });\n\n            // console.profile && console.profileEnd('update');\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateView: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateVisual: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload, true);\n\n            invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateLayout: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            doLayout.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        prepareAndUpdate: function (payload) {\n            var ecModel = this._model;\n\n            prepareView.call(this, 'component', ecModel);\n\n            prepareView.call(this, 'chart', ecModel);\n\n            updateMethods.update.call(this, payload);\n        }\n    };\n\n    /**\n     * @private\n     */\n    function updateDirectly(ecIns, method, payload, mainType, subType) {\n        var ecModel = ecIns._model;\n\n        // broadcast\n        if (!mainType) {\n            each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n            return;\n        }\n\n        var query = {};\n        query[mainType + 'Id'] = payload[mainType + 'Id'];\n        query[mainType + 'Index'] = payload[mainType + 'Index'];\n        query[mainType + 'Name'] = payload[mainType + 'Name'];\n\n        var condition = {mainType: mainType, query: query};\n        subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n        // If dispatchAction before setOption, do nothing.\n        ecModel && ecModel.eachComponent(condition, function (model, index) {\n            callView(ecIns[\n                mainType === 'series' ? '_chartsMap' : '_componentsMap'\n            ][model.__viewId]);\n        }, ecIns);\n\n        function callView(view) {\n            view && view.__alive && view[method] && view[method](\n                view.__model, ecModel, ecIns._api, payload\n            );\n        }\n    }\n\n    /**\n     * Resize the chart\n     * @param {Object} opts\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @param {boolean} [opts.silent=false]\n     */\n    echartsProto.resize = function (opts) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`resize` should not be called during main process.');\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        this._zr.resize(opts);\n\n        var optionChanged = this._model && this._model.resetOption('media');\n        var updateMethod = optionChanged ? 'prepareAndUpdate' : 'update';\n\n        updateMethods[updateMethod].call(this);\n\n        // Resize loading effect\n        this._loadingFX && this._loadingFX.resize();\n\n        this[IN_MAIN_PROCESS] = false;\n\n        var silent = opts && opts.silent;\n\n        flushPendingActions.call(this, silent);\n\n        triggerUpdatedEvent.call(this, silent);\n    };\n\n    /**\n     * Show loading effect\n     * @param  {string} [name='default']\n     * @param  {Object} [cfg]\n     */\n    echartsProto.showLoading = function (name, cfg) {\n        if (zrUtil.isObject(name)) {\n            cfg = name;\n            name = '';\n        }\n        name = name || 'default';\n\n        this.hideLoading();\n        if (!loadingEffects[name]) {\n            if (__DEV__) {\n                console.warn('Loading effects ' + name + ' not exists.');\n            }\n            return;\n        }\n        var el = loadingEffects[name](this._api, cfg);\n        var zr = this._zr;\n        this._loadingFX = el;\n\n        zr.add(el);\n    };\n\n    /**\n     * Hide loading effect\n     */\n    echartsProto.hideLoading = function () {\n        this._loadingFX && this._zr.remove(this._loadingFX);\n        this._loadingFX = null;\n    };\n\n    /**\n     * @param {Object} eventObj\n     * @return {Object}\n     */\n    echartsProto.makeActionFromEvent = function (eventObj) {\n        var payload = zrUtil.extend({}, eventObj);\n        payload.type = eventActionMap[eventObj.type];\n        return payload;\n    };\n\n    /**\n     * @pubilc\n     * @param {Object} payload\n     * @param {string} [payload.type] Action type\n     * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n     * @param {boolean} [opt.silent=false] Whether trigger events.\n     * @param {boolean} [opt.flush=undefined]\n     *                  true: Flush immediately, and then pixel in canvas can be fetched\n     *                      immediately. Caution: it might affect performance.\n     *                  false: Not not flush.\n     *                  undefined: Auto decide whether perform flush.\n     */\n    echartsProto.dispatchAction = function (payload, opt) {\n        if (!zrUtil.isObject(opt)) {\n            opt = {silent: !!opt};\n        }\n\n        if (!actions[payload.type]) {\n            return;\n        }\n\n        // Avoid dispatch action before setOption. Especially in `connect`.\n        if (!this._model) {\n            return;\n        }\n\n        // May dispatchAction in rendering procedure\n        if (this[IN_MAIN_PROCESS]) {\n            this._pendingActions.push(payload);\n            return;\n        }\n\n        doDispatchAction.call(this, payload, opt.silent);\n\n        if (opt.flush) {\n            this._zr.flush(true);\n        }\n        else if (opt.flush !== false && env.browser.weChat) {\n            // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n            // hang when sliding page (on touch event), which cause that zr does not\n            // refresh util user interaction finished, which is not expected.\n            // But `dispatchAction` may be called too frequently when pan on touch\n            // screen, which impacts performance if do not throttle them.\n            this._throttledZrFlush();\n        }\n\n        flushPendingActions.call(this, opt.silent);\n\n        triggerUpdatedEvent.call(this, opt.silent);\n    };\n\n    function doDispatchAction(payload, silent) {\n        var payloadType = payload.type;\n        var escapeConnect = payload.escapeConnect;\n        var actionWrap = actions[payloadType];\n        var actionInfo = actionWrap.actionInfo;\n\n        var cptType = (actionInfo.update || 'update').split(':');\n        var updateMethod = cptType.pop();\n        cptType = cptType[0] != null && parseClassType(cptType[0]);\n\n        this[IN_MAIN_PROCESS] = true;\n\n        var payloads = [payload];\n        var batched = false;\n        // Batch action\n        if (payload.batch) {\n            batched = true;\n            payloads = zrUtil.map(payload.batch, function (item) {\n                item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n                item.batch = null;\n                return item;\n            });\n        }\n\n        var eventObjBatch = [];\n        var eventObj;\n        var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n\n        each(payloads, function (batchItem) {\n            // Action can specify the event by return it.\n            eventObj = actionWrap.action(batchItem, this._model, this._api);\n            // Emit event outside\n            eventObj = eventObj || zrUtil.extend({}, batchItem);\n            // Convert type to eventType\n            eventObj.type = actionInfo.event || eventObj.type;\n            eventObjBatch.push(eventObj);\n\n            // light update does not perform data process, layout and visual.\n            if (isHighDown) {\n                // method, payload, mainType, subType\n                updateDirectly(this, updateMethod, batchItem, 'series');\n            }\n            else if (cptType) {\n                updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n            }\n        }, this);\n\n        if (updateMethod !== 'none' && !isHighDown && !cptType) {\n            // Still dirty\n            if (this[OPTION_UPDATED]) {\n                // FIXME Pass payload ?\n                updateMethods.prepareAndUpdate.call(this, payload);\n                this[OPTION_UPDATED] = false;\n            }\n            else {\n                updateMethods[updateMethod].call(this, payload);\n            }\n        }\n\n        // Follow the rule of action batch\n        if (batched) {\n            eventObj = {\n                type: actionInfo.event || payloadType,\n                escapeConnect: escapeConnect,\n                batch: eventObjBatch\n            };\n        }\n        else {\n            eventObj = eventObjBatch[0];\n        }\n\n        this[IN_MAIN_PROCESS] = false;\n\n        !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n    }\n\n    function flushPendingActions(silent) {\n        var pendingActions = this._pendingActions;\n        while (pendingActions.length) {\n            var payload = pendingActions.shift();\n            doDispatchAction.call(this, payload, silent);\n        }\n    }\n\n    function triggerUpdatedEvent(silent) {\n        !silent && this.trigger('updated');\n    }\n\n    /**\n     * Register event\n     * @method\n     */\n    echartsProto.on = createRegisterEventWithLowercaseName('on');\n    echartsProto.off = createRegisterEventWithLowercaseName('off');\n    echartsProto.one = createRegisterEventWithLowercaseName('one');\n\n    /**\n     * @param {string} methodName\n     * @private\n     */\n    function invokeUpdateMethod(methodName, ecModel, payload) {\n        var api = this._api;\n\n        // Update all components\n        each(this._componentsViews, function (component) {\n            var componentModel = component.__model;\n            component[methodName](componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, component);\n        }, this);\n\n        // Upate all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chart = this._chartsMap[seriesModel.__viewId];\n            chart[methodName](seriesModel, ecModel, api, payload);\n\n            updateZ(seriesModel, chart);\n\n            updateProgressiveAndBlend(seriesModel, chart);\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Post render\n        each(postUpdateFuncs, function (func) {\n            func(ecModel, api);\n        });\n    }\n\n    /**\n     * Prepare view instances of charts and components\n     * @param  {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function prepareView(type, ecModel) {\n        var isComponent = type === 'component';\n        var viewList = isComponent ? this._componentsViews : this._chartsViews;\n        var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n        var zr = this._zr;\n\n        for (var i = 0; i < viewList.length; i++) {\n            viewList[i].__alive = false;\n        }\n\n        ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n            if (isComponent) {\n                if (componentType === 'series') {\n                    return;\n                }\n            }\n            else {\n                model = componentType;\n            }\n\n            // Consider: id same and type changed.\n            var viewId = '_ec_' + model.id + '_' + model.type;\n            var view = viewMap[viewId];\n            if (!view) {\n                var classType = parseClassType(model.type);\n                var Clazz = isComponent\n                    ? ComponentView.getClass(classType.main, classType.sub)\n                    : ChartView.getClass(classType.sub);\n                if (Clazz) {\n                    view = new Clazz();\n                    view.init(ecModel, this._api);\n                    viewMap[viewId] = view;\n                    viewList.push(view);\n                    zr.add(view.group);\n                }\n                else {\n                    // Error\n                    return;\n                }\n            }\n\n            model.__viewId = view.__id = viewId;\n            view.__alive = true;\n            view.__model = model;\n            view.group.__ecComponentInfo = {\n                mainType: model.mainType,\n                index: model.componentIndex\n            };\n        }, this);\n\n        for (var i = 0; i < viewList.length;) {\n            var view = viewList[i];\n            if (!view.__alive) {\n                zr.remove(view.group);\n                view.dispose(ecModel, this._api);\n                viewList.splice(i, 1);\n                delete viewMap[view.__id];\n                view.__id = view.group.__ecComponentInfo = null;\n            }\n            else {\n                i++;\n            }\n        }\n    }\n\n    /**\n     * Processor data in each series\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function processData(ecModel, api) {\n        each(dataProcessorFuncs, function (process) {\n            process.func(ecModel, api);\n        });\n    }\n\n    /**\n     * @private\n     */\n    function stackSeriesData(ecModel) {\n        var stackedDataMap = {};\n        ecModel.eachSeries(function (series) {\n            var stack = series.get('stack');\n            var data = series.getData();\n            if (stack && data.type === 'list') {\n                var previousStack = stackedDataMap[stack];\n                // Avoid conflict with Object.prototype\n                if (stackedDataMap.hasOwnProperty(stack) && previousStack) {\n                    data.stackedOn = previousStack;\n                }\n                stackedDataMap[stack] = data;\n            }\n        });\n    }\n\n    /**\n     * Layout before each chart render there series, special visual encoding stage\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function doLayout(ecModel, payload) {\n        var api = this._api;\n        each(visualFuncs, function (visual) {\n            if (visual.isLayout) {\n                visual.func(ecModel, api, payload);\n            }\n        });\n    }\n\n    /**\n     * Encode visual infomation from data after data processing\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @param {object} layout\n     * @param {boolean} [excludesLayout]\n     * @private\n     */\n    function doVisualEncoding(ecModel, payload, excludesLayout) {\n        var api = this._api;\n        ecModel.clearColorPalette();\n        ecModel.eachSeries(function (seriesModel) {\n            seriesModel.clearColorPalette();\n        });\n        each(visualFuncs, function (visual) {\n            (!excludesLayout || !visual.isLayout)\n                && visual.func(ecModel, api, payload);\n        });\n    }\n\n    /**\n     * Render each chart and component\n     * @private\n     */\n    function doRender(ecModel, payload) {\n        var api = this._api;\n        // Render all components\n        each(this._componentsViews, function (componentView) {\n            var componentModel = componentView.__model;\n            componentView.render(componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, componentView);\n        }, this);\n\n        each(this._chartsViews, function (chart) {\n            chart.__alive = false;\n        }, this);\n\n        // Render all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chartView = this._chartsMap[seriesModel.__viewId];\n            chartView.__alive = true;\n            chartView.render(seriesModel, ecModel, api, payload);\n\n            chartView.group.silent = !!seriesModel.get('silent');\n\n            updateZ(seriesModel, chartView);\n\n            updateProgressiveAndBlend(seriesModel, chartView);\n\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Remove groups of unrendered charts\n        each(this._chartsViews, function (chart) {\n            if (!chart.__alive) {\n                chart.remove(ecModel, api);\n            }\n        }, this);\n    }\n\n    var MOUSE_EVENT_NAMES = [\n        'click', 'dblclick', 'mouseover', 'mouseout', 'mousemove',\n        'mousedown', 'mouseup', 'globalout', 'contextmenu'\n    ];\n    /**\n     * @private\n     */\n    echartsProto._initEvents = function () {\n        each(MOUSE_EVENT_NAMES, function (eveName) {\n            this._zr.on(eveName, function (e) {\n                var ecModel = this.getModel();\n                var el = e.target;\n                var params;\n\n                // no e.target when 'globalout'.\n                if (eveName === 'globalout') {\n                    params = {};\n                }\n                else if (el && el.dataIndex != null) {\n                    var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n                    params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n                }\n                // If element has custom eventData of components\n                else if (el && el.eventData) {\n                    params = zrUtil.extend({}, el.eventData);\n                }\n\n                if (params) {\n                    params.event = e;\n                    params.type = eveName;\n                    this.trigger(eveName, params);\n                }\n\n            }, this);\n        }, this);\n\n        each(eventActionMap, function (actionType, eventType) {\n            this._messageCenter.on(eventType, function (event) {\n                this.trigger(eventType, event);\n            }, this);\n        }, this);\n    };\n\n    /**\n     * @return {boolean}\n     */\n    echartsProto.isDisposed = function () {\n        return this._disposed;\n    };\n\n    /**\n     * Clear\n     */\n    echartsProto.clear = function () {\n        this.setOption({ series: [] }, true);\n    };\n\n    /**\n     * Dispose instance\n     */\n    echartsProto.dispose = function () {\n        if (this._disposed) {\n            if (__DEV__) {\n                console.warn('Instance ' + this.id + ' has been disposed');\n            }\n            return;\n        }\n        this._disposed = true;\n\n        var api = this._api;\n        var ecModel = this._model;\n\n        each(this._componentsViews, function (component) {\n            component.dispose(ecModel, api);\n        });\n        each(this._chartsViews, function (chart) {\n            chart.dispose(ecModel, api);\n        });\n\n        // Dispose after all views disposed\n        this._zr.dispose();\n\n        delete instances[this.id];\n    };\n\n    zrUtil.mixin(ECharts, Eventful);\n\n    function updateHoverLayerStatus(zr, ecModel) {\n        var storage = zr.storage;\n        var elCount = 0;\n        storage.traverse(function (el) {\n            if (!el.isGroup) {\n                elCount++;\n            }\n        });\n        if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n            storage.traverse(function (el) {\n                if (!el.isGroup) {\n                    el.useHoverLayer = true;\n                }\n            });\n        }\n    }\n\n    /**\n     * Update chart progressive and blend.\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateProgressiveAndBlend(seriesModel, chartView) {\n        // Progressive configuration\n        var elCount = 0;\n        chartView.group.traverse(function (el) {\n            if (el.type !== 'group' && !el.ignore) {\n                elCount++;\n            }\n        });\n        var frameDrawNum = +seriesModel.get('progressive');\n        var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n        if (needProgressive) {\n            chartView.group.traverse(function (el) {\n                // FIXME marker and other components\n                if (!el.isGroup) {\n                    el.progressive = needProgressive ?\n                        Math.floor(elCount++ / frameDrawNum) : -1;\n                    if (needProgressive) {\n                        el.stopAnimation(true);\n                    }\n                }\n            });\n        }\n\n        // Blend configration\n        var blendMode = seriesModel.get('blendMode') || null;\n        if (__DEV__) {\n            if (!env.canvasSupported && blendMode && blendMode !== 'source-over') {\n                console.warn('Only canvas support blendMode');\n            }\n        }\n        chartView.group.traverse(function (el) {\n            // FIXME marker and other components\n            if (!el.isGroup) {\n                el.setStyle('blend', blendMode);\n            }\n        });\n    }\n\n    /**\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateZ(model, view) {\n        var z = model.get('z');\n        var zlevel = model.get('zlevel');\n        // Set z and zlevel\n        view.group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n            }\n        });\n    }\n\n    function createExtensionAPI(ecInstance) {\n        var coordSysMgr = ecInstance._coordSysMgr;\n        return zrUtil.extend(new ExtensionAPI(ecInstance), {\n            // Inject methods\n            getCoordinateSystems: zrUtil.bind(\n                coordSysMgr.getCoordinateSystems, coordSysMgr\n            ),\n            getComponentByElement: function (el) {\n                while (el) {\n                    var modelInfo = el.__ecComponentInfo;\n                    if (modelInfo != null) {\n                        return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n                    }\n                    el = el.parent;\n                }\n            }\n        });\n    }\n\n    /**\n     * @type {Object} key: actionType.\n     * @inner\n     */\n    var actions = {};\n\n    /**\n     * Map eventType to actionType\n     * @type {Object}\n     */\n    var eventActionMap = {};\n\n    /**\n     * Data processor functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var dataProcessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var optionPreprocessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var postUpdateFuncs = [];\n\n    /**\n     * Visual encoding functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var visualFuncs = [];\n    /**\n     * Theme storage\n     * @type {Object.<key, Object>}\n     */\n    var themeStorage = {};\n    /**\n     * Loading effects\n     */\n    var loadingEffects = {};\n\n\n    var instances = {};\n    var connectedGroups = {};\n\n    var idBase = new Date() - 0;\n    var groupIdBase = new Date() - 0;\n    var DOM_ATTRIBUTE_KEY = '_echarts_instance_';\n\n    /**\n     * @alias module:echarts\n     */\n    var echarts = {\n        /**\n         * @type {number}\n         */\n        version: '3.7.2',\n        dependencies: {\n            zrender: '3.6.2'\n        }\n    };\n\n    function enableConnect(chart) {\n        var STATUS_PENDING = 0;\n        var STATUS_UPDATING = 1;\n        var STATUS_UPDATED = 2;\n        var STATUS_KEY = '__connectUpdateStatus';\n\n        function updateConnectedChartsStatus(charts, status) {\n            for (var i = 0; i < charts.length; i++) {\n                var otherChart = charts[i];\n                otherChart[STATUS_KEY] = status;\n            }\n        }\n\n        zrUtil.each(eventActionMap, function (actionType, eventType) {\n            chart._messageCenter.on(eventType, function (event) {\n                if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n                    if (event && event.escapeConnect) {\n                        return;\n                    }\n\n                    var action = chart.makeActionFromEvent(event);\n                    var otherCharts = [];\n\n                    zrUtil.each(instances, function (otherChart) {\n                        if (otherChart !== chart && otherChart.group === chart.group) {\n                            otherCharts.push(otherChart);\n                        }\n                    });\n\n                    updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n                    each(otherCharts, function (otherChart) {\n                        if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n                            otherChart.dispatchAction(action);\n                        }\n                    });\n                    updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n                }\n            });\n        });\n    }\n\n    /**\n     * @param {HTMLElement} dom\n     * @param {Object} [theme]\n     * @param {Object} opts\n     * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n     * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n     * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n     *                              Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n     *                               Can be 'auto' (the same as null/undefined)\n     */\n    echarts.init = function (dom, theme, opts) {\n        if (__DEV__) {\n            // Check version\n            if ((zrender.version.replace('.', '') - 0) < (echarts.dependencies.zrender.replace('.', '') - 0)) {\n                throw new Error(\n                    'ZRender ' + zrender.version\n                    + ' is too old for ECharts ' + echarts.version\n                    + '. Current version need ZRender '\n                    + echarts.dependencies.zrender + '+'\n                );\n            }\n\n            if (!dom) {\n                throw new Error('Initialize failed: invalid dom.');\n            }\n        }\n\n        var existInstance = echarts.getInstanceByDom(dom);\n        if (existInstance) {\n            if (__DEV__) {\n                console.warn('There is a chart instance already initialized on the dom.');\n            }\n            return existInstance;\n        }\n\n        if (__DEV__) {\n            if (zrUtil.isDom(dom)\n                && dom.nodeName.toUpperCase() !== 'CANVAS'\n                && (\n                    (!dom.clientWidth && (!opts || opts.width == null))\n                    || (!dom.clientHeight && (!opts || opts.height == null))\n                )\n            ) {\n                console.warn('Can\\'t get dom width or height');\n            }\n        }\n\n        var chart = new ECharts(dom, theme, opts);\n        chart.id = 'ec_' + idBase++;\n        instances[chart.id] = chart;\n\n        if (dom.setAttribute) {\n            dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n        }\n        else {\n            dom[DOM_ATTRIBUTE_KEY] = chart.id;\n        }\n\n        enableConnect(chart);\n\n        return chart;\n    };\n\n    /**\n     * @return {string|Array.<module:echarts~ECharts>} groupId\n     */\n    echarts.connect = function (groupId) {\n        // Is array of charts\n        if (zrUtil.isArray(groupId)) {\n            var charts = groupId;\n            groupId = null;\n            // If any chart has group\n            zrUtil.each(charts, function (chart) {\n                if (chart.group != null) {\n                    groupId = chart.group;\n                }\n            });\n            groupId = groupId || ('g_' + groupIdBase++);\n            zrUtil.each(charts, function (chart) {\n                chart.group = groupId;\n            });\n        }\n        connectedGroups[groupId] = true;\n        return groupId;\n    };\n\n    /**\n     * @DEPRECATED\n     * @return {string} groupId\n     */\n    echarts.disConnect = function (groupId) {\n        connectedGroups[groupId] = false;\n    };\n\n    /**\n     * @return {string} groupId\n     */\n    echarts.disconnect = echarts.disConnect;\n\n    /**\n     * Dispose a chart instance\n     * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n     */\n    echarts.dispose = function (chart) {\n        if (typeof chart === 'string') {\n            chart = instances[chart];\n        }\n        else if (!(chart instanceof ECharts)){\n            // Try to treat as dom\n            chart = echarts.getInstanceByDom(chart);\n        }\n        if ((chart instanceof ECharts) && !chart.isDisposed()) {\n            chart.dispose();\n        }\n    };\n\n    /**\n     * @param  {HTMLElement} dom\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceByDom = function (dom) {\n        var key;\n        if (dom.getAttribute) {\n            key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n        }\n        else {\n            key = dom[DOM_ATTRIBUTE_KEY];\n        }\n        return instances[key];\n    };\n\n    /**\n     * @param {string} key\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceById = function (key) {\n        return instances[key];\n    };\n\n    /**\n     * Register theme\n     */\n    echarts.registerTheme = function (name, theme) {\n        themeStorage[name] = theme;\n    };\n\n    /**\n     * Register option preprocessor\n     * @param {Function} preprocessorFunc\n     */\n    echarts.registerPreprocessor = function (preprocessorFunc) {\n        optionPreprocessorFuncs.push(preprocessorFunc);\n    };\n\n    /**\n     * @param {number} [priority=1000]\n     * @param {Function} processorFunc\n     */\n    echarts.registerProcessor = function (priority, processorFunc) {\n        if (typeof priority === 'function') {\n            processorFunc = priority;\n            priority = PRIORITY_PROCESSOR_FILTER;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown processor priority');\n            }\n        }\n        dataProcessorFuncs.push({\n            prio: priority,\n            func: processorFunc\n        });\n    };\n\n    /**\n     * Register postUpdater\n     * @param {Function} postUpdateFunc\n     */\n    echarts.registerPostUpdate = function (postUpdateFunc) {\n        postUpdateFuncs.push(postUpdateFunc);\n    };\n\n    /**\n     * Usage:\n     * registerAction('someAction', 'someEvent', function () { ... });\n     * registerAction('someAction', function () { ... });\n     * registerAction(\n     *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n     *     function () { ... }\n     * );\n     *\n     * @param {(string|Object)} actionInfo\n     * @param {string} actionInfo.type\n     * @param {string} [actionInfo.event]\n     * @param {string} [actionInfo.update]\n     * @param {string} [eventName]\n     * @param {Function} action\n     */\n    echarts.registerAction = function (actionInfo, eventName, action) {\n        if (typeof eventName === 'function') {\n            action = eventName;\n            eventName = '';\n        }\n        var actionType = zrUtil.isObject(actionInfo)\n            ? actionInfo.type\n            : ([actionInfo, actionInfo = {\n                event: eventName\n            }][0]);\n\n        // Event name is all lowercase\n        actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n        eventName = actionInfo.event;\n\n        // Validate action type and event name.\n        zrUtil.assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n        if (!actions[actionType]) {\n            actions[actionType] = {action: action, actionInfo: actionInfo};\n        }\n        eventActionMap[eventName] = actionType;\n    };\n\n    /**\n     * @param {string} type\n     * @param {*} CoordinateSystem\n     */\n    echarts.registerCoordinateSystem = function (type, CoordinateSystem) {\n        CoordinateSystemManager.register(type, CoordinateSystem);\n    };\n\n    /**\n     * Get dimensions of specified coordinate system.\n     * @param {string} type\n     * @return {Array.<string|Object>}\n     */\n    echarts.getCoordinateSystemDimensions = function (type) {\n        var coordSysCreator = CoordinateSystemManager.get(type);\n        if (coordSysCreator) {\n            return coordSysCreator.getDimensionsInfo\n                    ? coordSysCreator.getDimensionsInfo()\n                    : coordSysCreator.dimensions.slice();\n        }\n    };\n\n    /**\n     * Layout is a special stage of visual encoding\n     * Most visual encoding like color are common for different chart\n     * But each chart has it's own layout algorithm\n     *\n     * @param {number} [priority=1000]\n     * @param {Function} layoutFunc\n     */\n    echarts.registerLayout = function (priority, layoutFunc) {\n        if (typeof priority === 'function') {\n            layoutFunc = priority;\n            priority = PRIORITY_VISUAL_LAYOUT;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown layout priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: layoutFunc,\n            isLayout: true\n        });\n    };\n\n    /**\n     * @param {number} [priority=3000]\n     * @param {Function} visualFunc\n     */\n    echarts.registerVisual = function (priority, visualFunc) {\n        if (typeof priority === 'function') {\n            visualFunc = priority;\n            priority = PRIORITY_VISUAL_CHART;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown visual priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: visualFunc\n        });\n    };\n\n    /**\n     * @param {string} name\n     */\n    echarts.registerLoading = function (name, loadingFx) {\n        loadingEffects[name] = loadingFx;\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentModel = function (opts/*, superClass*/) {\n        // var Clazz = ComponentModel;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentView = function (opts/*, superClass*/) {\n        // var Clazz = ComponentView;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentView.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendSeriesModel = function (opts/*, superClass*/) {\n        // var Clazz = SeriesModel;\n        // if (superClass) {\n        //     superClass = 'series.' + superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return SeriesModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendChartView = function (opts/*, superClass*/) {\n        // var Clazz = ChartView;\n        // if (superClass) {\n        //     superClass = superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ChartView.getClass(classType.main, true);\n        // }\n        return ChartView.extend(opts);\n    };\n\n    /**\n     * ZRender need a canvas context to do measureText.\n     * But in node environment canvas may be created by node-canvas.\n     * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n     *\n     * Be careful of using it in the browser.\n     *\n     * @param {Function} creator\n     * @example\n     *     var Canvas = require('canvas');\n     *     var echarts = require('echarts');\n     *     echarts.setCanvasCreator(function () {\n     *         // Small size is enough.\n     *         return new Canvas(32, 32);\n     *     });\n     */\n    echarts.setCanvasCreator = function (creator) {\n        zrUtil.createCanvas = creator;\n    };\n\n    echarts.registerVisual(PRIORITY_VISUAL_GLOBAL, __webpack_require__(1118));\n    echarts.registerPreprocessor(backwardCompat);\n    echarts.registerLoading('default', __webpack_require__(1119));\n\n    // Default action\n    echarts.registerAction({\n        type: 'highlight',\n        event: 'highlight',\n        update: 'highlight'\n    }, zrUtil.noop);\n    echarts.registerAction({\n        type: 'downplay',\n        event: 'downplay',\n        update: 'downplay'\n    }, zrUtil.noop);\n\n    // --------\n    // Exports\n    // --------\n    echarts.zrender = zrender;\n\n    echarts.List = __webpack_require__(986);\n    echarts.Model = __webpack_require__(978);\n\n    echarts.Axis = __webpack_require__(1006);\n\n    echarts.graphic = __webpack_require__(972);\n    echarts.number = __webpack_require__(973);\n    echarts.format = __webpack_require__(976);\n    echarts.throttle = throttle.throttle;\n    echarts.matrix = __webpack_require__(985);\n    echarts.vector = __webpack_require__(975);\n    echarts.color = __webpack_require__(992);\n\n    echarts.util = {};\n    each([\n            'map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter',\n            'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction',\n            'extend', 'defaults', 'clone', 'merge'\n        ],\n        function (name) {\n            echarts.util[name] = zrUtil[name];\n        }\n    );\n\n    echarts.helper = __webpack_require__(1123);\n\n\n    // PRIORITY\n    echarts.PRIORITY = {\n        PROCESSOR: {\n            FILTER: PRIORITY_PROCESSOR_FILTER,\n            STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n        },\n        VISUAL: {\n            LAYOUT: PRIORITY_VISUAL_LAYOUT,\n            GLOBAL: PRIORITY_VISUAL_GLOBAL,\n            CHART: PRIORITY_VISUAL_CHART,\n            COMPONENT: PRIORITY_VISUAL_COMPONENT,\n            BRUSH: PRIORITY_VISUAL_BRUSH\n        }\n    };\n\n    module.exports = echarts;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(24)))\n\n/***/ }),\n\n/***/ 972:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(970);\n\n    var pathTool = __webpack_require__(1082);\n    var Path = __webpack_require__(979);\n    var colorTool = __webpack_require__(992);\n    var matrix = __webpack_require__(985);\n    var vector = __webpack_require__(975);\n    var Transformable = __webpack_require__(1023);\n    var BoundingRect = __webpack_require__(981);\n\n    var round = Math.round;\n    var mathMax = Math.max;\n    var mathMin = Math.min;\n\n    var EMPTY_OBJ = {};\n\n    var graphic = {};\n\n    graphic.Group = __webpack_require__(1000);\n\n    graphic.Image = __webpack_require__(1026);\n\n    graphic.Text = __webpack_require__(1062);\n\n    graphic.Circle = __webpack_require__(1090);\n\n    graphic.Sector = __webpack_require__(1091);\n\n    graphic.Ring = __webpack_require__(1092);\n\n    graphic.Polygon = __webpack_require__(1093);\n\n    graphic.Polyline = __webpack_require__(1096);\n\n    graphic.Rect = __webpack_require__(1097);\n\n    graphic.Line = __webpack_require__(1098);\n\n    graphic.BezierCurve = __webpack_require__(1099);\n\n    graphic.Arc = __webpack_require__(1100);\n\n    graphic.CompoundPath = __webpack_require__(1101);\n\n    graphic.LinearGradient = __webpack_require__(1063);\n\n    graphic.RadialGradient = __webpack_require__(1102);\n\n    graphic.BoundingRect = BoundingRect;\n\n    /**\n     * Extend shape with parameters\n     */\n    graphic.extendShape = function (opts) {\n        return Path.extend(opts);\n    };\n\n    /**\n     * Extend path\n     */\n    graphic.extendPath = function (pathData, opts) {\n        return pathTool.extendFromString(pathData, opts);\n    };\n\n    /**\n     * Create a path element from path data string\n     * @param {string} pathData\n     * @param {Object} opts\n     * @param {module:zrender/core/BoundingRect} rect\n     * @param {string} [layout=cover] 'center' or 'cover'\n     */\n    graphic.makePath = function (pathData, opts, rect, layout) {\n        var path = pathTool.createFromString(pathData, opts);\n        var boundingRect = path.getBoundingRect();\n        if (rect) {\n            var aspect = boundingRect.width / boundingRect.height;\n\n            if (layout === 'center') {\n                // Set rect to center, keep width / height ratio.\n                var width = rect.height * aspect;\n                var height;\n                if (width <= rect.width) {\n                    height = rect.height;\n                }\n                else {\n                    width = rect.width;\n                    height = width / aspect;\n                }\n                var cx = rect.x + rect.width / 2;\n                var cy = rect.y + rect.height / 2;\n\n                rect.x = cx - width / 2;\n                rect.y = cy - height / 2;\n                rect.width = width;\n                rect.height = height;\n            }\n\n            graphic.resizePath(path, rect);\n        }\n        return path;\n    };\n\n    graphic.mergePath = pathTool.mergePath,\n\n    /**\n     * Resize a path to fit the rect\n     * @param {module:zrender/graphic/Path} path\n     * @param {Object} rect\n     */\n    graphic.resizePath = function (path, rect) {\n        if (!path.applyTransform) {\n            return;\n        }\n\n        var pathRect = path.getBoundingRect();\n\n        var m = pathRect.calculateTransform(rect);\n\n        path.applyTransform(m);\n    };\n\n    /**\n     * Sub pixel optimize line for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x1]\n     * @param {number} [param.shape.y1]\n     * @param {number} [param.shape.x2]\n     * @param {number} [param.shape.y2]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeLine = function (param) {\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n\n        if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n            shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n        }\n        if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n            shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n        }\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize rect for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x]\n     * @param {number} [param.shape.y]\n     * @param {number} [param.shape.width]\n     * @param {number} [param.shape.height]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeRect = function (param) {\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n        var originX = shape.x;\n        var originY = shape.y;\n        var originWidth = shape.width;\n        var originHeight = shape.height;\n        shape.x = subPixelOptimize(shape.x, lineWidth, true);\n        shape.y = subPixelOptimize(shape.y, lineWidth, true);\n        shape.width = Math.max(\n            subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x,\n            originWidth === 0 ? 0 : 1\n        );\n        shape.height = Math.max(\n            subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y,\n            originHeight === 0 ? 0 : 1\n        );\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize for canvas\n     *\n     * @param {number} position Coordinate, such as x, y\n     * @param {number} lineWidth Should be nonnegative integer.\n     * @param {boolean=} positiveOrNegative Default false (negative).\n     * @return {number} Optimized position.\n     */\n    var subPixelOptimize = graphic.subPixelOptimize = function (position, lineWidth, positiveOrNegative) {\n        // Assure that (position + lineWidth / 2) is near integer edge,\n        // otherwise line will be fuzzy in canvas.\n        var doubledPosition = round(position * 2);\n        return (doubledPosition + round(lineWidth)) % 2 === 0\n            ? doubledPosition / 2\n            : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n    };\n\n    function hasFillOrStroke(fillOrStroke) {\n        return fillOrStroke != null && fillOrStroke != 'none';\n    }\n\n    function liftColor(color) {\n        return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n    }\n\n    /**\n     * @private\n     */\n    function cacheElementStl(el) {\n        if (el.__hoverStlDirty) {\n            var stroke = el.style.stroke;\n            var fill = el.style.fill;\n\n            // Create hoverStyle on mouseover\n            var hoverStyle = el.__hoverStl;\n            hoverStyle.fill = hoverStyle.fill\n                || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n            hoverStyle.stroke = hoverStyle.stroke\n                || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n\n            var normalStyle = {};\n            for (var name in hoverStyle) {\n                // See comment in `doSingleEnterHover`.\n                if (hoverStyle[name] != null) {\n                    normalStyle[name] = el.style[name];\n                }\n            }\n\n            el.__normalStl = normalStyle;\n\n            el.__hoverStlDirty = false;\n        }\n    }\n\n    /**\n     * @private\n     */\n    function doSingleEnterHover(el) {\n        if (el.__isHover) {\n            return;\n        }\n\n        cacheElementStl(el);\n\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.addHover(el, el.__hoverStl);\n        }\n        else {\n            var style = el.style;\n            var insideRollbackOpt = style.insideRollbackOpt;\n\n            // Consider case: only `position: 'top'` is set on emphasis, then text\n            // color should be returned to `autoColor`, rather than remain '#fff'.\n            // So we should rollback then apply again after style merging.\n            insideRollbackOpt && rollbackInsideStyle(style);\n\n            // styles can be:\n            // {\n            //     label: {\n            //         normal: {\n            //             show: false,\n            //             position: 'outside',\n            //             fontSize: 18\n            //         },\n            //         emphasis: {\n            //             show: true\n            //         }\n            //     }\n            // },\n            // where properties of `emphasis` may not appear in `normal`. We previously use\n            // module:echarts/util/model#defaultEmphasis to merge `normal` to `emphasis`.\n            // But consider rich text and setOption in merge mode, it is impossible to cover\n            // all properties in merge. So we use merge mode when setting style here, where\n            // only properties that is not `null/undefined` can be set. The disadventage:\n            // null/undefined can not be used to remove style any more in `emphasis`.\n            style.extendFrom(el.__hoverStl);\n\n            // Do not save `insideRollback`.\n            if (insideRollbackOpt) {\n                applyInsideStyle(style, style.insideOriginalTextPosition, insideRollbackOpt);\n\n                // textFill may be rollbacked to null.\n                if (style.textFill == null) {\n                    style.textFill = insideRollbackOpt.autoColor;\n                }\n            }\n\n            el.dirty(false);\n            el.z2 += 1;\n        }\n\n        el.__isHover = true;\n    }\n\n    /**\n     * @inner\n     */\n    function doSingleLeaveHover(el) {\n        if (!el.__isHover) {\n            return;\n        }\n\n        var normalStl = el.__normalStl;\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.removeHover(el);\n        }\n        else {\n            // Consider null/undefined value, should use\n            // `setStyle` but not `extendFrom(stl, true)`.\n            normalStl && el.setStyle(normalStl);\n            el.z2 -= 1;\n        }\n\n        el.__isHover = false;\n    }\n\n    /**\n     * @inner\n     */\n    function doEnterHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleEnterHover(child);\n                }\n            })\n            : doSingleEnterHover(el);\n    }\n\n    function doLeaveHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleLeaveHover(child);\n                }\n            })\n            : doSingleLeaveHover(el);\n    }\n\n    /**\n     * @inner\n     */\n    function setElementHoverStl(el, hoverStl) {\n        // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n        // Often used when item group has a label element and it's hoverStyle is different\n        el.__hoverStl = el.hoverStyle || hoverStl || {};\n        el.__hoverStlDirty = true;\n\n        if (el.__isHover) {\n            cacheElementStl(el);\n        }\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOver(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOut(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doLeaveHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function enterEmphasis() {\n        this.__isEmphasis = true;\n        doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function leaveEmphasis() {\n        this.__isEmphasis = false;\n        doLeaveHover(this);\n    }\n\n    /**\n     * Set hover style of element.\n     * This method can be called repeatly without side-effects.\n     * @param {module:zrender/Element} el\n     * @param {Object} [hoverStyle]\n     * @param {Object} [opt]\n     * @param {boolean} [opt.hoverSilentOnTouch=false]\n     *        In touch device, mouseover event will be trigger on touchstart event\n     *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n     *        conviniently use hoverStyle when tap on touch screen without additional\n     *        code for compatibility.\n     *        But if the chart/component has select feature, which usually also use\n     *        hoverStyle, there might be conflict between 'select-highlight' and\n     *        'hover-highlight' especially when roam is enabled (see geo for example).\n     *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n     *        on touch device.\n     */\n    graphic.setHoverStyle = function (el, hoverStyle, opt) {\n        el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    setElementHoverStl(child, hoverStyle);\n                }\n            })\n            : setElementHoverStl(el, hoverStyle);\n\n        // Duplicated function will be auto-ignored, see Eventful.js.\n        el.on('mouseover', onElementMouseOver)\n          .on('mouseout', onElementMouseOut);\n\n        // Emphasis, normal can be triggered manually\n        el.on('emphasis', enterEmphasis)\n          .on('normal', leaveEmphasis);\n    };\n\n    /**\n     * @param {Object|module:zrender/graphic/Style} normalStyle\n     * @param {Object} emphasisStyle\n     * @param {module:echarts/model/Model} normalModel\n     * @param {module:echarts/model/Model} emphasisModel\n     * @param {Object} opt Check `opt` of `setTextStyleCommon` to find other props.\n     * @param {Object} [opt.defaultText]\n     * @param {module:echarts/model/Model} [opt.labelFetcher] Fetch text by\n     *      `opt.labelFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n     * @param {module:echarts/model/Model} [opt.labelDataIndex] Fetch text by\n     *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n     * @param {module:echarts/model/Model} [opt.labelDimIndex] Fetch text by\n     *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n     * @param {Object} [normalSpecified]\n     * @param {Object} [emphasisSpecified]\n     */\n    graphic.setLabelStyle = function (\n        normalStyle, emphasisStyle,\n        normalModel, emphasisModel,\n        opt,\n        normalSpecified, emphasisSpecified\n    ) {\n        opt = opt || EMPTY_OBJ;\n        var labelFetcher = opt.labelFetcher;\n        var labelDataIndex = opt.labelDataIndex;\n        var labelDimIndex = opt.labelDimIndex;\n\n        // This scenario, `label.normal.show = true; label.emphasis.show = false`,\n        // is not supported util someone requests.\n\n        var showNormal = normalModel.getShallow('show');\n        var showEmphasis = emphasisModel.getShallow('show');\n\n        // Consider performance, only fetch label when necessary.\n        // If `normal.show` is `false` and `emphasis.show` is `true` and `emphasis.formatter` is not set,\n        // label should be displayed, where text is fetched by `normal.formatter` or `opt.defaultText`.\n        var baseText = (showNormal || showEmphasis)\n            ? zrUtil.retrieve2(\n                labelFetcher\n                    ? labelFetcher.getFormattedLabel(labelDataIndex, 'normal', null, labelDimIndex)\n                    : null,\n                opt.defaultText\n            )\n            : null;\n        var normalStyleText = showNormal ? baseText : null;\n        var emphasisStyleText = showEmphasis\n            ? zrUtil.retrieve2(\n                labelFetcher\n                    ? labelFetcher.getFormattedLabel(labelDataIndex, 'emphasis', null, labelDimIndex)\n                    : null,\n                baseText\n            )\n            : null;\n\n        // Optimize: If style.text is null, text will not be drawn.\n        if (normalStyleText != null || emphasisStyleText != null) {\n            // Always set `textStyle` even if `normalStyle.text` is null, because default\n            // values have to be set on `normalStyle`.\n            // If we set default values on `emphasisStyle`, consider case:\n            // Firstly, `setOption(... label: {normal: {text: null}, emphasis: {show: true}} ...);`\n            // Secondly, `setOption(... label: {noraml: {show: true, text: 'abc', color: 'red'} ...);`\n            // Then the 'red' will not work on emphasis.\n            setTextStyle(normalStyle, normalModel, normalSpecified, opt);\n            setTextStyle(emphasisStyle, emphasisModel, emphasisSpecified, opt, true);\n        }\n\n        normalStyle.text = normalStyleText;\n        emphasisStyle.text = emphasisStyleText;\n    };\n\n    /**\n     * Set basic textStyle properties.\n     * @param {Object|module:zrender/graphic/Style} textStyle\n     * @param {module:echarts/model/Model} model\n     * @param {Object} [specifiedTextStyle] Can be overrided by settings in model.\n     * @param {Object} [opt] See `opt` of `setTextStyleCommon`.\n     * @param {boolean} [isEmphasis]\n     */\n    var setTextStyle = graphic.setTextStyle = function (\n        textStyle, textStyleModel, specifiedTextStyle, opt, isEmphasis\n    ) {\n        setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis);\n        specifiedTextStyle && zrUtil.extend(textStyle, specifiedTextStyle);\n        textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n\n        return textStyle;\n    };\n\n    /**\n     * Set text option in the style.\n     * @deprecated\n     * @param {Object} textStyle\n     * @param {module:echarts/model/Model} labelModel\n     * @param {string|boolean} defaultColor Default text color.\n     *        If set as false, it will be processed as a emphasis style.\n     */\n    graphic.setText = function (textStyle, labelModel, defaultColor) {\n        var opt = {isRectText: true};\n        var isEmphasis;\n\n        if (defaultColor === false) {\n            isEmphasis = true;\n        }\n        else {\n            // Support setting color as 'auto' to get visual color.\n            opt.autoColor = defaultColor;\n        }\n        setTextStyleCommon(textStyle, labelModel, opt, isEmphasis);\n        textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n    };\n\n    /**\n     * {\n     *      disableBox: boolean, Whether diable drawing box of block (outer most).\n     *      isRectText: boolean,\n     *      autoColor: string, specify a color when color is 'auto',\n     *              for textFill, textStroke, textBackgroundColor, and textBorderColor.\n     *              If autoColor specified, it is used as default textFill.\n     *      useInsideStyle:\n     *              `true`: Use inside style (textFill, textStroke, textStrokeWidth)\n     *                  if `textFill` is not specified.\n     *              `false`: Do not use inside style.\n     *              `null/undefined`: use inside style if `isRectText` is true and\n     *                  `textFill` is not specified and textPosition contains `'inside'`.\n     *      forceRich: boolean\n     * }\n     */\n    function setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis) {\n        // Consider there will be abnormal when merge hover style to normal style if given default value.\n        opt = opt || EMPTY_OBJ;\n\n        if (opt.isRectText) {\n            var textPosition = textStyleModel.getShallow('position')\n                || (isEmphasis ? null : 'inside');\n            // 'outside' is not a valid zr textPostion value, but used\n            // in bar series, and magric type should be considered.\n            textPosition === 'outside' && (textPosition = 'top');\n            textStyle.textPosition = textPosition;\n            textStyle.textOffset = textStyleModel.getShallow('offset');\n            var labelRotate = textStyleModel.getShallow('rotate');\n            labelRotate != null && (labelRotate *= Math.PI / 180);\n            textStyle.textRotation = labelRotate;\n            textStyle.textDistance = zrUtil.retrieve2(\n                textStyleModel.getShallow('distance'), isEmphasis ? null : 5\n            );\n        }\n\n        var ecModel = textStyleModel.ecModel;\n        var globalTextStyle = ecModel && ecModel.option.textStyle;\n\n        // Consider case:\n        // {\n        //     data: [{\n        //         value: 12,\n        //         label: {\n        //             normal: {\n        //                 rich: {\n        //                     // no 'a' here but using parent 'a'.\n        //                 }\n        //             }\n        //         }\n        //     }],\n        //     rich: {\n        //         a: { ... }\n        //     }\n        // }\n        var richItemNames = getRichItemNames(textStyleModel);\n        var richResult;\n        if (richItemNames) {\n            richResult = {};\n            for (var name in richItemNames) {\n                if (richItemNames.hasOwnProperty(name)) {\n                    // Cascade is supported in rich.\n                    var richTextStyle = textStyleModel.getModel(['rich', name]);\n                    // In rich, never `disableBox`.\n                    setTokenTextStyle(richResult[name] = {}, richTextStyle, globalTextStyle, opt, isEmphasis);\n                }\n            }\n        }\n        textStyle.rich = richResult;\n\n        setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, true);\n\n        if (opt.forceRich && !opt.textStyle) {\n            opt.textStyle = {};\n        }\n\n        return textStyle;\n    }\n\n    // Consider case:\n    // {\n    //     data: [{\n    //         value: 12,\n    //         label: {\n    //             normal: {\n    //                 rich: {\n    //                     // no 'a' here but using parent 'a'.\n    //                 }\n    //             }\n    //         }\n    //     }],\n    //     rich: {\n    //         a: { ... }\n    //     }\n    // }\n    function getRichItemNames(textStyleModel) {\n        // Use object to remove duplicated names.\n        var richItemNameMap;\n        while (textStyleModel && textStyleModel !== textStyleModel.ecModel) {\n            var rich = (textStyleModel.option || EMPTY_OBJ).rich;\n            if (rich) {\n                richItemNameMap = richItemNameMap || {};\n                for (var name in rich) {\n                    if (rich.hasOwnProperty(name)) {\n                        richItemNameMap[name] = 1;\n                    }\n                }\n            }\n            textStyleModel = textStyleModel.parentModel;\n        }\n        return richItemNameMap;\n    }\n\n    function setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, isBlock) {\n        // In merge mode, default value should not be given.\n        globalTextStyle = !isEmphasis && globalTextStyle || EMPTY_OBJ;\n\n        textStyle.textFill = getAutoColor(textStyleModel.getShallow('color'), opt)\n            || globalTextStyle.color;\n        textStyle.textStroke = getAutoColor(textStyleModel.getShallow('textBorderColor'), opt)\n            || globalTextStyle.textBorderColor;\n        textStyle.textStrokeWidth = zrUtil.retrieve2(\n            textStyleModel.getShallow('textBorderWidth'),\n            globalTextStyle.textBorderWidth\n        );\n\n        if (!isEmphasis) {\n            if (isBlock) {\n                // Always set `insideRollback`, for clearing previous.\n                var originalTextPosition = textStyle.textPosition;\n                textStyle.insideRollback = applyInsideStyle(textStyle, originalTextPosition, opt);\n                // Save original textPosition, because style.textPosition will be repalced by\n                // real location (like [10, 30]) in zrender.\n                textStyle.insideOriginalTextPosition = originalTextPosition;\n                textStyle.insideRollbackOpt = opt;\n            }\n\n            // Set default finally.\n            if (textStyle.textFill == null) {\n                textStyle.textFill = opt.autoColor;\n            }\n        }\n\n        // Do not use `getFont` here, because merge should be supported, where\n        // part of these properties may be changed in emphasis style, and the\n        // others should remain their original value got from normal style.\n        textStyle.fontStyle = textStyleModel.getShallow('fontStyle') || globalTextStyle.fontStyle;\n        textStyle.fontWeight = textStyleModel.getShallow('fontWeight') || globalTextStyle.fontWeight;\n        textStyle.fontSize = textStyleModel.getShallow('fontSize') || globalTextStyle.fontSize;\n        textStyle.fontFamily = textStyleModel.getShallow('fontFamily') || globalTextStyle.fontFamily;\n\n        textStyle.textAlign = textStyleModel.getShallow('align');\n        textStyle.textVerticalAlign = textStyleModel.getShallow('verticalAlign')\n            || textStyleModel.getShallow('baseline');\n\n        textStyle.textLineHeight = textStyleModel.getShallow('lineHeight');\n        textStyle.textWidth = textStyleModel.getShallow('width');\n        textStyle.textHeight = textStyleModel.getShallow('height');\n        textStyle.textTag = textStyleModel.getShallow('tag');\n\n        if (!isBlock || !opt.disableBox) {\n            textStyle.textBackgroundColor = getAutoColor(textStyleModel.getShallow('backgroundColor'), opt);\n            textStyle.textPadding = textStyleModel.getShallow('padding');\n            textStyle.textBorderColor = getAutoColor(textStyleModel.getShallow('borderColor'), opt);\n            textStyle.textBorderWidth = textStyleModel.getShallow('borderWidth');\n            textStyle.textBorderRadius = textStyleModel.getShallow('borderRadius');\n\n            textStyle.textBoxShadowColor = textStyleModel.getShallow('shadowColor');\n            textStyle.textBoxShadowBlur = textStyleModel.getShallow('shadowBlur');\n            textStyle.textBoxShadowOffsetX = textStyleModel.getShallow('shadowOffsetX');\n            textStyle.textBoxShadowOffsetY = textStyleModel.getShallow('shadowOffsetY');\n        }\n\n        textStyle.textShadowColor = textStyleModel.getShallow('textShadowColor')\n            || globalTextStyle.textShadowColor;\n        textStyle.textShadowBlur = textStyleModel.getShallow('textShadowBlur')\n            || globalTextStyle.textShadowBlur;\n        textStyle.textShadowOffsetX = textStyleModel.getShallow('textShadowOffsetX')\n            || globalTextStyle.textShadowOffsetX;\n        textStyle.textShadowOffsetY = textStyleModel.getShallow('textShadowOffsetY')\n            || globalTextStyle.textShadowOffsetY;\n    }\n\n    function getAutoColor(color, opt) {\n        return color !== 'auto' ? color : (opt && opt.autoColor) ? opt.autoColor : null;\n    }\n\n    function applyInsideStyle(textStyle, textPosition, opt) {\n        var useInsideStyle = opt.useInsideStyle;\n        var insideRollback;\n\n        if (textStyle.textFill == null\n            && useInsideStyle !== false\n            && (useInsideStyle === true\n                || (opt.isRectText\n                    && textPosition\n                    // textPosition can be [10, 30]\n                    && typeof textPosition === 'string'\n                    && textPosition.indexOf('inside') >= 0\n                )\n            )\n        ) {\n            insideRollback = {\n                textFill: null,\n                textStroke: textStyle.textStroke,\n                textStrokeWidth: textStyle.textStrokeWidth\n            };\n            textStyle.textFill = '#fff';\n            // Consider text with #fff overflow its container.\n            if (textStyle.textStroke == null) {\n                textStyle.textStroke = opt.autoColor;\n                textStyle.textStrokeWidth == null && (textStyle.textStrokeWidth = 2);\n            }\n        }\n\n        return insideRollback;\n    }\n\n    function rollbackInsideStyle(style) {\n        var insideRollback = style.insideRollback;\n        if (insideRollback) {\n            style.textFill = insideRollback.textFill;\n            style.textStroke = insideRollback.textStroke;\n            style.textStrokeWidth = insideRollback.textStrokeWidth;\n        }\n    }\n\n    graphic.getFont = function (opt, ecModel) {\n        // ecModel or default text style model.\n        var gTextStyleModel = ecModel || ecModel.getModel('textStyle');\n        return [\n            // FIXME in node-canvas fontWeight is before fontStyle\n            opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '',\n            opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '',\n            (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px',\n            opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'\n        ].join(' ');\n    };\n\n    function animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n        if (typeof dataIndex === 'function') {\n            cb = dataIndex;\n            dataIndex = null;\n        }\n        // Do not check 'animation' property directly here. Consider this case:\n        // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n        // but its parent model (`seriesModel`) does.\n        var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n        if (animationEnabled) {\n            var postfix = isUpdate ? 'Update' : '';\n            var duration = animatableModel.getShallow('animationDuration' + postfix);\n            var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n            var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n            if (typeof animationDelay === 'function') {\n                animationDelay = animationDelay(\n                    dataIndex,\n                    animatableModel.getAnimationDelayParams\n                        ? animatableModel.getAnimationDelayParams(el, dataIndex)\n                        : null\n                );\n            }\n            if (typeof duration === 'function') {\n                duration = duration(dataIndex);\n            }\n\n            duration > 0\n                ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb, !!cb)\n                : (el.stopAnimation(), el.attr(props), cb && cb());\n        }\n        else {\n            el.stopAnimation();\n            el.attr(props);\n            cb && cb();\n        }\n    }\n\n    /**\n     * Update graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} [cb]\n     * @example\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n     *     // Or\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, function () { console.log('Animation done!'); });\n     */\n    graphic.updateProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Init graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} cb\n     */\n    graphic.initProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Get transform matrix of target (param target),\n     * in coordinate of its ancestor (param ancestor)\n     *\n     * @param {module:zrender/mixin/Transformable} target\n     * @param {module:zrender/mixin/Transformable} [ancestor]\n     */\n    graphic.getTransform = function (target, ancestor) {\n        var mat = matrix.identity([]);\n\n        while (target && target !== ancestor) {\n            matrix.mul(mat, target.getLocalTransform(), mat);\n            target = target.parent;\n        }\n\n        return mat;\n    };\n\n    /**\n     * Apply transform to an vertex.\n     * @param {Array.<number>} target [x, y]\n     * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\n     *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n     *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {Array.<number>} [x, y]\n     */\n    graphic.applyTransform = function (target, transform, invert) {\n        if (transform && !zrUtil.isArrayLike(transform)) {\n            transform = Transformable.getLocalTransform(transform);\n        }\n\n        if (invert) {\n            transform = matrix.invert([], transform);\n        }\n        return vector.applyTransform([], target, transform);\n    };\n\n    /**\n     * @param {string} direction 'left' 'right' 'top' 'bottom'\n     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n     */\n    graphic.transformDirection = function (direction, transform, invert) {\n\n        // Pick a base, ensure that transform result will not be (0, 0).\n        var hBase = (transform[4] === 0 || transform[5] === 0 || transform[0] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[0]);\n        var vBase = (transform[4] === 0 || transform[5] === 0 || transform[2] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[2]);\n\n        var vertex = [\n            direction === 'left' ? -hBase : direction === 'right' ? hBase : 0,\n            direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0\n        ];\n\n        vertex = graphic.applyTransform(vertex, transform, invert);\n\n        return Math.abs(vertex[0]) > Math.abs(vertex[1])\n            ? (vertex[0] > 0 ? 'right' : 'left')\n            : (vertex[1] > 0 ? 'bottom' : 'top');\n    };\n\n    /**\n     * Apply group transition animation from g1 to g2.\n     * If no animatableModel, no animation.\n     */\n    graphic.groupTransition = function (g1, g2, animatableModel, cb) {\n        if (!g1 || !g2) {\n            return;\n        }\n\n        function getElMap(g) {\n            var elMap = {};\n            g.traverse(function (el) {\n                if (!el.isGroup && el.anid) {\n                    elMap[el.anid] = el;\n                }\n            });\n            return elMap;\n        }\n        function getAnimatableProps(el) {\n            var obj = {\n                position: vector.clone(el.position),\n                rotation: el.rotation\n            };\n            if (el.shape) {\n                obj.shape = zrUtil.extend({}, el.shape);\n            }\n            return obj;\n        }\n        var elMap1 = getElMap(g1);\n\n        g2.traverse(function (el) {\n            if (!el.isGroup && el.anid) {\n                var oldEl = elMap1[el.anid];\n                if (oldEl) {\n                    var newProp = getAnimatableProps(el);\n                    el.attr(getAnimatableProps(oldEl));\n                    graphic.updateProps(el, newProp, animatableModel, el.dataIndex);\n                }\n                // else {\n                //     if (el.previousProps) {\n                //         graphic.updateProps\n                //     }\n                // }\n            }\n        });\n    };\n\n    /**\n     * @param {Array.<Array.<number>>} points Like: [[23, 44], [53, 66], ...]\n     * @param {Object} rect {x, y, width, height}\n     * @return {Array.<Array.<number>>} A new clipped points.\n     */\n    graphic.clipPointsByRect = function (points, rect) {\n        return zrUtil.map(points, function (point) {\n            var x = point[0];\n            x = mathMax(x, rect.x);\n            x = mathMin(x, rect.x + rect.width);\n            var y = point[1];\n            y = mathMax(y, rect.y);\n            y = mathMin(y, rect.y + rect.height);\n            return [x, y];\n        });\n    };\n\n    /**\n     * @param {Object} targetRect {x, y, width, height}\n     * @param {Object} rect {x, y, width, height}\n     * @return {Object} A new clipped rect. If rect size are negative, return undefined.\n     */\n    graphic.clipRectByRect = function (targetRect, rect) {\n        var x = mathMax(targetRect.x, rect.x);\n        var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\n        var y = mathMax(targetRect.y, rect.y);\n        var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height);\n\n        if (x2 >= x && y2 >= y) {\n            return {\n                x: x,\n                y: y,\n                width: x2 - x,\n                height: y2 - y\n            };\n        }\n    };\n\n    /**\n     * @param {string} iconStr Support 'image://' or 'path://' or direct svg path.\n     * @param {Object} [opt] Properties of `module:zrender/Element`, except `style`.\n     * @param {Object} [rect] {x, y, width, height}\n     * @return {module:zrender/Element} Icon path or image element.\n     */\n    graphic.createIcon = function (iconStr, opt, rect) {\n        opt = zrUtil.extend({rectHover: true}, opt);\n        var style = opt.style = {strokeNoScale: true};\n        rect = rect || {x: -1, y: -1, width: 2, height: 2};\n\n        if (iconStr) {\n            return iconStr.indexOf('image://') === 0\n                ? (\n                    style.image = iconStr.slice(8),\n                    zrUtil.defaults(style, rect),\n                    new graphic.Image(opt)\n                )\n                : (\n                    graphic.makePath(\n                        iconStr.replace('path://', ''),\n                        opt,\n                        rect,\n                        'center'\n                    )\n                );\n        }\n\n    };\n\n    module.exports = graphic;\n\n\n\n/***/ }),\n\n/***/ 973:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 数值处理模块\n * @module echarts/util/number\n */\n\n\n\n    var zrUtil = __webpack_require__(970);\n\n    var number = {};\n\n    var RADIAN_EPSILON = 1e-4;\n\n    function _trim(str) {\n        return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n    }\n\n    /**\n     * Linear mapping a value from domain to range\n     * @memberOf module:echarts/util/number\n     * @param  {(number|Array.<number>)} val\n     * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n     * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n     * @param  {boolean} clamp\n     * @return {(number|Array.<number>}\n     */\n    number.linearMap = function (val, domain, range, clamp) {\n        var subDomain = domain[1] - domain[0];\n        var subRange = range[1] - range[0];\n\n        if (subDomain === 0) {\n            return subRange === 0\n                ? range[0]\n                : (range[0] + range[1]) / 2;\n        }\n\n        // Avoid accuracy problem in edge, such as\n        // 146.39 - 62.83 === 83.55999999999999.\n        // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n        // It is a little verbose for efficiency considering this method\n        // is a hotspot.\n        if (clamp) {\n            if (subDomain > 0) {\n                if (val <= domain[0]) {\n                    return range[0];\n                }\n                else if (val >= domain[1]) {\n                    return range[1];\n                }\n            }\n            else {\n                if (val >= domain[0]) {\n                    return range[0];\n                }\n                else if (val <= domain[1]) {\n                    return range[1];\n                }\n            }\n        }\n        else {\n            if (val === domain[0]) {\n                return range[0];\n            }\n            if (val === domain[1]) {\n                return range[1];\n            }\n        }\n\n        return (val - domain[0]) / subDomain * subRange + range[0];\n    };\n\n    /**\n     * Convert a percent string to absolute number.\n     * Returns NaN if percent is not a valid string or number\n     * @memberOf module:echarts/util/number\n     * @param {string|number} percent\n     * @param {number} all\n     * @return {number}\n     */\n    number.parsePercent = function(percent, all) {\n        switch (percent) {\n            case 'center':\n            case 'middle':\n                percent = '50%';\n                break;\n            case 'left':\n            case 'top':\n                percent = '0%';\n                break;\n            case 'right':\n            case 'bottom':\n                percent = '100%';\n                break;\n        }\n        if (typeof percent === 'string') {\n            if (_trim(percent).match(/%$/)) {\n                return parseFloat(percent) / 100 * all;\n            }\n\n            return parseFloat(percent);\n        }\n\n        return percent == null ? NaN : +percent;\n    };\n\n    /**\n     * (1) Fix rounding error of float numbers.\n     * (2) Support return string to avoid scientific notation like '3.5e-7'.\n     *\n     * @param {number} x\n     * @param {number} [precision]\n     * @param {boolean} [returnStr]\n     * @return {number|string}\n     */\n    number.round = function (x, precision, returnStr) {\n        if (precision == null) {\n            precision = 10;\n        }\n        // Avoid range error\n        precision = Math.min(Math.max(0, precision), 20);\n        x = (+x).toFixed(precision);\n        return returnStr ? x : +x;\n    };\n\n    number.asc = function (arr) {\n        arr.sort(function (a, b) {\n            return a - b;\n        });\n        return arr;\n    };\n\n    /**\n     * Get precision\n     * @param {number} val\n     */\n    number.getPrecision = function (val) {\n        val = +val;\n        if (isNaN(val)) {\n            return 0;\n        }\n        // It is much faster than methods converting number to string as follows\n        //      var tmp = val.toString();\n        //      return tmp.length - 1 - tmp.indexOf('.');\n        // especially when precision is low\n        var e = 1;\n        var count = 0;\n        while (Math.round(val * e) / e !== val) {\n            e *= 10;\n            count++;\n        }\n        return count;\n    };\n\n    /**\n     * @param {string|number} val\n     * @return {number}\n     */\n    number.getPrecisionSafe = function (val) {\n        var str = val.toString();\n\n        // Consider scientific notation: '3.4e-12' '3.4e+12'\n        var eIndex = str.indexOf('e');\n        if (eIndex > 0) {\n            var precision = +str.slice(eIndex + 1);\n            return precision < 0 ? -precision : 0;\n        }\n        else {\n            var dotIndex = str.indexOf('.');\n            return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n        }\n    };\n\n    /**\n     * Minimal dicernible data precisioin according to a single pixel.\n     *\n     * @param {Array.<number>} dataExtent\n     * @param {Array.<number>} pixelExtent\n     * @return {number} precision\n     */\n    number.getPixelPrecision = function (dataExtent, pixelExtent) {\n        var log = Math.log;\n        var LN10 = Math.LN10;\n        var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n        var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10);\n        // toFixed() digits argument must be between 0 and 20.\n        var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n        return !isFinite(precision) ? 20 : precision;\n    };\n\n    /**\n     * Get a data of given precision, assuring the sum of percentages\n     * in valueList is 1.\n     * The largest remainer method is used.\n     * https://en.wikipedia.org/wiki/Largest_remainder_method\n     *\n     * @param {Array.<number>} valueList a list of all data\n     * @param {number} idx index of the data to be processed in valueList\n     * @param {number} precision integer number showing digits of precision\n     * @return {number} percent ranging from 0 to 100\n     */\n    number.getPercentWithPrecision = function (valueList, idx, precision) {\n        if (!valueList[idx]) {\n            return 0;\n        }\n\n        var sum = zrUtil.reduce(valueList, function (acc, val) {\n            return acc + (isNaN(val) ? 0 : val);\n        }, 0);\n        if (sum === 0) {\n            return 0;\n        }\n\n        var digits = Math.pow(10, precision);\n        var votesPerQuota = zrUtil.map(valueList, function (val) {\n            return (isNaN(val) ? 0 : val) / sum * digits * 100;\n        });\n        var targetSeats = digits * 100;\n\n        var seats = zrUtil.map(votesPerQuota, function (votes) {\n            // Assign automatic seats.\n            return Math.floor(votes);\n        });\n        var currentSum = zrUtil.reduce(seats, function (acc, val) {\n            return acc + val;\n        }, 0);\n\n        var remainder = zrUtil.map(votesPerQuota, function (votes, idx) {\n            return votes - seats[idx];\n        });\n\n        // Has remainding votes.\n        while (currentSum < targetSeats) {\n            // Find next largest remainder.\n            var max = Number.NEGATIVE_INFINITY;\n            var maxId = null;\n            for (var i = 0, len = remainder.length; i < len; ++i) {\n                if (remainder[i] > max) {\n                    max = remainder[i];\n                    maxId = i;\n                }\n            }\n\n            // Add a vote to max remainder.\n            ++seats[maxId];\n            remainder[maxId] = 0;\n            ++currentSum;\n        }\n\n        return seats[idx] / digits;\n    };\n\n    // Number.MAX_SAFE_INTEGER, ie do not support.\n    number.MAX_SAFE_INTEGER = 9007199254740991;\n\n    /**\n     * To 0 - 2 * PI, considering negative radian.\n     * @param {number} radian\n     * @return {number}\n     */\n    number.remRadian = function (radian) {\n        var pi2 = Math.PI * 2;\n        return (radian % pi2 + pi2) % pi2;\n    };\n\n    /**\n     * @param {type} radian\n     * @return {boolean}\n     */\n    number.isRadianAroundZero = function (val) {\n        return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n    };\n\n    var TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n    /**\n     * Consider DST, it is incorrect to provide a method `getTimezoneOffset`\n     * without time specified. So this method is removed.\n     *\n     * @return {number} in minutes\n     */\n    // number.getTimezoneOffset = function () {\n    //     return (new Date()).getTimezoneOffset();\n    // };\n\n    /**\n     * @param {string|Date|number} value These values can be accepted:\n     *   + An instance of Date, represent a time in its own time zone.\n     *   + Or string in a subset of ISO 8601, only including:\n     *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n     *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n     *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n     *     all of which will be treated as local time if time zone is not specified\n     *     (see <https://momentjs.com/>).\n     *   + Or other string format, including (all of which will be treated as loacal time):\n     *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n     *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n     *   + a timestamp, which represent a time in UTC.\n     * @return {Date} date\n     */\n    number.parseDate = function (value) {\n        if (value instanceof Date) {\n            return value;\n        }\n        else if (typeof value === 'string') {\n            // Different browsers parse date in different way, so we parse it manually.\n            // Some other issues:\n            // new Date('1970-01-01') is UTC,\n            // new Date('1970/01/01') and new Date('1970-1-01') is local.\n            // See issue #3623\n            var match = TIME_REG.exec(value);\n\n            if (!match) {\n                // return Invalid Date.\n                return new Date(NaN);\n            }\n\n            // Use local time when no timezone offset specifed.\n            if (!match[8]) {\n                // match[n] can only be string or undefined.\n                // But take care of '12' + 1 => '121'.\n                return new Date(\n                    +match[1],\n                    +(match[2] || 1) - 1,\n                    +match[3] || 1,\n                    +match[4] || 0,\n                    +(match[5] || 0),\n                    +match[6] || 0,\n                    +match[7] || 0\n                );\n            }\n            // Timezoneoffset of Javascript Date has considered DST (Daylight Saving Time,\n            // https://tc39.github.io/ecma262/#sec-daylight-saving-time-adjustment).\n            // For example, system timezone is set as \"Time Zone: America/Toronto\",\n            // then these code will get different result:\n            // `new Date(1478411999999).getTimezoneOffset();  // get 240`\n            // `new Date(1478412000000).getTimezoneOffset();  // get 300`\n            // So we should not use `new Date`, but use `Date.UTC`.\n            else {\n                var hour = +match[4] || 0;\n                if (match[8].toUpperCase() !== 'Z') {\n                    hour -= match[8].slice(0, 3);\n                }\n                return new Date(Date.UTC(\n                    +match[1],\n                    +(match[2] || 1) - 1,\n                    +match[3] || 1,\n                    hour,\n                    +(match[5] || 0),\n                    +match[6] || 0,\n                    +match[7] || 0\n                ));\n            }\n        }\n        else if (value == null) {\n            return new Date(NaN);\n        }\n\n        return new Date(Math.round(value));\n    };\n\n    /**\n     * Quantity of a number. e.g. 0.1, 1, 10, 100\n     *\n     * @param  {number} val\n     * @return {number}\n     */\n    number.quantity = function (val) {\n        return Math.pow(10, quantityExponent(val));\n    };\n\n    function quantityExponent(val) {\n        return Math.floor(Math.log(val) / Math.LN10);\n    }\n\n    /**\n     * find a “nice” number approximately equal to x. Round the number if round = true,\n     * take ceiling if round = false. The primary observation is that the “nicest”\n     * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n     *\n     * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n     *\n     * @param  {number} val Non-negative value.\n     * @param  {boolean} round\n     * @return {number}\n     */\n    number.nice = function (val, round) {\n        var exponent = quantityExponent(val);\n        var exp10 = Math.pow(10, exponent);\n        var f = val / exp10; // 1 <= f < 10\n        var nf;\n        if (round) {\n            if (f < 1.5) { nf = 1; }\n            else if (f < 2.5) { nf = 2; }\n            else if (f < 4) { nf = 3; }\n            else if (f < 7) { nf = 5; }\n            else { nf = 10; }\n        }\n        else {\n            if (f < 1) { nf = 1; }\n            else if (f < 2) { nf = 2; }\n            else if (f < 3) { nf = 3; }\n            else if (f < 5) { nf = 5; }\n            else { nf = 10; }\n        }\n        val = nf * exp10;\n\n        // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n        // 20 is the uppper bound of toFixed.\n        return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n    };\n\n    /**\n     * Order intervals asc, and split them when overlap.\n     * expect(numberUtil.reformIntervals([\n     *     {interval: [18, 62], close: [1, 1]},\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [1, 1]},\n     *     {interval: [62, 150], close: [1, 1]},\n     *     {interval: [106, 150], close: [1, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ])).toEqual([\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [0, 1]},\n     *     {interval: [18, 62], close: [0, 1]},\n     *     {interval: [62, 150], close: [0, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ]);\n     * @param {Array.<Object>} list, where `close` mean open or close\n     *        of the interval, and Infinity can be used.\n     * @return {Array.<Object>} The origin list, which has been reformed.\n     */\n    number.reformIntervals = function (list) {\n        list.sort(function (a, b) {\n            return littleThan(a, b, 0) ? -1 : 1;\n        });\n\n        var curr = -Infinity;\n        var currClose = 1;\n        for (var i = 0; i < list.length;) {\n            var interval = list[i].interval;\n            var close = list[i].close;\n\n            for (var lg = 0; lg < 2; lg++) {\n                if (interval[lg] <= curr) {\n                    interval[lg] = curr;\n                    close[lg] = !lg ? 1 - currClose : 1;\n                }\n                curr = interval[lg];\n                currClose = close[lg];\n            }\n\n            if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n                list.splice(i, 1);\n            }\n            else {\n                i++;\n            }\n        }\n\n        return list;\n\n        function littleThan(a, b, lg) {\n            return a.interval[lg] < b.interval[lg]\n                || (\n                    a.interval[lg] === b.interval[lg]\n                    && (\n                        (a.close[lg] - b.close[lg] === (!lg ? 1 : -1))\n                        || (!lg && littleThan(a, b, 1))\n                    )\n                );\n        }\n    };\n\n    /**\n     * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n     * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n     * subtraction forces infinities to NaN\n     *\n     * @param {*} v\n     * @return {boolean}\n     */\n    number.isNumeric = function (v) {\n        return v - parseFloat(v) >= 0;\n    };\n\n    module.exports = number;\n\n\n/***/ }),\n\n/***/ 974:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var formatUtil = __webpack_require__(976);\n    var nubmerUtil = __webpack_require__(973);\n    var Model = __webpack_require__(978);\n    var zrUtil = __webpack_require__(970);\n    var each = zrUtil.each;\n    var isObject = zrUtil.isObject;\n\n    var modelUtil = {};\n\n    /**\n     * If value is not array, then translate it to array.\n     * @param  {*} value\n     * @return {Array} [value] or value\n     */\n    modelUtil.normalizeToArray = function (value) {\n        return value instanceof Array\n            ? value\n            : value == null\n            ? []\n            : [value];\n    };\n\n    /**\n     * Sync default option between normal and emphasis like `position` and `show`\n     * In case some one will write code like\n     *     label: {\n     *         normal: {\n     *             show: false,\n     *             position: 'outside',\n     *             fontSize: 18\n     *         },\n     *         emphasis: {\n     *             show: true\n     *         }\n     *     }\n     * @param {Object} opt\n     * @param {Array.<string>} subOpts\n     */\n     modelUtil.defaultEmphasis = function (opt, subOpts) {\n        if (opt) {\n            var emphasisOpt = opt.emphasis = opt.emphasis || {};\n            var normalOpt = opt.normal = opt.normal || {};\n\n            // Default emphasis option from normal\n            for (var i = 0, len = subOpts.length; i < len; i++) {\n                var subOptName = subOpts[i];\n                if (!emphasisOpt.hasOwnProperty(subOptName)\n                    && normalOpt.hasOwnProperty(subOptName)\n                ) {\n                    emphasisOpt[subOptName] = normalOpt[subOptName];\n                }\n            }\n        }\n    };\n\n    modelUtil.TEXT_STYLE_OPTIONS = [\n        'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\n        'rich', 'tag', 'color', 'textBorderColor', 'textBorderWidth',\n        'width', 'height', 'lineHeight', 'align', 'verticalAlign', 'baseline',\n        'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY',\n        'textShadowColor', 'textShadowBlur', 'textShadowOffsetX', 'textShadowOffsetY',\n        'backgroundColor', 'borderColor', 'borderWidth', 'borderRadius', 'padding'\n    ];\n\n    // modelUtil.LABEL_OPTIONS = modelUtil.TEXT_STYLE_OPTIONS.concat([\n    //     'position', 'offset', 'rotate', 'origin', 'show', 'distance', 'formatter',\n    //     'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\n    //     // FIXME: deprecated, check and remove it.\n    //     'textStyle'\n    // ]);\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method retieves value from data.\n     * @param {string|number|Date|Array|Object} dataItem\n     * @return {number|string|Date|Array.<number|string|Date>}\n     */\n    modelUtil.getDataItemValue = function (dataItem) {\n        // Performance sensitive.\n        return dataItem && (dataItem.value == null ? dataItem : dataItem.value);\n    };\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method determine if dataItem has extra option besides value\n     * @param {string|number|Date|Array|Object} dataItem\n     */\n    modelUtil.isDataItemOption = function (dataItem) {\n        return isObject(dataItem)\n            && !(dataItem instanceof Array);\n            // // markLine data can be array\n            // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n    };\n\n    /**\n     * This helper method convert value in data.\n     * @param {string|number|Date} value\n     * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n     */\n    modelUtil.converDataValue = function (value, dimInfo) {\n        // Performance sensitive.\n        var dimType = dimInfo && dimInfo.type;\n        if (dimType === 'ordinal') {\n            return value;\n        }\n\n        if (dimType === 'time'\n            // spead up when using timestamp\n            && typeof value !== 'number'\n            && value != null\n            && value !== '-'\n        ) {\n            value = +nubmerUtil.parseDate(value);\n        }\n\n        // dimType defaults 'number'.\n        // If dimType is not ordinal and value is null or undefined or NaN or '-',\n        // parse to NaN.\n        return (value == null || value === '')\n            ? NaN : +value; // If string (like '-'), using '+' parse to NaN\n    };\n\n    /**\n     * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.\n     * @param {module:echarts/data/List} data\n     * @param {Object} opt\n     * @param {string} [opt.seriesIndex]\n     * @param {Object} [opt.name]\n     * @param {Object} [opt.mainType]\n     * @param {Object} [opt.subType]\n     */\n    modelUtil.createDataFormatModel = function (data, opt) {\n        var model = new Model();\n        zrUtil.mixin(model, modelUtil.dataFormatMixin);\n        model.seriesIndex = opt.seriesIndex;\n        model.name = opt.name || '';\n        model.mainType = opt.mainType;\n        model.subType = opt.subType;\n\n        model.getData = function () {\n            return data;\n        };\n        return model;\n    };\n\n    // PENDING A little ugly\n    modelUtil.dataFormatMixin = {\n        /**\n         * Get params for formatter\n         * @param {number} dataIndex\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getDataParams: function (dataIndex, dataType) {\n            var data = this.getData(dataType);\n            var rawValue = this.getRawValue(dataIndex, dataType);\n            var rawDataIndex = data.getRawIndex(dataIndex);\n            var name = data.getName(dataIndex, true);\n            var itemOpt = data.getRawDataItem(dataIndex);\n            var color = data.getItemVisual(dataIndex, 'color');\n\n            return {\n                componentType: this.mainType,\n                componentSubType: this.subType,\n                seriesType: this.mainType === 'series' ? this.subType : null,\n                seriesIndex: this.seriesIndex,\n                seriesId: this.id,\n                seriesName: this.name,\n                name: name,\n                dataIndex: rawDataIndex,\n                data: itemOpt,\n                dataType: dataType,\n                value: rawValue,\n                color: color,\n                marker: formatUtil.getTooltipMarker(color),\n\n                // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n                $vars: ['seriesName', 'name', 'value']\n            };\n        },\n\n        /**\n         * Format label\n         * @param {number} dataIndex\n         * @param {string} [status='normal'] 'normal' or 'emphasis'\n         * @param {string} [dataType]\n         * @param {number} [dimIndex]\n         * @param {string} [labelProp='label']\n         * @return {string}\n         */\n        getFormattedLabel: function (dataIndex, status, dataType, dimIndex, labelProp) {\n            status = status || 'normal';\n            var data = this.getData(dataType);\n            var itemModel = data.getItemModel(dataIndex);\n\n            var params = this.getDataParams(dataIndex, dataType);\n            if (dimIndex != null && (params.value instanceof Array)) {\n                params.value = params.value[dimIndex];\n            }\n\n            var formatter = itemModel.get([labelProp || 'label', status, 'formatter']);\n\n            if (typeof formatter === 'function') {\n                params.status = status;\n                return formatter(params);\n            }\n            else if (typeof formatter === 'string') {\n                return formatUtil.formatTpl(formatter, params);\n            }\n        },\n\n        /**\n         * Get raw value in option\n         * @param {number} idx\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getRawValue: function (idx, dataType) {\n            var data = this.getData(dataType);\n            var dataItem = data.getRawDataItem(idx);\n            if (dataItem != null) {\n                return (isObject(dataItem) && !(dataItem instanceof Array))\n                    ? dataItem.value : dataItem;\n            }\n        },\n\n        /**\n         * Should be implemented.\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         * @return {string} tooltip string\n         */\n        formatTooltip: zrUtil.noop\n    };\n\n    /**\n     * Mapping to exists for merge.\n     *\n     * @public\n     * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n     * @param {Object|Array.<Object>} newCptOptions\n     * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          index of which is the same as exists.\n     */\n    modelUtil.mappingToExists = function (exists, newCptOptions) {\n        // Mapping by the order by original option (but not order of\n        // new option) in merge mode. Because we should ensure\n        // some specified index (like xAxisIndex) is consistent with\n        // original option, which is easy to understand, espatially in\n        // media query. And in most case, merge option is used to\n        // update partial option but not be expected to change order.\n        newCptOptions = (newCptOptions || []).slice();\n\n        var result = zrUtil.map(exists || [], function (obj, index) {\n            return {exist: obj};\n        });\n\n        // Mapping by id or name if specified.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            // id has highest priority.\n            for (var i = 0; i < result.length; i++) {\n                if (!result[i].option // Consider name: two map to one.\n                    && cptOption.id != null\n                    && result[i].exist.id === cptOption.id + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n\n            for (var i = 0; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option // Consider name: two map to one.\n                    // Can not match when both ids exist but different.\n                    && (exist.id == null || cptOption.id == null)\n                    && cptOption.name != null\n                    && !modelUtil.isIdInner(cptOption)\n                    && !modelUtil.isIdInner(exist)\n                    && exist.name === cptOption.name + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n        });\n\n        // Otherwise mapping by index.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            var i = 0;\n            for (; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option\n                    // Existing model that already has id should be able to\n                    // mapped to (because after mapping performed model may\n                    // be assigned with a id, whish should not affect next\n                    // mapping), except those has inner id.\n                    && !modelUtil.isIdInner(exist)\n                    // Caution:\n                    // Do not overwrite id. But name can be overwritten,\n                    // because axis use name as 'show label text'.\n                    // 'exist' always has id and name and we dont\n                    // need to check it.\n                    && cptOption.id == null\n                ) {\n                    result[i].option = cptOption;\n                    break;\n                }\n            }\n\n            if (i >= result.length) {\n                result.push({option: cptOption});\n            }\n        });\n\n        return result;\n    };\n\n    /**\n     * Make id and name for mapping result (result of mappingToExists)\n     * into `keyInfo` field.\n     *\n     * @public\n     * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          which order is the same as exists.\n     * @return {Array.<Object>} The input.\n     */\n    modelUtil.makeIdAndName = function (mapResult) {\n        // We use this id to hash component models and view instances\n        // in echarts. id can be specified by user, or auto generated.\n\n        // The id generation rule ensures new view instance are able\n        // to mapped to old instance when setOption are called in\n        // no-merge mode. So we generate model id by name and plus\n        // type in view id.\n\n        // name can be duplicated among components, which is convenient\n        // to specify multi components (like series) by one name.\n\n        // Ensure that each id is distinct.\n        var idMap = zrUtil.createHashMap();\n\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            existCpt && idMap.set(existCpt.id, item);\n        });\n\n        each(mapResult, function (item, index) {\n            var opt = item.option;\n\n            zrUtil.assert(\n                !opt || opt.id == null || !idMap.get(opt.id) || idMap.get(opt.id) === item,\n                'id duplicates: ' + (opt && opt.id)\n            );\n\n            opt && opt.id != null && idMap.set(opt.id, item);\n            !item.keyInfo && (item.keyInfo = {});\n        });\n\n        // Make name and id.\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            var opt = item.option;\n            var keyInfo = item.keyInfo;\n\n            if (!isObject(opt)) {\n                return;\n            }\n\n            // name can be overwitten. Consider case: axis.name = '20km'.\n            // But id generated by name will not be changed, which affect\n            // only in that case: setOption with 'not merge mode' and view\n            // instance will be recreated, which can be accepted.\n            keyInfo.name = opt.name != null\n                ? opt.name + ''\n                : existCpt\n                ? existCpt.name\n                : '\\0-'; // name may be displayed on screen, so use '-'.\n\n            if (existCpt) {\n                keyInfo.id = existCpt.id;\n            }\n            else if (opt.id != null) {\n                keyInfo.id = opt.id + '';\n            }\n            else {\n                // Consider this situatoin:\n                //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n                //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n                // Series with the same name between optionA and optionB\n                // should be mapped.\n                var idNum = 0;\n                do {\n                    keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n                }\n                while (idMap.get(keyInfo.id));\n            }\n\n            idMap.set(keyInfo.id, item);\n        });\n    };\n\n    /**\n     * @public\n     * @param {Object} cptOption\n     * @return {boolean}\n     */\n    modelUtil.isIdInner = function (cptOption) {\n        return isObject(cptOption)\n            && cptOption.id\n            && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n    };\n\n    /**\n     * A helper for removing duplicate items between batchA and batchB,\n     * and in themselves, and categorize by series.\n     *\n     * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n     */\n    modelUtil.compressBatches = function (batchA, batchB) {\n        var mapA = {};\n        var mapB = {};\n\n        makeMap(batchA || [], mapA);\n        makeMap(batchB || [], mapB, mapA);\n\n        return [mapToArray(mapA), mapToArray(mapB)];\n\n        function makeMap(sourceBatch, map, otherMap) {\n            for (var i = 0, len = sourceBatch.length; i < len; i++) {\n                var seriesId = sourceBatch[i].seriesId;\n                var dataIndices = modelUtil.normalizeToArray(sourceBatch[i].dataIndex);\n                var otherDataIndices = otherMap && otherMap[seriesId];\n\n                for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n                    var dataIndex = dataIndices[j];\n\n                    if (otherDataIndices && otherDataIndices[dataIndex]) {\n                        otherDataIndices[dataIndex] = null;\n                    }\n                    else {\n                        (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n                    }\n                }\n            }\n        }\n\n        function mapToArray(map, isData) {\n            var result = [];\n            for (var i in map) {\n                if (map.hasOwnProperty(i) && map[i] != null) {\n                    if (isData) {\n                        result.push(+i);\n                    }\n                    else {\n                        var dataIndices = mapToArray(map[i], true);\n                        dataIndices.length && result.push({seriesId: i, dataIndex: dataIndices});\n                    }\n                }\n            }\n            return result;\n        }\n    };\n\n    /**\n     * @param {module:echarts/data/List} data\n     * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n     *                         each of which can be Array or primary type.\n     * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n     */\n    modelUtil.queryDataIndex = function (data, payload) {\n        if (payload.dataIndexInside != null) {\n            return payload.dataIndexInside;\n        }\n        else if (payload.dataIndex != null) {\n            return zrUtil.isArray(payload.dataIndex)\n                ? zrUtil.map(payload.dataIndex, function (value) {\n                    return data.indexOfRawIndex(value);\n                })\n                : data.indexOfRawIndex(payload.dataIndex);\n        }\n        else if (payload.name != null) {\n            return zrUtil.isArray(payload.name)\n                ? zrUtil.map(payload.name, function (value) {\n                    return data.indexOfName(value);\n                })\n                : data.indexOfName(payload.name);\n        }\n    };\n\n    /**\n     * Enable property storage to any host object.\n     * Notice: Serialization is not supported.\n     *\n     * For example:\n     * var get = modelUitl.makeGetter();\n     *\n     * function some(hostObj) {\n     *      get(hostObj)._someProperty = 1212;\n     *      ...\n     * }\n     *\n     * @return {Function}\n     */\n    modelUtil.makeGetter = (function () {\n        var index = 0;\n        return function () {\n            var key = '\\0__ec_prop_getter_' + index++;\n            return function (hostObj) {\n                return hostObj[key] || (hostObj[key] = {});\n            };\n        };\n    })();\n\n    /**\n     * @param {module:echarts/model/Global} ecModel\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex, seriesId, seriesName,\n     *            geoIndex, geoId, geoName,\n     *            bmapIndex, bmapId, bmapName,\n     *            xAxisIndex, xAxisId, xAxisName,\n     *            yAxisIndex, yAxisId, yAxisName,\n     *            gridIndex, gridId, gridName,\n     *            ... (can be extended)\n     *        }\n     *        Each properties can be number|string|Array.<number>|Array.<string>\n     *        For example, a finder could be\n     *        {\n     *            seriesIndex: 3,\n     *            geoId: ['aa', 'cc'],\n     *            gridName: ['xx', 'rr']\n     *        }\n     *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n     *        If nothing or null/undefined specified, return nothing.\n     * @param {Object} [opt]\n     * @param {string} [opt.defaultMainType]\n     * @param {Array.<string>} [opt.includeMainTypes]\n     * @return {Object} result like:\n     *        {\n     *            seriesModels: [seriesModel1, seriesModel2],\n     *            seriesModel: seriesModel1, // The first model\n     *            geoModels: [geoModel1, geoModel2],\n     *            geoModel: geoModel1, // The first model\n     *            ...\n     *        }\n     */\n    modelUtil.parseFinder = function (ecModel, finder, opt) {\n        if (zrUtil.isString(finder)) {\n            var obj = {};\n            obj[finder + 'Index'] = 0;\n            finder = obj;\n        }\n\n        var defaultMainType = opt && opt.defaultMainType;\n        if (defaultMainType\n            && !has(finder, defaultMainType + 'Index')\n            && !has(finder, defaultMainType + 'Id')\n            && !has(finder, defaultMainType + 'Name')\n        ) {\n            finder[defaultMainType + 'Index'] = 0;\n        }\n\n        var result = {};\n\n        each(finder, function (value, key) {\n            var value = finder[key];\n\n            // Exclude 'dataIndex' and other illgal keys.\n            if (key === 'dataIndex' || key === 'dataIndexInside') {\n                result[key] = value;\n                return;\n            }\n\n            var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n            var mainType = parsedKey[1];\n            var queryType = (parsedKey[2] || '').toLowerCase();\n\n            if (!mainType\n                || !queryType\n                || value == null\n                || (queryType === 'index' && value === 'none')\n                || (opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0)\n            ) {\n                return;\n            }\n\n            var queryParam = {mainType: mainType};\n            if (queryType !== 'index' || value !== 'all') {\n                queryParam[queryType] = value;\n            }\n\n            var models = ecModel.queryComponents(queryParam);\n            result[mainType + 'Models'] = models;\n            result[mainType + 'Model'] = models[0];\n        });\n\n        return result;\n    };\n\n    /**\n     * @see {module:echarts/data/helper/completeDimensions}\n     * @param {module:echarts/data/List} data\n     * @param {string|number} dataDim\n     * @return {string}\n     */\n    modelUtil.dataDimToCoordDim = function (data, dataDim) {\n        var dimensions = data.dimensions;\n        dataDim = data.getDimension(dataDim);\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimItem = data.getDimensionInfo(dimensions[i]);\n            if (dimItem.name === dataDim) {\n                return dimItem.coordDim;\n            }\n        }\n    };\n\n    /**\n     * @see {module:echarts/data/helper/completeDimensions}\n     * @param {module:echarts/data/List} data\n     * @param {string} coordDim\n     * @return {Array.<string>} data dimensions on the coordDim.\n     */\n    modelUtil.coordDimToDataDim = function (data, coordDim) {\n        var dataDim = [];\n        each(data.dimensions, function (dimName) {\n            var dimItem = data.getDimensionInfo(dimName);\n            if (dimItem.coordDim === coordDim) {\n                dataDim[dimItem.coordDimIndex] = dimItem.name;\n            }\n        });\n        return dataDim;\n    };\n\n    /**\n     * @see {module:echarts/data/helper/completeDimensions}\n     * @param {module:echarts/data/List} data\n     * @param {string} otherDim Can be `otherDims`\n     *                        like 'label' or 'tooltip'.\n     * @return {Array.<string>} data dimensions on the otherDim.\n     */\n    modelUtil.otherDimToDataDim = function (data, otherDim) {\n        var dataDim = [];\n        each(data.dimensions, function (dimName) {\n            var dimItem = data.getDimensionInfo(dimName);\n            var otherDims = dimItem.otherDims;\n            var dimIndex = otherDims[otherDim];\n            if (dimIndex != null && dimIndex !== false) {\n                dataDim[dimIndex] = dimItem.name;\n            }\n        });\n        return dataDim;\n    };\n\n    function has(obj, prop) {\n        return obj && obj.hasOwnProperty(prop);\n    }\n\n    module.exports = modelUtil;\n\n\n\n/***/ }),\n\n/***/ 975:\n/***/ (function(module, exports) {\n\n\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n\n    /**\n     * @typedef {Float32Array|Array.<number>} Vector2\n     */\n    /**\n     * 二维向量类\n     * @exports zrender/tool/vector\n     */\n    var vector = {\n        /**\n         * 创建一个向量\n         * @param {number} [x=0]\n         * @param {number} [y=0]\n         * @return {Vector2}\n         */\n        create: function (x, y) {\n            var out = new ArrayCtor(2);\n            if (x == null) {\n                x = 0;\n            }\n            if (y == null) {\n                y = 0;\n            }\n            out[0] = x;\n            out[1] = y;\n            return out;\n        },\n\n        /**\n         * 复制向量数据\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        copy: function (out, v) {\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 克隆一个向量\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        clone: function (v) {\n            var out = new ArrayCtor(2);\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 设置向量的两个项\n         * @param {Vector2} out\n         * @param {number} a\n         * @param {number} b\n         * @return {Vector2} 结果\n         */\n        set: function (out, a, b) {\n            out[0] = a;\n            out[1] = b;\n            return out;\n        },\n\n        /**\n         * 向量相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        add: function (out, v1, v2) {\n            out[0] = v1[0] + v2[0];\n            out[1] = v1[1] + v2[1];\n            return out;\n        },\n\n        /**\n         * 向量缩放后相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} a\n         */\n        scaleAndAdd: function (out, v1, v2, a) {\n            out[0] = v1[0] + v2[0] * a;\n            out[1] = v1[1] + v2[1] * a;\n            return out;\n        },\n\n        /**\n         * 向量相减\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        sub: function (out, v1, v2) {\n            out[0] = v1[0] - v2[0];\n            out[1] = v1[1] - v2[1];\n            return out;\n        },\n\n        /**\n         * 向量长度\n         * @param {Vector2} v\n         * @return {number}\n         */\n        len: function (v) {\n            return Math.sqrt(this.lenSquare(v));\n        },\n\n        /**\n         * 向量长度平方\n         * @param {Vector2} v\n         * @return {number}\n         */\n        lenSquare: function (v) {\n            return v[0] * v[0] + v[1] * v[1];\n        },\n\n        /**\n         * 向量乘法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        mul: function (out, v1, v2) {\n            out[0] = v1[0] * v2[0];\n            out[1] = v1[1] * v2[1];\n            return out;\n        },\n\n        /**\n         * 向量除法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        div: function (out, v1, v2) {\n            out[0] = v1[0] / v2[0];\n            out[1] = v1[1] / v2[1];\n            return out;\n        },\n\n        /**\n         * 向量点乘\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        dot: function (v1, v2) {\n            return v1[0] * v2[0] + v1[1] * v2[1];\n        },\n\n        /**\n         * 向量缩放\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {number} s\n         */\n        scale: function (out, v, s) {\n            out[0] = v[0] * s;\n            out[1] = v[1] * s;\n            return out;\n        },\n\n        /**\n         * 向量归一化\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        normalize: function (out, v) {\n            var d = vector.len(v);\n            if (d === 0) {\n                out[0] = 0;\n                out[1] = 0;\n            }\n            else {\n                out[0] = v[0] / d;\n                out[1] = v[1] / d;\n            }\n            return out;\n        },\n\n        /**\n         * 计算向量间距离\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distance: function (v1, v2) {\n            return Math.sqrt(\n                (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1])\n            );\n        },\n\n        /**\n         * 向量距离平方\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distanceSquare: function (v1, v2) {\n            return (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n        },\n\n        /**\n         * 求负向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        negate: function (out, v) {\n            out[0] = -v[0];\n            out[1] = -v[1];\n            return out;\n        },\n\n        /**\n         * 插值两个点\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} t\n         */\n        lerp: function (out, v1, v2, t) {\n            out[0] = v1[0] + t * (v2[0] - v1[0]);\n            out[1] = v1[1] + t * (v2[1] - v1[1]);\n            return out;\n        },\n\n        /**\n         * 矩阵左乘向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {Vector2} m\n         */\n        applyTransform: function (out, v, m) {\n            var x = v[0];\n            var y = v[1];\n            out[0] = m[0] * x + m[2] * y + m[4];\n            out[1] = m[1] * x + m[3] * y + m[5];\n            return out;\n        },\n        /**\n         * 求两个向量最小值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        min: function (out, v1, v2) {\n            out[0] = Math.min(v1[0], v2[0]);\n            out[1] = Math.min(v1[1], v2[1]);\n            return out;\n        },\n        /**\n         * 求两个向量最大值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        max: function (out, v1, v2) {\n            out[0] = Math.max(v1[0], v2[0]);\n            out[1] = Math.max(v1[1], v2[1]);\n            return out;\n        }\n    };\n\n    vector.length = vector.len;\n    vector.lengthSquare = vector.lenSquare;\n    vector.dist = vector.distance;\n    vector.distSquare = vector.distanceSquare;\n\n    module.exports = vector;\n\n\n\n/***/ }),\n\n/***/ 976:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(970);\n    var numberUtil = __webpack_require__(973);\n    var textContain = __webpack_require__(984);\n\n    var formatUtil = {};\n\n    /**\n     * 每三位默认加,格式化\n     * @param {string|number} x\n     * @return {string}\n     */\n    formatUtil.addCommas = function (x) {\n        if (isNaN(x)) {\n            return '-';\n        }\n        x = (x + '').split('.');\n        return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g,'$1,')\n               + (x.length > 1 ? ('.' + x[1]) : '');\n    };\n\n    /**\n     * @param {string} str\n     * @param {boolean} [upperCaseFirst=false]\n     * @return {string} str\n     */\n    formatUtil.toCamelCase = function (str, upperCaseFirst) {\n        str = (str || '').toLowerCase().replace(/-(.)/g, function(match, group1) {\n            return group1.toUpperCase();\n        });\n\n        if (upperCaseFirst && str) {\n            str = str.charAt(0).toUpperCase() + str.slice(1);\n        }\n\n        return str;\n    };\n\n    formatUtil.normalizeCssArray = zrUtil.normalizeCssArray;\n\n    var encodeHTML = formatUtil.encodeHTML = function (source) {\n        return String(source)\n            .replace(/&/g, '&amp;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;')\n            .replace(/\"/g, '&quot;')\n            .replace(/'/g, '&#39;');\n    };\n\n    var TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\n    var wrapVar = function (varName, seriesIdx) {\n        return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n    };\n\n    /**\n     * Template formatter\n     * @param {string} tpl\n     * @param {Array.<Object>|Object} paramsList\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTpl = function (tpl, paramsList, encode) {\n        if (!zrUtil.isArray(paramsList)) {\n            paramsList = [paramsList];\n        }\n        var seriesLen = paramsList.length;\n        if (!seriesLen) {\n            return '';\n        }\n\n        var $vars = paramsList[0].$vars || [];\n        for (var i = 0; i < $vars.length; i++) {\n            var alias = TPL_VAR_ALIAS[i];\n            var val = wrapVar(alias, 0);\n            tpl = tpl.replace(wrapVar(alias), encode ? encodeHTML(val) : val);\n        }\n        for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n            for (var k = 0; k < $vars.length; k++) {\n                var val = paramsList[seriesIdx][$vars[k]];\n                tpl = tpl.replace(\n                    wrapVar(TPL_VAR_ALIAS[k], seriesIdx),\n                    encode ? encodeHTML(val) : val\n                );\n            }\n        }\n\n        return tpl;\n    };\n\n    /**\n     * simple Template formatter\n     *\n     * @param {string} tpl\n     * @param {Object} param\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTplSimple = function (tpl, param, encode) {\n        zrUtil.each(param, function (value, key) {\n            tpl = tpl.replace(\n                '{' + key + '}',\n                encode ? encodeHTML(value) : value\n            );\n        });\n        return tpl;\n    };\n\n    /**\n     * @param {string} color\n     * @param {string} [extraCssText]\n     * @return {string}\n     */\n    formatUtil.getTooltipMarker = function (color, extraCssText) {\n        return color\n            ? '<span style=\"display:inline-block;margin-right:5px;'\n                + 'border-radius:10px;width:9px;height:9px;background-color:'\n                + formatUtil.encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>'\n            : '';\n    };\n\n    /**\n     * @param {string} str\n     * @return {string}\n     * @inner\n     */\n    var s2d = function (str) {\n        return str < 10 ? ('0' + str) : str;\n    };\n\n    /**\n     * ISO Date format\n     * @param {string} tpl\n     * @param {number} value\n     * @param {boolean} [isUTC=false] Default in local time.\n     *           see `module:echarts/scale/Time`\n     *           and `module:echarts/util/number#parseDate`.\n     * @inner\n     */\n    formatUtil.formatTime = function (tpl, value, isUTC) {\n        if (tpl === 'week'\n            || tpl === 'month'\n            || tpl === 'quarter'\n            || tpl === 'half-year'\n            || tpl === 'year'\n        ) {\n            tpl = 'MM-dd\\nyyyy';\n        }\n\n        var date = numberUtil.parseDate(value);\n        var utc = isUTC ? 'UTC' : '';\n        var y = date['get' + utc + 'FullYear']();\n        var M = date['get' + utc + 'Month']() + 1;\n        var d = date['get' + utc + 'Date']();\n        var h = date['get' + utc + 'Hours']();\n        var m = date['get' + utc + 'Minutes']();\n        var s = date['get' + utc + 'Seconds']();\n\n        tpl = tpl.replace('MM', s2d(M))\n            .replace('M', M)\n            .replace('yyyy', y)\n            .replace('yy', y % 100)\n            .replace('dd', s2d(d))\n            .replace('d', d)\n            .replace('hh', s2d(h))\n            .replace('h', h)\n            .replace('mm', s2d(m))\n            .replace('m', m)\n            .replace('ss', s2d(s))\n            .replace('s', s);\n\n        return tpl;\n    };\n\n    /**\n     * Capital first\n     * @param {string} str\n     * @return {string}\n     */\n    formatUtil.capitalFirst = function (str) {\n        return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n    };\n\n    formatUtil.truncateText = textContain.truncateText;\n\n    formatUtil.getTextRect = textContain.getBoundingRect;\n\n    module.exports = formatUtil;\n\n\n\n/***/ }),\n\n/***/ 977:\n/***/ (function(module, exports) {\n\n/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\n\n    var env = {};\n    if (typeof navigator === 'undefined') {\n        // In node\n        env = {\n            browser: {},\n            os: {},\n            node: true,\n            // Assume canvas is supported\n            canvasSupported: true\n        };\n    }\n    else {\n        env = detect(navigator.userAgent);\n    }\n\n    module.exports = env;\n\n    // Zepto.js\n    // (c) 2010-2013 Thomas Fuchs\n    // Zepto.js may be freely distributed under the MIT license.\n\n    function detect(ua) {\n        var os = {};\n        var browser = {};\n        // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n        // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n        // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n        // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n        // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n        // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n        // var touchpad = webos && ua.match(/TouchPad/);\n        // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n        // var silk = ua.match(/Silk\\/([\\d._]+)/);\n        // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n        // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n        // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n        // var playbook = ua.match(/PlayBook/);\n        // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n        var firefox = ua.match(/Firefox\\/([\\d.]+)/);\n        // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n        // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n        var ie = ua.match(/MSIE\\s([\\d.]+)/)\n            // IE 11 Trident/7.0; rv:11.0\n            || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n        var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n        var weChat = (/micromessenger/i).test(ua);\n\n        // Todo: clean this up with a better OS/browser seperation:\n        // - discern (more) between multiple browsers on android\n        // - decide if kindle fire in silk mode is android or not\n        // - Firefox on Android doesn't specify the Android version\n        // - possibly devide in os, device and browser hashes\n\n        // if (browser.webkit = !!webkit) browser.version = webkit[1];\n\n        // if (android) os.android = true, os.version = android[2];\n        // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n        // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n        // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n        // if (webos) os.webos = true, os.version = webos[2];\n        // if (touchpad) os.touchpad = true;\n        // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n        // if (bb10) os.bb10 = true, os.version = bb10[2];\n        // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n        // if (playbook) browser.playbook = true;\n        // if (kindle) os.kindle = true, os.version = kindle[1];\n        // if (silk) browser.silk = true, browser.version = silk[1];\n        // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n        // if (chrome) browser.chrome = true, browser.version = chrome[1];\n        if (firefox) {\n            browser.firefox = true;\n            browser.version = firefox[1];\n        }\n        // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n        // if (webview) browser.webview = true;\n\n        if (ie) {\n            browser.ie = true;\n            browser.version = ie[1];\n        }\n\n        if (edge) {\n            browser.edge = true;\n            browser.version = edge[1];\n        }\n\n        // It is difficult to detect WeChat in Win Phone precisely, because ua can\n        // not be set on win phone. So we do not consider Win Phone.\n        if (weChat) {\n            browser.weChat = true;\n        }\n\n        // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n        //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n        // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n        //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n        //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n        return {\n            browser: browser,\n            os: os,\n            node: false,\n            // 原生canvas支持，改极端点了\n            // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n            canvasSupported : document.createElement('canvas').getContext ? true : false,\n            // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\n            // works on most browsers\n            // IE10/11 does not support touch event, and MS Edge supports them but not by\n            // default, so we dont check navigator.maxTouchPoints for them here.\n            touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n            // <http://caniuse.com/#search=pointer%20event>.\n            pointerEventsSupported: 'onpointerdown' in window\n                // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n                // events currently. So we dont use that on other browsers unless tested sufficiently.\n                // Although IE 10 supports pointer event, it use old style and is different from the\n                // standard. So we exclude that. (IE 10 is hardly used on touch device)\n                && (browser.edge || (browser.ie && browser.version >= 11))\n        };\n    }\n\n\n/***/ }),\n\n/***/ 978:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/model/Model\n */\n\n\n    var zrUtil = __webpack_require__(970);\n    var clazzUtil = __webpack_require__(983);\n    var env = __webpack_require__(977);\n\n    /**\n     * @alias module:echarts/model/Model\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} [parentModel]\n     * @param {module:echarts/model/Global} [ecModel]\n     */\n    function Model(option, parentModel, ecModel) {\n        /**\n         * @type {module:echarts/model/Model}\n         * @readOnly\n         */\n        this.parentModel = parentModel;\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        this.ecModel = ecModel;\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        this.option = option;\n\n        // Simple optimization\n        // if (this.init) {\n        //     if (arguments.length <= 4) {\n        //         this.init(option, parentModel, ecModel, extraOpt);\n        //     }\n        //     else {\n        //         this.init.apply(this, arguments);\n        //     }\n        // }\n    }\n\n    Model.prototype = {\n\n        constructor: Model,\n\n        /**\n         * Model 的初始化函数\n         * @param {Object} option\n         */\n        init: null,\n\n        /**\n         * 从新的 Option merge\n         */\n        mergeOption: function (option) {\n            zrUtil.merge(this.option, option, true);\n        },\n\n        /**\n         * @param {string|Array.<string>} path\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        get: function (path, ignoreParent) {\n            if (path == null) {\n                return this.option;\n            }\n\n            return doGet(\n                this.option,\n                this.parsePath(path),\n                !ignoreParent && getParent(this, path)\n            );\n        },\n\n        /**\n         * @param {string} key\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        getShallow: function (key, ignoreParent) {\n            var option = this.option;\n\n            var val = option == null ? option : option[key];\n            var parentModel = !ignoreParent && getParent(this, key);\n            if (val == null && parentModel) {\n                val = parentModel.getShallow(key);\n            }\n            return val;\n        },\n\n        /**\n         * @param {string|Array.<string>} [path]\n         * @param {module:echarts/model/Model} [parentModel]\n         * @return {module:echarts/model/Model}\n         */\n        getModel: function (path, parentModel) {\n            var obj = path == null\n                ? this.option\n                : doGet(this.option, path = this.parsePath(path));\n\n            var thisParentModel;\n            parentModel = parentModel || (\n                (thisParentModel = getParent(this, path))\n                    && thisParentModel.getModel(path)\n            );\n\n            return new Model(obj, parentModel, this.ecModel);\n        },\n\n        /**\n         * If model has option\n         */\n        isEmpty: function () {\n            return this.option == null;\n        },\n\n        restoreData: function () {},\n\n        // Pending\n        clone: function () {\n            var Ctor = this.constructor;\n            return new Ctor(zrUtil.clone(this.option));\n        },\n\n        setReadOnly: function (properties) {\n            clazzUtil.setReadOnly(this, properties);\n        },\n\n        // If path is null/undefined, return null/undefined.\n        parsePath: function(path) {\n            if (typeof path === 'string') {\n                path = path.split('.');\n            }\n            return path;\n        },\n\n        /**\n         * @param {Function} getParentMethod\n         *        param {Array.<string>|string} path\n         *        return {module:echarts/model/Model}\n         */\n        customizeGetParent: function (getParentMethod) {\n            clazzUtil.set(this, 'getParent', getParentMethod);\n        },\n\n        isAnimationEnabled: function () {\n            if (!env.node) {\n                if (this.option.animation != null) {\n                    return !!this.option.animation;\n                }\n                else if (this.parentModel) {\n                    return this.parentModel.isAnimationEnabled();\n                }\n            }\n        }\n    };\n\n    function doGet(obj, pathArr, parentModel) {\n        for (var i = 0; i < pathArr.length; i++) {\n            // Ignore empty\n            if (!pathArr[i]) {\n                continue;\n            }\n            // obj could be number/string/... (like 0)\n            obj = (obj && typeof obj === 'object') ? obj[pathArr[i]] : null;\n            if (obj == null) {\n                break;\n            }\n        }\n        if (obj == null && parentModel) {\n            obj = parentModel.get(pathArr);\n        }\n        return obj;\n    }\n\n    // `path` can be null/undefined\n    function getParent(model, path) {\n        var getParentMethod = clazzUtil.get(model, 'getParent');\n        return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n    }\n\n    // Enable Model.extend.\n    clazzUtil.enableClassExtend(Model);\n\n    var mixin = zrUtil.mixin;\n    mixin(Model, __webpack_require__(1079));\n    mixin(Model, __webpack_require__(1080));\n    mixin(Model, __webpack_require__(1081));\n    mixin(Model, __webpack_require__(1103));\n\n    module.exports = Model;\n\n\n/***/ }),\n\n/***/ 979:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Path element\n * @module zrender/graphic/Path\n */\n\n\n\n    var Displayable = __webpack_require__(1008);\n    var zrUtil = __webpack_require__(970);\n    var PathProxy = __webpack_require__(998);\n    var pathContain = __webpack_require__(1086);\n\n    var Pattern = __webpack_require__(1036);\n    var getCanvasPattern = Pattern.prototype.getCanvasPattern;\n\n    var abs = Math.abs;\n\n    var pathProxyForDraw = new PathProxy(true);\n    /**\n     * @alias module:zrender/graphic/Path\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function Path(opts) {\n        Displayable.call(this, opts);\n\n        /**\n         * @type {module:zrender/core/PathProxy}\n         * @readOnly\n         */\n        this.path = null;\n    }\n\n    Path.prototype = {\n\n        constructor: Path,\n\n        type: 'path',\n\n        __dirtyPath: true,\n\n        strokeContainThreshold: 5,\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var path = this.path || pathProxyForDraw;\n            var hasStroke = style.hasStroke();\n            var hasFill = style.hasFill();\n            var fill = style.fill;\n            var stroke = style.stroke;\n            var hasFillGradient = hasFill && !!(fill.colorStops);\n            var hasStrokeGradient = hasStroke && !!(stroke.colorStops);\n            var hasFillPattern = hasFill && !!(fill.image);\n            var hasStrokePattern = hasStroke && !!(stroke.image);\n\n            style.bind(ctx, this, prevEl);\n            this.setTransform(ctx);\n\n            if (this.__dirty) {\n                var rect;\n                // Update gradient because bounding rect may changed\n                if (hasFillGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._fillGradient = style.getGradient(ctx, fill, rect);\n                }\n                if (hasStrokeGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._strokeGradient = style.getGradient(ctx, stroke, rect);\n                }\n            }\n            // Use the gradient or pattern\n            if (hasFillGradient) {\n                // PENDING If may have affect the state\n                ctx.fillStyle = this._fillGradient;\n            }\n            else if (hasFillPattern) {\n                ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n            }\n            if (hasStrokeGradient) {\n                ctx.strokeStyle = this._strokeGradient;\n            }\n            else if (hasStrokePattern) {\n                ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n            }\n\n            var lineDash = style.lineDash;\n            var lineDashOffset = style.lineDashOffset;\n\n            var ctxLineDash = !!ctx.setLineDash;\n\n            // Update path sx, sy\n            var scale = this.getGlobalScale();\n            path.setScale(scale[0], scale[1]);\n\n            // Proxy context\n            // Rebuild path in following 2 cases\n            // 1. Path is dirty\n            // 2. Path needs javascript implemented lineDash stroking.\n            //    In this case, lineDash information will not be saved in PathProxy\n            if (this.__dirtyPath\n                || (lineDash && !ctxLineDash && hasStroke)\n            ) {\n                path.beginPath(ctx);\n\n                // Setting line dash before build path\n                if (lineDash && !ctxLineDash) {\n                    path.setLineDash(lineDash);\n                    path.setLineDashOffset(lineDashOffset);\n                }\n\n                this.buildPath(path, this.shape, false);\n\n                // Clear path dirty flag\n                if (this.path) {\n                    this.__dirtyPath = false;\n                }\n            }\n            else {\n                // Replay path building\n                ctx.beginPath();\n                this.path.rebuildPath(ctx);\n            }\n\n            hasFill && path.fill(ctx);\n\n            if (lineDash && ctxLineDash) {\n                ctx.setLineDash(lineDash);\n                ctx.lineDashOffset = lineDashOffset;\n            }\n\n            hasStroke && path.stroke(ctx);\n\n            if (lineDash && ctxLineDash) {\n                // PENDING\n                // Remove lineDash\n                ctx.setLineDash([]);\n            }\n\n            this.restoreTransform(ctx);\n\n            // Draw rect text\n            if (style.text != null) {\n                this.drawRectText(ctx, this.getBoundingRect());\n            }\n        },\n\n        // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n        // Like in circle\n        buildPath: function (ctx, shapeCfg, inBundle) {},\n\n        createPathProxy: function () {\n            this.path = new PathProxy();\n        },\n\n        getBoundingRect: function () {\n            var rect = this._rect;\n            var style = this.style;\n            var needsUpdateRect = !rect;\n            if (needsUpdateRect) {\n                var path = this.path;\n                if (!path) {\n                    // Create path on demand.\n                    path = this.path = new PathProxy();\n                }\n                if (this.__dirtyPath) {\n                    path.beginPath();\n                    this.buildPath(path, this.shape, false);\n                }\n                rect = path.getBoundingRect();\n            }\n            this._rect = rect;\n\n            if (style.hasStroke()) {\n                // Needs update rect with stroke lineWidth when\n                // 1. Element changes scale or lineWidth\n                // 2. Shape is changed\n                var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n                if (this.__dirty || needsUpdateRect) {\n                    rectWithStroke.copy(rect);\n                    // FIXME Must after updateTransform\n                    var w = style.lineWidth;\n                    // PENDING, Min line width is needed when line is horizontal or vertical\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n\n                    // Only add extra hover lineWidth when there are no fill\n                    if (!style.hasFill()) {\n                        w = Math.max(w, this.strokeContainThreshold || 4);\n                    }\n                    // Consider line width\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        rectWithStroke.width += w / lineScale;\n                        rectWithStroke.height += w / lineScale;\n                        rectWithStroke.x -= w / lineScale / 2;\n                        rectWithStroke.y -= w / lineScale / 2;\n                    }\n                }\n\n                // Return rect with stroke\n                return rectWithStroke;\n            }\n\n            return rect;\n        },\n\n        contain: function (x, y) {\n            var localPos = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            var style = this.style;\n            x = localPos[0];\n            y = localPos[1];\n\n            if (rect.contain(x, y)) {\n                var pathData = this.path.data;\n                if (style.hasStroke()) {\n                    var lineWidth = style.lineWidth;\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        // Only add extra hover lineWidth when there are no fill\n                        if (!style.hasFill()) {\n                            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n                        }\n                        if (pathContain.containStroke(\n                            pathData, lineWidth / lineScale, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                }\n                if (style.hasFill()) {\n                    return pathContain.contain(pathData, x, y);\n                }\n            }\n            return false;\n        },\n\n        /**\n         * @param  {boolean} dirtyPath\n         */\n        dirty: function (dirtyPath) {\n            if (dirtyPath == null) {\n                dirtyPath = true;\n            }\n            // Only mark dirty, not mark clean\n            if (dirtyPath) {\n                this.__dirtyPath = dirtyPath;\n                this._rect = null;\n            }\n\n            this.__dirty = true;\n\n            this.__zr && this.__zr.refresh();\n\n            // Used as a clipping path\n            if (this.__clipTarget) {\n                this.__clipTarget.dirty();\n            }\n        },\n\n        /**\n         * Alias for animate('shape')\n         * @param {boolean} loop\n         */\n        animateShape: function (loop) {\n            return this.animate('shape', loop);\n        },\n\n        // Overwrite attrKV\n        attrKV: function (key, value) {\n            // FIXME\n            if (key === 'shape') {\n                this.setShape(value);\n                this.__dirtyPath = true;\n                this._rect = null;\n            }\n            else {\n                Displayable.prototype.attrKV.call(this, key, value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setShape: function (key, value) {\n            var shape = this.shape;\n            // Path from string may not have shape\n            if (shape) {\n                if (zrUtil.isObject(key)) {\n                    for (var name in key) {\n                        if (key.hasOwnProperty(name)) {\n                            shape[name] = key[name];\n                        }\n                    }\n                }\n                else {\n                    shape[key] = value;\n                }\n                this.dirty(true);\n            }\n            return this;\n        },\n\n        getLineScale: function () {\n            var m = this.transform;\n            // Get the line scale.\n            // Determinant of `m` means how much the area is enlarged by the\n            // transformation. So its square root can be used as a scale factor\n            // for width.\n            return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10\n                ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1]))\n                : 1;\n        }\n    };\n\n    /**\n     * 扩展一个 Path element, 比如星形，圆等。\n     * Extend a path element\n     * @param {Object} props\n     * @param {string} props.type Path type\n     * @param {Function} props.init Initialize\n     * @param {Function} props.buildPath Overwrite buildPath method\n     * @param {Object} [props.style] Extended default style config\n     * @param {Object} [props.shape] Extended default shape config\n     */\n    Path.extend = function (defaults) {\n        var Sub = function (opts) {\n            Path.call(this, opts);\n\n            if (defaults.style) {\n                // Extend default style\n                this.style.extendFrom(defaults.style, false);\n            }\n\n            // Extend default shape\n            var defaultShape = defaults.shape;\n            if (defaultShape) {\n                this.shape = this.shape || {};\n                var thisShape = this.shape;\n                for (var name in defaultShape) {\n                    if (\n                        ! thisShape.hasOwnProperty(name)\n                        && defaultShape.hasOwnProperty(name)\n                    ) {\n                        thisShape[name] = defaultShape[name];\n                    }\n                }\n            }\n\n            defaults.init && defaults.init.call(this, opts);\n        };\n\n        zrUtil.inherits(Sub, Path);\n\n        // FIXME 不能 extend position, rotation 等引用对象\n        for (var name in defaults) {\n            // Extending prototype values and methods\n            if (name !== 'style' && name !== 'shape') {\n                Sub.prototype[name] = defaults[name];\n            }\n        }\n\n        return Sub;\n    };\n\n    zrUtil.inherits(Path, Displayable);\n\n    module.exports = Path;\n\n\n/***/ }),\n\n/***/ 980:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Layout helpers for each component positioning\n\n\n    var zrUtil = __webpack_require__(970);\n    var BoundingRect = __webpack_require__(981);\n    var numberUtil = __webpack_require__(973);\n    var formatUtil = __webpack_require__(976);\n    var parsePercent = numberUtil.parsePercent;\n    var each = zrUtil.each;\n\n    var layout = {};\n\n    /**\n     * @public\n     */\n    var LOCATION_PARAMS = layout.LOCATION_PARAMS = [\n        'left', 'right', 'top', 'bottom', 'width', 'height'\n    ];\n\n    /**\n     * @public\n     */\n    var HV_NAMES = layout.HV_NAMES = [\n        ['width', 'left', 'right'],\n        ['height', 'top', 'bottom']\n    ];\n\n    function boxLayout(orient, group, gap, maxWidth, maxHeight) {\n        var x = 0;\n        var y = 0;\n\n        if (maxWidth == null) {\n            maxWidth = Infinity;\n        }\n        if (maxHeight == null) {\n            maxHeight = Infinity;\n        }\n        var currentLineMaxSize = 0;\n\n        group.eachChild(function (child, idx) {\n            var position = child.position;\n            var rect = child.getBoundingRect();\n            var nextChild = group.childAt(idx + 1);\n            var nextChildRect = nextChild && nextChild.getBoundingRect();\n            var nextX;\n            var nextY;\n\n            if (orient === 'horizontal') {\n                var moveX = rect.width + (nextChildRect ? (-nextChildRect.x + rect.x) : 0);\n                nextX = x + moveX;\n                // Wrap when width exceeds maxWidth or meet a `newline` group\n                // FIXME compare before adding gap?\n                if (nextX > maxWidth || child.newline) {\n                    x = 0;\n                    nextX = moveX;\n                    y += currentLineMaxSize + gap;\n                    currentLineMaxSize = rect.height;\n                }\n                else {\n                    // FIXME: consider rect.y is not `0`?\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n                }\n            }\n            else {\n                var moveY = rect.height + (nextChildRect ? (-nextChildRect.y + rect.y) : 0);\n                nextY = y + moveY;\n                // Wrap when width exceeds maxHeight or meet a `newline` group\n                if (nextY > maxHeight || child.newline) {\n                    x += currentLineMaxSize + gap;\n                    y = 0;\n                    nextY = moveY;\n                    currentLineMaxSize = rect.width;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n                }\n            }\n\n            if (child.newline) {\n                return;\n            }\n\n            position[0] = x;\n            position[1] = y;\n\n            orient === 'horizontal'\n                ? (x = nextX + gap)\n                : (y = nextY + gap);\n        });\n    }\n\n    /**\n     * VBox or HBox layouting\n     * @param {string} orient\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.box = boxLayout;\n\n    /**\n     * VBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.vbox = zrUtil.curry(boxLayout, 'vertical');\n\n    /**\n     * HBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.hbox = zrUtil.curry(boxLayout, 'horizontal');\n\n    /**\n     * If x or x2 is not specified or 'center' 'left' 'right',\n     * the width would be as long as possible.\n     * If y or y2 is not specified or 'middle' 'top' 'bottom',\n     * the height would be as long as possible.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.x]\n     * @param {number|string} [positionInfo.y]\n     * @param {number|string} [positionInfo.x2]\n     * @param {number|string} [positionInfo.y2]\n     * @param {Object} containerRect {width, height}\n     * @param {string|number} margin\n     * @return {Object} {width, height}\n     */\n    layout.getAvailableSize = function (positionInfo, containerRect, margin) {\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var x = parsePercent(positionInfo.x, containerWidth);\n        var y = parsePercent(positionInfo.y, containerHeight);\n        var x2 = parsePercent(positionInfo.x2, containerWidth);\n        var y2 = parsePercent(positionInfo.y2, containerHeight);\n\n        (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n        (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n        (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n        (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        return {\n            width: Math.max(x2 - x - margin[1] - margin[3], 0),\n            height: Math.max(y2 - y - margin[0] - margin[2], 0)\n        };\n    };\n\n    /**\n     * Parse position info.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {number|string} [positionInfo.width]\n     * @param {number|string} [positionInfo.height]\n     * @param {number|string} [positionInfo.aspect] Aspect is width / height\n     * @param {Object} containerRect\n     * @param {string|number} [margin]\n     *\n     * @return {module:zrender/core/BoundingRect}\n     */\n    layout.getLayoutRect = function (\n        positionInfo, containerRect, margin\n    ) {\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var left = parsePercent(positionInfo.left, containerWidth);\n        var top = parsePercent(positionInfo.top, containerHeight);\n        var right = parsePercent(positionInfo.right, containerWidth);\n        var bottom = parsePercent(positionInfo.bottom, containerHeight);\n        var width = parsePercent(positionInfo.width, containerWidth);\n        var height = parsePercent(positionInfo.height, containerHeight);\n\n        var verticalMargin = margin[2] + margin[0];\n        var horizontalMargin = margin[1] + margin[3];\n        var aspect = positionInfo.aspect;\n\n        // If width is not specified, calculate width from left and right\n        if (isNaN(width)) {\n            width = containerWidth - right - horizontalMargin - left;\n        }\n        if (isNaN(height)) {\n            height = containerHeight - bottom - verticalMargin - top;\n        }\n\n        if (aspect != null) {\n            // If width and height are not given\n            // 1. Graph should not exceeds the container\n            // 2. Aspect must be keeped\n            // 3. Graph should take the space as more as possible\n            // FIXME\n            // Margin is not considered, because there is no case that both\n            // using margin and aspect so far.\n            if (isNaN(width) && isNaN(height)) {\n                if (aspect > containerWidth / containerHeight) {\n                    width = containerWidth * 0.8;\n                }\n                else {\n                    height = containerHeight * 0.8;\n                }\n            }\n\n            // Calculate width or height with given aspect\n            if (isNaN(width)) {\n                width = aspect * height;\n            }\n            if (isNaN(height)) {\n                height = width / aspect;\n            }\n        }\n\n        // If left is not specified, calculate left from right and width\n        if (isNaN(left)) {\n            left = containerWidth - right - width - horizontalMargin;\n        }\n        if (isNaN(top)) {\n            top = containerHeight - bottom - height - verticalMargin;\n        }\n\n        // Align left and top\n        switch (positionInfo.left || positionInfo.right) {\n            case 'center':\n                left = containerWidth / 2 - width / 2 - margin[3];\n                break;\n            case 'right':\n                left = containerWidth - width - horizontalMargin;\n                break;\n        }\n        switch (positionInfo.top || positionInfo.bottom) {\n            case 'middle':\n            case 'center':\n                top = containerHeight / 2 - height / 2 - margin[0];\n                break;\n            case 'bottom':\n                top = containerHeight - height - verticalMargin;\n                break;\n        }\n        // If something is wrong and left, top, width, height are calculated as NaN\n        left = left || 0;\n        top = top || 0;\n        if (isNaN(width)) {\n            // Width may be NaN if only one value is given except width\n            width = containerWidth - horizontalMargin - left - (right || 0);\n        }\n        if (isNaN(height)) {\n            // Height may be NaN if only one value is given except height\n            height = containerHeight - verticalMargin - top - (bottom || 0);\n        }\n\n        var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n        rect.margin = margin;\n        return rect;\n    };\n\n\n    /**\n     * Position a zr element in viewport\n     *  Group position is specified by either\n     *  {left, top}, {right, bottom}\n     *  If all properties exists, right and bottom will be igonred.\n     *\n     * Logic:\n     *     1. Scale (against origin point in parent coord)\n     *     2. Rotate (against origin point in parent coord)\n     *     3. Traslate (with el.position by this method)\n     * So this method only fixes the last step 'Traslate', which does not affect\n     * scaling and rotating.\n     *\n     * If be called repeatly with the same input el, the same result will be gotten.\n     *\n     * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {number|string} [positionInfo.width] Only for opt.boundingModel: 'raw'\n     * @param {number|string} [positionInfo.height] Only for opt.boundingModel: 'raw'\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @param {Object} [opt]\n     * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n     * @param {Array.<number>} [opt.boundingMode='all']\n     *        Specify how to calculate boundingRect when locating.\n     *        'all': Position the boundingRect that is transformed and uioned\n     *               both itself and its descendants.\n     *               This mode simplies confine the elements in the bounding\n     *               of their container (e.g., using 'right: 0').\n     *        'raw': Position the boundingRect that is not transformed and only itself.\n     *               This mode is useful when you want a element can overflow its\n     *               container. (Consider a rotated circle needs to be located in a corner.)\n     *               In this mode positionInfo.width/height can only be number.\n     */\n    layout.positionElement = function (el, positionInfo, containerRect, margin, opt) {\n        var h = !opt || !opt.hv || opt.hv[0];\n        var v = !opt || !opt.hv || opt.hv[1];\n        var boundingMode = opt && opt.boundingMode || 'all';\n\n        if (!h && !v) {\n            return;\n        }\n\n        var rect;\n        if (boundingMode === 'raw') {\n            rect = el.type === 'group'\n                ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0)\n                : el.getBoundingRect();\n        }\n        else {\n            rect = el.getBoundingRect();\n            if (el.needLocalTransform()) {\n                var transform = el.getLocalTransform();\n                // Notice: raw rect may be inner object of el,\n                // which should not be modified.\n                rect = rect.clone();\n                rect.applyTransform(transform);\n            }\n        }\n\n        // The real width and height can not be specified but calculated by the given el.\n        positionInfo = layout.getLayoutRect(\n            zrUtil.defaults(\n                {width: rect.width, height: rect.height},\n                positionInfo\n            ),\n            containerRect,\n            margin\n        );\n\n        // Because 'tranlate' is the last step in transform\n        // (see zrender/core/Transformable#getLocalTransfrom),\n        // we can just only modify el.position to get final result.\n        var elPos = el.position;\n        var dx = h ? positionInfo.x - rect.x : 0;\n        var dy = v ? positionInfo.y - rect.y : 0;\n\n        el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n    };\n\n    /**\n     * @param {Object} option Contains some of the properties in HV_NAMES.\n     * @param {number} hvIdx 0: horizontal; 1: vertical.\n     */\n    layout.sizeCalculable = function (option, hvIdx) {\n        return option[HV_NAMES[hvIdx][0]] != null\n            || (option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null);\n    };\n\n    /**\n     * Consider Case:\n     * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n     * through setOption or media query, using normal zrUtil.merge will cause\n     * {right: 0} does not take effect.\n     *\n     * @example\n     * ComponentModel.extend({\n     *     init: function () {\n     *         ...\n     *         var inputPositionParams = layout.getLayoutParams(option);\n     *         this.mergeOption(inputPositionParams);\n     *     },\n     *     mergeOption: function (newOption) {\n     *         newOption && zrUtil.merge(thisOption, newOption, true);\n     *         layout.mergeLayoutParam(thisOption, newOption);\n     *     }\n     * });\n     *\n     * @param {Object} targetOption\n     * @param {Object} newOption\n     * @param {Object|string} [opt]\n     * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Used for the components\n     *  that width (or height) should not be calculated by left and right (or top and bottom).\n     */\n    layout.mergeLayoutParam = function (targetOption, newOption, opt) {\n        !zrUtil.isObject(opt) && (opt = {});\n\n        var ignoreSize = opt.ignoreSize;\n        !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n\n        var hResult = merge(HV_NAMES[0], 0);\n        var vResult = merge(HV_NAMES[1], 1);\n\n        copy(HV_NAMES[0], targetOption, hResult);\n        copy(HV_NAMES[1], targetOption, vResult);\n\n        function merge(names, hvIdx) {\n            var newParams = {};\n            var newValueCount = 0;\n            var merged = {};\n            var mergedValueCount = 0;\n            var enoughParamNumber = 2;\n\n            each(names, function (name) {\n                merged[name] = targetOption[name];\n            });\n            each(names, function (name) {\n                // Consider case: newOption.width is null, which is\n                // set by user for removing width setting.\n                hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n                hasValue(newParams, name) && newValueCount++;\n                hasValue(merged, name) && mergedValueCount++;\n            });\n\n            if (ignoreSize[hvIdx]) {\n                // Only one of left/right is premitted to exist.\n                if (hasValue(newOption, names[1])) {\n                    merged[names[2]] = null;\n                }\n                else if (hasValue(newOption, names[2])) {\n                    merged[names[1]] = null;\n                }\n                return merged;\n            }\n\n            // Case: newOption: {width: ..., right: ...},\n            // or targetOption: {right: ...} and newOption: {width: ...},\n            // There is no conflict when merged only has params count\n            // little than enoughParamNumber.\n            if (mergedValueCount === enoughParamNumber || !newValueCount) {\n                return merged;\n            }\n            // Case: newOption: {width: ..., right: ...},\n            // Than we can make sure user only want those two, and ignore\n            // all origin params in targetOption.\n            else if (newValueCount >= enoughParamNumber) {\n                return newParams;\n            }\n            else {\n                // Chose another param from targetOption by priority.\n                for (var i = 0; i < names.length; i++) {\n                    var name = names[i];\n                    if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n                        newParams[name] = targetOption[name];\n                        break;\n                    }\n                }\n                return newParams;\n            }\n        }\n\n        function hasProp(obj, name) {\n            return obj.hasOwnProperty(name);\n        }\n\n        function hasValue(obj, name) {\n            return obj[name] != null && obj[name] !== 'auto';\n        }\n\n        function copy(names, target, source) {\n            each(names, function (name) {\n                target[name] = source[name];\n            });\n        }\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.getLayoutParams = function (source) {\n        return layout.copyLayoutParams({}, source);\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.copyLayoutParams = function (target, source) {\n        source && target && each(LOCATION_PARAMS, function (name) {\n            source.hasOwnProperty(name) && (target[name] = source[name]);\n        });\n        return target;\n    };\n\n    module.exports = layout;\n\n\n\n/***/ }),\n\n/***/ 981:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @module echarts/core/BoundingRect\n */\n\n\n    var vec2 = __webpack_require__(975);\n    var matrix = __webpack_require__(985);\n\n    var v2ApplyTransform = vec2.applyTransform;\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    /**\n     * @alias module:echarts/core/BoundingRect\n     */\n    function BoundingRect(x, y, width, height) {\n\n        if (width < 0) {\n            x = x + width;\n            width = -width;\n        }\n        if (height < 0) {\n            y = y + height;\n            height = -height;\n        }\n\n        /**\n         * @type {number}\n         */\n        this.x = x;\n        /**\n         * @type {number}\n         */\n        this.y = y;\n        /**\n         * @type {number}\n         */\n        this.width = width;\n        /**\n         * @type {number}\n         */\n        this.height = height;\n    }\n\n    BoundingRect.prototype = {\n\n        constructor: BoundingRect,\n\n        /**\n         * @param {module:echarts/core/BoundingRect} other\n         */\n        union: function (other) {\n            var x = mathMin(other.x, this.x);\n            var y = mathMin(other.y, this.y);\n\n            this.width = mathMax(\n                    other.x + other.width,\n                    this.x + this.width\n                ) - x;\n            this.height = mathMax(\n                    other.y + other.height,\n                    this.y + this.height\n                ) - y;\n            this.x = x;\n            this.y = y;\n        },\n\n        /**\n         * @param {Array.<number>} m\n         * @methods\n         */\n        applyTransform: (function () {\n            var lt = [];\n            var rb = [];\n            var lb = [];\n            var rt = [];\n            return function (m) {\n                // In case usage like this\n                // el.getBoundingRect().applyTransform(el.transform)\n                // And element has no transform\n                if (!m) {\n                    return;\n                }\n                lt[0] = lb[0] = this.x;\n                lt[1] = rt[1] = this.y;\n                rb[0] = rt[0] = this.x + this.width;\n                rb[1] = lb[1] = this.y + this.height;\n\n                v2ApplyTransform(lt, lt, m);\n                v2ApplyTransform(rb, rb, m);\n                v2ApplyTransform(lb, lb, m);\n                v2ApplyTransform(rt, rt, m);\n\n                this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n                this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n                var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n                var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n                this.width = maxX - this.x;\n                this.height = maxY - this.y;\n            };\n        })(),\n\n        /**\n         * Calculate matrix of transforming from self to target rect\n         * @param  {module:zrender/core/BoundingRect} b\n         * @return {Array.<number>}\n         */\n        calculateTransform: function (b) {\n            var a = this;\n            var sx = b.width / a.width;\n            var sy = b.height / a.height;\n\n            var m = matrix.create();\n\n            // 矩阵右乘\n            matrix.translate(m, m, [-a.x, -a.y]);\n            matrix.scale(m, m, [sx, sy]);\n            matrix.translate(m, m, [b.x, b.y]);\n\n            return m;\n        },\n\n        /**\n         * @param {(module:echarts/core/BoundingRect|Object)} b\n         * @return {boolean}\n         */\n        intersect: function (b) {\n            if (!b) {\n                return false;\n            }\n\n            if (!(b instanceof BoundingRect)) {\n                // Normalize negative width/height.\n                b = BoundingRect.create(b);\n            }\n\n            var a = this;\n            var ax0 = a.x;\n            var ax1 = a.x + a.width;\n            var ay0 = a.y;\n            var ay1 = a.y + a.height;\n\n            var bx0 = b.x;\n            var bx1 = b.x + b.width;\n            var by0 = b.y;\n            var by1 = b.y + b.height;\n\n            return ! (ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n        },\n\n        contain: function (x, y) {\n            var rect = this;\n            return x >= rect.x\n                && x <= (rect.x + rect.width)\n                && y >= rect.y\n                && y <= (rect.y + rect.height);\n        },\n\n        /**\n         * @return {module:echarts/core/BoundingRect}\n         */\n        clone: function () {\n            return new BoundingRect(this.x, this.y, this.width, this.height);\n        },\n\n        /**\n         * Copy from another rect\n         */\n        copy: function (other) {\n            this.x = other.x;\n            this.y = other.y;\n            this.width = other.width;\n            this.height = other.height;\n        },\n\n        plain: function () {\n            return {\n                x: this.x,\n                y: this.y,\n                width: this.width,\n                height: this.height\n            };\n        }\n    };\n\n    /**\n     * @param {Object|module:zrender/core/BoundingRect} rect\n     * @param {number} rect.x\n     * @param {number} rect.y\n     * @param {number} rect.width\n     * @param {number} rect.height\n     * @return {module:zrender/core/BoundingRect}\n     */\n    BoundingRect.create = function (rect) {\n        return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n    };\n\n    module.exports = BoundingRect;\n\n\n/***/ }),\n\n/***/ 982:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Component model\n *\n * @module echarts/model/Component\n */\n\n\n    var Model = __webpack_require__(978);\n    var zrUtil = __webpack_require__(970);\n    var arrayPush = Array.prototype.push;\n    var componentUtil = __webpack_require__(1015);\n    var clazzUtil = __webpack_require__(983);\n    var layout = __webpack_require__(980);\n\n    /**\n     * @alias module:echarts/model/Component\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {module:echarts/model/Model} ecModel\n     */\n    var ComponentModel = Model.extend({\n\n        type: 'component',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        id: '',\n\n        /**\n         * @readOnly\n         */\n        name: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        mainType: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        subType: '',\n\n        /**\n         * @readOnly\n         * @type {number}\n         */\n        componentIndex: 0,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        ecModel: null,\n\n        /**\n         * key: componentType\n         * value:  Component model list, can not be null.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @readOnly\n         */\n        dependentModels: [],\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        uid: null,\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        $constructor: function (option, parentModel, ecModel, extraOpt) {\n            Model.call(this, option, parentModel, ecModel, extraOpt);\n\n            this.uid = componentUtil.getUID('componentModel');\n        },\n\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n            this.mergeDefaultAndTheme(option, ecModel);\n        },\n\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            var themeModel = ecModel.getTheme();\n            zrUtil.merge(option, themeModel.get(this.mainType));\n            zrUtil.merge(option, this.getDefaultOption());\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (option, extraOpt) {\n            zrUtil.merge(this.option, option, true);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, option, layoutMode);\n            }\n        },\n\n        // Hooker after init or mergeOption\n        optionUpdated: function (newCptOption, isInit) {},\n\n        getDefaultOption: function () {\n            if (!clazzUtil.hasOwn(this, '__defaultOption')) {\n                var optList = [];\n                var Class = this.constructor;\n                while (Class) {\n                    var opt = Class.prototype.defaultOption;\n                    opt && optList.push(opt);\n                    Class = Class.superClass;\n                }\n\n                var defaultOption = {};\n                for (var i = optList.length - 1; i >= 0; i--) {\n                    defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n                }\n                clazzUtil.set(this, '__defaultOption', defaultOption);\n            }\n            return clazzUtil.get(this, '__defaultOption');\n        },\n\n        getReferringComponents: function (mainType) {\n            return this.ecModel.queryComponents({\n                mainType: mainType,\n                index: this.get(mainType + 'Index', true),\n                id: this.get(mainType + 'Id', true)\n            });\n        }\n\n    });\n\n    // Reset ComponentModel.extend, add preConstruct.\n    // clazzUtil.enableClassExtend(\n    //     ComponentModel,\n    //     function (option, parentModel, ecModel, extraOpt) {\n    //         // Set dependentModels, componentIndex, name, id, mainType, subType.\n    //         zrUtil.extend(this, extraOpt);\n\n    //         this.uid = componentUtil.getUID('componentModel');\n\n    //         // this.setReadOnly([\n    //         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n    //         //     'dependentModels', 'componentIndex'\n    //         // ]);\n    //     }\n    // );\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(\n        ComponentModel, {registerWhenExtend: true}\n    );\n    componentUtil.enableSubTypeDefaulter(ComponentModel);\n\n    // Add capability of ComponentModel.topologicalTravel.\n    componentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\n    function getDependencies(componentType) {\n        var deps = [];\n        zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n            arrayPush.apply(deps, Clazz.prototype.dependencies || []);\n        });\n        // Ensure main type\n        return zrUtil.map(deps, function (type) {\n            return clazzUtil.parseClassType(type).main;\n        });\n    }\n\n    zrUtil.mixin(ComponentModel, __webpack_require__(1104));\n\n    module.exports = ComponentModel;\n\n\n/***/ }),\n\n/***/ 983:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(970);\n\n    var clazz = {};\n\n    var TYPE_DELIMITER = '.';\n    var IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\n    var MEMBER_PRIFIX = '\\0ec_\\0';\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name] = value;` (can be right-value)\n     * @public\n     */\n    clazz.set = function (host, name, value) {\n        return (host[MEMBER_PRIFIX + name] = value);\n    };\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name];`\n     * @public\n     */\n    clazz.get = function (host, name) {\n        return host[MEMBER_PRIFIX + name];\n    };\n\n    /**\n     * For hidden private class member.\n     * The same behavior as `host.hasOwnProperty(name);`\n     * @public\n     */\n    clazz.hasOwn = function (host, name) {\n        return host.hasOwnProperty(MEMBER_PRIFIX + name);\n    };\n\n    /**\n     * Notice, parseClassType('') should returns {main: '', sub: ''}\n     * @public\n     */\n    var parseClassType = clazz.parseClassType = function (componentType) {\n        var ret = {main: '', sub: ''};\n        if (componentType) {\n            componentType = componentType.split(TYPE_DELIMITER);\n            ret.main = componentType[0] || '';\n            ret.sub = componentType[1] || '';\n        }\n        return ret;\n    };\n\n    /**\n     * @public\n     */\n    function checkClassType(componentType) {\n        zrUtil.assert(\n            /^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType),\n            'componentType \"' + componentType + '\" illegal'\n        );\n    }\n\n    /**\n     * @public\n     */\n    clazz.enableClassExtend = function (RootClass, mandatoryMethods) {\n\n        RootClass.$constructor = RootClass;\n        RootClass.extend = function (proto) {\n\n            if (__DEV__) {\n                zrUtil.each(mandatoryMethods, function (method) {\n                    if (!proto[method]) {\n                        console.warn(\n                            'Method `' + method + '` should be implemented'\n                            + (proto.type ? ' in ' + proto.type : '') + '.'\n                        );\n                    }\n                });\n            }\n\n            var superClass = this;\n            var ExtendedClass = function () {\n                if (!proto.$constructor) {\n                    superClass.apply(this, arguments);\n                }\n                else {\n                    proto.$constructor.apply(this, arguments);\n                }\n            };\n\n            zrUtil.extend(ExtendedClass.prototype, proto);\n\n            ExtendedClass.extend = this.extend;\n            ExtendedClass.superCall = superCall;\n            ExtendedClass.superApply = superApply;\n            zrUtil.inherits(ExtendedClass, this);\n            ExtendedClass.superClass = superClass;\n\n            return ExtendedClass;\n        };\n    };\n\n    // superCall should have class info, which can not be fetch from 'this'.\n    // Consider this case:\n    // class A has method f,\n    // class B inherits class A, overrides method f, f call superApply('f'),\n    // class C inherits class B, do not overrides method f,\n    // then when method of class C is called, dead loop occured.\n    function superCall(context, methodName) {\n        var args = zrUtil.slice(arguments, 2);\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    function superApply(context, methodName, args) {\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    /**\n     * @param {Object} entity\n     * @param {Object} options\n     * @param {boolean} [options.registerWhenExtend]\n     * @public\n     */\n    clazz.enableClassManagement = function (entity, options) {\n        options = options || {};\n\n        /**\n         * Component model classes\n         * key: componentType,\n         * value:\n         *     componentClass, when componentType is 'xxx'\n         *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n         * @type {Object}\n         */\n        var storage = {};\n\n        entity.registerClass = function (Clazz, componentType) {\n            if (componentType) {\n                checkClassType(componentType);\n                componentType = parseClassType(componentType);\n\n                if (!componentType.sub) {\n                    if (__DEV__) {\n                        if (storage[componentType.main]) {\n                            console.warn(componentType.main + ' exists.');\n                        }\n                    }\n                    storage[componentType.main] = Clazz;\n                }\n                else if (componentType.sub !== IS_CONTAINER) {\n                    var container = makeContainer(componentType);\n                    container[componentType.sub] = Clazz;\n                }\n            }\n            return Clazz;\n        };\n\n        entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n            var Clazz = storage[componentMainType];\n\n            if (Clazz && Clazz[IS_CONTAINER]) {\n                Clazz = subType ? Clazz[subType] : null;\n            }\n\n            if (throwWhenNotFound && !Clazz) {\n                throw new Error(\n                    !subType\n                        ? componentMainType + '.' + 'type should be specified.'\n                        : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.'\n                );\n            }\n\n            return Clazz;\n        };\n\n        entity.getClassesByMainType = function (componentType) {\n            componentType = parseClassType(componentType);\n\n            var result = [];\n            var obj = storage[componentType.main];\n\n            if (obj && obj[IS_CONTAINER]) {\n                zrUtil.each(obj, function (o, type) {\n                    type !== IS_CONTAINER && result.push(o);\n                });\n            }\n            else {\n                result.push(obj);\n            }\n\n            return result;\n        };\n\n        entity.hasClass = function (componentType) {\n            // Just consider componentType.main.\n            componentType = parseClassType(componentType);\n            return !!storage[componentType.main];\n        };\n\n        /**\n         * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n         */\n        entity.getAllClassMainTypes = function () {\n            var types = [];\n            zrUtil.each(storage, function (obj, type) {\n                types.push(type);\n            });\n            return types;\n        };\n\n        /**\n         * If a main type is container and has sub types\n         * @param  {string}  mainType\n         * @return {boolean}\n         */\n        entity.hasSubTypes = function (componentType) {\n            componentType = parseClassType(componentType);\n            var obj = storage[componentType.main];\n            return obj && obj[IS_CONTAINER];\n        };\n\n        entity.parseClassType = parseClassType;\n\n        function makeContainer(componentType) {\n            var container = storage[componentType.main];\n            if (!container || !container[IS_CONTAINER]) {\n                container = storage[componentType.main] = {};\n                container[IS_CONTAINER] = true;\n            }\n            return container;\n        }\n\n        if (options.registerWhenExtend) {\n            var originalExtend = entity.extend;\n            if (originalExtend) {\n                entity.extend = function (proto) {\n                    var ExtendedClass = originalExtend.call(this, proto);\n                    return entity.registerClass(ExtendedClass, proto.type);\n                };\n            }\n        }\n\n        return entity;\n    };\n\n    /**\n     * @param {string|Array.<string>} properties\n     */\n    clazz.setReadOnly = function (obj, properties) {\n        // FIXME It seems broken in IE8 simulation of IE11\n        // if (!zrUtil.isArray(properties)) {\n        //     properties = properties != null ? [properties] : [];\n        // }\n        // zrUtil.each(properties, function (prop) {\n        //     var value = obj[prop];\n\n        //     Object.defineProperty\n        //         && Object.defineProperty(obj, prop, {\n        //             value: value, writable: false\n        //         });\n        //     zrUtil.isArray(obj[prop])\n        //         && Object.freeze\n        //         && Object.freeze(obj[prop]);\n        // });\n    };\n\n    module.exports = clazz;\n\n\n/***/ }),\n\n/***/ 984:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var util = __webpack_require__(970);\n    var BoundingRect = __webpack_require__(981);\n    var imageHelper = __webpack_require__(1014);\n\n    var textWidthCache = {};\n    var textWidthCacheCounter = 0;\n\n    var TEXT_CACHE_MAX = 5000;\n    var STYLE_REG = /\\{([a-zA-Z0-9_]+)\\|([^}]*)\\}/g;\n    var DEFAULT_FONT = '12px sans-serif';\n\n    var retrieve2 = util.retrieve2;\n    var retrieve3 = util.retrieve3;\n\n    /**\n     * @public\n     * @param {string} text\n     * @param {string} font\n     * @return {number} width\n     */\n    function getTextWidth(text, font) {\n        font = font || DEFAULT_FONT;\n        var key = text + ':' + font;\n        if (textWidthCache[key]) {\n            return textWidthCache[key];\n        }\n\n        var textLines = (text + '').split('\\n');\n        var width = 0;\n\n        for (var i = 0, l = textLines.length; i < l; i++) {\n            // textContain.measureText may be overrided in SVG or VML\n            width = Math.max(textContain.measureText(textLines[i], font).width, width);\n        }\n\n        if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n            textWidthCacheCounter = 0;\n            textWidthCache = {};\n        }\n        textWidthCacheCounter++;\n        textWidthCache[key] = width;\n\n        return width;\n    }\n\n    /**\n     * @public\n     * @param {string} text\n     * @param {string} font\n     * @param {string} [textAlign='left']\n     * @param {string} [textVerticalAlign='top']\n     * @param {Array.<number>} [textPadding]\n     * @param {Object} [rich]\n     * @param {Object} [truncate]\n     * @return {Object} {x, y, width, height, lineHeight}\n     */\n    function getTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n        return rich\n            ? getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate)\n            : getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate);\n    }\n\n    function getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate) {\n        var contentBlock = parsePlainText(text, font, textPadding, truncate);\n        var outerWidth = getTextWidth(text, font);\n        if (textPadding) {\n            outerWidth += textPadding[1] + textPadding[3];\n        }\n        var outerHeight = contentBlock.outerHeight;\n\n        var x = adjustTextX(0, outerWidth, textAlign);\n        var y = adjustTextY(0, outerHeight, textVerticalAlign);\n\n        var rect = new BoundingRect(x, y, outerWidth, outerHeight);\n        rect.lineHeight = contentBlock.lineHeight;\n\n        return rect;\n    }\n\n    function getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n        var contentBlock = parseRichText(text, {\n            rich: rich,\n            truncate: truncate,\n            font: font,\n            textAlign: textAlign,\n            textPadding: textPadding\n        });\n        var outerWidth = contentBlock.outerWidth;\n        var outerHeight = contentBlock.outerHeight;\n\n        var x = adjustTextX(0, outerWidth, textAlign);\n        var y = adjustTextY(0, outerHeight, textVerticalAlign);\n\n        return new BoundingRect(x, y, outerWidth, outerHeight);\n    }\n\n    /**\n     * @public\n     * @param {number} x\n     * @param {number} width\n     * @param {string} [textAlign='left']\n     * @return {number} Adjusted x.\n     */\n    function adjustTextX(x, width, textAlign) {\n        // FIXME Right to left language\n        if (textAlign === 'right') {\n            x -= width;\n        }\n        else if (textAlign === 'center') {\n            x -= width / 2;\n        }\n        return x;\n    }\n\n    /**\n     * @public\n     * @param {number} y\n     * @param {number} height\n     * @param {string} [textVerticalAlign='top']\n     * @return {number} Adjusted y.\n     */\n    function adjustTextY(y, height, textVerticalAlign) {\n        if (textVerticalAlign === 'middle') {\n            y -= height / 2;\n        }\n        else if (textVerticalAlign === 'bottom') {\n            y -= height;\n        }\n        return y;\n    }\n\n    /**\n     * @public\n     * @param {stirng} textPosition\n     * @param {Object} rect {x, y, width, height}\n     * @param {number} distance\n     * @return {Object} {x, y, textAlign, textVerticalAlign}\n     */\n    function adjustTextPositionOnRect(textPosition, rect, distance) {\n\n        var x = rect.x;\n        var y = rect.y;\n\n        var height = rect.height;\n        var width = rect.width;\n        var halfHeight = height / 2;\n\n        var textAlign = 'left';\n        var textVerticalAlign = 'top';\n\n        switch (textPosition) {\n            case 'left':\n                x -= distance;\n                y += halfHeight;\n                textAlign = 'right';\n                textVerticalAlign = 'middle';\n                break;\n            case 'right':\n                x += distance + width;\n                y += halfHeight;\n                textVerticalAlign = 'middle';\n                break;\n            case 'top':\n                x += width / 2;\n                y -= distance;\n                textAlign = 'center';\n                textVerticalAlign = 'bottom';\n                break;\n            case 'bottom':\n                x += width / 2;\n                y += height + distance;\n                textAlign = 'center';\n                break;\n            case 'inside':\n                x += width / 2;\n                y += halfHeight;\n                textAlign = 'center';\n                textVerticalAlign = 'middle';\n                break;\n            case 'insideLeft':\n                x += distance;\n                y += halfHeight;\n                textVerticalAlign = 'middle';\n                break;\n            case 'insideRight':\n                x += width - distance;\n                y += halfHeight;\n                textAlign = 'right';\n                textVerticalAlign = 'middle';\n                break;\n            case 'insideTop':\n                x += width / 2;\n                y += distance;\n                textAlign = 'center';\n                break;\n            case 'insideBottom':\n                x += width / 2;\n                y += height - distance;\n                textAlign = 'center';\n                textVerticalAlign = 'bottom';\n                break;\n            case 'insideTopLeft':\n                x += distance;\n                y += distance;\n                break;\n            case 'insideTopRight':\n                x += width - distance;\n                y += distance;\n                textAlign = 'right';\n                break;\n            case 'insideBottomLeft':\n                x += distance;\n                y += height - distance;\n                textVerticalAlign = 'bottom';\n                break;\n            case 'insideBottomRight':\n                x += width - distance;\n                y += height - distance;\n                textAlign = 'right';\n                textVerticalAlign = 'bottom';\n                break;\n        }\n\n        return {\n            x: x,\n            y: y,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    }\n\n    /**\n     * Show ellipsis if overflow.\n     *\n     * @public\n     * @param  {string} text\n     * @param  {string} containerWidth\n     * @param  {string} font\n     * @param  {number} [ellipsis='...']\n     * @param  {Object} [options]\n     * @param  {number} [options.maxIterations=3]\n     * @param  {number} [options.minChar=0] If truncate result are less\n     *                  then minChar, ellipsis will not show, which is\n     *                  better for user hint in some cases.\n     * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n     * @return {string}\n     */\n    function truncateText(text, containerWidth, font, ellipsis, options) {\n        if (!containerWidth) {\n            return '';\n        }\n\n        var textLines = (text + '').split('\\n');\n        options = prepareTruncateOptions(containerWidth, font, ellipsis, options);\n\n        // FIXME\n        // It is not appropriate that every line has '...' when truncate multiple lines.\n        for (var i = 0, len = textLines.length; i < len; i++) {\n            textLines[i] = truncateSingleLine(textLines[i], options);\n        }\n\n        return textLines.join('\\n');\n    }\n\n    function prepareTruncateOptions(containerWidth, font, ellipsis, options) {\n        options = util.extend({}, options);\n\n        options.font = font;\n        var ellipsis = retrieve2(ellipsis, '...');\n        options.maxIterations = retrieve2(options.maxIterations, 2);\n        var minChar = options.minChar = retrieve2(options.minChar, 0);\n        // FIXME\n        // Other languages?\n        options.cnCharWidth = getTextWidth('国', font);\n        // FIXME\n        // Consider proportional font?\n        var ascCharWidth = options.ascCharWidth = getTextWidth('a', font);\n        options.placeholder = retrieve2(options.placeholder, '');\n\n        // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n        // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n        var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n        for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n            contentWidth -= ascCharWidth;\n        }\n\n        var ellipsisWidth = getTextWidth(ellipsis);\n        if (ellipsisWidth > contentWidth) {\n            ellipsis = '';\n            ellipsisWidth = 0;\n        }\n\n        contentWidth = containerWidth - ellipsisWidth;\n\n        options.ellipsis = ellipsis;\n        options.ellipsisWidth = ellipsisWidth;\n        options.contentWidth = contentWidth;\n        options.containerWidth = containerWidth;\n\n        return options;\n    }\n\n    function truncateSingleLine(textLine, options) {\n        var containerWidth = options.containerWidth;\n        var font = options.font;\n        var contentWidth = options.contentWidth;\n\n        if (!containerWidth) {\n            return '';\n        }\n\n        var lineWidth = getTextWidth(textLine, font);\n\n        if (lineWidth <= containerWidth) {\n            return textLine;\n        }\n\n        for (var j = 0;; j++) {\n            if (lineWidth <= contentWidth || j >= options.maxIterations) {\n                textLine += options.ellipsis;\n                break;\n            }\n\n            var subLength = j === 0\n                ? estimateLength(textLine, contentWidth, options.ascCharWidth, options.cnCharWidth)\n                : lineWidth > 0\n                ? Math.floor(textLine.length * contentWidth / lineWidth)\n                : 0;\n\n            textLine = textLine.substr(0, subLength);\n            lineWidth = getTextWidth(textLine, font);\n        }\n\n        if (textLine === '') {\n            textLine = options.placeholder;\n        }\n\n        return textLine;\n    }\n\n    function estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n        var width = 0;\n        var i = 0;\n        for (var len = text.length; i < len && width < contentWidth; i++) {\n            var charCode = text.charCodeAt(i);\n            width += (0 <= charCode && charCode <= 127) ? ascCharWidth : cnCharWidth;\n        }\n        return i;\n    }\n\n    /**\n     * @public\n     * @param {string} font\n     * @return {number} line height\n     */\n    function getLineHeight(font) {\n        // FIXME A rough approach.\n        return getTextWidth('国', font);\n    }\n\n    /**\n     * @public\n     * @param {string} text\n     * @param {string} font\n     * @return {Object} width\n     */\n    function measureText(text, font) {\n        var ctx = util.getContext();\n        ctx.font = font || DEFAULT_FONT;\n        return ctx.measureText(text);\n    }\n\n    /**\n     * @public\n     * @param {string} text\n     * @param {string} font\n     * @param {Object} [truncate]\n     * @return {Object} block: {lineHeight, lines, height, outerHeight}\n     *  Notice: for performance, do not calculate outerWidth util needed.\n     */\n    function parsePlainText(text, font, padding, truncate) {\n        text != null && (text += '');\n\n        var lineHeight = getLineHeight(font);\n        var lines = text ? text.split('\\n') : [];\n        var height = lines.length * lineHeight;\n        var outerHeight = height;\n\n        if (padding) {\n            outerHeight += padding[0] + padding[2];\n        }\n\n        if (text && truncate) {\n            var truncOuterHeight = truncate.outerHeight;\n            var truncOuterWidth = truncate.outerWidth;\n            if (truncOuterHeight != null && outerHeight > truncOuterHeight) {\n                text = '';\n                lines = [];\n            }\n            else if (truncOuterWidth != null) {\n                var options = prepareTruncateOptions(\n                    truncOuterWidth - (padding ? padding[1] + padding[3] : 0),\n                    font,\n                    truncate.ellipsis,\n                    {minChar: truncate.minChar, placeholder: truncate.placeholder}\n                );\n\n                // FIXME\n                // It is not appropriate that every line has '...' when truncate multiple lines.\n                for (var i = 0, len = lines.length; i < len; i++) {\n                    lines[i] = truncateSingleLine(lines[i], options);\n                }\n            }\n        }\n\n        return {\n            lines: lines,\n            height: height,\n            outerHeight: outerHeight,\n            lineHeight: lineHeight\n        };\n    }\n\n    /**\n     * For example: 'some text {a|some text}other text{b|some text}xxx{c|}xxx'\n     * Also consider 'bbbb{a|xxx\\nzzz}xxxx\\naaaa'.\n     *\n     * @public\n     * @param {string} text\n     * @param {Object} style\n     * @return {Object} block\n     * {\n     *      width,\n     *      height,\n     *      lines: [{\n     *          lineHeight,\n     *          width,\n     *          tokens: [[{\n     *              styleName,\n     *              text,\n     *              width,      // include textPadding\n     *              height,     // include textPadding\n     *              textWidth, // pure text width\n     *              textHeight, // pure text height\n     *              lineHeihgt,\n     *              font,\n     *              textAlign,\n     *              textVerticalAlign\n     *          }], [...], ...]\n     *      }, ...]\n     * }\n     * If styleName is undefined, it is plain text.\n     */\n    function parseRichText(text, style) {\n        var contentBlock = {lines: [], width: 0, height: 0};\n\n        text != null && (text += '');\n        if (!text) {\n            return contentBlock;\n        }\n\n        var lastIndex = STYLE_REG.lastIndex = 0;\n        var result;\n        while ((result = STYLE_REG.exec(text)) != null)  {\n            var matchedIndex = result.index;\n            if (matchedIndex > lastIndex) {\n                pushTokens(contentBlock, text.substring(lastIndex, matchedIndex));\n            }\n            pushTokens(contentBlock, result[2], result[1]);\n            lastIndex = STYLE_REG.lastIndex;\n        }\n\n        if (lastIndex < text.length) {\n            pushTokens(contentBlock, text.substring(lastIndex, text.length));\n        }\n\n        var lines = contentBlock.lines;\n        var contentHeight = 0;\n        var contentWidth = 0;\n        // For `textWidth: 100%`\n        var pendingList = [];\n\n        var stlPadding = style.textPadding;\n\n        var truncate = style.truncate;\n        var truncateWidth = truncate && truncate.outerWidth;\n        var truncateHeight = truncate && truncate.outerHeight;\n        if (stlPadding) {\n            truncateWidth != null && (truncateWidth -= stlPadding[1] + stlPadding[3]);\n            truncateHeight != null && (truncateHeight -= stlPadding[0] + stlPadding[2]);\n        }\n\n        // Calculate layout info of tokens.\n        for (var i = 0; i < lines.length; i++) {\n            var line = lines[i];\n            var lineHeight = 0;\n            var lineWidth = 0;\n\n            for (var j = 0; j < line.tokens.length; j++) {\n                var token = line.tokens[j];\n                var tokenStyle = token.styleName && style.rich[token.styleName] || {};\n                // textPadding should not inherit from style.\n                var textPadding = token.textPadding = tokenStyle.textPadding;\n\n                // textFont has been asigned to font by `normalizeStyle`.\n                var font = token.font = tokenStyle.font || style.font;\n\n                // textHeight can be used when textVerticalAlign is specified in token.\n                var tokenHeight = token.textHeight = retrieve2(\n                    // textHeight should not be inherited, consider it can be specified\n                    // as box height of the block.\n                    tokenStyle.textHeight, textContain.getLineHeight(font)\n                );\n                textPadding && (tokenHeight += textPadding[0] + textPadding[2]);\n                token.height = tokenHeight;\n                token.lineHeight = retrieve3(\n                    tokenStyle.textLineHeight, style.textLineHeight, tokenHeight\n                );\n\n                token.textAlign = tokenStyle && tokenStyle.textAlign || style.textAlign;\n                token.textVerticalAlign = tokenStyle && tokenStyle.textVerticalAlign || 'middle';\n\n                if (truncateHeight != null && contentHeight + token.lineHeight > truncateHeight) {\n                    return {lines: [], width: 0, height: 0};\n                }\n\n                token.textWidth = textContain.getWidth(token.text, font);\n                var tokenWidth = tokenStyle.textWidth;\n                var tokenWidthNotSpecified = tokenWidth == null || tokenWidth === 'auto';\n\n                // Percent width, can be `100%`, can be used in drawing separate\n                // line when box width is needed to be auto.\n                if (typeof tokenWidth === 'string' && tokenWidth.charAt(tokenWidth.length - 1) === '%') {\n                    token.percentWidth = tokenWidth;\n                    pendingList.push(token);\n                    tokenWidth = 0;\n                    // Do not truncate in this case, because there is no user case\n                    // and it is too complicated.\n                }\n                else {\n                    if (tokenWidthNotSpecified) {\n                        tokenWidth = token.textWidth;\n\n                        // FIXME: If image is not loaded and textWidth is not specified, calling\n                        // `getBoundingRect()` will not get correct result.\n                        var textBackgroundColor = tokenStyle.textBackgroundColor;\n                        var bgImg = textBackgroundColor && textBackgroundColor.image;\n\n                        // Use cases:\n                        // (1) If image is not loaded, it will be loaded at render phase and call\n                        // `dirty()` and `textBackgroundColor.image` will be replaced with the loaded\n                        // image, and then the right size will be calculated here at the next tick.\n                        // See `graphic/helper/text.js`.\n                        // (2) If image loaded, and `textBackgroundColor.image` is image src string,\n                        // use `imageHelper.findExistImage` to find cached image.\n                        // `imageHelper.findExistImage` will always be called here before\n                        // `imageHelper.createOrUpdateImage` in `graphic/helper/text.js#renderRichText`\n                        // which ensures that image will not be rendered before correct size calcualted.\n                        if (bgImg) {\n                            bgImg = imageHelper.findExistImage(bgImg);\n                            if (imageHelper.isImageReady(bgImg)) {\n                                tokenWidth = Math.max(tokenWidth, bgImg.width * tokenHeight / bgImg.height);\n                            }\n                        }\n                    }\n\n                    var paddingW = textPadding ? textPadding[1] + textPadding[3] : 0;\n                    tokenWidth += paddingW;\n\n                    var remianTruncWidth = truncateWidth != null ? truncateWidth - lineWidth : null;\n\n                    if (remianTruncWidth != null && remianTruncWidth < tokenWidth) {\n                        if (!tokenWidthNotSpecified || remianTruncWidth < paddingW) {\n                            token.text = '';\n                            token.textWidth = tokenWidth = 0;\n                        }\n                        else {\n                            token.text = truncateText(\n                                token.text, remianTruncWidth - paddingW, font, truncate.ellipsis,\n                                {minChar: truncate.minChar}\n                            );\n                            token.textWidth = textContain.getWidth(token.text, font);\n                            tokenWidth = token.textWidth + paddingW;\n                        }\n                    }\n                }\n\n                lineWidth += (token.width = tokenWidth);\n                tokenStyle && (lineHeight = Math.max(lineHeight, token.lineHeight));\n            }\n\n            line.width = lineWidth;\n            line.lineHeight = lineHeight;\n            contentHeight += lineHeight;\n            contentWidth = Math.max(contentWidth, lineWidth);\n        }\n\n        contentBlock.outerWidth = contentBlock.width = retrieve2(style.textWidth, contentWidth);\n        contentBlock.outerHeight = contentBlock.height = retrieve2(style.textHeight, contentHeight);\n\n        if (stlPadding) {\n            contentBlock.outerWidth += stlPadding[1] + stlPadding[3];\n            contentBlock.outerHeight += stlPadding[0] + stlPadding[2];\n        }\n\n        for (var i = 0; i < pendingList.length; i++) {\n            var token = pendingList[i];\n            var percentWidth = token.percentWidth;\n            // Should not base on outerWidth, because token can not be placed out of padding.\n            token.width = parseInt(percentWidth, 10) / 100 * contentWidth;\n        }\n\n        return contentBlock;\n    }\n\n    function pushTokens(block, str, styleName) {\n        var isEmptyStr = str === '';\n        var strs = str.split('\\n');\n        var lines = block.lines;\n\n        for (var i = 0; i < strs.length; i++) {\n            var text = strs[i];\n            var token = {\n                styleName: styleName,\n                text: text,\n                isLineHolder: !text && !isEmptyStr\n            };\n\n            // The first token should be appended to the last line.\n            if (!i) {\n                var tokens = (lines[lines.length - 1] || (lines[0] = {tokens: []})).tokens;\n\n                // Consider cases:\n                // (1) ''.split('\\n') => ['', '\\n', ''], the '' at the first item\n                // (which is a placeholder) should be replaced by new token.\n                // (2) A image backage, where token likes {a|}.\n                // (3) A redundant '' will affect textAlign in line.\n                // (4) tokens with the same tplName should not be merged, because\n                // they should be displayed in different box (with border and padding).\n                var tokensLen = tokens.length;\n                (tokensLen === 1 && tokens[0].isLineHolder)\n                    ? (tokens[0] = token)\n                    // Consider text is '', only insert when it is the \"lineHolder\" or\n                    // \"emptyStr\". Otherwise a redundant '' will affect textAlign in line.\n                    : ((text || !tokensLen || isEmptyStr) && tokens.push(token));\n            }\n            // Other tokens always start a new line.\n            else {\n                // If there is '', insert it as a placeholder.\n                lines.push({tokens: [token]});\n            }\n        }\n    }\n\n    function makeFont(style) {\n        // FIXME in node-canvas fontWeight is before fontStyle\n        // Use `fontSize` `fontFamily` to check whether font properties are defined.\n        return (style.fontSize || style.fontFamily) && [\n            style.fontStyle,\n            style.fontWeight,\n            (style.fontSize || 12) + 'px',\n            // If font properties are defined, `fontFamily` should not be ignored.\n            style.fontFamily || 'sans-serif'\n        ].join(' ') || style.textFont || style.font;\n    }\n\n    var textContain = {\n\n        getWidth: getTextWidth,\n\n        getBoundingRect: getTextRect,\n\n        adjustTextPositionOnRect: adjustTextPositionOnRect,\n\n        truncateText: truncateText,\n\n        measureText: measureText,\n\n        getLineHeight: getLineHeight,\n\n        parsePlainText: parsePlainText,\n\n        parseRichText: parseRichText,\n\n        adjustTextX: adjustTextX,\n\n        adjustTextY: adjustTextY,\n\n        makeFont: makeFont,\n\n        DEFAULT_FONT: DEFAULT_FONT\n    };\n\n    module.exports = textContain;\n\n\n/***/ }),\n\n/***/ 985:\n/***/ (function(module, exports) {\n\n\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n    /**\n     * 3x2矩阵操作类\n     * @exports zrender/tool/matrix\n     */\n    var matrix = {\n        /**\n         * 创建一个单位矩阵\n         * @return {Float32Array|Array.<number>}\n         */\n        create : function() {\n            var out = new ArrayCtor(6);\n            matrix.identity(out);\n\n            return out;\n        },\n        /**\n         * 设置矩阵为单位矩阵\n         * @param {Float32Array|Array.<number>} out\n         */\n        identity : function(out) {\n            out[0] = 1;\n            out[1] = 0;\n            out[2] = 0;\n            out[3] = 1;\n            out[4] = 0;\n            out[5] = 0;\n            return out;\n        },\n        /**\n         * 复制矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m\n         */\n        copy: function(out, m) {\n            out[0] = m[0];\n            out[1] = m[1];\n            out[2] = m[2];\n            out[3] = m[3];\n            out[4] = m[4];\n            out[5] = m[5];\n            return out;\n        },\n        /**\n         * 矩阵相乘\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m1\n         * @param {Float32Array|Array.<number>} m2\n         */\n        mul : function (out, m1, m2) {\n            // Consider matrix.mul(m, m2, m);\n            // where out is the same as m2.\n            // So use temp variable to escape error.\n            var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n            var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n            var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n            var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n            var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n            var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n            out[0] = out0;\n            out[1] = out1;\n            out[2] = out2;\n            out[3] = out3;\n            out[4] = out4;\n            out[5] = out5;\n            return out;\n        },\n        /**\n         * 平移变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        translate : function(out, a, v) {\n            out[0] = a[0];\n            out[1] = a[1];\n            out[2] = a[2];\n            out[3] = a[3];\n            out[4] = a[4] + v[0];\n            out[5] = a[5] + v[1];\n            return out;\n        },\n        /**\n         * 旋转变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {number} rad\n         */\n        rotate : function(out, a, rad) {\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n            var st = Math.sin(rad);\n            var ct = Math.cos(rad);\n\n            out[0] = aa * ct + ab * st;\n            out[1] = -aa * st + ab * ct;\n            out[2] = ac * ct + ad * st;\n            out[3] = -ac * st + ct * ad;\n            out[4] = ct * atx + st * aty;\n            out[5] = ct * aty - st * atx;\n            return out;\n        },\n        /**\n         * 缩放变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        scale : function(out, a, v) {\n            var vx = v[0];\n            var vy = v[1];\n            out[0] = a[0] * vx;\n            out[1] = a[1] * vy;\n            out[2] = a[2] * vx;\n            out[3] = a[3] * vy;\n            out[4] = a[4] * vx;\n            out[5] = a[5] * vy;\n            return out;\n        },\n        /**\n         * 求逆矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         */\n        invert : function(out, a) {\n\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n\n            var det = aa * ad - ab * ac;\n            if (!det) {\n                return null;\n            }\n            det = 1.0 / det;\n\n            out[0] = ad * det;\n            out[1] = -ab * det;\n            out[2] = -ac * det;\n            out[3] = aa * det;\n            out[4] = (ac * aty - ad * atx) * det;\n            out[5] = (ab * atx - aa * aty) * det;\n            return out;\n        }\n    };\n\n    module.exports = matrix;\n\n\n\n/***/ }),\n\n/***/ 986:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {/**\n * List for data storage\n * @module echarts/data/List\n */\n\n\n    var UNDEFINED = 'undefined';\n    var globalObj = typeof window === 'undefined' ? global : window;\n    var Float64Array = typeof globalObj.Float64Array === UNDEFINED\n        ? Array : globalObj.Float64Array;\n    var Int32Array = typeof globalObj.Int32Array === UNDEFINED\n        ? Array : globalObj.Int32Array;\n\n    var dataCtors = {\n        'float': Float64Array,\n        'int': Int32Array,\n        // Ordinal data type can be string or int\n        'ordinal': Array,\n        'number': Array,\n        'time': Array\n    };\n\n    var Model = __webpack_require__(978);\n    var DataDiffer = __webpack_require__(1002);\n\n    var zrUtil = __webpack_require__(970);\n    var modelUtil = __webpack_require__(974);\n    var isObject = zrUtil.isObject;\n\n    var TRANSFERABLE_PROPERTIES = [\n        'stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'\n    ];\n\n    function transferProperties(a, b) {\n        zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n            if (b.hasOwnProperty(propName)) {\n                a[propName] = b[propName];\n            }\n        });\n\n        a.__wrappedMethods = b.__wrappedMethods;\n    }\n\n    function DefaultDataProvider(dataArray) {\n        this._array = dataArray || [];\n    }\n\n    DefaultDataProvider.prototype.pure = false;\n\n    DefaultDataProvider.prototype.count = function () {\n        return this._array.length;\n    };\n    DefaultDataProvider.prototype.getItem = function (idx) {\n        return this._array[idx];\n    };\n\n    /**\n     * @constructor\n     * @alias module:echarts/data/List\n     *\n     * @param {Array.<string|Object>} dimensions\n     *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n     *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n     * @param {module:echarts/model/Model} hostModel\n     */\n    var List = function (dimensions, hostModel) {\n\n        dimensions = dimensions || ['x', 'y'];\n\n        var dimensionInfos = {};\n        var dimensionNames = [];\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimensionName;\n            var dimensionInfo = {};\n            if (typeof dimensions[i] === 'string') {\n                dimensionName = dimensions[i];\n                dimensionInfo = {\n                    name: dimensionName,\n                    coordDim: dimensionName,\n                    coordDimIndex: 0,\n                    stackable: false,\n                    // Type can be 'float', 'int', 'number'\n                    // Default is number, Precision of float may not enough\n                    type: 'number'\n                };\n            }\n            else {\n                dimensionInfo = dimensions[i];\n                dimensionName = dimensionInfo.name;\n                dimensionInfo.type = dimensionInfo.type || 'number';\n                if (!dimensionInfo.coordDim) {\n                    dimensionInfo.coordDim = dimensionName;\n                    dimensionInfo.coordDimIndex = 0;\n                }\n            }\n            dimensionInfo.otherDims = dimensionInfo.otherDims || {};\n            dimensionNames.push(dimensionName);\n            dimensionInfos[dimensionName] = dimensionInfo;\n        }\n\n        /**\n         * @readOnly\n         * @type {Array.<string>}\n         */\n        this.dimensions = dimensionNames;\n\n        /**\n         * Infomation of each data dimension, like data type.\n         * @type {Object}\n         */\n        this._dimensionInfos = dimensionInfos;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.hostModel = hostModel;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.dataType;\n\n        /**\n         * Indices stores the indices of data subset after filtered.\n         * This data subset will be used in chart.\n         * @type {Array.<number>}\n         * @readOnly\n         */\n        this.indices = [];\n\n        /**\n         * Data storage\n         * @type {Object.<key, TypedArray|Array>}\n         * @private\n         */\n        this._storage = {};\n\n        /**\n         * @type {Array.<string>}\n         */\n        this._nameList = [];\n        /**\n         * @type {Array.<string>}\n         */\n        this._idList = [];\n\n        /**\n         * Models of data option is stored sparse for optimizing memory cost\n         * @type {Array.<module:echarts/model/Model>}\n         * @private\n         */\n        this._optionModels = [];\n\n        /**\n         * @param {module:echarts/data/List}\n         */\n        this.stackedOn = null;\n\n        /**\n         * Global visual properties after visual coding\n         * @type {Object}\n         * @private\n         */\n        this._visual = {};\n\n        /**\n         * Globel layout properties.\n         * @type {Object}\n         * @private\n         */\n        this._layout = {};\n\n        /**\n         * Item visual properties after visual coding\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemVisuals = [];\n\n        /**\n         * Item layout properties after layout\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemLayouts = [];\n\n        /**\n         * Graphic elemnents\n         * @type {Array.<module:zrender/Element>}\n         * @private\n         */\n        this._graphicEls = [];\n\n        /**\n         * @type {Array.<Array|Object>}\n         * @private\n         */\n        this._rawData;\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._extent;\n    };\n\n    var listProto = List.prototype;\n\n    listProto.type = 'list';\n\n    /**\n     * If each data item has it's own option\n     * @type {boolean}\n     */\n    listProto.hasItemOption = true;\n\n    /**\n     * Get dimension name\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     * @return {string} Concrete dim name.\n     */\n    listProto.getDimension = function (dim) {\n        if (!isNaN(dim)) {\n            dim = this.dimensions[dim] || dim;\n        }\n        return dim;\n    };\n\n    /**\n     * Get type and stackable info of particular dimension\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     */\n    listProto.getDimensionInfo = function (dim) {\n        return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);\n    };\n\n    /**\n     * Initialize from data\n     * @param {Array.<Object|number|Array>} data\n     * @param {Array.<string>} [nameList]\n     * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n     */\n    listProto.initData = function (data, nameList, dimValueGetter) {\n        data = data || [];\n\n        var isDataArray = zrUtil.isArray(data);\n        if (isDataArray) {\n            data = new DefaultDataProvider(data);\n        }\n        if (__DEV__) {\n            if (!isDataArray && (typeof data.getItem != 'function' || typeof data.count != 'function')) {\n                throw new Error('Inavlid data provider.');\n            }\n        }\n\n        this._rawData = data;\n\n        // Clear\n        var storage = this._storage = {};\n        var indices = this.indices = [];\n\n        var dimensions = this.dimensions;\n        var dimensionInfoMap = this._dimensionInfos;\n\n        var size = data.count();\n\n        var idList = [];\n        var nameRepeatCount = {};\n        var nameDimIdx;\n\n        nameList = nameList || [];\n\n        // Init storage\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimInfo = dimensionInfoMap[dimensions[i]];\n            dimInfo.otherDims.itemName === 0 && (nameDimIdx = i);\n            var DataCtor = dataCtors[dimInfo.type];\n            storage[dimensions[i]] = new DataCtor(size);\n        }\n\n        var self = this;\n        if (!dimValueGetter) {\n            self.hasItemOption = false;\n        }\n        // Default dim value getter\n        dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {\n            var value = modelUtil.getDataItemValue(dataItem);\n            // If any dataItem is like { value: 10 }\n            if (modelUtil.isDataItemOption(dataItem)) {\n                self.hasItemOption = true;\n            }\n            return modelUtil.converDataValue(\n                (value instanceof Array)\n                    ? value[dimIndex]\n                    // If value is a single number or something else not array.\n                    : value,\n                dimensionInfoMap[dimName]\n            );\n        };\n\n        for (var i = 0; i < size; i++) {\n            // NOTICE: Try not to write things into dataItem\n            var dataItem = data.getItem(i);\n            // Each data item is value\n            // [1, 2]\n            // 2\n            // Bar chart, line chart which uses category axis\n            // only gives the 'y' value. 'x' value is the indices of cateogry\n            // Use a tempValue to normalize the value to be a (x, y) value\n\n            // Store the data by dimensions\n            for (var k = 0; k < dimensions.length; k++) {\n                var dim = dimensions[k];\n                var dimStorage = storage[dim];\n                // PENDING NULL is empty or zero\n                dimStorage[i] = dimValueGetter(dataItem, dim, i, k);\n            }\n\n            indices.push(i);\n        }\n\n        // Use the name in option and create id\n        for (var i = 0; i < size; i++) {\n            var dataItem = data.getItem(i);\n            if (!nameList[i] && dataItem) {\n                if (dataItem.name != null) {\n                    nameList[i] = dataItem.name;\n                }\n                else if (nameDimIdx != null) {\n                    nameList[i] = storage[dimensions[nameDimIdx]][i];\n                }\n            }\n            var name = nameList[i] || '';\n            // Try using the id in option\n            var id = dataItem && dataItem.id;\n\n            if (!id && name) {\n                // Use name as id and add counter to avoid same name\n                nameRepeatCount[name] = nameRepeatCount[name] || 0;\n                id = name;\n                if (nameRepeatCount[name] > 0) {\n                    id += '__ec__' + nameRepeatCount[name];\n                }\n                nameRepeatCount[name]++;\n            }\n            id && (idList[i] = id);\n        }\n\n        this._nameList = nameList;\n        this._idList = idList;\n    };\n\n    /**\n     * @return {number}\n     */\n    listProto.count = function () {\n        return this.indices.length;\n    };\n\n    /**\n     * Get value. Return NaN if idx is out of range.\n     * @param {string} dim Dim must be concrete name.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.get = function (dim, idx, stack) {\n        var storage = this._storage;\n        var dataIndex = this.indices[idx];\n\n        // If value not exists\n        if (dataIndex == null || !storage[dim]) {\n            return NaN;\n        }\n\n        var value = storage[dim][dataIndex];\n        // FIXME ordinal data type is not stackable\n        if (stack) {\n            var dimensionInfo = this._dimensionInfos[dim];\n            if (dimensionInfo && dimensionInfo.stackable) {\n                var stackedOn = this.stackedOn;\n                while (stackedOn) {\n                    // Get no stacked data of stacked on\n                    var stackedValue = stackedOn.get(dim, idx);\n                    // Considering positive stack, negative stack and empty data\n                    if ((value >= 0 && stackedValue > 0)  // Positive stack\n                        || (value <= 0 && stackedValue < 0) // Negative stack\n                    ) {\n                        value += stackedValue;\n                    }\n                    stackedOn = stackedOn.stackedOn;\n                }\n            }\n        }\n        return value;\n    };\n\n    /**\n     * Get value for multi dimensions.\n     * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.getValues = function (dimensions, idx, stack) {\n        var values = [];\n\n        if (!zrUtil.isArray(dimensions)) {\n            stack = idx;\n            idx = dimensions;\n            dimensions = this.dimensions;\n        }\n\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            values.push(this.get(dimensions[i], idx, stack));\n        }\n\n        return values;\n    };\n\n    /**\n     * If value is NaN. Inlcuding '-'\n     * @param {string} dim\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.hasValue = function (idx) {\n        var dimensions = this.dimensions;\n        var dimensionInfos = this._dimensionInfos;\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            if (\n                // Ordinal type can be string or number\n                dimensionInfos[dimensions[i]].type !== 'ordinal'\n                && isNaN(this.get(dimensions[i], idx))\n            ) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    /**\n     * Get extent of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     * @param {Function} filter\n     */\n    listProto.getDataExtent = function (dim, stack, filter) {\n        dim = this.getDimension(dim);\n        var dimData = this._storage[dim];\n        var dimInfo = this.getDimensionInfo(dim);\n        stack = (dimInfo && dimInfo.stackable) && stack;\n        var dimExtent = (this._extent || (this._extent = {}))[dim + (!!stack)];\n        var value;\n        if (dimExtent) {\n            return dimExtent;\n        }\n        // var dimInfo = this._dimensionInfos[dim];\n        if (dimData) {\n            var min = Infinity;\n            var max = -Infinity;\n            // var isOrdinal = dimInfo.type === 'ordinal';\n            for (var i = 0, len = this.count(); i < len; i++) {\n                value = this.get(dim, i, stack);\n                // FIXME\n                // if (isOrdinal && typeof value === 'string') {\n                //     value = zrUtil.indexOf(dimData, value);\n                // }\n                if (!filter || filter(value, dim, i)) {\n                    value < min && (min = value);\n                    value > max && (max = value);\n                }\n            }\n            return (this._extent[dim + !!stack] = [min, max]);\n        }\n        else {\n            return [Infinity, -Infinity];\n        }\n    };\n\n    /**\n     * Get sum of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     */\n    listProto.getSum = function (dim, stack) {\n        var dimData = this._storage[dim];\n        var sum = 0;\n        if (dimData) {\n            for (var i = 0, len = this.count(); i < len; i++) {\n                var value = this.get(dim, i, stack);\n                if (!isNaN(value)) {\n                    sum += value;\n                }\n            }\n        }\n        return sum;\n    };\n\n    /**\n     * Retreive the index with given value\n     * @param {number} idx\n     * @param {number} value\n     * @return {number}\n     */\n    // FIXME Precision of float value\n    listProto.indexOf = function (dim, value) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var indices = this.indices;\n\n        if (dimData) {\n            for (var i = 0, len = indices.length; i < len; i++) {\n                var rawIndex = indices[i];\n                if (dimData[rawIndex] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given name\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfName = function (name) {\n        var indices = this.indices;\n        var nameList = this._nameList;\n\n        for (var i = 0, len = indices.length; i < len; i++) {\n            var rawIndex = indices[i];\n            if (nameList[rawIndex] === name) {\n                return i;\n            }\n        }\n\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given raw data index\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfRawIndex = function (rawIndex) {\n        // Indices are ascending\n        var indices = this.indices;\n\n        // If rawIndex === dataIndex\n        var rawDataIndex = indices[rawIndex];\n        if (rawDataIndex != null && rawDataIndex === rawIndex) {\n            return rawIndex;\n        }\n\n        var left = 0;\n        var right = indices.length - 1;\n        while (left <= right) {\n            var mid = (left + right) / 2 | 0;\n            if (indices[mid] < rawIndex) {\n                left = mid + 1;\n            }\n            else if (indices[mid] > rawIndex) {\n                right = mid - 1;\n            }\n            else {\n                return mid;\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index of nearest value\n     * @param {string} dim\n     * @param {number} value\n     * @param {boolean} stack If given value is after stacked\n     * @param {number} [maxDistance=Infinity]\n     * @return {Array.<number>} Considere multiple points has the same value.\n     */\n    listProto.indicesOfNearest = function (dim, value, stack, maxDistance) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var nearestIndices = [];\n\n        if (!dimData) {\n            return nearestIndices;\n        }\n\n        if (maxDistance == null) {\n            maxDistance = Infinity;\n        }\n\n        var minDist = Number.MAX_VALUE;\n        var minDiff = -1;\n        for (var i = 0, len = this.count(); i < len; i++) {\n            var diff = value - this.get(dim, i, stack);\n            var dist = Math.abs(diff);\n            if (diff <= maxDistance && dist <= minDist) {\n                // For the case of two data are same on xAxis, which has sequence data.\n                // Show the nearest index\n                // https://github.com/ecomfe/echarts/issues/2869\n                if (dist < minDist || (diff >= 0 && minDiff < 0)) {\n                    minDist = dist;\n                    minDiff = diff;\n                    nearestIndices.length = 0;\n                }\n                nearestIndices.push(i);\n            }\n        }\n        return nearestIndices;\n    };\n\n    /**\n     * Get raw data index\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawIndex = function (idx) {\n        var rawIdx = this.indices[idx];\n        return rawIdx == null ? -1 : rawIdx;\n    };\n\n    /**\n     * Get raw data item\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawDataItem = function (idx) {\n        return this._rawData.getItem(this.getRawIndex(idx));\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getName = function (idx) {\n        return this._nameList[this.indices[idx]] || '';\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getId = function (idx) {\n        return this._idList[this.indices[idx]] || (this.getRawIndex(idx) + '');\n    };\n\n\n    function normalizeDimensions(dimensions) {\n        if (!zrUtil.isArray(dimensions)) {\n            dimensions = [dimensions];\n        }\n        return dimensions;\n    }\n\n    /**\n     * Data iteration\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     *\n     * @example\n     *  list.each('x', function (x, idx) {});\n     *  list.each(['x', 'y'], function (x, y, idx) {});\n     *  list.each(function (idx) {})\n     */\n    listProto.each = function (dims, cb, stack, context) {\n        if (typeof dims === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dims;\n            dims = [];\n        }\n\n        dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n\n        var value = [];\n        var dimSize = dims.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            // Simple optimization\n            switch (dimSize) {\n                case 0:\n                    cb.call(context, i);\n                    break;\n                case 1:\n                    cb.call(context, this.get(dims[0], i, stack), i);\n                    break;\n                case 2:\n                    cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n                    break;\n                default:\n                    for (var k = 0; k < dimSize; k++) {\n                        value[k] = this.get(dims[k], i, stack);\n                    }\n                    // Index\n                    value[k] = i;\n                    cb.apply(context, value);\n            }\n        }\n    };\n\n    /**\n     * Data filter\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     */\n    listProto.filterSelf = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var newIndices = [];\n        var value = [];\n        var dimSize = dimensions.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            var keep;\n            // Simple optimization\n            if (!dimSize) {\n                keep = cb.call(context, i);\n            }\n            else if (dimSize === 1) {\n                keep = cb.call(\n                    context, this.get(dimensions[0], i, stack), i\n                );\n            }\n            else {\n                for (var k = 0; k < dimSize; k++) {\n                    value[k] = this.get(dimensions[k], i, stack);\n                }\n                value[k] = i;\n                keep = cb.apply(context, value);\n            }\n            if (keep) {\n                newIndices.push(indices[i]);\n            }\n        }\n\n        this.indices = newIndices;\n\n        // Reset data extent\n        this._extent = {};\n\n        return this;\n    };\n\n    /**\n     * Data mapping to a plain array\n     * @param {string|Array.<string>} [dimensions]\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.mapArray = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        var result = [];\n        this.each(dimensions, function () {\n            result.push(cb && cb.apply(this, arguments));\n        }, stack, context);\n        return result;\n    };\n\n    function cloneListForMapAndSample(original, excludeDimensions) {\n        var allDimensions = original.dimensions;\n        var list = new List(\n            zrUtil.map(allDimensions, original.getDimensionInfo, original),\n            original.hostModel\n        );\n        // FIXME If needs stackedOn, value may already been stacked\n        transferProperties(list, original);\n\n        var storage = list._storage = {};\n        var originalStorage = original._storage;\n        // Init storage\n        for (var i = 0; i < allDimensions.length; i++) {\n            var dim = allDimensions[i];\n            var dimStore = originalStorage[dim];\n            if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n                storage[dim] = new dimStore.constructor(\n                    originalStorage[dim].length\n                );\n            }\n            else {\n                // Direct reference for other dimensions\n                storage[dim] = originalStorage[dim];\n            }\n        }\n        return list;\n    }\n\n    /**\n     * Data mapping to a new List with given dimensions\n     * @param {string|Array.<string>} dimensions\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.map = function (dimensions, cb, stack, context) {\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var list = cloneListForMapAndSample(this, dimensions);\n        // Following properties are all immutable.\n        // So we can reference to the same value\n        var indices = list.indices = this.indices;\n\n        var storage = list._storage;\n\n        var tmpRetValue = [];\n        this.each(dimensions, function () {\n            var idx = arguments[arguments.length - 1];\n            var retValue = cb && cb.apply(this, arguments);\n            if (retValue != null) {\n                // a number\n                if (typeof retValue === 'number') {\n                    tmpRetValue[0] = retValue;\n                    retValue = tmpRetValue;\n                }\n                for (var i = 0; i < retValue.length; i++) {\n                    var dim = dimensions[i];\n                    var dimStore = storage[dim];\n                    var rawIdx = indices[idx];\n                    if (dimStore) {\n                        dimStore[rawIdx] = retValue[i];\n                    }\n                }\n            }\n        }, stack, context);\n\n        return list;\n    };\n\n    /**\n     * Large data down sampling on given dimension\n     * @param {string} dimension\n     * @param {number} rate\n     * @param {Function} sampleValue\n     * @param {Function} sampleIndex Sample index for name and id\n     */\n    listProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n        var list = cloneListForMapAndSample(this, [dimension]);\n        var storage = this._storage;\n        var targetStorage = list._storage;\n\n        var originalIndices = this.indices;\n        var indices = list.indices = [];\n\n        var frameValues = [];\n        var frameIndices = [];\n        var frameSize = Math.floor(1 / rate);\n\n        var dimStore = targetStorage[dimension];\n        var len = this.count();\n        // Copy data from original data\n        for (var i = 0; i < storage[dimension].length; i++) {\n            targetStorage[dimension][i] = storage[dimension][i];\n        }\n        for (var i = 0; i < len; i += frameSize) {\n            // Last frame\n            if (frameSize > len - i) {\n                frameSize = len - i;\n                frameValues.length = frameSize;\n            }\n            for (var k = 0; k < frameSize; k++) {\n                var idx = originalIndices[i + k];\n                frameValues[k] = dimStore[idx];\n                frameIndices[k] = idx;\n            }\n            var value = sampleValue(frameValues);\n            var idx = frameIndices[sampleIndex(frameValues, value) || 0];\n            // Only write value on the filtered data\n            dimStore[idx] = value;\n            indices.push(idx);\n        }\n\n        return list;\n    };\n\n    /**\n     * Get model of one data item.\n     *\n     * @param {number} idx\n     */\n    // FIXME Model proxy ?\n    listProto.getItemModel = function (idx) {\n        var hostModel = this.hostModel;\n        idx = this.indices[idx];\n        return new Model(this._rawData.getItem(idx), hostModel, hostModel && hostModel.ecModel);\n    };\n\n    /**\n     * Create a data differ\n     * @param {module:echarts/data/List} otherList\n     * @return {module:echarts/data/DataDiffer}\n     */\n    listProto.diff = function (otherList) {\n        var idList = this._idList;\n        var otherIdList = otherList && otherList._idList;\n        var val;\n        // Use prefix to avoid index to be the same as otherIdList[idx],\n        // which will cause weird udpate animation.\n        var prefix = 'e\\0\\0';\n\n        return new DataDiffer(\n            otherList ? otherList.indices : [],\n            this.indices,\n            function (idx) {\n                return (val = otherIdList[idx]) != null ? val : prefix + idx;\n            },\n            function (idx) {\n                return (val = idList[idx]) != null ? val : prefix + idx;\n            }\n        );\n    };\n    /**\n     * Get visual property.\n     * @param {string} key\n     */\n    listProto.getVisual = function (key) {\n        var visual = this._visual;\n        return visual && visual[key];\n    };\n\n    /**\n     * Set visual property\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setVisual('color', color);\n     *  setVisual({\n     *      'color': color\n     *  });\n     */\n    listProto.setVisual = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setVisual(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._visual = this._visual || {};\n        this._visual[key] = val;\n    };\n\n    /**\n     * Set layout property.\n     * @param {string|Object} key\n     * @param {*} [val]\n     */\n    listProto.setLayout = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setLayout(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._layout[key] = val;\n    };\n\n    /**\n     * Get layout property.\n     * @param  {string} key.\n     * @return {*}\n     */\n    listProto.getLayout = function (key) {\n        return this._layout[key];\n    };\n\n    /**\n     * Get layout of single data item\n     * @param {number} idx\n     */\n    listProto.getItemLayout = function (idx) {\n        return this._itemLayouts[idx];\n    };\n\n    /**\n     * Set layout of single data item\n     * @param {number} idx\n     * @param {Object} layout\n     * @param {boolean=} [merge=false]\n     */\n    listProto.setItemLayout = function (idx, layout, merge) {\n        this._itemLayouts[idx] = merge\n            ? zrUtil.extend(this._itemLayouts[idx] || {}, layout)\n            : layout;\n    };\n\n    /**\n     * Clear all layout of single data item\n     */\n    listProto.clearItemLayouts = function () {\n        this._itemLayouts.length = 0;\n    };\n\n    /**\n     * Get visual property of single data item\n     * @param {number} idx\n     * @param {string} key\n     * @param {boolean} [ignoreParent=false]\n     */\n    listProto.getItemVisual = function (idx, key, ignoreParent) {\n        var itemVisual = this._itemVisuals[idx];\n        var val = itemVisual && itemVisual[key];\n        if (val == null && !ignoreParent) {\n            // Use global visual property\n            return this.getVisual(key);\n        }\n        return val;\n    };\n\n    /**\n     * Set visual property of single data item\n     *\n     * @param {number} idx\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setItemVisual(0, 'color', color);\n     *  setItemVisual(0, {\n     *      'color': color\n     *  });\n     */\n    listProto.setItemVisual = function (idx, key, value) {\n        var itemVisual = this._itemVisuals[idx] || {};\n        this._itemVisuals[idx] = itemVisual;\n\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    itemVisual[name] = key[name];\n                }\n            }\n            return;\n        }\n        itemVisual[key] = value;\n    };\n\n    /**\n     * Clear itemVisuals and list visual.\n     */\n    listProto.clearAllVisual = function () {\n        this._visual = {};\n        this._itemVisuals = [];\n    };\n\n    var setItemDataAndSeriesIndex = function (child) {\n        child.seriesIndex = this.seriesIndex;\n        child.dataIndex = this.dataIndex;\n        child.dataType = this.dataType;\n    };\n    /**\n     * Set graphic element relative to data. It can be set as null\n     * @param {number} idx\n     * @param {module:zrender/Element} [el]\n     */\n    listProto.setItemGraphicEl = function (idx, el) {\n        var hostModel = this.hostModel;\n\n        if (el) {\n            // Add data index and series index for indexing the data by element\n            // Useful in tooltip\n            el.dataIndex = idx;\n            el.dataType = this.dataType;\n            el.seriesIndex = hostModel && hostModel.seriesIndex;\n            if (el.type === 'group') {\n                el.traverse(setItemDataAndSeriesIndex, el);\n            }\n        }\n\n        this._graphicEls[idx] = el;\n    };\n\n    /**\n     * @param {number} idx\n     * @return {module:zrender/Element}\n     */\n    listProto.getItemGraphicEl = function (idx) {\n        return this._graphicEls[idx];\n    };\n\n    /**\n     * @param {Function} cb\n     * @param {*} context\n     */\n    listProto.eachItemGraphicEl = function (cb, context) {\n        zrUtil.each(this._graphicEls, function (el, idx) {\n            if (el) {\n                cb && cb.call(context, el, idx);\n            }\n        });\n    };\n\n    /**\n     * Shallow clone a new list except visual and layout properties, and graph elements.\n     * New list only change the indices.\n     */\n    listProto.cloneShallow = function () {\n        var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n        var list = new List(dimensionInfoList, this.hostModel);\n\n        // FIXME\n        list._storage = this._storage;\n\n        transferProperties(list, this);\n\n\n        // Clone will not change the data extent and indices\n        list.indices = this.indices.slice();\n\n        if (this._extent) {\n            list._extent = zrUtil.extend({}, this._extent);\n        }\n\n        return list;\n    };\n\n    /**\n     * Wrap some method to add more feature\n     * @param {string} methodName\n     * @param {Function} injectFunction\n     */\n    listProto.wrapMethod = function (methodName, injectFunction) {\n        var originalMethod = this[methodName];\n        if (typeof originalMethod !== 'function') {\n            return;\n        }\n        this.__wrappedMethods = this.__wrappedMethods || [];\n        this.__wrappedMethods.push(methodName);\n        this[methodName] = function () {\n            var res = originalMethod.apply(this, arguments);\n            return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n        };\n    };\n\n    // Methods that create a new list based on this list should be listed here.\n    // Notice that those method should `RETURN` the new list.\n    listProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map'];\n    // Methods that change indices of this list should be listed here.\n    listProto.CHANGABLE_METHODS = ['filterSelf'];\n\n    module.exports = List;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(24)))\n\n/***/ }),\n\n/***/ 987:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var OrdinalScale = __webpack_require__(1120);\n    var IntervalScale = __webpack_require__(1011);\n    __webpack_require__(1121);\n    __webpack_require__(1122);\n    var Scale = __webpack_require__(1003);\n\n    var numberUtil = __webpack_require__(973);\n    var zrUtil = __webpack_require__(970);\n    var textContain = __webpack_require__(984);\n    var axisHelper = {};\n\n    /**\n     * Get axis scale extent before niced.\n     * Item of returned array can only be number (including Infinity and NaN).\n     */\n    axisHelper.getScaleExtent = function (scale, model) {\n        var scaleType = scale.type;\n\n        var min = model.getMin();\n        var max = model.getMax();\n        var fixMin = min != null;\n        var fixMax = max != null;\n        var originalExtent = scale.getExtent();\n\n        var axisDataLen;\n        var boundaryGap;\n        var span;\n        if (scaleType === 'ordinal') {\n            axisDataLen = (model.get('data') || []).length;\n        }\n        else {\n            boundaryGap = model.get('boundaryGap');\n            if (!zrUtil.isArray(boundaryGap)) {\n                boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n            }\n            if (typeof boundaryGap[0] === 'boolean') {\n                if (__DEV__) {\n                    console.warn('Boolean type for boundaryGap is only '\n                        + 'allowed for ordinal axis. Please use string in '\n                        + 'percentage instead, e.g., \"20%\". Currently, '\n                        + 'boundaryGap is set to be 0.');\n                }\n                boundaryGap = [0, 0];\n            }\n            boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n            boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n            span = (originalExtent[1] - originalExtent[0])\n                || Math.abs(originalExtent[0]);\n        }\n\n        // Notice: When min/max is not set (that is, when there are null/undefined,\n        // which is the most common case), these cases should be ensured:\n        // (1) For 'ordinal', show all axis.data.\n        // (2) For others:\n        //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n        //      disabled).\n        //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n        //      be the result that originalExtent enlarged by boundaryGap.\n        // (3) If no data, it should be ensured that `scale.setBlank` is set.\n\n        // FIXME\n        // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\n        // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\n        // that the results processed by boundaryGap are positive/negative?\n\n        if (min == null) {\n            min = scaleType === 'ordinal'\n                ? (axisDataLen ? 0 : NaN)\n                : originalExtent[0] - boundaryGap[0] * span;\n        }\n        if (max == null) {\n            max = scaleType === 'ordinal'\n                ? (axisDataLen ? axisDataLen - 1 : NaN)\n                : originalExtent[1] + boundaryGap[1] * span;\n        }\n\n        if (min === 'dataMin') {\n            min = originalExtent[0];\n        }\n        else if (typeof min === 'function') {\n            min = min({\n                min: originalExtent[0],\n                max: originalExtent[1]\n            });\n        }\n\n        if (max === 'dataMax') {\n            max = originalExtent[1];\n        }\n        else if (typeof max === 'function') {\n            max = max({\n                min: originalExtent[0],\n                max: originalExtent[1]\n            });\n        }\n\n        (min == null || !isFinite(min)) && (min = NaN);\n        (max == null || !isFinite(max)) && (max = NaN);\n\n        scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max));\n\n        // Evaluate if axis needs cross zero\n        if (model.getNeedCrossZero()) {\n            // Axis is over zero and min is not set\n            if (min > 0 && max > 0 && !fixMin) {\n                min = 0;\n            }\n            // Axis is under zero and max is not set\n            if (min < 0 && max < 0 && !fixMax) {\n                max = 0;\n            }\n        }\n\n        return [min, max];\n    };\n\n    axisHelper.niceScaleExtent = function (scale, model) {\n        var extent = axisHelper.getScaleExtent(scale, model);\n        var fixMin = model.getMin() != null;\n        var fixMax = model.getMax() != null;\n        var splitNumber = model.get('splitNumber');\n\n        if (scale.type === 'log') {\n            scale.base = model.get('logBase');\n        }\n\n        var scaleType = scale.type;\n        scale.setExtent(extent[0], extent[1]);\n        scale.niceExtent({\n            splitNumber: splitNumber,\n            fixMin: fixMin,\n            fixMax: fixMax,\n            minInterval: (scaleType === 'interval' || scaleType === 'time')\n                ? model.get('minInterval') : null,\n            maxInterval: (scaleType === 'interval' || scaleType === 'time')\n                ? model.get('maxInterval') : null\n        });\n\n        // If some one specified the min, max. And the default calculated interval\n        // is not good enough. He can specify the interval. It is often appeared\n        // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n        // to be 60.\n        // FIXME\n        var interval = model.get('interval');\n        if (interval != null) {\n            scale.setInterval && scale.setInterval(interval);\n        }\n    };\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @param {string} [axisType] Default retrieve from model.type\n     * @return {module:echarts/scale/*}\n     */\n    axisHelper.createScaleByModel = function(model, axisType) {\n        axisType = axisType || model.get('type');\n        if (axisType) {\n            switch (axisType) {\n                // Buildin scale\n                case 'category':\n                    return new OrdinalScale(\n                        model.getCategories(), [Infinity, -Infinity]\n                    );\n                case 'value':\n                    return new IntervalScale();\n                // Extended scale, like time and log\n                default:\n                    return (Scale.getClass(axisType) || IntervalScale).create(model);\n            }\n        }\n    };\n\n    /**\n     * Check if the axis corss 0\n     */\n    axisHelper.ifAxisCrossZero = function (axis) {\n        var dataExtent = axis.scale.getExtent();\n        var min = dataExtent[0];\n        var max = dataExtent[1];\n        return !((min > 0 && max > 0) || (min < 0 && max < 0));\n    };\n\n    /**\n     * @param {Array.<number>} tickCoords In axis self coordinate.\n     * @param {Array.<string>} labels\n     * @param {string} font\n     * @param {boolean} isAxisHorizontal\n     * @return {number}\n     */\n    axisHelper.getAxisLabelInterval = function (tickCoords, labels, font, isAxisHorizontal) {\n        // FIXME\n        // 不同角的axis和label，不只是horizontal和vertical.\n\n        var textSpaceTakenRect;\n        var autoLabelInterval = 0;\n        var accumulatedLabelInterval = 0;\n\n        var step = 1;\n        if (labels.length > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.floor(labels.length / 40);\n        }\n\n        for (var i = 0; i < tickCoords.length; i += step) {\n            var tickCoord = tickCoords[i];\n            var rect = textContain.getBoundingRect(\n                labels[i], font, 'center', 'top'\n            );\n            rect[isAxisHorizontal ? 'x' : 'y'] += tickCoord;\n            // FIXME Magic number 1.5\n            rect[isAxisHorizontal ? 'width' : 'height'] *= 1.3;\n            if (!textSpaceTakenRect) {\n                textSpaceTakenRect = rect.clone();\n            }\n            // There is no space for current label;\n            else if (textSpaceTakenRect.intersect(rect)) {\n                accumulatedLabelInterval++;\n                autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n            }\n            else {\n                textSpaceTakenRect.union(rect);\n                // Reset\n                accumulatedLabelInterval = 0;\n            }\n        }\n        if (autoLabelInterval === 0 && step > 1) {\n            return step;\n        }\n        return (autoLabelInterval + 1) * step - 1;\n    };\n\n    /**\n     * @param {Object} axis\n     * @param {Function} labelFormatter\n     * @return {Array.<string>}\n     */\n    axisHelper.getFormattedLabels = function (axis, labelFormatter) {\n        var scale = axis.scale;\n        var labels = scale.getTicksLabels();\n        var ticks = scale.getTicks();\n        if (typeof labelFormatter === 'string') {\n            labelFormatter = (function (tpl) {\n                return function (val) {\n                    return tpl.replace('{value}', val != null ? val : '');\n                };\n            })(labelFormatter);\n            // Consider empty array\n            return zrUtil.map(labels, labelFormatter);\n        }\n        else if (typeof labelFormatter === 'function') {\n            return zrUtil.map(ticks, function (tick, idx) {\n                return labelFormatter(\n                    axisHelper.getAxisRawValue(axis, tick),\n                    idx\n                );\n            }, this);\n        }\n        else {\n            return labels;\n        }\n    };\n\n    axisHelper.getAxisRawValue = function (axis, value) {\n        // In category axis with data zoom, tick is not the original\n        // index of axis.data. So tick should not be exposed to user\n        // in category axis.\n        return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n    };\n\n    module.exports = axisHelper;\n\n\n/***/ }),\n\n/***/ 988:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var features = {};\n\n    module.exports = {\n        register: function (name, ctor) {\n            features[name] = ctor;\n        },\n\n        get: function (name) {\n            return features[name];\n        }\n    };\n\n\n/***/ }),\n\n/***/ 989:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n\n    var Eventful = __webpack_require__(991);\n    var env = __webpack_require__(977);\n\n    var isDomLevel2 = (typeof window !== 'undefined') && !!window.addEventListener;\n\n    var MOUSE_EVENT_REG = /^(?:mouse|pointer|contextmenu|drag|drop)|click/;\n\n    function getBoundingClientRect(el) {\n        // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n        return el.getBoundingClientRect ? el.getBoundingClientRect() : {left: 0, top: 0};\n    }\n\n    // `calculate` is optional, default false\n    function clientToLocal(el, e, out, calculate) {\n        out = out || {};\n\n        // According to the W3C Working Draft, offsetX and offsetY should be relative\n        // to the padding edge of the target element. The only browser using this convention\n        // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n        // not support the properties.\n        // (see http://www.jacklmoore.com/notes/mouse-position/)\n        // In zr painter.dom, padding edge equals to border edge.\n\n        // FIXME\n        // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n        // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n        // is too complex. So css-transfrom dont support in this case temporarily.\n        if (calculate || !env.canvasSupported) {\n            defaultGetZrXY(el, e, out);\n        }\n        // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n        // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n        // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n        // zoom-factor, overflow / opacity layers, transforms ...)\n        // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n        // <https://bugs.jquery.com/ticket/8523#comment:14>\n        // BTW3, In ff, offsetX/offsetY is always 0.\n        else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n            out.zrX = e.layerX;\n            out.zrY = e.layerY;\n        }\n        // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n        else if (e.offsetX != null) {\n            out.zrX = e.offsetX;\n            out.zrY = e.offsetY;\n        }\n        // For some other device, e.g., IOS safari.\n        else {\n            defaultGetZrXY(el, e, out);\n        }\n\n        return out;\n    }\n\n    function defaultGetZrXY(el, e, out) {\n        // This well-known method below does not support css transform.\n        var box = getBoundingClientRect(el);\n        out.zrX = e.clientX - box.left;\n        out.zrY = e.clientY - box.top;\n    }\n\n    /**\n     * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n     * `calculate` is optional, default false.\n     */\n    function normalizeEvent(el, e, calculate) {\n\n        e = e || window.event;\n\n        if (e.zrX != null) {\n            return e;\n        }\n\n        var eventType = e.type;\n        var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n        if (!isTouch) {\n            clientToLocal(el, e, e, calculate);\n            e.zrDelta = (e.wheelDelta) ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n        }\n        else {\n            var touch = eventType != 'touchend'\n                ? e.targetTouches[0]\n                : e.changedTouches[0];\n            touch && clientToLocal(el, touch, e, calculate);\n        }\n\n        // Add which for click: 1 === left; 2 === middle; 3 === right; otherwise: 0;\n        // See jQuery: https://github.com/jquery/jquery/blob/master/src/event.js\n        // If e.which has been defined, if may be readonly,\n        // see: https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/which\n        var button = e.button;\n        if (e.which == null && button !== undefined && MOUSE_EVENT_REG.test(e.type)) {\n            e.which = (button & 1 ? 1 : (button & 2 ? 3 : (button & 4 ? 2 : 0)));\n        }\n\n        return e;\n    }\n\n    function addEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.addEventListener(name, handler);\n        }\n        else {\n            el.attachEvent('on' + name, handler);\n        }\n    }\n\n    function removeEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.removeEventListener(name, handler);\n        }\n        else {\n            el.detachEvent('on' + name, handler);\n        }\n    }\n\n    /**\n     * preventDefault and stopPropagation.\n     * Notice: do not do that in zrender. Upper application\n     * do that if necessary.\n     *\n     * @memberOf module:zrender/core/event\n     * @method\n     * @param {Event} e : event对象\n     */\n    var stop = isDomLevel2\n        ? function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            e.cancelBubble = true;\n        }\n        : function (e) {\n            e.returnValue = false;\n            e.cancelBubble = true;\n        };\n\n    function notLeftMouse(e) {\n        // If e.which is undefined, considered as left mouse event.\n        return e.which > 1;\n    }\n\n    module.exports = {\n        clientToLocal: clientToLocal,\n        normalizeEvent: normalizeEvent,\n        addEventListener: addEventListener,\n        removeEventListener: removeEventListener,\n        notLeftMouse: notLeftMouse,\n\n        stop: stop,\n        // 做向上兼容\n        Dispatcher: Eventful\n    };\n\n\n\n/***/ }),\n\n/***/ 990:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var vec2 = __webpack_require__(975);\n    var v2Create = vec2.create;\n    var v2DistSquare = vec2.distSquare;\n    var mathPow = Math.pow;\n    var mathSqrt = Math.sqrt;\n\n    var EPSILON = 1e-8;\n    var EPSILON_NUMERIC = 1e-4;\n\n    var THREE_SQRT = mathSqrt(3);\n    var ONE_THIRD = 1 / 3;\n\n    // 临时变量\n    var _v0 = v2Create();\n    var _v1 = v2Create();\n    var _v2 = v2Create();\n    // var _v3 = vec2.create();\n\n    function isAroundZero(val) {\n        return val > -EPSILON && val < EPSILON;\n    }\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n    /**\n     * 计算三次贝塞尔值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return onet * onet * (onet * p0 + 3 * t * p1)\n             + t * t * (t * p3 + 3 * onet * p2);\n    }\n\n    /**\n     * 计算三次贝塞尔导数值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicDerivativeAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return 3 * (\n            ((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet\n            + (p3 - p2) * t * t\n        );\n    }\n\n    /**\n     * 计算三次贝塞尔方程根，使用盛金公式\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} val\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function cubicRootAt(p0, p1, p2, p3, val, roots) {\n        // Evaluate roots of cubic functions\n        var a = p3 + 3 * (p1 - p2) - p0;\n        var b = 3 * (p2 - p1 * 2 + p0);\n        var c = 3 * (p1  - p0);\n        var d = p0 - val;\n\n        var A = b * b - 3 * a * c;\n        var B = b * c - 9 * a * d;\n        var C = c * c - 3 * b * d;\n\n        var n = 0;\n\n        if (isAroundZero(A) && isAroundZero(B)) {\n            if (isAroundZero(b)) {\n                roots[0] = 0;\n            }\n            else {\n                var t1 = -c / b;  //t1, t2, t3, b is not zero\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = B * B - 4 * A * C;\n\n            if (isAroundZero(disc)) {\n                var K = B / A;\n                var t1 = -b / a + K;  // t1, a is not zero\n                var t2 = -K / 2;  // t2, t3\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n                var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n                if (Y1 < 0) {\n                    Y1 = -mathPow(-Y1, ONE_THIRD);\n                }\n                else {\n                    Y1 = mathPow(Y1, ONE_THIRD);\n                }\n                if (Y2 < 0) {\n                    Y2 = -mathPow(-Y2, ONE_THIRD);\n                }\n                else {\n                    Y2 = mathPow(Y2, ONE_THIRD);\n                }\n                var t1 = (-b - (Y1 + Y2)) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else {\n                var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n                var theta = Math.acos(T) / 3;\n                var ASqrt = mathSqrt(A);\n                var tmp = Math.cos(theta);\n\n                var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n                var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n                var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n                if (t3 >= 0 && t3 <= 1) {\n                    roots[n++] = t3;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算三次贝塞尔方程极限值的位置\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {Array.<number>} extrema\n     * @return {number} 有效数目\n     */\n    function cubicExtrema(p0, p1, p2, p3, extrema) {\n        var b = 6 * p2 - 12 * p1 + 6 * p0;\n        var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n        var c = 3 * p1 - 3 * p0;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <=1) {\n                    extrema[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                extrema[0] = -b / (2 * a);\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    extrema[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    extrema[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 细分三次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function cubicSubdivide(p0, p1, p2, p3, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p23 = (p3 - p2) * t + p2;\n\n        var p012 = (p12 - p01) * t + p01;\n        var p123 = (p23 - p12) * t + p12;\n\n        var p0123 = (p123 - p012) * t + p012;\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n        out[3] = p0123;\n        // Seg1\n        out[4] = p0123;\n        out[5] = p123;\n        out[6] = p23;\n        out[7] = p3;\n    }\n\n    /**\n     * 投射点到三次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} [out] 投射点\n     * @return {number}\n     */\n    function cubicProjectPoint(\n        x0, y0, x1, y1, x2, y2, x3, y3,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n        var prev;\n        var next;\n        var d1;\n        var d2;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n            _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n            d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            prev = t - interval;\n            next = t + interval;\n            // t - interval\n            _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n            _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n\n            d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = cubicAt(x0, x1, x2, x3, next);\n                _v2[1] = cubicAt(y0, y1, y2, y3, next);\n                d2 = v2DistSquare(_v2, _v0);\n\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = cubicAt(x0, x1, x2, x3, t);\n            out[1] = cubicAt(y0, y1, y2, y3, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    /**\n     * 计算二次方贝塞尔值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticAt(p0, p1, p2, t) {\n        var onet = 1 - t;\n        return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n    }\n\n    /**\n     * 计算二次方贝塞尔导数值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticDerivativeAt(p0, p1, p2, t) {\n        return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n    }\n\n    /**\n     * 计算二次方贝塞尔方程根\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function quadraticRootAt(p0, p1, p2, val, roots) {\n        var a = p0 - 2 * p1 + p2;\n        var b = 2 * (p1 - p0);\n        var c = p0 - val;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                var t1 = -b / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算二次贝塞尔方程极限值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @return {number}\n     */\n    function quadraticExtremum(p0, p1, p2) {\n        var divider = p0 + p2 - 2 * p1;\n        if (divider === 0) {\n            // p1 is center of p0 and p2\n            return 0.5;\n        }\n        else {\n            return (p0 - p1) / divider;\n        }\n    }\n\n    /**\n     * 细分二次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function quadraticSubdivide(p0, p1, p2, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p012 = (p12 - p01) * t + p01;\n\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n\n        // Seg1\n        out[3] = p012;\n        out[4] = p12;\n        out[5] = p2;\n    }\n\n    /**\n     * 投射点到二次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} out 投射点\n     * @return {number}\n     */\n    function quadraticProjectPoint(\n        x0, y0, x1, y1, x2, y2,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = quadraticAt(x0, x1, x2, _t);\n            _v1[1] = quadraticAt(y0, y1, y2, _t);\n            var d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            var prev = t - interval;\n            var next = t + interval;\n            // t - interval\n            _v1[0] = quadraticAt(x0, x1, x2, prev);\n            _v1[1] = quadraticAt(y0, y1, y2, prev);\n\n            var d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = quadraticAt(x0, x1, x2, next);\n                _v2[1] = quadraticAt(y0, y1, y2, next);\n                var d2 = v2DistSquare(_v2, _v0);\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = quadraticAt(x0, x1, x2, t);\n            out[1] = quadraticAt(y0, y1, y2, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    module.exports = {\n\n        cubicAt: cubicAt,\n\n        cubicDerivativeAt: cubicDerivativeAt,\n\n        cubicRootAt: cubicRootAt,\n\n        cubicExtrema: cubicExtrema,\n\n        cubicSubdivide: cubicSubdivide,\n\n        cubicProjectPoint: cubicProjectPoint,\n\n        quadraticAt: quadraticAt,\n\n        quadraticDerivativeAt: quadraticDerivativeAt,\n\n        quadraticRootAt: quadraticRootAt,\n\n        quadraticExtremum: quadraticExtremum,\n\n        quadraticSubdivide: quadraticSubdivide,\n\n        quadraticProjectPoint: quadraticProjectPoint\n    };\n\n\n/***/ }),\n\n/***/ 991:\n/***/ (function(module, exports) {\n\n/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n\n\n    var arrySlice = Array.prototype.slice;\n\n    /**\n     * 事件分发器\n     * @alias module:zrender/mixin/Eventful\n     * @constructor\n     */\n    var Eventful = function () {\n        this._$handlers = {};\n    };\n\n    Eventful.prototype = {\n\n        constructor: Eventful,\n\n        /**\n         * 单次触发绑定，trigger后销毁\n         *\n         * @param {string} event 事件名\n         * @param {Function} handler 响应函数\n         * @param {Object} context\n         */\n        one: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: true,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 绑定事件\n         * @param {string} event 事件名\n         * @param {Function} handler 事件处理函数\n         * @param {Object} [context]\n         */\n        on: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: false,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 是否绑定了事件\n         * @param  {string}  event\n         * @return {boolean}\n         */\n        isSilent: function (event) {\n            var _h = this._$handlers;\n            return _h[event] && _h[event].length;\n        },\n\n        /**\n         * 解绑事件\n         * @param {string} event 事件名\n         * @param {Function} [handler] 事件处理函数\n         */\n        off: function (event, handler) {\n            var _h = this._$handlers;\n\n            if (!event) {\n                this._$handlers = {};\n                return this;\n            }\n\n            if (handler) {\n                if (_h[event]) {\n                    var newList = [];\n                    for (var i = 0, l = _h[event].length; i < l; i++) {\n                        if (_h[event][i]['h'] != handler) {\n                            newList.push(_h[event][i]);\n                        }\n                    }\n                    _h[event] = newList;\n                }\n\n                if (_h[event] && _h[event].length === 0) {\n                    delete _h[event];\n                }\n            }\n            else {\n                delete _h[event];\n            }\n\n            return this;\n        },\n\n        /**\n         * 事件分发\n         *\n         * @param {string} type 事件类型\n         */\n        trigger: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 3) {\n                    args = arrySlice.call(args, 1);\n                }\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(_h[i]['ctx']);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(_h[i]['ctx'], args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        },\n\n        /**\n         * 带有context的事件分发, 最后一个参数是事件回调的context\n         * @param {string} type 事件类型\n         */\n        triggerWithContext: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 4) {\n                    args = arrySlice.call(args, 1, args.length - 1);\n                }\n                var ctx = args[args.length - 1];\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(ctx);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(ctx, args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(ctx, args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(ctx, args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        }\n    };\n\n    // 对象可以通过 onxxxx 绑定事件\n    /**\n     * @event module:zrender/mixin/Eventful#onclick\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseout\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousemove\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousewheel\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousedown\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseup\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrag\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragstart\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragend\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragenter\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragleave\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrop\n     * @type {Function}\n     * @default null\n     */\n\n    module.exports = Eventful;\n\n\n\n/***/ }),\n\n/***/ 992:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module zrender/tool/color\n */\n\n\n    var LRU = __webpack_require__(1029);\n\n    var kCSSColorTable = {\n        'transparent': [0,0,0,0], 'aliceblue': [240,248,255,1],\n        'antiquewhite': [250,235,215,1], 'aqua': [0,255,255,1],\n        'aquamarine': [127,255,212,1], 'azure': [240,255,255,1],\n        'beige': [245,245,220,1], 'bisque': [255,228,196,1],\n        'black': [0,0,0,1], 'blanchedalmond': [255,235,205,1],\n        'blue': [0,0,255,1], 'blueviolet': [138,43,226,1],\n        'brown': [165,42,42,1], 'burlywood': [222,184,135,1],\n        'cadetblue': [95,158,160,1], 'chartreuse': [127,255,0,1],\n        'chocolate': [210,105,30,1], 'coral': [255,127,80,1],\n        'cornflowerblue': [100,149,237,1], 'cornsilk': [255,248,220,1],\n        'crimson': [220,20,60,1], 'cyan': [0,255,255,1],\n        'darkblue': [0,0,139,1], 'darkcyan': [0,139,139,1],\n        'darkgoldenrod': [184,134,11,1], 'darkgray': [169,169,169,1],\n        'darkgreen': [0,100,0,1], 'darkgrey': [169,169,169,1],\n        'darkkhaki': [189,183,107,1], 'darkmagenta': [139,0,139,1],\n        'darkolivegreen': [85,107,47,1], 'darkorange': [255,140,0,1],\n        'darkorchid': [153,50,204,1], 'darkred': [139,0,0,1],\n        'darksalmon': [233,150,122,1], 'darkseagreen': [143,188,143,1],\n        'darkslateblue': [72,61,139,1], 'darkslategray': [47,79,79,1],\n        'darkslategrey': [47,79,79,1], 'darkturquoise': [0,206,209,1],\n        'darkviolet': [148,0,211,1], 'deeppink': [255,20,147,1],\n        'deepskyblue': [0,191,255,1], 'dimgray': [105,105,105,1],\n        'dimgrey': [105,105,105,1], 'dodgerblue': [30,144,255,1],\n        'firebrick': [178,34,34,1], 'floralwhite': [255,250,240,1],\n        'forestgreen': [34,139,34,1], 'fuchsia': [255,0,255,1],\n        'gainsboro': [220,220,220,1], 'ghostwhite': [248,248,255,1],\n        'gold': [255,215,0,1], 'goldenrod': [218,165,32,1],\n        'gray': [128,128,128,1], 'green': [0,128,0,1],\n        'greenyellow': [173,255,47,1], 'grey': [128,128,128,1],\n        'honeydew': [240,255,240,1], 'hotpink': [255,105,180,1],\n        'indianred': [205,92,92,1], 'indigo': [75,0,130,1],\n        'ivory': [255,255,240,1], 'khaki': [240,230,140,1],\n        'lavender': [230,230,250,1], 'lavenderblush': [255,240,245,1],\n        'lawngreen': [124,252,0,1], 'lemonchiffon': [255,250,205,1],\n        'lightblue': [173,216,230,1], 'lightcoral': [240,128,128,1],\n        'lightcyan': [224,255,255,1], 'lightgoldenrodyellow': [250,250,210,1],\n        'lightgray': [211,211,211,1], 'lightgreen': [144,238,144,1],\n        'lightgrey': [211,211,211,1], 'lightpink': [255,182,193,1],\n        'lightsalmon': [255,160,122,1], 'lightseagreen': [32,178,170,1],\n        'lightskyblue': [135,206,250,1], 'lightslategray': [119,136,153,1],\n        'lightslategrey': [119,136,153,1], 'lightsteelblue': [176,196,222,1],\n        'lightyellow': [255,255,224,1], 'lime': [0,255,0,1],\n        'limegreen': [50,205,50,1], 'linen': [250,240,230,1],\n        'magenta': [255,0,255,1], 'maroon': [128,0,0,1],\n        'mediumaquamarine': [102,205,170,1], 'mediumblue': [0,0,205,1],\n        'mediumorchid': [186,85,211,1], 'mediumpurple': [147,112,219,1],\n        'mediumseagreen': [60,179,113,1], 'mediumslateblue': [123,104,238,1],\n        'mediumspringgreen': [0,250,154,1], 'mediumturquoise': [72,209,204,1],\n        'mediumvioletred': [199,21,133,1], 'midnightblue': [25,25,112,1],\n        'mintcream': [245,255,250,1], 'mistyrose': [255,228,225,1],\n        'moccasin': [255,228,181,1], 'navajowhite': [255,222,173,1],\n        'navy': [0,0,128,1], 'oldlace': [253,245,230,1],\n        'olive': [128,128,0,1], 'olivedrab': [107,142,35,1],\n        'orange': [255,165,0,1], 'orangered': [255,69,0,1],\n        'orchid': [218,112,214,1], 'palegoldenrod': [238,232,170,1],\n        'palegreen': [152,251,152,1], 'paleturquoise': [175,238,238,1],\n        'palevioletred': [219,112,147,1], 'papayawhip': [255,239,213,1],\n        'peachpuff': [255,218,185,1], 'peru': [205,133,63,1],\n        'pink': [255,192,203,1], 'plum': [221,160,221,1],\n        'powderblue': [176,224,230,1], 'purple': [128,0,128,1],\n        'red': [255,0,0,1], 'rosybrown': [188,143,143,1],\n        'royalblue': [65,105,225,1], 'saddlebrown': [139,69,19,1],\n        'salmon': [250,128,114,1], 'sandybrown': [244,164,96,1],\n        'seagreen': [46,139,87,1], 'seashell': [255,245,238,1],\n        'sienna': [160,82,45,1], 'silver': [192,192,192,1],\n        'skyblue': [135,206,235,1], 'slateblue': [106,90,205,1],\n        'slategray': [112,128,144,1], 'slategrey': [112,128,144,1],\n        'snow': [255,250,250,1], 'springgreen': [0,255,127,1],\n        'steelblue': [70,130,180,1], 'tan': [210,180,140,1],\n        'teal': [0,128,128,1], 'thistle': [216,191,216,1],\n        'tomato': [255,99,71,1], 'turquoise': [64,224,208,1],\n        'violet': [238,130,238,1], 'wheat': [245,222,179,1],\n        'white': [255,255,255,1], 'whitesmoke': [245,245,245,1],\n        'yellow': [255,255,0,1], 'yellowgreen': [154,205,50,1]\n    };\n\n    function clampCssByte(i) {  // Clamp to integer 0 .. 255.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 255 ? 255 : i;\n    }\n\n    function clampCssAngle(i) {  // Clamp to integer 0 .. 360.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 360 ? 360 : i;\n    }\n\n    function clampCssFloat(f) {  // Clamp to float 0.0 .. 1.0.\n        return f < 0 ? 0 : f > 1 ? 1 : f;\n    }\n\n    function parseCssInt(str) {  // int or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssByte(parseFloat(str) / 100 * 255);\n        }\n        return clampCssByte(parseInt(str, 10));\n    }\n\n    function parseCssFloat(str) {  // float or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssFloat(parseFloat(str) / 100);\n        }\n        return clampCssFloat(parseFloat(str));\n    }\n\n    function cssHueToRgb(m1, m2, h) {\n        if (h < 0) {\n            h += 1;\n        }\n        else if (h > 1) {\n            h -= 1;\n        }\n\n        if (h * 6 < 1) {\n            return m1 + (m2 - m1) * h * 6;\n        }\n        if (h * 2 < 1) {\n            return m2;\n        }\n        if (h * 3 < 2) {\n            return m1 + (m2 - m1) * (2/3 - h) * 6;\n        }\n        return m1;\n    }\n\n    function lerpNumber(a, b, p) {\n        return a + (b - a) * p;\n    }\n\n    function setRgba(out, r, g, b, a) {\n        out[0] = r; out[1] = g; out[2] = b; out[3] = a;\n        return out;\n    }\n    function copyRgba(out, a) {\n        out[0] = a[0]; out[1] = a[1]; out[2] = a[2]; out[3] = a[3];\n        return out;\n    }\n    var colorCache = new LRU(20);\n    var lastRemovedArr = null;\n    function putToCache(colorStr, rgbaArr) {\n        // Reuse removed array\n        if (lastRemovedArr) {\n            copyRgba(lastRemovedArr, rgbaArr);\n        }\n        lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || (rgbaArr.slice()));\n    }\n    /**\n     * @param {string} colorStr\n     * @param {Array.<number>} out\n     * @return {Array.<number>}\n     * @memberOf module:zrender/util/color\n     */\n    function parse(colorStr, rgbaArr) {\n        if (!colorStr) {\n            return;\n        }\n        rgbaArr = rgbaArr || [];\n\n        var cached = colorCache.get(colorStr);\n        if (cached) {\n            return copyRgba(rgbaArr, cached);\n        }\n\n        // colorStr may be not string\n        colorStr = colorStr + '';\n        // Remove all whitespace, not compliant, but should just be more accepting.\n        var str = colorStr.replace(/ /g, '').toLowerCase();\n\n        // Color keywords (and transparent) lookup.\n        if (str in kCSSColorTable) {\n            copyRgba(rgbaArr, kCSSColorTable[str]);\n            putToCache(colorStr, rgbaArr);\n            return rgbaArr;\n        }\n\n        // #abc and #abc123 syntax.\n        if (str.charAt(0) === '#') {\n            if (str.length === 4) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xfff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    ((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\n                    (iv & 0xf0) | ((iv & 0xf0) >> 4),\n                    (iv & 0xf) | ((iv & 0xf) << 4),\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n            else if (str.length === 7) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xffffff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    (iv & 0xff0000) >> 16,\n                    (iv & 0xff00) >> 8,\n                    iv & 0xff,\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n\n            return;\n        }\n        var op = str.indexOf('('), ep = str.indexOf(')');\n        if (op !== -1 && ep + 1 === str.length) {\n            var fname = str.substr(0, op);\n            var params = str.substr(op + 1, ep - (op + 1)).split(',');\n            var alpha = 1;  // To allow case fallthrough.\n            switch (fname) {\n                case 'rgba':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    alpha = parseCssFloat(params.pop()); // jshint ignore:line\n                // Fall through.\n                case 'rgb':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    setRgba(rgbaArr,\n                        parseCssInt(params[0]),\n                        parseCssInt(params[1]),\n                        parseCssInt(params[2]),\n                        alpha\n                    );\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsla':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    params[3] = parseCssFloat(params[3]);\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsl':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                default:\n                    return;\n            }\n        }\n\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return;\n    }\n\n    /**\n     * @param {Array.<number>} hsla\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} rgba\n     */\n    function hsla2rgba(hsla, rgba) {\n        var h = (((parseFloat(hsla[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\n        // NOTE(deanm): According to the CSS spec s/l should only be\n        // percentages, but we don't bother and let float or percentage.\n        var s = parseCssFloat(hsla[1]);\n        var l = parseCssFloat(hsla[2]);\n        var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n        var m1 = l * 2 - m2;\n\n        rgba = rgba || [];\n        setRgba(rgba,\n            clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255),\n            1\n        );\n\n        if (hsla.length === 4) {\n            rgba[3] = hsla[3];\n        }\n\n        return rgba;\n    }\n\n    /**\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} hsla\n     */\n    function rgba2hsla(rgba) {\n        if (!rgba) {\n            return;\n        }\n\n        // RGB from 0 to 255\n        var R = rgba[0] / 255;\n        var G = rgba[1] / 255;\n        var B = rgba[2] / 255;\n\n        var vMin = Math.min(R, G, B); // Min. value of RGB\n        var vMax = Math.max(R, G, B); // Max. value of RGB\n        var delta = vMax - vMin; // Delta RGB value\n\n        var L = (vMax + vMin) / 2;\n        var H;\n        var S;\n        // HSL results from 0 to 1\n        if (delta === 0) {\n            H = 0;\n            S = 0;\n        }\n        else {\n            if (L < 0.5) {\n                S = delta / (vMax + vMin);\n            }\n            else {\n                S = delta / (2 - vMax - vMin);\n            }\n\n            var deltaR = (((vMax - R) / 6) + (delta / 2)) / delta;\n            var deltaG = (((vMax - G) / 6) + (delta / 2)) / delta;\n            var deltaB = (((vMax - B) / 6) + (delta / 2)) / delta;\n\n            if (R === vMax) {\n                H = deltaB - deltaG;\n            }\n            else if (G === vMax) {\n                H = (1 / 3) + deltaR - deltaB;\n            }\n            else if (B === vMax) {\n                H = (2 / 3) + deltaG - deltaR;\n            }\n\n            if (H < 0) {\n                H += 1;\n            }\n\n            if (H > 1) {\n                H -= 1;\n            }\n        }\n\n        var hsla = [H * 360, S, L];\n\n        if (rgba[3] != null) {\n            hsla.push(rgba[3]);\n        }\n\n        return hsla;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number} level\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function lift(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            for (var i = 0; i < 3; i++) {\n                if (level < 0) {\n                    colorArr[i] = colorArr[i] * (1 - level) | 0;\n                }\n                else {\n                    colorArr[i] = ((255 - colorArr[i]) * level + colorArr[i]) | 0;\n                }\n            }\n            return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function toHex(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + (+colorArr[2])).toString(16).slice(1);\n        }\n    }\n\n    /**\n     * Map value to color. Faster than lerp methods because color is represented by rgba array.\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<Array.<number>>} colors List of rgba color array\n     * @param {Array.<number>} [out] Mapped gba color array\n     * @return {Array.<number>} will be null/undefined if input illegal.\n     */\n    function fastLerp(normalizedValue, colors, out) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        out = out || [];\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = colors[leftIndex];\n        var rightColor = colors[rightIndex];\n        var dv = value - leftIndex;\n        out[0] = clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv));\n        out[1] = clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv));\n        out[2] = clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv));\n        out[3] = clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv));\n\n        return out;\n    }\n\n    /**\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<string>} colors Color list.\n     * @param {boolean=} fullOutput Default false.\n     * @return {(string|Object)} Result color. If fullOutput,\n     *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n     * @memberOf module:zrender/util/color\n     */\n    function lerp(normalizedValue, colors, fullOutput) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = parse(colors[leftIndex]);\n        var rightColor = parse(colors[rightIndex]);\n        var dv = value - leftIndex;\n\n        var color = stringify(\n            [\n                clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv)),\n                clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv)),\n                clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv)),\n                clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv))\n            ],\n            'rgba'\n        );\n\n        return fullOutput\n            ? {\n                color: color,\n                leftIndex: leftIndex,\n                rightIndex: rightIndex,\n                value: value\n            }\n            : color;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} h 0 ~ 360, ignore when null.\n     * @param {number=} s 0 ~ 1, ignore when null.\n     * @param {number=} l 0 ~ 1, ignore when null.\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyHSL(color, h, s, l) {\n        color = parse(color);\n\n        if (color) {\n            color = rgba2hsla(color);\n            h != null && (color[0] = clampCssAngle(h));\n            s != null && (color[1] = parseCssFloat(s));\n            l != null && (color[2] = parseCssFloat(l));\n\n            return stringify(hsla2rgba(color), 'rgba');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} alpha 0 ~ 1\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyAlpha(color, alpha) {\n        color = parse(color);\n\n        if (color && alpha != null) {\n            color[3] = clampCssFloat(alpha);\n            return stringify(color, 'rgba');\n        }\n    }\n\n    /**\n     * @param {Array.<number>} arrColor like [12,33,44,0.4]\n     * @param {string} type 'rgba', 'hsva', ...\n     * @return {string} Result color. (If input illegal, return undefined).\n     */\n    function stringify(arrColor, type) {\n        if (!arrColor || !arrColor.length) {\n            return;\n        }\n        var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n        if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n            colorStr += ',' + arrColor[3];\n        }\n        return type + '(' + colorStr + ')';\n    }\n\n    module.exports = {\n        parse: parse,\n        lift: lift,\n        toHex: toHex,\n        fastLerp: fastLerp,\n        fastMapToColor: fastLerp, // Deprecated\n        lerp: lerp,\n        mapToColor: lerp, // Deprecated\n        modifyHSL: modifyHSL,\n        modifyAlpha: modifyAlpha,\n        stringify: stringify\n    };\n\n\n\n\n/***/ }),\n\n/***/ 993:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(970);\n    var formatUtil = __webpack_require__(976);\n    var classUtil = __webpack_require__(983);\n    var modelUtil = __webpack_require__(974);\n    var ComponentModel = __webpack_require__(982);\n    var colorPaletteMixin = __webpack_require__(1038);\n    var env = __webpack_require__(977);\n    var layout = __webpack_require__(980);\n\n    var set = classUtil.set;\n    var get = classUtil.get;\n    var encodeHTML = formatUtil.encodeHTML;\n    var addCommas = formatUtil.addCommas;\n\n    var SeriesModel = ComponentModel.extend({\n\n        type: 'series.__base__',\n\n        /**\n         * @readOnly\n         */\n        seriesIndex: 0,\n\n        // coodinateSystem will be injected in the echarts/CoordinateSystem\n        coordinateSystem: null,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * Data provided for legend\n         * @type {Function}\n         */\n        // PENDING\n        legendDataProvider: null,\n\n        /**\n         * Access path of color for visual\n         */\n        visualColorAccessPath: 'itemStyle.normal.color',\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n\n            /**\n             * @type {number}\n             * @readOnly\n             */\n            this.seriesIndex = this.componentIndex;\n\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            var data = this.getInitialData(option, ecModel);\n            if (__DEV__) {\n                zrUtil.assert(data, 'getInitialData returned invalid data.');\n            }\n            /**\n             * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n             * @private\n             */\n            set(this, 'dataBeforeProcessed', data);\n\n            // If we reverse the order (make data firstly, and then make\n            // dataBeforeProcessed by cloneShallow), cloneShallow will\n            // cause data.graph.data !== data when using\n            // module:echarts/data/Graph or module:echarts/data/Tree.\n            // See module:echarts/data/helper/linkList\n            this.restoreData();\n        },\n\n        /**\n         * Util for merge default and theme to option\n         * @param  {Object} option\n         * @param  {module:echarts/model/Global} ecModel\n         */\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            // Backward compat: using subType on theme.\n            // But if name duplicate between series subType\n            // (for example: parallel) add component mainType,\n            // add suffix 'Series'.\n            var themeSubType = this.subType;\n            if (ComponentModel.hasClass(themeSubType)) {\n                themeSubType += 'Series';\n            }\n            zrUtil.merge(\n                option,\n                ecModel.getTheme().get(this.subType)\n            );\n            zrUtil.merge(option, this.getDefaultOption());\n\n            // Default label emphasis `show`\n            modelUtil.defaultEmphasis(option.label, ['show']);\n\n            this.fillDataTextStyle(option.data);\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (newSeriesOption, ecModel) {\n            newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n            this.fillDataTextStyle(newSeriesOption.data);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n            }\n\n            var data = this.getInitialData(newSeriesOption, ecModel);\n            // TODO Merge data?\n            if (data) {\n                set(this, 'data', data);\n                set(this, 'dataBeforeProcessed', data.cloneShallow());\n            }\n        },\n\n        fillDataTextStyle: function (data) {\n            // Default data label emphasis `show`\n            // FIXME Tree structure data ?\n            // FIXME Performance ?\n            if (data) {\n                var props = ['show'];\n                for (var i = 0; i < data.length; i++) {\n                    if (data[i] && data[i].label) {\n                        modelUtil.defaultEmphasis(data[i].label, props);\n                    }\n                }\n            }\n        },\n\n        /**\n         * Init a data structure from data related option in series\n         * Must be overwritten\n         */\n        getInitialData: function () {},\n\n        /**\n         * @param {string} [dataType]\n         * @return {module:echarts/data/List}\n         */\n        getData: function (dataType) {\n            var data = get(this, 'data');\n            return dataType == null ? data : data.getLinkedData(dataType);\n        },\n\n        /**\n         * @param {module:echarts/data/List} data\n         */\n        setData: function (data) {\n            set(this, 'data', data);\n        },\n\n        /**\n         * Get data before processed\n         * @return {module:echarts/data/List}\n         */\n        getRawData: function () {\n            return get(this, 'dataBeforeProcessed');\n        },\n\n        /**\n         * Coord dimension to data dimension.\n         *\n         * By default the result is the same as dimensions of series data.\n         * But in some series data dimensions are different from coord dimensions (i.e.\n         * candlestick and boxplot). Override this method to handle those cases.\n         *\n         * Coord dimension to data dimension can be one-to-many\n         *\n         * @param {string} coordDim\n         * @return {Array.<string>} dimensions on the axis.\n         */\n        coordDimToDataDim: function (coordDim) {\n            return modelUtil.coordDimToDataDim(this.getData(), coordDim);\n        },\n\n        /**\n         * Convert data dimension to coord dimension.\n         *\n         * @param {string|number} dataDim\n         * @return {string}\n         */\n        dataDimToCoordDim: function (dataDim) {\n            return modelUtil.dataDimToCoordDim(this.getData(), dataDim);\n        },\n\n        /**\n         * Get base axis if has coordinate system and has axis.\n         * By default use coordSys.getBaseAxis();\n         * Can be overrided for some chart.\n         * @return {type} description\n         */\n        getBaseAxis: function () {\n            var coordSys = this.coordinateSystem;\n            return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n        },\n\n        // FIXME\n        /**\n         * Default tooltip formatter\n         *\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         */\n        formatTooltip: function (dataIndex, multipleSeries, dataType) {\n            function formatArrayValue(value) {\n                var vertially = zrUtil.reduce(value, function (vertially, val, idx) {\n                    var dimItem = data.getDimensionInfo(idx);\n                    return vertially |= dimItem && dimItem.tooltip !== false && dimItem.tooltipName != null;\n                }, 0);\n\n                var result = [];\n                var tooltipDims = modelUtil.otherDimToDataDim(data, 'tooltip');\n\n                tooltipDims.length\n                    ? zrUtil.each(tooltipDims, function (dimIdx) {\n                        setEachItem(data.get(dimIdx, dataIndex), dimIdx);\n                    })\n                    // By default, all dims is used on tooltip.\n                    : zrUtil.each(value, setEachItem);\n\n                function setEachItem(val, dimIdx) {\n                    var dimInfo = data.getDimensionInfo(dimIdx);\n                    // If `dimInfo.tooltip` is not set, show tooltip.\n                    if (!dimInfo || dimInfo.otherDims.tooltip === false) {\n                        return;\n                    }\n                    var dimType = dimInfo.type;\n                    var valStr = (vertially ? '- ' + (dimInfo.tooltipName || dimInfo.name) + ': ' : '')\n                        + (dimType === 'ordinal'\n                            ? val + ''\n                            : dimType === 'time'\n                            ? (multipleSeries ? '' : formatUtil.formatTime('yyyy/MM/dd hh:mm:ss', val))\n                            : addCommas(val)\n                        );\n                    valStr && result.push(encodeHTML(valStr));\n                }\n\n                return (vertially ? '<br/>' : '') + result.join(vertially ? '<br/>' : ', ');\n            }\n\n            var data = get(this, 'data');\n\n            var value = this.getRawValue(dataIndex);\n            var formattedValue = zrUtil.isArray(value)\n                ? formatArrayValue(value) : encodeHTML(addCommas(value));\n            var name = data.getName(dataIndex);\n\n            var color = data.getItemVisual(dataIndex, 'color');\n            if (zrUtil.isObject(color) && color.colorStops) {\n                color = (color.colorStops[0] || {}).color;\n            }\n            color = color || 'transparent';\n\n            var colorEl = formatUtil.getTooltipMarker(color);\n\n            var seriesName = this.name;\n            // FIXME\n            if (seriesName === '\\0-') {\n                // Not show '-'\n                seriesName = '';\n            }\n            seriesName = seriesName\n                ? encodeHTML(seriesName) + (!multipleSeries ? '<br/>' : ': ')\n                : '';\n            return !multipleSeries\n                ? seriesName + colorEl\n                    + (name\n                        ? encodeHTML(name) + ': ' + formattedValue\n                        : formattedValue\n                    )\n                : colorEl + seriesName + formattedValue;\n        },\n\n        /**\n         * @return {boolean}\n         */\n        isAnimationEnabled: function () {\n            if (env.node) {\n                return false;\n            }\n\n            var animationEnabled = this.getShallow('animation');\n            if (animationEnabled) {\n                if (this.getData().count() > this.getShallow('animationThreshold')) {\n                    animationEnabled = false;\n                }\n            }\n            return animationEnabled;\n        },\n\n        restoreData: function () {\n            set(this, 'data', get(this, 'dataBeforeProcessed').cloneShallow());\n        },\n\n        getColorFromPalette: function (name, scope) {\n            var ecModel = this.ecModel;\n            // PENDING\n            var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n            if (!color) {\n                color = ecModel.getColorFromPalette(name, scope);\n            }\n            return color;\n        },\n\n        /**\n         * Get data indices for show tooltip content. See tooltip.\n         * @abstract\n         * @param {Array.<string>|string} dim\n         * @param {Array.<number>} value\n         * @param {module:echarts/coord/single/SingleAxis} baseAxis\n         * @return {Object} {dataIndices, nestestValue}.\n         */\n        getAxisTooltipData: null,\n\n        /**\n         * See tooltip.\n         * @abstract\n         * @param {number} dataIndex\n         * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n         */\n        getTooltipPosition: null\n    });\n\n    zrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\n    zrUtil.mixin(SeriesModel, colorPaletteMixin);\n\n    module.exports = SeriesModel;\n\n\n/***/ }),\n\n/***/ 994:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Complete dimensions by data (guess dimension).\n */\n\n\n    var zrUtil = __webpack_require__(970);\n    var modelUtil = __webpack_require__(974);\n    var each = zrUtil.each;\n    var isString = zrUtil.isString;\n    var defaults = zrUtil.defaults;\n    var normalizeToArray = modelUtil.normalizeToArray;\n\n    var OTHER_DIMS = {tooltip: 1, label: 1, itemName: 1};\n\n    /**\n     * Complete the dimensions array, by user defined `dimension` and `encode`,\n     * and guessing from the data structure.\n     * If no 'value' dimension specified, the first no-named dimension will be\n     * named as 'value'.\n     *\n     * @param {Array.<string>} sysDims Necessary dimensions, like ['x', 'y'], which\n     *      provides not only dim template, but also default order.\n     *      `name` of each item provides default coord name.\n     *      [{dimsDef: []}, ...] can be specified to give names.\n     * @param {Array} data Data list. [[1, 2, 3], [2, 3, 4]].\n     * @param {Object} [opt]\n     * @param {Array.<Object|string>} [opt.dimsDef] option.series.dimensions User defined dimensions\n     *      For example: ['asdf', {name, type}, ...].\n     * @param {Object} [opt.encodeDef] option.series.encode {x: 2, y: [3, 1], tooltip: [1, 2], label: 3}\n     * @param {string} [opt.extraPrefix] Prefix of name when filling the left dimensions.\n     * @param {string} [opt.extraFromZero] If specified, extra dim names will be:\n     *                      extraPrefix + 0, extraPrefix + extraBaseIndex + 1 ...\n     *                      If not specified, extra dim names will be:\n     *                      extraPrefix, extraPrefix + 0, extraPrefix + 1 ...\n     * @param {number} [opt.dimCount] If not specified, guess by the first data item.\n     * @return {Array.<Object>} [{\n     *      name: string mandatory,\n     *      coordDim: string mandatory,\n     *      coordDimIndex: number mandatory,\n     *      type: string optional,\n     *      tooltipName: string optional,\n     *      otherDims: {\n     *          tooltip: number optional,\n     *          label: number optional\n     *      },\n     *      isExtraCoord: boolean true or undefined.\n     *      other props ...\n     * }]\n     */\n    function completeDimensions(sysDims, data, opt) {\n        data = data || [];\n        opt = opt || {};\n        sysDims = (sysDims || []).slice();\n        var dimsDef = (opt.dimsDef || []).slice();\n        var encodeDef = zrUtil.createHashMap(opt.encodeDef);\n        var dataDimNameMap = zrUtil.createHashMap();\n        var coordDimNameMap = zrUtil.createHashMap();\n        // var valueCandidate;\n        var result = [];\n\n        var dimCount = opt.dimCount;\n        if (dimCount == null) {\n            var value0 = retrieveValue(data[0]);\n            dimCount = Math.max(\n                zrUtil.isArray(value0) && value0.length || 1,\n                sysDims.length,\n                dimsDef.length\n            );\n            each(sysDims, function (sysDimItem) {\n                var sysDimItemDimsDef = sysDimItem.dimsDef;\n                sysDimItemDimsDef && (dimCount = Math.max(dimCount, sysDimItemDimsDef.length));\n            });\n        }\n\n        // Apply user defined dims (`name` and `type`) and init result.\n        for (var i = 0; i < dimCount; i++) {\n            var dimDefItem = isString(dimsDef[i]) ? {name: dimsDef[i]} : (dimsDef[i] || {});\n            var userDimName = dimDefItem.name;\n            var resultItem = result[i] = {otherDims: {}};\n            // Name will be applied later for avoiding duplication.\n            if (userDimName != null && dataDimNameMap.get(userDimName) == null) {\n                // Only if `series.dimensions` is defined in option, tooltipName\n                // will be set, and dimension will be diplayed vertically in\n                // tooltip by default.\n                resultItem.name = resultItem.tooltipName = userDimName;\n                dataDimNameMap.set(userDimName, i);\n            }\n            dimDefItem.type != null && (resultItem.type = dimDefItem.type);\n        }\n\n        // Set `coordDim` and `coordDimIndex` by `encodeDef` and normalize `encodeDef`.\n        encodeDef.each(function (dataDims, coordDim) {\n            dataDims = encodeDef.set(coordDim, normalizeToArray(dataDims).slice());\n            each(dataDims, function (resultDimIdx, coordDimIndex) {\n                // The input resultDimIdx can be dim name or index.\n                isString(resultDimIdx) && (resultDimIdx = dataDimNameMap.get(resultDimIdx));\n                if (resultDimIdx != null && resultDimIdx < dimCount) {\n                    dataDims[coordDimIndex] = resultDimIdx;\n                    applyDim(result[resultDimIdx], coordDim, coordDimIndex);\n                }\n            });\n        });\n\n        // Apply templetes and default order from `sysDims`.\n        var availDimIdx = 0;\n        each(sysDims, function (sysDimItem, sysDimIndex) {\n            var coordDim;\n            var sysDimItem;\n            var sysDimItemDimsDef;\n            var sysDimItemOtherDims;\n            if (isString(sysDimItem)) {\n                coordDim = sysDimItem;\n                sysDimItem = {};\n            }\n            else {\n                coordDim = sysDimItem.name;\n                sysDimItem = zrUtil.clone(sysDimItem);\n                // `coordDimIndex` should not be set directly.\n                sysDimItemDimsDef = sysDimItem.dimsDef;\n                sysDimItemOtherDims = sysDimItem.otherDims;\n                sysDimItem.name = sysDimItem.coordDim = sysDimItem.coordDimIndex\n                    = sysDimItem.dimsDef = sysDimItem.otherDims = null;\n            }\n\n            var dataDims = normalizeToArray(encodeDef.get(coordDim));\n            // dimensions provides default dim sequences.\n            if (!dataDims.length) {\n                for (var i = 0; i < (sysDimItemDimsDef && sysDimItemDimsDef.length || 1); i++) {\n                    while (availDimIdx < result.length && result[availDimIdx].coordDim != null) {\n                        availDimIdx++;\n                    }\n                    availDimIdx < result.length && dataDims.push(availDimIdx++);\n                }\n            }\n            // Apply templates.\n            each(dataDims, function (resultDimIdx, coordDimIndex) {\n                var resultItem = result[resultDimIdx];\n                applyDim(defaults(resultItem, sysDimItem), coordDim, coordDimIndex);\n                if (resultItem.name == null && sysDimItemDimsDef) {\n                    resultItem.name = resultItem.tooltipName = sysDimItemDimsDef[coordDimIndex];\n                }\n                sysDimItemOtherDims && defaults(resultItem.otherDims, sysDimItemOtherDims);\n            });\n        });\n\n        // Make sure the first extra dim is 'value'.\n        var extra = opt.extraPrefix || 'value';\n\n        // Set dim `name` and other `coordDim` and other props.\n        for (var resultDimIdx = 0; resultDimIdx < dimCount; resultDimIdx++) {\n            var resultItem = result[resultDimIdx] = result[resultDimIdx] || {};\n            var coordDim = resultItem.coordDim;\n\n            coordDim == null && (\n                resultItem.coordDim = genName(extra, coordDimNameMap, opt.extraFromZero),\n                resultItem.coordDimIndex = 0,\n                resultItem.isExtraCoord = true\n            );\n\n            resultItem.name == null && (resultItem.name = genName(\n                resultItem.coordDim,\n                dataDimNameMap\n            ));\n\n            resultItem.type == null && guessOrdinal(data, resultDimIdx)\n                && (resultItem.type = 'ordinal');\n        }\n\n        return result;\n\n        function applyDim(resultItem, coordDim, coordDimIndex) {\n            if (OTHER_DIMS[coordDim]) {\n                resultItem.otherDims[coordDim] = coordDimIndex;\n            }\n            else {\n                resultItem.coordDim = coordDim;\n                resultItem.coordDimIndex = coordDimIndex;\n                coordDimNameMap.set(coordDim, true);\n            }\n        }\n\n        function genName(name, map, fromZero) {\n            if (fromZero || map.get(name) != null) {\n                var i = 0;\n                while (map.get(name + i) != null) {\n                    i++;\n                }\n                name += i;\n            }\n            map.set(name, true);\n            return name;\n        }\n    }\n\n    // The rule should not be complex, otherwise user might not\n    // be able to known where the data is wrong.\n    var guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {\n        for (var i = 0, len = data.length; i < len; i++) {\n            var value = retrieveValue(data[i]);\n\n            if (!zrUtil.isArray(value)) {\n                return false;\n            }\n\n            var value = value[dimIndex];\n            // Consider usage convenience, '1', '2' will be treated as \"number\".\n            // `isFinit('')` get `true`.\n            if (value != null && isFinite(value) && value !== '') {\n                return false;\n            }\n            else if (isString(value) && value !== '-') {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    function retrieveValue(o) {\n        return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value: o;\n    }\n\n    module.exports = completeDimensions;\n\n\n\n/***/ }),\n\n/***/ 995:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Symbol factory\n\n\n    var graphic = __webpack_require__(972);\n    var BoundingRect = __webpack_require__(981);\n\n    /**\n     * Triangle shape\n     * @inner\n     */\n    var Triangle = graphic.extendShape({\n        type: 'triangle',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy + height);\n            path.lineTo(cx - width, cy + height);\n            path.closePath();\n        }\n    });\n    /**\n     * Diamond shape\n     * @inner\n     */\n    var Diamond = graphic.extendShape({\n        type: 'diamond',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy);\n            path.lineTo(cx, cy + height);\n            path.lineTo(cx - width, cy);\n            path.closePath();\n        }\n    });\n\n    /**\n     * Pin shape\n     * @inner\n     */\n    var Pin = graphic.extendShape({\n        type: 'pin',\n        shape: {\n            // x, y on the cusp\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (path, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var w = shape.width / 5 * 3;\n            // Height must be larger than width\n            var h = Math.max(w, shape.height);\n            var r = w / 2;\n\n            // Dist on y with tangent point and circle center\n            var dy = r * r / (h - r);\n            var cy = y - h + r + dy;\n            var angle = Math.asin(dy / r);\n            // Dist on x with tangent point and circle center\n            var dx = Math.cos(angle) * r;\n\n            var tanX = Math.sin(angle);\n            var tanY = Math.cos(angle);\n\n            path.arc(\n                x, cy, r,\n                Math.PI - angle,\n                Math.PI * 2 + angle\n            );\n\n            var cpLen = r * 0.6;\n            var cpLen2 = r * 0.7;\n            path.bezierCurveTo(\n                x + dx - tanX * cpLen, cy + dy + tanY * cpLen,\n                x, y - cpLen2,\n                x, y\n            );\n            path.bezierCurveTo(\n                x, y - cpLen2,\n                x - dx + tanX * cpLen, cy + dy + tanY * cpLen,\n                x - dx, cy + dy\n            );\n            path.closePath();\n        }\n    });\n\n    /**\n     * Arrow shape\n     * @inner\n     */\n    var Arrow = graphic.extendShape({\n\n        type: 'arrow',\n\n        shape: {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var height = shape.height;\n            var width = shape.width;\n            var x = shape.x;\n            var y = shape.y;\n            var dx = width / 3 * 2;\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + dx, y + height);\n            ctx.lineTo(x, y + height / 4 * 3);\n            ctx.lineTo(x - dx, y + height);\n            ctx.lineTo(x, y);\n            ctx.closePath();\n        }\n    });\n\n    /**\n     * Map of path contructors\n     * @type {Object.<string, module:zrender/graphic/Path>}\n     */\n    var symbolCtors = {\n        line: graphic.Line,\n\n        rect: graphic.Rect,\n\n        roundRect: graphic.Rect,\n\n        square: graphic.Rect,\n\n        circle: graphic.Circle,\n\n        diamond: Diamond,\n\n        pin: Pin,\n\n        arrow: Arrow,\n\n        triangle: Triangle\n    };\n\n    var symbolShapeMakers = {\n\n        line: function (x, y, w, h, shape) {\n            // FIXME\n            shape.x1 = x;\n            shape.y1 = y + h / 2;\n            shape.x2 = x + w;\n            shape.y2 = y + h / 2;\n        },\n\n        rect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        roundRect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n            shape.r = Math.min(w, h) / 4;\n        },\n\n        square: function (x, y, w, h, shape) {\n            var size = Math.min(w, h);\n            shape.x = x;\n            shape.y = y;\n            shape.width = size;\n            shape.height = size;\n        },\n\n        circle: function (x, y, w, h, shape) {\n            // Put circle in the center of square\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.r = Math.min(w, h) / 2;\n        },\n\n        diamond: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        pin: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        arrow: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        triangle: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        }\n    };\n\n    var symbolBuildProxies = {};\n    for (var name in symbolCtors) {\n        if (symbolCtors.hasOwnProperty(name)) {\n            symbolBuildProxies[name] = new symbolCtors[name]();\n        }\n    }\n\n    var Symbol = graphic.extendShape({\n\n        type: 'symbol',\n\n        shape: {\n            symbolType: '',\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        beforeBrush: function () {\n            var style = this.style;\n            var shape = this.shape;\n            // FIXME\n            if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n                style.textPosition = ['50%', '40%'];\n                style.textAlign = 'center';\n                style.textVerticalAlign = 'middle';\n            }\n        },\n\n        buildPath: function (ctx, shape, inBundle) {\n            var symbolType = shape.symbolType;\n            var proxySymbol = symbolBuildProxies[symbolType];\n            if (shape.symbolType !== 'none') {\n                if (!proxySymbol) {\n                    // Default rect\n                    symbolType = 'rect';\n                    proxySymbol = symbolBuildProxies[symbolType];\n                }\n                symbolShapeMakers[symbolType](\n                    shape.x, shape.y, shape.width, shape.height, proxySymbol.shape\n                );\n                proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n            }\n        }\n    });\n\n    // Provide setColor helper method to avoid determine if set the fill or stroke outside\n    var symbolPathSetColor = function (color) {\n        if (this.type !== 'image') {\n            var symbolStyle = this.style;\n            var symbolShape = this.shape;\n            if (symbolShape && symbolShape.symbolType === 'line') {\n                symbolStyle.stroke = color;\n            }\n            else if (this.__isEmptyBrush) {\n                symbolStyle.stroke = color;\n                symbolStyle.fill = '#fff';\n            }\n            else {\n                // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n                symbolStyle.fill && (symbolStyle.fill = color);\n                symbolStyle.stroke && (symbolStyle.stroke = color);\n            }\n            this.dirty(false);\n        }\n    };\n\n    var symbolUtil = {\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @param {string} symbolType\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: function (symbolType, x, y, w, h, color) {\n            // TODO Support image object, DynamicImage.\n\n            var isEmpty = symbolType.indexOf('empty') === 0;\n            if (isEmpty) {\n                symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n            }\n            var symbolPath;\n\n            if (symbolType.indexOf('image://') === 0) {\n                symbolPath = new graphic.Image({\n                    style: {\n                        image: symbolType.slice(8),\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n            else if (symbolType.indexOf('path://') === 0) {\n                symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h));\n            }\n            else {\n                symbolPath = new Symbol({\n                    shape: {\n                        symbolType: symbolType,\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n\n            symbolPath.__isEmptyBrush = isEmpty;\n\n            symbolPath.setColor = symbolPathSetColor;\n\n            symbolPath.setColor(color);\n\n            return symbolPath;\n        }\n    };\n\n    module.exports = symbolUtil;\n\n\n/***/ }),\n\n/***/ 996:\n/***/ (function(module, exports) {\n\n\n\n    module.exports = {\n        toolbox: {\n            brush: {\n                title: {\n                    rect: '矩形选择',\n                    polygon: '圈选',\n                    lineX: '横向选择',\n                    lineY: '纵向选择',\n                    keep: '保持选择',\n                    clear: '清除选择'\n                }\n            },\n            dataView: {\n                title: '数据视图',\n                lang: ['数据视图', '关闭', '刷新']\n            },\n            dataZoom: {\n                title: {\n                    zoom: '区域缩放',\n                    back: '区域缩放还原'\n                }\n            },\n            magicType: {\n                title: {\n                    line: '切换为折线图',\n                    bar: '切换为柱状图',\n                    stack: '切换为堆叠',\n                    tiled: '切换为平铺'\n                }\n            },\n            restore: {\n                title: '还原'\n            },\n            saveAsImage: {\n                title: '保存为图片',\n                lang: ['右键另存为图片']\n            }\n        }\n    };\n\n\n\n/***/ }),\n\n/***/ 997:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(970);\n\n    var coordinateSystemCreators = {};\n\n    function CoordinateSystemManager() {\n\n        this._coordinateSystems = [];\n    }\n\n    CoordinateSystemManager.prototype = {\n\n        constructor: CoordinateSystemManager,\n\n        create: function (ecModel, api) {\n            var coordinateSystems = [];\n            zrUtil.each(coordinateSystemCreators, function (creater, type) {\n                var list = creater.create(ecModel, api);\n                coordinateSystems = coordinateSystems.concat(list || []);\n            });\n\n            this._coordinateSystems = coordinateSystems;\n        },\n\n        update: function (ecModel, api) {\n            zrUtil.each(this._coordinateSystems, function (coordSys) {\n                // FIXME MUST have\n                coordSys.update && coordSys.update(ecModel, api);\n            });\n        },\n\n        getCoordinateSystems: function () {\n            return this._coordinateSystems.slice();\n        }\n    };\n\n    CoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n        coordinateSystemCreators[type] = coordinateSystemCreator;\n    };\n\n    CoordinateSystemManager.get = function (type) {\n        return coordinateSystemCreators[type];\n    };\n\n    module.exports = CoordinateSystemManager;\n\n\n/***/ }),\n\n/***/ 998:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n\n // TODO getTotalLength, getPointAtLength\n\n\n    var curve = __webpack_require__(990);\n    var vec2 = __webpack_require__(975);\n    var bbox = __webpack_require__(1047);\n    var BoundingRect = __webpack_require__(981);\n    var dpr = __webpack_require__(999).devicePixelRatio;\n\n    var CMD = {\n        M: 1,\n        L: 2,\n        C: 3,\n        Q: 4,\n        A: 5,\n        Z: 6,\n        // Rect\n        R: 7\n    };\n\n    // var CMD_MEM_SIZE = {\n    //     M: 3,\n    //     L: 3,\n    //     C: 7,\n    //     Q: 5,\n    //     A: 9,\n    //     R: 5,\n    //     Z: 1\n    // };\n\n    var min = [];\n    var max = [];\n    var min2 = [];\n    var max2 = [];\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathCos = Math.cos;\n    var mathSin = Math.sin;\n    var mathSqrt = Math.sqrt;\n    var mathAbs = Math.abs;\n\n    var hasTypedArray = typeof Float32Array != 'undefined';\n\n    /**\n     * @alias module:zrender/core/PathProxy\n     * @constructor\n     */\n    var PathProxy = function (notSaveData) {\n\n        this._saveData = !(notSaveData || false);\n\n        if (this._saveData) {\n            /**\n             * Path data. Stored as flat array\n             * @type {Array.<Object>}\n             */\n            this.data = [];\n        }\n\n        this._ctx = null;\n    };\n\n    /**\n     * 快速计算Path包围盒（并不是最小包围盒）\n     * @return {Object}\n     */\n    PathProxy.prototype = {\n\n        constructor: PathProxy,\n\n        _xi: 0,\n        _yi: 0,\n\n        _x0: 0,\n        _y0: 0,\n        // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n        _ux: 0,\n        _uy: 0,\n\n        _len: 0,\n\n        _lineDash: null,\n\n        _dashOffset: 0,\n\n        _dashIdx: 0,\n\n        _dashSum: 0,\n\n        /**\n         * @readOnly\n         */\n        setScale: function (sx, sy) {\n            this._ux = mathAbs(1 / dpr / sx) || 0;\n            this._uy = mathAbs(1 / dpr / sy) || 0;\n        },\n\n        getContext: function () {\n            return this._ctx;\n        },\n\n        /**\n         * @param  {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        beginPath: function (ctx) {\n\n            this._ctx = ctx;\n\n            ctx && ctx.beginPath();\n\n            ctx && (this.dpr = ctx.dpr);\n\n            // Reset\n            if (this._saveData) {\n                this._len = 0;\n            }\n\n            if (this._lineDash) {\n                this._lineDash = null;\n\n                this._dashOffset = 0;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        moveTo: function (x, y) {\n            this.addData(CMD.M, x, y);\n            this._ctx && this._ctx.moveTo(x, y);\n\n            // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n            // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n            // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n            // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n            this._x0 = x;\n            this._y0 = y;\n\n            this._xi = x;\n            this._yi = y;\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        lineTo: function (x, y) {\n            var exceedUnit = mathAbs(x - this._xi) > this._ux\n                || mathAbs(y - this._yi) > this._uy\n                // Force draw the first segment\n                || this._len < 5;\n\n            this.addData(CMD.L, x, y);\n\n            if (this._ctx && exceedUnit) {\n                this._needsDash() ? this._dashedLineTo(x, y)\n                    : this._ctx.lineTo(x, y);\n            }\n            if (exceedUnit) {\n                this._xi = x;\n                this._yi = y;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @param  {number} x3\n         * @param  {number} y3\n         * @return {module:zrender/core/PathProxy}\n         */\n        bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n            this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3)\n                    : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n            }\n            this._xi = x3;\n            this._yi = y3;\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @return {module:zrender/core/PathProxy}\n         */\n        quadraticCurveTo: function (x1, y1, x2, y2) {\n            this.addData(CMD.Q, x1, y1, x2, y2);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2)\n                    : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n            }\n            this._xi = x2;\n            this._yi = y2;\n            return this;\n        },\n\n        /**\n         * @param  {number} cx\n         * @param  {number} cy\n         * @param  {number} r\n         * @param  {number} startAngle\n         * @param  {number} endAngle\n         * @param  {boolean} anticlockwise\n         * @return {module:zrender/core/PathProxy}\n         */\n        arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n            this.addData(\n                CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1\n            );\n            this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n\n            this._xi = mathCos(endAngle) * r + cx;\n            this._yi = mathSin(endAngle) * r + cx;\n            return this;\n        },\n\n        // TODO\n        arcTo: function (x1, y1, x2, y2, radius) {\n            if (this._ctx) {\n                this._ctx.arcTo(x1, y1, x2, y2, radius);\n            }\n            return this;\n        },\n\n        // TODO\n        rect: function (x, y, w, h) {\n            this._ctx && this._ctx.rect(x, y, w, h);\n            this.addData(CMD.R, x, y, w, h);\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/PathProxy}\n         */\n        closePath: function () {\n            this.addData(CMD.Z);\n\n            var ctx = this._ctx;\n            var x0 = this._x0;\n            var y0 = this._y0;\n            if (ctx) {\n                this._needsDash() && this._dashedLineTo(x0, y0);\n                ctx.closePath();\n            }\n\n            this._xi = x0;\n            this._yi = y0;\n            return this;\n        },\n\n        /**\n         * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n         * stroke 同样\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        fill: function (ctx) {\n            ctx && ctx.fill();\n            this.toStatic();\n        },\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        stroke: function (ctx) {\n            ctx && ctx.stroke();\n            this.toStatic();\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDash: function (lineDash) {\n            if (lineDash instanceof Array) {\n                this._lineDash = lineDash;\n\n                this._dashIdx = 0;\n\n                var lineDashSum = 0;\n                for (var i = 0; i < lineDash.length; i++) {\n                    lineDashSum += lineDash[i];\n                }\n                this._dashSum = lineDashSum;\n            }\n            return this;\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDashOffset: function (offset) {\n            this._dashOffset = offset;\n            return this;\n        },\n\n        /**\n         *\n         * @return {boolean}\n         */\n        len: function () {\n            return this._len;\n        },\n\n        /**\n         * 直接设置 Path 数据\n         */\n        setData: function (data) {\n\n            var len = data.length;\n\n            if (! (this.data && this.data.length == len) && hasTypedArray) {\n                this.data = new Float32Array(len);\n            }\n\n            for (var i = 0; i < len; i++) {\n                this.data[i] = data[i];\n            }\n\n            this._len = len;\n        },\n\n        /**\n         * 添加子路径\n         * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n         */\n        appendPath: function (path) {\n            if (!(path instanceof Array)) {\n                path = [path];\n            }\n            var len = path.length;\n            var appendSize = 0;\n            var offset = this._len;\n            for (var i = 0; i < len; i++) {\n                appendSize += path[i].len();\n            }\n            if (hasTypedArray && (this.data instanceof Float32Array)) {\n                this.data = new Float32Array(offset + appendSize);\n            }\n            for (var i = 0; i < len; i++) {\n                var appendPathData = path[i].data;\n                for (var k = 0; k < appendPathData.length; k++) {\n                    this.data[offset++] = appendPathData[k];\n                }\n            }\n            this._len = offset;\n        },\n\n        /**\n         * 填充 Path 数据。\n         * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n         */\n        addData: function (cmd) {\n            if (!this._saveData) {\n                return;\n            }\n\n            var data = this.data;\n            if (this._len + arguments.length > data.length) {\n                // 因为之前的数组已经转换成静态的 Float32Array\n                // 所以不够用时需要扩展一个新的动态数组\n                this._expandData();\n                data = this.data;\n            }\n            for (var i = 0; i < arguments.length; i++) {\n                data[this._len++] = arguments[i];\n            }\n\n            this._prevCmd = cmd;\n        },\n\n        _expandData: function () {\n            // Only if data is Float32Array\n            if (!(this.data instanceof Array)) {\n                var newData = [];\n                for (var i = 0; i < this._len; i++) {\n                    newData[i] = this.data[i];\n                }\n                this.data = newData;\n            }\n        },\n\n        /**\n         * If needs js implemented dashed line\n         * @return {boolean}\n         * @private\n         */\n        _needsDash: function () {\n            return this._lineDash;\n        },\n\n        _dashedLineTo: function (x1, y1) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var dx = x1 - x0;\n            var dy = y1 - y0;\n            var dist = mathSqrt(dx * dx + dy * dy);\n            var x = x0;\n            var y = y0;\n            var dash;\n            var nDash = lineDash.length;\n            var idx;\n            dx /= dist;\n            dy /= dist;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            x -= offset * dx;\n            y -= offset * dy;\n\n            while ((dx > 0 && x <= x1) || (dx < 0 && x >= x1)\n            || (dx == 0 && ((dy > 0 && y <= y1) || (dy < 0 && y >= y1)))) {\n                idx = this._dashIdx;\n                dash = lineDash[idx];\n                x += dx * dash;\n                y += dy * dash;\n                this._dashIdx = (idx + 1) % nDash;\n                // Skip positive offset\n                if ((dx > 0 && x < x0) || (dx < 0 && x > x0) || (dy > 0 && y < y0) || (dy < 0 && y > y0)) {\n                    continue;\n                }\n                ctx[idx % 2 ? 'moveTo' : 'lineTo'](\n                    dx >= 0 ? mathMin(x, x1) : mathMax(x, x1),\n                    dy >= 0 ? mathMin(y, y1) : mathMax(y, y1)\n                );\n            }\n            // Offset for next lineTo\n            dx = x - x1;\n            dy = y - y1;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        // Not accurate dashed line to\n        _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var t;\n            var dx;\n            var dy;\n            var cubicAt = curve.cubicAt;\n            var bezierLen = 0;\n            var idx = this._dashIdx;\n            var nDash = lineDash.length;\n\n            var x;\n            var y;\n\n            var tmpLen = 0;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            // Bezier approx length\n            for (t = 0; t < 1; t += 0.1) {\n                dx = cubicAt(x0, x1, x2, x3, t + 0.1)\n                    - cubicAt(x0, x1, x2, x3, t);\n                dy = cubicAt(y0, y1, y2, y3, t + 0.1)\n                    - cubicAt(y0, y1, y2, y3, t);\n                bezierLen += mathSqrt(dx * dx + dy * dy);\n            }\n\n            // Find idx after add offset\n            for (; idx < nDash; idx++) {\n                tmpLen += lineDash[idx];\n                if (tmpLen > offset) {\n                    break;\n                }\n            }\n            t = (tmpLen - offset) / bezierLen;\n\n            while (t <= 1) {\n\n                x = cubicAt(x0, x1, x2, x3, t);\n                y = cubicAt(y0, y1, y2, y3, t);\n\n                // Use line to approximate dashed bezier\n                // Bad result if dash is long\n                idx % 2 ? ctx.moveTo(x, y)\n                    : ctx.lineTo(x, y);\n\n                t += lineDash[idx] / bezierLen;\n\n                idx = (idx + 1) % nDash;\n            }\n\n            // Finish the last segment and calculate the new offset\n            (idx % 2 !== 0) && ctx.lineTo(x3, y3);\n            dx = x3 - x;\n            dy = y3 - y;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        _dashedQuadraticTo: function (x1, y1, x2, y2) {\n            // Convert quadratic to cubic using degree elevation\n            var x3 = x2;\n            var y3 = y2;\n            x2 = (x2 + 2 * x1) / 3;\n            y2 = (y2 + 2 * y1) / 3;\n            x1 = (this._xi + 2 * x1) / 3;\n            y1 = (this._yi + 2 * y1) / 3;\n\n            this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n        },\n\n        /**\n         * 转成静态的 Float32Array 减少堆内存占用\n         * Convert dynamic array to static Float32Array\n         */\n        toStatic: function () {\n            var data = this.data;\n            if (data instanceof Array) {\n                data.length = this._len;\n                if (hasTypedArray) {\n                    this.data = new Float32Array(data);\n                }\n            }\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function () {\n            min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n            max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n\n            var data = this.data;\n            var xi = 0;\n            var yi = 0;\n            var x0 = 0;\n            var y0 = 0;\n\n            for (var i = 0; i < data.length;) {\n                var cmd = data[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = data[i];\n                    yi = data[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n\n                switch (cmd) {\n                    case CMD.M:\n                        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                        // 在 closePath 的时候使用\n                        x0 = data[i++];\n                        y0 = data[i++];\n                        xi = x0;\n                        yi = y0;\n                        min2[0] = x0;\n                        min2[1] = y0;\n                        max2[0] = x0;\n                        max2[1] = y0;\n                        break;\n                    case CMD.L:\n                        bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.C:\n                        bbox.fromCubic(\n                            xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.Q:\n                        bbox.fromQuadratic(\n                            xi, yi, data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.A:\n                        // TODO Arc 判断的开销比较大\n                        var cx = data[i++];\n                        var cy = data[i++];\n                        var rx = data[i++];\n                        var ry = data[i++];\n                        var startAngle = data[i++];\n                        var endAngle = data[i++] + startAngle;\n                        // TODO Arc 旋转\n                        var psi = data[i++];\n                        var anticlockwise = 1 - data[i++];\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(startAngle) * rx + cx;\n                            y0 = mathSin(startAngle) * ry + cy;\n                        }\n\n                        bbox.fromArc(\n                            cx, cy, rx, ry, startAngle, endAngle,\n                            anticlockwise, min2, max2\n                        );\n\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = data[i++];\n                        y0 = yi = data[i++];\n                        var width = data[i++];\n                        var height = data[i++];\n                        // Use fromLine\n                        bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n                        break;\n                    case CMD.Z:\n                        xi = x0;\n                        yi = y0;\n                        break;\n                }\n\n                // Union\n                vec2.min(min, min, min2);\n                vec2.max(max, max, max2);\n            }\n\n            // No data\n            if (i === 0) {\n                min[0] = min[1] = max[0] = max[1] = 0;\n            }\n\n            return new BoundingRect(\n                min[0], min[1], max[0] - min[0], max[1] - min[1]\n            );\n        },\n\n        /**\n         * Rebuild path from current data\n         * Rebuild path will not consider javascript implemented line dash.\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        rebuildPath: function (ctx) {\n            var d = this.data;\n            var x0, y0;\n            var xi, yi;\n            var x, y;\n            var ux = this._ux;\n            var uy = this._uy;\n            var len = this._len;\n            for (var i = 0; i < len;) {\n                var cmd = d[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = d[i];\n                    yi = d[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n                switch (cmd) {\n                    case CMD.M:\n                        x0 = xi = d[i++];\n                        y0 = yi = d[i++];\n                        ctx.moveTo(xi, yi);\n                        break;\n                    case CMD.L:\n                        x = d[i++];\n                        y = d[i++];\n                        // Not draw too small seg between\n                        if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n                            ctx.lineTo(x, y);\n                            xi = x;\n                            yi = y;\n                        }\n                        break;\n                    case CMD.C:\n                        ctx.bezierCurveTo(\n                            d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]\n                        );\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.Q:\n                        ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.A:\n                        var cx = d[i++];\n                        var cy = d[i++];\n                        var rx = d[i++];\n                        var ry = d[i++];\n                        var theta = d[i++];\n                        var dTheta = d[i++];\n                        var psi = d[i++];\n                        var fs = d[i++];\n                        var r = (rx > ry) ? rx : ry;\n                        var scaleX = (rx > ry) ? 1 : rx / ry;\n                        var scaleY = (rx > ry) ? ry / rx : 1;\n                        var isEllipse = Math.abs(rx - ry) > 1e-3;\n                        var endAngle = theta + dTheta;\n                        if (isEllipse) {\n                            ctx.translate(cx, cy);\n                            ctx.rotate(psi);\n                            ctx.scale(scaleX, scaleY);\n                            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n                            ctx.scale(1 / scaleX, 1 / scaleY);\n                            ctx.rotate(-psi);\n                            ctx.translate(-cx, -cy);\n                        }\n                        else {\n                            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n                        }\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(theta) * rx + cx;\n                            y0 = mathSin(theta) * ry + cy;\n                        }\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = d[i];\n                        y0 = yi = d[i + 1];\n                        ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n                        break;\n                    case CMD.Z:\n                        ctx.closePath();\n                        xi = x0;\n                        yi = y0;\n                }\n            }\n        }\n    };\n\n    PathProxy.CMD = CMD;\n\n    module.exports = PathProxy;\n\n\n/***/ }),\n\n/***/ 999:\n/***/ (function(module, exports) {\n\n\n    var dpr = 1;\n    // If in browser environment\n    if (typeof window !== 'undefined') {\n        dpr = Math.max(window.devicePixelRatio || 1, 1);\n    }\n    /**\n     * config默认配置项\n     * @exports zrender/config\n     * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n     */\n    var config = {\n        /**\n         * debug日志选项：catchBrushException为true下有效\n         * 0 : 不生成debug数据，发布用\n         * 1 : 异常抛出，调试用\n         * 2 : 控制台输出，调试用\n         */\n        debugMode: 0,\n\n        // retina 屏幕优化\n        devicePixelRatio: dpr\n    };\n    module.exports = config;\n\n\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/PieReact.21674c18.chunk.js","/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/lib/container/Group');\n *     var Circle = require('zrender/lib/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n\n    var zrUtil = require('../core/util');\n    var Element = require('../Element');\n    var BoundingRect = require('../core/BoundingRect');\n\n    /**\n     * @alias module:zrender/graphic/Group\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @extends module:zrender/mixin/Eventful\n     */\n    var Group = function (opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        for (var key in opts) {\n            if (opts.hasOwnProperty(key)) {\n                this[key] = opts[key];\n            }\n        }\n\n        this._children = [];\n\n        this.__storage = null;\n\n        this.__dirty = true;\n    };\n\n    Group.prototype = {\n\n        constructor: Group,\n\n        isGroup: true,\n\n        /**\n         * @type {string}\n         */\n        type: 'group',\n\n        /**\n         * 所有子孙元素是否响应鼠标事件\n         * @name module:/zrender/container/Group#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * @return {Array.<module:zrender/Element>}\n         */\n        children: function () {\n            return this._children.slice();\n        },\n\n        /**\n         * 获取指定 index 的儿子节点\n         * @param  {number} idx\n         * @return {module:zrender/Element}\n         */\n        childAt: function (idx) {\n            return this._children[idx];\n        },\n\n        /**\n         * 获取指定名字的儿子节点\n         * @param  {string} name\n         * @return {module:zrender/Element}\n         */\n        childOfName: function (name) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                if (children[i].name === name) {\n                    return children[i];\n                }\n             }\n        },\n\n        /**\n         * @return {number}\n         */\n        childCount: function () {\n            return this._children.length;\n        },\n\n        /**\n         * 添加子节点到最后\n         * @param {module:zrender/Element} child\n         */\n        add: function (child) {\n            if (child && child !== this && child.parent !== this) {\n\n                this._children.push(child);\n\n                this._doAdd(child);\n            }\n\n            return this;\n        },\n\n        /**\n         * 添加子节点在 nextSibling 之前\n         * @param {module:zrender/Element} child\n         * @param {module:zrender/Element} nextSibling\n         */\n        addBefore: function (child, nextSibling) {\n            if (child && child !== this && child.parent !== this\n                && nextSibling && nextSibling.parent === this) {\n\n                var children = this._children;\n                var idx = children.indexOf(nextSibling);\n\n                if (idx >= 0) {\n                    children.splice(idx, 0, child);\n                    this._doAdd(child);\n                }\n            }\n\n            return this;\n        },\n\n        _doAdd: function (child) {\n            if (child.parent) {\n                child.parent.remove(child);\n            }\n\n            child.parent = this;\n\n            var storage = this.__storage;\n            var zr = this.__zr;\n            if (storage && storage !== child.__storage) {\n\n                storage.addToStorage(child);\n\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n        },\n\n        /**\n         * 移除子节点\n         * @param {module:zrender/Element} child\n         */\n        remove: function (child) {\n            var zr = this.__zr;\n            var storage = this.__storage;\n            var children = this._children;\n\n            var idx = zrUtil.indexOf(children, child);\n            if (idx < 0) {\n                return this;\n            }\n            children.splice(idx, 1);\n\n            child.parent = null;\n\n            if (storage) {\n\n                storage.delFromStorage(child);\n\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n\n            return this;\n        },\n\n        /**\n         * 移除所有子节点\n         */\n        removeAll: function () {\n            var children = this._children;\n            var storage = this.__storage;\n            var child;\n            var i;\n            for (i = 0; i < children.length; i++) {\n                child = children[i];\n                if (storage) {\n                    storage.delFromStorage(child);\n                    if (child instanceof Group) {\n                        child.delChildrenFromStorage(storage);\n                    }\n                }\n                child.parent = null;\n            }\n            children.length = 0;\n\n            return this;\n        },\n\n        /**\n         * 遍历所有子节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        eachChild: function (cb, context) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                cb.call(context, child, i);\n            }\n            return this;\n        },\n\n        /**\n         * 深度优先遍历所有子孙节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                cb.call(context, child);\n\n                if (child.type === 'group') {\n                    child.traverse(cb, context);\n                }\n            }\n            return this;\n        },\n\n        addChildrenToStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.addToStorage(child);\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n        },\n\n        delChildrenFromStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.delFromStorage(child);\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n        },\n\n        dirty: function () {\n            this.__dirty = true;\n            this.__zr && this.__zr.refresh();\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function (includeChildren) {\n            // TODO Caching\n            var rect = null;\n            var tmpRect = new BoundingRect(0, 0, 0, 0);\n            var children = includeChildren || this._children;\n            var tmpMat = [];\n\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                if (child.ignore || child.invisible) {\n                    continue;\n                }\n\n                var childRect = child.getBoundingRect();\n                var transform = child.getLocalTransform(tmpMat);\n                // TODO\n                // The boundingRect cacluated by transforming original\n                // rect may be bigger than the actual bundingRect when rotation\n                // is used. (Consider a circle rotated aginst its center, where\n                // the actual boundingRect should be the same as that not be\n                // rotated.) But we can not find better approach to calculate\n                // actual boundingRect yet, considering performance.\n                if (transform) {\n                    tmpRect.copy(childRect);\n                    tmpRect.applyTransform(transform);\n                    rect = rect || tmpRect.clone();\n                    rect.union(tmpRect);\n                }\n                else {\n                    rect = rect || childRect.clone();\n                    rect.union(childRect);\n                }\n            }\n            return rect || tmpRect;\n        }\n    };\n\n    zrUtil.inherits(Group, Element);\n\n    module.exports = Group;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/container/Group.js\n// module id = 1000\n// module chunks = 0 1 2","\n\n    var Group = require('zrender/lib/container/Group');\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n    var modelUtil = require('../util/model');\n    var zrUtil = require('zrender/lib/core/util');\n\n    function Chart() {\n\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewChart');\n    }\n\n    Chart.prototype = {\n\n        type: 'chart',\n\n        /**\n         * Init the chart\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        init: function (ecModel, api) {},\n\n        /**\n         * Render the chart\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        render: function (seriesModel, ecModel, api, payload) {},\n\n        /**\n         * Highlight series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        highlight: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n        },\n\n        /**\n         * Downplay series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        downplay: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'normal');\n        },\n\n        /**\n         * Remove self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        remove: function (ecModel, api) {\n            this.group.removeAll();\n        },\n\n        /**\n         * Dispose self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        dispose: function () {}\n\n        /**\n         * The view contains the given point.\n         * @interface\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        // containPoint: function () {}\n\n    };\n\n    var chartProto = Chart.prototype;\n    chartProto.updateView\n        = chartProto.updateLayout\n        = chartProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            this.render(seriesModel, ecModel, api, payload);\n        };\n\n    /**\n     * Set state of single element\n     * @param  {module:zrender/Element} el\n     * @param  {string} state\n     */\n    function elSetState(el, state) {\n        if (el) {\n            el.trigger(state);\n            if (el.type === 'group') {\n                for (var i = 0; i < el.childCount(); i++) {\n                    elSetState(el.childAt(i), state);\n                }\n            }\n        }\n    }\n    /**\n     * @param  {module:echarts/data/List} data\n     * @param  {Object} payload\n     * @param  {string} state 'normal'|'emphasis'\n     * @inner\n     */\n    function toggleHighlight(data, payload, state) {\n        var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n        if (dataIndex != null) {\n            zrUtil.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n                elSetState(data.getItemGraphicEl(dataIdx), state);\n            });\n        }\n        else {\n            data.eachItemGraphicEl(function (el) {\n                elSetState(el, state);\n            });\n        }\n    }\n\n    // Enable Chart.extend.\n    clazzUtil.enableClassExtend(Chart, ['dispose']);\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Chart, {registerWhenExtend: true});\n\n    module.exports = Chart;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/view/Chart.js\n// module id = 1001\n// module chunks = 0 1 2","'use strict';\n\n\n    function defaultKeyGetter(item) {\n        return item;\n    }\n\n    /**\n     * @param {Array} oldArr\n     * @param {Array} newArr\n     * @param {Function} oldKeyGetter\n     * @param {Function} newKeyGetter\n     * @param {Object} [context] Can be visited by this.context in callback.\n     */\n    function DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter, context) {\n        this._old = oldArr;\n        this._new = newArr;\n\n        this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n        this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n\n        this.context = context;\n    }\n\n    DataDiffer.prototype = {\n\n        constructor: DataDiffer,\n\n        /**\n         * Callback function when add a data\n         */\n        add: function (func) {\n            this._add = func;\n            return this;\n        },\n\n        /**\n         * Callback function when update a data\n         */\n        update: function (func) {\n            this._update = func;\n            return this;\n        },\n\n        /**\n         * Callback function when remove a data\n         */\n        remove: function (func) {\n            this._remove = func;\n            return this;\n        },\n\n        execute: function () {\n            var oldArr = this._old;\n            var newArr = this._new;\n\n            var oldDataIndexMap = {};\n            var newDataIndexMap = {};\n            var oldDataKeyArr = [];\n            var newDataKeyArr = [];\n            var i;\n\n            initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, '_oldKeyGetter', this);\n            initIndexMap(newArr, newDataIndexMap, newDataKeyArr, '_newKeyGetter', this);\n\n            // Travel by inverted order to make sure order consistency\n            // when duplicate keys exists (consider newDataIndex.pop() below).\n            // For performance consideration, these code below do not look neat.\n            for (i = 0; i < oldArr.length; i++) {\n                var key = oldDataKeyArr[i];\n                var idx = newDataIndexMap[key];\n\n                // idx can never be empty array here. see 'set null' logic below.\n                if (idx != null) {\n                    // Consider there is duplicate key (for example, use dataItem.name as key).\n                    // We should make sure every item in newArr and oldArr can be visited.\n                    var len = idx.length;\n                    if (len) {\n                        len === 1 && (newDataIndexMap[key] = null);\n                        idx = idx.unshift();\n                    }\n                    else {\n                        newDataIndexMap[key] = null;\n                    }\n                    this._update && this._update(idx, i);\n                }\n                else {\n                    this._remove && this._remove(i);\n                }\n            }\n\n            for (var i = 0; i < newDataKeyArr.length; i++) {\n                var key = newDataKeyArr[i];\n                if (newDataIndexMap.hasOwnProperty(key)) {\n                    var idx = newDataIndexMap[key];\n                    if (idx == null) {\n                        continue;\n                    }\n                    // idx can never be empty array here. see 'set null' logic above.\n                    if (!idx.length) {\n                        this._add && this._add(idx);\n                    }\n                    else {\n                        for (var j = 0, len = idx.length; j < len; j++) {\n                            this._add && this._add(idx[j]);\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    function initIndexMap(arr, map, keyArr, keyGetterName, dataDiffer) {\n        for (var i = 0; i < arr.length; i++) {\n            // Add prefix to avoid conflict with Object.prototype.\n            var key = '_ec_' + dataDiffer[keyGetterName](arr[i], i);\n            var existence = map[key];\n            if (existence == null) {\n                keyArr.push(key);\n                map[key] = i;\n            }\n            else {\n                if (!existence.length) {\n                    map[key] = existence = [existence];\n                }\n                existence.push(i);\n            }\n        }\n    }\n\n    module.exports = DataDiffer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/data/DataDiffer.js\n// module id = 1002\n// module chunks = 0 1 2","/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n\n    var clazzUtil = require('../util/clazz');\n\n    /**\n     * @param {Object} [setting]\n     */\n    function Scale(setting) {\n        this._setting = setting || {};\n\n        /**\n         * Extent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._extent = [Infinity, -Infinity];\n\n        /**\n         * Step is calculated in adjustExtent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._interval = 0;\n\n        this.init && this.init.apply(this, arguments);\n    }\n\n    var scaleProto = Scale.prototype;\n\n    /**\n     * Parse input val to valid inner number.\n     * @param {*} val\n     * @return {number}\n     */\n    scaleProto.parse = function (val) {\n        // Notice: This would be a trap here, If the implementation\n        // of this method depends on extent, and this method is used\n        // before extent set (like in dataZoom), it would be wrong.\n        // Nevertheless, parse does not depend on extent generally.\n        return val;\n    };\n\n    scaleProto.getSetting = function (name) {\n        return this._setting[name];\n    };\n\n    scaleProto.contain = function (val) {\n        var extent = this._extent;\n        return val >= extent[0] && val <= extent[1];\n    };\n\n    /**\n     * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.normalize = function (val) {\n        var extent = this._extent;\n        if (extent[1] === extent[0]) {\n            return 0.5;\n        }\n        return (val - extent[0]) / (extent[1] - extent[0]);\n    };\n\n    /**\n     * Scale normalized value\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.scale = function (val) {\n        var extent = this._extent;\n        return val * (extent[1] - extent[0]) + extent[0];\n    };\n\n    /**\n     * Set extent from data\n     * @param {Array.<number>} other\n     */\n    scaleProto.unionExtent = function (other) {\n        var extent = this._extent;\n        other[0] < extent[0] && (extent[0] = other[0]);\n        other[1] > extent[1] && (extent[1] = other[1]);\n        // not setExtent because in log axis it may transformed to power\n        // this.setExtent(extent[0], extent[1]);\n    };\n\n    /**\n     * Set extent from data\n     * @param {module:echarts/data/List} data\n     * @param {string} dim\n     */\n    scaleProto.unionExtentFromData = function (data, dim) {\n        this.unionExtent(data.getDataExtent(dim, true));\n    };\n\n    /**\n     * Get extent\n     * @return {Array.<number>}\n     */\n    scaleProto.getExtent = function () {\n        return this._extent.slice();\n    };\n\n    /**\n     * Set extent\n     * @param {number} start\n     * @param {number} end\n     */\n    scaleProto.setExtent = function (start, end) {\n        var thisExtent = this._extent;\n        if (!isNaN(start)) {\n            thisExtent[0] = start;\n        }\n        if (!isNaN(end)) {\n            thisExtent[1] = end;\n        }\n    };\n\n    /**\n     * @return {Array.<string>}\n     */\n    scaleProto.getTicksLabels = function () {\n        var labels = [];\n        var ticks = this.getTicks();\n        for (var i = 0; i < ticks.length; i++) {\n            labels.push(this.getLabel(ticks[i]));\n        }\n        return labels;\n    };\n\n    /**\n     * When axis extent depends on data and no data exists,\n     * axis ticks should not be drawn, which is named 'blank'.\n     */\n    scaleProto.isBlank = function () {\n        return this._isBlank;\n    },\n\n    /**\n     * When axis extent depends on data and no data exists,\n     * axis ticks should not be drawn, which is named 'blank'.\n     */\n    scaleProto.setBlank = function (isBlank) {\n        this._isBlank = isBlank;\n    };\n\n\n    clazzUtil.enableClassExtend(Scale);\n    clazzUtil.enableClassManagement(Scale, {\n        registerWhenExtend: true\n    });\n\n    module.exports = Scale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/scale/Scale.js\n// module id = 1003\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Model = require('../../model/Model');\n    var each = zrUtil.each;\n    var curry = zrUtil.curry;\n\n    var helper = {};\n\n    // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n    // allAxesInfo should be updated when setOption performed.\n    helper.collect = function (ecModel, api) {\n        var result = {\n            /**\n             * key: makeKey(axis.model)\n             * value: {\n             *      axis,\n             *      coordSys,\n             *      axisPointerModel,\n             *      triggerTooltip,\n             *      involveSeries,\n             *      snap,\n             *      seriesModels,\n             *      seriesDataCount\n             * }\n             */\n            axesInfo: {},\n            seriesInvolved: false,\n            /**\n             * key: makeKey(coordSys.model)\n             * value: Object: key makeKey(axis.model), value: axisInfo\n             */\n            coordSysAxesInfo: {},\n            coordSysMap: {}\n        };\n\n        collectAxesInfo(result, ecModel, api);\n\n        // Check seriesInvolved for performance, in case too many series in some chart.\n        result.seriesInvolved && collectSeriesInfo(result, ecModel);\n\n        return result;\n    };\n\n    function collectAxesInfo(result, ecModel, api) {\n        var globalTooltipModel = ecModel.getComponent('tooltip');\n        var globalAxisPointerModel = ecModel.getComponent('axisPointer');\n        // links can only be set on global.\n        var linksOption = globalAxisPointerModel.get('link', true) || [];\n        var linkGroups = [];\n\n        // Collect axes info.\n        each(api.getCoordinateSystems(), function (coordSys) {\n            // Some coordinate system do not support axes, like geo.\n            if (!coordSys.axisPointerEnabled) {\n                return;\n            }\n\n            var coordSysKey = makeKey(coordSys.model);\n            var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n            result.coordSysMap[coordSysKey] = coordSys;\n\n            // Set tooltip (like 'cross') is a convienent way to show axisPointer\n            // for user. So we enable seting tooltip on coordSys model.\n            var coordSysModel = coordSys.model;\n            var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n\n            each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null));\n\n            // If axis tooltip used, choose tooltip axis for each coordSys.\n            // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n            if (coordSys.getTooltipAxes\n                && globalTooltipModel\n                // If tooltip.showContent is set as false, tooltip will not\n                // show but axisPointer will show as normal.\n                && baseTooltipModel.get('show')\n            ) {\n                // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n                // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n                var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n                var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n                var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n                if (triggerAxis || cross) {\n                    each(tooltipAxes.baseAxes, curry(\n                        saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis\n                    ));\n                }\n                if (cross) {\n                    each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n                }\n            }\n\n            // fromTooltip: true | false | 'cross'\n            // triggerTooltip: true | false | null\n            function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n                var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n\n                var axisPointerShow = axisPointerModel.get('show');\n                if (!axisPointerShow || (\n                    axisPointerShow === 'auto'\n                    && !fromTooltip\n                    && !isHandleTrigger(axisPointerModel)\n                )) {\n                    return;\n                }\n\n                if (triggerTooltip == null) {\n                    triggerTooltip = axisPointerModel.get('triggerTooltip');\n                }\n\n                axisPointerModel = fromTooltip\n                    ? makeAxisPointerModel(\n                        axis, baseTooltipModel, globalAxisPointerModel, ecModel,\n                        fromTooltip, triggerTooltip\n                    )\n                    : axisPointerModel;\n\n                var snap = axisPointerModel.get('snap');\n                var key = makeKey(axis.model);\n                var involveSeries = triggerTooltip || snap || axis.type === 'category';\n\n                // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n                var axisInfo = result.axesInfo[key] = {\n                    key: key,\n                    axis: axis,\n                    coordSys: coordSys,\n                    axisPointerModel: axisPointerModel,\n                    triggerTooltip: triggerTooltip,\n                    involveSeries: involveSeries,\n                    snap: snap,\n                    useHandle: isHandleTrigger(axisPointerModel),\n                    seriesModels: []\n                };\n                axesInfoInCoordSys[key] = axisInfo;\n                result.seriesInvolved |= involveSeries;\n\n                var groupIndex = getLinkGroupIndex(linksOption, axis);\n                if (groupIndex != null) {\n                    var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {axesInfo: {}});\n                    linkGroup.axesInfo[key] = axisInfo;\n                    linkGroup.mapper = linksOption[groupIndex].mapper;\n                    axisInfo.linkGroup = linkGroup;\n                }\n            }\n        });\n    }\n\n    function makeAxisPointerModel(\n        axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip\n    ) {\n        var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n        var volatileOption = {};\n\n        each(\n            [\n                'type', 'snap', 'lineStyle', 'shadowStyle', 'label',\n                'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'\n            ],\n            function (field) {\n                volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n            }\n        );\n\n        // category axis do not auto snap, otherwise some tick that do not\n        // has value can not be hovered. value/time/log axis default snap if\n        // triggered from tooltip and trigger tooltip.\n        volatileOption.snap = axis.type !== 'category' && !!triggerTooltip;\n\n        // Compatibel with previous behavior, tooltip axis do not show label by default.\n        // Only these properties can be overrided from tooltip to axisPointer.\n        if (tooltipAxisPointerModel.get('type') === 'cross') {\n            volatileOption.type = 'line';\n        }\n        var labelOption = volatileOption.label || (volatileOption.label = {});\n        // Follow the convention, do not show label when triggered by tooltip by default.\n        labelOption.show == null && (labelOption.show = false);\n\n        if (fromTooltip === 'cross') {\n            // When 'cross', both axes show labels.\n            labelOption.show = true;\n            // If triggerTooltip, this is a base axis, which should better not use cross style\n            // (cross style is dashed by default)\n            if (!triggerTooltip) {\n                var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n                crossStyle && zrUtil.defaults(labelOption, crossStyle.textStyle);\n            }\n        }\n\n        return axis.model.getModel(\n            'axisPointer',\n            new Model(volatileOption, globalAxisPointerModel, ecModel)\n        );\n    }\n\n    function collectSeriesInfo(result, ecModel) {\n        // Prepare data for axis trigger\n        ecModel.eachSeries(function (seriesModel) {\n\n            // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n            var coordSys = seriesModel.coordinateSystem;\n            var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n            var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n            if (!coordSys\n                || seriesTooltipTrigger === 'none'\n                || seriesTooltipTrigger === false\n                || seriesTooltipTrigger === 'item'\n                || seriesTooltipShow === false\n                || seriesModel.get('axisPointer.show', true) === false\n            ) {\n                return;\n            }\n\n            each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n                var axis = axisInfo.axis;\n                if (coordSys.getAxis(axis.dim) === axis) {\n                    axisInfo.seriesModels.push(seriesModel);\n                    axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n                    axisInfo.seriesDataCount += seriesModel.getData().count();\n                }\n            });\n\n        }, this);\n    }\n\n    /**\n     * For example:\n     * {\n     *     axisPointer: {\n     *         links: [{\n     *             xAxisIndex: [2, 4],\n     *             yAxisIndex: 'all'\n     *         }, {\n     *             xAxisId: ['a5', 'a7'],\n     *             xAxisName: 'xxx'\n     *         }]\n     *     }\n     * }\n     */\n    function getLinkGroupIndex(linksOption, axis) {\n        var axisModel = axis.model;\n        var dim = axis.dim;\n        for (var i = 0; i < linksOption.length; i++) {\n            var linkOption = linksOption[i] || {};\n            if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id)\n                || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex)\n                || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)\n            ) {\n                return i;\n            }\n        }\n    }\n\n    function checkPropInLink(linkPropValue, axisPropValue) {\n        return linkPropValue === 'all'\n            || (zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0)\n            || linkPropValue === axisPropValue;\n    }\n\n    helper.fixValue = function (axisModel) {\n        var axisInfo = helper.getAxisInfo(axisModel);\n        if (!axisInfo) {\n            return;\n        }\n\n        var axisPointerModel = axisInfo.axisPointerModel;\n        var scale = axisInfo.axis.scale;\n        var option = axisPointerModel.option;\n        var status = axisPointerModel.get('status');\n        var value = axisPointerModel.get('value');\n\n        // Parse init value for category and time axis.\n        if (value != null) {\n            value = scale.parse(value);\n        }\n\n        var useHandle = isHandleTrigger(axisPointerModel);\n        // If `handle` used, `axisPointer` will always be displayed, so value\n        // and status should be initialized.\n        if (status == null) {\n            option.status = useHandle ? 'show' : 'hide';\n        }\n\n        var extent = scale.getExtent().slice();\n        extent[0] > extent[1] && extent.reverse();\n\n        if (// Pick a value on axis when initializing.\n            value == null\n            // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n            // where we should re-pick a value to keep `handle` displaying normally.\n            || value > extent[1]\n        ) {\n            // Make handle displayed on the end of the axis when init, which looks better.\n            value = extent[1];\n        }\n        if (value < extent[0]) {\n            value = extent[0];\n        }\n\n        option.value = value;\n\n        if (useHandle) {\n            option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n        }\n    };\n\n    helper.getAxisInfo = function (axisModel) {\n        var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n        return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n    };\n\n    helper.getAxisPointerModel = function (axisModel) {\n        var axisInfo = helper.getAxisInfo(axisModel);\n        return axisInfo && axisInfo.axisPointerModel;\n    };\n\n    function isHandleTrigger(axisPointerModel) {\n        return !!axisPointerModel.get('handle.show');\n    }\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @return {string} unique key\n     */\n    var makeKey = helper.makeKey = function (model) {\n        return model.type + '||' + model.id;\n    };\n\n    module.exports = helper;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/modelHelper.js\n// module id = 1004\n// module chunks = 0 1 2","// TODO Parse shadow style\n// TODO Only shallow path support\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    module.exports = function (properties) {\n        // Normalize\n        for (var i = 0; i < properties.length; i++) {\n            if (!properties[i][1]) {\n               properties[i][1] = properties[i][0];\n            }\n        }\n        return function (excludes, includes) {\n            var style = {};\n            for (var i = 0; i < properties.length; i++) {\n                var propName = properties[i][1];\n                if ((excludes && zrUtil.indexOf(excludes, propName) >= 0)\n                    || (includes && zrUtil.indexOf(includes, propName) < 0)\n                ) {\n                    continue;\n                }\n                var val = this.getShallow(propName);\n                if (val != null) {\n                    style[properties[i][0]] = val;\n                }\n            }\n            return style;\n        };\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/mixin/makeStyleMapper.js\n// module id = 1005\n// module chunks = 0 1 2","\n\n    var numberUtil = require('../util/number');\n    var linearMap = numberUtil.linearMap;\n    var zrUtil = require('zrender/lib/core/util');\n    var axisHelper = require('./axisHelper');\n\n    function fixExtentWithBands(extent, nTick) {\n        var size = extent[1] - extent[0];\n        var len = nTick;\n        var margin = size / len / 2;\n        extent[0] += margin;\n        extent[1] -= margin;\n    }\n\n    var normalizedExtent = [0, 1];\n    /**\n     * @name module:echarts/coord/CartesianAxis\n     * @constructor\n     */\n    var Axis = function (dim, scale, extent) {\n\n        /**\n         * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n         * @type {string}\n         */\n        this.dim = dim;\n\n        /**\n         * Axis scale\n         * @type {module:echarts/coord/scale/*}\n         */\n        this.scale = scale;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        this._extent = extent || [0, 0];\n\n        /**\n         * @type {boolean}\n         */\n        this.inverse = false;\n\n        /**\n         * Usually true when axis has a ordinal scale\n         * @type {boolean}\n         */\n        this.onBand = false;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._labelInterval;\n    };\n\n    Axis.prototype = {\n\n        constructor: Axis,\n\n        /**\n         * If axis extent contain given coord\n         * @param {number} coord\n         * @return {boolean}\n         */\n        contain: function (coord) {\n            var extent = this._extent;\n            var min = Math.min(extent[0], extent[1]);\n            var max = Math.max(extent[0], extent[1]);\n            return coord >= min && coord <= max;\n        },\n\n        /**\n         * If axis extent contain given data\n         * @param {number} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.contain(this.dataToCoord(data));\n        },\n\n        /**\n         * Get coord extent.\n         * @return {Array.<number>}\n         */\n        getExtent: function () {\n            return this._extent.slice();\n        },\n\n        /**\n         * Get precision used for formatting\n         * @param {Array.<number>} [dataExtent]\n         * @return {number}\n         */\n        getPixelPrecision: function (dataExtent) {\n            return numberUtil.getPixelPrecision(\n                dataExtent || this.scale.getExtent(),\n                this._extent\n            );\n        },\n\n        /**\n         * Set coord extent\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var extent = this._extent;\n            extent[0] = start;\n            extent[1] = end;\n        },\n\n        /**\n         * Convert data to coord. Data is the rank if it has a ordinal scale\n         * @param {number} data\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        dataToCoord: function (data, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n            data = scale.normalize(data);\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            return linearMap(data, normalizedExtent, extent, clamp);\n        },\n\n        /**\n         * Convert coord to data. Data is the rank if it has a ordinal scale\n         * @param {number} coord\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        coordToData: function (coord, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            var t = linearMap(coord, extent, normalizedExtent, clamp);\n\n            return this.scale.scale(t);\n        },\n\n        /**\n         * Convert pixel point to data in axis\n         * @param {Array.<number>} point\n         * @param  {boolean} clamp\n         * @return {number} data\n         */\n        pointToData: function (point, clamp) {\n            // Should be implemented in derived class if necessary.\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicksCoords: function (alignWithLabel) {\n            if (this.onBand && !alignWithLabel) {\n                var bands = this.getBands();\n                var coords = [];\n                for (var i = 0; i < bands.length; i++) {\n                    coords.push(bands[i][0]);\n                }\n                if (bands[i - 1]) {\n                    coords.push(bands[i - 1][1]);\n                }\n                return coords;\n            }\n            else {\n                return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n            }\n        },\n\n        /**\n         * Coords of labels are on the ticks or on the middle of bands\n         * @return {Array.<number>}\n         */\n        getLabelsCoords: function () {\n            return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n        },\n\n        /**\n         * Get bands.\n         *\n         * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n         * |---1---|---2---|---3---|---4---|.\n         *\n         * @return {Array}\n         */\n         // FIXME Situation when labels is on ticks\n        getBands: function () {\n            var extent = this.getExtent();\n            var bands = [];\n            var len = this.scale.count();\n            var start = extent[0];\n            var end = extent[1];\n            var span = end - start;\n\n            for (var i = 0; i < len; i++) {\n                bands.push([\n                    span * i / len + start,\n                    span * (i + 1) / len + start\n                ]);\n            }\n            return bands;\n        },\n\n        /**\n         * Get width of band\n         * @return {number}\n         */\n        getBandWidth: function () {\n            var axisExtent = this._extent;\n            var dataExtent = this.scale.getExtent();\n\n            var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0);\n            // Fix #2728, avoid NaN when only one data.\n            len === 0 && (len = 1);\n\n            var size = Math.abs(axisExtent[1] - axisExtent[0]);\n\n            return Math.abs(size) / len;\n        },\n\n        /**\n         * Get interval of the axis label.\n         * @return {number}\n         */\n        getLabelInterval: function () {\n            var labelInterval = this._labelInterval;\n            if (!labelInterval) {\n                var axisModel = this.model;\n                var labelModel = axisModel.getModel('axisLabel');\n                var interval = labelModel.get('interval');\n                if (!(this.type === 'category' && interval === 'auto')) {\n                    labelInterval = interval === 'auto' ? 0 : interval;\n                }\n                else if (this.isHorizontal){\n                    labelInterval = axisHelper.getAxisLabelInterval(\n                        zrUtil.map(this.scale.getTicks(), this.dataToCoord, this),\n                        axisModel.getFormattedLabels(),\n                        labelModel.getFont(),\n                        this.isHorizontal()\n                    );\n                }\n                this._labelInterval = labelInterval;\n            }\n            return labelInterval;\n        }\n\n    };\n\n    module.exports = Axis;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/Axis.js\n// module id = 1006\n// module chunks = 0 1 2","'use strict';\n\n\n    var List = require('../../data/List');\n    var completeDimensions = require('../../data/helper/completeDimensions');\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n    var CoordinateSystem = require('../../CoordinateSystem');\n    var getDataItemValue = modelUtil.getDataItemValue;\n    var converDataValue = modelUtil.converDataValue;\n\n    function firstDataNotNull(data) {\n        var i = 0;\n        while (i < data.length && data[i] == null) {\n            i++;\n        }\n        return data[i];\n    }\n    function ifNeedCompleteOrdinalData(data) {\n        var sampleItem = firstDataNotNull(data);\n        return sampleItem != null\n            && !zrUtil.isArray(getDataItemValue(sampleItem));\n    }\n\n    /**\n     * Helper function to create a list from option data\n     */\n    function createListFromArray(data, seriesModel, ecModel) {\n        // If data is undefined\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        var coordSysName = seriesModel.get('coordinateSystem');\n        var creator = creators[coordSysName];\n        var registeredCoordSys = CoordinateSystem.get(coordSysName);\n        var completeDimOpt = {\n            encodeDef: seriesModel.get('encode'),\n            dimsDef: seriesModel.get('dimensions')\n        };\n\n        // FIXME\n        var axesInfo = creator && creator(data, seriesModel, ecModel, completeDimOpt);\n        var dimensions = axesInfo && axesInfo.dimensions;\n        if (!dimensions) {\n            // Get dimensions from registered coordinate system\n            dimensions = (registeredCoordSys && (\n                registeredCoordSys.getDimensionsInfo\n                    ? registeredCoordSys.getDimensionsInfo()\n                    : registeredCoordSys.dimensions.slice()\n            )) || ['x', 'y'];\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n        }\n\n        var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;\n\n        var list = new List(dimensions, seriesModel);\n\n        var nameList = createNameList(axesInfo, data);\n\n        var categories = {};\n        var dimValueGetter = (categoryIndex >= 0 && ifNeedCompleteOrdinalData(data))\n            ? function (itemOpt, dimName, dataIndex, dimIndex) {\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                // Use dataIndex as ordinal value in categoryAxis\n                return dimIndex === categoryIndex\n                    ? dataIndex\n                    : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);\n            }\n            : function (itemOpt, dimName, dataIndex, dimIndex) {\n                var value = getDataItemValue(itemOpt);\n                var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]);\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;\n                if (categoryAxesModels && categoryAxesModels[dimName]) {\n                    // If given value is a category string\n                    if (typeof val === 'string') {\n                        // Lazy get categories\n                        categories[dimName] = categories[dimName]\n                            || categoryAxesModels[dimName].getCategories();\n                        val = zrUtil.indexOf(categories[dimName], val);\n                        if (val < 0 && !isNaN(val)) {\n                            // In case some one write '1', '2' istead of 1, 2\n                            val = +val;\n                        }\n                    }\n                }\n                return val;\n            };\n\n        list.hasItemOption = false;\n        list.initData(data, nameList, dimValueGetter);\n\n        return list;\n    }\n\n    function isStackable(axisType) {\n        return axisType !== 'category' && axisType !== 'time';\n    }\n\n    function getDimTypeByAxis(axisType) {\n        return axisType === 'category'\n            ? 'ordinal'\n            : axisType === 'time'\n            ? 'time'\n            : 'float';\n    }\n\n    /**\n     * Creaters for each coord system.\n     */\n    var creators = {\n\n        cartesian2d: function (data, seriesModel, ecModel, completeDimOpt) {\n\n            var axesModels = zrUtil.map(['xAxis', 'yAxis'], function (name) {\n                return ecModel.queryComponents({\n                    mainType: name,\n                    index: seriesModel.get(name + 'Index'),\n                    id: seriesModel.get(name + 'Id')\n                })[0];\n            });\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            if (__DEV__) {\n                if (!xAxisModel) {\n                    throw new Error('xAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('xAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n                if (!yAxisModel) {\n                    throw new Error('yAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('yAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n\n            var xAxisType = xAxisModel.get('type');\n            var yAxisType = yAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'x',\n                    type: getDimTypeByAxis(xAxisType),\n                    stackable: isStackable(xAxisType)\n                },\n                {\n                    name: 'y',\n                    // If two category axes\n                    type: getDimTypeByAxis(yAxisType),\n                    stackable: isStackable(yAxisType)\n                }\n            ];\n\n            var isXAxisCateogry = xAxisType === 'category';\n            var isYAxisCategory = yAxisType === 'category';\n\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n\n            var categoryAxesModels = {};\n            if (isXAxisCateogry) {\n                categoryAxesModels.x = xAxisModel;\n            }\n            if (isYAxisCategory) {\n                categoryAxesModels.y = yAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isXAxisCateogry ? 0 : (isYAxisCategory ? 1 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        singleAxis: function (data, seriesModel, ecModel, completeDimOpt) {\n\n            var singleAxisModel = ecModel.queryComponents({\n                mainType: 'singleAxis',\n                index: seriesModel.get('singleAxisIndex'),\n                id: seriesModel.get('singleAxisId')\n            })[0];\n\n            if (__DEV__) {\n                if (!singleAxisModel) {\n                    throw new Error('singleAxis should be specified.');\n                }\n            }\n\n            var singleAxisType = singleAxisModel.get('type');\n            var isCategory = singleAxisType === 'category';\n\n            var dimensions = [{\n                name: 'single',\n                type: getDimTypeByAxis(singleAxisType),\n                stackable: isStackable(singleAxisType)\n            }];\n\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n\n            var categoryAxesModels = {};\n            if (isCategory) {\n                categoryAxesModels.single = singleAxisModel;\n            }\n\n            return {\n                dimensions: dimensions,\n                categoryIndex: isCategory ? 0 : -1,\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        polar: function (data, seriesModel, ecModel, completeDimOpt) {\n            var polarModel = ecModel.queryComponents({\n                mainType: 'polar',\n                index: seriesModel.get('polarIndex'),\n                id: seriesModel.get('polarId')\n            })[0];\n\n            var angleAxisModel = polarModel.findAxisModel('angleAxis');\n            var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n\n            if (__DEV__) {\n                if (!angleAxisModel) {\n                    throw new Error('angleAxis option not found');\n                }\n                if (!radiusAxisModel) {\n                    throw new Error('radiusAxis option not found');\n                }\n            }\n\n            var radiusAxisType = radiusAxisModel.get('type');\n            var angleAxisType = angleAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'radius',\n                    type: getDimTypeByAxis(radiusAxisType),\n                    stackable: isStackable(radiusAxisType)\n                },\n                {\n                    name: 'angle',\n                    type: getDimTypeByAxis(angleAxisType),\n                    stackable: isStackable(angleAxisType)\n                }\n            ];\n            var isAngleAxisCateogry = angleAxisType === 'category';\n            var isRadiusAxisCateogry = radiusAxisType === 'category';\n\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n\n            var categoryAxesModels = {};\n            if (isRadiusAxisCateogry) {\n                categoryAxesModels.radius = radiusAxisModel;\n            }\n            if (isAngleAxisCateogry) {\n                categoryAxesModels.angle = angleAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isAngleAxisCateogry ? 1 : (isRadiusAxisCateogry ? 0 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        geo: function (data, seriesModel, ecModel, completeDimOpt) {\n            // TODO Region\n            // 多个散点图系列在同一个地区的时候\n            return {\n                dimensions: completeDimensions([\n                    {name: 'lng'},\n                    {name: 'lat'}\n                ], data, completeDimOpt)\n            };\n        }\n    };\n\n    function createNameList(result, data) {\n        var nameList = [];\n\n        var categoryDim = result && result.dimensions[result.categoryIndex];\n        var categoryAxisModel;\n        if (categoryDim) {\n            categoryAxisModel = result.categoryAxesModels[categoryDim.name];\n        }\n\n        if (categoryAxisModel) {\n            // FIXME Two category axis\n            var categories = categoryAxisModel.getCategories();\n            if (categories) {\n                var dataLen = data.length;\n                // Ordered data is given explicitly like\n                // [[3, 0.2], [1, 0.3], [2, 0.15]]\n                // or given scatter data,\n                // pick the category\n                if (zrUtil.isArray(data[0]) && data[0].length > 1) {\n                    nameList = [];\n                    for (var i = 0; i < dataLen; i++) {\n                        nameList[i] = categories[data[i][result.categoryIndex || 0]];\n                    }\n                }\n                else {\n                    nameList = categories.slice(0);\n                }\n            }\n        }\n\n        return nameList;\n    }\n\n    module.exports = createListFromArray;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/createListFromArray.js\n// module id = 1007\n// module chunks = 0 1 2","/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n\n\n    var zrUtil = require('../core/util');\n\n    var Style = require('./Style');\n\n    var Element = require('../Element');\n    var RectText = require('./mixin/RectText');\n    // var Stateful = require('./mixin/Stateful');\n\n    /**\n     * @alias module:zrender/graphic/Displayable\n     * @extends module:zrender/Element\n     * @extends module:zrender/graphic/mixin/RectText\n     */\n    function Displayable(opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        // Extend properties\n        for (var name in opts) {\n            if (\n                opts.hasOwnProperty(name) &&\n                name !== 'style'\n            ) {\n                this[name] = opts[name];\n            }\n        }\n\n        /**\n         * @type {module:zrender/graphic/Style}\n         */\n        this.style = new Style(opts.style, this);\n\n        this._rect = null;\n        // Shapes for cascade clipping.\n        this.__clipPaths = [];\n\n        // FIXME Stateful must be mixined after style is setted\n        // Stateful.call(this, opts);\n    }\n\n    Displayable.prototype = {\n\n        constructor: Displayable,\n\n        type: 'displayable',\n\n        /**\n         * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n         * Dirty flag. From which painter will determine if this displayable object needs brush\n         * @name module:zrender/graphic/Displayable#__dirty\n         * @type {boolean}\n         */\n        __dirty: true,\n\n        /**\n         * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n         * If ignore drawing of the displayable object. Mouse event will still be triggered\n         * @name module:/zrender/graphic/Displayable#invisible\n         * @type {boolean}\n         * @default false\n         */\n        invisible: false,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z: 0,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z2: 0,\n\n        /**\n         * z层level，决定绘画在哪层canvas中\n         * @name module:/zrender/graphic/Displayable#zlevel\n         * @type {number}\n         * @default 0\n         */\n        zlevel: 0,\n\n        /**\n         * 是否可拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        draggable: false,\n\n        /**\n         * 是否正在拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        dragging: false,\n\n        /**\n         * 是否相应鼠标事件\n         * @name module:/zrender/graphic/Displayable#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * If enable culling\n         * @type {boolean}\n         * @default false\n         */\n        culling: false,\n\n        /**\n         * Mouse cursor when hovered\n         * @name module:/zrender/graphic/Displayable#cursor\n         * @type {string}\n         */\n        cursor: 'pointer',\n\n        /**\n         * If hover area is bounding rect\n         * @name module:/zrender/graphic/Displayable#rectHover\n         * @type {string}\n         */\n        rectHover: false,\n\n        /**\n         * Render the element progressively when the value >= 0,\n         * usefull for large data.\n         * @type {number}\n         */\n        progressive: -1,\n\n        beforeBrush: function (ctx) {},\n\n        afterBrush: function (ctx) {},\n\n        /**\n         * 图形绘制方法\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        // Interface\n        brush: function (ctx, prevEl) {},\n\n        /**\n         * 获取最小包围盒\n         * @return {module:zrender/core/BoundingRect}\n         */\n        // Interface\n        getBoundingRect: function () {},\n\n        /**\n         * 判断坐标 x, y 是否在图形上\n         * If displayable element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        contain: function (x, y) {\n            return this.rectContain(x, y);\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            cb.call(context, this);\n        },\n\n        /**\n         * 判断坐标 x, y 是否在图形的包围盒上\n         * If bounding rect of element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        rectContain: function (x, y) {\n            var coord = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            return rect.contain(coord[0], coord[1]);\n        },\n\n        /**\n         * 标记图形元素为脏，并且在下一帧重绘\n         * Mark displayable element dirty and refresh next frame\n         */\n        dirty: function () {\n            this.__dirty = true;\n\n            this._rect = null;\n\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * 图形是否会触发事件\n         * If displayable object binded any event\n         * @return {boolean}\n         */\n        // TODO, 通过 bind 绑定的事件\n        // isSilent: function () {\n        //     return !(\n        //         this.hoverable || this.draggable\n        //         || this.onmousemove || this.onmouseover || this.onmouseout\n        //         || this.onmousedown || this.onmouseup || this.onclick\n        //         || this.ondragenter || this.ondragover || this.ondragleave\n        //         || this.ondrop\n        //     );\n        // },\n        /**\n         * Alias for animate('style')\n         * @param {boolean} loop\n         */\n        animateStyle: function (loop) {\n            return this.animate('style', loop);\n        },\n\n        attrKV: function (key, value) {\n            if (key !== 'style') {\n                Element.prototype.attrKV.call(this, key, value);\n            }\n            else {\n                this.style.set(value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setStyle: function (key, value) {\n            this.style.set(key, value);\n            this.dirty(false);\n            return this;\n        },\n\n        /**\n         * Use given style object\n         * @param  {Object} obj\n         */\n        useStyle: function (obj) {\n            this.style = new Style(obj, this);\n            this.dirty(false);\n            return this;\n        }\n    };\n\n    zrUtil.inherits(Displayable, Element);\n\n    zrUtil.mixin(Displayable, RectText);\n    // zrUtil.mixin(Displayable, Stateful);\n\n    module.exports = Displayable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/Displayable.js\n// module id = 1008\n// module chunks = 0 1 2","\n\n    /**\n     * @param {Array.<Object>} colorStops\n     */\n    var Gradient = function (colorStops) {\n\n        this.colorStops = colorStops || [];\n\n    };\n\n    Gradient.prototype = {\n\n        constructor: Gradient,\n\n        addColorStop: function (offset, color) {\n            this.colorStops.push({\n\n                offset: offset,\n\n                color: color\n            });\n        }\n\n    };\n\n    module.exports = Gradient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/Gradient.js\n// module id = 1009\n// module chunks = 0 1 2","\n\n    var lib = {};\n\n    var ORIGIN_METHOD = '\\0__throttleOriginMethod';\n    var RATE = '\\0__throttleRate';\n    var THROTTLE_TYPE = '\\0__throttleType';\n\n    /**\n     * @public\n     * @param {(Function)} fn\n     * @param {number} [delay=0] Unit: ms.\n     * @param {boolean} [debounce=false]\n     *        true: If call interval less than `delay`, only the last call works.\n     *        false: If call interval less than `delay, call works on fixed rate.\n     * @return {(Function)} throttled fn.\n     */\n    lib.throttle = function (fn, delay, debounce) {\n\n        var currCall;\n        var lastCall = 0;\n        var lastExec = 0;\n        var timer = null;\n        var diff;\n        var scope;\n        var args;\n        var debounceNextCall;\n\n        delay = delay || 0;\n\n        function exec() {\n            lastExec = (new Date()).getTime();\n            timer = null;\n            fn.apply(scope, args || []);\n        }\n\n        var cb = function () {\n            currCall = (new Date()).getTime();\n            scope = this;\n            args = arguments;\n            var thisDelay = debounceNextCall || delay;\n            var thisDebounce = debounceNextCall || debounce;\n            debounceNextCall = null;\n            diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\n\n            clearTimeout(timer);\n\n            if (thisDebounce) {\n                timer = setTimeout(exec, thisDelay);\n            }\n            else {\n                if (diff >= 0) {\n                    exec();\n                }\n                else {\n                    timer = setTimeout(exec, -diff);\n                }\n            }\n\n            lastCall = currCall;\n        };\n\n        /**\n         * Clear throttle.\n         * @public\n         */\n        cb.clear = function () {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n        };\n\n        /**\n         * Enable debounce once.\n         */\n        cb.debounceNextCall = function (debounceDelay) {\n            debounceNextCall = debounceDelay;\n        };\n\n        return cb;\n    };\n\n    /**\n     * Create throttle method or update throttle rate.\n     *\n     * @example\n     * ComponentView.prototype.render = function () {\n     *     ...\n     *     throttle.createOrUpdate(\n     *         this,\n     *         '_dispatchAction',\n     *         this.model.get('throttle'),\n     *         'fixRate'\n     *     );\n     * };\n     * ComponentView.prototype.remove = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     * ComponentView.prototype.dispose = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     * @param {number} [rate]\n     * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n     * @return {Function} throttled function.\n     */\n    lib.createOrUpdate = function (obj, fnAttr, rate, throttleType) {\n        var fn = obj[fnAttr];\n\n        if (!fn) {\n            return;\n        }\n\n        var originFn = fn[ORIGIN_METHOD] || fn;\n        var lastThrottleType = fn[THROTTLE_TYPE];\n        var lastRate = fn[RATE];\n\n        if (lastRate !== rate || lastThrottleType !== throttleType) {\n            if (rate == null || !throttleType) {\n                return (obj[fnAttr] = originFn);\n            }\n\n            fn = obj[fnAttr] = lib.throttle(\n                originFn, rate, throttleType === 'debounce'\n            );\n            fn[ORIGIN_METHOD] = originFn;\n            fn[THROTTLE_TYPE] = throttleType;\n            fn[RATE] = rate;\n        }\n\n        return fn;\n    };\n\n    /**\n     * Clear throttle. Example see throttle.createOrUpdate.\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     */\n    lib.clear = function (obj, fnAttr) {\n        var fn = obj[fnAttr];\n        if (fn && fn[ORIGIN_METHOD]) {\n            obj[fnAttr] = fn[ORIGIN_METHOD];\n        }\n    };\n\n    module.exports = lib;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/throttle.js\n// module id = 1010\n// module chunks = 0 1 2","/**\n * Interval scale\n * @module echarts/scale/Interval\n */\n\n\n\n    var numberUtil = require('../util/number');\n    var formatUtil = require('../util/format');\n    var Scale = require('./Scale');\n    var helper = require('./helper');\n\n    var roundNumber = numberUtil.round;\n\n    /**\n     * @alias module:echarts/coord/scale/Interval\n     * @constructor\n     */\n    var IntervalScale = Scale.extend({\n\n        type: 'interval',\n\n        _interval: 0,\n\n        _intervalPrecision: 2,\n\n        setExtent: function (start, end) {\n            var thisExtent = this._extent;\n            //start,end may be a Number like '25',so...\n            if (!isNaN(start)) {\n                thisExtent[0] = parseFloat(start);\n            }\n            if (!isNaN(end)) {\n                thisExtent[1] = parseFloat(end);\n            }\n        },\n\n        unionExtent: function (other) {\n            var extent = this._extent;\n            other[0] < extent[0] && (extent[0] = other[0]);\n            other[1] > extent[1] && (extent[1] = other[1]);\n\n            // unionExtent may called by it's sub classes\n            IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n        },\n        /**\n         * Get interval\n         */\n        getInterval: function () {\n            return this._interval;\n        },\n\n        /**\n         * Set interval\n         */\n        setInterval: function (interval) {\n            this._interval = interval;\n            // Dropped auto calculated niceExtent and use user setted extent\n            // We assume user wan't to set both interval, min, max to get a better result\n            this._niceExtent = this._extent.slice();\n\n            this._intervalPrecision = helper.getIntervalPrecision(interval);\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            return helper.intervalScaleGetTicks(\n                this._interval, this._extent, this._niceExtent, this._intervalPrecision\n            );\n        },\n\n        /**\n         * @return {Array.<string>}\n         */\n        getTicksLabels: function () {\n            var labels = [];\n            var ticks = this.getTicks();\n            for (var i = 0; i < ticks.length; i++) {\n                labels.push(this.getLabel(ticks[i]));\n            }\n            return labels;\n        },\n\n        /**\n         * @param {number} data\n         * @param {Object} [opt]\n         * @param {number|string} [opt.precision] If 'auto', use nice presision.\n         * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n         * @return {string}\n         */\n        getLabel: function (data, opt) {\n            if (data == null) {\n                return '';\n            }\n\n            var precision = opt && opt.precision;\n\n            if (precision == null) {\n                precision = numberUtil.getPrecisionSafe(data) || 0;\n            }\n            else if (precision === 'auto') {\n                // Should be more precise then tick.\n                precision = this._intervalPrecision;\n            }\n\n            // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n            // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n            data = roundNumber(data, precision, true);\n\n            return formatUtil.addCommas(data);\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         *\n         * @param {number} [splitNumber = 5] Desired number of ticks\n         * @param {number} [minInterval]\n         * @param {number} [maxInterval]\n         */\n        niceTicks: function (splitNumber, minInterval, maxInterval) {\n            splitNumber = splitNumber || 5;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (!isFinite(span)) {\n                return;\n            }\n            // User may set axis min 0 and data are all negative\n            // FIXME If it needs to reverse ?\n            if (span < 0) {\n                span = -span;\n                extent.reverse();\n            }\n\n            var result = helper.intervalScaleNiceTicks(\n                extent, splitNumber, minInterval, maxInterval\n            );\n\n            this._intervalPrecision = result.intervalPrecision;\n            this._interval = result.interval;\n            this._niceExtent = result.niceTickExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {Object} opt\n         * @param {number} [opt.splitNumber = 5] Given approx tick number\n         * @param {boolean} [opt.fixMin=false]\n         * @param {boolean} [opt.fixMax=false]\n         * @param {boolean} [opt.minInterval]\n         * @param {boolean} [opt.maxInterval]\n         */\n        niceExtent: function (opt) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                if (extent[0] !== 0) {\n                    // Expand extent\n                    var expandSize = extent[0];\n                    // In the fowllowing case\n                    //      Axis has been fixed max 100\n                    //      Plus data are all 100 and axis extent are [100, 100].\n                    // Extend to the both side will cause expanded max is larger than fixed max.\n                    // So only expand to the smaller side.\n                    if (!opt.fixMax) {\n                        extent[1] += expandSize / 2;\n                        extent[0] -= expandSize / 2;\n                    }\n                    else {\n                        extent[0] -= expandSize / 2;\n                    }\n                }\n                else {\n                    extent[1] = 1;\n                }\n            }\n            var span = extent[1] - extent[0];\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (!isFinite(span)) {\n                extent[0] = 0;\n                extent[1] = 1;\n            }\n\n            this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!opt.fixMin) {\n                extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n            }\n            if (!opt.fixMax) {\n                extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n            }\n        }\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    IntervalScale.create = function () {\n        return new IntervalScale();\n    };\n\n    module.exports = IntervalScale;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/scale/Interval.js\n// module id = 1011\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../../util/format');\n    var graphic = require('../../util/graphic');\n    var Model = require('../../model/Model');\n    var numberUtil = require('../../util/number');\n    var remRadian = numberUtil.remRadian;\n    var isRadianAroundZero = numberUtil.isRadianAroundZero;\n    var vec2 = require('zrender/lib/core/vector');\n    var matrix = require('zrender/lib/core/matrix');\n    var v2ApplyTransform = vec2.applyTransform;\n    var retrieve = zrUtil.retrieve;\n\n    var PI = Math.PI;\n\n    function makeAxisEventDataBase(axisModel) {\n        var eventData = {\n            componentType: axisModel.mainType\n        };\n        eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n        return eventData;\n    }\n\n    /**\n     * A final axis is translated and rotated from a \"standard axis\".\n     * So opt.position and opt.rotation is required.\n     *\n     * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n     * for example: (0, 0) ------------> (0, 50)\n     *\n     * nameDirection or tickDirection or labelDirection is 1 means tick\n     * or label is below the standard axis, whereas is -1 means above\n     * the standard axis. labelOffset means offset between label and axis,\n     * which is useful when 'onZero', where axisLabel is in the grid and\n     * label in outside grid.\n     *\n     * Tips: like always,\n     * positive rotation represents anticlockwise, and negative rotation\n     * represents clockwise.\n     * The direction of position coordinate is the same as the direction\n     * of screen coordinate.\n     *\n     * Do not need to consider axis 'inverse', which is auto processed by\n     * axis extent.\n     *\n     * @param {module:zrender/container/Group} group\n     * @param {Object} axisModel\n     * @param {Object} opt Standard axis parameters.\n     * @param {Array.<number>} opt.position [x, y]\n     * @param {number} opt.rotation by radian\n     * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle' or 'center'.\n     * @param {number} [opt.tickDirection=1] 1 or -1\n     * @param {number} [opt.labelDirection=1] 1 or -1\n     * @param {number} [opt.labelOffset=0] Usefull when onZero.\n     * @param {string} [opt.axisLabelShow] default get from axisModel.\n     * @param {string} [opt.axisName] default get from axisModel.\n     * @param {number} [opt.axisNameAvailableWidth]\n     * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n     * @param {number} [opt.labelInterval] Default label interval when label\n     *                                     interval from model is null or 'auto'.\n     * @param {number} [opt.strokeContainThreshold] Default label interval when label\n     * @param {number} [opt.nameTruncateMaxWidth]\n     */\n    var AxisBuilder = function (axisModel, opt) {\n\n        /**\n         * @readOnly\n         */\n        this.opt = opt;\n\n        /**\n         * @readOnly\n         */\n        this.axisModel = axisModel;\n\n        // Default value\n        zrUtil.defaults(\n            opt,\n            {\n                labelOffset: 0,\n                nameDirection: 1,\n                tickDirection: 1,\n                labelDirection: 1,\n                silent: true\n            }\n        );\n\n        /**\n         * @readOnly\n         */\n        this.group = new graphic.Group();\n\n        // FIXME Not use a seperate text group?\n        var dumbGroup = new graphic.Group({\n            position: opt.position.slice(),\n            rotation: opt.rotation\n        });\n\n        // this.group.add(dumbGroup);\n        // this._dumbGroup = dumbGroup;\n\n        dumbGroup.updateTransform();\n        this._transform = dumbGroup.transform;\n\n        this._dumbGroup = dumbGroup;\n    };\n\n    AxisBuilder.prototype = {\n\n        constructor: AxisBuilder,\n\n        hasBuilder: function (name) {\n            return !!builders[name];\n        },\n\n        add: function (name) {\n            builders[name].call(this);\n        },\n\n        getGroup: function () {\n            return this.group;\n        }\n\n    };\n\n    var builders = {\n\n        /**\n         * @private\n         */\n        axisLine: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n\n            if (!axisModel.get('axisLine.show')) {\n                return;\n            }\n\n            var extent = this.axisModel.axis.getExtent();\n\n            var matrix = this._transform;\n            var pt1 = [extent[0], 0];\n            var pt2 = [extent[1], 0];\n            if (matrix) {\n                v2ApplyTransform(pt1, pt1, matrix);\n                v2ApplyTransform(pt2, pt2, matrix);\n            }\n\n            this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                // Id for animation\n                anid: 'line',\n\n                shape: {\n                    x1: pt1[0],\n                    y1: pt1[1],\n                    x2: pt2[0],\n                    y2: pt2[1]\n                },\n                style: zrUtil.extend(\n                    {lineCap: 'round'},\n                    axisModel.getModel('axisLine.lineStyle').getLineStyle()\n                ),\n                strokeContainThreshold: opt.strokeContainThreshold || 5,\n                silent: true,\n                z2: 1\n            })));\n        },\n\n        /**\n         * @private\n         */\n        axisTickLabel: function () {\n            var axisModel = this.axisModel;\n            var opt = this.opt;\n\n            var tickEls = buildAxisTick(this, axisModel, opt);\n            var labelEls = buildAxisLabel(this, axisModel, opt);\n\n            fixMinMaxLabelShow(axisModel, labelEls, tickEls);\n        },\n\n        /**\n         * @private\n         */\n        axisName: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var name = retrieve(opt.axisName, axisModel.get('name'));\n\n            if (!name) {\n                return;\n            }\n\n            var nameLocation = axisModel.get('nameLocation');\n            var nameDirection = opt.nameDirection;\n            var textStyleModel = axisModel.getModel('nameTextStyle');\n            var gap = axisModel.get('nameGap') || 0;\n\n            var extent = this.axisModel.axis.getExtent();\n            var gapSignal = extent[0] > extent[1] ? -1 : 1;\n            var pos = [\n                nameLocation === 'start'\n                    ? extent[0] - gapSignal * gap\n                    : nameLocation === 'end'\n                    ? extent[1] + gapSignal * gap\n                    : (extent[0] + extent[1]) / 2, // 'middle'\n                // Reuse labelOffset.\n                isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0\n            ];\n\n            var labelLayout;\n\n            var nameRotation = axisModel.get('nameRotate');\n            if (nameRotation != null) {\n                nameRotation = nameRotation * PI / 180; // To radian.\n            }\n\n            var axisNameAvailableWidth;\n\n            if (isNameLocationCenter(nameLocation)) {\n                labelLayout = innerTextLayout(\n                    opt.rotation,\n                    nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n                    nameDirection\n                );\n            }\n            else {\n                labelLayout = endTextLayout(\n                    opt, nameLocation, nameRotation || 0, extent\n                );\n\n                axisNameAvailableWidth = opt.axisNameAvailableWidth;\n                if (axisNameAvailableWidth != null) {\n                    axisNameAvailableWidth = Math.abs(\n                        axisNameAvailableWidth / Math.sin(labelLayout.rotation)\n                    );\n                    !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n                }\n            }\n\n            var textFont = textStyleModel.getFont();\n\n            var truncateOpt = axisModel.get('nameTruncate', true) || {};\n            var ellipsis = truncateOpt.ellipsis;\n            var maxWidth = retrieve(\n                opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth\n            );\n            // FIXME\n            // truncate rich text? (consider performance)\n            var truncatedText = (ellipsis != null && maxWidth != null)\n                ? formatUtil.truncateText(\n                    name, maxWidth, textFont, ellipsis,\n                    {minChar: 2, placeholder: truncateOpt.placeholder}\n                )\n                : name;\n\n            var tooltipOpt = axisModel.get('tooltip', true);\n\n            var mainType = axisModel.mainType;\n            var formatterParams = {\n                componentType: mainType,\n                name: name,\n                $vars: ['name']\n            };\n            formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n\n            var textEl = new graphic.Text({\n                // Id for animation\n                anid: 'name',\n\n                __fullText: name,\n                __truncatedText: truncatedText,\n\n                position: pos,\n                rotation: labelLayout.rotation,\n                silent: isSilent(axisModel),\n                z2: 1,\n                tooltip: (tooltipOpt && tooltipOpt.show)\n                    ? zrUtil.extend({\n                        content: name,\n                        formatter: function () {\n                            return name;\n                        },\n                        formatterParams: formatterParams\n                    }, tooltipOpt)\n                    : null\n            });\n\n            graphic.setTextStyle(textEl.style, textStyleModel, {\n                text: truncatedText,\n                textFont: textFont,\n                textFill: textStyleModel.getTextColor()\n                    || axisModel.get('axisLine.lineStyle.color'),\n                textAlign: labelLayout.textAlign,\n                textVerticalAlign: labelLayout.textVerticalAlign\n            });\n\n            if (axisModel.get('triggerEvent')) {\n                textEl.eventData = makeAxisEventDataBase(axisModel);\n                textEl.eventData.targetType = 'axisName';\n                textEl.eventData.name = name;\n            }\n\n            // FIXME\n            this._dumbGroup.add(textEl);\n            textEl.updateTransform();\n\n            this.group.add(textEl);\n\n            textEl.decomposeTransform();\n        }\n\n    };\n\n    /**\n     * @public\n     * @static\n     * @param {Object} opt\n     * @param {number} axisRotation in radian\n     * @param {number} textRotation in radian\n     * @param {number} direction\n     * @return {Object} {\n     *  rotation, // according to axis\n     *  textAlign,\n     *  textVerticalAlign\n     * }\n     */\n    var innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n        var rotationDiff = remRadian(textRotation - axisRotation);\n        var textAlign;\n        var textVerticalAlign;\n\n        if (isRadianAroundZero(rotationDiff)) { // Label is parallel with axis line.\n            textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI)) { // Label is inverse parallel with axis line.\n            textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else {\n            textVerticalAlign = 'middle';\n\n            if (rotationDiff > 0 && rotationDiff < PI) {\n                textAlign = direction > 0 ? 'right' : 'left';\n            }\n            else {\n                textAlign = direction > 0 ? 'left' : 'right';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    };\n\n    function endTextLayout(opt, textPosition, textRotate, extent) {\n        var rotationDiff = remRadian(textRotate - opt.rotation);\n        var textAlign;\n        var textVerticalAlign;\n        var inverse = extent[0] > extent[1];\n        var onLeft = (textPosition === 'start' && !inverse)\n            || (textPosition !== 'start' && inverse);\n\n        if (isRadianAroundZero(rotationDiff - PI / 2)) {\n            textVerticalAlign = onLeft ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n            textVerticalAlign = onLeft ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else {\n            textVerticalAlign = 'middle';\n            if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n                textAlign = onLeft ? 'left' : 'right';\n            }\n            else {\n                textAlign = onLeft ? 'right' : 'left';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    }\n\n    function isSilent(axisModel) {\n        var tooltipOpt = axisModel.get('tooltip');\n        return axisModel.get('silent')\n            // Consider mouse cursor, add these restrictions.\n            || !(\n                axisModel.get('triggerEvent') || (tooltipOpt && tooltipOpt.show)\n            );\n    }\n\n    function fixMinMaxLabelShow(axisModel, labelEls, tickEls) {\n        // If min or max are user set, we need to check\n        // If the tick on min(max) are overlap on their neighbour tick\n        // If they are overlapped, we need to hide the min(max) tick label\n        var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n        var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n\n        // FIXME\n        // Have not consider onBand yet, where tick els is more than label els.\n\n        labelEls = labelEls || [];\n        tickEls = tickEls || [];\n\n        var firstLabel = labelEls[0];\n        var nextLabel = labelEls[1];\n        var lastLabel = labelEls[labelEls.length - 1];\n        var prevLabel = labelEls[labelEls.length - 2];\n\n        var firstTick = tickEls[0];\n        var nextTick = tickEls[1];\n        var lastTick = tickEls[tickEls.length - 1];\n        var prevTick = tickEls[tickEls.length - 2];\n\n        if (showMinLabel === false) {\n            ignoreEl(firstLabel);\n            ignoreEl(firstTick);\n        }\n        else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n            if (showMinLabel) {\n                ignoreEl(nextLabel);\n                ignoreEl(nextTick);\n            }\n            else {\n                ignoreEl(firstLabel);\n                ignoreEl(firstTick);\n            }\n        }\n\n        if (showMaxLabel === false) {\n            ignoreEl(lastLabel);\n            ignoreEl(lastTick);\n        }\n        else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n            if (showMaxLabel) {\n                ignoreEl(prevLabel);\n                ignoreEl(prevTick);\n            }\n            else {\n                ignoreEl(lastLabel);\n                ignoreEl(lastTick);\n            }\n        }\n    }\n\n    function ignoreEl(el) {\n        el && (el.ignore = true);\n    }\n\n    function isTwoLabelOverlapped(current, next, labelLayout) {\n        // current and next has the same rotation.\n        var firstRect = current && current.getBoundingRect().clone();\n        var nextRect = next && next.getBoundingRect().clone();\n\n        if (!firstRect || !nextRect) {\n            return;\n        }\n\n        // When checking intersect of two rotated labels, we use mRotationBack\n        // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n        var mRotationBack = matrix.identity([]);\n        matrix.rotate(mRotationBack, mRotationBack, -current.rotation);\n\n        firstRect.applyTransform(matrix.mul([], mRotationBack, current.getLocalTransform()));\n        nextRect.applyTransform(matrix.mul([], mRotationBack, next.getLocalTransform()));\n\n        return firstRect.intersect(nextRect);\n    }\n\n    function isNameLocationCenter(nameLocation) {\n        return nameLocation === 'middle' || nameLocation === 'center';\n    }\n\n    /**\n     * @static\n     */\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (\n        axis,\n        i,\n        interval,\n        ticksCnt,\n        showMinLabel,\n        showMaxLabel\n    ) {\n        if (i === 0 && showMinLabel || i === ticksCnt - 1 && showMaxLabel) {\n            return false;\n        }\n\n        // FIXME\n        // Have not consider label overlap (if label is too long) yet.\n\n        var rawTick;\n        var scale = axis.scale;\n        return scale.type === 'ordinal'\n            && (\n                typeof interval === 'function'\n                    ? (\n                        rawTick = scale.getTicks()[i],\n                        !interval(rawTick, scale.getLabel(rawTick))\n                    )\n                    : i % (interval + 1)\n            );\n    };\n\n    /**\n     * @static\n     */\n    var getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n        var interval = model.get('interval');\n        if (interval == null || interval == 'auto') {\n            interval = labelInterval;\n        }\n        return interval;\n    };\n\n    function buildAxisTick(axisBuilder, axisModel, opt) {\n        var axis = axisModel.axis;\n\n        if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n            return;\n        }\n\n        var tickModel = axisModel.getModel('axisTick');\n\n        var lineStyleModel = tickModel.getModel('lineStyle');\n        var tickLen = tickModel.get('length');\n\n        var tickInterval = getInterval(tickModel, opt.labelInterval);\n        var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel'));\n        // FIXME\n        // Corresponds to ticksCoords ?\n        var ticks = axis.scale.getTicks();\n\n        var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n        var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n\n        var pt1 = [];\n        var pt2 = [];\n        var matrix = axisBuilder._transform;\n\n        var tickEls = [];\n\n        var ticksCnt = ticksCoords.length;\n        for (var i = 0; i < ticksCnt; i++) {\n            // Only ordinal scale support tick interval\n            if (ifIgnoreOnTick(\n                axis, i, tickInterval, ticksCnt,\n                showMinLabel, showMaxLabel\n            )) {\n                continue;\n            }\n\n            var tickCoord = ticksCoords[i];\n\n            pt1[0] = tickCoord;\n            pt1[1] = 0;\n            pt2[0] = tickCoord;\n            pt2[1] = opt.tickDirection * tickLen;\n\n            if (matrix) {\n                v2ApplyTransform(pt1, pt1, matrix);\n                v2ApplyTransform(pt2, pt2, matrix);\n            }\n            // Tick line, Not use group transform to have better line draw\n            var tickEl = new graphic.Line(graphic.subPixelOptimizeLine({\n                // Id for animation\n                anid: 'tick_' + ticks[i],\n\n                shape: {\n                    x1: pt1[0],\n                    y1: pt1[1],\n                    x2: pt2[0],\n                    y2: pt2[1]\n                },\n                style: zrUtil.defaults(\n                    lineStyleModel.getLineStyle(),\n                    {\n                        stroke: axisModel.get('axisLine.lineStyle.color')\n                    }\n                ),\n                z2: 2,\n                silent: true\n            }));\n            axisBuilder.group.add(tickEl);\n            tickEls.push(tickEl);\n        }\n\n        return tickEls;\n    }\n\n    function buildAxisLabel(axisBuilder, axisModel, opt) {\n        var axis = axisModel.axis;\n        var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n        if (!show || axis.scale.isBlank()) {\n            return;\n        }\n\n        var labelModel = axisModel.getModel('axisLabel');\n        var labelMargin = labelModel.get('margin');\n        var ticks = axis.scale.getTicks();\n        var labels = axisModel.getFormattedLabels();\n\n        // Special label rotate.\n        var labelRotation = (\n            retrieve(opt.labelRotate, labelModel.get('rotate')) || 0\n        ) * PI / 180;\n\n        var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n        var categoryData = axisModel.get('data');\n\n        var labelEls = [];\n        var silent = isSilent(axisModel);\n        var triggerEvent = axisModel.get('triggerEvent');\n\n        var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n        var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n\n        zrUtil.each(ticks, function (tickVal, index) {\n            if (ifIgnoreOnTick(\n                axis, index, opt.labelInterval, ticks.length,\n                showMinLabel, showMaxLabel\n            )) {\n                    return;\n            }\n\n            var itemLabelModel = labelModel;\n            if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n                itemLabelModel = new Model(\n                    categoryData[tickVal].textStyle, labelModel, axisModel.ecModel\n                );\n            }\n\n            var textColor = itemLabelModel.getTextColor()\n                || axisModel.get('axisLine.lineStyle.color');\n\n            var tickCoord = axis.dataToCoord(tickVal);\n            var pos = [\n                tickCoord,\n                opt.labelOffset + opt.labelDirection * labelMargin\n            ];\n            var labelStr = axis.scale.getLabel(tickVal);\n\n            var textEl = new graphic.Text({\n                // Id for animation\n                anid: 'label_' + tickVal,\n                position: pos,\n                rotation: labelLayout.rotation,\n                silent: silent,\n                z2: 10\n            });\n\n            graphic.setTextStyle(textEl.style, itemLabelModel, {\n                text: labels[index],\n                textAlign: itemLabelModel.getShallow('align', true)\n                    || labelLayout.textAlign,\n                textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true)\n                    || itemLabelModel.getShallow('baseline', true)\n                    || labelLayout.textVerticalAlign,\n                textFill: typeof textColor === 'function'\n                    ? textColor(\n                        // (1) In category axis with data zoom, tick is not the original\n                        // index of axis.data. So tick should not be exposed to user\n                        // in category axis.\n                        // (2) Compatible with previous version, which always returns labelStr.\n                        // But in interval scale labelStr is like '223,445', which maked\n                        // user repalce ','. So we modify it to return original val but remain\n                        // it as 'string' to avoid error in replacing.\n                        axis.type === 'category' ? labelStr : axis.type === 'value' ? tickVal + '' : tickVal,\n                        index\n                    )\n                    : textColor\n            });\n\n            // Pack data for mouse event\n            if (triggerEvent) {\n                textEl.eventData = makeAxisEventDataBase(axisModel);\n                textEl.eventData.targetType = 'axisLabel';\n                textEl.eventData.value = labelStr;\n            }\n\n            // FIXME\n            axisBuilder._dumbGroup.add(textEl);\n            textEl.updateTransform();\n\n            labelEls.push(textEl);\n            axisBuilder.group.add(textEl);\n\n            textEl.decomposeTransform();\n\n        });\n\n        return labelEls;\n    }\n\n\n    module.exports = AxisBuilder;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axis/AxisBuilder.js\n// module id = 1012\n// module chunks = 0 1 2","\n\n    var axisPointerModelHelper = require('../axisPointer/modelHelper');\n\n    /**\n     * Base class of AxisView.\n     */\n    var AxisView = require('../../echarts').extendComponentView({\n\n        type: 'axis',\n\n        /**\n         * @private\n         */\n        _axisPointer: null,\n\n        /**\n         * @protected\n         * @type {string}\n         */\n        axisPointerClass: null,\n\n        /**\n         * @override\n         */\n        render: function (axisModel, ecModel, api, payload) {\n            // FIXME\n            // This process should proformed after coordinate systems updated\n            // (axis scale updated), and should be performed each time update.\n            // So put it here temporarily, although it is not appropriate to\n            // put a model-writing procedure in `view`.\n            this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n\n            AxisView.superApply(this, 'render', arguments);\n\n            updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n        },\n\n        /**\n         * Action handler.\n         * @public\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/model/Global} ecModel\n         * @param {module:echarts/ExtensionAPI} api\n         * @param {Object} payload\n         */\n        updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n            updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n        },\n\n        /**\n         * @override\n         */\n        remove: function (ecModel, api) {\n            var axisPointer = this._axisPointer;\n            axisPointer && axisPointer.remove(api);\n            AxisView.superApply(this, 'remove', arguments);\n        },\n\n        /**\n         * @override\n         */\n        dispose: function (ecModel, api) {\n            disposeAxisPointer(this, api);\n            AxisView.superApply(this, 'dispose', arguments);\n        }\n\n    });\n\n    function updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n        var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n        if (!Clazz) {\n            return;\n        }\n        var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n        axisPointerModel\n            ? (axisView._axisPointer || (axisView._axisPointer = new Clazz()))\n                .render(axisModel, axisPointerModel, api, forceRender)\n            : disposeAxisPointer(axisView, api);\n    }\n\n    function disposeAxisPointer(axisView, ecModel, api) {\n        var axisPointer = axisView._axisPointer;\n        axisPointer && axisPointer.dispose(ecModel, api);\n        axisView._axisPointer = null;\n    }\n\n    var axisPointerClazz = [];\n\n    AxisView.registerAxisPointerClass = function (type, clazz) {\n        if (__DEV__) {\n            if (axisPointerClazz[type]) {\n                throw new Error('axisPointer ' + type + ' exists');\n            }\n        }\n        axisPointerClazz[type] = clazz;\n    };\n\n    AxisView.getAxisPointerClass = function (type) {\n        return type && axisPointerClazz[type];\n    };\n\n    module.exports = AxisView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axis/AxisView.js\n// module id = 1013\n// module chunks = 0 1 2","\n\n    var LRU = require('../../core/LRU');\n    var globalImageCache = new LRU(50);\n\n    var helper = {};\n\n    /**\n     * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n     * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n     */\n    helper.findExistImage = function (newImageOrSrc) {\n        if (typeof newImageOrSrc === 'string') {\n            var cachedImgObj = globalImageCache.get(newImageOrSrc);\n            return cachedImgObj && cachedImgObj.image;\n        }\n        else {\n            return newImageOrSrc;\n        }\n    };\n\n    /**\n     * Caution: User should cache loaded images, but not just count on LRU.\n     * Consider if required images more than LRU size, will dead loop occur?\n     *\n     * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n     * @param {HTMLImageElement|HTMLCanvasElement|Canvas} image Existent image.\n     * @param {module:zrender/Element} [hostEl] For calling `dirty`.\n     * @param {Function} [cb] params: (image, cbPayload)\n     * @param {Object} [cbPayload] Payload on cb calling.\n     * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n     */\n    helper.createOrUpdateImage = function (newImageOrSrc, image, hostEl, cb, cbPayload) {\n        if (!newImageOrSrc) {\n            return image;\n        }\n        else if (typeof newImageOrSrc === 'string') {\n\n            // Image should not be loaded repeatly.\n            if ((image && image.__zrImageSrc === newImageOrSrc) || !hostEl) {\n                return image;\n            }\n\n            // Only when there is no existent image or existent image src\n            // is different, this method is responsible for load.\n            var cachedImgObj = globalImageCache.get(newImageOrSrc);\n\n            var pendingWrap = {hostEl: hostEl, cb: cb, cbPayload: cbPayload};\n\n            if (cachedImgObj) {\n                image = cachedImgObj.image;\n                !isImageReady(image) && cachedImgObj.pending.push(pendingWrap);\n            }\n            else {\n                !image && (image = new Image());\n                image.onload = imageOnLoad;\n\n                globalImageCache.put(\n                    newImageOrSrc,\n                    image.__cachedImgObj = {\n                        image: image,\n                        pending: [pendingWrap]\n                    }\n                );\n\n                image.src = image.__zrImageSrc = newImageOrSrc;\n            }\n\n            return image;\n        }\n        // newImageOrSrc is an HTMLImageElement or HTMLCanvasElement or Canvas\n        else {\n            return newImageOrSrc;\n        }\n    };\n\n    function imageOnLoad() {\n        var cachedImgObj = this.__cachedImgObj;\n        this.onload = this.__cachedImgObj = null;\n\n        for (var i = 0; i < cachedImgObj.pending.length; i++) {\n            var pendingWrap = cachedImgObj.pending[i];\n            var cb = pendingWrap.cb;\n            cb && cb(this, pendingWrap.cbPayload);\n            pendingWrap.hostEl.dirty();\n        }\n        cachedImgObj.pending.length = 0;\n    }\n\n    var isImageReady = helper.isImageReady = function (image) {\n        return image && image.width && image.height;\n    };\n\n    module.exports = helper;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/helper/image.js\n// module id = 1014\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var clazz = require('./clazz');\n\n    var parseClassType = clazz.parseClassType;\n\n    var base = 0;\n\n    var componentUtil = {};\n\n    var DELIMITER = '_';\n\n    /**\n     * @public\n     * @param {string} type\n     * @return {string}\n     */\n    componentUtil.getUID = function (type) {\n        // Considering the case of crossing js context,\n        // use Math.random to make id as unique as possible.\n        return [(type || ''), base++, Math.random()].join(DELIMITER);\n    };\n\n    /**\n     * @inner\n     */\n    componentUtil.enableSubTypeDefaulter = function (entity) {\n\n        var subTypeDefaulters = {};\n\n        entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n            componentType = parseClassType(componentType);\n            subTypeDefaulters[componentType.main] = defaulter;\n        };\n\n        entity.determineSubType = function (componentType, option) {\n            var type = option.type;\n            if (!type) {\n                var componentTypeMain = parseClassType(componentType).main;\n                if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n                    type = subTypeDefaulters[componentTypeMain](option);\n                }\n            }\n            return type;\n        };\n\n        return entity;\n    };\n\n    /**\n     * Topological travel on Activity Network (Activity On Vertices).\n     * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n     *\n     * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n     *\n     * If there is circle dependencey, Error will be thrown.\n     *\n     */\n    componentUtil.enableTopologicalTravel = function (entity, dependencyGetter) {\n\n        /**\n         * @public\n         * @param {Array.<string>} targetNameList Target Component type list.\n         *                                           Can be ['aa', 'bb', 'aa.xx']\n         * @param {Array.<string>} fullNameList By which we can build dependency graph.\n         * @param {Function} callback Params: componentType, dependencies.\n         * @param {Object} context Scope of callback.\n         */\n        entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n            if (!targetNameList.length) {\n                return;\n            }\n\n            var result = makeDepndencyGraph(fullNameList);\n            var graph = result.graph;\n            var stack = result.noEntryList;\n\n            var targetNameSet = {};\n            zrUtil.each(targetNameList, function (name) {\n                targetNameSet[name] = true;\n            });\n\n            while (stack.length) {\n                var currComponentType = stack.pop();\n                var currVertex = graph[currComponentType];\n                var isInTargetNameSet = !!targetNameSet[currComponentType];\n                if (isInTargetNameSet) {\n                    callback.call(context, currComponentType, currVertex.originalDeps.slice());\n                    delete targetNameSet[currComponentType];\n                }\n                zrUtil.each(\n                    currVertex.successor,\n                    isInTargetNameSet ? removeEdgeAndAdd : removeEdge\n                );\n            }\n\n            zrUtil.each(targetNameSet, function () {\n                throw new Error('Circle dependency may exists');\n            });\n\n            function removeEdge(succComponentType) {\n                graph[succComponentType].entryCount--;\n                if (graph[succComponentType].entryCount === 0) {\n                    stack.push(succComponentType);\n                }\n            }\n\n            // Consider this case: legend depends on series, and we call\n            // chart.setOption({series: [...]}), where only series is in option.\n            // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n            // not be called, but only sereis.mergeOption is called. Thus legend\n            // have no chance to update its local record about series (like which\n            // name of series is available in legend).\n            function removeEdgeAndAdd(succComponentType) {\n                targetNameSet[succComponentType] = true;\n                removeEdge(succComponentType);\n            }\n        };\n\n        /**\n         * DepndencyGraph: {Object}\n         * key: conponentType,\n         * value: {\n         *     successor: [conponentTypes...],\n         *     originalDeps: [conponentTypes...],\n         *     entryCount: {number}\n         * }\n         */\n        function makeDepndencyGraph(fullNameList) {\n            var graph = {};\n            var noEntryList = [];\n\n            zrUtil.each(fullNameList, function (name) {\n\n                var thisItem = createDependencyGraphItem(graph, name);\n                var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n\n                var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n                thisItem.entryCount = availableDeps.length;\n                if (thisItem.entryCount === 0) {\n                    noEntryList.push(name);\n                }\n\n                zrUtil.each(availableDeps, function (dependentName) {\n                    if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n                        thisItem.predecessor.push(dependentName);\n                    }\n                    var thatItem = createDependencyGraphItem(graph, dependentName);\n                    if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n                        thatItem.successor.push(name);\n                    }\n                });\n            });\n\n            return {graph: graph, noEntryList: noEntryList};\n        }\n\n        function createDependencyGraphItem(graph, name) {\n            if (!graph[name]) {\n                graph[name] = {predecessor: [], successor: []};\n            }\n            return graph[name];\n        }\n\n        function getAvailableDependencies(originalDeps, fullNameList) {\n            var availableDeps = [];\n            zrUtil.each(originalDeps, function (dep) {\n                zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n            });\n            return availableDeps;\n        }\n    };\n\n    module.exports = componentUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/component.js\n// module id = 1015\n// module chunks = 0 1 2","// https://github.com/mziccard/node-timsort\n\n    var DEFAULT_MIN_MERGE = 32;\n\n    var DEFAULT_MIN_GALLOPING = 7;\n\n    var DEFAULT_TMP_STORAGE_LENGTH = 256;\n\n    function minRunLength(n) {\n        var r = 0;\n\n        while (n >= DEFAULT_MIN_MERGE) {\n            r |= n & 1;\n            n >>= 1;\n        }\n\n        return n + r;\n    }\n\n    function makeAscendingRun(array, lo, hi, compare) {\n        var runHi = lo + 1;\n\n        if (runHi === hi) {\n            return 1;\n        }\n\n        if (compare(array[runHi++], array[lo]) < 0) {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n                runHi++;\n            }\n\n            reverseRun(array, lo, runHi);\n        }\n        else {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n                runHi++;\n            }\n        }\n\n        return runHi - lo;\n    }\n\n    function reverseRun(array, lo, hi) {\n        hi--;\n\n        while (lo < hi) {\n            var t = array[lo];\n            array[lo++] = array[hi];\n            array[hi--] = t;\n        }\n    }\n\n    function binaryInsertionSort(array, lo, hi, start, compare) {\n        if (start === lo) {\n            start++;\n        }\n\n        for (; start < hi; start++) {\n            var pivot = array[start];\n\n            var left = lo;\n            var right = start;\n            var mid;\n\n            while (left < right) {\n                mid = left + right >>> 1;\n\n                if (compare(pivot, array[mid]) < 0) {\n                    right = mid;\n                }\n                else {\n                    left = mid + 1;\n                }\n            }\n\n            var n = start - left;\n\n            switch (n) {\n                case 3:\n                    array[left + 3] = array[left + 2];\n\n                case 2:\n                    array[left + 2] = array[left + 1];\n\n                case 1:\n                    array[left + 1] = array[left];\n                    break;\n                default:\n                    while (n > 0) {\n                        array[left + n] = array[left + n - 1];\n                        n--;\n                    }\n            }\n\n            array[left] = pivot;\n        }\n    }\n\n    function gallopLeft(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) > 0) {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n        else {\n            maxOffset = hint + 1;\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n\n        lastOffset++;\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) > 0) {\n                lastOffset = m + 1;\n            }\n            else {\n                offset = m;\n            }\n        }\n        return offset;\n    }\n\n    function gallopRight(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) < 0) {\n            maxOffset = hint + 1;\n\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n        else {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n\n        lastOffset++;\n\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) < 0) {\n                offset = m;\n            }\n            else {\n                lastOffset = m + 1;\n            }\n        }\n\n        return offset;\n    }\n\n    function TimSort(array, compare) {\n        var minGallop = DEFAULT_MIN_GALLOPING;\n        var length = 0;\n        var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n        var stackLength = 0;\n        var runStart;\n        var runLength;\n        var stackSize = 0;\n\n        length = array.length;\n\n        if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n            tmpStorageLength = length >>> 1;\n        }\n\n        var tmp = [];\n\n        stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n\n        runStart = [];\n        runLength = [];\n\n        function pushRun(_runStart, _runLength) {\n            runStart[stackSize] = _runStart;\n            runLength[stackSize] = _runLength;\n            stackSize += 1;\n        }\n\n        function mergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n                    if (runLength[n - 1] < runLength[n + 1]) {\n                        n--;\n                    }\n                }\n                else if (runLength[n] > runLength[n + 1]) {\n                    break;\n                }\n                mergeAt(n);\n            }\n        }\n\n        function forceMergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n                    n--;\n                }\n\n                mergeAt(n);\n            }\n        }\n\n        function mergeAt(i) {\n            var start1 = runStart[i];\n            var length1 = runLength[i];\n            var start2 = runStart[i + 1];\n            var length2 = runLength[i + 1];\n\n            runLength[i] = length1 + length2;\n\n            if (i === stackSize - 3) {\n                runStart[i + 1] = runStart[i + 2];\n                runLength[i + 1] = runLength[i + 2];\n            }\n\n            stackSize--;\n\n            var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n            start1 += k;\n            length1 -= k;\n\n            if (length1 === 0) {\n                return;\n            }\n\n            length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n            if (length2 === 0) {\n                return;\n            }\n\n            if (length1 <= length2) {\n                mergeLow(start1, length1, start2, length2);\n            }\n            else {\n                mergeHigh(start1, length1, start2, length2);\n            }\n        }\n\n        function mergeLow(start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length1; i++) {\n                tmp[i] = array[start1 + i];\n            }\n\n            var cursor1 = 0;\n            var cursor2 = start2;\n            var dest = start1;\n\n            array[dest++] = array[cursor2++];\n\n            if (--length2 === 0) {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n                return;\n            }\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n                return;\n            }\n\n            var _minGallop = minGallop;\n            var count1, count2, exit;\n\n            while (1) {\n                count1 = 0;\n                count2 = 0;\n                exit = false;\n\n                do {\n                    if (compare(array[cursor2], tmp[cursor1]) < 0) {\n                        array[dest++] = array[cursor2++];\n                        count2++;\n                        count1 = 0;\n\n                        if (--length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest++] = tmp[cursor1++];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n                    if (count1 !== 0) {\n                        for (i = 0; i < count1; i++) {\n                            array[dest + i] = tmp[cursor1 + i];\n                        }\n\n                        dest += count1;\n                        cursor1 += count1;\n                        length1 -= count1;\n                        if (length1 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest++] = array[cursor2++];\n\n                    if (--length2 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n                    if (count2 !== 0) {\n                        for (i = 0; i < count2; i++) {\n                            array[dest + i] = array[cursor2 + i];\n                        }\n\n                        dest += count2;\n                        cursor2 += count2;\n                        length2 -= count2;\n\n                        if (length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    array[dest++] = tmp[cursor1++];\n\n                    if (--length1 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            minGallop < 1 && (minGallop = 1);\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n            }\n            else if (length1 === 0) {\n                throw new Error();\n                // throw new Error('mergeLow preconditions were not respected');\n            }\n            else {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n            }\n        }\n\n        function mergeHigh (start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length2; i++) {\n                tmp[i] = array[start2 + i];\n            }\n\n            var cursor1 = start1 + length1 - 1;\n            var cursor2 = length2 - 1;\n            var dest = start2 + length2 - 1;\n            var customCursor = 0;\n            var customDest = 0;\n\n            array[dest--] = array[cursor1--];\n\n            if (--length1 === 0) {\n                customCursor = dest - (length2 - 1);\n\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n\n                return;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n                return;\n            }\n\n            var _minGallop = minGallop;\n\n            while (true) {\n                var count1 = 0;\n                var count2 = 0;\n                var exit = false;\n\n                do {\n                    if (compare(tmp[cursor2], array[cursor1]) < 0) {\n                        array[dest--] = array[cursor1--];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest--] = tmp[cursor2--];\n                        count2++;\n                        count1 = 0;\n                        if (--length2 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n                    if (count1 !== 0) {\n                        dest -= count1;\n                        cursor1 -= count1;\n                        length1 -= count1;\n                        customDest = dest + 1;\n                        customCursor = cursor1 + 1;\n\n                        for (i = count1 - 1; i >= 0; i--) {\n                            array[customDest + i] = array[customCursor + i];\n                        }\n\n                        if (length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = tmp[cursor2--];\n\n                    if (--length2 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n                    if (count2 !== 0) {\n                        dest -= count2;\n                        cursor2 -= count2;\n                        length2 -= count2;\n                        customDest = dest + 1;\n                        customCursor = cursor2 + 1;\n\n                        for (i = 0; i < count2; i++) {\n                            array[customDest + i] = tmp[customCursor + i];\n                        }\n\n                        if (length2 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = array[cursor1--];\n\n                    if (--length1 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            if (minGallop < 1) {\n                minGallop = 1;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n            }\n            else if (length2 === 0) {\n                throw new Error();\n                // throw new Error('mergeHigh preconditions were not respected');\n            }\n            else {\n                customCursor = dest - (length2 - 1);\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n            }\n        }\n\n        this.mergeRuns = mergeRuns;\n        this.forceMergeRuns = forceMergeRuns;\n        this.pushRun = pushRun;\n    }\n\n    function sort(array, compare, lo, hi) {\n        if (!lo) {\n            lo = 0;\n        }\n        if (!hi) {\n            hi = array.length;\n        }\n\n        var remaining = hi - lo;\n\n        if (remaining < 2) {\n            return;\n        }\n\n        var runLength = 0;\n\n        if (remaining < DEFAULT_MIN_MERGE) {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n            return;\n        }\n\n        var ts = new TimSort(array, compare);\n\n        var minRun = minRunLength(remaining);\n\n        do {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            if (runLength < minRun) {\n                var force = remaining;\n                if (force > minRun) {\n                    force = minRun;\n                }\n\n                binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n                runLength = force;\n            }\n\n            ts.pushRun(lo, runLength);\n            ts.mergeRuns();\n\n            remaining -= runLength;\n            lo += runLength;\n        } while (remaining !== 0);\n\n        ts.forceMergeRuns();\n    }\n\n    module.exports = sort;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/timsort.js\n// module id = 1016\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var axisHelper = require('./axisHelper');\n\n    function getName(obj) {\n        if (zrUtil.isObject(obj) && obj.value != null) {\n            return obj.value;\n        }\n        else {\n            return obj + '';\n        }\n    }\n\n    module.exports = {\n\n        /**\n         * Format labels\n         * @return {Array.<string>}\n         */\n        getFormattedLabels: function () {\n            return axisHelper.getFormattedLabels(\n                this.axis,\n                this.get('axisLabel.formatter')\n            );\n        },\n\n        /**\n         * Get categories\n         */\n        getCategories: function () {\n            return this.get('type') === 'category'\n                && zrUtil.map(this.get('data'), getName);\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n         */\n        getMin: function (origin) {\n            var option = this.option;\n            var min = (!origin && option.rangeStart != null)\n                ? option.rangeStart : option.min;\n\n            if (this.axis\n                && min != null\n                && min !== 'dataMin'\n                && typeof min !== 'function'\n                && !zrUtil.eqNaN(min)\n            ) {\n                min = this.axis.scale.parse(min);\n            }\n            return min;\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n         */\n        getMax: function (origin) {\n            var option = this.option;\n            var max = (!origin && option.rangeEnd != null)\n                ? option.rangeEnd : option.max;\n\n            if (this.axis\n                && max != null\n                && max !== 'dataMax'\n                && typeof max !== 'function'\n                && !zrUtil.eqNaN(max)\n            ) {\n                max = this.axis.scale.parse(max);\n            }\n            return max;\n        },\n\n        /**\n         * @return {boolean}\n         */\n        getNeedCrossZero: function () {\n            var option = this.option;\n            return (option.rangeStart != null || option.rangeEnd != null)\n                ? false : !option.scale;\n        },\n\n        /**\n         * Should be implemented by each axis model if necessary.\n         * @return {module:echarts/model/Component} coordinate system model\n         */\n        getCoordSysModel: zrUtil.noop,\n\n        /**\n         * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n         * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n         */\n        setRange: function (rangeStart, rangeEnd) {\n            this.option.rangeStart = rangeStart;\n            this.option.rangeEnd = rangeEnd;\n        },\n\n        /**\n         * Reset range\n         */\n        resetRange: function () {\n            // rangeStart and rangeEnd is readonly.\n            this.option.rangeStart = this.option.rangeEnd = null;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/axisModelCommonMixin.js\n// module id = 1017\n// module chunks = 0 1 2","/**\n * @file Data zoom model\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var env = require('zrender/lib/core/env');\n    var echarts = require('../../echarts');\n    var modelUtil = require('../../util/model');\n    var helper = require('./helper');\n    var AxisProxy = require('./AxisProxy');\n    var each = zrUtil.each;\n    var eachAxisDim = helper.eachAxisDim;\n\n    var DataZoomModel = echarts.extendComponentModel({\n\n        type: 'dataZoom',\n\n        dependencies: [\n            'xAxis', 'yAxis', 'zAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'series'\n        ],\n\n        /**\n         * @protected\n         */\n        defaultOption: {\n            zlevel: 0,\n            z: 4,                   // Higher than normal component (z: 2).\n            orient: null,           // Default auto by axisIndex. Possible value: 'horizontal', 'vertical'.\n            xAxisIndex: null,       // Default the first horizontal category axis.\n            yAxisIndex: null,       // Default the first vertical category axis.\n\n            filterMode: 'filter',   // Possible values: 'filter' or 'empty' or 'weakFilter'.\n                                    // 'filter': data items which are out of window will be removed. This option is\n                                    //          applicable when filtering outliers. For each data item, it will be\n                                    //          filtered if one of the relevant dimensions is out of the window.\n                                    // 'weakFilter': data items which are out of window will be removed. This option\n                                    //          is applicable when filtering outliers. For each data item, it will be\n                                    //          filtered only if all  of the relevant dimensions are out of the same\n                                    //          side of the window.\n                                    // 'empty': data items which are out of window will be set to empty.\n                                    //          This option is applicable when user should not neglect\n                                    //          that there are some data items out of window.\n                                    // 'none': Do not filter.\n                                    // Taking line chart as an example, line will be broken in\n                                    // the filtered points when filterModel is set to 'empty', but\n                                    // be connected when set to 'filter'.\n\n            throttle: null,         // Dispatch action by the fixed rate, avoid frequency.\n                                    // default 100. Do not throttle when use null/undefined.\n                                    // If animation === true and animationDurationUpdate > 0,\n                                    // default value is 100, otherwise 20.\n            start: 0,               // Start percent. 0 ~ 100\n            end: 100,               // End percent. 0 ~ 100\n            startValue: null,       // Start value. If startValue specified, start is ignored.\n            endValue: null,         // End value. If endValue specified, end is ignored.\n            minSpan: null,          // 0 ~ 100\n            maxSpan: null,          // 0 ~ 100\n            minValueSpan: null,     // The range of dataZoom can not be smaller than that.\n            maxValueSpan: null,     // The range of dataZoom can not be larger than that.\n            rangeMode: null         // Array, can be 'value' or 'percent'.\n        },\n\n        /**\n         * @override\n         */\n        init: function (option, parentModel, ecModel) {\n\n            /**\n             * key like x_0, y_1\n             * @private\n             * @type {Object}\n             */\n            this._dataIntervalByAxis = {};\n\n            /**\n             * @private\n             */\n            this._dataInfo = {};\n\n            /**\n             * key like x_0, y_1\n             * @private\n             */\n            this._axisProxies = {};\n\n            /**\n             * @readOnly\n             */\n            this.textStyleModel;\n\n            /**\n             * @private\n             */\n            this._autoThrottle = true;\n\n            /**\n             * 'percent' or 'value'\n             * @private\n             */\n            this._rangePropMode = ['percent', 'percent'];\n\n            var rawOption = retrieveRaw(option);\n\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            this.doInit(rawOption);\n        },\n\n        /**\n         * @override\n         */\n        mergeOption: function (newOption) {\n            var rawOption = retrieveRaw(newOption);\n\n            //FIX #2591\n            zrUtil.merge(this.option, newOption, true);\n\n            this.doInit(rawOption);\n        },\n\n        /**\n         * @protected\n         */\n        doInit: function (rawOption) {\n            var thisOption = this.option;\n\n            // Disable realtime view update if canvas is not supported.\n            if (!env.canvasSupported) {\n                thisOption.realtime = false;\n            }\n\n            this._setDefaultThrottle(rawOption);\n\n            updateRangeUse(this, rawOption);\n\n            each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n                // start/end has higher priority over startValue/endValue if they\n                // both set, but we should make chart.setOption({endValue: 1000})\n                // effective, rather than chart.setOption({endValue: 1000, end: null}).\n                if (this._rangePropMode[index] === 'value') {\n                    thisOption[names[0]] = null;\n                }\n                // Otherwise do nothing and use the merge result.\n            }, this);\n\n            this.textStyleModel = this.getModel('textStyle');\n\n            this._resetTarget();\n\n            this._giveAxisProxies();\n        },\n\n        /**\n         * @private\n         */\n        _giveAxisProxies: function () {\n            var axisProxies = this._axisProxies;\n\n            this.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel, ecModel) {\n                var axisModel = this.dependentModels[dimNames.axis][axisIndex];\n\n                // If exists, share axisProxy with other dataZoomModels.\n                var axisProxy = axisModel.__dzAxisProxy || (\n                    // Use the first dataZoomModel as the main model of axisProxy.\n                    axisModel.__dzAxisProxy = new AxisProxy(\n                        dimNames.name, axisIndex, this, ecModel\n                    )\n                );\n                // FIXME\n                // dispose __dzAxisProxy\n\n                axisProxies[dimNames.name + '_' + axisIndex] = axisProxy;\n            }, this);\n        },\n\n        /**\n         * @private\n         */\n        _resetTarget: function () {\n            var thisOption = this.option;\n\n            var autoMode = this._judgeAutoMode();\n\n            eachAxisDim(function (dimNames) {\n                var axisIndexName = dimNames.axisIndex;\n                thisOption[axisIndexName] = modelUtil.normalizeToArray(\n                    thisOption[axisIndexName]\n                );\n            }, this);\n\n            if (autoMode === 'axisIndex') {\n                this._autoSetAxisIndex();\n            }\n            else if (autoMode === 'orient') {\n                this._autoSetOrient();\n            }\n        },\n\n        /**\n         * @private\n         */\n        _judgeAutoMode: function () {\n            // Auto set only works for setOption at the first time.\n            // The following is user's reponsibility. So using merged\n            // option is OK.\n            var thisOption = this.option;\n\n            var hasIndexSpecified = false;\n            eachAxisDim(function (dimNames) {\n                // When user set axisIndex as a empty array, we think that user specify axisIndex\n                // but do not want use auto mode. Because empty array may be encountered when\n                // some error occured.\n                if (thisOption[dimNames.axisIndex] != null) {\n                    hasIndexSpecified = true;\n                }\n            }, this);\n\n            var orient = thisOption.orient;\n\n            if (orient == null && hasIndexSpecified) {\n                return 'orient';\n            }\n            else if (!hasIndexSpecified) {\n                if (orient == null) {\n                    thisOption.orient = 'horizontal';\n                }\n                return 'axisIndex';\n            }\n        },\n\n        /**\n         * @private\n         */\n        _autoSetAxisIndex: function () {\n            var autoAxisIndex = true;\n            var orient = this.get('orient', true);\n            var thisOption = this.option;\n            var dependentModels = this.dependentModels;\n\n            if (autoAxisIndex) {\n                // Find axis that parallel to dataZoom as default.\n                var dimName = orient === 'vertical' ? 'y' : 'x';\n\n                if (dependentModels[dimName + 'Axis'].length) {\n                    thisOption[dimName + 'AxisIndex'] = [0];\n                    autoAxisIndex = false;\n                }\n                else {\n                    each(dependentModels.singleAxis, function (singleAxisModel) {\n                        if (autoAxisIndex && singleAxisModel.get('orient', true) === orient) {\n                            thisOption.singleAxisIndex = [singleAxisModel.componentIndex];\n                            autoAxisIndex = false;\n                        }\n                    });\n                }\n            }\n\n            if (autoAxisIndex) {\n                // Find the first category axis as default. (consider polar)\n                eachAxisDim(function (dimNames) {\n                    if (!autoAxisIndex) {\n                        return;\n                    }\n                    var axisIndices = [];\n                    var axisModels = this.dependentModels[dimNames.axis];\n                    if (axisModels.length && !axisIndices.length) {\n                        for (var i = 0, len = axisModels.length; i < len; i++) {\n                            if (axisModels[i].get('type') === 'category') {\n                                axisIndices.push(i);\n                            }\n                        }\n                    }\n                    thisOption[dimNames.axisIndex] = axisIndices;\n                    if (axisIndices.length) {\n                        autoAxisIndex = false;\n                    }\n                }, this);\n            }\n\n            if (autoAxisIndex) {\n                // FIXME\n                // 这里是兼容ec2的写法（没指定xAxisIndex和yAxisIndex时把scatter和双数值轴折柱纳入dataZoom控制），\n                // 但是实际是否需要Grid.js#getScaleByOption来判断（考虑time，log等axis type）？\n\n                // If both dataZoom.xAxisIndex and dataZoom.yAxisIndex is not specified,\n                // dataZoom component auto adopts series that reference to\n                // both xAxis and yAxis which type is 'value'.\n                this.ecModel.eachSeries(function (seriesModel) {\n                    if (this._isSeriesHasAllAxesTypeOf(seriesModel, 'value')) {\n                        eachAxisDim(function (dimNames) {\n                            var axisIndices = thisOption[dimNames.axisIndex];\n\n                            var axisIndex = seriesModel.get(dimNames.axisIndex);\n                            var axisId = seriesModel.get(dimNames.axisId);\n\n                            var axisModel = seriesModel.ecModel.queryComponents({\n                                mainType: dimNames.axis,\n                                index: axisIndex,\n                                id: axisId\n                            })[0];\n\n                            if (__DEV__) {\n                                if (!axisModel) {\n                                    throw new Error(\n                                        dimNames.axis + ' \"' + zrUtil.retrieve(\n                                            axisIndex,\n                                            axisId,\n                                            0\n                                        ) + '\" not found'\n                                    );\n                                }\n                            }\n                            axisIndex = axisModel.componentIndex;\n\n                            if (zrUtil.indexOf(axisIndices, axisIndex) < 0) {\n                                axisIndices.push(axisIndex);\n                            }\n                        });\n                    }\n                }, this);\n            }\n        },\n\n        /**\n         * @private\n         */\n        _autoSetOrient: function () {\n            var dim;\n\n            // Find the first axis\n            this.eachTargetAxis(function (dimNames) {\n                !dim && (dim = dimNames.name);\n            }, this);\n\n            this.option.orient = dim === 'y' ? 'vertical' : 'horizontal';\n        },\n\n        /**\n         * @private\n         */\n        _isSeriesHasAllAxesTypeOf: function (seriesModel, axisType) {\n            // FIXME\n            // 需要series的xAxisIndex和yAxisIndex都首先自动设置上。\n            // 例如series.type === scatter时。\n\n            var is = true;\n            eachAxisDim(function (dimNames) {\n                var seriesAxisIndex = seriesModel.get(dimNames.axisIndex);\n                var axisModel = this.dependentModels[dimNames.axis][seriesAxisIndex];\n\n                if (!axisModel || axisModel.get('type') !== axisType) {\n                    is = false;\n                }\n            }, this);\n            return is;\n        },\n\n        /**\n         * @private\n         */\n        _setDefaultThrottle: function (rawOption) {\n            // When first time user set throttle, auto throttle ends.\n            if (rawOption.hasOwnProperty('throttle')) {\n                this._autoThrottle = false;\n            }\n            if (this._autoThrottle) {\n                var globalOption = this.ecModel.option;\n                this.option.throttle =\n                    (globalOption.animation && globalOption.animationDurationUpdate > 0)\n                    ? 100 : 20;\n            }\n        },\n\n        /**\n         * @public\n         */\n        getFirstTargetAxisModel: function () {\n            var firstAxisModel;\n            eachAxisDim(function (dimNames) {\n                if (firstAxisModel == null) {\n                    var indices = this.get(dimNames.axisIndex);\n                    if (indices.length) {\n                        firstAxisModel = this.dependentModels[dimNames.axis][indices[0]];\n                    }\n                }\n            }, this);\n\n            return firstAxisModel;\n        },\n\n        /**\n         * @public\n         * @param {Function} callback param: axisModel, dimNames, axisIndex, dataZoomModel, ecModel\n         */\n        eachTargetAxis: function (callback, context) {\n            var ecModel = this.ecModel;\n            eachAxisDim(function (dimNames) {\n                each(\n                    this.get(dimNames.axisIndex),\n                    function (axisIndex) {\n                        callback.call(context, dimNames, axisIndex, this, ecModel);\n                    },\n                    this\n                );\n            }, this);\n        },\n\n        /**\n         * @param {string} dimName\n         * @param {number} axisIndex\n         * @return {module:echarts/component/dataZoom/AxisProxy} If not found, return null/undefined.\n         */\n        getAxisProxy: function (dimName, axisIndex) {\n            return this._axisProxies[dimName + '_' + axisIndex];\n        },\n\n        /**\n         * @param {string} dimName\n         * @param {number} axisIndex\n         * @return {module:echarts/model/Model} If not found, return null/undefined.\n         */\n        getAxisModel: function (dimName, axisIndex) {\n            var axisProxy = this.getAxisProxy(dimName, axisIndex);\n            return axisProxy && axisProxy.getAxisModel();\n        },\n\n        /**\n         * If not specified, set to undefined.\n         *\n         * @public\n         * @param {Object} opt\n         * @param {number} [opt.start]\n         * @param {number} [opt.end]\n         * @param {number} [opt.startValue]\n         * @param {number} [opt.endValue]\n         * @param {boolean} [ignoreUpdateRangeUsg=false]\n         */\n        setRawRange: function (opt, ignoreUpdateRangeUsg) {\n            each(['start', 'end', 'startValue', 'endValue'], function (name) {\n                // If any of those prop is null/undefined, we should alos set\n                // them, because only one pair between start/end and\n                // startValue/endValue can work.\n                this.option[name] = opt[name];\n            }, this);\n\n            !ignoreUpdateRangeUsg && updateRangeUse(this, opt);\n        },\n\n        /**\n         * @public\n         * @return {Array.<number>} [startPercent, endPercent]\n         */\n        getPercentRange: function () {\n            var axisProxy = this.findRepresentativeAxisProxy();\n            if (axisProxy) {\n                return axisProxy.getDataPercentWindow();\n            }\n        },\n\n        /**\n         * @public\n         * For example, chart.getModel().getComponent('dataZoom').getValueRange('y', 0);\n         *\n         * @param {string} [axisDimName]\n         * @param {number} [axisIndex]\n         * @return {Array.<number>} [startValue, endValue] value can only be '-' or finite number.\n         */\n        getValueRange: function (axisDimName, axisIndex) {\n            if (axisDimName == null && axisIndex == null) {\n                var axisProxy = this.findRepresentativeAxisProxy();\n                if (axisProxy) {\n                    return axisProxy.getDataValueWindow();\n                }\n            }\n            else {\n                return this.getAxisProxy(axisDimName, axisIndex).getDataValueWindow();\n            }\n        },\n\n        /**\n         * @public\n         * @param {module:echarts/model/Model} [axisModel] If axisModel given, find axisProxy\n         *      corresponding to the axisModel\n         * @return {module:echarts/component/dataZoom/AxisProxy}\n         */\n        findRepresentativeAxisProxy: function (axisModel) {\n            if (axisModel) {\n                return axisModel.__dzAxisProxy;\n            }\n\n            // Find the first hosted axisProxy\n            var axisProxies = this._axisProxies;\n            for (var key in axisProxies) {\n                if (axisProxies.hasOwnProperty(key) && axisProxies[key].hostedBy(this)) {\n                    return axisProxies[key];\n                }\n            }\n\n            // If no hosted axis find not hosted axisProxy.\n            // Consider this case: dataZoomModel1 and dataZoomModel2 control the same axis,\n            // and the option.start or option.end settings are different. The percentRange\n            // should follow axisProxy.\n            // (We encounter this problem in toolbox data zoom.)\n            for (var key in axisProxies) {\n                if (axisProxies.hasOwnProperty(key) && !axisProxies[key].hostedBy(this)) {\n                    return axisProxies[key];\n                }\n            }\n        },\n\n        /**\n         * @return {Array.<string>}\n         */\n        getRangePropMode: function () {\n            return this._rangePropMode.slice();\n        }\n\n    });\n\n    function retrieveRaw(option) {\n        var ret = {};\n        each(\n            ['start', 'end', 'startValue', 'endValue', 'throttle'],\n            function (name) {\n                option.hasOwnProperty(name) && (ret[name] = option[name]);\n            }\n        );\n        return ret;\n    }\n\n    function updateRangeUse(dataZoomModel, rawOption) {\n        var rangePropMode = dataZoomModel._rangePropMode;\n        var rangeModeInOption = dataZoomModel.get('rangeMode');\n\n        each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n            var percentSpecified = rawOption[names[0]] != null;\n            var valueSpecified = rawOption[names[1]] != null;\n            if (percentSpecified && !valueSpecified) {\n                rangePropMode[index] = 'percent';\n            }\n            else if (!percentSpecified && valueSpecified) {\n                rangePropMode[index] = 'value';\n            }\n            else if (rangeModeInOption) {\n                rangePropMode[index] = rangeModeInOption[index];\n            }\n            else if (percentSpecified) { // percentSpecified && valueSpecified\n                rangePropMode[index] = 'percent';\n            }\n            // else remain its original setting.\n        });\n    }\n\n    module.exports = DataZoomModel;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/DataZoomModel.js\n// module id = 1018\n// module chunks = 0 1 2","\n    var formatUtil = require('../../util/format');\n    var zrUtil = require('zrender/lib/core/util');\n\n    var helper = {};\n\n    var AXIS_DIMS = ['x', 'y', 'z', 'radius', 'angle', 'single'];\n    // Supported coords.\n    var COORDS = ['cartesian2d', 'polar', 'singleAxis'];\n\n    /**\n     * @param {string} coordType\n     * @return {boolean}\n     */\n    helper.isCoordSupported = function (coordType) {\n        return zrUtil.indexOf(COORDS, coordType) >= 0;\n    };\n\n    /**\n     * Create \"each\" method to iterate names.\n     *\n     * @pubilc\n     * @param  {Array.<string>} names\n     * @param  {Array.<string>=} attrs\n     * @return {Function}\n     */\n    helper.createNameEach = function (names, attrs) {\n        names = names.slice();\n        var capitalNames = zrUtil.map(names, formatUtil.capitalFirst);\n        attrs = (attrs || []).slice();\n        var capitalAttrs = zrUtil.map(attrs, formatUtil.capitalFirst);\n\n        return function (callback, context) {\n            zrUtil.each(names, function (name, index) {\n                var nameObj = {name: name, capital: capitalNames[index]};\n\n                for (var j = 0; j < attrs.length; j++) {\n                    nameObj[attrs[j]] = name + capitalAttrs[j];\n                }\n\n                callback.call(context, nameObj);\n            });\n        };\n    };\n\n    /**\n     * Iterate each dimension name.\n     *\n     * @public\n     * @param {Function} callback The parameter is like:\n     *                            {\n     *                                name: 'angle',\n     *                                capital: 'Angle',\n     *                                axis: 'angleAxis',\n     *                                axisIndex: 'angleAixs',\n     *                                index: 'angleIndex'\n     *                            }\n     * @param {Object} context\n     */\n    helper.eachAxisDim = helper.createNameEach(AXIS_DIMS, ['axisIndex', 'axis', 'index', 'id']);\n\n    /**\n     * If tow dataZoomModels has the same axis controlled, we say that they are 'linked'.\n     * dataZoomModels and 'links' make up one or more graphics.\n     * This function finds the graphic where the source dataZoomModel is in.\n     *\n     * @public\n     * @param {Function} forEachNode Node iterator.\n     * @param {Function} forEachEdgeType edgeType iterator\n     * @param {Function} edgeIdGetter Giving node and edgeType, return an array of edge id.\n     * @return {Function} Input: sourceNode, Output: Like {nodes: [], dims: {}}\n     */\n    helper.createLinkedNodesFinder = function (forEachNode, forEachEdgeType, edgeIdGetter) {\n\n        return function (sourceNode) {\n            var result = {\n                nodes: [],\n                records: {} // key: edgeType.name, value: Object (key: edge id, value: boolean).\n            };\n\n            forEachEdgeType(function (edgeType) {\n                result.records[edgeType.name] = {};\n            });\n\n            if (!sourceNode) {\n                return result;\n            }\n\n            absorb(sourceNode, result);\n\n            var existsLink;\n            do {\n                existsLink = false;\n                forEachNode(processSingleNode);\n            }\n            while (existsLink);\n\n            function processSingleNode(node) {\n                if (!isNodeAbsorded(node, result) && isLinked(node, result)) {\n                    absorb(node, result);\n                    existsLink = true;\n                }\n            }\n\n            return result;\n        };\n\n        function isNodeAbsorded(node, result) {\n            return zrUtil.indexOf(result.nodes, node) >= 0;\n        }\n\n        function isLinked(node, result) {\n            var hasLink = false;\n            forEachEdgeType(function (edgeType) {\n                zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n                    result.records[edgeType.name][edgeId] && (hasLink = true);\n                });\n            });\n            return hasLink;\n        }\n\n        function absorb(node, result) {\n            result.nodes.push(node);\n            forEachEdgeType(function (edgeType) {\n                zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n                    result.records[edgeType.name][edgeId] = true;\n                });\n            });\n        }\n    };\n\n    module.exports = helper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/helper.js\n// module id = 1019\n// module chunks = 0 1 2","\n\n    var ComponentView = require('../../view/Component');\n\n    module.exports = ComponentView.extend({\n\n        type: 'dataZoom',\n\n        render: function (dataZoomModel, ecModel, api, payload) {\n            this.dataZoomModel = dataZoomModel;\n            this.ecModel = ecModel;\n            this.api = api;\n        },\n\n        /**\n         * Find the first target coordinate system.\n         *\n         * @protected\n         * @return {Object} {\n         *                   grid: [\n         *                       {model: coord0, axisModels: [axis1, axis3], coordIndex: 1},\n         *                       {model: coord1, axisModels: [axis0, axis2], coordIndex: 0},\n         *                       ...\n         *                   ],  // cartesians must not be null/undefined.\n         *                   polar: [\n         *                       {model: coord0, axisModels: [axis4], coordIndex: 0},\n         *                       ...\n         *                   ],  // polars must not be null/undefined.\n         *                   singleAxis: [\n         *                       {model: coord0, axisModels: [], coordIndex: 0}\n         *                   ]\n         */\n        getTargetCoordInfo: function () {\n            var dataZoomModel = this.dataZoomModel;\n            var ecModel = this.ecModel;\n            var coordSysLists = {};\n\n            dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\n                var axisModel = ecModel.getComponent(dimNames.axis, axisIndex);\n                if (axisModel) {\n                    var coordModel = axisModel.getCoordSysModel();\n                    coordModel && save(\n                        coordModel,\n                        axisModel,\n                        coordSysLists[coordModel.mainType] || (coordSysLists[coordModel.mainType] = []),\n                        coordModel.componentIndex\n                    );\n                }\n            }, this);\n\n            function save(coordModel, axisModel, store, coordIndex) {\n                var item;\n                for (var i = 0; i < store.length; i++) {\n                    if (store[i].model === coordModel) {\n                        item = store[i];\n                        break;\n                    }\n                }\n                if (!item) {\n                    store.push(item = {\n                        model: coordModel, axisModels: [], coordIndex: coordIndex\n                    });\n                }\n                item.axisModels.push(axisModel);\n            }\n\n            return coordSysLists;\n        }\n\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/DataZoomView.js\n// module id = 1020\n// module chunks = 0 1 2","\n\n    var echarts = require('../echarts');\n    var axisPointerModelHelper = require('./axisPointer/modelHelper');\n    var axisTrigger = require('./axisPointer/axisTrigger');\n    var zrUtil = require('zrender/lib/core/util');\n\n    require('./axisPointer/AxisPointerModel');\n    require('./axisPointer/AxisPointerView');\n\n    // CartesianAxisPointer is not supposed to be required here. But consider\n    // echarts.simple.js and online build tooltip, which only require gridSimple,\n    // CartesianAxisPointer should be able to required somewhere.\n    require('./axisPointer/CartesianAxisPointer');\n\n    echarts.registerPreprocessor(function (option) {\n        // Always has a global axisPointerModel for default setting.\n        if (option) {\n            (!option.axisPointer || option.axisPointer.length === 0)\n                && (option.axisPointer = {});\n\n            var link = option.axisPointer.link;\n            // Normalize to array to avoid object mergin. But if link\n            // is not set, remain null/undefined, otherwise it will\n            // override existent link setting.\n            if (link && !zrUtil.isArray(link)) {\n                option.axisPointer.link = [link];\n            }\n        }\n    });\n\n    // This process should proformed after coordinate systems created\n    // and series data processed. So put it on statistic processing stage.\n    echarts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n        // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n        // allAxesInfo should be updated when setOption performed.\n        ecModel.getComponent('axisPointer').coordSysAxesInfo\n            = axisPointerModelHelper.collect(ecModel, api);\n    });\n\n    // Broadcast to all views.\n    echarts.registerAction({\n        type: 'updateAxisPointer',\n        event: 'updateAxisPointer',\n        update: ':updateAxisPointer'\n    }, axisTrigger);\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer.js\n// module id = 1021\n// module chunks = 0 1 2","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n    var textContain = require('zrender/lib/contain/text');\n    var formatUtil = require('../../util/format');\n    var matrix = require('zrender/lib/core/matrix');\n    var axisHelper = require('../../coord/axisHelper');\n    var AxisBuilder = require('../axis/AxisBuilder');\n\n    var helper = {};\n\n    /**\n     * @param {module:echarts/model/Model} axisPointerModel\n     */\n    helper.buildElStyle = function (axisPointerModel) {\n        var axisPointerType = axisPointerModel.get('type');\n        var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n        var style;\n        if (axisPointerType === 'line') {\n            style = styleModel.getLineStyle();\n            style.fill = null;\n        }\n        else if (axisPointerType === 'shadow') {\n            style = styleModel.getAreaStyle();\n            style.stroke = null;\n        }\n        return style;\n    };\n\n    /**\n     * @param {Function} labelPos {align, verticalAlign, position}\n     */\n    helper.buildLabelElOption = function (\n        elOption, axisModel, axisPointerModel, api, labelPos\n    ) {\n        var value = axisPointerModel.get('value');\n        var text = helper.getValueLabel(\n            value, axisModel.axis, axisModel.ecModel,\n            axisPointerModel.get('seriesDataIndices'),\n            {\n                precision: axisPointerModel.get('label.precision'),\n                formatter: axisPointerModel.get('label.formatter')\n            }\n        );\n        var labelModel = axisPointerModel.getModel('label');\n        var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n\n        var font = labelModel.getFont();\n        var textRect = textContain.getBoundingRect(text, font);\n\n        var position = labelPos.position;\n        var width = textRect.width + paddings[1] + paddings[3];\n        var height = textRect.height + paddings[0] + paddings[2];\n\n        // Adjust by align.\n        var align = labelPos.align;\n        align === 'right' && (position[0] -= width);\n        align === 'center' && (position[0] -= width / 2);\n        var verticalAlign = labelPos.verticalAlign;\n        verticalAlign === 'bottom' && (position[1] -= height);\n        verticalAlign === 'middle' && (position[1] -= height / 2);\n\n        // Not overflow ec container\n        confineInContainer(position, width, height, api);\n\n        var bgColor = labelModel.get('backgroundColor');\n        if (!bgColor || bgColor === 'auto') {\n            bgColor = axisModel.get('axisLine.lineStyle.color');\n        }\n\n        elOption.label = {\n            shape: {x: 0, y: 0, width: width, height: height, r: labelModel.get('borderRadius')},\n            position: position.slice(),\n            // TODO: rich\n            style: {\n                text: text,\n                textFont: font,\n                textFill: labelModel.getTextColor(),\n                textPosition: 'inside',\n                fill: bgColor,\n                stroke: labelModel.get('borderColor') || 'transparent',\n                lineWidth: labelModel.get('borderWidth') || 0,\n                shadowBlur: labelModel.get('shadowBlur'),\n                shadowColor: labelModel.get('shadowColor'),\n                shadowOffsetX: labelModel.get('shadowOffsetX'),\n                shadowOffsetY: labelModel.get('shadowOffsetY')\n            },\n            // Lable should be over axisPointer.\n            z2: 10\n        };\n    };\n\n    // Do not overflow ec container\n    function confineInContainer(position, width, height, api) {\n        var viewWidth = api.getWidth();\n        var viewHeight = api.getHeight();\n        position[0] = Math.min(position[0] + width, viewWidth) - width;\n        position[1] = Math.min(position[1] + height, viewHeight) - height;\n        position[0] = Math.max(position[0], 0);\n        position[1] = Math.max(position[1], 0);\n    }\n\n    /**\n     * @param {number} value\n     * @param {module:echarts/coord/Axis} axis\n     * @param {module:echarts/model/Global} ecModel\n     * @param {Object} opt\n     * @param {Array.<Object>} seriesDataIndices\n     * @param {number|string} opt.precision 'auto' or a number\n     * @param {string|Function} opt.formatter label formatter\n     */\n    helper.getValueLabel = function (value, axis, ecModel, seriesDataIndices, opt) {\n        var text = axis.scale.getLabel(\n            // If `precision` is set, width can be fixed (like '12.00500'), which\n            // helps to debounce when when moving label.\n            value, {precision: opt.precision}\n        );\n        var formatter = opt.formatter;\n\n        if (formatter) {\n            var params = {\n                value: axisHelper.getAxisRawValue(axis, value),\n                seriesData: []\n            };\n            zrUtil.each(seriesDataIndices, function (idxItem) {\n                var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n                var dataIndex = idxItem.dataIndexInside;\n                var dataParams = series && series.getDataParams(dataIndex);\n                dataParams && params.seriesData.push(dataParams);\n            });\n\n            if (zrUtil.isString(formatter)) {\n                text = formatter.replace('{value}', text);\n            }\n            else if (zrUtil.isFunction(formatter)) {\n                text = formatter(params);\n            }\n        }\n\n        return text;\n    };\n\n    /**\n     * @param {module:echarts/coord/Axis} axis\n     * @param {number} value\n     * @param {Object} layoutInfo {\n     *  rotation, position, labelOffset, labelDirection, labelMargin\n     * }\n     */\n    helper.getTransformedPosition = function (axis, value, layoutInfo) {\n        var transform = matrix.create();\n        matrix.rotate(transform, transform, layoutInfo.rotation);\n        matrix.translate(transform, transform, layoutInfo.position);\n\n        return graphic.applyTransform([\n            axis.dataToCoord(value),\n            (layoutInfo.labelOffset || 0)\n                + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)\n        ], transform);\n    };\n\n    helper.buildCartesianSingleLabelElOption = function (\n        value, elOption, layoutInfo, axisModel, axisPointerModel, api\n    ) {\n        var textLayout = AxisBuilder.innerTextLayout(\n            layoutInfo.rotation, 0, layoutInfo.labelDirection\n        );\n        layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n        helper.buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n            position: helper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n            align: textLayout.textAlign,\n            verticalAlign: textLayout.textVerticalAlign\n        });\n    };\n\n    /**\n     * @param {Array.<number>} p1\n     * @param {Array.<number>} p2\n     * @param {number} [xDimIndex=0] or 1\n     */\n    helper.makeLineShape = function (p1, p2, xDimIndex) {\n        xDimIndex = xDimIndex || 0;\n        return {\n            x1: p1[xDimIndex],\n            y1: p1[1 - xDimIndex],\n            x2: p2[xDimIndex],\n            y2: p2[1 - xDimIndex]\n        };\n    };\n\n    /**\n     * @param {Array.<number>} xy\n     * @param {Array.<number>} wh\n     * @param {number} [xDimIndex=0] or 1\n     */\n    helper.makeRectShape = function (xy, wh, xDimIndex) {\n        xDimIndex = xDimIndex || 0;\n        return {\n            x: xy[xDimIndex],\n            y: xy[1 - xDimIndex],\n            width: wh[xDimIndex],\n            height: wh[1 - xDimIndex]\n        };\n    };\n\n    helper.makeSectorShape = function (cx, cy, r0, r, startAngle, endAngle) {\n        return {\n            cx: cx,\n            cy: cy,\n            r0: r0,\n            r: r,\n            startAngle: startAngle,\n            endAngle: endAngle,\n            clockwise: true\n        };\n    };\n\n    module.exports = helper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/viewHelper.js\n// module id = 1022\n// module chunks = 0 1 2","'use strict';\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\n\n\n    var matrix = require('../core/matrix');\n    var vector = require('../core/vector');\n    var mIdentity = matrix.identity;\n\n    var EPSILON = 5e-5;\n\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n\n    /**\n     * @alias module:zrender/mixin/Transformable\n     * @constructor\n     */\n    var Transformable = function (opts) {\n        opts = opts || {};\n        // If there are no given position, rotation, scale\n        if (!opts.position) {\n            /**\n             * 平移\n             * @type {Array.<number>}\n             * @default [0, 0]\n             */\n            this.position = [0, 0];\n        }\n        if (opts.rotation == null) {\n            /**\n             * 旋转\n             * @type {Array.<number>}\n             * @default 0\n             */\n            this.rotation = 0;\n        }\n        if (!opts.scale) {\n            /**\n             * 缩放\n             * @type {Array.<number>}\n             * @default [1, 1]\n             */\n            this.scale = [1, 1];\n        }\n        /**\n         * 旋转和缩放的原点\n         * @type {Array.<number>}\n         * @default null\n         */\n        this.origin = this.origin || null;\n    };\n\n    var transformableProto = Transformable.prototype;\n    transformableProto.transform = null;\n\n    /**\n     * 判断是否需要有坐标变换\n     * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n     */\n    transformableProto.needLocalTransform = function () {\n        return isNotAroundZero(this.rotation)\n            || isNotAroundZero(this.position[0])\n            || isNotAroundZero(this.position[1])\n            || isNotAroundZero(this.scale[0] - 1)\n            || isNotAroundZero(this.scale[1] - 1);\n    };\n\n    transformableProto.updateTransform = function () {\n        var parent = this.parent;\n        var parentHasTransform = parent && parent.transform;\n        var needLocalTransform = this.needLocalTransform();\n\n        var m = this.transform;\n        if (!(needLocalTransform || parentHasTransform)) {\n            m && mIdentity(m);\n            return;\n        }\n\n        m = m || matrix.create();\n\n        if (needLocalTransform) {\n            this.getLocalTransform(m);\n        }\n        else {\n            mIdentity(m);\n        }\n\n        // 应用父节点变换\n        if (parentHasTransform) {\n            if (needLocalTransform) {\n                matrix.mul(m, parent.transform, m);\n            }\n            else {\n                matrix.copy(m, parent.transform);\n            }\n        }\n        // 保存这个变换矩阵\n        this.transform = m;\n\n        this.invTransform = this.invTransform || matrix.create();\n        matrix.invert(this.invTransform, m);\n    };\n\n    transformableProto.getLocalTransform = function (m) {\n        return Transformable.getLocalTransform(this, m);\n    };\n\n    /**\n     * 将自己的transform应用到context上\n     * @param {CanvasRenderingContext2D} ctx\n     */\n    transformableProto.setTransform = function (ctx) {        \n        var m = this.transform;\n        var dpr = ctx.dpr || 1;\n        if (m) {\n            ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n        }\n        else {\n            ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n        }\n    };\n\n    transformableProto.restoreTransform = function (ctx) {\n        var dpr = ctx.dpr || 1;\n        ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n    };\n\n    var tmpTransform = [];\n\n    /**\n     * 分解`transform`矩阵到`position`, `rotation`, `scale`\n     */\n    transformableProto.decomposeTransform = function () {\n        if (!this.transform) {\n            return;\n        }\n        var parent = this.parent;\n        var m = this.transform;\n        if (parent && parent.transform) {\n            // Get local transform and decompose them to position, scale, rotation\n            matrix.mul(tmpTransform, parent.invTransform, m);\n            m = tmpTransform;\n        }\n        var sx = m[0] * m[0] + m[1] * m[1];\n        var sy = m[2] * m[2] + m[3] * m[3];\n        var position = this.position;\n        var scale = this.scale;\n        if (isNotAroundZero(sx - 1)) {\n            sx = Math.sqrt(sx);\n        }\n        if (isNotAroundZero(sy - 1)) {\n            sy = Math.sqrt(sy);\n        }\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        position[0] = m[4];\n        position[1] = m[5];\n        scale[0] = sx;\n        scale[1] = sy;\n        this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n    };\n\n    /**\n     * Get global scale\n     * @return {Array.<number>}\n     */\n    transformableProto.getGlobalScale = function () {\n        var m = this.transform;\n        if (!m) {\n            return [1, 1];\n        }\n        var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        return [sx, sy];\n    };\n    /**\n     * 变换坐标位置到 shape 的局部坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToLocal = function (x, y) {\n        var v2 = [x, y];\n        var invTransform = this.invTransform;\n        if (invTransform) {\n            vector.applyTransform(v2, v2, invTransform);\n        }\n        return v2;\n    };\n\n    /**\n     * 变换局部坐标位置到全局坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToGlobal = function (x, y) {\n        var v2 = [x, y];\n        var transform = this.transform;\n        if (transform) {\n            vector.applyTransform(v2, v2, transform);\n        }\n        return v2;\n    };\n\n    /**\n     * @static\n     * @param {Object} target\n     * @param {Array.<number>} target.origin\n     * @param {number} target.rotation\n     * @param {Array.<number>} target.position\n     * @param {Array.<number>} [m]\n     */\n    Transformable.getLocalTransform = function (target, m) {\n        m = m || [];\n        mIdentity(m);\n\n        var origin = target.origin;\n        var scale = target.scale || [1, 1];\n        var rotation = target.rotation || 0;\n        var position = target.position || [0, 0];\n\n        if (origin) {\n            // Translate to origin\n            m[4] -= origin[0];\n            m[5] -= origin[1];\n        }\n        matrix.scale(m, m, scale);\n        if (rotation) {\n            matrix.rotate(m, m, rotation);\n        }\n        if (origin) {\n            // Translate back from origin\n            m[4] += origin[0];\n            m[5] += origin[1];\n        }\n\n        m[4] += position[0];\n        m[5] += position[1];\n\n        return m;\n    };\n\n    module.exports = Transformable;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/mixin/Transformable.js\n// module id = 1023\n// module chunks = 0 1 2","\n        var config = require('../config');\n\n        /**\n         * @exports zrender/tool/log\n         * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n         */\n        module.exports = function() {\n            if (config.debugMode === 0) {\n                return;\n            }\n            else if (config.debugMode == 1) {\n                for (var k in arguments) {\n                    throw new Error(arguments[k]);\n                }\n            }\n            else if (config.debugMode > 1) {\n                for (var k in arguments) {\n                    console.log(arguments[k]);\n                }\n            }\n        };\n\n        /* for debug\n        return function(mes) {\n            document.getElementById('wrong-message').innerHTML =\n                mes + ' ' + (new Date() - 0)\n                + '<br/>'\n                + document.getElementById('wrong-message').innerHTML;\n        };\n        */\n    \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/log.js\n// module id = 1024\n// module chunks = 0 1 2","\n\n    var textContain = require('../../contain/text');\n    var util = require('../../core/util');\n    var roundRectHelper = require('./roundRect');\n    var imageHelper = require('./image');\n\n    var retrieve3 = util.retrieve3;\n    var retrieve2 = util.retrieve2;\n\n    // TODO: Have not support 'start', 'end' yet.\n    var VALID_TEXT_ALIGN = {left: 1, right: 1, center: 1};\n    var VALID_TEXT_VERTICAL_ALIGN = {top: 1, bottom: 1, middle: 1};\n\n    var helper = {};\n\n    /**\n     * @param {module:zrender/graphic/Style} style\n     * @return {module:zrender/graphic/Style} The input style.\n     */\n    helper.normalizeTextStyle = function (style) {\n        normalizeStyle(style);\n        util.each(style.rich, normalizeStyle);\n        return style;\n    };\n\n    function normalizeStyle(style) {\n        if (style) {\n\n            style.font = textContain.makeFont(style);\n\n            var textAlign = style.textAlign;\n            textAlign === 'middle' && (textAlign = 'center');\n            style.textAlign = (\n                textAlign == null || VALID_TEXT_ALIGN[textAlign]\n            ) ? textAlign : 'left';\n\n            // Compatible with textBaseline.\n            var textVerticalAlign = style.textVerticalAlign || style.textBaseline;\n            textVerticalAlign === 'center' && (textVerticalAlign = 'middle');\n            style.textVerticalAlign = (\n                textVerticalAlign == null || VALID_TEXT_VERTICAL_ALIGN[textVerticalAlign]\n            ) ? textVerticalAlign : 'top';\n\n            var textPadding = style.textPadding;\n            if (textPadding) {\n                style.textPadding = util.normalizeCssArray(style.textPadding);\n            }\n        }\n    }\n\n    /**\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {string} text\n     * @param {module:zrender/graphic/Style} style\n     * @param {Object|boolean} [rect] {x, y, width, height}\n     *                  If set false, rect text is not used.\n     */\n    helper.renderText = function (hostEl, ctx, text, style, rect) {\n        style.rich\n            ? renderRichText(hostEl, ctx, text, style, rect)\n            : renderPlainText(hostEl, ctx, text, style, rect);\n    };\n\n    function renderPlainText(hostEl, ctx, text, style, rect) {\n        var font = setCtx(ctx, 'font', style.font || textContain.DEFAULT_FONT);\n\n        var textPadding = style.textPadding;\n\n        var contentBlock = hostEl.__textCotentBlock;\n        if (!contentBlock || hostEl.__dirty) {\n            contentBlock = hostEl.__textCotentBlock = textContain.parsePlainText(\n                text, font, textPadding, style.truncate\n            );\n        }\n\n        var outerHeight = contentBlock.outerHeight;\n\n        var textLines = contentBlock.lines;\n        var lineHeight = contentBlock.lineHeight;\n\n        var boxPos = getBoxPosition(outerHeight, style, rect);\n        var baseX = boxPos.baseX;\n        var baseY = boxPos.baseY;\n        var textAlign = boxPos.textAlign;\n        var textVerticalAlign = boxPos.textVerticalAlign;\n\n        // Origin of textRotation should be the base point of text drawing.\n        applyTextRotation(ctx, style, rect, baseX, baseY);\n\n        var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n        var textX = baseX;\n        var textY = boxY;\n\n        var needDrawBg = needDrawBackground(style);\n        if (needDrawBg || textPadding) {\n            // Consider performance, do not call getTextWidth util necessary.\n            var textWidth = textContain.getWidth(text, font);\n            var outerWidth = textWidth;\n            textPadding && (outerWidth += textPadding[1] + textPadding[3]);\n            var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n\n            needDrawBg && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n            if (textPadding) {\n                textX = getTextXForPadding(baseX, textAlign, textPadding);\n                textY += textPadding[0];\n            }\n        }\n\n        setCtx(ctx, 'textAlign', textAlign || 'left');\n        // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n        // text will offset downward a little bit in font \"Microsoft YaHei\".\n        setCtx(ctx, 'textBaseline', 'middle');\n\n        // Always set shadowBlur and shadowOffset to avoid leak from displayable.\n        setCtx(ctx, 'shadowBlur', style.textShadowBlur || 0);\n        setCtx(ctx, 'shadowColor', style.textShadowColor || 'transparent');\n        setCtx(ctx, 'shadowOffsetX', style.textShadowOffsetX || 0);\n        setCtx(ctx, 'shadowOffsetY', style.textShadowOffsetY || 0);\n\n        // `textBaseline` is set as 'middle'.\n        textY += lineHeight / 2;\n\n        var textStrokeWidth = style.textStrokeWidth;\n        var textStroke = getStroke(style.textStroke, textStrokeWidth);\n        var textFill = getFill(style.textFill);\n\n        if (textStroke) {\n            setCtx(ctx, 'lineWidth', textStrokeWidth);\n            setCtx(ctx, 'strokeStyle', textStroke);\n        }\n        if (textFill) {\n            setCtx(ctx, 'fillStyle', textFill);\n        }\n\n        for (var i = 0; i < textLines.length; i++) {\n            // Fill after stroke so the outline will not cover the main part.\n            textStroke && ctx.strokeText(textLines[i], textX, textY);\n            textFill && ctx.fillText(textLines[i], textX, textY);\n            textY += lineHeight;\n        }\n    }\n\n    function renderRichText(hostEl, ctx, text, style, rect) {\n        var contentBlock = hostEl.__textCotentBlock;\n\n        if (!contentBlock || hostEl.__dirty) {\n            contentBlock = hostEl.__textCotentBlock = textContain.parseRichText(text, style);\n        }\n\n        drawRichText(hostEl, ctx, contentBlock, style, rect);\n    }\n\n    function drawRichText(hostEl, ctx, contentBlock, style, rect) {\n        var contentWidth = contentBlock.width;\n        var outerWidth = contentBlock.outerWidth;\n        var outerHeight = contentBlock.outerHeight;\n        var textPadding = style.textPadding;\n\n        var boxPos = getBoxPosition(outerHeight, style, rect);\n        var baseX = boxPos.baseX;\n        var baseY = boxPos.baseY;\n        var textAlign = boxPos.textAlign;\n        var textVerticalAlign = boxPos.textVerticalAlign;\n\n        // Origin of textRotation should be the base point of text drawing.\n        applyTextRotation(ctx, style, rect, baseX, baseY);\n\n        var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n        var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n        var xLeft = boxX;\n        var lineTop = boxY;\n        if (textPadding) {\n            xLeft += textPadding[3];\n            lineTop += textPadding[0];\n        }\n        var xRight = xLeft + contentWidth;\n\n        needDrawBackground(style) && drawBackground(\n            hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight\n        );\n\n        for (var i = 0; i < contentBlock.lines.length; i++) {\n            var line = contentBlock.lines[i];\n            var tokens = line.tokens;\n            var tokenCount = tokens.length;\n            var lineHeight = line.lineHeight;\n            var usedWidth = line.width;\n\n            var leftIndex = 0;\n            var lineXLeft = xLeft;\n            var lineXRight = xRight;\n            var rightIndex = tokenCount - 1;\n            var token;\n\n            while (\n                leftIndex < tokenCount\n                && (token = tokens[leftIndex], !token.textAlign || token.textAlign === 'left')\n            ) {\n                placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft, 'left');\n                usedWidth -= token.width;\n                lineXLeft += token.width;\n                leftIndex++;\n            }\n\n            while (\n                rightIndex >= 0\n                && (token = tokens[rightIndex], token.textAlign === 'right')\n            ) {\n                placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXRight, 'right');\n                usedWidth -= token.width;\n                lineXRight -= token.width;\n                rightIndex--;\n            }\n\n            // The other tokens are placed as textAlign 'center' if there is enough space.\n            lineXLeft += (contentWidth - (lineXLeft - xLeft) - (xRight - lineXRight) - usedWidth) / 2;\n            while (leftIndex <= rightIndex) {\n                token = tokens[leftIndex];\n                // Consider width specified by user, use 'center' rather than 'left'.\n                placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft + token.width / 2, 'center');\n                lineXLeft += token.width;\n                leftIndex++;\n            }\n\n            lineTop += lineHeight;\n        }\n    }\n\n    function applyTextRotation(ctx, style, rect, x, y) {\n        // textRotation only apply in RectText.\n        if (rect && style.textRotation) {\n            var origin = style.textOrigin;\n            if (origin === 'center') {\n                x = rect.width / 2 + rect.x;\n                y = rect.height / 2 + rect.y;\n            }\n            else if (origin) {\n                x = origin[0] + rect.x;\n                y = origin[1] + rect.y;\n            }\n\n            ctx.translate(x, y);\n            // Positive: anticlockwise\n            ctx.rotate(-style.textRotation);\n            ctx.translate(-x, -y);\n        }\n    }\n\n    function placeToken(hostEl, ctx, token, style, lineHeight, lineTop, x, textAlign) {\n        var tokenStyle = style.rich[token.styleName] || {};\n\n        // 'ctx.textBaseline' is always set as 'middle', for sake of\n        // the bias of \"Microsoft YaHei\".\n        var textVerticalAlign = token.textVerticalAlign;\n        var y = lineTop + lineHeight / 2;\n        if (textVerticalAlign === 'top') {\n            y = lineTop + token.height / 2;\n        }\n        else if (textVerticalAlign === 'bottom') {\n            y = lineTop + lineHeight - token.height / 2;\n        }\n\n        !token.isLineHolder && needDrawBackground(tokenStyle) && drawBackground(\n            hostEl,\n            ctx,\n            tokenStyle,\n            textAlign === 'right'\n                ? x - token.width\n                : textAlign === 'center'\n                ? x - token.width / 2\n                : x,\n            y - token.height / 2,\n            token.width,\n            token.height\n        );\n\n        var textPadding = token.textPadding;\n        if (textPadding) {\n            x = getTextXForPadding(x, textAlign, textPadding);\n            y -= token.height / 2 - textPadding[2] - token.textHeight / 2;\n        }\n\n        setCtx(ctx, 'shadowBlur', retrieve3(tokenStyle.textShadowBlur, style.textShadowBlur, 0));\n        setCtx(ctx, 'shadowColor', tokenStyle.textShadowColor || style.textShadowColor || 'transparent');\n        setCtx(ctx, 'shadowOffsetX', retrieve3(tokenStyle.textShadowOffsetX, style.textShadowOffsetX, 0));\n        setCtx(ctx, 'shadowOffsetY', retrieve3(tokenStyle.textShadowOffsetY, style.textShadowOffsetY, 0));\n\n        setCtx(ctx, 'textAlign', textAlign);\n        // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n        // text will offset downward a little bit in font \"Microsoft YaHei\".\n        setCtx(ctx, 'textBaseline', 'middle');\n\n        setCtx(ctx, 'font', token.font || textContain.DEFAULT_FONT);\n\n        var textStroke = getStroke(tokenStyle.textStroke || style.textStroke, textStrokeWidth);\n        var textFill = getFill(tokenStyle.textFill || style.textFill);\n        var textStrokeWidth = retrieve2(tokenStyle.textStrokeWidth, style.textStrokeWidth);\n\n        // Fill after stroke so the outline will not cover the main part.\n        if (textStroke) {\n            setCtx(ctx, 'lineWidth', textStrokeWidth);\n            setCtx(ctx, 'strokeStyle', textStroke);\n            ctx.strokeText(token.text, x, y);\n        }\n        if (textFill) {\n            setCtx(ctx, 'fillStyle', textFill);\n            ctx.fillText(token.text, x, y);\n        }\n    }\n\n    function needDrawBackground(style) {\n        return style.textBackgroundColor\n            || (style.textBorderWidth && style.textBorderColor);\n    }\n\n    // style: {textBackgroundColor, textBorderWidth, textBorderColor, textBorderRadius}\n    // shape: {x, y, width, height}\n    function drawBackground(hostEl, ctx, style, x, y, width, height) {\n        var textBackgroundColor = style.textBackgroundColor;\n        var textBorderWidth = style.textBorderWidth;\n        var textBorderColor = style.textBorderColor;\n        var isPlainBg = util.isString(textBackgroundColor);\n\n        setCtx(ctx, 'shadowBlur', style.textBoxShadowBlur || 0);\n        setCtx(ctx, 'shadowColor', style.textBoxShadowColor || 'transparent');\n        setCtx(ctx, 'shadowOffsetX', style.textBoxShadowOffsetX || 0);\n        setCtx(ctx, 'shadowOffsetY', style.textBoxShadowOffsetY || 0);\n\n        if (isPlainBg || (textBorderWidth && textBorderColor)) {\n            ctx.beginPath();\n            var textBorderRadius = style.textBorderRadius;\n            if (!textBorderRadius) {\n                ctx.rect(x, y, width, height);\n            }\n            else {\n                roundRectHelper.buildPath(ctx, {\n                    x: x, y: y, width: width, height: height, r: textBorderRadius\n                });\n            }\n            ctx.closePath();\n        }\n\n        if (isPlainBg) {\n            setCtx(ctx, 'fillStyle', textBackgroundColor);\n            ctx.fill();\n        }\n        else if (util.isObject(textBackgroundColor)) {\n            var image = textBackgroundColor.image;\n\n            image = imageHelper.createOrUpdateImage(\n                image, null, hostEl, onBgImageLoaded, textBackgroundColor\n            );\n            if (image && imageHelper.isImageReady(image)) {\n                ctx.drawImage(image, x, y, width, height);\n            }\n        }\n\n        if (textBorderWidth && textBorderColor) {\n            setCtx(ctx, 'lineWidth', textBorderWidth);\n            setCtx(ctx, 'strokeStyle', textBorderColor);\n            ctx.stroke();\n        }\n    }\n\n    function onBgImageLoaded(image, textBackgroundColor) {\n        // Replace image, so that `contain/text.js#parseRichText`\n        // will get correct result in next tick.\n        textBackgroundColor.image = image;\n    }\n\n    function getBoxPosition(blockHeiht, style, rect) {\n        var baseX = style.x || 0;\n        var baseY = style.y || 0;\n        var textAlign = style.textAlign;\n        var textVerticalAlign = style.textVerticalAlign;\n\n        // Text position represented by coord\n        if (rect) {\n            var textPosition = style.textPosition;\n            if (textPosition instanceof Array) {\n                // Percent\n                baseX = rect.x + parsePercent(textPosition[0], rect.width);\n                baseY = rect.y + parsePercent(textPosition[1], rect.height);\n            }\n            else {\n                var res = textContain.adjustTextPositionOnRect(\n                    textPosition, rect, style.textDistance\n                );\n                baseX = res.x;\n                baseY = res.y;\n                // Default align and baseline when has textPosition\n                textAlign = textAlign || res.textAlign;\n                textVerticalAlign = textVerticalAlign || res.textVerticalAlign;\n            }\n\n            // textOffset is only support in RectText, otherwise\n            // we have to adjust boundingRect for textOffset.\n            var textOffset = style.textOffset;\n            if (textOffset) {\n                baseX += textOffset[0];\n                baseY += textOffset[1];\n            }\n        }\n\n        return {\n            baseX: baseX,\n            baseY: baseY,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    }\n\n    function setCtx(ctx, prop, value) {\n        // FIXME ??? performance try\n        // if (ctx.__currentValues[prop] !== value) {\n            // ctx[prop] = ctx.__currentValues[prop] = value;\n        ctx[prop] = value;\n        // }\n        return ctx[prop];\n    }\n\n    /**\n     * @param {string} [stroke] If specified, do not check style.textStroke.\n     * @param {string} [lineWidth] If specified, do not check style.textStroke.\n     * @param {number} style\n     */\n    var getStroke = helper.getStroke = function (stroke, lineWidth) {\n        return (stroke == null || lineWidth <= 0 || stroke === 'transparent' || stroke === 'none')\n            ? null\n            // TODO pattern and gradient?\n            : (stroke.image || stroke.colorStops)\n            ? '#000'\n            : stroke;\n    };\n\n    var getFill = helper.getFill = function (fill) {\n        return (fill == null || fill === 'none')\n            ? null\n            // TODO pattern and gradient?\n            : (fill.image || fill.colorStops)\n            ? '#000'\n            : fill;\n    };\n\n    function parsePercent(value, maxValue) {\n        if (typeof value === 'string') {\n            if (value.lastIndexOf('%') >= 0) {\n                return parseFloat(value) / 100 * maxValue;\n            }\n            return parseFloat(value);\n        }\n        return value;\n    }\n\n    function getTextXForPadding(x, textAlign, textPadding) {\n        return textAlign === 'right'\n            ? (x - textPadding[1])\n            : textAlign === 'center'\n            ? (x + textPadding[3] / 2 - textPadding[1] / 2)\n            : (x + textPadding[3]);\n    }\n\n    /**\n     * @param {string} text\n     * @param {module:zrender/Style} style\n     * @return {boolean}\n     */\n    helper.needDrawText = function (text, style) {\n        return text != null\n            && (text\n                || style.textBackgroundColor\n                || (style.textBorderWidth && style.textBorderColor)\n                || style.textPadding\n            );\n    };\n\n    module.exports = helper;\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/helper/text.js\n// module id = 1025\n// module chunks = 0 1 2","/**\n * Image element\n * @module zrender/graphic/Image\n */\n\n\n\n    var Displayable = require('./Displayable');\n    var BoundingRect = require('../core/BoundingRect');\n    var zrUtil = require('../core/util');\n    var imageHelper = require('./helper/image');\n\n    /**\n     * @alias zrender/graphic/Image\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function ZImage(opts) {\n        Displayable.call(this, opts);\n    }\n\n    ZImage.prototype = {\n\n        constructor: ZImage,\n\n        type: 'image',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var src = style.image;\n\n            // Must bind each time\n            style.bind(ctx, this, prevEl);\n\n            var image = this._image = imageHelper.createOrUpdateImage(src, this._image, this);\n\n            if (!image || !imageHelper.isImageReady(image)) {\n                return;\n            }\n\n            // 图片已经加载完成\n            // if (image.nodeName.toUpperCase() == 'IMG') {\n            //     if (!image.complete) {\n            //         return;\n            //     }\n            // }\n            // Else is canvas\n\n            var x = style.x || 0;\n            var y = style.y || 0;\n            var width = style.width;\n            var height = style.height;\n            var aspect = image.width / image.height;\n            if (width == null && height != null) {\n                // Keep image/height ratio\n                width = height * aspect;\n            }\n            else if (height == null && width != null) {\n                height = width / aspect;\n            }\n            else if (width == null && height == null) {\n                width = image.width;\n                height = image.height;\n            }\n\n            // 设置transform\n            this.setTransform(ctx);\n\n            if (style.sWidth && style.sHeight) {\n                var sx = style.sx || 0;\n                var sy = style.sy || 0;\n                ctx.drawImage(\n                    image,\n                    sx, sy, style.sWidth, style.sHeight,\n                    x, y, width, height\n                );\n            }\n            else if (style.sx && style.sy) {\n                var sx = style.sx;\n                var sy = style.sy;\n                var sWidth = width - sx;\n                var sHeight = height - sy;\n                ctx.drawImage(\n                    image,\n                    sx, sy, sWidth, sHeight,\n                    x, y, width, height\n                );\n            }\n            else {\n                ctx.drawImage(image, x, y, width, height);\n            }\n\n            this.restoreTransform(ctx);\n\n            // Draw rect text\n            if (style.text != null) {\n                this.drawRectText(ctx, this.getBoundingRect());\n            }\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n            if (! this._rect) {\n                this._rect = new BoundingRect(\n                    style.x || 0, style.y || 0, style.width || 0, style.height || 0\n                );\n            }\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(ZImage, Displayable);\n\n    module.exports = ZImage;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/Image.js\n// module id = 1026\n// module chunks = 0 1 2","\n\n    var Group = require('zrender/lib/container/Group');\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n\n    var Component = function () {\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewComponent');\n    };\n\n    Component.prototype = {\n\n        constructor: Component,\n\n        init: function (ecModel, api) {},\n\n        render: function (componentModel, ecModel, api, payload) {},\n\n        dispose: function () {}\n\n    };\n\n    var componentProto = Component.prototype;\n    componentProto.updateView\n        = componentProto.updateLayout\n        = componentProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            // Do nothing;\n        };\n    // Enable Component.extend.\n    clazzUtil.enableClassExtend(Component);\n\n    // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Component, {registerWhenExtend: true});\n\n    module.exports = Component;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/view/Component.js\n// module id = 1027\n// module chunks = 0 1 2","\n\n    /**\n     * Calculate slider move result.\n     * Usage:\n     * (1) If both handle0 and handle1 are needed to be moved, set minSpan the same as\n     * maxSpan and the same as `Math.abs(handleEnd[1] - handleEnds[0])`.\n     * (2) If handle0 is forbidden to cross handle1, set minSpan as `0`.\n     *\n     * @param {number} delta Move length.\n     * @param {Array.<number>} handleEnds handleEnds[0] can be bigger then handleEnds[1].\n     *              handleEnds will be modified in this method.\n     * @param {Array.<number>} extent handleEnds is restricted by extent.\n     *              extent[0] should less or equals than extent[1].\n     * @param {number|string} handleIndex Can be 'all', means that both move the two handleEnds,\n     *              where the input minSpan and maxSpan will not work.\n     * @param {number} [minSpan] The range of dataZoom can not be smaller than that.\n     *              If not set, handle0 and cross handle1. If set as a non-negative\n     *              number (including `0`), handles will push each other when reaching\n     *              the minSpan.\n     * @param {number} [maxSpan] The range of dataZoom can not be larger than that.\n     * @return {Array.<number>} The input handleEnds.\n     */\n    module.exports = function (delta, handleEnds, extent, handleIndex, minSpan, maxSpan) {\n        // Normalize firstly.\n        handleEnds[0] = restrict(handleEnds[0], extent);\n        handleEnds[1] = restrict(handleEnds[1], extent);\n\n        delta = delta || 0;\n\n        var extentSpan = extent[1] - extent[0];\n\n        // Notice maxSpan and minSpan can be null/undefined.\n        if (minSpan != null) {\n            minSpan = restrict(minSpan, [0, extentSpan]);\n        }\n        if (maxSpan != null) {\n            maxSpan = Math.max(maxSpan, minSpan != null ? minSpan : 0);\n        }\n        if (handleIndex === 'all') {\n            minSpan = maxSpan = Math.abs(handleEnds[1] - handleEnds[0]);\n            handleIndex = 0;\n        }\n\n        var originalDistSign = getSpanSign(handleEnds, handleIndex);\n\n        handleEnds[handleIndex] += delta;\n\n        // Restrict in extent.\n        var extentMinSpan = minSpan || 0;\n        var realExtent = extent.slice();\n        originalDistSign.sign < 0 ? (realExtent[0] += extentMinSpan) : (realExtent[1] -= extentMinSpan);\n        handleEnds[handleIndex] = restrict(handleEnds[handleIndex], realExtent);\n\n        // Expand span.\n        var currDistSign = getSpanSign(handleEnds, handleIndex);\n        if (minSpan != null && (\n            currDistSign.sign !== originalDistSign.sign || currDistSign.span < minSpan\n        )) {\n            // If minSpan exists, 'cross' is forbinden.\n            handleEnds[1 - handleIndex] = handleEnds[handleIndex] + originalDistSign.sign * minSpan;\n        }\n\n        // Shrink span.\n        var currDistSign = getSpanSign(handleEnds, handleIndex);\n        if (maxSpan != null && currDistSign.span > maxSpan) {\n            handleEnds[1 - handleIndex] = handleEnds[handleIndex] + currDistSign.sign * maxSpan;\n        }\n\n        return handleEnds;\n    };\n\n    function getSpanSign(handleEnds, handleIndex) {\n        var dist = handleEnds[handleIndex] - handleEnds[1 - handleIndex];\n        // If `handleEnds[0] === handleEnds[1]`, always believe that handleEnd[0]\n        // is at left of handleEnds[1] for non-cross case.\n        return {span: Math.abs(dist), sign: dist > 0 ? -1 : dist < 0 ? 1 : handleIndex ? -1 : 1};\n    }\n\n    function restrict(value, extend) {\n        return Math.min(extend[1], Math.max(extend[0], value));\n    }\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/sliderMove.js\n// module id = 1028\n// module chunks = 0 1 2","// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n\n    /**\n     * Simple double linked list. Compared with array, it has O(1) remove operation.\n     * @constructor\n     */\n    var LinkedList = function () {\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.head = null;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.tail = null;\n\n        this._len = 0;\n    };\n\n    var linkedListProto = LinkedList.prototype;\n    /**\n     * Insert a new value at the tail\n     * @param  {} val\n     * @return {module:zrender/core/LRU~Entry}\n     */\n    linkedListProto.insert = function (val) {\n        var entry = new Entry(val);\n        this.insertEntry(entry);\n        return entry;\n    };\n\n    /**\n     * Insert an entry at the tail\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.insertEntry = function (entry) {\n        if (!this.head) {\n            this.head = this.tail = entry;\n        }\n        else {\n            this.tail.next = entry;\n            entry.prev = this.tail;\n            entry.next = null;\n            this.tail = entry;\n        }\n        this._len++;\n    };\n\n    /**\n     * Remove entry.\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.remove = function (entry) {\n        var prev = entry.prev;\n        var next = entry.next;\n        if (prev) {\n            prev.next = next;\n        }\n        else {\n            // Is head\n            this.head = next;\n        }\n        if (next) {\n            next.prev = prev;\n        }\n        else {\n            // Is tail\n            this.tail = prev;\n        }\n        entry.next = entry.prev = null;\n        this._len--;\n    };\n\n    /**\n     * @return {number}\n     */\n    linkedListProto.len = function () {\n        return this._len;\n    };\n\n    /**\n     * Clear list\n     */\n    linkedListProto.clear = function () {\n        this.head = this.tail = null;\n        this._len = 0;\n    };\n\n    /**\n     * @constructor\n     * @param {} val\n     */\n    var Entry = function (val) {\n        /**\n         * @type {}\n         */\n        this.value = val;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.next;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.prev;\n    };\n\n    /**\n     * LRU Cache\n     * @constructor\n     * @alias module:zrender/core/LRU\n     */\n    var LRU = function (maxSize) {\n\n        this._list = new LinkedList();\n\n        this._map = {};\n\n        this._maxSize = maxSize || 10;\n\n        this._lastRemovedEntry = null;\n    };\n\n    var LRUProto = LRU.prototype;\n\n    /**\n     * @param  {string} key\n     * @param  {} value\n     * @return {} Removed value\n     */\n    LRUProto.put = function (key, value) {\n        var list = this._list;\n        var map = this._map;\n        var removed = null;\n        if (map[key] == null) {\n            var len = list.len();\n            // Reuse last removed entry\n            var entry = this._lastRemovedEntry;\n\n            if (len >= this._maxSize && len > 0) {\n                // Remove the least recently used\n                var leastUsedEntry = list.head;\n                list.remove(leastUsedEntry);\n                delete map[leastUsedEntry.key];\n\n                removed = leastUsedEntry.value;\n                this._lastRemovedEntry = leastUsedEntry;\n            }\n\n            if (entry) {\n                entry.value = value;\n            }\n            else {\n                entry = new Entry(value);\n            }\n            entry.key = key;\n            list.insertEntry(entry);\n            map[key] = entry;\n        }\n\n        return removed;\n    };\n\n    /**\n     * @param  {string} key\n     * @return {}\n     */\n    LRUProto.get = function (key) {\n        var entry = this._map[key];\n        var list = this._list;\n        if (entry != null) {\n            // Put the latest used entry in the tail\n            if (entry !== list.tail) {\n                list.remove(entry);\n                list.insertEntry(entry);\n            }\n\n            return entry.value;\n        }\n    };\n\n    /**\n     * Clear the cache\n     */\n    LRUProto.clear = function () {\n        this._list.clear();\n        this._map = {};\n    };\n\n    module.exports = LRU;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/LRU.js\n// module id = 1029\n// module chunks = 0 1 2","/**\n * @module zrender/graphic/Style\n */\n\n\n    var STYLE_COMMON_PROPS = [\n        ['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'],\n        ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]\n    ];\n\n    // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n    // var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\n    var Style = function (opts, host) {\n        this.extendFrom(opts, false);\n        this.host = host;\n    };\n\n    function createLinearGradient(ctx, obj, rect) {\n        var x = obj.x == null ? 0 : obj.x;\n        var x2 = obj.x2 == null ? 1 : obj.x2;\n        var y = obj.y == null ? 0 : obj.y;\n        var y2 = obj.y2 == null ? 0 : obj.y2;\n\n        if (!obj.global) {\n            x = x * rect.width + rect.x;\n            x2 = x2 * rect.width + rect.x;\n            y = y * rect.height + rect.y;\n            y2 = y2 * rect.height + rect.y;\n        }\n\n        var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n\n        return canvasGradient;\n    }\n\n    function createRadialGradient(ctx, obj, rect) {\n        var width = rect.width;\n        var height = rect.height;\n        var min = Math.min(width, height);\n\n        var x = obj.x == null ? 0.5 : obj.x;\n        var y = obj.y == null ? 0.5 : obj.y;\n        var r = obj.r == null ? 0.5 : obj.r;\n        if (!obj.global) {\n            x = x * width + rect.x;\n            y = y * height + rect.y;\n            r = r * min;\n        }\n\n        var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n\n        return canvasGradient;\n    }\n\n\n    Style.prototype = {\n\n        constructor: Style,\n\n        /**\n         * @type {module:zrender/graphic/Displayable}\n         */\n        host: null,\n\n        /**\n         * @type {string}\n         */\n        fill: '#000',\n\n        /**\n         * @type {string}\n         */\n        stroke: null,\n\n        /**\n         * @type {number}\n         */\n        opacity: 1,\n\n        /**\n         * @type {Array.<number>}\n         */\n        lineDash: null,\n\n        /**\n         * @type {number}\n         */\n        lineDashOffset: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetY: 0,\n\n        /**\n         * @type {number}\n         */\n        lineWidth: 1,\n\n        /**\n         * If stroke ignore scale\n         * @type {Boolean}\n         */\n        strokeNoScale: false,\n\n        // Bounding rect text configuration\n        // Not affected by element transform\n        /**\n         * @type {string}\n         */\n        text: null,\n\n        /**\n         * If `fontSize` or `fontFamily` exists, `font` will be reset by\n         * `fontSize`, `fontStyle`, `fontWeight`, `fontFamily`.\n         * So do not visit it directly in upper application (like echarts),\n         * but use `contain/text#makeFont` instead.\n         * @type {string}\n         */\n        font: null,\n\n        /**\n         * The same as font. Use font please.\n         * @deprecated\n         * @type {string}\n         */\n        textFont: null,\n\n        /**\n         * It helps merging respectively, rather than parsing an entire font string.\n         * @type {string}\n         */\n        fontStyle: null,\n\n        /**\n         * It helps merging respectively, rather than parsing an entire font string.\n         * @type {string}\n         */\n        fontWeight: null,\n\n        /**\n         * It helps merging respectively, rather than parsing an entire font string.\n         * Should be 12 but not '12px'.\n         * @type {number}\n         */\n        fontSize: null,\n\n        /**\n         * It helps merging respectively, rather than parsing an entire font string.\n         * @type {string}\n         */\n        fontFamily: null,\n\n        /**\n         * Reserved for special functinality, like 'hr'.\n         * @type {string}\n         */\n        textTag: null,\n\n        /**\n         * @type {string}\n         */\n        textFill: '#000',\n\n        /**\n         * @type {string}\n         */\n        textStroke: null,\n\n        /**\n         * @type {number}\n         */\n        textWidth: null,\n\n        /**\n         * Only for textBackground.\n         * @type {number}\n         */\n        textHeight: null,\n\n        /**\n         * textStroke may be set as some color as a default\n         * value in upper applicaion, where the default value\n         * of textStrokeWidth should be 0 to make sure that\n         * user can choose to do not use text stroke.\n         * @type {number}\n         */\n        textStrokeWidth: 0,\n\n        /**\n         * @type {number}\n         */\n        textLineHeight: null,\n\n        /**\n         * 'inside', 'left', 'right', 'top', 'bottom'\n         * [x, y]\n         * Based on x, y of rect.\n         * @type {string|Array.<number>}\n         * @default 'inside'\n         */\n        textPosition: 'inside',\n\n        /**\n         * If not specified, use the boundingRect of a `displayable`.\n         * @type {Object}\n         */\n        textRect: null,\n\n        /**\n         * [x, y]\n         * @type {Array.<number>}\n         */\n        textOffset: null,\n\n        /**\n         * @type {string}\n         */\n        textAlign: null,\n\n        /**\n         * @type {string}\n         */\n        textVerticalAlign: null,\n\n        /**\n         * @type {number}\n         */\n        textDistance: 5,\n\n        /**\n         * @type {string}\n         */\n        textShadowColor: 'transparent',\n\n        /**\n         * @type {number}\n         */\n        textShadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        textShadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        textShadowOffsetY: 0,\n\n        /**\n         * @type {string}\n         */\n        textBoxShadowColor: 'transparent',\n\n        /**\n         * @type {number}\n         */\n        textBoxShadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        textBoxShadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        textBoxShadowOffsetY: 0,\n\n        /**\n         * Whether transform text.\n         * Only useful in Path and Image element\n         * @type {boolean}\n         */\n        transformText: false,\n\n        /**\n         * Text rotate around position of Path or Image\n         * Only useful in Path and Image element and transformText is false.\n         */\n        textRotation: 0,\n\n        /**\n         * Text origin of text rotation, like [10, 40].\n         * Based on x, y of rect.\n         * Useful in label rotation of circular symbol.\n         * By default, this origin is textPosition.\n         * Can be 'center'.\n         * @type {string|Array.<number>}\n         */\n        textOrigin: null,\n\n        /**\n         * @type {string}\n         */\n        textBackgroundColor: null,\n\n        /**\n         * @type {string}\n         */\n        textBorderColor: null,\n\n        /**\n         * @type {number}\n         */\n        textBorderWidth: 0,\n\n        /**\n         * @type {number}\n         */\n        textBorderRadius: 0,\n\n        /**\n         * Can be `2` or `[2, 4]` or `[2, 3, 4, 5]`\n         * @type {number|Array.<number>}\n         */\n        textPadding: null,\n\n        /**\n         * Text styles for rich text.\n         * @type {Object}\n         */\n        rich: null,\n\n        /**\n         * {outerWidth, outerHeight, ellipsis, placeholder}\n         * @type {Object}\n         */\n        truncate: null,\n\n        /**\n         * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n         * @type {string}\n         */\n        blend: null,\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        bind: function (ctx, el, prevEl) {\n            var style = this;\n            var prevStyle = prevEl && prevEl.style;\n            var firstDraw = !prevStyle;\n\n            for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n                var prop = STYLE_COMMON_PROPS[i];\n                var styleName = prop[0];\n\n                if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n                    // FIXME Invalid property value will cause style leak from previous element.\n                    ctx[styleName] = style[styleName] || prop[1];\n                }\n            }\n\n            if ((firstDraw || style.fill !== prevStyle.fill)) {\n                ctx.fillStyle = style.fill;\n            }\n            if ((firstDraw || style.stroke !== prevStyle.stroke)) {\n                ctx.strokeStyle = style.stroke;\n            }\n            if ((firstDraw || style.opacity !== prevStyle.opacity)) {\n                ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n            }\n\n            if ((firstDraw || style.blend !== prevStyle.blend)) {\n                ctx.globalCompositeOperation = style.blend || 'source-over';\n            }\n            if (this.hasStroke()) {\n                var lineWidth = style.lineWidth;\n                ctx.lineWidth = lineWidth / (\n                    (this.strokeNoScale && el && el.getLineScale) ? el.getLineScale() : 1\n                );\n            }\n        },\n\n        hasFill: function () {\n            var fill = this.fill;\n            return fill != null && fill !== 'none';\n        },\n\n        hasStroke: function () {\n            var stroke = this.stroke;\n            return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n        },\n\n        /**\n         * Extend from other style\n         * @param {zrender/graphic/Style} otherStyle\n         * @param {boolean} overwrite true: overwrirte any way.\n         *                            false: overwrite only when !target.hasOwnProperty\n         *                            others: overwrite when property is not null/undefined.\n         */\n        extendFrom: function (otherStyle, overwrite) {\n            if (otherStyle) {\n                for (var name in otherStyle) {\n                    if (otherStyle.hasOwnProperty(name)\n                        && (overwrite === true\n                            || (\n                                overwrite === false\n                                    ? !this.hasOwnProperty(name)\n                                    : otherStyle[name] != null\n                            )\n                        )\n                    ) {\n                        this[name] = otherStyle[name];\n                    }\n                }\n            }\n        },\n\n        /**\n         * Batch setting style with a given object\n         * @param {Object|string} obj\n         * @param {*} [obj]\n         */\n        set: function (obj, value) {\n            if (typeof obj === 'string') {\n                this[obj] = value;\n            }\n            else {\n                this.extendFrom(obj, true);\n            }\n        },\n\n        /**\n         * Clone\n         * @return {zrender/graphic/Style} [description]\n         */\n        clone: function () {\n            var newStyle = new this.constructor();\n            newStyle.extendFrom(this, true);\n            return newStyle;\n        },\n\n        getGradient: function (ctx, obj, rect) {\n            var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n            var canvasGradient = method(ctx, obj, rect);\n            var colorStops = obj.colorStops;\n            for (var i = 0; i < colorStops.length; i++) {\n                canvasGradient.addColorStop(\n                    colorStops[i].offset, colorStops[i].color\n                );\n            }\n            return canvasGradient;\n        }\n\n    };\n\n    var styleProto = Style.prototype;\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n        var prop = STYLE_COMMON_PROPS[i];\n        if (!(prop[0] in styleProto)) {\n            styleProto[prop[0]] = prop[1];\n        }\n    }\n\n    // Provide for others\n    Style.getGradient = styleProto.getGradient;\n\n    module.exports = Style;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/Style.js\n// module id = 1030\n// module chunks = 0 1 2","'use strict';\n/**\n * @module zrender/Element\n */\n\n\n    var guid = require('./core/guid');\n    var Eventful = require('./mixin/Eventful');\n    var Transformable = require('./mixin/Transformable');\n    var Animatable = require('./mixin/Animatable');\n    var zrUtil = require('./core/util');\n\n    /**\n     * @alias module:zrender/Element\n     * @constructor\n     * @extends {module:zrender/mixin/Animatable}\n     * @extends {module:zrender/mixin/Transformable}\n     * @extends {module:zrender/mixin/Eventful}\n     */\n    var Element = function (opts) {\n\n        Transformable.call(this, opts);\n        Eventful.call(this, opts);\n        Animatable.call(this, opts);\n\n        /**\n         * 画布元素ID\n         * @type {string}\n         */\n        this.id = opts.id || guid();\n    };\n\n    Element.prototype = {\n\n        /**\n         * 元素类型\n         * Element type\n         * @type {string}\n         */\n        type: 'element',\n\n        /**\n         * 元素名字\n         * Element name\n         * @type {string}\n         */\n        name: '',\n\n        /**\n         * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n         * ZRender instance will be assigned when element is associated with zrender\n         * @name module:/zrender/Element#__zr\n         * @type {module:zrender/ZRender}\n         */\n        __zr: null,\n\n        /**\n         * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n         * If ignore drawing and events of the element object\n         * @name module:/zrender/Element#ignore\n         * @type {boolean}\n         * @default false\n         */\n        ignore: false,\n\n        /**\n         * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n         * 该路径会继承被裁减对象的变换\n         * @type {module:zrender/graphic/Path}\n         * @see http://www.w3.org/TR/2dcontext/#clipping-region\n         * @readOnly\n         */\n        clipPath: null,\n\n        /**\n         * Drift element\n         * @param  {number} dx dx on the global space\n         * @param  {number} dy dy on the global space\n         */\n        drift: function (dx, dy) {\n            switch (this.draggable) {\n                case 'horizontal':\n                    dy = 0;\n                    break;\n                case 'vertical':\n                    dx = 0;\n                    break;\n            }\n\n            var m = this.transform;\n            if (!m) {\n                m = this.transform = [1, 0, 0, 1, 0, 0];\n            }\n            m[4] += dx;\n            m[5] += dy;\n\n            this.decomposeTransform();\n            this.dirty(false);\n        },\n\n        /**\n         * Hook before update\n         */\n        beforeUpdate: function () {},\n        /**\n         * Hook after update\n         */\n        afterUpdate: function () {},\n        /**\n         * Update each frame\n         */\n        update: function () {\n            this.updateTransform();\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {},\n\n        /**\n         * @protected\n         */\n        attrKV: function (key, value) {\n            if (key === 'position' || key === 'scale' || key === 'origin') {\n                // Copy the array\n                if (value) {\n                    var target = this[key];\n                    if (!target) {\n                        target = this[key] = [];\n                    }\n                    target[0] = value[0];\n                    target[1] = value[1];\n                }\n            }\n            else {\n                this[key] = value;\n            }\n        },\n\n        /**\n         * Hide the element\n         */\n        hide: function () {\n            this.ignore = true;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * Show the element\n         */\n        show: function () {\n            this.ignore = false;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * @param {string|Object} key\n         * @param {*} value\n         */\n        attr: function (key, value) {\n            if (typeof key === 'string') {\n                this.attrKV(key, value);\n            }\n            else if (zrUtil.isObject(key)) {\n                for (var name in key) {\n                    if (key.hasOwnProperty(name)) {\n                        this.attrKV(name, key[name]);\n                    }\n                }\n            }\n\n            this.dirty(false);\n\n            return this;\n        },\n\n        /**\n         * @param {module:zrender/graphic/Path} clipPath\n         */\n        setClipPath: function (clipPath) {\n            var zr = this.__zr;\n            if (zr) {\n                clipPath.addSelfToZr(zr);\n            }\n\n            // Remove previous clip path\n            if (this.clipPath && this.clipPath !== clipPath) {\n                this.removeClipPath();\n            }\n\n            this.clipPath = clipPath;\n            clipPath.__zr = zr;\n            clipPath.__clipTarget = this;\n\n            this.dirty(false);\n        },\n\n        /**\n         */\n        removeClipPath: function () {\n            var clipPath = this.clipPath;\n            if (clipPath) {\n                if (clipPath.__zr) {\n                    clipPath.removeSelfFromZr(clipPath.__zr);\n                }\n\n                clipPath.__zr = null;\n                clipPath.__clipTarget = null;\n                this.clipPath = null;\n\n                this.dirty(false);\n            }\n        },\n\n        /**\n         * Add self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        addSelfToZr: function (zr) {\n            this.__zr = zr;\n            // 添加动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.addAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.addSelfToZr(zr);\n            }\n        },\n\n        /**\n         * Remove self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        removeSelfFromZr: function (zr) {\n            this.__zr = null;\n            // 移除动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.removeAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.removeSelfFromZr(zr);\n            }\n        }\n    };\n\n    zrUtil.mixin(Element, Animatable);\n    zrUtil.mixin(Element, Transformable);\n    zrUtil.mixin(Element, Eventful);\n\n    module.exports = Element;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/Element.js\n// module id = 1031\n// module chunks = 0 1 2","/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\n\n\n    var idStart = 0x0907;\n\n    module.exports = function () {\n        return idStart++;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/guid.js\n// module id = 1032\n// module chunks = 0 1 2","/**\n * @module echarts/animation/Animator\n */\n\n\n    var Clip = require('./Clip');\n    var color = require('../tool/color');\n    var util = require('../core/util');\n    var isArrayLike = util.isArrayLike;\n\n    var arraySlice = Array.prototype.slice;\n\n    function defaultGetter(target, key) {\n        return target[key];\n    }\n\n    function defaultSetter(target, key, value) {\n        target[key] = value;\n    }\n\n    /**\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} percent\n     * @return {number}\n     */\n    function interpolateNumber(p0, p1, percent) {\n        return (p1 - p0) * percent + p0;\n    }\n\n    /**\n     * @param  {string} p0\n     * @param  {string} p1\n     * @param  {number} percent\n     * @return {string}\n     */\n    function interpolateString(p0, p1, percent) {\n        return percent > 0.5 ? p1 : p0;\n    }\n\n    /**\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {number} percent\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function interpolateArray(p0, p1, percent, out, arrDim) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = interpolateNumber(p0[i], p1[i], percent);\n            }\n        }\n        else {\n            var len2 = len && p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = interpolateNumber(\n                        p0[i][j], p1[i][j], percent\n                    );\n                }\n            }\n        }\n    }\n\n    // arr0 is source array, arr1 is target array.\n    // Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n    function fillArr(arr0, arr1, arrDim) {\n        var arr0Len = arr0.length;\n        var arr1Len = arr1.length;\n        if (arr0Len !== arr1Len) {\n            // FIXME Not work for TypedArray\n            var isPreviousLarger = arr0Len > arr1Len;\n            if (isPreviousLarger) {\n                // Cut the previous\n                arr0.length = arr1Len;\n            }\n            else {\n                // Fill the previous\n                for (var i = arr0Len; i < arr1Len; i++) {\n                    arr0.push(\n                        arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i])\n                    );\n                }\n            }\n        }\n        // Handling NaN value\n        var len2 = arr0[0] && arr0[0].length;\n        for (var i = 0; i < arr0.length; i++) {\n            if (arrDim === 1) {\n                if (isNaN(arr0[i])) {\n                    arr0[i] = arr1[i];\n                }\n            }\n            else {\n                for (var j = 0; j < len2; j++) {\n                    if (isNaN(arr0[i][j])) {\n                        arr0[i][j] = arr1[i][j];\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @param  {Array} arr0\n     * @param  {Array} arr1\n     * @param  {number} arrDim\n     * @return {boolean}\n     */\n    function isArraySame(arr0, arr1, arrDim) {\n        if (arr0 === arr1) {\n            return true;\n        }\n        var len = arr0.length;\n        if (len !== arr1.length) {\n            return false;\n        }\n        if (arrDim === 1) {\n            for (var i = 0; i < len; i++) {\n                if (arr0[i] !== arr1[i]) {\n                    return false;\n                }\n            }\n        }\n        else {\n            var len2 = arr0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    if (arr0[i][j] !== arr1[i][j]) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Catmull Rom interpolate array\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {Array} p2\n     * @param  {Array} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function catmullRomInterpolateArray(\n        p0, p1, p2, p3, t, t2, t3, out, arrDim\n    ) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = catmullRomInterpolate(\n                    p0[i], p1[i], p2[i], p3[i], t, t2, t3\n                );\n            }\n        }\n        else {\n            var len2 = p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = catmullRomInterpolate(\n                        p0[i][j], p1[i][j], p2[i][j], p3[i][j],\n                        t, t2, t3\n                    );\n                }\n            }\n        }\n    }\n\n    /**\n     * Catmull Rom interpolate number\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @return {number}\n     */\n    function catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    function cloneValue(value) {\n        if (isArrayLike(value)) {\n            var len = value.length;\n            if (isArrayLike(value[0])) {\n                var ret = [];\n                for (var i = 0; i < len; i++) {\n                    ret.push(arraySlice.call(value[i]));\n                }\n                return ret;\n            }\n\n            return arraySlice.call(value);\n        }\n\n        return value;\n    }\n\n    function rgba2String(rgba) {\n        rgba[0] = Math.floor(rgba[0]);\n        rgba[1] = Math.floor(rgba[1]);\n        rgba[2] = Math.floor(rgba[2]);\n\n        return 'rgba(' + rgba.join(',') + ')';\n    }\n\n    function getArrayDim(keyframes) {\n        var lastValue = keyframes[keyframes.length - 1].value;\n        return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\n    }\n\n    function createTrackClip(animator, easing, oneTrackDone, keyframes, propName, forceAnimate) {\n        var getter = animator._getter;\n        var setter = animator._setter;\n        var useSpline = easing === 'spline';\n\n        var trackLen = keyframes.length;\n        if (!trackLen) {\n            return;\n        }\n        // Guess data type\n        var firstVal = keyframes[0].value;\n        var isValueArray = isArrayLike(firstVal);\n        var isValueColor = false;\n        var isValueString = false;\n\n        // For vertices morphing\n        var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\n\n        var trackMaxTime;\n        // Sort keyframe as ascending\n        keyframes.sort(function(a, b) {\n            return a.time - b.time;\n        });\n\n        trackMaxTime = keyframes[trackLen - 1].time;\n        // Percents of each keyframe\n        var kfPercents = [];\n        // Value of each keyframe\n        var kfValues = [];\n        var prevValue = keyframes[0].value;\n        var isAllValueEqual = true;\n        for (var i = 0; i < trackLen; i++) {\n            kfPercents.push(keyframes[i].time / trackMaxTime);\n            // Assume value is a color when it is a string\n            var value = keyframes[i].value;\n\n            // Check if value is equal, deep check if value is array\n            if (!((isValueArray && isArraySame(value, prevValue, arrDim))\n                || (!isValueArray && value === prevValue))) {\n                isAllValueEqual = false;\n            }\n            prevValue = value;\n\n            // Try converting a string to a color array\n            if (typeof value == 'string') {\n                var colorArray = color.parse(value);\n                if (colorArray) {\n                    value = colorArray;\n                    isValueColor = true;\n                }\n                else {\n                    isValueString = true;\n                }\n            }\n            kfValues.push(value);\n        }\n        if (!forceAnimate && isAllValueEqual) {\n            return;\n        }\n\n        var lastValue = kfValues[trackLen - 1];\n        // Polyfill array and NaN value\n        for (var i = 0; i < trackLen - 1; i++) {\n            if (isValueArray) {\n                fillArr(kfValues[i], lastValue, arrDim);\n            }\n            else {\n                if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n                    kfValues[i] = lastValue;\n                }\n            }\n        }\n        isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim);\n\n        // Cache the key of last frame to speed up when\n        // animation playback is sequency\n        var lastFrame = 0;\n        var lastFramePercent = 0;\n        var start;\n        var w;\n        var p0;\n        var p1;\n        var p2;\n        var p3;\n\n        if (isValueColor) {\n            var rgba = [0, 0, 0, 0];\n        }\n\n        var onframe = function (target, percent) {\n            // Find the range keyframes\n            // kf1-----kf2---------current--------kf3\n            // find kf2 and kf3 and do interpolation\n            var frame;\n            // In the easing function like elasticOut, percent may less than 0\n            if (percent < 0) {\n                frame = 0;\n            }\n            else if (percent < lastFramePercent) {\n                // Start from next key\n                // PENDING start from lastFrame ?\n                start = Math.min(lastFrame + 1, trackLen - 1);\n                for (frame = start; frame >= 0; frame--) {\n                    if (kfPercents[frame] <= percent) {\n                        break;\n                    }\n                }\n                // PENDING really need to do this ?\n                frame = Math.min(frame, trackLen - 2);\n            }\n            else {\n                for (frame = lastFrame; frame < trackLen; frame++) {\n                    if (kfPercents[frame] > percent) {\n                        break;\n                    }\n                }\n                frame = Math.min(frame - 1, trackLen - 2);\n            }\n            lastFrame = frame;\n            lastFramePercent = percent;\n\n            var range = (kfPercents[frame + 1] - kfPercents[frame]);\n            if (range === 0) {\n                return;\n            }\n            else {\n                w = (percent - kfPercents[frame]) / range;\n            }\n            if (useSpline) {\n                p1 = kfValues[frame];\n                p0 = kfValues[frame === 0 ? frame : frame - 1];\n                p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n                p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n                if (isValueArray) {\n                    catmullRomInterpolateArray(\n                        p0, p1, p2, p3, w, w * w, w * w * w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        value = catmullRomInterpolateArray(\n                            p0, p1, p2, p3, w, w * w, w * w * w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(p1, p2, w);\n                    }\n                    else {\n                        value = catmullRomInterpolate(\n                            p0, p1, p2, p3, w, w * w, w * w * w\n                        );\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n            else {\n                if (isValueArray) {\n                    interpolateArray(\n                        kfValues[frame], kfValues[frame + 1], w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        interpolateArray(\n                            kfValues[frame], kfValues[frame + 1], w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    else {\n                        value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n        };\n\n        var clip = new Clip({\n            target: animator._target,\n            life: trackMaxTime,\n            loop: animator._loop,\n            delay: animator._delay,\n            onframe: onframe,\n            ondestroy: oneTrackDone\n        });\n\n        if (easing && easing !== 'spline') {\n            clip.easing = easing;\n        }\n\n        return clip;\n    }\n\n    /**\n     * @alias module:zrender/animation/Animator\n     * @constructor\n     * @param {Object} target\n     * @param {boolean} loop\n     * @param {Function} getter\n     * @param {Function} setter\n     */\n    var Animator = function(target, loop, getter, setter) {\n        this._tracks = {};\n        this._target = target;\n\n        this._loop = loop || false;\n\n        this._getter = getter || defaultGetter;\n        this._setter = setter || defaultSetter;\n\n        this._clipCount = 0;\n\n        this._delay = 0;\n\n        this._doneList = [];\n\n        this._onframeList = [];\n\n        this._clipList = [];\n    };\n\n    Animator.prototype = {\n        /**\n         * 设置动画关键帧\n         * @param  {number} time 关键帧时间，单位是ms\n         * @param  {Object} props 关键帧的属性值，key-value表示\n         * @return {module:zrender/animation/Animator}\n         */\n        when: function(time /* ms */, props) {\n            var tracks = this._tracks;\n            for (var propName in props) {\n                if (!props.hasOwnProperty(propName)) {\n                    continue;\n                }\n\n                if (!tracks[propName]) {\n                    tracks[propName] = [];\n                    // Invalid value\n                    var value = this._getter(this._target, propName);\n                    if (value == null) {\n                        // zrLog('Invalid property ' + propName);\n                        continue;\n                    }\n                    // If time is 0\n                    //  Then props is given initialize value\n                    // Else\n                    //  Initialize value from current prop value\n                    if (time !== 0) {\n                        tracks[propName].push({\n                            time: 0,\n                            value: cloneValue(value)\n                        });\n                    }\n                }\n                tracks[propName].push({\n                    time: time,\n                    value: props[propName]\n                });\n            }\n            return this;\n        },\n        /**\n         * 添加动画每一帧的回调函数\n         * @param  {Function} callback\n         * @return {module:zrender/animation/Animator}\n         */\n        during: function (callback) {\n            this._onframeList.push(callback);\n            return this;\n        },\n\n        pause: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].pause();\n            }\n            this._paused = true;\n        },\n\n        resume: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].resume();\n            }\n            this._paused = false;\n        },\n\n        isPaused: function () {\n            return !!this._paused;\n        },\n\n        _doneCallback: function () {\n            // Clear all tracks\n            this._tracks = {};\n            // Clear all clips\n            this._clipList.length = 0;\n\n            var doneList = this._doneList;\n            var len = doneList.length;\n            for (var i = 0; i < len; i++) {\n                doneList[i].call(this);\n            }\n        },\n        /**\n         * 开始执行动画\n         * @param  {string|Function} [easing]\n         *         动画缓动函数，详见{@link module:zrender/animation/easing}\n         * @param  {boolean} forceAnimate\n         * @return {module:zrender/animation/Animator}\n         */\n        start: function (easing, forceAnimate) {\n\n            var self = this;\n            var clipCount = 0;\n\n            var oneTrackDone = function() {\n                clipCount--;\n                if (!clipCount) {\n                    self._doneCallback();\n                }\n            };\n\n            var lastClip;\n            for (var propName in this._tracks) {\n                if (!this._tracks.hasOwnProperty(propName)) {\n                    continue;\n                }\n                var clip = createTrackClip(\n                    this, easing, oneTrackDone,\n                    this._tracks[propName], propName, forceAnimate\n                );\n                if (clip) {\n                    this._clipList.push(clip);\n                    clipCount++;\n\n                    // If start after added to animation\n                    if (this.animation) {\n                        this.animation.addClip(clip);\n                    }\n\n                    lastClip = clip;\n                }\n            }\n\n            // Add during callback on the last clip\n            if (lastClip) {\n                var oldOnFrame = lastClip.onframe;\n                lastClip.onframe = function (target, percent) {\n                    oldOnFrame(target, percent);\n\n                    for (var i = 0; i < self._onframeList.length; i++) {\n                        self._onframeList[i](target, percent);\n                    }\n                };\n            }\n\n            // This optimization will help the case that in the upper application\n            // the view may be refreshed frequently, where animation will be\n            // called repeatly but nothing changed.\n            if (!clipCount) {\n                this._doneCallback();\n            }\n            return this;\n        },\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stop: function (forwardToLast) {\n            var clipList = this._clipList;\n            var animation = this.animation;\n            for (var i = 0; i < clipList.length; i++) {\n                var clip = clipList[i];\n                if (forwardToLast) {\n                    // Move to last frame before stop\n                    clip.onframe(this._target, 1);\n                }\n                animation && animation.removeClip(clip);\n            }\n            clipList.length = 0;\n        },\n        /**\n         * 设置动画延迟开始的时间\n         * @param  {number} time 单位ms\n         * @return {module:zrender/animation/Animator}\n         */\n        delay: function (time) {\n            this._delay = time;\n            return this;\n        },\n        /**\n         * 添加动画结束的回调\n         * @param  {Function} cb\n         * @return {module:zrender/animation/Animator}\n         */\n        done: function(cb) {\n            if (cb) {\n                this._doneList.push(cb);\n            }\n            return this;\n        },\n\n        /**\n         * @return {Array.<module:zrender/animation/Clip>}\n         */\n        getClips: function () {\n            return this._clipList;\n        }\n    };\n\n    module.exports = Animator;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/animation/Animator.js\n// module id = 1033\n// module chunks = 0 1 2","\n\n    module.exports = {\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            var r = shape.r;\n            var r1;\n            var r2;\n            var r3;\n            var r4;\n\n            // Convert width and height to positive for better borderRadius\n            if (width < 0) {\n                x = x + width;\n                width = -width;\n            }\n            if (height < 0) {\n                y = y + height;\n                height = -height;\n            }\n\n            if (typeof r === 'number') {\n                r1 = r2 = r3 = r4 = r;\n            }\n            else if (r instanceof Array) {\n                if (r.length === 1) {\n                    r1 = r2 = r3 = r4 = r[0];\n                }\n                else if (r.length === 2) {\n                    r1 = r3 = r[0];\n                    r2 = r4 = r[1];\n                }\n                else if (r.length === 3) {\n                    r1 = r[0];\n                    r2 = r4 = r[1];\n                    r3 = r[2];\n                }\n                else {\n                    r1 = r[0];\n                    r2 = r[1];\n                    r3 = r[2];\n                    r4 = r[3];\n                }\n            }\n            else {\n                r1 = r2 = r3 = r4 = 0;\n            }\n\n            var total;\n            if (r1 + r2 > width) {\n                total = r1 + r2;\n                r1 *= width / total;\n                r2 *= width / total;\n            }\n            if (r3 + r4 > width) {\n                total = r3 + r4;\n                r3 *= width / total;\n                r4 *= width / total;\n            }\n            if (r2 + r3 > height) {\n                total = r2 + r3;\n                r2 *= height / total;\n                r3 *= height / total;\n            }\n            if (r1 + r4 > height) {\n                total = r1 + r4;\n                r1 *= height / total;\n                r4 *= height / total;\n            }\n            ctx.moveTo(x + r1, y);\n            ctx.lineTo(x + width - r2, y);\n            r2 !== 0 && ctx.quadraticCurveTo(\n                x + width, y, x + width, y + r2\n            );\n            ctx.lineTo(x + width, y + height - r3);\n            r3 !== 0 && ctx.quadraticCurveTo(\n                x + width, y + height, x + width - r3, y + height\n            );\n            ctx.lineTo(x + r4, y + height);\n            r4 !== 0 && ctx.quadraticCurveTo(\n                x, y + height, x, y + height - r4\n            );\n            ctx.lineTo(x, y + r1);\n            r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/helper/roundRect.js\n// module id = 1034\n// module chunks = 0 1 2","\n\n    var PI2 = Math.PI * 2;\n    module.exports = {\n        normalizeRadian: function(angle) {\n            angle %= PI2;\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return angle;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/contain/util.js\n// module id = 1035\n// module chunks = 0 1 2","\n\n    var Pattern = function (image, repeat) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {image: ...}`, where this constructor will not be called.\n\n        this.image = image;\n        this.repeat = repeat;\n\n        // Can be cloned\n        this.type = 'pattern';\n    };\n\n    Pattern.prototype.getCanvasPattern = function (ctx) {\n        return ctx.createPattern(this.image, this.repeat || 'repeat');\n    };\n\n    module.exports = Pattern;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/Pattern.js\n// module id = 1036\n// module chunks = 0 1 2","\n\n    var smoothSpline = require('./smoothSpline');\n    var smoothBezier = require('./smoothBezier');\n\n    module.exports = {\n        buildPath: function (ctx, shape, closePath) {\n            var points = shape.points;\n            var smooth = shape.smooth;\n            if (points && points.length >= 2) {\n                if (smooth && smooth !== 'spline') {\n                    var controlPoints = smoothBezier(\n                        points, smooth, closePath, shape.smoothConstraint\n                    );\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    var len = points.length;\n                    for (var i = 0; i < (closePath ? len : len - 1); i++) {\n                        var cp1 = controlPoints[i * 2];\n                        var cp2 = controlPoints[i * 2 + 1];\n                        var p = points[(i + 1) % len];\n                        ctx.bezierCurveTo(\n                            cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]\n                        );\n                    }\n                }\n                else {\n                    if (smooth === 'spline') {\n                        points = smoothSpline(points, closePath);\n                    }\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    for (var i = 1, l = points.length; i < l; i++) {\n                        ctx.lineTo(points[i][0], points[i][1]);\n                    }\n                }\n\n                closePath && ctx.closePath();\n            }\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/helper/poly.js\n// module id = 1037\n// module chunks = 0 1 2","\n\n    var classUtil = require('../../util/clazz');\n    var set = classUtil.set;\n    var get = classUtil.get;\n\n    module.exports = {\n        clearColorPalette: function () {\n            set(this, 'colorIdx', 0);\n            set(this, 'colorNameMap', {});\n        },\n\n        getColorFromPalette: function (name, scope) {\n            scope = scope || this;\n            var colorIdx = get(scope, 'colorIdx') || 0;\n            var colorNameMap = get(scope, 'colorNameMap') || set(scope, 'colorNameMap', {});\n            // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n            if (colorNameMap.hasOwnProperty(name)) {\n                return colorNameMap[name];\n            }\n            var colorPalette = this.get('color', true) || [];\n            if (!colorPalette.length) {\n                return;\n            }\n\n            var color = colorPalette[colorIdx];\n            if (name) {\n                colorNameMap[name] = color;\n            }\n            set(scope, 'colorIdx', (colorIdx + 1) % colorPalette.length);\n\n            return color;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/mixin/colorPalette.js\n// module id = 1038\n// module chunks = 0 1 2","\n\n    module.exports = (typeof window !== 'undefined' &&\n                ((window.requestAnimationFrame && window.requestAnimationFrame.bind(window))\n                // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\n                || (window.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window))\n                || window.mozRequestAnimationFrame\n                || window.webkitRequestAnimationFrame)\n            )\n            || function (func) {\n                setTimeout(func, 16);\n            };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/animation/requestAnimationFrame.js\n// module id = 1039\n// module chunks = 0 1 2","/**\n * For testable.\n */\n\n\n    var numberUtil = require('../util/number');\n\n    var roundNumber = numberUtil.round;\n\n    var helper = {};\n\n    /**\n     * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n     *                                Should be extent[0] < extent[1].\n     * @param {number} splitNumber splitNumber should be >= 1.\n     * @param {number} [minInterval]\n     * @param {number} [maxInterval]\n     * @return {Object} {interval, intervalPrecision, niceTickExtent}\n     */\n    helper.intervalScaleNiceTicks = function (extent, splitNumber, minInterval, maxInterval) {\n        var result = {};\n        var span = extent[1] - extent[0];\n\n        var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n        if (minInterval != null && interval < minInterval) {\n            interval = result.interval = minInterval;\n        }\n        if (maxInterval != null && interval > maxInterval) {\n            interval = result.interval = maxInterval;\n        }\n        // Tow more digital for tick.\n        var precision = result.intervalPrecision = helper.getIntervalPrecision(interval);\n        // Niced extent inside original extent\n        var niceTickExtent = result.niceTickExtent = [\n            roundNumber(Math.ceil(extent[0] / interval) * interval, precision),\n            roundNumber(Math.floor(extent[1] / interval) * interval, precision)\n        ];\n\n        helper.fixExtent(niceTickExtent, extent);\n\n        return result;\n    };\n\n    /**\n     * @param {number} interval\n     * @return {number} interval precision\n     */\n    helper.getIntervalPrecision = function (interval) {\n        // Tow more digital for tick.\n        return numberUtil.getPrecisionSafe(interval) + 2;\n    };\n\n    function clamp(niceTickExtent, idx, extent) {\n        niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n    }\n\n    // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n    helper.fixExtent = function (niceTickExtent, extent) {\n        !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n        !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n        clamp(niceTickExtent, 0, extent);\n        clamp(niceTickExtent, 1, extent);\n        if (niceTickExtent[0] > niceTickExtent[1]) {\n            niceTickExtent[0] = niceTickExtent[1];\n        }\n    };\n\n    helper.intervalScaleGetTicks = function (interval, extent, niceTickExtent, intervalPrecision) {\n        var ticks = [];\n\n        // If interval is 0, return [];\n        if (!interval) {\n            return ticks;\n        }\n\n        // Consider this case: using dataZoom toolbox, zoom and zoom.\n        var safeLimit = 10000;\n\n        if (extent[0] < niceTickExtent[0]) {\n            ticks.push(extent[0]);\n        }\n        var tick = niceTickExtent[0];\n\n        while (tick <= niceTickExtent[1]) {\n            ticks.push(tick);\n            // Avoid rounding error\n            tick = roundNumber(tick + interval, intervalPrecision);\n            if (tick === ticks[ticks.length - 1]) {\n                // Consider out of safe float point, e.g.,\n                // -3711126.9907707 + 2e-10 === -3711126.9907707\n                break;\n            }\n            if (ticks.length > safeLimit) {\n                return [];\n            }\n        }\n        // Consider this case: the last item of ticks is smaller\n        // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n        if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n            ticks.push(extent[1]);\n        }\n\n        return ticks;\n    };\n\n    module.exports = helper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/scale/helper.js\n// module id = 1040\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n\n    /**\n     * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n     * @param {module:echarts/model/Global} ecModel\n     * @return {Object} {point: [x, y], el: ...} point Will not be null.\n     */\n    module.exports = function (finder, ecModel) {\n        var point = [];\n        var seriesIndex = finder.seriesIndex;\n        var seriesModel;\n        if (seriesIndex == null || !(\n            seriesModel = ecModel.getSeriesByIndex(seriesIndex)\n        )) {\n            return {point: []};\n        }\n\n        var data = seriesModel.getData();\n        var dataIndex = modelUtil.queryDataIndex(data, finder);\n        if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n            return {point: []};\n        }\n\n        var el = data.getItemGraphicEl(dataIndex);\n        var coordSys = seriesModel.coordinateSystem;\n\n        if (seriesModel.getTooltipPosition) {\n            point = seriesModel.getTooltipPosition(dataIndex) || [];\n        }\n        else if (coordSys && coordSys.dataToPoint) {\n            point = coordSys.dataToPoint(\n                data.getValues(\n                    zrUtil.map(coordSys.dimensions, function (dim) {\n                        return seriesModel.coordDimToDataDim(dim)[0];\n                    }), dataIndex, true\n                )\n            ) || [];\n        }\n        else if (el) {\n            // Use graphic bounding rect\n            var rect = el.getBoundingRect().clone();\n            rect.applyTransform(el.transform);\n            point = [\n                rect.x + rect.width / 2,\n                rect.y + rect.height / 2\n            ];\n        }\n\n        return {point: point, el: el};\n    };\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/findPointFromSeries.js\n// module id = 1041\n// module chunks = 0 1 2","\n\n    var env = require('zrender/lib/core/env');\n    var zrUtil = require('zrender/lib/core/util');\n    var get = require('../../util/model').makeGetter();\n\n    var each = zrUtil.each;\n\n    var globalListener = {};\n\n    /**\n     * @param {string} key\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Function} handler\n     *      param: {string} currTrigger\n     *      param: {Array.<number>} point\n     */\n    globalListener.register = function (key, api, handler) {\n        if (env.node) {\n            return;\n        }\n\n        var zr = api.getZr();\n        get(zr).records || (get(zr).records = {});\n\n        initGlobalListeners(zr, api);\n\n        var record = get(zr).records[key] || (get(zr).records[key] = {});\n        record.handler = handler;\n    };\n\n    function initGlobalListeners(zr, api) {\n        if (get(zr).initialized) {\n            return;\n        }\n\n        get(zr).initialized = true;\n\n        useHandler('click', zrUtil.curry(doEnter, 'click'));\n        useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove'));\n        // useHandler('mouseout', onLeave);\n        useHandler('globalout', onLeave);\n\n        function useHandler(eventType, cb) {\n            zr.on(eventType, function (e) {\n                var dis = makeDispatchAction(api);\n\n                each(get(zr).records, function (record) {\n                    record && cb(record, e, dis.dispatchAction);\n                });\n\n                dispatchTooltipFinally(dis.pendings, api);\n            });\n        }\n    }\n\n    function dispatchTooltipFinally(pendings, api) {\n        var showLen = pendings.showTip.length;\n        var hideLen = pendings.hideTip.length;\n\n        var actuallyPayload;\n        if (showLen) {\n            actuallyPayload = pendings.showTip[showLen - 1];\n        }\n        else if (hideLen) {\n            actuallyPayload = pendings.hideTip[hideLen - 1];\n        }\n        if (actuallyPayload) {\n            actuallyPayload.dispatchAction = null;\n            api.dispatchAction(actuallyPayload);\n        }\n    }\n\n    function onLeave(record, e, dispatchAction) {\n        record.handler('leave', null, dispatchAction);\n    }\n\n    function doEnter(currTrigger, record, e, dispatchAction) {\n        record.handler(currTrigger, e, dispatchAction);\n    }\n\n    function makeDispatchAction(api) {\n        var pendings = {\n            showTip: [],\n            hideTip: []\n        };\n        // FIXME\n        // better approach?\n        // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n        // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n        // So we have to add \"final stage\" to merge those dispatched actions.\n        var dispatchAction = function (payload) {\n            var pendingList = pendings[payload.type];\n            if (pendingList) {\n                pendingList.push(payload);\n            }\n            else {\n                payload.dispatchAction = dispatchAction;\n                api.dispatchAction(payload);\n            }\n        };\n\n        return {\n            dispatchAction: dispatchAction,\n            pendings: pendings\n        };\n    }\n\n    /**\n     * @param {string} key\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    globalListener.unregister = function (key, api) {\n        if (env.node) {\n            return;\n        }\n        var zr = api.getZr();\n        var record = (get(zr).records || {})[key];\n        if (record) {\n            get(zr).records[key] = null;\n        }\n    };\n\n    module.exports = globalListener;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/globalListener.js\n// module id = 1042\n// module chunks = 0 1 2","\n    // List layout\n    var layout = require('../../util/layout');\n    var formatUtil = require('../../util/format');\n    var graphic = require('../../util/graphic');\n\n    module.exports = {\n        /**\n         * Layout list like component.\n         * It will box layout each items in group of component and then position the whole group in the viewport\n         * @param {module:zrender/group/Group} group\n         * @param {module:echarts/model/Component} componentModel\n         * @param {module:echarts/ExtensionAPI}\n         */\n        layout: function (group, componentModel, api) {\n            var boxLayoutParams = componentModel.getBoxLayoutParams();\n            var padding = componentModel.get('padding');\n            var viewportSize = {width: api.getWidth(), height: api.getHeight()};\n\n            var rect = layout.getLayoutRect(\n                boxLayoutParams,\n                viewportSize,\n                padding\n            );\n\n            layout.box(\n                componentModel.get('orient'),\n                group,\n                componentModel.get('itemGap'),\n                rect.width,\n                rect.height\n            );\n\n            layout.positionElement(\n                group,\n                boxLayoutParams,\n                viewportSize,\n                padding\n            );\n        },\n\n        makeBackground: function (rect, componentModel) {\n            var padding = formatUtil.normalizeCssArray(\n                componentModel.get('padding')\n            );\n            var style = componentModel.getItemStyle(['color', 'opacity']);\n            style.fill = componentModel.get('backgroundColor');\n            var rect = new graphic.Rect({\n                shape: {\n                    x: rect.x - padding[3],\n                    y: rect.y - padding[0],\n                    width: rect.width + padding[1] + padding[3],\n                    height: rect.height + padding[0] + padding[2],\n                    r: componentModel.get('borderRadius')\n                },\n                style: style,\n                silent: true,\n                z2: -1\n            });\n            // FIXME\n            // `subPixelOptimizeRect` may bring some gap between edge of viewpart\n            // and background rect when setting like `left: 0`, `top: 0`.\n            // graphic.subPixelOptimizeRect(rect);\n\n            return rect;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/listComponent.js\n// module id = 1043\n// module chunks = 0 1 2","/**\n * @file History manager.\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var each = zrUtil.each;\n\n    var ATTR = '\\0_ec_hist_store';\n\n    var history = {\n\n        /**\n         * @public\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Object} newSnapshot {dataZoomId, batch: [payloadInfo, ...]}\n         */\n        push: function (ecModel, newSnapshot) {\n            var store = giveStore(ecModel);\n\n            // If previous dataZoom can not be found,\n            // complete an range with current range.\n            each(newSnapshot, function (batchItem, dataZoomId) {\n                var i = store.length - 1;\n                for (; i >= 0; i--) {\n                    var snapshot = store[i];\n                    if (snapshot[dataZoomId]) {\n                        break;\n                    }\n                }\n                if (i < 0) {\n                    // No origin range set, create one by current range.\n                    var dataZoomModel = ecModel.queryComponents(\n                        {mainType: 'dataZoom', subType: 'select', id: dataZoomId}\n                    )[0];\n                    if (dataZoomModel) {\n                        var percentRange = dataZoomModel.getPercentRange();\n                        store[0][dataZoomId] = {\n                            dataZoomId: dataZoomId,\n                            start: percentRange[0],\n                            end: percentRange[1]\n                        };\n                    }\n                }\n            });\n\n            store.push(newSnapshot);\n        },\n\n        /**\n         * @public\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Object} snapshot\n         */\n        pop: function (ecModel) {\n            var store = giveStore(ecModel);\n            var head = store[store.length - 1];\n            store.length > 1 && store.pop();\n\n            // Find top for all dataZoom.\n            var snapshot = {};\n            each(head, function (batchItem, dataZoomId) {\n                for (var i = store.length - 1; i >= 0; i--) {\n                    var batchItem = store[i][dataZoomId];\n                    if (batchItem) {\n                        snapshot[dataZoomId] = batchItem;\n                        break;\n                    }\n                }\n            });\n\n            return snapshot;\n        },\n\n        /**\n         * @public\n         */\n        clear: function (ecModel) {\n            ecModel[ATTR] = null;\n        },\n\n        /**\n         * @public\n         * @param {module:echarts/model/Global} ecModel\n         * @return {number} records. always >= 1.\n         */\n        count: function (ecModel) {\n            return giveStore(ecModel).length;\n        }\n\n    };\n\n    /**\n     * [{key: dataZoomId, value: {dataZoomId, range}}, ...]\n     * History length of each dataZoom may be different.\n     * this._history[0] is used to store origin range.\n     * @type {Array.<Object>}\n     */\n    function giveStore(ecModel) {\n        var store = ecModel[ATTR];\n        if (!store) {\n            store = ecModel[ATTR] = [{}];\n        }\n        return store;\n    }\n\n    module.exports = history;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/history.js\n// module id = 1044\n// module chunks = 0 1 2","/**\n * @author Yi Shen(https://github.com/pissang)\n */\n\n\n    var vec2 = require('./vector');\n    var curve = require('./curve');\n\n    var bbox = {};\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n\n    var start = vec2.create();\n    var end = vec2.create();\n    var extremity = vec2.create();\n\n    var PI2 = Math.PI * 2;\n    /**\n     * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n     * @module zrender/core/bbox\n     * @param {Array<Object>} points 顶点数组\n     * @param {number} min\n     * @param {number} max\n     */\n    bbox.fromPoints = function(points, min, max) {\n        if (points.length === 0) {\n            return;\n        }\n        var p = points[0];\n        var left = p[0];\n        var right = p[0];\n        var top = p[1];\n        var bottom = p[1];\n        var i;\n\n        for (i = 1; i < points.length; i++) {\n            p = points[i];\n            left = mathMin(left, p[0]);\n            right = mathMax(right, p[0]);\n            top = mathMin(top, p[1]);\n            bottom = mathMax(bottom, p[1]);\n        }\n\n        min[0] = left;\n        min[1] = top;\n        max[0] = right;\n        max[1] = bottom;\n    };\n\n    /**\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromLine = function (x0, y0, x1, y1, min, max) {\n        min[0] = mathMin(x0, x1);\n        min[1] = mathMin(y0, y1);\n        max[0] = mathMax(x0, x1);\n        max[1] = mathMax(y0, y1);\n    };\n\n    var xDim = [];\n    var yDim = [];\n    /**\n     * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromCubic = function(\n        x0, y0, x1, y1, x2, y2, x3, y3, min, max\n    ) {\n        var cubicExtrema = curve.cubicExtrema;\n        var cubicAt = curve.cubicAt;\n        var i;\n        var n = cubicExtrema(x0, x1, x2, x3, xDim);\n        min[0] = Infinity;\n        min[1] = Infinity;\n        max[0] = -Infinity;\n        max[1] = -Infinity;\n\n        for (i = 0; i < n; i++) {\n            var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n            min[0] = mathMin(x, min[0]);\n            max[0] = mathMax(x, max[0]);\n        }\n        n = cubicExtrema(y0, y1, y2, y3, yDim);\n        for (i = 0; i < n; i++) {\n            var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n            min[1] = mathMin(y, min[1]);\n            max[1] = mathMax(y, max[1]);\n        }\n\n        min[0] = mathMin(x0, min[0]);\n        max[0] = mathMax(x0, max[0]);\n        min[0] = mathMin(x3, min[0]);\n        max[0] = mathMax(x3, max[0]);\n\n        min[1] = mathMin(y0, min[1]);\n        max[1] = mathMax(y0, max[1]);\n        min[1] = mathMin(y3, min[1]);\n        max[1] = mathMax(y3, max[1]);\n    };\n\n    /**\n     * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromQuadratic = function(x0, y0, x1, y1, x2, y2, min, max) {\n        var quadraticExtremum = curve.quadraticExtremum;\n        var quadraticAt = curve.quadraticAt;\n        // Find extremities, where derivative in x dim or y dim is zero\n        var tx =\n            mathMax(\n                mathMin(quadraticExtremum(x0, x1, x2), 1), 0\n            );\n        var ty =\n            mathMax(\n                mathMin(quadraticExtremum(y0, y1, y2), 1), 0\n            );\n\n        var x = quadraticAt(x0, x1, x2, tx);\n        var y = quadraticAt(y0, y1, y2, ty);\n\n        min[0] = mathMin(x0, x2, x);\n        min[1] = mathMin(y0, y2, y);\n        max[0] = mathMax(x0, x2, x);\n        max[1] = mathMax(y0, y2, y);\n    };\n\n    /**\n     * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n     * @method\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x\n     * @param {number} y\n     * @param {number} rx\n     * @param {number} ry\n     * @param {number} startAngle\n     * @param {number} endAngle\n     * @param {number} anticlockwise\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromArc = function (\n        x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max\n    ) {\n        var vec2Min = vec2.min;\n        var vec2Max = vec2.max;\n\n        var diff = Math.abs(startAngle - endAngle);\n\n\n        if (diff % PI2 < 1e-4 && diff > 1e-4) {\n            // Is a circle\n            min[0] = x - rx;\n            min[1] = y - ry;\n            max[0] = x + rx;\n            max[1] = y + ry;\n            return;\n        }\n\n        start[0] = mathCos(startAngle) * rx + x;\n        start[1] = mathSin(startAngle) * ry + y;\n\n        end[0] = mathCos(endAngle) * rx + x;\n        end[1] = mathSin(endAngle) * ry + y;\n\n        vec2Min(min, start, end);\n        vec2Max(max, start, end);\n\n        // Thresh to [0, Math.PI * 2]\n        startAngle = startAngle % (PI2);\n        if (startAngle < 0) {\n            startAngle = startAngle + PI2;\n        }\n        endAngle = endAngle % (PI2);\n        if (endAngle < 0) {\n            endAngle = endAngle + PI2;\n        }\n\n        if (startAngle > endAngle && !anticlockwise) {\n            endAngle += PI2;\n        }\n        else if (startAngle < endAngle && anticlockwise) {\n            startAngle += PI2;\n        }\n        if (anticlockwise) {\n            var tmp = endAngle;\n            endAngle = startAngle;\n            startAngle = tmp;\n        }\n\n        // var number = 0;\n        // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n        for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n            if (angle > startAngle) {\n                extremity[0] = mathCos(angle) * rx + x;\n                extremity[1] = mathSin(angle) * ry + y;\n\n                vec2Min(min, extremity, min);\n                vec2Max(max, extremity, max);\n            }\n        }\n    };\n\n    module.exports = bbox;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/bbox.js\n// module id = 1047\n// module chunks = 0 1 2","\n\n    var env = require('../../core/env');\n\n    // Fix weird bug in some version of IE11 (like 11.0.9600.178**),\n    // where exception \"unexpected call to method or property access\"\n    // might be thrown when calling ctx.fill or ctx.stroke after a path\n    // whose area size is zero is drawn and ctx.clip() is called and\n    // shadowBlur is set. See #4572, #3112, #5777.\n    // (e.g.,\n    //  ctx.moveTo(10, 10);\n    //  ctx.lineTo(20, 10);\n    //  ctx.closePath();\n    //  ctx.clip();\n    //  ctx.shadowBlur = 10;\n    //  ...\n    //  ctx.fill();\n    // )\n\n    var shadowTemp = [\n        ['shadowBlur', 0],\n        ['shadowColor', '#000'],\n        ['shadowOffsetX', 0],\n        ['shadowOffsetY', 0]\n    ];\n\n    module.exports = function (orignalBrush) {\n\n        // version string can be: '11.0'\n        return (env.browser.ie && env.browser.version >= 11)\n\n            ? function () {\n                var clipPaths = this.__clipPaths;\n                var style = this.style;\n                var modified;\n\n                if (clipPaths) {\n                    for (var i = 0; i < clipPaths.length; i++) {\n                        var clipPath = clipPaths[i];\n                        var shape = clipPath && clipPath.shape;\n                        var type = clipPath && clipPath.type;\n\n                        if (shape && (\n                            (type === 'sector' && shape.startAngle === shape.endAngle)\n                            || (type === 'rect' && (!shape.width || !shape.height))\n                        )) {\n                            for (var j = 0; j < shadowTemp.length; j++) {\n                                // It is save to put shadowTemp static, because shadowTemp\n                                // will be all modified each item brush called.\n                                shadowTemp[j][2] = style[shadowTemp[j][0]];\n                                style[shadowTemp[j][0]] = shadowTemp[j][1];\n                            }\n                            modified = true;\n                            break;\n                        }\n                    }\n                }\n\n                orignalBrush.apply(this, arguments);\n\n                if (modified) {\n                    for (var j = 0; j < shadowTemp.length; j++) {\n                        style[shadowTemp[j][0]] = shadowTemp[j][2];\n                    }\n                }\n            }\n\n            : orignalBrush;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/helper/fixClipWithShadow.js\n// module id = 1048\n// module chunks = 0 1 2","'use strict';\n\n\n    var graphic = require('../../util/graphic');\n    var BaseAxisPointer = require('./BaseAxisPointer');\n    var viewHelper = require('./viewHelper');\n    var cartesianAxisHelper = require('../axis/cartesianAxisHelper');\n    var AxisView = require('../axis/AxisView');\n\n    var CartesianAxisPointer = BaseAxisPointer.extend({\n\n        /**\n         * @override\n         */\n        makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n            var axis = axisModel.axis;\n            var grid = axis.grid;\n            var axisPointerType = axisPointerModel.get('type');\n            var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n            var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n            if (axisPointerType && axisPointerType !== 'none') {\n                var elStyle = viewHelper.buildElStyle(axisPointerModel);\n                var pointerOption = pointerShapeBuilder[axisPointerType](\n                    axis, pixelValue, otherExtent, elStyle\n                );\n                pointerOption.style = elStyle;\n                elOption.graphicKey = pointerOption.type;\n                elOption.pointer = pointerOption;\n            }\n\n            var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n            viewHelper.buildCartesianSingleLabelElOption(\n                value, elOption, layoutInfo, axisModel, axisPointerModel, api\n            );\n        },\n\n        /**\n         * @override\n         */\n        getHandleTransform: function (value, axisModel, axisPointerModel) {\n            var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n                labelInside: false\n            });\n            layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n            return {\n                position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n                rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n            };\n        },\n\n        /**\n         * @override\n         */\n        updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n            var axis = axisModel.axis;\n            var grid = axis.grid;\n            var axisExtent = axis.getGlobalExtent(true);\n            var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n            var dimIndex = axis.dim === 'x' ? 0 : 1;\n\n            var currPosition = transform.position;\n            currPosition[dimIndex] += delta[dimIndex];\n            currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n            currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n\n            var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n            var cursorPoint = [cursorOtherValue, cursorOtherValue];\n            cursorPoint[dimIndex] = currPosition[dimIndex];\n\n            // Make tooltip do not overlap axisPointer and in the middle of the grid.\n            var tooltipOptions = [{verticalAlign: 'middle'}, {align: 'center'}];\n\n            return {\n                position: currPosition,\n                rotation: transform.rotation,\n                cursorPoint: cursorPoint,\n                tooltipOption: tooltipOptions[dimIndex]\n            };\n        }\n\n    });\n\n    function getCartesian(grid, axis) {\n        var opt = {};\n        opt[axis.dim + 'AxisIndex'] = axis.index;\n        return grid.getCartesian(opt);\n    }\n\n    var pointerShapeBuilder = {\n\n        line: function (axis, pixelValue, otherExtent, elStyle) {\n            var targetShape = viewHelper.makeLineShape(\n                [pixelValue, otherExtent[0]],\n                [pixelValue, otherExtent[1]],\n                getAxisDimIndex(axis)\n            );\n            graphic.subPixelOptimizeLine({\n                shape: targetShape,\n                style: elStyle\n            });\n            return {\n                type: 'Line',\n                shape: targetShape\n            };\n        },\n\n        shadow: function (axis, pixelValue, otherExtent, elStyle) {\n            var bandWidth = axis.getBandWidth();\n            var span = otherExtent[1] - otherExtent[0];\n            return {\n                type: 'Rect',\n                shape: viewHelper.makeRectShape(\n                    [pixelValue - bandWidth / 2, otherExtent[0]],\n                    [bandWidth, span],\n                    getAxisDimIndex(axis)\n                )\n            };\n        }\n    };\n\n    function getAxisDimIndex(axis) {\n        return axis.dim === 'x' ? 0 : 1;\n    }\n\n    AxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\n\n    module.exports = CartesianAxisPointer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/CartesianAxisPointer.js\n// module id = 1049\n// module chunks = 0 1 2","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var clazzUtil = require('../../util/clazz');\n    var graphic = require('../../util/graphic');\n    var get = require('../../util/model').makeGetter();\n    var axisPointerModelHelper = require('./modelHelper');\n    var eventTool = require('zrender/lib/core/event');\n    var throttle = require('../../util/throttle');\n\n    var clone = zrUtil.clone;\n    var bind = zrUtil.bind;\n\n    /**\n     * Base axis pointer class in 2D.\n     * Implemenents {module:echarts/component/axis/IAxisPointer}.\n     */\n    function BaseAxisPointer () {\n    }\n\n    BaseAxisPointer.prototype = {\n\n        /**\n         * @private\n         */\n        _group: null,\n\n        /**\n         * @private\n         */\n        _lastGraphicKey: null,\n\n        /**\n         * @private\n         */\n        _handle: null,\n\n        /**\n         * @private\n         */\n        _dragging: false,\n\n        /**\n         * @private\n         */\n        _lastValue: null,\n\n        /**\n         * @private\n         */\n        _lastStatus: null,\n\n        /**\n         * @private\n         */\n        _payloadInfo: null,\n\n        /**\n         * In px, arbitrary value. Do not set too small,\n         * no animation is ok for most cases.\n         * @protected\n         */\n        animationThreshold: 15,\n\n        /**\n         * @implement\n         */\n        render: function (axisModel, axisPointerModel, api, forceRender) {\n            var value = axisPointerModel.get('value');\n            var status = axisPointerModel.get('status');\n\n            // Bind them to `this`, not in closure, otherwise they will not\n            // be replaced when user calling setOption in not merge mode.\n            this._axisModel = axisModel;\n            this._axisPointerModel = axisPointerModel;\n            this._api = api;\n\n            // Optimize: `render` will be called repeatly during mouse move.\n            // So it is power consuming if performing `render` each time,\n            // especially on mobile device.\n            if (!forceRender\n                && this._lastValue === value\n                && this._lastStatus === status\n            ) {\n                return;\n            }\n            this._lastValue = value;\n            this._lastStatus = status;\n\n            var group = this._group;\n            var handle = this._handle;\n\n            if (!status || status === 'hide') {\n                // Do not clear here, for animation better.\n                group && group.hide();\n                handle && handle.hide();\n                return;\n            }\n            group && group.show();\n            handle && handle.show();\n\n            // Otherwise status is 'show'\n            var elOption = {};\n            this.makeElOption(elOption, value, axisModel, axisPointerModel, api);\n\n            // Enable change axis pointer type.\n            var graphicKey = elOption.graphicKey;\n            if (graphicKey !== this._lastGraphicKey) {\n                this.clear(api);\n            }\n            this._lastGraphicKey = graphicKey;\n\n            var moveAnimation = this._moveAnimation =\n                this.determineAnimation(axisModel, axisPointerModel);\n\n            if (!group) {\n                group = this._group = new graphic.Group();\n                this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n                this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n                api.getZr().add(group);\n            }\n            else {\n                var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n                this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n                this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n            }\n\n            updateMandatoryProps(group, axisPointerModel, true);\n\n            this._renderHandle(value);\n        },\n\n        /**\n         * @implement\n         */\n        remove: function (api) {\n            this.clear(api);\n        },\n\n        /**\n         * @implement\n         */\n        dispose: function (api) {\n            this.clear(api);\n        },\n\n        /**\n         * @protected\n         */\n        determineAnimation: function (axisModel, axisPointerModel) {\n            var animation = axisPointerModel.get('animation');\n            var axis = axisModel.axis;\n            var isCategoryAxis = axis.type === 'category';\n            var useSnap = axisPointerModel.get('snap');\n\n            // Value axis without snap always do not snap.\n            if (!useSnap && !isCategoryAxis) {\n                return false;\n            }\n\n            if (animation === 'auto' || animation == null) {\n                var animationThreshold = this.animationThreshold;\n                if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n                    return true;\n                }\n\n                // It is important to auto animation when snap used. Consider if there is\n                // a dataZoom, animation will be disabled when too many points exist, while\n                // it will be enabled for better visual effect when little points exist.\n                if (useSnap) {\n                    var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n                    var axisExtent = axis.getExtent();\n                    // Approximate band width\n                    return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n                }\n\n                return false;\n            }\n\n            return animation === true;\n        },\n\n        /**\n         * add {pointer, label, graphicKey} to elOption\n         * @protected\n         */\n        makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n            // Shoule be implemenented by sub-class.\n        },\n\n        /**\n         * @protected\n         */\n        createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n            var pointerOption = elOption.pointer;\n            if (pointerOption) {\n                var pointerEl = get(group).pointerEl = new graphic[pointerOption.type](\n                    clone(elOption.pointer)\n                );\n                group.add(pointerEl);\n            }\n        },\n\n        /**\n         * @protected\n         */\n        createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n            if (elOption.label) {\n                var labelEl = get(group).labelEl = new graphic.Rect(\n                    clone(elOption.label)\n                );\n\n                group.add(labelEl);\n                updateLabelShowHide(labelEl, axisPointerModel);\n            }\n        },\n\n        /**\n         * @protected\n         */\n        updatePointerEl: function (group, elOption, updateProps) {\n            var pointerEl = get(group).pointerEl;\n            if (pointerEl) {\n                pointerEl.setStyle(elOption.pointer.style);\n                updateProps(pointerEl, {shape: elOption.pointer.shape});\n            }\n        },\n\n        /**\n         * @protected\n         */\n        updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n            var labelEl = get(group).labelEl;\n            if (labelEl) {\n                labelEl.setStyle(elOption.label.style);\n                updateProps(labelEl, {\n                    // Consider text length change in vertical axis, animation should\n                    // be used on shape, otherwise the effect will be weird.\n                    shape: elOption.label.shape,\n                    position: elOption.label.position\n                });\n\n                updateLabelShowHide(labelEl, axisPointerModel);\n            }\n        },\n\n        /**\n         * @private\n         */\n        _renderHandle: function (value) {\n            if (this._dragging || !this.updateHandleTransform) {\n                return;\n            }\n\n            var axisPointerModel = this._axisPointerModel;\n            var zr = this._api.getZr();\n            var handle = this._handle;\n            var handleModel = axisPointerModel.getModel('handle');\n\n            var status = axisPointerModel.get('status');\n            if (!handleModel.get('show') || !status || status === 'hide') {\n                handle && zr.remove(handle);\n                this._handle = null;\n                return;\n            }\n\n            var isInit;\n            if (!this._handle) {\n                isInit = true;\n                handle = this._handle = graphic.createIcon(\n                    handleModel.get('icon'), \n                    {\n                        cursor: 'move',\n                        draggable: true,\n                        onmousemove: function (e) {\n                            // Fot mobile devicem, prevent screen slider on the button.\n                            eventTool.stop(e.event);\n                        },\n                        onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n                        drift: bind(this._onHandleDragMove, this),\n                        ondragend: bind(this._onHandleDragEnd, this)\n                    }\n                );\n                zr.add(handle);\n            }\n\n            updateMandatoryProps(handle, axisPointerModel, false);\n\n            // update style\n            var includeStyles = [\n                'color', 'borderColor', 'borderWidth', 'opacity',\n                'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'\n            ];\n            handle.setStyle(handleModel.getItemStyle(null, includeStyles));\n\n            // update position\n            var handleSize = handleModel.get('size');\n            if (!zrUtil.isArray(handleSize)) {\n                handleSize = [handleSize, handleSize];\n            }\n            handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n\n            throttle.createOrUpdate(\n                this,\n                '_doDispatchAxisPointer',\n                handleModel.get('throttle') || 0,\n                'fixRate'\n            );\n\n            this._moveHandleToValue(value, isInit);\n        },\n\n        /**\n         * @private\n         */\n        _moveHandleToValue: function (value, isInit) {\n            updateProps(\n                this._axisPointerModel,\n                !isInit && this._moveAnimation,\n                this._handle,\n                getHandleTransProps(this.getHandleTransform(\n                    value, this._axisModel, this._axisPointerModel\n                ))\n            );\n        },\n\n        /**\n         * @private\n         */\n        _onHandleDragMove: function (dx, dy) {\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            this._dragging = true;\n\n            // Persistent for throttle.\n            var trans = this.updateHandleTransform(\n                getHandleTransProps(handle),\n                [dx, dy],\n                this._axisModel,\n                this._axisPointerModel\n            );\n            this._payloadInfo = trans;\n\n            handle.stopAnimation();\n            handle.attr(getHandleTransProps(trans));\n            get(handle).lastProp = null;\n\n            this._doDispatchAxisPointer();\n        },\n\n        /**\n         * Throttled method.\n         * @private\n         */\n        _doDispatchAxisPointer: function () {\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            var payloadInfo = this._payloadInfo;\n            var axisModel = this._axisModel;\n            this._api.dispatchAction({\n                type: 'updateAxisPointer',\n                x: payloadInfo.cursorPoint[0],\n                y: payloadInfo.cursorPoint[1],\n                tooltipOption: payloadInfo.tooltipOption,\n                axesInfo: [{\n                    axisDim: axisModel.axis.dim,\n                    axisIndex: axisModel.componentIndex\n                }]\n            });\n        },\n\n        /**\n         * @private\n         */\n        _onHandleDragEnd: function (moveAnimation) {\n            this._dragging = false;\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            var value = this._axisPointerModel.get('value');\n            // Consider snap or categroy axis, handle may be not consistent with\n            // axisPointer. So move handle to align the exact value position when\n            // drag ended.\n            this._moveHandleToValue(value);\n\n            // For the effect: tooltip will be shown when finger holding on handle\n            // button, and will be hidden after finger left handle button.\n            this._api.dispatchAction({\n                type: 'hideTip'\n            });\n        },\n\n        /**\n         * Should be implemenented by sub-class if support `handle`.\n         * @protected\n         * @param {number} value\n         * @param {module:echarts/model/Model} axisModel\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @return {Object} {position: [x, y], rotation: 0}\n         */\n        getHandleTransform: null,\n\n        /**\n         * * Should be implemenented by sub-class if support `handle`.\n         * @protected\n         * @param {Object} transform {position, rotation}\n         * @param {Array.<number>} delta [dx, dy]\n         * @param {module:echarts/model/Model} axisModel\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n         */\n        updateHandleTransform: null,\n\n        /**\n         * @private\n         */\n        clear: function (api) {\n            this._lastValue = null;\n            this._lastStatus = null;\n\n            var zr = api.getZr();\n            var group = this._group;\n            var handle = this._handle;\n            if (zr && group) {\n                this._lastGraphicKey = null;\n                group && zr.remove(group);\n                handle && zr.remove(handle);\n                this._group = null;\n                this._handle = null;\n                this._payloadInfo = null;\n            }\n        },\n\n        /**\n         * @protected\n         */\n        doClear: function () {\n            // Implemented by sub-class if necessary.\n        },\n\n        /**\n         * @protected\n         * @param {Array.<number>} xy\n         * @param {Array.<number>} wh\n         * @param {number} [xDimIndex=0] or 1\n         */\n        buildLabel: function (xy, wh, xDimIndex) {\n            xDimIndex = xDimIndex || 0;\n            return {\n                x: xy[xDimIndex],\n                y: xy[1 - xDimIndex],\n                width: wh[xDimIndex],\n                height: wh[1 - xDimIndex]\n            };\n        }\n    };\n\n    BaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\n\n    function updateProps(animationModel, moveAnimation, el, props) {\n        // Animation optimize.\n        if (!propsEqual(get(el).lastProp, props)) {\n            get(el).lastProp = props;\n            moveAnimation\n                ? graphic.updateProps(el, props, animationModel)\n                : (el.stopAnimation(), el.attr(props));\n        }\n    }\n\n    function propsEqual(lastProps, newProps) {\n        if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n            var equals = true;\n            zrUtil.each(newProps, function (item, key) {\n                equals = equals && propsEqual(lastProps[key], item);\n            });\n            return !!equals;\n        }\n        else {\n            return lastProps === newProps;\n        }\n    }\n\n    function updateLabelShowHide(labelEl, axisPointerModel) {\n        labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n    }\n\n    function getHandleTransProps(trans) {\n        return {\n            position: trans.position.slice(),\n            rotation: trans.rotation || 0\n        };\n    }\n\n    function updateMandatoryProps(group, axisPointerModel, silent) {\n        var z = axisPointerModel.get('z');\n        var zlevel = axisPointerModel.get('zlevel');\n\n        group && group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n                el.silent = silent;\n            }\n        });\n    }\n\n    clazzUtil.enableClassExtend(BaseAxisPointer);\n\n    module.exports = BaseAxisPointer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/BaseAxisPointer.js\n// module id = 1050\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var helper = {};\n\n    /**\n     * @param {Object} opt {labelInside}\n     * @return {Object} {\n     *  position, rotation, labelDirection, labelOffset,\n     *  tickDirection, labelRotate, labelInterval, z2\n     * }\n     */\n    helper.layout = function (gridModel, axisModel, opt) {\n        opt = opt || {};\n        var grid = gridModel.coordinateSystem;\n        var axis = axisModel.axis;\n        var layout = {};\n\n        var rawAxisPosition = axis.position;\n        var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n        var axisDim = axis.dim;\n\n        var rect = grid.getRect();\n        var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n        var idx = {left: 0, right: 1, top: 0, bottom: 1, onZero: 2};\n        var axisOffset = axisModel.get('offset') || 0;\n\n        var posBound = axisDim === 'x'\n            ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset]\n            : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\n\n        if (axis.onZero) {\n            var otherAxis = grid.getAxis(axisDim === 'x' ? 'y' : 'x', axis.onZeroAxisIndex);\n            var onZeroCoord = otherAxis.toGlobalCoord(otherAxis.dataToCoord(0));\n            posBound[idx['onZero']] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\n        }\n\n        // Axis position\n        layout.position = [\n            axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0],\n            axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]\n        ];\n\n        // Axis rotation\n        layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1);\n\n        // Tick and label direction, x y is axisDim\n        var dirMap = {top: -1, bottom: 1, left: -1, right: 1};\n\n        layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n        layout.labelOffset = axis.onZero ? posBound[idx[rawAxisPosition]] - posBound[idx['onZero']] : 0;\n\n        if (axisModel.get('axisTick.inside')) {\n            layout.tickDirection = -layout.tickDirection;\n        }\n        if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n            layout.labelDirection = -layout.labelDirection;\n        }\n\n        // Special label rotation\n        var labelRotate = axisModel.get('axisLabel.rotate');\n        layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate;\n\n        // label interval when auto mode.\n        layout.labelInterval = axis.getLabelInterval();\n\n        // Over splitLine and splitArea\n        layout.z2 = 1;\n\n        return layout;\n    };\n\n    module.exports = helper;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axis/cartesianAxisHelper.js\n// module id = 1051\n// module chunks = 0 1 2","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Model = require('../../model/Model');\n\n    var LegendModel = require('../../echarts').extendComponentModel({\n\n        type: 'legend.plain',\n\n        dependencies: ['series'],\n\n        layoutMode: {\n            type: 'box',\n            // legend.width/height are maxWidth/maxHeight actually,\n            // whereas realy width/height is calculated by its content.\n            // (Setting {left: 10, right: 10} does not make sense).\n            // So consider the case:\n            // `setOption({legend: {left: 10});`\n            // then `setOption({legend: {right: 10});`\n            // The previous `left` should be cleared by setting `ignoreSize`.\n            ignoreSize: true\n        },\n\n        init: function (option, parentModel, ecModel) {\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            option.selected = option.selected || {};\n        },\n\n        mergeOption: function (option) {\n            LegendModel.superCall(this, 'mergeOption', option);\n        },\n\n        optionUpdated: function () {\n            this._updateData(this.ecModel);\n\n            var legendData = this._data;\n\n            // If selectedMode is single, try to select one\n            if (legendData[0] && this.get('selectedMode') === 'single') {\n                var hasSelected = false;\n                // If has any selected in option.selected\n                for (var i = 0; i < legendData.length; i++) {\n                    var name = legendData[i].get('name');\n                    if (this.isSelected(name)) {\n                        // Force to unselect others\n                        this.select(name);\n                        hasSelected = true;\n                        break;\n                    }\n                }\n                // Try select the first if selectedMode is single\n                !hasSelected && this.select(legendData[0].get('name'));\n            }\n        },\n\n        _updateData: function (ecModel) {\n            var legendData = zrUtil.map(this.get('data') || [], function (dataItem) {\n                // Can be string or number\n                if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n                    dataItem = {\n                        name: dataItem\n                    };\n                }\n                return new Model(dataItem, this, this.ecModel);\n            }, this);\n            this._data = legendData;\n\n            var availableNames = zrUtil.map(ecModel.getSeries(), function (series) {\n                return series.name;\n            });\n            ecModel.eachSeries(function (seriesModel) {\n                if (seriesModel.legendDataProvider) {\n                    var data = seriesModel.legendDataProvider();\n                    availableNames = availableNames.concat(data.mapArray(data.getName));\n                }\n            });\n            /**\n             * @type {Array.<string>}\n             * @private\n             */\n            this._availableNames = availableNames;\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Model>}\n         */\n        getData: function () {\n            return this._data;\n        },\n\n        /**\n         * @param {string} name\n         */\n        select: function (name) {\n            var selected = this.option.selected;\n            var selectedMode = this.get('selectedMode');\n            if (selectedMode === 'single') {\n                var data = this._data;\n                zrUtil.each(data, function (dataItem) {\n                    selected[dataItem.get('name')] = false;\n                });\n            }\n            selected[name] = true;\n        },\n\n        /**\n         * @param {string} name\n         */\n        unSelect: function (name) {\n            if (this.get('selectedMode') !== 'single') {\n                this.option.selected[name] = false;\n            }\n        },\n\n        /**\n         * @param {string} name\n         */\n        toggleSelected: function (name) {\n            var selected = this.option.selected;\n            // Default is true\n            if (!selected.hasOwnProperty(name)) {\n                selected[name] = true;\n            }\n            this[selected[name] ? 'unSelect' : 'select'](name);\n        },\n\n        /**\n         * @param {string} name\n         */\n        isSelected: function (name) {\n            var selected = this.option.selected;\n            return !(selected.hasOwnProperty(name) && !selected[name])\n                && zrUtil.indexOf(this._availableNames, name) >= 0;\n        },\n\n        defaultOption: {\n            // 一级层叠\n            zlevel: 0,\n            // 二级层叠\n            z: 4,\n            show: true,\n\n            // 布局方式，默认为水平布局，可选为：\n            // 'horizontal' | 'vertical'\n            orient: 'horizontal',\n\n            left: 'center',\n            // right: 'center',\n\n            top: 0,\n            // bottom: null,\n\n            // 水平对齐\n            // 'auto' | 'left' | 'right'\n            // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n            align: 'auto',\n\n            backgroundColor: 'rgba(0,0,0,0)',\n            // 图例边框颜色\n            borderColor: '#ccc',\n            borderRadius: 0,\n            // 图例边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n            // 图例内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n            // 各个item之间的间隔，单位px，默认为10，\n            // 横向布局时为水平间隔，纵向布局时为纵向间隔\n            itemGap: 10,\n            // 图例图形宽度\n            itemWidth: 25,\n            // 图例图形高度\n            itemHeight: 14,\n\n            // 图例关闭时候的颜色\n            inactiveColor: '#ccc',\n\n            textStyle: {\n                // 图例文字颜色\n                color: '#333'\n            },\n            // formatter: '',\n            // 选择模式，默认开启图例开关\n            selectedMode: true,\n            // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n            // selected: null,\n            // 图例内容（详见legend.data，数组中每一项代表一个item\n            // data: [],\n\n            // Tooltip 相关配置\n            tooltip: {\n                show: false\n            }\n        }\n    });\n\n    module.exports = LegendModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/LegendModel.js\n// module id = 1052\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var symbolCreator = require('../../util/symbol');\n    var graphic = require('../../util/graphic');\n    var listComponentHelper = require('../helper/listComponent');\n    var layoutUtil = require('../../util/layout');\n\n    var curry = zrUtil.curry;\n    var each = zrUtil.each;\n    var Group = graphic.Group;\n\n    module.exports = require('../../echarts').extendComponentView({\n\n        type: 'legend.plain',\n\n        newlineDisabled: false,\n\n        /**\n         * @override\n         */\n        init: function () {\n\n            /**\n             * @private\n             * @type {module:zrender/container/Group}\n             */\n            this.group.add(this._contentGroup = new Group());\n\n            /**\n             * @private\n             * @type {module:zrender/Element}\n             */\n            this._backgroundEl;\n        },\n\n        /**\n         * @protected\n         */\n        getContentGroup: function () {\n            return this._contentGroup;\n        },\n\n        /**\n         * @override\n         */\n        render: function (legendModel, ecModel, api) {\n\n            this.resetInner();\n\n            if (!legendModel.get('show', true)) {\n                return;\n            }\n\n            var itemAlign = legendModel.get('align');\n            if (!itemAlign || itemAlign === 'auto') {\n                itemAlign = (\n                    legendModel.get('left') === 'right'\n                    && legendModel.get('orient') === 'vertical'\n                ) ? 'right' : 'left';\n            }\n\n            this.renderInner(itemAlign, legendModel, ecModel, api);\n\n            // Perform layout.\n            var positionInfo = legendModel.getBoxLayoutParams();\n            var viewportSize = {width: api.getWidth(), height: api.getHeight()};\n            var padding = legendModel.get('padding');\n\n            var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n            var mainRect = this.layoutInner(legendModel, itemAlign, maxSize);\n\n            // Place mainGroup, based on the calculated `mainRect`.\n            var layoutRect = layoutUtil.getLayoutRect(\n                zrUtil.defaults({width: mainRect.width, height: mainRect.height}, positionInfo),\n                viewportSize,\n                padding\n            );\n            this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]);\n\n            // Render background after group is layout.\n            this.group.add(\n                this._backgroundEl = listComponentHelper.makeBackground(mainRect, legendModel)\n            );\n        },\n\n        /**\n         * @protected\n         */\n        resetInner: function () {\n            this.getContentGroup().removeAll();\n            this._backgroundEl && this.group.remove(this._backgroundEl);\n        },\n\n        /**\n         * @protected\n         */\n        renderInner: function (itemAlign, legendModel, ecModel, api) {\n            var contentGroup = this.getContentGroup();\n            var legendDrawnMap = zrUtil.createHashMap();\n            var selectMode = legendModel.get('selectedMode');\n\n            each(legendModel.getData(), function (itemModel, dataIndex) {\n                var name = itemModel.get('name');\n\n                // Use empty string or \\n as a newline string\n                if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n                    contentGroup.add(new Group({\n                        newline: true\n                    }));\n                    return;\n                }\n\n                var seriesModel = ecModel.getSeriesByName(name)[0];\n\n                if (legendDrawnMap.get(name)) {\n                    // Have been drawed\n                    return;\n                }\n\n                // Series legend\n                if (seriesModel) {\n                    var data = seriesModel.getData();\n                    var color = data.getVisual('color');\n\n                    // If color is a callback function\n                    if (typeof color === 'function') {\n                        // Use the first data\n                        color = color(seriesModel.getDataParams(0));\n                    }\n\n                    // Using rect symbol defaultly\n                    var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n                    var symbolType = data.getVisual('symbol');\n\n                    var itemGroup = this._createItem(\n                        name, dataIndex, itemModel, legendModel,\n                        legendSymbolType, symbolType,\n                        itemAlign, color,\n                        selectMode\n                    );\n\n                    itemGroup.on('click', curry(dispatchSelectAction, name, api))\n                        .on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api))\n                        .on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api));\n\n                    legendDrawnMap.set(name, true);\n                }\n                else {\n                    // Data legend of pie, funnel\n                    ecModel.eachRawSeries(function (seriesModel) {\n                        // In case multiple series has same data name\n                        if (legendDrawnMap.get(name)) {\n                            return;\n                        }\n                        if (seriesModel.legendDataProvider) {\n                            var data = seriesModel.legendDataProvider();\n                            var idx = data.indexOfName(name);\n                            if (idx < 0) {\n                                return;\n                            }\n\n                            var color = data.getItemVisual(idx, 'color');\n\n                            var legendSymbolType = 'roundRect';\n\n                            var itemGroup = this._createItem(\n                                name, dataIndex, itemModel, legendModel,\n                                legendSymbolType, null,\n                                itemAlign, color,\n                                selectMode\n                            );\n\n                            itemGroup.on('click', curry(dispatchSelectAction, name, api))\n                                // FIXME Should not specify the series name\n                                .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api))\n                                .on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));\n\n                            legendDrawnMap.set(name, true);\n                        }\n                    }, this);\n                }\n\n                if (__DEV__) {\n                    if (!legendDrawnMap.get(name)) {\n                        console.warn(name + ' series not exists. Legend data should be same with series name or data name.');\n                    }\n                }\n            }, this);\n        },\n\n        _createItem: function (\n            name, dataIndex, itemModel, legendModel,\n            legendSymbolType, symbolType,\n            itemAlign, color, selectMode\n        ) {\n            var itemWidth = legendModel.get('itemWidth');\n            var itemHeight = legendModel.get('itemHeight');\n            var inactiveColor = legendModel.get('inactiveColor');\n\n            var isSelected = legendModel.isSelected(name);\n            var itemGroup = new Group();\n\n            var textStyleModel = itemModel.getModel('textStyle');\n\n            var itemIcon = itemModel.get('icon');\n\n            var tooltipModel = itemModel.getModel('tooltip');\n            var legendGlobalTooltipModel = tooltipModel.parentModel;\n\n            // Use user given icon first\n            legendSymbolType = itemIcon || legendSymbolType;\n            itemGroup.add(symbolCreator.createSymbol(\n                legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor\n            ));\n\n            // Compose symbols\n            // PENDING\n            if (!itemIcon && symbolType\n                // At least show one symbol, can't be all none\n                && ((symbolType !== legendSymbolType) || symbolType == 'none')\n            ) {\n                var size = itemHeight * 0.8;\n                if (symbolType === 'none') {\n                    symbolType = 'circle';\n                }\n                // Put symbol in the center\n                itemGroup.add(symbolCreator.createSymbol(\n                    symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size,\n                    isSelected ? color : inactiveColor\n                ));\n            }\n\n            var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n            var textAlign = itemAlign;\n\n            var formatter = legendModel.get('formatter');\n            var content = name;\n            if (typeof formatter === 'string' && formatter) {\n                content = formatter.replace('{name}', name != null ? name : '');\n            }\n            else if (typeof formatter === 'function') {\n                content = formatter(name);\n            }\n\n            itemGroup.add(new graphic.Text({\n                style: graphic.setTextStyle({}, textStyleModel, {\n                    text: content,\n                    x: textX,\n                    y: itemHeight / 2,\n                    textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n                    textAlign: textAlign,\n                    textVerticalAlign: 'middle'\n                })\n            }));\n\n            // Add a invisible rect to increase the area of mouse hover\n            var hitRect = new graphic.Rect({\n                shape: itemGroup.getBoundingRect(),\n                invisible: true,\n                tooltip: tooltipModel.get('show') ? zrUtil.extend({\n                    content: name,\n                    // Defaul formatter\n                    formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n                        return name;\n                    },\n                    formatterParams: {\n                        componentType: 'legend',\n                        legendIndex: legendModel.componentIndex,\n                        name: name,\n                        $vars: ['name']\n                    }\n                }, tooltipModel.option) : null\n            });\n            itemGroup.add(hitRect);\n\n            itemGroup.eachChild(function (child) {\n                child.silent = true;\n            });\n\n            hitRect.silent = !selectMode;\n\n            this.getContentGroup().add(itemGroup);\n\n            graphic.setHoverStyle(itemGroup);\n\n            itemGroup.__legendDataIndex = dataIndex;\n\n            return itemGroup;\n        },\n\n        /**\n         * @protected\n         */\n        layoutInner: function (legendModel, itemAlign, maxSize) {\n            var contentGroup = this.getContentGroup();\n\n            // Place items in contentGroup.\n            layoutUtil.box(\n                legendModel.get('orient'),\n                contentGroup,\n                legendModel.get('itemGap'),\n                maxSize.width,\n                maxSize.height\n            );\n\n            var contentRect = contentGroup.getBoundingRect();\n            contentGroup.attr('position', [-contentRect.x, -contentRect.y]);\n\n            return this.group.getBoundingRect();\n        }\n\n    });\n\n    function dispatchSelectAction(name, api) {\n        api.dispatchAction({\n            type: 'legendToggleSelect',\n            name: name\n        });\n    }\n\n    function dispatchHighlightAction(seriesModel, dataName, api) {\n        // If element hover will move to a hoverLayer.\n        var el = api.getZr().storage.getDisplayList()[0];\n        if (!(el && el.useHoverLayer)) {\n            seriesModel.get('legendHoverLink') && api.dispatchAction({\n                type: 'highlight',\n                seriesName: seriesModel.name,\n                name: dataName\n            });\n        }\n    }\n\n    function dispatchDownplayAction(seriesModel, dataName, api) {\n        // If element hover will move to a hoverLayer.\n        var el = api.getZr().storage.getDisplayList()[0];\n        if (!(el && el.useHoverLayer)) {\n            seriesModel.get('legendHoverLink') && api.dispatchAction({\n                type: 'downplay',\n                seriesName: seriesModel.name,\n                name: dataName\n            });\n        }\n    }\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/LegendView.js\n// module id = 1053\n// module chunks = 0 1 2","/**\n * Box selection tool.\n *\n * @module echarts/component/helper/BrushController\n */\n\n\n\n    var Eventful = require('zrender/lib/mixin/Eventful');\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n    var interactionMutex = require('./interactionMutex');\n    var DataDiffer = require('../../data/DataDiffer');\n\n    var curry = zrUtil.curry;\n    var each = zrUtil.each;\n    var map = zrUtil.map;\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathPow = Math.pow;\n\n    var COVER_Z = 10000;\n    var UNSELECT_THRESHOLD = 6;\n    var MIN_RESIZE_LINE_WIDTH = 6;\n    var MUTEX_RESOURCE_KEY = 'globalPan';\n\n    var DIRECTION_MAP = {\n        w: [0, 0],\n        e: [0, 1],\n        n: [1, 0],\n        s: [1, 1]\n    };\n    var CURSOR_MAP = {\n        w: 'ew',\n        e: 'ew',\n        n: 'ns',\n        s: 'ns',\n        ne: 'nesw',\n        sw: 'nesw',\n        nw: 'nwse',\n        se: 'nwse'\n    };\n    var DEFAULT_BRUSH_OPT = {\n        brushStyle: {\n            lineWidth: 2,\n            stroke: 'rgba(0,0,0,0.3)',\n            fill: 'rgba(0,0,0,0.1)'\n        },\n        transformable: true,\n        brushMode: 'single',\n        removeOnClick: false\n    };\n\n    var baseUID = 0;\n\n    /**\n     * @alias module:echarts/component/helper/BrushController\n     * @constructor\n     * @mixin {module:zrender/mixin/Eventful}\n     * @event module:echarts/component/helper/BrushController#brush\n     *        params:\n     *            areas: Array.<Array>, coord relates to container group,\n     *                                    If no container specified, to global.\n     *            opt {\n     *                isEnd: boolean,\n     *                removeOnClick: boolean\n     *            }\n     *\n     * @param {module:zrender/zrender~ZRender} zr\n     */\n    function BrushController(zr) {\n\n        if (__DEV__) {\n            zrUtil.assert(zr);\n        }\n\n        Eventful.call(this);\n\n        /**\n         * @type {module:zrender/zrender~ZRender}\n         * @private\n         */\n        this._zr = zr;\n\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new graphic.Group();\n\n        /**\n         * Only for drawing (after enabledBrush).\n         *     'line', 'rect', 'polygon' or false\n         *     If passing false/null/undefined, disable brush.\n         *     If passing 'auto', determined by panel.defaultBrushType\n         * @private\n         * @type {string}\n         */\n        this._brushType;\n\n        /**\n         * Only for drawing (after enabledBrush).\n         *\n         * @private\n         * @type {Object}\n         */\n        this._brushOption;\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._panels;\n\n        /**\n         * @private\n         * @type {Array.<nubmer>}\n         */\n        this._track = [];\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._dragging;\n\n        /**\n         * @private\n         * @type {Array}\n         */\n        this._covers = [];\n\n        /**\n         * @private\n         * @type {moudule:zrender/container/Group}\n         */\n        this._creatingCover;\n\n        /**\n         * `true` means global panel\n         * @private\n         * @type {module:zrender/container/Group|boolean}\n         */\n        this._creatingPanel;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._enableGlobalPan;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        if (__DEV__) {\n            this._mounted;\n        }\n\n        /**\n         * @private\n         * @type {string}\n         */\n        this._uid = 'brushController_' + baseUID++;\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._handlers = {};\n        each(mouseHandlers, function (handler, eventName) {\n            this._handlers[eventName] = zrUtil.bind(handler, this);\n        }, this);\n    }\n\n    BrushController.prototype = {\n\n        constructor: BrushController,\n\n        /**\n         * If set to null/undefined/false, select disabled.\n         * @param {Object} brushOption\n         * @param {string|boolean} brushOption.brushType 'line', 'rect', 'polygon' or false\n         *                          If passing false/null/undefined, disable brush.\n         *                          If passing 'auto', determined by panel.defaultBrushType.\n         *                              ('auto' can not be used in global panel)\n         * @param {number} [brushOption.brushMode='single'] 'single' or 'multiple'\n         * @param {boolean} [brushOption.transformable=true]\n         * @param {boolean} [brushOption.removeOnClick=false]\n         * @param {Object} [brushOption.brushStyle]\n         * @param {number} [brushOption.brushStyle.width]\n         * @param {number} [brushOption.brushStyle.lineWidth]\n         * @param {string} [brushOption.brushStyle.stroke]\n         * @param {string} [brushOption.brushStyle.fill]\n         * @param {number} [brushOption.z]\n         */\n        enableBrush: function (brushOption) {\n            if (__DEV__) {\n                zrUtil.assert(this._mounted);\n            }\n\n            this._brushType && doDisableBrush(this);\n            brushOption.brushType && doEnableBrush(this, brushOption);\n\n            return this;\n        },\n\n        /**\n         * @param {Array.<Object>} panelOpts If not pass, it is global brush.\n         *        Each items: {\n         *            panelId, // mandatory.\n         *            clipPath, // mandatory. function.\n         *            isTargetByCursor, // mandatory. function.\n         *            defaultBrushType, // optional, only used when brushType is 'auto'.\n         *            getLinearBrushOtherExtent, // optional. function.\n         *        }\n         */\n        setPanels: function (panelOpts) {\n            if (panelOpts && panelOpts.length) {\n                var panels = this._panels = {};\n                zrUtil.each(panelOpts, function (panelOpts) {\n                    panels[panelOpts.panelId] = zrUtil.clone(panelOpts);\n                });\n            }\n            else {\n                this._panels = null;\n            }\n            return this;\n        },\n\n        /**\n         * @param {Object} [opt]\n         * @return {boolean} [opt.enableGlobalPan=false]\n         */\n        mount: function (opt) {\n            opt = opt || {};\n\n            if (__DEV__) {\n                this._mounted = true; // should be at first.\n            }\n\n            this._enableGlobalPan = opt.enableGlobalPan;\n\n            var thisGroup = this.group;\n            this._zr.add(thisGroup);\n\n            thisGroup.attr({\n                position: opt.position || [0, 0],\n                rotation: opt.rotation || 0,\n                scale: opt.scale || [1, 1]\n            });\n            this._transform = thisGroup.getLocalTransform();\n\n            return this;\n        },\n\n        eachCover: function (cb, context) {\n            each(this._covers, cb, context);\n        },\n\n        /**\n         * Update covers.\n         * @param {Array.<Object>} brushOptionList Like:\n         *        [\n         *            {id: 'xx', brushType: 'line', range: [23, 44], brushStyle, transformable},\n         *            {id: 'yy', brushType: 'rect', range: [[23, 44], [23, 54]]},\n         *            ...\n         *        ]\n         *        `brushType` is required in each cover info. (can not be 'auto')\n         *        `id` is not mandatory.\n         *        `brushStyle`, `transformable` is not mandatory, use DEFAULT_BRUSH_OPT by default.\n         *        If brushOptionList is null/undefined, all covers removed.\n         */\n        updateCovers: function (brushOptionList) {\n            if (__DEV__) {\n                zrUtil.assert(this._mounted);\n            }\n\n            brushOptionList = zrUtil.map(brushOptionList, function (brushOption) {\n                return zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n            });\n\n            var tmpIdPrefix = '\\0-brush-index-';\n            var oldCovers = this._covers;\n            var newCovers = this._covers = [];\n            var controller = this;\n            var creatingCover = this._creatingCover;\n\n            (new DataDiffer(oldCovers, brushOptionList, oldGetKey, getKey))\n                .add(addOrUpdate)\n                .update(addOrUpdate)\n                .remove(remove)\n                .execute();\n\n            return this;\n\n            function getKey(brushOption, index) {\n                return (brushOption.id != null ? brushOption.id : tmpIdPrefix + index)\n                    + '-' + brushOption.brushType;\n            }\n\n            function oldGetKey(cover, index) {\n                return getKey(cover.__brushOption, index);\n            }\n\n            function addOrUpdate(newIndex, oldIndex) {\n                var newBrushOption = brushOptionList[newIndex];\n                // Consider setOption in event listener of brushSelect,\n                // where updating cover when creating should be forbiden.\n                if (oldIndex != null && oldCovers[oldIndex] === creatingCover) {\n                    newCovers[newIndex] = oldCovers[oldIndex];\n                }\n                else {\n                    var cover = newCovers[newIndex] = oldIndex != null\n                        ? (\n                            oldCovers[oldIndex].__brushOption = newBrushOption,\n                            oldCovers[oldIndex]\n                        )\n                        : endCreating(controller, createCover(controller, newBrushOption));\n                    updateCoverAfterCreation(controller, cover);\n                }\n            }\n\n            function remove(oldIndex) {\n                if (oldCovers[oldIndex] !== creatingCover) {\n                    controller.group.remove(oldCovers[oldIndex]);\n                }\n            }\n        },\n\n        unmount: function () {\n            if (__DEV__) {\n                if (!this._mounted) {\n                    return;\n                }\n            }\n\n            this.enableBrush(false);\n\n            // container may 'removeAll' outside.\n            clearCovers(this);\n            this._zr.remove(this.group);\n\n            if (__DEV__) {\n                this._mounted = false; // should be at last.\n            }\n\n            return this;\n        },\n\n        dispose: function () {\n            this.unmount();\n            this.off();\n        }\n    };\n\n    zrUtil.mixin(BrushController, Eventful);\n\n    function doEnableBrush(controller, brushOption) {\n        var zr = controller._zr;\n\n        // Consider roam, which takes globalPan too.\n        if (!controller._enableGlobalPan) {\n            interactionMutex.take(zr, MUTEX_RESOURCE_KEY, controller._uid);\n        }\n\n        each(controller._handlers, function (handler, eventName) {\n            zr.on(eventName, handler);\n        });\n\n        controller._brushType = brushOption.brushType;\n        controller._brushOption = zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n    }\n\n    function doDisableBrush(controller) {\n        var zr = controller._zr;\n\n        interactionMutex.release(zr, MUTEX_RESOURCE_KEY, controller._uid);\n\n        each(controller._handlers, function (handler, eventName) {\n            zr.off(eventName, handler);\n        });\n\n        controller._brushType = controller._brushOption = null;\n    }\n\n    function createCover(controller, brushOption) {\n        var cover = coverRenderers[brushOption.brushType].createCover(controller, brushOption);\n        cover.__brushOption = brushOption;\n        updateZ(cover, brushOption);\n        controller.group.add(cover);\n        return cover;\n    }\n\n    function endCreating(controller, creatingCover) {\n        var coverRenderer = getCoverRenderer(creatingCover);\n        if (coverRenderer.endCreating) {\n            coverRenderer.endCreating(controller, creatingCover);\n            updateZ(creatingCover, creatingCover.__brushOption);\n        }\n        return creatingCover;\n    }\n\n    function updateCoverShape(controller, cover) {\n        var brushOption = cover.__brushOption;\n        getCoverRenderer(cover).updateCoverShape(\n            controller, cover, brushOption.range, brushOption\n        );\n    }\n\n    function updateZ(cover, brushOption) {\n        var z = brushOption.z;\n        z == null && (z = COVER_Z);\n        cover.traverse(function (el) {\n            el.z = z;\n            el.z2 = z; // Consider in given container.\n        });\n    }\n\n    function updateCoverAfterCreation(controller, cover) {\n        getCoverRenderer(cover).updateCommon(controller, cover);\n        updateCoverShape(controller, cover);\n    }\n\n    function getCoverRenderer(cover) {\n        return coverRenderers[cover.__brushOption.brushType];\n    }\n\n    // return target panel or `true` (means global panel)\n    function getPanelByPoint(controller, e, localCursorPoint) {\n        var panels = controller._panels;\n        if (!panels) {\n            return true; // Global panel\n        }\n        var panel;\n        var transform = controller._transform;\n        each(panels, function (pn) {\n            pn.isTargetByCursor(e, localCursorPoint, transform) && (panel = pn);\n        });\n        return panel;\n    }\n\n    // Return a panel or true\n    function getPanelByCover(controller, cover) {\n        var panels = controller._panels;\n        if (!panels) {\n            return true; // Global panel\n        }\n        var panelId = cover.__brushOption.panelId;\n        // User may give cover without coord sys info,\n        // which is then treated as global panel.\n        return panelId != null ? panels[panelId] : true;\n    }\n\n    function clearCovers(controller) {\n        var covers = controller._covers;\n        var originalLength = covers.length;\n        each(covers, function (cover) {\n            controller.group.remove(cover);\n        }, controller);\n        covers.length = 0;\n\n        return !!originalLength;\n    }\n\n    function trigger(controller, opt) {\n        var areas = map(controller._covers, function (cover) {\n            var brushOption = cover.__brushOption;\n            var range = zrUtil.clone(brushOption.range);\n            return {\n                brushType: brushOption.brushType,\n                panelId: brushOption.panelId,\n                range: range\n            };\n        });\n\n        controller.trigger('brush', areas, {\n            isEnd: !!opt.isEnd,\n            removeOnClick: !!opt.removeOnClick\n        });\n    }\n\n    function shouldShowCover(controller) {\n        var track = controller._track;\n\n        if (!track.length) {\n            return false;\n        }\n\n        var p2 = track[track.length - 1];\n        var p1 = track[0];\n        var dx = p2[0] - p1[0];\n        var dy = p2[1] - p1[1];\n        var dist = mathPow(dx * dx + dy * dy, 0.5);\n\n        return dist > UNSELECT_THRESHOLD;\n    }\n\n    function getTrackEnds(track) {\n        var tail = track.length - 1;\n        tail < 0 && (tail = 0);\n        return [track[0], track[tail]];\n    }\n\n    function createBaseRectCover(doDrift, controller, brushOption, edgeNames) {\n        var cover = new graphic.Group();\n\n        cover.add(new graphic.Rect({\n            name: 'main',\n            style: makeStyle(brushOption),\n            silent: true,\n            draggable: true,\n            cursor: 'move',\n            drift: curry(doDrift, controller, cover, 'nswe'),\n            ondragend: curry(trigger, controller, {isEnd: true})\n        }));\n\n        each(\n            edgeNames,\n            function (name) {\n                cover.add(new graphic.Rect({\n                    name: name,\n                    style: {opacity: 0},\n                    draggable: true,\n                    silent: true,\n                    invisible: true,\n                    drift: curry(doDrift, controller, cover, name),\n                    ondragend: curry(trigger, controller, {isEnd: true})\n                }));\n            }\n        );\n\n        return cover;\n    }\n\n    function updateBaseRect(controller, cover, localRange, brushOption) {\n        var lineWidth = brushOption.brushStyle.lineWidth || 0;\n        var handleSize = mathMax(lineWidth, MIN_RESIZE_LINE_WIDTH);\n        var x = localRange[0][0];\n        var y = localRange[1][0];\n        var xa = x - lineWidth / 2;\n        var ya = y - lineWidth / 2;\n        var x2 = localRange[0][1];\n        var y2 = localRange[1][1];\n        var x2a = x2 - handleSize + lineWidth / 2;\n        var y2a = y2 - handleSize + lineWidth / 2;\n        var width = x2 - x;\n        var height = y2 - y;\n        var widtha = width + lineWidth;\n        var heighta = height + lineWidth;\n\n        updateRectShape(controller, cover, 'main', x, y, width, height);\n\n        if (brushOption.transformable) {\n            updateRectShape(controller, cover, 'w', xa, ya, handleSize, heighta);\n            updateRectShape(controller, cover, 'e', x2a, ya, handleSize, heighta);\n            updateRectShape(controller, cover, 'n', xa, ya, widtha, handleSize);\n            updateRectShape(controller, cover, 's', xa, y2a, widtha, handleSize);\n\n            updateRectShape(controller, cover, 'nw', xa, ya, handleSize, handleSize);\n            updateRectShape(controller, cover, 'ne', x2a, ya, handleSize, handleSize);\n            updateRectShape(controller, cover, 'sw', xa, y2a, handleSize, handleSize);\n            updateRectShape(controller, cover, 'se', x2a, y2a, handleSize, handleSize);\n        }\n    }\n\n    function updateCommon(controller, cover) {\n        var brushOption = cover.__brushOption;\n        var transformable = brushOption.transformable;\n\n        var mainEl = cover.childAt(0);\n        mainEl.useStyle(makeStyle(brushOption));\n        mainEl.attr({\n            silent: !transformable,\n            cursor: transformable ? 'move' : 'default'\n        });\n\n        each(\n            ['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw'],\n            function (name) {\n                var el = cover.childOfName(name);\n                var globalDir = getGlobalDirection(controller, name);\n\n                el && el.attr({\n                    silent: !transformable,\n                    invisible: !transformable,\n                    cursor: transformable ? CURSOR_MAP[globalDir] + '-resize' : null\n                });\n            }\n        );\n    }\n\n    function updateRectShape(controller, cover, name, x, y, w, h) {\n        var el = cover.childOfName(name);\n        el && el.setShape(pointsToRect(\n            clipByPanel(controller, cover, [[x, y], [x + w, y + h]])\n        ));\n    }\n\n    function makeStyle(brushOption) {\n        return zrUtil.defaults({strokeNoScale: true}, brushOption.brushStyle);\n    }\n\n    function formatRectRange(x, y, x2, y2) {\n        var min = [mathMin(x, x2), mathMin(y, y2)];\n        var max = [mathMax(x, x2), mathMax(y, y2)];\n\n        return [\n            [min[0], max[0]], // x range\n            [min[1], max[1]] // y range\n        ];\n    }\n\n    function getTransform(controller) {\n        return graphic.getTransform(controller.group);\n    }\n\n    function getGlobalDirection(controller, localDirection) {\n        if (localDirection.length > 1) {\n            localDirection = localDirection.split('');\n            var globalDir = [\n                getGlobalDirection(controller, localDirection[0]),\n                getGlobalDirection(controller, localDirection[1])\n            ];\n            (globalDir[0] === 'e' || globalDir[0] === 'w') && globalDir.reverse();\n            return globalDir.join('');\n        }\n        else {\n            var map = {w: 'left', e: 'right', n: 'top', s: 'bottom'};\n            var inverseMap = {left: 'w', right: 'e', top: 'n', bottom: 's'};\n            var globalDir = graphic.transformDirection(\n                map[localDirection], getTransform(controller)\n            );\n            return inverseMap[globalDir];\n        }\n    }\n\n    function driftRect(toRectRange, fromRectRange, controller, cover, name, dx, dy, e) {\n        var brushOption = cover.__brushOption;\n        var rectRange = toRectRange(brushOption.range);\n        var localDelta = toLocalDelta(controller, dx, dy);\n\n        each(name.split(''), function (namePart) {\n            var ind = DIRECTION_MAP[namePart];\n            rectRange[ind[0]][ind[1]] += localDelta[ind[0]];\n        });\n\n        brushOption.range = fromRectRange(formatRectRange(\n            rectRange[0][0], rectRange[1][0], rectRange[0][1], rectRange[1][1]\n        ));\n\n        updateCoverAfterCreation(controller, cover);\n        trigger(controller, {isEnd: false});\n    }\n\n    function driftPolygon(controller, cover, dx, dy, e) {\n        var range = cover.__brushOption.range;\n        var localDelta = toLocalDelta(controller, dx, dy);\n\n        each(range, function (point) {\n            point[0] += localDelta[0];\n            point[1] += localDelta[1];\n        });\n\n        updateCoverAfterCreation(controller, cover);\n        trigger(controller, {isEnd: false});\n    }\n\n    function toLocalDelta(controller, dx, dy) {\n        var thisGroup = controller.group;\n        var localD = thisGroup.transformCoordToLocal(dx, dy);\n        var localZero = thisGroup.transformCoordToLocal(0, 0);\n\n        return [localD[0] - localZero[0], localD[1] - localZero[1]];\n    }\n\n    function clipByPanel(controller, cover, data) {\n        var panel = getPanelByCover(controller, cover);\n\n        return (panel && panel !== true)\n            ? panel.clipPath(data, controller._transform)\n            : zrUtil.clone(data);\n    }\n\n    function pointsToRect(points) {\n        var xmin = mathMin(points[0][0], points[1][0]);\n        var ymin = mathMin(points[0][1], points[1][1]);\n        var xmax = mathMax(points[0][0], points[1][0]);\n        var ymax = mathMax(points[0][1], points[1][1]);\n\n        return {\n            x: xmin,\n            y: ymin,\n            width: xmax - xmin,\n            height: ymax - ymin\n        };\n    }\n\n    function resetCursor(controller, e, localCursorPoint) {\n        // Check active\n        if (!controller._brushType) {\n            return;\n        }\n\n        var zr = controller._zr;\n        var covers = controller._covers;\n        var currPanel = getPanelByPoint(controller, e, localCursorPoint);\n\n        // Check whether in covers.\n        if (!controller._dragging) {\n            for (var i = 0; i < covers.length; i++) {\n                var brushOption = covers[i].__brushOption;\n                if (currPanel\n                    && (currPanel === true || brushOption.panelId === currPanel.panelId)\n                    && coverRenderers[brushOption.brushType].contain(\n                        covers[i], localCursorPoint[0], localCursorPoint[1]\n                    )\n                ) {\n                    // Use cursor style set on cover.\n                    return;\n                }\n            }\n        }\n\n        currPanel && zr.setCursorStyle('crosshair');\n    }\n\n    function preventDefault(e) {\n        var rawE = e.event;\n        rawE.preventDefault && rawE.preventDefault();\n    }\n\n    function mainShapeContain(cover, x, y) {\n        return cover.childOfName('main').contain(x, y);\n    }\n\n    function updateCoverByMouse(controller, e, localCursorPoint, isEnd) {\n        var creatingCover = controller._creatingCover;\n        var panel = controller._creatingPanel;\n        var thisBrushOption = controller._brushOption;\n        var eventParams;\n\n        controller._track.push(localCursorPoint.slice());\n\n        if (shouldShowCover(controller) || creatingCover) {\n\n            if (panel && !creatingCover) {\n                thisBrushOption.brushMode === 'single' && clearCovers(controller);\n                var brushOption = zrUtil.clone(thisBrushOption);\n                brushOption.brushType = determineBrushType(brushOption.brushType, panel);\n                brushOption.panelId = panel === true ? null : panel.panelId;\n                creatingCover = controller._creatingCover = createCover(controller, brushOption);\n                controller._covers.push(creatingCover);\n            }\n\n            if (creatingCover) {\n                var coverRenderer = coverRenderers[determineBrushType(controller._brushType, panel)];\n                var coverBrushOption = creatingCover.__brushOption;\n\n                coverBrushOption.range = coverRenderer.getCreatingRange(\n                    clipByPanel(controller, creatingCover, controller._track)\n                );\n\n                if (isEnd) {\n                    endCreating(controller, creatingCover);\n                    coverRenderer.updateCommon(controller, creatingCover);\n                }\n\n                updateCoverShape(controller, creatingCover);\n\n                eventParams = {isEnd: isEnd};\n            }\n        }\n        else if (\n            isEnd\n            && thisBrushOption.brushMode === 'single'\n            && thisBrushOption.removeOnClick\n        ) {\n            // Help user to remove covers easily, only by a tiny drag, in 'single' mode.\n            // But a single click do not clear covers, because user may have casual\n            // clicks (for example, click on other component and do not expect covers\n            // disappear).\n            // Only some cover removed, trigger action, but not every click trigger action.\n            if (getPanelByPoint(controller, e, localCursorPoint) && clearCovers(controller)) {\n                eventParams = {isEnd: isEnd, removeOnClick: true};\n            }\n        }\n\n        return eventParams;\n    }\n\n    function determineBrushType(brushType, panel) {\n        if (brushType === 'auto') {\n            if (__DEV__) {\n                zrUtil.assert(\n                    panel && panel.defaultBrushType,\n                    'MUST have defaultBrushType when brushType is \"atuo\"'\n                );\n            }\n            return panel.defaultBrushType;\n        }\n        return brushType;\n    }\n\n    var mouseHandlers = {\n\n        mousedown: function (e) {\n            if (this._dragging) {\n                // In case some browser do not support globalOut,\n                // and release mose out side the browser.\n                handleDragEnd.call(this, e);\n            }\n            else if (!e.target || !e.target.draggable) {\n\n                preventDefault(e);\n\n                var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n\n                this._creatingCover = null;\n                var panel = this._creatingPanel = getPanelByPoint(this, e, localCursorPoint);\n\n                if (panel) {\n                    this._dragging = true;\n                    this._track = [localCursorPoint.slice()];\n                }\n            }\n        },\n\n        mousemove: function (e) {\n            var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n\n            resetCursor(this, e, localCursorPoint);\n\n            if (this._dragging) {\n\n                preventDefault(e);\n\n                var eventParams = updateCoverByMouse(this, e, localCursorPoint, false);\n\n                eventParams && trigger(this, eventParams);\n            }\n        },\n\n        mouseup: handleDragEnd //,\n\n        // FIXME\n        // in tooltip, globalout should not be triggered.\n        // globalout: handleDragEnd\n    };\n\n    function handleDragEnd(e) {\n        if (this._dragging) {\n\n            preventDefault(e);\n\n            var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n            var eventParams = updateCoverByMouse(this, e, localCursorPoint, true);\n\n            this._dragging = false;\n            this._track = [];\n            this._creatingCover = null;\n\n            // trigger event shoule be at final, after procedure will be nested.\n            eventParams && trigger(this, eventParams);\n        }\n    }\n\n    /**\n     * key: brushType\n     * @type {Object}\n     */\n    var coverRenderers = {\n\n        lineX: getLineRenderer(0),\n\n        lineY: getLineRenderer(1),\n\n        rect: {\n            createCover: function (controller, brushOption) {\n                return createBaseRectCover(\n                    curry(\n                        driftRect,\n                        function (range) {\n                            return range;\n                        },\n                        function (range) {\n                            return range;\n                        }\n                    ),\n                    controller,\n                    brushOption,\n                    ['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw']\n                );\n            },\n            getCreatingRange: function (localTrack) {\n                var ends = getTrackEnds(localTrack);\n                return formatRectRange(ends[1][0], ends[1][1], ends[0][0], ends[0][1]);\n            },\n            updateCoverShape: function (controller, cover, localRange, brushOption) {\n                updateBaseRect(controller, cover, localRange, brushOption);\n            },\n            updateCommon: updateCommon,\n            contain: mainShapeContain\n        },\n\n        polygon: {\n            createCover: function (controller, brushOption) {\n                var cover = new graphic.Group();\n\n                // Do not use graphic.Polygon because graphic.Polyline do not close the\n                // border of the shape when drawing, which is a better experience for user.\n                cover.add(new graphic.Polyline({\n                    name: 'main',\n                    style: makeStyle(brushOption),\n                    silent: true\n                }));\n\n                return cover;\n            },\n            getCreatingRange: function (localTrack) {\n                return localTrack;\n            },\n            endCreating: function (controller, cover) {\n                cover.remove(cover.childAt(0));\n                // Use graphic.Polygon close the shape.\n                cover.add(new graphic.Polygon({\n                    name: 'main',\n                    draggable: true,\n                    drift: curry(driftPolygon, controller, cover),\n                    ondragend: curry(trigger, controller, {isEnd: true})\n                }));\n            },\n            updateCoverShape: function (controller, cover, localRange, brushOption) {\n                cover.childAt(0).setShape({\n                    points: clipByPanel(controller, cover, localRange)\n                });\n            },\n            updateCommon: updateCommon,\n            contain: mainShapeContain\n        }\n    };\n\n    function getLineRenderer(xyIndex) {\n        return {\n            createCover: function (controller, brushOption) {\n                return createBaseRectCover(\n                    curry(\n                        driftRect,\n                        function (range) {\n                            var rectRange = [range, [0, 100]];\n                            xyIndex && rectRange.reverse();\n                            return rectRange;\n                        },\n                        function (rectRange) {\n                            return rectRange[xyIndex];\n                        }\n                    ),\n                    controller,\n                    brushOption,\n                    [['w', 'e'], ['n', 's']][xyIndex]\n                );\n            },\n            getCreatingRange: function (localTrack) {\n                var ends = getTrackEnds(localTrack);\n                var min = mathMin(ends[0][xyIndex], ends[1][xyIndex]);\n                var max = mathMax(ends[0][xyIndex], ends[1][xyIndex]);\n\n                return [min, max];\n            },\n            updateCoverShape: function (controller, cover, localRange, brushOption) {\n                var otherExtent;\n                // If brushWidth not specified, fit the panel.\n                var panel = getPanelByCover(controller, cover);\n                if (panel !== true && panel.getLinearBrushOtherExtent) {\n                    otherExtent = panel.getLinearBrushOtherExtent(\n                        xyIndex, controller._transform\n                    );\n                }\n                else {\n                    var zr = controller._zr;\n                    otherExtent = [0, [zr.getWidth(), zr.getHeight()][1 - xyIndex]];\n                }\n                var rectRange = [localRange, otherExtent];\n                xyIndex && rectRange.reverse();\n\n                updateBaseRect(controller, cover, rectRange, brushOption);\n            },\n            updateCommon: updateCommon,\n            contain: mainShapeContain\n        };\n    }\n\n    module.exports = BrushController;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/BrushController.js\n// module id = 1054\n// module chunks = 0 1 2","\n\n    var helper = {};\n\n    var IRRELEVANT_EXCLUDES = {'axisPointer': 1, 'tooltip': 1, 'brush': 1};\n\n    /**\n     * Avoid that: mouse click on a elements that is over geo or graph,\n     * but roam is triggered.\n     */\n    helper.onIrrelevantElement = function (e, api, targetCoordSysModel) {\n        var model = api.getComponentByElement(e.topTarget);\n        // If model is axisModel, it works only if it is injected with coordinateSystem.\n        var coordSys = model && model.coordinateSystem;\n        return model\n            && model !== targetCoordSysModel\n            && !IRRELEVANT_EXCLUDES[model.mainType]\n            && (coordSys && coordSys.model !== targetCoordSysModel);\n    };\n\n    module.exports = helper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/cursorHelper.js\n// module id = 1055\n// module chunks = 0 1 2","/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\n\n\n\n    var textHelper = require('../helper/text');\n    var BoundingRect = require('../../core/BoundingRect');\n\n    var tmpRect = new BoundingRect();\n\n    var RectText = function () {};\n\n    RectText.prototype = {\n\n        constructor: RectText,\n\n        /**\n         * Draw text in a rect with specified position.\n         * @param  {CanvasRenderingContext2D} ctx\n         * @param  {Object} rect Displayable rect\n         */\n        drawRectText: function (ctx, rect) {\n            var style = this.style;\n\n            rect = style.textRect || rect;\n\n            // Optimize, avoid normalize every time.\n            this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n            var text = style.text;\n\n            // Convert to string\n            text != null && (text += '');\n\n            if (!textHelper.needDrawText(text, style)) {\n                return;\n            }\n\n            // FIXME\n            ctx.save();\n\n            // Transform rect to view space\n            var transform = this.transform;\n            if (!style.transformText) {\n                if (transform) {\n                    tmpRect.copy(rect);\n                    tmpRect.applyTransform(transform);\n                    rect = tmpRect;\n                }\n            }\n            else {\n                this.setTransform(ctx);\n            }\n\n            // transformText and textRotation can not be used at the same time.\n            textHelper.renderText(this, ctx, text, style, rect);\n\n            ctx.restore();\n        }\n    };\n\n    module.exports = RectText;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/mixin/RectText.js\n// module id = 1058\n// module chunks = 0 1 2","\n    module.exports = {\n        /**\n         * 线段包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            var _a = 0;\n            var _b = x0;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l)\n                || (y < y0 - _l && y < y1 - _l)\n                || (x > x0 + _l && x > x1 + _l)\n                || (x < x0 - _l && x < x1 - _l)\n            ) {\n                return false;\n            }\n\n            if (x0 !== x1) {\n                _a = (y0 - y1) / (x0 - x1);\n                _b = (x0 * y1 - x1 * y0) / (x0 - x1) ;\n            }\n            else {\n                return Math.abs(x - x0) <= _l / 2;\n            }\n            var tmp = _a * x - y + _b;\n            var _s = tmp * tmp / (_a * _a + 1);\n            return _s <= _l / 2 * _l / 2;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/contain/line.js\n// module id = 1059\n// module chunks = 0 1 2","\n\n    var curve = require('../core/curve');\n\n    module.exports = {\n        /**\n         * 二次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.quadraticProjectPoint(\n                x0, y0, x1, y1, x2, y2,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/contain/quadratic.js\n// module id = 1060\n// module chunks = 0 1 2","\n    module.exports = function windingLine(x0, y0, x1, y1, x, y) {\n        if ((y > y0 && y > y1) || (y < y0 && y < y1)) {\n            return 0;\n        }\n        // Ignore horizontal line\n        if (y1 === y0) {\n            return 0;\n        }\n        var dir = y1 < y0 ? 1 : -1;\n        var t = (y - y0) / (y1 - y0);\n\n        // Avoid winding error when intersection point is the connect point of two line of polygon\n        if (t === 1 || t === 0) {\n            dir = y1 < y0 ? 0.5 : -0.5;\n        }\n\n        var x_ = t * (x1 - x0) + x0;\n\n        return x_ > x ? dir : 0;\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/contain/windingLine.js\n// module id = 1061\n// module chunks = 0 1 2","/**\n * Text element\n * @module zrender/graphic/Text\n *\n * TODO Wrapping\n *\n * Text not support gradient\n */\n\n\n\n    var Displayable = require('./Displayable');\n    var zrUtil = require('../core/util');\n    var textContain = require('../contain/text');\n    var textHelper = require('./helper/text');\n\n    /**\n     * @alias zrender/graphic/Text\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    var Text = function (opts) {\n        Displayable.call(this, opts);\n    };\n\n    Text.prototype = {\n\n        constructor: Text,\n\n        type: 'text',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n\n            // Optimize, avoid normalize every time.\n            this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n            // Use props with prefix 'text'.\n            style.fill = style.stroke = style.shadowBlur = style.shadowColor =\n                style.shadowOffsetX = style.shadowOffsetY = null;\n\n            var text = style.text;\n            // Convert to string\n            text != null && (text += '');\n\n            // Always bind style\n            style.bind(ctx, this, prevEl);\n\n            if (!textHelper.needDrawText(text, style)) {\n                return;\n            }\n\n            this.setTransform(ctx);\n\n            textHelper.renderText(this, ctx, text, style);\n\n            this.restoreTransform(ctx);\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n\n            // Optimize, avoid normalize every time.\n            this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n            if (!this._rect) {\n                var text = style.text;\n                text != null ? (text += '') : (text = '');\n\n                var rect = textContain.getBoundingRect(\n                    style.text + '',\n                    style.font,\n                    style.textAlign,\n                    style.textVerticalAlign,\n                    style.textPadding,\n                    style.rich\n                );\n\n                rect.x += style.x || 0;\n                rect.y += style.y || 0;\n\n                if (textHelper.getStroke(style.textStroke, style.textStrokeWidth)) {\n                    var w = style.textStrokeWidth;\n                    rect.x -= w / 2;\n                    rect.y -= w / 2;\n                    rect.width += w;\n                    rect.height += w;\n                }\n\n                this._rect = rect;\n            }\n\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(Text, Displayable);\n\n    module.exports = Text;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/Text.js\n// module id = 1062\n// module chunks = 0 1 2","'use strict';\n\n\n    var zrUtil = require('../core/util');\n\n    var Gradient = require('./Gradient');\n\n    /**\n     * x, y, x2, y2 are all percent from 0 to 1\n     * @param {number} [x=0]\n     * @param {number} [y=0]\n     * @param {number} [x2=1]\n     * @param {number} [y2=0]\n     * @param {Array.<Object>} colorStops\n     * @param {boolean} [globalCoord=false]\n     */\n    var LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'linear', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0 : x;\n\n        this.y = y == null ? 0 : y;\n\n        this.x2 = x2 == null ? 1 : x2;\n\n        this.y2 = y2 == null ? 0 : y2;\n\n        // Can be cloned\n        this.type = 'linear';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    LinearGradient.prototype = {\n\n        constructor: LinearGradient\n    };\n\n    zrUtil.inherits(LinearGradient, Gradient);\n\n    module.exports = LinearGradient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/LinearGradient.js\n// module id = 1063\n// module chunks = 0 1 2","/*!\n * ZRender, a high performance 2d drawing library.\n *\n * Copyright (c) 2013, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n */\n// Global defines\n\n    var guid = require('./core/guid');\n    var env = require('./core/env');\n    var zrUtil = require('./core/util');\n\n    var Handler = require('./Handler');\n    var Storage = require('./Storage');\n    var Animation = require('./animation/Animation');\n    var HandlerProxy = require('./dom/HandlerProxy');\n\n    var useVML = !env.canvasSupported;\n\n    var painterCtors = {\n        canvas: require('./Painter')\n    };\n\n    var instances = {};    // ZRender实例map索引\n\n    var zrender = {};\n\n    /**\n     * @type {string}\n     */\n    zrender.version = '3.6.3';\n\n    /**\n     * Initializing a zrender instance\n     * @param {HTMLElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @return {module:zrender/ZRender}\n     */\n    zrender.init = function (dom, opts) {\n        var zr = new ZRender(guid(), dom, opts);\n        instances[zr.id] = zr;\n        return zr;\n    };\n\n    /**\n     * Dispose zrender instance\n     * @param {module:zrender/ZRender} zr\n     */\n    zrender.dispose = function (zr) {\n        if (zr) {\n            zr.dispose();\n        }\n        else {\n            for (var key in instances) {\n                if (instances.hasOwnProperty(key)) {\n                    instances[key].dispose();\n                }\n            }\n            instances = {};\n        }\n\n        return zrender;\n    };\n\n    /**\n     * Get zrender instance by id\n     * @param {string} id zrender instance id\n     * @return {module:zrender/ZRender}\n     */\n    zrender.getInstance = function (id) {\n        return instances[id];\n    };\n\n    zrender.registerPainter = function (name, Ctor) {\n        painterCtors[name] = Ctor;\n    };\n\n    function delInstance(id) {\n        delete instances[id];\n    }\n\n    /**\n     * @module zrender/ZRender\n     */\n    /**\n     * @constructor\n     * @alias module:zrender/ZRender\n     * @param {string} id\n     * @param {HTMLElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     */\n    var ZRender = function (id, dom, opts) {\n\n        opts = opts || {};\n\n        /**\n         * @type {HTMLDomElement}\n         */\n        this.dom = dom;\n\n        /**\n         * @type {string}\n         */\n        this.id = id;\n\n        var self = this;\n        var storage = new Storage();\n\n        var rendererType = opts.renderer;\n        // TODO WebGL\n        if (useVML) {\n            if (!painterCtors.vml) {\n                throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n            }\n            rendererType = 'vml';\n        }\n        else if (!rendererType || !painterCtors[rendererType]) {\n            rendererType = 'canvas';\n        }\n        var painter = new painterCtors[rendererType](dom, storage, opts);\n\n        this.storage = storage;\n        this.painter = painter;\n\n        var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;\n        this.handler = new Handler(storage, painter, handerProxy, painter.root);\n\n        /**\n         * @type {module:zrender/animation/Animation}\n         */\n        this.animation = new Animation({\n            stage: {\n                update: zrUtil.bind(this.flush, this)\n            }\n        });\n        this.animation.start();\n\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._needsRefresh;\n\n        // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n        // FIXME 有点ugly\n        var oldDelFromStorage = storage.delFromStorage;\n        var oldAddToStorage = storage.addToStorage;\n\n        storage.delFromStorage = function (el) {\n            oldDelFromStorage.call(storage, el);\n\n            el && el.removeSelfFromZr(self);\n        };\n\n        storage.addToStorage = function (el) {\n            oldAddToStorage.call(storage, el);\n\n            el.addSelfToZr(self);\n        };\n    };\n\n    ZRender.prototype = {\n\n        constructor: ZRender,\n        /**\n         * 获取实例唯一标识\n         * @return {string}\n         */\n        getId: function () {\n            return this.id;\n        },\n\n        /**\n         * 添加元素\n         * @param  {module:zrender/Element} el\n         */\n        add: function (el) {\n            this.storage.addRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * 删除元素\n         * @param  {module:zrender/Element} el\n         */\n        remove: function (el) {\n            this.storage.delRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Change configuration of layer\n         * @param {string} zLevel\n         * @param {Object} config\n         * @param {string} [config.clearColor=0] Clear color\n         * @param {string} [config.motionBlur=false] If enable motion blur\n         * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n        */\n        configLayer: function (zLevel, config) {\n            this.painter.configLayer(zLevel, config);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Repaint the canvas immediately\n         */\n        refreshImmediately: function () {\n            // var start = new Date();\n            // Clear needsRefresh ahead to avoid something wrong happens in refresh\n            // Or it will cause zrender refreshes again and again.\n            this._needsRefresh = false;\n            this.painter.refresh();\n            /**\n             * Avoid trigger zr.refresh in Element#beforeUpdate hook\n             */\n            this._needsRefresh = false;\n            // var end = new Date();\n\n            // var log = document.getElementById('log');\n            // if (log) {\n            //     log.innerHTML = log.innerHTML + '<br>' + (end - start);\n            // }\n        },\n\n        /**\n         * Mark and repaint the canvas in the next frame of browser\n         */\n        refresh: function() {\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Perform all refresh\n         */\n        flush: function () {\n            if (this._needsRefresh) {\n                this.refreshImmediately();\n            }\n            if (this._needsRefreshHover) {\n                this.refreshHoverImmediately();\n            }\n        },\n\n        /**\n         * Add element to hover layer\n         * @param  {module:zrender/Element} el\n         * @param {Object} style\n         */\n        addHover: function (el, style) {\n            if (this.painter.addHover) {\n                this.painter.addHover(el, style);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Add element from hover layer\n         * @param  {module:zrender/Element} el\n         */\n        removeHover: function (el) {\n            if (this.painter.removeHover) {\n                this.painter.removeHover(el);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Clear all hover elements in hover layer\n         * @param  {module:zrender/Element} el\n         */\n        clearHover: function () {\n            if (this.painter.clearHover) {\n                this.painter.clearHover();\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Refresh hover in next frame\n         */\n        refreshHover: function () {\n            this._needsRefreshHover = true;\n        },\n\n        /**\n         * Refresh hover immediately\n         */\n        refreshHoverImmediately: function () {\n            this._needsRefreshHover = false;\n            this.painter.refreshHover && this.painter.refreshHover();\n        },\n\n        /**\n         * Resize the canvas.\n         * Should be invoked when container size is changed\n         * @param {Object} [opts]\n         * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n         * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n         */\n        resize: function(opts) {\n            opts = opts || {};\n            this.painter.resize(opts.width, opts.height);\n            this.handler.resize();\n        },\n\n        /**\n         * Stop and clear all animation immediately\n         */\n        clearAnimation: function () {\n            this.animation.clear();\n        },\n\n        /**\n         * Get container width\n         */\n        getWidth: function() {\n            return this.painter.getWidth();\n        },\n\n        /**\n         * Get container height\n         */\n        getHeight: function() {\n            return this.painter.getHeight();\n        },\n\n        /**\n         * Export the canvas as Base64 URL\n         * @param {string} type\n         * @param {string} [backgroundColor='#fff']\n         * @return {string} Base64 URL\n         */\n        // toDataURL: function(type, backgroundColor) {\n        //     return this.painter.getRenderedCanvas({\n        //         backgroundColor: backgroundColor\n        //     }).toDataURL(type);\n        // },\n\n        /**\n         * Converting a path to image.\n         * It has much better performance of drawing image rather than drawing a vector path.\n         * @param {module:zrender/graphic/Path} e\n         * @param {number} width\n         * @param {number} height\n         */\n        pathToImage: function(e, dpr) {\n            return this.painter.pathToImage(e, dpr);\n        },\n\n        /**\n         * Set default cursor\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            this.handler.setCursorStyle(cursorStyle);\n        },\n\n        /**\n         * Find hovered element\n         * @param {number} x\n         * @param {number} y\n         * @return {Object} {target, topTarget}\n         */\n        findHover: function (x, y) {\n            return this.handler.findHover(x, y);\n        },\n\n        /**\n         * Bind event\n         *\n         * @param {string} eventName Event name\n         * @param {Function} eventHandler Handler function\n         * @param {Object} [context] Context object\n         */\n        on: function(eventName, eventHandler, context) {\n            this.handler.on(eventName, eventHandler, context);\n        },\n\n        /**\n         * Unbind event\n         * @param {string} eventName Event name\n         * @param {Function} [eventHandler] Handler function\n         */\n        off: function(eventName, eventHandler) {\n            this.handler.off(eventName, eventHandler);\n        },\n\n        /**\n         * Trigger event manually\n         *\n         * @param {string} eventName Event name\n         * @param {event=} event Event object\n         */\n        trigger: function (eventName, event) {\n            this.handler.trigger(eventName, event);\n        },\n\n\n        /**\n         * Clear all objects and the canvas.\n         */\n        clear: function () {\n            this.storage.delRoot();\n            this.painter.clear();\n        },\n\n        /**\n         * Dispose self.\n         */\n        dispose: function () {\n            this.animation.stop();\n\n            this.clear();\n            this.storage.dispose();\n            this.painter.dispose();\n            this.handler.dispose();\n\n            this.animation =\n            this.storage =\n            this.painter =\n            this.handler = null;\n\n            delInstance(this.id);\n        }\n    };\n\n    module.exports = zrender;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/zrender.js\n// module id = 1064\n// module chunks = 0 1 2","// FIXME Better way to pack data in graphic element\n\n\n    require('./axisPointer');\n\n    require('./tooltip/TooltipModel');\n\n    require('./tooltip/TooltipView');\n\n\n    // Show tip action\n    /**\n     * @action\n     * @property {string} type\n     * @property {number} seriesIndex\n     * @property {number} dataIndex\n     * @property {number} [x]\n     * @property {number} [y]\n     */\n    require('../echarts').registerAction(\n        {\n            type: 'showTip',\n            event: 'showTip',\n            update: 'tooltip:manuallyShowTip'\n        },\n        // noop\n        function () {}\n    );\n    // Hide tip action\n    require('../echarts').registerAction(\n        {\n            type: 'hideTip',\n            event: 'hideTip',\n            update: 'tooltip:manuallyHideTip'\n        },\n        // noop\n        function () {}\n    );\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/tooltip.js\n// module id = 1065\n// module chunks = 0 1 2","\n\n    // Do not contain scrollable legend, for sake of file size.\n\n    require('./legend/LegendModel');\n    require('./legend/legendAction');\n    require('./legend/LegendView');\n\n    var echarts = require('../echarts');\n    // Series Filter\n    echarts.registerProcessor(require('./legend/legendFilter'));\n\n    require('../model/Component').registerSubTypeDefaulter('legend', function () {\n        // Default 'plain' when no type specified.\n        return 'plain';\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend.js\n// module id = 1066\n// module chunks = 0 1 2","\n    module.exports = function (seriesType, ecModel) {\n        var legendModels = ecModel.findComponents({\n            mainType: 'legend'\n        });\n        if (!legendModels || !legendModels.length) {\n            return;\n        }\n        ecModel.eachSeriesByType(seriesType, function (series) {\n            var data = series.getData();\n            data.filterSelf(function (idx) {\n                var name = data.getName(idx);\n                // If in any legend component the status is not selected.\n                for (var i = 0; i < legendModels.length; i++) {\n                    if (!legendModels[i].isSelected(name)) {\n                        return false;\n                    }\n                }\n                return true;\n            }, this);\n        }, this);\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/processor/dataFilter.js\n// module id = 1067\n// module chunks = 0 2","\n\n    require('./toolbox/ToolboxModel');\n    require('./toolbox/ToolboxView');\n\n    require('./toolbox/feature/SaveAsImage');\n    require('./toolbox/feature/MagicType');\n    require('./toolbox/feature/DataView');\n    require('./toolbox/feature/DataZoom');\n    require('./toolbox/feature/Restore');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox.js\n// module id = 1068\n// module chunks = 0 1 2","\n\n    var ATTR = '\\0_ec_interaction_mutex';\n\n    var interactionMutex = {\n\n        take: function (zr, resourceKey, userKey) {\n            var store = getStore(zr);\n            store[resourceKey] = userKey;\n        },\n\n        release: function (zr, resourceKey, userKey) {\n            var store = getStore(zr);\n            var uKey = store[resourceKey];\n\n            if (uKey === userKey) {\n                store[resourceKey] = null;\n            }\n        },\n\n        isTaken: function (zr, resourceKey) {\n            return !!getStore(zr)[resourceKey];\n        }\n    };\n\n    function getStore(zr) {\n        return zr[ATTR] || (zr[ATTR] = {});\n    }\n\n    /**\n     * payload: {\n     *     type: 'takeGlobalCursor',\n     *     key: 'dataZoomSelect', or 'brush', or ...,\n     *         If no userKey, release global cursor.\n     * }\n     */\n    require('../../echarts').registerAction(\n        {type: 'takeGlobalCursor', event: 'globalCursorTaken', update: 'update'},\n        function () {}\n    );\n\n    module.exports = interactionMutex;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/interactionMutex.js\n// module id = 1069\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n    var modelUtil = require('../../util/model');\n    var brushHelper = require('./brushHelper');\n\n    var each = zrUtil.each;\n    var indexOf = zrUtil.indexOf;\n    var curry = zrUtil.curry;\n\n    var COORD_CONVERTS = ['dataToPoint', 'pointToData'];\n\n    // FIXME\n    // how to genarialize to more coordinate systems.\n    var INCLUDE_FINDER_MAIN_TYPES = [\n        'grid', 'xAxis', 'yAxis', 'geo', 'graph',\n        'polar', 'radiusAxis', 'angleAxis', 'bmap'\n    ];\n\n    /**\n     * [option in constructor]:\n     * {\n     *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n     * }\n     *\n     *\n     * [targetInfo]:\n     *\n     * There can be multiple axes in a single targetInfo. Consider the case\n     * of `grid` component, a targetInfo represents a grid which contains one or more\n     * cartesian and one or more axes. And consider the case of parallel system,\n     * which has multiple axes in a coordinate system.\n     * Can be {\n     *     panelId: ...,\n     *     coordSys: <a representitive cartesian in grid (first cartesian by default)>,\n     *     coordSyses: all cartesians.\n     *     gridModel: <grid component>\n     *     xAxes: correspond to coordSyses on index\n     *     yAxes: correspond to coordSyses on index\n     * }\n     * or {\n     *     panelId: ...,\n     *     coordSys: <geo coord sys>\n     *     coordSyses: [<geo coord sys>]\n     *     geoModel: <geo component>\n     * }\n     *\n     *\n     * [panelOpt]:\n     *\n     * Make from targetInfo. Input to BrushController.\n     * {\n     *     panelId: ...,\n     *     rect: ...\n     * }\n     *\n     *\n     * [area]:\n     *\n     * Generated by BrushController or user input.\n     * {\n     *     panelId: Used to locate coordInfo directly. If user inpput, no panelId.\n     *     brushType: determine how to convert to/from coord('rect' or 'polygon' or 'lineX/Y').\n     *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n     *     range: pixel range.\n     *     coordRange: representitive coord range (the first one of coordRanges).\n     *     coordRanges: <Array> coord ranges, used in multiple cartesian in one grid.\n     * }\n     */\n\n    /**\n     * @param {Object} option contains Index/Id/Name of xAxis/yAxis/geo/grid\n     *        Each can be {number|Array.<number>}. like: {xAxisIndex: [3, 4]}\n     * @param {module:echarts/model/Global} ecModel\n     * @param {Object} [opt]\n     * @param {Array.<string>} [opt.include] include coordinate system types.\n     */\n    function BrushTargetManager(option, ecModel, opt) {\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        var targetInfoList = this._targetInfoList = [];\n        var info = {};\n        var foundCpts = parseFinder(ecModel, option);\n\n        each(targetInfoBuilders, function (builder, type) {\n            if (!opt || !opt.include || indexOf(opt.include, type) >= 0) {\n                builder(foundCpts, targetInfoList, info);\n            }\n        });\n    }\n\n    var proto = BrushTargetManager.prototype;\n\n    proto.setOutputRanges = function (areas, ecModel) {\n        this.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n            (area.coordRanges || (area.coordRanges = [])).push(coordRange);\n            // area.coordRange is the first of area.coordRanges\n            if (!area.coordRange) {\n                area.coordRange = coordRange;\n                // In 'category' axis, coord to pixel is not reversible, so we can not\n                // rebuild range by coordRange accrately, which may bring trouble when\n                // brushing only one item. So we use __rangeOffset to rebuilding range\n                // by coordRange. And this it only used in brush component so it is no\n                // need to be adapted to coordRanges.\n                var result = coordConvert[area.brushType](0, coordSys, coordRange);\n                area.__rangeOffset = {\n                    offset: diffProcessor[area.brushType](result.values, area.range, [1, 1]),\n                    xyMinMax: result.xyMinMax\n                };\n            }\n        });\n    };\n\n    proto.matchOutputRanges = function (areas, ecModel, cb) {\n        each(areas, function (area) {\n            var targetInfo = this.findTargetInfo(area, ecModel);\n\n            if (targetInfo && targetInfo !== true) {\n                zrUtil.each(\n                    targetInfo.coordSyses,\n                    function (coordSys) {\n                        var result = coordConvert[area.brushType](1, coordSys, area.range);\n                        cb(area, result.values, coordSys, ecModel);\n                    }\n                );\n            }\n        }, this);\n    };\n\n    proto.setInputRanges = function (areas, ecModel) {\n        each(areas, function (area) {\n            var targetInfo = this.findTargetInfo(area, ecModel);\n\n            if (__DEV__) {\n                zrUtil.assert(\n                    !targetInfo || targetInfo === true || area.coordRange,\n                    'coordRange must be specified when coord index specified.'\n                );\n                zrUtil.assert(\n                    !targetInfo || targetInfo !== true || area.range,\n                    'range must be specified in global brush.'\n                );\n            }\n\n            area.range = area.range || [];\n\n            // convert coordRange to global range and set panelId.\n            if (targetInfo && targetInfo !== true) {\n                area.panelId = targetInfo.panelId;\n                // (1) area.range shoule always be calculate from coordRange but does\n                // not keep its original value, for the sake of the dataZoom scenario,\n                // where area.coordRange remains unchanged but area.range may be changed.\n                // (2) Only support converting one coordRange to pixel range in brush\n                // component. So do not consider `coordRanges`.\n                // (3) About __rangeOffset, see comment above.\n                var result = coordConvert[area.brushType](0, targetInfo.coordSys, area.coordRange);\n                var rangeOffset = area.__rangeOffset;\n                area.range = rangeOffset\n                    ? diffProcessor[area.brushType](\n                        result.values,\n                        rangeOffset.offset,\n                        getScales(result.xyMinMax, rangeOffset.xyMinMax)\n                    )\n                    : result.values;\n            }\n        }, this);\n    };\n\n    proto.makePanelOpts = function (api, getDefaultBrushType) {\n        return zrUtil.map(this._targetInfoList, function (targetInfo) {\n            var rect = targetInfo.getPanelRect();\n            return {\n                panelId: targetInfo.panelId,\n                defaultBrushType: getDefaultBrushType && getDefaultBrushType(targetInfo),\n                clipPath: brushHelper.makeRectPanelClipPath(rect),\n                isTargetByCursor: brushHelper.makeRectIsTargetByCursor(\n                    rect, api, targetInfo.coordSysModel\n                ),\n                getLinearBrushOtherExtent: brushHelper.makeLinearBrushOtherExtent(rect)\n            };\n        });\n    };\n\n    proto.controlSeries = function (area, seriesModel, ecModel) {\n        // Check whether area is bound in coord, and series do not belong to that coord.\n        // If do not do this check, some brush (like lineX) will controll all axes.\n        var targetInfo = this.findTargetInfo(area, ecModel);\n        return targetInfo === true || (\n            targetInfo && indexOf(targetInfo.coordSyses, seriesModel.coordinateSystem) >= 0\n        );\n    };\n\n    /**\n     * If return Object, a coord found.\n     * If reutrn true, global found.\n     * Otherwise nothing found.\n     *\n     * @param {Object} area\n     * @param {Array} targetInfoList\n     * @return {Object|boolean}\n     */\n    proto.findTargetInfo = function (area, ecModel) {\n        var targetInfoList = this._targetInfoList;\n        var foundCpts = parseFinder(ecModel, area);\n\n        for (var i = 0; i < targetInfoList.length; i++) {\n            var targetInfo = targetInfoList[i];\n            var areaPanelId = area.panelId;\n            if (areaPanelId) {\n                if (targetInfo.panelId === areaPanelId) {\n                    return targetInfo;\n                }\n            }\n            else {\n                for (var i = 0; i < targetInfoMatchers.length; i++) {\n                    if (targetInfoMatchers[i](foundCpts, targetInfo)) {\n                        return targetInfo;\n                    }\n                }\n            }\n        }\n\n        return true;\n    };\n\n    function formatMinMax(minMax) {\n        minMax[0] > minMax[1] && minMax.reverse();\n        return minMax;\n    }\n\n    function parseFinder(ecModel, option) {\n        return modelUtil.parseFinder(\n            ecModel, option, {includeMainTypes: INCLUDE_FINDER_MAIN_TYPES}\n        );\n    }\n\n    var targetInfoBuilders = {\n\n        grid: function (foundCpts, targetInfoList) {\n            var xAxisModels = foundCpts.xAxisModels;\n            var yAxisModels = foundCpts.yAxisModels;\n            var gridModels = foundCpts.gridModels;\n            // Remove duplicated.\n            var gridModelMap = zrUtil.createHashMap();\n            var xAxesHas = {};\n            var yAxesHas = {};\n\n            if (!xAxisModels && !yAxisModels && !gridModels) {\n                return;\n            }\n\n            each(xAxisModels, function (axisModel) {\n                var gridModel = axisModel.axis.grid.model;\n                gridModelMap.set(gridModel.id, gridModel);\n                xAxesHas[gridModel.id] = true;\n            });\n            each(yAxisModels, function (axisModel) {\n                var gridModel = axisModel.axis.grid.model;\n                gridModelMap.set(gridModel.id, gridModel);\n                yAxesHas[gridModel.id] = true;\n            });\n            each(gridModels, function (gridModel) {\n                gridModelMap.set(gridModel.id, gridModel);\n                xAxesHas[gridModel.id] = true;\n                yAxesHas[gridModel.id] = true;\n            });\n\n            gridModelMap.each(function (gridModel) {\n                var grid = gridModel.coordinateSystem;\n                var cartesians = [];\n\n                each(grid.getCartesians(), function (cartesian, index) {\n                    if (indexOf(xAxisModels, cartesian.getAxis('x').model) >= 0\n                        || indexOf(yAxisModels, cartesian.getAxis('y').model) >= 0\n                    ) {\n                        cartesians.push(cartesian);\n                    }\n                });\n                targetInfoList.push({\n                    panelId: 'grid--' + gridModel.id,\n                    gridModel: gridModel,\n                    coordSysModel: gridModel,\n                    // Use the first one as the representitive coordSys.\n                    coordSys: cartesians[0],\n                    coordSyses: cartesians,\n                    getPanelRect: panelRectBuilder.grid,\n                    xAxisDeclared: xAxesHas[gridModel.id],\n                    yAxisDeclared: yAxesHas[gridModel.id]\n                });\n            });\n        },\n\n        geo: function (foundCpts, targetInfoList) {\n            each(foundCpts.geoModels, function (geoModel) {\n                var coordSys = geoModel.coordinateSystem;\n                targetInfoList.push({\n                    panelId: 'geo--' + geoModel.id,\n                    geoModel: geoModel,\n                    coordSysModel: geoModel,\n                    coordSys: coordSys,\n                    coordSyses: [coordSys],\n                    getPanelRect: panelRectBuilder.geo\n                });\n            });\n        }\n    };\n\n    var targetInfoMatchers = [\n\n        // grid\n        function (foundCpts, targetInfo) {\n            var xAxisModel = foundCpts.xAxisModel;\n            var yAxisModel = foundCpts.yAxisModel;\n            var gridModel = foundCpts.gridModel;\n\n            !gridModel && xAxisModel && (gridModel = xAxisModel.axis.grid.model);\n            !gridModel && yAxisModel && (gridModel = yAxisModel.axis.grid.model);\n\n            return gridModel && gridModel === targetInfo.gridModel;\n        },\n\n        // geo\n        function (foundCpts, targetInfo) {\n            var geoModel = foundCpts.geoModel;\n            return geoModel && geoModel === targetInfo.geoModel;\n        }\n    ];\n\n    var panelRectBuilder = {\n\n        grid: function () {\n            // grid is not Transformable.\n            return this.coordSys.grid.getRect().clone();\n        },\n\n        geo: function () {\n            var coordSys = this.coordSys;\n            var rect = coordSys.getBoundingRect().clone();\n            // geo roam and zoom transform\n            rect.applyTransform(graphic.getTransform(coordSys));\n            return rect;\n        }\n    };\n\n    var coordConvert = {\n\n        lineX: curry(axisConvert, 0),\n\n        lineY: curry(axisConvert, 1),\n\n        rect: function (to, coordSys, rangeOrCoordRange) {\n            var xminymin = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][0], rangeOrCoordRange[1][0]]);\n            var xmaxymax = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][1], rangeOrCoordRange[1][1]]);\n            var values = [\n                formatMinMax([xminymin[0], xmaxymax[0]]),\n                formatMinMax([xminymin[1], xmaxymax[1]])\n            ];\n            return {values: values, xyMinMax: values};\n        },\n\n        polygon: function (to, coordSys, rangeOrCoordRange) {\n            var xyMinMax = [[Infinity, -Infinity], [Infinity, -Infinity]];\n            var values = zrUtil.map(rangeOrCoordRange, function (item) {\n                var p = coordSys[COORD_CONVERTS[to]](item);\n                xyMinMax[0][0] = Math.min(xyMinMax[0][0], p[0]);\n                xyMinMax[1][0] = Math.min(xyMinMax[1][0], p[1]);\n                xyMinMax[0][1] = Math.max(xyMinMax[0][1], p[0]);\n                xyMinMax[1][1] = Math.max(xyMinMax[1][1], p[1]);\n                return p;\n            });\n            return {values: values, xyMinMax: xyMinMax};\n        }\n    };\n\n    function axisConvert(axisNameIndex, to, coordSys, rangeOrCoordRange) {\n        if (__DEV__) {\n            zrUtil.assert(\n                coordSys.type === 'cartesian2d',\n                'lineX/lineY brush is available only in cartesian2d.'\n            );\n        }\n\n        var axis = coordSys.getAxis(['x', 'y'][axisNameIndex]);\n        var values = formatMinMax(zrUtil.map([0, 1], function (i) {\n            return to\n                ? axis.coordToData(axis.toLocalCoord(rangeOrCoordRange[i]))\n                : axis.toGlobalCoord(axis.dataToCoord(rangeOrCoordRange[i]));\n        }));\n        var xyMinMax = [];\n        xyMinMax[axisNameIndex] = values;\n        xyMinMax[1 - axisNameIndex] = [NaN, NaN];\n\n        return {values: values, xyMinMax: xyMinMax};\n    }\n\n    var diffProcessor = {\n        lineX: curry(axisDiffProcessor, 0),\n\n        lineY: curry(axisDiffProcessor, 1),\n\n        rect: function (values, refer, scales) {\n            return [\n                [values[0][0] - scales[0] * refer[0][0], values[0][1] - scales[0] * refer[0][1]],\n                [values[1][0] - scales[1] * refer[1][0], values[1][1] - scales[1] * refer[1][1]]\n            ];\n        },\n\n        polygon: function (values, refer, scales) {\n            return zrUtil.map(values, function (item, idx) {\n                return [item[0] - scales[0] * refer[idx][0], item[1] - scales[1] * refer[idx][1]];\n            });\n        }\n    };\n\n    function axisDiffProcessor(axisNameIndex, values, refer, scales) {\n        return [\n            values[0] - scales[axisNameIndex] * refer[0],\n            values[1] - scales[axisNameIndex] * refer[1]\n        ];\n    }\n\n    // We have to process scale caused by dataZoom manually,\n    // although it might be not accurate.\n    function getScales(xyMinMaxCurr, xyMinMaxOrigin) {\n        var sizeCurr = getSize(xyMinMaxCurr);\n        var sizeOrigin = getSize(xyMinMaxOrigin);\n        var scales = [sizeCurr[0] / sizeOrigin[0], sizeCurr[1] / sizeOrigin[1]];\n        isNaN(scales[0]) && (scales[0] = 1);\n        isNaN(scales[1]) && (scales[1] = 1);\n        return scales;\n    }\n\n    function getSize(xyMinMax) {\n        return xyMinMax\n            ? [xyMinMax[0][1] - xyMinMax[0][0], xyMinMax[1][1] - xyMinMax[1][0]]\n            : [NaN, NaN];\n    }\n\n    module.exports = BrushTargetManager;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/BrushTargetManager.js\n// module id = 1070\n// module chunks = 0 1 2","\n\n    var cursorHelper = require('./cursorHelper');\n    var BoundingRect = require('zrender/lib/core/BoundingRect');\n    var graphicUtil = require('../../util/graphic');\n\n    var helper = {};\n\n    helper.makeRectPanelClipPath = function (rect) {\n        rect = normalizeRect(rect);\n        return function (localPoints, transform) {\n            return graphicUtil.clipPointsByRect(localPoints, rect);\n        };\n    };\n\n    helper.makeLinearBrushOtherExtent = function (rect, specifiedXYIndex) {\n        rect = normalizeRect(rect);\n        return function (xyIndex) {\n            var idx = specifiedXYIndex != null ? specifiedXYIndex : xyIndex;\n            var brushWidth = idx ? rect.width : rect.height;\n            var base = idx ? rect.x : rect.y;\n            return [base, base + (brushWidth || 0)];\n        };\n    };\n\n    helper.makeRectIsTargetByCursor = function (rect, api, targetModel) {\n        rect = normalizeRect(rect);\n        return function (e, localCursorPoint, transform) {\n            return rect.contain(localCursorPoint[0], localCursorPoint[1])\n                && !cursorHelper.onIrrelevantElement(e, api, targetModel);\n        };\n    };\n\n    // Consider width/height is negative.\n    function normalizeRect(rect) {\n        return BoundingRect.create(rect);\n    }\n\n    module.exports = helper;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/brushHelper.js\n// module id = 1071\n// module chunks = 0 1 2","\n\n    require('../../model/Component').registerSubTypeDefaulter('dataZoom', function () {\n        // Default 'slider' when no type specified.\n        return 'slider';\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/typeDefaulter.js\n// module id = 1072\n// module chunks = 0 1 2","/**\n * @file Data zoom processor\n */\n\n\n    var echarts = require('../../echarts');\n\n    echarts.registerProcessor(function (ecModel, api) {\n\n        ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n            // We calculate window and reset axis here but not in model\n            // init stage and not after action dispatch handler, because\n            // reset should be called after seriesData.restoreData.\n            dataZoomModel.eachTargetAxis(resetSingleAxis);\n\n            // Caution: data zoom filtering is order sensitive when using\n            // percent range and no min/max/scale set on axis.\n            // For example, we have dataZoom definition:\n            // [\n            //      {xAxisIndex: 0, start: 30, end: 70},\n            //      {yAxisIndex: 0, start: 20, end: 80}\n            // ]\n            // In this case, [20, 80] of y-dataZoom should be based on data\n            // that have filtered by x-dataZoom using range of [30, 70],\n            // but should not be based on full raw data. Thus sliding\n            // x-dataZoom will change both ranges of xAxis and yAxis,\n            // while sliding y-dataZoom will only change the range of yAxis.\n            // So we should filter x-axis after reset x-axis immediately,\n            // and then reset y-axis and filter y-axis.\n            dataZoomModel.eachTargetAxis(filterSingleAxis);\n        });\n\n        ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n            // Fullfill all of the range props so that user\n            // is able to get them from chart.getOption().\n            var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n            var percentRange = axisProxy.getDataPercentWindow();\n            var valueRange = axisProxy.getDataValueWindow();\n\n            dataZoomModel.setRawRange({\n                start: percentRange[0],\n                end: percentRange[1],\n                startValue: valueRange[0],\n                endValue: valueRange[1]\n            }, true);\n        });\n    });\n\n    function resetSingleAxis(dimNames, axisIndex, dataZoomModel) {\n        dataZoomModel.getAxisProxy(dimNames.name, axisIndex).reset(dataZoomModel);\n    }\n\n    function filterSingleAxis(dimNames, axisIndex, dataZoomModel) {\n        dataZoomModel.getAxisProxy(dimNames.name, axisIndex).filterData(dataZoomModel);\n    }\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/dataZoomProcessor.js\n// module id = 1073\n// module chunks = 0 1 2","/**\n * @file Data zoom action\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var helper = require('./helper');\n    var echarts = require('../../echarts');\n\n\n    echarts.registerAction('dataZoom', function (payload, ecModel) {\n\n        var linkedNodesFinder = helper.createLinkedNodesFinder(\n            zrUtil.bind(ecModel.eachComponent, ecModel, 'dataZoom'),\n            helper.eachAxisDim,\n            function (model, dimNames) {\n                return model.get(dimNames.axisIndex);\n            }\n        );\n\n        var effectedModels = [];\n\n        ecModel.eachComponent(\n            {mainType: 'dataZoom', query: payload},\n            function (model, index) {\n                effectedModels.push.apply(\n                    effectedModels, linkedNodesFinder(model).nodes\n                );\n            }\n        );\n\n        zrUtil.each(effectedModels, function (dataZoomModel, index) {\n            dataZoomModel.setRawRange({\n                start: payload.start,\n                end: payload.end,\n                startValue: payload.startValue,\n                endValue: payload.endValue\n            });\n        });\n\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/dataZoomAction.js\n// module id = 1074\n// module chunks = 0 1 2","/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n\n\n    /**\n     * Caution: If the mechanism should be changed some day, these cases\n     * should be considered:\n     *\n     * (1) In `merge option` mode, if using the same option to call `setOption`\n     * many times, the result should be the same (try our best to ensure that).\n     * (2) In `merge option` mode, if a component has no id/name specified, it\n     * will be merged by index, and the result sequence of the components is\n     * consistent to the original sequence.\n     * (3) `reset` feature (in toolbox). Find detailed info in comments about\n     * `mergeOption` in module:echarts/model/OptionManager.\n     */\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var Model = require('./Model');\n    var each = zrUtil.each;\n    var filter = zrUtil.filter;\n    var map = zrUtil.map;\n    var isArray = zrUtil.isArray;\n    var indexOf = zrUtil.indexOf;\n    var isObject = zrUtil.isObject;\n\n    var ComponentModel = require('./Component');\n\n    var globalDefault = require('./globalDefault');\n\n    var OPTION_INNER_KEY = '\\0_ec_inner';\n\n    /**\n     * @alias module:echarts/model/Global\n     *\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {Object} theme\n     */\n    var GlobalModel = Model.extend({\n\n        constructor: GlobalModel,\n\n        init: function (option, parentModel, theme, optionManager) {\n            theme = theme || {};\n\n            this.option = null; // Mark as not initialized.\n\n            /**\n             * @type {module:echarts/model/Model}\n             * @private\n             */\n            this._theme = new Model(theme);\n\n            /**\n             * @type {module:echarts/model/OptionManager}\n             */\n            this._optionManager = optionManager;\n        },\n\n        setOption: function (option, optionPreprocessorFuncs) {\n            zrUtil.assert(\n                !(OPTION_INNER_KEY in option),\n                'please use chart.getOption()'\n            );\n\n            this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n            this.resetOption(null);\n        },\n\n        /**\n         * @param {string} type null/undefined: reset all.\n         *                      'recreate': force recreate all.\n         *                      'timeline': only reset timeline option\n         *                      'media': only reset media query option\n         * @return {boolean} Whether option changed.\n         */\n        resetOption: function (type) {\n            var optionChanged = false;\n            var optionManager = this._optionManager;\n\n            if (!type || type === 'recreate') {\n                var baseOption = optionManager.mountOption(type === 'recreate');\n\n                if (!this.option || type === 'recreate') {\n                    initBase.call(this, baseOption);\n                }\n                else {\n                    this.restoreData();\n                    this.mergeOption(baseOption);\n                }\n                optionChanged = true;\n            }\n\n            if (type === 'timeline' || type === 'media') {\n                this.restoreData();\n            }\n\n            if (!type || type === 'recreate' || type === 'timeline') {\n                var timelineOption = optionManager.getTimelineOption(this);\n                timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n            }\n\n            if (!type || type === 'recreate' || type === 'media') {\n                var mediaOptions = optionManager.getMediaOption(this, this._api);\n                if (mediaOptions.length) {\n                    each(mediaOptions, function (mediaOption) {\n                        this.mergeOption(mediaOption, optionChanged = true);\n                    }, this);\n                }\n            }\n\n            return optionChanged;\n        },\n\n        /**\n         * @protected\n         */\n        mergeOption: function (newOption) {\n            var option = this.option;\n            var componentsMap = this._componentsMap;\n            var newCptTypes = [];\n\n            // 如果不存在对应的 component model 则直接 merge\n            each(newOption, function (componentOption, mainType) {\n                if (componentOption == null) {\n                    return;\n                }\n\n                if (!ComponentModel.hasClass(mainType)) {\n                    option[mainType] = option[mainType] == null\n                        ? zrUtil.clone(componentOption)\n                        : zrUtil.merge(option[mainType], componentOption, true);\n                }\n                else {\n                    newCptTypes.push(mainType);\n                }\n            });\n\n            // FIXME OPTION 同步是否要改回原来的\n            ComponentModel.topologicalTravel(\n                newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this\n            );\n\n            this._seriesIndices = this._seriesIndices || [];\n\n            function visitComponent(mainType, dependencies) {\n                var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n\n                var mapResult = modelUtil.mappingToExists(\n                    componentsMap.get(mainType), newCptOptionList\n                );\n\n                modelUtil.makeIdAndName(mapResult);\n\n                // Set mainType and complete subType.\n                each(mapResult, function (item, index) {\n                    var opt = item.option;\n                    if (isObject(opt)) {\n                        item.keyInfo.mainType = mainType;\n                        item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n                    }\n                });\n\n                var dependentModels = getComponentsByTypes(\n                    componentsMap, dependencies\n                );\n\n                option[mainType] = [];\n                componentsMap.set(mainType, []);\n\n                each(mapResult, function (resultItem, index) {\n                    var componentModel = resultItem.exist;\n                    var newCptOption = resultItem.option;\n\n                    zrUtil.assert(\n                        isObject(newCptOption) || componentModel,\n                        'Empty component definition'\n                    );\n\n                    // Consider where is no new option and should be merged using {},\n                    // see removeEdgeAndAdd in topologicalTravel and\n                    // ComponentModel.getAllClassMainTypes.\n                    if (!newCptOption) {\n                        componentModel.mergeOption({}, this);\n                        componentModel.optionUpdated({}, false);\n                    }\n                    else {\n                        var ComponentModelClass = ComponentModel.getClass(\n                            mainType, resultItem.keyInfo.subType, true\n                        );\n\n                        if (componentModel && componentModel instanceof ComponentModelClass) {\n                            componentModel.name = resultItem.keyInfo.name;\n                            componentModel.mergeOption(newCptOption, this);\n                            componentModel.optionUpdated(newCptOption, false);\n                        }\n                        else {\n                            // PENDING Global as parent ?\n                            var extraOpt = zrUtil.extend(\n                                {\n                                    dependentModels: dependentModels,\n                                    componentIndex: index\n                                },\n                                resultItem.keyInfo\n                            );\n                            componentModel = new ComponentModelClass(\n                                newCptOption, this, this, extraOpt\n                            );\n                            zrUtil.extend(componentModel, extraOpt);\n                            componentModel.init(newCptOption, this, this, extraOpt);\n                            // Call optionUpdated after init.\n                            // newCptOption has been used as componentModel.option\n                            // and may be merged with theme and default, so pass null\n                            // to avoid confusion.\n                            componentModel.optionUpdated(null, true);\n                        }\n                    }\n\n                    componentsMap.get(mainType)[index] = componentModel;\n                    option[mainType][index] = componentModel.option;\n                }, this);\n\n                // Backup series for filtering.\n                if (mainType === 'series') {\n                    this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n                }\n            }\n        },\n\n        /**\n         * Get option for output (cloned option and inner info removed)\n         * @public\n         * @return {Object}\n         */\n        getOption: function () {\n            var option = zrUtil.clone(this.option);\n\n            each(option, function (opts, mainType) {\n                if (ComponentModel.hasClass(mainType)) {\n                    var opts = modelUtil.normalizeToArray(opts);\n                    for (var i = opts.length - 1; i >= 0; i--) {\n                        // Remove options with inner id.\n                        if (modelUtil.isIdInner(opts[i])) {\n                            opts.splice(i, 1);\n                        }\n                    }\n                    option[mainType] = opts;\n                }\n            });\n\n            delete option[OPTION_INNER_KEY];\n\n            return option;\n        },\n\n        /**\n         * @return {module:echarts/model/Model}\n         */\n        getTheme: function () {\n            return this._theme;\n        },\n\n        /**\n         * @param {string} mainType\n         * @param {number} [idx=0]\n         * @return {module:echarts/model/Component}\n         */\n        getComponent: function (mainType, idx) {\n            var list = this._componentsMap.get(mainType);\n            if (list) {\n                return list[idx || 0];\n            }\n        },\n\n        /**\n         * If none of index and id and name used, return all components with mainType.\n         * @param {Object} condition\n         * @param {string} condition.mainType\n         * @param {string} [condition.subType] If ignore, only query by mainType\n         * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        queryComponents: function (condition) {\n            var mainType = condition.mainType;\n            if (!mainType) {\n                return [];\n            }\n\n            var index = condition.index;\n            var id = condition.id;\n            var name = condition.name;\n\n            var cpts = this._componentsMap.get(mainType);\n\n            if (!cpts || !cpts.length) {\n                return [];\n            }\n\n            var result;\n\n            if (index != null) {\n                if (!isArray(index)) {\n                    index = [index];\n                }\n                result = filter(map(index, function (idx) {\n                    return cpts[idx];\n                }), function (val) {\n                    return !!val;\n                });\n            }\n            else if (id != null) {\n                var isIdArray = isArray(id);\n                result = filter(cpts, function (cpt) {\n                    return (isIdArray && indexOf(id, cpt.id) >= 0)\n                        || (!isIdArray && cpt.id === id);\n                });\n            }\n            else if (name != null) {\n                var isNameArray = isArray(name);\n                result = filter(cpts, function (cpt) {\n                    return (isNameArray && indexOf(name, cpt.name) >= 0)\n                        || (!isNameArray && cpt.name === name);\n                });\n            }\n            else {\n                // Return all components with mainType\n                result = cpts.slice();\n            }\n\n            return filterBySubType(result, condition);\n        },\n\n        /**\n         * The interface is different from queryComponents,\n         * which is convenient for inner usage.\n         *\n         * @usage\n         * var result = findComponents(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series'},\n         *     function (model, index) {...}\n         * );\n         * // result like [component0, componnet1, ...]\n         *\n         * @param {Object} condition\n         * @param {string} condition.mainType Mandatory.\n         * @param {string} [condition.subType] Optional.\n         * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n         *        where xxx is mainType.\n         *        If query attribute is null/undefined or has no index/id/name,\n         *        do not filtering by query conditions, which is convenient for\n         *        no-payload situations or when target of action is global.\n         * @param {Function} [condition.filter] parameter: component, return boolean.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        findComponents: function (condition) {\n            var query = condition.query;\n            var mainType = condition.mainType;\n\n            var queryCond = getQueryCond(query);\n            var result = queryCond\n                ? this.queryComponents(queryCond)\n                : this._componentsMap.get(mainType);\n\n            return doFilter(filterBySubType(result, condition));\n\n            function getQueryCond(q) {\n                var indexAttr = mainType + 'Index';\n                var idAttr = mainType + 'Id';\n                var nameAttr = mainType + 'Name';\n                return q && (\n                        q[indexAttr] != null\n                        || q[idAttr] != null\n                        || q[nameAttr] != null\n                    )\n                    ? {\n                        mainType: mainType,\n                        // subType will be filtered finally.\n                        index: q[indexAttr],\n                        id: q[idAttr],\n                        name: q[nameAttr]\n                    }\n                    : null;\n            }\n\n            function doFilter(res) {\n                return condition.filter\n                     ? filter(res, condition.filter)\n                     : res;\n            }\n        },\n\n        /**\n         * @usage\n         * eachComponent('legend', function (legendModel, index) {\n         *     ...\n         * });\n         * eachComponent(function (componentType, model, index) {\n         *     // componentType does not include subType\n         *     // (componentType is 'xxx' but not 'xxx.aa')\n         * });\n         * eachComponent(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n         *     function (model, index) {...}\n         * );\n         * eachComponent(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n         *     function (model, index) {...}\n         * );\n         *\n         * @param {string|Object=} mainType When mainType is object, the definition\n         *                                  is the same as the method 'findComponents'.\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachComponent: function (mainType, cb, context) {\n            var componentsMap = this._componentsMap;\n\n            if (typeof mainType === 'function') {\n                context = cb;\n                cb = mainType;\n                componentsMap.each(function (components, componentType) {\n                    each(components, function (component, index) {\n                        cb.call(context, componentType, component, index);\n                    });\n                });\n            }\n            else if (zrUtil.isString(mainType)) {\n                each(componentsMap.get(mainType), cb, context);\n            }\n            else if (isObject(mainType)) {\n                var queryResult = this.findComponents(mainType);\n                each(queryResult, cb, context);\n            }\n        },\n\n        /**\n         * @param {string} name\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByName: function (name) {\n            var series = this._componentsMap.get('series');\n            return filter(series, function (oneSeries) {\n                return oneSeries.name === name;\n            });\n        },\n\n        /**\n         * @param {number} seriesIndex\n         * @return {module:echarts/model/Series}\n         */\n        getSeriesByIndex: function (seriesIndex) {\n            return this._componentsMap.get('series')[seriesIndex];\n        },\n\n        /**\n         * @param {string} subType\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByType: function (subType) {\n            var series = this._componentsMap.get('series');\n            return filter(series, function (oneSeries) {\n                return oneSeries.subType === subType;\n            });\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeries: function () {\n            return this._componentsMap.get('series').slice();\n        },\n\n        /**\n         * After filtering, series may be different\n         * frome raw series.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.get('series')[rawSeriesIndex];\n                cb.call(context, series, rawSeriesIndex);\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeries: function (cb, context) {\n            each(this._componentsMap.get('series'), cb, context);\n        },\n\n        /**\n         * After filtering, series may be different.\n         * frome raw series.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeriesByType: function (subType, cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.get('series')[rawSeriesIndex];\n                if (series.subType === subType) {\n                    cb.call(context, series, rawSeriesIndex);\n                }\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered of given type.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeriesByType: function (subType, cb, context) {\n            return each(this.getSeriesByType(subType), cb, context);\n        },\n\n        /**\n         * @param {module:echarts/model/Series} seriesModel\n         */\n        isSeriesFiltered: function (seriesModel) {\n            assertSeriesInitialized(this);\n            return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getCurrentSeriesIndices: function () {\n            return (this._seriesIndices || []).slice();\n        },\n\n        /**\n         * @param {Function} cb\n         * @param {*} context\n         */\n        filterSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            var filteredSeries = filter(\n                this._componentsMap.get('series'), cb, context\n            );\n            this._seriesIndices = createSeriesIndices(filteredSeries);\n        },\n\n        restoreData: function () {\n            var componentsMap = this._componentsMap;\n\n            this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n\n            var componentTypes = [];\n            componentsMap.each(function (components, componentType) {\n                componentTypes.push(componentType);\n            });\n\n            ComponentModel.topologicalTravel(\n                componentTypes,\n                ComponentModel.getAllClassMainTypes(),\n                function (componentType, dependencies) {\n                    each(componentsMap.get(componentType), function (component) {\n                        component.restoreData();\n                    });\n                }\n            );\n        }\n\n    });\n\n    /**\n     * @inner\n     */\n    function mergeTheme(option, theme) {\n        zrUtil.each(theme, function (themeItem, name) {\n            // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n            if (!ComponentModel.hasClass(name)) {\n                if (typeof themeItem === 'object') {\n                    option[name] = !option[name]\n                        ? zrUtil.clone(themeItem)\n                        : zrUtil.merge(option[name], themeItem, false);\n                }\n                else {\n                    if (option[name] == null) {\n                        option[name] = themeItem;\n                    }\n                }\n            }\n        });\n    }\n\n    function initBase(baseOption) {\n        baseOption = baseOption;\n\n        // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n        // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n        this.option = {};\n        this.option[OPTION_INNER_KEY] = 1;\n\n        /**\n         * Init with series: [], in case of calling findSeries method\n         * before series initialized.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @private\n         */\n        this._componentsMap = zrUtil.createHashMap({series: []});\n\n        /**\n         * Mapping between filtered series list and raw series list.\n         * key: filtered series indices, value: raw series indices.\n         * @type {Array.<nubmer>}\n         * @private\n         */\n        this._seriesIndices = null;\n\n        mergeTheme(baseOption, this._theme.option);\n\n        // TODO Needs clone when merging to the unexisted property\n        zrUtil.merge(baseOption, globalDefault, false);\n\n        this.mergeOption(baseOption);\n    }\n\n    /**\n     * @inner\n     * @param {Array.<string>|string} types model types\n     * @return {Object} key: {string} type, value: {Array.<Object>} models\n     */\n    function getComponentsByTypes(componentsMap, types) {\n        if (!zrUtil.isArray(types)) {\n            types = types ? [types] : [];\n        }\n\n        var ret = {};\n        each(types, function (type) {\n            ret[type] = (componentsMap.get(type) || []).slice();\n        });\n\n        return ret;\n    }\n\n    /**\n     * @inner\n     */\n    function determineSubType(mainType, newCptOption, existComponent) {\n        var subType = newCptOption.type\n            ? newCptOption.type\n            : existComponent\n            ? existComponent.subType\n            // Use determineSubType only when there is no existComponent.\n            : ComponentModel.determineSubType(mainType, newCptOption);\n\n        // tooltip, markline, markpoint may always has no subType\n        return subType;\n    }\n\n    /**\n     * @inner\n     */\n    function createSeriesIndices(seriesModels) {\n        return map(seriesModels, function (series) {\n            return series.componentIndex;\n        }) || [];\n    }\n\n    /**\n     * @inner\n     */\n    function filterBySubType(components, condition) {\n        // Using hasOwnProperty for restrict. Consider\n        // subType is undefined in user payload.\n        return condition.hasOwnProperty('subType')\n            ? filter(components, function (cpt) {\n                return cpt.subType === condition.subType;\n            })\n            : components;\n    }\n\n    /**\n     * @inner\n     */\n    function assertSeriesInitialized(ecModel) {\n        // Components that use _seriesIndices should depends on series component,\n        // which make sure that their initialization is after series.\n        if (__DEV__) {\n            if (!ecModel._seriesIndices) {\n                throw new Error('Option should contains series.');\n            }\n        }\n    }\n\n    zrUtil.mixin(GlobalModel, require('./mixin/colorPalette'));\n\n    module.exports = GlobalModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/Global.js\n// module id = 1078\n// module chunks = 0 1 2","\n    var getLineStyle = require('./makeStyleMapper')(\n        [\n            ['lineWidth', 'width'],\n            ['stroke', 'color'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor']\n        ]\n    );\n    module.exports = {\n        getLineStyle: function (excludes) {\n            var style = getLineStyle.call(this, excludes);\n            var lineDash = this.getLineDash(style.lineWidth);\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getLineDash: function (lineWidth) {\n            if (lineWidth == null) {\n                lineWidth = 1;\n            }\n            var lineType = this.get('type');\n            var dotSize = Math.max(lineWidth, 2);\n            var dashSize = lineWidth * 4;\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize]);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/mixin/lineStyle.js\n// module id = 1079\n// module chunks = 0 1 2","\n    module.exports = {\n        getAreaStyle: require('./makeStyleMapper')(\n            [\n                ['fill', 'color'],\n                ['shadowBlur'],\n                ['shadowOffsetX'],\n                ['shadowOffsetY'],\n                ['opacity'],\n                ['shadowColor']\n            ]\n        )\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/mixin/areaStyle.js\n// module id = 1080\n// module chunks = 0 1 2","\n\n    var textContain = require('zrender/lib/contain/text');\n    var graphicUtil = require('../../util/graphic');\n\n    var PATH_COLOR = ['textStyle', 'color'];\n\n    module.exports = {\n        /**\n         * Get color property or get color from option.textStyle.color\n         * @param {boolean} [isEmphasis]\n         * @return {string}\n         */\n        getTextColor: function (isEmphasis) {\n            var ecModel = this.ecModel;\n            return this.getShallow('color')\n                || (\n                    (!isEmphasis && ecModel) ? ecModel.get(PATH_COLOR) : null\n                );\n        },\n\n        /**\n         * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n         * @return {string}\n         */\n        getFont: function () {\n            return graphicUtil.getFont({\n                fontStyle: this.getShallow('fontStyle'),\n                fontWeight: this.getShallow('fontWeight'),\n                fontSize: this.getShallow('fontSize'),\n                fontFamily: this.getShallow('fontFamily')\n            }, this.ecModel);\n        },\n\n        getTextRect: function (text) {\n            return textContain.getBoundingRect(\n                text,\n                this.getFont(),\n                this.getShallow('align'),\n                this.getShallow('verticalAlign') || this.getShallow('baseline'),\n                this.getShallow('padding'),\n                this.getShallow('rich'),\n                this.getShallow('truncateText')\n            );\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/mixin/textStyle.js\n// module id = 1081\n// module chunks = 0 1 2","\n\n    var Path = require('../graphic/Path');\n    var PathProxy = require('../core/PathProxy');\n    var transformPath = require('./transformPath');\n\n    // command chars\n    var cc = [\n        'm', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z',\n        'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'\n    ];\n\n    var mathSqrt = Math.sqrt;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n    var PI = Math.PI;\n\n    var vMag = function(v) {\n        return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n    };\n    var vRatio = function(u, v) {\n        return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n    };\n    var vAngle = function(u, v) {\n        return (u[0] * v[1] < u[1] * v[0] ? -1 : 1)\n                * Math.acos(vRatio(u, v));\n    };\n\n    function processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n        var psi = psiDeg * (PI / 180.0);\n        var xp = mathCos(psi) * (x1 - x2) / 2.0\n                 + mathSin(psi) * (y1 - y2) / 2.0;\n        var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0\n                 + mathCos(psi) * (y1 - y2) / 2.0;\n\n        var lambda = (xp * xp) / (rx * rx) + (yp * yp) / (ry * ry);\n\n        if (lambda > 1) {\n            rx *= mathSqrt(lambda);\n            ry *= mathSqrt(lambda);\n        }\n\n        var f = (fa === fs ? -1 : 1)\n            * mathSqrt((((rx * rx) * (ry * ry))\n                    - ((rx * rx) * (yp * yp))\n                    - ((ry * ry) * (xp * xp))) / ((rx * rx) * (yp * yp)\n                    + (ry * ry) * (xp * xp))\n                ) || 0;\n\n        var cxp = f * rx * yp / ry;\n        var cyp = f * -ry * xp / rx;\n\n        var cx = (x1 + x2) / 2.0\n                 + mathCos(psi) * cxp\n                 - mathSin(psi) * cyp;\n        var cy = (y1 + y2) / 2.0\n                + mathSin(psi) * cxp\n                + mathCos(psi) * cyp;\n\n        var theta = vAngle([ 1, 0 ], [ (xp - cxp) / rx, (yp - cyp) / ry ]);\n        var u = [ (xp - cxp) / rx, (yp - cyp) / ry ];\n        var v = [ (-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry ];\n        var dTheta = vAngle(u, v);\n\n        if (vRatio(u, v) <= -1) {\n            dTheta = PI;\n        }\n        if (vRatio(u, v) >= 1) {\n            dTheta = 0;\n        }\n        if (fs === 0 && dTheta > 0) {\n            dTheta = dTheta - 2 * PI;\n        }\n        if (fs === 1 && dTheta < 0) {\n            dTheta = dTheta + 2 * PI;\n        }\n\n        path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n    }\n\n    function createPathProxyFromString(data) {\n        if (!data) {\n            return [];\n        }\n\n        // command string\n        var cs = data.replace(/-/g, ' -')\n            .replace(/  /g, ' ')\n            .replace(/ /g, ',')\n            .replace(/,,/g, ',');\n\n        var n;\n        // create pipes so that we can split the data\n        for (n = 0; n < cc.length; n++) {\n            cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n        }\n\n        // create array\n        var arr = cs.split('|');\n        // init context point\n        var cpx = 0;\n        var cpy = 0;\n\n        var path = new PathProxy();\n        var CMD = PathProxy.CMD;\n\n        var prevCmd;\n        for (n = 1; n < arr.length; n++) {\n            var str = arr[n];\n            var c = str.charAt(0);\n            var off = 0;\n            var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n            var cmd;\n\n            if (p.length > 0 && p[0] === '') {\n                p.shift();\n            }\n\n            for (var i = 0; i < p.length; i++) {\n                p[i] = parseFloat(p[i]);\n            }\n            while (off < p.length && !isNaN(p[off])) {\n                if (isNaN(p[0])) {\n                    break;\n                }\n                var ctlPtx;\n                var ctlPty;\n\n                var rx;\n                var ry;\n                var psi;\n                var fa;\n                var fs;\n\n                var x1 = cpx;\n                var y1 = cpy;\n\n                // convert l, H, h, V, and v to L\n                switch (c) {\n                    case 'l':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'L':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'm':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'l';\n                        break;\n                    case 'M':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'L';\n                        break;\n                    case 'h':\n                        cpx += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'H':\n                        cpx = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'v':\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'V':\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'C':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]\n                        );\n                        cpx = p[off - 2];\n                        cpy = p[off - 1];\n                        break;\n                    case 'c':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy\n                        );\n                        cpx += p[off - 2];\n                        cpy += p[off - 1];\n                        break;\n                    case 'S':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 's':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = cpx + p[off++];\n                        y1 = cpy + p[off++];\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 'Q':\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'q':\n                        x1 = p[off++] + cpx;\n                        y1 = p[off++] + cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'T':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 't':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 'A':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                    case 'a':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                }\n            }\n\n            if (c === 'z' || c === 'Z') {\n                cmd = CMD.Z;\n                path.addData(cmd);\n            }\n\n            prevCmd = cmd;\n        }\n\n        path.toStatic();\n\n        return path;\n    }\n\n    // TODO Optimize double memory cost problem\n    function createPathOptions(str, opts) {\n        var pathProxy = createPathProxyFromString(str);\n        opts = opts || {};\n        opts.buildPath = function (path) {\n            if (path.setData) {\n                path.setData(pathProxy.data);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            }\n            else {\n                var ctx = path;\n                pathProxy.rebuildPath(ctx);\n            }\n        };\n\n        opts.applyTransform = function (m) {\n            transformPath(pathProxy, m);\n\n            this.dirty(true);\n        };\n\n        return opts;\n    }\n\n    module.exports = {\n        /**\n         * Create a Path object from path string data\n         * http://www.w3.org/TR/SVG/paths.html#PathData\n         * @param  {Object} opts Other options\n         */\n        createFromString: function (str, opts) {\n            return new Path(createPathOptions(str, opts));\n        },\n\n        /**\n         * Create a Path class from path string data\n         * @param  {string} str\n         * @param  {Object} opts Other options\n         */\n        extendFromString: function (str, opts) {\n            return Path.extend(createPathOptions(str, opts));\n        },\n\n        /**\n         * Merge multiple paths\n         */\n        // TODO Apply transform\n        // TODO stroke dash\n        // TODO Optimize double memory cost problem\n        mergePath: function (pathEls, opts) {\n            var pathList = [];\n            var len = pathEls.length;\n            for (var i = 0; i < len; i++) {\n                var pathEl = pathEls[i];\n                if (!pathEl.path) {\n                    pathEl.createPathProxy();\n                }\n                if (pathEl.__dirtyPath) {\n                    pathEl.buildPath(pathEl.path, pathEl.shape, true);\n                }\n                pathList.push(pathEl.path);\n            }\n\n            var pathBundle = new Path(opts);\n            // Need path proxy.\n            pathBundle.createPathProxy();\n            pathBundle.buildPath = function (path) {\n                path.appendPath(pathList);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            };\n\n            return pathBundle;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/tool/path.js\n// module id = 1082\n// module chunks = 0 1 2","'use strict';\n/**\n * @module zrender/mixin/Animatable\n */\n\n\n    var Animator = require('../animation/Animator');\n    var util = require('../core/util');\n    var isString = util.isString;\n    var isFunction = util.isFunction;\n    var isObject = util.isObject;\n    var log = require('../core/log');\n\n    /**\n     * @alias modue:zrender/mixin/Animatable\n     * @constructor\n     */\n    var Animatable = function () {\n\n        /**\n         * @type {Array.<module:zrender/animation/Animator>}\n         * @readOnly\n         */\n        this.animators = [];\n    };\n\n    Animatable.prototype = {\n\n        constructor: Animatable,\n\n        /**\n         * 动画\n         *\n         * @param {string} path The path to fetch value from object, like 'a.b.c'.\n         * @param {boolean} [loop] Whether to loop animation.\n         * @return {module:zrender/animation/Animator}\n         * @example:\n         *     el.animate('style', false)\n         *         .when(1000, {x: 10} )\n         *         .done(function(){ // Animation done })\n         *         .start()\n         */\n        animate: function (path, loop) {\n            var target;\n            var animatingShape = false;\n            var el = this;\n            var zr = this.__zr;\n            if (path) {\n                var pathSplitted = path.split('.');\n                var prop = el;\n                // If animating shape\n                animatingShape = pathSplitted[0] === 'shape';\n                for (var i = 0, l = pathSplitted.length; i < l; i++) {\n                    if (!prop) {\n                        continue;\n                    }\n                    prop = prop[pathSplitted[i]];\n                }\n                if (prop) {\n                    target = prop;\n                }\n            }\n            else {\n                target = el;\n            }\n\n            if (!target) {\n                log(\n                    'Property \"'\n                    + path\n                    + '\" is not existed in element '\n                    + el.id\n                );\n                return;\n            }\n\n            var animators = el.animators;\n\n            var animator = new Animator(target, loop);\n\n            animator.during(function (target) {\n                el.dirty(animatingShape);\n            })\n            .done(function () {\n                // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n                animators.splice(util.indexOf(animators, animator), 1);\n            });\n\n            animators.push(animator);\n\n            // If animate after added to the zrender\n            if (zr) {\n                zr.animation.addAnimator(animator);\n            }\n\n            return animator;\n        },\n\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stopAnimation: function (forwardToLast) {\n            var animators = this.animators;\n            var len = animators.length;\n            for (var i = 0; i < len; i++) {\n                animators[i].stop(forwardToLast);\n            }\n            animators.length = 0;\n\n            return this;\n        },\n\n        /**\n         * Caution: this method will stop previous animation.\n         * So do not use this method to one element twice before\n         * animation starts, unless you know what you are doing.\n         * @param {Object} target\n         * @param {number} [time=500] Time in ms\n         * @param {string} [easing='linear']\n         * @param {number} [delay=0]\n         * @param {Function} [callback]\n         * @param {Function} [forceAnimate] Prevent stop animation and callback\n         *        immediently when target values are the same as current values.\n         *\n         * @example\n         *  // Animate position\n         *  el.animateTo({\n         *      position: [10, 10]\n         *  }, function () { // done })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n         *  el.animateTo({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100, 'cubicOut', function () { // done })\n         */\n         // TODO Return animation key\n        animateTo: function (target, time, delay, easing, callback, forceAnimate) {\n            // animateTo(target, time, easing, callback);\n            if (isString(delay)) {\n                callback = easing;\n                easing = delay;\n                delay = 0;\n            }\n            // animateTo(target, time, delay, callback);\n            else if (isFunction(easing)) {\n                callback = easing;\n                easing = 'linear';\n                delay = 0;\n            }\n            // animateTo(target, time, callback);\n            else if (isFunction(delay)) {\n                callback = delay;\n                delay = 0;\n            }\n            // animateTo(target, callback)\n            else if (isFunction(time)) {\n                callback = time;\n                time = 500;\n            }\n            // animateTo(target)\n            else if (!time) {\n                time = 500;\n            }\n            // Stop all previous animations\n            this.stopAnimation();\n            this._animateToShallow('', this, target, time, delay, easing, callback);\n\n            // Animators may be removed immediately after start\n            // if there is nothing to animate\n            var animators = this.animators.slice();\n            var count = animators.length;\n            function done() {\n                count--;\n                if (!count) {\n                    callback && callback();\n                }\n            }\n\n            // No animators. This should be checked before animators[i].start(),\n            // because 'done' may be executed immediately if no need to animate.\n            if (!count) {\n                callback && callback();\n            }\n            // Start after all animators created\n            // Incase any animator is done immediately when all animation properties are not changed\n            for (var i = 0; i < animators.length; i++) {\n                animators[i]\n                    .done(done)\n                    .start(easing, forceAnimate);\n            }\n        },\n\n        /**\n         * @private\n         * @param {string} path=''\n         * @param {Object} source=this\n         * @param {Object} target\n         * @param {number} [time=500]\n         * @param {number} [delay=0]\n         *\n         * @example\n         *  // Animate position\n         *  el._animateToShallow({\n         *      position: [10, 10]\n         *  })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms\n         *  el._animateToShallow({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100)\n         */\n        _animateToShallow: function (path, source, target, time, delay) {\n            var objShallow = {};\n            var propertyCount = 0;\n            for (var name in target) {\n                if (!target.hasOwnProperty(name)) {\n                    continue;\n                }\n\n                if (source[name] != null) {\n                    if (isObject(target[name]) && !util.isArrayLike(target[name])) {\n                        this._animateToShallow(\n                            path ? path + '.' + name : name,\n                            source[name],\n                            target[name],\n                            time,\n                            delay\n                        );\n                    }\n                    else {\n                        objShallow[name] = target[name];\n                        propertyCount++;\n                    }\n                }\n                else if (target[name] != null) {\n                    // Attr directly if not has property\n                    // FIXME, if some property not needed for element ?\n                    if (!path) {\n                        this.attr(name, target[name]);\n                    }\n                    else {  // Shape or style\n                        var props = {};\n                        props[path] = {};\n                        props[path][name] = target[name];\n                        this.attr(props);\n                    }\n                }\n            }\n\n            if (propertyCount > 0) {\n                this.animate(path, false)\n                    .when(time == null ? 500 : time, objShallow)\n                    .delay(delay || 0);\n            }\n\n            return this;\n        }\n    };\n\n    module.exports = Animatable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/mixin/Animatable.js\n// module id = 1083\n// module chunks = 0 1 2","/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\n\n\n    var easingFuncs = require('./easing');\n\n    function Clip(options) {\n\n        this._target = options.target;\n\n        // 生命周期\n        this._life = options.life || 1000;\n        // 延时\n        this._delay = options.delay || 0;\n        // 开始时间\n        // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n        this._initialized = false;\n\n        // 是否循环\n        this.loop = options.loop == null ? false : options.loop;\n\n        this.gap = options.gap || 0;\n\n        this.easing = options.easing || 'Linear';\n\n        this.onframe = options.onframe;\n        this.ondestroy = options.ondestroy;\n        this.onrestart = options.onrestart;\n\n        this._pausedTime = 0;\n        this._paused = false;\n    }\n\n    Clip.prototype = {\n\n        constructor: Clip,\n\n        step: function (globalTime, deltaTime) {\n            // Set startTime on first step, or _startTime may has milleseconds different between clips\n            // PENDING\n            if (!this._initialized) {\n                this._startTime = globalTime + this._delay;\n                this._initialized = true;\n            }\n\n            if (this._paused) {\n                this._pausedTime += deltaTime;\n                return;\n            }\n\n            var percent = (globalTime - this._startTime - this._pausedTime) / this._life;\n\n            // 还没开始\n            if (percent < 0) {\n                return;\n            }\n\n            percent = Math.min(percent, 1);\n\n            var easing = this.easing;\n            var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n            var schedule = typeof easingFunc === 'function'\n                ? easingFunc(percent)\n                : percent;\n\n            this.fire('frame', schedule);\n\n            // 结束\n            if (percent == 1) {\n                if (this.loop) {\n                    this.restart (globalTime);\n                    // 重新开始周期\n                    // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n                    return 'restart';\n                }\n\n                // 动画完成将这个控制器标识为待删除\n                // 在Animation.update中进行批量删除\n                this._needsRemove = true;\n                return 'destroy';\n            }\n\n            return null;\n        },\n\n        restart: function (globalTime) {\n            var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n            this._startTime = globalTime - remainder + this.gap;\n            this._pausedTime = 0;\n\n            this._needsRemove = false;\n        },\n\n        fire: function (eventType, arg) {\n            eventType = 'on' + eventType;\n            if (this[eventType]) {\n                this[eventType](this._target, arg);\n            }\n        },\n\n        pause: function () {\n            this._paused = true;\n        },\n\n        resume: function () {\n            this._paused = false;\n        }\n    };\n\n    module.exports = Clip;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/animation/Clip.js\n// module id = 1084\n// module chunks = 0 1 2","/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\n\n    var easing = {\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        linear: function (k) {\n            return k;\n        },\n\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticIn: function (k) {\n            return k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticOut: function (k) {\n            return k * (2 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k;\n            }\n            return -0.5 * (--k * (k - 2) - 1);\n        },\n\n        // 三次方的缓动（t^3）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicIn: function (k) {\n            return k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicOut: function (k) {\n            return --k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k + 2);\n        },\n\n        // 四次方的缓动（t^4）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticIn: function (k) {\n            return k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticOut: function (k) {\n            return 1 - (--k * k * k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k;\n            }\n            return -0.5 * ((k -= 2) * k * k * k - 2);\n        },\n\n        // 五次方的缓动（t^5）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticIn: function (k) {\n            return k * k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticOut: function (k) {\n            return --k * k * k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k * k * k + 2);\n        },\n\n        // 正弦曲线的缓动（sin(t)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalIn: function (k) {\n            return 1 - Math.cos(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalOut: function (k) {\n            return Math.sin(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalInOut: function (k) {\n            return 0.5 * (1 - Math.cos(Math.PI * k));\n        },\n\n        // 指数曲线的缓动（2^t）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialIn: function (k) {\n            return k === 0 ? 0 : Math.pow(1024, k - 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialOut: function (k) {\n            return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialInOut: function (k) {\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if ((k *= 2) < 1) {\n                return 0.5 * Math.pow(1024, k - 1);\n            }\n            return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n        },\n\n        // 圆形曲线的缓动（sqrt(1-t^2)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularIn: function (k) {\n            return 1 - Math.sqrt(1 - k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularOut: function (k) {\n            return Math.sqrt(1 - (--k * k));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return -0.5 * (Math.sqrt(1 - k * k) - 1);\n            }\n            return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n        },\n\n        // 创建类似于弹簧在停止前来回振荡的动画\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticIn: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return -(a * Math.pow(2, 10 * (k -= 1)) *\n                        Math.sin((k - s) * (2 * Math.PI) / p));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return (a * Math.pow(2, -10 * k) *\n                    Math.sin((k - s) * (2 * Math.PI) / p) + 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticInOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            if ((k *= 2) < 1) {\n                return -0.5 * (a * Math.pow(2, 10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p));\n            }\n            return a * Math.pow(2, -10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\n        },\n\n        // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backIn: function (k) {\n            var s = 1.70158;\n            return k * k * ((s + 1) * k - s);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backOut: function (k) {\n            var s = 1.70158;\n            return --k * k * ((s + 1) * k + s) + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backInOut: function (k) {\n            var s = 1.70158 * 1.525;\n            if ((k *= 2) < 1) {\n                return 0.5 * (k * k * ((s + 1) * k - s));\n            }\n            return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n        },\n\n        // 创建弹跳效果\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceIn: function (k) {\n            return 1 - easing.bounceOut(1 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceOut: function (k) {\n            if (k < (1 / 2.75)) {\n                return 7.5625 * k * k;\n            }\n            else if (k < (2 / 2.75)) {\n                return 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\n            }\n            else if (k < (2.5 / 2.75)) {\n                return 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\n            }\n            else {\n                return 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\n            }\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceInOut: function (k) {\n            if (k < 0.5) {\n                return easing.bounceIn(k * 2) * 0.5;\n            }\n            return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n        }\n    };\n\n    module.exports = easing;\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/animation/easing.js\n// module id = 1085\n// module chunks = 0 1 2","'use strict';\n\n\n    var CMD = require('../core/PathProxy').CMD;\n    var line = require('./line');\n    var cubic = require('./cubic');\n    var quadratic = require('./quadratic');\n    var arc = require('./arc');\n    var normalizeRadian = require('./util').normalizeRadian;\n    var curve = require('../core/curve');\n\n    var windingLine = require('./windingLine');\n\n    var containStroke = line.containStroke;\n\n    var PI2 = Math.PI * 2;\n\n    var EPSILON = 1e-4;\n\n    function isAroundEqual(a, b) {\n        return Math.abs(a - b) < EPSILON;\n    }\n\n    // 临时数组\n    var roots = [-1, -1, -1];\n    var extrema = [-1, -1];\n\n    function swapExtrema() {\n        var tmp = extrema[0];\n        extrema[0] = extrema[1];\n        extrema[1] = tmp;\n    }\n\n    function windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2 && y > y3)\n            || (y < y0 && y < y1 && y < y2 && y < y3)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var w = 0;\n            var nExtrema = -1;\n            var y0_, y1_;\n            for (var i = 0; i < nRoots; i++) {\n                var t = roots[i];\n\n                // Avoid winding error when intersection point is the connect point of two line of polygon\n                var unit = (t === 0 || t === 1) ? 0.5 : 1;\n\n                var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n                if (x_ < x) { // Quick reject\n                    continue;\n                }\n                if (nExtrema < 0) {\n                    nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n                    if (extrema[1] < extrema[0] && nExtrema > 1) {\n                        swapExtrema();\n                    }\n                    y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n                    if (nExtrema > 1) {\n                        y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n                    }\n                }\n                if (nExtrema == 2) {\n                    // 分成三段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else if (t < extrema[1]) {\n                        w += y1_ < y0_ ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y1_ ? unit : -unit;\n                    }\n                }\n                else {\n                    // 分成两段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y0_ ? unit : -unit;\n                    }\n                }\n            }\n            return w;\n        }\n    }\n\n    function windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2)\n            || (y < y0 && y < y1 && y < y2)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var t = curve.quadraticExtremum(y0, y1, y2);\n            if (t >= 0 && t <= 1) {\n                var w = 0;\n                var y_ = curve.quadraticAt(y0, y1, y2, t);\n                for (var i = 0; i < nRoots; i++) {\n                    // Remove one endpoint.\n                    var unit = (roots[i] === 0 || roots[i] === 1) ? 0.5 : 1;\n\n                    var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n                    if (x_ < x) {   // Quick reject\n                        continue;\n                    }\n                    if (roots[i] < t) {\n                        w += y_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y2 < y_ ? unit : -unit;\n                    }\n                }\n                return w;\n            }\n            else {\n                // Remove one endpoint.\n                var unit = (roots[0] === 0 || roots[0] === 1) ? 0.5 : 1;\n\n                var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n                if (x_ < x) {   // Quick reject\n                    return 0;\n                }\n                return y2 < y0 ? unit : -unit;\n            }\n        }\n    }\n\n    // TODO\n    // Arc 旋转\n    function windingArc(\n        cx, cy, r, startAngle, endAngle, anticlockwise, x, y\n    ) {\n        y -= cy;\n        if (y > r || y < -r) {\n            return 0;\n        }\n        var tmp = Math.sqrt(r * r - y * y);\n        roots[0] = -tmp;\n        roots[1] = tmp;\n\n        var diff = Math.abs(startAngle - endAngle);\n        if (diff < 1e-4) {\n            return 0;\n        }\n        if (diff % PI2 < 1e-4) {\n            // Is a circle\n            startAngle = 0;\n            endAngle = PI2;\n            var dir = anticlockwise ? 1 : -1;\n            if (x >= roots[0] + cx && x <= roots[1] + cx) {\n                return dir;\n            } else {\n                return 0;\n            }\n        }\n\n        if (anticlockwise) {\n            var tmp = startAngle;\n            startAngle = normalizeRadian(endAngle);\n            endAngle = normalizeRadian(tmp);\n        }\n        else {\n            startAngle = normalizeRadian(startAngle);\n            endAngle = normalizeRadian(endAngle);\n        }\n        if (startAngle > endAngle) {\n            endAngle += PI2;\n        }\n\n        var w = 0;\n        for (var i = 0; i < 2; i++) {\n            var x_ = roots[i];\n            if (x_ + cx > x) {\n                var angle = Math.atan2(y, x_);\n                var dir = anticlockwise ? 1 : -1;\n                if (angle < 0) {\n                    angle = PI2 + angle;\n                }\n                if (\n                    (angle >= startAngle && angle <= endAngle)\n                    || (angle + PI2 >= startAngle && angle + PI2 <= endAngle)\n                ) {\n                    if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n                        dir = -dir;\n                    }\n                    w += dir;\n                }\n            }\n        }\n        return w;\n    }\n\n    function containPath(data, lineWidth, isStroke, x, y) {\n        var w = 0;\n        var xi = 0;\n        var yi = 0;\n        var x0 = 0;\n        var y0 = 0;\n\n        for (var i = 0; i < data.length;) {\n            var cmd = data[i++];\n            // Begin a new subpath\n            if (cmd === CMD.M && i > 1) {\n                // Close previous subpath\n                if (!isStroke) {\n                    w += windingLine(xi, yi, x0, y0, x, y);\n                }\n                // 如果被任何一个 subpath 包含\n                // if (w !== 0) {\n                //     return true;\n                // }\n            }\n\n            if (i == 1) {\n                // 如果第一个命令是 L, C, Q\n                // 则 previous point 同绘制命令的第一个 point\n                //\n                // 第一个命令为 Arc 的情况下会在后面特殊处理\n                xi = data[i];\n                yi = data[i + 1];\n\n                x0 = xi;\n                y0 = yi;\n            }\n\n            switch (cmd) {\n                case CMD.M:\n                    // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                    // 在 closePath 的时候使用\n                    x0 = data[i++];\n                    y0 = data[i++];\n                    xi = x0;\n                    yi = y0;\n                    break;\n                case CMD.L:\n                    if (isStroke) {\n                        if (containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n                        w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.C:\n                    if (isStroke) {\n                        if (cubic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingCubic(\n                            xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.Q:\n                    if (isStroke) {\n                        if (quadratic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingQuadratic(\n                            xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.A:\n                    // TODO Arc 判断的开销比较大\n                    var cx = data[i++];\n                    var cy = data[i++];\n                    var rx = data[i++];\n                    var ry = data[i++];\n                    var theta = data[i++];\n                    var dTheta = data[i++];\n                    // TODO Arc 旋转\n                    var psi = data[i++];\n                    var anticlockwise = 1 - data[i++];\n                    var x1 = Math.cos(theta) * rx + cx;\n                    var y1 = Math.sin(theta) * ry + cy;\n                    // 不是直接使用 arc 命令\n                    if (i > 1) {\n                        w += windingLine(xi, yi, x1, y1, x, y);\n                    }\n                    else {\n                        // 第一个命令起点还未定义\n                        x0 = x1;\n                        y0 = y1;\n                    }\n                    // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n                    var _x = (x - cx) * ry / rx + cx;\n                    if (isStroke) {\n                        if (arc.containStroke(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            lineWidth, _x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingArc(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            _x, y\n                        );\n                    }\n                    xi = Math.cos(theta + dTheta) * rx + cx;\n                    yi = Math.sin(theta + dTheta) * ry + cy;\n                    break;\n                case CMD.R:\n                    x0 = xi = data[i++];\n                    y0 = yi = data[i++];\n                    var width = data[i++];\n                    var height = data[i++];\n                    var x1 = x0 + width;\n                    var y1 = y0 + height;\n                    if (isStroke) {\n                        if (containStroke(x0, y0, x1, y0, lineWidth, x, y)\n                          || containStroke(x1, y0, x1, y1, lineWidth, x, y)\n                          || containStroke(x1, y1, x0, y1, lineWidth, x, y)\n                          || containStroke(x0, y1, x0, y0, lineWidth, x, y)\n                        ) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // FIXME Clockwise ?\n                        w += windingLine(x1, y0, x1, y1, x, y);\n                        w += windingLine(x0, y1, x0, y0, x, y);\n                    }\n                    break;\n                case CMD.Z:\n                    if (isStroke) {\n                        if (containStroke(\n                            xi, yi, x0, y0, lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // Close a subpath\n                        w += windingLine(xi, yi, x0, y0, x, y);\n                        // 如果被任何一个 subpath 包含\n                        // FIXME subpaths may overlap\n                        // if (w !== 0) {\n                        //     return true;\n                        // }\n                    }\n                    xi = x0;\n                    yi = y0;\n                    break;\n            }\n        }\n        if (!isStroke && !isAroundEqual(yi, y0)) {\n            w += windingLine(xi, yi, x0, y0, x, y) || 0;\n        }\n        return w !== 0;\n    }\n\n    module.exports = {\n        contain: function (pathData, x, y) {\n            return containPath(pathData, 0, false, x, y);\n        },\n\n        containStroke: function (pathData, lineWidth, x, y) {\n            return containPath(pathData, lineWidth, true, x, y);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/contain/path.js\n// module id = 1086\n// module chunks = 0 1 2","\n\n    var curve = require('../core/curve');\n\n    module.exports = {\n        /**\n         * 三次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  x3\n         * @param  {number}  y3\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.cubicProjectPoint(\n                x0, y0, x1, y1, x2, y2, x3, y3,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/contain/cubic.js\n// module id = 1087\n// module chunks = 0 1 2","\n\n    var normalizeRadian = require('./util').normalizeRadian;\n    var PI2 = Math.PI * 2;\n\n    module.exports = {\n        /**\n         * 圆弧描边包含判断\n         * @param  {number}  cx\n         * @param  {number}  cy\n         * @param  {number}  r\n         * @param  {number}  startAngle\n         * @param  {number}  endAngle\n         * @param  {boolean}  anticlockwise\n         * @param  {number} lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {Boolean}\n         */\n        containStroke: function (\n            cx, cy, r, startAngle, endAngle, anticlockwise,\n            lineWidth, x, y\n        ) {\n\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n\n            x -= cx;\n            y -= cy;\n            var d = Math.sqrt(x * x + y * y);\n\n            if ((d - _l > r) || (d + _l < r)) {\n                return false;\n            }\n            if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n                // Is a circle\n                return true;\n            }\n            if (anticlockwise) {\n                var tmp = startAngle;\n                startAngle = normalizeRadian(endAngle);\n                endAngle = normalizeRadian(tmp);\n            } else {\n                startAngle = normalizeRadian(startAngle);\n                endAngle = normalizeRadian(endAngle);\n            }\n            if (startAngle > endAngle) {\n                endAngle += PI2;\n            }\n\n            var angle = Math.atan2(y, x);\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return (angle >= startAngle && angle <= endAngle)\n                || (angle + PI2 >= startAngle && angle + PI2 <= endAngle);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/contain/arc.js\n// module id = 1088\n// module chunks = 0 1 2","\n\n    var CMD = require('../core/PathProxy').CMD;\n    var vec2 = require('../core/vector');\n    var v2ApplyTransform = vec2.applyTransform;\n\n    var points = [[], [], []];\n    var mathSqrt = Math.sqrt;\n    var mathAtan2 = Math.atan2;\n    function transformPath(path, m) {\n        var data = path.data;\n        var cmd;\n        var nPoint;\n        var i;\n        var j;\n        var k;\n        var p;\n\n        var M = CMD.M;\n        var C = CMD.C;\n        var L = CMD.L;\n        var R = CMD.R;\n        var A = CMD.A;\n        var Q = CMD.Q;\n\n        for (i = 0, j = 0; i < data.length;) {\n            cmd = data[i++];\n            j = i;\n            nPoint = 0;\n\n            switch (cmd) {\n                case M:\n                    nPoint = 1;\n                    break;\n                case L:\n                    nPoint = 1;\n                    break;\n                case C:\n                    nPoint = 3;\n                    break;\n                case Q:\n                    nPoint = 2;\n                    break;\n                case A:\n                    var x = m[4];\n                    var y = m[5];\n                    var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n                    var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n                    var angle = mathAtan2(-m[1] / sy, m[0] / sx);\n                    // cx\n                    data[i] *= sx;\n                    data[i++] += x;\n                    // cy\n                    data[i] *= sy;\n                    data[i++] += y;\n                    // Scale rx and ry\n                    // FIXME Assume psi is 0 here\n                    data[i++] *= sx;\n                    data[i++] *= sy;\n\n                    // Start angle\n                    data[i++] += angle;\n                    // end angle\n                    data[i++] += angle;\n                    // FIXME psi\n                    i += 2;\n                    j = i;\n                    break;\n                case R:\n                    // x0, y0\n                    p[0] = data[i++];\n                    p[1] = data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n                    // x1, y1\n                    p[0] += data[i++];\n                    p[1] += data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n            }\n\n            for (k = 0; k < nPoint; k++) {\n                var p = points[k];\n                p[0] = data[i++];\n                p[1] = data[i++];\n\n                v2ApplyTransform(p, p, m);\n                // Write back\n                data[j++] = p[0];\n                data[j++] = p[1];\n            }\n        }\n    }\n\n    module.exports = transformPath;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/tool/transformPath.js\n// module id = 1089\n// module chunks = 0 1 2","'use strict';\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\n\n\n\n    module.exports = require('../Path').extend({\n\n        type: 'circle',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0\n        },\n\n\n        buildPath : function (ctx, shape, inBundle) {\n            // Better stroking in ShapeBundle\n            // Always do it may have performence issue ( fill may be 2x more cost)\n            if (inBundle) {\n                ctx.moveTo(shape.cx + shape.r, shape.cy);\n            }\n            // else {\n            //     if (ctx.allocate && !ctx.data.length) {\n            //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n            //     }\n            // }\n            // Better stroking in ShapeBundle\n            // ctx.moveTo(shape.cx + shape.r, shape.cy);\n            ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/shape/Circle.js\n// module id = 1090\n// module chunks = 0 1 2","/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\n\n\n\n    var Path = require('../Path');\n    var fixClipWithShadow = require('../helper/fixClipWithShadow');\n\n    module.exports = Path.extend({\n\n        type: 'sector',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r0: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        brush: fixClipWithShadow(Path.prototype.brush),\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r0 = Math.max(shape.r0 || 0, 0);\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n\n            ctx.lineTo(unitX * r + x, unitY * r + y);\n\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n\n            ctx.lineTo(\n                Math.cos(endAngle) * r0 + x,\n                Math.sin(endAngle) * r0 + y\n            );\n\n            if (r0 !== 0) {\n                ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n            }\n\n            ctx.closePath();\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/shape/Sector.js\n// module id = 1091\n// module chunks = 0 1 2","/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\n\n\n    module.exports = require('../Path').extend({\n\n        type: 'ring',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0,\n            r0: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.cx;\n            var y = shape.cy;\n            var PI2 = Math.PI * 2;\n            ctx.moveTo(x + shape.r, y);\n            ctx.arc(x, y, shape.r, 0, PI2, false);\n            ctx.moveTo(x + shape.r0, y);\n            ctx.arc(x, y, shape.r0, 0, PI2, true);\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/shape/Ring.js\n// module id = 1092\n// module chunks = 0 1 2","/**\n * 多边形\n * @module zrender/shape/Polygon\n */\n\n\n    var polyHelper = require('../helper/poly');\n\n    module.exports = require('../Path').extend({\n        \n        type: 'polygon',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, true);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/shape/Polygon.js\n// module id = 1093\n// module chunks = 0 1 2","/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n    var vec2 = require('../../core/vector');\n\n    /**\n     * @inner\n     */\n    function interpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    /**\n     * @alias module:zrender/shape/util/smoothSpline\n     * @param {Array} points 线段顶点数组\n     * @param {boolean} isLoop\n     * @return {Array}\n     */\n    module.exports = function (points, isLoop) {\n        var len = points.length;\n        var ret = [];\n\n        var distance = 0;\n        for (var i = 1; i < len; i++) {\n            distance += vec2.distance(points[i - 1], points[i]);\n        }\n\n        var segs = distance / 2;\n        segs = segs < len ? len : segs;\n        for (var i = 0; i < segs; i++) {\n            var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n            var idx = Math.floor(pos);\n\n            var w = pos - idx;\n\n            var p0;\n            var p1 = points[idx % len];\n            var p2;\n            var p3;\n            if (!isLoop) {\n                p0 = points[idx === 0 ? idx : idx - 1];\n                p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n                p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n            }\n            else {\n                p0 = points[(idx - 1 + len) % len];\n                p2 = points[(idx + 1) % len];\n                p3 = points[(idx + 2) % len];\n            }\n\n            var w2 = w * w;\n            var w3 = w * w2;\n\n            ret.push([\n                interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3),\n                interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)\n            ]);\n        }\n        return ret;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/helper/smoothSpline.js\n// module id = 1094\n// module chunks = 0 1 2","/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n\n    var vec2 = require('../../core/vector');\n    var v2Min = vec2.min;\n    var v2Max = vec2.max;\n    var v2Scale = vec2.scale;\n    var v2Distance = vec2.distance;\n    var v2Add = vec2.add;\n\n    /**\n     * 贝塞尔平滑曲线\n     * @alias module:zrender/shape/util/smoothBezier\n     * @param {Array} points 线段顶点数组\n     * @param {number} smooth 平滑等级, 0-1\n     * @param {boolean} isLoop\n     * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n     *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n     *                           整个折线的包围盒做一个并集用来约束控制点。\n     * @param {Array} 计算出来的控制点数组\n     */\n    module.exports = function (points, smooth, isLoop, constraint) {\n        var cps = [];\n\n        var v = [];\n        var v1 = [];\n        var v2 = [];\n        var prevPoint;\n        var nextPoint;\n\n        var min, max;\n        if (constraint) {\n            min = [Infinity, Infinity];\n            max = [-Infinity, -Infinity];\n            for (var i = 0, len = points.length; i < len; i++) {\n                v2Min(min, min, points[i]);\n                v2Max(max, max, points[i]);\n            }\n            // 与指定的包围盒做并集\n            v2Min(min, min, constraint[0]);\n            v2Max(max, max, constraint[1]);\n        }\n\n        for (var i = 0, len = points.length; i < len; i++) {\n            var point = points[i];\n\n            if (isLoop) {\n                prevPoint = points[i ? i - 1 : len - 1];\n                nextPoint = points[(i + 1) % len];\n            }\n            else {\n                if (i === 0 || i === len - 1) {\n                    cps.push(vec2.clone(points[i]));\n                    continue;\n                }\n                else {\n                    prevPoint = points[i - 1];\n                    nextPoint = points[i + 1];\n                }\n            }\n\n            vec2.sub(v, nextPoint, prevPoint);\n\n            // use degree to scale the handle length\n            v2Scale(v, v, smooth);\n\n            var d0 = v2Distance(point, prevPoint);\n            var d1 = v2Distance(point, nextPoint);\n            var sum = d0 + d1;\n            if (sum !== 0) {\n                d0 /= sum;\n                d1 /= sum;\n            }\n\n            v2Scale(v1, v, -d0);\n            v2Scale(v2, v, d1);\n            var cp0 = v2Add([], point, v1);\n            var cp1 = v2Add([], point, v2);\n            if (constraint) {\n                v2Max(cp0, cp0, min);\n                v2Min(cp0, cp0, max);\n                v2Max(cp1, cp1, min);\n                v2Min(cp1, cp1, max);\n            }\n            cps.push(cp0);\n            cps.push(cp1);\n        }\n\n        if (isLoop) {\n            cps.push(cps.shift());\n        }\n\n        return cps;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/helper/smoothBezier.js\n// module id = 1095\n// module chunks = 0 1 2","/**\n * @module zrender/graphic/shape/Polyline\n */\n\n\n    var polyHelper = require('../helper/poly');\n\n    module.exports = require('../Path').extend({\n        \n        type: 'polyline',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        style: {\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, false);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/shape/Polyline.js\n// module id = 1096\n// module chunks = 0 1 2","/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\n\n\n    var roundRectHelper = require('../helper/roundRect');\n\n    module.exports = require('../Path').extend({\n\n        type: 'rect',\n\n        shape: {\n            // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n            // r缩写为1         相当于 [1, 1, 1, 1]\n            // r缩写为[1]       相当于 [1, 1, 1, 1]\n            // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n            // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n            r: 0,\n\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            if (!shape.r) {\n                ctx.rect(x, y, width, height);\n            }\n            else {\n                roundRectHelper.buildPath(ctx, shape);\n            }\n            ctx.closePath();\n            return;\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/shape/Rect.js\n// module id = 1097\n// module chunks = 0 1 2","/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\n\n    module.exports = require('../Path').extend({\n\n        type: 'line',\n\n        shape: {\n            // Start point\n            x1: 0,\n            y1: 0,\n            // End point\n            x2: 0,\n            y2: 0,\n\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var percent = shape.percent;\n\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (percent < 1) {\n                x2 = x1 * (1 - percent) + x2 * percent;\n                y2 = y1 * (1 - percent) + y2 * percent;\n            }\n            ctx.lineTo(x2, y2);\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} percent\n         * @return {Array.<number>}\n         */\n        pointAt: function (p) {\n            var shape = this.shape;\n            return [\n                shape.x1 * (1 - p) + shape.x2 * p,\n                shape.y1 * (1 - p) + shape.y2 * p\n            ];\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/shape/Line.js\n// module id = 1098\n// module chunks = 0 1 2","'use strict';\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\n\n\n    var curveTool = require('../../core/curve');\n    var vec2 = require('../../core/vector');\n    var quadraticSubdivide = curveTool.quadraticSubdivide;\n    var cubicSubdivide = curveTool.cubicSubdivide;\n    var quadraticAt = curveTool.quadraticAt;\n    var cubicAt = curveTool.cubicAt;\n    var quadraticDerivativeAt = curveTool.quadraticDerivativeAt;\n    var cubicDerivativeAt = curveTool.cubicDerivativeAt;\n\n    var out = [];\n\n    function someVectorAt(shape, t, isTangent) {\n        var cpx2 = shape.cpx2;\n        var cpy2 = shape.cpy2;\n        if (cpx2 === null || cpy2 === null) {\n            return [\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t),\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)\n            ];\n        }\n        else {\n            return [\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t),\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)\n            ];\n        }\n    }\n    module.exports = require('../Path').extend({\n\n        type: 'bezier-curve',\n\n        shape: {\n            x1: 0,\n            y1: 0,\n            x2: 0,\n            y2: 0,\n            cpx1: 0,\n            cpy1: 0,\n            // cpx2: 0,\n            // cpy2: 0\n\n            // Curve show percent, for animating\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var cpx1 = shape.cpx1;\n            var cpy1 = shape.cpy1;\n            var cpx2 = shape.cpx2;\n            var cpy2 = shape.cpy2;\n            var percent = shape.percent;\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (cpx2 == null || cpy2 == null) {\n                if (percent < 1) {\n                    quadraticSubdivide(\n                        x1, cpx1, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    x2 = out[2];\n                    quadraticSubdivide(\n                        y1, cpy1, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    y2 = out[2];\n                }\n\n                ctx.quadraticCurveTo(\n                    cpx1, cpy1,\n                    x2, y2\n                );\n            }\n            else {\n                if (percent < 1) {\n                    cubicSubdivide(\n                        x1, cpx1, cpx2, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    cpx2 = out[2];\n                    x2 = out[3];\n                    cubicSubdivide(\n                        y1, cpy1, cpy2, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    cpy2 = out[2];\n                    y2 = out[3];\n                }\n                ctx.bezierCurveTo(\n                    cpx1, cpy1,\n                    cpx2, cpy2,\n                    x2, y2\n                );\n            }\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        pointAt: function (t) {\n            return someVectorAt(this.shape, t, false);\n        },\n\n        /**\n         * Get tangent at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        tangentAt: function (t) {\n            var p = someVectorAt(this.shape, t, true);\n            return vec2.normalize(p, p);\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/shape/BezierCurve.js\n// module id = 1099\n// module chunks = 0 1 2","/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\n \n\n    module.exports = require('../Path').extend({\n\n        type: 'arc',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        style: {\n\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r + x, unitY * r + y);\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/shape/Arc.js\n// module id = 1100\n// module chunks = 0 1 2","// CompoundPath to improve performance\n\n\n    var Path = require('./Path');\n\n    module.exports = Path.extend({\n\n        type: 'compound',\n\n        shape: {\n\n            paths: null\n        },\n\n        _updatePathDirty: function () {\n            var dirtyPath = this.__dirtyPath;\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                // Mark as dirty if any subpath is dirty\n                dirtyPath = dirtyPath || paths[i].__dirtyPath;\n            }\n            this.__dirtyPath = dirtyPath;\n            this.__dirty = this.__dirty || dirtyPath;\n        },\n\n        beforeBrush: function () {\n            this._updatePathDirty();\n            var paths = this.shape.paths || [];\n            var scale = this.getGlobalScale();\n            // Update path scale\n            for (var i = 0; i < paths.length; i++) {\n                if (!paths[i].path) {\n                    paths[i].createPathProxy();\n                }\n                paths[i].path.setScale(scale[0], scale[1]);\n            }\n        },\n\n        buildPath: function (ctx, shape) {\n            var paths = shape.paths || [];\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].buildPath(ctx, paths[i].shape, true);\n            }\n        },\n\n        afterBrush: function () {\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].__dirtyPath = false;\n            }\n        },\n\n        getBoundingRect: function () {\n            this._updatePathDirty();\n            return Path.prototype.getBoundingRect.call(this);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/CompoundPath.js\n// module id = 1101\n// module chunks = 0 1 2","'use strict';\n\n\n    var zrUtil = require('../core/util');\n\n    var Gradient = require('./Gradient');\n\n    /**\n     * x, y, r are all percent from 0 to 1\n     * @param {number} [x=0.5]\n     * @param {number} [y=0.5]\n     * @param {number} [r=0.5]\n     * @param {Array.<Object>} [colorStops]\n     * @param {boolean} [globalCoord=false]\n     */\n    var RadialGradient = function (x, y, r, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'radial', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0.5 : x;\n\n        this.y = y == null ? 0.5 : y;\n\n        this.r = r == null ? 0.5 : r;\n\n        // Can be cloned\n        this.type = 'radial';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    RadialGradient.prototype = {\n\n        constructor: RadialGradient\n    };\n\n    zrUtil.inherits(RadialGradient, Gradient);\n\n    module.exports = RadialGradient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/RadialGradient.js\n// module id = 1102\n// module chunks = 0 1 2","\n    var getItemStyle = require('./makeStyleMapper')(\n        [\n            ['fill', 'color'],\n            ['stroke', 'borderColor'],\n            ['lineWidth', 'borderWidth'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor'],\n            ['textPosition'],\n            ['textAlign']\n        ]\n    );\n    module.exports = {\n        getItemStyle: function (excludes, includes) {\n            var style = getItemStyle.call(this, excludes, includes);\n            var lineDash = this.getBorderLineDash();\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getBorderLineDash: function () {\n            var lineType = this.get('borderType');\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [5, 5] : [1, 1]);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/mixin/itemStyle.js\n// module id = 1103\n// module chunks = 0 1 2","\n\n    module.exports = {\n        getBoxLayoutParams: function () {\n            return {\n                left: this.get('left'),\n                top: this.get('top'),\n                right: this.get('right'),\n                bottom: this.get('bottom'),\n                width: this.get('width'),\n                height: this.get('height')\n            };\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/mixin/boxLayout.js\n// module id = 1104\n// module chunks = 0 1 2","\n    var platform = '';\n    // Navigator not exists in node\n    if (typeof navigator !== 'undefined') {\n        platform = navigator.platform || '';\n    }\n    module.exports = {\n        // 全图默认背景\n        // backgroundColor: 'rgba(0,0,0,0)',\n\n        // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n        // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n        // 浅色\n        // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n        // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n        // 深色\n        color: ['#c23531','#2f4554', '#61a0a8', '#d48265', '#91c7ae','#749f83',  '#ca8622', '#bda29a','#6e7074', '#546570', '#c4ccd3'],\n\n        // 默认需要 Grid 配置项\n        // grid: {},\n        // 主题，主题\n        textStyle: {\n            // color: '#000',\n            // decoration: 'none',\n            // PENDING\n            fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n            // fontFamily: 'Arial, Verdana, sans-serif',\n            fontSize: 12,\n            fontStyle: 'normal',\n            fontWeight: 'normal'\n        },\n\n        // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n        // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n        // Default is source-over\n        blendMode: null,\n\n        animation: 'auto',\n        animationDuration: 1000,\n        animationDurationUpdate: 300,\n        animationEasing: 'exponentialOut',\n        animationEasingUpdate: 'cubicOut',\n\n        animationThreshold: 2000,\n        // Configuration for progressive/incremental rendering\n        progressiveThreshold: 3000,\n        progressive: 400,\n\n        // Threshold of if use single hover layer to optimize.\n        // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n        // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n        // which is unexpected.\n        // see example <echarts/test/heatmap-large.html>.\n        hoverLayerThreshold: 3000,\n\n        // See: module:echarts/scale/Time\n        useUTC: false\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/globalDefault.js\n// module id = 1105\n// module chunks = 0 1 2","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var echartsAPIList = [\n        'getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed',\n        'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption',\n        'getViewOfComponentModel', 'getViewOfSeriesModel'\n    ];\n    // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\n\n    function ExtensionAPI(chartInstance) {\n        zrUtil.each(echartsAPIList, function (name) {\n            this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n        }, this);\n    }\n\n    module.exports = ExtensionAPI;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/ExtensionAPI.js\n// module id = 1106\n// module chunks = 0 1 2","/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\n\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var ComponentModel = require('./Component');\n    var each = zrUtil.each;\n    var clone = zrUtil.clone;\n    var map = zrUtil.map;\n    var merge = zrUtil.merge;\n\n    var QUERY_REG = /^(min|max)?(.+)$/;\n\n    /**\n     * TERM EXPLANATIONS:\n     *\n     * [option]:\n     *\n     *     An object that contains definitions of components. For example:\n     *     var option = {\n     *         title: {...},\n     *         legend: {...},\n     *         visualMap: {...},\n     *         series: [\n     *             {data: [...]},\n     *             {data: [...]},\n     *             ...\n     *         ]\n     *     };\n     *\n     * [rawOption]:\n     *\n     *     An object input to echarts.setOption. 'rawOption' may be an\n     *     'option', or may be an object contains multi-options. For example:\n     *     var option = {\n     *         baseOption: {\n     *             title: {...},\n     *             legend: {...},\n     *             series: [\n     *                 {data: [...]},\n     *                 {data: [...]},\n     *                 ...\n     *             ]\n     *         },\n     *         timeline: {...},\n     *         options: [\n     *             {title: {...}, series: {data: [...]}},\n     *             {title: {...}, series: {data: [...]}},\n     *             ...\n     *         ],\n     *         media: [\n     *             {\n     *                 query: {maxWidth: 320},\n     *                 option: {series: {x: 20}, visualMap: {show: false}}\n     *             },\n     *             {\n     *                 query: {minWidth: 320, maxWidth: 720},\n     *                 option: {series: {x: 500}, visualMap: {show: true}}\n     *             },\n     *             {\n     *                 option: {series: {x: 1200}, visualMap: {show: true}}\n     *             }\n     *         ]\n     *     };\n     *\n     * @alias module:echarts/model/OptionManager\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    function OptionManager(api) {\n\n        /**\n         * @private\n         * @type {module:echarts/ExtensionAPI}\n         */\n        this._api = api;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._timelineOptions = [];\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._mediaList = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._mediaDefault;\n\n        /**\n         * -1, means default.\n         * empty means no media.\n         * @private\n         * @type {Array.<number>}\n         */\n        this._currentMediaIndices = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._optionBackup;\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._newBaseOption;\n    }\n\n    // timeline.notMerge is not supported in ec3. Firstly there is rearly\n    // case that notMerge is needed. Secondly supporting 'notMerge' requires\n    // rawOption cloned and backuped when timeline changed, which does no\n    // good to performance. What's more, that both timeline and setOption\n    // method supply 'notMerge' brings complex and some problems.\n    // Consider this case:\n    // (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n    // (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n    OptionManager.prototype = {\n\n        constructor: OptionManager,\n\n        /**\n         * @public\n         * @param {Object} rawOption Raw option.\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Array.<Function>} optionPreprocessorFuncs\n         * @return {Object} Init option\n         */\n        setOption: function (rawOption, optionPreprocessorFuncs) {\n            rawOption = clone(rawOption, true);\n\n            // FIXME\n            // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n            var oldOptionBackup = this._optionBackup;\n            var newParsedOption = parseRawOption.call(\n                this, rawOption, optionPreprocessorFuncs, !oldOptionBackup\n            );\n            this._newBaseOption = newParsedOption.baseOption;\n\n            // For setOption at second time (using merge mode);\n            if (oldOptionBackup) {\n                // Only baseOption can be merged.\n                mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption);\n\n                // For simplicity, timeline options and media options do not support merge,\n                // that is, if you `setOption` twice and both has timeline options, the latter\n                // timeline opitons will not be merged to the formers, but just substitude them.\n                if (newParsedOption.timelineOptions.length) {\n                    oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n                }\n                if (newParsedOption.mediaList.length) {\n                    oldOptionBackup.mediaList = newParsedOption.mediaList;\n                }\n                if (newParsedOption.mediaDefault) {\n                    oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n                }\n            }\n            else {\n                this._optionBackup = newParsedOption;\n            }\n        },\n\n        /**\n         * @param {boolean} isRecreate\n         * @return {Object}\n         */\n        mountOption: function (isRecreate) {\n            var optionBackup = this._optionBackup;\n\n            // TODO\n            // 如果没有reset功能则不clone。\n\n            this._timelineOptions = map(optionBackup.timelineOptions, clone);\n            this._mediaList = map(optionBackup.mediaList, clone);\n            this._mediaDefault = clone(optionBackup.mediaDefault);\n            this._currentMediaIndices = [];\n\n            return clone(isRecreate\n                // this._optionBackup.baseOption, which is created at the first `setOption`\n                // called, and is merged into every new option by inner method `mergeOption`\n                // each time `setOption` called, can be only used in `isRecreate`, because\n                // its reliability is under suspicion. In other cases option merge is\n                // performed by `model.mergeOption`.\n                ? optionBackup.baseOption : this._newBaseOption\n            );\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Object}\n         */\n        getTimelineOption: function (ecModel) {\n            var option;\n            var timelineOptions = this._timelineOptions;\n\n            if (timelineOptions.length) {\n                // getTimelineOption can only be called after ecModel inited,\n                // so we can get currentIndex from timelineModel.\n                var timelineModel = ecModel.getComponent('timeline');\n                if (timelineModel) {\n                    option = clone(\n                        timelineOptions[timelineModel.getCurrentIndex()],\n                        true\n                    );\n                }\n            }\n\n            return option;\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Array.<Object>}\n         */\n        getMediaOption: function (ecModel) {\n            var ecWidth = this._api.getWidth();\n            var ecHeight = this._api.getHeight();\n            var mediaList = this._mediaList;\n            var mediaDefault = this._mediaDefault;\n            var indices = [];\n            var result = [];\n\n            // No media defined.\n            if (!mediaList.length && !mediaDefault) {\n                return result;\n            }\n\n            // Multi media may be applied, the latter defined media has higher priority.\n            for (var i = 0, len = mediaList.length; i < len; i++) {\n                if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n                    indices.push(i);\n                }\n            }\n\n            // FIXME\n            // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n            if (!indices.length && mediaDefault) {\n                indices = [-1];\n            }\n\n            if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n                result = map(indices, function (index) {\n                    return clone(\n                        index === -1 ? mediaDefault.option : mediaList[index].option\n                    );\n                });\n            }\n            // Otherwise return nothing.\n\n            this._currentMediaIndices = indices;\n\n            return result;\n        }\n    };\n\n    function parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n        var timelineOptions = [];\n        var mediaList = [];\n        var mediaDefault;\n        var baseOption;\n\n        // Compatible with ec2.\n        var timelineOpt = rawOption.timeline;\n\n        if (rawOption.baseOption) {\n            baseOption = rawOption.baseOption;\n        }\n\n        // For timeline\n        if (timelineOpt || rawOption.options) {\n            baseOption = baseOption || {};\n            timelineOptions = (rawOption.options || []).slice();\n        }\n\n        // For media query\n        if (rawOption.media) {\n            baseOption = baseOption || {};\n            var media = rawOption.media;\n            each(media, function (singleMedia) {\n                if (singleMedia && singleMedia.option) {\n                    if (singleMedia.query) {\n                        mediaList.push(singleMedia);\n                    }\n                    else if (!mediaDefault) {\n                        // Use the first media default.\n                        mediaDefault = singleMedia;\n                    }\n                }\n            });\n        }\n\n        // For normal option\n        if (!baseOption) {\n            baseOption = rawOption;\n        }\n\n        // Set timelineOpt to baseOption in ec3,\n        // which is convenient for merge option.\n        if (!baseOption.timeline) {\n            baseOption.timeline = timelineOpt;\n        }\n\n        // Preprocess.\n        each([baseOption].concat(timelineOptions)\n            .concat(zrUtil.map(mediaList, function (media) {\n                return media.option;\n            })),\n            function (option) {\n                each(optionPreprocessorFuncs, function (preProcess) {\n                    preProcess(option, isNew);\n                });\n            }\n        );\n\n        return {\n            baseOption: baseOption,\n            timelineOptions: timelineOptions,\n            mediaDefault: mediaDefault,\n            mediaList: mediaList\n        };\n    }\n\n    /**\n     * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n     * Support: width, height, aspectRatio\n     * Can use max or min as prefix.\n     */\n    function applyMediaQuery(query, ecWidth, ecHeight) {\n        var realMap = {\n            width: ecWidth,\n            height: ecHeight,\n            aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n        };\n\n        var applicatable = true;\n\n        zrUtil.each(query, function (value, attr) {\n            var matched = attr.match(QUERY_REG);\n\n            if (!matched || !matched[1] || !matched[2]) {\n                return;\n            }\n\n            var operator = matched[1];\n            var realAttr = matched[2].toLowerCase();\n\n            if (!compare(realMap[realAttr], value, operator)) {\n                applicatable = false;\n            }\n        });\n\n        return applicatable;\n    }\n\n    function compare(real, expect, operator) {\n        if (operator === 'min') {\n            return real >= expect;\n        }\n        else if (operator === 'max') {\n            return real <= expect;\n        }\n        else { // Equals\n            return real === expect;\n        }\n    }\n\n    function indicesEquals(indices1, indices2) {\n        // indices is always order by asc and has only finite number.\n        return indices1.join(',') === indices2.join(',');\n    }\n\n    /**\n     * Consider case:\n     * `chart.setOption(opt1);`\n     * Then user do some interaction like dataZoom, dataView changing.\n     * `chart.setOption(opt2);`\n     * Then user press 'reset button' in toolbox.\n     *\n     * After doing that all of the interaction effects should be reset, the\n     * chart should be the same as the result of invoke\n     * `chart.setOption(opt1); chart.setOption(opt2);`.\n     *\n     * Although it is not able ensure that\n     * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n     * `chart.setOption(merge(opt1, opt2));` exactly,\n     * this might be the only simple way to implement that feature.\n     *\n     * MEMO: We've considered some other approaches:\n     * 1. Each model handle its self restoration but not uniform treatment.\n     *     (Too complex in logic and error-prone)\n     * 2. Use a shadow ecModel. (Performace expensive)\n     */\n    function mergeOption(oldOption, newOption) {\n        newOption = newOption || {};\n\n        each(newOption, function (newCptOpt, mainType) {\n            if (newCptOpt == null) {\n                return;\n            }\n\n            var oldCptOpt = oldOption[mainType];\n\n            if (!ComponentModel.hasClass(mainType)) {\n                oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n            }\n            else {\n                newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n                oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n\n                var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n\n                oldOption[mainType] = map(mapResult, function (item) {\n                    return (item.option && item.exist)\n                        ? merge(item.exist, item.option, true)\n                        : (item.exist || item.option);\n                });\n            }\n        });\n    }\n\n    module.exports = OptionManager;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/OptionManager.js\n// module id = 1107\n// module chunks = 0 1 2","// Compatitable with 2.0\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var compatStyle = require('./helper/compatStyle');\n\n    function get(opt, path) {\n        path = path.split(',');\n        var obj = opt;\n        for (var i = 0; i < path.length; i++) {\n            obj = obj && obj[path[i]];\n            if (obj == null) {\n                break;\n            }\n        }\n        return obj;\n    }\n\n    function set(opt, path, val, overwrite) {\n        path = path.split(',');\n        var obj = opt;\n        var key;\n        for (var i = 0; i < path.length - 1; i++) {\n            key = path[i];\n            if (obj[key] == null) {\n                obj[key] = {};\n            }\n            obj = obj[key];\n        }\n        if (overwrite || obj[path[i]] == null) {\n            obj[path[i]] = val;\n        }\n    }\n\n    function compatLayoutProperties(option) {\n        each(LAYOUT_PROPERTIES, function (prop) {\n            if (prop[0] in option && !(prop[1] in option)) {\n                option[prop[1]] = option[prop[0]];\n            }\n        });\n    }\n\n    var LAYOUT_PROPERTIES = [\n        ['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']\n    ];\n\n    var COMPATITABLE_COMPONENTS = [\n        'grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'\n    ];\n\n    var COMPATITABLE_SERIES = [\n        'bar', 'boxplot', 'candlestick', 'chord', 'effectScatter',\n        'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel',\n        'pie', 'radar', 'sankey', 'scatter', 'treemap'\n    ];\n\n    var each = zrUtil.each;\n\n    module.exports = function (option, isTheme) {\n        compatStyle(option, isTheme);\n\n        var series = option.series;\n        each(zrUtil.isArray(series) ? series : [series], function (seriesOpt) {\n            if (!zrUtil.isObject(seriesOpt)) {\n                return;\n            }\n\n            var seriesType = seriesOpt.type;\n\n            if (seriesType === 'pie' || seriesType === 'gauge') {\n                if (seriesOpt.clockWise != null) {\n                    seriesOpt.clockwise = seriesOpt.clockWise;\n                }\n            }\n            if (seriesType === 'gauge') {\n                var pointerColor = get(seriesOpt, 'pointer.color');\n                pointerColor != null\n                    && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n            }\n\n            for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\n                if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\n                    compatLayoutProperties(seriesOpt);\n                    break;\n                }\n            }\n        });\n\n        // dataRange has changed to visualMap\n        if (option.dataRange) {\n            option.visualMap = option.dataRange;\n        }\n\n        each(COMPATITABLE_COMPONENTS, function (componentName) {\n            var options = option[componentName];\n            if (options) {\n                if (!zrUtil.isArray(options)) {\n                    options = [options];\n                }\n                each(options, function (option) {\n                    compatLayoutProperties(option);\n                });\n            }\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/preprocessor/backwardCompat.js\n// module id = 1108\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n\n    var each = zrUtil.each;\n    var isObject = zrUtil.isObject;\n\n    var POSSIBLE_STYLES = [\n        'areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle',\n        'chordStyle', 'label', 'labelLine'\n    ];\n\n    function compatItemStyle(opt) {\n        var itemStyleOpt = opt && opt.itemStyle;\n        if (!itemStyleOpt) {\n            return;\n        }\n        for (var i = 0, len = POSSIBLE_STYLES.length; i < len; i++) {\n            var styleName = POSSIBLE_STYLES[i];\n            var normalItemStyleOpt = itemStyleOpt.normal;\n            var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n            if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n                opt[styleName] = opt[styleName] || {};\n                if (!opt[styleName].normal) {\n                    opt[styleName].normal = normalItemStyleOpt[styleName];\n                }\n                else {\n                    zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n                }\n                normalItemStyleOpt[styleName] = null;\n            }\n            if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n                opt[styleName] = opt[styleName] || {};\n                if (!opt[styleName].emphasis) {\n                    opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n                }\n                else {\n                    zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n                }\n                emphasisItemStyleOpt[styleName] = null;\n            }\n        }\n    }\n\n    function compatTextStyle(opt, propName) {\n        var labelOptSingle = isObject(opt) && opt[propName];\n        var textStyle = isObject(labelOptSingle) && labelOptSingle.textStyle;\n        if (textStyle) {\n            for (var i = 0, len = modelUtil.TEXT_STYLE_OPTIONS.length; i < len; i++) {\n                var propName = modelUtil.TEXT_STYLE_OPTIONS[i];\n                if (textStyle.hasOwnProperty(propName)) {\n                    labelOptSingle[propName] = textStyle[propName];\n                }\n            }\n        }\n    }\n\n    function compatLabelTextStyle(labelOpt) {\n        if (isObject(labelOpt)) {\n            compatTextStyle(labelOpt, 'normal');\n            compatTextStyle(labelOpt, 'emphasis');\n        }\n    }\n\n    function processSeries(seriesOpt) {\n        if (!isObject(seriesOpt)) {\n            return;\n        }\n\n        compatItemStyle(seriesOpt);\n        compatLabelTextStyle(seriesOpt.label);\n        // treemap\n        compatLabelTextStyle(seriesOpt.upperLabel);\n        // graph\n        compatLabelTextStyle(seriesOpt.edgeLabel);\n\n        var markPoint = seriesOpt.markPoint;\n        compatItemStyle(markPoint);\n        compatLabelTextStyle(markPoint && markPoint.label);\n\n        var markLine = seriesOpt.markLine;\n        compatItemStyle(seriesOpt.markLine);\n        compatLabelTextStyle(markLine && markLine.label);\n\n        var markArea = seriesOpt.markArea;\n        compatLabelTextStyle(markArea && markArea.label);\n\n        // For gauge\n        compatTextStyle(seriesOpt, 'axisLabel');\n        compatTextStyle(seriesOpt, 'title');\n        compatTextStyle(seriesOpt, 'detail');\n\n        var data = seriesOpt.data;\n        if (data) {\n            for (var i = 0; i < data.length; i++) {\n                compatItemStyle(data[i]);\n                compatLabelTextStyle(data[i] && data[i].label);\n            }\n        }\n\n        // mark point data\n        var markPoint = seriesOpt.markPoint;\n        if (markPoint && markPoint.data) {\n            var mpData = markPoint.data;\n            for (var i = 0; i < mpData.length; i++) {\n                compatItemStyle(mpData[i]);\n                compatLabelTextStyle(mpData[i] && mpData[i].label);\n            }\n        }\n        // mark line data\n        var markLine = seriesOpt.markLine;\n        if (markLine && markLine.data) {\n            var mlData = markLine.data;\n            for (var i = 0; i < mlData.length; i++) {\n                if (zrUtil.isArray(mlData[i])) {\n                    compatItemStyle(mlData[i][0]);\n                    compatLabelTextStyle(mlData[i][0] && mlData[i][0].label);\n                    compatItemStyle(mlData[i][1]);\n                    compatLabelTextStyle(mlData[i][1] && mlData[i][1].label);\n                }\n                else {\n                    compatItemStyle(mlData[i]);\n                    compatLabelTextStyle(mlData[i] && mlData[i].label);\n                }\n            }\n        }\n    }\n\n    function toArr(o) {\n        return zrUtil.isArray(o) ? o : o ? [o] : [];\n    }\n\n    function toObj(o) {\n        return (zrUtil.isArray(o) ? o[0] : o) || {};\n    }\n\n    module.exports = function (option, isTheme) {\n        each(toArr(option.series), function (seriesOpt) {\n            isObject(seriesOpt) && processSeries(seriesOpt);\n        });\n\n        var axes = ['xAxis', 'yAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'parallelAxis', 'radar'];\n        isTheme && axes.push('valueAxis', 'categoryAxis', 'logAxis', 'timeAxis');\n\n        each(\n            axes,\n            function (axisName) {\n                each(toArr(option[axisName]), function (axisOpt) {\n                    if (axisOpt) {\n                        compatTextStyle(axisOpt, 'axisLabel');\n                        compatTextStyle(axisOpt.axisPointer, 'label');\n                    }\n                });\n            }\n        );\n\n        each(toArr(option.parallel), function (parallelOpt) {\n            var parallelAxisDefault = parallelOpt && parallelOpt.parallelAxisDefault;\n            compatTextStyle(parallelAxisDefault, 'axisLabel');\n            compatTextStyle(parallelAxisDefault && parallelAxisDefault.axisPointer, 'label');\n        });\n\n        each(toArr(option.calendar), function (calendarOpt) {\n            compatTextStyle(calendarOpt, 'dayLabel');\n            compatTextStyle(calendarOpt, 'monthLabel');\n            compatTextStyle(calendarOpt, 'yearLabel');\n        });\n\n        // radar.name.textStyle\n        each(toArr(option.radar), function (radarOpt) {\n            compatTextStyle(radarOpt, 'name');\n        });\n\n        each(toArr(option.geo), function (geoOpt) {\n            if (isObject(geoOpt)) {\n                compatLabelTextStyle(geoOpt.label);\n                each(toArr(geoOpt.regions), function (regionObj) {\n                    compatLabelTextStyle(regionObj.label);\n                });\n            }\n        });\n\n        compatLabelTextStyle(toObj(option.timeline).label);\n        compatTextStyle(toObj(option.axisPointer), 'label');\n        compatTextStyle(toObj(option.tooltip).axisPointer, 'label');\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/preprocessor/helper/compatStyle.js\n// module id = 1109\n// module chunks = 0 1 2","'use strict';\n/**\n * Handler\n * @module zrender/Handler\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (shenyi.914@gmail.com)\n */\n\n\n    var util = require('./core/util');\n    var vec2 = require('./core/vector');\n    var Draggable = require('./mixin/Draggable');\n\n    var Eventful = require('./mixin/Eventful');\n\n    var SILENT = 'silent';\n\n    function makeEventPacket(eveType, targetInfo, event) {\n        return {\n            type: eveType,\n            event: event,\n            // target can only be an element that is not silent.\n            target: targetInfo.target,\n            // topTarget can be a silent element.\n            topTarget: targetInfo.topTarget,\n            cancelBubble: false,\n            offsetX: event.zrX,\n            offsetY: event.zrY,\n            gestureEvent: event.gestureEvent,\n            pinchX: event.pinchX,\n            pinchY: event.pinchY,\n            pinchScale: event.pinchScale,\n            wheelDelta: event.zrDelta,\n            zrByTouch: event.zrByTouch,\n            which: event.which\n        };\n    }\n\n    function EmptyProxy () {}\n    EmptyProxy.prototype.dispose = function () {};\n\n    var handlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n    /**\n     * @alias module:zrender/Handler\n     * @constructor\n     * @extends module:zrender/mixin/Eventful\n     * @param {module:zrender/Storage} storage Storage instance.\n     * @param {module:zrender/Painter} painter Painter instance.\n     * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n     * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n     */\n    var Handler = function(storage, painter, proxy, painterRoot) {\n        Eventful.call(this);\n\n        this.storage = storage;\n\n        this.painter = painter;\n\n        this.painterRoot = painterRoot;\n\n        proxy = proxy || new EmptyProxy();\n\n        /**\n         * Proxy of event. can be Dom, WebGLSurface, etc.\n         */\n        this.proxy = proxy;\n\n        // Attach handler\n        proxy.handler = this;\n\n        /**\n         * {target, topTarget, x, y}\n         * @private\n         * @type {Object}\n         */\n        this._hovered = {};\n\n        /**\n         * @private\n         * @type {Date}\n         */\n        this._lastTouchMoment;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastX;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastY;\n\n\n        Draggable.call(this);\n\n        util.each(handlerNames, function (name) {\n            proxy.on && proxy.on(name, this[name], this);\n        }, this);\n    };\n\n    Handler.prototype = {\n\n        constructor: Handler,\n\n        mousemove: function (event) {\n            var x = event.zrX;\n            var y = event.zrY;\n\n            var lastHovered = this._hovered;\n            var lastHoveredTarget = lastHovered.target;\n\n            // If lastHoveredTarget is removed from zr (detected by '__zr') by some API call\n            // (like 'setOption' or 'dispatchAction') in event handlers, we should find\n            // lastHovered again here. Otherwise 'mouseout' can not be triggered normally.\n            // See #6198.\n            if (lastHoveredTarget && !lastHoveredTarget.__zr) {\n                lastHovered = this.findHover(lastHovered.x, lastHovered.y);\n                lastHoveredTarget = lastHovered.target;\n            }\n\n            var hovered = this._hovered = this.findHover(x, y);\n            var hoveredTarget = hovered.target;\n\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default');\n\n            // Mouse out on previous hovered element\n            if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget) {\n                this.dispatchToElement(lastHovered, 'mouseout', event);\n            }\n\n            // Mouse moving on one element\n            this.dispatchToElement(hovered, 'mousemove', event);\n\n            // Mouse over on a new element\n            if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n                this.dispatchToElement(hovered, 'mouseover', event);\n            }\n        },\n\n        mouseout: function (event) {\n            this.dispatchToElement(this._hovered, 'mouseout', event);\n\n            // There might be some doms created by upper layer application\n            // at the same level of painter.getViewportRoot() (e.g., tooltip\n            // dom created by echarts), where 'globalout' event should not\n            // be triggered when mouse enters these doms. (But 'mouseout'\n            // should be triggered at the original hovered element as usual).\n            var element = event.toElement || event.relatedTarget;\n            var innerDom;\n            do {\n                element = element && element.parentNode;\n            }\n            while (element && element.nodeType != 9 && !(\n                innerDom = element === this.painterRoot\n            ));\n\n            !innerDom && this.trigger('globalout', {event: event});\n        },\n\n        /**\n         * Resize\n         */\n        resize: function (event) {\n            this._hovered = {};\n        },\n\n        /**\n         * Dispatch event\n         * @param {string} eventName\n         * @param {event=} eventArgs\n         */\n        dispatch: function (eventName, eventArgs) {\n            var handler = this[eventName];\n            handler && handler.call(this, eventArgs);\n        },\n\n        /**\n         * Dispose\n         */\n        dispose: function () {\n\n            this.proxy.dispose();\n\n            this.storage =\n            this.proxy =\n            this.painter = null;\n        },\n\n        /**\n         * 设置默认的cursor style\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(cursorStyle);\n        },\n\n        /**\n         * 事件分发代理\n         *\n         * @private\n         * @param {Object} targetInfo {target, topTarget} 目标图形元素\n         * @param {string} eventName 事件名称\n         * @param {Object} event 事件对象\n         */\n        dispatchToElement: function (targetInfo, eventName, event) {\n            targetInfo = targetInfo || {};\n            var el = targetInfo.target;\n            if (el && el.silent) {\n                return;\n            }\n            var eventHandler = 'on' + eventName;\n            var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n            while (el) {\n                el[eventHandler]\n                    && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n\n                el.trigger(eventName, eventPacket);\n\n                el = el.parent;\n\n                if (eventPacket.cancelBubble) {\n                    break;\n                }\n            }\n\n            if (!eventPacket.cancelBubble) {\n                // 冒泡到顶级 zrender 对象\n                this.trigger(eventName, eventPacket);\n                // 分发事件到用户自定义层\n                // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n                this.painter && this.painter.eachOtherLayer(function (layer) {\n                    if (typeof(layer[eventHandler]) == 'function') {\n                        layer[eventHandler].call(layer, eventPacket);\n                    }\n                    if (layer.trigger) {\n                        layer.trigger(eventName, eventPacket);\n                    }\n                });\n            }\n        },\n\n        /**\n         * @private\n         * @param {number} x\n         * @param {number} y\n         * @param {module:zrender/graphic/Displayable} exclude\n         * @return {model:zrender/Element}\n         * @method\n         */\n        findHover: function(x, y, exclude) {\n            var list = this.storage.getDisplayList();\n            var out = {x: x, y: y};\n\n            for (var i = list.length - 1; i >= 0 ; i--) {\n                var hoverCheckResult;\n                if (list[i] !== exclude\n                    // getDisplayList may include ignored item in VML mode\n                    && !list[i].ignore\n                    && (hoverCheckResult = isHover(list[i], x, y))\n                ) {\n                    !out.topTarget && (out.topTarget = list[i]);\n                    if (hoverCheckResult !== SILENT) {\n                        out.target = list[i];\n                        break;\n                    }\n                }\n            }\n\n            return out;\n        }\n    };\n\n    // Common handlers\n    util.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        Handler.prototype[name] = function (event) {\n            // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n            var hovered = this.findHover(event.zrX, event.zrY);\n            var hoveredTarget = hovered.target;\n\n            if (name === 'mousedown') {\n                this._downEl = hoveredTarget;\n                this._downPoint = [event.zrX, event.zrY];\n                // In case click triggered before mouseup\n                this._upEl = hoveredTarget;\n            }\n            else if (name === 'mosueup') {\n                this._upEl = hoveredTarget;\n            }\n            else if (name === 'click') {\n                if (this._downEl !== this._upEl\n                    // Original click event is triggered on the whole canvas element,\n                    // including the case that `mousedown` - `mousemove` - `mouseup`,\n                    // which should be filtered, otherwise it will bring trouble to\n                    // pan and zoom.\n                    || !this._downPoint\n                    // Arbitrary value\n                    || vec2.dist(this._downPoint, [event.zrX, event.zrY]) > 4\n                ) {\n                    return;\n                }\n                this._downPoint = null;\n            }\n\n            this.dispatchToElement(hovered, name, event);\n        };\n    });\n\n    function isHover(displayable, x, y) {\n        if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n            var el = displayable;\n            var isSilent;\n            while (el) {\n                // If clipped by ancestor.\n                // FIXME: If clipPath has neither stroke nor fill,\n                // el.clipPath.contain(x, y) will always return false.\n                if (el.clipPath && !el.clipPath.contain(x, y))  {\n                    return false;\n                }\n                if (el.silent) {\n                    isSilent = true;\n                }\n                el = el.parent;\n            }\n            return isSilent ? SILENT : true;\n        }\n\n        return false;\n    }\n\n    util.mixin(Handler, Eventful);\n    util.mixin(Handler, Draggable);\n\n    module.exports = Handler;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/Handler.js\n// module id = 1110\n// module chunks = 0 1 2","// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\n\n    function Draggable() {\n\n        this.on('mousedown', this._dragStart, this);\n        this.on('mousemove', this._drag, this);\n        this.on('mouseup', this._dragEnd, this);\n        this.on('globalout', this._dragEnd, this);\n        // this._dropTarget = null;\n        // this._draggingTarget = null;\n\n        // this._x = 0;\n        // this._y = 0;\n    }\n\n    Draggable.prototype = {\n\n        constructor: Draggable,\n\n        _dragStart: function (e) {\n            var draggingTarget = e.target;\n            if (draggingTarget && draggingTarget.draggable) {\n                this._draggingTarget = draggingTarget;\n                draggingTarget.dragging = true;\n                this._x = e.offsetX;\n                this._y = e.offsetY;\n\n                this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n            }\n        },\n\n        _drag: function (e) {\n            var draggingTarget = this._draggingTarget;\n            if (draggingTarget) {\n\n                var x = e.offsetX;\n                var y = e.offsetY;\n\n                var dx = x - this._x;\n                var dy = y - this._y;\n                this._x = x;\n                this._y = y;\n\n                draggingTarget.drift(dx, dy, e);\n                this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n\n                var dropTarget = this.findHover(x, y, draggingTarget).target;\n                var lastDropTarget = this._dropTarget;\n                this._dropTarget = dropTarget;\n\n                if (draggingTarget !== dropTarget) {\n                    if (lastDropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n                    }\n                    if (dropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n                    }\n                }\n            }\n        },\n\n        _dragEnd: function (e) {\n            var draggingTarget = this._draggingTarget;\n\n            if (draggingTarget) {\n                draggingTarget.dragging = false;\n            }\n\n            this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n            if (this._dropTarget) {\n                this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n            }\n\n            this._draggingTarget = null;\n            this._dropTarget = null;\n        }\n\n    };\n\n    function param(target, e) {\n        return {target: target, topTarget: e && e.topTarget};\n    }\n\n    module.exports = Draggable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/mixin/Draggable.js\n// module id = 1111\n// module chunks = 0 1 2","'use strict';\n/**\n * Storage内容仓库模块\n * @module zrender/Storage\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @author errorrik (errorrik@gmail.com)\n * @author pissang (https://github.com/pissang/)\n */\n\n\n    var util = require('./core/util');\n    var env = require('./core/env');\n\n    var Group = require('./container/Group');\n\n    // Use timsort because in most case elements are partially sorted\n    // https://jsfiddle.net/pissang/jr4x7mdm/8/\n    var timsort = require('./core/timsort');\n\n    function shapeCompareFunc(a, b) {\n        if (a.zlevel === b.zlevel) {\n            if (a.z === b.z) {\n                // if (a.z2 === b.z2) {\n                //     // FIXME Slow has renderidx compare\n                //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n                //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n                //     return a.__renderidx - b.__renderidx;\n                // }\n                return a.z2 - b.z2;\n            }\n            return a.z - b.z;\n        }\n        return a.zlevel - b.zlevel;\n    }\n    /**\n     * 内容仓库 (M)\n     * @alias module:zrender/Storage\n     * @constructor\n     */\n    var Storage = function () {\n        this._roots = [];\n\n        this._displayList = [];\n\n        this._displayListLen = 0;\n    };\n\n    Storage.prototype = {\n\n        constructor: Storage,\n\n        /**\n         * @param  {Function} cb\n         *\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._roots.length; i++) {\n                this._roots[i].traverse(cb, context);\n            }\n        },\n\n        /**\n         * 返回所有图形的绘制队列\n         * @param {boolean} [update=false] 是否在返回前更新该数组\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n         *\n         * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n         * @return {Array.<module:zrender/graphic/Displayable>}\n         */\n        getDisplayList: function (update, includeIgnore) {\n            includeIgnore = includeIgnore || false;\n            if (update) {\n                this.updateDisplayList(includeIgnore);\n            }\n            return this._displayList;\n        },\n\n        /**\n         * 更新图形的绘制队列。\n         * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n         * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n         */\n        updateDisplayList: function (includeIgnore) {\n            this._displayListLen = 0;\n            var roots = this._roots;\n            var displayList = this._displayList;\n            for (var i = 0, len = roots.length; i < len; i++) {\n                this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n            }\n            displayList.length = this._displayListLen;\n\n            // for (var i = 0, len = displayList.length; i < len; i++) {\n            //     displayList[i].__renderidx = i;\n            // }\n\n            // displayList.sort(shapeCompareFunc);\n            env.canvasSupported && timsort(displayList, shapeCompareFunc);\n        },\n\n        _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n\n            if (el.ignore && !includeIgnore) {\n                return;\n            }\n\n            el.beforeUpdate();\n\n            if (el.__dirty) {\n\n                el.update();\n\n            }\n\n            el.afterUpdate();\n\n            var userSetClipPath = el.clipPath;\n            if (userSetClipPath) {\n\n                // FIXME 效率影响\n                if (clipPaths) {\n                    clipPaths = clipPaths.slice();\n                }\n                else {\n                    clipPaths = [];\n                }\n\n                var currentClipPath = userSetClipPath;\n                var parentClipPath = el;\n                // Recursively add clip path\n                while (currentClipPath) {\n                    // clipPath 的变换是基于使用这个 clipPath 的元素\n                    currentClipPath.parent = parentClipPath;\n                    currentClipPath.updateTransform();\n\n                    clipPaths.push(currentClipPath);\n\n                    parentClipPath = currentClipPath;\n                    currentClipPath = currentClipPath.clipPath;\n                }\n            }\n\n            if (el.isGroup) {\n                var children = el._children;\n\n                for (var i = 0; i < children.length; i++) {\n                    var child = children[i];\n\n                    // Force to mark as dirty if group is dirty\n                    // FIXME __dirtyPath ?\n                    if (el.__dirty) {\n                        child.__dirty = true;\n                    }\n\n                    this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n                }\n\n                // Mark group clean here\n                el.__dirty = false;\n\n            }\n            else {\n                el.__clipPaths = clipPaths;\n\n                this._displayList[this._displayListLen++] = el;\n            }\n        },\n\n        /**\n         * 添加图形(Shape)或者组(Group)到根节点\n         * @param {module:zrender/Element} el\n         */\n        addRoot: function (el) {\n            if (el.__storage === this) {\n                return;\n            }\n\n            if (el instanceof Group) {\n                el.addChildrenToStorage(this);\n            }\n\n            this.addToStorage(el);\n            this._roots.push(el);\n        },\n\n        /**\n         * 删除指定的图形(Shape)或者组(Group)\n         * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n         */\n        delRoot: function (el) {\n            if (el == null) {\n                // 不指定el清空\n                for (var i = 0; i < this._roots.length; i++) {\n                    var root = this._roots[i];\n                    if (root instanceof Group) {\n                        root.delChildrenFromStorage(this);\n                    }\n                }\n\n                this._roots = [];\n                this._displayList = [];\n                this._displayListLen = 0;\n\n                return;\n            }\n\n            if (el instanceof Array) {\n                for (var i = 0, l = el.length; i < l; i++) {\n                    this.delRoot(el[i]);\n                }\n                return;\n            }\n\n\n            var idx = util.indexOf(this._roots, el);\n            if (idx >= 0) {\n                this.delFromStorage(el);\n                this._roots.splice(idx, 1);\n                if (el instanceof Group) {\n                    el.delChildrenFromStorage(this);\n                }\n            }\n        },\n\n        addToStorage: function (el) {\n            el.__storage = this;\n            el.dirty(false);\n\n            return this;\n        },\n\n        delFromStorage: function (el) {\n            if (el) {\n                el.__storage = null;\n            }\n\n            return this;\n        },\n\n        /**\n         * 清空并且释放Storage\n         */\n        dispose: function () {\n            this._renderList =\n            this._roots = null;\n        },\n\n        displayableSortFunc: shapeCompareFunc\n    };\n\n    module.exports = Storage;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/Storage.js\n// module id = 1112\n// module chunks = 0 1 2","'use strict';\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n\n    var util = require('../core/util');\n    var Dispatcher = require('../core/event').Dispatcher;\n\n    var requestAnimationFrame = require('./requestAnimationFrame');\n\n    var Animator = require('./Animator');\n    /**\n     * @typedef {Object} IZRenderStage\n     * @property {Function} update\n     */\n\n    /**\n     * @alias module:zrender/animation/Animation\n     * @constructor\n     * @param {Object} [options]\n     * @param {Function} [options.onframe]\n     * @param {IZRenderStage} [options.stage]\n     * @example\n     *     var animation = new Animation();\n     *     var obj = {\n     *         x: 100,\n     *         y: 100\n     *     };\n     *     animation.animate(node.position)\n     *         .when(1000, {\n     *             x: 500,\n     *             y: 500\n     *         })\n     *         .when(2000, {\n     *             x: 100,\n     *             y: 100\n     *         })\n     *         .start('spline');\n     */\n    var Animation = function (options) {\n\n        options = options || {};\n\n        this.stage = options.stage || {};\n\n        this.onframe = options.onframe || function() {};\n\n        // private properties\n        this._clips = [];\n\n        this._running = false;\n\n        this._time;\n\n        this._pausedTime;\n\n        this._pauseStart;\n\n        this._paused = false;\n\n        Dispatcher.call(this);\n    };\n\n    Animation.prototype = {\n\n        constructor: Animation,\n        /**\n         * 添加 clip\n         * @param {module:zrender/animation/Clip} clip\n         */\n        addClip: function (clip) {\n            this._clips.push(clip);\n        },\n        /**\n         * 添加 animator\n         * @param {module:zrender/animation/Animator} animator\n         */\n        addAnimator: function (animator) {\n            animator.animation = this;\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.addClip(clips[i]);\n            }\n        },\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Clip} clip\n         */\n        removeClip: function(clip) {\n            var idx = util.indexOf(this._clips, clip);\n            if (idx >= 0) {\n                this._clips.splice(idx, 1);\n            }\n        },\n\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Animator} animator\n         */\n        removeAnimator: function (animator) {\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.removeClip(clips[i]);\n            }\n            animator.animation = null;\n        },\n\n        _update: function() {\n\n            var time = new Date().getTime() - this._pausedTime;\n            var delta = time - this._time;\n            var clips = this._clips;\n            var len = clips.length;\n\n            var deferredEvents = [];\n            var deferredClips = [];\n            for (var i = 0; i < len; i++) {\n                var clip = clips[i];\n                var e = clip.step(time, delta);\n                // Throw out the events need to be called after\n                // stage.update, like destroy\n                if (e) {\n                    deferredEvents.push(e);\n                    deferredClips.push(clip);\n                }\n            }\n\n            // Remove the finished clip\n            for (var i = 0; i < len;) {\n                if (clips[i]._needsRemove) {\n                    clips[i] = clips[len - 1];\n                    clips.pop();\n                    len--;\n                }\n                else {\n                    i++;\n                }\n            }\n\n            len = deferredEvents.length;\n            for (var i = 0; i < len; i++) {\n                deferredClips[i].fire(deferredEvents[i]);\n            }\n\n            this._time = time;\n\n            this.onframe(delta);\n\n            this.trigger('frame', delta);\n\n            if (this.stage.update) {\n                this.stage.update();\n            }\n        },\n\n        _startLoop: function () {\n            var self = this;\n\n            this._running = true;\n\n            function step() {\n                if (self._running) {\n\n                    requestAnimationFrame(step);\n\n                    !self._paused && self._update();\n                }\n            }\n\n            requestAnimationFrame(step);\n        },\n\n        /**\n         * 开始运行动画\n         */\n        start: function () {\n\n            this._time = new Date().getTime();\n            this._pausedTime = 0;\n\n            this._startLoop();\n        },\n        /**\n         * 停止运行动画\n         */\n        stop: function () {\n            this._running = false;\n        },\n\n        /**\n         * Pause\n         */\n        pause: function () {\n            if (!this._paused) {\n                this._pauseStart = new Date().getTime();\n                this._paused = true;\n            }\n        },\n\n        /**\n         * Resume\n         */\n        resume: function () {\n            if (this._paused) {\n                this._pausedTime += (new Date().getTime()) - this._pauseStart;\n                this._paused = false;\n            }\n        },\n\n        /**\n         * 清除所有动画片段\n         */\n        clear: function () {\n            this._clips = [];\n        },\n        /**\n         * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n         * @param  {Object} target\n         * @param  {Object} options\n         * @param  {boolean} [options.loop=false] 是否循环播放动画\n         * @param  {Function} [options.getter=null]\n         *         如果指定getter函数，会通过getter函数取属性值\n         * @param  {Function} [options.setter=null]\n         *         如果指定setter函数，会通过setter函数设置属性值\n         * @return {module:zrender/animation/Animation~Animator}\n         */\n        // TODO Gap\n        animate: function (target, options) {\n            options = options || {};\n\n            var animator = new Animator(\n                target,\n                options.loop,\n                options.getter,\n                options.setter\n            );\n\n            this.addAnimator(animator);\n\n            return animator;\n        }\n    };\n\n    util.mixin(Animation, Dispatcher);\n\n    module.exports = Animation;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/animation/Animation.js\n// module id = 1113\n// module chunks = 0 1 2","\n\n    var eventTool = require('../core/event');\n    var zrUtil = require('../core/util');\n    var Eventful = require('../mixin/Eventful');\n    var env = require('../core/env');\n    var GestureMgr = require('../core/GestureMgr');\n\n    var addEventListener = eventTool.addEventListener;\n    var removeEventListener = eventTool.removeEventListener;\n    var normalizeEvent = eventTool.normalizeEvent;\n\n    var TOUCH_CLICK_DELAY = 300;\n\n    var mouseHandlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n\n    var touchHandlerNames = [\n        'touchstart', 'touchend', 'touchmove'\n    ];\n\n    var pointerEventNames = {\n        pointerdown: 1, pointerup: 1, pointermove: 1, pointerout: 1\n    };\n\n    var pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n        var nm = name.replace('mouse', 'pointer');\n        return pointerEventNames[nm] ? nm : name;\n    });\n\n    function eventNameFix(name) {\n        return (name === 'mousewheel' && env.browser.firefox) ? 'DOMMouseScroll' : name;\n    }\n\n    function processGesture(proxy, event, stage) {\n        var gestureMgr = proxy._gestureMgr;\n\n        stage === 'start' && gestureMgr.clear();\n\n        var gestureInfo = gestureMgr.recognize(\n            event,\n            proxy.handler.findHover(event.zrX, event.zrY, null).target,\n            proxy.dom\n        );\n\n        stage === 'end' && gestureMgr.clear();\n\n        // Do not do any preventDefault here. Upper application do that if necessary.\n        if (gestureInfo) {\n            var type = gestureInfo.type;\n            event.gestureEvent = type;\n\n            proxy.handler.dispatchToElement({target: gestureInfo.target}, type, gestureInfo.event);\n        }\n    }\n\n    // function onMSGestureChange(proxy, event) {\n    //     if (event.translationX || event.translationY) {\n    //         // mousemove is carried by MSGesture to reduce the sensitivity.\n    //         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n    //     }\n    //     if (event.scale !== 1) {\n    //         event.pinchX = event.offsetX;\n    //         event.pinchY = event.offsetY;\n    //         event.pinchScale = event.scale;\n    //         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n    //     }\n    // }\n\n    /**\n     * Prevent mouse event from being dispatched after Touch Events action\n     * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n     * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n     * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n     * Result: Blocking Mouse Events for 700ms.\n     */\n    function setTouchTimer(instance) {\n        instance._touching = true;\n        clearTimeout(instance._touchTimer);\n        instance._touchTimer = setTimeout(function () {\n            instance._touching = false;\n        }, 700);\n    }\n\n\n    var domHandlers = {\n        /**\n         * Mouse move handler\n         * @inner\n         * @param {Event} event\n         */\n        mousemove: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            this.trigger('mousemove', event);\n        },\n\n        /**\n         * Mouse out handler\n         * @inner\n         * @param {Event} event\n         */\n        mouseout: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            var element = event.toElement || event.relatedTarget;\n            if (element != this.dom) {\n                while (element && element.nodeType != 9) {\n                    // 忽略包含在root中的dom引起的mouseOut\n                    if (element === this.dom) {\n                        return;\n                    }\n\n                    element = element.parentNode;\n                }\n            }\n\n            this.trigger('mouseout', event);\n        },\n\n        /**\n         * Touch开始响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchstart: function (event) {\n            // Default mouse behaviour should not be disabled here.\n            // For example, page may needs to be slided.\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            this._lastTouchMoment = new Date();\n\n            processGesture(this, event, 'start');\n\n            // In touch device, trigger `mousemove`(`mouseover`) should\n            // be triggered, and must before `mousedown` triggered.\n            domHandlers.mousemove.call(this, event);\n\n            domHandlers.mousedown.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch移动响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchmove: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'change');\n\n            // Mouse move should always be triggered no matter whether\n            // there is gestrue event, because mouse move and pinch may\n            // be used at the same time.\n            domHandlers.mousemove.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch结束响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchend: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'end');\n\n            domHandlers.mouseup.call(this, event);\n\n            // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n            // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n            // we can conveniently implement \"hover style\" in both PC and touch device just\n            // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n            // to remove \"hover style\" on an element, without any additional code for\n            // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n            // style\" will remain for user view)\n\n            // click event should always be triggered no matter whether\n            // there is gestrue event. System click can not be prevented.\n            if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n                domHandlers.click.call(this, event);\n            }\n\n            setTouchTimer(this);\n        },\n\n        pointerdown: function (event) {\n            domHandlers.mousedown.call(this, event);\n\n            // if (useMSGuesture(this, event)) {\n            //     this._msGesture.addPointer(event.pointerId);\n            // }\n        },\n\n        pointermove: function (event) {\n            // FIXME\n            // pointermove is so sensitive that it always triggered when\n            // tap(click) on touch screen, which affect some judgement in\n            // upper application. So, we dont support mousemove on MS touch\n            // device yet.\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mousemove.call(this, event);\n            }\n        },\n\n        pointerup: function (event) {\n            domHandlers.mouseup.call(this, event);\n        },\n\n        pointerout: function (event) {\n            // pointerout will be triggered when tap on touch screen\n            // (IE11+/Edge on MS Surface) after click event triggered,\n            // which is inconsistent with the mousout behavior we defined\n            // in touchend. So we unify them.\n            // (check domHandlers.touchend for detailed explanation)\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mouseout.call(this, event);\n            }\n        }\n    };\n\n    function isPointerFromTouch(event) {\n        var pointerType = event.pointerType;\n        return pointerType === 'pen' || pointerType === 'touch';\n    }\n\n    // function useMSGuesture(handlerProxy, event) {\n    //     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n    // }\n\n    // Common handlers\n    zrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        domHandlers[name] = function (event) {\n            event = normalizeEvent(this.dom, event);\n            this.trigger(name, event);\n        };\n    });\n\n    /**\n     * 为控制类实例初始化dom 事件处理函数\n     *\n     * @inner\n     * @param {module:zrender/Handler} instance 控制类实例\n     */\n    function initDomHandler(instance) {\n        zrUtil.each(touchHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(pointerHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(mouseHandlerNames, function (name) {\n            instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n        });\n\n        function makeMouseHandler(fn, instance) {\n            return function () {\n                if (instance._touching) {\n                    return;\n                }\n                return fn.apply(instance, arguments);\n            };\n        }\n    }\n\n\n    function HandlerDomProxy(dom) {\n        Eventful.call(this);\n\n        this.dom = dom;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._touching = false;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._touchTimer;\n\n        /**\n         * @private\n         * @type {module:zrender/core/GestureMgr}\n         */\n        this._gestureMgr = new GestureMgr();\n\n        this._handlers = {};\n\n        initDomHandler(this);\n\n        if (env.pointerEventsSupported) { // Only IE11+/Edge\n            // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n            // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n            // at the same time.\n            // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n            // screen, which do not occurs in pointer event.\n            // So we use pointer event to both detect touch gesture and mouse behavior.\n            mountHandlers(pointerHandlerNames, this);\n\n            // FIXME\n            // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n            // which does not prevent defuault behavior occasionally (which may cause view port\n            // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n            // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n            // touch screen. And we only support click behavior on MS touch screen now.\n\n            // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n            // We dont support touch on IE on win7.\n            // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n            // if (typeof MSGesture === 'function') {\n            //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n            //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n            // }\n        }\n        else {\n            if (env.touchEventsSupported) {\n                mountHandlers(touchHandlerNames, this);\n                // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n                // addEventListener(root, 'mouseout', this._mouseoutHandler);\n            }\n\n            // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n            // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n            // mouse event can not be handle in those devices.\n            // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n            // mouseevent after touch event triggered, see `setTouchTimer`.\n            mountHandlers(mouseHandlerNames, this);\n        }\n\n        function mountHandlers(handlerNames, instance) {\n            zrUtil.each(handlerNames, function (name) {\n                addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n            }, instance);\n        }\n    }\n\n    var handlerDomProxyProto = HandlerDomProxy.prototype;\n    handlerDomProxyProto.dispose = function () {\n        var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n        for (var i = 0; i < handlerNames.length; i++) {\n            var name = handlerNames[i];\n            removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n        }\n    };\n\n    handlerDomProxyProto.setCursor = function (cursorStyle) {\n        this.dom.style.cursor = cursorStyle || 'default';\n    };\n\n    zrUtil.mixin(HandlerDomProxy, Eventful);\n\n    module.exports = HandlerDomProxy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/dom/HandlerProxy.js\n// module id = 1114\n// module chunks = 0 1 2","'use strict';\n/**\n * Only implements needed gestures for mobile.\n */\n\n\n    var eventUtil = require('./event');\n\n    var GestureMgr = function () {\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._track = [];\n    };\n\n    GestureMgr.prototype = {\n\n        constructor: GestureMgr,\n\n        recognize: function (event, target, root) {\n            this._doTrack(event, target, root);\n            return this._recognize(event);\n        },\n\n        clear: function () {\n            this._track.length = 0;\n            return this;\n        },\n\n        _doTrack: function (event, target, root) {\n            var touches = event.touches;\n\n            if (!touches) {\n                return;\n            }\n\n            var trackItem = {\n                points: [],\n                touches: [],\n                target: target,\n                event: event\n            };\n\n            for (var i = 0, len = touches.length; i < len; i++) {\n                var touch = touches[i];\n                var pos = eventUtil.clientToLocal(root, touch, {});\n                trackItem.points.push([pos.zrX, pos.zrY]);\n                trackItem.touches.push(touch);\n            }\n\n            this._track.push(trackItem);\n        },\n\n        _recognize: function (event) {\n            for (var eventName in recognizers) {\n                if (recognizers.hasOwnProperty(eventName)) {\n                    var gestureInfo = recognizers[eventName](this._track, event);\n                    if (gestureInfo) {\n                        return gestureInfo;\n                    }\n                }\n            }\n        }\n    };\n\n    function dist(pointPair) {\n        var dx = pointPair[1][0] - pointPair[0][0];\n        var dy = pointPair[1][1] - pointPair[0][1];\n\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    function center(pointPair) {\n        return [\n            (pointPair[0][0] + pointPair[1][0]) / 2,\n            (pointPair[0][1] + pointPair[1][1]) / 2\n        ];\n    }\n\n    var recognizers = {\n\n        pinch: function (track, event) {\n            var trackLen = track.length;\n\n            if (!trackLen) {\n                return;\n            }\n\n            var pinchEnd = (track[trackLen - 1] || {}).points;\n            var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n            if (pinchPre\n                && pinchPre.length > 1\n                && pinchEnd\n                && pinchEnd.length > 1\n            ) {\n                var pinchScale = dist(pinchEnd) / dist(pinchPre);\n                !isFinite(pinchScale) && (pinchScale = 1);\n\n                event.pinchScale = pinchScale;\n\n                var pinchCenter = center(pinchEnd);\n                event.pinchX = pinchCenter[0];\n                event.pinchY = pinchCenter[1];\n\n                return {\n                    type: 'pinch',\n                    target: track[0].target,\n                    event: event\n                };\n            }\n        }\n\n        // Only pinch currently.\n    };\n\n    module.exports = GestureMgr;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/GestureMgr.js\n// module id = 1115\n// module chunks = 0 1 2","'use strict';\n/**\n * Default canvas painter\n * @module zrender/Painter\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n \n\n    var config = require('./config');\n    var util = require('./core/util');\n    var log = require('./core/log');\n    var BoundingRect = require('./core/BoundingRect');\n    var timsort = require('./core/timsort');\n\n    var Layer = require('./Layer');\n\n    var requestAnimationFrame = require('./animation/requestAnimationFrame');\n\n    // PENDIGN\n    // Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.\n    //\n    // Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.\n    var MAX_PROGRESSIVE_LAYER_NUMBER = 5;\n\n    function parseInt10(val) {\n        return parseInt(val, 10);\n    }\n\n    function isLayerValid(layer) {\n        if (!layer) {\n            return false;\n        }\n\n        if (layer.__builtin__) {\n            return true;\n        }\n\n        if (typeof(layer.resize) !== 'function'\n            || typeof(layer.refresh) !== 'function'\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    function preProcessLayer(layer) {\n        layer.__unusedCount++;\n    }\n\n    function postProcessLayer(layer) {\n        if (layer.__unusedCount == 1) {\n            layer.clear();\n        }\n    }\n\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var viewRect = new BoundingRect(0, 0, 0, 0);\n    function isDisplayableCulled(el, width, height) {\n        tmpRect.copy(el.getBoundingRect());\n        if (el.transform) {\n            tmpRect.applyTransform(el.transform);\n        }\n        viewRect.width = width;\n        viewRect.height = height;\n        return !tmpRect.intersect(viewRect);\n    }\n\n    function isClipPathChanged(clipPaths, prevClipPaths) {\n        if (clipPaths == prevClipPaths) { // Can both be null or undefined\n            return false;\n        }\n\n        if (!clipPaths || !prevClipPaths || (clipPaths.length !== prevClipPaths.length)) {\n            return true;\n        }\n        for (var i = 0; i < clipPaths.length; i++) {\n            if (clipPaths[i] !== prevClipPaths[i]) {\n                return true;\n            }\n        }\n    }\n\n    function doClip(clipPaths, ctx) {\n        for (var i = 0; i < clipPaths.length; i++) {\n            var clipPath = clipPaths[i];\n\n            clipPath.setTransform(ctx);\n            ctx.beginPath();\n            clipPath.buildPath(ctx, clipPath.shape);\n            ctx.clip();\n            // Transform back\n            clipPath.restoreTransform(ctx);\n        }\n    }\n\n    function createRoot(width, height) {\n        var domRoot = document.createElement('div');\n\n        // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n        domRoot.style.cssText = [\n            'position:relative',\n            'overflow:hidden',\n            'width:' + width + 'px',\n            'height:' + height + 'px',\n            'padding:0',\n            'margin:0',\n            'border-width:0'\n        ].join(';') + ';';\n\n        return domRoot;\n    }\n\n    /**\n     * @alias module:zrender/Painter\n     * @constructor\n     * @param {HTMLElement} root 绘图容器\n     * @param {module:zrender/Storage} storage\n     * @param {Object} opts\n     */\n    var Painter = function (root, storage, opts) {\n\n        this.type = 'canvas';\n\n        // In node environment using node-canvas\n        var singleCanvas = !root.nodeName // In node ?\n            || root.nodeName.toUpperCase() === 'CANVAS';\n\n        this._opts = opts = util.extend({}, opts || {});\n\n        /**\n         * @type {number}\n         */\n        this.dpr = opts.devicePixelRatio || config.devicePixelRatio;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._singleCanvas = singleCanvas;\n        /**\n         * 绘图容器\n         * @type {HTMLElement}\n         */\n        this.root = root;\n\n        var rootStyle = root.style;\n\n        if (rootStyle) {\n            rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n            rootStyle['-webkit-user-select'] =\n            rootStyle['user-select'] =\n            rootStyle['-webkit-touch-callout'] = 'none';\n\n            root.innerHTML = '';\n        }\n\n        /**\n         * @type {module:zrender/Storage}\n         */\n        this.storage = storage;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        var zlevelList = this._zlevelList = [];\n\n        /**\n         * @type {Object.<string, module:zrender/Layer>}\n         * @private\n         */\n        var layers = this._layers = {};\n\n        /**\n         * @type {Object.<string, Object>}\n         * @type {private}\n         */\n        this._layerConfig = {};\n\n        if (!singleCanvas) {\n            this._width = this._getSize(0);\n            this._height = this._getSize(1);\n\n            var domRoot = this._domRoot = createRoot(\n                this._width, this._height\n            );\n            root.appendChild(domRoot);\n        }\n        else {\n            if (opts.width != null) {\n                root.width = opts.width;\n            }\n            if (opts.height != null) {\n                root.height = opts.height;\n            }\n            // Use canvas width and height directly\n            var width = root.width;\n            var height = root.height;\n            this._width = width;\n            this._height = height;\n\n            // Create layer if only one given canvas\n            // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n            var mainLayer = new Layer(root, this, 1);\n            mainLayer.initContext();\n            // FIXME Use canvas width and height\n            // mainLayer.resize(width, height);\n            layers[0] = mainLayer;\n            zlevelList.push(0);\n\n            this._domRoot = root;\n        }\n\n        // Layers for progressive rendering\n        this._progressiveLayers = [];\n\n        /**\n         * @type {module:zrender/Layer}\n         * @private\n         */\n        this._hoverlayer;\n\n        this._hoverElements = [];\n    };\n\n    Painter.prototype = {\n\n        constructor: Painter,\n\n        getType: function () {\n            return 'canvas';\n        },\n\n        /**\n         * If painter use a single canvas\n         * @return {boolean}\n         */\n        isSingleCanvas: function () {\n            return this._singleCanvas;\n        },\n        /**\n         * @return {HTMLDivElement}\n         */\n        getViewportRoot: function () {\n            return this._domRoot;\n        },\n\n        getViewportRootOffset: function () {\n            var viewportRoot = this.getViewportRoot();\n            if (viewportRoot) {\n                return {\n                    offsetLeft: viewportRoot.offsetLeft || 0,\n                    offsetTop: viewportRoot.offsetTop || 0\n                };\n            }\n        },\n\n        /**\n         * 刷新\n         * @param {boolean} [paintAll=false] 强制绘制所有displayable\n         */\n        refresh: function (paintAll) {\n\n            var list = this.storage.getDisplayList(true);\n\n            var zlevelList = this._zlevelList;\n\n            this._paintList(list, paintAll);\n\n            // Paint custum layers\n            for (var i = 0; i < zlevelList.length; i++) {\n                var z = zlevelList[i];\n                var layer = this._layers[z];\n                if (!layer.__builtin__ && layer.refresh) {\n                    layer.refresh();\n                }\n            }\n\n            this.refreshHover();\n\n            if (this._progressiveLayers.length) {\n                this._startProgessive();\n            }\n\n            return this;\n        },\n\n        addHover: function (el, hoverStyle) {\n            if (el.__hoverMir) {\n                return;\n            }\n            var elMirror = new el.constructor({\n                style: el.style,\n                shape: el.shape\n            });\n            elMirror.__from = el;\n            el.__hoverMir = elMirror;\n            elMirror.setStyle(hoverStyle);\n            this._hoverElements.push(elMirror);\n        },\n\n        removeHover: function (el) {\n            var elMirror = el.__hoverMir;\n            var hoverElements = this._hoverElements;\n            var idx = util.indexOf(hoverElements, elMirror);\n            if (idx >= 0) {\n                hoverElements.splice(idx, 1);\n            }\n            el.__hoverMir = null;\n        },\n\n        clearHover: function (el) {\n            var hoverElements = this._hoverElements;\n            for (var i = 0; i < hoverElements.length; i++) {\n                var from = hoverElements[i].__from;\n                if (from) {\n                    from.__hoverMir = null;\n                }\n            }\n            hoverElements.length = 0;\n        },\n\n        refreshHover: function () {\n            var hoverElements = this._hoverElements;\n            var len = hoverElements.length;\n            var hoverLayer = this._hoverlayer;\n            hoverLayer && hoverLayer.clear();\n\n            if (!len) {\n                return;\n            }\n            timsort(hoverElements, this.storage.displayableSortFunc);\n\n            // Use a extream large zlevel\n            // FIXME?\n            if (!hoverLayer) {\n                hoverLayer = this._hoverlayer = this.getLayer(1e5);\n            }\n\n            var scope = {};\n            hoverLayer.ctx.save();\n            for (var i = 0; i < len;) {\n                var el = hoverElements[i];\n                var originalEl = el.__from;\n                // Original el is removed\n                // PENDING\n                if (!(originalEl && originalEl.__zr)) {\n                    hoverElements.splice(i, 1);\n                    originalEl.__hoverMir = null;\n                    len--;\n                    continue;\n                }\n                i++;\n\n                // Use transform\n                // FIXME style and shape ?\n                if (!originalEl.invisible) {\n                    el.transform = originalEl.transform;\n                    el.invTransform = originalEl.invTransform;\n                    el.__clipPaths = originalEl.__clipPaths;\n                    // el.\n                    this._doPaintEl(el, hoverLayer, true, scope);\n                }\n            }\n            hoverLayer.ctx.restore();\n        },\n\n        _startProgessive: function () {\n            var self = this;\n\n            if (!self._furtherProgressive) {\n                return;\n            }\n\n            // Use a token to stop progress steps triggered by\n            // previous zr.refresh calling.\n            var token = self._progressiveToken = +new Date();\n\n            self._progress++;\n            requestAnimationFrame(step);\n\n            function step() {\n                // In case refreshed or disposed\n                if (token === self._progressiveToken && self.storage) {\n\n                    self._doPaintList(self.storage.getDisplayList());\n\n                    if (self._furtherProgressive) {\n                        self._progress++;\n                        requestAnimationFrame(step);\n                    }\n                    else {\n                        self._progressiveToken = -1;\n                    }\n                }\n            }\n        },\n\n        _clearProgressive: function () {\n            this._progressiveToken = -1;\n            this._progress = 0;\n            util.each(this._progressiveLayers, function (layer) {\n                layer.__dirty && layer.clear();\n            });\n        },\n\n        _paintList: function (list, paintAll) {\n\n            if (paintAll == null) {\n                paintAll = false;\n            }\n\n            this._updateLayerStatus(list);\n\n            this._clearProgressive();\n\n            this.eachBuiltinLayer(preProcessLayer);\n\n            this._doPaintList(list, paintAll);\n\n            this.eachBuiltinLayer(postProcessLayer);\n        },\n\n        _doPaintList: function (list, paintAll) {\n            var currentLayer;\n            var currentZLevel;\n            var ctx;\n\n            // var invTransform = [];\n            var scope;\n\n            var progressiveLayerIdx = 0;\n            var currentProgressiveLayer;\n\n            var width = this._width;\n            var height = this._height;\n            var layerProgress;\n            var frame = this._progress;\n            function flushProgressiveLayer(layer) {\n                var dpr = ctx.dpr || 1;\n                ctx.save();\n                ctx.globalAlpha = 1;\n                ctx.shadowBlur = 0;\n                // Avoid layer don't clear in next progressive frame\n                currentLayer.__dirty = true;\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n                ctx.drawImage(layer.dom, 0, 0, width * dpr, height * dpr);\n                ctx.restore();\n            }\n\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var elZLevel = this._singleCanvas ? 0 : el.zlevel;\n\n                var elFrame = el.__frame;\n\n                // Flush at current context\n                // PENDING\n                if (elFrame < 0 && currentProgressiveLayer) {\n                    flushProgressiveLayer(currentProgressiveLayer);\n                    currentProgressiveLayer = null;\n                }\n\n                // Change draw layer\n                if (currentZLevel !== elZLevel) {\n                    if (ctx) {\n                        ctx.restore();\n                    }\n\n                    // Reset scope\n                    scope = {};\n\n                    // Only 0 zlevel if only has one canvas\n                    currentZLevel = elZLevel;\n                    currentLayer = this.getLayer(currentZLevel);\n\n                    if (!currentLayer.__builtin__) {\n                        log(\n                            'ZLevel ' + currentZLevel\n                            + ' has been used by unkown layer ' + currentLayer.id\n                        );\n                    }\n\n                    ctx = currentLayer.ctx;\n                    ctx.save();\n\n                    // Reset the count\n                    currentLayer.__unusedCount = 0;\n\n                    if (currentLayer.__dirty || paintAll) {\n                        currentLayer.clear();\n                    }\n                }\n\n                if (!(currentLayer.__dirty || paintAll)) {\n                    continue;\n                }\n\n                if (elFrame >= 0) {\n                    // Progressive layer changed\n                    if (!currentProgressiveLayer) {\n                        currentProgressiveLayer = this._progressiveLayers[\n                            Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)\n                        ];\n\n                        currentProgressiveLayer.ctx.save();\n                        currentProgressiveLayer.renderScope = {};\n\n                        if (currentProgressiveLayer\n                            && (currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress)\n                        ) {\n                            // flushProgressiveLayer(currentProgressiveLayer);\n                            // Quick jump all progressive elements\n                            // All progressive element are not dirty, jump over and flush directly\n                            i = currentProgressiveLayer.__nextIdxNotProg - 1;\n                            // currentProgressiveLayer = null;\n                            continue;\n                        }\n\n                        layerProgress = currentProgressiveLayer.__progress;\n\n                        if (!currentProgressiveLayer.__dirty) {\n                            // Keep rendering\n                            frame = layerProgress;\n                        }\n\n                        currentProgressiveLayer.__progress = frame + 1;\n                    }\n\n                    if (elFrame === frame) {\n                        this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);\n                    }\n                }\n                else {\n                    this._doPaintEl(el, currentLayer, paintAll, scope);\n                }\n\n                el.__dirty = false;\n            }\n\n            if (currentProgressiveLayer) {\n                flushProgressiveLayer(currentProgressiveLayer);\n            }\n\n            // Restore the lastLayer ctx\n            ctx && ctx.restore();\n            // If still has clipping state\n            // if (scope.prevElClipPaths) {\n            //     ctx.restore();\n            // }\n\n            this._furtherProgressive = false;\n            util.each(this._progressiveLayers, function (layer) {\n                if (layer.__maxProgress >= layer.__progress) {\n                    this._furtherProgressive = true;\n                }\n            }, this);\n        },\n\n        _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n            var ctx = currentLayer.ctx;\n            var m = el.transform;\n            if (\n                (currentLayer.__dirty || forcePaint)\n                // Ignore invisible element\n                && !el.invisible\n                // Ignore transparent element\n                && el.style.opacity !== 0\n                // Ignore scale 0 element, in some environment like node-canvas\n                // Draw a scale 0 element can cause all following draw wrong\n                // And setTransform with scale 0 will cause set back transform failed.\n                && !(m && !m[0] && !m[3])\n                // Ignore culled element\n                && !(el.culling && isDisplayableCulled(el, this._width, this._height))\n            ) {\n\n                var clipPaths = el.__clipPaths;\n\n                // Optimize when clipping on group with several elements\n                if (scope.prevClipLayer !== currentLayer\n                    || isClipPathChanged(clipPaths, scope.prevElClipPaths)\n                ) {\n                    // If has previous clipping state, restore from it\n                    if (scope.prevElClipPaths) {\n                        scope.prevClipLayer.ctx.restore();\n                        scope.prevClipLayer = scope.prevElClipPaths = null;\n\n                        // Reset prevEl since context has been restored\n                        scope.prevEl = null;\n                    }\n                    // New clipping state\n                    if (clipPaths) {\n                        ctx.save();\n                        doClip(clipPaths, ctx);\n                        scope.prevClipLayer = currentLayer;\n                        scope.prevElClipPaths = clipPaths;\n                    }\n                }\n                el.beforeBrush && el.beforeBrush(ctx);\n\n                el.brush(ctx, scope.prevEl || null);\n                scope.prevEl = el;\n\n                el.afterBrush && el.afterBrush(ctx);\n            }\n        },\n\n        /**\n         * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n         * @param {number} zlevel\n         * @return {module:zrender/Layer}\n         */\n        getLayer: function (zlevel) {\n            if (this._singleCanvas) {\n                return this._layers[0];\n            }\n\n            var layer = this._layers[zlevel];\n            if (!layer) {\n                // Create a new layer\n                layer = new Layer('zr_' + zlevel, this, this.dpr);\n                layer.__builtin__ = true;\n\n                if (this._layerConfig[zlevel]) {\n                    util.merge(layer, this._layerConfig[zlevel], true);\n                }\n\n                this.insertLayer(zlevel, layer);\n\n                // Context is created after dom inserted to document\n                // Or excanvas will get 0px clientWidth and clientHeight\n                layer.initContext();\n            }\n\n            return layer;\n        },\n\n        insertLayer: function (zlevel, layer) {\n\n            var layersMap = this._layers;\n            var zlevelList = this._zlevelList;\n            var len = zlevelList.length;\n            var prevLayer = null;\n            var i = -1;\n            var domRoot = this._domRoot;\n\n            if (layersMap[zlevel]) {\n                log('ZLevel ' + zlevel + ' has been used already');\n                return;\n            }\n            // Check if is a valid layer\n            if (!isLayerValid(layer)) {\n                log('Layer of zlevel ' + zlevel + ' is not valid');\n                return;\n            }\n\n            if (len > 0 && zlevel > zlevelList[0]) {\n                for (i = 0; i < len - 1; i++) {\n                    if (\n                        zlevelList[i] < zlevel\n                        && zlevelList[i + 1] > zlevel\n                    ) {\n                        break;\n                    }\n                }\n                prevLayer = layersMap[zlevelList[i]];\n            }\n            zlevelList.splice(i + 1, 0, zlevel);\n\n            layersMap[zlevel] = layer;\n\n            // Vitual layer will not directly show on the screen.\n            // (It can be a WebGL layer and assigned to a ZImage element)\n            // But it still under management of zrender.\n            if (!layer.virtual) {\n                if (prevLayer) {\n                    var prevDom = prevLayer.dom;\n                    if (prevDom.nextSibling) {\n                        domRoot.insertBefore(\n                            layer.dom,\n                            prevDom.nextSibling\n                        );\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n                else {\n                    if (domRoot.firstChild) {\n                        domRoot.insertBefore(layer.dom, domRoot.firstChild);\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n            }\n        },\n\n        // Iterate each layer\n        eachLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                cb.call(context, this._layers[z], z);\n            }\n        },\n\n        // Iterate each buildin layer\n        eachBuiltinLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        // Iterate each other layer except buildin layer\n        eachOtherLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (!layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        /**\n         * 获取所有已创建的层\n         * @param {Array.<module:zrender/Layer>} [prevLayer]\n         */\n        getLayers: function () {\n            return this._layers;\n        },\n\n        _updateLayerStatus: function (list) {\n\n            var layers = this._layers;\n            var progressiveLayers = this._progressiveLayers;\n\n            var elCountsLastFrame = {};\n            var progressiveElCountsLastFrame = {};\n\n            this.eachBuiltinLayer(function (layer, z) {\n                elCountsLastFrame[z] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            util.each(progressiveLayers, function (layer, idx) {\n                progressiveElCountsLastFrame[idx] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            var progressiveLayerCount = 0;\n            var currentProgressiveLayer;\n            var lastProgressiveKey;\n            var frameCount = 0;\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var zlevel = this._singleCanvas ? 0 : el.zlevel;\n                var layer = layers[zlevel];\n                var elProgress = el.progressive;\n                if (layer) {\n                    layer.elCount++;\n                    layer.__dirty = layer.__dirty || el.__dirty;\n                }\n\n                /////// Update progressive\n                if (elProgress >= 0) {\n                    // Fix wrong progressive sequence problem.\n                    if (lastProgressiveKey !== elProgress) {\n                        lastProgressiveKey = elProgress;\n                        frameCount++;\n                    }\n                    var elFrame = el.__frame = frameCount - 1;\n                    if (!currentProgressiveLayer) {\n                        var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);\n                        currentProgressiveLayer = progressiveLayers[idx];\n                        if (!currentProgressiveLayer) {\n                            currentProgressiveLayer = progressiveLayers[idx] = new Layer(\n                                'progressive', this, this.dpr\n                            );\n                            currentProgressiveLayer.initContext();\n                        }\n                        currentProgressiveLayer.__maxProgress = 0;\n                    }\n                    currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;\n                    currentProgressiveLayer.elCount++;\n\n                    currentProgressiveLayer.__maxProgress = Math.max(\n                        currentProgressiveLayer.__maxProgress, elFrame\n                    );\n\n                    if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {\n                        // Should keep rendering this  layer because progressive rendering is not finished yet\n                        layer.__dirty = true;\n                    }\n                }\n                else {\n                    el.__frame = -1;\n\n                    if (currentProgressiveLayer) {\n                        currentProgressiveLayer.__nextIdxNotProg = i;\n                        progressiveLayerCount++;\n                        currentProgressiveLayer = null;\n                    }\n                }\n            }\n\n            if (currentProgressiveLayer) {\n                progressiveLayerCount++;\n                currentProgressiveLayer.__nextIdxNotProg = i;\n            }\n\n            // 层中的元素数量有发生变化\n            this.eachBuiltinLayer(function (layer, z) {\n                if (elCountsLastFrame[z] !== layer.elCount) {\n                    layer.__dirty = true;\n                }\n            });\n\n            progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);\n            util.each(progressiveLayers, function (layer, idx) {\n                if (progressiveElCountsLastFrame[idx] !== layer.elCount) {\n                    el.__dirty = true;\n                }\n                if (layer.__dirty) {\n                    layer.__progress = 0;\n                }\n            });\n        },\n\n        /**\n         * 清除hover层外所有内容\n         */\n        clear: function () {\n            this.eachBuiltinLayer(this._clearLayer);\n            return this;\n        },\n\n        _clearLayer: function (layer) {\n            layer.clear();\n        },\n\n        /**\n         * 修改指定zlevel的绘制参数\n         *\n         * @param {string} zlevel\n         * @param {Object} config 配置对象\n         * @param {string} [config.clearColor=0] 每次清空画布的颜色\n         * @param {string} [config.motionBlur=false] 是否开启动态模糊\n         * @param {number} [config.lastFrameAlpha=0.7]\n         *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         */\n        configLayer: function (zlevel, config) {\n            if (config) {\n                var layerConfig = this._layerConfig;\n                if (!layerConfig[zlevel]) {\n                    layerConfig[zlevel] = config;\n                }\n                else {\n                    util.merge(layerConfig[zlevel], config, true);\n                }\n\n                var layer = this._layers[zlevel];\n\n                if (layer) {\n                    util.merge(layer, layerConfig[zlevel], true);\n                }\n            }\n        },\n\n        /**\n         * 删除指定层\n         * @param {number} zlevel 层所在的zlevel\n         */\n        delLayer: function (zlevel) {\n            var layers = this._layers;\n            var zlevelList = this._zlevelList;\n            var layer = layers[zlevel];\n            if (!layer) {\n                return;\n            }\n            layer.dom.parentNode.removeChild(layer.dom);\n            delete layers[zlevel];\n\n            zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n        },\n\n        /**\n         * 区域大小变化后重绘\n         */\n        resize: function (width, height) {\n            var domRoot = this._domRoot;\n            // FIXME Why ?\n            domRoot.style.display = 'none';\n\n            // Save input w/h\n            var opts = this._opts;\n            width != null && (opts.width = width);\n            height != null && (opts.height = height);\n\n            width = this._getSize(0);\n            height = this._getSize(1);\n\n            domRoot.style.display = '';\n\n            // 优化没有实际改变的resize\n            if (this._width != width || height != this._height) {\n                domRoot.style.width = width + 'px';\n                domRoot.style.height = height + 'px';\n\n                for (var id in this._layers) {\n                    if (this._layers.hasOwnProperty(id)) {\n                        this._layers[id].resize(width, height);\n                    }\n                }\n                util.each(this._progressiveLayers, function (layer) {\n                    layer.resize(width, height);\n                });\n\n                this.refresh(true);\n            }\n\n            this._width = width;\n            this._height = height;\n\n            return this;\n        },\n\n        /**\n         * 清除单独的一个层\n         * @param {number} zlevel\n         */\n        clearLayer: function (zlevel) {\n            var layer = this._layers[zlevel];\n            if (layer) {\n                layer.clear();\n            }\n        },\n\n        /**\n         * 释放\n         */\n        dispose: function () {\n            this.root.innerHTML = '';\n\n            this.root =\n            this.storage =\n\n            this._domRoot =\n            this._layers = null;\n        },\n\n        /**\n         * Get canvas which has all thing rendered\n         * @param {Object} opts\n         * @param {string} [opts.backgroundColor]\n         */\n        getRenderedCanvas: function (opts) {\n            opts = opts || {};\n            if (this._singleCanvas) {\n                return this._layers[0].dom;\n            }\n\n            var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n            imageLayer.initContext();\n\n            imageLayer.clearColor = opts.backgroundColor;\n            imageLayer.clear();\n\n            var displayList = this.storage.getDisplayList(true);\n\n            var scope = {};\n            var zlevel;\n\n            var self = this;\n            function findAndDrawOtherLayer(smaller, larger) {\n                var zlevelList = self._zlevelList;\n                if (smaller == null) {\n                    smaller = -Infinity;\n                }\n                var intermediateLayer;\n                for (var i = 0; i < zlevelList.length; i++) {\n                    var z = zlevelList[i];\n                    var layer = self._layers[z];\n                    if (!layer.__builtin__ && z > smaller && z < larger) {\n                        intermediateLayer = layer;\n                        break;\n                    }\n                }\n                if (intermediateLayer && intermediateLayer.renderToCanvas) {\n                    imageLayer.ctx.save();\n                    intermediateLayer.renderToCanvas(imageLayer.ctx);\n                    imageLayer.ctx.restore();\n                }\n            }\n            for (var i = 0; i < displayList.length; i++) {\n                var el = displayList[i];\n\n                if (el.zlevel !== zlevel) {\n                    findAndDrawOtherLayer(zlevel, el.zlevel);\n                    zlevel = el.zlevel;\n                }\n                this._doPaintEl(el, imageLayer, true, scope);\n            }\n\n            findAndDrawOtherLayer(zlevel, Infinity);\n\n            return imageLayer.dom;\n        },\n        /**\n         * 获取绘图区域宽度\n         */\n        getWidth: function () {\n            return this._width;\n        },\n\n        /**\n         * 获取绘图区域高度\n         */\n        getHeight: function () {\n            return this._height;\n        },\n\n        _getSize: function (whIdx) {\n            var opts = this._opts;\n            var wh = ['width', 'height'][whIdx];\n            var cwh = ['clientWidth', 'clientHeight'][whIdx];\n            var plt = ['paddingLeft', 'paddingTop'][whIdx];\n            var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n            if (opts[wh] != null && opts[wh] !== 'auto') {\n                return parseFloat(opts[wh]);\n            }\n\n            var root = this.root;\n            // IE8 does not support getComputedStyle, but it use VML.\n            var stl = document.defaultView.getComputedStyle(root);\n\n            return (\n                (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh]))\n                - (parseInt10(stl[plt]) || 0)\n                - (parseInt10(stl[prb]) || 0)\n            ) | 0;\n        },\n\n        pathToImage: function (path, dpr) {\n            dpr = dpr || this.dpr;\n\n            var canvas = document.createElement('canvas');\n            var ctx = canvas.getContext('2d');\n            var rect = path.getBoundingRect();\n            var style = path.style;\n            var shadowBlurSize = style.shadowBlur;\n            var shadowOffsetX = style.shadowOffsetX;\n            var shadowOffsetY = style.shadowOffsetY;\n            var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n\n            var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n            var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n            var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n            var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n            var width = rect.width + leftMargin + rightMargin;\n            var height = rect.height + topMargin + bottomMargin;\n\n            canvas.width = width * dpr;\n            canvas.height = height * dpr;\n\n            ctx.scale(dpr, dpr);\n            ctx.clearRect(0, 0, width, height);\n            ctx.dpr = dpr;\n\n            var pathTransform = {\n                position: path.position,\n                rotation: path.rotation,\n                scale: path.scale\n            };\n            path.position = [leftMargin - rect.x, topMargin - rect.y];\n            path.rotation = 0;\n            path.scale = [1, 1];\n            path.updateTransform();\n            if (path) {\n                path.brush(ctx);\n            }\n\n            var ImageShape = require('./graphic/Image');\n            var imgShape = new ImageShape({\n                style: {\n                    x: 0,\n                    y: 0,\n                    image: canvas\n                }\n            });\n\n            if (pathTransform.position != null) {\n                imgShape.position = path.position = pathTransform.position;\n            }\n\n            if (pathTransform.rotation != null) {\n                imgShape.rotation = path.rotation = pathTransform.rotation;\n            }\n\n            if (pathTransform.scale != null) {\n                imgShape.scale = path.scale = pathTransform.scale;\n            }\n\n            return imgShape;\n        }\n    };\n\n    module.exports = Painter;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/Painter.js\n// module id = 1116\n// module chunks = 0 1 2","/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var util = require('./core/util');\n    var config = require('./config');\n    var Style = require('./graphic/Style');\n    var Pattern = require('./graphic/Pattern');\n\n    function returnFalse() {\n        return false;\n    }\n\n    /**\n     * 创建dom\n     *\n     * @inner\n     * @param {string} id dom id 待用\n     * @param {string} type dom type，such as canvas, div etc.\n     * @param {Painter} painter painter instance\n     * @param {number} number\n     */\n    function createDom(id, type, painter, dpr) {\n        var newDom = document.createElement(type);\n        var width = painter.getWidth();\n        var height = painter.getHeight();\n\n        var newDomStyle = newDom.style;\n        // 没append呢，请原谅我这样写，清晰~\n        newDomStyle.position = 'absolute';\n        newDomStyle.left = 0;\n        newDomStyle.top = 0;\n        newDomStyle.width = width + 'px';\n        newDomStyle.height = height + 'px';\n        newDom.width = width * dpr;\n        newDom.height = height * dpr;\n\n        // id不作为索引用，避免可能造成的重名，定义为私有属性\n        newDom.setAttribute('data-zr-dom-id', id);\n        return newDom;\n    }\n\n    /**\n     * @alias module:zrender/Layer\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @param {string} id\n     * @param {module:zrender/Painter} painter\n     * @param {number} [dpr]\n     */\n    var Layer = function(id, painter, dpr) {\n        var dom;\n        dpr = dpr || config.devicePixelRatio;\n        if (typeof id === 'string') {\n            dom = createDom(id, 'canvas', painter, dpr);\n        }\n        // Not using isDom because in node it will return false\n        else if (util.isObject(id)) {\n            dom = id;\n            id = dom.id;\n        }\n        this.id = id;\n        this.dom = dom;\n\n        var domStyle = dom.style;\n        if (domStyle) { // Not in node\n            dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n            domStyle['-webkit-user-select'] = 'none';\n            domStyle['user-select'] = 'none';\n            domStyle['-webkit-touch-callout'] = 'none';\n            domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n            domStyle['padding'] = 0;\n            domStyle['margin'] = 0;\n            domStyle['border-width'] = 0;\n        }\n\n        this.domBack = null;\n        this.ctxBack = null;\n\n        this.painter = painter;\n\n        this.config = null;\n\n        // Configs\n        /**\n         * 每次清空画布的颜色\n         * @type {string}\n         * @default 0\n         */\n        this.clearColor = 0;\n        /**\n         * 是否开启动态模糊\n         * @type {boolean}\n         * @default false\n         */\n        this.motionBlur = false;\n        /**\n         * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         * @type {number}\n         * @default 0.7\n         */\n        this.lastFrameAlpha = 0.7;\n\n        /**\n         * Layer dpr\n         * @type {number}\n         */\n        this.dpr = dpr;\n    };\n\n    Layer.prototype = {\n\n        constructor: Layer,\n\n        elCount: 0,\n\n        __dirty: true,\n\n        initContext: function () {\n            this.ctx = this.dom.getContext('2d');\n            this.ctx.__currentValues = {};\n            this.ctx.dpr = this.dpr;\n        },\n\n        createBackBuffer: function () {\n            var dpr = this.dpr;\n\n            this.domBack = createDom('back-' + this.id, 'canvas', this.painter, dpr);\n            this.ctxBack = this.domBack.getContext('2d');\n            this.ctxBack.__currentValues = {};\n\n            if (dpr != 1) {\n                this.ctxBack.scale(dpr, dpr);\n            }\n        },\n\n        /**\n         * @param  {number} width\n         * @param  {number} height\n         */\n        resize: function (width, height) {\n            var dpr = this.dpr;\n\n            var dom = this.dom;\n            var domStyle = dom.style;\n            var domBack = this.domBack;\n\n            domStyle.width = width + 'px';\n            domStyle.height = height + 'px';\n\n            dom.width = width * dpr;\n            dom.height = height * dpr;\n\n            if (domBack) {\n                domBack.width = width * dpr;\n                domBack.height = height * dpr;\n\n                if (dpr != 1) {\n                    this.ctxBack.scale(dpr, dpr);\n                }\n            }\n        },\n\n        /**\n         * 清空该层画布\n         * @param {boolean} clearAll Clear all with out motion blur\n         */\n        clear: function (clearAll) {\n            var dom = this.dom;\n            var ctx = this.ctx;\n            var width = dom.width;\n            var height = dom.height;\n\n            var clearColor = this.clearColor;\n            var haveMotionBLur = this.motionBlur && !clearAll;\n            var lastFrameAlpha = this.lastFrameAlpha;\n\n            var dpr = this.dpr;\n\n            if (haveMotionBLur) {\n                if (!this.domBack) {\n                    this.createBackBuffer();\n                }\n\n                this.ctxBack.globalCompositeOperation = 'copy';\n                this.ctxBack.drawImage(\n                    dom, 0, 0,\n                    width / dpr,\n                    height / dpr\n                );\n            }\n\n            ctx.clearRect(0, 0, width, height);\n            if (clearColor) {\n                var clearColorGradientOrPattern;\n                // Gradient\n                if (clearColor.colorStops) {\n                    // Cache canvas gradient\n                    clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n                        x: 0,\n                        y: 0,\n                        width: width,\n                        height: height\n                    });\n\n                    clearColor.__canvasGradient = clearColorGradientOrPattern;\n                }\n                // Pattern\n                else if (clearColor.image) {\n                    clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n                }\n                ctx.save();\n                ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n                ctx.fillRect(0, 0, width, height);\n                ctx.restore();\n            }\n\n            if (haveMotionBLur) {\n                var domBack = this.domBack;\n                ctx.save();\n                ctx.globalAlpha = lastFrameAlpha;\n                ctx.drawImage(domBack, 0, 0, width, height);\n                ctx.restore();\n            }\n        }\n    };\n\n    module.exports = Layer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/Layer.js\n// module id = 1117\n// module chunks = 0 1 2","\n    var Gradient = require('zrender/lib/graphic/Gradient');\n    module.exports = function (ecModel) {\n        function encodeColor(seriesModel) {\n            var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\n            var data = seriesModel.getData();\n            var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n                || seriesModel.getColorFromPalette(seriesModel.get('name'));  // Default color\n\n            // FIXME Set color function or use the platte color\n            data.setVisual('color', color);\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof color === 'function' && !(color instanceof Gradient)) {\n                    data.each(function (idx) {\n                        data.setItemVisual(\n                            idx, 'color', color(seriesModel.getDataParams(idx))\n                        );\n                    });\n                }\n\n                // itemStyle in each data item\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var color = itemModel.get(colorAccessPath, true);\n                    if (color != null) {\n                        data.setItemVisual(idx, 'color', color);\n                    }\n                });\n            }\n        }\n        ecModel.eachRawSeries(encodeColor);\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/visual/seriesColor.js\n// module id = 1118\n// module chunks = 0 1 2","\n\n    var graphic = require('../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n    var PI = Math.PI;\n    /**\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Object} [opts]\n     * @param {string} [opts.text]\n     * @param {string} [opts.color]\n     * @param {string} [opts.textColor]\n     * @return {module:zrender/Element}\n     */\n    module.exports = function (api, opts) {\n        opts = opts || {};\n        zrUtil.defaults(opts, {\n            text: 'loading',\n            color: '#c23531',\n            textColor: '#000',\n            maskColor: 'rgba(255, 255, 255, 0.8)',\n            zlevel: 0\n        });\n        var mask = new graphic.Rect({\n            style: {\n                fill: opts.maskColor\n            },\n            zlevel: opts.zlevel,\n            z: 10000\n        });\n        var arc = new graphic.Arc({\n            shape: {\n                startAngle: -PI / 2,\n                endAngle: -PI / 2 + 0.1,\n                r: 10\n            },\n            style: {\n                stroke: opts.color,\n                lineCap: 'round',\n                lineWidth: 5\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n        var labelRect = new graphic.Rect({\n            style: {\n                fill: 'none',\n                text: opts.text,\n                textPosition: 'right',\n                textDistance: 10,\n                textFill: opts.textColor\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n\n        arc.animateShape(true)\n            .when(1000, {\n                endAngle: PI * 3 / 2\n            })\n            .start('circularInOut');\n        arc.animateShape(true)\n            .when(1000, {\n                startAngle: PI * 3 / 2\n            })\n            .delay(300)\n            .start('circularInOut');\n\n        var group = new graphic.Group();\n        group.add(arc);\n        group.add(labelRect);\n        group.add(mask);\n        // Inject resize\n        group.resize = function () {\n            var cx = api.getWidth() / 2;\n            var cy = api.getHeight() / 2;\n            arc.setShape({\n                cx: cx,\n                cy: cy\n            });\n            var r = arc.shape.r;\n            labelRect.setShape({\n                x: cx - r,\n                y: cy - r,\n                width: r * 2,\n                height: r * 2\n            });\n\n            mask.setShape({\n                x: 0,\n                y: 0,\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n        };\n        group.resize();\n        return group;\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/loading/default.js\n// module id = 1119\n// module chunks = 0 1 2","/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n\n// FIXME only one data\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Scale = require('./Scale');\n\n    var scaleProto = Scale.prototype;\n\n    var OrdinalScale = Scale.extend({\n\n        type: 'ordinal',\n\n        init: function (data, extent) {\n            this._data = data;\n            this._extent = extent || [0, data.length - 1];\n        },\n\n        parse: function (val) {\n            return typeof val === 'string'\n                ? zrUtil.indexOf(this._data, val)\n                // val might be float.\n                : Math.round(val);\n        },\n\n        contain: function (rank) {\n            rank = this.parse(rank);\n            return scaleProto.contain.call(this, rank)\n                && this._data[rank] != null;\n        },\n\n        /**\n         * Normalize given rank or name to linear [0, 1]\n         * @param {number|string} [val]\n         * @return {number}\n         */\n        normalize: function (val) {\n            return scaleProto.normalize.call(this, this.parse(val));\n        },\n\n        scale: function (val) {\n            return Math.round(scaleProto.scale.call(this, val));\n        },\n\n        /**\n         * @return {Array}\n         */\n        getTicks: function () {\n            var ticks = [];\n            var extent = this._extent;\n            var rank = extent[0];\n\n            while (rank <= extent[1]) {\n                ticks.push(rank);\n                rank++;\n            }\n\n            return ticks;\n        },\n\n        /**\n         * Get item on rank n\n         * @param {number} n\n         * @return {string}\n         */\n        getLabel: function (n) {\n            return this._data[n];\n        },\n\n        /**\n         * @return {number}\n         */\n        count: function () {\n            return this._extent[1] - this._extent[0] + 1;\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, false));\n        },\n\n        niceTicks: zrUtil.noop,\n        niceExtent: zrUtil.noop\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    OrdinalScale.create = function () {\n        return new OrdinalScale();\n    };\n\n    module.exports = OrdinalScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/scale/Ordinal.js\n// module id = 1120\n// module chunks = 0 1 2","/**\n * Interval scale\n * @module echarts/coord/scale/Time\n */\n\n\n\n    // [About UTC and local time zone]:\n    // In most cases, `number.parseDate` will treat input data string as local time\n    // (except time zone is specified in time string). And `format.formateTime` returns\n    // local time by default. option.useUTC is false by default. This design have\n    // concidered these common case:\n    // (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n    // in local time by default.\n    // (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n    // as its original time, without any time difference.\n\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('../util/number');\n    var formatUtil = require('../util/format');\n    var scaleHelper = require('./helper');\n\n    var IntervalScale = require('./Interval');\n\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var mathCeil = Math.ceil;\n    var mathFloor = Math.floor;\n    var ONE_SECOND = 1000;\n    var ONE_MINUTE = ONE_SECOND * 60;\n    var ONE_HOUR = ONE_MINUTE * 60;\n    var ONE_DAY = ONE_HOUR * 24;\n\n    // FIXME 公用？\n    var bisect = function (a, x, lo, hi) {\n        while (lo < hi) {\n            var mid = lo + hi >>> 1;\n            if (a[mid][2] < x) {\n                lo = mid + 1;\n            }\n            else {\n                hi  = mid;\n            }\n        }\n        return lo;\n    };\n\n    /**\n     * @alias module:echarts/coord/scale/Time\n     * @constructor\n     */\n    var TimeScale = IntervalScale.extend({\n        type: 'time',\n\n        /**\n         * @override\n         */\n        getLabel: function (val) {\n            var stepLvl = this._stepLvl;\n\n            var date = new Date(val);\n\n            return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n        },\n\n        /**\n         * @override\n         */\n        niceExtent: function (opt) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                // Expand extent\n                extent[0] -= ONE_DAY;\n                extent[1] += ONE_DAY;\n            }\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (extent[1] === -Infinity && extent[0] === Infinity) {\n                var d = new Date();\n                extent[1] = +new Date(d.getFullYear(), d.getMonth(), d.getDate());\n                extent[0] = extent[1] - ONE_DAY;\n            }\n\n            this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!opt.fixMin) {\n                extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n            }\n            if (!opt.fixMax) {\n                extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n            }\n        },\n\n        /**\n         * @override\n         */\n        niceTicks: function (approxTickNum, minInterval, maxInterval) {\n            approxTickNum = approxTickNum || 10;\n\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            var approxInterval = span / approxTickNum;\n\n            if (minInterval != null && approxInterval < minInterval) {\n                approxInterval = minInterval;\n            }\n            if (maxInterval != null && approxInterval > maxInterval) {\n                approxInterval = maxInterval;\n            }\n\n            var scaleLevelsLen = scaleLevels.length;\n            var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n\n            var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n            var interval = level[2];\n            // Same with interval scale if span is much larger than 1 year\n            if (level[0] === 'year') {\n                var yearSpan = span / interval;\n\n                // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n                // var niceYearSpan = numberUtil.nice(yearSpan, false);\n                var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n\n                interval *= yearStep;\n            }\n\n            var timezoneOffset = this.getSetting('useUTC')\n                ? 0 : (new Date(+extent[0] || +extent[1])).getTimezoneOffset() * 60 * 1000;\n            var niceExtent = [\n                Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset),\n                Math.round(mathFloor((extent[1] - timezoneOffset) / interval) * interval + timezoneOffset)\n            ];\n\n            scaleHelper.fixExtent(niceExtent, extent);\n\n            this._stepLvl = level;\n            // Interval will be used in getTicks\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        parse: function (val) {\n            // val might be float.\n            return +numberUtil.parseDate(val);\n        }\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        TimeScale.prototype[methodName] = function (val) {\n            return intervalScaleProto[methodName].call(this, this.parse(val));\n        };\n    });\n\n    // Steps from d3\n    var scaleLevels = [\n        // Format       step    interval\n        ['hh:mm:ss',    1,      ONE_SECOND],           // 1s\n        ['hh:mm:ss',    5,      ONE_SECOND * 5],       // 5s\n        ['hh:mm:ss',    10,     ONE_SECOND * 10],      // 10s\n        ['hh:mm:ss',    15,     ONE_SECOND * 15],      // 15s\n        ['hh:mm:ss',    30,     ONE_SECOND * 30],      // 30s\n        ['hh:mm\\nMM-dd',1,      ONE_MINUTE],          // 1m\n        ['hh:mm\\nMM-dd',5,      ONE_MINUTE * 5],      // 5m\n        ['hh:mm\\nMM-dd',10,     ONE_MINUTE * 10],     // 10m\n        ['hh:mm\\nMM-dd',15,     ONE_MINUTE * 15],     // 15m\n        ['hh:mm\\nMM-dd',30,     ONE_MINUTE * 30],     // 30m\n        ['hh:mm\\nMM-dd',1,      ONE_HOUR],        // 1h\n        ['hh:mm\\nMM-dd',2,      ONE_HOUR * 2],    // 2h\n        ['hh:mm\\nMM-dd',6,      ONE_HOUR * 6],    // 6h\n        ['hh:mm\\nMM-dd',12,     ONE_HOUR * 12],   // 12h\n        ['MM-dd\\nyyyy', 1,      ONE_DAY],   // 1d\n        ['week',        7,      ONE_DAY * 7],        // 7d\n        ['month',       1,      ONE_DAY * 31],       // 1M\n        ['quarter',     3,      ONE_DAY * 380 / 4],  // 3M\n        ['half-year',   6,      ONE_DAY * 380 / 2],  // 6M\n        ['year',        1,      ONE_DAY * 380]       // 1Y\n    ];\n\n    /**\n     * @param {module:echarts/model/Model}\n     * @return {module:echarts/scale/Time}\n     */\n    TimeScale.create = function (model) {\n        return new TimeScale({useUTC: model.ecModel.get('useUTC')});\n    };\n\n    module.exports = TimeScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/scale/Time.js\n// module id = 1121\n// module chunks = 0 1 2","/**\n * Log scale\n * @module echarts/scale/Log\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Scale = require('./Scale');\n    var numberUtil = require('../util/number');\n\n    // Use some method of IntervalScale\n    var IntervalScale = require('./Interval');\n\n    var scaleProto = Scale.prototype;\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var getPrecisionSafe = numberUtil.getPrecisionSafe;\n    var roundingErrorFix = numberUtil.round;\n\n    var mathFloor = Math.floor;\n    var mathCeil = Math.ceil;\n    var mathPow = Math.pow;\n\n    var mathLog = Math.log;\n\n    var LogScale = Scale.extend({\n\n        type: 'log',\n\n        base: 10,\n\n        $constructor: function () {\n            Scale.apply(this, arguments);\n            this._originalScale = new IntervalScale();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            var originalScale = this._originalScale;\n            var extent = this._extent;\n            var originalExtent = originalScale.getExtent();\n\n            return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n                var powVal = numberUtil.round(mathPow(this.base, val));\n\n                // Fix #4158\n                powVal = (val === extent[0] && originalScale.__fixMin)\n                    ? fixRoundingError(powVal, originalExtent[0])\n                    : powVal;\n                powVal = (val === extent[1] && originalScale.__fixMax)\n                    ? fixRoundingError(powVal, originalExtent[1])\n                    : powVal;\n\n                return powVal;\n            }, this);\n        },\n\n        /**\n         * @param {number} val\n         * @return {string}\n         */\n        getLabel: intervalScaleProto.getLabel,\n\n        /**\n         * @param  {number} val\n         * @return {number}\n         */\n        scale: function (val) {\n            val = scaleProto.scale.call(this, val);\n            return mathPow(this.base, val);\n        },\n\n        /**\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var base = this.base;\n            start = mathLog(start) / mathLog(base);\n            end = mathLog(end) / mathLog(base);\n            intervalScaleProto.setExtent.call(this, start, end);\n        },\n\n        /**\n         * @return {number} end\n         */\n        getExtent: function () {\n            var base = this.base;\n            var extent = scaleProto.getExtent.call(this);\n            extent[0] = mathPow(base, extent[0]);\n            extent[1] = mathPow(base, extent[1]);\n\n            // Fix #4158\n            var originalScale = this._originalScale;\n            var originalExtent = originalScale.getExtent();\n            originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n            originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n\n            return extent;\n        },\n\n        /**\n         * @param  {Array.<number>} extent\n         */\n        unionExtent: function (extent) {\n            this._originalScale.unionExtent(extent);\n\n            var base = this.base;\n            extent[0] = mathLog(extent[0]) / mathLog(base);\n            extent[1] = mathLog(extent[1]) / mathLog(base);\n            scaleProto.unionExtent.call(this, extent);\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, true, function (val) {\n                return val > 0;\n            }));\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         * @param  {number} [approxTickNum = 10] Given approx tick number\n         */\n        niceTicks: function (approxTickNum) {\n            approxTickNum = approxTickNum || 10;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (span === Infinity || span <= 0) {\n                return;\n            }\n\n            var interval = numberUtil.quantity(span);\n            var err = approxTickNum / span * interval;\n\n            // Filter ticks to get closer to the desired count.\n            if (err <= 0.5) {\n                interval *= 10;\n            }\n\n            // Interval should be integer\n            while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n                interval *= 10;\n            }\n\n            var niceExtent = [\n                numberUtil.round(mathCeil(extent[0] / interval) * interval),\n                numberUtil.round(mathFloor(extent[1] / interval) * interval)\n            ];\n\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @override\n         */\n        niceExtent: function (opt) {\n            intervalScaleProto.niceExtent.call(this, opt);\n\n            var originalScale = this._originalScale;\n            originalScale.__fixMin = opt.fixMin;\n            originalScale.__fixMax = opt.fixMax;\n        }\n\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        LogScale.prototype[methodName] = function (val) {\n            val = mathLog(val) / mathLog(this.base);\n            return scaleProto[methodName].call(this, val);\n        };\n    });\n\n    LogScale.create = function () {\n        return new LogScale();\n    };\n\n    function fixRoundingError(val, originalVal) {\n        return roundingErrorFix(val, getPrecisionSafe(originalVal));\n    }\n\n    module.exports = LogScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/scale/Log.js\n// module id = 1122\n// module chunks = 0 1 2","\n\n    var createListFromArray = require('./chart/helper/createListFromArray');\n    var symbolUtil = require('./util/symbol');\n    var axisHelper = require('./coord/axisHelper');\n    var axisModelCommonMixin = require('./coord/axisModelCommonMixin');\n    var Model = require('./model/Model');\n    var util = require('zrender/lib/core/util');\n\n    module.exports = {\n        /**\n         * Create a muti dimension List structure from seriesModel.\n         * @param  {module:echarts/model/Model} seriesModel\n         * @return {module:echarts/data/List} list\n         */\n        createList: function (seriesModel) {\n            var data = seriesModel.get('data');\n            return createListFromArray(data, seriesModel, seriesModel.ecModel);\n        },\n\n        /**\n         * @see {module:echarts/data/helper/completeDimensions}\n         */\n        completeDimensions: require('./data/helper/completeDimensions'),\n\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @see http://echarts.baidu.com/option.html#series-scatter.symbol\n         * @param {string} symbolDesc\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: symbolUtil.createSymbol,\n\n        /**\n         * Create scale\n         * @param {Array.<number>} dataExtent\n         * @param {Object|module:echarts/Model} option\n         */\n        createScale: function (dataExtent, option) {\n            var axisModel = option;\n            if (!(option instanceof Model)) {\n                axisModel = new Model(option);\n                util.mixin(axisModel, axisModelCommonMixin);\n            }\n\n            var scale = axisHelper.createScaleByModel(axisModel);\n            scale.setExtent(dataExtent[0], dataExtent[1]);\n\n            axisHelper.niceScaleExtent(scale, axisModel);\n            return scale;\n        },\n\n        /**\n         * Mixin common methods to axis model,\n         *\n         * Inlcude methods\n         * `getFormattedLabels() => Array.<string>`\n         * `getCategories() => Array.<string>`\n         * `getMin(origin: boolean) => number`\n         * `getMax(origin: boolean) => number`\n         * `getNeedCrossZero() => boolean`\n         * `setRange(start: number, end: number)`\n         * `resetRange()`\n         */\n        mixinAxisModelCommonMethods: function (Model) {\n            util.mixin(Model, axisModelCommonMixin);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/helper.js\n// module id = 1123\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n    var modelHelper = require('./modelHelper');\n    var findPointFromSeries = require('./findPointFromSeries');\n\n    var each = zrUtil.each;\n    var curry = zrUtil.curry;\n    var get = modelUtil.makeGetter();\n\n    /**\n     * Basic logic: check all axis, if they do not demand show/highlight,\n     * then hide/downplay them.\n     *\n     * @param {Object} coordSysAxesInfo\n     * @param {Object} payload\n     * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n     * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n     *              trigger axisPointer and tooltip.\n     * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n     *              trigger axisPointer and tooltip.\n     * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n     * @param {Object} [payload.dataIndex] finder, restrict target axes.\n     * @param {Object} [payload.axesInfo] finder, restrict target axes.\n     *        [{\n     *          axisDim: 'x'|'y'|'angle'|...,\n     *          axisIndex: ...,\n     *          value: ...\n     *        }, ...]\n     * @param {Function} [payload.dispatchAction]\n     * @param {Object} [payload.tooltipOption]\n     * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n     *        which can be specified in dispatchAction\n     * @param {module:echarts/model/Global} ecModel\n     * @param {module:echarts/ExtensionAPI} api\n     * @return {Object} content of event obj for echarts.connect.\n     */\n    function axisTrigger(payload, ecModel, api) {\n        var currTrigger = payload.currTrigger;\n        var point = [payload.x, payload.y];\n        var finder = payload;\n        var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n        var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n        // Pending\n        // See #6121. But we are not able to reproduce it yet.\n        if (!coordSysAxesInfo) {\n            return;\n        }\n\n        if (illegalPoint(point)) {\n            // Used in the default behavior of `connection`: use the sample seriesIndex\n            // and dataIndex. And also used in the tooltipView trigger.\n            point = findPointFromSeries({\n                seriesIndex: finder.seriesIndex,\n                // Do not use dataIndexInside from other ec instance.\n                // FIXME: auto detect it?\n                dataIndex: finder.dataIndex\n            }, ecModel).point;\n        }\n        var isIllegalPoint = illegalPoint(point);\n\n        // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n        // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n        // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n        // and dataIndex.\n        var inputAxesInfo = finder.axesInfo;\n\n        var axesInfo = coordSysAxesInfo.axesInfo;\n        var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n        var outputFinder = {};\n\n        var showValueMap = {};\n        var dataByCoordSys = {list: [], map: {}};\n        var updaters = {\n            showPointer: curry(showPointer, showValueMap),\n            showTooltip: curry(showTooltip, dataByCoordSys)\n        };\n\n        // Process for triggered axes.\n        each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n            // If a point given, it must be contained by the coordinate system.\n            var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n\n            each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n                var axis = axisInfo.axis;\n                var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo);\n                // If no inputAxesInfo, no axis is restricted.\n                if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n                    var val = inputAxisInfo && inputAxisInfo.value;\n                    if (val == null && !isIllegalPoint) {\n                        val = axis.pointToData(point);\n                    }\n                    val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n                }\n            });\n        });\n\n        // Process for linked axes.\n        var linkTriggers = {};\n        each(axesInfo, function (tarAxisInfo, tarKey) {\n            var linkGroup = tarAxisInfo.linkGroup;\n\n            // If axis has been triggered in the previous stage, it should not be triggered by link.\n            if (linkGroup && !showValueMap[tarKey]) {\n                each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n                    var srcValItem = showValueMap[srcKey];\n                    // If srcValItem exist, source axis is triggered, so link to target axis.\n                    if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n                        var val = srcValItem.value;\n                        linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(\n                            val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo)\n                        )));\n                        linkTriggers[tarAxisInfo.key] = val;\n                    }\n                });\n            }\n        });\n        each(linkTriggers, function (val, tarKey) {\n            processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n        });\n\n        updateModelActually(showValueMap, axesInfo, outputFinder);\n        dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n        dispatchHighDownActually(axesInfo, dispatchAction, api);\n\n        return outputFinder;\n    }\n\n    function processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n        var axis = axisInfo.axis;\n\n        if (axis.scale.isBlank() || !axis.containData(newValue)) {\n            return;\n        }\n\n        if (!axisInfo.involveSeries) {\n            updaters.showPointer(axisInfo, newValue);\n            return;\n        }\n\n        // Heavy calculation. So put it after axis.containData checking.\n        var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n        var payloadBatch = payloadInfo.payloadBatch;\n        var snapToValue = payloadInfo.snapToValue;\n\n        // Fill content of event obj for echarts.connect.\n        // By defualt use the first involved series data as a sample to connect.\n        if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n            zrUtil.extend(outputFinder, payloadBatch[0]);\n        }\n\n        // If no linkSource input, this process is for collecting link\n        // target, where snap should not be accepted.\n        if (!dontSnap && axisInfo.snap) {\n            if (axis.containData(snapToValue) && snapToValue != null) {\n                newValue = snapToValue;\n            }\n        }\n\n        updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder);\n        // Tooltip should always be snapToValue, otherwise there will be\n        // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n        updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n    }\n\n    function buildPayloadsBySeries(value, axisInfo) {\n        var axis = axisInfo.axis;\n        var dim = axis.dim;\n        var snapToValue = value;\n        var payloadBatch = [];\n        var minDist = Number.MAX_VALUE;\n        var minDiff = -1;\n\n        each(axisInfo.seriesModels, function (series, idx) {\n            var dataDim = series.coordDimToDataDim(dim);\n            var seriesNestestValue;\n            var dataIndices;\n\n            if (series.getAxisTooltipData) {\n                var result = series.getAxisTooltipData(dataDim, value, axis);\n                dataIndices = result.dataIndices;\n                seriesNestestValue = result.nestestValue;\n            }\n            else {\n                dataIndices = series.getData().indicesOfNearest(\n                    dataDim[0],\n                    value,\n                    // Add a threshold to avoid find the wrong dataIndex\n                    // when data length is not same.\n                    false, axis.type === 'category' ? 0.5 : null\n                );\n                if (!dataIndices.length) {\n                    return;\n                }\n                seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n            }\n\n            if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n                return;\n            }\n\n            var diff = value - seriesNestestValue;\n            var dist = Math.abs(diff);\n            // Consider category case\n            if (dist <= minDist) {\n                if (dist < minDist || (diff >= 0 && minDiff < 0)) {\n                    minDist = dist;\n                    minDiff = diff;\n                    snapToValue = seriesNestestValue;\n                    payloadBatch.length = 0;\n                }\n                each(dataIndices, function (dataIndex) {\n                    payloadBatch.push({\n                        seriesIndex: series.seriesIndex,\n                        dataIndexInside: dataIndex,\n                        dataIndex: series.getData().getRawIndex(dataIndex)\n                    });\n                });\n            }\n        });\n\n        return {\n            payloadBatch: payloadBatch,\n            snapToValue: snapToValue\n        };\n    }\n\n    function showPointer(showValueMap, axisInfo, value, payloadBatch) {\n        showValueMap[axisInfo.key] = {value: value, payloadBatch: payloadBatch};\n    }\n\n    function showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n        var payloadBatch = payloadInfo.payloadBatch;\n        var axis = axisInfo.axis;\n        var axisModel = axis.model;\n        var axisPointerModel = axisInfo.axisPointerModel;\n\n        // If no data, do not create anything in dataByCoordSys,\n        // whose length will be used to judge whether dispatch action.\n        if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n            return;\n        }\n\n        var coordSysModel = axisInfo.coordSys.model;\n        var coordSysKey = modelHelper.makeKey(coordSysModel);\n        var coordSysItem = dataByCoordSys.map[coordSysKey];\n        if (!coordSysItem) {\n            coordSysItem = dataByCoordSys.map[coordSysKey] = {\n                coordSysId: coordSysModel.id,\n                coordSysIndex: coordSysModel.componentIndex,\n                coordSysType: coordSysModel.type,\n                coordSysMainType: coordSysModel.mainType,\n                dataByAxis: []\n            };\n            dataByCoordSys.list.push(coordSysItem);\n        }\n\n        coordSysItem.dataByAxis.push({\n            axisDim: axis.dim,\n            axisIndex: axisModel.componentIndex,\n            axisType: axisModel.type,\n            axisId: axisModel.id,\n            value: value,\n            // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n            // depends that all models have been updated. So it should not be performed\n            // here. Considering axisPointerModel used here is volatile, which is hard\n            // to be retrieve in TooltipView, we prepare parameters here.\n            valueLabelOpt: {\n                precision: axisPointerModel.get('label.precision'),\n                formatter: axisPointerModel.get('label.formatter')\n            },\n            seriesDataIndices: payloadBatch.slice()\n        });\n    }\n\n    function updateModelActually(showValueMap, axesInfo, outputFinder) {\n        var outputAxesInfo = outputFinder.axesInfo = [];\n        // Basic logic: If no 'show' required, 'hide' this axisPointer.\n        each(axesInfo, function (axisInfo, key) {\n            var option = axisInfo.axisPointerModel.option;\n            var valItem = showValueMap[key];\n\n            if (valItem) {\n                !axisInfo.useHandle && (option.status = 'show');\n                option.value = valItem.value;\n                // For label formatter param and highlight.\n                option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n            }\n            // When always show (e.g., handle used), remain\n            // original value and status.\n            else {\n                // If hide, value still need to be set, consider\n                // click legend to toggle axis blank.\n                !axisInfo.useHandle && (option.status = 'hide');\n            }\n\n            // If status is 'hide', should be no info in payload.\n            option.status === 'show' && outputAxesInfo.push({\n                axisDim: axisInfo.axis.dim,\n                axisIndex: axisInfo.axis.model.componentIndex,\n                value: option.value\n            });\n        });\n    }\n\n    function dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n        // Basic logic: If no showTip required, hideTip will be dispatched.\n        if (illegalPoint(point) || !dataByCoordSys.list.length) {\n            dispatchAction({type: 'hideTip'});\n            return;\n        }\n\n        // In most case only one axis (or event one series is used). It is\n        // convinient to fetch payload.seriesIndex and payload.dataIndex\n        // dirtectly. So put the first seriesIndex and dataIndex of the first\n        // axis on the payload.\n        var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n\n        dispatchAction({\n            type: 'showTip',\n            escapeConnect: true,\n            x: point[0],\n            y: point[1],\n            tooltipOption: payload.tooltipOption,\n            position: payload.position,\n            dataIndexInside: sampleItem.dataIndexInside,\n            dataIndex: sampleItem.dataIndex,\n            seriesIndex: sampleItem.seriesIndex,\n            dataByCoordSys: dataByCoordSys.list\n        });\n    }\n\n    function dispatchHighDownActually(axesInfo, dispatchAction, api) {\n        // FIXME\n        // highlight status modification shoule be a stage of main process?\n        // (Consider confilct (e.g., legend and axisPointer) and setOption)\n\n        var zr = api.getZr();\n        var highDownKey = 'axisPointerLastHighlights';\n        var lastHighlights = get(zr)[highDownKey] || {};\n        var newHighlights = get(zr)[highDownKey] = {};\n\n        // Update highlight/downplay status according to axisPointer model.\n        // Build hash map and remove duplicate incidentally.\n        each(axesInfo, function (axisInfo, key) {\n            var option = axisInfo.axisPointerModel.option;\n            option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n                var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n                newHighlights[key] = batchItem;\n            });\n        });\n\n        // Diff.\n        var toHighlight = [];\n        var toDownplay = [];\n        zrUtil.each(lastHighlights, function (batchItem, key) {\n            !newHighlights[key] && toDownplay.push(batchItem);\n        });\n        zrUtil.each(newHighlights, function (batchItem, key) {\n            !lastHighlights[key] && toHighlight.push(batchItem);\n        });\n\n        toDownplay.length && api.dispatchAction({\n            type: 'downplay', escapeConnect: true, batch: toDownplay\n        });\n        toHighlight.length && api.dispatchAction({\n            type: 'highlight', escapeConnect: true, batch: toHighlight\n        });\n    }\n\n    function findInputAxisInfo(inputAxesInfo, axisInfo) {\n        for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n            var inputAxisInfo = inputAxesInfo[i];\n            if (axisInfo.axis.dim === inputAxisInfo.axisDim\n                && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex\n            ) {\n                return inputAxisInfo;\n            }\n        }\n    }\n\n    function makeMapperParam(axisInfo) {\n        var axisModel = axisInfo.axis.model;\n        var item = {};\n        var dim = item.axisDim = axisInfo.axis.dim;\n        item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n        item.axisName = item[dim + 'AxisName'] = axisModel.name;\n        item.axisId = item[dim + 'AxisId'] = axisModel.id;\n        return item;\n    }\n\n    function illegalPoint(point) {\n        return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n    }\n\n    module.exports = axisTrigger;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/axisTrigger.js\n// module id = 1124\n// module chunks = 0 1 2","\n\n    var echarts = require('../../echarts');\n\n    var AxisPointerModel = echarts.extendComponentModel({\n\n        type: 'axisPointer',\n\n        coordSysAxesInfo: null,\n\n        defaultOption: {\n            // 'auto' means that show when triggered by tooltip or handle.\n            show: 'auto',\n            // 'click' | 'mousemove' | 'none'\n            triggerOn: null, // set default in AxisPonterView.js\n\n            zlevel: 0,\n            z: 50,\n\n            type: 'line',\n            // axispointer triggered by tootip determine snap automatically,\n            // see `modelHelper`.\n            snap: false,\n            triggerTooltip: true,\n\n            value: null,\n            status: null, // Init value depends on whether handle is used.\n\n            // [group0, group1, ...]\n            // Each group can be: {\n            //      mapper: function () {},\n            //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n            //      xAxisId: ...,\n            //      yAxisName: ...,\n            //      angleAxisIndex: ...\n            // }\n            // mapper: can be ignored.\n            //      input: {axisInfo, value}\n            //      output: {axisInfo, value}\n            link: [],\n\n            // Do not set 'auto' here, otherwise global animation: false\n            // will not effect at this axispointer.\n            animation: null,\n            animationDurationUpdate: 200,\n\n            lineStyle: {\n                color: '#aaa',\n                width: 1,\n                type: 'solid'\n            },\n\n            shadowStyle: {\n                color: 'rgba(150,150,150,0.3)'\n            },\n\n            label: {\n                show: true,\n                formatter: null, // string | Function\n                precision: 'auto', // Or a number like 0, 1, 2 ...\n                margin: 3,\n                color: '#fff',\n                padding: [5, 7, 5, 7],\n                backgroundColor: 'auto', // default: axis line color\n                borderColor: null,\n                borderWidth: 0,\n                shadowBlur: 3,\n                shadowColor: '#aaa'\n                // Considering applicability, common style should\n                // better not have shadowOffset.\n                // shadowOffsetX: 0,\n                // shadowOffsetY: 2\n            },\n\n            handle: {\n                show: false,\n                icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z', // jshint ignore:line\n                size: 45,\n                // handle margin is from symbol center to axis, which is stable when circular move.\n                margin: 50,\n                // color: '#1b8bbd'\n                // color: '#2f4554'\n                color: '#333',\n                shadowBlur: 3,\n                shadowColor: '#aaa',\n                shadowOffsetX: 0,\n                shadowOffsetY: 2,\n\n                // For mobile performance\n                throttle: 40\n            }\n        }\n\n    });\n\n    module.exports = AxisPointerModel;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/AxisPointerModel.js\n// module id = 1125\n// module chunks = 0 1 2","\n\n    var globalListener = require('./globalListener');\n\n    var AxisPonterView = require('../../echarts').extendComponentView({\n\n        type: 'axisPointer',\n\n        render: function (globalAxisPointerModel, ecModel, api) {\n            var globalTooltipModel = ecModel.getComponent('tooltip');\n            var triggerOn = globalAxisPointerModel.get('triggerOn')\n                || (globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click');\n\n            // Register global listener in AxisPointerView to enable\n            // AxisPointerView to be independent to Tooltip.\n            globalListener.register(\n                'axisPointer',\n                api,\n                function (currTrigger, e, dispatchAction) {\n                    // If 'none', it is not controlled by mouse totally.\n                    if (triggerOn !== 'none'\n                        && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)\n                    ) {\n                        dispatchAction({\n                            type: 'updateAxisPointer',\n                            currTrigger: currTrigger,\n                            x: e && e.offsetX,\n                            y: e && e.offsetY\n                        });\n                    }\n                }\n            );\n        },\n\n        /**\n         * @override\n         */\n        remove: function (ecModel, api) {\n            globalListener.disopse(api.getZr(), 'axisPointer');\n            AxisPonterView.superApply(this._model, 'remove', arguments);\n        },\n\n        /**\n         * @override\n         */\n        dispose: function (ecModel, api) {\n            globalListener.unregister('axisPointer', api);\n            AxisPonterView.superApply(this._model, 'dispose', arguments);\n        }\n\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/AxisPointerView.js\n// module id = 1126\n// module chunks = 0 1 2","\n\n    require('../../echarts').extendComponentModel({\n\n        type: 'tooltip',\n\n        dependencies: ['axisPointer'],\n\n        defaultOption: {\n            zlevel: 0,\n\n            z: 8,\n\n            show: true,\n\n            // tooltip主体内容\n            showContent: true,\n\n            // 'trigger' only works on coordinate system.\n            // 'item' | 'axis' | 'none'\n            trigger: 'item',\n\n            // 'click' | 'mousemove' | 'none'\n            triggerOn: 'mousemove|click',\n\n            alwaysShowContent: false,\n\n            displayMode: 'single', // 'single' | 'multipleByCoordSys'\n\n            // 位置 {Array} | {Function}\n            // position: null\n            // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n            // align: null,\n            // verticalAlign: null,\n\n            // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n            confine: false,\n\n            // 内容格式器：{string}（Template） ¦ {Function}\n            // formatter: null\n\n            showDelay: 0,\n\n            // 隐藏延迟，单位ms\n            hideDelay: 100,\n\n            // 动画变换时间，单位s\n            transitionDuration: 0.4,\n\n            enterable: false,\n\n            // 提示背景颜色，默认为透明度为0.7的黑色\n            backgroundColor: 'rgba(50,50,50,0.7)',\n\n            // 提示边框颜色\n            borderColor: '#333',\n\n            // 提示边框圆角，单位px，默认为4\n            borderRadius: 4,\n\n            // 提示边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n\n            // 提示内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n\n            // Extra css text\n            extraCssText: '',\n\n            // 坐标轴指示器，坐标轴触发有效\n            axisPointer: {\n                // 默认为直线\n                // 可选为：'line' | 'shadow' | 'cross'\n                type: 'line',\n\n                // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n                // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n                // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n                // 极坐标系会默认选择 angle 轴\n                axis: 'auto',\n\n                animation: 'auto',\n                animationDurationUpdate: 200,\n                animationEasingUpdate: 'exponentialOut',\n\n                crossStyle: {\n                    color: '#999',\n                    width: 1,\n                    type: 'dashed',\n\n                    // TODO formatter\n                    textStyle: {}\n                }\n\n                // lineStyle and shadowStyle should not be specified here,\n                // otherwise it will always override those styles on option.axisPointer.\n            },\n            textStyle: {\n                color: '#fff',\n                fontSize: 14\n            }\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/tooltip/TooltipModel.js\n// module id = 1127\n// module chunks = 0 1 2","\n\n    var TooltipContent = require('./TooltipContent');\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../../util/format');\n    var numberUtil = require('../../util/number');\n    var graphic = require('../../util/graphic');\n    var findPointFromSeries = require('../axisPointer/findPointFromSeries');\n    var layoutUtil = require('../../util/layout');\n    var env = require('zrender/lib/core/env');\n    var Model = require('../../model/Model');\n    var globalListener = require('../axisPointer/globalListener');\n    var axisHelper = require('../../coord/axisHelper');\n    var axisPointerViewHelper = require('../axisPointer/viewHelper');\n\n    var bind = zrUtil.bind;\n    var each = zrUtil.each;\n    var parsePercent = numberUtil.parsePercent;\n\n\n    var proxyRect = new graphic.Rect({\n        shape: {x: -1, y: -1, width: 2, height: 2}\n    });\n\n    require('../../echarts').extendComponentView({\n\n        type: 'tooltip',\n\n        init: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            var tooltipContent = new TooltipContent(api.getDom(), api);\n            this._tooltipContent = tooltipContent;\n        },\n\n        render: function (tooltipModel, ecModel, api) {\n            if (env.node) {\n                return;\n            }\n\n            // Reset\n            this.group.removeAll();\n\n            /**\n             * @private\n             * @type {module:echarts/component/tooltip/TooltipModel}\n             */\n            this._tooltipModel = tooltipModel;\n\n            /**\n             * @private\n             * @type {module:echarts/model/Global}\n             */\n            this._ecModel = ecModel;\n\n            /**\n             * @private\n             * @type {module:echarts/ExtensionAPI}\n             */\n            this._api = api;\n\n            /**\n             * Should be cleaned when render.\n             * @private\n             * @type {Array.<Array.<Object>>}\n             */\n            this._lastDataByCoordSys = null;\n\n            /**\n             * @private\n             * @type {boolean}\n             */\n            this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n\n            var tooltipContent = this._tooltipContent;\n            tooltipContent.update();\n            tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n            this._initGlobalListener();\n\n            this._keepShow();\n        },\n\n        _initGlobalListener: function () {\n            var tooltipModel = this._tooltipModel;\n            var triggerOn = tooltipModel.get('triggerOn');\n\n            globalListener.register(\n                'itemTooltip',\n                this._api,\n                bind(function (currTrigger, e, dispatchAction) {\n                    // If 'none', it is not controlled by mouse totally.\n                    if (triggerOn !== 'none') {\n                        if (triggerOn.indexOf(currTrigger) >= 0) {\n                            this._tryShow(e, dispatchAction);\n                        }\n                        else if (currTrigger === 'leave') {\n                            this._hide(dispatchAction);\n                        }\n                    }\n                }, this)\n            );\n        },\n\n        _keepShow: function () {\n            var tooltipModel = this._tooltipModel;\n            var ecModel = this._ecModel;\n            var api = this._api;\n\n            // Try to keep the tooltip show when refreshing\n            if (this._lastX != null\n                && this._lastY != null\n                // When user is willing to control tooltip totally using API,\n                // self.manuallyShowTip({x, y}) might cause tooltip hide,\n                // which is not expected.\n                && tooltipModel.get('triggerOn') !== 'none'\n            ) {\n                var self = this;\n                clearTimeout(this._refreshUpdateTimeout);\n                this._refreshUpdateTimeout = setTimeout(function () {\n                    // Show tip next tick after other charts are rendered\n                    // In case highlight action has wrong result\n                    // FIXME\n                    self.manuallyShowTip(tooltipModel, ecModel, api, {\n                        x: self._lastX,\n                        y: self._lastY\n                    });\n                });\n            }\n        },\n\n        /**\n         * Show tip manually by\n         * dispatchAction({\n         *     type: 'showTip',\n         *     x: 10,\n         *     y: 10\n         * });\n         * Or\n         * dispatchAction({\n         *      type: 'showTip',\n         *      seriesIndex: 0,\n         *      dataIndex or dataIndexInside or name\n         * });\n         *\n         *  TODO Batch\n         */\n        manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n            if (payload.from === this.uid || env.node) {\n                return;\n            }\n\n            var dispatchAction = makeDispatchAction(payload, api);\n\n            // Reset ticket\n            this._ticket = '';\n\n            // When triggered from axisPointer.\n            var dataByCoordSys = payload.dataByCoordSys;\n\n            if (payload.tooltip && payload.x != null && payload.y != null) {\n                var el = proxyRect;\n                el.position = [payload.x, payload.y];\n                el.update();\n                el.tooltip = payload.tooltip;\n                // Manually show tooltip while view is not using zrender elements.\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    target: el\n                }, dispatchAction);\n            }\n            else if (dataByCoordSys) {\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    event: {},\n                    dataByCoordSys: payload.dataByCoordSys,\n                    tooltipOption: payload.tooltipOption\n                }, dispatchAction);\n            }\n            else if (payload.seriesIndex != null) {\n\n                if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n                    return;\n                }\n\n                var pointInfo = findPointFromSeries(payload, ecModel);\n                var cx = pointInfo.point[0];\n                var cy = pointInfo.point[1];\n                if (cx != null && cy != null) {\n                    this._tryShow({\n                        offsetX: cx,\n                        offsetY: cy,\n                        position: payload.position,\n                        target: pointInfo.el,\n                        event: {}\n                    }, dispatchAction);\n                }\n            }\n            else if (payload.x != null && payload.y != null) {\n                // FIXME\n                // should wrap dispatchAction like `axisPointer/globalListener` ?\n                api.dispatchAction({\n                    type: 'updateAxisPointer',\n                    x: payload.x,\n                    y: payload.y\n                });\n\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    target: api.getZr().findHover(payload.x, payload.y).target,\n                    event: {}\n                }, dispatchAction);\n            }\n        },\n\n        manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n            var tooltipContent = this._tooltipContent;\n\n            if (!this._alwaysShowContent) {\n                tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n            }\n\n            this._lastX = this._lastY = null;\n\n            if (payload.from !== this.uid) {\n                this._hide(makeDispatchAction(payload, api));\n            }\n        },\n\n        // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n        // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n        // and tooltip.\n        _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n            var seriesIndex = payload.seriesIndex;\n            var dataIndex = payload.dataIndex;\n            var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n            if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n                return;\n            }\n\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n            if (!seriesModel) {\n                return;\n            }\n\n            var data = seriesModel.getData();\n            var tooltipModel = buildTooltipModel([\n                data.getItemModel(dataIndex),\n                seriesModel,\n                (seriesModel.coordinateSystem || {}).model,\n                tooltipModel\n            ]);\n\n            if (tooltipModel.get('trigger') !== 'axis') {\n                return;\n            }\n\n            api.dispatchAction({\n                type: 'updateAxisPointer',\n                seriesIndex: seriesIndex,\n                dataIndex: dataIndex,\n                position: payload.position\n            });\n\n            return true;\n        },\n\n        _tryShow: function (e, dispatchAction) {\n            var el = e.target;\n            var tooltipModel = this._tooltipModel;\n\n            if (!tooltipModel) {\n                return;\n            }\n\n            // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n            this._lastX = e.offsetX;\n            this._lastY = e.offsetY;\n\n            var dataByCoordSys = e.dataByCoordSys;\n            if (dataByCoordSys && dataByCoordSys.length) {\n                this._showAxisTooltip(dataByCoordSys, e);\n            }\n            // Always show item tooltip if mouse is on the element with dataIndex\n            else if (el && el.dataIndex != null) {\n                this._lastDataByCoordSys = null;\n                this._showSeriesItemTooltip(e, el, dispatchAction);\n            }\n            // Tooltip provided directly. Like legend.\n            else if (el && el.tooltip) {\n                this._lastDataByCoordSys = null;\n                this._showComponentItemTooltip(e, el, dispatchAction);\n            }\n            else {\n                this._lastDataByCoordSys = null;\n                this._hide(dispatchAction);\n            }\n        },\n\n        _showOrMove: function (tooltipModel, cb) {\n            // showDelay is used in this case: tooltip.enterable is set\n            // as true. User intent to move mouse into tooltip and click\n            // something. `showDelay` makes it easyer to enter the content\n            // but tooltip do not move immediately.\n            var delay = tooltipModel.get('showDelay');\n            cb = zrUtil.bind(cb, this);\n            clearTimeout(this._showTimout);\n            delay > 0\n                ? (this._showTimout = setTimeout(cb, delay))\n                : cb();\n        },\n\n        _showAxisTooltip: function (dataByCoordSys, e) {\n            var ecModel = this._ecModel;\n            var globalTooltipModel = this._tooltipModel;\n            var point = [e.offsetX, e.offsetY];\n            var singleDefaultHTML = [];\n            var singleParamsList = [];\n            var singleTooltipModel = buildTooltipModel([\n                e.tooltipOption,\n                globalTooltipModel\n            ]);\n\n            each(dataByCoordSys, function (itemCoordSys) {\n                // var coordParamList = [];\n                // var coordDefaultHTML = [];\n                // var coordTooltipModel = buildTooltipModel([\n                //     e.tooltipOption,\n                //     itemCoordSys.tooltipOption,\n                //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n                //     globalTooltipModel\n                // ]);\n                // var displayMode = coordTooltipModel.get('displayMode');\n                // var paramsList = displayMode === 'single' ? singleParamsList : [];\n\n                each(itemCoordSys.dataByAxis, function (item) {\n                    var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n                    var axisValue = item.value;\n                    var seriesDefaultHTML = [];\n\n                    if (!axisModel || axisValue == null) {\n                        return;\n                    }\n\n                    var valueLabel = axisPointerViewHelper.getValueLabel(\n                        axisValue, axisModel.axis, ecModel,\n                        item.seriesDataIndices,\n                        item.valueLabelOpt\n                    );\n\n                    zrUtil.each(item.seriesDataIndices, function (idxItem) {\n                        var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n                        var dataIndex = idxItem.dataIndexInside;\n                        var dataParams = series && series.getDataParams(dataIndex);\n                        dataParams.axisDim = item.axisDim;\n                        dataParams.axisIndex = item.axisIndex;\n                        dataParams.axisType = item.axisType;\n                        dataParams.axisId = item.axisId;\n                        dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n                        dataParams.axisValueLabel = valueLabel;\n\n                        if (dataParams) {\n                            singleParamsList.push(dataParams);\n                            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n                        }\n                    });\n\n                    // Default tooltip content\n                    // FIXME\n                    // (1) shold be the first data which has name?\n                    // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n                    var firstLine = valueLabel;\n                    singleDefaultHTML.push(\n                        (firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '')\n                        + seriesDefaultHTML.join('<br />')\n                    );\n                });\n            }, this);\n\n            // In most case, the second axis is shown upper than the first one.\n            singleDefaultHTML.reverse();\n            singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n\n            var positionExpr = e.position;\n            this._showOrMove(singleTooltipModel, function () {\n                if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n                    this._updatePosition(\n                        singleTooltipModel,\n                        positionExpr,\n                        point[0], point[1],\n                        this._tooltipContent,\n                        singleParamsList\n                    );\n                }\n                else {\n                    this._showTooltipContent(\n                        singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(),\n                        point[0], point[1], positionExpr\n                    );\n                }\n            });\n\n            // Do not trigger events here, because this branch only be entered\n            // from dispatchAction.\n        },\n\n        _showSeriesItemTooltip: function (e, el, dispatchAction) {\n            var ecModel = this._ecModel;\n            // Use dataModel in element if possible\n            // Used when mouseover on a element like markPoint or edge\n            // In which case, the data is not main data in series.\n            var seriesIndex = el.seriesIndex;\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n            // For example, graph link.\n            var dataModel = el.dataModel || seriesModel;\n            var dataIndex = el.dataIndex;\n            var dataType = el.dataType;\n            var data = dataModel.getData();\n\n            var tooltipModel = buildTooltipModel([\n                data.getItemModel(dataIndex),\n                dataModel,\n                seriesModel && (seriesModel.coordinateSystem || {}).model,\n                this._tooltipModel\n            ]);\n\n            var tooltipTrigger = tooltipModel.get('trigger');\n            if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n                return;\n            }\n\n            var params = dataModel.getDataParams(dataIndex, dataType);\n            var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n            var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n            this._showOrMove(tooltipModel, function () {\n                this._showTooltipContent(\n                    tooltipModel, defaultHtml, params, asyncTicket,\n                    e.offsetX, e.offsetY, e.position, e.target\n                );\n            });\n\n            // FIXME\n            // duplicated showtip if manuallyShowTip is called from dispatchAction.\n            dispatchAction({\n                type: 'showTip',\n                dataIndexInside: dataIndex,\n                dataIndex: data.getRawIndex(dataIndex),\n                seriesIndex: seriesIndex,\n                from: this.uid\n            });\n        },\n\n        _showComponentItemTooltip: function (e, el, dispatchAction) {\n            var tooltipOpt = el.tooltip;\n            if (typeof tooltipOpt === 'string') {\n                var content = tooltipOpt;\n                tooltipOpt = {\n                    content: content,\n                    // Fixed formatter\n                    formatter: content\n                };\n            }\n            var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n            var defaultHtml = subTooltipModel.get('content');\n            var asyncTicket = Math.random();\n\n            // Do not check whether `trigger` is 'none' here, because `trigger`\n            // only works on cooridinate system. In fact, we have not found case\n            // that requires setting `trigger` nothing on component yet.\n\n            this._showOrMove(subTooltipModel, function () {\n                this._showTooltipContent(\n                    subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {},\n                    asyncTicket, e.offsetX, e.offsetY, e.position, el\n                );\n            });\n\n            // If not dispatch showTip, tip may be hide triggered by axis.\n            dispatchAction({\n                type: 'showTip',\n                from: this.uid\n            });\n        },\n\n        _showTooltipContent: function (\n            tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el\n        ) {\n            // Reset ticket\n            this._ticket = '';\n\n            if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n                return;\n            }\n\n            var tooltipContent = this._tooltipContent;\n\n            var formatter = tooltipModel.get('formatter');\n            positionExpr = positionExpr || tooltipModel.get('position');\n            var html = defaultHtml;\n\n            if (formatter && typeof formatter === 'string') {\n                html = formatUtil.formatTpl(formatter, params, true);\n            }\n            else if (typeof formatter === 'function') {\n                var callback = bind(function (cbTicket, html) {\n                    if (cbTicket === this._ticket) {\n                        tooltipContent.setContent(html);\n                        this._updatePosition(\n                            tooltipModel, positionExpr, x, y, tooltipContent, params, el\n                        );\n                    }\n                }, this);\n                this._ticket = asyncTicket;\n                html = formatter(params, asyncTicket, callback);\n            }\n\n            tooltipContent.setContent(html);\n            tooltipContent.show(tooltipModel);\n\n            this._updatePosition(\n                tooltipModel, positionExpr, x, y, tooltipContent, params, el\n            );\n        },\n\n        /**\n         * @param  {string|Function|Array.<number>|Object} positionExpr\n         * @param  {number} x Mouse x\n         * @param  {number} y Mouse y\n         * @param  {boolean} confine Whether confine tooltip content in view rect.\n         * @param  {Object|<Array.<Object>} params\n         * @param  {module:zrender/Element} el target element\n         * @param  {module:echarts/ExtensionAPI} api\n         * @return {Array.<number>}\n         */\n        _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n            var viewWidth = this._api.getWidth();\n            var viewHeight = this._api.getHeight();\n            positionExpr = positionExpr || tooltipModel.get('position');\n\n            var contentSize = content.getSize();\n            var align = tooltipModel.get('align');\n            var vAlign = tooltipModel.get('verticalAlign');\n            var rect = el && el.getBoundingRect().clone();\n            el && rect.applyTransform(el.transform);\n\n            if (typeof positionExpr === 'function') {\n                // Callback of position can be an array or a string specify the position\n                positionExpr = positionExpr([x, y], params, content.el, rect, {\n                    viewSize: [viewWidth, viewHeight],\n                    contentSize: contentSize.slice()\n                });\n            }\n\n            if (zrUtil.isArray(positionExpr)) {\n                x = parsePercent(positionExpr[0], viewWidth);\n                y = parsePercent(positionExpr[1], viewHeight);\n            }\n            else if (zrUtil.isObject(positionExpr)) {\n                positionExpr.width = contentSize[0];\n                positionExpr.height = contentSize[1];\n                var layoutRect = layoutUtil.getLayoutRect(\n                    positionExpr, {width: viewWidth, height: viewHeight}\n                );\n                x = layoutRect.x;\n                y = layoutRect.y;\n                align = null;\n                // When positionExpr is left/top/right/bottom,\n                // align and verticalAlign will not work.\n                vAlign = null;\n            }\n            // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n            else if (typeof positionExpr === 'string' && el) {\n                var pos = calcTooltipPosition(\n                    positionExpr, rect, contentSize\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n            else {\n                var pos = refixTooltipPosition(\n                    x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n\n            align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n            vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n            if (tooltipModel.get('confine')) {\n                var pos = confineTooltipPosition(\n                    x, y, content.el, viewWidth, viewHeight\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n\n            content.moveTo(x, y);\n        },\n\n        // FIXME\n        // Should we remove this but leave this to user?\n        _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n            var lastCoordSys = this._lastDataByCoordSys;\n            var contentNotChanged = !!lastCoordSys\n                && lastCoordSys.length === dataByCoordSys.length;\n\n            contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n                var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n                var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n                var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n                contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n\n                contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n                    var thisItem = thisDataByAxis[indexAxis] || {};\n                    var lastIndices = lastItem.seriesDataIndices || [];\n                    var newIndices = thisItem.seriesDataIndices || [];\n\n                    contentNotChanged &=\n                        lastItem.value === thisItem.value\n                        && lastItem.axisType === thisItem.axisType\n                        && lastItem.axisId === thisItem.axisId\n                        && lastIndices.length === newIndices.length;\n\n                    contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n                        var newIdxItem = newIndices[j];\n                        contentNotChanged &=\n                            lastIdxItem.seriesIndex === newIdxItem.seriesIndex\n                            && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n                    });\n                });\n            });\n\n            this._lastDataByCoordSys = dataByCoordSys;\n\n            return !!contentNotChanged;\n        },\n\n        _hide: function (dispatchAction) {\n            // Do not directly hideLater here, because this behavior may be prevented\n            // in dispatchAction when showTip is dispatched.\n\n            // FIXME\n            // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n            this._lastDataByCoordSys = null;\n            dispatchAction({\n                type: 'hideTip',\n                from: this.uid\n            });\n        },\n\n        dispose: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            this._tooltipContent.hide();\n            globalListener.unregister('itemTooltip', api);\n        }\n    });\n\n\n    /**\n     * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n     * From top to bottom. (the last one should be globalTooltipModel);\n     */\n    function buildTooltipModel(modelCascade) {\n        var resultModel = modelCascade.pop();\n        while (modelCascade.length) {\n            var tooltipOpt = modelCascade.pop();\n            if (tooltipOpt) {\n                if (tooltipOpt instanceof Model) {\n                    tooltipOpt = tooltipOpt.get('tooltip', true);\n                }\n                // In each data item tooltip can be simply write:\n                // {\n                //  value: 10,\n                //  tooltip: 'Something you need to know'\n                // }\n                if (typeof tooltipOpt === 'string') {\n                    tooltipOpt = {formatter: tooltipOpt};\n                }\n                resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n            }\n        }\n        return resultModel;\n    }\n\n    function makeDispatchAction(payload, api) {\n        return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n    }\n\n    function refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n        var size = getOuterSize(el);\n        var width = size.width;\n        var height = size.height;\n\n        if (gapH != null) {\n            if (x + width + gapH > viewWidth) {\n                x -= width + gapH;\n            }\n            else {\n                x += gapH;\n            }\n        }\n        if (gapV != null) {\n            if (y + height + gapV > viewHeight) {\n                y -= height + gapV;\n            }\n            else {\n                y += gapV;\n            }\n        }\n        return [x, y];\n    }\n\n    function confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n        var size = getOuterSize(el);\n        var width = size.width;\n        var height = size.height;\n\n        x = Math.min(x + width, viewWidth) - width;\n        y = Math.min(y + height, viewHeight) - height;\n        x = Math.max(x, 0);\n        y = Math.max(y, 0);\n\n        return [x, y];\n    }\n\n    function getOuterSize(el) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n\n        // Consider browser compatibility.\n        // IE8 does not support getComputedStyle.\n        if (document.defaultView && document.defaultView.getComputedStyle) {\n            var stl = document.defaultView.getComputedStyle(el);\n            if (stl) {\n                width += parseInt(stl.paddingLeft, 10) + parseInt(stl.paddingRight, 10)\n                    + parseInt(stl.borderLeftWidth, 10) + parseInt(stl.borderRightWidth, 10);\n                height += parseInt(stl.paddingTop, 10) + parseInt(stl.paddingBottom, 10)\n                    + parseInt(stl.borderTopWidth, 10) + parseInt(stl.borderBottomWidth, 10);\n            }\n        }\n\n        return {width: width, height: height};\n    }\n\n    function calcTooltipPosition(position, rect, contentSize) {\n        var domWidth = contentSize[0];\n        var domHeight = contentSize[1];\n        var gap = 5;\n        var x = 0;\n        var y = 0;\n        var rectWidth = rect.width;\n        var rectHeight = rect.height;\n        switch (position) {\n            case 'inside':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'top':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y - domHeight - gap;\n                break;\n            case 'bottom':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight + gap;\n                break;\n            case 'left':\n                x = rect.x - domWidth - gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'right':\n                x = rect.x + rectWidth + gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n        }\n        return [x, y];\n    }\n\n    function isCenterAlign(align) {\n        return align === 'center' || align === 'middle';\n    }\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/tooltip/TooltipView.js\n// module id = 1128\n// module chunks = 0 1 2","/**\n * @module echarts/component/tooltip/TooltipContent\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var zrColor = require('zrender/lib/tool/color');\n    var eventUtil = require('zrender/lib/core/event');\n    var formatUtil = require('../../util/format');\n    var each = zrUtil.each;\n    var toCamelCase = formatUtil.toCamelCase;\n    var env = require('zrender/lib/core/env');\n\n    var vendors = ['', '-webkit-', '-moz-', '-o-'];\n\n    var gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n\n    /**\n     * @param {number} duration\n     * @return {string}\n     * @inner\n     */\n    function assembleTransition(duration) {\n        var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n        var transitionText = 'left ' + duration + 's ' + transitionCurve + ','\n                            + 'top ' + duration + 's ' + transitionCurve;\n        return zrUtil.map(vendors, function (vendorPrefix) {\n            return vendorPrefix + 'transition:' + transitionText;\n        }).join(';');\n    }\n\n    /**\n     * @param {Object} textStyle\n     * @return {string}\n     * @inner\n     */\n    function assembleFont(textStyleModel) {\n        var cssText = [];\n\n        var fontSize = textStyleModel.get('fontSize');\n        var color = textStyleModel.getTextColor();\n\n        color && cssText.push('color:' + color);\n\n        cssText.push('font:' + textStyleModel.getFont());\n\n        fontSize &&\n            cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n\n        each(['decoration', 'align'], function (name) {\n            var val = textStyleModel.get(name);\n            val && cssText.push('text-' + name + ':' + val);\n        });\n\n        return cssText.join(';');\n    }\n\n    /**\n     * @param {Object} tooltipModel\n     * @return {string}\n     * @inner\n     */\n    function assembleCssText(tooltipModel) {\n\n        var cssText = [];\n\n        var transitionDuration = tooltipModel.get('transitionDuration');\n        var backgroundColor = tooltipModel.get('backgroundColor');\n        var textStyleModel = tooltipModel.getModel('textStyle');\n        var padding = tooltipModel.get('padding');\n\n        // Animation transition. Do not animate when transitionDuration is 0.\n        transitionDuration &&\n            cssText.push(assembleTransition(transitionDuration));\n\n        if (backgroundColor) {\n            if (env.canvasSupported) {\n                cssText.push('background-Color:' + backgroundColor);\n            }\n            else {\n                // for ie\n                cssText.push(\n                    'background-Color:#' + zrColor.toHex(backgroundColor)\n                );\n                cssText.push('filter:alpha(opacity=70)');\n            }\n        }\n\n        // Border style\n        each(['width', 'color', 'radius'], function (name) {\n            var borderName = 'border-' + name;\n            var camelCase = toCamelCase(borderName);\n            var val = tooltipModel.get(camelCase);\n            val != null &&\n                cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n        });\n\n        // Text style\n        cssText.push(assembleFont(textStyleModel));\n\n        // Padding\n        if (padding != null) {\n            cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n        }\n\n        return cssText.join(';') + ';';\n    }\n\n    /**\n     * @alias module:echarts/component/tooltip/TooltipContent\n     * @constructor\n     */\n    function TooltipContent(container, api) {\n        var el = document.createElement('div');\n        var zr = this._zr = api.getZr();\n\n        this.el = el;\n\n        this._x = api.getWidth() / 2;\n        this._y = api.getHeight() / 2;\n\n        container.appendChild(el);\n\n        this._container = container;\n\n        this._show = false;\n\n        /**\n         * @private\n         */\n        this._hideTimeout;\n\n        var self = this;\n        el.onmouseenter = function () {\n            // clear the timeout in hideLater and keep showing tooltip\n            if (self._enterable) {\n                clearTimeout(self._hideTimeout);\n                self._show = true;\n            }\n            self._inContent = true;\n        };\n        el.onmousemove = function (e) {\n            e = e || window.event;\n            if (!self._enterable) {\n                // Try trigger zrender event to avoid mouse\n                // in and out shape too frequently\n                var handler = zr.handler;\n                eventUtil.normalizeEvent(container, e, true);\n                handler.dispatch('mousemove', e);\n            }\n        };\n        el.onmouseleave = function () {\n            if (self._enterable) {\n                if (self._show) {\n                    self.hideLater(self._hideDelay);\n                }\n            }\n            self._inContent = false;\n        };\n    }\n\n    TooltipContent.prototype = {\n\n        constructor: TooltipContent,\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _enterable: true,\n\n        /**\n         * Update when tooltip is rendered\n         */\n        update: function () {\n            // FIXME\n            // Move this logic to ec main?\n            var container = this._container;\n            var stl = container.currentStyle\n                || document.defaultView.getComputedStyle(container);\n            var domStyle = container.style;\n            if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n                domStyle.position = 'relative';\n            }\n            // Hide the tooltip\n            // PENDING\n            // this.hide();\n        },\n\n        show: function (tooltipModel) {\n            clearTimeout(this._hideTimeout);\n            var el = this.el;\n\n            el.style.cssText = gCssText + assembleCssText(tooltipModel)\n                // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n                + ';left:' + this._x + 'px;top:' + this._y + 'px;'\n                + (tooltipModel.get('extraCssText') || '');\n\n            el.style.display = el.innerHTML ?  'block' : 'none';\n\n            this._show = true;\n        },\n\n        setContent: function (content) {\n            this.el.innerHTML = content == null ? '' : content;\n        },\n\n        setEnterable: function (enterable) {\n            this._enterable = enterable;\n        },\n\n        getSize: function () {\n            var el = this.el;\n            return [el.clientWidth, el.clientHeight];\n        },\n\n        moveTo: function (x, y) {\n            // xy should be based on canvas root. But tooltipContent is\n            // the sibling of canvas root. So padding of ec container\n            // should be considered here.\n            var zr = this._zr;\n            var viewportRootOffset;\n            if (zr && zr.painter && (viewportRootOffset = zr.painter.getViewportRootOffset())) {\n                x += viewportRootOffset.offsetLeft;\n                y += viewportRootOffset.offsetTop;\n            }\n\n            var style = this.el.style;\n            style.left = x + 'px';\n            style.top = y + 'px';\n\n            this._x = x;\n            this._y = y;\n        },\n\n        hide: function () {\n            this.el.style.display = 'none';\n            this._show = false;\n        },\n\n        hideLater: function (time) {\n            if (this._show && !(this._inContent && this._enterable)) {\n                if (time) {\n                    this._hideDelay = time;\n                    // Set show false to avoid invoke hideLater mutiple times\n                    this._show = false;\n                    this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n                }\n                else {\n                    this.hide();\n                }\n            }\n        },\n\n        isShow: function () {\n            return this._show;\n        }\n    };\n\n    module.exports = TooltipContent;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/tooltip/TooltipContent.js\n// module id = 1129\n// module chunks = 0 1 2","/**\n * @file Legend action\n */\n\n\n    var echarts = require('../../echarts');\n    var zrUtil = require('zrender/lib/core/util');\n\n    function legendSelectActionHandler(methodName, payload, ecModel) {\n        var selectedMap = {};\n        var isToggleSelect = methodName === 'toggleSelected';\n        var isSelected;\n        // Update all legend components\n        ecModel.eachComponent('legend', function (legendModel) {\n            if (isToggleSelect && isSelected != null) {\n                // Force other legend has same selected status\n                // Or the first is toggled to true and other are toggled to false\n                // In the case one legend has some item unSelected in option. And if other legend\n                // doesn't has the item, they will assume it is selected.\n                legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n            }\n            else {\n                legendModel[methodName](payload.name);\n                isSelected = legendModel.isSelected(payload.name);\n            }\n            var legendData = legendModel.getData();\n            zrUtil.each(legendData, function (model) {\n                var name = model.get('name');\n                // Wrap element\n                if (name === '\\n' || name === '') {\n                    return;\n                }\n                var isItemSelected = legendModel.isSelected(name);\n                if (selectedMap.hasOwnProperty(name)) {\n                    // Unselected if any legend is unselected\n                    selectedMap[name] = selectedMap[name] && isItemSelected;\n                }\n                else {\n                    selectedMap[name] = isItemSelected;\n                }\n            });\n        });\n        // Return the event explicitly\n        return {\n            name: payload.name,\n            selected: selectedMap\n        };\n    }\n    /**\n     * @event legendToggleSelect\n     * @type {Object}\n     * @property {string} type 'legendToggleSelect'\n     * @property {string} [from]\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendToggleSelect', 'legendselectchanged',\n        zrUtil.curry(legendSelectActionHandler, 'toggleSelected')\n    );\n\n    /**\n     * @event legendSelect\n     * @type {Object}\n     * @property {string} type 'legendSelect'\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendSelect', 'legendselected',\n        zrUtil.curry(legendSelectActionHandler, 'select')\n    );\n\n    /**\n     * @event legendUnSelect\n     * @type {Object}\n     * @property {string} type 'legendUnSelect'\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendUnSelect', 'legendunselected',\n        zrUtil.curry(legendSelectActionHandler, 'unSelect')\n    );\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/legendAction.js\n// module id = 1130\n// module chunks = 0 1 2","\n   module.exports = function (ecModel) {\n        var legendModels = ecModel.findComponents({\n            mainType: 'legend'\n        });\n        if (legendModels && legendModels.length) {\n            ecModel.filterSeries(function (series) {\n                // If in any legend component the status is not selected.\n                // Because in legend series is assumed selected when it is not in the legend data.\n                for (var i = 0; i < legendModels.length; i++) {\n                    if (!legendModels[i].isSelected(series.name)) {\n                        return false;\n                    }\n                }\n                return true;\n            });\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/legendFilter.js\n// module id = 1131\n// module chunks = 0 1 2","/**\n * Data selectable mixin for chart series.\n * To eanble data select, option of series must have `selectedMode`.\n * And each data item will use `selected` to toggle itself selected status\n *\n * @module echarts/chart/helper/DataSelectable\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    module.exports = {\n\n        updateSelectedMap: function (targetList) {\n            this._targetList = targetList.slice();\n            this._selectTargetMap = zrUtil.reduce(targetList || [], function (targetMap, target) {\n                targetMap.set(target.name, target);\n                return targetMap;\n            }, zrUtil.createHashMap());\n        },\n\n        /**\n         * Either name or id should be passed as input here.\n         * If both of them are defined, id is used.\n         *\n         * @param {string|undefined} name name of data\n         * @param {number|undefined} id dataIndex of data\n         */\n        // PENGING If selectedMode is null ?\n        select: function (name, id) {\n            var target = id != null\n                ? this._targetList[id]\n                : this._selectTargetMap.get(name);\n            var selectedMode = this.get('selectedMode');\n            if (selectedMode === 'single') {\n                this._selectTargetMap.each(function (target) {\n                    target.selected = false;\n                });\n            }\n            target && (target.selected = true);\n        },\n\n        /**\n         * Either name or id should be passed as input here.\n         * If both of them are defined, id is used.\n         *\n         * @param {string|undefined} name name of data\n         * @param {number|undefined} id dataIndex of data\n         */\n        unSelect: function (name, id) {\n            var target = id != null\n                ? this._targetList[id]\n                : this._selectTargetMap.get(name);\n            // var selectedMode = this.get('selectedMode');\n            // selectedMode !== 'single' && target && (target.selected = false);\n            target && (target.selected = false);\n        },\n\n        /**\n         * Either name or id should be passed as input here.\n         * If both of them are defined, id is used.\n         *\n         * @param {string|undefined} name name of data\n         * @param {number|undefined} id dataIndex of data\n         */\n        toggleSelected: function (name, id) {\n            var target = id != null\n                ? this._targetList[id]\n                : this._selectTargetMap.get(name);\n            if (target != null) {\n                this[target.selected ? 'unSelect' : 'select'](name, id);\n                return target.selected;\n            }\n        },\n\n        /**\n         * Either name or id should be passed as input here.\n         * If both of them are defined, id is used.\n         *\n         * @param {string|undefined} name name of data\n         * @param {number|undefined} id dataIndex of data\n         */\n        isSelected: function (name, id) {\n            var target = id != null\n                ? this._targetList[id]\n                : this._selectTargetMap.get(name);\n            return target && target.selected;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/selectableMixin.js\n// module id = 1132\n// module chunks = 0 2","// Pick color from palette for each data item.\n// Applicable for charts that require applying color palette\n// in data level (like pie, funnel, chord).\n\n\n    module.exports = function (seriesType, ecModel) {\n        // Pie and funnel may use diferrent scope\n        var paletteScope = {};\n        ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n            var dataAll = seriesModel.getRawData();\n            var idxMap = {};\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                var data = seriesModel.getData();\n                data.each(function (idx) {\n                    var rawIdx = data.getRawIndex(idx);\n                    idxMap[rawIdx] = idx;\n                });\n                dataAll.each(function (rawIdx) {\n                    var filteredIdx = idxMap[rawIdx];\n\n                    // If series.itemStyle.normal.color is a function. itemVisual may be encoded\n                    var singleDataColor = filteredIdx != null\n                        && data.getItemVisual(filteredIdx, 'color', true);\n\n                    if (!singleDataColor) {\n                        // FIXME Performance\n                        var itemModel = dataAll.getItemModel(rawIdx);\n                        var color = itemModel.get('itemStyle.normal.color')\n                            || seriesModel.getColorFromPalette(dataAll.getName(rawIdx), paletteScope);\n                        // Legend may use the visual info in data before processed\n                        dataAll.setItemVisual(rawIdx, 'color', color);\n\n                        // Data is not filtered\n                        if (filteredIdx != null) {\n                            data.setItemVisual(filteredIdx, 'color', color);\n                        }\n                    }\n                    else {\n                        // Set data all color for legend\n                        dataAll.setItemVisual(rawIdx, 'color', singleDataColor);\n                    }\n                });\n            }\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/visual/dataColor.js\n// module id = 1133\n// module chunks = 0 2","\n\n    var featureManager = require('./featureManager');\n    var zrUtil = require('zrender/lib/core/util');\n\n    var ToolboxModel = require('../../echarts').extendComponentModel({\n\n        type: 'toolbox',\n\n        layoutMode: {\n            type: 'box',\n            ignoreSize: true\n        },\n\n        mergeDefaultAndTheme: function (option) {\n            ToolboxModel.superApply(this, 'mergeDefaultAndTheme', arguments);\n\n            zrUtil.each(this.option.feature, function (featureOpt, featureName) {\n                var Feature = featureManager.get(featureName);\n                Feature && zrUtil.merge(featureOpt, Feature.defaultOption);\n            });\n        },\n\n        defaultOption: {\n\n            show: true,\n\n            z: 6,\n\n            zlevel: 0,\n\n            orient: 'horizontal',\n\n            left: 'right',\n\n            top: 'top',\n\n            // right\n            // bottom\n\n            backgroundColor: 'transparent',\n\n            borderColor: '#ccc',\n\n            borderRadius: 0,\n\n            borderWidth: 0,\n\n            padding: 5,\n\n            itemSize: 15,\n\n            itemGap: 8,\n\n            showTitle: true,\n\n            iconStyle: {\n                normal: {\n                    borderColor: '#666',\n                    color: 'none'\n                },\n                emphasis: {\n                    borderColor: '#3E98C5'\n                }\n            }\n            // textStyle: {},\n\n            // feature\n        }\n    });\n\n    module.exports = ToolboxModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox/ToolboxModel.js\n// module id = 1134\n// module chunks = 0 1 2","\n\n    var featureManager = require('./featureManager');\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n    var Model = require('../../model/Model');\n    var DataDiffer = require('../../data/DataDiffer');\n    var listComponentHelper = require('../helper/listComponent');\n    var textContain = require('zrender/lib/contain/text');\n\n    module.exports = require('../../echarts').extendComponentView({\n\n        type: 'toolbox',\n\n        render: function (toolboxModel, ecModel, api, payload) {\n            var group = this.group;\n            group.removeAll();\n\n            if (!toolboxModel.get('show')) {\n                return;\n            }\n\n            var itemSize = +toolboxModel.get('itemSize');\n            var featureOpts = toolboxModel.get('feature') || {};\n            var features = this._features || (this._features = {});\n\n            var featureNames = [];\n            zrUtil.each(featureOpts, function (opt, name) {\n                featureNames.push(name);\n            });\n\n            (new DataDiffer(this._featureNames || [], featureNames))\n                .add(process)\n                .update(process)\n                .remove(zrUtil.curry(process, null))\n                .execute();\n\n            // Keep for diff.\n            this._featureNames = featureNames;\n\n            function process(newIndex, oldIndex) {\n                var featureName = featureNames[newIndex];\n                var oldName = featureNames[oldIndex];\n                var featureOpt = featureOpts[featureName];\n                var featureModel = new Model(featureOpt, toolboxModel, toolboxModel.ecModel);\n                var feature;\n\n                if (featureName && !oldName) { // Create\n                    if (isUserFeatureName(featureName)) {\n                        feature = {\n                            model: featureModel,\n                            onclick: featureModel.option.onclick,\n                            featureName: featureName\n                        };\n                    }\n                    else {\n                        var Feature = featureManager.get(featureName);\n                        if (!Feature) {\n                            return;\n                        }\n                        feature = new Feature(featureModel, ecModel, api);\n                    }\n                    features[featureName] = feature;\n                }\n                else {\n                    feature = features[oldName];\n                    // If feature does not exsit.\n                    if (!feature) {\n                        return;\n                    }\n                    feature.model = featureModel;\n                    feature.ecModel = ecModel;\n                    feature.api = api;\n                }\n\n                if (!featureName && oldName) {\n                    feature.dispose && feature.dispose(ecModel, api);\n                    return;\n                }\n\n                if (!featureModel.get('show') || feature.unusable) {\n                    feature.remove && feature.remove(ecModel, api);\n                    return;\n                }\n\n                createIconPaths(featureModel, feature, featureName);\n\n                featureModel.setIconStatus = function (iconName, status) {\n                    var option = this.option;\n                    var iconPaths = this.iconPaths;\n                    option.iconStatus = option.iconStatus || {};\n                    option.iconStatus[iconName] = status;\n                    // FIXME\n                    iconPaths[iconName] && iconPaths[iconName].trigger(status);\n                };\n\n                if (feature.render) {\n                    feature.render(featureModel, ecModel, api, payload);\n                }\n            }\n\n            function createIconPaths(featureModel, feature, featureName) {\n                var iconStyleModel = featureModel.getModel('iconStyle');\n\n                // If one feature has mutiple icon. they are orginaized as\n                // {\n                //     icon: {\n                //         foo: '',\n                //         bar: ''\n                //     },\n                //     title: {\n                //         foo: '',\n                //         bar: ''\n                //     }\n                // }\n                var icons = feature.getIcons ? feature.getIcons() : featureModel.get('icon');\n                var titles = featureModel.get('title') || {};\n                if (typeof icons === 'string') {\n                    var icon = icons;\n                    var title = titles;\n                    icons = {};\n                    titles = {};\n                    icons[featureName] = icon;\n                    titles[featureName] = title;\n                }\n                var iconPaths = featureModel.iconPaths = {};\n                zrUtil.each(icons, function (iconStr, iconName) {\n                    var path = graphic.createIcon(\n                        iconStr,\n                        {},\n                        {\n                            x: -itemSize / 2,\n                            y: -itemSize / 2,\n                            width: itemSize,\n                            height: itemSize\n                        }\n                    );\n                    path.setStyle(iconStyleModel.getModel('normal').getItemStyle());\n                    path.hoverStyle = iconStyleModel.getModel('emphasis').getItemStyle();\n\n                    graphic.setHoverStyle(path);\n\n                    if (toolboxModel.get('showTitle')) {\n                        path.__title = titles[iconName];\n                        path.on('mouseover', function () {\n                                // Should not reuse above hoverStyle, which might be modified.\n                                var hoverStyle = iconStyleModel.getModel('emphasis').getItemStyle();\n                                path.setStyle({\n                                    text: titles[iconName],\n                                    textPosition: hoverStyle.textPosition || 'bottom',\n                                    textFill: hoverStyle.fill || hoverStyle.stroke || '#000',\n                                    textAlign: hoverStyle.textAlign || 'center'\n                                });\n                            })\n                            .on('mouseout', function () {\n                                path.setStyle({\n                                    textFill: null\n                                });\n                            });\n                    }\n                    path.trigger(featureModel.get('iconStatus.' + iconName) || 'normal');\n\n                    group.add(path);\n                    path.on('click', zrUtil.bind(\n                        feature.onclick, feature, ecModel, api, iconName\n                    ));\n\n                    iconPaths[iconName] = path;\n                });\n            }\n\n            listComponentHelper.layout(group, toolboxModel, api);\n            // Render background after group is layout\n            // FIXME\n            group.add(listComponentHelper.makeBackground(group.getBoundingRect(), toolboxModel));\n\n            // Adjust icon title positions to avoid them out of screen\n            group.eachChild(function (icon) {\n                var titleText = icon.__title;\n                var hoverStyle = icon.hoverStyle;\n                // May be background element\n                if (hoverStyle && titleText) {\n                    var rect = textContain.getBoundingRect(\n                        titleText, textContain.makeFont(hoverStyle)\n                    );\n                    var offsetX = icon.position[0] + group.position[0];\n                    var offsetY = icon.position[1] + group.position[1] + itemSize;\n\n                    var needPutOnTop = false;\n                    if (offsetY + rect.height > api.getHeight()) {\n                        hoverStyle.textPosition = 'top';\n                        needPutOnTop = true;\n                    }\n                    var topOffset = needPutOnTop ? (-5 - rect.height) : (itemSize + 8);\n                    if (offsetX + rect.width /  2 > api.getWidth()) {\n                        hoverStyle.textPosition = ['100%', topOffset];\n                        hoverStyle.textAlign = 'right';\n                    }\n                    else if (offsetX - rect.width / 2 < 0) {\n                        hoverStyle.textPosition = [0, topOffset];\n                        hoverStyle.textAlign = 'left';\n                    }\n                }\n            });\n        },\n\n        updateView: function (toolboxModel, ecModel, api, payload) {\n            zrUtil.each(this._features, function (feature) {\n                feature.updateView && feature.updateView(feature.model, ecModel, api, payload);\n            });\n        },\n\n        updateLayout: function (toolboxModel, ecModel, api, payload) {\n            zrUtil.each(this._features, function (feature) {\n                feature.updateLayout && feature.updateLayout(feature.model, ecModel, api, payload);\n            });\n        },\n\n        remove: function (ecModel, api) {\n            zrUtil.each(this._features, function (feature) {\n                feature.remove && feature.remove(ecModel, api);\n            });\n            this.group.removeAll();\n        },\n\n        dispose: function (ecModel, api) {\n            zrUtil.each(this._features, function (feature) {\n                feature.dispose && feature.dispose(ecModel, api);\n            });\n        }\n    });\n\n    function isUserFeatureName(featureName) {\n        return featureName.indexOf('my') === 0;\n    }\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox/ToolboxView.js\n// module id = 1135\n// module chunks = 0 1 2","\n\n    var env = require('zrender/lib/core/env');\n    var lang = require('../../../lang').toolbox.saveAsImage;\n\n    function SaveAsImage (model) {\n        this.model = model;\n    }\n\n    SaveAsImage.defaultOption = {\n        show: true,\n        icon: 'M4.7,22.9L29.3,45.5L54.7,23.4M4.6,43.6L4.6,58L53.8,58L53.8,43.6M29.2,45.1L29.2,0',\n        title: lang.title,\n        type: 'png',\n        // Default use option.backgroundColor\n        // backgroundColor: '#fff',\n        name: '',\n        excludeComponents: ['toolbox'],\n        pixelRatio: 1,\n        lang: lang.lang.slice()\n    };\n\n    SaveAsImage.prototype.unusable = !env.canvasSupported;\n\n    var proto = SaveAsImage.prototype;\n\n    proto.onclick = function (ecModel, api) {\n        var model = this.model;\n        var title = model.get('name') || ecModel.get('title.0.text') || 'echarts';\n        var $a = document.createElement('a');\n        var type = model.get('type', true) || 'png';\n        $a.download = title + '.' + type;\n        $a.target = '_blank';\n        var url = api.getConnectedDataURL({\n            type: type,\n            backgroundColor: model.get('backgroundColor', true)\n                || ecModel.get('backgroundColor') || '#fff',\n            excludeComponents: model.get('excludeComponents'),\n            pixelRatio: model.get('pixelRatio')\n        });\n        $a.href = url;\n        // Chrome and Firefox\n        if (typeof MouseEvent === 'function' && !env.browser.ie && !env.browser.edge) {\n            var evt = new MouseEvent('click', {\n                view: window,\n                bubbles: true,\n                cancelable: false\n            });\n            $a.dispatchEvent(evt);\n        }\n        // IE\n        else {\n            if (window.navigator.msSaveOrOpenBlob) {\n                var bstr = atob(url.split(',')[1]);\n                var n = bstr.length;\n                var u8arr = new Uint8Array(n);\n                while(n--) {\n                    u8arr[n] = bstr.charCodeAt(n);\n                }\n                var blob = new Blob([u8arr]);\n                window.navigator.msSaveOrOpenBlob(blob, title + '.' + type);\n            }\n            else {\n                var lang = model.get('lang');\n                var html = '' +\n                    '<body style=\"margin:0;\">' +\n                    '<img src=\"' + url + '\" style=\"max-width:100%;\" title=\"' + ((lang && lang[0]) || '') + '\" />' +\n                    '</body>';\n                var tab = window.open();\n                tab.document.write(html);\n            }\n        }\n    };\n\n    require('../featureManager').register(\n        'saveAsImage', SaveAsImage\n    );\n\n    module.exports = SaveAsImage;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox/feature/SaveAsImage.js\n// module id = 1136\n// module chunks = 0 1 2","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var lang = require('../../../lang').toolbox.magicType;\n\n    function MagicType(model) {\n        this.model = model;\n    }\n\n    MagicType.defaultOption = {\n        show: true,\n        type: [],\n        // Icon group\n        icon: {\n            line: 'M4.1,28.9h7.1l9.3-22l7.4,38l9.7-19.7l3,12.8h14.9M4.1,58h51.4',\n            bar: 'M6.7,22.9h10V48h-10V22.9zM24.9,13h10v35h-10V13zM43.2,2h10v46h-10V2zM3.1,58h53.7',\n            stack: 'M8.2,38.4l-8.4,4.1l30.6,15.3L60,42.5l-8.1-4.1l-21.5,11L8.2,38.4z M51.9,30l-8.1,4.2l-13.4,6.9l-13.9-6.9L8.2,30l-8.4,4.2l8.4,4.2l22.2,11l21.5-11l8.1-4.2L51.9,30z M51.9,21.7l-8.1,4.2L35.7,30l-5.3,2.8L24.9,30l-8.4-4.1l-8.3-4.2l-8.4,4.2L8.2,30l8.3,4.2l13.9,6.9l13.4-6.9l8.1-4.2l8.1-4.1L51.9,21.7zM30.4,2.2L-0.2,17.5l8.4,4.1l8.3,4.2l8.4,4.2l5.5,2.7l5.3-2.7l8.1-4.2l8.1-4.2l8.1-4.1L30.4,2.2z', // jshint ignore:line\n            tiled: 'M2.3,2.2h22.8V25H2.3V2.2z M35,2.2h22.8V25H35V2.2zM2.3,35h22.8v22.8H2.3V35z M35,35h22.8v22.8H35V35z'\n        },\n        // `line`, `bar`, `stack`, `tiled`\n        title: zrUtil.clone(lang.title),\n        option: {},\n        seriesIndex: {}\n    };\n\n    var proto = MagicType.prototype;\n\n    proto.getIcons = function () {\n        var model = this.model;\n        var availableIcons = model.get('icon');\n        var icons = {};\n        zrUtil.each(model.get('type'), function (type) {\n            if (availableIcons[type]) {\n                icons[type] = availableIcons[type];\n            }\n        });\n        return icons;\n    };\n\n    var seriesOptGenreator = {\n        'line': function (seriesType, seriesId, seriesModel, model) {\n            if (seriesType === 'bar') {\n                return zrUtil.merge({\n                    id: seriesId,\n                    type: 'line',\n                    // Preserve data related option\n                    data: seriesModel.get('data'),\n                    stack: seriesModel.get('stack'),\n                    markPoint: seriesModel.get('markPoint'),\n                    markLine: seriesModel.get('markLine')\n                }, model.get('option.line') || {}, true);\n            }\n        },\n        'bar': function (seriesType, seriesId, seriesModel, model) {\n            if (seriesType === 'line') {\n                return zrUtil.merge({\n                    id: seriesId,\n                    type: 'bar',\n                    // Preserve data related option\n                    data: seriesModel.get('data'),\n                    stack: seriesModel.get('stack'),\n                    markPoint: seriesModel.get('markPoint'),\n                    markLine: seriesModel.get('markLine')\n                }, model.get('option.bar') || {}, true);\n            }\n        },\n        'stack': function (seriesType, seriesId, seriesModel, model) {\n            if (seriesType === 'line' || seriesType === 'bar') {\n                return zrUtil.merge({\n                    id: seriesId,\n                    stack: '__ec_magicType_stack__'\n                }, model.get('option.stack') || {}, true);\n            }\n        },\n        'tiled': function (seriesType, seriesId, seriesModel, model) {\n            if (seriesType === 'line' || seriesType === 'bar') {\n                return zrUtil.merge({\n                    id: seriesId,\n                    stack: ''\n                }, model.get('option.tiled') || {}, true);\n            }\n        }\n    };\n\n    var radioTypes = [\n        ['line', 'bar'],\n        ['stack', 'tiled']\n    ];\n\n    proto.onclick = function (ecModel, api, type) {\n        var model = this.model;\n        var seriesIndex = model.get('seriesIndex.' + type);\n        // Not supported magicType\n        if (!seriesOptGenreator[type]) {\n            return;\n        }\n        var newOption = {\n            series: []\n        };\n        var generateNewSeriesTypes = function (seriesModel) {\n            var seriesType = seriesModel.subType;\n            var seriesId = seriesModel.id;\n            var newSeriesOpt = seriesOptGenreator[type](\n                seriesType, seriesId, seriesModel, model\n            );\n            if (newSeriesOpt) {\n                // PENDING If merge original option?\n                zrUtil.defaults(newSeriesOpt, seriesModel.option);\n                newOption.series.push(newSeriesOpt);\n            }\n            // Modify boundaryGap\n            var coordSys = seriesModel.coordinateSystem;\n            if (coordSys && coordSys.type === 'cartesian2d' && (type === 'line' || type === 'bar')) {\n                var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n                if (categoryAxis) {\n                    var axisDim = categoryAxis.dim;\n                    var axisType = axisDim + 'Axis';\n                    var axisModel = ecModel.queryComponents({\n                        mainType: axisType,\n                        index: seriesModel.get(name + 'Index'),\n                        id: seriesModel.get(name + 'Id')\n                    })[0];\n                    var axisIndex = axisModel.componentIndex;\n\n                    newOption[axisType] = newOption[axisType] || [];\n                    for (var i = 0; i <= axisIndex; i++) {\n                        newOption[axisType][axisIndex] = newOption[axisType][axisIndex] || {};\n                    }\n                    newOption[axisType][axisIndex].boundaryGap = type === 'bar' ? true : false;\n                }\n            }\n        };\n\n        zrUtil.each(radioTypes, function (radio) {\n            if (zrUtil.indexOf(radio, type) >= 0) {\n                zrUtil.each(radio, function (item) {\n                    model.setIconStatus(item, 'normal');\n                });\n            }\n        });\n\n        model.setIconStatus(type, 'emphasis');\n\n        ecModel.eachComponent(\n            {\n                mainType: 'series',\n                query: seriesIndex == null ? null : {\n                    seriesIndex: seriesIndex\n                }\n            }, generateNewSeriesTypes\n        );\n        api.dispatchAction({\n            type: 'changeMagicType',\n            currentType: type,\n            newOption: newOption\n        });\n    };\n\n    var echarts = require('../../../echarts');\n    echarts.registerAction({\n        type: 'changeMagicType',\n        event: 'magicTypeChanged',\n        update: 'prepareAndUpdate'\n    }, function (payload, ecModel) {\n        ecModel.mergeOption(payload.newOption);\n    });\n\n    require('../featureManager').register('magicType', MagicType);\n\n    module.exports = MagicType;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox/feature/MagicType.js\n// module id = 1137\n// module chunks = 0 1 2","/**\n * @module echarts/component/toolbox/feature/DataView\n */\n\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var eventTool = require('zrender/lib/core/event');\n    var lang = require('../../../lang').toolbox.dataView;\n\n    var BLOCK_SPLITER = new Array(60).join('-');\n    var ITEM_SPLITER = '\\t';\n    /**\n     * Group series into two types\n     *  1. on category axis, like line, bar\n     *  2. others, like scatter, pie\n     * @param {module:echarts/model/Global} ecModel\n     * @return {Object}\n     * @inner\n     */\n    function groupSeries(ecModel) {\n        var seriesGroupByCategoryAxis = {};\n        var otherSeries = [];\n        var meta = [];\n        ecModel.eachRawSeries(function (seriesModel) {\n            var coordSys = seriesModel.coordinateSystem;\n\n            if (coordSys && (coordSys.type === 'cartesian2d' || coordSys.type === 'polar')) {\n                var baseAxis = coordSys.getBaseAxis();\n                if (baseAxis.type === 'category') {\n                    var key = baseAxis.dim + '_' + baseAxis.index;\n                    if (!seriesGroupByCategoryAxis[key]) {\n                        seriesGroupByCategoryAxis[key] = {\n                            categoryAxis: baseAxis,\n                            valueAxis: coordSys.getOtherAxis(baseAxis),\n                            series: []\n                        };\n                        meta.push({\n                            axisDim: baseAxis.dim,\n                            axisIndex: baseAxis.index\n                        });\n                    }\n                    seriesGroupByCategoryAxis[key].series.push(seriesModel);\n                }\n                else {\n                    otherSeries.push(seriesModel);\n                }\n            }\n            else {\n                otherSeries.push(seriesModel);\n            }\n        });\n\n        return {\n            seriesGroupByCategoryAxis: seriesGroupByCategoryAxis,\n            other: otherSeries,\n            meta: meta\n        };\n    }\n\n    /**\n     * Assemble content of series on cateogory axis\n     * @param {Array.<module:echarts/model/Series>} series\n     * @return {string}\n     * @inner\n     */\n    function assembleSeriesWithCategoryAxis(series) {\n        var tables = [];\n        zrUtil.each(series, function (group, key) {\n            var categoryAxis = group.categoryAxis;\n            var valueAxis = group.valueAxis;\n            var valueAxisDim = valueAxis.dim;\n\n            var headers = [' '].concat(zrUtil.map(group.series, function (series) {\n                return series.name;\n            }));\n            var columns = [categoryAxis.model.getCategories()];\n            zrUtil.each(group.series, function (series) {\n                columns.push(series.getRawData().mapArray(valueAxisDim, function (val) {\n                    return val;\n                }));\n            });\n            // Assemble table content\n            var lines = [headers.join(ITEM_SPLITER)];\n            for (var i = 0; i < columns[0].length; i++) {\n                var items = [];\n                for (var j = 0; j < columns.length; j++) {\n                    items.push(columns[j][i]);\n                }\n                lines.push(items.join(ITEM_SPLITER));\n            }\n            tables.push(lines.join('\\n'));\n        });\n        return tables.join('\\n\\n' +  BLOCK_SPLITER + '\\n\\n');\n    }\n\n    /**\n     * Assemble content of other series\n     * @param {Array.<module:echarts/model/Series>} series\n     * @return {string}\n     * @inner\n     */\n    function assembleOtherSeries(series) {\n        return zrUtil.map(series, function (series) {\n            var data = series.getRawData();\n            var lines = [series.name];\n            var vals = [];\n            data.each(data.dimensions, function () {\n                var argLen = arguments.length;\n                var dataIndex = arguments[argLen - 1];\n                var name = data.getName(dataIndex);\n                for (var i = 0; i < argLen - 1; i++) {\n                    vals[i] = arguments[i];\n                }\n                lines.push((name ? (name + ITEM_SPLITER) : '') + vals.join(ITEM_SPLITER));\n            });\n            return lines.join('\\n');\n        }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n    }\n\n    /**\n     * @param {module:echarts/model/Global}\n     * @return {Object}\n     * @inner\n     */\n    function getContentFromModel(ecModel) {\n\n        var result = groupSeries(ecModel);\n\n        return {\n            value: zrUtil.filter([\n                    assembleSeriesWithCategoryAxis(result.seriesGroupByCategoryAxis),\n                    assembleOtherSeries(result.other)\n                ], function (str) {\n                    return str.replace(/[\\n\\t\\s]/g, '');\n                }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n'),\n\n            meta: result.meta\n        };\n    }\n\n\n    function trim(str) {\n        return str.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n    }\n    /**\n     * If a block is tsv format\n     */\n    function isTSVFormat(block) {\n        // Simple method to find out if a block is tsv format\n        var firstLine = block.slice(0, block.indexOf('\\n'));\n        if (firstLine.indexOf(ITEM_SPLITER) >= 0) {\n            return true;\n        }\n    }\n\n    var itemSplitRegex = new RegExp('[' + ITEM_SPLITER + ']+', 'g');\n    /**\n     * @param {string} tsv\n     * @return {Object}\n     */\n    function parseTSVContents(tsv) {\n        var tsvLines = tsv.split(/\\n+/g);\n        var headers = trim(tsvLines.shift()).split(itemSplitRegex);\n\n        var categories = [];\n        var series = zrUtil.map(headers, function (header) {\n            return {\n                name: header,\n                data: []\n            };\n        });\n        for (var i = 0; i < tsvLines.length; i++) {\n            var items = trim(tsvLines[i]).split(itemSplitRegex);\n            categories.push(items.shift());\n            for (var j = 0; j < items.length; j++) {\n                series[j] && (series[j].data[i] = items[j]);\n            }\n        }\n        return {\n            series: series,\n            categories: categories\n        };\n    }\n\n    /**\n     * @param {string} str\n     * @return {Array.<Object>}\n     * @inner\n     */\n    function parseListContents(str) {\n        var lines = str.split(/\\n+/g);\n        var seriesName = trim(lines.shift());\n\n        var data = [];\n        for (var i = 0; i < lines.length; i++) {\n            var items = trim(lines[i]).split(itemSplitRegex);\n            var name = '';\n            var value;\n            var hasName = false;\n            if (isNaN(items[0])) { // First item is name\n                hasName = true;\n                name = items[0];\n                items = items.slice(1);\n                data[i] = {\n                    name: name,\n                    value: []\n                };\n                value = data[i].value;\n            }\n            else {\n                value = data[i] = [];\n            }\n            for (var j = 0; j < items.length; j++) {\n                value.push(+items[j]);\n            }\n            if (value.length === 1) {\n                hasName ? (data[i].value = value[0]) : (data[i] = value[0]);\n            }\n        }\n\n        return {\n            name: seriesName,\n            data: data\n        };\n    }\n\n    /**\n     * @param {string} str\n     * @param {Array.<Object>} blockMetaList\n     * @return {Object}\n     * @inner\n     */\n    function parseContents(str, blockMetaList) {\n        var blocks = str.split(new RegExp('\\n*' + BLOCK_SPLITER + '\\n*', 'g'));\n        var newOption = {\n            series: []\n        };\n        zrUtil.each(blocks, function (block, idx) {\n            if (isTSVFormat(block)) {\n                var result = parseTSVContents(block);\n                var blockMeta = blockMetaList[idx];\n                var axisKey = blockMeta.axisDim + 'Axis';\n\n                if (blockMeta) {\n                    newOption[axisKey] = newOption[axisKey] || [];\n                    newOption[axisKey][blockMeta.axisIndex] = {\n                        data: result.categories\n                    };\n                    newOption.series = newOption.series.concat(result.series);\n                }\n            }\n            else {\n                var result = parseListContents(block);\n                newOption.series.push(result);\n            }\n        });\n        return newOption;\n    }\n\n    /**\n     * @alias {module:echarts/component/toolbox/feature/DataView}\n     * @constructor\n     * @param {module:echarts/model/Model} model\n     */\n    function DataView(model) {\n\n        this._dom = null;\n\n        this.model = model;\n    }\n\n    DataView.defaultOption = {\n        show: true,\n        readOnly: false,\n        optionToContent: null,\n        contentToOption: null,\n\n        icon: 'M17.5,17.3H33 M17.5,17.3H33 M45.4,29.5h-28 M11.5,2v56H51V14.8L38.4,2H11.5z M38.4,2.2v12.7H51 M45.4,41.7h-28',\n        title: zrUtil.clone(lang.title),\n        lang: zrUtil.clone(lang.lang),\n        backgroundColor: '#fff',\n        textColor: '#000',\n        textareaColor: '#fff',\n        textareaBorderColor: '#333',\n        buttonColor: '#c23531',\n        buttonTextColor: '#fff'\n    };\n\n    DataView.prototype.onclick = function (ecModel, api) {\n        var container = api.getDom();\n        var model = this.model;\n        if (this._dom) {\n            container.removeChild(this._dom);\n        }\n        var root = document.createElement('div');\n        root.style.cssText = 'position:absolute;left:5px;top:5px;bottom:5px;right:5px;';\n        root.style.backgroundColor = model.get('backgroundColor') || '#fff';\n\n        // Create elements\n        var header = document.createElement('h4');\n        var lang = model.get('lang') || [];\n        header.innerHTML = lang[0] || model.get('title');\n        header.style.cssText = 'margin: 10px 20px;';\n        header.style.color = model.get('textColor');\n\n        var viewMain = document.createElement('div');\n        var textarea = document.createElement('textarea');\n        viewMain.style.cssText = 'display:block;width:100%;overflow:auto;';\n\n        var optionToContent = model.get('optionToContent');\n        var contentToOption = model.get('contentToOption');\n        var result = getContentFromModel(ecModel);\n        if (typeof optionToContent === 'function') {\n            var htmlOrDom = optionToContent(api.getOption());\n            if (typeof htmlOrDom === 'string') {\n                viewMain.innerHTML = htmlOrDom;\n            }\n            else if (zrUtil.isDom(htmlOrDom)) {\n                viewMain.appendChild(htmlOrDom);\n            }\n        }\n        else {\n            // Use default textarea\n            viewMain.appendChild(textarea);\n            textarea.readOnly = model.get('readOnly');\n            textarea.style.cssText = 'width:100%;height:100%;font-family:monospace;font-size:14px;line-height:1.6rem;';\n            textarea.style.color = model.get('textColor');\n            textarea.style.borderColor = model.get('textareaBorderColor');\n            textarea.style.backgroundColor = model.get('textareaColor');\n            textarea.value = result.value;\n        }\n\n        var blockMetaList = result.meta;\n\n        var buttonContainer = document.createElement('div');\n        buttonContainer.style.cssText = 'position:absolute;bottom:0;left:0;right:0;';\n\n        var buttonStyle = 'float:right;margin-right:20px;border:none;'\n            + 'cursor:pointer;padding:2px 5px;font-size:12px;border-radius:3px';\n        var closeButton = document.createElement('div');\n        var refreshButton = document.createElement('div');\n\n        buttonStyle += ';background-color:' + model.get('buttonColor');\n        buttonStyle += ';color:' + model.get('buttonTextColor');\n\n        var self = this;\n\n        function close() {\n            container.removeChild(root);\n            self._dom = null;\n        }\n        eventTool.addEventListener(closeButton, 'click', close);\n\n        eventTool.addEventListener(refreshButton, 'click', function () {\n            var newOption;\n            try {\n                if (typeof contentToOption === 'function') {\n                    newOption = contentToOption(viewMain, api.getOption());\n                }\n                else {\n                    newOption = parseContents(textarea.value, blockMetaList);\n                }\n            }\n            catch (e) {\n                close();\n                throw new Error('Data view format error ' + e);\n            }\n            if (newOption) {\n                api.dispatchAction({\n                    type: 'changeDataView',\n                    newOption: newOption\n                });\n            }\n\n            close();\n        });\n\n        closeButton.innerHTML = lang[1];\n        refreshButton.innerHTML = lang[2];\n        refreshButton.style.cssText = buttonStyle;\n        closeButton.style.cssText = buttonStyle;\n\n        !model.get('readOnly') && buttonContainer.appendChild(refreshButton);\n        buttonContainer.appendChild(closeButton);\n\n        // http://stackoverflow.com/questions/6637341/use-tab-to-indent-in-textarea\n        eventTool.addEventListener(textarea, 'keydown', function (e) {\n            if ((e.keyCode || e.which) === 9) {\n                // get caret position/selection\n                var val = this.value;\n                var start = this.selectionStart;\n                var end = this.selectionEnd;\n\n                // set textarea value to: text before caret + tab + text after caret\n                this.value = val.substring(0, start) + ITEM_SPLITER + val.substring(end);\n\n                // put caret at right position again\n                this.selectionStart = this.selectionEnd = start + 1;\n\n                // prevent the focus lose\n                eventTool.stop(e);\n            }\n        });\n\n        root.appendChild(header);\n        root.appendChild(viewMain);\n        root.appendChild(buttonContainer);\n\n        viewMain.style.height = (container.clientHeight - 80) + 'px';\n\n        container.appendChild(root);\n        this._dom = root;\n    };\n\n    DataView.prototype.remove = function (ecModel, api) {\n        this._dom && api.getDom().removeChild(this._dom);\n    };\n\n    DataView.prototype.dispose = function (ecModel, api) {\n        this.remove(ecModel, api);\n    };\n\n    /**\n     * @inner\n     */\n    function tryMergeDataOption(newData, originalData) {\n        return zrUtil.map(newData, function (newVal, idx) {\n            var original = originalData && originalData[idx];\n            if (zrUtil.isObject(original) && !zrUtil.isArray(original)) {\n                if (zrUtil.isObject(newVal) && !zrUtil.isArray(newVal)) {\n                    newVal = newVal.value;\n                }\n                // Original data has option\n                return zrUtil.defaults({\n                    value: newVal\n                }, original);\n            }\n            else {\n                return newVal;\n            }\n        });\n    }\n\n    require('../featureManager').register('dataView', DataView);\n\n    require('../../../echarts').registerAction({\n        type: 'changeDataView',\n        event: 'dataViewChanged',\n        update: 'prepareAndUpdate'\n    }, function (payload, ecModel) {\n        var newSeriesOptList = [];\n        zrUtil.each(payload.newOption.series, function (seriesOpt) {\n            var seriesModel = ecModel.getSeriesByName(seriesOpt.name)[0];\n            if (!seriesModel) {\n                // New created series\n                // Geuss the series type\n                newSeriesOptList.push(zrUtil.extend({\n                    // Default is scatter\n                    type: 'scatter'\n                }, seriesOpt));\n            }\n            else {\n                var originalData = seriesModel.get('data');\n                newSeriesOptList.push({\n                    name: seriesOpt.name,\n                    data: tryMergeDataOption(seriesOpt.data, originalData)\n                });\n            }\n        });\n\n        ecModel.mergeOption(zrUtil.defaults({\n            series: newSeriesOptList\n        }, payload.newOption));\n    });\n\n    module.exports = DataView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox/feature/DataView.js\n// module id = 1138\n// module chunks = 0 1 2","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var BrushController = require('../../helper/BrushController');\n    var BrushTargetManager = require('../../helper/BrushTargetManager');\n    var history = require('../../dataZoom/history');\n    var sliderMove = require('../../helper/sliderMove');\n    var lang = require('../../../lang').toolbox.dataZoom;\n\n    var each = zrUtil.each;\n\n    // Use dataZoomSelect\n    require('../../dataZoomSelect');\n\n    // Spectial component id start with \\0ec\\0, see echarts/model/Global.js~hasInnerId\n    var DATA_ZOOM_ID_BASE = '\\0_ec_\\0toolbox-dataZoom_';\n\n    function DataZoom(model, ecModel, api) {\n\n        /**\n         * @private\n         * @type {module:echarts/component/helper/BrushController}\n         */\n        (this._brushController = new BrushController(api.getZr()))\n            .on('brush', zrUtil.bind(this._onBrush, this))\n            .mount();\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._isZoomActive;\n    }\n\n    DataZoom.defaultOption = {\n        show: true,\n        // Icon group\n        icon: {\n            zoom: 'M0,13.5h26.9 M13.5,26.9V0 M32.1,13.5H58V58H13.5 V32.1',\n            back: 'M22,1.4L9.9,13.5l12.3,12.3 M10.3,13.5H54.9v44.6 H10.3v-26'\n        },\n        // `zoom`, `back`\n        title: zrUtil.clone(lang.title)\n    };\n\n    var proto = DataZoom.prototype;\n\n    proto.render = function (featureModel, ecModel, api, payload) {\n        this.model = featureModel;\n        this.ecModel = ecModel;\n        this.api = api;\n\n        updateZoomBtnStatus(featureModel, ecModel, this, payload, api);\n        updateBackBtnStatus(featureModel, ecModel);\n    };\n\n    proto.onclick = function (ecModel, api, type) {\n        handlers[type].call(this);\n    };\n\n    proto.remove = function (ecModel, api) {\n        this._brushController.unmount();\n    };\n\n    proto.dispose = function (ecModel, api) {\n        this._brushController.dispose();\n    };\n\n    /**\n     * @private\n     */\n    var handlers = {\n\n        zoom: function () {\n            var nextActive = !this._isZoomActive;\n\n            this.api.dispatchAction({\n                type: 'takeGlobalCursor',\n                key: 'dataZoomSelect',\n                dataZoomSelectActive: nextActive\n            });\n        },\n\n        back: function () {\n            this._dispatchZoomAction(history.pop(this.ecModel));\n        }\n    };\n\n    /**\n     * @private\n     */\n    proto._onBrush = function (areas, opt) {\n        if (!opt.isEnd || !areas.length) {\n            return;\n        }\n        var snapshot = {};\n        var ecModel = this.ecModel;\n\n        this._brushController.updateCovers([]); // remove cover\n\n        var brushTargetManager = new BrushTargetManager(\n            retrieveAxisSetting(this.model.option), ecModel, {include: ['grid']}\n        );\n        brushTargetManager.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n            if (coordSys.type !== 'cartesian2d') {\n                return;\n            }\n\n            var brushType = area.brushType;\n            if (brushType === 'rect') {\n                setBatch('x', coordSys, coordRange[0]);\n                setBatch('y', coordSys, coordRange[1]);\n            }\n            else {\n                setBatch(({lineX: 'x', lineY: 'y'})[brushType], coordSys, coordRange);\n            }\n        });\n\n        history.push(ecModel, snapshot);\n\n        this._dispatchZoomAction(snapshot);\n\n        function setBatch(dimName, coordSys, minMax) {\n            var axis = coordSys.getAxis(dimName);\n            var axisModel = axis.model;\n            var dataZoomModel = findDataZoom(dimName, axisModel, ecModel);\n\n            // Restrict range.\n            var minMaxSpan = dataZoomModel.findRepresentativeAxisProxy(axisModel).getMinMaxSpan();\n            if (minMaxSpan.minValueSpan != null || minMaxSpan.maxValueSpan != null) {\n                minMax = sliderMove(\n                    0, minMax.slice(), axis.scale.getExtent(), 0,\n                    minMaxSpan.minValueSpan, minMaxSpan.maxValueSpan\n                );\n            }\n\n            dataZoomModel && (snapshot[dataZoomModel.id] = {\n                dataZoomId: dataZoomModel.id,\n                startValue: minMax[0],\n                endValue: minMax[1]\n            });\n        }\n\n        function findDataZoom(dimName, axisModel, ecModel) {\n            var found;\n            ecModel.eachComponent({mainType: 'dataZoom', subType: 'select'}, function (dzModel) {\n                var has = dzModel.getAxisModel(dimName, axisModel.componentIndex);\n                has && (found = dzModel);\n            });\n            return found;\n        }\n    };\n\n    /**\n     * @private\n     */\n    proto._dispatchZoomAction = function (snapshot) {\n        var batch = [];\n\n        // Convert from hash map to array.\n        each(snapshot, function (batchItem, dataZoomId) {\n            batch.push(zrUtil.clone(batchItem));\n        });\n\n        batch.length && this.api.dispatchAction({\n            type: 'dataZoom',\n            from: this.uid,\n            batch: batch\n        });\n    };\n\n    function retrieveAxisSetting(option) {\n        var setting = {};\n        // Compatible with previous setting: null => all axis, false => no axis.\n        zrUtil.each(['xAxisIndex', 'yAxisIndex'], function (name) {\n            setting[name] = option[name];\n            setting[name] == null && (setting[name] = 'all');\n            (setting[name] === false || setting[name] === 'none') && (setting[name] = []);\n        });\n        return setting;\n    }\n\n    function updateBackBtnStatus(featureModel, ecModel) {\n        featureModel.setIconStatus(\n            'back',\n            history.count(ecModel) > 1 ? 'emphasis' : 'normal'\n        );\n    }\n\n    function updateZoomBtnStatus(featureModel, ecModel, view, payload, api) {\n        var zoomActive = view._isZoomActive;\n\n        if (payload && payload.type === 'takeGlobalCursor') {\n            zoomActive = payload.key === 'dataZoomSelect'\n                ? payload.dataZoomSelectActive : false;\n        }\n\n        view._isZoomActive = zoomActive;\n\n        featureModel.setIconStatus('zoom', zoomActive ? 'emphasis' : 'normal');\n\n        var brushTargetManager = new BrushTargetManager(\n            retrieveAxisSetting(featureModel.option), ecModel, {include: ['grid']}\n        );\n\n        view._brushController\n            .setPanels(brushTargetManager.makePanelOpts(api, function (targetInfo) {\n                return (targetInfo.xAxisDeclared && !targetInfo.yAxisDeclared)\n                    ? 'lineX'\n                    : (!targetInfo.xAxisDeclared && targetInfo.yAxisDeclared)\n                    ? 'lineY'\n                    : 'rect';\n            }))\n            .enableBrush(\n                zoomActive\n                ? {\n                    brushType: 'auto',\n                    brushStyle: {\n                        // FIXME user customized?\n                        lineWidth: 0,\n                        fill: 'rgba(0,0,0,0.2)'\n                    }\n                }\n                : false\n            );\n    }\n\n\n    require('../featureManager').register('dataZoom', DataZoom);\n\n\n    // Create special dataZoom option for select\n    require('../../../echarts').registerPreprocessor(function (option) {\n        if (!option) {\n            return;\n        }\n\n        var dataZoomOpts = option.dataZoom || (option.dataZoom = []);\n        if (!zrUtil.isArray(dataZoomOpts)) {\n            option.dataZoom = dataZoomOpts = [dataZoomOpts];\n        }\n\n        var toolboxOpt = option.toolbox;\n        if (toolboxOpt) {\n            // Assume there is only one toolbox\n            if (zrUtil.isArray(toolboxOpt)) {\n                toolboxOpt = toolboxOpt[0];\n            }\n\n            if (toolboxOpt && toolboxOpt.feature) {\n                var dataZoomOpt = toolboxOpt.feature.dataZoom;\n                addForAxis('xAxis', dataZoomOpt);\n                addForAxis('yAxis', dataZoomOpt);\n            }\n        }\n\n        function addForAxis(axisName, dataZoomOpt) {\n            if (!dataZoomOpt) {\n                return;\n            }\n\n            // Try not to modify model, because it is not merged yet.\n            var axisIndicesName = axisName + 'Index';\n            var givenAxisIndices = dataZoomOpt[axisIndicesName];\n            if (givenAxisIndices != null\n                && givenAxisIndices != 'all'\n                && !zrUtil.isArray(givenAxisIndices)\n            ) {\n                givenAxisIndices = (givenAxisIndices === false || givenAxisIndices === 'none') ? [] : [givenAxisIndices];\n            }\n\n            forEachComponent(axisName, function (axisOpt, axisIndex) {\n                if (givenAxisIndices != null\n                    && givenAxisIndices != 'all'\n                    && zrUtil.indexOf(givenAxisIndices, axisIndex) === -1\n                ) {\n                    return;\n                }\n                var newOpt = {\n                    type: 'select',\n                    $fromToolbox: true,\n                    // Id for merge mapping.\n                    id: DATA_ZOOM_ID_BASE + axisName + axisIndex\n                };\n                // FIXME\n                // Only support one axis now.\n                newOpt[axisIndicesName] = axisIndex;\n                dataZoomOpts.push(newOpt);\n            });\n        }\n\n        function forEachComponent(mainType, cb) {\n            var opts = option[mainType];\n            if (!zrUtil.isArray(opts)) {\n                opts = opts ? [opts] : [];\n            }\n            each(opts, cb);\n        }\n    });\n\n    module.exports = DataZoom;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox/feature/DataZoom.js\n// module id = 1139\n// module chunks = 0 1 2","/**\n * DataZoom component entry\n */\n\n\n    require('./dataZoom/typeDefaulter');\n\n    require('./dataZoom/DataZoomModel');\n    require('./dataZoom/DataZoomView');\n\n    require('./dataZoom/SelectZoomModel');\n    require('./dataZoom/SelectZoomView');\n\n    require('./dataZoom/dataZoomProcessor');\n    require('./dataZoom/dataZoomAction');\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoomSelect.js\n// module id = 1140\n// module chunks = 0 1 2","/**\n * @file Axis operator\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('../../util/number');\n    var helper = require('./helper');\n    var each = zrUtil.each;\n    var asc = numberUtil.asc;\n\n    /**\n     * Operate single axis.\n     * One axis can only operated by one axis operator.\n     * Different dataZoomModels may be defined to operate the same axis.\n     * (i.e. 'inside' data zoom and 'slider' data zoom components)\n     * So dataZoomModels share one axisProxy in that case.\n     *\n     * @class\n     */\n    var AxisProxy = function (dimName, axisIndex, dataZoomModel, ecModel) {\n\n        /**\n         * @private\n         * @type {string}\n         */\n        this._dimName = dimName;\n\n        /**\n         * @private\n         */\n        this._axisIndex = axisIndex;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._valueWindow;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._percentWindow;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._dataExtent;\n\n        /**\n         * {minSpan, maxSpan, minValueSpan, maxValueSpan}\n         * @private\n         * @type {Object}\n         */\n        this._minMaxSpan;\n\n        /**\n         * @readOnly\n         * @type {module: echarts/model/Global}\n         */\n        this.ecModel = ecModel;\n\n        /**\n         * @private\n         * @type {module: echarts/component/dataZoom/DataZoomModel}\n         */\n        this._dataZoomModel = dataZoomModel;\n    };\n\n    AxisProxy.prototype = {\n\n        constructor: AxisProxy,\n\n        /**\n         * Whether the axisProxy is hosted by dataZoomModel.\n         *\n         * @public\n         * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n         * @return {boolean}\n         */\n        hostedBy: function (dataZoomModel) {\n            return this._dataZoomModel === dataZoomModel;\n        },\n\n        /**\n         * @return {Array.<number>} Value can only be NaN or finite value.\n         */\n        getDataValueWindow: function () {\n            return this._valueWindow.slice();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getDataPercentWindow: function () {\n            return this._percentWindow.slice();\n        },\n\n        /**\n         * @public\n         * @param {number} axisIndex\n         * @return {Array} seriesModels\n         */\n        getTargetSeriesModels: function () {\n            var seriesModels = [];\n            var ecModel = this.ecModel;\n\n            ecModel.eachSeries(function (seriesModel) {\n                if (helper.isCoordSupported(seriesModel.get('coordinateSystem'))) {\n                    var dimName = this._dimName;\n                    var axisModel = ecModel.queryComponents({\n                        mainType: dimName + 'Axis',\n                        index: seriesModel.get(dimName + 'AxisIndex'),\n                        id: seriesModel.get(dimName + 'AxisId')\n                    })[0];\n                    if (this._axisIndex === (axisModel && axisModel.componentIndex)) {\n                        seriesModels.push(seriesModel);\n                    }\n                }\n            }, this);\n\n            return seriesModels;\n        },\n\n        getAxisModel: function () {\n            return this.ecModel.getComponent(this._dimName + 'Axis', this._axisIndex);\n        },\n\n        getOtherAxisModel: function () {\n            var axisDim = this._dimName;\n            var ecModel = this.ecModel;\n            var axisModel = this.getAxisModel();\n            var isCartesian = axisDim === 'x' || axisDim === 'y';\n            var otherAxisDim;\n            var coordSysIndexName;\n            if (isCartesian) {\n                coordSysIndexName = 'gridIndex';\n                otherAxisDim = axisDim === 'x' ? 'y' : 'x';\n            }\n            else {\n                coordSysIndexName = 'polarIndex';\n                otherAxisDim = axisDim === 'angle' ? 'radius' : 'angle';\n            }\n            var foundOtherAxisModel;\n            ecModel.eachComponent(otherAxisDim + 'Axis', function (otherAxisModel) {\n                if ((otherAxisModel.get(coordSysIndexName) || 0)\n                    === (axisModel.get(coordSysIndexName) || 0)\n                ) {\n                    foundOtherAxisModel = otherAxisModel;\n                }\n            });\n            return foundOtherAxisModel;\n        },\n\n        getMinMaxSpan: function () {\n            return zrUtil.clone(this._minMaxSpan);\n        },\n\n        /**\n         * Only calculate by given range and this._dataExtent, do not change anything.\n         *\n         * @param {Object} opt\n         * @param {number} [opt.start]\n         * @param {number} [opt.end]\n         * @param {number} [opt.startValue]\n         * @param {number} [opt.endValue]\n         */\n        calculateDataWindow: function (opt) {\n            var dataExtent = this._dataExtent;\n            var axisModel = this.getAxisModel();\n            var scale = axisModel.axis.scale;\n            var rangePropMode = this._dataZoomModel.getRangePropMode();\n            var percentExtent = [0, 100];\n            var percentWindow = [\n                opt.start,\n                opt.end\n            ];\n            var valueWindow = [];\n\n            each(['startValue', 'endValue'], function (prop) {\n                valueWindow.push(opt[prop] != null ? scale.parse(opt[prop]) : null);\n            });\n\n            // Normalize bound.\n            each([0, 1], function (idx) {\n                var boundValue = valueWindow[idx];\n                var boundPercent = percentWindow[idx];\n\n                // Notice: dataZoom is based either on `percentProp` ('start', 'end') or\n                // on `valueProp` ('startValue', 'endValue'). The former one is suitable\n                // for cases that a dataZoom component controls multiple axes with different\n                // unit or extent, and the latter one is suitable for accurate zoom by pixel\n                // (e.g., in dataZoomSelect). `valueProp` can be calculated from `percentProp`,\n                // but it is awkward that `percentProp` can not be obtained from `valueProp`\n                // accurately (because all of values that are overflow the `dataExtent` will\n                // be calculated to percent '100%'). So we have to use\n                // `dataZoom.getRangePropMode()` to mark which prop is used.\n                // `rangePropMode` is updated only when setOption or dispatchAction, otherwise\n                // it remains its original value.\n\n                if (rangePropMode[idx] === 'percent') {\n                    if (boundPercent == null) {\n                        boundPercent = percentExtent[idx];\n                    }\n                    // Use scale.parse to math round for category or time axis.\n                    boundValue = scale.parse(numberUtil.linearMap(\n                        boundPercent, percentExtent, dataExtent, true\n                    ));\n                }\n                else {\n                    // Calculating `percent` from `value` may be not accurate, because\n                    // This calculation can not be inversed, because all of values that\n                    // are overflow the `dataExtent` will be calculated to percent '100%'\n                    boundPercent = numberUtil.linearMap(\n                        boundValue, dataExtent, percentExtent, true\n                    );\n                }\n\n                // valueWindow[idx] = round(boundValue);\n                // percentWindow[idx] = round(boundPercent);\n                valueWindow[idx] = boundValue;\n                percentWindow[idx] = boundPercent;\n            });\n\n            return {\n                valueWindow: asc(valueWindow),\n                percentWindow: asc(percentWindow)\n            };\n        },\n\n        /**\n         * Notice: reset should not be called before series.restoreData() called,\n         * so it is recommanded to be called in \"process stage\" but not \"model init\n         * stage\".\n         *\n         * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n         */\n        reset: function (dataZoomModel) {\n            if (dataZoomModel !== this._dataZoomModel) {\n                return;\n            }\n\n            // Culculate data window and data extent, and record them.\n            this._dataExtent = calculateDataExtent(\n                this, this._dimName, this.getTargetSeriesModels()\n            );\n\n            var dataWindow = this.calculateDataWindow(dataZoomModel.option);\n\n            this._valueWindow = dataWindow.valueWindow;\n            this._percentWindow = dataWindow.percentWindow;\n\n            setMinMaxSpan(this);\n\n            // Update axis setting then.\n            setAxisModel(this);\n        },\n\n        /**\n         * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n         */\n        restore: function (dataZoomModel) {\n            if (dataZoomModel !== this._dataZoomModel) {\n                return;\n            }\n\n            this._valueWindow = this._percentWindow = null;\n            setAxisModel(this, true);\n        },\n\n        /**\n         * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n         */\n        filterData: function (dataZoomModel) {\n            if (dataZoomModel !== this._dataZoomModel) {\n                return;\n            }\n\n            var axisDim = this._dimName;\n            var seriesModels = this.getTargetSeriesModels();\n            var filterMode = dataZoomModel.get('filterMode');\n            var valueWindow = this._valueWindow;\n\n            if (filterMode === 'none') {\n                return;\n            }\n\n            // FIXME\n            // Toolbox may has dataZoom injected. And if there are stacked bar chart\n            // with NaN data, NaN will be filtered and stack will be wrong.\n            // So we need to force the mode to be set empty.\n            // In fect, it is not a big deal that do not support filterMode-'filter'\n            // when using toolbox#dataZoom, utill tooltip#dataZoom support \"single axis\n            // selection\" some day, which might need \"adapt to data extent on the\n            // otherAxis\", which is disabled by filterMode-'empty'.\n            var otherAxisModel = this.getOtherAxisModel();\n            if (dataZoomModel.get('$fromToolbox')\n                && otherAxisModel\n                && otherAxisModel.get('type') === 'category'\n            ) {\n                filterMode = 'empty';\n            }\n\n            // Process series data\n            each(seriesModels, function (seriesModel) {\n                var seriesData = seriesModel.getData();\n                var dataDims = seriesModel.coordDimToDataDim(axisDim);\n\n                if (filterMode === 'weakFilter') {\n                    seriesData && seriesData.filterSelf(function (dataIndex) {\n                        var leftOut;\n                        var rightOut;\n                        var hasValue;\n                        for (var i = 0; i < dataDims.length; i++) {\n                            var value = seriesData.get(dataDims[i], dataIndex);\n                            var thisHasValue = !isNaN(value);\n                            var thisLeftOut = value < valueWindow[0];\n                            var thisRightOut = value > valueWindow[1];\n                            if (thisHasValue && !thisLeftOut && !thisRightOut) {\n                                return true;\n                            }\n                            thisHasValue && (hasValue = true);\n                            thisLeftOut && (leftOut = true);\n                            thisRightOut && (rightOut = true);\n                        }\n                        // If both left out and right out, do not filter.\n                        return hasValue && leftOut && rightOut;\n                    });\n                }\n                else {\n                    seriesData && each(dataDims, function (dim) {\n                        if (filterMode === 'empty') {\n                            seriesModel.setData(\n                                seriesData.map(dim, function (value) {\n                                    return !isInWindow(value) ? NaN : value;\n                                })\n                            );\n                        }\n                        else {\n                            seriesData.filterSelf(dim, isInWindow);\n                        }\n                    });\n                }\n            });\n\n            function isInWindow(value) {\n                return value >= valueWindow[0] && value <= valueWindow[1];\n            }\n        }\n    };\n\n    function calculateDataExtent(axisProxy, axisDim, seriesModels) {\n        var dataExtent = [Infinity, -Infinity];\n\n        each(seriesModels, function (seriesModel) {\n            var seriesData = seriesModel.getData();\n            if (seriesData) {\n                each(seriesModel.coordDimToDataDim(axisDim), function (dim) {\n                    var seriesExtent = seriesData.getDataExtent(dim);\n                    seriesExtent[0] < dataExtent[0] && (dataExtent[0] = seriesExtent[0]);\n                    seriesExtent[1] > dataExtent[1] && (dataExtent[1] = seriesExtent[1]);\n                });\n            }\n        });\n\n        if (dataExtent[1] < dataExtent[0]) {\n            dataExtent = [NaN, NaN];\n        }\n\n        // It is important to get \"consistent\" extent when more then one axes is\n        // controlled by a `dataZoom`, otherwise those axes will not be synchronized\n        // when zooming. But it is difficult to know what is \"consistent\", considering\n        // axes have different type or even different meanings (For example, two\n        // time axes are used to compare data of the same date in different years).\n        // So basically dataZoom just obtains extent by series.data (in category axis\n        // extent can be obtained from axis.data).\n        // Nevertheless, user can set min/max/scale on axes to make extent of axes\n        // consistent.\n        fixExtentByAxis(axisProxy, dataExtent);\n\n        return dataExtent;\n    }\n\n    function fixExtentByAxis(axisProxy, dataExtent) {\n        var axisModel = axisProxy.getAxisModel();\n        var min = axisModel.getMin(true);\n\n        // For category axis, if min/max/scale are not set, extent is determined\n        // by axis.data by default.\n        var isCategoryAxis = axisModel.get('type') === 'category';\n        var axisDataLen = isCategoryAxis && (axisModel.get('data') || []).length;\n\n        if (min != null && min !== 'dataMin' && typeof min !== 'function') {\n            dataExtent[0] = min;\n        }\n        else if (isCategoryAxis) {\n            dataExtent[0] = axisDataLen > 0 ? 0 : NaN;\n        }\n\n        var max = axisModel.getMax(true);\n        if (max != null && max !== 'dataMax' && typeof max !== 'function') {\n            dataExtent[1] = max;\n        }\n        else if (isCategoryAxis) {\n            dataExtent[1] = axisDataLen > 0 ? axisDataLen - 1 : NaN;\n        }\n\n        if (!axisModel.get('scale', true)) {\n            dataExtent[0] > 0 && (dataExtent[0] = 0);\n            dataExtent[1] < 0 && (dataExtent[1] = 0);\n        }\n\n        // For value axis, if min/max/scale are not set, we just use the extent obtained\n        // by series data, which may be a little different from the extent calculated by\n        // `axisHelper.getScaleExtent`. But the different just affects the experience a\n        // little when zooming. So it will not be fixed until some users require it strongly.\n\n        return dataExtent;\n    }\n\n    function setAxisModel(axisProxy, isRestore) {\n        var axisModel = axisProxy.getAxisModel();\n\n        var percentWindow = axisProxy._percentWindow;\n        var valueWindow = axisProxy._valueWindow;\n\n        if (!percentWindow) {\n            return;\n        }\n\n        // [0, 500]: arbitrary value, guess axis extent.\n        var precision = numberUtil.getPixelPrecision(valueWindow, [0, 500]);\n        precision = Math.min(precision, 20);\n        // isRestore or isFull\n        var useOrigin = isRestore || (percentWindow[0] === 0 && percentWindow[1] === 100);\n\n        axisModel.setRange(\n            useOrigin ? null : +valueWindow[0].toFixed(precision),\n            useOrigin ? null : +valueWindow[1].toFixed(precision)\n        );\n    }\n\n    function setMinMaxSpan(axisProxy) {\n        var minMaxSpan = axisProxy._minMaxSpan = {};\n        var dataZoomModel = axisProxy._dataZoomModel;\n\n        each(['min', 'max'], function (minMax) {\n            minMaxSpan[minMax + 'Span'] = dataZoomModel.get(minMax + 'Span');\n\n            // minValueSpan and maxValueSpan has higher priority than minSpan and maxSpan\n            var valueSpan = dataZoomModel.get(minMax + 'ValueSpan');\n            if (valueSpan != null) {\n                minMaxSpan[minMax + 'ValueSpan'] = valueSpan;\n\n                valueSpan = axisProxy.getAxisModel().axis.scale.parse(valueSpan);\n                if (valueSpan != null) {\n                    minMaxSpan[minMax + 'Span'] = numberUtil.linearMap(\n                        valueSpan, axisProxy._dataExtent, [0, 100], true\n                    );\n                }\n            }\n        });\n    }\n\n    module.exports = AxisProxy;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/AxisProxy.js\n// module id = 1141\n// module chunks = 0 1 2","/**\n * @file Data zoom model\n */\n\n\n    var DataZoomModel = require('./DataZoomModel');\n\n    module.exports = DataZoomModel.extend({\n\n        type: 'dataZoom.select'\n\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/SelectZoomModel.js\n// module id = 1142\n// module chunks = 0 1 2","\n\n    module.exports = require('./DataZoomView').extend({\n\n        type: 'dataZoom.select'\n\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/SelectZoomView.js\n// module id = 1143\n// module chunks = 0 1 2","'use strict';\n\n\n    var history = require('../../dataZoom/history');\n    var lang = require('../../../lang').toolbox.restore;\n\n    function Restore(model) {\n        this.model = model;\n    }\n\n    Restore.defaultOption = {\n        show: true,\n        icon: 'M3.8,33.4 M47,18.9h9.8V8.7 M56.3,20.1 C52.1,9,40.5,0.6,26.8,2.1C12.6,3.7,1.6,16.2,2.1,30.6 M13,41.1H3.1v10.2 M3.7,39.9c4.2,11.1,15.8,19.5,29.5,18 c14.2-1.6,25.2-14.1,24.7-28.5',\n        title: lang.title\n    };\n\n    var proto = Restore.prototype;\n\n    proto.onclick = function (ecModel, api, type) {\n        history.clear(ecModel);\n\n        api.dispatchAction({\n            type: 'restore',\n            from: this.uid\n        });\n    };\n\n\n    require('../featureManager').register('restore', Restore);\n\n\n    require('../../../echarts').registerAction(\n        {type: 'restore', event: 'restore', update: 'prepareAndUpdate'},\n        function (payload, ecModel) {\n            ecModel.resetOption('recreate');\n        }\n    );\n\n    module.exports = Restore;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox/feature/Restore.js\n// module id = 1144\n// module chunks = 0 1 2","\n    var echarts = require('../echarts');\n    var zrUtil = require('zrender/lib/core/util');\n    module.exports = function (seriesType, actionInfos) {\n        zrUtil.each(actionInfos, function (actionInfo) {\n            actionInfo.update = 'updateView';\n            /**\n             * @payload\n             * @property {string} seriesName\n             * @property {string} name\n             */\n            echarts.registerAction(actionInfo, function (payload, ecModel) {\n                var selected = {};\n                ecModel.eachComponent(\n                    {mainType: 'series', subType: seriesType, query: payload},\n                    function (seriesModel) {\n                        if (seriesModel[actionInfo.method]) {\n                            seriesModel[actionInfo.method](\n                                payload.name,\n                                payload.dataIndex\n                            );\n                        }\n                        var data = seriesModel.getData();\n                        // Create selected map\n                        data.each(function (idx) {\n                            var name = data.getName(idx);\n                            selected[name] = seriesModel.isSelected(name)\n                                || false;\n                        });\n                    }\n                );\n                return {\n                    name: payload.name,\n                    selected: selected\n                };\n            });\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/action/createDataSelectAction.js\n// module id = 1148\n// module chunks = 0 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var echarts = require('../echarts');\n\n    require('./pie/PieSeries');\n    require('./pie/PieView');\n\n    require('../action/createDataSelectAction')('pie', [{\n        type: 'pieToggleSelect',\n        event: 'pieselectchanged',\n        method: 'toggleSelected'\n    }, {\n        type: 'pieSelect',\n        event: 'pieselected',\n        method: 'select'\n    }, {\n        type: 'pieUnSelect',\n        event: 'pieunselected',\n        method: 'unSelect'\n    }]);\n\n    echarts.registerVisual(zrUtil.curry(require('../visual/dataColor'), 'pie'));\n\n    echarts.registerLayout(zrUtil.curry(\n        require('./pie/pieLayout'), 'pie'\n    ));\n\n    echarts.registerProcessor(zrUtil.curry(require('../processor/dataFilter'), 'pie'));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/pie.js\n// module id = 1156\n// module chunks = 0 2","'use strict';\n\n\n    var List = require('../../data/List');\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n    var numberUtil = require('../../util/number');\n    var completeDimensions = require('../../data/helper/completeDimensions');\n\n    var dataSelectableMixin = require('../../component/helper/selectableMixin');\n\n    var PieSeries = require('../../echarts').extendSeriesModel({\n\n        type: 'series.pie',\n\n        // Overwrite\n        init: function (option) {\n            PieSeries.superApply(this, 'init', arguments);\n\n            // Enable legend selection for each data item\n            // Use a function instead of direct access because data reference may changed\n            this.legendDataProvider = function () {\n                return this.getRawData();\n            };\n\n            this.updateSelectedMap(option.data);\n\n            this._defaultLabelLine(option);\n        },\n\n        // Overwrite\n        mergeOption: function (newOption) {\n            PieSeries.superCall(this, 'mergeOption', newOption);\n            this.updateSelectedMap(this.option.data);\n        },\n\n        getInitialData: function (option, ecModel) {\n            var dimensions = completeDimensions(['value'], option.data);\n            var list = new List(dimensions, this);\n            list.initData(option.data);\n            return list;\n        },\n\n        // Overwrite\n        getDataParams: function (dataIndex) {\n            var data = this.getData();\n            var params = PieSeries.superCall(this, 'getDataParams', dataIndex);\n            // FIXME toFixed?\n\n            var valueList = [];\n            data.each('value', function (value) {\n                valueList.push(value);\n            });\n\n            params.percent = numberUtil.getPercentWithPrecision(\n                valueList,\n                dataIndex,\n                data.hostModel.get('percentPrecision')\n            );\n\n            params.$vars.push('percent');\n            return params;\n        },\n\n        _defaultLabelLine: function (option) {\n            // Extend labelLine emphasis\n            modelUtil.defaultEmphasis(option.labelLine, ['show']);\n\n            var labelLineNormalOpt = option.labelLine.normal;\n            var labelLineEmphasisOpt = option.labelLine.emphasis;\n            // Not show label line if `label.normal.show = false`\n            labelLineNormalOpt.show = labelLineNormalOpt.show\n                && option.label.normal.show;\n            labelLineEmphasisOpt.show = labelLineEmphasisOpt.show\n                && option.label.emphasis.show;\n        },\n\n        defaultOption: {\n            zlevel: 0,\n            z: 2,\n            legendHoverLink: true,\n\n            hoverAnimation: true,\n            // 默认全局居中\n            center: ['50%', '50%'],\n            radius: [0, '75%'],\n            // 默认顺时针\n            clockwise: true,\n            startAngle: 90,\n            // 最小角度改为0\n            minAngle: 0,\n            // 选中时扇区偏移量\n            selectedOffset: 10,\n            // 高亮扇区偏移量\n            hoverOffset: 10,\n\n            // If use strategy to avoid label overlapping\n            avoidLabelOverlap: true,\n            // 选择模式，默认关闭，可选single，multiple\n            // selectedMode: false,\n            // 南丁格尔玫瑰图模式，'radius'（半径） | 'area'（面积）\n            // roseType: null,\n\n            percentPrecision: 2,\n\n            // If still show when all data zero.\n            stillShowZeroSum: true,\n\n            // cursor: null,\n\n            label: {\n                normal: {\n                    // If rotate around circle\n                    rotate: false,\n                    show: true,\n                    // 'outer', 'inside', 'center'\n                    position: 'outer'\n                    // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n                    // 默认使用全局文本样式，详见TEXTSTYLE\n                    // distance: 当position为inner时有效，为label位置到圆心的距离与圆半径(环状图为内外半径和)的比例系数\n                },\n                emphasis: {}\n            },\n            // Enabled when label.normal.position is 'outer'\n            labelLine: {\n                normal: {\n                    show: true,\n                    // 引导线两段中的第一段长度\n                    length: 15,\n                    // 引导线两段中的第二段长度\n                    length2: 15,\n                    smooth: false,\n                    lineStyle: {\n                        // color: 各异,\n                        width: 1,\n                        type: 'solid'\n                    }\n                }\n            },\n            itemStyle: {\n                normal: {\n                    borderWidth: 1\n                },\n                emphasis: {}\n            },\n\n            // Animation type canbe expansion, scale\n            animationType: 'expansion',\n\n            animationEasing: 'cubicOut',\n\n            data: []\n        }\n    });\n\n    zrUtil.mixin(PieSeries, dataSelectableMixin);\n\n    module.exports = PieSeries;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/pie/PieSeries.js\n// module id = 1157\n// module chunks = 0 2","\n\n    var graphic = require('../../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n\n    /**\n     * @param {module:echarts/model/Series} seriesModel\n     * @param {boolean} hasAnimation\n     * @inner\n     */\n    function updateDataSelected(uid, seriesModel, hasAnimation, api) {\n        var data = seriesModel.getData();\n        var dataIndex = this.dataIndex;\n        var name = data.getName(dataIndex);\n        var selectedOffset = seriesModel.get('selectedOffset');\n\n        api.dispatchAction({\n            type: 'pieToggleSelect',\n            from: uid,\n            name: name,\n            seriesId: seriesModel.id\n        });\n\n        data.each(function (idx) {\n            toggleItemSelected(\n                data.getItemGraphicEl(idx),\n                data.getItemLayout(idx),\n                seriesModel.isSelected(data.getName(idx)),\n                selectedOffset,\n                hasAnimation\n            );\n        });\n    }\n\n    /**\n     * @param {module:zrender/graphic/Sector} el\n     * @param {Object} layout\n     * @param {boolean} isSelected\n     * @param {number} selectedOffset\n     * @param {boolean} hasAnimation\n     * @inner\n     */\n    function toggleItemSelected(el, layout, isSelected, selectedOffset, hasAnimation) {\n        var midAngle = (layout.startAngle + layout.endAngle) / 2;\n\n        var dx = Math.cos(midAngle);\n        var dy = Math.sin(midAngle);\n\n        var offset = isSelected ? selectedOffset : 0;\n        var position = [dx * offset, dy * offset];\n\n        hasAnimation\n            // animateTo will stop revious animation like update transition\n            ? el.animate()\n                .when(200, {\n                    position: position\n                })\n                .start('bounceOut')\n            : el.attr('position', position);\n    }\n\n    /**\n     * Piece of pie including Sector, Label, LabelLine\n     * @constructor\n     * @extends {module:zrender/graphic/Group}\n     */\n    function PiePiece(data, idx) {\n\n        graphic.Group.call(this);\n\n        var sector = new graphic.Sector({\n            z2: 2\n        });\n        var polyline = new graphic.Polyline();\n        var text = new graphic.Text();\n        this.add(sector);\n        this.add(polyline);\n        this.add(text);\n\n        this.updateData(data, idx, true);\n\n        // Hover to change label and labelLine\n        function onEmphasis() {\n            polyline.ignore = polyline.hoverIgnore;\n            text.ignore = text.hoverIgnore;\n        }\n        function onNormal() {\n            polyline.ignore = polyline.normalIgnore;\n            text.ignore = text.normalIgnore;\n        }\n        this.on('emphasis', onEmphasis)\n            .on('normal', onNormal)\n            .on('mouseover', onEmphasis)\n            .on('mouseout', onNormal);\n    }\n\n    var piePieceProto = PiePiece.prototype;\n\n    piePieceProto.updateData = function (data, idx, firstCreate) {\n\n        var sector = this.childAt(0);\n\n        var seriesModel = data.hostModel;\n        var itemModel = data.getItemModel(idx);\n        var layout = data.getItemLayout(idx);\n        var sectorShape = zrUtil.extend({}, layout);\n        sectorShape.label = null;\n\n        if (firstCreate) {\n            sector.setShape(sectorShape);\n\n            var animationType = seriesModel.getShallow('animationType');\n            if (animationType === 'scale') {\n                sector.shape.r = layout.r0;\n                graphic.initProps(sector, {\n                    shape: {\n                        r: layout.r\n                    }\n                }, seriesModel, idx);\n            }\n            // Expansion\n            else {\n                sector.shape.endAngle = layout.startAngle;\n                graphic.updateProps(sector, {\n                    shape: {\n                        endAngle: layout.endAngle\n                    }\n                }, seriesModel, idx);\n            }\n\n        }\n        else {\n            graphic.updateProps(sector, {\n                shape: sectorShape\n            }, seriesModel, idx);\n        }\n\n        // Update common style\n        var itemStyleModel = itemModel.getModel('itemStyle');\n        var visualColor = data.getItemVisual(idx, 'color');\n\n        sector.useStyle(\n            zrUtil.defaults(\n                {\n                    lineJoin: 'bevel',\n                    fill: visualColor\n                },\n                itemStyleModel.getModel('normal').getItemStyle()\n            )\n        );\n        sector.hoverStyle = itemStyleModel.getModel('emphasis').getItemStyle();\n\n        var cursorStyle = itemModel.getShallow('cursor');\n        cursorStyle && sector.attr('cursor', cursorStyle);\n\n        // Toggle selected\n        toggleItemSelected(\n            this,\n            data.getItemLayout(idx),\n            itemModel.get('selected'),\n            seriesModel.get('selectedOffset'),\n            seriesModel.get('animation')\n        );\n\n        function onEmphasis() {\n            // Sector may has animation of updating data. Force to move to the last frame\n            // Or it may stopped on the wrong shape\n            sector.stopAnimation(true);\n            sector.animateTo({\n                shape: {\n                    r: layout.r + seriesModel.get('hoverOffset')\n                }\n            }, 300, 'elasticOut');\n        }\n        function onNormal() {\n            sector.stopAnimation(true);\n            sector.animateTo({\n                shape: {\n                    r: layout.r\n                }\n            }, 300, 'elasticOut');\n        }\n        sector.off('mouseover').off('mouseout').off('emphasis').off('normal');\n        if (itemModel.get('hoverAnimation') && seriesModel.isAnimationEnabled()) {\n            sector\n                .on('mouseover', onEmphasis)\n                .on('mouseout', onNormal)\n                .on('emphasis', onEmphasis)\n                .on('normal', onNormal);\n        }\n\n        this._updateLabel(data, idx);\n\n        graphic.setHoverStyle(this);\n    };\n\n    piePieceProto._updateLabel = function (data, idx) {\n\n        var labelLine = this.childAt(1);\n        var labelText = this.childAt(2);\n\n        var seriesModel = data.hostModel;\n        var itemModel = data.getItemModel(idx);\n        var layout = data.getItemLayout(idx);\n        var labelLayout = layout.label;\n        var visualColor = data.getItemVisual(idx, 'color');\n\n        graphic.updateProps(labelLine, {\n            shape: {\n                points: labelLayout.linePoints || [\n                    [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y]\n                ]\n            }\n        }, seriesModel, idx);\n\n        graphic.updateProps(labelText, {\n            style: {\n                x: labelLayout.x,\n                y: labelLayout.y\n            }\n        }, seriesModel, idx);\n        labelText.attr({\n            rotation: labelLayout.rotation,\n            origin: [labelLayout.x, labelLayout.y],\n            z2: 10\n        });\n\n        var labelModel = itemModel.getModel('label.normal');\n        var labelHoverModel = itemModel.getModel('label.emphasis');\n        var labelLineModel = itemModel.getModel('labelLine.normal');\n        var labelLineHoverModel = itemModel.getModel('labelLine.emphasis');\n        var visualColor = data.getItemVisual(idx, 'color');\n\n        graphic.setLabelStyle(\n            labelText.style, labelText.hoverStyle = {}, labelModel, labelHoverModel,\n            {\n                labelFetcher: data.hostModel,\n                labelDataIndex: idx,\n                defaultText: data.getName(idx),\n                autoColor: visualColor,\n                useInsideStyle: !!labelLayout.inside\n            },\n            {\n                textAlign: labelLayout.textAlign,\n                textVerticalAlign: labelLayout.verticalAlign,\n                opacity: data.getItemVisual(idx, 'opacity')\n            }\n        );\n\n        labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n        labelText.hoverIgnore = !labelHoverModel.get('show');\n\n        labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n        labelLine.hoverIgnore = !labelLineHoverModel.get('show');\n\n        // Default use item visual color\n        labelLine.setStyle({\n            stroke: visualColor,\n            opacity: data.getItemVisual(idx, 'opacity')\n        });\n        labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n\n        labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n\n        var smooth = labelLineModel.get('smooth');\n        if (smooth && smooth === true) {\n            smooth = 0.4;\n        }\n        labelLine.setShape({\n            smooth: smooth\n        });\n    };\n\n    zrUtil.inherits(PiePiece, graphic.Group);\n\n\n    // Pie view\n    var Pie = require('../../view/Chart').extend({\n\n        type: 'pie',\n\n        init: function () {\n            var sectorGroup = new graphic.Group();\n            this._sectorGroup = sectorGroup;\n        },\n\n        render: function (seriesModel, ecModel, api, payload) {\n            if (payload && (payload.from === this.uid)) {\n                return;\n            }\n\n            var data = seriesModel.getData();\n            var oldData = this._data;\n            var group = this.group;\n\n            var hasAnimation = ecModel.get('animation');\n            var isFirstRender = !oldData;\n            var animationType = seriesModel.get('animationType');\n\n            var onSectorClick = zrUtil.curry(\n                updateDataSelected, this.uid, seriesModel, hasAnimation, api\n            );\n\n            var selectedMode = seriesModel.get('selectedMode');\n\n            data.diff(oldData)\n                .add(function (idx) {\n                    var piePiece = new PiePiece(data, idx);\n                    // Default expansion animation\n                    if (isFirstRender && animationType !== 'scale') {\n                        piePiece.eachChild(function (child) {\n                            child.stopAnimation(true);\n                        });\n                    }\n\n                    selectedMode && piePiece.on('click', onSectorClick);\n\n                    data.setItemGraphicEl(idx, piePiece);\n\n                    group.add(piePiece);\n                })\n                .update(function (newIdx, oldIdx) {\n                    var piePiece = oldData.getItemGraphicEl(oldIdx);\n\n                    piePiece.updateData(data, newIdx);\n\n                    piePiece.off('click');\n                    selectedMode && piePiece.on('click', onSectorClick);\n                    group.add(piePiece);\n                    data.setItemGraphicEl(newIdx, piePiece);\n                })\n                .remove(function (idx) {\n                    var piePiece = oldData.getItemGraphicEl(idx);\n                    group.remove(piePiece);\n                })\n                .execute();\n\n            if (\n                hasAnimation && isFirstRender && data.count() > 0\n                // Default expansion animation\n                && animationType !== 'scale'\n            ) {\n                var shape = data.getItemLayout(0);\n                var r = Math.max(api.getWidth(), api.getHeight()) / 2;\n\n                var removeClipPath = zrUtil.bind(group.removeClipPath, group);\n                group.setClipPath(this._createClipPath(\n                    shape.cx, shape.cy, r, shape.startAngle, shape.clockwise, removeClipPath, seriesModel\n                ));\n            }\n\n            this._data = data;\n        },\n\n        dispose: function () {},\n\n        _createClipPath: function (\n            cx, cy, r, startAngle, clockwise, cb, seriesModel\n        ) {\n            var clipPath = new graphic.Sector({\n                shape: {\n                    cx: cx,\n                    cy: cy,\n                    r0: 0,\n                    r: r,\n                    startAngle: startAngle,\n                    endAngle: startAngle,\n                    clockwise: clockwise\n                }\n            });\n\n            graphic.initProps(clipPath, {\n                shape: {\n                    endAngle: startAngle + (clockwise ? 1 : -1) * Math.PI * 2\n                }\n            }, seriesModel, cb);\n\n            return clipPath;\n        },\n\n        /**\n         * @implement\n         */\n        containPoint: function (point, seriesModel) {\n            var data = seriesModel.getData();\n            var itemLayout = data.getItemLayout(0);\n            if (itemLayout) {\n                var dx = point[0] - itemLayout.cx;\n                var dy = point[1] - itemLayout.cy;\n                var radius = Math.sqrt(dx * dx + dy * dy);\n                return radius <= itemLayout.r && radius >= itemLayout.r0;\n            }\n        }\n\n    });\n\n    module.exports = Pie;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/pie/PieView.js\n// module id = 1158\n// module chunks = 0 2","\n\n    var numberUtil = require('../../util/number');\n    var parsePercent = numberUtil.parsePercent;\n    var labelLayout = require('./labelLayout');\n    var zrUtil = require('zrender/lib/core/util');\n\n    var PI2 = Math.PI * 2;\n    var RADIAN = Math.PI / 180;\n\n    module.exports = function (seriesType, ecModel, api, payload) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var center = seriesModel.get('center');\n            var radius = seriesModel.get('radius');\n\n            if (!zrUtil.isArray(radius)) {\n                radius = [0, radius];\n            }\n            if (!zrUtil.isArray(center)) {\n                center = [center, center];\n            }\n\n            var width = api.getWidth();\n            var height = api.getHeight();\n            var size = Math.min(width, height);\n            var cx = parsePercent(center[0], width);\n            var cy = parsePercent(center[1], height);\n            var r0 = parsePercent(radius[0], size / 2);\n            var r = parsePercent(radius[1], size / 2);\n\n            var data = seriesModel.getData();\n\n            var startAngle = -seriesModel.get('startAngle') * RADIAN;\n\n            var minAngle = seriesModel.get('minAngle') * RADIAN;\n\n            var validDataCount = 0;\n            data.each('value', function (value) {\n                !isNaN(value) && validDataCount++;\n            });\n\n            var sum = data.getSum('value');\n            // Sum may be 0\n            var unitRadian = Math.PI / (sum || validDataCount) * 2;\n\n            var clockwise = seriesModel.get('clockwise');\n\n            var roseType = seriesModel.get('roseType');\n            var stillShowZeroSum = seriesModel.get('stillShowZeroSum');\n\n            // [0...max]\n            var extent = data.getDataExtent('value');\n            extent[0] = 0;\n\n            // In the case some sector angle is smaller than minAngle\n            var restAngle = PI2;\n            var valueSumLargerThanMinAngle = 0;\n\n            var currentAngle = startAngle;\n            var dir = clockwise ? 1 : -1;\n\n            data.each('value', function (value, idx) {\n                var angle;\n                if (isNaN(value)) {\n                    data.setItemLayout(idx, {\n                        angle: NaN,\n                        startAngle: NaN,\n                        endAngle: NaN,\n                        clockwise: clockwise,\n                        cx: cx,\n                        cy: cy,\n                        r0: r0,\n                        r: roseType\n                            ? NaN\n                            : r\n                    });\n                    return;\n                }\n\n                // FIXME 兼容 2.0 但是 roseType 是 area 的时候才是这样？\n                if (roseType !== 'area') {\n                    angle = (sum === 0 && stillShowZeroSum)\n                        ? unitRadian : (value * unitRadian);\n                }\n                else {\n                    angle = PI2 / validDataCount;\n                }\n\n                if (angle < minAngle) {\n                    angle = minAngle;\n                    restAngle -= minAngle;\n                }\n                else {\n                    valueSumLargerThanMinAngle += value;\n                }\n\n                var endAngle = currentAngle + dir * angle;\n                data.setItemLayout(idx, {\n                    angle: angle,\n                    startAngle: currentAngle,\n                    endAngle: endAngle,\n                    clockwise: clockwise,\n                    cx: cx,\n                    cy: cy,\n                    r0: r0,\n                    r: roseType\n                        ? numberUtil.linearMap(value, extent, [r0, r])\n                        : r\n                });\n\n                currentAngle = endAngle;\n            }, true);\n\n            // Some sector is constrained by minAngle\n            // Rest sectors needs recalculate angle\n            if (restAngle < PI2 && validDataCount) {\n                // Average the angle if rest angle is not enough after all angles is\n                // Constrained by minAngle\n                if (restAngle <= 1e-3) {\n                    var angle = PI2 / validDataCount;\n                    data.each('value', function (value, idx) {\n                        if (!isNaN(value)) {\n                            var layout = data.getItemLayout(idx);\n                            layout.angle = angle;\n                            layout.startAngle = startAngle + dir * idx * angle;\n                            layout.endAngle = startAngle + dir * (idx + 1) * angle;\n                        }\n                    });\n                }\n                else {\n                    unitRadian = restAngle / valueSumLargerThanMinAngle;\n                    currentAngle = startAngle;\n                    data.each('value', function (value, idx) {\n                        if (!isNaN(value)) {\n                            var layout = data.getItemLayout(idx);\n                            var angle = layout.angle === minAngle\n                                ? minAngle : value * unitRadian;\n                            layout.startAngle = currentAngle;\n                            layout.endAngle = currentAngle + dir * angle;\n                            currentAngle += dir * angle;\n                        }\n                    });\n                }\n            }\n\n            labelLayout(seriesModel, r, width, height);\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/pie/pieLayout.js\n// module id = 1159\n// module chunks = 0 2","'use strict';\n// FIXME emphasis label position is not same with normal label position\n\n\n    var textContain = require('zrender/lib/contain/text');\n\n    function adjustSingleSide(list, cx, cy, r, dir, viewWidth, viewHeight) {\n        list.sort(function (a, b) {\n            return a.y - b.y;\n        });\n\n        // 压\n        function shiftDown(start, end, delta, dir) {\n            for (var j = start; j < end; j++) {\n                list[j].y += delta;\n                if (j > start\n                    && j + 1 < end\n                    && list[j + 1].y > list[j].y + list[j].height\n                ) {\n                    shiftUp(j, delta / 2);\n                    return;\n                }\n            }\n\n            shiftUp(end - 1, delta / 2);\n        }\n\n        // 弹\n        function shiftUp(end, delta) {\n            for (var j = end; j >= 0; j--) {\n                list[j].y -= delta;\n                if (j > 0\n                    && list[j].y > list[j - 1].y + list[j - 1].height\n                ) {\n                    break;\n                }\n            }\n        }\n\n        function changeX(list, isDownList, cx, cy, r, dir) {\n            var lastDeltaX = dir > 0\n                ? isDownList                // 右侧\n                    ? Number.MAX_VALUE      // 下\n                    : 0                     // 上\n                : isDownList                // 左侧\n                    ? Number.MAX_VALUE      // 下\n                    : 0;                    // 上\n\n            for (var i = 0, l = list.length; i < l; i++) {\n                // Not change x for center label\n                if (list[i].position === 'center') {\n                    continue;\n                }\n                var deltaY = Math.abs(list[i].y - cy);\n                var length = list[i].len;\n                var length2 = list[i].len2;\n                var deltaX = (deltaY < r + length)\n                    ? Math.sqrt(\n                          (r + length + length2) * (r + length + length2)\n                          - deltaY * deltaY\n                      )\n                    : Math.abs(list[i].x - cx);\n                if (isDownList && deltaX >= lastDeltaX) {\n                    // 右下，左下\n                    deltaX = lastDeltaX - 10;\n                }\n                if (!isDownList && deltaX <= lastDeltaX) {\n                    // 右上，左上\n                    deltaX = lastDeltaX + 10;\n                }\n\n                list[i].x = cx + deltaX * dir;\n                lastDeltaX = deltaX;\n            }\n        }\n\n        var lastY = 0;\n        var delta;\n        var len = list.length;\n        var upList = [];\n        var downList = [];\n        for (var i = 0; i < len; i++) {\n            delta = list[i].y - lastY;\n            if (delta < 0) {\n                shiftDown(i, len, -delta, dir);\n            }\n            lastY = list[i].y + list[i].height;\n        }\n        if (viewHeight - lastY < 0) {\n            shiftUp(len - 1, lastY - viewHeight);\n        }\n        for (var i = 0; i < len; i++) {\n            if (list[i].y >= cy) {\n                downList.push(list[i]);\n            }\n            else {\n                upList.push(list[i]);\n            }\n        }\n        changeX(upList, false, cx, cy, r, dir);\n        changeX(downList, true, cx, cy, r, dir);\n    }\n\n    function avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight) {\n        var leftList = [];\n        var rightList = [];\n        for (var i = 0; i < labelLayoutList.length; i++) {\n            if (labelLayoutList[i].x < cx) {\n                leftList.push(labelLayoutList[i]);\n            }\n            else {\n                rightList.push(labelLayoutList[i]);\n            }\n        }\n\n        adjustSingleSide(rightList, cx, cy, r, 1, viewWidth, viewHeight);\n        adjustSingleSide(leftList, cx, cy, r, -1, viewWidth, viewHeight);\n\n        for (var i = 0; i < labelLayoutList.length; i++) {\n            var linePoints = labelLayoutList[i].linePoints;\n            if (linePoints) {\n                var dist = linePoints[1][0] - linePoints[2][0];\n                if (labelLayoutList[i].x < cx) {\n                    linePoints[2][0] = labelLayoutList[i].x + 3;\n                }\n                else {\n                    linePoints[2][0] = labelLayoutList[i].x - 3;\n                }\n                linePoints[1][1] = linePoints[2][1] = labelLayoutList[i].y;\n                linePoints[1][0] = linePoints[2][0] + dist;\n            }\n        }\n    }\n\n    module.exports = function (seriesModel, r, viewWidth, viewHeight) {\n        var data = seriesModel.getData();\n        var labelLayoutList = [];\n        var cx;\n        var cy;\n        var hasLabelRotate = false;\n\n        data.each(function (idx) {\n            var layout = data.getItemLayout(idx);\n\n            var itemModel = data.getItemModel(idx);\n            var labelModel = itemModel.getModel('label.normal');\n            // Use position in normal or emphasis\n            var labelPosition = labelModel.get('position') || itemModel.get('label.emphasis.position');\n\n            var labelLineModel = itemModel.getModel('labelLine.normal');\n            var labelLineLen = labelLineModel.get('length');\n            var labelLineLen2 = labelLineModel.get('length2');\n\n            var midAngle = (layout.startAngle + layout.endAngle) / 2;\n            var dx = Math.cos(midAngle);\n            var dy = Math.sin(midAngle);\n\n            var textX;\n            var textY;\n            var linePoints;\n            var textAlign;\n\n            cx = layout.cx;\n            cy = layout.cy;\n\n            var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\n            if (labelPosition === 'center') {\n                textX = layout.cx;\n                textY = layout.cy;\n                textAlign = 'center';\n            }\n            else {\n                var x1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dx : layout.r * dx) + cx;\n                var y1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dy : layout.r * dy) + cy;\n\n                textX = x1 + dx * 3;\n                textY = y1 + dy * 3;\n\n                if (!isLabelInside) {\n                    // For roseType\n                    var x2 = x1 + dx * (labelLineLen + r - layout.r);\n                    var y2 = y1 + dy * (labelLineLen + r - layout.r);\n                    var x3 = x2 + ((dx < 0 ? -1 : 1) * labelLineLen2);\n                    var y3 = y2;\n\n                    textX = x3 + (dx < 0 ? -5 : 5);\n                    textY = y3;\n                    linePoints = [[x1, y1], [x2, y2], [x3, y3]];\n                }\n\n                textAlign = isLabelInside ? 'center' : (dx > 0 ? 'left' : 'right');\n            }\n            var font = labelModel.getFont();\n\n            var labelRotate = labelModel.get('rotate')\n                ? (dx < 0 ? -midAngle + Math.PI : -midAngle) : 0;\n            var text = seriesModel.getFormattedLabel(idx, 'normal')\n                        || data.getName(idx);\n            var textRect = textContain.getBoundingRect(\n                text, font, textAlign, 'top'\n            );\n            hasLabelRotate = !!labelRotate;\n            layout.label = {\n                x: textX,\n                y: textY,\n                position: labelPosition,\n                height: textRect.height,\n                len: labelLineLen,\n                len2: labelLineLen2,\n                linePoints: linePoints,\n                textAlign: textAlign,\n                verticalAlign: 'middle',\n                rotation: labelRotate,\n                inside: isLabelInside\n            };\n\n            // Not layout the inside label\n            if (!isLabelInside) {\n                labelLayoutList.push(layout.label);\n            }\n        });\n        if (!hasLabelRotate && seriesModel.get('avoidLabelOverlap')) {\n            avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/pie/labelLayout.js\n// module id = 1160\n// module chunks = 0 2","import React from 'react'\nimport echarts from 'echarts/lib/echarts' //必须\nimport 'echarts/lib/component/tooltip'\nimport 'echarts/lib/component/legend'\nimport 'echarts/lib/chart/pie'\nimport 'echarts/lib/component/toolbox'\n\nexport default class PieReact extends React.Component {\n  \n  constructor(props) {\n    super(props)\n    this.initPie = this.initPie.bind(this)\n  }\n  \n  initPie() {\n    const { option={} } = this.props //外部传入的data数据\n    let myChart = echarts.init(this.ID) //初始化echarts\n\n    //设置options\n    myChart.setOption(option)\n    window.onresize = function() {\n      myChart.resize()\n    }\n  }\n  \n  componentDidMount() {\n    this.initPie()\n  }\n  \n  componentDidUpdate() {\n    this.initPie()\n  }\n  \n  render() {\n    const { width=\"100%\", height = '300px' } = this.props\n    return <div ref={ID => this.ID = ID} style={{width, height}}></div>\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/Echarts/PieReact.js","/**\n * @module zrender/core/util\n */\n\n\n    // 用于处理merge时无法遍历Date等对象的问题\n    var BUILTIN_OBJECT = {\n        '[object Function]': 1,\n        '[object RegExp]': 1,\n        '[object Date]': 1,\n        '[object Error]': 1,\n        '[object CanvasGradient]': 1,\n        '[object CanvasPattern]': 1,\n        // For node-canvas\n        '[object Image]': 1,\n        '[object Canvas]': 1\n    };\n\n    var TYPED_ARRAY = {\n        '[object Int8Array]': 1,\n        '[object Uint8Array]': 1,\n        '[object Uint8ClampedArray]': 1,\n        '[object Int16Array]': 1,\n        '[object Uint16Array]': 1,\n        '[object Int32Array]': 1,\n        '[object Uint32Array]': 1,\n        '[object Float32Array]': 1,\n        '[object Float64Array]': 1\n    };\n\n    var objToString = Object.prototype.toString;\n\n    var arrayProto = Array.prototype;\n    var nativeForEach = arrayProto.forEach;\n    var nativeFilter = arrayProto.filter;\n    var nativeSlice = arrayProto.slice;\n    var nativeMap = arrayProto.map;\n    var nativeReduce = arrayProto.reduce;\n\n    /**\n     * Those data types can be cloned:\n     *     Plain object, Array, TypedArray, number, string, null, undefined.\n     * Those data types will be assgined using the orginal data:\n     *     BUILTIN_OBJECT\n     * Instance of user defined class will be cloned to a plain object, without\n     * properties in prototype.\n     * Other data types is not supported (not sure what will happen).\n     *\n     * Caution: do not support clone Date, for performance consideration.\n     * (There might be a large number of date in `series.data`).\n     * So date should not be modified in and out of echarts.\n     *\n     * @param {*} source\n     * @return {*} new\n     */\n    function clone(source) {\n        if (source == null || typeof source != 'object') {\n            return source;\n        }\n\n        var result = source;\n        var typeStr = objToString.call(source);\n\n        if (typeStr === '[object Array]') {\n            result = [];\n            for (var i = 0, len = source.length; i < len; i++) {\n                result[i] = clone(source[i]);\n            }\n        }\n        else if (TYPED_ARRAY[typeStr]) {\n            var Ctor = source.constructor;\n            if (source.constructor.from) {\n                result = Ctor.from(source);\n            }\n            else {\n                result = new Ctor(source.length);\n                for (var i = 0, len = source.length; i < len; i++) {\n                    result[i] = clone(source[i]);\n                }\n            }\n        }\n        else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n            result = {};\n            for (var key in source) {\n                if (source.hasOwnProperty(key)) {\n                    result[key] = clone(source[key]);\n                }\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} target\n     * @param {*} source\n     * @param {boolean} [overwrite=false]\n     */\n    function merge(target, source, overwrite) {\n        // We should escapse that source is string\n        // and enter for ... in ...\n        if (!isObject(source) || !isObject(target)) {\n            return overwrite ? clone(source) : target;\n        }\n\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                var targetProp = target[key];\n                var sourceProp = source[key];\n\n                if (isObject(sourceProp)\n                    && isObject(targetProp)\n                    && !isArray(sourceProp)\n                    && !isArray(targetProp)\n                    && !isDom(sourceProp)\n                    && !isDom(targetProp)\n                    && !isBuiltInObject(sourceProp)\n                    && !isBuiltInObject(targetProp)\n                    && !isPrimitive(sourceProp)\n                    && !isPrimitive(targetProp)\n                ) {\n                    // 如果需要递归覆盖，就递归调用merge\n                    merge(targetProp, sourceProp, overwrite);\n                }\n                else if (overwrite || !(key in target)) {\n                    // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n                    // NOTE，在 target[key] 不存在的时候也是直接覆盖\n                    target[key] = clone(source[key], true);\n                }\n            }\n        }\n\n        return target;\n    }\n\n    /**\n     * @param {Array} targetAndSources The first item is target, and the rests are source.\n     * @param {boolean} [overwrite=false]\n     * @return {*} target\n     */\n    function mergeAll(targetAndSources, overwrite) {\n        var result = targetAndSources[0];\n        for (var i = 1, len = targetAndSources.length; i < len; i++) {\n            result = merge(result, targetAndSources[i], overwrite);\n        }\n        return result;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @memberOf module:zrender/core/util\n     */\n    function extend(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @param {boolean} [overlay=false]\n     * @memberOf module:zrender/core/util\n     */\n    function defaults(target, source, overlay) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)\n                && (overlay ? source[key] != null : target[key] == null)\n            ) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    function createCanvas() {\n        return document.createElement('canvas');\n    }\n    // FIXME\n    var _ctx;\n    function getContext() {\n        if (!_ctx) {\n            // Use util.createCanvas instead of createCanvas\n            // because createCanvas may be overwritten in different environment\n            _ctx = util.createCanvas().getContext('2d');\n        }\n        return _ctx;\n    }\n\n    /**\n     * 查询数组中元素的index\n     * @memberOf module:zrender/core/util\n     */\n    function indexOf(array, value) {\n        if (array) {\n            if (array.indexOf) {\n                return array.indexOf(value);\n            }\n            for (var i = 0, len = array.length; i < len; i++) {\n                if (array[i] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    }\n\n    /**\n     * 构造类继承关系\n     *\n     * @memberOf module:zrender/core/util\n     * @param {Function} clazz 源类\n     * @param {Function} baseClazz 基类\n     */\n    function inherits(clazz, baseClazz) {\n        var clazzPrototype = clazz.prototype;\n        function F() {}\n        F.prototype = baseClazz.prototype;\n        clazz.prototype = new F();\n\n        for (var prop in clazzPrototype) {\n            clazz.prototype[prop] = clazzPrototype[prop];\n        }\n        clazz.prototype.constructor = clazz;\n        clazz.superClass = baseClazz;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Object|Function} target\n     * @param {Object|Function} sorce\n     * @param {boolean} overlay\n     */\n    function mixin(target, source, overlay) {\n        target = 'prototype' in target ? target.prototype : target;\n        source = 'prototype' in source ? source.prototype : source;\n\n        defaults(target, source, overlay);\n    }\n\n    /**\n     * Consider typed array.\n     * @param {Array|TypedArray} data\n     */\n    function isArrayLike(data) {\n        if (! data) {\n            return;\n        }\n        if (typeof data == 'string') {\n            return false;\n        }\n        return typeof data.length == 'number';\n    }\n\n    /**\n     * 数组或对象遍历\n     * @memberOf module:zrender/core/util\n     * @param {Object|Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     */\n    function each(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.forEach && obj.forEach === nativeForEach) {\n            obj.forEach(cb, context);\n        }\n        else if (obj.length === +obj.length) {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                cb.call(context, obj[i], i, obj);\n            }\n        }\n        else {\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    cb.call(context, obj[key], key, obj);\n                }\n            }\n        }\n    }\n\n    /**\n     * 数组映射\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function map(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.map && obj.map === nativeMap) {\n            return obj.map(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                result.push(cb.call(context, obj[i], i, obj));\n            }\n            return result;\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {Object} [memo]\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function reduce(obj, cb, memo, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.reduce && obj.reduce === nativeReduce) {\n            return obj.reduce(cb, memo, context);\n        }\n        else {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                memo = cb.call(context, memo, obj[i], i, obj);\n            }\n            return memo;\n        }\n    }\n\n    /**\n     * 数组过滤\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function filter(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.filter && obj.filter === nativeFilter) {\n            return obj.filter(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                if (cb.call(context, obj[i], i, obj)) {\n                    result.push(obj[i]);\n                }\n            }\n            return result;\n        }\n    }\n\n    /**\n     * 数组项查找\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function find(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        for (var i = 0, len = obj.length; i < len; i++) {\n            if (cb.call(context, obj[i], i, obj)) {\n                return obj[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @param {*} context\n     * @return {Function}\n     */\n    function bind(func, context) {\n        var args = nativeSlice.call(arguments, 2);\n        return function () {\n            return func.apply(context, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @return {Function}\n     */\n    function curry(func) {\n        var args = nativeSlice.call(arguments, 1);\n        return function () {\n            return func.apply(this, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isArray(value) {\n        return objToString.call(value) === '[object Array]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isString(value) {\n        return objToString.call(value) === '[object String]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isObject(value) {\n        // Avoid a V8 JIT bug in Chrome 19-20.\n        // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n        var type = typeof value;\n        return type === 'function' || (!!value && type == 'object');\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isBuiltInObject(value) {\n        return !!BUILTIN_OBJECT[objToString.call(value)];\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isDom(value) {\n        return typeof value === 'object'\n            && typeof value.nodeType === 'number'\n            && typeof value.ownerDocument === 'object';\n    }\n\n    /**\n     * Whether is exactly NaN. Notice isNaN('a') returns true.\n     * @param {*} value\n     * @return {boolean}\n     */\n    function eqNaN(value) {\n        return value !== value;\n    }\n\n    /**\n     * If value1 is not null, then return value1, otherwise judget rest of values.\n     * Low performance.\n     * @memberOf module:zrender/core/util\n     * @return {*} Final value\n     */\n    function retrieve(values) {\n        for (var i = 0, len = arguments.length; i < len; i++) {\n            if (arguments[i] != null) {\n                return arguments[i];\n            }\n        }\n    }\n\n    function retrieve2(value0, value1) {\n        return value0 != null\n            ? value0\n            : value1;\n    }\n\n    function retrieve3(value0, value1, value2) {\n        return value0 != null\n            ? value0\n            : value1 != null\n            ? value1\n            : value2;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} arr\n     * @param {number} startIndex\n     * @param {number} endIndex\n     * @return {Array}\n     */\n    function slice() {\n        return Function.call.apply(nativeSlice, arguments);\n    }\n\n    /**\n     * Normalize css liked array configuration\n     * e.g.\n     *  3 => [3, 3, 3, 3]\n     *  [4, 2] => [4, 2, 4, 2]\n     *  [4, 3, 2] => [4, 3, 2, 3]\n     * @param {number|Array.<number>} val\n     * @return {Array.<number>}\n     */\n    function normalizeCssArray(val) {\n        if (typeof (val) === 'number') {\n            return [val, val, val, val];\n        }\n        var len = val.length;\n        if (len === 2) {\n            // vertical | horizontal\n            return [val[0], val[1], val[0], val[1]];\n        }\n        else if (len === 3) {\n            // top | horizontal | bottom\n            return [val[0], val[1], val[2], val[1]];\n        }\n        return val;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {boolean} condition\n     * @param {string} message\n     */\n    function assert(condition, message) {\n        if (!condition) {\n            throw new Error(message);\n        }\n    }\n\n    var primitiveKey = '__ec_primitive__';\n    /**\n     * Set an object as primitive to be ignored traversing children in clone or merge\n     */\n    function setAsPrimitive(obj) {\n        obj[primitiveKey] = true;\n    }\n\n    function isPrimitive(obj) {\n        return obj[primitiveKey];\n    }\n\n    /**\n     * @constructor\n     * @param {Object} obj Only apply `ownProperty`.\n     */\n    function HashMap(obj) {\n        obj && each(obj, function (value, key) {\n            this.set(key, value);\n        }, this);\n    }\n\n    // Add prefix to avoid conflict with Object.prototype.\n    var HASH_MAP_PREFIX = '_ec_';\n    var HASH_MAP_PREFIX_LENGTH = 4;\n\n    HashMap.prototype = {\n        constructor: HashMap,\n        // Do not provide `has` method to avoid defining what is `has`.\n        // (We usually treat `null` and `undefined` as the same, different\n        // from ES6 Map).\n        get: function (key) {\n            return this[HASH_MAP_PREFIX + key];\n        },\n        set: function (key, value) {\n            this[HASH_MAP_PREFIX + key] = value;\n            // Comparing with invocation chaining, `return value` is more commonly\n            // used in this case: `var someVal = map.set('a', genVal());`\n            return value;\n        },\n        // Although util.each can be performed on this hashMap directly, user\n        // should not use the exposed keys, who are prefixed.\n        each: function (cb, context) {\n            context !== void 0 && (cb = bind(cb, context));\n            for (var prefixedKey in this) {\n                this.hasOwnProperty(prefixedKey)\n                    && cb(this[prefixedKey], prefixedKey.slice(HASH_MAP_PREFIX_LENGTH));\n            }\n        },\n        // Do not use this method if performance sensitive.\n        removeKey: function (key) {\n            delete this[HASH_MAP_PREFIX + key];\n        }\n    };\n\n    function createHashMap(obj) {\n        return new HashMap(obj);\n    }\n\n    var util = {\n        inherits: inherits,\n        mixin: mixin,\n        clone: clone,\n        merge: merge,\n        mergeAll: mergeAll,\n        extend: extend,\n        defaults: defaults,\n        getContext: getContext,\n        createCanvas: createCanvas,\n        indexOf: indexOf,\n        slice: slice,\n        find: find,\n        isArrayLike: isArrayLike,\n        each: each,\n        map: map,\n        reduce: reduce,\n        filter: filter,\n        bind: bind,\n        curry: curry,\n        isArray: isArray,\n        isString: isString,\n        isObject: isObject,\n        isFunction: isFunction,\n        isBuiltInObject: isBuiltInObject,\n        isDom: isDom,\n        eqNaN: eqNaN,\n        retrieve: retrieve,\n        retrieve2: retrieve2,\n        retrieve3: retrieve3,\n        assert: assert,\n        setAsPrimitive: setAsPrimitive,\n        createHashMap: createHashMap,\n        normalizeCssArray: normalizeCssArray,\n        noop: function () {}\n    };\n    module.exports = util;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/util.js\n// module id = 970\n// module chunks = 0 1 2","// Enable DEV mode when using source code without build. which has no __DEV__ variable\n// In build process 'typeof __DEV__' will be replace with 'boolean'\n// So this code will be removed or disabled anyway after built.\nif (typeof __DEV__ === 'undefined') {\n    // In browser\n    if (typeof window !== 'undefined') {\n        window.__DEV__ = true;\n    }\n    // In node\n    else if (typeof global !== 'undefined') {\n        global.__DEV__ = true;\n    }\n}\n\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\n\n/**\n * @module echarts\n */\n\n\n    var env = require('zrender/lib/core/env');\n\n    var GlobalModel = require('./model/Global');\n    var ExtensionAPI = require('./ExtensionAPI');\n    var CoordinateSystemManager = require('./CoordinateSystem');\n    var OptionManager = require('./model/OptionManager');\n    var backwardCompat = require('./preprocessor/backwardCompat');\n\n    var ComponentModel = require('./model/Component');\n    var SeriesModel = require('./model/Series');\n\n    var ComponentView = require('./view/Component');\n    var ChartView = require('./view/Chart');\n    var graphic = require('./util/graphic');\n    var modelUtil = require('./util/model');\n    var throttle = require('./util/throttle');\n\n    var zrender = require('zrender/lib/zrender');\n    var zrUtil = require('zrender/lib/core/util');\n    var colorTool = require('zrender/lib/tool/color');\n    var Eventful = require('zrender/lib/mixin/Eventful');\n    var timsort = require('zrender/lib/core/timsort');\n\n\n    var each = zrUtil.each;\n    var parseClassType = ComponentModel.parseClassType;\n\n    var PRIORITY_PROCESSOR_FILTER = 1000;\n    var PRIORITY_PROCESSOR_STATISTIC = 5000;\n\n\n    var PRIORITY_VISUAL_LAYOUT = 1000;\n    var PRIORITY_VISUAL_GLOBAL = 2000;\n    var PRIORITY_VISUAL_CHART = 3000;\n    var PRIORITY_VISUAL_COMPONENT = 4000;\n    // FIXME\n    // necessary?\n    var PRIORITY_VISUAL_BRUSH = 5000;\n\n    // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n    // where they must not be invoked nestedly, except the only case: invoke\n    // dispatchAction with updateMethod \"none\" in main process.\n    // This flag is used to carry out this rule.\n    // All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n    var IN_MAIN_PROCESS = '__flagInMainProcess';\n    var HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\n    var OPTION_UPDATED = '__optionUpdated';\n    var ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\n\n    function createRegisterEventWithLowercaseName(method) {\n        return function (eventName, handler, context) {\n            // Event name is all lowercase\n            eventName = eventName && eventName.toLowerCase();\n            Eventful.prototype[method].call(this, eventName, handler, context);\n        };\n    }\n\n    /**\n     * @module echarts~MessageCenter\n     */\n    function MessageCenter() {\n        Eventful.call(this);\n    }\n    MessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\n    MessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\n    MessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\n    zrUtil.mixin(MessageCenter, Eventful);\n\n    /**\n     * @module echarts~ECharts\n     */\n    function ECharts(dom, theme, opts) {\n        opts = opts || {};\n\n        // Get theme by name\n        if (typeof theme === 'string') {\n            theme = themeStorage[theme];\n        }\n\n        /**\n         * @type {string}\n         */\n        this.id;\n        /**\n         * Group id\n         * @type {string}\n         */\n        this.group;\n        /**\n         * @type {HTMLElement}\n         * @private\n         */\n        this._dom = dom;\n        /**\n         * @type {module:zrender/ZRender}\n         * @private\n         */\n        var zr = this._zr = zrender.init(dom, {\n            renderer: opts.renderer || 'canvas',\n            devicePixelRatio: opts.devicePixelRatio,\n            width: opts.width,\n            height: opts.height\n        });\n\n        /**\n         * Expect 60 pfs.\n         * @type {Function}\n         * @private\n         */\n        this._throttledZrFlush = throttle.throttle(zrUtil.bind(zr.flush, zr), 17);\n\n        var theme = zrUtil.clone(theme);\n        theme && backwardCompat(theme, true);\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._theme = theme;\n\n        /**\n         * @type {Array.<module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsMap = {};\n\n        /**\n         * @type {module:echarts/CoordinateSystem}\n         * @private\n         */\n        this._coordSysMgr = new CoordinateSystemManager();\n\n        /**\n         * @type {module:echarts/ExtensionAPI}\n         * @private\n         */\n        this._api = createExtensionAPI(this);\n\n        Eventful.call(this);\n\n        /**\n         * @type {module:echarts~MessageCenter}\n         * @private\n         */\n        this._messageCenter = new MessageCenter();\n\n        // Init mouse events\n        this._initEvents();\n\n        // In case some people write `window.onresize = chart.resize`\n        this.resize = zrUtil.bind(this.resize, this);\n\n        // Can't dispatch action during rendering procedure\n        this._pendingActions = [];\n        // Sort on demand\n        function prioritySortFunc(a, b) {\n            return a.prio - b.prio;\n        }\n        timsort(visualFuncs, prioritySortFunc);\n        timsort(dataProcessorFuncs, prioritySortFunc);\n\n        zr.animation.on('frame', this._onframe, this);\n\n        // ECharts instance can be used as value.\n        zrUtil.setAsPrimitive(this);\n    }\n\n    var echartsProto = ECharts.prototype;\n\n    echartsProto._onframe = function () {\n        // Lazy update\n        if (this[OPTION_UPDATED]) {\n            var silent = this[OPTION_UPDATED].silent;\n\n            this[IN_MAIN_PROCESS] = true;\n\n            updateMethods.prepareAndUpdate.call(this);\n\n            this[IN_MAIN_PROCESS] = false;\n\n            this[OPTION_UPDATED] = false;\n\n            flushPendingActions.call(this, silent);\n\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n    /**\n     * @return {HTMLElement}\n     */\n    echartsProto.getDom = function () {\n        return this._dom;\n    };\n\n    /**\n     * @return {module:zrender~ZRender}\n     */\n    echartsProto.getZr = function () {\n        return this._zr;\n    };\n\n    /**\n     * Usage:\n     * chart.setOption(option, notMerge, lazyUpdate);\n     * chart.setOption(option, {\n     *     notMerge: ...,\n     *     lazyUpdate: ...,\n     *     silent: ...\n     * });\n     *\n     * @param {Object} option\n     * @param {Object|boolean} [opts] opts or notMerge.\n     * @param {boolean} [opts.notMerge=false]\n     * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n     */\n    echartsProto.setOption = function (option, notMerge, lazyUpdate) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`setOption` should not be called during main process.');\n        }\n\n        var silent;\n        if (zrUtil.isObject(notMerge)) {\n            lazyUpdate = notMerge.lazyUpdate;\n            silent = notMerge.silent;\n            notMerge = notMerge.notMerge;\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        if (!this._model || notMerge) {\n            var optionManager = new OptionManager(this._api);\n            var theme = this._theme;\n            var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n            ecModel.init(null, null, theme, optionManager);\n        }\n\n        this._model.setOption(option, optionPreprocessorFuncs);\n\n        if (lazyUpdate) {\n            this[OPTION_UPDATED] = {silent: silent};\n            this[IN_MAIN_PROCESS] = false;\n        }\n        else {\n            updateMethods.prepareAndUpdate.call(this);\n            // Ensure zr refresh sychronously, and then pixel in canvas can be\n            // fetched after `setOption`.\n            this._zr.flush();\n\n            this[OPTION_UPDATED] = false;\n            this[IN_MAIN_PROCESS] = false;\n\n            flushPendingActions.call(this, silent);\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n\n    /**\n     * @DEPRECATED\n     */\n    echartsProto.setTheme = function () {\n        console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n    };\n\n    /**\n     * @return {module:echarts/model/Global}\n     */\n    echartsProto.getModel = function () {\n        return this._model;\n    };\n\n    /**\n     * @return {Object}\n     */\n    echartsProto.getOption = function () {\n        return this._model && this._model.getOption();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getWidth = function () {\n        return this._zr.getWidth();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getHeight = function () {\n        return this._zr.getHeight();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getDevicePixelRatio = function () {\n        return this._zr.painter.dpr || window.devicePixelRatio || 1;\n    };\n\n    /**\n     * Get canvas which has all thing rendered\n     * @param {Object} opts\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getRenderedCanvas = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        opts = opts || {};\n        opts.pixelRatio = opts.pixelRatio || 1;\n        opts.backgroundColor = opts.backgroundColor\n            || this._model.get('backgroundColor');\n        var zr = this._zr;\n        var list = zr.storage.getDisplayList();\n        // Stop animations\n        zrUtil.each(list, function (el) {\n            el.stopAnimation(true);\n        });\n        return zr.painter.getRenderedCanvas(opts);\n    };\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     * @param {string} [opts.excludeComponents]\n     */\n    echartsProto.getDataURL = function (opts) {\n        opts = opts || {};\n        var excludeComponents = opts.excludeComponents;\n        var ecModel = this._model;\n        var excludesComponentViews = [];\n        var self = this;\n\n        each(excludeComponents, function (componentType) {\n            ecModel.eachComponent({\n                mainType: componentType\n            }, function (component) {\n                var view = self._componentsMap[component.__viewId];\n                if (!view.group.ignore) {\n                    excludesComponentViews.push(view);\n                    view.group.ignore = true;\n                }\n            });\n        });\n\n        var url = this.getRenderedCanvas(opts).toDataURL(\n            'image/' + (opts && opts.type || 'png')\n        );\n\n        each(excludesComponentViews, function (view) {\n            view.group.ignore = false;\n        });\n        return url;\n    };\n\n\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getConnectedDataURL = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        var groupId = this.group;\n        var mathMin = Math.min;\n        var mathMax = Math.max;\n        var MAX_NUMBER = Infinity;\n        if (connectedGroups[groupId]) {\n            var left = MAX_NUMBER;\n            var top = MAX_NUMBER;\n            var right = -MAX_NUMBER;\n            var bottom = -MAX_NUMBER;\n            var canvasList = [];\n            var dpr = (opts && opts.pixelRatio) || 1;\n\n            zrUtil.each(instances, function (chart, id) {\n                if (chart.group === groupId) {\n                    var canvas = chart.getRenderedCanvas(\n                        zrUtil.clone(opts)\n                    );\n                    var boundingRect = chart.getDom().getBoundingClientRect();\n                    left = mathMin(boundingRect.left, left);\n                    top = mathMin(boundingRect.top, top);\n                    right = mathMax(boundingRect.right, right);\n                    bottom = mathMax(boundingRect.bottom, bottom);\n                    canvasList.push({\n                        dom: canvas,\n                        left: boundingRect.left,\n                        top: boundingRect.top\n                    });\n                }\n            });\n\n            left *= dpr;\n            top *= dpr;\n            right *= dpr;\n            bottom *= dpr;\n            var width = right - left;\n            var height = bottom - top;\n            var targetCanvas = zrUtil.createCanvas();\n            targetCanvas.width = width;\n            targetCanvas.height = height;\n            var zr = zrender.init(targetCanvas);\n\n            each(canvasList, function (item) {\n                var img = new graphic.Image({\n                    style: {\n                        x: item.left * dpr - left,\n                        y: item.top * dpr - top,\n                        image: item.dom\n                    }\n                });\n                zr.add(img);\n            });\n            zr.refreshImmediately();\n\n            return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n        }\n        else {\n            return this.getDataURL(opts);\n        }\n    };\n\n    /**\n     * Convert from logical coordinate system to pixel coordinate system.\n     * See CoordinateSystem#convertToPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId, geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n\n    /**\n     * Convert from pixel coordinate system to logical coordinate system.\n     * See CoordinateSystem#convertFromPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\n    function doConvertPixel(methodName, finder, value) {\n        var ecModel = this._model;\n        var coordSysList = this._coordSysMgr.getCoordinateSystems();\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        for (var i = 0; i < coordSysList.length; i++) {\n            var coordSys = coordSysList[i];\n            if (coordSys[methodName]\n                && (result = coordSys[methodName](ecModel, finder, value)) != null\n            ) {\n                return result;\n            }\n        }\n\n        if (__DEV__) {\n            console.warn(\n                'No coordinate system that supports ' + methodName + ' found by the given finder.'\n            );\n        }\n    }\n\n    /**\n     * Is the specified coordinate systems or components contain the given pixel point.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {boolean} result\n     */\n    echartsProto.containPixel = function (finder, value) {\n        var ecModel = this._model;\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        zrUtil.each(finder, function (models, key) {\n            key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n                var coordSys = model.coordinateSystem;\n                if (coordSys && coordSys.containPoint) {\n                    result |= !!coordSys.containPoint(value);\n                }\n                else if (key === 'seriesModels') {\n                    var view = this._chartsMap[model.__viewId];\n                    if (view && view.containPoint) {\n                        result |= view.containPoint(value, model);\n                    }\n                    else {\n                        if (__DEV__) {\n                            console.warn(key + ': ' + (view\n                                ? 'The found component do not support containPoint.'\n                                : 'No view mapping to the found component.'\n                            ));\n                        }\n                    }\n                }\n                else {\n                    if (__DEV__) {\n                        console.warn(key + ': containPoint is not supported');\n                    }\n                }\n            }, this);\n        }, this);\n\n        return !!result;\n    };\n\n    /**\n     * Get visual from series or data.\n     * @param {string|Object} finder\n     *        If string, e.g., 'series', means {seriesIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            dataIndex / dataIndexInside\n     *        }\n     *        If dataIndex is not specified, series visual will be fetched,\n     *        but not data item visual.\n     *        If all of seriesIndex, seriesId, seriesName are not specified,\n     *        visual will be fetched from first series.\n     * @param {string} visualType 'color', 'symbol', 'symbolSize'\n     */\n    echartsProto.getVisual = function (finder, visualType) {\n        var ecModel = this._model;\n\n        finder = modelUtil.parseFinder(ecModel, finder, {defaultMainType: 'series'});\n\n        var seriesModel = finder.seriesModel;\n\n        if (__DEV__) {\n            if (!seriesModel) {\n                console.warn('There is no specified seires model');\n            }\n        }\n\n        var data = seriesModel.getData();\n\n        var dataIndexInside = finder.hasOwnProperty('dataIndexInside')\n            ? finder.dataIndexInside\n            : finder.hasOwnProperty('dataIndex')\n            ? data.indexOfRawIndex(finder.dataIndex)\n            : null;\n\n        return dataIndexInside != null\n            ? data.getItemVisual(dataIndexInside, visualType)\n            : data.getVisual(visualType);\n    };\n\n    /**\n     * Get view of corresponding component model\n     * @param  {module:echarts/model/Component} componentModel\n     * @return {module:echarts/view/Component}\n     */\n    echartsProto.getViewOfComponentModel = function (componentModel) {\n        return this._componentsMap[componentModel.__viewId];\n    };\n\n    /**\n     * Get view of corresponding series model\n     * @param  {module:echarts/model/Series} seriesModel\n     * @return {module:echarts/view/Chart}\n     */\n    echartsProto.getViewOfSeriesModel = function (seriesModel) {\n        return this._chartsMap[seriesModel.__viewId];\n    };\n\n\n    var updateMethods = {\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        update: function (payload) {\n            // console.profile && console.profile('update');\n\n            var ecModel = this._model;\n            var api = this._api;\n            var coordSysMgr = this._coordSysMgr;\n            var zr = this._zr;\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            // Fixme First time update ?\n            ecModel.restoreData();\n\n            // TODO\n            // Save total ecModel here for undo/redo (after restoring data and before processing data).\n            // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n\n            // Create new coordinate system each update\n            // In LineView may save the old coordinate system and use it to get the orignal point\n            coordSysMgr.create(this._model, this._api);\n\n            processData.call(this, ecModel, api);\n\n            stackSeriesData.call(this, ecModel);\n\n            coordSysMgr.update(ecModel, api);\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            doRender.call(this, ecModel, payload);\n\n            // Set background\n            var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n\n            var painter = zr.painter;\n            // TODO all use clearColor ?\n            if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n                zr.configLayer(0, {\n                    clearColor: backgroundColor\n                });\n            }\n            else {\n                // In IE8\n                if (!env.canvasSupported) {\n                    var colorArr = colorTool.parse(backgroundColor);\n                    backgroundColor = colorTool.stringify(colorArr, 'rgb');\n                    if (colorArr[3] === 0) {\n                        backgroundColor = 'transparent';\n                    }\n                }\n                if (backgroundColor.colorStops || backgroundColor.image) {\n                    // Gradient background\n                    // FIXME Fixed layer？\n                    zr.configLayer(0, {\n                        clearColor: backgroundColor\n                    });\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n\n                    this._dom.style.background = 'transparent';\n                }\n                else {\n                    if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n                        zr.configLayer(0, {\n                            clearColor: null\n                        });\n                    }\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n\n                    this._dom.style.background = backgroundColor;\n                }\n            }\n\n            each(postUpdateFuncs, function (func) {\n                func(ecModel, api);\n            });\n\n            // console.profile && console.profileEnd('update');\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateView: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateVisual: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload, true);\n\n            invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateLayout: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            doLayout.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        prepareAndUpdate: function (payload) {\n            var ecModel = this._model;\n\n            prepareView.call(this, 'component', ecModel);\n\n            prepareView.call(this, 'chart', ecModel);\n\n            updateMethods.update.call(this, payload);\n        }\n    };\n\n    /**\n     * @private\n     */\n    function updateDirectly(ecIns, method, payload, mainType, subType) {\n        var ecModel = ecIns._model;\n\n        // broadcast\n        if (!mainType) {\n            each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n            return;\n        }\n\n        var query = {};\n        query[mainType + 'Id'] = payload[mainType + 'Id'];\n        query[mainType + 'Index'] = payload[mainType + 'Index'];\n        query[mainType + 'Name'] = payload[mainType + 'Name'];\n\n        var condition = {mainType: mainType, query: query};\n        subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n        // If dispatchAction before setOption, do nothing.\n        ecModel && ecModel.eachComponent(condition, function (model, index) {\n            callView(ecIns[\n                mainType === 'series' ? '_chartsMap' : '_componentsMap'\n            ][model.__viewId]);\n        }, ecIns);\n\n        function callView(view) {\n            view && view.__alive && view[method] && view[method](\n                view.__model, ecModel, ecIns._api, payload\n            );\n        }\n    }\n\n    /**\n     * Resize the chart\n     * @param {Object} opts\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @param {boolean} [opts.silent=false]\n     */\n    echartsProto.resize = function (opts) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`resize` should not be called during main process.');\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        this._zr.resize(opts);\n\n        var optionChanged = this._model && this._model.resetOption('media');\n        var updateMethod = optionChanged ? 'prepareAndUpdate' : 'update';\n\n        updateMethods[updateMethod].call(this);\n\n        // Resize loading effect\n        this._loadingFX && this._loadingFX.resize();\n\n        this[IN_MAIN_PROCESS] = false;\n\n        var silent = opts && opts.silent;\n\n        flushPendingActions.call(this, silent);\n\n        triggerUpdatedEvent.call(this, silent);\n    };\n\n    /**\n     * Show loading effect\n     * @param  {string} [name='default']\n     * @param  {Object} [cfg]\n     */\n    echartsProto.showLoading = function (name, cfg) {\n        if (zrUtil.isObject(name)) {\n            cfg = name;\n            name = '';\n        }\n        name = name || 'default';\n\n        this.hideLoading();\n        if (!loadingEffects[name]) {\n            if (__DEV__) {\n                console.warn('Loading effects ' + name + ' not exists.');\n            }\n            return;\n        }\n        var el = loadingEffects[name](this._api, cfg);\n        var zr = this._zr;\n        this._loadingFX = el;\n\n        zr.add(el);\n    };\n\n    /**\n     * Hide loading effect\n     */\n    echartsProto.hideLoading = function () {\n        this._loadingFX && this._zr.remove(this._loadingFX);\n        this._loadingFX = null;\n    };\n\n    /**\n     * @param {Object} eventObj\n     * @return {Object}\n     */\n    echartsProto.makeActionFromEvent = function (eventObj) {\n        var payload = zrUtil.extend({}, eventObj);\n        payload.type = eventActionMap[eventObj.type];\n        return payload;\n    };\n\n    /**\n     * @pubilc\n     * @param {Object} payload\n     * @param {string} [payload.type] Action type\n     * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n     * @param {boolean} [opt.silent=false] Whether trigger events.\n     * @param {boolean} [opt.flush=undefined]\n     *                  true: Flush immediately, and then pixel in canvas can be fetched\n     *                      immediately. Caution: it might affect performance.\n     *                  false: Not not flush.\n     *                  undefined: Auto decide whether perform flush.\n     */\n    echartsProto.dispatchAction = function (payload, opt) {\n        if (!zrUtil.isObject(opt)) {\n            opt = {silent: !!opt};\n        }\n\n        if (!actions[payload.type]) {\n            return;\n        }\n\n        // Avoid dispatch action before setOption. Especially in `connect`.\n        if (!this._model) {\n            return;\n        }\n\n        // May dispatchAction in rendering procedure\n        if (this[IN_MAIN_PROCESS]) {\n            this._pendingActions.push(payload);\n            return;\n        }\n\n        doDispatchAction.call(this, payload, opt.silent);\n\n        if (opt.flush) {\n            this._zr.flush(true);\n        }\n        else if (opt.flush !== false && env.browser.weChat) {\n            // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n            // hang when sliding page (on touch event), which cause that zr does not\n            // refresh util user interaction finished, which is not expected.\n            // But `dispatchAction` may be called too frequently when pan on touch\n            // screen, which impacts performance if do not throttle them.\n            this._throttledZrFlush();\n        }\n\n        flushPendingActions.call(this, opt.silent);\n\n        triggerUpdatedEvent.call(this, opt.silent);\n    };\n\n    function doDispatchAction(payload, silent) {\n        var payloadType = payload.type;\n        var escapeConnect = payload.escapeConnect;\n        var actionWrap = actions[payloadType];\n        var actionInfo = actionWrap.actionInfo;\n\n        var cptType = (actionInfo.update || 'update').split(':');\n        var updateMethod = cptType.pop();\n        cptType = cptType[0] != null && parseClassType(cptType[0]);\n\n        this[IN_MAIN_PROCESS] = true;\n\n        var payloads = [payload];\n        var batched = false;\n        // Batch action\n        if (payload.batch) {\n            batched = true;\n            payloads = zrUtil.map(payload.batch, function (item) {\n                item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n                item.batch = null;\n                return item;\n            });\n        }\n\n        var eventObjBatch = [];\n        var eventObj;\n        var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n\n        each(payloads, function (batchItem) {\n            // Action can specify the event by return it.\n            eventObj = actionWrap.action(batchItem, this._model, this._api);\n            // Emit event outside\n            eventObj = eventObj || zrUtil.extend({}, batchItem);\n            // Convert type to eventType\n            eventObj.type = actionInfo.event || eventObj.type;\n            eventObjBatch.push(eventObj);\n\n            // light update does not perform data process, layout and visual.\n            if (isHighDown) {\n                // method, payload, mainType, subType\n                updateDirectly(this, updateMethod, batchItem, 'series');\n            }\n            else if (cptType) {\n                updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n            }\n        }, this);\n\n        if (updateMethod !== 'none' && !isHighDown && !cptType) {\n            // Still dirty\n            if (this[OPTION_UPDATED]) {\n                // FIXME Pass payload ?\n                updateMethods.prepareAndUpdate.call(this, payload);\n                this[OPTION_UPDATED] = false;\n            }\n            else {\n                updateMethods[updateMethod].call(this, payload);\n            }\n        }\n\n        // Follow the rule of action batch\n        if (batched) {\n            eventObj = {\n                type: actionInfo.event || payloadType,\n                escapeConnect: escapeConnect,\n                batch: eventObjBatch\n            };\n        }\n        else {\n            eventObj = eventObjBatch[0];\n        }\n\n        this[IN_MAIN_PROCESS] = false;\n\n        !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n    }\n\n    function flushPendingActions(silent) {\n        var pendingActions = this._pendingActions;\n        while (pendingActions.length) {\n            var payload = pendingActions.shift();\n            doDispatchAction.call(this, payload, silent);\n        }\n    }\n\n    function triggerUpdatedEvent(silent) {\n        !silent && this.trigger('updated');\n    }\n\n    /**\n     * Register event\n     * @method\n     */\n    echartsProto.on = createRegisterEventWithLowercaseName('on');\n    echartsProto.off = createRegisterEventWithLowercaseName('off');\n    echartsProto.one = createRegisterEventWithLowercaseName('one');\n\n    /**\n     * @param {string} methodName\n     * @private\n     */\n    function invokeUpdateMethod(methodName, ecModel, payload) {\n        var api = this._api;\n\n        // Update all components\n        each(this._componentsViews, function (component) {\n            var componentModel = component.__model;\n            component[methodName](componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, component);\n        }, this);\n\n        // Upate all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chart = this._chartsMap[seriesModel.__viewId];\n            chart[methodName](seriesModel, ecModel, api, payload);\n\n            updateZ(seriesModel, chart);\n\n            updateProgressiveAndBlend(seriesModel, chart);\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Post render\n        each(postUpdateFuncs, function (func) {\n            func(ecModel, api);\n        });\n    }\n\n    /**\n     * Prepare view instances of charts and components\n     * @param  {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function prepareView(type, ecModel) {\n        var isComponent = type === 'component';\n        var viewList = isComponent ? this._componentsViews : this._chartsViews;\n        var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n        var zr = this._zr;\n\n        for (var i = 0; i < viewList.length; i++) {\n            viewList[i].__alive = false;\n        }\n\n        ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n            if (isComponent) {\n                if (componentType === 'series') {\n                    return;\n                }\n            }\n            else {\n                model = componentType;\n            }\n\n            // Consider: id same and type changed.\n            var viewId = '_ec_' + model.id + '_' + model.type;\n            var view = viewMap[viewId];\n            if (!view) {\n                var classType = parseClassType(model.type);\n                var Clazz = isComponent\n                    ? ComponentView.getClass(classType.main, classType.sub)\n                    : ChartView.getClass(classType.sub);\n                if (Clazz) {\n                    view = new Clazz();\n                    view.init(ecModel, this._api);\n                    viewMap[viewId] = view;\n                    viewList.push(view);\n                    zr.add(view.group);\n                }\n                else {\n                    // Error\n                    return;\n                }\n            }\n\n            model.__viewId = view.__id = viewId;\n            view.__alive = true;\n            view.__model = model;\n            view.group.__ecComponentInfo = {\n                mainType: model.mainType,\n                index: model.componentIndex\n            };\n        }, this);\n\n        for (var i = 0; i < viewList.length;) {\n            var view = viewList[i];\n            if (!view.__alive) {\n                zr.remove(view.group);\n                view.dispose(ecModel, this._api);\n                viewList.splice(i, 1);\n                delete viewMap[view.__id];\n                view.__id = view.group.__ecComponentInfo = null;\n            }\n            else {\n                i++;\n            }\n        }\n    }\n\n    /**\n     * Processor data in each series\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function processData(ecModel, api) {\n        each(dataProcessorFuncs, function (process) {\n            process.func(ecModel, api);\n        });\n    }\n\n    /**\n     * @private\n     */\n    function stackSeriesData(ecModel) {\n        var stackedDataMap = {};\n        ecModel.eachSeries(function (series) {\n            var stack = series.get('stack');\n            var data = series.getData();\n            if (stack && data.type === 'list') {\n                var previousStack = stackedDataMap[stack];\n                // Avoid conflict with Object.prototype\n                if (stackedDataMap.hasOwnProperty(stack) && previousStack) {\n                    data.stackedOn = previousStack;\n                }\n                stackedDataMap[stack] = data;\n            }\n        });\n    }\n\n    /**\n     * Layout before each chart render there series, special visual encoding stage\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function doLayout(ecModel, payload) {\n        var api = this._api;\n        each(visualFuncs, function (visual) {\n            if (visual.isLayout) {\n                visual.func(ecModel, api, payload);\n            }\n        });\n    }\n\n    /**\n     * Encode visual infomation from data after data processing\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @param {object} layout\n     * @param {boolean} [excludesLayout]\n     * @private\n     */\n    function doVisualEncoding(ecModel, payload, excludesLayout) {\n        var api = this._api;\n        ecModel.clearColorPalette();\n        ecModel.eachSeries(function (seriesModel) {\n            seriesModel.clearColorPalette();\n        });\n        each(visualFuncs, function (visual) {\n            (!excludesLayout || !visual.isLayout)\n                && visual.func(ecModel, api, payload);\n        });\n    }\n\n    /**\n     * Render each chart and component\n     * @private\n     */\n    function doRender(ecModel, payload) {\n        var api = this._api;\n        // Render all components\n        each(this._componentsViews, function (componentView) {\n            var componentModel = componentView.__model;\n            componentView.render(componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, componentView);\n        }, this);\n\n        each(this._chartsViews, function (chart) {\n            chart.__alive = false;\n        }, this);\n\n        // Render all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chartView = this._chartsMap[seriesModel.__viewId];\n            chartView.__alive = true;\n            chartView.render(seriesModel, ecModel, api, payload);\n\n            chartView.group.silent = !!seriesModel.get('silent');\n\n            updateZ(seriesModel, chartView);\n\n            updateProgressiveAndBlend(seriesModel, chartView);\n\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Remove groups of unrendered charts\n        each(this._chartsViews, function (chart) {\n            if (!chart.__alive) {\n                chart.remove(ecModel, api);\n            }\n        }, this);\n    }\n\n    var MOUSE_EVENT_NAMES = [\n        'click', 'dblclick', 'mouseover', 'mouseout', 'mousemove',\n        'mousedown', 'mouseup', 'globalout', 'contextmenu'\n    ];\n    /**\n     * @private\n     */\n    echartsProto._initEvents = function () {\n        each(MOUSE_EVENT_NAMES, function (eveName) {\n            this._zr.on(eveName, function (e) {\n                var ecModel = this.getModel();\n                var el = e.target;\n                var params;\n\n                // no e.target when 'globalout'.\n                if (eveName === 'globalout') {\n                    params = {};\n                }\n                else if (el && el.dataIndex != null) {\n                    var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n                    params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n                }\n                // If element has custom eventData of components\n                else if (el && el.eventData) {\n                    params = zrUtil.extend({}, el.eventData);\n                }\n\n                if (params) {\n                    params.event = e;\n                    params.type = eveName;\n                    this.trigger(eveName, params);\n                }\n\n            }, this);\n        }, this);\n\n        each(eventActionMap, function (actionType, eventType) {\n            this._messageCenter.on(eventType, function (event) {\n                this.trigger(eventType, event);\n            }, this);\n        }, this);\n    };\n\n    /**\n     * @return {boolean}\n     */\n    echartsProto.isDisposed = function () {\n        return this._disposed;\n    };\n\n    /**\n     * Clear\n     */\n    echartsProto.clear = function () {\n        this.setOption({ series: [] }, true);\n    };\n\n    /**\n     * Dispose instance\n     */\n    echartsProto.dispose = function () {\n        if (this._disposed) {\n            if (__DEV__) {\n                console.warn('Instance ' + this.id + ' has been disposed');\n            }\n            return;\n        }\n        this._disposed = true;\n\n        var api = this._api;\n        var ecModel = this._model;\n\n        each(this._componentsViews, function (component) {\n            component.dispose(ecModel, api);\n        });\n        each(this._chartsViews, function (chart) {\n            chart.dispose(ecModel, api);\n        });\n\n        // Dispose after all views disposed\n        this._zr.dispose();\n\n        delete instances[this.id];\n    };\n\n    zrUtil.mixin(ECharts, Eventful);\n\n    function updateHoverLayerStatus(zr, ecModel) {\n        var storage = zr.storage;\n        var elCount = 0;\n        storage.traverse(function (el) {\n            if (!el.isGroup) {\n                elCount++;\n            }\n        });\n        if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n            storage.traverse(function (el) {\n                if (!el.isGroup) {\n                    el.useHoverLayer = true;\n                }\n            });\n        }\n    }\n\n    /**\n     * Update chart progressive and blend.\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateProgressiveAndBlend(seriesModel, chartView) {\n        // Progressive configuration\n        var elCount = 0;\n        chartView.group.traverse(function (el) {\n            if (el.type !== 'group' && !el.ignore) {\n                elCount++;\n            }\n        });\n        var frameDrawNum = +seriesModel.get('progressive');\n        var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n        if (needProgressive) {\n            chartView.group.traverse(function (el) {\n                // FIXME marker and other components\n                if (!el.isGroup) {\n                    el.progressive = needProgressive ?\n                        Math.floor(elCount++ / frameDrawNum) : -1;\n                    if (needProgressive) {\n                        el.stopAnimation(true);\n                    }\n                }\n            });\n        }\n\n        // Blend configration\n        var blendMode = seriesModel.get('blendMode') || null;\n        if (__DEV__) {\n            if (!env.canvasSupported && blendMode && blendMode !== 'source-over') {\n                console.warn('Only canvas support blendMode');\n            }\n        }\n        chartView.group.traverse(function (el) {\n            // FIXME marker and other components\n            if (!el.isGroup) {\n                el.setStyle('blend', blendMode);\n            }\n        });\n    }\n\n    /**\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateZ(model, view) {\n        var z = model.get('z');\n        var zlevel = model.get('zlevel');\n        // Set z and zlevel\n        view.group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n            }\n        });\n    }\n\n    function createExtensionAPI(ecInstance) {\n        var coordSysMgr = ecInstance._coordSysMgr;\n        return zrUtil.extend(new ExtensionAPI(ecInstance), {\n            // Inject methods\n            getCoordinateSystems: zrUtil.bind(\n                coordSysMgr.getCoordinateSystems, coordSysMgr\n            ),\n            getComponentByElement: function (el) {\n                while (el) {\n                    var modelInfo = el.__ecComponentInfo;\n                    if (modelInfo != null) {\n                        return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n                    }\n                    el = el.parent;\n                }\n            }\n        });\n    }\n\n    /**\n     * @type {Object} key: actionType.\n     * @inner\n     */\n    var actions = {};\n\n    /**\n     * Map eventType to actionType\n     * @type {Object}\n     */\n    var eventActionMap = {};\n\n    /**\n     * Data processor functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var dataProcessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var optionPreprocessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var postUpdateFuncs = [];\n\n    /**\n     * Visual encoding functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var visualFuncs = [];\n    /**\n     * Theme storage\n     * @type {Object.<key, Object>}\n     */\n    var themeStorage = {};\n    /**\n     * Loading effects\n     */\n    var loadingEffects = {};\n\n\n    var instances = {};\n    var connectedGroups = {};\n\n    var idBase = new Date() - 0;\n    var groupIdBase = new Date() - 0;\n    var DOM_ATTRIBUTE_KEY = '_echarts_instance_';\n\n    /**\n     * @alias module:echarts\n     */\n    var echarts = {\n        /**\n         * @type {number}\n         */\n        version: '3.7.2',\n        dependencies: {\n            zrender: '3.6.2'\n        }\n    };\n\n    function enableConnect(chart) {\n        var STATUS_PENDING = 0;\n        var STATUS_UPDATING = 1;\n        var STATUS_UPDATED = 2;\n        var STATUS_KEY = '__connectUpdateStatus';\n\n        function updateConnectedChartsStatus(charts, status) {\n            for (var i = 0; i < charts.length; i++) {\n                var otherChart = charts[i];\n                otherChart[STATUS_KEY] = status;\n            }\n        }\n\n        zrUtil.each(eventActionMap, function (actionType, eventType) {\n            chart._messageCenter.on(eventType, function (event) {\n                if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n                    if (event && event.escapeConnect) {\n                        return;\n                    }\n\n                    var action = chart.makeActionFromEvent(event);\n                    var otherCharts = [];\n\n                    zrUtil.each(instances, function (otherChart) {\n                        if (otherChart !== chart && otherChart.group === chart.group) {\n                            otherCharts.push(otherChart);\n                        }\n                    });\n\n                    updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n                    each(otherCharts, function (otherChart) {\n                        if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n                            otherChart.dispatchAction(action);\n                        }\n                    });\n                    updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n                }\n            });\n        });\n    }\n\n    /**\n     * @param {HTMLElement} dom\n     * @param {Object} [theme]\n     * @param {Object} opts\n     * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n     * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n     * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n     *                              Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n     *                               Can be 'auto' (the same as null/undefined)\n     */\n    echarts.init = function (dom, theme, opts) {\n        if (__DEV__) {\n            // Check version\n            if ((zrender.version.replace('.', '') - 0) < (echarts.dependencies.zrender.replace('.', '') - 0)) {\n                throw new Error(\n                    'ZRender ' + zrender.version\n                    + ' is too old for ECharts ' + echarts.version\n                    + '. Current version need ZRender '\n                    + echarts.dependencies.zrender + '+'\n                );\n            }\n\n            if (!dom) {\n                throw new Error('Initialize failed: invalid dom.');\n            }\n        }\n\n        var existInstance = echarts.getInstanceByDom(dom);\n        if (existInstance) {\n            if (__DEV__) {\n                console.warn('There is a chart instance already initialized on the dom.');\n            }\n            return existInstance;\n        }\n\n        if (__DEV__) {\n            if (zrUtil.isDom(dom)\n                && dom.nodeName.toUpperCase() !== 'CANVAS'\n                && (\n                    (!dom.clientWidth && (!opts || opts.width == null))\n                    || (!dom.clientHeight && (!opts || opts.height == null))\n                )\n            ) {\n                console.warn('Can\\'t get dom width or height');\n            }\n        }\n\n        var chart = new ECharts(dom, theme, opts);\n        chart.id = 'ec_' + idBase++;\n        instances[chart.id] = chart;\n\n        if (dom.setAttribute) {\n            dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n        }\n        else {\n            dom[DOM_ATTRIBUTE_KEY] = chart.id;\n        }\n\n        enableConnect(chart);\n\n        return chart;\n    };\n\n    /**\n     * @return {string|Array.<module:echarts~ECharts>} groupId\n     */\n    echarts.connect = function (groupId) {\n        // Is array of charts\n        if (zrUtil.isArray(groupId)) {\n            var charts = groupId;\n            groupId = null;\n            // If any chart has group\n            zrUtil.each(charts, function (chart) {\n                if (chart.group != null) {\n                    groupId = chart.group;\n                }\n            });\n            groupId = groupId || ('g_' + groupIdBase++);\n            zrUtil.each(charts, function (chart) {\n                chart.group = groupId;\n            });\n        }\n        connectedGroups[groupId] = true;\n        return groupId;\n    };\n\n    /**\n     * @DEPRECATED\n     * @return {string} groupId\n     */\n    echarts.disConnect = function (groupId) {\n        connectedGroups[groupId] = false;\n    };\n\n    /**\n     * @return {string} groupId\n     */\n    echarts.disconnect = echarts.disConnect;\n\n    /**\n     * Dispose a chart instance\n     * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n     */\n    echarts.dispose = function (chart) {\n        if (typeof chart === 'string') {\n            chart = instances[chart];\n        }\n        else if (!(chart instanceof ECharts)){\n            // Try to treat as dom\n            chart = echarts.getInstanceByDom(chart);\n        }\n        if ((chart instanceof ECharts) && !chart.isDisposed()) {\n            chart.dispose();\n        }\n    };\n\n    /**\n     * @param  {HTMLElement} dom\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceByDom = function (dom) {\n        var key;\n        if (dom.getAttribute) {\n            key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n        }\n        else {\n            key = dom[DOM_ATTRIBUTE_KEY];\n        }\n        return instances[key];\n    };\n\n    /**\n     * @param {string} key\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceById = function (key) {\n        return instances[key];\n    };\n\n    /**\n     * Register theme\n     */\n    echarts.registerTheme = function (name, theme) {\n        themeStorage[name] = theme;\n    };\n\n    /**\n     * Register option preprocessor\n     * @param {Function} preprocessorFunc\n     */\n    echarts.registerPreprocessor = function (preprocessorFunc) {\n        optionPreprocessorFuncs.push(preprocessorFunc);\n    };\n\n    /**\n     * @param {number} [priority=1000]\n     * @param {Function} processorFunc\n     */\n    echarts.registerProcessor = function (priority, processorFunc) {\n        if (typeof priority === 'function') {\n            processorFunc = priority;\n            priority = PRIORITY_PROCESSOR_FILTER;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown processor priority');\n            }\n        }\n        dataProcessorFuncs.push({\n            prio: priority,\n            func: processorFunc\n        });\n    };\n\n    /**\n     * Register postUpdater\n     * @param {Function} postUpdateFunc\n     */\n    echarts.registerPostUpdate = function (postUpdateFunc) {\n        postUpdateFuncs.push(postUpdateFunc);\n    };\n\n    /**\n     * Usage:\n     * registerAction('someAction', 'someEvent', function () { ... });\n     * registerAction('someAction', function () { ... });\n     * registerAction(\n     *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n     *     function () { ... }\n     * );\n     *\n     * @param {(string|Object)} actionInfo\n     * @param {string} actionInfo.type\n     * @param {string} [actionInfo.event]\n     * @param {string} [actionInfo.update]\n     * @param {string} [eventName]\n     * @param {Function} action\n     */\n    echarts.registerAction = function (actionInfo, eventName, action) {\n        if (typeof eventName === 'function') {\n            action = eventName;\n            eventName = '';\n        }\n        var actionType = zrUtil.isObject(actionInfo)\n            ? actionInfo.type\n            : ([actionInfo, actionInfo = {\n                event: eventName\n            }][0]);\n\n        // Event name is all lowercase\n        actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n        eventName = actionInfo.event;\n\n        // Validate action type and event name.\n        zrUtil.assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n        if (!actions[actionType]) {\n            actions[actionType] = {action: action, actionInfo: actionInfo};\n        }\n        eventActionMap[eventName] = actionType;\n    };\n\n    /**\n     * @param {string} type\n     * @param {*} CoordinateSystem\n     */\n    echarts.registerCoordinateSystem = function (type, CoordinateSystem) {\n        CoordinateSystemManager.register(type, CoordinateSystem);\n    };\n\n    /**\n     * Get dimensions of specified coordinate system.\n     * @param {string} type\n     * @return {Array.<string|Object>}\n     */\n    echarts.getCoordinateSystemDimensions = function (type) {\n        var coordSysCreator = CoordinateSystemManager.get(type);\n        if (coordSysCreator) {\n            return coordSysCreator.getDimensionsInfo\n                    ? coordSysCreator.getDimensionsInfo()\n                    : coordSysCreator.dimensions.slice();\n        }\n    };\n\n    /**\n     * Layout is a special stage of visual encoding\n     * Most visual encoding like color are common for different chart\n     * But each chart has it's own layout algorithm\n     *\n     * @param {number} [priority=1000]\n     * @param {Function} layoutFunc\n     */\n    echarts.registerLayout = function (priority, layoutFunc) {\n        if (typeof priority === 'function') {\n            layoutFunc = priority;\n            priority = PRIORITY_VISUAL_LAYOUT;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown layout priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: layoutFunc,\n            isLayout: true\n        });\n    };\n\n    /**\n     * @param {number} [priority=3000]\n     * @param {Function} visualFunc\n     */\n    echarts.registerVisual = function (priority, visualFunc) {\n        if (typeof priority === 'function') {\n            visualFunc = priority;\n            priority = PRIORITY_VISUAL_CHART;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown visual priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: visualFunc\n        });\n    };\n\n    /**\n     * @param {string} name\n     */\n    echarts.registerLoading = function (name, loadingFx) {\n        loadingEffects[name] = loadingFx;\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentModel = function (opts/*, superClass*/) {\n        // var Clazz = ComponentModel;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentView = function (opts/*, superClass*/) {\n        // var Clazz = ComponentView;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentView.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendSeriesModel = function (opts/*, superClass*/) {\n        // var Clazz = SeriesModel;\n        // if (superClass) {\n        //     superClass = 'series.' + superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return SeriesModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendChartView = function (opts/*, superClass*/) {\n        // var Clazz = ChartView;\n        // if (superClass) {\n        //     superClass = superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ChartView.getClass(classType.main, true);\n        // }\n        return ChartView.extend(opts);\n    };\n\n    /**\n     * ZRender need a canvas context to do measureText.\n     * But in node environment canvas may be created by node-canvas.\n     * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n     *\n     * Be careful of using it in the browser.\n     *\n     * @param {Function} creator\n     * @example\n     *     var Canvas = require('canvas');\n     *     var echarts = require('echarts');\n     *     echarts.setCanvasCreator(function () {\n     *         // Small size is enough.\n     *         return new Canvas(32, 32);\n     *     });\n     */\n    echarts.setCanvasCreator = function (creator) {\n        zrUtil.createCanvas = creator;\n    };\n\n    echarts.registerVisual(PRIORITY_VISUAL_GLOBAL, require('./visual/seriesColor'));\n    echarts.registerPreprocessor(backwardCompat);\n    echarts.registerLoading('default', require('./loading/default'));\n\n    // Default action\n    echarts.registerAction({\n        type: 'highlight',\n        event: 'highlight',\n        update: 'highlight'\n    }, zrUtil.noop);\n    echarts.registerAction({\n        type: 'downplay',\n        event: 'downplay',\n        update: 'downplay'\n    }, zrUtil.noop);\n\n    // --------\n    // Exports\n    // --------\n    echarts.zrender = zrender;\n\n    echarts.List = require('./data/List');\n    echarts.Model = require('./model/Model');\n\n    echarts.Axis = require('./coord/Axis');\n\n    echarts.graphic = require('./util/graphic');\n    echarts.number = require('./util/number');\n    echarts.format = require('./util/format');\n    echarts.throttle = throttle.throttle;\n    echarts.matrix = require('zrender/lib/core/matrix');\n    echarts.vector = require('zrender/lib/core/vector');\n    echarts.color = require('zrender/lib/tool/color');\n\n    echarts.util = {};\n    each([\n            'map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter',\n            'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction',\n            'extend', 'defaults', 'clone', 'merge'\n        ],\n        function (name) {\n            echarts.util[name] = zrUtil[name];\n        }\n    );\n\n    echarts.helper = require('./helper');\n\n\n    // PRIORITY\n    echarts.PRIORITY = {\n        PROCESSOR: {\n            FILTER: PRIORITY_PROCESSOR_FILTER,\n            STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n        },\n        VISUAL: {\n            LAYOUT: PRIORITY_VISUAL_LAYOUT,\n            GLOBAL: PRIORITY_VISUAL_GLOBAL,\n            CHART: PRIORITY_VISUAL_CHART,\n            COMPONENT: PRIORITY_VISUAL_COMPONENT,\n            BRUSH: PRIORITY_VISUAL_BRUSH\n        }\n    };\n\n    module.exports = echarts;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/echarts.js\n// module id = 971\n// module chunks = 0 1 2","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var pathTool = require('zrender/lib/tool/path');\n    var Path = require('zrender/lib/graphic/Path');\n    var colorTool = require('zrender/lib/tool/color');\n    var matrix = require('zrender/lib/core/matrix');\n    var vector = require('zrender/lib/core/vector');\n    var Transformable = require('zrender/lib/mixin/Transformable');\n    var BoundingRect = require('zrender/lib/core/BoundingRect');\n\n    var round = Math.round;\n    var mathMax = Math.max;\n    var mathMin = Math.min;\n\n    var EMPTY_OBJ = {};\n\n    var graphic = {};\n\n    graphic.Group = require('zrender/lib/container/Group');\n\n    graphic.Image = require('zrender/lib/graphic/Image');\n\n    graphic.Text = require('zrender/lib/graphic/Text');\n\n    graphic.Circle = require('zrender/lib/graphic/shape/Circle');\n\n    graphic.Sector = require('zrender/lib/graphic/shape/Sector');\n\n    graphic.Ring = require('zrender/lib/graphic/shape/Ring');\n\n    graphic.Polygon = require('zrender/lib/graphic/shape/Polygon');\n\n    graphic.Polyline = require('zrender/lib/graphic/shape/Polyline');\n\n    graphic.Rect = require('zrender/lib/graphic/shape/Rect');\n\n    graphic.Line = require('zrender/lib/graphic/shape/Line');\n\n    graphic.BezierCurve = require('zrender/lib/graphic/shape/BezierCurve');\n\n    graphic.Arc = require('zrender/lib/graphic/shape/Arc');\n\n    graphic.CompoundPath = require('zrender/lib/graphic/CompoundPath');\n\n    graphic.LinearGradient = require('zrender/lib/graphic/LinearGradient');\n\n    graphic.RadialGradient = require('zrender/lib/graphic/RadialGradient');\n\n    graphic.BoundingRect = BoundingRect;\n\n    /**\n     * Extend shape with parameters\n     */\n    graphic.extendShape = function (opts) {\n        return Path.extend(opts);\n    };\n\n    /**\n     * Extend path\n     */\n    graphic.extendPath = function (pathData, opts) {\n        return pathTool.extendFromString(pathData, opts);\n    };\n\n    /**\n     * Create a path element from path data string\n     * @param {string} pathData\n     * @param {Object} opts\n     * @param {module:zrender/core/BoundingRect} rect\n     * @param {string} [layout=cover] 'center' or 'cover'\n     */\n    graphic.makePath = function (pathData, opts, rect, layout) {\n        var path = pathTool.createFromString(pathData, opts);\n        var boundingRect = path.getBoundingRect();\n        if (rect) {\n            var aspect = boundingRect.width / boundingRect.height;\n\n            if (layout === 'center') {\n                // Set rect to center, keep width / height ratio.\n                var width = rect.height * aspect;\n                var height;\n                if (width <= rect.width) {\n                    height = rect.height;\n                }\n                else {\n                    width = rect.width;\n                    height = width / aspect;\n                }\n                var cx = rect.x + rect.width / 2;\n                var cy = rect.y + rect.height / 2;\n\n                rect.x = cx - width / 2;\n                rect.y = cy - height / 2;\n                rect.width = width;\n                rect.height = height;\n            }\n\n            graphic.resizePath(path, rect);\n        }\n        return path;\n    };\n\n    graphic.mergePath = pathTool.mergePath,\n\n    /**\n     * Resize a path to fit the rect\n     * @param {module:zrender/graphic/Path} path\n     * @param {Object} rect\n     */\n    graphic.resizePath = function (path, rect) {\n        if (!path.applyTransform) {\n            return;\n        }\n\n        var pathRect = path.getBoundingRect();\n\n        var m = pathRect.calculateTransform(rect);\n\n        path.applyTransform(m);\n    };\n\n    /**\n     * Sub pixel optimize line for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x1]\n     * @param {number} [param.shape.y1]\n     * @param {number} [param.shape.x2]\n     * @param {number} [param.shape.y2]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeLine = function (param) {\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n\n        if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n            shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n        }\n        if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n            shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n        }\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize rect for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x]\n     * @param {number} [param.shape.y]\n     * @param {number} [param.shape.width]\n     * @param {number} [param.shape.height]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeRect = function (param) {\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n        var originX = shape.x;\n        var originY = shape.y;\n        var originWidth = shape.width;\n        var originHeight = shape.height;\n        shape.x = subPixelOptimize(shape.x, lineWidth, true);\n        shape.y = subPixelOptimize(shape.y, lineWidth, true);\n        shape.width = Math.max(\n            subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x,\n            originWidth === 0 ? 0 : 1\n        );\n        shape.height = Math.max(\n            subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y,\n            originHeight === 0 ? 0 : 1\n        );\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize for canvas\n     *\n     * @param {number} position Coordinate, such as x, y\n     * @param {number} lineWidth Should be nonnegative integer.\n     * @param {boolean=} positiveOrNegative Default false (negative).\n     * @return {number} Optimized position.\n     */\n    var subPixelOptimize = graphic.subPixelOptimize = function (position, lineWidth, positiveOrNegative) {\n        // Assure that (position + lineWidth / 2) is near integer edge,\n        // otherwise line will be fuzzy in canvas.\n        var doubledPosition = round(position * 2);\n        return (doubledPosition + round(lineWidth)) % 2 === 0\n            ? doubledPosition / 2\n            : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n    };\n\n    function hasFillOrStroke(fillOrStroke) {\n        return fillOrStroke != null && fillOrStroke != 'none';\n    }\n\n    function liftColor(color) {\n        return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n    }\n\n    /**\n     * @private\n     */\n    function cacheElementStl(el) {\n        if (el.__hoverStlDirty) {\n            var stroke = el.style.stroke;\n            var fill = el.style.fill;\n\n            // Create hoverStyle on mouseover\n            var hoverStyle = el.__hoverStl;\n            hoverStyle.fill = hoverStyle.fill\n                || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n            hoverStyle.stroke = hoverStyle.stroke\n                || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n\n            var normalStyle = {};\n            for (var name in hoverStyle) {\n                // See comment in `doSingleEnterHover`.\n                if (hoverStyle[name] != null) {\n                    normalStyle[name] = el.style[name];\n                }\n            }\n\n            el.__normalStl = normalStyle;\n\n            el.__hoverStlDirty = false;\n        }\n    }\n\n    /**\n     * @private\n     */\n    function doSingleEnterHover(el) {\n        if (el.__isHover) {\n            return;\n        }\n\n        cacheElementStl(el);\n\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.addHover(el, el.__hoverStl);\n        }\n        else {\n            var style = el.style;\n            var insideRollbackOpt = style.insideRollbackOpt;\n\n            // Consider case: only `position: 'top'` is set on emphasis, then text\n            // color should be returned to `autoColor`, rather than remain '#fff'.\n            // So we should rollback then apply again after style merging.\n            insideRollbackOpt && rollbackInsideStyle(style);\n\n            // styles can be:\n            // {\n            //     label: {\n            //         normal: {\n            //             show: false,\n            //             position: 'outside',\n            //             fontSize: 18\n            //         },\n            //         emphasis: {\n            //             show: true\n            //         }\n            //     }\n            // },\n            // where properties of `emphasis` may not appear in `normal`. We previously use\n            // module:echarts/util/model#defaultEmphasis to merge `normal` to `emphasis`.\n            // But consider rich text and setOption in merge mode, it is impossible to cover\n            // all properties in merge. So we use merge mode when setting style here, where\n            // only properties that is not `null/undefined` can be set. The disadventage:\n            // null/undefined can not be used to remove style any more in `emphasis`.\n            style.extendFrom(el.__hoverStl);\n\n            // Do not save `insideRollback`.\n            if (insideRollbackOpt) {\n                applyInsideStyle(style, style.insideOriginalTextPosition, insideRollbackOpt);\n\n                // textFill may be rollbacked to null.\n                if (style.textFill == null) {\n                    style.textFill = insideRollbackOpt.autoColor;\n                }\n            }\n\n            el.dirty(false);\n            el.z2 += 1;\n        }\n\n        el.__isHover = true;\n    }\n\n    /**\n     * @inner\n     */\n    function doSingleLeaveHover(el) {\n        if (!el.__isHover) {\n            return;\n        }\n\n        var normalStl = el.__normalStl;\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.removeHover(el);\n        }\n        else {\n            // Consider null/undefined value, should use\n            // `setStyle` but not `extendFrom(stl, true)`.\n            normalStl && el.setStyle(normalStl);\n            el.z2 -= 1;\n        }\n\n        el.__isHover = false;\n    }\n\n    /**\n     * @inner\n     */\n    function doEnterHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleEnterHover(child);\n                }\n            })\n            : doSingleEnterHover(el);\n    }\n\n    function doLeaveHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleLeaveHover(child);\n                }\n            })\n            : doSingleLeaveHover(el);\n    }\n\n    /**\n     * @inner\n     */\n    function setElementHoverStl(el, hoverStl) {\n        // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n        // Often used when item group has a label element and it's hoverStyle is different\n        el.__hoverStl = el.hoverStyle || hoverStl || {};\n        el.__hoverStlDirty = true;\n\n        if (el.__isHover) {\n            cacheElementStl(el);\n        }\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOver(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOut(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doLeaveHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function enterEmphasis() {\n        this.__isEmphasis = true;\n        doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function leaveEmphasis() {\n        this.__isEmphasis = false;\n        doLeaveHover(this);\n    }\n\n    /**\n     * Set hover style of element.\n     * This method can be called repeatly without side-effects.\n     * @param {module:zrender/Element} el\n     * @param {Object} [hoverStyle]\n     * @param {Object} [opt]\n     * @param {boolean} [opt.hoverSilentOnTouch=false]\n     *        In touch device, mouseover event will be trigger on touchstart event\n     *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n     *        conviniently use hoverStyle when tap on touch screen without additional\n     *        code for compatibility.\n     *        But if the chart/component has select feature, which usually also use\n     *        hoverStyle, there might be conflict between 'select-highlight' and\n     *        'hover-highlight' especially when roam is enabled (see geo for example).\n     *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n     *        on touch device.\n     */\n    graphic.setHoverStyle = function (el, hoverStyle, opt) {\n        el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    setElementHoverStl(child, hoverStyle);\n                }\n            })\n            : setElementHoverStl(el, hoverStyle);\n\n        // Duplicated function will be auto-ignored, see Eventful.js.\n        el.on('mouseover', onElementMouseOver)\n          .on('mouseout', onElementMouseOut);\n\n        // Emphasis, normal can be triggered manually\n        el.on('emphasis', enterEmphasis)\n          .on('normal', leaveEmphasis);\n    };\n\n    /**\n     * @param {Object|module:zrender/graphic/Style} normalStyle\n     * @param {Object} emphasisStyle\n     * @param {module:echarts/model/Model} normalModel\n     * @param {module:echarts/model/Model} emphasisModel\n     * @param {Object} opt Check `opt` of `setTextStyleCommon` to find other props.\n     * @param {Object} [opt.defaultText]\n     * @param {module:echarts/model/Model} [opt.labelFetcher] Fetch text by\n     *      `opt.labelFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n     * @param {module:echarts/model/Model} [opt.labelDataIndex] Fetch text by\n     *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n     * @param {module:echarts/model/Model} [opt.labelDimIndex] Fetch text by\n     *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n     * @param {Object} [normalSpecified]\n     * @param {Object} [emphasisSpecified]\n     */\n    graphic.setLabelStyle = function (\n        normalStyle, emphasisStyle,\n        normalModel, emphasisModel,\n        opt,\n        normalSpecified, emphasisSpecified\n    ) {\n        opt = opt || EMPTY_OBJ;\n        var labelFetcher = opt.labelFetcher;\n        var labelDataIndex = opt.labelDataIndex;\n        var labelDimIndex = opt.labelDimIndex;\n\n        // This scenario, `label.normal.show = true; label.emphasis.show = false`,\n        // is not supported util someone requests.\n\n        var showNormal = normalModel.getShallow('show');\n        var showEmphasis = emphasisModel.getShallow('show');\n\n        // Consider performance, only fetch label when necessary.\n        // If `normal.show` is `false` and `emphasis.show` is `true` and `emphasis.formatter` is not set,\n        // label should be displayed, where text is fetched by `normal.formatter` or `opt.defaultText`.\n        var baseText = (showNormal || showEmphasis)\n            ? zrUtil.retrieve2(\n                labelFetcher\n                    ? labelFetcher.getFormattedLabel(labelDataIndex, 'normal', null, labelDimIndex)\n                    : null,\n                opt.defaultText\n            )\n            : null;\n        var normalStyleText = showNormal ? baseText : null;\n        var emphasisStyleText = showEmphasis\n            ? zrUtil.retrieve2(\n                labelFetcher\n                    ? labelFetcher.getFormattedLabel(labelDataIndex, 'emphasis', null, labelDimIndex)\n                    : null,\n                baseText\n            )\n            : null;\n\n        // Optimize: If style.text is null, text will not be drawn.\n        if (normalStyleText != null || emphasisStyleText != null) {\n            // Always set `textStyle` even if `normalStyle.text` is null, because default\n            // values have to be set on `normalStyle`.\n            // If we set default values on `emphasisStyle`, consider case:\n            // Firstly, `setOption(... label: {normal: {text: null}, emphasis: {show: true}} ...);`\n            // Secondly, `setOption(... label: {noraml: {show: true, text: 'abc', color: 'red'} ...);`\n            // Then the 'red' will not work on emphasis.\n            setTextStyle(normalStyle, normalModel, normalSpecified, opt);\n            setTextStyle(emphasisStyle, emphasisModel, emphasisSpecified, opt, true);\n        }\n\n        normalStyle.text = normalStyleText;\n        emphasisStyle.text = emphasisStyleText;\n    };\n\n    /**\n     * Set basic textStyle properties.\n     * @param {Object|module:zrender/graphic/Style} textStyle\n     * @param {module:echarts/model/Model} model\n     * @param {Object} [specifiedTextStyle] Can be overrided by settings in model.\n     * @param {Object} [opt] See `opt` of `setTextStyleCommon`.\n     * @param {boolean} [isEmphasis]\n     */\n    var setTextStyle = graphic.setTextStyle = function (\n        textStyle, textStyleModel, specifiedTextStyle, opt, isEmphasis\n    ) {\n        setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis);\n        specifiedTextStyle && zrUtil.extend(textStyle, specifiedTextStyle);\n        textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n\n        return textStyle;\n    };\n\n    /**\n     * Set text option in the style.\n     * @deprecated\n     * @param {Object} textStyle\n     * @param {module:echarts/model/Model} labelModel\n     * @param {string|boolean} defaultColor Default text color.\n     *        If set as false, it will be processed as a emphasis style.\n     */\n    graphic.setText = function (textStyle, labelModel, defaultColor) {\n        var opt = {isRectText: true};\n        var isEmphasis;\n\n        if (defaultColor === false) {\n            isEmphasis = true;\n        }\n        else {\n            // Support setting color as 'auto' to get visual color.\n            opt.autoColor = defaultColor;\n        }\n        setTextStyleCommon(textStyle, labelModel, opt, isEmphasis);\n        textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n    };\n\n    /**\n     * {\n     *      disableBox: boolean, Whether diable drawing box of block (outer most).\n     *      isRectText: boolean,\n     *      autoColor: string, specify a color when color is 'auto',\n     *              for textFill, textStroke, textBackgroundColor, and textBorderColor.\n     *              If autoColor specified, it is used as default textFill.\n     *      useInsideStyle:\n     *              `true`: Use inside style (textFill, textStroke, textStrokeWidth)\n     *                  if `textFill` is not specified.\n     *              `false`: Do not use inside style.\n     *              `null/undefined`: use inside style if `isRectText` is true and\n     *                  `textFill` is not specified and textPosition contains `'inside'`.\n     *      forceRich: boolean\n     * }\n     */\n    function setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis) {\n        // Consider there will be abnormal when merge hover style to normal style if given default value.\n        opt = opt || EMPTY_OBJ;\n\n        if (opt.isRectText) {\n            var textPosition = textStyleModel.getShallow('position')\n                || (isEmphasis ? null : 'inside');\n            // 'outside' is not a valid zr textPostion value, but used\n            // in bar series, and magric type should be considered.\n            textPosition === 'outside' && (textPosition = 'top');\n            textStyle.textPosition = textPosition;\n            textStyle.textOffset = textStyleModel.getShallow('offset');\n            var labelRotate = textStyleModel.getShallow('rotate');\n            labelRotate != null && (labelRotate *= Math.PI / 180);\n            textStyle.textRotation = labelRotate;\n            textStyle.textDistance = zrUtil.retrieve2(\n                textStyleModel.getShallow('distance'), isEmphasis ? null : 5\n            );\n        }\n\n        var ecModel = textStyleModel.ecModel;\n        var globalTextStyle = ecModel && ecModel.option.textStyle;\n\n        // Consider case:\n        // {\n        //     data: [{\n        //         value: 12,\n        //         label: {\n        //             normal: {\n        //                 rich: {\n        //                     // no 'a' here but using parent 'a'.\n        //                 }\n        //             }\n        //         }\n        //     }],\n        //     rich: {\n        //         a: { ... }\n        //     }\n        // }\n        var richItemNames = getRichItemNames(textStyleModel);\n        var richResult;\n        if (richItemNames) {\n            richResult = {};\n            for (var name in richItemNames) {\n                if (richItemNames.hasOwnProperty(name)) {\n                    // Cascade is supported in rich.\n                    var richTextStyle = textStyleModel.getModel(['rich', name]);\n                    // In rich, never `disableBox`.\n                    setTokenTextStyle(richResult[name] = {}, richTextStyle, globalTextStyle, opt, isEmphasis);\n                }\n            }\n        }\n        textStyle.rich = richResult;\n\n        setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, true);\n\n        if (opt.forceRich && !opt.textStyle) {\n            opt.textStyle = {};\n        }\n\n        return textStyle;\n    }\n\n    // Consider case:\n    // {\n    //     data: [{\n    //         value: 12,\n    //         label: {\n    //             normal: {\n    //                 rich: {\n    //                     // no 'a' here but using parent 'a'.\n    //                 }\n    //             }\n    //         }\n    //     }],\n    //     rich: {\n    //         a: { ... }\n    //     }\n    // }\n    function getRichItemNames(textStyleModel) {\n        // Use object to remove duplicated names.\n        var richItemNameMap;\n        while (textStyleModel && textStyleModel !== textStyleModel.ecModel) {\n            var rich = (textStyleModel.option || EMPTY_OBJ).rich;\n            if (rich) {\n                richItemNameMap = richItemNameMap || {};\n                for (var name in rich) {\n                    if (rich.hasOwnProperty(name)) {\n                        richItemNameMap[name] = 1;\n                    }\n                }\n            }\n            textStyleModel = textStyleModel.parentModel;\n        }\n        return richItemNameMap;\n    }\n\n    function setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, isBlock) {\n        // In merge mode, default value should not be given.\n        globalTextStyle = !isEmphasis && globalTextStyle || EMPTY_OBJ;\n\n        textStyle.textFill = getAutoColor(textStyleModel.getShallow('color'), opt)\n            || globalTextStyle.color;\n        textStyle.textStroke = getAutoColor(textStyleModel.getShallow('textBorderColor'), opt)\n            || globalTextStyle.textBorderColor;\n        textStyle.textStrokeWidth = zrUtil.retrieve2(\n            textStyleModel.getShallow('textBorderWidth'),\n            globalTextStyle.textBorderWidth\n        );\n\n        if (!isEmphasis) {\n            if (isBlock) {\n                // Always set `insideRollback`, for clearing previous.\n                var originalTextPosition = textStyle.textPosition;\n                textStyle.insideRollback = applyInsideStyle(textStyle, originalTextPosition, opt);\n                // Save original textPosition, because style.textPosition will be repalced by\n                // real location (like [10, 30]) in zrender.\n                textStyle.insideOriginalTextPosition = originalTextPosition;\n                textStyle.insideRollbackOpt = opt;\n            }\n\n            // Set default finally.\n            if (textStyle.textFill == null) {\n                textStyle.textFill = opt.autoColor;\n            }\n        }\n\n        // Do not use `getFont` here, because merge should be supported, where\n        // part of these properties may be changed in emphasis style, and the\n        // others should remain their original value got from normal style.\n        textStyle.fontStyle = textStyleModel.getShallow('fontStyle') || globalTextStyle.fontStyle;\n        textStyle.fontWeight = textStyleModel.getShallow('fontWeight') || globalTextStyle.fontWeight;\n        textStyle.fontSize = textStyleModel.getShallow('fontSize') || globalTextStyle.fontSize;\n        textStyle.fontFamily = textStyleModel.getShallow('fontFamily') || globalTextStyle.fontFamily;\n\n        textStyle.textAlign = textStyleModel.getShallow('align');\n        textStyle.textVerticalAlign = textStyleModel.getShallow('verticalAlign')\n            || textStyleModel.getShallow('baseline');\n\n        textStyle.textLineHeight = textStyleModel.getShallow('lineHeight');\n        textStyle.textWidth = textStyleModel.getShallow('width');\n        textStyle.textHeight = textStyleModel.getShallow('height');\n        textStyle.textTag = textStyleModel.getShallow('tag');\n\n        if (!isBlock || !opt.disableBox) {\n            textStyle.textBackgroundColor = getAutoColor(textStyleModel.getShallow('backgroundColor'), opt);\n            textStyle.textPadding = textStyleModel.getShallow('padding');\n            textStyle.textBorderColor = getAutoColor(textStyleModel.getShallow('borderColor'), opt);\n            textStyle.textBorderWidth = textStyleModel.getShallow('borderWidth');\n            textStyle.textBorderRadius = textStyleModel.getShallow('borderRadius');\n\n            textStyle.textBoxShadowColor = textStyleModel.getShallow('shadowColor');\n            textStyle.textBoxShadowBlur = textStyleModel.getShallow('shadowBlur');\n            textStyle.textBoxShadowOffsetX = textStyleModel.getShallow('shadowOffsetX');\n            textStyle.textBoxShadowOffsetY = textStyleModel.getShallow('shadowOffsetY');\n        }\n\n        textStyle.textShadowColor = textStyleModel.getShallow('textShadowColor')\n            || globalTextStyle.textShadowColor;\n        textStyle.textShadowBlur = textStyleModel.getShallow('textShadowBlur')\n            || globalTextStyle.textShadowBlur;\n        textStyle.textShadowOffsetX = textStyleModel.getShallow('textShadowOffsetX')\n            || globalTextStyle.textShadowOffsetX;\n        textStyle.textShadowOffsetY = textStyleModel.getShallow('textShadowOffsetY')\n            || globalTextStyle.textShadowOffsetY;\n    }\n\n    function getAutoColor(color, opt) {\n        return color !== 'auto' ? color : (opt && opt.autoColor) ? opt.autoColor : null;\n    }\n\n    function applyInsideStyle(textStyle, textPosition, opt) {\n        var useInsideStyle = opt.useInsideStyle;\n        var insideRollback;\n\n        if (textStyle.textFill == null\n            && useInsideStyle !== false\n            && (useInsideStyle === true\n                || (opt.isRectText\n                    && textPosition\n                    // textPosition can be [10, 30]\n                    && typeof textPosition === 'string'\n                    && textPosition.indexOf('inside') >= 0\n                )\n            )\n        ) {\n            insideRollback = {\n                textFill: null,\n                textStroke: textStyle.textStroke,\n                textStrokeWidth: textStyle.textStrokeWidth\n            };\n            textStyle.textFill = '#fff';\n            // Consider text with #fff overflow its container.\n            if (textStyle.textStroke == null) {\n                textStyle.textStroke = opt.autoColor;\n                textStyle.textStrokeWidth == null && (textStyle.textStrokeWidth = 2);\n            }\n        }\n\n        return insideRollback;\n    }\n\n    function rollbackInsideStyle(style) {\n        var insideRollback = style.insideRollback;\n        if (insideRollback) {\n            style.textFill = insideRollback.textFill;\n            style.textStroke = insideRollback.textStroke;\n            style.textStrokeWidth = insideRollback.textStrokeWidth;\n        }\n    }\n\n    graphic.getFont = function (opt, ecModel) {\n        // ecModel or default text style model.\n        var gTextStyleModel = ecModel || ecModel.getModel('textStyle');\n        return [\n            // FIXME in node-canvas fontWeight is before fontStyle\n            opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '',\n            opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '',\n            (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px',\n            opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'\n        ].join(' ');\n    };\n\n    function animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n        if (typeof dataIndex === 'function') {\n            cb = dataIndex;\n            dataIndex = null;\n        }\n        // Do not check 'animation' property directly here. Consider this case:\n        // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n        // but its parent model (`seriesModel`) does.\n        var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n        if (animationEnabled) {\n            var postfix = isUpdate ? 'Update' : '';\n            var duration = animatableModel.getShallow('animationDuration' + postfix);\n            var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n            var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n            if (typeof animationDelay === 'function') {\n                animationDelay = animationDelay(\n                    dataIndex,\n                    animatableModel.getAnimationDelayParams\n                        ? animatableModel.getAnimationDelayParams(el, dataIndex)\n                        : null\n                );\n            }\n            if (typeof duration === 'function') {\n                duration = duration(dataIndex);\n            }\n\n            duration > 0\n                ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb, !!cb)\n                : (el.stopAnimation(), el.attr(props), cb && cb());\n        }\n        else {\n            el.stopAnimation();\n            el.attr(props);\n            cb && cb();\n        }\n    }\n\n    /**\n     * Update graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} [cb]\n     * @example\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n     *     // Or\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, function () { console.log('Animation done!'); });\n     */\n    graphic.updateProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Init graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} cb\n     */\n    graphic.initProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Get transform matrix of target (param target),\n     * in coordinate of its ancestor (param ancestor)\n     *\n     * @param {module:zrender/mixin/Transformable} target\n     * @param {module:zrender/mixin/Transformable} [ancestor]\n     */\n    graphic.getTransform = function (target, ancestor) {\n        var mat = matrix.identity([]);\n\n        while (target && target !== ancestor) {\n            matrix.mul(mat, target.getLocalTransform(), mat);\n            target = target.parent;\n        }\n\n        return mat;\n    };\n\n    /**\n     * Apply transform to an vertex.\n     * @param {Array.<number>} target [x, y]\n     * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\n     *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n     *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {Array.<number>} [x, y]\n     */\n    graphic.applyTransform = function (target, transform, invert) {\n        if (transform && !zrUtil.isArrayLike(transform)) {\n            transform = Transformable.getLocalTransform(transform);\n        }\n\n        if (invert) {\n            transform = matrix.invert([], transform);\n        }\n        return vector.applyTransform([], target, transform);\n    };\n\n    /**\n     * @param {string} direction 'left' 'right' 'top' 'bottom'\n     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n     */\n    graphic.transformDirection = function (direction, transform, invert) {\n\n        // Pick a base, ensure that transform result will not be (0, 0).\n        var hBase = (transform[4] === 0 || transform[5] === 0 || transform[0] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[0]);\n        var vBase = (transform[4] === 0 || transform[5] === 0 || transform[2] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[2]);\n\n        var vertex = [\n            direction === 'left' ? -hBase : direction === 'right' ? hBase : 0,\n            direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0\n        ];\n\n        vertex = graphic.applyTransform(vertex, transform, invert);\n\n        return Math.abs(vertex[0]) > Math.abs(vertex[1])\n            ? (vertex[0] > 0 ? 'right' : 'left')\n            : (vertex[1] > 0 ? 'bottom' : 'top');\n    };\n\n    /**\n     * Apply group transition animation from g1 to g2.\n     * If no animatableModel, no animation.\n     */\n    graphic.groupTransition = function (g1, g2, animatableModel, cb) {\n        if (!g1 || !g2) {\n            return;\n        }\n\n        function getElMap(g) {\n            var elMap = {};\n            g.traverse(function (el) {\n                if (!el.isGroup && el.anid) {\n                    elMap[el.anid] = el;\n                }\n            });\n            return elMap;\n        }\n        function getAnimatableProps(el) {\n            var obj = {\n                position: vector.clone(el.position),\n                rotation: el.rotation\n            };\n            if (el.shape) {\n                obj.shape = zrUtil.extend({}, el.shape);\n            }\n            return obj;\n        }\n        var elMap1 = getElMap(g1);\n\n        g2.traverse(function (el) {\n            if (!el.isGroup && el.anid) {\n                var oldEl = elMap1[el.anid];\n                if (oldEl) {\n                    var newProp = getAnimatableProps(el);\n                    el.attr(getAnimatableProps(oldEl));\n                    graphic.updateProps(el, newProp, animatableModel, el.dataIndex);\n                }\n                // else {\n                //     if (el.previousProps) {\n                //         graphic.updateProps\n                //     }\n                // }\n            }\n        });\n    };\n\n    /**\n     * @param {Array.<Array.<number>>} points Like: [[23, 44], [53, 66], ...]\n     * @param {Object} rect {x, y, width, height}\n     * @return {Array.<Array.<number>>} A new clipped points.\n     */\n    graphic.clipPointsByRect = function (points, rect) {\n        return zrUtil.map(points, function (point) {\n            var x = point[0];\n            x = mathMax(x, rect.x);\n            x = mathMin(x, rect.x + rect.width);\n            var y = point[1];\n            y = mathMax(y, rect.y);\n            y = mathMin(y, rect.y + rect.height);\n            return [x, y];\n        });\n    };\n\n    /**\n     * @param {Object} targetRect {x, y, width, height}\n     * @param {Object} rect {x, y, width, height}\n     * @return {Object} A new clipped rect. If rect size are negative, return undefined.\n     */\n    graphic.clipRectByRect = function (targetRect, rect) {\n        var x = mathMax(targetRect.x, rect.x);\n        var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\n        var y = mathMax(targetRect.y, rect.y);\n        var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height);\n\n        if (x2 >= x && y2 >= y) {\n            return {\n                x: x,\n                y: y,\n                width: x2 - x,\n                height: y2 - y\n            };\n        }\n    };\n\n    /**\n     * @param {string} iconStr Support 'image://' or 'path://' or direct svg path.\n     * @param {Object} [opt] Properties of `module:zrender/Element`, except `style`.\n     * @param {Object} [rect] {x, y, width, height}\n     * @return {module:zrender/Element} Icon path or image element.\n     */\n    graphic.createIcon = function (iconStr, opt, rect) {\n        opt = zrUtil.extend({rectHover: true}, opt);\n        var style = opt.style = {strokeNoScale: true};\n        rect = rect || {x: -1, y: -1, width: 2, height: 2};\n\n        if (iconStr) {\n            return iconStr.indexOf('image://') === 0\n                ? (\n                    style.image = iconStr.slice(8),\n                    zrUtil.defaults(style, rect),\n                    new graphic.Image(opt)\n                )\n                : (\n                    graphic.makePath(\n                        iconStr.replace('path://', ''),\n                        opt,\n                        rect,\n                        'center'\n                    )\n                );\n        }\n\n    };\n\n    module.exports = graphic;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/graphic.js\n// module id = 972\n// module chunks = 0 1 2","/**\n * 数值处理模块\n * @module echarts/util/number\n */\n\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var number = {};\n\n    var RADIAN_EPSILON = 1e-4;\n\n    function _trim(str) {\n        return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n    }\n\n    /**\n     * Linear mapping a value from domain to range\n     * @memberOf module:echarts/util/number\n     * @param  {(number|Array.<number>)} val\n     * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n     * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n     * @param  {boolean} clamp\n     * @return {(number|Array.<number>}\n     */\n    number.linearMap = function (val, domain, range, clamp) {\n        var subDomain = domain[1] - domain[0];\n        var subRange = range[1] - range[0];\n\n        if (subDomain === 0) {\n            return subRange === 0\n                ? range[0]\n                : (range[0] + range[1]) / 2;\n        }\n\n        // Avoid accuracy problem in edge, such as\n        // 146.39 - 62.83 === 83.55999999999999.\n        // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n        // It is a little verbose for efficiency considering this method\n        // is a hotspot.\n        if (clamp) {\n            if (subDomain > 0) {\n                if (val <= domain[0]) {\n                    return range[0];\n                }\n                else if (val >= domain[1]) {\n                    return range[1];\n                }\n            }\n            else {\n                if (val >= domain[0]) {\n                    return range[0];\n                }\n                else if (val <= domain[1]) {\n                    return range[1];\n                }\n            }\n        }\n        else {\n            if (val === domain[0]) {\n                return range[0];\n            }\n            if (val === domain[1]) {\n                return range[1];\n            }\n        }\n\n        return (val - domain[0]) / subDomain * subRange + range[0];\n    };\n\n    /**\n     * Convert a percent string to absolute number.\n     * Returns NaN if percent is not a valid string or number\n     * @memberOf module:echarts/util/number\n     * @param {string|number} percent\n     * @param {number} all\n     * @return {number}\n     */\n    number.parsePercent = function(percent, all) {\n        switch (percent) {\n            case 'center':\n            case 'middle':\n                percent = '50%';\n                break;\n            case 'left':\n            case 'top':\n                percent = '0%';\n                break;\n            case 'right':\n            case 'bottom':\n                percent = '100%';\n                break;\n        }\n        if (typeof percent === 'string') {\n            if (_trim(percent).match(/%$/)) {\n                return parseFloat(percent) / 100 * all;\n            }\n\n            return parseFloat(percent);\n        }\n\n        return percent == null ? NaN : +percent;\n    };\n\n    /**\n     * (1) Fix rounding error of float numbers.\n     * (2) Support return string to avoid scientific notation like '3.5e-7'.\n     *\n     * @param {number} x\n     * @param {number} [precision]\n     * @param {boolean} [returnStr]\n     * @return {number|string}\n     */\n    number.round = function (x, precision, returnStr) {\n        if (precision == null) {\n            precision = 10;\n        }\n        // Avoid range error\n        precision = Math.min(Math.max(0, precision), 20);\n        x = (+x).toFixed(precision);\n        return returnStr ? x : +x;\n    };\n\n    number.asc = function (arr) {\n        arr.sort(function (a, b) {\n            return a - b;\n        });\n        return arr;\n    };\n\n    /**\n     * Get precision\n     * @param {number} val\n     */\n    number.getPrecision = function (val) {\n        val = +val;\n        if (isNaN(val)) {\n            return 0;\n        }\n        // It is much faster than methods converting number to string as follows\n        //      var tmp = val.toString();\n        //      return tmp.length - 1 - tmp.indexOf('.');\n        // especially when precision is low\n        var e = 1;\n        var count = 0;\n        while (Math.round(val * e) / e !== val) {\n            e *= 10;\n            count++;\n        }\n        return count;\n    };\n\n    /**\n     * @param {string|number} val\n     * @return {number}\n     */\n    number.getPrecisionSafe = function (val) {\n        var str = val.toString();\n\n        // Consider scientific notation: '3.4e-12' '3.4e+12'\n        var eIndex = str.indexOf('e');\n        if (eIndex > 0) {\n            var precision = +str.slice(eIndex + 1);\n            return precision < 0 ? -precision : 0;\n        }\n        else {\n            var dotIndex = str.indexOf('.');\n            return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n        }\n    };\n\n    /**\n     * Minimal dicernible data precisioin according to a single pixel.\n     *\n     * @param {Array.<number>} dataExtent\n     * @param {Array.<number>} pixelExtent\n     * @return {number} precision\n     */\n    number.getPixelPrecision = function (dataExtent, pixelExtent) {\n        var log = Math.log;\n        var LN10 = Math.LN10;\n        var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n        var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10);\n        // toFixed() digits argument must be between 0 and 20.\n        var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n        return !isFinite(precision) ? 20 : precision;\n    };\n\n    /**\n     * Get a data of given precision, assuring the sum of percentages\n     * in valueList is 1.\n     * The largest remainer method is used.\n     * https://en.wikipedia.org/wiki/Largest_remainder_method\n     *\n     * @param {Array.<number>} valueList a list of all data\n     * @param {number} idx index of the data to be processed in valueList\n     * @param {number} precision integer number showing digits of precision\n     * @return {number} percent ranging from 0 to 100\n     */\n    number.getPercentWithPrecision = function (valueList, idx, precision) {\n        if (!valueList[idx]) {\n            return 0;\n        }\n\n        var sum = zrUtil.reduce(valueList, function (acc, val) {\n            return acc + (isNaN(val) ? 0 : val);\n        }, 0);\n        if (sum === 0) {\n            return 0;\n        }\n\n        var digits = Math.pow(10, precision);\n        var votesPerQuota = zrUtil.map(valueList, function (val) {\n            return (isNaN(val) ? 0 : val) / sum * digits * 100;\n        });\n        var targetSeats = digits * 100;\n\n        var seats = zrUtil.map(votesPerQuota, function (votes) {\n            // Assign automatic seats.\n            return Math.floor(votes);\n        });\n        var currentSum = zrUtil.reduce(seats, function (acc, val) {\n            return acc + val;\n        }, 0);\n\n        var remainder = zrUtil.map(votesPerQuota, function (votes, idx) {\n            return votes - seats[idx];\n        });\n\n        // Has remainding votes.\n        while (currentSum < targetSeats) {\n            // Find next largest remainder.\n            var max = Number.NEGATIVE_INFINITY;\n            var maxId = null;\n            for (var i = 0, len = remainder.length; i < len; ++i) {\n                if (remainder[i] > max) {\n                    max = remainder[i];\n                    maxId = i;\n                }\n            }\n\n            // Add a vote to max remainder.\n            ++seats[maxId];\n            remainder[maxId] = 0;\n            ++currentSum;\n        }\n\n        return seats[idx] / digits;\n    };\n\n    // Number.MAX_SAFE_INTEGER, ie do not support.\n    number.MAX_SAFE_INTEGER = 9007199254740991;\n\n    /**\n     * To 0 - 2 * PI, considering negative radian.\n     * @param {number} radian\n     * @return {number}\n     */\n    number.remRadian = function (radian) {\n        var pi2 = Math.PI * 2;\n        return (radian % pi2 + pi2) % pi2;\n    };\n\n    /**\n     * @param {type} radian\n     * @return {boolean}\n     */\n    number.isRadianAroundZero = function (val) {\n        return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n    };\n\n    var TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n    /**\n     * Consider DST, it is incorrect to provide a method `getTimezoneOffset`\n     * without time specified. So this method is removed.\n     *\n     * @return {number} in minutes\n     */\n    // number.getTimezoneOffset = function () {\n    //     return (new Date()).getTimezoneOffset();\n    // };\n\n    /**\n     * @param {string|Date|number} value These values can be accepted:\n     *   + An instance of Date, represent a time in its own time zone.\n     *   + Or string in a subset of ISO 8601, only including:\n     *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n     *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n     *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n     *     all of which will be treated as local time if time zone is not specified\n     *     (see <https://momentjs.com/>).\n     *   + Or other string format, including (all of which will be treated as loacal time):\n     *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n     *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n     *   + a timestamp, which represent a time in UTC.\n     * @return {Date} date\n     */\n    number.parseDate = function (value) {\n        if (value instanceof Date) {\n            return value;\n        }\n        else if (typeof value === 'string') {\n            // Different browsers parse date in different way, so we parse it manually.\n            // Some other issues:\n            // new Date('1970-01-01') is UTC,\n            // new Date('1970/01/01') and new Date('1970-1-01') is local.\n            // See issue #3623\n            var match = TIME_REG.exec(value);\n\n            if (!match) {\n                // return Invalid Date.\n                return new Date(NaN);\n            }\n\n            // Use local time when no timezone offset specifed.\n            if (!match[8]) {\n                // match[n] can only be string or undefined.\n                // But take care of '12' + 1 => '121'.\n                return new Date(\n                    +match[1],\n                    +(match[2] || 1) - 1,\n                    +match[3] || 1,\n                    +match[4] || 0,\n                    +(match[5] || 0),\n                    +match[6] || 0,\n                    +match[7] || 0\n                );\n            }\n            // Timezoneoffset of Javascript Date has considered DST (Daylight Saving Time,\n            // https://tc39.github.io/ecma262/#sec-daylight-saving-time-adjustment).\n            // For example, system timezone is set as \"Time Zone: America/Toronto\",\n            // then these code will get different result:\n            // `new Date(1478411999999).getTimezoneOffset();  // get 240`\n            // `new Date(1478412000000).getTimezoneOffset();  // get 300`\n            // So we should not use `new Date`, but use `Date.UTC`.\n            else {\n                var hour = +match[4] || 0;\n                if (match[8].toUpperCase() !== 'Z') {\n                    hour -= match[8].slice(0, 3);\n                }\n                return new Date(Date.UTC(\n                    +match[1],\n                    +(match[2] || 1) - 1,\n                    +match[3] || 1,\n                    hour,\n                    +(match[5] || 0),\n                    +match[6] || 0,\n                    +match[7] || 0\n                ));\n            }\n        }\n        else if (value == null) {\n            return new Date(NaN);\n        }\n\n        return new Date(Math.round(value));\n    };\n\n    /**\n     * Quantity of a number. e.g. 0.1, 1, 10, 100\n     *\n     * @param  {number} val\n     * @return {number}\n     */\n    number.quantity = function (val) {\n        return Math.pow(10, quantityExponent(val));\n    };\n\n    function quantityExponent(val) {\n        return Math.floor(Math.log(val) / Math.LN10);\n    }\n\n    /**\n     * find a “nice” number approximately equal to x. Round the number if round = true,\n     * take ceiling if round = false. The primary observation is that the “nicest”\n     * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n     *\n     * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n     *\n     * @param  {number} val Non-negative value.\n     * @param  {boolean} round\n     * @return {number}\n     */\n    number.nice = function (val, round) {\n        var exponent = quantityExponent(val);\n        var exp10 = Math.pow(10, exponent);\n        var f = val / exp10; // 1 <= f < 10\n        var nf;\n        if (round) {\n            if (f < 1.5) { nf = 1; }\n            else if (f < 2.5) { nf = 2; }\n            else if (f < 4) { nf = 3; }\n            else if (f < 7) { nf = 5; }\n            else { nf = 10; }\n        }\n        else {\n            if (f < 1) { nf = 1; }\n            else if (f < 2) { nf = 2; }\n            else if (f < 3) { nf = 3; }\n            else if (f < 5) { nf = 5; }\n            else { nf = 10; }\n        }\n        val = nf * exp10;\n\n        // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n        // 20 is the uppper bound of toFixed.\n        return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n    };\n\n    /**\n     * Order intervals asc, and split them when overlap.\n     * expect(numberUtil.reformIntervals([\n     *     {interval: [18, 62], close: [1, 1]},\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [1, 1]},\n     *     {interval: [62, 150], close: [1, 1]},\n     *     {interval: [106, 150], close: [1, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ])).toEqual([\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [0, 1]},\n     *     {interval: [18, 62], close: [0, 1]},\n     *     {interval: [62, 150], close: [0, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ]);\n     * @param {Array.<Object>} list, where `close` mean open or close\n     *        of the interval, and Infinity can be used.\n     * @return {Array.<Object>} The origin list, which has been reformed.\n     */\n    number.reformIntervals = function (list) {\n        list.sort(function (a, b) {\n            return littleThan(a, b, 0) ? -1 : 1;\n        });\n\n        var curr = -Infinity;\n        var currClose = 1;\n        for (var i = 0; i < list.length;) {\n            var interval = list[i].interval;\n            var close = list[i].close;\n\n            for (var lg = 0; lg < 2; lg++) {\n                if (interval[lg] <= curr) {\n                    interval[lg] = curr;\n                    close[lg] = !lg ? 1 - currClose : 1;\n                }\n                curr = interval[lg];\n                currClose = close[lg];\n            }\n\n            if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n                list.splice(i, 1);\n            }\n            else {\n                i++;\n            }\n        }\n\n        return list;\n\n        function littleThan(a, b, lg) {\n            return a.interval[lg] < b.interval[lg]\n                || (\n                    a.interval[lg] === b.interval[lg]\n                    && (\n                        (a.close[lg] - b.close[lg] === (!lg ? 1 : -1))\n                        || (!lg && littleThan(a, b, 1))\n                    )\n                );\n        }\n    };\n\n    /**\n     * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n     * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n     * subtraction forces infinities to NaN\n     *\n     * @param {*} v\n     * @return {boolean}\n     */\n    number.isNumeric = function (v) {\n        return v - parseFloat(v) >= 0;\n    };\n\n    module.exports = number;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/number.js\n// module id = 973\n// module chunks = 0 1 2","\n\n    var formatUtil = require('./format');\n    var nubmerUtil = require('./number');\n    var Model = require('../model/Model');\n    var zrUtil = require('zrender/lib/core/util');\n    var each = zrUtil.each;\n    var isObject = zrUtil.isObject;\n\n    var modelUtil = {};\n\n    /**\n     * If value is not array, then translate it to array.\n     * @param  {*} value\n     * @return {Array} [value] or value\n     */\n    modelUtil.normalizeToArray = function (value) {\n        return value instanceof Array\n            ? value\n            : value == null\n            ? []\n            : [value];\n    };\n\n    /**\n     * Sync default option between normal and emphasis like `position` and `show`\n     * In case some one will write code like\n     *     label: {\n     *         normal: {\n     *             show: false,\n     *             position: 'outside',\n     *             fontSize: 18\n     *         },\n     *         emphasis: {\n     *             show: true\n     *         }\n     *     }\n     * @param {Object} opt\n     * @param {Array.<string>} subOpts\n     */\n     modelUtil.defaultEmphasis = function (opt, subOpts) {\n        if (opt) {\n            var emphasisOpt = opt.emphasis = opt.emphasis || {};\n            var normalOpt = opt.normal = opt.normal || {};\n\n            // Default emphasis option from normal\n            for (var i = 0, len = subOpts.length; i < len; i++) {\n                var subOptName = subOpts[i];\n                if (!emphasisOpt.hasOwnProperty(subOptName)\n                    && normalOpt.hasOwnProperty(subOptName)\n                ) {\n                    emphasisOpt[subOptName] = normalOpt[subOptName];\n                }\n            }\n        }\n    };\n\n    modelUtil.TEXT_STYLE_OPTIONS = [\n        'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\n        'rich', 'tag', 'color', 'textBorderColor', 'textBorderWidth',\n        'width', 'height', 'lineHeight', 'align', 'verticalAlign', 'baseline',\n        'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY',\n        'textShadowColor', 'textShadowBlur', 'textShadowOffsetX', 'textShadowOffsetY',\n        'backgroundColor', 'borderColor', 'borderWidth', 'borderRadius', 'padding'\n    ];\n\n    // modelUtil.LABEL_OPTIONS = modelUtil.TEXT_STYLE_OPTIONS.concat([\n    //     'position', 'offset', 'rotate', 'origin', 'show', 'distance', 'formatter',\n    //     'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\n    //     // FIXME: deprecated, check and remove it.\n    //     'textStyle'\n    // ]);\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method retieves value from data.\n     * @param {string|number|Date|Array|Object} dataItem\n     * @return {number|string|Date|Array.<number|string|Date>}\n     */\n    modelUtil.getDataItemValue = function (dataItem) {\n        // Performance sensitive.\n        return dataItem && (dataItem.value == null ? dataItem : dataItem.value);\n    };\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method determine if dataItem has extra option besides value\n     * @param {string|number|Date|Array|Object} dataItem\n     */\n    modelUtil.isDataItemOption = function (dataItem) {\n        return isObject(dataItem)\n            && !(dataItem instanceof Array);\n            // // markLine data can be array\n            // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n    };\n\n    /**\n     * This helper method convert value in data.\n     * @param {string|number|Date} value\n     * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n     */\n    modelUtil.converDataValue = function (value, dimInfo) {\n        // Performance sensitive.\n        var dimType = dimInfo && dimInfo.type;\n        if (dimType === 'ordinal') {\n            return value;\n        }\n\n        if (dimType === 'time'\n            // spead up when using timestamp\n            && typeof value !== 'number'\n            && value != null\n            && value !== '-'\n        ) {\n            value = +nubmerUtil.parseDate(value);\n        }\n\n        // dimType defaults 'number'.\n        // If dimType is not ordinal and value is null or undefined or NaN or '-',\n        // parse to NaN.\n        return (value == null || value === '')\n            ? NaN : +value; // If string (like '-'), using '+' parse to NaN\n    };\n\n    /**\n     * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.\n     * @param {module:echarts/data/List} data\n     * @param {Object} opt\n     * @param {string} [opt.seriesIndex]\n     * @param {Object} [opt.name]\n     * @param {Object} [opt.mainType]\n     * @param {Object} [opt.subType]\n     */\n    modelUtil.createDataFormatModel = function (data, opt) {\n        var model = new Model();\n        zrUtil.mixin(model, modelUtil.dataFormatMixin);\n        model.seriesIndex = opt.seriesIndex;\n        model.name = opt.name || '';\n        model.mainType = opt.mainType;\n        model.subType = opt.subType;\n\n        model.getData = function () {\n            return data;\n        };\n        return model;\n    };\n\n    // PENDING A little ugly\n    modelUtil.dataFormatMixin = {\n        /**\n         * Get params for formatter\n         * @param {number} dataIndex\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getDataParams: function (dataIndex, dataType) {\n            var data = this.getData(dataType);\n            var rawValue = this.getRawValue(dataIndex, dataType);\n            var rawDataIndex = data.getRawIndex(dataIndex);\n            var name = data.getName(dataIndex, true);\n            var itemOpt = data.getRawDataItem(dataIndex);\n            var color = data.getItemVisual(dataIndex, 'color');\n\n            return {\n                componentType: this.mainType,\n                componentSubType: this.subType,\n                seriesType: this.mainType === 'series' ? this.subType : null,\n                seriesIndex: this.seriesIndex,\n                seriesId: this.id,\n                seriesName: this.name,\n                name: name,\n                dataIndex: rawDataIndex,\n                data: itemOpt,\n                dataType: dataType,\n                value: rawValue,\n                color: color,\n                marker: formatUtil.getTooltipMarker(color),\n\n                // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n                $vars: ['seriesName', 'name', 'value']\n            };\n        },\n\n        /**\n         * Format label\n         * @param {number} dataIndex\n         * @param {string} [status='normal'] 'normal' or 'emphasis'\n         * @param {string} [dataType]\n         * @param {number} [dimIndex]\n         * @param {string} [labelProp='label']\n         * @return {string}\n         */\n        getFormattedLabel: function (dataIndex, status, dataType, dimIndex, labelProp) {\n            status = status || 'normal';\n            var data = this.getData(dataType);\n            var itemModel = data.getItemModel(dataIndex);\n\n            var params = this.getDataParams(dataIndex, dataType);\n            if (dimIndex != null && (params.value instanceof Array)) {\n                params.value = params.value[dimIndex];\n            }\n\n            var formatter = itemModel.get([labelProp || 'label', status, 'formatter']);\n\n            if (typeof formatter === 'function') {\n                params.status = status;\n                return formatter(params);\n            }\n            else if (typeof formatter === 'string') {\n                return formatUtil.formatTpl(formatter, params);\n            }\n        },\n\n        /**\n         * Get raw value in option\n         * @param {number} idx\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getRawValue: function (idx, dataType) {\n            var data = this.getData(dataType);\n            var dataItem = data.getRawDataItem(idx);\n            if (dataItem != null) {\n                return (isObject(dataItem) && !(dataItem instanceof Array))\n                    ? dataItem.value : dataItem;\n            }\n        },\n\n        /**\n         * Should be implemented.\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         * @return {string} tooltip string\n         */\n        formatTooltip: zrUtil.noop\n    };\n\n    /**\n     * Mapping to exists for merge.\n     *\n     * @public\n     * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n     * @param {Object|Array.<Object>} newCptOptions\n     * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          index of which is the same as exists.\n     */\n    modelUtil.mappingToExists = function (exists, newCptOptions) {\n        // Mapping by the order by original option (but not order of\n        // new option) in merge mode. Because we should ensure\n        // some specified index (like xAxisIndex) is consistent with\n        // original option, which is easy to understand, espatially in\n        // media query. And in most case, merge option is used to\n        // update partial option but not be expected to change order.\n        newCptOptions = (newCptOptions || []).slice();\n\n        var result = zrUtil.map(exists || [], function (obj, index) {\n            return {exist: obj};\n        });\n\n        // Mapping by id or name if specified.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            // id has highest priority.\n            for (var i = 0; i < result.length; i++) {\n                if (!result[i].option // Consider name: two map to one.\n                    && cptOption.id != null\n                    && result[i].exist.id === cptOption.id + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n\n            for (var i = 0; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option // Consider name: two map to one.\n                    // Can not match when both ids exist but different.\n                    && (exist.id == null || cptOption.id == null)\n                    && cptOption.name != null\n                    && !modelUtil.isIdInner(cptOption)\n                    && !modelUtil.isIdInner(exist)\n                    && exist.name === cptOption.name + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n        });\n\n        // Otherwise mapping by index.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            var i = 0;\n            for (; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option\n                    // Existing model that already has id should be able to\n                    // mapped to (because after mapping performed model may\n                    // be assigned with a id, whish should not affect next\n                    // mapping), except those has inner id.\n                    && !modelUtil.isIdInner(exist)\n                    // Caution:\n                    // Do not overwrite id. But name can be overwritten,\n                    // because axis use name as 'show label text'.\n                    // 'exist' always has id and name and we dont\n                    // need to check it.\n                    && cptOption.id == null\n                ) {\n                    result[i].option = cptOption;\n                    break;\n                }\n            }\n\n            if (i >= result.length) {\n                result.push({option: cptOption});\n            }\n        });\n\n        return result;\n    };\n\n    /**\n     * Make id and name for mapping result (result of mappingToExists)\n     * into `keyInfo` field.\n     *\n     * @public\n     * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          which order is the same as exists.\n     * @return {Array.<Object>} The input.\n     */\n    modelUtil.makeIdAndName = function (mapResult) {\n        // We use this id to hash component models and view instances\n        // in echarts. id can be specified by user, or auto generated.\n\n        // The id generation rule ensures new view instance are able\n        // to mapped to old instance when setOption are called in\n        // no-merge mode. So we generate model id by name and plus\n        // type in view id.\n\n        // name can be duplicated among components, which is convenient\n        // to specify multi components (like series) by one name.\n\n        // Ensure that each id is distinct.\n        var idMap = zrUtil.createHashMap();\n\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            existCpt && idMap.set(existCpt.id, item);\n        });\n\n        each(mapResult, function (item, index) {\n            var opt = item.option;\n\n            zrUtil.assert(\n                !opt || opt.id == null || !idMap.get(opt.id) || idMap.get(opt.id) === item,\n                'id duplicates: ' + (opt && opt.id)\n            );\n\n            opt && opt.id != null && idMap.set(opt.id, item);\n            !item.keyInfo && (item.keyInfo = {});\n        });\n\n        // Make name and id.\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            var opt = item.option;\n            var keyInfo = item.keyInfo;\n\n            if (!isObject(opt)) {\n                return;\n            }\n\n            // name can be overwitten. Consider case: axis.name = '20km'.\n            // But id generated by name will not be changed, which affect\n            // only in that case: setOption with 'not merge mode' and view\n            // instance will be recreated, which can be accepted.\n            keyInfo.name = opt.name != null\n                ? opt.name + ''\n                : existCpt\n                ? existCpt.name\n                : '\\0-'; // name may be displayed on screen, so use '-'.\n\n            if (existCpt) {\n                keyInfo.id = existCpt.id;\n            }\n            else if (opt.id != null) {\n                keyInfo.id = opt.id + '';\n            }\n            else {\n                // Consider this situatoin:\n                //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n                //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n                // Series with the same name between optionA and optionB\n                // should be mapped.\n                var idNum = 0;\n                do {\n                    keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n                }\n                while (idMap.get(keyInfo.id));\n            }\n\n            idMap.set(keyInfo.id, item);\n        });\n    };\n\n    /**\n     * @public\n     * @param {Object} cptOption\n     * @return {boolean}\n     */\n    modelUtil.isIdInner = function (cptOption) {\n        return isObject(cptOption)\n            && cptOption.id\n            && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n    };\n\n    /**\n     * A helper for removing duplicate items between batchA and batchB,\n     * and in themselves, and categorize by series.\n     *\n     * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n     */\n    modelUtil.compressBatches = function (batchA, batchB) {\n        var mapA = {};\n        var mapB = {};\n\n        makeMap(batchA || [], mapA);\n        makeMap(batchB || [], mapB, mapA);\n\n        return [mapToArray(mapA), mapToArray(mapB)];\n\n        function makeMap(sourceBatch, map, otherMap) {\n            for (var i = 0, len = sourceBatch.length; i < len; i++) {\n                var seriesId = sourceBatch[i].seriesId;\n                var dataIndices = modelUtil.normalizeToArray(sourceBatch[i].dataIndex);\n                var otherDataIndices = otherMap && otherMap[seriesId];\n\n                for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n                    var dataIndex = dataIndices[j];\n\n                    if (otherDataIndices && otherDataIndices[dataIndex]) {\n                        otherDataIndices[dataIndex] = null;\n                    }\n                    else {\n                        (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n                    }\n                }\n            }\n        }\n\n        function mapToArray(map, isData) {\n            var result = [];\n            for (var i in map) {\n                if (map.hasOwnProperty(i) && map[i] != null) {\n                    if (isData) {\n                        result.push(+i);\n                    }\n                    else {\n                        var dataIndices = mapToArray(map[i], true);\n                        dataIndices.length && result.push({seriesId: i, dataIndex: dataIndices});\n                    }\n                }\n            }\n            return result;\n        }\n    };\n\n    /**\n     * @param {module:echarts/data/List} data\n     * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n     *                         each of which can be Array or primary type.\n     * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n     */\n    modelUtil.queryDataIndex = function (data, payload) {\n        if (payload.dataIndexInside != null) {\n            return payload.dataIndexInside;\n        }\n        else if (payload.dataIndex != null) {\n            return zrUtil.isArray(payload.dataIndex)\n                ? zrUtil.map(payload.dataIndex, function (value) {\n                    return data.indexOfRawIndex(value);\n                })\n                : data.indexOfRawIndex(payload.dataIndex);\n        }\n        else if (payload.name != null) {\n            return zrUtil.isArray(payload.name)\n                ? zrUtil.map(payload.name, function (value) {\n                    return data.indexOfName(value);\n                })\n                : data.indexOfName(payload.name);\n        }\n    };\n\n    /**\n     * Enable property storage to any host object.\n     * Notice: Serialization is not supported.\n     *\n     * For example:\n     * var get = modelUitl.makeGetter();\n     *\n     * function some(hostObj) {\n     *      get(hostObj)._someProperty = 1212;\n     *      ...\n     * }\n     *\n     * @return {Function}\n     */\n    modelUtil.makeGetter = (function () {\n        var index = 0;\n        return function () {\n            var key = '\\0__ec_prop_getter_' + index++;\n            return function (hostObj) {\n                return hostObj[key] || (hostObj[key] = {});\n            };\n        };\n    })();\n\n    /**\n     * @param {module:echarts/model/Global} ecModel\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex, seriesId, seriesName,\n     *            geoIndex, geoId, geoName,\n     *            bmapIndex, bmapId, bmapName,\n     *            xAxisIndex, xAxisId, xAxisName,\n     *            yAxisIndex, yAxisId, yAxisName,\n     *            gridIndex, gridId, gridName,\n     *            ... (can be extended)\n     *        }\n     *        Each properties can be number|string|Array.<number>|Array.<string>\n     *        For example, a finder could be\n     *        {\n     *            seriesIndex: 3,\n     *            geoId: ['aa', 'cc'],\n     *            gridName: ['xx', 'rr']\n     *        }\n     *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n     *        If nothing or null/undefined specified, return nothing.\n     * @param {Object} [opt]\n     * @param {string} [opt.defaultMainType]\n     * @param {Array.<string>} [opt.includeMainTypes]\n     * @return {Object} result like:\n     *        {\n     *            seriesModels: [seriesModel1, seriesModel2],\n     *            seriesModel: seriesModel1, // The first model\n     *            geoModels: [geoModel1, geoModel2],\n     *            geoModel: geoModel1, // The first model\n     *            ...\n     *        }\n     */\n    modelUtil.parseFinder = function (ecModel, finder, opt) {\n        if (zrUtil.isString(finder)) {\n            var obj = {};\n            obj[finder + 'Index'] = 0;\n            finder = obj;\n        }\n\n        var defaultMainType = opt && opt.defaultMainType;\n        if (defaultMainType\n            && !has(finder, defaultMainType + 'Index')\n            && !has(finder, defaultMainType + 'Id')\n            && !has(finder, defaultMainType + 'Name')\n        ) {\n            finder[defaultMainType + 'Index'] = 0;\n        }\n\n        var result = {};\n\n        each(finder, function (value, key) {\n            var value = finder[key];\n\n            // Exclude 'dataIndex' and other illgal keys.\n            if (key === 'dataIndex' || key === 'dataIndexInside') {\n                result[key] = value;\n                return;\n            }\n\n            var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n            var mainType = parsedKey[1];\n            var queryType = (parsedKey[2] || '').toLowerCase();\n\n            if (!mainType\n                || !queryType\n                || value == null\n                || (queryType === 'index' && value === 'none')\n                || (opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0)\n            ) {\n                return;\n            }\n\n            var queryParam = {mainType: mainType};\n            if (queryType !== 'index' || value !== 'all') {\n                queryParam[queryType] = value;\n            }\n\n            var models = ecModel.queryComponents(queryParam);\n            result[mainType + 'Models'] = models;\n            result[mainType + 'Model'] = models[0];\n        });\n\n        return result;\n    };\n\n    /**\n     * @see {module:echarts/data/helper/completeDimensions}\n     * @param {module:echarts/data/List} data\n     * @param {string|number} dataDim\n     * @return {string}\n     */\n    modelUtil.dataDimToCoordDim = function (data, dataDim) {\n        var dimensions = data.dimensions;\n        dataDim = data.getDimension(dataDim);\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimItem = data.getDimensionInfo(dimensions[i]);\n            if (dimItem.name === dataDim) {\n                return dimItem.coordDim;\n            }\n        }\n    };\n\n    /**\n     * @see {module:echarts/data/helper/completeDimensions}\n     * @param {module:echarts/data/List} data\n     * @param {string} coordDim\n     * @return {Array.<string>} data dimensions on the coordDim.\n     */\n    modelUtil.coordDimToDataDim = function (data, coordDim) {\n        var dataDim = [];\n        each(data.dimensions, function (dimName) {\n            var dimItem = data.getDimensionInfo(dimName);\n            if (dimItem.coordDim === coordDim) {\n                dataDim[dimItem.coordDimIndex] = dimItem.name;\n            }\n        });\n        return dataDim;\n    };\n\n    /**\n     * @see {module:echarts/data/helper/completeDimensions}\n     * @param {module:echarts/data/List} data\n     * @param {string} otherDim Can be `otherDims`\n     *                        like 'label' or 'tooltip'.\n     * @return {Array.<string>} data dimensions on the otherDim.\n     */\n    modelUtil.otherDimToDataDim = function (data, otherDim) {\n        var dataDim = [];\n        each(data.dimensions, function (dimName) {\n            var dimItem = data.getDimensionInfo(dimName);\n            var otherDims = dimItem.otherDims;\n            var dimIndex = otherDims[otherDim];\n            if (dimIndex != null && dimIndex !== false) {\n                dataDim[dimIndex] = dimItem.name;\n            }\n        });\n        return dataDim;\n    };\n\n    function has(obj, prop) {\n        return obj && obj.hasOwnProperty(prop);\n    }\n\n    module.exports = modelUtil;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/model.js\n// module id = 974\n// module chunks = 0 1 2","\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n\n    /**\n     * @typedef {Float32Array|Array.<number>} Vector2\n     */\n    /**\n     * 二维向量类\n     * @exports zrender/tool/vector\n     */\n    var vector = {\n        /**\n         * 创建一个向量\n         * @param {number} [x=0]\n         * @param {number} [y=0]\n         * @return {Vector2}\n         */\n        create: function (x, y) {\n            var out = new ArrayCtor(2);\n            if (x == null) {\n                x = 0;\n            }\n            if (y == null) {\n                y = 0;\n            }\n            out[0] = x;\n            out[1] = y;\n            return out;\n        },\n\n        /**\n         * 复制向量数据\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        copy: function (out, v) {\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 克隆一个向量\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        clone: function (v) {\n            var out = new ArrayCtor(2);\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 设置向量的两个项\n         * @param {Vector2} out\n         * @param {number} a\n         * @param {number} b\n         * @return {Vector2} 结果\n         */\n        set: function (out, a, b) {\n            out[0] = a;\n            out[1] = b;\n            return out;\n        },\n\n        /**\n         * 向量相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        add: function (out, v1, v2) {\n            out[0] = v1[0] + v2[0];\n            out[1] = v1[1] + v2[1];\n            return out;\n        },\n\n        /**\n         * 向量缩放后相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} a\n         */\n        scaleAndAdd: function (out, v1, v2, a) {\n            out[0] = v1[0] + v2[0] * a;\n            out[1] = v1[1] + v2[1] * a;\n            return out;\n        },\n\n        /**\n         * 向量相减\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        sub: function (out, v1, v2) {\n            out[0] = v1[0] - v2[0];\n            out[1] = v1[1] - v2[1];\n            return out;\n        },\n\n        /**\n         * 向量长度\n         * @param {Vector2} v\n         * @return {number}\n         */\n        len: function (v) {\n            return Math.sqrt(this.lenSquare(v));\n        },\n\n        /**\n         * 向量长度平方\n         * @param {Vector2} v\n         * @return {number}\n         */\n        lenSquare: function (v) {\n            return v[0] * v[0] + v[1] * v[1];\n        },\n\n        /**\n         * 向量乘法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        mul: function (out, v1, v2) {\n            out[0] = v1[0] * v2[0];\n            out[1] = v1[1] * v2[1];\n            return out;\n        },\n\n        /**\n         * 向量除法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        div: function (out, v1, v2) {\n            out[0] = v1[0] / v2[0];\n            out[1] = v1[1] / v2[1];\n            return out;\n        },\n\n        /**\n         * 向量点乘\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        dot: function (v1, v2) {\n            return v1[0] * v2[0] + v1[1] * v2[1];\n        },\n\n        /**\n         * 向量缩放\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {number} s\n         */\n        scale: function (out, v, s) {\n            out[0] = v[0] * s;\n            out[1] = v[1] * s;\n            return out;\n        },\n\n        /**\n         * 向量归一化\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        normalize: function (out, v) {\n            var d = vector.len(v);\n            if (d === 0) {\n                out[0] = 0;\n                out[1] = 0;\n            }\n            else {\n                out[0] = v[0] / d;\n                out[1] = v[1] / d;\n            }\n            return out;\n        },\n\n        /**\n         * 计算向量间距离\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distance: function (v1, v2) {\n            return Math.sqrt(\n                (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1])\n            );\n        },\n\n        /**\n         * 向量距离平方\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distanceSquare: function (v1, v2) {\n            return (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n        },\n\n        /**\n         * 求负向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        negate: function (out, v) {\n            out[0] = -v[0];\n            out[1] = -v[1];\n            return out;\n        },\n\n        /**\n         * 插值两个点\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} t\n         */\n        lerp: function (out, v1, v2, t) {\n            out[0] = v1[0] + t * (v2[0] - v1[0]);\n            out[1] = v1[1] + t * (v2[1] - v1[1]);\n            return out;\n        },\n\n        /**\n         * 矩阵左乘向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {Vector2} m\n         */\n        applyTransform: function (out, v, m) {\n            var x = v[0];\n            var y = v[1];\n            out[0] = m[0] * x + m[2] * y + m[4];\n            out[1] = m[1] * x + m[3] * y + m[5];\n            return out;\n        },\n        /**\n         * 求两个向量最小值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        min: function (out, v1, v2) {\n            out[0] = Math.min(v1[0], v2[0]);\n            out[1] = Math.min(v1[1], v2[1]);\n            return out;\n        },\n        /**\n         * 求两个向量最大值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        max: function (out, v1, v2) {\n            out[0] = Math.max(v1[0], v2[0]);\n            out[1] = Math.max(v1[1], v2[1]);\n            return out;\n        }\n    };\n\n    vector.length = vector.len;\n    vector.lengthSquare = vector.lenSquare;\n    vector.dist = vector.distance;\n    vector.distSquare = vector.distanceSquare;\n\n    module.exports = vector;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/vector.js\n// module id = 975\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('./number');\n    var textContain = require('zrender/lib/contain/text');\n\n    var formatUtil = {};\n\n    /**\n     * 每三位默认加,格式化\n     * @param {string|number} x\n     * @return {string}\n     */\n    formatUtil.addCommas = function (x) {\n        if (isNaN(x)) {\n            return '-';\n        }\n        x = (x + '').split('.');\n        return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g,'$1,')\n               + (x.length > 1 ? ('.' + x[1]) : '');\n    };\n\n    /**\n     * @param {string} str\n     * @param {boolean} [upperCaseFirst=false]\n     * @return {string} str\n     */\n    formatUtil.toCamelCase = function (str, upperCaseFirst) {\n        str = (str || '').toLowerCase().replace(/-(.)/g, function(match, group1) {\n            return group1.toUpperCase();\n        });\n\n        if (upperCaseFirst && str) {\n            str = str.charAt(0).toUpperCase() + str.slice(1);\n        }\n\n        return str;\n    };\n\n    formatUtil.normalizeCssArray = zrUtil.normalizeCssArray;\n\n    var encodeHTML = formatUtil.encodeHTML = function (source) {\n        return String(source)\n            .replace(/&/g, '&amp;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;')\n            .replace(/\"/g, '&quot;')\n            .replace(/'/g, '&#39;');\n    };\n\n    var TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\n    var wrapVar = function (varName, seriesIdx) {\n        return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n    };\n\n    /**\n     * Template formatter\n     * @param {string} tpl\n     * @param {Array.<Object>|Object} paramsList\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTpl = function (tpl, paramsList, encode) {\n        if (!zrUtil.isArray(paramsList)) {\n            paramsList = [paramsList];\n        }\n        var seriesLen = paramsList.length;\n        if (!seriesLen) {\n            return '';\n        }\n\n        var $vars = paramsList[0].$vars || [];\n        for (var i = 0; i < $vars.length; i++) {\n            var alias = TPL_VAR_ALIAS[i];\n            var val = wrapVar(alias, 0);\n            tpl = tpl.replace(wrapVar(alias), encode ? encodeHTML(val) : val);\n        }\n        for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n            for (var k = 0; k < $vars.length; k++) {\n                var val = paramsList[seriesIdx][$vars[k]];\n                tpl = tpl.replace(\n                    wrapVar(TPL_VAR_ALIAS[k], seriesIdx),\n                    encode ? encodeHTML(val) : val\n                );\n            }\n        }\n\n        return tpl;\n    };\n\n    /**\n     * simple Template formatter\n     *\n     * @param {string} tpl\n     * @param {Object} param\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTplSimple = function (tpl, param, encode) {\n        zrUtil.each(param, function (value, key) {\n            tpl = tpl.replace(\n                '{' + key + '}',\n                encode ? encodeHTML(value) : value\n            );\n        });\n        return tpl;\n    };\n\n    /**\n     * @param {string} color\n     * @param {string} [extraCssText]\n     * @return {string}\n     */\n    formatUtil.getTooltipMarker = function (color, extraCssText) {\n        return color\n            ? '<span style=\"display:inline-block;margin-right:5px;'\n                + 'border-radius:10px;width:9px;height:9px;background-color:'\n                + formatUtil.encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>'\n            : '';\n    };\n\n    /**\n     * @param {string} str\n     * @return {string}\n     * @inner\n     */\n    var s2d = function (str) {\n        return str < 10 ? ('0' + str) : str;\n    };\n\n    /**\n     * ISO Date format\n     * @param {string} tpl\n     * @param {number} value\n     * @param {boolean} [isUTC=false] Default in local time.\n     *           see `module:echarts/scale/Time`\n     *           and `module:echarts/util/number#parseDate`.\n     * @inner\n     */\n    formatUtil.formatTime = function (tpl, value, isUTC) {\n        if (tpl === 'week'\n            || tpl === 'month'\n            || tpl === 'quarter'\n            || tpl === 'half-year'\n            || tpl === 'year'\n        ) {\n            tpl = 'MM-dd\\nyyyy';\n        }\n\n        var date = numberUtil.parseDate(value);\n        var utc = isUTC ? 'UTC' : '';\n        var y = date['get' + utc + 'FullYear']();\n        var M = date['get' + utc + 'Month']() + 1;\n        var d = date['get' + utc + 'Date']();\n        var h = date['get' + utc + 'Hours']();\n        var m = date['get' + utc + 'Minutes']();\n        var s = date['get' + utc + 'Seconds']();\n\n        tpl = tpl.replace('MM', s2d(M))\n            .replace('M', M)\n            .replace('yyyy', y)\n            .replace('yy', y % 100)\n            .replace('dd', s2d(d))\n            .replace('d', d)\n            .replace('hh', s2d(h))\n            .replace('h', h)\n            .replace('mm', s2d(m))\n            .replace('m', m)\n            .replace('ss', s2d(s))\n            .replace('s', s);\n\n        return tpl;\n    };\n\n    /**\n     * Capital first\n     * @param {string} str\n     * @return {string}\n     */\n    formatUtil.capitalFirst = function (str) {\n        return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n    };\n\n    formatUtil.truncateText = textContain.truncateText;\n\n    formatUtil.getTextRect = textContain.getBoundingRect;\n\n    module.exports = formatUtil;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/format.js\n// module id = 976\n// module chunks = 0 1 2","/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\n\n    var env = {};\n    if (typeof navigator === 'undefined') {\n        // In node\n        env = {\n            browser: {},\n            os: {},\n            node: true,\n            // Assume canvas is supported\n            canvasSupported: true\n        };\n    }\n    else {\n        env = detect(navigator.userAgent);\n    }\n\n    module.exports = env;\n\n    // Zepto.js\n    // (c) 2010-2013 Thomas Fuchs\n    // Zepto.js may be freely distributed under the MIT license.\n\n    function detect(ua) {\n        var os = {};\n        var browser = {};\n        // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n        // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n        // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n        // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n        // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n        // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n        // var touchpad = webos && ua.match(/TouchPad/);\n        // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n        // var silk = ua.match(/Silk\\/([\\d._]+)/);\n        // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n        // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n        // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n        // var playbook = ua.match(/PlayBook/);\n        // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n        var firefox = ua.match(/Firefox\\/([\\d.]+)/);\n        // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n        // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n        var ie = ua.match(/MSIE\\s([\\d.]+)/)\n            // IE 11 Trident/7.0; rv:11.0\n            || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n        var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n        var weChat = (/micromessenger/i).test(ua);\n\n        // Todo: clean this up with a better OS/browser seperation:\n        // - discern (more) between multiple browsers on android\n        // - decide if kindle fire in silk mode is android or not\n        // - Firefox on Android doesn't specify the Android version\n        // - possibly devide in os, device and browser hashes\n\n        // if (browser.webkit = !!webkit) browser.version = webkit[1];\n\n        // if (android) os.android = true, os.version = android[2];\n        // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n        // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n        // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n        // if (webos) os.webos = true, os.version = webos[2];\n        // if (touchpad) os.touchpad = true;\n        // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n        // if (bb10) os.bb10 = true, os.version = bb10[2];\n        // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n        // if (playbook) browser.playbook = true;\n        // if (kindle) os.kindle = true, os.version = kindle[1];\n        // if (silk) browser.silk = true, browser.version = silk[1];\n        // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n        // if (chrome) browser.chrome = true, browser.version = chrome[1];\n        if (firefox) {\n            browser.firefox = true;\n            browser.version = firefox[1];\n        }\n        // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n        // if (webview) browser.webview = true;\n\n        if (ie) {\n            browser.ie = true;\n            browser.version = ie[1];\n        }\n\n        if (edge) {\n            browser.edge = true;\n            browser.version = edge[1];\n        }\n\n        // It is difficult to detect WeChat in Win Phone precisely, because ua can\n        // not be set on win phone. So we do not consider Win Phone.\n        if (weChat) {\n            browser.weChat = true;\n        }\n\n        // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n        //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n        // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n        //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n        //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n        return {\n            browser: browser,\n            os: os,\n            node: false,\n            // 原生canvas支持，改极端点了\n            // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n            canvasSupported : document.createElement('canvas').getContext ? true : false,\n            // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\n            // works on most browsers\n            // IE10/11 does not support touch event, and MS Edge supports them but not by\n            // default, so we dont check navigator.maxTouchPoints for them here.\n            touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n            // <http://caniuse.com/#search=pointer%20event>.\n            pointerEventsSupported: 'onpointerdown' in window\n                // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n                // events currently. So we dont use that on other browsers unless tested sufficiently.\n                // Although IE 10 supports pointer event, it use old style and is different from the\n                // standard. So we exclude that. (IE 10 is hardly used on touch device)\n                && (browser.edge || (browser.ie && browser.version >= 11))\n        };\n    }\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/env.js\n// module id = 977\n// module chunks = 0 1 2","/**\n * @module echarts/model/Model\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var clazzUtil = require('../util/clazz');\n    var env = require('zrender/lib/core/env');\n\n    /**\n     * @alias module:echarts/model/Model\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} [parentModel]\n     * @param {module:echarts/model/Global} [ecModel]\n     */\n    function Model(option, parentModel, ecModel) {\n        /**\n         * @type {module:echarts/model/Model}\n         * @readOnly\n         */\n        this.parentModel = parentModel;\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        this.ecModel = ecModel;\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        this.option = option;\n\n        // Simple optimization\n        // if (this.init) {\n        //     if (arguments.length <= 4) {\n        //         this.init(option, parentModel, ecModel, extraOpt);\n        //     }\n        //     else {\n        //         this.init.apply(this, arguments);\n        //     }\n        // }\n    }\n\n    Model.prototype = {\n\n        constructor: Model,\n\n        /**\n         * Model 的初始化函数\n         * @param {Object} option\n         */\n        init: null,\n\n        /**\n         * 从新的 Option merge\n         */\n        mergeOption: function (option) {\n            zrUtil.merge(this.option, option, true);\n        },\n\n        /**\n         * @param {string|Array.<string>} path\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        get: function (path, ignoreParent) {\n            if (path == null) {\n                return this.option;\n            }\n\n            return doGet(\n                this.option,\n                this.parsePath(path),\n                !ignoreParent && getParent(this, path)\n            );\n        },\n\n        /**\n         * @param {string} key\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        getShallow: function (key, ignoreParent) {\n            var option = this.option;\n\n            var val = option == null ? option : option[key];\n            var parentModel = !ignoreParent && getParent(this, key);\n            if (val == null && parentModel) {\n                val = parentModel.getShallow(key);\n            }\n            return val;\n        },\n\n        /**\n         * @param {string|Array.<string>} [path]\n         * @param {module:echarts/model/Model} [parentModel]\n         * @return {module:echarts/model/Model}\n         */\n        getModel: function (path, parentModel) {\n            var obj = path == null\n                ? this.option\n                : doGet(this.option, path = this.parsePath(path));\n\n            var thisParentModel;\n            parentModel = parentModel || (\n                (thisParentModel = getParent(this, path))\n                    && thisParentModel.getModel(path)\n            );\n\n            return new Model(obj, parentModel, this.ecModel);\n        },\n\n        /**\n         * If model has option\n         */\n        isEmpty: function () {\n            return this.option == null;\n        },\n\n        restoreData: function () {},\n\n        // Pending\n        clone: function () {\n            var Ctor = this.constructor;\n            return new Ctor(zrUtil.clone(this.option));\n        },\n\n        setReadOnly: function (properties) {\n            clazzUtil.setReadOnly(this, properties);\n        },\n\n        // If path is null/undefined, return null/undefined.\n        parsePath: function(path) {\n            if (typeof path === 'string') {\n                path = path.split('.');\n            }\n            return path;\n        },\n\n        /**\n         * @param {Function} getParentMethod\n         *        param {Array.<string>|string} path\n         *        return {module:echarts/model/Model}\n         */\n        customizeGetParent: function (getParentMethod) {\n            clazzUtil.set(this, 'getParent', getParentMethod);\n        },\n\n        isAnimationEnabled: function () {\n            if (!env.node) {\n                if (this.option.animation != null) {\n                    return !!this.option.animation;\n                }\n                else if (this.parentModel) {\n                    return this.parentModel.isAnimationEnabled();\n                }\n            }\n        }\n    };\n\n    function doGet(obj, pathArr, parentModel) {\n        for (var i = 0; i < pathArr.length; i++) {\n            // Ignore empty\n            if (!pathArr[i]) {\n                continue;\n            }\n            // obj could be number/string/... (like 0)\n            obj = (obj && typeof obj === 'object') ? obj[pathArr[i]] : null;\n            if (obj == null) {\n                break;\n            }\n        }\n        if (obj == null && parentModel) {\n            obj = parentModel.get(pathArr);\n        }\n        return obj;\n    }\n\n    // `path` can be null/undefined\n    function getParent(model, path) {\n        var getParentMethod = clazzUtil.get(model, 'getParent');\n        return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n    }\n\n    // Enable Model.extend.\n    clazzUtil.enableClassExtend(Model);\n\n    var mixin = zrUtil.mixin;\n    mixin(Model, require('./mixin/lineStyle'));\n    mixin(Model, require('./mixin/areaStyle'));\n    mixin(Model, require('./mixin/textStyle'));\n    mixin(Model, require('./mixin/itemStyle'));\n\n    module.exports = Model;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/Model.js\n// module id = 978\n// module chunks = 0 1 2","/**\n * Path element\n * @module zrender/graphic/Path\n */\n\n\n\n    var Displayable = require('./Displayable');\n    var zrUtil = require('../core/util');\n    var PathProxy = require('../core/PathProxy');\n    var pathContain = require('../contain/path');\n\n    var Pattern = require('./Pattern');\n    var getCanvasPattern = Pattern.prototype.getCanvasPattern;\n\n    var abs = Math.abs;\n\n    var pathProxyForDraw = new PathProxy(true);\n    /**\n     * @alias module:zrender/graphic/Path\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function Path(opts) {\n        Displayable.call(this, opts);\n\n        /**\n         * @type {module:zrender/core/PathProxy}\n         * @readOnly\n         */\n        this.path = null;\n    }\n\n    Path.prototype = {\n\n        constructor: Path,\n\n        type: 'path',\n\n        __dirtyPath: true,\n\n        strokeContainThreshold: 5,\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var path = this.path || pathProxyForDraw;\n            var hasStroke = style.hasStroke();\n            var hasFill = style.hasFill();\n            var fill = style.fill;\n            var stroke = style.stroke;\n            var hasFillGradient = hasFill && !!(fill.colorStops);\n            var hasStrokeGradient = hasStroke && !!(stroke.colorStops);\n            var hasFillPattern = hasFill && !!(fill.image);\n            var hasStrokePattern = hasStroke && !!(stroke.image);\n\n            style.bind(ctx, this, prevEl);\n            this.setTransform(ctx);\n\n            if (this.__dirty) {\n                var rect;\n                // Update gradient because bounding rect may changed\n                if (hasFillGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._fillGradient = style.getGradient(ctx, fill, rect);\n                }\n                if (hasStrokeGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._strokeGradient = style.getGradient(ctx, stroke, rect);\n                }\n            }\n            // Use the gradient or pattern\n            if (hasFillGradient) {\n                // PENDING If may have affect the state\n                ctx.fillStyle = this._fillGradient;\n            }\n            else if (hasFillPattern) {\n                ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n            }\n            if (hasStrokeGradient) {\n                ctx.strokeStyle = this._strokeGradient;\n            }\n            else if (hasStrokePattern) {\n                ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n            }\n\n            var lineDash = style.lineDash;\n            var lineDashOffset = style.lineDashOffset;\n\n            var ctxLineDash = !!ctx.setLineDash;\n\n            // Update path sx, sy\n            var scale = this.getGlobalScale();\n            path.setScale(scale[0], scale[1]);\n\n            // Proxy context\n            // Rebuild path in following 2 cases\n            // 1. Path is dirty\n            // 2. Path needs javascript implemented lineDash stroking.\n            //    In this case, lineDash information will not be saved in PathProxy\n            if (this.__dirtyPath\n                || (lineDash && !ctxLineDash && hasStroke)\n            ) {\n                path.beginPath(ctx);\n\n                // Setting line dash before build path\n                if (lineDash && !ctxLineDash) {\n                    path.setLineDash(lineDash);\n                    path.setLineDashOffset(lineDashOffset);\n                }\n\n                this.buildPath(path, this.shape, false);\n\n                // Clear path dirty flag\n                if (this.path) {\n                    this.__dirtyPath = false;\n                }\n            }\n            else {\n                // Replay path building\n                ctx.beginPath();\n                this.path.rebuildPath(ctx);\n            }\n\n            hasFill && path.fill(ctx);\n\n            if (lineDash && ctxLineDash) {\n                ctx.setLineDash(lineDash);\n                ctx.lineDashOffset = lineDashOffset;\n            }\n\n            hasStroke && path.stroke(ctx);\n\n            if (lineDash && ctxLineDash) {\n                // PENDING\n                // Remove lineDash\n                ctx.setLineDash([]);\n            }\n\n            this.restoreTransform(ctx);\n\n            // Draw rect text\n            if (style.text != null) {\n                this.drawRectText(ctx, this.getBoundingRect());\n            }\n        },\n\n        // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n        // Like in circle\n        buildPath: function (ctx, shapeCfg, inBundle) {},\n\n        createPathProxy: function () {\n            this.path = new PathProxy();\n        },\n\n        getBoundingRect: function () {\n            var rect = this._rect;\n            var style = this.style;\n            var needsUpdateRect = !rect;\n            if (needsUpdateRect) {\n                var path = this.path;\n                if (!path) {\n                    // Create path on demand.\n                    path = this.path = new PathProxy();\n                }\n                if (this.__dirtyPath) {\n                    path.beginPath();\n                    this.buildPath(path, this.shape, false);\n                }\n                rect = path.getBoundingRect();\n            }\n            this._rect = rect;\n\n            if (style.hasStroke()) {\n                // Needs update rect with stroke lineWidth when\n                // 1. Element changes scale or lineWidth\n                // 2. Shape is changed\n                var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n                if (this.__dirty || needsUpdateRect) {\n                    rectWithStroke.copy(rect);\n                    // FIXME Must after updateTransform\n                    var w = style.lineWidth;\n                    // PENDING, Min line width is needed when line is horizontal or vertical\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n\n                    // Only add extra hover lineWidth when there are no fill\n                    if (!style.hasFill()) {\n                        w = Math.max(w, this.strokeContainThreshold || 4);\n                    }\n                    // Consider line width\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        rectWithStroke.width += w / lineScale;\n                        rectWithStroke.height += w / lineScale;\n                        rectWithStroke.x -= w / lineScale / 2;\n                        rectWithStroke.y -= w / lineScale / 2;\n                    }\n                }\n\n                // Return rect with stroke\n                return rectWithStroke;\n            }\n\n            return rect;\n        },\n\n        contain: function (x, y) {\n            var localPos = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            var style = this.style;\n            x = localPos[0];\n            y = localPos[1];\n\n            if (rect.contain(x, y)) {\n                var pathData = this.path.data;\n                if (style.hasStroke()) {\n                    var lineWidth = style.lineWidth;\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        // Only add extra hover lineWidth when there are no fill\n                        if (!style.hasFill()) {\n                            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n                        }\n                        if (pathContain.containStroke(\n                            pathData, lineWidth / lineScale, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                }\n                if (style.hasFill()) {\n                    return pathContain.contain(pathData, x, y);\n                }\n            }\n            return false;\n        },\n\n        /**\n         * @param  {boolean} dirtyPath\n         */\n        dirty: function (dirtyPath) {\n            if (dirtyPath == null) {\n                dirtyPath = true;\n            }\n            // Only mark dirty, not mark clean\n            if (dirtyPath) {\n                this.__dirtyPath = dirtyPath;\n                this._rect = null;\n            }\n\n            this.__dirty = true;\n\n            this.__zr && this.__zr.refresh();\n\n            // Used as a clipping path\n            if (this.__clipTarget) {\n                this.__clipTarget.dirty();\n            }\n        },\n\n        /**\n         * Alias for animate('shape')\n         * @param {boolean} loop\n         */\n        animateShape: function (loop) {\n            return this.animate('shape', loop);\n        },\n\n        // Overwrite attrKV\n        attrKV: function (key, value) {\n            // FIXME\n            if (key === 'shape') {\n                this.setShape(value);\n                this.__dirtyPath = true;\n                this._rect = null;\n            }\n            else {\n                Displayable.prototype.attrKV.call(this, key, value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setShape: function (key, value) {\n            var shape = this.shape;\n            // Path from string may not have shape\n            if (shape) {\n                if (zrUtil.isObject(key)) {\n                    for (var name in key) {\n                        if (key.hasOwnProperty(name)) {\n                            shape[name] = key[name];\n                        }\n                    }\n                }\n                else {\n                    shape[key] = value;\n                }\n                this.dirty(true);\n            }\n            return this;\n        },\n\n        getLineScale: function () {\n            var m = this.transform;\n            // Get the line scale.\n            // Determinant of `m` means how much the area is enlarged by the\n            // transformation. So its square root can be used as a scale factor\n            // for width.\n            return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10\n                ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1]))\n                : 1;\n        }\n    };\n\n    /**\n     * 扩展一个 Path element, 比如星形，圆等。\n     * Extend a path element\n     * @param {Object} props\n     * @param {string} props.type Path type\n     * @param {Function} props.init Initialize\n     * @param {Function} props.buildPath Overwrite buildPath method\n     * @param {Object} [props.style] Extended default style config\n     * @param {Object} [props.shape] Extended default shape config\n     */\n    Path.extend = function (defaults) {\n        var Sub = function (opts) {\n            Path.call(this, opts);\n\n            if (defaults.style) {\n                // Extend default style\n                this.style.extendFrom(defaults.style, false);\n            }\n\n            // Extend default shape\n            var defaultShape = defaults.shape;\n            if (defaultShape) {\n                this.shape = this.shape || {};\n                var thisShape = this.shape;\n                for (var name in defaultShape) {\n                    if (\n                        ! thisShape.hasOwnProperty(name)\n                        && defaultShape.hasOwnProperty(name)\n                    ) {\n                        thisShape[name] = defaultShape[name];\n                    }\n                }\n            }\n\n            defaults.init && defaults.init.call(this, opts);\n        };\n\n        zrUtil.inherits(Sub, Path);\n\n        // FIXME 不能 extend position, rotation 等引用对象\n        for (var name in defaults) {\n            // Extending prototype values and methods\n            if (name !== 'style' && name !== 'shape') {\n                Sub.prototype[name] = defaults[name];\n            }\n        }\n\n        return Sub;\n    };\n\n    zrUtil.inherits(Path, Displayable);\n\n    module.exports = Path;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/Path.js\n// module id = 979\n// module chunks = 0 1 2","'use strict';\n// Layout helpers for each component positioning\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var BoundingRect = require('zrender/lib/core/BoundingRect');\n    var numberUtil = require('./number');\n    var formatUtil = require('./format');\n    var parsePercent = numberUtil.parsePercent;\n    var each = zrUtil.each;\n\n    var layout = {};\n\n    /**\n     * @public\n     */\n    var LOCATION_PARAMS = layout.LOCATION_PARAMS = [\n        'left', 'right', 'top', 'bottom', 'width', 'height'\n    ];\n\n    /**\n     * @public\n     */\n    var HV_NAMES = layout.HV_NAMES = [\n        ['width', 'left', 'right'],\n        ['height', 'top', 'bottom']\n    ];\n\n    function boxLayout(orient, group, gap, maxWidth, maxHeight) {\n        var x = 0;\n        var y = 0;\n\n        if (maxWidth == null) {\n            maxWidth = Infinity;\n        }\n        if (maxHeight == null) {\n            maxHeight = Infinity;\n        }\n        var currentLineMaxSize = 0;\n\n        group.eachChild(function (child, idx) {\n            var position = child.position;\n            var rect = child.getBoundingRect();\n            var nextChild = group.childAt(idx + 1);\n            var nextChildRect = nextChild && nextChild.getBoundingRect();\n            var nextX;\n            var nextY;\n\n            if (orient === 'horizontal') {\n                var moveX = rect.width + (nextChildRect ? (-nextChildRect.x + rect.x) : 0);\n                nextX = x + moveX;\n                // Wrap when width exceeds maxWidth or meet a `newline` group\n                // FIXME compare before adding gap?\n                if (nextX > maxWidth || child.newline) {\n                    x = 0;\n                    nextX = moveX;\n                    y += currentLineMaxSize + gap;\n                    currentLineMaxSize = rect.height;\n                }\n                else {\n                    // FIXME: consider rect.y is not `0`?\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n                }\n            }\n            else {\n                var moveY = rect.height + (nextChildRect ? (-nextChildRect.y + rect.y) : 0);\n                nextY = y + moveY;\n                // Wrap when width exceeds maxHeight or meet a `newline` group\n                if (nextY > maxHeight || child.newline) {\n                    x += currentLineMaxSize + gap;\n                    y = 0;\n                    nextY = moveY;\n                    currentLineMaxSize = rect.width;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n                }\n            }\n\n            if (child.newline) {\n                return;\n            }\n\n            position[0] = x;\n            position[1] = y;\n\n            orient === 'horizontal'\n                ? (x = nextX + gap)\n                : (y = nextY + gap);\n        });\n    }\n\n    /**\n     * VBox or HBox layouting\n     * @param {string} orient\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.box = boxLayout;\n\n    /**\n     * VBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.vbox = zrUtil.curry(boxLayout, 'vertical');\n\n    /**\n     * HBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.hbox = zrUtil.curry(boxLayout, 'horizontal');\n\n    /**\n     * If x or x2 is not specified or 'center' 'left' 'right',\n     * the width would be as long as possible.\n     * If y or y2 is not specified or 'middle' 'top' 'bottom',\n     * the height would be as long as possible.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.x]\n     * @param {number|string} [positionInfo.y]\n     * @param {number|string} [positionInfo.x2]\n     * @param {number|string} [positionInfo.y2]\n     * @param {Object} containerRect {width, height}\n     * @param {string|number} margin\n     * @return {Object} {width, height}\n     */\n    layout.getAvailableSize = function (positionInfo, containerRect, margin) {\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var x = parsePercent(positionInfo.x, containerWidth);\n        var y = parsePercent(positionInfo.y, containerHeight);\n        var x2 = parsePercent(positionInfo.x2, containerWidth);\n        var y2 = parsePercent(positionInfo.y2, containerHeight);\n\n        (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n        (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n        (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n        (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        return {\n            width: Math.max(x2 - x - margin[1] - margin[3], 0),\n            height: Math.max(y2 - y - margin[0] - margin[2], 0)\n        };\n    };\n\n    /**\n     * Parse position info.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {number|string} [positionInfo.width]\n     * @param {number|string} [positionInfo.height]\n     * @param {number|string} [positionInfo.aspect] Aspect is width / height\n     * @param {Object} containerRect\n     * @param {string|number} [margin]\n     *\n     * @return {module:zrender/core/BoundingRect}\n     */\n    layout.getLayoutRect = function (\n        positionInfo, containerRect, margin\n    ) {\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var left = parsePercent(positionInfo.left, containerWidth);\n        var top = parsePercent(positionInfo.top, containerHeight);\n        var right = parsePercent(positionInfo.right, containerWidth);\n        var bottom = parsePercent(positionInfo.bottom, containerHeight);\n        var width = parsePercent(positionInfo.width, containerWidth);\n        var height = parsePercent(positionInfo.height, containerHeight);\n\n        var verticalMargin = margin[2] + margin[0];\n        var horizontalMargin = margin[1] + margin[3];\n        var aspect = positionInfo.aspect;\n\n        // If width is not specified, calculate width from left and right\n        if (isNaN(width)) {\n            width = containerWidth - right - horizontalMargin - left;\n        }\n        if (isNaN(height)) {\n            height = containerHeight - bottom - verticalMargin - top;\n        }\n\n        if (aspect != null) {\n            // If width and height are not given\n            // 1. Graph should not exceeds the container\n            // 2. Aspect must be keeped\n            // 3. Graph should take the space as more as possible\n            // FIXME\n            // Margin is not considered, because there is no case that both\n            // using margin and aspect so far.\n            if (isNaN(width) && isNaN(height)) {\n                if (aspect > containerWidth / containerHeight) {\n                    width = containerWidth * 0.8;\n                }\n                else {\n                    height = containerHeight * 0.8;\n                }\n            }\n\n            // Calculate width or height with given aspect\n            if (isNaN(width)) {\n                width = aspect * height;\n            }\n            if (isNaN(height)) {\n                height = width / aspect;\n            }\n        }\n\n        // If left is not specified, calculate left from right and width\n        if (isNaN(left)) {\n            left = containerWidth - right - width - horizontalMargin;\n        }\n        if (isNaN(top)) {\n            top = containerHeight - bottom - height - verticalMargin;\n        }\n\n        // Align left and top\n        switch (positionInfo.left || positionInfo.right) {\n            case 'center':\n                left = containerWidth / 2 - width / 2 - margin[3];\n                break;\n            case 'right':\n                left = containerWidth - width - horizontalMargin;\n                break;\n        }\n        switch (positionInfo.top || positionInfo.bottom) {\n            case 'middle':\n            case 'center':\n                top = containerHeight / 2 - height / 2 - margin[0];\n                break;\n            case 'bottom':\n                top = containerHeight - height - verticalMargin;\n                break;\n        }\n        // If something is wrong and left, top, width, height are calculated as NaN\n        left = left || 0;\n        top = top || 0;\n        if (isNaN(width)) {\n            // Width may be NaN if only one value is given except width\n            width = containerWidth - horizontalMargin - left - (right || 0);\n        }\n        if (isNaN(height)) {\n            // Height may be NaN if only one value is given except height\n            height = containerHeight - verticalMargin - top - (bottom || 0);\n        }\n\n        var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n        rect.margin = margin;\n        return rect;\n    };\n\n\n    /**\n     * Position a zr element in viewport\n     *  Group position is specified by either\n     *  {left, top}, {right, bottom}\n     *  If all properties exists, right and bottom will be igonred.\n     *\n     * Logic:\n     *     1. Scale (against origin point in parent coord)\n     *     2. Rotate (against origin point in parent coord)\n     *     3. Traslate (with el.position by this method)\n     * So this method only fixes the last step 'Traslate', which does not affect\n     * scaling and rotating.\n     *\n     * If be called repeatly with the same input el, the same result will be gotten.\n     *\n     * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {number|string} [positionInfo.width] Only for opt.boundingModel: 'raw'\n     * @param {number|string} [positionInfo.height] Only for opt.boundingModel: 'raw'\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @param {Object} [opt]\n     * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n     * @param {Array.<number>} [opt.boundingMode='all']\n     *        Specify how to calculate boundingRect when locating.\n     *        'all': Position the boundingRect that is transformed and uioned\n     *               both itself and its descendants.\n     *               This mode simplies confine the elements in the bounding\n     *               of their container (e.g., using 'right: 0').\n     *        'raw': Position the boundingRect that is not transformed and only itself.\n     *               This mode is useful when you want a element can overflow its\n     *               container. (Consider a rotated circle needs to be located in a corner.)\n     *               In this mode positionInfo.width/height can only be number.\n     */\n    layout.positionElement = function (el, positionInfo, containerRect, margin, opt) {\n        var h = !opt || !opt.hv || opt.hv[0];\n        var v = !opt || !opt.hv || opt.hv[1];\n        var boundingMode = opt && opt.boundingMode || 'all';\n\n        if (!h && !v) {\n            return;\n        }\n\n        var rect;\n        if (boundingMode === 'raw') {\n            rect = el.type === 'group'\n                ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0)\n                : el.getBoundingRect();\n        }\n        else {\n            rect = el.getBoundingRect();\n            if (el.needLocalTransform()) {\n                var transform = el.getLocalTransform();\n                // Notice: raw rect may be inner object of el,\n                // which should not be modified.\n                rect = rect.clone();\n                rect.applyTransform(transform);\n            }\n        }\n\n        // The real width and height can not be specified but calculated by the given el.\n        positionInfo = layout.getLayoutRect(\n            zrUtil.defaults(\n                {width: rect.width, height: rect.height},\n                positionInfo\n            ),\n            containerRect,\n            margin\n        );\n\n        // Because 'tranlate' is the last step in transform\n        // (see zrender/core/Transformable#getLocalTransfrom),\n        // we can just only modify el.position to get final result.\n        var elPos = el.position;\n        var dx = h ? positionInfo.x - rect.x : 0;\n        var dy = v ? positionInfo.y - rect.y : 0;\n\n        el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n    };\n\n    /**\n     * @param {Object} option Contains some of the properties in HV_NAMES.\n     * @param {number} hvIdx 0: horizontal; 1: vertical.\n     */\n    layout.sizeCalculable = function (option, hvIdx) {\n        return option[HV_NAMES[hvIdx][0]] != null\n            || (option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null);\n    };\n\n    /**\n     * Consider Case:\n     * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n     * through setOption or media query, using normal zrUtil.merge will cause\n     * {right: 0} does not take effect.\n     *\n     * @example\n     * ComponentModel.extend({\n     *     init: function () {\n     *         ...\n     *         var inputPositionParams = layout.getLayoutParams(option);\n     *         this.mergeOption(inputPositionParams);\n     *     },\n     *     mergeOption: function (newOption) {\n     *         newOption && zrUtil.merge(thisOption, newOption, true);\n     *         layout.mergeLayoutParam(thisOption, newOption);\n     *     }\n     * });\n     *\n     * @param {Object} targetOption\n     * @param {Object} newOption\n     * @param {Object|string} [opt]\n     * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Used for the components\n     *  that width (or height) should not be calculated by left and right (or top and bottom).\n     */\n    layout.mergeLayoutParam = function (targetOption, newOption, opt) {\n        !zrUtil.isObject(opt) && (opt = {});\n\n        var ignoreSize = opt.ignoreSize;\n        !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n\n        var hResult = merge(HV_NAMES[0], 0);\n        var vResult = merge(HV_NAMES[1], 1);\n\n        copy(HV_NAMES[0], targetOption, hResult);\n        copy(HV_NAMES[1], targetOption, vResult);\n\n        function merge(names, hvIdx) {\n            var newParams = {};\n            var newValueCount = 0;\n            var merged = {};\n            var mergedValueCount = 0;\n            var enoughParamNumber = 2;\n\n            each(names, function (name) {\n                merged[name] = targetOption[name];\n            });\n            each(names, function (name) {\n                // Consider case: newOption.width is null, which is\n                // set by user for removing width setting.\n                hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n                hasValue(newParams, name) && newValueCount++;\n                hasValue(merged, name) && mergedValueCount++;\n            });\n\n            if (ignoreSize[hvIdx]) {\n                // Only one of left/right is premitted to exist.\n                if (hasValue(newOption, names[1])) {\n                    merged[names[2]] = null;\n                }\n                else if (hasValue(newOption, names[2])) {\n                    merged[names[1]] = null;\n                }\n                return merged;\n            }\n\n            // Case: newOption: {width: ..., right: ...},\n            // or targetOption: {right: ...} and newOption: {width: ...},\n            // There is no conflict when merged only has params count\n            // little than enoughParamNumber.\n            if (mergedValueCount === enoughParamNumber || !newValueCount) {\n                return merged;\n            }\n            // Case: newOption: {width: ..., right: ...},\n            // Than we can make sure user only want those two, and ignore\n            // all origin params in targetOption.\n            else if (newValueCount >= enoughParamNumber) {\n                return newParams;\n            }\n            else {\n                // Chose another param from targetOption by priority.\n                for (var i = 0; i < names.length; i++) {\n                    var name = names[i];\n                    if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n                        newParams[name] = targetOption[name];\n                        break;\n                    }\n                }\n                return newParams;\n            }\n        }\n\n        function hasProp(obj, name) {\n            return obj.hasOwnProperty(name);\n        }\n\n        function hasValue(obj, name) {\n            return obj[name] != null && obj[name] !== 'auto';\n        }\n\n        function copy(names, target, source) {\n            each(names, function (name) {\n                target[name] = source[name];\n            });\n        }\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.getLayoutParams = function (source) {\n        return layout.copyLayoutParams({}, source);\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.copyLayoutParams = function (target, source) {\n        source && target && each(LOCATION_PARAMS, function (name) {\n            source.hasOwnProperty(name) && (target[name] = source[name]);\n        });\n        return target;\n    };\n\n    module.exports = layout;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/layout.js\n// module id = 980\n// module chunks = 0 1 2","'use strict';\n/**\n * @module echarts/core/BoundingRect\n */\n\n\n    var vec2 = require('./vector');\n    var matrix = require('./matrix');\n\n    var v2ApplyTransform = vec2.applyTransform;\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    /**\n     * @alias module:echarts/core/BoundingRect\n     */\n    function BoundingRect(x, y, width, height) {\n\n        if (width < 0) {\n            x = x + width;\n            width = -width;\n        }\n        if (height < 0) {\n            y = y + height;\n            height = -height;\n        }\n\n        /**\n         * @type {number}\n         */\n        this.x = x;\n        /**\n         * @type {number}\n         */\n        this.y = y;\n        /**\n         * @type {number}\n         */\n        this.width = width;\n        /**\n         * @type {number}\n         */\n        this.height = height;\n    }\n\n    BoundingRect.prototype = {\n\n        constructor: BoundingRect,\n\n        /**\n         * @param {module:echarts/core/BoundingRect} other\n         */\n        union: function (other) {\n            var x = mathMin(other.x, this.x);\n            var y = mathMin(other.y, this.y);\n\n            this.width = mathMax(\n                    other.x + other.width,\n                    this.x + this.width\n                ) - x;\n            this.height = mathMax(\n                    other.y + other.height,\n                    this.y + this.height\n                ) - y;\n            this.x = x;\n            this.y = y;\n        },\n\n        /**\n         * @param {Array.<number>} m\n         * @methods\n         */\n        applyTransform: (function () {\n            var lt = [];\n            var rb = [];\n            var lb = [];\n            var rt = [];\n            return function (m) {\n                // In case usage like this\n                // el.getBoundingRect().applyTransform(el.transform)\n                // And element has no transform\n                if (!m) {\n                    return;\n                }\n                lt[0] = lb[0] = this.x;\n                lt[1] = rt[1] = this.y;\n                rb[0] = rt[0] = this.x + this.width;\n                rb[1] = lb[1] = this.y + this.height;\n\n                v2ApplyTransform(lt, lt, m);\n                v2ApplyTransform(rb, rb, m);\n                v2ApplyTransform(lb, lb, m);\n                v2ApplyTransform(rt, rt, m);\n\n                this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n                this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n                var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n                var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n                this.width = maxX - this.x;\n                this.height = maxY - this.y;\n            };\n        })(),\n\n        /**\n         * Calculate matrix of transforming from self to target rect\n         * @param  {module:zrender/core/BoundingRect} b\n         * @return {Array.<number>}\n         */\n        calculateTransform: function (b) {\n            var a = this;\n            var sx = b.width / a.width;\n            var sy = b.height / a.height;\n\n            var m = matrix.create();\n\n            // 矩阵右乘\n            matrix.translate(m, m, [-a.x, -a.y]);\n            matrix.scale(m, m, [sx, sy]);\n            matrix.translate(m, m, [b.x, b.y]);\n\n            return m;\n        },\n\n        /**\n         * @param {(module:echarts/core/BoundingRect|Object)} b\n         * @return {boolean}\n         */\n        intersect: function (b) {\n            if (!b) {\n                return false;\n            }\n\n            if (!(b instanceof BoundingRect)) {\n                // Normalize negative width/height.\n                b = BoundingRect.create(b);\n            }\n\n            var a = this;\n            var ax0 = a.x;\n            var ax1 = a.x + a.width;\n            var ay0 = a.y;\n            var ay1 = a.y + a.height;\n\n            var bx0 = b.x;\n            var bx1 = b.x + b.width;\n            var by0 = b.y;\n            var by1 = b.y + b.height;\n\n            return ! (ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n        },\n\n        contain: function (x, y) {\n            var rect = this;\n            return x >= rect.x\n                && x <= (rect.x + rect.width)\n                && y >= rect.y\n                && y <= (rect.y + rect.height);\n        },\n\n        /**\n         * @return {module:echarts/core/BoundingRect}\n         */\n        clone: function () {\n            return new BoundingRect(this.x, this.y, this.width, this.height);\n        },\n\n        /**\n         * Copy from another rect\n         */\n        copy: function (other) {\n            this.x = other.x;\n            this.y = other.y;\n            this.width = other.width;\n            this.height = other.height;\n        },\n\n        plain: function () {\n            return {\n                x: this.x,\n                y: this.y,\n                width: this.width,\n                height: this.height\n            };\n        }\n    };\n\n    /**\n     * @param {Object|module:zrender/core/BoundingRect} rect\n     * @param {number} rect.x\n     * @param {number} rect.y\n     * @param {number} rect.width\n     * @param {number} rect.height\n     * @return {module:zrender/core/BoundingRect}\n     */\n    BoundingRect.create = function (rect) {\n        return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n    };\n\n    module.exports = BoundingRect;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/BoundingRect.js\n// module id = 981\n// module chunks = 0 1 2","/**\n * Component model\n *\n * @module echarts/model/Component\n */\n\n\n    var Model = require('./Model');\n    var zrUtil = require('zrender/lib/core/util');\n    var arrayPush = Array.prototype.push;\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n    var layout = require('../util/layout');\n\n    /**\n     * @alias module:echarts/model/Component\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {module:echarts/model/Model} ecModel\n     */\n    var ComponentModel = Model.extend({\n\n        type: 'component',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        id: '',\n\n        /**\n         * @readOnly\n         */\n        name: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        mainType: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        subType: '',\n\n        /**\n         * @readOnly\n         * @type {number}\n         */\n        componentIndex: 0,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        ecModel: null,\n\n        /**\n         * key: componentType\n         * value:  Component model list, can not be null.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @readOnly\n         */\n        dependentModels: [],\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        uid: null,\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        $constructor: function (option, parentModel, ecModel, extraOpt) {\n            Model.call(this, option, parentModel, ecModel, extraOpt);\n\n            this.uid = componentUtil.getUID('componentModel');\n        },\n\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n            this.mergeDefaultAndTheme(option, ecModel);\n        },\n\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            var themeModel = ecModel.getTheme();\n            zrUtil.merge(option, themeModel.get(this.mainType));\n            zrUtil.merge(option, this.getDefaultOption());\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (option, extraOpt) {\n            zrUtil.merge(this.option, option, true);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, option, layoutMode);\n            }\n        },\n\n        // Hooker after init or mergeOption\n        optionUpdated: function (newCptOption, isInit) {},\n\n        getDefaultOption: function () {\n            if (!clazzUtil.hasOwn(this, '__defaultOption')) {\n                var optList = [];\n                var Class = this.constructor;\n                while (Class) {\n                    var opt = Class.prototype.defaultOption;\n                    opt && optList.push(opt);\n                    Class = Class.superClass;\n                }\n\n                var defaultOption = {};\n                for (var i = optList.length - 1; i >= 0; i--) {\n                    defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n                }\n                clazzUtil.set(this, '__defaultOption', defaultOption);\n            }\n            return clazzUtil.get(this, '__defaultOption');\n        },\n\n        getReferringComponents: function (mainType) {\n            return this.ecModel.queryComponents({\n                mainType: mainType,\n                index: this.get(mainType + 'Index', true),\n                id: this.get(mainType + 'Id', true)\n            });\n        }\n\n    });\n\n    // Reset ComponentModel.extend, add preConstruct.\n    // clazzUtil.enableClassExtend(\n    //     ComponentModel,\n    //     function (option, parentModel, ecModel, extraOpt) {\n    //         // Set dependentModels, componentIndex, name, id, mainType, subType.\n    //         zrUtil.extend(this, extraOpt);\n\n    //         this.uid = componentUtil.getUID('componentModel');\n\n    //         // this.setReadOnly([\n    //         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n    //         //     'dependentModels', 'componentIndex'\n    //         // ]);\n    //     }\n    // );\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(\n        ComponentModel, {registerWhenExtend: true}\n    );\n    componentUtil.enableSubTypeDefaulter(ComponentModel);\n\n    // Add capability of ComponentModel.topologicalTravel.\n    componentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\n    function getDependencies(componentType) {\n        var deps = [];\n        zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n            arrayPush.apply(deps, Clazz.prototype.dependencies || []);\n        });\n        // Ensure main type\n        return zrUtil.map(deps, function (type) {\n            return clazzUtil.parseClassType(type).main;\n        });\n    }\n\n    zrUtil.mixin(ComponentModel, require('./mixin/boxLayout'));\n\n    module.exports = ComponentModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/Component.js\n// module id = 982\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var clazz = {};\n\n    var TYPE_DELIMITER = '.';\n    var IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\n    var MEMBER_PRIFIX = '\\0ec_\\0';\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name] = value;` (can be right-value)\n     * @public\n     */\n    clazz.set = function (host, name, value) {\n        return (host[MEMBER_PRIFIX + name] = value);\n    };\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name];`\n     * @public\n     */\n    clazz.get = function (host, name) {\n        return host[MEMBER_PRIFIX + name];\n    };\n\n    /**\n     * For hidden private class member.\n     * The same behavior as `host.hasOwnProperty(name);`\n     * @public\n     */\n    clazz.hasOwn = function (host, name) {\n        return host.hasOwnProperty(MEMBER_PRIFIX + name);\n    };\n\n    /**\n     * Notice, parseClassType('') should returns {main: '', sub: ''}\n     * @public\n     */\n    var parseClassType = clazz.parseClassType = function (componentType) {\n        var ret = {main: '', sub: ''};\n        if (componentType) {\n            componentType = componentType.split(TYPE_DELIMITER);\n            ret.main = componentType[0] || '';\n            ret.sub = componentType[1] || '';\n        }\n        return ret;\n    };\n\n    /**\n     * @public\n     */\n    function checkClassType(componentType) {\n        zrUtil.assert(\n            /^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType),\n            'componentType \"' + componentType + '\" illegal'\n        );\n    }\n\n    /**\n     * @public\n     */\n    clazz.enableClassExtend = function (RootClass, mandatoryMethods) {\n\n        RootClass.$constructor = RootClass;\n        RootClass.extend = function (proto) {\n\n            if (__DEV__) {\n                zrUtil.each(mandatoryMethods, function (method) {\n                    if (!proto[method]) {\n                        console.warn(\n                            'Method `' + method + '` should be implemented'\n                            + (proto.type ? ' in ' + proto.type : '') + '.'\n                        );\n                    }\n                });\n            }\n\n            var superClass = this;\n            var ExtendedClass = function () {\n                if (!proto.$constructor) {\n                    superClass.apply(this, arguments);\n                }\n                else {\n                    proto.$constructor.apply(this, arguments);\n                }\n            };\n\n            zrUtil.extend(ExtendedClass.prototype, proto);\n\n            ExtendedClass.extend = this.extend;\n            ExtendedClass.superCall = superCall;\n            ExtendedClass.superApply = superApply;\n            zrUtil.inherits(ExtendedClass, this);\n            ExtendedClass.superClass = superClass;\n\n            return ExtendedClass;\n        };\n    };\n\n    // superCall should have class info, which can not be fetch from 'this'.\n    // Consider this case:\n    // class A has method f,\n    // class B inherits class A, overrides method f, f call superApply('f'),\n    // class C inherits class B, do not overrides method f,\n    // then when method of class C is called, dead loop occured.\n    function superCall(context, methodName) {\n        var args = zrUtil.slice(arguments, 2);\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    function superApply(context, methodName, args) {\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    /**\n     * @param {Object} entity\n     * @param {Object} options\n     * @param {boolean} [options.registerWhenExtend]\n     * @public\n     */\n    clazz.enableClassManagement = function (entity, options) {\n        options = options || {};\n\n        /**\n         * Component model classes\n         * key: componentType,\n         * value:\n         *     componentClass, when componentType is 'xxx'\n         *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n         * @type {Object}\n         */\n        var storage = {};\n\n        entity.registerClass = function (Clazz, componentType) {\n            if (componentType) {\n                checkClassType(componentType);\n                componentType = parseClassType(componentType);\n\n                if (!componentType.sub) {\n                    if (__DEV__) {\n                        if (storage[componentType.main]) {\n                            console.warn(componentType.main + ' exists.');\n                        }\n                    }\n                    storage[componentType.main] = Clazz;\n                }\n                else if (componentType.sub !== IS_CONTAINER) {\n                    var container = makeContainer(componentType);\n                    container[componentType.sub] = Clazz;\n                }\n            }\n            return Clazz;\n        };\n\n        entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n            var Clazz = storage[componentMainType];\n\n            if (Clazz && Clazz[IS_CONTAINER]) {\n                Clazz = subType ? Clazz[subType] : null;\n            }\n\n            if (throwWhenNotFound && !Clazz) {\n                throw new Error(\n                    !subType\n                        ? componentMainType + '.' + 'type should be specified.'\n                        : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.'\n                );\n            }\n\n            return Clazz;\n        };\n\n        entity.getClassesByMainType = function (componentType) {\n            componentType = parseClassType(componentType);\n\n            var result = [];\n            var obj = storage[componentType.main];\n\n            if (obj && obj[IS_CONTAINER]) {\n                zrUtil.each(obj, function (o, type) {\n                    type !== IS_CONTAINER && result.push(o);\n                });\n            }\n            else {\n                result.push(obj);\n            }\n\n            return result;\n        };\n\n        entity.hasClass = function (componentType) {\n            // Just consider componentType.main.\n            componentType = parseClassType(componentType);\n            return !!storage[componentType.main];\n        };\n\n        /**\n         * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n         */\n        entity.getAllClassMainTypes = function () {\n            var types = [];\n            zrUtil.each(storage, function (obj, type) {\n                types.push(type);\n            });\n            return types;\n        };\n\n        /**\n         * If a main type is container and has sub types\n         * @param  {string}  mainType\n         * @return {boolean}\n         */\n        entity.hasSubTypes = function (componentType) {\n            componentType = parseClassType(componentType);\n            var obj = storage[componentType.main];\n            return obj && obj[IS_CONTAINER];\n        };\n\n        entity.parseClassType = parseClassType;\n\n        function makeContainer(componentType) {\n            var container = storage[componentType.main];\n            if (!container || !container[IS_CONTAINER]) {\n                container = storage[componentType.main] = {};\n                container[IS_CONTAINER] = true;\n            }\n            return container;\n        }\n\n        if (options.registerWhenExtend) {\n            var originalExtend = entity.extend;\n            if (originalExtend) {\n                entity.extend = function (proto) {\n                    var ExtendedClass = originalExtend.call(this, proto);\n                    return entity.registerClass(ExtendedClass, proto.type);\n                };\n            }\n        }\n\n        return entity;\n    };\n\n    /**\n     * @param {string|Array.<string>} properties\n     */\n    clazz.setReadOnly = function (obj, properties) {\n        // FIXME It seems broken in IE8 simulation of IE11\n        // if (!zrUtil.isArray(properties)) {\n        //     properties = properties != null ? [properties] : [];\n        // }\n        // zrUtil.each(properties, function (prop) {\n        //     var value = obj[prop];\n\n        //     Object.defineProperty\n        //         && Object.defineProperty(obj, prop, {\n        //             value: value, writable: false\n        //         });\n        //     zrUtil.isArray(obj[prop])\n        //         && Object.freeze\n        //         && Object.freeze(obj[prop]);\n        // });\n    };\n\n    module.exports = clazz;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/clazz.js\n// module id = 983\n// module chunks = 0 1 2","\n\n    var util = require('../core/util');\n    var BoundingRect = require('../core/BoundingRect');\n    var imageHelper = require('../graphic/helper/image');\n\n    var textWidthCache = {};\n    var textWidthCacheCounter = 0;\n\n    var TEXT_CACHE_MAX = 5000;\n    var STYLE_REG = /\\{([a-zA-Z0-9_]+)\\|([^}]*)\\}/g;\n    var DEFAULT_FONT = '12px sans-serif';\n\n    var retrieve2 = util.retrieve2;\n    var retrieve3 = util.retrieve3;\n\n    /**\n     * @public\n     * @param {string} text\n     * @param {string} font\n     * @return {number} width\n     */\n    function getTextWidth(text, font) {\n        font = font || DEFAULT_FONT;\n        var key = text + ':' + font;\n        if (textWidthCache[key]) {\n            return textWidthCache[key];\n        }\n\n        var textLines = (text + '').split('\\n');\n        var width = 0;\n\n        for (var i = 0, l = textLines.length; i < l; i++) {\n            // textContain.measureText may be overrided in SVG or VML\n            width = Math.max(textContain.measureText(textLines[i], font).width, width);\n        }\n\n        if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n            textWidthCacheCounter = 0;\n            textWidthCache = {};\n        }\n        textWidthCacheCounter++;\n        textWidthCache[key] = width;\n\n        return width;\n    }\n\n    /**\n     * @public\n     * @param {string} text\n     * @param {string} font\n     * @param {string} [textAlign='left']\n     * @param {string} [textVerticalAlign='top']\n     * @param {Array.<number>} [textPadding]\n     * @param {Object} [rich]\n     * @param {Object} [truncate]\n     * @return {Object} {x, y, width, height, lineHeight}\n     */\n    function getTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n        return rich\n            ? getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate)\n            : getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate);\n    }\n\n    function getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate) {\n        var contentBlock = parsePlainText(text, font, textPadding, truncate);\n        var outerWidth = getTextWidth(text, font);\n        if (textPadding) {\n            outerWidth += textPadding[1] + textPadding[3];\n        }\n        var outerHeight = contentBlock.outerHeight;\n\n        var x = adjustTextX(0, outerWidth, textAlign);\n        var y = adjustTextY(0, outerHeight, textVerticalAlign);\n\n        var rect = new BoundingRect(x, y, outerWidth, outerHeight);\n        rect.lineHeight = contentBlock.lineHeight;\n\n        return rect;\n    }\n\n    function getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n        var contentBlock = parseRichText(text, {\n            rich: rich,\n            truncate: truncate,\n            font: font,\n            textAlign: textAlign,\n            textPadding: textPadding\n        });\n        var outerWidth = contentBlock.outerWidth;\n        var outerHeight = contentBlock.outerHeight;\n\n        var x = adjustTextX(0, outerWidth, textAlign);\n        var y = adjustTextY(0, outerHeight, textVerticalAlign);\n\n        return new BoundingRect(x, y, outerWidth, outerHeight);\n    }\n\n    /**\n     * @public\n     * @param {number} x\n     * @param {number} width\n     * @param {string} [textAlign='left']\n     * @return {number} Adjusted x.\n     */\n    function adjustTextX(x, width, textAlign) {\n        // FIXME Right to left language\n        if (textAlign === 'right') {\n            x -= width;\n        }\n        else if (textAlign === 'center') {\n            x -= width / 2;\n        }\n        return x;\n    }\n\n    /**\n     * @public\n     * @param {number} y\n     * @param {number} height\n     * @param {string} [textVerticalAlign='top']\n     * @return {number} Adjusted y.\n     */\n    function adjustTextY(y, height, textVerticalAlign) {\n        if (textVerticalAlign === 'middle') {\n            y -= height / 2;\n        }\n        else if (textVerticalAlign === 'bottom') {\n            y -= height;\n        }\n        return y;\n    }\n\n    /**\n     * @public\n     * @param {stirng} textPosition\n     * @param {Object} rect {x, y, width, height}\n     * @param {number} distance\n     * @return {Object} {x, y, textAlign, textVerticalAlign}\n     */\n    function adjustTextPositionOnRect(textPosition, rect, distance) {\n\n        var x = rect.x;\n        var y = rect.y;\n\n        var height = rect.height;\n        var width = rect.width;\n        var halfHeight = height / 2;\n\n        var textAlign = 'left';\n        var textVerticalAlign = 'top';\n\n        switch (textPosition) {\n            case 'left':\n                x -= distance;\n                y += halfHeight;\n                textAlign = 'right';\n                textVerticalAlign = 'middle';\n                break;\n            case 'right':\n                x += distance + width;\n                y += halfHeight;\n                textVerticalAlign = 'middle';\n                break;\n            case 'top':\n                x += width / 2;\n                y -= distance;\n                textAlign = 'center';\n                textVerticalAlign = 'bottom';\n                break;\n            case 'bottom':\n                x += width / 2;\n                y += height + distance;\n                textAlign = 'center';\n                break;\n            case 'inside':\n                x += width / 2;\n                y += halfHeight;\n                textAlign = 'center';\n                textVerticalAlign = 'middle';\n                break;\n            case 'insideLeft':\n                x += distance;\n                y += halfHeight;\n                textVerticalAlign = 'middle';\n                break;\n            case 'insideRight':\n                x += width - distance;\n                y += halfHeight;\n                textAlign = 'right';\n                textVerticalAlign = 'middle';\n                break;\n            case 'insideTop':\n                x += width / 2;\n                y += distance;\n                textAlign = 'center';\n                break;\n            case 'insideBottom':\n                x += width / 2;\n                y += height - distance;\n                textAlign = 'center';\n                textVerticalAlign = 'bottom';\n                break;\n            case 'insideTopLeft':\n                x += distance;\n                y += distance;\n                break;\n            case 'insideTopRight':\n                x += width - distance;\n                y += distance;\n                textAlign = 'right';\n                break;\n            case 'insideBottomLeft':\n                x += distance;\n                y += height - distance;\n                textVerticalAlign = 'bottom';\n                break;\n            case 'insideBottomRight':\n                x += width - distance;\n                y += height - distance;\n                textAlign = 'right';\n                textVerticalAlign = 'bottom';\n                break;\n        }\n\n        return {\n            x: x,\n            y: y,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    }\n\n    /**\n     * Show ellipsis if overflow.\n     *\n     * @public\n     * @param  {string} text\n     * @param  {string} containerWidth\n     * @param  {string} font\n     * @param  {number} [ellipsis='...']\n     * @param  {Object} [options]\n     * @param  {number} [options.maxIterations=3]\n     * @param  {number} [options.minChar=0] If truncate result are less\n     *                  then minChar, ellipsis will not show, which is\n     *                  better for user hint in some cases.\n     * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n     * @return {string}\n     */\n    function truncateText(text, containerWidth, font, ellipsis, options) {\n        if (!containerWidth) {\n            return '';\n        }\n\n        var textLines = (text + '').split('\\n');\n        options = prepareTruncateOptions(containerWidth, font, ellipsis, options);\n\n        // FIXME\n        // It is not appropriate that every line has '...' when truncate multiple lines.\n        for (var i = 0, len = textLines.length; i < len; i++) {\n            textLines[i] = truncateSingleLine(textLines[i], options);\n        }\n\n        return textLines.join('\\n');\n    }\n\n    function prepareTruncateOptions(containerWidth, font, ellipsis, options) {\n        options = util.extend({}, options);\n\n        options.font = font;\n        var ellipsis = retrieve2(ellipsis, '...');\n        options.maxIterations = retrieve2(options.maxIterations, 2);\n        var minChar = options.minChar = retrieve2(options.minChar, 0);\n        // FIXME\n        // Other languages?\n        options.cnCharWidth = getTextWidth('国', font);\n        // FIXME\n        // Consider proportional font?\n        var ascCharWidth = options.ascCharWidth = getTextWidth('a', font);\n        options.placeholder = retrieve2(options.placeholder, '');\n\n        // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n        // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n        var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n        for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n            contentWidth -= ascCharWidth;\n        }\n\n        var ellipsisWidth = getTextWidth(ellipsis);\n        if (ellipsisWidth > contentWidth) {\n            ellipsis = '';\n            ellipsisWidth = 0;\n        }\n\n        contentWidth = containerWidth - ellipsisWidth;\n\n        options.ellipsis = ellipsis;\n        options.ellipsisWidth = ellipsisWidth;\n        options.contentWidth = contentWidth;\n        options.containerWidth = containerWidth;\n\n        return options;\n    }\n\n    function truncateSingleLine(textLine, options) {\n        var containerWidth = options.containerWidth;\n        var font = options.font;\n        var contentWidth = options.contentWidth;\n\n        if (!containerWidth) {\n            return '';\n        }\n\n        var lineWidth = getTextWidth(textLine, font);\n\n        if (lineWidth <= containerWidth) {\n            return textLine;\n        }\n\n        for (var j = 0;; j++) {\n            if (lineWidth <= contentWidth || j >= options.maxIterations) {\n                textLine += options.ellipsis;\n                break;\n            }\n\n            var subLength = j === 0\n                ? estimateLength(textLine, contentWidth, options.ascCharWidth, options.cnCharWidth)\n                : lineWidth > 0\n                ? Math.floor(textLine.length * contentWidth / lineWidth)\n                : 0;\n\n            textLine = textLine.substr(0, subLength);\n            lineWidth = getTextWidth(textLine, font);\n        }\n\n        if (textLine === '') {\n            textLine = options.placeholder;\n        }\n\n        return textLine;\n    }\n\n    function estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n        var width = 0;\n        var i = 0;\n        for (var len = text.length; i < len && width < contentWidth; i++) {\n            var charCode = text.charCodeAt(i);\n            width += (0 <= charCode && charCode <= 127) ? ascCharWidth : cnCharWidth;\n        }\n        return i;\n    }\n\n    /**\n     * @public\n     * @param {string} font\n     * @return {number} line height\n     */\n    function getLineHeight(font) {\n        // FIXME A rough approach.\n        return getTextWidth('国', font);\n    }\n\n    /**\n     * @public\n     * @param {string} text\n     * @param {string} font\n     * @return {Object} width\n     */\n    function measureText(text, font) {\n        var ctx = util.getContext();\n        ctx.font = font || DEFAULT_FONT;\n        return ctx.measureText(text);\n    }\n\n    /**\n     * @public\n     * @param {string} text\n     * @param {string} font\n     * @param {Object} [truncate]\n     * @return {Object} block: {lineHeight, lines, height, outerHeight}\n     *  Notice: for performance, do not calculate outerWidth util needed.\n     */\n    function parsePlainText(text, font, padding, truncate) {\n        text != null && (text += '');\n\n        var lineHeight = getLineHeight(font);\n        var lines = text ? text.split('\\n') : [];\n        var height = lines.length * lineHeight;\n        var outerHeight = height;\n\n        if (padding) {\n            outerHeight += padding[0] + padding[2];\n        }\n\n        if (text && truncate) {\n            var truncOuterHeight = truncate.outerHeight;\n            var truncOuterWidth = truncate.outerWidth;\n            if (truncOuterHeight != null && outerHeight > truncOuterHeight) {\n                text = '';\n                lines = [];\n            }\n            else if (truncOuterWidth != null) {\n                var options = prepareTruncateOptions(\n                    truncOuterWidth - (padding ? padding[1] + padding[3] : 0),\n                    font,\n                    truncate.ellipsis,\n                    {minChar: truncate.minChar, placeholder: truncate.placeholder}\n                );\n\n                // FIXME\n                // It is not appropriate that every line has '...' when truncate multiple lines.\n                for (var i = 0, len = lines.length; i < len; i++) {\n                    lines[i] = truncateSingleLine(lines[i], options);\n                }\n            }\n        }\n\n        return {\n            lines: lines,\n            height: height,\n            outerHeight: outerHeight,\n            lineHeight: lineHeight\n        };\n    }\n\n    /**\n     * For example: 'some text {a|some text}other text{b|some text}xxx{c|}xxx'\n     * Also consider 'bbbb{a|xxx\\nzzz}xxxx\\naaaa'.\n     *\n     * @public\n     * @param {string} text\n     * @param {Object} style\n     * @return {Object} block\n     * {\n     *      width,\n     *      height,\n     *      lines: [{\n     *          lineHeight,\n     *          width,\n     *          tokens: [[{\n     *              styleName,\n     *              text,\n     *              width,      // include textPadding\n     *              height,     // include textPadding\n     *              textWidth, // pure text width\n     *              textHeight, // pure text height\n     *              lineHeihgt,\n     *              font,\n     *              textAlign,\n     *              textVerticalAlign\n     *          }], [...], ...]\n     *      }, ...]\n     * }\n     * If styleName is undefined, it is plain text.\n     */\n    function parseRichText(text, style) {\n        var contentBlock = {lines: [], width: 0, height: 0};\n\n        text != null && (text += '');\n        if (!text) {\n            return contentBlock;\n        }\n\n        var lastIndex = STYLE_REG.lastIndex = 0;\n        var result;\n        while ((result = STYLE_REG.exec(text)) != null)  {\n            var matchedIndex = result.index;\n            if (matchedIndex > lastIndex) {\n                pushTokens(contentBlock, text.substring(lastIndex, matchedIndex));\n            }\n            pushTokens(contentBlock, result[2], result[1]);\n            lastIndex = STYLE_REG.lastIndex;\n        }\n\n        if (lastIndex < text.length) {\n            pushTokens(contentBlock, text.substring(lastIndex, text.length));\n        }\n\n        var lines = contentBlock.lines;\n        var contentHeight = 0;\n        var contentWidth = 0;\n        // For `textWidth: 100%`\n        var pendingList = [];\n\n        var stlPadding = style.textPadding;\n\n        var truncate = style.truncate;\n        var truncateWidth = truncate && truncate.outerWidth;\n        var truncateHeight = truncate && truncate.outerHeight;\n        if (stlPadding) {\n            truncateWidth != null && (truncateWidth -= stlPadding[1] + stlPadding[3]);\n            truncateHeight != null && (truncateHeight -= stlPadding[0] + stlPadding[2]);\n        }\n\n        // Calculate layout info of tokens.\n        for (var i = 0; i < lines.length; i++) {\n            var line = lines[i];\n            var lineHeight = 0;\n            var lineWidth = 0;\n\n            for (var j = 0; j < line.tokens.length; j++) {\n                var token = line.tokens[j];\n                var tokenStyle = token.styleName && style.rich[token.styleName] || {};\n                // textPadding should not inherit from style.\n                var textPadding = token.textPadding = tokenStyle.textPadding;\n\n                // textFont has been asigned to font by `normalizeStyle`.\n                var font = token.font = tokenStyle.font || style.font;\n\n                // textHeight can be used when textVerticalAlign is specified in token.\n                var tokenHeight = token.textHeight = retrieve2(\n                    // textHeight should not be inherited, consider it can be specified\n                    // as box height of the block.\n                    tokenStyle.textHeight, textContain.getLineHeight(font)\n                );\n                textPadding && (tokenHeight += textPadding[0] + textPadding[2]);\n                token.height = tokenHeight;\n                token.lineHeight = retrieve3(\n                    tokenStyle.textLineHeight, style.textLineHeight, tokenHeight\n                );\n\n                token.textAlign = tokenStyle && tokenStyle.textAlign || style.textAlign;\n                token.textVerticalAlign = tokenStyle && tokenStyle.textVerticalAlign || 'middle';\n\n                if (truncateHeight != null && contentHeight + token.lineHeight > truncateHeight) {\n                    return {lines: [], width: 0, height: 0};\n                }\n\n                token.textWidth = textContain.getWidth(token.text, font);\n                var tokenWidth = tokenStyle.textWidth;\n                var tokenWidthNotSpecified = tokenWidth == null || tokenWidth === 'auto';\n\n                // Percent width, can be `100%`, can be used in drawing separate\n                // line when box width is needed to be auto.\n                if (typeof tokenWidth === 'string' && tokenWidth.charAt(tokenWidth.length - 1) === '%') {\n                    token.percentWidth = tokenWidth;\n                    pendingList.push(token);\n                    tokenWidth = 0;\n                    // Do not truncate in this case, because there is no user case\n                    // and it is too complicated.\n                }\n                else {\n                    if (tokenWidthNotSpecified) {\n                        tokenWidth = token.textWidth;\n\n                        // FIXME: If image is not loaded and textWidth is not specified, calling\n                        // `getBoundingRect()` will not get correct result.\n                        var textBackgroundColor = tokenStyle.textBackgroundColor;\n                        var bgImg = textBackgroundColor && textBackgroundColor.image;\n\n                        // Use cases:\n                        // (1) If image is not loaded, it will be loaded at render phase and call\n                        // `dirty()` and `textBackgroundColor.image` will be replaced with the loaded\n                        // image, and then the right size will be calculated here at the next tick.\n                        // See `graphic/helper/text.js`.\n                        // (2) If image loaded, and `textBackgroundColor.image` is image src string,\n                        // use `imageHelper.findExistImage` to find cached image.\n                        // `imageHelper.findExistImage` will always be called here before\n                        // `imageHelper.createOrUpdateImage` in `graphic/helper/text.js#renderRichText`\n                        // which ensures that image will not be rendered before correct size calcualted.\n                        if (bgImg) {\n                            bgImg = imageHelper.findExistImage(bgImg);\n                            if (imageHelper.isImageReady(bgImg)) {\n                                tokenWidth = Math.max(tokenWidth, bgImg.width * tokenHeight / bgImg.height);\n                            }\n                        }\n                    }\n\n                    var paddingW = textPadding ? textPadding[1] + textPadding[3] : 0;\n                    tokenWidth += paddingW;\n\n                    var remianTruncWidth = truncateWidth != null ? truncateWidth - lineWidth : null;\n\n                    if (remianTruncWidth != null && remianTruncWidth < tokenWidth) {\n                        if (!tokenWidthNotSpecified || remianTruncWidth < paddingW) {\n                            token.text = '';\n                            token.textWidth = tokenWidth = 0;\n                        }\n                        else {\n                            token.text = truncateText(\n                                token.text, remianTruncWidth - paddingW, font, truncate.ellipsis,\n                                {minChar: truncate.minChar}\n                            );\n                            token.textWidth = textContain.getWidth(token.text, font);\n                            tokenWidth = token.textWidth + paddingW;\n                        }\n                    }\n                }\n\n                lineWidth += (token.width = tokenWidth);\n                tokenStyle && (lineHeight = Math.max(lineHeight, token.lineHeight));\n            }\n\n            line.width = lineWidth;\n            line.lineHeight = lineHeight;\n            contentHeight += lineHeight;\n            contentWidth = Math.max(contentWidth, lineWidth);\n        }\n\n        contentBlock.outerWidth = contentBlock.width = retrieve2(style.textWidth, contentWidth);\n        contentBlock.outerHeight = contentBlock.height = retrieve2(style.textHeight, contentHeight);\n\n        if (stlPadding) {\n            contentBlock.outerWidth += stlPadding[1] + stlPadding[3];\n            contentBlock.outerHeight += stlPadding[0] + stlPadding[2];\n        }\n\n        for (var i = 0; i < pendingList.length; i++) {\n            var token = pendingList[i];\n            var percentWidth = token.percentWidth;\n            // Should not base on outerWidth, because token can not be placed out of padding.\n            token.width = parseInt(percentWidth, 10) / 100 * contentWidth;\n        }\n\n        return contentBlock;\n    }\n\n    function pushTokens(block, str, styleName) {\n        var isEmptyStr = str === '';\n        var strs = str.split('\\n');\n        var lines = block.lines;\n\n        for (var i = 0; i < strs.length; i++) {\n            var text = strs[i];\n            var token = {\n                styleName: styleName,\n                text: text,\n                isLineHolder: !text && !isEmptyStr\n            };\n\n            // The first token should be appended to the last line.\n            if (!i) {\n                var tokens = (lines[lines.length - 1] || (lines[0] = {tokens: []})).tokens;\n\n                // Consider cases:\n                // (1) ''.split('\\n') => ['', '\\n', ''], the '' at the first item\n                // (which is a placeholder) should be replaced by new token.\n                // (2) A image backage, where token likes {a|}.\n                // (3) A redundant '' will affect textAlign in line.\n                // (4) tokens with the same tplName should not be merged, because\n                // they should be displayed in different box (with border and padding).\n                var tokensLen = tokens.length;\n                (tokensLen === 1 && tokens[0].isLineHolder)\n                    ? (tokens[0] = token)\n                    // Consider text is '', only insert when it is the \"lineHolder\" or\n                    // \"emptyStr\". Otherwise a redundant '' will affect textAlign in line.\n                    : ((text || !tokensLen || isEmptyStr) && tokens.push(token));\n            }\n            // Other tokens always start a new line.\n            else {\n                // If there is '', insert it as a placeholder.\n                lines.push({tokens: [token]});\n            }\n        }\n    }\n\n    function makeFont(style) {\n        // FIXME in node-canvas fontWeight is before fontStyle\n        // Use `fontSize` `fontFamily` to check whether font properties are defined.\n        return (style.fontSize || style.fontFamily) && [\n            style.fontStyle,\n            style.fontWeight,\n            (style.fontSize || 12) + 'px',\n            // If font properties are defined, `fontFamily` should not be ignored.\n            style.fontFamily || 'sans-serif'\n        ].join(' ') || style.textFont || style.font;\n    }\n\n    var textContain = {\n\n        getWidth: getTextWidth,\n\n        getBoundingRect: getTextRect,\n\n        adjustTextPositionOnRect: adjustTextPositionOnRect,\n\n        truncateText: truncateText,\n\n        measureText: measureText,\n\n        getLineHeight: getLineHeight,\n\n        parsePlainText: parsePlainText,\n\n        parseRichText: parseRichText,\n\n        adjustTextX: adjustTextX,\n\n        adjustTextY: adjustTextY,\n\n        makeFont: makeFont,\n\n        DEFAULT_FONT: DEFAULT_FONT\n    };\n\n    module.exports = textContain;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/contain/text.js\n// module id = 984\n// module chunks = 0 1 2","\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n    /**\n     * 3x2矩阵操作类\n     * @exports zrender/tool/matrix\n     */\n    var matrix = {\n        /**\n         * 创建一个单位矩阵\n         * @return {Float32Array|Array.<number>}\n         */\n        create : function() {\n            var out = new ArrayCtor(6);\n            matrix.identity(out);\n\n            return out;\n        },\n        /**\n         * 设置矩阵为单位矩阵\n         * @param {Float32Array|Array.<number>} out\n         */\n        identity : function(out) {\n            out[0] = 1;\n            out[1] = 0;\n            out[2] = 0;\n            out[3] = 1;\n            out[4] = 0;\n            out[5] = 0;\n            return out;\n        },\n        /**\n         * 复制矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m\n         */\n        copy: function(out, m) {\n            out[0] = m[0];\n            out[1] = m[1];\n            out[2] = m[2];\n            out[3] = m[3];\n            out[4] = m[4];\n            out[5] = m[5];\n            return out;\n        },\n        /**\n         * 矩阵相乘\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m1\n         * @param {Float32Array|Array.<number>} m2\n         */\n        mul : function (out, m1, m2) {\n            // Consider matrix.mul(m, m2, m);\n            // where out is the same as m2.\n            // So use temp variable to escape error.\n            var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n            var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n            var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n            var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n            var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n            var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n            out[0] = out0;\n            out[1] = out1;\n            out[2] = out2;\n            out[3] = out3;\n            out[4] = out4;\n            out[5] = out5;\n            return out;\n        },\n        /**\n         * 平移变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        translate : function(out, a, v) {\n            out[0] = a[0];\n            out[1] = a[1];\n            out[2] = a[2];\n            out[3] = a[3];\n            out[4] = a[4] + v[0];\n            out[5] = a[5] + v[1];\n            return out;\n        },\n        /**\n         * 旋转变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {number} rad\n         */\n        rotate : function(out, a, rad) {\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n            var st = Math.sin(rad);\n            var ct = Math.cos(rad);\n\n            out[0] = aa * ct + ab * st;\n            out[1] = -aa * st + ab * ct;\n            out[2] = ac * ct + ad * st;\n            out[3] = -ac * st + ct * ad;\n            out[4] = ct * atx + st * aty;\n            out[5] = ct * aty - st * atx;\n            return out;\n        },\n        /**\n         * 缩放变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        scale : function(out, a, v) {\n            var vx = v[0];\n            var vy = v[1];\n            out[0] = a[0] * vx;\n            out[1] = a[1] * vy;\n            out[2] = a[2] * vx;\n            out[3] = a[3] * vy;\n            out[4] = a[4] * vx;\n            out[5] = a[5] * vy;\n            return out;\n        },\n        /**\n         * 求逆矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         */\n        invert : function(out, a) {\n\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n\n            var det = aa * ad - ab * ac;\n            if (!det) {\n                return null;\n            }\n            det = 1.0 / det;\n\n            out[0] = ad * det;\n            out[1] = -ab * det;\n            out[2] = -ac * det;\n            out[3] = aa * det;\n            out[4] = (ac * aty - ad * atx) * det;\n            out[5] = (ab * atx - aa * aty) * det;\n            return out;\n        }\n    };\n\n    module.exports = matrix;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/matrix.js\n// module id = 985\n// module chunks = 0 1 2","/**\n * List for data storage\n * @module echarts/data/List\n */\n\n\n    var UNDEFINED = 'undefined';\n    var globalObj = typeof window === 'undefined' ? global : window;\n    var Float64Array = typeof globalObj.Float64Array === UNDEFINED\n        ? Array : globalObj.Float64Array;\n    var Int32Array = typeof globalObj.Int32Array === UNDEFINED\n        ? Array : globalObj.Int32Array;\n\n    var dataCtors = {\n        'float': Float64Array,\n        'int': Int32Array,\n        // Ordinal data type can be string or int\n        'ordinal': Array,\n        'number': Array,\n        'time': Array\n    };\n\n    var Model = require('../model/Model');\n    var DataDiffer = require('./DataDiffer');\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var isObject = zrUtil.isObject;\n\n    var TRANSFERABLE_PROPERTIES = [\n        'stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'\n    ];\n\n    function transferProperties(a, b) {\n        zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n            if (b.hasOwnProperty(propName)) {\n                a[propName] = b[propName];\n            }\n        });\n\n        a.__wrappedMethods = b.__wrappedMethods;\n    }\n\n    function DefaultDataProvider(dataArray) {\n        this._array = dataArray || [];\n    }\n\n    DefaultDataProvider.prototype.pure = false;\n\n    DefaultDataProvider.prototype.count = function () {\n        return this._array.length;\n    };\n    DefaultDataProvider.prototype.getItem = function (idx) {\n        return this._array[idx];\n    };\n\n    /**\n     * @constructor\n     * @alias module:echarts/data/List\n     *\n     * @param {Array.<string|Object>} dimensions\n     *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n     *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n     * @param {module:echarts/model/Model} hostModel\n     */\n    var List = function (dimensions, hostModel) {\n\n        dimensions = dimensions || ['x', 'y'];\n\n        var dimensionInfos = {};\n        var dimensionNames = [];\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimensionName;\n            var dimensionInfo = {};\n            if (typeof dimensions[i] === 'string') {\n                dimensionName = dimensions[i];\n                dimensionInfo = {\n                    name: dimensionName,\n                    coordDim: dimensionName,\n                    coordDimIndex: 0,\n                    stackable: false,\n                    // Type can be 'float', 'int', 'number'\n                    // Default is number, Precision of float may not enough\n                    type: 'number'\n                };\n            }\n            else {\n                dimensionInfo = dimensions[i];\n                dimensionName = dimensionInfo.name;\n                dimensionInfo.type = dimensionInfo.type || 'number';\n                if (!dimensionInfo.coordDim) {\n                    dimensionInfo.coordDim = dimensionName;\n                    dimensionInfo.coordDimIndex = 0;\n                }\n            }\n            dimensionInfo.otherDims = dimensionInfo.otherDims || {};\n            dimensionNames.push(dimensionName);\n            dimensionInfos[dimensionName] = dimensionInfo;\n        }\n\n        /**\n         * @readOnly\n         * @type {Array.<string>}\n         */\n        this.dimensions = dimensionNames;\n\n        /**\n         * Infomation of each data dimension, like data type.\n         * @type {Object}\n         */\n        this._dimensionInfos = dimensionInfos;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.hostModel = hostModel;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.dataType;\n\n        /**\n         * Indices stores the indices of data subset after filtered.\n         * This data subset will be used in chart.\n         * @type {Array.<number>}\n         * @readOnly\n         */\n        this.indices = [];\n\n        /**\n         * Data storage\n         * @type {Object.<key, TypedArray|Array>}\n         * @private\n         */\n        this._storage = {};\n\n        /**\n         * @type {Array.<string>}\n         */\n        this._nameList = [];\n        /**\n         * @type {Array.<string>}\n         */\n        this._idList = [];\n\n        /**\n         * Models of data option is stored sparse for optimizing memory cost\n         * @type {Array.<module:echarts/model/Model>}\n         * @private\n         */\n        this._optionModels = [];\n\n        /**\n         * @param {module:echarts/data/List}\n         */\n        this.stackedOn = null;\n\n        /**\n         * Global visual properties after visual coding\n         * @type {Object}\n         * @private\n         */\n        this._visual = {};\n\n        /**\n         * Globel layout properties.\n         * @type {Object}\n         * @private\n         */\n        this._layout = {};\n\n        /**\n         * Item visual properties after visual coding\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemVisuals = [];\n\n        /**\n         * Item layout properties after layout\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemLayouts = [];\n\n        /**\n         * Graphic elemnents\n         * @type {Array.<module:zrender/Element>}\n         * @private\n         */\n        this._graphicEls = [];\n\n        /**\n         * @type {Array.<Array|Object>}\n         * @private\n         */\n        this._rawData;\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._extent;\n    };\n\n    var listProto = List.prototype;\n\n    listProto.type = 'list';\n\n    /**\n     * If each data item has it's own option\n     * @type {boolean}\n     */\n    listProto.hasItemOption = true;\n\n    /**\n     * Get dimension name\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     * @return {string} Concrete dim name.\n     */\n    listProto.getDimension = function (dim) {\n        if (!isNaN(dim)) {\n            dim = this.dimensions[dim] || dim;\n        }\n        return dim;\n    };\n\n    /**\n     * Get type and stackable info of particular dimension\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     */\n    listProto.getDimensionInfo = function (dim) {\n        return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);\n    };\n\n    /**\n     * Initialize from data\n     * @param {Array.<Object|number|Array>} data\n     * @param {Array.<string>} [nameList]\n     * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n     */\n    listProto.initData = function (data, nameList, dimValueGetter) {\n        data = data || [];\n\n        var isDataArray = zrUtil.isArray(data);\n        if (isDataArray) {\n            data = new DefaultDataProvider(data);\n        }\n        if (__DEV__) {\n            if (!isDataArray && (typeof data.getItem != 'function' || typeof data.count != 'function')) {\n                throw new Error('Inavlid data provider.');\n            }\n        }\n\n        this._rawData = data;\n\n        // Clear\n        var storage = this._storage = {};\n        var indices = this.indices = [];\n\n        var dimensions = this.dimensions;\n        var dimensionInfoMap = this._dimensionInfos;\n\n        var size = data.count();\n\n        var idList = [];\n        var nameRepeatCount = {};\n        var nameDimIdx;\n\n        nameList = nameList || [];\n\n        // Init storage\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimInfo = dimensionInfoMap[dimensions[i]];\n            dimInfo.otherDims.itemName === 0 && (nameDimIdx = i);\n            var DataCtor = dataCtors[dimInfo.type];\n            storage[dimensions[i]] = new DataCtor(size);\n        }\n\n        var self = this;\n        if (!dimValueGetter) {\n            self.hasItemOption = false;\n        }\n        // Default dim value getter\n        dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {\n            var value = modelUtil.getDataItemValue(dataItem);\n            // If any dataItem is like { value: 10 }\n            if (modelUtil.isDataItemOption(dataItem)) {\n                self.hasItemOption = true;\n            }\n            return modelUtil.converDataValue(\n                (value instanceof Array)\n                    ? value[dimIndex]\n                    // If value is a single number or something else not array.\n                    : value,\n                dimensionInfoMap[dimName]\n            );\n        };\n\n        for (var i = 0; i < size; i++) {\n            // NOTICE: Try not to write things into dataItem\n            var dataItem = data.getItem(i);\n            // Each data item is value\n            // [1, 2]\n            // 2\n            // Bar chart, line chart which uses category axis\n            // only gives the 'y' value. 'x' value is the indices of cateogry\n            // Use a tempValue to normalize the value to be a (x, y) value\n\n            // Store the data by dimensions\n            for (var k = 0; k < dimensions.length; k++) {\n                var dim = dimensions[k];\n                var dimStorage = storage[dim];\n                // PENDING NULL is empty or zero\n                dimStorage[i] = dimValueGetter(dataItem, dim, i, k);\n            }\n\n            indices.push(i);\n        }\n\n        // Use the name in option and create id\n        for (var i = 0; i < size; i++) {\n            var dataItem = data.getItem(i);\n            if (!nameList[i] && dataItem) {\n                if (dataItem.name != null) {\n                    nameList[i] = dataItem.name;\n                }\n                else if (nameDimIdx != null) {\n                    nameList[i] = storage[dimensions[nameDimIdx]][i];\n                }\n            }\n            var name = nameList[i] || '';\n            // Try using the id in option\n            var id = dataItem && dataItem.id;\n\n            if (!id && name) {\n                // Use name as id and add counter to avoid same name\n                nameRepeatCount[name] = nameRepeatCount[name] || 0;\n                id = name;\n                if (nameRepeatCount[name] > 0) {\n                    id += '__ec__' + nameRepeatCount[name];\n                }\n                nameRepeatCount[name]++;\n            }\n            id && (idList[i] = id);\n        }\n\n        this._nameList = nameList;\n        this._idList = idList;\n    };\n\n    /**\n     * @return {number}\n     */\n    listProto.count = function () {\n        return this.indices.length;\n    };\n\n    /**\n     * Get value. Return NaN if idx is out of range.\n     * @param {string} dim Dim must be concrete name.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.get = function (dim, idx, stack) {\n        var storage = this._storage;\n        var dataIndex = this.indices[idx];\n\n        // If value not exists\n        if (dataIndex == null || !storage[dim]) {\n            return NaN;\n        }\n\n        var value = storage[dim][dataIndex];\n        // FIXME ordinal data type is not stackable\n        if (stack) {\n            var dimensionInfo = this._dimensionInfos[dim];\n            if (dimensionInfo && dimensionInfo.stackable) {\n                var stackedOn = this.stackedOn;\n                while (stackedOn) {\n                    // Get no stacked data of stacked on\n                    var stackedValue = stackedOn.get(dim, idx);\n                    // Considering positive stack, negative stack and empty data\n                    if ((value >= 0 && stackedValue > 0)  // Positive stack\n                        || (value <= 0 && stackedValue < 0) // Negative stack\n                    ) {\n                        value += stackedValue;\n                    }\n                    stackedOn = stackedOn.stackedOn;\n                }\n            }\n        }\n        return value;\n    };\n\n    /**\n     * Get value for multi dimensions.\n     * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.getValues = function (dimensions, idx, stack) {\n        var values = [];\n\n        if (!zrUtil.isArray(dimensions)) {\n            stack = idx;\n            idx = dimensions;\n            dimensions = this.dimensions;\n        }\n\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            values.push(this.get(dimensions[i], idx, stack));\n        }\n\n        return values;\n    };\n\n    /**\n     * If value is NaN. Inlcuding '-'\n     * @param {string} dim\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.hasValue = function (idx) {\n        var dimensions = this.dimensions;\n        var dimensionInfos = this._dimensionInfos;\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            if (\n                // Ordinal type can be string or number\n                dimensionInfos[dimensions[i]].type !== 'ordinal'\n                && isNaN(this.get(dimensions[i], idx))\n            ) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    /**\n     * Get extent of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     * @param {Function} filter\n     */\n    listProto.getDataExtent = function (dim, stack, filter) {\n        dim = this.getDimension(dim);\n        var dimData = this._storage[dim];\n        var dimInfo = this.getDimensionInfo(dim);\n        stack = (dimInfo && dimInfo.stackable) && stack;\n        var dimExtent = (this._extent || (this._extent = {}))[dim + (!!stack)];\n        var value;\n        if (dimExtent) {\n            return dimExtent;\n        }\n        // var dimInfo = this._dimensionInfos[dim];\n        if (dimData) {\n            var min = Infinity;\n            var max = -Infinity;\n            // var isOrdinal = dimInfo.type === 'ordinal';\n            for (var i = 0, len = this.count(); i < len; i++) {\n                value = this.get(dim, i, stack);\n                // FIXME\n                // if (isOrdinal && typeof value === 'string') {\n                //     value = zrUtil.indexOf(dimData, value);\n                // }\n                if (!filter || filter(value, dim, i)) {\n                    value < min && (min = value);\n                    value > max && (max = value);\n                }\n            }\n            return (this._extent[dim + !!stack] = [min, max]);\n        }\n        else {\n            return [Infinity, -Infinity];\n        }\n    };\n\n    /**\n     * Get sum of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     */\n    listProto.getSum = function (dim, stack) {\n        var dimData = this._storage[dim];\n        var sum = 0;\n        if (dimData) {\n            for (var i = 0, len = this.count(); i < len; i++) {\n                var value = this.get(dim, i, stack);\n                if (!isNaN(value)) {\n                    sum += value;\n                }\n            }\n        }\n        return sum;\n    };\n\n    /**\n     * Retreive the index with given value\n     * @param {number} idx\n     * @param {number} value\n     * @return {number}\n     */\n    // FIXME Precision of float value\n    listProto.indexOf = function (dim, value) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var indices = this.indices;\n\n        if (dimData) {\n            for (var i = 0, len = indices.length; i < len; i++) {\n                var rawIndex = indices[i];\n                if (dimData[rawIndex] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given name\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfName = function (name) {\n        var indices = this.indices;\n        var nameList = this._nameList;\n\n        for (var i = 0, len = indices.length; i < len; i++) {\n            var rawIndex = indices[i];\n            if (nameList[rawIndex] === name) {\n                return i;\n            }\n        }\n\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given raw data index\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfRawIndex = function (rawIndex) {\n        // Indices are ascending\n        var indices = this.indices;\n\n        // If rawIndex === dataIndex\n        var rawDataIndex = indices[rawIndex];\n        if (rawDataIndex != null && rawDataIndex === rawIndex) {\n            return rawIndex;\n        }\n\n        var left = 0;\n        var right = indices.length - 1;\n        while (left <= right) {\n            var mid = (left + right) / 2 | 0;\n            if (indices[mid] < rawIndex) {\n                left = mid + 1;\n            }\n            else if (indices[mid] > rawIndex) {\n                right = mid - 1;\n            }\n            else {\n                return mid;\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index of nearest value\n     * @param {string} dim\n     * @param {number} value\n     * @param {boolean} stack If given value is after stacked\n     * @param {number} [maxDistance=Infinity]\n     * @return {Array.<number>} Considere multiple points has the same value.\n     */\n    listProto.indicesOfNearest = function (dim, value, stack, maxDistance) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var nearestIndices = [];\n\n        if (!dimData) {\n            return nearestIndices;\n        }\n\n        if (maxDistance == null) {\n            maxDistance = Infinity;\n        }\n\n        var minDist = Number.MAX_VALUE;\n        var minDiff = -1;\n        for (var i = 0, len = this.count(); i < len; i++) {\n            var diff = value - this.get(dim, i, stack);\n            var dist = Math.abs(diff);\n            if (diff <= maxDistance && dist <= minDist) {\n                // For the case of two data are same on xAxis, which has sequence data.\n                // Show the nearest index\n                // https://github.com/ecomfe/echarts/issues/2869\n                if (dist < minDist || (diff >= 0 && minDiff < 0)) {\n                    minDist = dist;\n                    minDiff = diff;\n                    nearestIndices.length = 0;\n                }\n                nearestIndices.push(i);\n            }\n        }\n        return nearestIndices;\n    };\n\n    /**\n     * Get raw data index\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawIndex = function (idx) {\n        var rawIdx = this.indices[idx];\n        return rawIdx == null ? -1 : rawIdx;\n    };\n\n    /**\n     * Get raw data item\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawDataItem = function (idx) {\n        return this._rawData.getItem(this.getRawIndex(idx));\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getName = function (idx) {\n        return this._nameList[this.indices[idx]] || '';\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getId = function (idx) {\n        return this._idList[this.indices[idx]] || (this.getRawIndex(idx) + '');\n    };\n\n\n    function normalizeDimensions(dimensions) {\n        if (!zrUtil.isArray(dimensions)) {\n            dimensions = [dimensions];\n        }\n        return dimensions;\n    }\n\n    /**\n     * Data iteration\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     *\n     * @example\n     *  list.each('x', function (x, idx) {});\n     *  list.each(['x', 'y'], function (x, y, idx) {});\n     *  list.each(function (idx) {})\n     */\n    listProto.each = function (dims, cb, stack, context) {\n        if (typeof dims === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dims;\n            dims = [];\n        }\n\n        dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n\n        var value = [];\n        var dimSize = dims.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            // Simple optimization\n            switch (dimSize) {\n                case 0:\n                    cb.call(context, i);\n                    break;\n                case 1:\n                    cb.call(context, this.get(dims[0], i, stack), i);\n                    break;\n                case 2:\n                    cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n                    break;\n                default:\n                    for (var k = 0; k < dimSize; k++) {\n                        value[k] = this.get(dims[k], i, stack);\n                    }\n                    // Index\n                    value[k] = i;\n                    cb.apply(context, value);\n            }\n        }\n    };\n\n    /**\n     * Data filter\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     */\n    listProto.filterSelf = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var newIndices = [];\n        var value = [];\n        var dimSize = dimensions.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            var keep;\n            // Simple optimization\n            if (!dimSize) {\n                keep = cb.call(context, i);\n            }\n            else if (dimSize === 1) {\n                keep = cb.call(\n                    context, this.get(dimensions[0], i, stack), i\n                );\n            }\n            else {\n                for (var k = 0; k < dimSize; k++) {\n                    value[k] = this.get(dimensions[k], i, stack);\n                }\n                value[k] = i;\n                keep = cb.apply(context, value);\n            }\n            if (keep) {\n                newIndices.push(indices[i]);\n            }\n        }\n\n        this.indices = newIndices;\n\n        // Reset data extent\n        this._extent = {};\n\n        return this;\n    };\n\n    /**\n     * Data mapping to a plain array\n     * @param {string|Array.<string>} [dimensions]\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.mapArray = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        var result = [];\n        this.each(dimensions, function () {\n            result.push(cb && cb.apply(this, arguments));\n        }, stack, context);\n        return result;\n    };\n\n    function cloneListForMapAndSample(original, excludeDimensions) {\n        var allDimensions = original.dimensions;\n        var list = new List(\n            zrUtil.map(allDimensions, original.getDimensionInfo, original),\n            original.hostModel\n        );\n        // FIXME If needs stackedOn, value may already been stacked\n        transferProperties(list, original);\n\n        var storage = list._storage = {};\n        var originalStorage = original._storage;\n        // Init storage\n        for (var i = 0; i < allDimensions.length; i++) {\n            var dim = allDimensions[i];\n            var dimStore = originalStorage[dim];\n            if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n                storage[dim] = new dimStore.constructor(\n                    originalStorage[dim].length\n                );\n            }\n            else {\n                // Direct reference for other dimensions\n                storage[dim] = originalStorage[dim];\n            }\n        }\n        return list;\n    }\n\n    /**\n     * Data mapping to a new List with given dimensions\n     * @param {string|Array.<string>} dimensions\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.map = function (dimensions, cb, stack, context) {\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var list = cloneListForMapAndSample(this, dimensions);\n        // Following properties are all immutable.\n        // So we can reference to the same value\n        var indices = list.indices = this.indices;\n\n        var storage = list._storage;\n\n        var tmpRetValue = [];\n        this.each(dimensions, function () {\n            var idx = arguments[arguments.length - 1];\n            var retValue = cb && cb.apply(this, arguments);\n            if (retValue != null) {\n                // a number\n                if (typeof retValue === 'number') {\n                    tmpRetValue[0] = retValue;\n                    retValue = tmpRetValue;\n                }\n                for (var i = 0; i < retValue.length; i++) {\n                    var dim = dimensions[i];\n                    var dimStore = storage[dim];\n                    var rawIdx = indices[idx];\n                    if (dimStore) {\n                        dimStore[rawIdx] = retValue[i];\n                    }\n                }\n            }\n        }, stack, context);\n\n        return list;\n    };\n\n    /**\n     * Large data down sampling on given dimension\n     * @param {string} dimension\n     * @param {number} rate\n     * @param {Function} sampleValue\n     * @param {Function} sampleIndex Sample index for name and id\n     */\n    listProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n        var list = cloneListForMapAndSample(this, [dimension]);\n        var storage = this._storage;\n        var targetStorage = list._storage;\n\n        var originalIndices = this.indices;\n        var indices = list.indices = [];\n\n        var frameValues = [];\n        var frameIndices = [];\n        var frameSize = Math.floor(1 / rate);\n\n        var dimStore = targetStorage[dimension];\n        var len = this.count();\n        // Copy data from original data\n        for (var i = 0; i < storage[dimension].length; i++) {\n            targetStorage[dimension][i] = storage[dimension][i];\n        }\n        for (var i = 0; i < len; i += frameSize) {\n            // Last frame\n            if (frameSize > len - i) {\n                frameSize = len - i;\n                frameValues.length = frameSize;\n            }\n            for (var k = 0; k < frameSize; k++) {\n                var idx = originalIndices[i + k];\n                frameValues[k] = dimStore[idx];\n                frameIndices[k] = idx;\n            }\n            var value = sampleValue(frameValues);\n            var idx = frameIndices[sampleIndex(frameValues, value) || 0];\n            // Only write value on the filtered data\n            dimStore[idx] = value;\n            indices.push(idx);\n        }\n\n        return list;\n    };\n\n    /**\n     * Get model of one data item.\n     *\n     * @param {number} idx\n     */\n    // FIXME Model proxy ?\n    listProto.getItemModel = function (idx) {\n        var hostModel = this.hostModel;\n        idx = this.indices[idx];\n        return new Model(this._rawData.getItem(idx), hostModel, hostModel && hostModel.ecModel);\n    };\n\n    /**\n     * Create a data differ\n     * @param {module:echarts/data/List} otherList\n     * @return {module:echarts/data/DataDiffer}\n     */\n    listProto.diff = function (otherList) {\n        var idList = this._idList;\n        var otherIdList = otherList && otherList._idList;\n        var val;\n        // Use prefix to avoid index to be the same as otherIdList[idx],\n        // which will cause weird udpate animation.\n        var prefix = 'e\\0\\0';\n\n        return new DataDiffer(\n            otherList ? otherList.indices : [],\n            this.indices,\n            function (idx) {\n                return (val = otherIdList[idx]) != null ? val : prefix + idx;\n            },\n            function (idx) {\n                return (val = idList[idx]) != null ? val : prefix + idx;\n            }\n        );\n    };\n    /**\n     * Get visual property.\n     * @param {string} key\n     */\n    listProto.getVisual = function (key) {\n        var visual = this._visual;\n        return visual && visual[key];\n    };\n\n    /**\n     * Set visual property\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setVisual('color', color);\n     *  setVisual({\n     *      'color': color\n     *  });\n     */\n    listProto.setVisual = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setVisual(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._visual = this._visual || {};\n        this._visual[key] = val;\n    };\n\n    /**\n     * Set layout property.\n     * @param {string|Object} key\n     * @param {*} [val]\n     */\n    listProto.setLayout = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setLayout(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._layout[key] = val;\n    };\n\n    /**\n     * Get layout property.\n     * @param  {string} key.\n     * @return {*}\n     */\n    listProto.getLayout = function (key) {\n        return this._layout[key];\n    };\n\n    /**\n     * Get layout of single data item\n     * @param {number} idx\n     */\n    listProto.getItemLayout = function (idx) {\n        return this._itemLayouts[idx];\n    };\n\n    /**\n     * Set layout of single data item\n     * @param {number} idx\n     * @param {Object} layout\n     * @param {boolean=} [merge=false]\n     */\n    listProto.setItemLayout = function (idx, layout, merge) {\n        this._itemLayouts[idx] = merge\n            ? zrUtil.extend(this._itemLayouts[idx] || {}, layout)\n            : layout;\n    };\n\n    /**\n     * Clear all layout of single data item\n     */\n    listProto.clearItemLayouts = function () {\n        this._itemLayouts.length = 0;\n    };\n\n    /**\n     * Get visual property of single data item\n     * @param {number} idx\n     * @param {string} key\n     * @param {boolean} [ignoreParent=false]\n     */\n    listProto.getItemVisual = function (idx, key, ignoreParent) {\n        var itemVisual = this._itemVisuals[idx];\n        var val = itemVisual && itemVisual[key];\n        if (val == null && !ignoreParent) {\n            // Use global visual property\n            return this.getVisual(key);\n        }\n        return val;\n    };\n\n    /**\n     * Set visual property of single data item\n     *\n     * @param {number} idx\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setItemVisual(0, 'color', color);\n     *  setItemVisual(0, {\n     *      'color': color\n     *  });\n     */\n    listProto.setItemVisual = function (idx, key, value) {\n        var itemVisual = this._itemVisuals[idx] || {};\n        this._itemVisuals[idx] = itemVisual;\n\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    itemVisual[name] = key[name];\n                }\n            }\n            return;\n        }\n        itemVisual[key] = value;\n    };\n\n    /**\n     * Clear itemVisuals and list visual.\n     */\n    listProto.clearAllVisual = function () {\n        this._visual = {};\n        this._itemVisuals = [];\n    };\n\n    var setItemDataAndSeriesIndex = function (child) {\n        child.seriesIndex = this.seriesIndex;\n        child.dataIndex = this.dataIndex;\n        child.dataType = this.dataType;\n    };\n    /**\n     * Set graphic element relative to data. It can be set as null\n     * @param {number} idx\n     * @param {module:zrender/Element} [el]\n     */\n    listProto.setItemGraphicEl = function (idx, el) {\n        var hostModel = this.hostModel;\n\n        if (el) {\n            // Add data index and series index for indexing the data by element\n            // Useful in tooltip\n            el.dataIndex = idx;\n            el.dataType = this.dataType;\n            el.seriesIndex = hostModel && hostModel.seriesIndex;\n            if (el.type === 'group') {\n                el.traverse(setItemDataAndSeriesIndex, el);\n            }\n        }\n\n        this._graphicEls[idx] = el;\n    };\n\n    /**\n     * @param {number} idx\n     * @return {module:zrender/Element}\n     */\n    listProto.getItemGraphicEl = function (idx) {\n        return this._graphicEls[idx];\n    };\n\n    /**\n     * @param {Function} cb\n     * @param {*} context\n     */\n    listProto.eachItemGraphicEl = function (cb, context) {\n        zrUtil.each(this._graphicEls, function (el, idx) {\n            if (el) {\n                cb && cb.call(context, el, idx);\n            }\n        });\n    };\n\n    /**\n     * Shallow clone a new list except visual and layout properties, and graph elements.\n     * New list only change the indices.\n     */\n    listProto.cloneShallow = function () {\n        var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n        var list = new List(dimensionInfoList, this.hostModel);\n\n        // FIXME\n        list._storage = this._storage;\n\n        transferProperties(list, this);\n\n\n        // Clone will not change the data extent and indices\n        list.indices = this.indices.slice();\n\n        if (this._extent) {\n            list._extent = zrUtil.extend({}, this._extent);\n        }\n\n        return list;\n    };\n\n    /**\n     * Wrap some method to add more feature\n     * @param {string} methodName\n     * @param {Function} injectFunction\n     */\n    listProto.wrapMethod = function (methodName, injectFunction) {\n        var originalMethod = this[methodName];\n        if (typeof originalMethod !== 'function') {\n            return;\n        }\n        this.__wrappedMethods = this.__wrappedMethods || [];\n        this.__wrappedMethods.push(methodName);\n        this[methodName] = function () {\n            var res = originalMethod.apply(this, arguments);\n            return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n        };\n    };\n\n    // Methods that create a new list based on this list should be listed here.\n    // Notice that those method should `RETURN` the new list.\n    listProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map'];\n    // Methods that change indices of this list should be listed here.\n    listProto.CHANGABLE_METHODS = ['filterSelf'];\n\n    module.exports = List;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/data/List.js\n// module id = 986\n// module chunks = 0 1 2","\n\n    var OrdinalScale = require('../scale/Ordinal');\n    var IntervalScale = require('../scale/Interval');\n    require('../scale/Time');\n    require('../scale/Log');\n    var Scale = require('../scale/Scale');\n\n    var numberUtil = require('../util/number');\n    var zrUtil = require('zrender/lib/core/util');\n    var textContain = require('zrender/lib/contain/text');\n    var axisHelper = {};\n\n    /**\n     * Get axis scale extent before niced.\n     * Item of returned array can only be number (including Infinity and NaN).\n     */\n    axisHelper.getScaleExtent = function (scale, model) {\n        var scaleType = scale.type;\n\n        var min = model.getMin();\n        var max = model.getMax();\n        var fixMin = min != null;\n        var fixMax = max != null;\n        var originalExtent = scale.getExtent();\n\n        var axisDataLen;\n        var boundaryGap;\n        var span;\n        if (scaleType === 'ordinal') {\n            axisDataLen = (model.get('data') || []).length;\n        }\n        else {\n            boundaryGap = model.get('boundaryGap');\n            if (!zrUtil.isArray(boundaryGap)) {\n                boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n            }\n            if (typeof boundaryGap[0] === 'boolean') {\n                if (__DEV__) {\n                    console.warn('Boolean type for boundaryGap is only '\n                        + 'allowed for ordinal axis. Please use string in '\n                        + 'percentage instead, e.g., \"20%\". Currently, '\n                        + 'boundaryGap is set to be 0.');\n                }\n                boundaryGap = [0, 0];\n            }\n            boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n            boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n            span = (originalExtent[1] - originalExtent[0])\n                || Math.abs(originalExtent[0]);\n        }\n\n        // Notice: When min/max is not set (that is, when there are null/undefined,\n        // which is the most common case), these cases should be ensured:\n        // (1) For 'ordinal', show all axis.data.\n        // (2) For others:\n        //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n        //      disabled).\n        //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n        //      be the result that originalExtent enlarged by boundaryGap.\n        // (3) If no data, it should be ensured that `scale.setBlank` is set.\n\n        // FIXME\n        // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\n        // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\n        // that the results processed by boundaryGap are positive/negative?\n\n        if (min == null) {\n            min = scaleType === 'ordinal'\n                ? (axisDataLen ? 0 : NaN)\n                : originalExtent[0] - boundaryGap[0] * span;\n        }\n        if (max == null) {\n            max = scaleType === 'ordinal'\n                ? (axisDataLen ? axisDataLen - 1 : NaN)\n                : originalExtent[1] + boundaryGap[1] * span;\n        }\n\n        if (min === 'dataMin') {\n            min = originalExtent[0];\n        }\n        else if (typeof min === 'function') {\n            min = min({\n                min: originalExtent[0],\n                max: originalExtent[1]\n            });\n        }\n\n        if (max === 'dataMax') {\n            max = originalExtent[1];\n        }\n        else if (typeof max === 'function') {\n            max = max({\n                min: originalExtent[0],\n                max: originalExtent[1]\n            });\n        }\n\n        (min == null || !isFinite(min)) && (min = NaN);\n        (max == null || !isFinite(max)) && (max = NaN);\n\n        scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max));\n\n        // Evaluate if axis needs cross zero\n        if (model.getNeedCrossZero()) {\n            // Axis is over zero and min is not set\n            if (min > 0 && max > 0 && !fixMin) {\n                min = 0;\n            }\n            // Axis is under zero and max is not set\n            if (min < 0 && max < 0 && !fixMax) {\n                max = 0;\n            }\n        }\n\n        return [min, max];\n    };\n\n    axisHelper.niceScaleExtent = function (scale, model) {\n        var extent = axisHelper.getScaleExtent(scale, model);\n        var fixMin = model.getMin() != null;\n        var fixMax = model.getMax() != null;\n        var splitNumber = model.get('splitNumber');\n\n        if (scale.type === 'log') {\n            scale.base = model.get('logBase');\n        }\n\n        var scaleType = scale.type;\n        scale.setExtent(extent[0], extent[1]);\n        scale.niceExtent({\n            splitNumber: splitNumber,\n            fixMin: fixMin,\n            fixMax: fixMax,\n            minInterval: (scaleType === 'interval' || scaleType === 'time')\n                ? model.get('minInterval') : null,\n            maxInterval: (scaleType === 'interval' || scaleType === 'time')\n                ? model.get('maxInterval') : null\n        });\n\n        // If some one specified the min, max. And the default calculated interval\n        // is not good enough. He can specify the interval. It is often appeared\n        // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n        // to be 60.\n        // FIXME\n        var interval = model.get('interval');\n        if (interval != null) {\n            scale.setInterval && scale.setInterval(interval);\n        }\n    };\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @param {string} [axisType] Default retrieve from model.type\n     * @return {module:echarts/scale/*}\n     */\n    axisHelper.createScaleByModel = function(model, axisType) {\n        axisType = axisType || model.get('type');\n        if (axisType) {\n            switch (axisType) {\n                // Buildin scale\n                case 'category':\n                    return new OrdinalScale(\n                        model.getCategories(), [Infinity, -Infinity]\n                    );\n                case 'value':\n                    return new IntervalScale();\n                // Extended scale, like time and log\n                default:\n                    return (Scale.getClass(axisType) || IntervalScale).create(model);\n            }\n        }\n    };\n\n    /**\n     * Check if the axis corss 0\n     */\n    axisHelper.ifAxisCrossZero = function (axis) {\n        var dataExtent = axis.scale.getExtent();\n        var min = dataExtent[0];\n        var max = dataExtent[1];\n        return !((min > 0 && max > 0) || (min < 0 && max < 0));\n    };\n\n    /**\n     * @param {Array.<number>} tickCoords In axis self coordinate.\n     * @param {Array.<string>} labels\n     * @param {string} font\n     * @param {boolean} isAxisHorizontal\n     * @return {number}\n     */\n    axisHelper.getAxisLabelInterval = function (tickCoords, labels, font, isAxisHorizontal) {\n        // FIXME\n        // 不同角的axis和label，不只是horizontal和vertical.\n\n        var textSpaceTakenRect;\n        var autoLabelInterval = 0;\n        var accumulatedLabelInterval = 0;\n\n        var step = 1;\n        if (labels.length > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.floor(labels.length / 40);\n        }\n\n        for (var i = 0; i < tickCoords.length; i += step) {\n            var tickCoord = tickCoords[i];\n            var rect = textContain.getBoundingRect(\n                labels[i], font, 'center', 'top'\n            );\n            rect[isAxisHorizontal ? 'x' : 'y'] += tickCoord;\n            // FIXME Magic number 1.5\n            rect[isAxisHorizontal ? 'width' : 'height'] *= 1.3;\n            if (!textSpaceTakenRect) {\n                textSpaceTakenRect = rect.clone();\n            }\n            // There is no space for current label;\n            else if (textSpaceTakenRect.intersect(rect)) {\n                accumulatedLabelInterval++;\n                autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n            }\n            else {\n                textSpaceTakenRect.union(rect);\n                // Reset\n                accumulatedLabelInterval = 0;\n            }\n        }\n        if (autoLabelInterval === 0 && step > 1) {\n            return step;\n        }\n        return (autoLabelInterval + 1) * step - 1;\n    };\n\n    /**\n     * @param {Object} axis\n     * @param {Function} labelFormatter\n     * @return {Array.<string>}\n     */\n    axisHelper.getFormattedLabels = function (axis, labelFormatter) {\n        var scale = axis.scale;\n        var labels = scale.getTicksLabels();\n        var ticks = scale.getTicks();\n        if (typeof labelFormatter === 'string') {\n            labelFormatter = (function (tpl) {\n                return function (val) {\n                    return tpl.replace('{value}', val != null ? val : '');\n                };\n            })(labelFormatter);\n            // Consider empty array\n            return zrUtil.map(labels, labelFormatter);\n        }\n        else if (typeof labelFormatter === 'function') {\n            return zrUtil.map(ticks, function (tick, idx) {\n                return labelFormatter(\n                    axisHelper.getAxisRawValue(axis, tick),\n                    idx\n                );\n            }, this);\n        }\n        else {\n            return labels;\n        }\n    };\n\n    axisHelper.getAxisRawValue = function (axis, value) {\n        // In category axis with data zoom, tick is not the original\n        // index of axis.data. So tick should not be exposed to user\n        // in category axis.\n        return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n    };\n\n    module.exports = axisHelper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/axisHelper.js\n// module id = 987\n// module chunks = 0 1 2","'use strict';\n\n\n    var features = {};\n\n    module.exports = {\n        register: function (name, ctor) {\n            features[name] = ctor;\n        },\n\n        get: function (name) {\n            return features[name];\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox/featureManager.js\n// module id = 988\n// module chunks = 0 1 2","'use strict';\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n\n    var Eventful = require('../mixin/Eventful');\n    var env = require('./env');\n\n    var isDomLevel2 = (typeof window !== 'undefined') && !!window.addEventListener;\n\n    var MOUSE_EVENT_REG = /^(?:mouse|pointer|contextmenu|drag|drop)|click/;\n\n    function getBoundingClientRect(el) {\n        // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n        return el.getBoundingClientRect ? el.getBoundingClientRect() : {left: 0, top: 0};\n    }\n\n    // `calculate` is optional, default false\n    function clientToLocal(el, e, out, calculate) {\n        out = out || {};\n\n        // According to the W3C Working Draft, offsetX and offsetY should be relative\n        // to the padding edge of the target element. The only browser using this convention\n        // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n        // not support the properties.\n        // (see http://www.jacklmoore.com/notes/mouse-position/)\n        // In zr painter.dom, padding edge equals to border edge.\n\n        // FIXME\n        // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n        // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n        // is too complex. So css-transfrom dont support in this case temporarily.\n        if (calculate || !env.canvasSupported) {\n            defaultGetZrXY(el, e, out);\n        }\n        // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n        // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n        // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n        // zoom-factor, overflow / opacity layers, transforms ...)\n        // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n        // <https://bugs.jquery.com/ticket/8523#comment:14>\n        // BTW3, In ff, offsetX/offsetY is always 0.\n        else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n            out.zrX = e.layerX;\n            out.zrY = e.layerY;\n        }\n        // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n        else if (e.offsetX != null) {\n            out.zrX = e.offsetX;\n            out.zrY = e.offsetY;\n        }\n        // For some other device, e.g., IOS safari.\n        else {\n            defaultGetZrXY(el, e, out);\n        }\n\n        return out;\n    }\n\n    function defaultGetZrXY(el, e, out) {\n        // This well-known method below does not support css transform.\n        var box = getBoundingClientRect(el);\n        out.zrX = e.clientX - box.left;\n        out.zrY = e.clientY - box.top;\n    }\n\n    /**\n     * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n     * `calculate` is optional, default false.\n     */\n    function normalizeEvent(el, e, calculate) {\n\n        e = e || window.event;\n\n        if (e.zrX != null) {\n            return e;\n        }\n\n        var eventType = e.type;\n        var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n        if (!isTouch) {\n            clientToLocal(el, e, e, calculate);\n            e.zrDelta = (e.wheelDelta) ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n        }\n        else {\n            var touch = eventType != 'touchend'\n                ? e.targetTouches[0]\n                : e.changedTouches[0];\n            touch && clientToLocal(el, touch, e, calculate);\n        }\n\n        // Add which for click: 1 === left; 2 === middle; 3 === right; otherwise: 0;\n        // See jQuery: https://github.com/jquery/jquery/blob/master/src/event.js\n        // If e.which has been defined, if may be readonly,\n        // see: https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/which\n        var button = e.button;\n        if (e.which == null && button !== undefined && MOUSE_EVENT_REG.test(e.type)) {\n            e.which = (button & 1 ? 1 : (button & 2 ? 3 : (button & 4 ? 2 : 0)));\n        }\n\n        return e;\n    }\n\n    function addEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.addEventListener(name, handler);\n        }\n        else {\n            el.attachEvent('on' + name, handler);\n        }\n    }\n\n    function removeEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.removeEventListener(name, handler);\n        }\n        else {\n            el.detachEvent('on' + name, handler);\n        }\n    }\n\n    /**\n     * preventDefault and stopPropagation.\n     * Notice: do not do that in zrender. Upper application\n     * do that if necessary.\n     *\n     * @memberOf module:zrender/core/event\n     * @method\n     * @param {Event} e : event对象\n     */\n    var stop = isDomLevel2\n        ? function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            e.cancelBubble = true;\n        }\n        : function (e) {\n            e.returnValue = false;\n            e.cancelBubble = true;\n        };\n\n    function notLeftMouse(e) {\n        // If e.which is undefined, considered as left mouse event.\n        return e.which > 1;\n    }\n\n    module.exports = {\n        clientToLocal: clientToLocal,\n        normalizeEvent: normalizeEvent,\n        addEventListener: addEventListener,\n        removeEventListener: removeEventListener,\n        notLeftMouse: notLeftMouse,\n\n        stop: stop,\n        // 做向上兼容\n        Dispatcher: Eventful\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/event.js\n// module id = 989\n// module chunks = 0 1 2","'use strict';\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var vec2 = require('./vector');\n    var v2Create = vec2.create;\n    var v2DistSquare = vec2.distSquare;\n    var mathPow = Math.pow;\n    var mathSqrt = Math.sqrt;\n\n    var EPSILON = 1e-8;\n    var EPSILON_NUMERIC = 1e-4;\n\n    var THREE_SQRT = mathSqrt(3);\n    var ONE_THIRD = 1 / 3;\n\n    // 临时变量\n    var _v0 = v2Create();\n    var _v1 = v2Create();\n    var _v2 = v2Create();\n    // var _v3 = vec2.create();\n\n    function isAroundZero(val) {\n        return val > -EPSILON && val < EPSILON;\n    }\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n    /**\n     * 计算三次贝塞尔值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return onet * onet * (onet * p0 + 3 * t * p1)\n             + t * t * (t * p3 + 3 * onet * p2);\n    }\n\n    /**\n     * 计算三次贝塞尔导数值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicDerivativeAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return 3 * (\n            ((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet\n            + (p3 - p2) * t * t\n        );\n    }\n\n    /**\n     * 计算三次贝塞尔方程根，使用盛金公式\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} val\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function cubicRootAt(p0, p1, p2, p3, val, roots) {\n        // Evaluate roots of cubic functions\n        var a = p3 + 3 * (p1 - p2) - p0;\n        var b = 3 * (p2 - p1 * 2 + p0);\n        var c = 3 * (p1  - p0);\n        var d = p0 - val;\n\n        var A = b * b - 3 * a * c;\n        var B = b * c - 9 * a * d;\n        var C = c * c - 3 * b * d;\n\n        var n = 0;\n\n        if (isAroundZero(A) && isAroundZero(B)) {\n            if (isAroundZero(b)) {\n                roots[0] = 0;\n            }\n            else {\n                var t1 = -c / b;  //t1, t2, t3, b is not zero\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = B * B - 4 * A * C;\n\n            if (isAroundZero(disc)) {\n                var K = B / A;\n                var t1 = -b / a + K;  // t1, a is not zero\n                var t2 = -K / 2;  // t2, t3\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n                var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n                if (Y1 < 0) {\n                    Y1 = -mathPow(-Y1, ONE_THIRD);\n                }\n                else {\n                    Y1 = mathPow(Y1, ONE_THIRD);\n                }\n                if (Y2 < 0) {\n                    Y2 = -mathPow(-Y2, ONE_THIRD);\n                }\n                else {\n                    Y2 = mathPow(Y2, ONE_THIRD);\n                }\n                var t1 = (-b - (Y1 + Y2)) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else {\n                var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n                var theta = Math.acos(T) / 3;\n                var ASqrt = mathSqrt(A);\n                var tmp = Math.cos(theta);\n\n                var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n                var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n                var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n                if (t3 >= 0 && t3 <= 1) {\n                    roots[n++] = t3;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算三次贝塞尔方程极限值的位置\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {Array.<number>} extrema\n     * @return {number} 有效数目\n     */\n    function cubicExtrema(p0, p1, p2, p3, extrema) {\n        var b = 6 * p2 - 12 * p1 + 6 * p0;\n        var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n        var c = 3 * p1 - 3 * p0;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <=1) {\n                    extrema[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                extrema[0] = -b / (2 * a);\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    extrema[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    extrema[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 细分三次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function cubicSubdivide(p0, p1, p2, p3, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p23 = (p3 - p2) * t + p2;\n\n        var p012 = (p12 - p01) * t + p01;\n        var p123 = (p23 - p12) * t + p12;\n\n        var p0123 = (p123 - p012) * t + p012;\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n        out[3] = p0123;\n        // Seg1\n        out[4] = p0123;\n        out[5] = p123;\n        out[6] = p23;\n        out[7] = p3;\n    }\n\n    /**\n     * 投射点到三次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} [out] 投射点\n     * @return {number}\n     */\n    function cubicProjectPoint(\n        x0, y0, x1, y1, x2, y2, x3, y3,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n        var prev;\n        var next;\n        var d1;\n        var d2;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n            _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n            d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            prev = t - interval;\n            next = t + interval;\n            // t - interval\n            _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n            _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n\n            d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = cubicAt(x0, x1, x2, x3, next);\n                _v2[1] = cubicAt(y0, y1, y2, y3, next);\n                d2 = v2DistSquare(_v2, _v0);\n\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = cubicAt(x0, x1, x2, x3, t);\n            out[1] = cubicAt(y0, y1, y2, y3, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    /**\n     * 计算二次方贝塞尔值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticAt(p0, p1, p2, t) {\n        var onet = 1 - t;\n        return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n    }\n\n    /**\n     * 计算二次方贝塞尔导数值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticDerivativeAt(p0, p1, p2, t) {\n        return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n    }\n\n    /**\n     * 计算二次方贝塞尔方程根\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function quadraticRootAt(p0, p1, p2, val, roots) {\n        var a = p0 - 2 * p1 + p2;\n        var b = 2 * (p1 - p0);\n        var c = p0 - val;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                var t1 = -b / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算二次贝塞尔方程极限值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @return {number}\n     */\n    function quadraticExtremum(p0, p1, p2) {\n        var divider = p0 + p2 - 2 * p1;\n        if (divider === 0) {\n            // p1 is center of p0 and p2\n            return 0.5;\n        }\n        else {\n            return (p0 - p1) / divider;\n        }\n    }\n\n    /**\n     * 细分二次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function quadraticSubdivide(p0, p1, p2, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p012 = (p12 - p01) * t + p01;\n\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n\n        // Seg1\n        out[3] = p012;\n        out[4] = p12;\n        out[5] = p2;\n    }\n\n    /**\n     * 投射点到二次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} out 投射点\n     * @return {number}\n     */\n    function quadraticProjectPoint(\n        x0, y0, x1, y1, x2, y2,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = quadraticAt(x0, x1, x2, _t);\n            _v1[1] = quadraticAt(y0, y1, y2, _t);\n            var d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            var prev = t - interval;\n            var next = t + interval;\n            // t - interval\n            _v1[0] = quadraticAt(x0, x1, x2, prev);\n            _v1[1] = quadraticAt(y0, y1, y2, prev);\n\n            var d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = quadraticAt(x0, x1, x2, next);\n                _v2[1] = quadraticAt(y0, y1, y2, next);\n                var d2 = v2DistSquare(_v2, _v0);\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = quadraticAt(x0, x1, x2, t);\n            out[1] = quadraticAt(y0, y1, y2, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    module.exports = {\n\n        cubicAt: cubicAt,\n\n        cubicDerivativeAt: cubicDerivativeAt,\n\n        cubicRootAt: cubicRootAt,\n\n        cubicExtrema: cubicExtrema,\n\n        cubicSubdivide: cubicSubdivide,\n\n        cubicProjectPoint: cubicProjectPoint,\n\n        quadraticAt: quadraticAt,\n\n        quadraticDerivativeAt: quadraticDerivativeAt,\n\n        quadraticRootAt: quadraticRootAt,\n\n        quadraticExtremum: quadraticExtremum,\n\n        quadraticSubdivide: quadraticSubdivide,\n\n        quadraticProjectPoint: quadraticProjectPoint\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/curve.js\n// module id = 990\n// module chunks = 0 1 2","/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n\n\n    var arrySlice = Array.prototype.slice;\n\n    /**\n     * 事件分发器\n     * @alias module:zrender/mixin/Eventful\n     * @constructor\n     */\n    var Eventful = function () {\n        this._$handlers = {};\n    };\n\n    Eventful.prototype = {\n\n        constructor: Eventful,\n\n        /**\n         * 单次触发绑定，trigger后销毁\n         *\n         * @param {string} event 事件名\n         * @param {Function} handler 响应函数\n         * @param {Object} context\n         */\n        one: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: true,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 绑定事件\n         * @param {string} event 事件名\n         * @param {Function} handler 事件处理函数\n         * @param {Object} [context]\n         */\n        on: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: false,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 是否绑定了事件\n         * @param  {string}  event\n         * @return {boolean}\n         */\n        isSilent: function (event) {\n            var _h = this._$handlers;\n            return _h[event] && _h[event].length;\n        },\n\n        /**\n         * 解绑事件\n         * @param {string} event 事件名\n         * @param {Function} [handler] 事件处理函数\n         */\n        off: function (event, handler) {\n            var _h = this._$handlers;\n\n            if (!event) {\n                this._$handlers = {};\n                return this;\n            }\n\n            if (handler) {\n                if (_h[event]) {\n                    var newList = [];\n                    for (var i = 0, l = _h[event].length; i < l; i++) {\n                        if (_h[event][i]['h'] != handler) {\n                            newList.push(_h[event][i]);\n                        }\n                    }\n                    _h[event] = newList;\n                }\n\n                if (_h[event] && _h[event].length === 0) {\n                    delete _h[event];\n                }\n            }\n            else {\n                delete _h[event];\n            }\n\n            return this;\n        },\n\n        /**\n         * 事件分发\n         *\n         * @param {string} type 事件类型\n         */\n        trigger: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 3) {\n                    args = arrySlice.call(args, 1);\n                }\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(_h[i]['ctx']);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(_h[i]['ctx'], args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        },\n\n        /**\n         * 带有context的事件分发, 最后一个参数是事件回调的context\n         * @param {string} type 事件类型\n         */\n        triggerWithContext: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 4) {\n                    args = arrySlice.call(args, 1, args.length - 1);\n                }\n                var ctx = args[args.length - 1];\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(ctx);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(ctx, args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(ctx, args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(ctx, args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        }\n    };\n\n    // 对象可以通过 onxxxx 绑定事件\n    /**\n     * @event module:zrender/mixin/Eventful#onclick\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseout\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousemove\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousewheel\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousedown\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseup\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrag\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragstart\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragend\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragenter\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragleave\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrop\n     * @type {Function}\n     * @default null\n     */\n\n    module.exports = Eventful;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/mixin/Eventful.js\n// module id = 991\n// module chunks = 0 1 2","/**\n * @module zrender/tool/color\n */\n\n\n    var LRU = require('../core/LRU');\n\n    var kCSSColorTable = {\n        'transparent': [0,0,0,0], 'aliceblue': [240,248,255,1],\n        'antiquewhite': [250,235,215,1], 'aqua': [0,255,255,1],\n        'aquamarine': [127,255,212,1], 'azure': [240,255,255,1],\n        'beige': [245,245,220,1], 'bisque': [255,228,196,1],\n        'black': [0,0,0,1], 'blanchedalmond': [255,235,205,1],\n        'blue': [0,0,255,1], 'blueviolet': [138,43,226,1],\n        'brown': [165,42,42,1], 'burlywood': [222,184,135,1],\n        'cadetblue': [95,158,160,1], 'chartreuse': [127,255,0,1],\n        'chocolate': [210,105,30,1], 'coral': [255,127,80,1],\n        'cornflowerblue': [100,149,237,1], 'cornsilk': [255,248,220,1],\n        'crimson': [220,20,60,1], 'cyan': [0,255,255,1],\n        'darkblue': [0,0,139,1], 'darkcyan': [0,139,139,1],\n        'darkgoldenrod': [184,134,11,1], 'darkgray': [169,169,169,1],\n        'darkgreen': [0,100,0,1], 'darkgrey': [169,169,169,1],\n        'darkkhaki': [189,183,107,1], 'darkmagenta': [139,0,139,1],\n        'darkolivegreen': [85,107,47,1], 'darkorange': [255,140,0,1],\n        'darkorchid': [153,50,204,1], 'darkred': [139,0,0,1],\n        'darksalmon': [233,150,122,1], 'darkseagreen': [143,188,143,1],\n        'darkslateblue': [72,61,139,1], 'darkslategray': [47,79,79,1],\n        'darkslategrey': [47,79,79,1], 'darkturquoise': [0,206,209,1],\n        'darkviolet': [148,0,211,1], 'deeppink': [255,20,147,1],\n        'deepskyblue': [0,191,255,1], 'dimgray': [105,105,105,1],\n        'dimgrey': [105,105,105,1], 'dodgerblue': [30,144,255,1],\n        'firebrick': [178,34,34,1], 'floralwhite': [255,250,240,1],\n        'forestgreen': [34,139,34,1], 'fuchsia': [255,0,255,1],\n        'gainsboro': [220,220,220,1], 'ghostwhite': [248,248,255,1],\n        'gold': [255,215,0,1], 'goldenrod': [218,165,32,1],\n        'gray': [128,128,128,1], 'green': [0,128,0,1],\n        'greenyellow': [173,255,47,1], 'grey': [128,128,128,1],\n        'honeydew': [240,255,240,1], 'hotpink': [255,105,180,1],\n        'indianred': [205,92,92,1], 'indigo': [75,0,130,1],\n        'ivory': [255,255,240,1], 'khaki': [240,230,140,1],\n        'lavender': [230,230,250,1], 'lavenderblush': [255,240,245,1],\n        'lawngreen': [124,252,0,1], 'lemonchiffon': [255,250,205,1],\n        'lightblue': [173,216,230,1], 'lightcoral': [240,128,128,1],\n        'lightcyan': [224,255,255,1], 'lightgoldenrodyellow': [250,250,210,1],\n        'lightgray': [211,211,211,1], 'lightgreen': [144,238,144,1],\n        'lightgrey': [211,211,211,1], 'lightpink': [255,182,193,1],\n        'lightsalmon': [255,160,122,1], 'lightseagreen': [32,178,170,1],\n        'lightskyblue': [135,206,250,1], 'lightslategray': [119,136,153,1],\n        'lightslategrey': [119,136,153,1], 'lightsteelblue': [176,196,222,1],\n        'lightyellow': [255,255,224,1], 'lime': [0,255,0,1],\n        'limegreen': [50,205,50,1], 'linen': [250,240,230,1],\n        'magenta': [255,0,255,1], 'maroon': [128,0,0,1],\n        'mediumaquamarine': [102,205,170,1], 'mediumblue': [0,0,205,1],\n        'mediumorchid': [186,85,211,1], 'mediumpurple': [147,112,219,1],\n        'mediumseagreen': [60,179,113,1], 'mediumslateblue': [123,104,238,1],\n        'mediumspringgreen': [0,250,154,1], 'mediumturquoise': [72,209,204,1],\n        'mediumvioletred': [199,21,133,1], 'midnightblue': [25,25,112,1],\n        'mintcream': [245,255,250,1], 'mistyrose': [255,228,225,1],\n        'moccasin': [255,228,181,1], 'navajowhite': [255,222,173,1],\n        'navy': [0,0,128,1], 'oldlace': [253,245,230,1],\n        'olive': [128,128,0,1], 'olivedrab': [107,142,35,1],\n        'orange': [255,165,0,1], 'orangered': [255,69,0,1],\n        'orchid': [218,112,214,1], 'palegoldenrod': [238,232,170,1],\n        'palegreen': [152,251,152,1], 'paleturquoise': [175,238,238,1],\n        'palevioletred': [219,112,147,1], 'papayawhip': [255,239,213,1],\n        'peachpuff': [255,218,185,1], 'peru': [205,133,63,1],\n        'pink': [255,192,203,1], 'plum': [221,160,221,1],\n        'powderblue': [176,224,230,1], 'purple': [128,0,128,1],\n        'red': [255,0,0,1], 'rosybrown': [188,143,143,1],\n        'royalblue': [65,105,225,1], 'saddlebrown': [139,69,19,1],\n        'salmon': [250,128,114,1], 'sandybrown': [244,164,96,1],\n        'seagreen': [46,139,87,1], 'seashell': [255,245,238,1],\n        'sienna': [160,82,45,1], 'silver': [192,192,192,1],\n        'skyblue': [135,206,235,1], 'slateblue': [106,90,205,1],\n        'slategray': [112,128,144,1], 'slategrey': [112,128,144,1],\n        'snow': [255,250,250,1], 'springgreen': [0,255,127,1],\n        'steelblue': [70,130,180,1], 'tan': [210,180,140,1],\n        'teal': [0,128,128,1], 'thistle': [216,191,216,1],\n        'tomato': [255,99,71,1], 'turquoise': [64,224,208,1],\n        'violet': [238,130,238,1], 'wheat': [245,222,179,1],\n        'white': [255,255,255,1], 'whitesmoke': [245,245,245,1],\n        'yellow': [255,255,0,1], 'yellowgreen': [154,205,50,1]\n    };\n\n    function clampCssByte(i) {  // Clamp to integer 0 .. 255.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 255 ? 255 : i;\n    }\n\n    function clampCssAngle(i) {  // Clamp to integer 0 .. 360.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 360 ? 360 : i;\n    }\n\n    function clampCssFloat(f) {  // Clamp to float 0.0 .. 1.0.\n        return f < 0 ? 0 : f > 1 ? 1 : f;\n    }\n\n    function parseCssInt(str) {  // int or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssByte(parseFloat(str) / 100 * 255);\n        }\n        return clampCssByte(parseInt(str, 10));\n    }\n\n    function parseCssFloat(str) {  // float or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssFloat(parseFloat(str) / 100);\n        }\n        return clampCssFloat(parseFloat(str));\n    }\n\n    function cssHueToRgb(m1, m2, h) {\n        if (h < 0) {\n            h += 1;\n        }\n        else if (h > 1) {\n            h -= 1;\n        }\n\n        if (h * 6 < 1) {\n            return m1 + (m2 - m1) * h * 6;\n        }\n        if (h * 2 < 1) {\n            return m2;\n        }\n        if (h * 3 < 2) {\n            return m1 + (m2 - m1) * (2/3 - h) * 6;\n        }\n        return m1;\n    }\n\n    function lerpNumber(a, b, p) {\n        return a + (b - a) * p;\n    }\n\n    function setRgba(out, r, g, b, a) {\n        out[0] = r; out[1] = g; out[2] = b; out[3] = a;\n        return out;\n    }\n    function copyRgba(out, a) {\n        out[0] = a[0]; out[1] = a[1]; out[2] = a[2]; out[3] = a[3];\n        return out;\n    }\n    var colorCache = new LRU(20);\n    var lastRemovedArr = null;\n    function putToCache(colorStr, rgbaArr) {\n        // Reuse removed array\n        if (lastRemovedArr) {\n            copyRgba(lastRemovedArr, rgbaArr);\n        }\n        lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || (rgbaArr.slice()));\n    }\n    /**\n     * @param {string} colorStr\n     * @param {Array.<number>} out\n     * @return {Array.<number>}\n     * @memberOf module:zrender/util/color\n     */\n    function parse(colorStr, rgbaArr) {\n        if (!colorStr) {\n            return;\n        }\n        rgbaArr = rgbaArr || [];\n\n        var cached = colorCache.get(colorStr);\n        if (cached) {\n            return copyRgba(rgbaArr, cached);\n        }\n\n        // colorStr may be not string\n        colorStr = colorStr + '';\n        // Remove all whitespace, not compliant, but should just be more accepting.\n        var str = colorStr.replace(/ /g, '').toLowerCase();\n\n        // Color keywords (and transparent) lookup.\n        if (str in kCSSColorTable) {\n            copyRgba(rgbaArr, kCSSColorTable[str]);\n            putToCache(colorStr, rgbaArr);\n            return rgbaArr;\n        }\n\n        // #abc and #abc123 syntax.\n        if (str.charAt(0) === '#') {\n            if (str.length === 4) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xfff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    ((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\n                    (iv & 0xf0) | ((iv & 0xf0) >> 4),\n                    (iv & 0xf) | ((iv & 0xf) << 4),\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n            else if (str.length === 7) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xffffff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    (iv & 0xff0000) >> 16,\n                    (iv & 0xff00) >> 8,\n                    iv & 0xff,\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n\n            return;\n        }\n        var op = str.indexOf('('), ep = str.indexOf(')');\n        if (op !== -1 && ep + 1 === str.length) {\n            var fname = str.substr(0, op);\n            var params = str.substr(op + 1, ep - (op + 1)).split(',');\n            var alpha = 1;  // To allow case fallthrough.\n            switch (fname) {\n                case 'rgba':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    alpha = parseCssFloat(params.pop()); // jshint ignore:line\n                // Fall through.\n                case 'rgb':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    setRgba(rgbaArr,\n                        parseCssInt(params[0]),\n                        parseCssInt(params[1]),\n                        parseCssInt(params[2]),\n                        alpha\n                    );\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsla':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    params[3] = parseCssFloat(params[3]);\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsl':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                default:\n                    return;\n            }\n        }\n\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return;\n    }\n\n    /**\n     * @param {Array.<number>} hsla\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} rgba\n     */\n    function hsla2rgba(hsla, rgba) {\n        var h = (((parseFloat(hsla[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\n        // NOTE(deanm): According to the CSS spec s/l should only be\n        // percentages, but we don't bother and let float or percentage.\n        var s = parseCssFloat(hsla[1]);\n        var l = parseCssFloat(hsla[2]);\n        var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n        var m1 = l * 2 - m2;\n\n        rgba = rgba || [];\n        setRgba(rgba,\n            clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255),\n            1\n        );\n\n        if (hsla.length === 4) {\n            rgba[3] = hsla[3];\n        }\n\n        return rgba;\n    }\n\n    /**\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} hsla\n     */\n    function rgba2hsla(rgba) {\n        if (!rgba) {\n            return;\n        }\n\n        // RGB from 0 to 255\n        var R = rgba[0] / 255;\n        var G = rgba[1] / 255;\n        var B = rgba[2] / 255;\n\n        var vMin = Math.min(R, G, B); // Min. value of RGB\n        var vMax = Math.max(R, G, B); // Max. value of RGB\n        var delta = vMax - vMin; // Delta RGB value\n\n        var L = (vMax + vMin) / 2;\n        var H;\n        var S;\n        // HSL results from 0 to 1\n        if (delta === 0) {\n            H = 0;\n            S = 0;\n        }\n        else {\n            if (L < 0.5) {\n                S = delta / (vMax + vMin);\n            }\n            else {\n                S = delta / (2 - vMax - vMin);\n            }\n\n            var deltaR = (((vMax - R) / 6) + (delta / 2)) / delta;\n            var deltaG = (((vMax - G) / 6) + (delta / 2)) / delta;\n            var deltaB = (((vMax - B) / 6) + (delta / 2)) / delta;\n\n            if (R === vMax) {\n                H = deltaB - deltaG;\n            }\n            else if (G === vMax) {\n                H = (1 / 3) + deltaR - deltaB;\n            }\n            else if (B === vMax) {\n                H = (2 / 3) + deltaG - deltaR;\n            }\n\n            if (H < 0) {\n                H += 1;\n            }\n\n            if (H > 1) {\n                H -= 1;\n            }\n        }\n\n        var hsla = [H * 360, S, L];\n\n        if (rgba[3] != null) {\n            hsla.push(rgba[3]);\n        }\n\n        return hsla;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number} level\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function lift(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            for (var i = 0; i < 3; i++) {\n                if (level < 0) {\n                    colorArr[i] = colorArr[i] * (1 - level) | 0;\n                }\n                else {\n                    colorArr[i] = ((255 - colorArr[i]) * level + colorArr[i]) | 0;\n                }\n            }\n            return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function toHex(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + (+colorArr[2])).toString(16).slice(1);\n        }\n    }\n\n    /**\n     * Map value to color. Faster than lerp methods because color is represented by rgba array.\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<Array.<number>>} colors List of rgba color array\n     * @param {Array.<number>} [out] Mapped gba color array\n     * @return {Array.<number>} will be null/undefined if input illegal.\n     */\n    function fastLerp(normalizedValue, colors, out) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        out = out || [];\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = colors[leftIndex];\n        var rightColor = colors[rightIndex];\n        var dv = value - leftIndex;\n        out[0] = clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv));\n        out[1] = clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv));\n        out[2] = clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv));\n        out[3] = clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv));\n\n        return out;\n    }\n\n    /**\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<string>} colors Color list.\n     * @param {boolean=} fullOutput Default false.\n     * @return {(string|Object)} Result color. If fullOutput,\n     *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n     * @memberOf module:zrender/util/color\n     */\n    function lerp(normalizedValue, colors, fullOutput) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = parse(colors[leftIndex]);\n        var rightColor = parse(colors[rightIndex]);\n        var dv = value - leftIndex;\n\n        var color = stringify(\n            [\n                clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv)),\n                clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv)),\n                clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv)),\n                clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv))\n            ],\n            'rgba'\n        );\n\n        return fullOutput\n            ? {\n                color: color,\n                leftIndex: leftIndex,\n                rightIndex: rightIndex,\n                value: value\n            }\n            : color;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} h 0 ~ 360, ignore when null.\n     * @param {number=} s 0 ~ 1, ignore when null.\n     * @param {number=} l 0 ~ 1, ignore when null.\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyHSL(color, h, s, l) {\n        color = parse(color);\n\n        if (color) {\n            color = rgba2hsla(color);\n            h != null && (color[0] = clampCssAngle(h));\n            s != null && (color[1] = parseCssFloat(s));\n            l != null && (color[2] = parseCssFloat(l));\n\n            return stringify(hsla2rgba(color), 'rgba');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} alpha 0 ~ 1\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyAlpha(color, alpha) {\n        color = parse(color);\n\n        if (color && alpha != null) {\n            color[3] = clampCssFloat(alpha);\n            return stringify(color, 'rgba');\n        }\n    }\n\n    /**\n     * @param {Array.<number>} arrColor like [12,33,44,0.4]\n     * @param {string} type 'rgba', 'hsva', ...\n     * @return {string} Result color. (If input illegal, return undefined).\n     */\n    function stringify(arrColor, type) {\n        if (!arrColor || !arrColor.length) {\n            return;\n        }\n        var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n        if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n            colorStr += ',' + arrColor[3];\n        }\n        return type + '(' + colorStr + ')';\n    }\n\n    module.exports = {\n        parse: parse,\n        lift: lift,\n        toHex: toHex,\n        fastLerp: fastLerp,\n        fastMapToColor: fastLerp, // Deprecated\n        lerp: lerp,\n        mapToColor: lerp, // Deprecated\n        modifyHSL: modifyHSL,\n        modifyAlpha: modifyAlpha,\n        stringify: stringify\n    };\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/tool/color.js\n// module id = 992\n// module chunks = 0 1 2","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../util/format');\n    var classUtil = require('../util/clazz');\n    var modelUtil = require('../util/model');\n    var ComponentModel = require('./Component');\n    var colorPaletteMixin = require('./mixin/colorPalette');\n    var env = require('zrender/lib/core/env');\n    var layout = require('../util/layout');\n\n    var set = classUtil.set;\n    var get = classUtil.get;\n    var encodeHTML = formatUtil.encodeHTML;\n    var addCommas = formatUtil.addCommas;\n\n    var SeriesModel = ComponentModel.extend({\n\n        type: 'series.__base__',\n\n        /**\n         * @readOnly\n         */\n        seriesIndex: 0,\n\n        // coodinateSystem will be injected in the echarts/CoordinateSystem\n        coordinateSystem: null,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * Data provided for legend\n         * @type {Function}\n         */\n        // PENDING\n        legendDataProvider: null,\n\n        /**\n         * Access path of color for visual\n         */\n        visualColorAccessPath: 'itemStyle.normal.color',\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n\n            /**\n             * @type {number}\n             * @readOnly\n             */\n            this.seriesIndex = this.componentIndex;\n\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            var data = this.getInitialData(option, ecModel);\n            if (__DEV__) {\n                zrUtil.assert(data, 'getInitialData returned invalid data.');\n            }\n            /**\n             * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n             * @private\n             */\n            set(this, 'dataBeforeProcessed', data);\n\n            // If we reverse the order (make data firstly, and then make\n            // dataBeforeProcessed by cloneShallow), cloneShallow will\n            // cause data.graph.data !== data when using\n            // module:echarts/data/Graph or module:echarts/data/Tree.\n            // See module:echarts/data/helper/linkList\n            this.restoreData();\n        },\n\n        /**\n         * Util for merge default and theme to option\n         * @param  {Object} option\n         * @param  {module:echarts/model/Global} ecModel\n         */\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            // Backward compat: using subType on theme.\n            // But if name duplicate between series subType\n            // (for example: parallel) add component mainType,\n            // add suffix 'Series'.\n            var themeSubType = this.subType;\n            if (ComponentModel.hasClass(themeSubType)) {\n                themeSubType += 'Series';\n            }\n            zrUtil.merge(\n                option,\n                ecModel.getTheme().get(this.subType)\n            );\n            zrUtil.merge(option, this.getDefaultOption());\n\n            // Default label emphasis `show`\n            modelUtil.defaultEmphasis(option.label, ['show']);\n\n            this.fillDataTextStyle(option.data);\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (newSeriesOption, ecModel) {\n            newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n            this.fillDataTextStyle(newSeriesOption.data);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n            }\n\n            var data = this.getInitialData(newSeriesOption, ecModel);\n            // TODO Merge data?\n            if (data) {\n                set(this, 'data', data);\n                set(this, 'dataBeforeProcessed', data.cloneShallow());\n            }\n        },\n\n        fillDataTextStyle: function (data) {\n            // Default data label emphasis `show`\n            // FIXME Tree structure data ?\n            // FIXME Performance ?\n            if (data) {\n                var props = ['show'];\n                for (var i = 0; i < data.length; i++) {\n                    if (data[i] && data[i].label) {\n                        modelUtil.defaultEmphasis(data[i].label, props);\n                    }\n                }\n            }\n        },\n\n        /**\n         * Init a data structure from data related option in series\n         * Must be overwritten\n         */\n        getInitialData: function () {},\n\n        /**\n         * @param {string} [dataType]\n         * @return {module:echarts/data/List}\n         */\n        getData: function (dataType) {\n            var data = get(this, 'data');\n            return dataType == null ? data : data.getLinkedData(dataType);\n        },\n\n        /**\n         * @param {module:echarts/data/List} data\n         */\n        setData: function (data) {\n            set(this, 'data', data);\n        },\n\n        /**\n         * Get data before processed\n         * @return {module:echarts/data/List}\n         */\n        getRawData: function () {\n            return get(this, 'dataBeforeProcessed');\n        },\n\n        /**\n         * Coord dimension to data dimension.\n         *\n         * By default the result is the same as dimensions of series data.\n         * But in some series data dimensions are different from coord dimensions (i.e.\n         * candlestick and boxplot). Override this method to handle those cases.\n         *\n         * Coord dimension to data dimension can be one-to-many\n         *\n         * @param {string} coordDim\n         * @return {Array.<string>} dimensions on the axis.\n         */\n        coordDimToDataDim: function (coordDim) {\n            return modelUtil.coordDimToDataDim(this.getData(), coordDim);\n        },\n\n        /**\n         * Convert data dimension to coord dimension.\n         *\n         * @param {string|number} dataDim\n         * @return {string}\n         */\n        dataDimToCoordDim: function (dataDim) {\n            return modelUtil.dataDimToCoordDim(this.getData(), dataDim);\n        },\n\n        /**\n         * Get base axis if has coordinate system and has axis.\n         * By default use coordSys.getBaseAxis();\n         * Can be overrided for some chart.\n         * @return {type} description\n         */\n        getBaseAxis: function () {\n            var coordSys = this.coordinateSystem;\n            return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n        },\n\n        // FIXME\n        /**\n         * Default tooltip formatter\n         *\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         */\n        formatTooltip: function (dataIndex, multipleSeries, dataType) {\n            function formatArrayValue(value) {\n                var vertially = zrUtil.reduce(value, function (vertially, val, idx) {\n                    var dimItem = data.getDimensionInfo(idx);\n                    return vertially |= dimItem && dimItem.tooltip !== false && dimItem.tooltipName != null;\n                }, 0);\n\n                var result = [];\n                var tooltipDims = modelUtil.otherDimToDataDim(data, 'tooltip');\n\n                tooltipDims.length\n                    ? zrUtil.each(tooltipDims, function (dimIdx) {\n                        setEachItem(data.get(dimIdx, dataIndex), dimIdx);\n                    })\n                    // By default, all dims is used on tooltip.\n                    : zrUtil.each(value, setEachItem);\n\n                function setEachItem(val, dimIdx) {\n                    var dimInfo = data.getDimensionInfo(dimIdx);\n                    // If `dimInfo.tooltip` is not set, show tooltip.\n                    if (!dimInfo || dimInfo.otherDims.tooltip === false) {\n                        return;\n                    }\n                    var dimType = dimInfo.type;\n                    var valStr = (vertially ? '- ' + (dimInfo.tooltipName || dimInfo.name) + ': ' : '')\n                        + (dimType === 'ordinal'\n                            ? val + ''\n                            : dimType === 'time'\n                            ? (multipleSeries ? '' : formatUtil.formatTime('yyyy/MM/dd hh:mm:ss', val))\n                            : addCommas(val)\n                        );\n                    valStr && result.push(encodeHTML(valStr));\n                }\n\n                return (vertially ? '<br/>' : '') + result.join(vertially ? '<br/>' : ', ');\n            }\n\n            var data = get(this, 'data');\n\n            var value = this.getRawValue(dataIndex);\n            var formattedValue = zrUtil.isArray(value)\n                ? formatArrayValue(value) : encodeHTML(addCommas(value));\n            var name = data.getName(dataIndex);\n\n            var color = data.getItemVisual(dataIndex, 'color');\n            if (zrUtil.isObject(color) && color.colorStops) {\n                color = (color.colorStops[0] || {}).color;\n            }\n            color = color || 'transparent';\n\n            var colorEl = formatUtil.getTooltipMarker(color);\n\n            var seriesName = this.name;\n            // FIXME\n            if (seriesName === '\\0-') {\n                // Not show '-'\n                seriesName = '';\n            }\n            seriesName = seriesName\n                ? encodeHTML(seriesName) + (!multipleSeries ? '<br/>' : ': ')\n                : '';\n            return !multipleSeries\n                ? seriesName + colorEl\n                    + (name\n                        ? encodeHTML(name) + ': ' + formattedValue\n                        : formattedValue\n                    )\n                : colorEl + seriesName + formattedValue;\n        },\n\n        /**\n         * @return {boolean}\n         */\n        isAnimationEnabled: function () {\n            if (env.node) {\n                return false;\n            }\n\n            var animationEnabled = this.getShallow('animation');\n            if (animationEnabled) {\n                if (this.getData().count() > this.getShallow('animationThreshold')) {\n                    animationEnabled = false;\n                }\n            }\n            return animationEnabled;\n        },\n\n        restoreData: function () {\n            set(this, 'data', get(this, 'dataBeforeProcessed').cloneShallow());\n        },\n\n        getColorFromPalette: function (name, scope) {\n            var ecModel = this.ecModel;\n            // PENDING\n            var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n            if (!color) {\n                color = ecModel.getColorFromPalette(name, scope);\n            }\n            return color;\n        },\n\n        /**\n         * Get data indices for show tooltip content. See tooltip.\n         * @abstract\n         * @param {Array.<string>|string} dim\n         * @param {Array.<number>} value\n         * @param {module:echarts/coord/single/SingleAxis} baseAxis\n         * @return {Object} {dataIndices, nestestValue}.\n         */\n        getAxisTooltipData: null,\n\n        /**\n         * See tooltip.\n         * @abstract\n         * @param {number} dataIndex\n         * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n         */\n        getTooltipPosition: null\n    });\n\n    zrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\n    zrUtil.mixin(SeriesModel, colorPaletteMixin);\n\n    module.exports = SeriesModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/Series.js\n// module id = 993\n// module chunks = 0 1 2","/**\n * Complete dimensions by data (guess dimension).\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n    var each = zrUtil.each;\n    var isString = zrUtil.isString;\n    var defaults = zrUtil.defaults;\n    var normalizeToArray = modelUtil.normalizeToArray;\n\n    var OTHER_DIMS = {tooltip: 1, label: 1, itemName: 1};\n\n    /**\n     * Complete the dimensions array, by user defined `dimension` and `encode`,\n     * and guessing from the data structure.\n     * If no 'value' dimension specified, the first no-named dimension will be\n     * named as 'value'.\n     *\n     * @param {Array.<string>} sysDims Necessary dimensions, like ['x', 'y'], which\n     *      provides not only dim template, but also default order.\n     *      `name` of each item provides default coord name.\n     *      [{dimsDef: []}, ...] can be specified to give names.\n     * @param {Array} data Data list. [[1, 2, 3], [2, 3, 4]].\n     * @param {Object} [opt]\n     * @param {Array.<Object|string>} [opt.dimsDef] option.series.dimensions User defined dimensions\n     *      For example: ['asdf', {name, type}, ...].\n     * @param {Object} [opt.encodeDef] option.series.encode {x: 2, y: [3, 1], tooltip: [1, 2], label: 3}\n     * @param {string} [opt.extraPrefix] Prefix of name when filling the left dimensions.\n     * @param {string} [opt.extraFromZero] If specified, extra dim names will be:\n     *                      extraPrefix + 0, extraPrefix + extraBaseIndex + 1 ...\n     *                      If not specified, extra dim names will be:\n     *                      extraPrefix, extraPrefix + 0, extraPrefix + 1 ...\n     * @param {number} [opt.dimCount] If not specified, guess by the first data item.\n     * @return {Array.<Object>} [{\n     *      name: string mandatory,\n     *      coordDim: string mandatory,\n     *      coordDimIndex: number mandatory,\n     *      type: string optional,\n     *      tooltipName: string optional,\n     *      otherDims: {\n     *          tooltip: number optional,\n     *          label: number optional\n     *      },\n     *      isExtraCoord: boolean true or undefined.\n     *      other props ...\n     * }]\n     */\n    function completeDimensions(sysDims, data, opt) {\n        data = data || [];\n        opt = opt || {};\n        sysDims = (sysDims || []).slice();\n        var dimsDef = (opt.dimsDef || []).slice();\n        var encodeDef = zrUtil.createHashMap(opt.encodeDef);\n        var dataDimNameMap = zrUtil.createHashMap();\n        var coordDimNameMap = zrUtil.createHashMap();\n        // var valueCandidate;\n        var result = [];\n\n        var dimCount = opt.dimCount;\n        if (dimCount == null) {\n            var value0 = retrieveValue(data[0]);\n            dimCount = Math.max(\n                zrUtil.isArray(value0) && value0.length || 1,\n                sysDims.length,\n                dimsDef.length\n            );\n            each(sysDims, function (sysDimItem) {\n                var sysDimItemDimsDef = sysDimItem.dimsDef;\n                sysDimItemDimsDef && (dimCount = Math.max(dimCount, sysDimItemDimsDef.length));\n            });\n        }\n\n        // Apply user defined dims (`name` and `type`) and init result.\n        for (var i = 0; i < dimCount; i++) {\n            var dimDefItem = isString(dimsDef[i]) ? {name: dimsDef[i]} : (dimsDef[i] || {});\n            var userDimName = dimDefItem.name;\n            var resultItem = result[i] = {otherDims: {}};\n            // Name will be applied later for avoiding duplication.\n            if (userDimName != null && dataDimNameMap.get(userDimName) == null) {\n                // Only if `series.dimensions` is defined in option, tooltipName\n                // will be set, and dimension will be diplayed vertically in\n                // tooltip by default.\n                resultItem.name = resultItem.tooltipName = userDimName;\n                dataDimNameMap.set(userDimName, i);\n            }\n            dimDefItem.type != null && (resultItem.type = dimDefItem.type);\n        }\n\n        // Set `coordDim` and `coordDimIndex` by `encodeDef` and normalize `encodeDef`.\n        encodeDef.each(function (dataDims, coordDim) {\n            dataDims = encodeDef.set(coordDim, normalizeToArray(dataDims).slice());\n            each(dataDims, function (resultDimIdx, coordDimIndex) {\n                // The input resultDimIdx can be dim name or index.\n                isString(resultDimIdx) && (resultDimIdx = dataDimNameMap.get(resultDimIdx));\n                if (resultDimIdx != null && resultDimIdx < dimCount) {\n                    dataDims[coordDimIndex] = resultDimIdx;\n                    applyDim(result[resultDimIdx], coordDim, coordDimIndex);\n                }\n            });\n        });\n\n        // Apply templetes and default order from `sysDims`.\n        var availDimIdx = 0;\n        each(sysDims, function (sysDimItem, sysDimIndex) {\n            var coordDim;\n            var sysDimItem;\n            var sysDimItemDimsDef;\n            var sysDimItemOtherDims;\n            if (isString(sysDimItem)) {\n                coordDim = sysDimItem;\n                sysDimItem = {};\n            }\n            else {\n                coordDim = sysDimItem.name;\n                sysDimItem = zrUtil.clone(sysDimItem);\n                // `coordDimIndex` should not be set directly.\n                sysDimItemDimsDef = sysDimItem.dimsDef;\n                sysDimItemOtherDims = sysDimItem.otherDims;\n                sysDimItem.name = sysDimItem.coordDim = sysDimItem.coordDimIndex\n                    = sysDimItem.dimsDef = sysDimItem.otherDims = null;\n            }\n\n            var dataDims = normalizeToArray(encodeDef.get(coordDim));\n            // dimensions provides default dim sequences.\n            if (!dataDims.length) {\n                for (var i = 0; i < (sysDimItemDimsDef && sysDimItemDimsDef.length || 1); i++) {\n                    while (availDimIdx < result.length && result[availDimIdx].coordDim != null) {\n                        availDimIdx++;\n                    }\n                    availDimIdx < result.length && dataDims.push(availDimIdx++);\n                }\n            }\n            // Apply templates.\n            each(dataDims, function (resultDimIdx, coordDimIndex) {\n                var resultItem = result[resultDimIdx];\n                applyDim(defaults(resultItem, sysDimItem), coordDim, coordDimIndex);\n                if (resultItem.name == null && sysDimItemDimsDef) {\n                    resultItem.name = resultItem.tooltipName = sysDimItemDimsDef[coordDimIndex];\n                }\n                sysDimItemOtherDims && defaults(resultItem.otherDims, sysDimItemOtherDims);\n            });\n        });\n\n        // Make sure the first extra dim is 'value'.\n        var extra = opt.extraPrefix || 'value';\n\n        // Set dim `name` and other `coordDim` and other props.\n        for (var resultDimIdx = 0; resultDimIdx < dimCount; resultDimIdx++) {\n            var resultItem = result[resultDimIdx] = result[resultDimIdx] || {};\n            var coordDim = resultItem.coordDim;\n\n            coordDim == null && (\n                resultItem.coordDim = genName(extra, coordDimNameMap, opt.extraFromZero),\n                resultItem.coordDimIndex = 0,\n                resultItem.isExtraCoord = true\n            );\n\n            resultItem.name == null && (resultItem.name = genName(\n                resultItem.coordDim,\n                dataDimNameMap\n            ));\n\n            resultItem.type == null && guessOrdinal(data, resultDimIdx)\n                && (resultItem.type = 'ordinal');\n        }\n\n        return result;\n\n        function applyDim(resultItem, coordDim, coordDimIndex) {\n            if (OTHER_DIMS[coordDim]) {\n                resultItem.otherDims[coordDim] = coordDimIndex;\n            }\n            else {\n                resultItem.coordDim = coordDim;\n                resultItem.coordDimIndex = coordDimIndex;\n                coordDimNameMap.set(coordDim, true);\n            }\n        }\n\n        function genName(name, map, fromZero) {\n            if (fromZero || map.get(name) != null) {\n                var i = 0;\n                while (map.get(name + i) != null) {\n                    i++;\n                }\n                name += i;\n            }\n            map.set(name, true);\n            return name;\n        }\n    }\n\n    // The rule should not be complex, otherwise user might not\n    // be able to known where the data is wrong.\n    var guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {\n        for (var i = 0, len = data.length; i < len; i++) {\n            var value = retrieveValue(data[i]);\n\n            if (!zrUtil.isArray(value)) {\n                return false;\n            }\n\n            var value = value[dimIndex];\n            // Consider usage convenience, '1', '2' will be treated as \"number\".\n            // `isFinit('')` get `true`.\n            if (value != null && isFinite(value) && value !== '') {\n                return false;\n            }\n            else if (isString(value) && value !== '-') {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    function retrieveValue(o) {\n        return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value: o;\n    }\n\n    module.exports = completeDimensions;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/data/helper/completeDimensions.js\n// module id = 994\n// module chunks = 0 1 2","'use strict';\n// Symbol factory\n\n\n    var graphic = require('./graphic');\n    var BoundingRect = require('zrender/lib/core/BoundingRect');\n\n    /**\n     * Triangle shape\n     * @inner\n     */\n    var Triangle = graphic.extendShape({\n        type: 'triangle',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy + height);\n            path.lineTo(cx - width, cy + height);\n            path.closePath();\n        }\n    });\n    /**\n     * Diamond shape\n     * @inner\n     */\n    var Diamond = graphic.extendShape({\n        type: 'diamond',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy);\n            path.lineTo(cx, cy + height);\n            path.lineTo(cx - width, cy);\n            path.closePath();\n        }\n    });\n\n    /**\n     * Pin shape\n     * @inner\n     */\n    var Pin = graphic.extendShape({\n        type: 'pin',\n        shape: {\n            // x, y on the cusp\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (path, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var w = shape.width / 5 * 3;\n            // Height must be larger than width\n            var h = Math.max(w, shape.height);\n            var r = w / 2;\n\n            // Dist on y with tangent point and circle center\n            var dy = r * r / (h - r);\n            var cy = y - h + r + dy;\n            var angle = Math.asin(dy / r);\n            // Dist on x with tangent point and circle center\n            var dx = Math.cos(angle) * r;\n\n            var tanX = Math.sin(angle);\n            var tanY = Math.cos(angle);\n\n            path.arc(\n                x, cy, r,\n                Math.PI - angle,\n                Math.PI * 2 + angle\n            );\n\n            var cpLen = r * 0.6;\n            var cpLen2 = r * 0.7;\n            path.bezierCurveTo(\n                x + dx - tanX * cpLen, cy + dy + tanY * cpLen,\n                x, y - cpLen2,\n                x, y\n            );\n            path.bezierCurveTo(\n                x, y - cpLen2,\n                x - dx + tanX * cpLen, cy + dy + tanY * cpLen,\n                x - dx, cy + dy\n            );\n            path.closePath();\n        }\n    });\n\n    /**\n     * Arrow shape\n     * @inner\n     */\n    var Arrow = graphic.extendShape({\n\n        type: 'arrow',\n\n        shape: {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var height = shape.height;\n            var width = shape.width;\n            var x = shape.x;\n            var y = shape.y;\n            var dx = width / 3 * 2;\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + dx, y + height);\n            ctx.lineTo(x, y + height / 4 * 3);\n            ctx.lineTo(x - dx, y + height);\n            ctx.lineTo(x, y);\n            ctx.closePath();\n        }\n    });\n\n    /**\n     * Map of path contructors\n     * @type {Object.<string, module:zrender/graphic/Path>}\n     */\n    var symbolCtors = {\n        line: graphic.Line,\n\n        rect: graphic.Rect,\n\n        roundRect: graphic.Rect,\n\n        square: graphic.Rect,\n\n        circle: graphic.Circle,\n\n        diamond: Diamond,\n\n        pin: Pin,\n\n        arrow: Arrow,\n\n        triangle: Triangle\n    };\n\n    var symbolShapeMakers = {\n\n        line: function (x, y, w, h, shape) {\n            // FIXME\n            shape.x1 = x;\n            shape.y1 = y + h / 2;\n            shape.x2 = x + w;\n            shape.y2 = y + h / 2;\n        },\n\n        rect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        roundRect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n            shape.r = Math.min(w, h) / 4;\n        },\n\n        square: function (x, y, w, h, shape) {\n            var size = Math.min(w, h);\n            shape.x = x;\n            shape.y = y;\n            shape.width = size;\n            shape.height = size;\n        },\n\n        circle: function (x, y, w, h, shape) {\n            // Put circle in the center of square\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.r = Math.min(w, h) / 2;\n        },\n\n        diamond: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        pin: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        arrow: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        triangle: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        }\n    };\n\n    var symbolBuildProxies = {};\n    for (var name in symbolCtors) {\n        if (symbolCtors.hasOwnProperty(name)) {\n            symbolBuildProxies[name] = new symbolCtors[name]();\n        }\n    }\n\n    var Symbol = graphic.extendShape({\n\n        type: 'symbol',\n\n        shape: {\n            symbolType: '',\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        beforeBrush: function () {\n            var style = this.style;\n            var shape = this.shape;\n            // FIXME\n            if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n                style.textPosition = ['50%', '40%'];\n                style.textAlign = 'center';\n                style.textVerticalAlign = 'middle';\n            }\n        },\n\n        buildPath: function (ctx, shape, inBundle) {\n            var symbolType = shape.symbolType;\n            var proxySymbol = symbolBuildProxies[symbolType];\n            if (shape.symbolType !== 'none') {\n                if (!proxySymbol) {\n                    // Default rect\n                    symbolType = 'rect';\n                    proxySymbol = symbolBuildProxies[symbolType];\n                }\n                symbolShapeMakers[symbolType](\n                    shape.x, shape.y, shape.width, shape.height, proxySymbol.shape\n                );\n                proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n            }\n        }\n    });\n\n    // Provide setColor helper method to avoid determine if set the fill or stroke outside\n    var symbolPathSetColor = function (color) {\n        if (this.type !== 'image') {\n            var symbolStyle = this.style;\n            var symbolShape = this.shape;\n            if (symbolShape && symbolShape.symbolType === 'line') {\n                symbolStyle.stroke = color;\n            }\n            else if (this.__isEmptyBrush) {\n                symbolStyle.stroke = color;\n                symbolStyle.fill = '#fff';\n            }\n            else {\n                // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n                symbolStyle.fill && (symbolStyle.fill = color);\n                symbolStyle.stroke && (symbolStyle.stroke = color);\n            }\n            this.dirty(false);\n        }\n    };\n\n    var symbolUtil = {\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @param {string} symbolType\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: function (symbolType, x, y, w, h, color) {\n            // TODO Support image object, DynamicImage.\n\n            var isEmpty = symbolType.indexOf('empty') === 0;\n            if (isEmpty) {\n                symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n            }\n            var symbolPath;\n\n            if (symbolType.indexOf('image://') === 0) {\n                symbolPath = new graphic.Image({\n                    style: {\n                        image: symbolType.slice(8),\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n            else if (symbolType.indexOf('path://') === 0) {\n                symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h));\n            }\n            else {\n                symbolPath = new Symbol({\n                    shape: {\n                        symbolType: symbolType,\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n\n            symbolPath.__isEmptyBrush = isEmpty;\n\n            symbolPath.setColor = symbolPathSetColor;\n\n            symbolPath.setColor(color);\n\n            return symbolPath;\n        }\n    };\n\n    module.exports = symbolUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/symbol.js\n// module id = 995\n// module chunks = 0 1 2","\n\n    module.exports = {\n        toolbox: {\n            brush: {\n                title: {\n                    rect: '矩形选择',\n                    polygon: '圈选',\n                    lineX: '横向选择',\n                    lineY: '纵向选择',\n                    keep: '保持选择',\n                    clear: '清除选择'\n                }\n            },\n            dataView: {\n                title: '数据视图',\n                lang: ['数据视图', '关闭', '刷新']\n            },\n            dataZoom: {\n                title: {\n                    zoom: '区域缩放',\n                    back: '区域缩放还原'\n                }\n            },\n            magicType: {\n                title: {\n                    line: '切换为折线图',\n                    bar: '切换为柱状图',\n                    stack: '切换为堆叠',\n                    tiled: '切换为平铺'\n                }\n            },\n            restore: {\n                title: '还原'\n            },\n            saveAsImage: {\n                title: '保存为图片',\n                lang: ['右键另存为图片']\n            }\n        }\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/lang.js\n// module id = 996\n// module chunks = 0 1 2","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var coordinateSystemCreators = {};\n\n    function CoordinateSystemManager() {\n\n        this._coordinateSystems = [];\n    }\n\n    CoordinateSystemManager.prototype = {\n\n        constructor: CoordinateSystemManager,\n\n        create: function (ecModel, api) {\n            var coordinateSystems = [];\n            zrUtil.each(coordinateSystemCreators, function (creater, type) {\n                var list = creater.create(ecModel, api);\n                coordinateSystems = coordinateSystems.concat(list || []);\n            });\n\n            this._coordinateSystems = coordinateSystems;\n        },\n\n        update: function (ecModel, api) {\n            zrUtil.each(this._coordinateSystems, function (coordSys) {\n                // FIXME MUST have\n                coordSys.update && coordSys.update(ecModel, api);\n            });\n        },\n\n        getCoordinateSystems: function () {\n            return this._coordinateSystems.slice();\n        }\n    };\n\n    CoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n        coordinateSystemCreators[type] = coordinateSystemCreator;\n    };\n\n    CoordinateSystemManager.get = function (type) {\n        return coordinateSystemCreators[type];\n    };\n\n    module.exports = CoordinateSystemManager;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/CoordinateSystem.js\n// module id = 997\n// module chunks = 0 1 2","'use strict';\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n\n // TODO getTotalLength, getPointAtLength\n\n\n    var curve = require('./curve');\n    var vec2 = require('./vector');\n    var bbox = require('./bbox');\n    var BoundingRect = require('./BoundingRect');\n    var dpr = require('../config').devicePixelRatio;\n\n    var CMD = {\n        M: 1,\n        L: 2,\n        C: 3,\n        Q: 4,\n        A: 5,\n        Z: 6,\n        // Rect\n        R: 7\n    };\n\n    // var CMD_MEM_SIZE = {\n    //     M: 3,\n    //     L: 3,\n    //     C: 7,\n    //     Q: 5,\n    //     A: 9,\n    //     R: 5,\n    //     Z: 1\n    // };\n\n    var min = [];\n    var max = [];\n    var min2 = [];\n    var max2 = [];\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathCos = Math.cos;\n    var mathSin = Math.sin;\n    var mathSqrt = Math.sqrt;\n    var mathAbs = Math.abs;\n\n    var hasTypedArray = typeof Float32Array != 'undefined';\n\n    /**\n     * @alias module:zrender/core/PathProxy\n     * @constructor\n     */\n    var PathProxy = function (notSaveData) {\n\n        this._saveData = !(notSaveData || false);\n\n        if (this._saveData) {\n            /**\n             * Path data. Stored as flat array\n             * @type {Array.<Object>}\n             */\n            this.data = [];\n        }\n\n        this._ctx = null;\n    };\n\n    /**\n     * 快速计算Path包围盒（并不是最小包围盒）\n     * @return {Object}\n     */\n    PathProxy.prototype = {\n\n        constructor: PathProxy,\n\n        _xi: 0,\n        _yi: 0,\n\n        _x0: 0,\n        _y0: 0,\n        // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n        _ux: 0,\n        _uy: 0,\n\n        _len: 0,\n\n        _lineDash: null,\n\n        _dashOffset: 0,\n\n        _dashIdx: 0,\n\n        _dashSum: 0,\n\n        /**\n         * @readOnly\n         */\n        setScale: function (sx, sy) {\n            this._ux = mathAbs(1 / dpr / sx) || 0;\n            this._uy = mathAbs(1 / dpr / sy) || 0;\n        },\n\n        getContext: function () {\n            return this._ctx;\n        },\n\n        /**\n         * @param  {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        beginPath: function (ctx) {\n\n            this._ctx = ctx;\n\n            ctx && ctx.beginPath();\n\n            ctx && (this.dpr = ctx.dpr);\n\n            // Reset\n            if (this._saveData) {\n                this._len = 0;\n            }\n\n            if (this._lineDash) {\n                this._lineDash = null;\n\n                this._dashOffset = 0;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        moveTo: function (x, y) {\n            this.addData(CMD.M, x, y);\n            this._ctx && this._ctx.moveTo(x, y);\n\n            // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n            // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n            // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n            // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n            this._x0 = x;\n            this._y0 = y;\n\n            this._xi = x;\n            this._yi = y;\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        lineTo: function (x, y) {\n            var exceedUnit = mathAbs(x - this._xi) > this._ux\n                || mathAbs(y - this._yi) > this._uy\n                // Force draw the first segment\n                || this._len < 5;\n\n            this.addData(CMD.L, x, y);\n\n            if (this._ctx && exceedUnit) {\n                this._needsDash() ? this._dashedLineTo(x, y)\n                    : this._ctx.lineTo(x, y);\n            }\n            if (exceedUnit) {\n                this._xi = x;\n                this._yi = y;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @param  {number} x3\n         * @param  {number} y3\n         * @return {module:zrender/core/PathProxy}\n         */\n        bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n            this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3)\n                    : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n            }\n            this._xi = x3;\n            this._yi = y3;\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @return {module:zrender/core/PathProxy}\n         */\n        quadraticCurveTo: function (x1, y1, x2, y2) {\n            this.addData(CMD.Q, x1, y1, x2, y2);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2)\n                    : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n            }\n            this._xi = x2;\n            this._yi = y2;\n            return this;\n        },\n\n        /**\n         * @param  {number} cx\n         * @param  {number} cy\n         * @param  {number} r\n         * @param  {number} startAngle\n         * @param  {number} endAngle\n         * @param  {boolean} anticlockwise\n         * @return {module:zrender/core/PathProxy}\n         */\n        arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n            this.addData(\n                CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1\n            );\n            this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n\n            this._xi = mathCos(endAngle) * r + cx;\n            this._yi = mathSin(endAngle) * r + cx;\n            return this;\n        },\n\n        // TODO\n        arcTo: function (x1, y1, x2, y2, radius) {\n            if (this._ctx) {\n                this._ctx.arcTo(x1, y1, x2, y2, radius);\n            }\n            return this;\n        },\n\n        // TODO\n        rect: function (x, y, w, h) {\n            this._ctx && this._ctx.rect(x, y, w, h);\n            this.addData(CMD.R, x, y, w, h);\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/PathProxy}\n         */\n        closePath: function () {\n            this.addData(CMD.Z);\n\n            var ctx = this._ctx;\n            var x0 = this._x0;\n            var y0 = this._y0;\n            if (ctx) {\n                this._needsDash() && this._dashedLineTo(x0, y0);\n                ctx.closePath();\n            }\n\n            this._xi = x0;\n            this._yi = y0;\n            return this;\n        },\n\n        /**\n         * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n         * stroke 同样\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        fill: function (ctx) {\n            ctx && ctx.fill();\n            this.toStatic();\n        },\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        stroke: function (ctx) {\n            ctx && ctx.stroke();\n            this.toStatic();\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDash: function (lineDash) {\n            if (lineDash instanceof Array) {\n                this._lineDash = lineDash;\n\n                this._dashIdx = 0;\n\n                var lineDashSum = 0;\n                for (var i = 0; i < lineDash.length; i++) {\n                    lineDashSum += lineDash[i];\n                }\n                this._dashSum = lineDashSum;\n            }\n            return this;\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDashOffset: function (offset) {\n            this._dashOffset = offset;\n            return this;\n        },\n\n        /**\n         *\n         * @return {boolean}\n         */\n        len: function () {\n            return this._len;\n        },\n\n        /**\n         * 直接设置 Path 数据\n         */\n        setData: function (data) {\n\n            var len = data.length;\n\n            if (! (this.data && this.data.length == len) && hasTypedArray) {\n                this.data = new Float32Array(len);\n            }\n\n            for (var i = 0; i < len; i++) {\n                this.data[i] = data[i];\n            }\n\n            this._len = len;\n        },\n\n        /**\n         * 添加子路径\n         * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n         */\n        appendPath: function (path) {\n            if (!(path instanceof Array)) {\n                path = [path];\n            }\n            var len = path.length;\n            var appendSize = 0;\n            var offset = this._len;\n            for (var i = 0; i < len; i++) {\n                appendSize += path[i].len();\n            }\n            if (hasTypedArray && (this.data instanceof Float32Array)) {\n                this.data = new Float32Array(offset + appendSize);\n            }\n            for (var i = 0; i < len; i++) {\n                var appendPathData = path[i].data;\n                for (var k = 0; k < appendPathData.length; k++) {\n                    this.data[offset++] = appendPathData[k];\n                }\n            }\n            this._len = offset;\n        },\n\n        /**\n         * 填充 Path 数据。\n         * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n         */\n        addData: function (cmd) {\n            if (!this._saveData) {\n                return;\n            }\n\n            var data = this.data;\n            if (this._len + arguments.length > data.length) {\n                // 因为之前的数组已经转换成静态的 Float32Array\n                // 所以不够用时需要扩展一个新的动态数组\n                this._expandData();\n                data = this.data;\n            }\n            for (var i = 0; i < arguments.length; i++) {\n                data[this._len++] = arguments[i];\n            }\n\n            this._prevCmd = cmd;\n        },\n\n        _expandData: function () {\n            // Only if data is Float32Array\n            if (!(this.data instanceof Array)) {\n                var newData = [];\n                for (var i = 0; i < this._len; i++) {\n                    newData[i] = this.data[i];\n                }\n                this.data = newData;\n            }\n        },\n\n        /**\n         * If needs js implemented dashed line\n         * @return {boolean}\n         * @private\n         */\n        _needsDash: function () {\n            return this._lineDash;\n        },\n\n        _dashedLineTo: function (x1, y1) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var dx = x1 - x0;\n            var dy = y1 - y0;\n            var dist = mathSqrt(dx * dx + dy * dy);\n            var x = x0;\n            var y = y0;\n            var dash;\n            var nDash = lineDash.length;\n            var idx;\n            dx /= dist;\n            dy /= dist;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            x -= offset * dx;\n            y -= offset * dy;\n\n            while ((dx > 0 && x <= x1) || (dx < 0 && x >= x1)\n            || (dx == 0 && ((dy > 0 && y <= y1) || (dy < 0 && y >= y1)))) {\n                idx = this._dashIdx;\n                dash = lineDash[idx];\n                x += dx * dash;\n                y += dy * dash;\n                this._dashIdx = (idx + 1) % nDash;\n                // Skip positive offset\n                if ((dx > 0 && x < x0) || (dx < 0 && x > x0) || (dy > 0 && y < y0) || (dy < 0 && y > y0)) {\n                    continue;\n                }\n                ctx[idx % 2 ? 'moveTo' : 'lineTo'](\n                    dx >= 0 ? mathMin(x, x1) : mathMax(x, x1),\n                    dy >= 0 ? mathMin(y, y1) : mathMax(y, y1)\n                );\n            }\n            // Offset for next lineTo\n            dx = x - x1;\n            dy = y - y1;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        // Not accurate dashed line to\n        _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var t;\n            var dx;\n            var dy;\n            var cubicAt = curve.cubicAt;\n            var bezierLen = 0;\n            var idx = this._dashIdx;\n            var nDash = lineDash.length;\n\n            var x;\n            var y;\n\n            var tmpLen = 0;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            // Bezier approx length\n            for (t = 0; t < 1; t += 0.1) {\n                dx = cubicAt(x0, x1, x2, x3, t + 0.1)\n                    - cubicAt(x0, x1, x2, x3, t);\n                dy = cubicAt(y0, y1, y2, y3, t + 0.1)\n                    - cubicAt(y0, y1, y2, y3, t);\n                bezierLen += mathSqrt(dx * dx + dy * dy);\n            }\n\n            // Find idx after add offset\n            for (; idx < nDash; idx++) {\n                tmpLen += lineDash[idx];\n                if (tmpLen > offset) {\n                    break;\n                }\n            }\n            t = (tmpLen - offset) / bezierLen;\n\n            while (t <= 1) {\n\n                x = cubicAt(x0, x1, x2, x3, t);\n                y = cubicAt(y0, y1, y2, y3, t);\n\n                // Use line to approximate dashed bezier\n                // Bad result if dash is long\n                idx % 2 ? ctx.moveTo(x, y)\n                    : ctx.lineTo(x, y);\n\n                t += lineDash[idx] / bezierLen;\n\n                idx = (idx + 1) % nDash;\n            }\n\n            // Finish the last segment and calculate the new offset\n            (idx % 2 !== 0) && ctx.lineTo(x3, y3);\n            dx = x3 - x;\n            dy = y3 - y;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        _dashedQuadraticTo: function (x1, y1, x2, y2) {\n            // Convert quadratic to cubic using degree elevation\n            var x3 = x2;\n            var y3 = y2;\n            x2 = (x2 + 2 * x1) / 3;\n            y2 = (y2 + 2 * y1) / 3;\n            x1 = (this._xi + 2 * x1) / 3;\n            y1 = (this._yi + 2 * y1) / 3;\n\n            this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n        },\n\n        /**\n         * 转成静态的 Float32Array 减少堆内存占用\n         * Convert dynamic array to static Float32Array\n         */\n        toStatic: function () {\n            var data = this.data;\n            if (data instanceof Array) {\n                data.length = this._len;\n                if (hasTypedArray) {\n                    this.data = new Float32Array(data);\n                }\n            }\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function () {\n            min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n            max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n\n            var data = this.data;\n            var xi = 0;\n            var yi = 0;\n            var x0 = 0;\n            var y0 = 0;\n\n            for (var i = 0; i < data.length;) {\n                var cmd = data[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = data[i];\n                    yi = data[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n\n                switch (cmd) {\n                    case CMD.M:\n                        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                        // 在 closePath 的时候使用\n                        x0 = data[i++];\n                        y0 = data[i++];\n                        xi = x0;\n                        yi = y0;\n                        min2[0] = x0;\n                        min2[1] = y0;\n                        max2[0] = x0;\n                        max2[1] = y0;\n                        break;\n                    case CMD.L:\n                        bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.C:\n                        bbox.fromCubic(\n                            xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.Q:\n                        bbox.fromQuadratic(\n                            xi, yi, data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.A:\n                        // TODO Arc 判断的开销比较大\n                        var cx = data[i++];\n                        var cy = data[i++];\n                        var rx = data[i++];\n                        var ry = data[i++];\n                        var startAngle = data[i++];\n                        var endAngle = data[i++] + startAngle;\n                        // TODO Arc 旋转\n                        var psi = data[i++];\n                        var anticlockwise = 1 - data[i++];\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(startAngle) * rx + cx;\n                            y0 = mathSin(startAngle) * ry + cy;\n                        }\n\n                        bbox.fromArc(\n                            cx, cy, rx, ry, startAngle, endAngle,\n                            anticlockwise, min2, max2\n                        );\n\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = data[i++];\n                        y0 = yi = data[i++];\n                        var width = data[i++];\n                        var height = data[i++];\n                        // Use fromLine\n                        bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n                        break;\n                    case CMD.Z:\n                        xi = x0;\n                        yi = y0;\n                        break;\n                }\n\n                // Union\n                vec2.min(min, min, min2);\n                vec2.max(max, max, max2);\n            }\n\n            // No data\n            if (i === 0) {\n                min[0] = min[1] = max[0] = max[1] = 0;\n            }\n\n            return new BoundingRect(\n                min[0], min[1], max[0] - min[0], max[1] - min[1]\n            );\n        },\n\n        /**\n         * Rebuild path from current data\n         * Rebuild path will not consider javascript implemented line dash.\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        rebuildPath: function (ctx) {\n            var d = this.data;\n            var x0, y0;\n            var xi, yi;\n            var x, y;\n            var ux = this._ux;\n            var uy = this._uy;\n            var len = this._len;\n            for (var i = 0; i < len;) {\n                var cmd = d[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = d[i];\n                    yi = d[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n                switch (cmd) {\n                    case CMD.M:\n                        x0 = xi = d[i++];\n                        y0 = yi = d[i++];\n                        ctx.moveTo(xi, yi);\n                        break;\n                    case CMD.L:\n                        x = d[i++];\n                        y = d[i++];\n                        // Not draw too small seg between\n                        if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n                            ctx.lineTo(x, y);\n                            xi = x;\n                            yi = y;\n                        }\n                        break;\n                    case CMD.C:\n                        ctx.bezierCurveTo(\n                            d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]\n                        );\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.Q:\n                        ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.A:\n                        var cx = d[i++];\n                        var cy = d[i++];\n                        var rx = d[i++];\n                        var ry = d[i++];\n                        var theta = d[i++];\n                        var dTheta = d[i++];\n                        var psi = d[i++];\n                        var fs = d[i++];\n                        var r = (rx > ry) ? rx : ry;\n                        var scaleX = (rx > ry) ? 1 : rx / ry;\n                        var scaleY = (rx > ry) ? ry / rx : 1;\n                        var isEllipse = Math.abs(rx - ry) > 1e-3;\n                        var endAngle = theta + dTheta;\n                        if (isEllipse) {\n                            ctx.translate(cx, cy);\n                            ctx.rotate(psi);\n                            ctx.scale(scaleX, scaleY);\n                            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n                            ctx.scale(1 / scaleX, 1 / scaleY);\n                            ctx.rotate(-psi);\n                            ctx.translate(-cx, -cy);\n                        }\n                        else {\n                            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n                        }\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(theta) * rx + cx;\n                            y0 = mathSin(theta) * ry + cy;\n                        }\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = d[i];\n                        y0 = yi = d[i + 1];\n                        ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n                        break;\n                    case CMD.Z:\n                        ctx.closePath();\n                        xi = x0;\n                        yi = y0;\n                }\n            }\n        }\n    };\n\n    PathProxy.CMD = CMD;\n\n    module.exports = PathProxy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/PathProxy.js\n// module id = 998\n// module chunks = 0 1 2","\n    var dpr = 1;\n    // If in browser environment\n    if (typeof window !== 'undefined') {\n        dpr = Math.max(window.devicePixelRatio || 1, 1);\n    }\n    /**\n     * config默认配置项\n     * @exports zrender/config\n     * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n     */\n    var config = {\n        /**\n         * debug日志选项：catchBrushException为true下有效\n         * 0 : 不生成debug数据，发布用\n         * 1 : 异常抛出，调试用\n         * 2 : 控制台输出，调试用\n         */\n        debugMode: 0,\n\n        // retina 屏幕优化\n        devicePixelRatio: dpr\n    };\n    module.exports = config;\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/config.js\n// module id = 999\n// module chunks = 0 1 2"],"sourceRoot":""}